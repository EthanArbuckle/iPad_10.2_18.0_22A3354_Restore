uint64_t getEnumTagSinglePayload for TranscriptProtoRetrievedContextStatement()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240672934(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_41Tm(a1, a2, a3, &qword_256FFA300, &qword_257000F68);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoRetrievedContextStatement()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240672954(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_42Tm(a1, a2, a3, a4, &qword_256FFA300, &qword_257000F68);
}

void sub_240672968(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2406745D0(a1, a2, a3, qword_256FFCBE0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementID, qword_2570073A8, (void (*)(uint64_t))type metadata accessor for ContextProtoRetrievedContext);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoDynamicEnumerationEntityStatement(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(uint64_t *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  char *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  _QWORD *__dst;
  char *__dsta;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for TranscriptProtoStatementID(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      *(_DWORD *)a1 = *(_DWORD *)a2;
      v11 = a2[2];
      a1[1] = a2[1];
      a1[2] = v11;
      v12 = *(int *)(v7 + 24);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = sub_2408E57A4();
      v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
      swift_bridgeObjectRetain();
      v16(v13, v14, v15);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v17 = *(int *)(a3 + 20);
    v18 = (uint64_t *)((char *)a1 + v17);
    v19 = (uint64_t *)((char *)a2 + v17);
    v20 = (int *)type metadata accessor for ContextProtoDynamicEnumerationEntity(0);
    v21 = *((_QWORD *)v20 - 1);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v21 + 48))(v19, 1, v20))
    {
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000F50);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      v57 = v18;
      v59 = v21;
      v23 = v19[1];
      *v18 = *v19;
      v18[1] = v23;
      v24 = v20[5];
      __dst = (_QWORD *)((char *)v18 + v24);
      v25 = (_QWORD *)((char *)v19 + v24);
      v26 = type metadata accessor for ToolKitProtoTypeInstance(0);
      v27 = *(_QWORD *)(v26 - 8);
      v28 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v27 + 48);
      swift_bridgeObjectRetain();
      if (v28(v25, 1, v26))
      {
        v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
        memcpy(__dst, v25, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        v30 = *v25;
        if ((~*v25 & 0xF000000000000007) != 0)
          swift_retain();
        *__dst = v30;
        v31 = *(int *)(v26 + 20);
        v32 = (char *)__dst + v31;
        v33 = (char *)v25 + v31;
        v34 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v27 + 56))(__dst, 0, 1, v26);
      }
      v35 = v57;
      v36 = v20[6];
      v37 = (char *)v57 + v36;
      v38 = (_QWORD *)((char *)v19 + v36);
      v39 = type metadata accessor for ToolKitProtoTypedValue(0);
      v40 = *(_QWORD *)(v39 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
      {
        v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
        memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
      }
      else
      {
        v58 = v37;
        v42 = *v38;
        if ((~*v38 & 0xF000000000000007) != 0)
          swift_retain();
        *v58 = v42;
        v43 = *(int *)(v39 + 20);
        __dsta = (char *)v58 + v43;
        v44 = (char *)v38 + v43;
        v45 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(__dsta, v44, v45);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v58, 0, 1, v39);
      }
      v46 = v20[7];
      v47 = (uint64_t)v35 + v46;
      v48 = (char *)v19 + v46;
      v49 = sub_2408E57A4();
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(v47, v48, v49);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v59 + 56))(v35, 0, 1, v20);
    }
    v50 = *(int *)(a3 + 24);
    v51 = (char *)a1 + v50;
    v52 = (char *)a2 + v50;
    v53 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 16))(v51, v52, v53);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoDynamicEnumerationEntityStatement(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  _QWORD *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = type metadata accessor for TranscriptProtoStatementID(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4))
  {
    swift_bridgeObjectRelease();
    v5 = a1 + *(int *)(v4 + 24);
    v6 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  v7 = a1 + *(int *)(a2 + 20);
  v8 = (int *)type metadata accessor for ContextProtoDynamicEnumerationEntity(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v8 - 1) + 48))(v7, 1, v8))
  {
    swift_bridgeObjectRelease();
    v9 = (_QWORD *)(v7 + v8[5]);
    v10 = type metadata accessor for ToolKitProtoTypeInstance(0);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10))
    {
      if ((~*v9 & 0xF000000000000007) != 0)
        swift_release();
      v11 = (char *)v9 + *(int *)(v10 + 20);
      v12 = sub_2408E57A4();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
    }
    v13 = (_QWORD *)(v7 + v8[6]);
    v14 = type metadata accessor for ToolKitProtoTypedValue(0);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v13, 1, v14))
    {
      if ((~*v13 & 0xF000000000000007) != 0)
        swift_release();
      v15 = (char *)v13 + *(int *)(v14 + 20);
      v16 = sub_2408E57A4();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
    }
    v17 = v7 + v8[7];
    v18 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  }
  v19 = a1 + *(int *)(a2 + 24);
  v20 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
}

_QWORD *initializeWithCopy for TranscriptProtoDynamicEnumerationEntityStatement(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(uint64_t *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  _QWORD *__dst;
  uint64_t v54;
  uint64_t v55;

  v6 = type metadata accessor for TranscriptProtoStatementID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    v9 = a2[2];
    a1[1] = a2[1];
    a1[2] = v9;
    v10 = *(int *)(v6 + 24);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = sub_2408E57A4();
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    v14(v11, v12, v13);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v15 = *(int *)(a3 + 20);
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  v18 = (int *)type metadata accessor for ContextProtoDynamicEnumerationEntity(0);
  v19 = *((_QWORD *)v18 - 1);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v19 + 48))(v17, 1, v18))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000F50);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    v54 = v19;
    v55 = a3;
    v21 = v17[1];
    *v16 = *v17;
    v16[1] = v21;
    v22 = v18[5];
    __dst = (_QWORD *)((char *)v16 + v22);
    v23 = (_QWORD *)((char *)v17 + v22);
    v24 = type metadata accessor for ToolKitProtoTypeInstance(0);
    v25 = *(_QWORD *)(v24 - 8);
    v26 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v25 + 48);
    swift_bridgeObjectRetain();
    if (v26(v23, 1, v24))
    {
      v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
      memcpy(__dst, v23, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      v28 = *v23;
      if ((~*v23 & 0xF000000000000007) != 0)
        swift_retain();
      *__dst = v28;
      v29 = *(int *)(v24 + 20);
      v30 = (char *)__dst + v29;
      v31 = (char *)v23 + v29;
      v32 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v30, v31, v32);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v25 + 56))(__dst, 0, 1, v24);
    }
    a3 = v55;
    v33 = v18[6];
    v34 = (_QWORD *)((char *)v16 + v33);
    v35 = (_QWORD *)((char *)v17 + v33);
    v36 = type metadata accessor for ToolKitProtoTypedValue(0);
    v37 = *(_QWORD *)(v36 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
    {
      v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    }
    else
    {
      v39 = *v35;
      if ((~*v35 & 0xF000000000000007) != 0)
        swift_retain();
      *v34 = v39;
      v40 = *(int *)(v36 + 20);
      v41 = (char *)v34 + v40;
      v42 = (char *)v35 + v40;
      v43 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
      a3 = v55;
    }
    v44 = v18[7];
    v45 = (char *)v16 + v44;
    v46 = (char *)v17 + v44;
    v47 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v54 + 56))(v16, 0, 1, v18);
  }
  v48 = *(int *)(a3 + 24);
  v49 = (char *)a1 + v48;
  v50 = (char *)a2 + v48;
  v51 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v49, v50, v51);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoDynamicEnumerationEntityStatement(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  int *v20;
  uint64_t v21;
  uint64_t (*v22)(_QWORD *, uint64_t, int *);
  int v23;
  int v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(uint64_t *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(uint64_t *, uint64_t, uint64_t);
  int v43;
  int v44;
  size_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  char *v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t (*v85)(_QWORD *, uint64_t, uint64_t);
  int v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v104;
  unint64_t v105;
  _QWORD *v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  _QWORD *v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  _QWORD *v115;

  v6 = type metadata accessor for TranscriptProtoStatementID(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      *(_DWORD *)a1 = *(_DWORD *)a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      v11 = *(int *)(v6 + 24);
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = sub_2408E57A4();
      v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
      swift_bridgeObjectRetain();
      v15(v12, v13, v14);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    sub_240388AE4((uint64_t)a1, type metadata accessor for TranscriptProtoStatementID);
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)a1 = *(_DWORD *)a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v33 = *(int *)(v6 + 24);
  v34 = (char *)a1 + v33;
  v35 = (char *)a2 + v33;
  v36 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 24))(v34, v35, v36);
LABEL_7:
  v17 = *(int *)(a3 + 20);
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  v20 = (int *)type metadata accessor for ContextProtoDynamicEnumerationEntity(0);
  v21 = *((_QWORD *)v20 - 1);
  v22 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v21 + 48);
  v23 = v22(v18, 1, v20);
  v24 = v22(v19, 1, v20);
  if (!v23)
  {
    if (v24)
    {
      sub_240388AE4((uint64_t)v18, type metadata accessor for ContextProtoDynamicEnumerationEntity);
      goto LABEL_13;
    }
    v113 = a3;
    *v18 = *v19;
    v18[1] = v19[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v37 = v20[5];
    v38 = (_QWORD *)((char *)v18 + v37);
    v115 = v19;
    v39 = (_QWORD *)((char *)v19 + v37);
    v40 = type metadata accessor for ToolKitProtoTypeInstance(0);
    v41 = *(_QWORD *)(v40 - 8);
    v42 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v41 + 48);
    v43 = v42(v38, 1, v40);
    v44 = v42(v39, 1, v40);
    if (v43)
    {
      if (v44)
      {
        v45 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428) - 8) + 64);
        v46 = v38;
LABEL_29:
        memcpy(v46, v39, v45);
        goto LABEL_41;
      }
      v69 = *v39;
      if ((~*v39 & 0xF000000000000007) != 0)
        swift_retain();
      *v38 = v69;
      v70 = *(int *)(v40 + 20);
      v71 = (char *)v38 + v70;
      v72 = (char *)v39 + v70;
      v73 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v73 - 8) + 16))(v71, v72, v73);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
LABEL_41:
      v80 = v20[6];
      v81 = (_QWORD *)((char *)v18 + v80);
      v82 = (_QWORD *)((char *)v115 + v80);
      v83 = type metadata accessor for ToolKitProtoTypedValue(0);
      v84 = *(_QWORD *)(v83 - 8);
      v85 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v84 + 48);
      v86 = v85(v81, 1, v83);
      v87 = v85(v82, 1, v83);
      if (v86)
      {
        if (!v87)
        {
          v88 = *v82;
          if ((~*v82 & 0xF000000000000007) != 0)
            swift_retain();
          *v81 = v88;
          v89 = *(int *)(v83 + 20);
          v90 = (char *)v81 + v89;
          v91 = (char *)v82 + v89;
          v92 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v92 - 8) + 16))(v90, v91, v92);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v84 + 56))(v81, 0, 1, v83);
          goto LABEL_49;
        }
      }
      else
      {
        if (!v87)
        {
          v104 = *v82;
          v105 = *v82 & 0xF000000000000007;
          if ((~*v81 & 0xF000000000000007) != 0)
          {
            if (v105 == 0xF000000000000007)
            {
              sub_2403C66E0((uint64_t)v81);
              v106 = v82;
              *v81 = *v82;
            }
            else
            {
              v106 = v82;
              *v81 = v104;
              swift_retain();
              swift_release();
            }
            a3 = v113;
            v94 = v115;
          }
          else
          {
            v106 = v82;
            a3 = v113;
            v94 = v115;
            *v81 = v104;
            if (v105 != 0xF000000000000007)
              swift_retain();
          }
          v107 = *(int *)(v83 + 20);
          v108 = (char *)v81 + v107;
          v109 = (char *)v106 + v107;
          v110 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v110 - 8) + 24))(v108, v109, v110);
          goto LABEL_50;
        }
        sub_240388AE4((uint64_t)v81, type metadata accessor for ToolKitProtoTypedValue);
      }
      v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
      memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
LABEL_49:
      a3 = v113;
      v94 = v115;
LABEL_50:
      v95 = v20[7];
      v96 = (char *)v18 + v95;
      v97 = (uint64_t)v94 + v95;
      v98 = sub_2408E57A4();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v98 - 8) + 24))(v96, v97, v98);
      goto LABEL_51;
    }
    if (v44)
    {
      sub_240388AE4((uint64_t)v38, type metadata accessor for ToolKitProtoTypeInstance);
      v45 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428) - 8) + 64);
      v46 = v38;
      goto LABEL_29;
    }
    v74 = *v39;
    v75 = *v39 & 0xF000000000000007;
    if ((~*v38 & 0xF000000000000007) != 0)
    {
      if (v75 != 0xF000000000000007)
      {
        *v38 = v74;
        swift_retain();
        swift_release();
        goto LABEL_40;
      }
      sub_2403D4924((uint64_t)v38);
      v74 = *v39;
    }
    else if (v75 != 0xF000000000000007)
    {
      *v38 = v74;
      swift_retain();
LABEL_40:
      v76 = *(int *)(v40 + 20);
      v77 = (char *)v38 + v76;
      v78 = (char *)v39 + v76;
      v79 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 24))(v77, v78, v79);
      goto LABEL_41;
    }
    *v38 = v74;
    goto LABEL_40;
  }
  if (v24)
  {
LABEL_13:
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000F50);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_51;
  }
  v111 = a2;
  v112 = a3;
  *v18 = *v19;
  v18[1] = v19[1];
  v25 = v20[5];
  v26 = (_QWORD *)((char *)v18 + v25);
  v114 = v19;
  v27 = (_QWORD *)((char *)v19 + v25);
  v28 = type metadata accessor for ToolKitProtoTypeInstance(0);
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v29 + 48);
  swift_bridgeObjectRetain();
  if (v30(v27, 1, v28))
  {
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    v47 = *v27;
    if ((~*v27 & 0xF000000000000007) != 0)
      swift_retain();
    *v26 = v47;
    v48 = *(int *)(v28 + 20);
    v49 = (char *)v26 + v48;
    v50 = (char *)v27 + v48;
    v51 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v49, v50, v51);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
  }
  v52 = v114;
  v53 = v20[6];
  v54 = (char *)v18 + v53;
  v55 = (_QWORD *)((char *)v114 + v53);
  v56 = type metadata accessor for ToolKitProtoTypedValue(0);
  v57 = *(_QWORD *)(v56 - 8);
  a2 = v111;
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56))
  {
    v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
    memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
  }
  else
  {
    v59 = v54;
    v60 = *v55;
    if ((~*v55 & 0xF000000000000007) != 0)
      swift_retain();
    *v59 = v60;
    v61 = *(int *)(v56 + 20);
    v62 = (char *)v59 + v61;
    v63 = (char *)v55 + v61;
    v64 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 16))(v62, v63, v64);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v59, 0, 1, v56);
    v52 = v114;
  }
  v65 = v20[7];
  v66 = (char *)v18 + v65;
  v67 = (uint64_t)v52 + v65;
  v68 = sub_2408E57A4();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 16))(v66, v67, v68);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v21 + 56))(v18, 0, 1, v20);
  a3 = v112;
LABEL_51:
  v99 = *(int *)(a3 + 24);
  v100 = (char *)a1 + v99;
  v101 = (char *)a2 + v99;
  v102 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v102 - 8) + 24))(v100, v101, v102);
  return a1;
}

_DWORD *initializeWithTake for TranscriptProtoDynamicEnumerationEntityStatement(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v46;
  char *v47;
  uint64_t v48;

  v6 = type metadata accessor for TranscriptProtoStatementID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    *(_OWORD *)(a1 + 2) = *(_OWORD *)(a2 + 2);
    v9 = *(int *)(v6 + 24);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v13 = *(int *)(a3 + 20);
  v14 = (_OWORD *)((char *)a1 + v13);
  v15 = (_OWORD *)((char *)a2 + v13);
  v16 = (int *)type metadata accessor for ContextProtoDynamicEnumerationEntity(0);
  v17 = *((_QWORD *)v16 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v17 + 48))(v15, 1, v16))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000F50);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    v48 = a3;
    *v14 = *v15;
    v19 = v16[5];
    v20 = (_QWORD *)((char *)v14 + v19);
    v21 = (_QWORD *)((char *)v15 + v19);
    v22 = type metadata accessor for ToolKitProtoTypeInstance(0);
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    {
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      *v20 = *v21;
      v25 = *(int *)(v22 + 20);
      v46 = (char *)v20 + v25;
      v26 = (char *)v21 + v25;
      v27 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v46, v26, v27);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
    }
    v28 = v16[6];
    v29 = (_QWORD *)((char *)v14 + v28);
    v30 = (_QWORD *)((char *)v15 + v28);
    v31 = type metadata accessor for ToolKitProtoTypedValue(0);
    v32 = *(_QWORD *)(v31 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
    {
      v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      *v29 = *v30;
      v34 = *(int *)(v31 + 20);
      v47 = (char *)v29 + v34;
      v35 = (char *)v30 + v34;
      v36 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v47, v35, v36);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
    }
    a3 = v48;
    v37 = v16[7];
    v38 = (char *)v14 + v37;
    v39 = (char *)v15 + v37;
    v40 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v38, v39, v40);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v17 + 56))(v14, 0, 1, v16);
  }
  v41 = *(int *)(a3 + 24);
  v42 = (char *)a1 + v41;
  v43 = (char *)a2 + v41;
  v44 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v42, v43, v44);
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoDynamicEnumerationEntityStatement(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  int *v19;
  uint64_t v20;
  uint64_t (*v21)(_QWORD *, uint64_t, int *);
  int v22;
  int v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(char *, uint64_t, uint64_t);
  int v43;
  size_t v44;
  void *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t (*v76)(char *, uint64_t, uint64_t);
  int v77;
  size_t v78;
  void *v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  _QWORD *v98;
  _QWORD *v99;
  char *__src;
  char *__srcb;
  char *__srcc;
  char *__srca;
  uint64_t v104;
  uint64_t v105;

  v6 = type metadata accessor for TranscriptProtoStatementID(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      *(_DWORD *)a1 = *(_DWORD *)a2;
      *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
      v11 = *(int *)(v6 + 24);
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    sub_240388AE4((uint64_t)a1, type metadata accessor for TranscriptProtoStatementID);
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)a1 = *(_DWORD *)a2;
  v31 = a2[2];
  a1[1] = a2[1];
  a1[2] = v31;
  swift_bridgeObjectRelease();
  v32 = *(int *)(v6 + 24);
  v33 = (char *)a1 + v32;
  v34 = (char *)a2 + v32;
  v35 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 40))(v33, v34, v35);
LABEL_7:
  v16 = *(int *)(a3 + 20);
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  v19 = (int *)type metadata accessor for ContextProtoDynamicEnumerationEntity(0);
  v20 = *((_QWORD *)v19 - 1);
  v21 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v20 + 48);
  v22 = v21(v17, 1, v19);
  v23 = v21(v18, 1, v19);
  if (!v22)
  {
    if (v23)
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ContextProtoDynamicEnumerationEntity);
      goto LABEL_13;
    }
    v105 = a3;
    v36 = v18[1];
    *v17 = *v18;
    v17[1] = v36;
    swift_bridgeObjectRelease();
    v37 = v19[5];
    v38 = (_QWORD *)((char *)v17 + v37);
    v39 = (char *)v18 + v37;
    v40 = type metadata accessor for ToolKitProtoTypeInstance(0);
    v41 = *(_QWORD *)(v40 - 8);
    v42 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v41 + 48);
    v98 = v38;
    LODWORD(v38) = v42((char *)v38, 1, v40);
    __src = v39;
    v43 = v42(v39, 1, v40);
    if ((_DWORD)v38)
    {
      if (v43)
      {
        v44 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428) - 8) + 64);
        v45 = v98;
LABEL_25:
        memcpy(v45, v39, v44);
        goto LABEL_33;
      }
      *v98 = *(_QWORD *)v39;
      v62 = *(int *)(v40 + 20);
      v63 = (char *)v98 + v62;
      v64 = &v39[v62];
      v65 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 32))(v63, v64, v65);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v98, 0, 1, v40);
    }
    else
    {
      if (v43)
      {
        sub_240388AE4((uint64_t)v98, type metadata accessor for ToolKitProtoTypeInstance);
        v44 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428) - 8) + 64);
        v45 = v98;
        goto LABEL_25;
      }
      v66 = *(_QWORD *)v39;
      if ((~*v98 & 0xF000000000000007) != 0)
      {
        if ((~v66 & 0xF000000000000007) != 0)
        {
          *v98 = v66;
          swift_release();
        }
        else
        {
          sub_2403D4924((uint64_t)v98);
          *v98 = *(_QWORD *)v39;
        }
      }
      else
      {
        *v98 = v66;
      }
      v67 = *(int *)(v40 + 20);
      v68 = (char *)v98 + v67;
      v69 = &__src[v67];
      v70 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 40))(v68, v69, v70);
    }
LABEL_33:
    v71 = v19[6];
    v72 = (_QWORD *)((char *)v17 + v71);
    v73 = (char *)v18 + v71;
    v74 = type metadata accessor for ToolKitProtoTypedValue(0);
    v75 = *(_QWORD *)(v74 - 8);
    v76 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v75 + 48);
    v99 = v72;
    LODWORD(v72) = v76((char *)v72, 1, v74);
    __srca = v73;
    v77 = v76(v73, 1, v74);
    if ((_DWORD)v72)
    {
      if (!v77)
      {
        *v99 = *(_QWORD *)v73;
        v80 = *(int *)(v74 + 20);
        v81 = (char *)v99 + v80;
        v82 = &v73[v80];
        v83 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v83 - 8) + 32))(v81, v82, v83);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v99, 0, 1, v74);
        goto LABEL_40;
      }
      v78 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8) - 8) + 64);
      v79 = v99;
    }
    else
    {
      if (!v77)
      {
        v93 = *(_QWORD *)v73;
        if ((~*v99 & 0xF000000000000007) != 0)
        {
          a3 = v105;
          if ((~v93 & 0xF000000000000007) != 0)
          {
            *v99 = v93;
            swift_release();
          }
          else
          {
            sub_2403C66E0((uint64_t)v99);
            *v99 = *(_QWORD *)v73;
          }
        }
        else
        {
          *v99 = v93;
          a3 = v105;
        }
        v94 = *(int *)(v74 + 20);
        v95 = (char *)v99 + v94;
        v96 = &__srca[v94];
        v97 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v97 - 8) + 40))(v95, v96, v97);
        goto LABEL_41;
      }
      sub_240388AE4((uint64_t)v99, type metadata accessor for ToolKitProtoTypedValue);
      v78 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8) - 8) + 64);
      v79 = v99;
    }
    memcpy(v79, v73, v78);
LABEL_40:
    a3 = v105;
LABEL_41:
    v84 = v19[7];
    v85 = (char *)v17 + v84;
    v86 = (char *)v18 + v84;
    v87 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v87 - 8) + 40))(v85, v86, v87);
    goto LABEL_42;
  }
  if (v23)
  {
LABEL_13:
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000F50);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_42;
  }
  v104 = a3;
  *(_OWORD *)v17 = *(_OWORD *)v18;
  v24 = v19[5];
  v25 = (_QWORD *)((char *)v17 + v24);
  v26 = (_QWORD *)((char *)v18 + v24);
  v27 = type metadata accessor for ToolKitProtoTypeInstance(0);
  v28 = *(_QWORD *)(v27 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
  {
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    *v25 = *v26;
    v46 = *(int *)(v27 + 20);
    __srcb = (char *)v25 + v46;
    v47 = (char *)v26 + v46;
    v48 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(__srcb, v47, v48);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
  }
  v49 = v19[6];
  v50 = (_QWORD *)((char *)v17 + v49);
  v51 = (_QWORD *)((char *)v18 + v49);
  v52 = type metadata accessor for ToolKitProtoTypedValue(0);
  v53 = *(_QWORD *)(v52 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v53 + 48))(v51, 1, v52))
  {
    v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
  }
  else
  {
    *v50 = *v51;
    v55 = *(int *)(v52 + 20);
    __srcc = (char *)v50 + v55;
    v56 = (char *)v51 + v55;
    v57 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 32))(__srcc, v56, v57);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
  }
  a3 = v104;
  v58 = v19[7];
  v59 = (char *)v17 + v58;
  v60 = (char *)v18 + v58;
  v61 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v59, v60, v61);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v20 + 56))(v17, 0, 1, v19);
LABEL_42:
  v88 = *(int *)(a3 + 24);
  v89 = (char *)a1 + v88;
  v90 = (char *)a2 + v88;
  v91 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v91 - 8) + 40))(v89, v90, v91);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoDynamicEnumerationEntityStatement()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240674430(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_41Tm(a1, a2, a3, &qword_256FFA300, &qword_257000F50);
}

uint64_t __swift_get_extra_inhabitant_index_41Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v9 = __swift_instantiateConcreteTypeFromMangledName(a4);
  v10 = *(_QWORD *)(v9 - 8);
  if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
  {
    v11 = v9;
    v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    v13 = a1;
  }
  else
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(a5);
    v15 = *(_QWORD *)(v14 - 8);
    if (*(_DWORD *)(v15 + 84) == (_DWORD)a2)
    {
      v11 = v14;
      v16 = *(int *)(a3 + 20);
    }
    else
    {
      v11 = sub_2408E57A4();
      v15 = *(_QWORD *)(v11 - 8);
      v16 = *(int *)(a3 + 24);
    }
    v13 = a1 + v16;
    v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
  }
  return v12(v13, a2, v11);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoDynamicEnumerationEntityStatement()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406744EC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_42Tm(a1, a2, a3, a4, &qword_256FFA300, &qword_257000F50);
}

uint64_t __swift_store_extra_inhabitant_index_42Tm(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t *a5, uint64_t *a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v11 = __swift_instantiateConcreteTypeFromMangledName(a5);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a3)
  {
    v13 = v11;
    v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56);
    v15 = a1;
  }
  else
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(a6);
    v17 = *(_QWORD *)(v16 - 8);
    if (*(_DWORD *)(v17 + 84) == a3)
    {
      v13 = v16;
      v18 = *(int *)(a4 + 20);
    }
    else
    {
      v13 = sub_2408E57A4();
      v17 = *(_QWORD *)(v13 - 8);
      v18 = *(int *)(a4 + 24);
    }
    v15 = a1 + v18;
    v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56);
  }
  return v14(v15, a2, a2, v13);
}

void sub_2406745AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2406745D0(a1, a2, a3, qword_256FFCBE0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementID, qword_257007448, (void (*)(uint64_t))type metadata accessor for ContextProtoDynamicEnumerationEntity);
}

void sub_2406745D0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, void (*a5)(uint64_t), unint64_t *a6, void (*a7)(uint64_t))
{
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  sub_2403C8BE4(319, a4, a5);
  if (v9 <= 0x3F)
  {
    sub_2403C8BE4(319, a6, a7);
    if (v10 <= 0x3F)
    {
      sub_2408E57A4();
      if (v11 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t getEnumTagSinglePayload for TranscriptProtoSafetyModeRelease()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoSafetyModeRelease()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for TranscriptProtoSafetyModeRelease(uint64_t a1)
{
  return sub_2403BA700(a1, qword_2570074D8);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoSafetyModeException()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoSafetyModeException()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406746E4()
{
  return sub_2406F5810();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoParameterSet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoParameterSet()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_QWORD *initializeBufferWithCopyOfBuffer for TranscriptProtoParameter(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE *v10;
  int *v11;
  uint64_t v12;
  unsigned int (*v13)(_BYTE *, uint64_t, int *);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  _WORD *v27;
  _WORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE *v45;
  _BYTE *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  void (*v53)(char *, char *, uint64_t);
  char *v54;
  char *v55;
  _QWORD *v56;
  char *v57;
  char *v58;
  uint64_t v59;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    v8 = *(int *)(a3 + 24);
    v9 = (_BYTE *)(a1 + v8);
    v10 = (char *)a2 + v8;
    v11 = (int *)type metadata accessor for TranscriptProtoCandidate(0);
    v12 = *((_QWORD *)v11 - 1);
    v13 = *(unsigned int (**)(_BYTE *, uint64_t, int *))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA7B8);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      v59 = v12;
      *v9 = *v10;
      v16 = v11[5];
      v17 = &v9[v16];
      v18 = (uint64_t *)&v10[v16];
      v19 = type metadata accessor for ToolKitProtoTypedValue(0);
      v20 = *(_QWORD *)(v19 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
      {
        v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        v56 = v17;
        v22 = *v18;
        if ((~*v18 & 0xF000000000000007) != 0)
          swift_retain();
        *v56 = v22;
        v23 = *(int *)(v19 + 20);
        v54 = (char *)v56 + v23;
        v24 = (char *)v18 + v23;
        v25 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v54, v24, v25);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v56, 0, 1, v19);
      }
      v26 = v11[6];
      v27 = &v9[v26];
      v28 = &v10[v26];
      v29 = type metadata accessor for TranscriptProtoCandidatePromptStatus(0);
      v30 = *(_QWORD *)(v29 - 8);
      if ((*(unsigned int (**)(_WORD *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
      {
        v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA7B0);
        memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      else
      {
        *(_QWORD *)v27 = *(_QWORD *)v28;
        v27[4] = v28[4];
        v32 = *(int *)(v29 + 20);
        v57 = (char *)v27 + v32;
        v33 = (char *)v28 + v32;
        v34 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v57, v33, v34);
        (*(void (**)(_WORD *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
      }
      v35 = v11[7];
      v36 = &v9[v35];
      v37 = &v10[v35];
      v38 = type metadata accessor for TranscriptProtoStatementID(0);
      v39 = *(_QWORD *)(v38 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
      {
        v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
        memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        *(_DWORD *)v36 = *(_DWORD *)v37;
        v41 = v37[2];
        v36[1] = v37[1];
        v36[2] = v41;
        v42 = *(int *)(v38 + 24);
        v55 = (char *)v37 + v42;
        v58 = (char *)v36 + v42;
        v43 = sub_2408E57A4();
        v53 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16);
        swift_bridgeObjectRetain();
        v53(v58, v55, v43);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
      }
      v44 = v11[8];
      v45 = &v9[v44];
      v46 = &v10[v44];
      v47 = sub_2408E57A4();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v59 + 56))(v9, 0, 1, v11);
    }
    v48 = *(int *)(a3 + 28);
    v49 = (char *)v4 + v48;
    v50 = (uint64_t)a2 + v48;
    v51 = sub_2408E57A4();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v49, v50, v51);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoParameter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  _QWORD *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = (int *)type metadata accessor for TranscriptProtoCandidate(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v5 - 1) + 48))(v4, 1, v5))
  {
    v6 = (_QWORD *)(v4 + v5[5]);
    v7 = type metadata accessor for ToolKitProtoTypedValue(0);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
    {
      if ((~*v6 & 0xF000000000000007) != 0)
        swift_release();
      v8 = (char *)v6 + *(int *)(v7 + 20);
      v9 = sub_2408E57A4();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
    }
    v10 = v4 + v5[6];
    v11 = type metadata accessor for TranscriptProtoCandidatePromptStatus(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
    {
      v12 = v10 + *(int *)(v11 + 20);
      v13 = sub_2408E57A4();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
    }
    v14 = v4 + v5[7];
    v15 = type metadata accessor for TranscriptProtoStatementID(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 1, v15))
    {
      swift_bridgeObjectRelease();
      v16 = v14 + *(int *)(v15 + 24);
      v17 = sub_2408E57A4();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
    }
    v18 = v4 + v5[8];
    v19 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18, v19);
  }
  v20 = a1 + *(int *)(a2 + 28);
  v21 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v20, v21);
}

uint64_t initializeWithCopy for TranscriptProtoParameter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  int *v10;
  uint64_t v11;
  unsigned int (*v12)(_BYTE *, uint64_t, int *);
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _WORD *v26;
  _WORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE *v45;
  _BYTE *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v53)(char *, char *, uint64_t);
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;

  v3 = a3;
  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v7 = *(int *)(a3 + 24);
  v8 = (_BYTE *)(a1 + v7);
  v9 = (_BYTE *)(a2 + v7);
  v10 = (int *)type metadata accessor for TranscriptProtoCandidate(0);
  v11 = *((_QWORD *)v10 - 1);
  v12 = *(unsigned int (**)(_BYTE *, uint64_t, int *))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA7B8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v56 = v11;
    v57 = v3;
    *v8 = *v9;
    v14 = v10[5];
    v15 = &v8[v14];
    v16 = (uint64_t *)&v9[v14];
    v17 = type metadata accessor for ToolKitProtoTypedValue(0);
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      v20 = *v16;
      if ((~*v16 & 0xF000000000000007) != 0)
        swift_retain();
      *v15 = v20;
      v21 = *(int *)(v17 + 20);
      v22 = (char *)v15 + v21;
      v23 = (char *)v16 + v21;
      v24 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
    v25 = v10[6];
    v26 = &v8[v25];
    v27 = &v9[v25];
    v28 = type metadata accessor for TranscriptProtoCandidatePromptStatus(0);
    v29 = *(_QWORD *)(v28 - 8);
    if ((*(unsigned int (**)(_WORD *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA7B0);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      *(_QWORD *)v26 = *(_QWORD *)v27;
      v26[4] = v27[4];
      v31 = *(int *)(v28 + 20);
      v32 = (char *)v26 + v31;
      v33 = (char *)v27 + v31;
      v34 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
      (*(void (**)(_WORD *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
    }
    v35 = v10[7];
    v36 = &v8[v35];
    v37 = &v9[v35];
    v38 = type metadata accessor for TranscriptProtoStatementID(0);
    v39 = *(_QWORD *)(v38 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
    {
      v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      *(_DWORD *)v36 = *(_DWORD *)v37;
      v41 = v37[2];
      v36[1] = v37[1];
      v36[2] = v41;
      v42 = *(int *)(v38 + 24);
      v54 = (char *)v37 + v42;
      v55 = (char *)v36 + v42;
      v43 = sub_2408E57A4();
      v53 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16);
      swift_bridgeObjectRetain();
      v53(v55, v54, v43);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
    }
    v3 = v57;
    v44 = v10[8];
    v45 = &v8[v44];
    v46 = &v9[v44];
    v47 = sub_2408E57A4();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v56 + 56))(v8, 0, 1, v10);
  }
  v48 = *(int *)(v3 + 28);
  v49 = a1 + v48;
  v50 = a2 + v48;
  v51 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v49, v50, v51);
  return a1;
}

uint64_t assignWithCopy for TranscriptProtoParameter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  int *v10;
  uint64_t v11;
  uint64_t (*v12)(_BYTE *, uint64_t, int *);
  int v13;
  int v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  _BYTE *v24;
  uint64_t *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t *, uint64_t, uint64_t);
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  _WORD *v43;
  _WORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(char *, char *, uint64_t);
  uint64_t v64;
  _BYTE *v65;
  _BYTE *v66;
  uint64_t v67;
  uint64_t v68;
  _BYTE *v69;
  uint64_t v70;
  _WORD *v71;
  _WORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t (*v75)(_WORD *, uint64_t, uint64_t);
  int v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t (*v89)(_QWORD *, uint64_t, uint64_t);
  int v90;
  int v91;
  uint64_t v92;
  uint64_t v93;
  void (*v94)(char *, char *, uint64_t);
  uint64_t v95;
  uint64_t v96;
  _BYTE *v97;
  _BYTE *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  char *v120;
  char *v121;
  char *v122;
  _BYTE *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  _BYTE *v127;
  _BYTE *v128;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v6;
  v7 = *(int *)(a3 + 24);
  v8 = (_BYTE *)(a1 + v7);
  v9 = (_BYTE *)(a2 + v7);
  v10 = (int *)type metadata accessor for TranscriptProtoCandidate(0);
  v11 = *((_QWORD *)v10 - 1);
  v12 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (v14)
    {
      sub_240388AE4((uint64_t)v8, type metadata accessor for TranscriptProtoCandidate);
      goto LABEL_7;
    }
    *v8 = *v9;
    v22 = v10[5];
    v23 = v9;
    v24 = v8;
    v25 = (uint64_t *)&v8[v22];
    v126 = a3;
    v128 = v23;
    v26 = (uint64_t *)&v23[v22];
    v27 = type metadata accessor for ToolKitProtoTypedValue(0);
    v28 = *(_QWORD *)(v27 - 8);
    v29 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v28 + 48);
    v30 = v29(v25, 1, v27);
    v31 = v29(v26, 1, v27);
    if (v30)
    {
      if (!v31)
      {
        v32 = *v26;
        if ((~*v26 & 0xF000000000000007) != 0)
          swift_retain();
        *v25 = v32;
        v33 = *(int *)(v27 + 20);
        v34 = (char *)v25 + v33;
        v35 = (char *)v26 + v33;
        v36 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v34, v35, v36);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
        goto LABEL_26;
      }
    }
    else
    {
      if (!v31)
      {
        v105 = *v26;
        v106 = *v26 & 0xF000000000000007;
        if ((~*v25 & 0xF000000000000007) != 0)
        {
          if (v106 == 0xF000000000000007)
          {
            sub_2403C66E0((uint64_t)v25);
            *v25 = *v26;
          }
          else
          {
            *v25 = v105;
            swift_retain();
            swift_release();
          }
          v69 = v24;
        }
        else
        {
          v69 = v24;
          *v25 = v105;
          if (v106 != 0xF000000000000007)
            swift_retain();
        }
        v116 = *(int *)(v27 + 20);
        v117 = (char *)v25 + v116;
        v118 = (char *)v26 + v116;
        v119 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v119 - 8) + 24))(v117, v118, v119);
LABEL_27:
        v70 = v10[6];
        v71 = &v69[v70];
        v72 = &v128[v70];
        v73 = type metadata accessor for TranscriptProtoCandidatePromptStatus(0);
        v74 = *(_QWORD *)(v73 - 8);
        v75 = *(uint64_t (**)(_WORD *, uint64_t, uint64_t))(v74 + 48);
        v76 = v75(v71, 1, v73);
        v77 = v75(v72, 1, v73);
        if (v76)
        {
          if (!v77)
          {
            v78 = *(_QWORD *)v72;
            v71[4] = v72[4];
            *(_QWORD *)v71 = v78;
            v79 = *(int *)(v73 + 20);
            v80 = (char *)v71 + v79;
            v81 = (char *)v72 + v79;
            v82 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v82 - 8) + 16))(v80, v81, v82);
            (*(void (**)(_WORD *, _QWORD, uint64_t, uint64_t))(v74 + 56))(v71, 0, 1, v73);
            goto LABEL_33;
          }
        }
        else
        {
          if (!v77)
          {
            v107 = *(_QWORD *)v72;
            v71[4] = v72[4];
            *(_QWORD *)v71 = v107;
            v108 = *(int *)(v73 + 20);
            v109 = (char *)v71 + v108;
            v110 = (char *)v72 + v108;
            v111 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v111 - 8) + 24))(v109, v110, v111);
LABEL_33:
            v84 = v10[7];
            v85 = &v24[v84];
            v86 = &v128[v84];
            v87 = type metadata accessor for TranscriptProtoStatementID(0);
            v88 = *(_QWORD *)(v87 - 8);
            v89 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v88 + 48);
            v90 = v89(v85, 1, v87);
            v91 = v89(v86, 1, v87);
            if (v90)
            {
              if (!v91)
              {
                *(_DWORD *)v85 = *(_DWORD *)v86;
                v85[1] = v86[1];
                v85[2] = v86[2];
                v92 = *(int *)(v87 + 24);
                v122 = (char *)v86 + v92;
                v124 = (char *)v85 + v92;
                v93 = sub_2408E57A4();
                v94 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v93 - 8) + 16);
                swift_bridgeObjectRetain();
                v94(v124, v122, v93);
                (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v85, 0, 1, v87);
LABEL_39:
                a3 = v126;
                v96 = v10[8];
                v97 = &v24[v96];
                v98 = &v128[v96];
                v99 = sub_2408E57A4();
                (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v99 - 8) + 24))(v97, v98, v99);
                goto LABEL_40;
              }
            }
            else
            {
              if (!v91)
              {
                *(_DWORD *)v85 = *(_DWORD *)v86;
                v85[1] = v86[1];
                v85[2] = v86[2];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v112 = *(int *)(v87 + 24);
                v113 = (char *)v85 + v112;
                v114 = (char *)v86 + v112;
                v115 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v115 - 8) + 24))(v113, v114, v115);
                goto LABEL_39;
              }
              sub_240388AE4((uint64_t)v85, type metadata accessor for TranscriptProtoStatementID);
            }
            v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
            memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
            goto LABEL_39;
          }
          sub_240388AE4((uint64_t)v71, type metadata accessor for TranscriptProtoCandidatePromptStatus);
        }
        v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA7B0);
        memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
        goto LABEL_33;
      }
      sub_240388AE4((uint64_t)v25, type metadata accessor for ToolKitProtoTypedValue);
    }
    v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
LABEL_26:
    v69 = v24;
    goto LABEL_27;
  }
  if (v14)
  {
LABEL_7:
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA7B8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_40;
  }
  v125 = a3;
  *v8 = *v9;
  v15 = v10[5];
  v16 = &v8[v15];
  v17 = (uint64_t *)&v9[v15];
  v18 = type metadata accessor for ToolKitProtoTypedValue(0);
  v19 = *(_QWORD *)(v18 - 8);
  v127 = v9;
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    v123 = v8;
    v37 = *v17;
    if ((~*v17 & 0xF000000000000007) != 0)
      swift_retain();
    *v16 = v37;
    v38 = *(int *)(v18 + 20);
    v39 = (char *)v16 + v38;
    v40 = (char *)v17 + v38;
    v41 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v39, v40, v41);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    v8 = v123;
    v9 = v127;
  }
  v42 = v10[6];
  v43 = &v8[v42];
  v44 = &v9[v42];
  v45 = type metadata accessor for TranscriptProtoCandidatePromptStatus(0);
  v46 = *(_QWORD *)(v45 - 8);
  if ((*(unsigned int (**)(_WORD *, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45))
  {
    v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA7B0);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
  }
  else
  {
    v48 = *(_QWORD *)v44;
    v43[4] = v44[4];
    *(_QWORD *)v43 = v48;
    v49 = *(int *)(v45 + 20);
    v50 = v8;
    v51 = (char *)v43 + v49;
    v52 = (char *)v44 + v49;
    v53 = sub_2408E57A4();
    v54 = v51;
    v8 = v50;
    v9 = v127;
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 16))(v54, v52, v53);
    (*(void (**)(_WORD *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
  }
  v55 = v10[7];
  v56 = &v8[v55];
  v57 = &v9[v55];
  v58 = type metadata accessor for TranscriptProtoStatementID(0);
  v59 = *(_QWORD *)(v58 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v59 + 48))(v57, 1, v58))
  {
    v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v56 = *(_DWORD *)v57;
    v56[1] = v57[1];
    v56[2] = v57[2];
    v61 = *(int *)(v58 + 24);
    v120 = (char *)v57 + v61;
    v121 = (char *)v56 + v61;
    v62 = sub_2408E57A4();
    v63 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 16);
    swift_bridgeObjectRetain();
    v63(v121, v120, v62);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v56, 0, 1, v58);
  }
  a3 = v125;
  v64 = v10[8];
  v65 = &v8[v64];
  v66 = &v127[v64];
  v67 = sub_2408E57A4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v67 - 8) + 16))(v65, v66, v67);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
LABEL_40:
  v100 = *(int *)(a3 + 28);
  v101 = a1 + v100;
  v102 = a2 + v100;
  v103 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v103 - 8) + 24))(v101, v102, v103);
  return a1;
}

uint64_t initializeWithTake for TranscriptProtoParameter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _WORD *v22;
  _WORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  _DWORD *v31;
  _DWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v6 = *(int *)(a3 + 24);
  v7 = (_BYTE *)(a1 + v6);
  v8 = (_BYTE *)(a2 + v6);
  v9 = (int *)type metadata accessor for TranscriptProtoCandidate(0);
  v10 = *((_QWORD *)v9 - 1);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, int *))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA7B8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v51 = v10;
    *v7 = *v8;
    v12 = v9[5];
    v13 = &v7[v12];
    v14 = &v8[v12];
    v15 = type metadata accessor for ToolKitProtoTypedValue(0);
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      *v13 = *v14;
      v18 = *(int *)(v15 + 20);
      v48 = (char *)v13 + v18;
      v19 = (char *)v14 + v18;
      v20 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v48, v19, v20);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    v21 = v9[6];
    v22 = &v7[v21];
    v23 = &v8[v21];
    v24 = type metadata accessor for TranscriptProtoCandidatePromptStatus(0);
    v25 = *(_QWORD *)(v24 - 8);
    if ((*(unsigned int (**)(_WORD *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
    {
      v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA7B0);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      *(_QWORD *)v22 = *(_QWORD *)v23;
      v22[4] = v23[4];
      v27 = *(int *)(v24 + 20);
      v49 = (char *)v22 + v27;
      v28 = (char *)v23 + v27;
      v29 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v49, v28, v29);
      (*(void (**)(_WORD *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
    }
    v30 = v9[7];
    v31 = &v7[v30];
    v32 = &v8[v30];
    v33 = type metadata accessor for TranscriptProtoStatementID(0);
    v34 = *(_QWORD *)(v33 - 8);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
    {
      v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      *v31 = *v32;
      *(_OWORD *)(v31 + 2) = *(_OWORD *)(v32 + 2);
      v36 = *(int *)(v33 + 24);
      v50 = (char *)v31 + v36;
      v37 = (char *)v32 + v36;
      v38 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v50, v37, v38);
      (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
    }
    v39 = v9[8];
    v40 = &v7[v39];
    v41 = &v8[v39];
    v42 = sub_2408E57A4();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v51 + 56))(v7, 0, 1, v9);
  }
  v43 = *(int *)(a3 + 28);
  v44 = a1 + v43;
  v45 = a2 + v43;
  v46 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
  return a1;
}

uint64_t assignWithTake for TranscriptProtoParameter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  int *v10;
  uint64_t v11;
  uint64_t (*v12)(_BYTE *, uint64_t, int *);
  int v13;
  int v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(char *, uint64_t, uint64_t);
  int v28;
  size_t v29;
  void *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _WORD *v35;
  _WORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  _DWORD *v44;
  _DWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE *v53;
  _BYTE *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t (*v69)(char *, uint64_t, uint64_t);
  int v70;
  int v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t (*v81)(char *, uint64_t, uint64_t);
  int v82;
  int v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _BYTE *v90;
  _BYTE *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  _QWORD *v107;
  char *__src;
  char *__srcc;
  char *__srcd;
  char *__srce;
  _QWORD *__srca;
  _QWORD *__srcb;
  uint64_t v114;
  uint64_t v115;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v7 = *(int *)(a3 + 24);
  v8 = (_BYTE *)(a1 + v7);
  v9 = (_BYTE *)(a2 + v7);
  v10 = (int *)type metadata accessor for TranscriptProtoCandidate(0);
  v11 = *((_QWORD *)v10 - 1);
  v12 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (v14)
    {
      sub_240388AE4((uint64_t)v8, type metadata accessor for TranscriptProtoCandidate);
      goto LABEL_7;
    }
    v115 = a3;
    *v8 = *v9;
    v22 = v10[5];
    v23 = &v8[v22];
    v24 = &v9[v22];
    v25 = type metadata accessor for ToolKitProtoTypedValue(0);
    v26 = *(_QWORD *)(v25 - 8);
    v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
    v107 = v23;
    LODWORD(v23) = v27((char *)v23, 1, v25);
    __src = v24;
    v28 = v27(v24, 1, v25);
    if ((_DWORD)v23)
    {
      if (v28)
      {
        v29 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8) - 8) + 64);
        v30 = v107;
LABEL_21:
        memcpy(v30, v24, v29);
        goto LABEL_29;
      }
      *v107 = *(_QWORD *)v24;
      v56 = *(int *)(v25 + 20);
      v57 = (char *)v107 + v56;
      v58 = &v24[v56];
      v59 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 32))(v57, v58, v59);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v107, 0, 1, v25);
    }
    else
    {
      if (v28)
      {
        sub_240388AE4((uint64_t)v107, type metadata accessor for ToolKitProtoTypedValue);
        v29 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8) - 8) + 64);
        v30 = v107;
        goto LABEL_21;
      }
      v60 = *(_QWORD *)v24;
      if ((~*v107 & 0xF000000000000007) != 0)
      {
        if ((~v60 & 0xF000000000000007) != 0)
        {
          *v107 = v60;
          swift_release();
        }
        else
        {
          sub_2403C66E0((uint64_t)v107);
          *v107 = *(_QWORD *)v24;
        }
      }
      else
      {
        *v107 = v60;
      }
      v61 = *(int *)(v25 + 20);
      v62 = (char *)v107 + v61;
      v63 = &__src[v61];
      v64 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 40))(v62, v63, v64);
    }
LABEL_29:
    v65 = v10[6];
    v66 = &v8[v65];
    v67 = &v9[v65];
    v68 = type metadata accessor for TranscriptProtoCandidatePromptStatus(0);
    __srca = *(_QWORD **)(v68 - 8);
    v69 = (uint64_t (*)(char *, uint64_t, uint64_t))__srca[6];
    v70 = v69(v66, 1, v68);
    v71 = v69(v67, 1, v68);
    if (v70)
    {
      if (!v71)
      {
        *(_QWORD *)v66 = *(_QWORD *)v67;
        *((_WORD *)v66 + 4) = *((_WORD *)v67 + 4);
        v72 = *(int *)(v68 + 20);
        v73 = &v66[v72];
        v74 = &v67[v72];
        v75 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 32))(v73, v74, v75);
        ((void (*)(char *, _QWORD, uint64_t, uint64_t))__srca[7])(v66, 0, 1, v68);
        goto LABEL_35;
      }
    }
    else
    {
      if (!v71)
      {
        *(_QWORD *)v66 = *(_QWORD *)v67;
        *((_WORD *)v66 + 4) = *((_WORD *)v67 + 4);
        v98 = *(int *)(v68 + 20);
        v99 = &v66[v98];
        v100 = &v67[v98];
        v101 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 40))(v99, v100, v101);
LABEL_35:
        v77 = v10[7];
        v78 = &v8[v77];
        v79 = &v9[v77];
        v80 = type metadata accessor for TranscriptProtoStatementID(0);
        __srcb = *(_QWORD **)(v80 - 8);
        v81 = (uint64_t (*)(char *, uint64_t, uint64_t))__srcb[6];
        v82 = v81(v78, 1, v80);
        v83 = v81(v79, 1, v80);
        if (v82)
        {
          if (!v83)
          {
            *(_DWORD *)v78 = *(_DWORD *)v79;
            *(_OWORD *)(v78 + 8) = *(_OWORD *)(v79 + 8);
            v84 = *(int *)(v80 + 24);
            v85 = &v78[v84];
            v86 = &v79[v84];
            v87 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v87 - 8) + 32))(v85, v86, v87);
            ((void (*)(char *, _QWORD, uint64_t, uint64_t))__srcb[7])(v78, 0, 1, v80);
LABEL_41:
            a3 = v115;
            v89 = v10[8];
            v90 = &v8[v89];
            v91 = &v9[v89];
            v92 = sub_2408E57A4();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v92 - 8) + 40))(v90, v91, v92);
            goto LABEL_42;
          }
        }
        else
        {
          if (!v83)
          {
            *(_DWORD *)v78 = *(_DWORD *)v79;
            v102 = *((_QWORD *)v79 + 2);
            *((_QWORD *)v78 + 1) = *((_QWORD *)v79 + 1);
            *((_QWORD *)v78 + 2) = v102;
            swift_bridgeObjectRelease();
            v103 = *(int *)(v80 + 24);
            v104 = &v78[v103];
            v105 = &v79[v103];
            v106 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v106 - 8) + 40))(v104, v105, v106);
            goto LABEL_41;
          }
          sub_240388AE4((uint64_t)v78, type metadata accessor for TranscriptProtoStatementID);
        }
        v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
        memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
        goto LABEL_41;
      }
      sub_240388AE4((uint64_t)v66, type metadata accessor for TranscriptProtoCandidatePromptStatus);
    }
    v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA7B0);
    memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
    goto LABEL_35;
  }
  if (v14)
  {
LABEL_7:
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA7B8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_42;
  }
  v114 = a3;
  *v8 = *v9;
  v15 = v10[5];
  v16 = &v8[v15];
  v17 = &v9[v15];
  v18 = type metadata accessor for ToolKitProtoTypedValue(0);
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    *v16 = *v17;
    v31 = *(int *)(v18 + 20);
    __srcc = (char *)v16 + v31;
    v32 = (char *)v17 + v31;
    v33 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(__srcc, v32, v33);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  v34 = v10[6];
  v35 = &v8[v34];
  v36 = &v9[v34];
  v37 = type metadata accessor for TranscriptProtoCandidatePromptStatus(0);
  v38 = *(_QWORD *)(v37 - 8);
  if ((*(unsigned int (**)(_WORD *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
  {
    v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA7B0);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v35 = *(_QWORD *)v36;
    v35[4] = v36[4];
    v40 = *(int *)(v37 + 20);
    __srcd = (char *)v35 + v40;
    v41 = (char *)v36 + v40;
    v42 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(__srcd, v41, v42);
    (*(void (**)(_WORD *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
  }
  v43 = v10[7];
  v44 = &v8[v43];
  v45 = &v9[v43];
  v46 = type metadata accessor for TranscriptProtoStatementID(0);
  v47 = *(_QWORD *)(v46 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
  {
    v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
  }
  else
  {
    *v44 = *v45;
    *(_OWORD *)(v44 + 2) = *(_OWORD *)(v45 + 2);
    v49 = *(int *)(v46 + 24);
    __srce = (char *)v44 + v49;
    v50 = (char *)v45 + v49;
    v51 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(__srce, v50, v51);
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
  }
  v52 = v10[8];
  v53 = &v8[v52];
  v54 = &v9[v52];
  v55 = sub_2408E57A4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v55 - 8) + 32))(v53, v54, v55);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
  a3 = v114;
LABEL_42:
  v93 = *(int *)(a3 + 28);
  v94 = a1 + v93;
  v95 = a2 + v93;
  v96 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v96 - 8) + 40))(v94, v95, v96);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoParameter()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406762C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_83Tm(a1, a2, a3, &qword_256FFA7B8);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoParameter()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406762DC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_84Tm(a1, a2, a3, a4, &qword_256FFA7B8);
}

void sub_2406762E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2406F960C(a1, a2, a3, (uint64_t)&unk_240906518, (uint64_t)"\t", qword_257007698, (void (*)(uint64_t))type metadata accessor for TranscriptProtoCandidate);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoClientInitiatedClientAction()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoClientInitiatedClientAction()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoSystemQuery()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoSystemQuery()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for TranscriptProtoSystemQuery(uint64_t a1)
{
  return sub_2403BA700(a1, qword_2570077C0);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoSystemPromptResolutionUserAction(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA328);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      switch(EnumCaseMultiPayload)
      {
        case 6:
          v17 = sub_2408E57A4();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(a1, a2, v17);
          swift_storeEnumTagMultiPayload();
          break;
        case 5:
          *(_BYTE *)a1 = *(_BYTE *)a2;
          v18 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
          v19 = (char *)a1 + v18;
          v20 = (char *)a2 + v18;
          v21 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
          swift_storeEnumTagMultiPayload();
          break;
        case 1:
          v12 = *a2;
          if ((~*a2 & 0xF000000000000007) != 0)
            swift_retain();
          *a1 = v12;
          v13 = *(int *)(type metadata accessor for ToolKitProtoTypedValue(0) + 20);
          v14 = (char *)a1 + v13;
          v15 = (char *)a2 + v13;
          v16 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(v8 + 64));
          break;
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v22 = *(int *)(a3 + 20);
    v23 = (char *)a1 + v22;
    v24 = (char *)a2 + v22;
    v25 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoSystemPromptResolutionUserAction(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;

  v4 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
  if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 6:
        v7 = sub_2408E57A4();
        (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a1, v7);
        break;
      case 5:
        v6 = type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0);
LABEL_10:
        v8 = (char *)a1 + *(int *)(v6 + 20);
        v9 = sub_2408E57A4();
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
        break;
      case 1:
        if ((~*a1 & 0xF000000000000007) != 0)
          swift_release();
        v6 = type metadata accessor for ToolKitProtoTypedValue(0);
        goto LABEL_10;
    }
  }
  v10 = (char *)a1 + *(int *)(a2 + 20);
  v11 = sub_2408E57A4();
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
}

_BYTE *initializeWithCopy for TranscriptProtoSystemPromptResolutionUserAction(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  _BYTE *v22;
  uint64_t v23;

  v6 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA328);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 6:
        v15 = sub_2408E57A4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a1, a2, v15);
        swift_storeEnumTagMultiPayload();
        break;
      case 5:
        *a1 = *a2;
        v16 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
        v17 = &a1[v16];
        v18 = &a2[v16];
        v19 = sub_2408E57A4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
        swift_storeEnumTagMultiPayload();
        break;
      case 1:
        v10 = *(_QWORD *)a2;
        if ((~*(_QWORD *)a2 & 0xF000000000000007) != 0)
          swift_retain();
        *(_QWORD *)a1 = v10;
        v11 = *(int *)(type metadata accessor for ToolKitProtoTypedValue(0) + 20);
        v12 = &a1[v11];
        v13 = &a2[v11];
        v14 = sub_2408E57A4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v7 + 64));
        break;
    }
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v20 = *(int *)(a3 + 20);
  v21 = &a1[v20];
  v22 = &a2[v20];
  v23 = sub_2408E57A4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
  return a1;
}

_BYTE *assignWithCopy for TranscriptProtoSystemPromptResolutionUserAction(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_BYTE *, uint64_t, uint64_t);
  int v9;
  int v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  size_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  _BYTE *v37;
  uint64_t v38;

  v6 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      switch(EnumCaseMultiPayload)
      {
        case 6:
          v24 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(a1, a2, v24);
          swift_storeEnumTagMultiPayload();
          break;
        case 5:
          *a1 = *a2;
          v25 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
          v26 = &a1[v25];
          v27 = &a2[v25];
          v28 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
          swift_storeEnumTagMultiPayload();
          break;
        case 1:
          v12 = *(_QWORD *)a2;
          if ((~*(_QWORD *)a2 & 0xF000000000000007) != 0)
            swift_retain();
          *(_QWORD *)a1 = v12;
          v13 = *(int *)(type metadata accessor for ToolKitProtoTypedValue(0) + 20);
          v14 = &a1[v13];
          v15 = &a2[v13];
          v16 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(v7 + 64));
          break;
      }
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_24;
    }
    goto LABEL_11;
  }
  if (v10)
  {
    sub_240388AE4((uint64_t)a1, type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum);
LABEL_11:
    v17 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256FFA328) - 8) + 64);
LABEL_12:
    memcpy(a1, a2, v17);
    goto LABEL_24;
  }
  if (a1 == a2)
    goto LABEL_24;
  sub_240388AE4((uint64_t)a1, type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum);
  v18 = swift_getEnumCaseMultiPayload();
  if (v18 == 6)
  {
    v34 = sub_2408E57A4();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(a1, a2, v34);
    swift_storeEnumTagMultiPayload();
    goto LABEL_24;
  }
  if (v18 == 5)
  {
    *a1 = *a2;
    v35 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
    v36 = &a1[v35];
    v37 = &a2[v35];
    v38 = sub_2408E57A4();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
    swift_storeEnumTagMultiPayload();
    goto LABEL_24;
  }
  if (v18 != 1)
  {
    v17 = *(_QWORD *)(v7 + 64);
    goto LABEL_12;
  }
  v19 = *(_QWORD *)a2;
  if ((~*(_QWORD *)a2 & 0xF000000000000007) != 0)
    swift_retain();
  *(_QWORD *)a1 = v19;
  v20 = *(int *)(type metadata accessor for ToolKitProtoTypedValue(0) + 20);
  v21 = &a1[v20];
  v22 = &a2[v20];
  v23 = sub_2408E57A4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
  swift_storeEnumTagMultiPayload();
LABEL_24:
  v29 = *(int *)(a3 + 20);
  v30 = &a1[v29];
  v31 = &a2[v29];
  v32 = sub_2408E57A4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v32 - 8) + 24))(v30, v31, v32);
  return a1;
}

_BYTE *initializeWithTake for TranscriptProtoSystemPromptResolutionUserAction(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  _BYTE *v21;
  uint64_t v22;

  v6 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA328);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 6:
        v14 = sub_2408E57A4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a1, a2, v14);
        swift_storeEnumTagMultiPayload();
        break;
      case 5:
        *a1 = *a2;
        v15 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
        v16 = &a1[v15];
        v17 = &a2[v15];
        v18 = sub_2408E57A4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
        swift_storeEnumTagMultiPayload();
        break;
      case 1:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v10 = *(int *)(type metadata accessor for ToolKitProtoTypedValue(0) + 20);
        v11 = &a1[v10];
        v12 = &a2[v10];
        v13 = sub_2408E57A4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v7 + 64));
        break;
    }
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v19 = *(int *)(a3 + 20);
  v20 = &a1[v19];
  v21 = &a2[v19];
  v22 = sub_2408E57A4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  return a1;
}

_BYTE *assignWithTake for TranscriptProtoSystemPromptResolutionUserAction(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_BYTE *, uint64_t, uint64_t);
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  uint64_t v15;
  size_t v16;
  int EnumCaseMultiPayload;
  uint64_t v18;
  _BYTE *v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  _BYTE *v35;
  uint64_t v36;

  v6 = type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      if (a1 == a2)
        goto LABEL_20;
      sub_240388AE4((uint64_t)a1, type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      switch(EnumCaseMultiPayload)
      {
        case 6:
          v32 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(a1, a2, v32);
          swift_storeEnumTagMultiPayload();
          goto LABEL_20;
        case 5:
          *a1 = *a2;
          v33 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
          v34 = &a1[v33];
          v35 = &a2[v33];
          v36 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v34, v35, v36);
          swift_storeEnumTagMultiPayload();
          goto LABEL_20;
        case 1:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          v18 = *(int *)(type metadata accessor for ToolKitProtoTypedValue(0) + 20);
          v19 = &a1[v18];
          v20 = &a2[v18];
          v21 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
          swift_storeEnumTagMultiPayload();
          goto LABEL_20;
      }
      v16 = *(_QWORD *)(v7 + 64);
      goto LABEL_10;
    }
    sub_240388AE4((uint64_t)a1, type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum);
LABEL_9:
    v16 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256FFA328) - 8) + 64);
LABEL_10:
    memcpy(a1, a2, v16);
    goto LABEL_20;
  }
  if (v10)
    goto LABEL_9;
  v11 = swift_getEnumCaseMultiPayload();
  switch(v11)
  {
    case 6:
      v22 = sub_2408E57A4();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(a1, a2, v22);
      swift_storeEnumTagMultiPayload();
      break;
    case 5:
      *a1 = *a2;
      v23 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
      v24 = &a1[v23];
      v25 = &a2[v23];
      v26 = sub_2408E57A4();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
      swift_storeEnumTagMultiPayload();
      break;
    case 1:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v12 = *(int *)(type metadata accessor for ToolKitProtoTypedValue(0) + 20);
      v13 = &a1[v12];
      v14 = &a2[v12];
      v15 = sub_2408E57A4();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(v7 + 64));
      break;
  }
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_20:
  v27 = *(int *)(a3 + 20);
  v28 = &a1[v27];
  v29 = &a2[v27];
  v30 = sub_2408E57A4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoSystemPromptResolutionUserAction()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406770A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_9Tm(a1, a2, a3, &qword_256FFA328);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoSystemPromptResolutionUserAction()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406770C0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_10Tm(a1, a2, a3, a4, &qword_256FFA328);
}

void sub_2406770CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240408100(a1, a2, a3, qword_257007860, (void (*)(uint64_t))type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoSystemPromptResolutionUserActionEnum(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 6:
        v14 = sub_2408E57A4();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
        swift_storeEnumTagMultiPayload();
        break;
      case 5:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v15 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
        v16 = (char *)a1 + v15;
        v17 = (char *)a2 + v15;
        v18 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
        swift_storeEnumTagMultiPayload();
        break;
      case 1:
        v8 = *a2;
        if ((~*a2 & 0xF000000000000007) != 0)
          swift_retain();
        *a1 = v8;
        v9 = *(int *)(type metadata accessor for ToolKitProtoTypedValue(0) + 20);
        v10 = (char *)a1 + v9;
        v11 = (char *)a2 + v9;
        v12 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for TranscriptProtoSystemPromptResolutionUserActionEnum(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result != 6)
  {
    if ((_DWORD)result == 5)
    {
      v3 = type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0);
    }
    else
    {
      if ((_DWORD)result != 1)
        return result;
      if ((~*a1 & 0xF000000000000007) != 0)
        swift_release();
      v3 = type metadata accessor for ToolKitProtoTypedValue(0);
    }
    a1 = (_QWORD *)((char *)a1 + *(int *)(v3 + 20));
  }
  v4 = sub_2408E57A4();
  return (*(uint64_t (**)(_QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
}

_BYTE *initializeWithCopy for TranscriptProtoSystemPromptResolutionUserActionEnum(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 6:
      v12 = sub_2408E57A4();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
      swift_storeEnumTagMultiPayload();
      break;
    case 5:
      *a1 = *a2;
      v13 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
      v14 = &a1[v13];
      v15 = &a2[v13];
      v16 = sub_2408E57A4();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
      swift_storeEnumTagMultiPayload();
      break;
    case 1:
      v7 = *(_QWORD *)a2;
      if ((~*(_QWORD *)a2 & 0xF000000000000007) != 0)
        swift_retain();
      *(_QWORD *)a1 = v7;
      v8 = *(int *)(type metadata accessor for ToolKitProtoTypedValue(0) + 20);
      v9 = &a1[v8];
      v10 = &a2[v8];
      v11 = sub_2408E57A4();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_BYTE *assignWithCopy for TranscriptProtoSystemPromptResolutionUserActionEnum(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;

  if (a1 != a2)
  {
    sub_240388AE4((uint64_t)a1, type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 6:
        v12 = sub_2408E57A4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
        swift_storeEnumTagMultiPayload();
        break;
      case 5:
        *a1 = *a2;
        v13 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
        v14 = &a1[v13];
        v15 = &a2[v13];
        v16 = sub_2408E57A4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
        swift_storeEnumTagMultiPayload();
        break;
      case 1:
        v7 = *(_QWORD *)a2;
        if ((~*(_QWORD *)a2 & 0xF000000000000007) != 0)
          swift_retain();
        *(_QWORD *)a1 = v7;
        v8 = *(int *)(type metadata accessor for ToolKitProtoTypedValue(0) + 20);
        v9 = &a1[v8];
        v10 = &a2[v8];
        v11 = sub_2408E57A4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

_BYTE *initializeWithTake for TranscriptProtoSystemPromptResolutionUserActionEnum(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  uint64_t v15;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 6:
      v11 = sub_2408E57A4();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
      swift_storeEnumTagMultiPayload();
      break;
    case 5:
      *a1 = *a2;
      v12 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
      v13 = &a1[v12];
      v14 = &a2[v12];
      v15 = sub_2408E57A4();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
      swift_storeEnumTagMultiPayload();
      break;
    case 1:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v7 = *(int *)(type metadata accessor for ToolKitProtoTypedValue(0) + 20);
      v8 = &a1[v7];
      v9 = &a2[v7];
      v10 = sub_2408E57A4();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_BYTE *assignWithTake for TranscriptProtoSystemPromptResolutionUserActionEnum(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  uint64_t v15;

  if (a1 != a2)
  {
    sub_240388AE4((uint64_t)a1, type metadata accessor for TranscriptProtoSystemPromptResolutionUserActionEnum);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 6:
        v11 = sub_2408E57A4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
        swift_storeEnumTagMultiPayload();
        break;
      case 5:
        *a1 = *a2;
        v12 = *(int *)(type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(0) + 20);
        v13 = &a1[v12];
        v14 = &a2[v12];
        v15 = sub_2408E57A4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
        swift_storeEnumTagMultiPayload();
        break;
      case 1:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v7 = *(int *)(type metadata accessor for ToolKitProtoTypedValue(0) + 20);
        v8 = &a1[v7];
        v9 = &a2[v7];
        v10 = sub_2408E57A4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_240677830()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = type metadata accessor for ToolKitProtoTypedValue(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for TranscriptProtoSystemPromptResolutionRequirementResolution(319);
    if (v2 <= 0x3F)
    {
      result = sub_2408E57A4();
      if (v3 <= 0x3F)
      {
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoSystemPromptResolutionActionCancellation()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoSystemPromptResolutionActionCancellation()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for TranscriptProtoSystemPromptResolutionActionCancellation(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257007990);
}

uint64_t *_s23LighthouseDataProcessor26ToolKitProtoTypeIdentifierV9PrimitiveVwCP_0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  _BYTE *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v5 = *(int *)(a3 + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_2408E57A4();
    (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

_BYTE *_s23LighthouseDataProcessor26ToolKitProtoTypeIdentifierV9PrimitiveVwcp_0(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_2408E57A4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_BYTE *_s23LighthouseDataProcessor26ToolKitProtoTypeIdentifierV9PrimitiveVwtk_0(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_2408E57A4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoSystemPromptResolutionRequirementResolution()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240677A68(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  BOOL v5;
  int v6;
  uint64_t v10;

  if ((_DWORD)a2 == 254)
  {
    v4 = *a1;
    v5 = v4 >= 2;
    v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5)
      return (v6 + 1);
    else
      return 0;
  }
  else
  {
    v10 = sub_2408E57A4();
    return (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoSystemPromptResolutionRequirementResolution()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_BYTE *sub_240677AF0(_BYTE *result, uint64_t a2, int a3, uint64_t a4)
{
  _BYTE *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *result = a2 + 1;
  }
  else
  {
    v7 = sub_2408E57A4();
    return (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_240677B60()
{
  return sub_2406F5810();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoVariableSetter()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240677B78(char *a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_77Tm(a1, a2, a3, &qword_256FFA3A8);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoVariableSetter()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_240677B90(char *a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_78Tm(a1, a2, a3, a4, &qword_256FFA3A8);
}

uint64_t *_s23LighthouseDataProcessor41TranscriptProtoUpdateParametersExpressionVwCP_0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(_QWORD *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v25;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = type metadata accessor for TranscriptProtoStatementID(0);
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      *(_DWORD *)v9 = *(_DWORD *)v10;
      v15 = v10[2];
      v9[1] = v10[1];
      v9[2] = v15;
      v16 = *(int *)(v11 + 24);
      v17 = (char *)v9 + v16;
      v25 = (char *)v10 + v16;
      v18 = sub_2408E57A4();
      v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
      swift_bridgeObjectRetain();
      v19(v17, v25, v18);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v20 = *(int *)(a3 + 24);
    v21 = (char *)v7 + v20;
    v22 = (char *)a2 + v20;
    v23 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
  }
  return v7;
}

uint64_t _s23LighthouseDataProcessor41TranscriptProtoUpdateParametersExpressionVwxx_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    v6 = v4 + *(int *)(v5 + 24);
    v7 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  v8 = a1 + *(int *)(a2 + 24);
  v9 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
}

_QWORD *_s23LighthouseDataProcessor41TranscriptProtoUpdateParametersExpressionVwcp_0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(_QWORD *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v23;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for TranscriptProtoStatementID(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  if (v11(v8, 1, v9))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v7 = *(_DWORD *)v8;
    v13 = v8[2];
    v7[1] = v8[1];
    v7[2] = v13;
    v14 = *(int *)(v9 + 24);
    v15 = (char *)v7 + v14;
    v23 = (char *)v8 + v14;
    v16 = sub_2408E57A4();
    v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
    swift_bridgeObjectRetain();
    v17(v15, v23, v16);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v18 = *(int *)(a3 + 24);
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
  return a1;
}

_QWORD *_s23LighthouseDataProcessor41TranscriptProtoUpdateParametersExpressionVwtk_0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _DWORD *v7;
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (_DWORD *)((char *)a1 + v6);
  v8 = (_DWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for TranscriptProtoStatementID(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    *v7 = *v8;
    *(_OWORD *)(v7 + 2) = *(_OWORD *)(v8 + 2);
    v12 = *(int *)(v9 + 24);
    v13 = (char *)v7 + v12;
    v14 = (char *)v8 + v12;
    v15 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v16 = *(int *)(a3 + 24);
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoVariableStep()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24067802C(char *a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_77Tm(a1, a2, a3, &qword_256FFA300);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoVariableStep()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_240678044(char *a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_78Tm(a1, a2, a3, a4, &qword_256FFA300);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTFlatExprCallVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTFlatExprCallVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTFlatExprSayVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTFlatExprSayVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t destroy for TranscriptProtoASTFlatExprPickVariant(uint64_t a1, uint64_t a2)
{
  return sub_2406C4A6C(a1, a2, type metadata accessor for TranscriptProtoASTPickType);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTFlatExprPickVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406780BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_15Tm(a1, a2, a3, &qword_257000D08);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTFlatExprPickVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406780D4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_16Tm(a1, a2, a3, a4, &qword_257000D08);
}

void sub_2406780E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2404090B4(a1, a2, a3, (uint64_t)&unk_240906518, qword_257007D18, (void (*)(uint64_t))type metadata accessor for TranscriptProtoASTPickType);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTFlatExprConfirmVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTFlatExprConfirmVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTFlatExprUndoVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTFlatExprUndoVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTFlatExprRejectVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTFlatExprRejectVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTFlatExprCancelVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTFlatExprCancelVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTFlatExprContinuePlanningVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTFlatExprContinuePlanningVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for TranscriptProtoASTFlatExprContinuePlanningVariant(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257007FE8);
}

_QWORD *initializeBufferWithCopyOfBuffer for TranscriptProtoASTPickType(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    v5 = *(int *)(a3 + 20);
    v6 = a1 + v5;
    v7 = (uint64_t)a2 + v5;
    v8 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t initializeWithCopy for TranscriptProtoASTPickType(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(int *)(a3 + 20);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

uint64_t assignWithCopy for TranscriptProtoASTPickType(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v4;
  v5 = *(int *)(a3 + 20);
  v6 = a1 + v5;
  v7 = (uint64_t)a2 + v5;
  v8 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 24))(v6, v7, v8);
  return a1;
}

uint64_t initializeWithTake for TranscriptProtoASTPickType(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(int *)(a3 + 20);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for TranscriptProtoASTPickType(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(int *)(a3 + 20);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTPickType()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406783DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;

  if ((_DWORD)a2 == 253)
  {
    v4 = *(unsigned __int8 *)(a1 + 8);
    if (v4 <= 1)
      return 0;
    else
      return v4 ^ 0xFF;
  }
  else
  {
    v8 = sub_2408E57A4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTPickType()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24067845C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 253)
  {
    *(_BYTE *)(result + 8) = ~(_BYTE)a2;
  }
  else
  {
    v7 = sub_2408E57A4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_2406784CC()
{
  return sub_2406F5810();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoAstpickTypeEnum(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoAstpickTypeEnum(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_240678564(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_24067856C(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for TranscriptProtoAstpickTypeEnum()
{
  return &type metadata for TranscriptProtoAstpickTypeEnum;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTFlatExprSearchVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTFlatExprSearchVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406785C0()
{
  return sub_2406F8B78();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTFlatExprUpdateParametersVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTFlatExprUpdateParametersVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTFlatExprGetMentionedApps()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTFlatExprGetMentionedApps()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for TranscriptProtoASTFlatExprGetMentionedApps(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257008230);
}

uint64_t initializeBufferWithCopyOfBuffer for TranscriptProtoASTFlatExprUpdateVariant(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(uint64_t *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, char *, uint64_t);
  void (*v55)(char *, char *, uint64_t);
  void (*v56)(char *, char *, uint64_t);
  void (*v57)(char *, char *, uint64_t);
  void (*v58)(char *, char *, uint64_t);
  void (*v59)(char *, char *, uint64_t);
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  char *v65;
  char *v66;
  char *v67;
  char *v68;
  char *v69;
  char *v70;
  char *v71;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    v7 = a1;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    v8 = a3[6];
    v9 = (_QWORD *)(a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = type metadata accessor for TranscriptProtoASTFlatValue(0);
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      v15 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v16 + 48))(v10, 1, v15))
      {
        v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
          case 6u:
          case 7u:
          case 8u:
            v18 = v10[1];
            *v9 = *v10;
            v9[1] = v18;
            swift_bridgeObjectRetain();
            goto LABEL_13;
          case 4u:
            *v9 = *v10;
            v19 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v60 = (char *)v10 + v19;
            v66 = (char *)v9 + v19;
            v51 = sub_2408E57A4();
            v54 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16);
            swift_bridgeObjectRetain();
            v54(v66, v60, v51);
            goto LABEL_13;
          case 5u:
            *v9 = *v10;
            v20 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v61 = (char *)v10 + v20;
            v67 = (char *)v9 + v20;
            v52 = sub_2408E57A4();
            v55 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 16);
            swift_bridgeObjectRetain();
            v55(v67, v61, v52);
            goto LABEL_13;
          case 9u:
            *(_DWORD *)v9 = *(_DWORD *)v10;
            v21 = v10[2];
            v9[1] = v10[1];
            v9[2] = v21;
            v22 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v62 = (char *)v10 + v22;
            v68 = (char *)v9 + v22;
            v53 = sub_2408E57A4();
            v56 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 16);
            swift_bridgeObjectRetain();
            v56(v68, v62, v53);
LABEL_13:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v9, v10, *(_QWORD *)(v16 + 64));
            break;
        }
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v9, 0, 1, v15);
      }
      v23 = *(int *)(v11 + 20);
      v24 = (char *)v9 + v23;
      v25 = (char *)v10 + v23;
      v26 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v27 = a3[7];
    v28 = (_QWORD *)(v7 + v27);
    v29 = (uint64_t *)((char *)a2 + v27);
    if (v13((uint64_t *)((char *)a2 + v27), 1, v11))
    {
      v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      v31 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      v32 = *(_QWORD *)(v31 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v32 + 48))(v29, 1, v31))
      {
        v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
        memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
          case 6u:
          case 7u:
          case 8u:
            v34 = v29[1];
            *v28 = *v29;
            v28[1] = v34;
            swift_bridgeObjectRetain();
            goto LABEL_26;
          case 4u:
            *v28 = *v29;
            v35 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v63 = (char *)v29 + v35;
            v69 = (char *)v28 + v35;
            v36 = sub_2408E57A4();
            v57 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16);
            swift_bridgeObjectRetain();
            v57(v69, v63, v36);
            goto LABEL_26;
          case 5u:
            *v28 = *v29;
            v37 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v64 = (char *)v29 + v37;
            v70 = (char *)v28 + v37;
            v38 = sub_2408E57A4();
            v58 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16);
            swift_bridgeObjectRetain();
            v58(v70, v64, v38);
            goto LABEL_26;
          case 9u:
            *(_DWORD *)v28 = *(_DWORD *)v29;
            v39 = v29[2];
            v28[1] = v29[1];
            v28[2] = v39;
            v40 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v65 = (char *)v29 + v40;
            v71 = (char *)v28 + v40;
            v41 = sub_2408E57A4();
            v59 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16);
            swift_bridgeObjectRetain();
            v59(v71, v65, v41);
LABEL_26:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v28, v29, *(_QWORD *)(v32 + 64));
            break;
        }
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v28, 0, 1, v31);
      }
      v42 = *(int *)(v11 + 20);
      v43 = (char *)v28 + v42;
      v44 = (char *)v29 + v42;
      v45 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v43, v44, v45);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v28, 0, 1, v11);
    }
    v46 = a3[8];
    v47 = v7 + v46;
    v48 = (uint64_t)a2 + v46;
    v49 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(v47, v48, v49);
  }
  return v7;
}

uint64_t destroy for TranscriptProtoASTFlatExprUpdateVariant(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[6];
  v5 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48);
  if (!v6(v4, 1, v5))
  {
    v7 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v4, 1, v7))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 3u:
        case 6u:
        case 7u:
        case 8u:
          swift_bridgeObjectRelease();
          break;
        case 4u:
          swift_bridgeObjectRelease();
          v8 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          goto LABEL_8;
        case 5u:
          swift_bridgeObjectRelease();
          v8 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          goto LABEL_8;
        case 9u:
          swift_bridgeObjectRelease();
          v8 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_8:
          v9 = v4 + v8;
          v10 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
          break;
        default:
          break;
      }
    }
    v11 = v4 + *(int *)(v5 + 20);
    v12 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  }
  v13 = a1 + a2[7];
  if (!v6(v13, 1, v5))
  {
    v14 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v13, 1, v14))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 3u:
        case 6u:
        case 7u:
        case 8u:
          swift_bridgeObjectRelease();
          break;
        case 4u:
          swift_bridgeObjectRelease();
          v15 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          goto LABEL_17;
        case 5u:
          swift_bridgeObjectRelease();
          v15 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          goto LABEL_17;
        case 9u:
          swift_bridgeObjectRelease();
          v15 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_17:
          v16 = v13 + v15;
          v17 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
          break;
        default:
          break;
      }
    }
    v18 = v13 + *(int *)(v5 + 20);
    v19 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18, v19);
  }
  v20 = a1 + a2[8];
  v21 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v20, v21);
}

uint64_t initializeWithCopy for TranscriptProtoASTFlatExprUpdateVariant(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(_QWORD *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, char *, uint64_t);
  void (*v53)(char *, char *, uint64_t);
  void (*v54)(char *, char *, uint64_t);
  void (*v55)(char *, char *, uint64_t);
  void (*v56)(char *, char *, uint64_t);
  void (*v57)(char *, char *, uint64_t);
  char *v58;
  char *v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  char *v65;
  char *v66;
  char *v67;
  char *v68;
  char *v69;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = a3[6];
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  v9 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  if (v11(v8, 1, v9))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v13 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v14 + 48))(v8, 1, v13))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 3u:
        case 6u:
        case 7u:
        case 8u:
          v16 = v8[1];
          *v7 = *v8;
          v7[1] = v16;
          swift_bridgeObjectRetain();
          goto LABEL_11;
        case 4u:
          *v7 = *v8;
          v17 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          v58 = (char *)v8 + v17;
          v64 = (char *)v7 + v17;
          v49 = sub_2408E57A4();
          v52 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 16);
          swift_bridgeObjectRetain();
          v52(v64, v58, v49);
          goto LABEL_11;
        case 5u:
          *v7 = *v8;
          v18 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          v59 = (char *)v8 + v18;
          v65 = (char *)v7 + v18;
          v50 = sub_2408E57A4();
          v53 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 16);
          swift_bridgeObjectRetain();
          v53(v65, v59, v50);
          goto LABEL_11;
        case 9u:
          *(_DWORD *)v7 = *(_DWORD *)v8;
          v19 = v8[2];
          v7[1] = v8[1];
          v7[2] = v19;
          v20 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          v60 = (char *)v8 + v20;
          v66 = (char *)v7 + v20;
          v51 = sub_2408E57A4();
          v54 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16);
          swift_bridgeObjectRetain();
          v54(v66, v60, v51);
LABEL_11:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v7, v8, *(_QWORD *)(v14 + 64));
          break;
      }
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v7, 0, 1, v13);
    }
    v21 = *(int *)(v9 + 20);
    v22 = (char *)v7 + v21;
    v23 = (char *)v8 + v21;
    v24 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v25 = a3[7];
  v26 = (_QWORD *)(a1 + v25);
  v27 = (_QWORD *)(a2 + v25);
  if (v11((_QWORD *)(a2 + v25), 1, v9))
  {
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    v29 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    v30 = *(_QWORD *)(v29 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v30 + 48))(v27, 1, v29))
    {
      v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 3u:
        case 6u:
        case 7u:
        case 8u:
          v32 = v27[1];
          *v26 = *v27;
          v26[1] = v32;
          swift_bridgeObjectRetain();
          goto LABEL_24;
        case 4u:
          *v26 = *v27;
          v33 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          v61 = (char *)v27 + v33;
          v67 = (char *)v26 + v33;
          v34 = sub_2408E57A4();
          v55 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16);
          swift_bridgeObjectRetain();
          v55(v67, v61, v34);
          goto LABEL_24;
        case 5u:
          *v26 = *v27;
          v35 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          v62 = (char *)v27 + v35;
          v68 = (char *)v26 + v35;
          v36 = sub_2408E57A4();
          v56 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16);
          swift_bridgeObjectRetain();
          v56(v68, v62, v36);
          goto LABEL_24;
        case 9u:
          *(_DWORD *)v26 = *(_DWORD *)v27;
          v37 = v27[2];
          v26[1] = v27[1];
          v26[2] = v37;
          v38 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          v63 = (char *)v27 + v38;
          v69 = (char *)v26 + v38;
          v39 = sub_2408E57A4();
          v57 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16);
          swift_bridgeObjectRetain();
          v57(v69, v63, v39);
LABEL_24:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v26, v27, *(_QWORD *)(v30 + 64));
          break;
      }
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v26, 0, 1, v29);
    }
    v40 = *(int *)(v9 + 20);
    v41 = (char *)v26 + v40;
    v42 = (char *)v27 + v40;
    v43 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v26, 0, 1, v9);
  }
  v44 = a3[8];
  v45 = a1 + v44;
  v46 = a2 + v44;
  v47 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
  return a1;
}

uint64_t assignWithCopy for TranscriptProtoASTFlatExprUpdateVariant(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(_QWORD *, uint64_t, uint64_t);
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  int v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(_QWORD *, uint64_t, uint64_t);
  int v61;
  int v62;
  size_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void (*v103)(char *, char *, uint64_t);
  uint64_t v104;
  uint64_t v105;
  void (*v106)(char *, char *, uint64_t);
  uint64_t v107;
  uint64_t v108;
  void (*v109)(char *, char *, uint64_t);
  void (*v110)(char *, char *, uint64_t);
  void (*v111)(char *, char *, uint64_t);
  void (*v112)(char *, char *, uint64_t);
  char *v113;
  char *v114;
  char *v115;
  char *v116;
  char *v117;
  char *v118;
  char *v119;
  char *v120;
  char *v121;
  void (*v122)(char *, char *, uint64_t);
  void (*v123)(char *, char *, uint64_t);
  void (*v124)(char *, char *, uint64_t);
  void (*v125)(char *, char *, uint64_t);
  void (*v126)(char *, char *, uint64_t);
  void (*v127)(char *, char *, uint64_t);
  char *v128;
  char *v129;
  char *v130;
  char *v131;
  char *v132;
  char *v133;
  void (*v134)(char *, char *, uint64_t);
  void (*v135)(char *, char *, uint64_t);
  void (*v136)(char *, char *, uint64_t);
  char *v137;
  char *v138;
  char *v139;
  uint64_t v140;
  char *v141;
  char *v142;
  char *v143;
  char *v144;
  char *v145;
  char *v146;
  char *v147;
  char *v148;
  char *v149;
  char *v150;
  char *v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  char *v161;
  char *v162;
  char *v163;
  char *v164;
  char *v165;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = a3[6];
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  v9 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (v13)
    {
      sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatValue);
      goto LABEL_7;
    }
    v153 = v10;
    v18 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    v140 = *(_QWORD *)(v18 - 8);
    v19 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v140 + 48);
    v20 = v19(v7, 1, v18);
    v21 = v19(v8, 1, v18);
    if (v20)
    {
      if (!v21)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
          case 6u:
          case 7u:
          case 8u:
            *v7 = *v8;
            v7[1] = v8[1];
            swift_bridgeObjectRetain();
            goto LABEL_31;
          case 4u:
            *v7 = *v8;
            v36 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v113 = (char *)v8 + v36;
            v119 = (char *)v7 + v36;
            v37 = sub_2408E57A4();
            v38 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16);
            swift_bridgeObjectRetain();
            v38(v119, v113, v37);
            goto LABEL_31;
          case 5u:
            *v7 = *v8;
            v39 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v114 = (char *)v8 + v39;
            v120 = (char *)v7 + v39;
            v40 = sub_2408E57A4();
            v41 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16);
            swift_bridgeObjectRetain();
            v41(v120, v114, v40);
            goto LABEL_31;
          case 9u:
            *(_DWORD *)v7 = *(_DWORD *)v8;
            v7[1] = v8[1];
            v7[2] = v8[2];
            v42 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v115 = (char *)v8 + v42;
            v121 = (char *)v7 + v42;
            v43 = sub_2408E57A4();
            v44 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16);
            swift_bridgeObjectRetain();
            v44(v121, v115, v43);
LABEL_31:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v7, v8, *(_QWORD *)(v140 + 64));
            break;
        }
        v10 = v153;
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v140 + 56))(v7, 0, 1, v18);
        goto LABEL_33;
      }
    }
    else
    {
      if (!v21)
      {
        v10 = v153;
        if (a1 != a2)
        {
          sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoAstflatValueEnum);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              *v7 = *v8;
              v7[1] = v8[1];
              swift_bridgeObjectRetain();
              swift_storeEnumTagMultiPayload();
              break;
            case 4u:
              *v7 = *v8;
              v92 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              v137 = (char *)v8 + v92;
              v147 = (char *)v7 + v92;
              v93 = sub_2408E57A4();
              v125 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v93 - 8) + 16);
              swift_bridgeObjectRetain();
              v94 = v93;
              v10 = v153;
              v125(v147, v137, v94);
              swift_storeEnumTagMultiPayload();
              break;
            case 5u:
              *v7 = *v8;
              v95 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              v138 = (char *)v8 + v95;
              v148 = (char *)v7 + v95;
              v96 = sub_2408E57A4();
              v126 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v96 - 8) + 16);
              swift_bridgeObjectRetain();
              v97 = v96;
              v10 = v153;
              v126(v148, v138, v97);
              swift_storeEnumTagMultiPayload();
              break;
            case 9u:
              *(_DWORD *)v7 = *(_DWORD *)v8;
              v7[1] = v8[1];
              v7[2] = v8[2];
              v98 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              v139 = (char *)v8 + v98;
              v149 = (char *)v7 + v98;
              v99 = sub_2408E57A4();
              v127 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 16);
              swift_bridgeObjectRetain();
              v100 = v99;
              v10 = v153;
              v127(v149, v139, v100);
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v7, v8, *(_QWORD *)(v140 + 64));
              break;
          }
        }
        goto LABEL_33;
      }
      sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoAstflatValueEnum);
    }
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    v10 = v153;
LABEL_33:
    v45 = *(int *)(v9 + 20);
    v46 = (char *)v7 + v45;
    v47 = (char *)v8 + v45;
    v48 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 24))(v46, v47, v48);
    goto LABEL_34;
  }
  if (v13)
  {
LABEL_7:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_34;
  }
  v14 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v15 + 48))(v8, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 3u:
      case 6u:
      case 7u:
      case 8u:
        *v7 = *v8;
        v7[1] = v8[1];
        swift_bridgeObjectRetain();
        goto LABEL_24;
      case 4u:
        *v7 = *v8;
        v23 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        v116 = (char *)v8 + v23;
        v128 = (char *)v7 + v23;
        v154 = v10;
        v24 = sub_2408E57A4();
        v110 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
        swift_bridgeObjectRetain();
        v25 = v24;
        v10 = v154;
        v110(v128, v116, v25);
        goto LABEL_24;
      case 5u:
        *v7 = *v8;
        v26 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        v117 = (char *)v8 + v26;
        v129 = (char *)v7 + v26;
        v155 = v10;
        v27 = sub_2408E57A4();
        v111 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
        swift_bridgeObjectRetain();
        v28 = v27;
        v10 = v155;
        v111(v129, v117, v28);
        goto LABEL_24;
      case 9u:
        *(_DWORD *)v7 = *(_DWORD *)v8;
        v7[1] = v8[1];
        v7[2] = v8[2];
        v29 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        v118 = (char *)v8 + v29;
        v130 = (char *)v7 + v29;
        v156 = v10;
        v30 = sub_2408E57A4();
        v112 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16);
        swift_bridgeObjectRetain();
        v31 = v30;
        v10 = v156;
        v112(v130, v118, v31);
LABEL_24:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v7, v8, *(_QWORD *)(v15 + 64));
        break;
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v7, 0, 1, v14);
  }
  v32 = *(int *)(v9 + 20);
  v33 = (char *)v7 + v32;
  v34 = (char *)v8 + v32;
  v35 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_34:
  v49 = a3[7];
  v50 = (_QWORD *)(a1 + v49);
  v51 = (_QWORD *)(a2 + v49);
  v52 = v11((_QWORD *)(a1 + v49), 1, v9);
  v53 = v11(v51, 1, v9);
  if (!v52)
  {
    if (v53)
    {
      sub_240388AE4((uint64_t)v50, type metadata accessor for TranscriptProtoASTFlatValue);
      goto LABEL_40;
    }
    v58 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    v59 = *(_QWORD *)(v58 - 8);
    v60 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v59 + 48);
    v61 = v60(v50, 1, v58);
    v62 = v60(v51, 1, v58);
    if (v61)
    {
      if (!v62)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
          case 6u:
          case 7u:
          case 8u:
            *v50 = *v51;
            v50[1] = v51[1];
            swift_bridgeObjectRetain();
            goto LABEL_65;
          case 4u:
            *v50 = *v51;
            v77 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v144 = (char *)v51 + v77;
            v160 = (char *)v50 + v77;
            v78 = sub_2408E57A4();
            v134 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v78 - 8) + 16);
            swift_bridgeObjectRetain();
            v134(v160, v144, v78);
            goto LABEL_65;
          case 5u:
            *v50 = *v51;
            v79 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v145 = (char *)v51 + v79;
            v161 = (char *)v50 + v79;
            v80 = sub_2408E57A4();
            v135 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v80 - 8) + 16);
            swift_bridgeObjectRetain();
            v135(v161, v145, v80);
            goto LABEL_65;
          case 9u:
            *(_DWORD *)v50 = *(_DWORD *)v51;
            v50[1] = v51[1];
            v50[2] = v51[2];
            v81 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v146 = (char *)v51 + v81;
            v162 = (char *)v50 + v81;
            v82 = sub_2408E57A4();
            v136 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v82 - 8) + 16);
            swift_bridgeObjectRetain();
            v136(v162, v146, v82);
LABEL_65:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v50, v51, *(_QWORD *)(v59 + 64));
            break;
        }
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v50, 0, 1, v58);
LABEL_67:
        v83 = *(int *)(v9 + 20);
        v84 = (char *)v50 + v83;
        v85 = (char *)v51 + v83;
        v86 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v86 - 8) + 24))(v84, v85, v86);
        goto LABEL_68;
      }
    }
    else
    {
      if (!v62)
      {
        if (a1 != a2)
        {
          sub_240388AE4((uint64_t)v50, type metadata accessor for TranscriptProtoAstflatValueEnum);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              *v50 = *v51;
              v50[1] = v51[1];
              swift_bridgeObjectRetain();
              swift_storeEnumTagMultiPayload();
              break;
            case 4u:
              *v50 = *v51;
              v101 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              v150 = (char *)v51 + v101;
              v163 = (char *)v50 + v101;
              v102 = sub_2408E57A4();
              v103 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v102 - 8) + 16);
              swift_bridgeObjectRetain();
              v103(v163, v150, v102);
              swift_storeEnumTagMultiPayload();
              break;
            case 5u:
              *v50 = *v51;
              v104 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              v151 = (char *)v51 + v104;
              v164 = (char *)v50 + v104;
              v105 = sub_2408E57A4();
              v106 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v105 - 8) + 16);
              swift_bridgeObjectRetain();
              v106(v164, v151, v105);
              swift_storeEnumTagMultiPayload();
              break;
            case 9u:
              *(_DWORD *)v50 = *(_DWORD *)v51;
              v50[1] = v51[1];
              v50[2] = v51[2];
              v107 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              v152 = (char *)v51 + v107;
              v165 = (char *)v50 + v107;
              v108 = sub_2408E57A4();
              v109 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v108 - 8) + 16);
              swift_bridgeObjectRetain();
              v109(v165, v152, v108);
              swift_storeEnumTagMultiPayload();
              break;
            default:
              v63 = *(_QWORD *)(v59 + 64);
              goto LABEL_50;
          }
        }
        goto LABEL_67;
      }
      sub_240388AE4((uint64_t)v50, type metadata accessor for TranscriptProtoAstflatValueEnum);
    }
    v63 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30) - 8) + 64);
LABEL_50:
    memcpy(v50, v51, v63);
    goto LABEL_67;
  }
  if (v53)
  {
LABEL_40:
    v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    goto LABEL_68;
  }
  v54 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  v55 = *(_QWORD *)(v54 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v55 + 48))(v51, 1, v54))
  {
    v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 3u:
      case 6u:
      case 7u:
      case 8u:
        *v50 = *v51;
        v50[1] = v51[1];
        swift_bridgeObjectRetain();
        goto LABEL_58;
      case 4u:
        *v50 = *v51;
        v64 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        v131 = (char *)v51 + v64;
        v141 = (char *)v50 + v64;
        v157 = v10;
        v65 = sub_2408E57A4();
        v122 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 16);
        swift_bridgeObjectRetain();
        v66 = v65;
        v10 = v157;
        v122(v141, v131, v66);
        goto LABEL_58;
      case 5u:
        *v50 = *v51;
        v67 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        v132 = (char *)v51 + v67;
        v142 = (char *)v50 + v67;
        v158 = v10;
        v68 = sub_2408E57A4();
        v123 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 16);
        swift_bridgeObjectRetain();
        v69 = v68;
        v10 = v158;
        v123(v142, v132, v69);
        goto LABEL_58;
      case 9u:
        *(_DWORD *)v50 = *(_DWORD *)v51;
        v50[1] = v51[1];
        v50[2] = v51[2];
        v70 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        v133 = (char *)v51 + v70;
        v143 = (char *)v50 + v70;
        v159 = v10;
        v71 = sub_2408E57A4();
        v124 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v71 - 8) + 16);
        swift_bridgeObjectRetain();
        v72 = v71;
        v10 = v159;
        v124(v143, v133, v72);
LABEL_58:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v50, v51, *(_QWORD *)(v55 + 64));
        break;
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v50, 0, 1, v54);
  }
  v73 = *(int *)(v9 + 20);
  v74 = (char *)v50 + v73;
  v75 = (char *)v51 + v73;
  v76 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v76 - 8) + 16))(v74, v75, v76);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v50, 0, 1, v9);
LABEL_68:
  v87 = a3[8];
  v88 = a1 + v87;
  v89 = a2 + v87;
  v90 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v90 - 8) + 24))(v88, v89, v90);
  return a1;
}

uint64_t initializeWithTake for TranscriptProtoASTFlatExprUpdateVariant(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _DWORD *v7;
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(_DWORD *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int EnumCaseMultiPayload;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _DWORD *v28;
  _DWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v53;
  char *v54;
  char *v55;
  char *v56;
  char *v57;
  char *v58;
  char *v59;
  char *v60;
  char *v61;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = a3[6];
  v7 = (_DWORD *)(a1 + v6);
  v8 = (_DWORD *)(a2 + v6);
  v9 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v13 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v14 + 48))(v8, 1, v13))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      switch(EnumCaseMultiPayload)
      {
        case 9:
          *v7 = *v8;
          *(_OWORD *)(v7 + 2) = *(_OWORD *)(v8 + 2);
          v19 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          v54 = (char *)v8 + v19;
          v57 = (char *)v7 + v19;
          v20 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v57, v54, v20);
          swift_storeEnumTagMultiPayload();
          break;
        case 5:
          *(_QWORD *)v7 = *(_QWORD *)v8;
          v21 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          v55 = (char *)v8 + v21;
          v58 = (char *)v7 + v21;
          v22 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v58, v55, v22);
          swift_storeEnumTagMultiPayload();
          break;
        case 4:
          *(_QWORD *)v7 = *(_QWORD *)v8;
          v17 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          v53 = (char *)v8 + v17;
          v56 = (char *)v7 + v17;
          v18 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v56, v53, v18);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v7, v8, *(_QWORD *)(v14 + 64));
          break;
      }
      (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v7, 0, 1, v13);
    }
    v23 = *(int *)(v9 + 20);
    v24 = (char *)v7 + v23;
    v25 = (char *)v8 + v23;
    v26 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v27 = a3[7];
  v28 = (_DWORD *)(a1 + v27);
  v29 = (_DWORD *)(a2 + v27);
  if (v11((_DWORD *)(a2 + v27), 1, v9))
  {
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    v31 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    v32 = *(_QWORD *)(v31 - 8);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v32 + 48))(v29, 1, v31))
    {
      v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      v34 = swift_getEnumCaseMultiPayload();
      switch(v34)
      {
        case 9:
          *v28 = *v29;
          *(_OWORD *)(v28 + 2) = *(_OWORD *)(v29 + 2);
          v38 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          v60 = (char *)v28 + v38;
          v39 = (char *)v29 + v38;
          v40 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v60, v39, v40);
          swift_storeEnumTagMultiPayload();
          break;
        case 5:
          *(_QWORD *)v28 = *(_QWORD *)v29;
          v41 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          v61 = (char *)v28 + v41;
          v42 = (char *)v29 + v41;
          v43 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v61, v42, v43);
          swift_storeEnumTagMultiPayload();
          break;
        case 4:
          *(_QWORD *)v28 = *(_QWORD *)v29;
          v35 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          v59 = (char *)v28 + v35;
          v36 = (char *)v29 + v35;
          v37 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v59, v36, v37);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v28, v29, *(_QWORD *)(v32 + 64));
          break;
      }
      (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v28, 0, 1, v31);
    }
    v44 = *(int *)(v9 + 20);
    v45 = (char *)v28 + v44;
    v46 = (char *)v29 + v44;
    v47 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(v45, v46, v47);
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v28, 0, 1, v9);
  }
  v48 = a3[8];
  v49 = a1 + v48;
  v50 = a2 + v48;
  v51 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(v49, v50, v51);
  return a1;
}

uint64_t assignWithTake for TranscriptProtoASTFlatExprUpdateVariant(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t);
  int v20;
  int v21;
  uint64_t v22;
  int EnumCaseMultiPayload;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t (*v69)(uint64_t, uint64_t, uint64_t);
  int v70;
  int v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  size_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  int v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  int *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = a3[6];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (v13)
    {
      sub_240388AE4(v7, type metadata accessor for TranscriptProtoASTFlatValue);
      goto LABEL_7;
    }
    v131 = v10;
    v135 = a3;
    v18 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    v130 = *(_QWORD *)(v18 - 8);
    v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v130 + 48);
    v20 = v19(v7, 1, v18);
    v21 = v19(v8, 1, v18);
    if (v20)
    {
      if (!v21)
      {
        v22 = v18;
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        v10 = v131;
        switch(EnumCaseMultiPayload)
        {
          case 9:
            *(_DWORD *)v7 = *(_DWORD *)v8;
            *(_OWORD *)(v7 + 8) = *(_OWORD *)(v8 + 8);
            v45 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v46 = v7 + v45;
            v47 = v8 + v45;
            v48 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v46, v47, v48);
            break;
          case 5:
            *(_QWORD *)v7 = *(_QWORD *)v8;
            v49 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v50 = v7 + v49;
            v51 = v8 + v49;
            v52 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v50, v51, v52);
            break;
          case 4:
            *(_QWORD *)v7 = *(_QWORD *)v8;
            v24 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v25 = v7 + v24;
            v26 = v8 + v24;
            v27 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
            break;
          default:
            v53 = v130;
            memcpy((void *)v7, (const void *)v8, *(_QWORD *)(v130 + 64));
            goto LABEL_35;
        }
        swift_storeEnumTagMultiPayload();
        v53 = v130;
LABEL_35:
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v53 + 56))(v7, 0, 1, v22);
        goto LABEL_36;
      }
    }
    else
    {
      if (!v21)
      {
        v10 = v131;
        if (a1 != a2)
        {
          sub_240388AE4(v7, type metadata accessor for TranscriptProtoAstflatValueEnum);
          v40 = swift_getEnumCaseMultiPayload();
          switch(v40)
          {
            case 9:
              *(_DWORD *)v7 = *(_DWORD *)v8;
              *(_OWORD *)(v7 + 8) = *(_OWORD *)(v8 + 8);
              v114 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              v115 = v7 + v114;
              v116 = v8 + v114;
              v117 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v117 - 8) + 32))(v115, v116, v117);
              swift_storeEnumTagMultiPayload();
              break;
            case 5:
              *(_QWORD *)v7 = *(_QWORD *)v8;
              v118 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              v119 = v7 + v118;
              v120 = v8 + v118;
              v121 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v121 - 8) + 32))(v119, v120, v121);
              swift_storeEnumTagMultiPayload();
              break;
            case 4:
              *(_QWORD *)v7 = *(_QWORD *)v8;
              v41 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              v42 = v7 + v41;
              v43 = v8 + v41;
              v44 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v42, v43, v44);
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy((void *)v7, (const void *)v8, *(_QWORD *)(v130 + 64));
              break;
          }
        }
        goto LABEL_36;
      }
      sub_240388AE4(v7, type metadata accessor for TranscriptProtoAstflatValueEnum);
    }
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
    memcpy((void *)v7, (const void *)v8, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    v10 = v131;
LABEL_36:
    v54 = *(int *)(v9 + 20);
    v55 = v7 + v54;
    v56 = v8 + v54;
    v57 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 40))(v55, v56, v57);
    a3 = v135;
    goto LABEL_37;
  }
  if (v13)
  {
LABEL_7:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
    memcpy((void *)v7, (const void *)v8, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_37;
  }
  v14 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v8, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
    memcpy((void *)v7, (const void *)v8, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v28 = swift_getEnumCaseMultiPayload();
    switch(v28)
    {
      case 9:
        *(_DWORD *)v7 = *(_DWORD *)v8;
        *(_OWORD *)(v7 + 8) = *(_OWORD *)(v8 + 8);
        v32 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        v133 = v8 + v32;
        v137 = v7 + v32;
        v33 = sub_2408E57A4();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v137, v133, v33);
        swift_storeEnumTagMultiPayload();
        break;
      case 5:
        *(_QWORD *)v7 = *(_QWORD *)v8;
        v34 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        v134 = v8 + v34;
        v138 = v7 + v34;
        v35 = sub_2408E57A4();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v138, v134, v35);
        swift_storeEnumTagMultiPayload();
        break;
      case 4:
        *(_QWORD *)v7 = *(_QWORD *)v8;
        v29 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        v132 = v8 + v29;
        v136 = v7 + v29;
        v30 = sub_2408E57A4();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v136, v132, v30);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy((void *)v7, (const void *)v8, *(_QWORD *)(v15 + 64));
        break;
    }
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v15 + 56))(v7, 0, 1, v14);
  }
  v36 = *(int *)(v9 + 20);
  v37 = v7 + v36;
  v38 = v8 + v36;
  v39 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_37:
  v58 = a3[7];
  v59 = a1 + v58;
  v60 = a2 + v58;
  v61 = v11(a1 + v58, 1, v9);
  v62 = v11(v60, 1, v9);
  if (!v61)
  {
    if (v62)
    {
      sub_240388AE4(v59, type metadata accessor for TranscriptProtoASTFlatValue);
      goto LABEL_43;
    }
    v67 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    v68 = *(_QWORD *)(v67 - 8);
    v69 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v68 + 48);
    v70 = v69(v59, 1, v67);
    v71 = v69(v60, 1, v67);
    if (v70)
    {
      if (!v71)
      {
        v72 = swift_getEnumCaseMultiPayload();
        switch(v72)
        {
          case 9:
            *(_DWORD *)v59 = *(_DWORD *)v60;
            *(_OWORD *)(v59 + 8) = *(_OWORD *)(v60 + 8);
            v97 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v98 = v59 + v97;
            v99 = v60 + v97;
            v100 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v100 - 8) + 32))(v98, v99, v100);
            swift_storeEnumTagMultiPayload();
            break;
          case 5:
            *(_QWORD *)v59 = *(_QWORD *)v60;
            v101 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v102 = v59 + v101;
            v103 = v60 + v101;
            v104 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v104 - 8) + 32))(v102, v103, v104);
            swift_storeEnumTagMultiPayload();
            break;
          case 4:
            *(_QWORD *)v59 = *(_QWORD *)v60;
            v73 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v74 = v59 + v73;
            v75 = v60 + v73;
            v76 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 32))(v74, v75, v76);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy((void *)v59, (const void *)v60, *(_QWORD *)(v68 + 64));
            break;
        }
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v68 + 56))(v59, 0, 1, v67);
        goto LABEL_72;
      }
    }
    else
    {
      if (!v71)
      {
        if (a1 == a2)
          goto LABEL_72;
        sub_240388AE4(v59, type metadata accessor for TranscriptProtoAstflatValueEnum);
        v92 = swift_getEnumCaseMultiPayload();
        switch(v92)
        {
          case 9:
            *(_DWORD *)v59 = *(_DWORD *)v60;
            *(_OWORD *)(v59 + 8) = *(_OWORD *)(v60 + 8);
            v122 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v123 = v59 + v122;
            v124 = v60 + v122;
            v125 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v125 - 8) + 32))(v123, v124, v125);
            swift_storeEnumTagMultiPayload();
            goto LABEL_72;
          case 5:
            *(_QWORD *)v59 = *(_QWORD *)v60;
            v126 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v127 = v59 + v126;
            v128 = v60 + v126;
            v129 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v129 - 8) + 32))(v127, v128, v129);
            swift_storeEnumTagMultiPayload();
            goto LABEL_72;
          case 4:
            *(_QWORD *)v59 = *(_QWORD *)v60;
            v93 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v94 = v59 + v93;
            v95 = v60 + v93;
            v96 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v96 - 8) + 32))(v94, v95, v96);
            swift_storeEnumTagMultiPayload();
            goto LABEL_72;
        }
        v81 = *(_QWORD *)(v68 + 64);
LABEL_57:
        memcpy((void *)v59, (const void *)v60, v81);
LABEL_72:
        v105 = *(int *)(v9 + 20);
        v106 = v59 + v105;
        v107 = v60 + v105;
        v108 = sub_2408E57A4();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v108 - 8) + 40))(v106, v107, v108);
        goto LABEL_73;
      }
      sub_240388AE4(v59, type metadata accessor for TranscriptProtoAstflatValueEnum);
    }
    v81 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30) - 8) + 64);
    goto LABEL_57;
  }
  if (v62)
  {
LABEL_43:
    v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
    memcpy((void *)v59, (const void *)v60, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
    goto LABEL_73;
  }
  v63 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  v64 = *(_QWORD *)(v63 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v64 + 48))(v60, 1, v63))
  {
    v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
    memcpy((void *)v59, (const void *)v60, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
  }
  else
  {
    v77 = swift_getEnumCaseMultiPayload();
    switch(v77)
    {
      case 9:
        *(_DWORD *)v59 = *(_DWORD *)v60;
        *(_OWORD *)(v59 + 8) = *(_OWORD *)(v60 + 8);
        v82 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        v140 = v59 + v82;
        v83 = v60 + v82;
        v84 = sub_2408E57A4();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v84 - 8) + 32))(v140, v83, v84);
        swift_storeEnumTagMultiPayload();
        break;
      case 5:
        *(_QWORD *)v59 = *(_QWORD *)v60;
        v85 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        v141 = v59 + v85;
        v86 = v60 + v85;
        v87 = sub_2408E57A4();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v87 - 8) + 32))(v141, v86, v87);
        swift_storeEnumTagMultiPayload();
        break;
      case 4:
        *(_QWORD *)v59 = *(_QWORD *)v60;
        v78 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        v139 = v59 + v78;
        v79 = v60 + v78;
        v80 = sub_2408E57A4();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v80 - 8) + 32))(v139, v79, v80);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy((void *)v59, (const void *)v60, *(_QWORD *)(v64 + 64));
        break;
    }
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v64 + 56))(v59, 0, 1, v63);
  }
  v88 = *(int *)(v9 + 20);
  v89 = v59 + v88;
  v90 = v60 + v88;
  v91 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 32))(v89, v90, v91);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(v59, 0, 1, v9);
LABEL_73:
  v109 = a3[8];
  v110 = a1 + v109;
  v111 = a2 + v109;
  v112 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v112 - 8) + 40))(v110, v111, v112);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTFlatExprUpdateVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24067B6FC(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 24);
    }
    else
    {
      v10 = sub_2408E57A4();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 32);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTFlatExprUpdateVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_24067B7AC(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 24);
    }
    else
    {
      v10 = sub_2408E57A4();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 32);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

void sub_24067B84C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2406F02B0(a1, a2, a3, MEMORY[0x24BEE0158] + 64, qword_2570082D0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoASTFlatValue);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTFlatExprPickOneVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTFlatExprPickOneVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTFlatExprResolveToolVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTFlatExprResolveToolVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoASTFlatExprDotVariant(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(_QWORD *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  void (*v36)(char *, char *, uint64_t);
  void (*v37)(char *, char *, uint64_t);
  void (*v38)(char *, char *, uint64_t);
  char *v39;
  char *v40;
  char *v41;
  char *v42;
  char *v43;
  char *v44;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = type metadata accessor for TranscriptProtoASTFlatValue(0);
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      v16 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      v17 = *(_QWORD *)(v16 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v17 + 48))(v10, 1, v16))
      {
        v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
          case 6u:
          case 7u:
          case 8u:
            v19 = v10[1];
            *v9 = *v10;
            v9[1] = v19;
            swift_bridgeObjectRetain();
            goto LABEL_13;
          case 4u:
            *v9 = *v10;
            v20 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v39 = (char *)v10 + v20;
            v42 = (char *)v9 + v20;
            v21 = sub_2408E57A4();
            v36 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
            swift_bridgeObjectRetain();
            v36(v42, v39, v21);
            goto LABEL_13;
          case 5u:
            *v9 = *v10;
            v22 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v40 = (char *)v10 + v22;
            v43 = (char *)v9 + v22;
            v23 = sub_2408E57A4();
            v37 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
            swift_bridgeObjectRetain();
            v37(v43, v40, v23);
            goto LABEL_13;
          case 9u:
            *(_DWORD *)v9 = *(_DWORD *)v10;
            v24 = v10[2];
            v9[1] = v10[1];
            v9[2] = v24;
            v25 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v41 = (char *)v10 + v25;
            v44 = (char *)v9 + v25;
            v26 = sub_2408E57A4();
            v38 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
            swift_bridgeObjectRetain();
            v38(v44, v41, v26);
LABEL_13:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v9, v10, *(_QWORD *)(v17 + 64));
            break;
        }
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v9, 0, 1, v16);
      }
      v27 = *(int *)(v11 + 20);
      v28 = (char *)v9 + v27;
      v29 = (char *)v10 + v27;
      v30 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v31 = *(int *)(a3 + 24);
    v32 = (char *)v4 + v31;
    v33 = (char *)a2 + v31;
    v34 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoASTFlatExprDotVariant(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    v6 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v4, 1, v6))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 3u:
        case 6u:
        case 7u:
        case 8u:
          swift_bridgeObjectRelease();
          break;
        case 4u:
          swift_bridgeObjectRelease();
          v7 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          goto LABEL_8;
        case 5u:
          swift_bridgeObjectRelease();
          v7 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          goto LABEL_8;
        case 9u:
          swift_bridgeObjectRelease();
          v7 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_8:
          v8 = v4 + v7;
          v9 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
          break;
        default:
          break;
      }
    }
    v10 = v4 + *(int *)(v5 + 20);
    v11 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  }
  v12 = a1 + *(int *)(a2 + 24);
  v13 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
}

_QWORD *initializeWithCopy for TranscriptProtoASTFlatExprDotVariant(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(_QWORD *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  void (*v34)(char *, char *, uint64_t);
  void (*v35)(char *, char *, uint64_t);
  void (*v36)(char *, char *, uint64_t);
  char *v37;
  char *v38;
  char *v39;
  char *v40;
  char *v41;
  char *v42;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v14 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    v15 = *(_QWORD *)(v14 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v15 + 48))(v9, 1, v14))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 3u:
        case 6u:
        case 7u:
        case 8u:
          v17 = v9[1];
          *v8 = *v9;
          v8[1] = v17;
          swift_bridgeObjectRetain();
          goto LABEL_11;
        case 4u:
          *v8 = *v9;
          v18 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          v37 = (char *)v9 + v18;
          v40 = (char *)v8 + v18;
          v19 = sub_2408E57A4();
          v34 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
          swift_bridgeObjectRetain();
          v34(v40, v37, v19);
          goto LABEL_11;
        case 5u:
          *v8 = *v9;
          v20 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          v38 = (char *)v9 + v20;
          v41 = (char *)v8 + v20;
          v21 = sub_2408E57A4();
          v35 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
          swift_bridgeObjectRetain();
          v35(v41, v38, v21);
          goto LABEL_11;
        case 9u:
          *(_DWORD *)v8 = *(_DWORD *)v9;
          v22 = v9[2];
          v8[1] = v9[1];
          v8[2] = v22;
          v23 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          v39 = (char *)v9 + v23;
          v42 = (char *)v8 + v23;
          v24 = sub_2408E57A4();
          v36 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
          swift_bridgeObjectRetain();
          v36(v42, v39, v24);
LABEL_11:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v8, v9, *(_QWORD *)(v15 + 64));
          break;
      }
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v8, 0, 1, v14);
    }
    v25 = *(int *)(v10 + 20);
    v26 = (char *)v8 + v25;
    v27 = (char *)v9 + v25;
    v28 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v29 = *(int *)(a3 + 24);
  v30 = (char *)a1 + v29;
  v31 = (char *)a2 + v29;
  v32 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v30, v31, v32);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoASTFlatExprDotVariant(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(_QWORD *, uint64_t, uint64_t);
  int v21;
  int v22;
  size_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, char *, uint64_t);
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, char *, uint64_t);
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *, char *, uint64_t);
  void (*v58)(char *, char *, uint64_t);
  void (*v59)(char *, char *, uint64_t);
  void (*v60)(char *, char *, uint64_t);
  char *v61;
  char *v62;
  char *v63;
  void (*v64)(char *, char *, uint64_t);
  void (*v65)(char *, char *, uint64_t);
  void (*v66)(char *, char *, uint64_t);
  char *v67;
  char *v68;
  char *v69;
  char *v70;
  char *v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  char *v76;
  char *v77;
  char *v78;
  char *v79;
  char *v80;
  char *v81;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (v13)
    {
      sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatValue);
      goto LABEL_7;
    }
    v18 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    v19 = *(_QWORD *)(v18 - 8);
    v20 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v19 + 48);
    v21 = v20(v7, 1, v18);
    v22 = v20(v8, 1, v18);
    if (v21)
    {
      if (!v22)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
          case 6u:
          case 7u:
          case 8u:
            *v7 = *v8;
            v7[1] = v8[1];
            swift_bridgeObjectRetain();
            goto LABEL_32;
          case 4u:
            *v7 = *v8;
            v34 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v70 = (char *)v8 + v34;
            v76 = (char *)v7 + v34;
            v35 = sub_2408E57A4();
            v64 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16);
            swift_bridgeObjectRetain();
            v64(v76, v70, v35);
            goto LABEL_32;
          case 5u:
            *v7 = *v8;
            v36 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v71 = (char *)v8 + v36;
            v77 = (char *)v7 + v36;
            v37 = sub_2408E57A4();
            v65 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16);
            swift_bridgeObjectRetain();
            v65(v77, v71, v37);
            goto LABEL_32;
          case 9u:
            *(_DWORD *)v7 = *(_DWORD *)v8;
            v7[1] = v8[1];
            v7[2] = v8[2];
            v38 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v72 = (char *)v8 + v38;
            v78 = (char *)v7 + v38;
            v39 = sub_2408E57A4();
            v66 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16);
            swift_bridgeObjectRetain();
            v66(v78, v72, v39);
LABEL_32:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v7, v8, *(_QWORD *)(v19 + 64));
            break;
        }
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v7, 0, 1, v18);
LABEL_34:
        v40 = *(int *)(v9 + 20);
        v41 = (char *)v7 + v40;
        v42 = (char *)v8 + v40;
        v43 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 24))(v41, v42, v43);
        goto LABEL_35;
      }
    }
    else
    {
      if (!v22)
      {
        if (a1 != a2)
        {
          sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoAstflatValueEnum);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              *v7 = *v8;
              v7[1] = v8[1];
              swift_bridgeObjectRetain();
              swift_storeEnumTagMultiPayload();
              break;
            case 4u:
              *v7 = *v8;
              v49 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              v73 = (char *)v8 + v49;
              v79 = (char *)v7 + v49;
              v50 = sub_2408E57A4();
              v51 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 16);
              swift_bridgeObjectRetain();
              v51(v79, v73, v50);
              swift_storeEnumTagMultiPayload();
              break;
            case 5u:
              *v7 = *v8;
              v52 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              v74 = (char *)v8 + v52;
              v80 = (char *)v7 + v52;
              v53 = sub_2408E57A4();
              v54 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 16);
              swift_bridgeObjectRetain();
              v54(v80, v74, v53);
              swift_storeEnumTagMultiPayload();
              break;
            case 9u:
              *(_DWORD *)v7 = *(_DWORD *)v8;
              v7[1] = v8[1];
              v7[2] = v8[2];
              v55 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              v75 = (char *)v8 + v55;
              v81 = (char *)v7 + v55;
              v56 = sub_2408E57A4();
              v57 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 16);
              swift_bridgeObjectRetain();
              v57(v81, v75, v56);
              swift_storeEnumTagMultiPayload();
              break;
            default:
              v23 = *(_QWORD *)(v19 + 64);
              goto LABEL_17;
          }
        }
        goto LABEL_34;
      }
      sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoAstflatValueEnum);
    }
    v23 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30) - 8) + 64);
LABEL_17:
    memcpy(v7, v8, v23);
    goto LABEL_34;
  }
  if (v13)
  {
LABEL_7:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_35;
  }
  v14 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v15 + 48))(v8, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 3u:
      case 6u:
      case 7u:
      case 8u:
        *v7 = *v8;
        v7[1] = v8[1];
        swift_bridgeObjectRetain();
        goto LABEL_25;
      case 4u:
        *v7 = *v8;
        v24 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        v61 = (char *)v8 + v24;
        v67 = (char *)v7 + v24;
        v25 = sub_2408E57A4();
        v58 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
        swift_bridgeObjectRetain();
        v58(v67, v61, v25);
        goto LABEL_25;
      case 5u:
        *v7 = *v8;
        v26 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        v62 = (char *)v8 + v26;
        v68 = (char *)v7 + v26;
        v27 = sub_2408E57A4();
        v59 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
        swift_bridgeObjectRetain();
        v59(v68, v62, v27);
        goto LABEL_25;
      case 9u:
        *(_DWORD *)v7 = *(_DWORD *)v8;
        v7[1] = v8[1];
        v7[2] = v8[2];
        v28 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        v63 = (char *)v8 + v28;
        v69 = (char *)v7 + v28;
        v29 = sub_2408E57A4();
        v60 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16);
        swift_bridgeObjectRetain();
        v60(v69, v63, v29);
LABEL_25:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v7, v8, *(_QWORD *)(v15 + 64));
        break;
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v7, 0, 1, v14);
  }
  v30 = *(int *)(v9 + 20);
  v31 = (char *)v7 + v30;
  v32 = (char *)v8 + v30;
  v33 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v31, v32, v33);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_35:
  v44 = *(int *)(a3 + 24);
  v45 = (char *)a1 + v44;
  v46 = (char *)a2 + v44;
  v47 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 24))(v45, v46, v47);
  return a1;
}

_OWORD *initializeWithTake for TranscriptProtoASTFlatExprDotVariant(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _DWORD *v7;
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int EnumCaseMultiPayload;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v34;
  char *v35;
  char *v36;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (_DWORD *)((char *)a1 + v6);
  v8 = (_DWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v12 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v12))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      switch(EnumCaseMultiPayload)
      {
        case 9:
          *v7 = *v8;
          *(_OWORD *)(v7 + 2) = *(_OWORD *)(v8 + 2);
          v19 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          v35 = (char *)v7 + v19;
          v20 = (char *)v8 + v19;
          v21 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v35, v20, v21);
          swift_storeEnumTagMultiPayload();
          break;
        case 5:
          *(_QWORD *)v7 = *(_QWORD *)v8;
          v22 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          v36 = (char *)v7 + v22;
          v23 = (char *)v8 + v22;
          v24 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v36, v23, v24);
          swift_storeEnumTagMultiPayload();
          break;
        case 4:
          *(_QWORD *)v7 = *(_QWORD *)v8;
          v16 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          v34 = (char *)v7 + v16;
          v17 = (char *)v8 + v16;
          v18 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v34, v17, v18);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v7, v8, *(_QWORD *)(v13 + 64));
          break;
      }
      (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v7, 0, 1, v12);
    }
    v25 = *(int *)(v9 + 20);
    v26 = (char *)v7 + v25;
    v27 = (char *)v8 + v25;
    v28 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v26, v27, v28);
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v29 = *(int *)(a3 + 24);
  v30 = (char *)a1 + v29;
  v31 = (char *)a2 + v29;
  v32 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v30, v31, v32);
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoASTFlatExprDotVariant(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t, uint64_t);
  int v22;
  int v23;
  int EnumCaseMultiPayload;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  size_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (uint64_t)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12((uint64_t)v9, 1, v10);
  if (!v13)
  {
    if (v14)
    {
      sub_240388AE4(v8, type metadata accessor for TranscriptProtoASTFlatValue);
      goto LABEL_7;
    }
    v19 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    v20 = *(_QWORD *)(v19 - 8);
    v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 48);
    v22 = v21(v8, 1, v19);
    v23 = v21((uint64_t)v9, 1, v19);
    if (v22)
    {
      if (!v23)
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        switch(EnumCaseMultiPayload)
        {
          case 9:
            *(_DWORD *)v8 = *(_DWORD *)v9;
            *(_OWORD *)(v8 + 8) = *(_OWORD *)(v9 + 8);
            v49 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v50 = v8 + v49;
            v51 = &v9[v49];
            v52 = sub_2408E57A4();
            (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v50, v51, v52);
            swift_storeEnumTagMultiPayload();
            break;
          case 5:
            *(_QWORD *)v8 = *(_QWORD *)v9;
            v53 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v54 = v8 + v53;
            v55 = &v9[v53];
            v56 = sub_2408E57A4();
            (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 32))(v54, v55, v56);
            swift_storeEnumTagMultiPayload();
            break;
          case 4:
            *(_QWORD *)v8 = *(_QWORD *)v9;
            v25 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v26 = v8 + v25;
            v27 = &v9[v25];
            v28 = sub_2408E57A4();
            (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v26, v27, v28);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy((void *)v8, v9, *(_QWORD *)(v20 + 64));
            break;
        }
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v20 + 56))(v8, 0, 1, v19);
        goto LABEL_36;
      }
    }
    else
    {
      if (!v23)
      {
        if (a1 == a2)
          goto LABEL_36;
        sub_240388AE4(v8, type metadata accessor for TranscriptProtoAstflatValueEnum);
        v44 = swift_getEnumCaseMultiPayload();
        switch(v44)
        {
          case 9:
            *(_DWORD *)v8 = *(_DWORD *)v9;
            *(_OWORD *)(v8 + 8) = *(_OWORD *)(v9 + 8);
            v66 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v67 = v8 + v66;
            v68 = &v9[v66];
            v69 = sub_2408E57A4();
            (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v69 - 8) + 32))(v67, v68, v69);
            swift_storeEnumTagMultiPayload();
            goto LABEL_36;
          case 5:
            *(_QWORD *)v8 = *(_QWORD *)v9;
            v70 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v71 = v8 + v70;
            v72 = &v9[v70];
            v73 = sub_2408E57A4();
            (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v73 - 8) + 32))(v71, v72, v73);
            swift_storeEnumTagMultiPayload();
            goto LABEL_36;
          case 4:
            *(_QWORD *)v8 = *(_QWORD *)v9;
            v45 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v46 = v8 + v45;
            v47 = &v9[v45];
            v48 = sub_2408E57A4();
            (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v46, v47, v48);
            swift_storeEnumTagMultiPayload();
            goto LABEL_36;
        }
        v33 = *(_QWORD *)(v20 + 64);
LABEL_21:
        memcpy((void *)v8, v9, v33);
LABEL_36:
        v57 = *(int *)(v10 + 20);
        v58 = v8 + v57;
        v59 = &v9[v57];
        v60 = sub_2408E57A4();
        (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 40))(v58, v59, v60);
        goto LABEL_37;
      }
      sub_240388AE4(v8, type metadata accessor for TranscriptProtoAstflatValueEnum);
    }
    v33 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30) - 8) + 64);
    goto LABEL_21;
  }
  if (v14)
  {
LABEL_7:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
    memcpy((void *)v8, v9, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_37;
  }
  v15 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v9, 1, v15))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
    memcpy((void *)v8, v9, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v29 = swift_getEnumCaseMultiPayload();
    switch(v29)
    {
      case 9:
        *(_DWORD *)v8 = *(_DWORD *)v9;
        *(_OWORD *)(v8 + 8) = *(_OWORD *)(v9 + 8);
        v34 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        v75 = v8 + v34;
        v35 = &v9[v34];
        v36 = sub_2408E57A4();
        (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v75, v35, v36);
        swift_storeEnumTagMultiPayload();
        break;
      case 5:
        *(_QWORD *)v8 = *(_QWORD *)v9;
        v37 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        v76 = v8 + v37;
        v38 = &v9[v37];
        v39 = sub_2408E57A4();
        (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v76, v38, v39);
        swift_storeEnumTagMultiPayload();
        break;
      case 4:
        *(_QWORD *)v8 = *(_QWORD *)v9;
        v30 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        v74 = v8 + v30;
        v31 = &v9[v30];
        v32 = sub_2408E57A4();
        (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v74, v31, v32);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy((void *)v8, v9, *(_QWORD *)(v16 + 64));
        break;
    }
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v16 + 56))(v8, 0, 1, v15);
  }
  v40 = *(int *)(v10 + 20);
  v41 = v8 + v40;
  v42 = &v9[v40];
  v43 = sub_2408E57A4();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v41, v42, v43);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_37:
  v61 = *(int *)(a3 + 24);
  v62 = (char *)a1 + v61;
  v63 = (char *)a2 + v61;
  v64 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 40))(v62, v63, v64);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTFlatExprDotVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24067D2C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_15Tm(a1, a2, a3, &qword_257000DF8);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTFlatExprDotVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24067D2DC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_16Tm(a1, a2, a3, a4, &qword_257000DF8);
}

void sub_24067D2E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2404090B4(a1, a2, a3, (uint64_t)&unk_240906518, qword_2570082D0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoASTFlatValue);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoASTFlatAssignExpr(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(_QWORD *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  int *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, char *, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(char *, char *, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(char *, char *, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(char *, char *, uint64_t);
  uint64_t v71;
  uint64_t v72;
  void (*v73)(char *, char *, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(char *, char *, uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(char *, char *, uint64_t);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(char *, char *, uint64_t);
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  _QWORD *v91;
  int *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _BYTE *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  _QWORD *v158;
  uint64_t *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  _QWORD *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  char *v187;
  char *v188;
  uint64_t v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  char *v197;
  uint64_t v198;
  _QWORD *v199;
  char *v200;
  char *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  _QWORD *v205;
  uint64_t *v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  int v211;
  uint64_t *v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  char *v217;
  uint64_t v218;
  uint64_t v219;
  char *v220;
  char *v221;
  uint64_t v222;
  uint64_t v223;
  char *v224;
  _QWORD *v225;
  uint64_t v226;
  uint64_t v227;
  _QWORD *v228;
  uint64_t v229;
  uint64_t v230;
  int v231;
  _QWORD *v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  char *v237;
  uint64_t v238;
  uint64_t v239;
  char *v240;
  char *v241;
  uint64_t v242;
  uint64_t v243;
  char *v244;
  char *v245;
  uint64_t v246;
  uint64_t v247;
  char *v248;
  char *v249;
  uint64_t v250;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  void (*v255)(char *, char *, uint64_t);
  void (*v256)(char *, char *, uint64_t);
  void (*v257)(char *, char *, uint64_t);
  uint64_t v258;
  uint64_t v259;
  void (*v260)(char *, char *, uint64_t);
  void (*v261)(char *, char *, uint64_t);
  void (*v262)(char *, char *, uint64_t);
  void (*v263)(char *, char *, uint64_t);
  void (*v264)(char *, char *, uint64_t);
  void (*v265)(char *, char *, uint64_t);
  void (*v266)(char *, char *, uint64_t);
  char *v267;
  char *v268;
  char *v269;
  void (*v270)(char *, char *, uint64_t);
  void (*v271)(char *, char *, uint64_t);
  void (*v272)(char *, char *, uint64_t);
  void (*v273)(char *, char *, uint64_t);
  void (*v274)(char *, char *, uint64_t);
  char *v275;
  char *v276;
  char *v277;
  char *v278;
  char *v279;
  char *v280;
  char *v281;
  char *v282;
  char *v283;
  char *v284;
  char *v285;
  char *v286;
  char *v287;
  char *v288;
  char *v289;
  char *v290;
  char *v291;
  char *v292;
  char *v293;
  char *v294;
  char *v295;
  char *v296;
  char *v297;
  char *v298;
  char *v299;
  char *v300;
  char *v301;
  uint64_t v302;
  uint64_t v303;
  void (*v304)(char *, char *, uint64_t);
  void (*v305)(char *, char *, uint64_t);
  void (*v306)(char *, char *, uint64_t);
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t *v313;
  char *v314;
  char *v315;
  char *v316;
  uint64_t v317;
  uint64_t v318;
  int *v319;
  uint64_t v320;
  int *v321;
  char *v322;
  char *v323;
  char *v324;
  char *v325;
  _QWORD *v326;
  _QWORD *v327;
  char *v328;
  int *v329;
  int *v330;
  void (*v331)(char *, char *, uint64_t);
  void (*v332)(char *, char *, uint64_t);
  void (*v333)(char *, char *, uint64_t);
  int *v334;
  _QWORD *__dst;
  _QWORD *__dsta;
  unsigned int (*__dste)(_QWORD *, uint64_t, uint64_t);
  _QWORD *__dstb;
  void (*__dstf)(char *, char *, uint64_t);
  _BYTE *__dstc;
  char *__dstg;
  char *__dsth;
  char *__dsti;
  char *__dstj;
  _QWORD *__dstd;
  int *v346;
  unsigned int (*v347)(char *, uint64_t, int *);
  int *v348;
  char *v349;
  char *v350;
  unsigned int (*v351)(char *, uint64_t, uint64_t);
  char *v352;
  char *v353;
  char *v354;
  char *v355;
  char *v356;
  char *v357;
  char *v358;
  char *v359;
  char *v360;
  char *v361;
  char *v362;
  char *v363;
  _QWORD *v364;
  char *v365;
  char *v366;
  _QWORD *__src;
  int *__srca;
  _QWORD *__srcb;
  unsigned int (*__srcc)(_QWORD *, uint64_t, uint64_t);
  char *__srcf;
  char *__srcg;
  int *__srcd;
  char *__srch;
  char *__srci;
  char *__srcj;
  char *__srck;
  char *__srcl;
  char *__srcm;
  char *__srcn;
  char *__srco;
  char *__srcp;
  char *__srcq;
  void *__srce;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = type metadata accessor for TranscriptProtoASTFlatExpr(0);
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000F20);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      v16 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
      v17 = *(_QWORD *)(v16 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v17 + 48))(v10, 1, v16))
      {
        v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC20);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            v401 = v17;
            v19 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            v20 = *(_QWORD *)(v19 - 8);
            if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v20 + 48))(v10, 1, v19))
            {
              v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
              memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload())
              {
                case 3u:
                case 6u:
                case 7u:
                case 8u:
                  v86 = v10[1];
                  *v9 = *v10;
                  v9[1] = v86;
                  swift_bridgeObjectRetain();
                  goto LABEL_56;
                case 4u:
                  *v9 = *v10;
                  v117 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                  __dstg = (char *)v10 + v117;
                  v361 = (char *)v9 + v117;
                  v398 = v12;
                  v118 = sub_2408E57A4();
                  v331 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v118 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v119 = v118;
                  v12 = v398;
                  v331(v361, __dstg, v119);
                  goto LABEL_56;
                case 5u:
                  *v9 = *v10;
                  v120 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                  __dsth = (char *)v10 + v120;
                  v362 = (char *)v9 + v120;
                  v399 = v12;
                  v121 = sub_2408E57A4();
                  v332 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v121 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v122 = v121;
                  v12 = v399;
                  v332(v362, __dsth, v122);
                  goto LABEL_56;
                case 9u:
                  *(_DWORD *)v9 = *(_DWORD *)v10;
                  v123 = v10[2];
                  v9[1] = v10[1];
                  v9[2] = v123;
                  v124 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                  __dsti = (char *)v10 + v124;
                  v363 = (char *)v9 + v124;
                  v400 = v12;
                  v125 = sub_2408E57A4();
                  v333 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v125 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v126 = v125;
                  v12 = v400;
                  v333(v363, __dsti, v126);
LABEL_56:
                  swift_storeEnumTagMultiPayload();
                  break;
                default:
                  memcpy(v9, v10, *(_QWORD *)(v20 + 64));
                  break;
              }
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v9, 0, 1, v19);
            }
            v127 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValue(0) + 20);
            v128 = (char *)v9 + v127;
            v129 = (char *)v10 + v127;
            v130 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v130 - 8) + 16))(v128, v129, v130);
            goto LABEL_88;
          case 1u:
            v401 = v17;
            v385 = v12;
            *(_BYTE *)v9 = *(_BYTE *)v10;
            v22 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
            v23 = *(int *)(v22 + 20);
            __dst = (_QWORD *)((char *)v9 + v23);
            v346 = (int *)v22;
            v24 = (_QWORD *)((char *)v10 + v23);
            v25 = type metadata accessor for TranscriptProtoASTFlatValue(0);
            v26 = *(_QWORD *)(v25 - 8);
            __src = v24;
            if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
            {
              v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
              memcpy(__dst, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
            }
            else
            {
              v318 = v26;
              v329 = (int *)v25;
              v87 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
              v88 = *(_QWORD *)(v87 - 8);
              v89 = __src;
              if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v88 + 48))(__src, 1, v87))
              {
                v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
                v91 = __dst;
                memcpy(__dst, __src, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
                v92 = v329;
              }
              else
              {
                v311 = v88;
                v302 = v87;
                switch(swift_getEnumCaseMultiPayload())
                {
                  case 3u:
                  case 6u:
                  case 7u:
                  case 8u:
                    v111 = __src[1];
                    v91 = __dst;
                    *__dst = *__src;
                    __dst[1] = v111;
                    swift_bridgeObjectRetain();
                    v112 = v302;
                    goto LABEL_63;
                  case 4u:
                    v91 = __dst;
                    *__dst = *__src;
                    v131 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                    v275 = (char *)__src + v131;
                    v290 = (char *)__dst + v131;
                    v132 = sub_2408E57A4();
                    v261 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v132 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v261(v290, v275, v132);
                    v112 = v302;
                    goto LABEL_63;
                  case 5u:
                    v91 = __dst;
                    *__dst = *__src;
                    v133 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                    v276 = (char *)__src + v133;
                    v291 = (char *)__dst + v133;
                    v134 = sub_2408E57A4();
                    v262 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v134 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v262(v291, v276, v134);
                    v112 = v302;
                    goto LABEL_63;
                  case 9u:
                    v91 = __dst;
                    *(_DWORD *)__dst = *(_DWORD *)__src;
                    v135 = __src[2];
                    __dst[1] = __src[1];
                    __dst[2] = v135;
                    v136 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                    v277 = (char *)__src + v136;
                    v292 = (char *)__dst + v136;
                    v137 = sub_2408E57A4();
                    v263 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v137 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v263(v292, v277, v137);
                    v112 = v302;
LABEL_63:
                    swift_storeEnumTagMultiPayload();
                    break;
                  default:
                    v112 = v87;
                    v91 = __dst;
                    memcpy(__dst, __src, *(_QWORD *)(v88 + 64));
                    break;
                }
                (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v311 + 56))(v91, 0, 1, v112);
                v92 = v329;
                v89 = __src;
              }
              v138 = v92[5];
              __srcp = (char *)v91 + v138;
              v139 = (char *)v89 + v138;
              v140 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v140 - 8) + 16))(__srcp, v139, v140);
              (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v318 + 56))(v91, 0, 1, v329);
            }
            v141 = v346[6];
            v142 = (char *)v9 + v141;
            v143 = (char *)v10 + v141;
            v144 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v144 - 8) + 16))(v142, v143, v144);
            goto LABEL_118;
          case 2u:
            v401 = v17;
            v385 = v12;
            *(_BYTE *)v9 = *(_BYTE *)v10;
            v28 = (int *)type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
            v29 = v28[5];
            __dsta = (_QWORD *)((char *)v9 + v29);
            v30 = (_QWORD *)((char *)v10 + v29);
            v31 = type metadata accessor for TranscriptProtoASTFlatValue(0);
            v326 = *(_QWORD **)(v31 - 8);
            __srca = (int *)v31;
            v347 = (unsigned int (*)(char *, uint64_t, int *))v326[6];
            if (((unsigned int (*)(_QWORD *, uint64_t))v347)(v30, 1))
            {
              v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
              memcpy(__dsta, v30, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
              v33 = __srca;
            }
            else
            {
              v319 = v28;
              v93 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
              v94 = *(_QWORD *)(v93 - 8);
              if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v94 + 48))(v30, 1, v93))
              {
                v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
                v96 = __dsta;
                memcpy(__dsta, v30, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
              }
              else
              {
                v312 = v94;
                switch(swift_getEnumCaseMultiPayload())
                {
                  case 3u:
                  case 6u:
                  case 7u:
                  case 8u:
                    v113 = v30[1];
                    v114 = __dsta;
                    *__dsta = *v30;
                    __dsta[1] = v113;
                    swift_bridgeObjectRetain();
                    goto LABEL_71;
                  case 4u:
                    v114 = __dsta;
                    *__dsta = *v30;
                    v145 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                    v278 = (char *)v30 + v145;
                    v293 = (char *)__dsta + v145;
                    v252 = sub_2408E57A4();
                    v264 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v252 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v264(v293, v278, v252);
                    goto LABEL_71;
                  case 5u:
                    v114 = __dsta;
                    *__dsta = *v30;
                    v146 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                    v279 = (char *)v30 + v146;
                    v294 = (char *)__dsta + v146;
                    v253 = sub_2408E57A4();
                    v265 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v253 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v265(v294, v279, v253);
                    goto LABEL_71;
                  case 9u:
                    v114 = __dsta;
                    *(_DWORD *)__dsta = *(_DWORD *)v30;
                    v147 = v30[2];
                    __dsta[1] = v30[1];
                    __dsta[2] = v147;
                    v148 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                    v280 = (char *)v30 + v148;
                    v295 = (char *)__dsta + v148;
                    v254 = sub_2408E57A4();
                    v266 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v254 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v266(v295, v280, v254);
LABEL_71:
                    swift_storeEnumTagMultiPayload();
                    break;
                  default:
                    v114 = __dsta;
                    memcpy(__dsta, v30, *(_QWORD *)(v312 + 64));
                    break;
                }
                (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v312 + 56))(v114, 0, 1, v93);
                v96 = v114;
              }
              v33 = __srca;
              v149 = __srca[5];
              __dstj = (char *)v96 + v149;
              v150 = (char *)v30 + v149;
              v151 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v151 - 8) + 16))(__dstj, v150, v151);
              ((void (*)(_QWORD *, _QWORD, uint64_t, int *))v326[7])(v96, 0, 1, __srca);
              v28 = v319;
            }
            v152 = v28[6];
            __dstd = (_QWORD *)((char *)v9 + v152);
            v153 = (_QWORD *)((char *)v10 + v152);
            if (v347((char *)v10 + v152, 1, v33))
            {
              v154 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
              memcpy(__dstd, v153, *(_QWORD *)(*(_QWORD *)(v154 - 8) + 64));
            }
            else
            {
              v321 = v28;
              v155 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
              v156 = *(_QWORD *)(v155 - 8);
              if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v156 + 48))(v153, 1, v155))
              {
                v157 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
                v158 = __dstd;
                memcpy(__dstd, v153, *(_QWORD *)(*(_QWORD *)(v157 - 8) + 64));
                v159 = v153;
              }
              else
              {
                v303 = v155;
                v313 = v153;
                v160 = v156;
                switch(swift_getEnumCaseMultiPayload())
                {
                  case 3u:
                  case 6u:
                  case 7u:
                  case 8u:
                    v162 = *v153;
                    v161 = v153[1];
                    v163 = __dstd;
                    *__dstd = v162;
                    __dstd[1] = v161;
                    swift_bridgeObjectRetain();
                    v164 = v303;
                    goto LABEL_106;
                  case 4u:
                    v207 = *v153;
                    v163 = __dstd;
                    *__dstd = v207;
                    v208 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                    v296 = (char *)__dstd + v208;
                    v284 = (char *)v313 + v208;
                    v258 = sub_2408E57A4();
                    v270 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v258 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v270(v296, v284, v258);
                    v164 = v303;
                    goto LABEL_106;
                  case 5u:
                    v209 = *v153;
                    v163 = __dstd;
                    *__dstd = v209;
                    v210 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                    v297 = (char *)__dstd + v210;
                    v285 = (char *)v313 + v210;
                    v259 = sub_2408E57A4();
                    v271 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v259 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v271(v297, v285, v259);
                    v164 = v303;
                    goto LABEL_106;
                  case 9u:
                    v211 = *(_DWORD *)v153;
                    v212 = v153;
                    v163 = __dstd;
                    *(_DWORD *)__dstd = v211;
                    v213 = v212[2];
                    __dstd[1] = v212[1];
                    __dstd[2] = v213;
                    v214 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                    v286 = (char *)v212 + v214;
                    v298 = (char *)__dstd + v214;
                    v215 = sub_2408E57A4();
                    v260 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v215 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v260(v298, v286, v215);
                    v164 = v303;
LABEL_106:
                    swift_storeEnumTagMultiPayload();
                    break;
                  default:
                    v160 = v156;
                    v206 = v153;
                    v163 = __dstd;
                    memcpy(__dstd, v206, *(_QWORD *)(v156 + 64));
                    v164 = v303;
                    break;
                }
                (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v160 + 56))(v163, 0, 1, v164);
                v158 = v163;
                v159 = v313;
              }
              v216 = __srca[5];
              v217 = (char *)v158 + v216;
              v365 = (char *)v159 + v216;
              v218 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v218 - 8) + 16))(v217, v365, v218);
              ((void (*)(_QWORD *, _QWORD, uint64_t, int *))v326[7])(v158, 0, 1, __srca);
              v28 = v321;
            }
            v219 = v28[7];
            v220 = (char *)v9 + v219;
            v221 = (char *)v10 + v219;
            v222 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v222 - 8) + 16))(v220, v221, v222);
            goto LABEL_118;
          case 3u:
            v401 = v17;
            v386 = v12;
            v34 = v10[1];
            *v9 = *v10;
            v9[1] = v34;
            v348 = (int *)type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
            v35 = v348[5];
            v327 = (_QWORD *)((char *)v9 + v35);
            v36 = (_QWORD *)((char *)v10 + v35);
            v37 = type metadata accessor for TranscriptProtoASTFlatValue(0);
            v38 = *(_QWORD *)(v37 - 8);
            __dste = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v38 + 48);
            v39 = v37;
            swift_bridgeObjectRetain();
            __srcb = v36;
            if (__dste(v36, 1, v39))
            {
              v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
              memcpy(v327, v36, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
              v12 = v386;
            }
            else
            {
              v310 = v38;
              v97 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
              v98 = *(_QWORD *)(v97 - 8);
              v320 = v97;
              v12 = v386;
              if ((*(unsigned int (**)(_QWORD *, uint64_t))(v98 + 48))(__srcb, 1))
              {
                v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
                v100 = __srcb;
                memcpy(v327, __srcb, *(_QWORD *)(*(_QWORD *)(v99 - 8) + 64));
              }
              else
              {
                switch(swift_getEnumCaseMultiPayload())
                {
                  case 3u:
                  case 6u:
                  case 7u:
                  case 8u:
                    v115 = __srcb[1];
                    *v327 = *__srcb;
                    v327[1] = v115;
                    swift_bridgeObjectRetain();
                    goto LABEL_84;
                  case 4u:
                    *v327 = *__srcb;
                    v165 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                    v267 = (char *)__srcb + v165;
                    v281 = (char *)v327 + v165;
                    v166 = sub_2408E57A4();
                    v255 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v166 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v255(v281, v267, v166);
                    v12 = v386;
                    goto LABEL_84;
                  case 5u:
                    *v327 = *__srcb;
                    v167 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                    v268 = (char *)__srcb + v167;
                    v282 = (char *)v327 + v167;
                    v168 = sub_2408E57A4();
                    v256 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v168 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v256(v282, v268, v168);
                    v12 = v386;
                    goto LABEL_84;
                  case 9u:
                    *(_DWORD *)v327 = *(_DWORD *)__srcb;
                    v169 = __srcb[2];
                    v327[1] = __srcb[1];
                    v327[2] = v169;
                    v170 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                    v269 = (char *)__srcb + v170;
                    v283 = (char *)v327 + v170;
                    v171 = sub_2408E57A4();
                    v257 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v171 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v257(v283, v269, v171);
                    v12 = v386;
LABEL_84:
                    swift_storeEnumTagMultiPayload();
                    break;
                  default:
                    memcpy(v327, __srcb, *(_QWORD *)(v98 + 64));
                    break;
                }
                (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v98 + 56))(v327, 0, 1, v320);
                v100 = __srcb;
              }
              v172 = *(int *)(v39 + 20);
              __srcq = (char *)v327 + v172;
              v173 = (char *)v100 + v172;
              v174 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v174 - 8) + 16))(__srcq, v173, v174);
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v310 + 56))(v327, 0, 1, v39);
            }
            v175 = v348[6];
            v176 = (char *)v9 + v175;
            v177 = (char *)v10 + v175;
            v178 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v178 - 8) + 16))(v176, v177, v178);
            goto LABEL_88;
          case 4u:
            v401 = v17;
            v41 = type metadata accessor for TranscriptProtoASTFlatValue(0);
            __dstb = *(_QWORD **)(v41 - 8);
            __srcc = (unsigned int (*)(_QWORD *, uint64_t, uint64_t))__dstb[6];
            v385 = v12;
            if (__srcc(v10, 1, v41))
            {
              v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
              memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
            }
            else
            {
              v330 = (int *)v41;
              v101 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
              v102 = *(_QWORD *)(v101 - 8);
              if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v102 + 48))(v10, 1, v101))
              {
                v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
                memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v103 - 8) + 64));
              }
              else
              {
                switch(swift_getEnumCaseMultiPayload())
                {
                  case 3u:
                  case 6u:
                  case 7u:
                  case 8u:
                    v116 = v10[1];
                    *v9 = *v10;
                    v9[1] = v116;
                    swift_bridgeObjectRetain();
                    goto LABEL_93;
                  case 4u:
                    *v9 = *v10;
                    v179 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                    v314 = (char *)v10 + v179;
                    v322 = (char *)v9 + v179;
                    v180 = sub_2408E57A4();
                    v304 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v180 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v304(v322, v314, v180);
                    goto LABEL_93;
                  case 5u:
                    *v9 = *v10;
                    v181 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                    v315 = (char *)v10 + v181;
                    v323 = (char *)v9 + v181;
                    v182 = sub_2408E57A4();
                    v305 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v182 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v305(v323, v315, v182);
                    goto LABEL_93;
                  case 9u:
                    *(_DWORD *)v9 = *(_DWORD *)v10;
                    v183 = v10[2];
                    v9[1] = v10[1];
                    v9[2] = v183;
                    v184 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                    v316 = (char *)v10 + v184;
                    v324 = (char *)v9 + v184;
                    v185 = sub_2408E57A4();
                    v306 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v185 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v306(v324, v316, v185);
LABEL_93:
                    swift_storeEnumTagMultiPayload();
                    break;
                  default:
                    memcpy(v9, v10, *(_QWORD *)(v102 + 64));
                    break;
                }
                (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v102 + 56))(v9, 0, 1, v101);
              }
              v186 = v330[5];
              v187 = (char *)v9 + v186;
              v188 = (char *)v10 + v186;
              v189 = sub_2408E57A4();
              v190 = v188;
              v41 = (uint64_t)v330;
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v189 - 8) + 16))(v187, v190, v189);
              ((void (*)(_QWORD *, _QWORD, uint64_t, int *))__dstb[7])(v9, 0, 1, v330);
            }
            v191 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
            v192 = *(int *)(v191 + 20);
            v364 = (_QWORD *)((char *)v9 + v192);
            v193 = (char *)v10 + v192;
            if (__srcc((_QWORD *)((char *)v10 + v192), 1, v41))
            {
              v194 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
              memcpy(v364, v193, *(_QWORD *)(*(_QWORD *)(v194 - 8) + 64));
            }
            else
            {
              __srce = (void *)v191;
              v334 = (int *)v41;
              v195 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
              v196 = *(_QWORD *)(v195 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v196 + 48))(v193, 1, v195))
              {
                v197 = v193;
                v198 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
                v199 = v364;
                memcpy(v364, v197, *(_QWORD *)(*(_QWORD *)(v198 - 8) + 64));
                v200 = v197;
              }
              else
              {
                v317 = v196;
                v201 = v193;
                v202 = v195;
                v325 = v201;
                switch(swift_getEnumCaseMultiPayload())
                {
                  case 3u:
                  case 6u:
                  case 7u:
                  case 8u:
                    v204 = *(_QWORD *)v201;
                    v203 = *((_QWORD *)v201 + 1);
                    v205 = v364;
                    *v364 = v204;
                    v364[1] = v203;
                    swift_bridgeObjectRetain();
                    goto LABEL_114;
                  case 4u:
                    v307 = *(_QWORD *)v201;
                    v225 = v201;
                    v205 = v364;
                    *v364 = v307;
                    v226 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                    v287 = (char *)v225 + v226;
                    v299 = (char *)v364 + v226;
                    v202 = v195;
                    v227 = sub_2408E57A4();
                    v272 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v227 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v272(v299, v287, v227);
                    goto LABEL_114;
                  case 5u:
                    v308 = *(_QWORD *)v201;
                    v228 = v201;
                    v205 = v364;
                    *v364 = v308;
                    v229 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                    v288 = (char *)v228 + v229;
                    v300 = (char *)v364 + v229;
                    v202 = v195;
                    v230 = sub_2408E57A4();
                    v273 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v230 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v273(v300, v288, v230);
                    goto LABEL_114;
                  case 9u:
                    v231 = *(_DWORD *)v201;
                    v232 = v201;
                    v205 = v364;
                    *(_DWORD *)v364 = v231;
                    v233 = v232[2];
                    v364[1] = v232[1];
                    v364[2] = v233;
                    v234 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                    v289 = (char *)v232 + v234;
                    v301 = (char *)v364 + v234;
                    v202 = v195;
                    v235 = sub_2408E57A4();
                    v274 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v235 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v274(v301, v289, v235);
LABEL_114:
                    swift_storeEnumTagMultiPayload();
                    v223 = v317;
                    break;
                  default:
                    v223 = v317;
                    v224 = v201;
                    v205 = v364;
                    memcpy(v364, v224, *(_QWORD *)(v317 + 64));
                    break;
                }
                (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v223 + 56))(v205, 0, 1, v202);
                v199 = v205;
                v200 = v325;
              }
              v236 = v334[5];
              v237 = (char *)v199 + v236;
              v366 = &v200[v236];
              v238 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v238 - 8) + 16))(v237, v366, v238);
              ((void (*)(_QWORD *, _QWORD, uint64_t, int *))__dstb[7])(v199, 0, 1, v334);
              v191 = (uint64_t)__srce;
            }
            v239 = *(int *)(v191 + 24);
            v240 = (char *)v9 + v239;
            v241 = (char *)v10 + v239;
            v242 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v242 - 8) + 16))(v240, v241, v242);
LABEL_118:
            swift_storeEnumTagMultiPayload();
            v12 = v385;
            goto LABEL_119;
          case 5u:
            v402 = v17;
            v43 = v10[1];
            *v9 = *v10;
            v9[1] = v43;
            v9[2] = v10[2];
            v44 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0) + 24);
            v349 = (char *)v10 + v44;
            __srcf = (char *)v9 + v44;
            v387 = v12;
            v45 = sub_2408E57A4();
            __dstf = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16);
            v17 = v402;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v46 = v45;
            v12 = v387;
            __dstf(__srcf, v349, v46);
            swift_storeEnumTagMultiPayload();
            break;
          case 6u:
            *v9 = *v10;
            v47 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0) + 20);
            v350 = (char *)v10 + v47;
            __srcg = (char *)v9 + v47;
            v48 = sub_2408E57A4();
            v388 = v12;
            v49 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 16);
            swift_bridgeObjectRetain();
            v49(__srcg, v350, v48);
            v12 = v388;
            swift_storeEnumTagMultiPayload();
            break;
          case 7u:
            v401 = v17;
            v389 = v12;
            v50 = v10[1];
            *v9 = *v10;
            v9[1] = v50;
            __srcd = (int *)type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
            v51 = __srcd[5];
            __dstc = (char *)v9 + v51;
            v52 = (char *)v10 + v51;
            v53 = type metadata accessor for TranscriptProtoASTPickType(0);
            v309 = *(_QWORD *)(v53 - 8);
            v351 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v309 + 48);
            swift_bridgeObjectRetain();
            v328 = v52;
            if (v351(v52, 1, v53))
            {
              v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D08);
              memcpy(__dstc, v52, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
            }
            else
            {
              *(_QWORD *)__dstc = *(_QWORD *)v52;
              __dstc[8] = v52[8];
              v104 = *(int *)(v53 + 20);
              v105 = &__dstc[v104];
              v360 = &v328[v104];
              v106 = sub_2408E57A4();
              (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v106 - 8) + 16))(v105, v360, v106);
              (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v309 + 56))(__dstc, 0, 1, v53);
            }
            v12 = v389;
            v107 = __srcd[6];
            v108 = (char *)v9 + v107;
            v109 = (char *)v10 + v107;
            v110 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v110 - 8) + 16))(v108, v109, v110);
LABEL_88:
            swift_storeEnumTagMultiPayload();
LABEL_119:
            v17 = v401;
            break;
          case 8u:
            v403 = v17;
            v55 = v10[1];
            *v9 = *v10;
            v9[1] = v55;
            v56 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0) + 20);
            v352 = (char *)v10 + v56;
            __srch = (char *)v9 + v56;
            v57 = sub_2408E57A4();
            v390 = v12;
            v58 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16);
            v17 = v403;
            swift_bridgeObjectRetain();
            v58(__srch, v352, v57);
            v12 = v390;
            swift_storeEnumTagMultiPayload();
            break;
          case 9u:
            v404 = v17;
            v59 = v10[1];
            *v9 = *v10;
            v9[1] = v59;
            *((_WORD *)v9 + 8) = *((_WORD *)v10 + 8);
            v60 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0) + 28);
            v353 = (char *)v10 + v60;
            __srci = (char *)v9 + v60;
            v61 = sub_2408E57A4();
            v391 = v12;
            v62 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 16);
            v17 = v404;
            swift_bridgeObjectRetain();
            v62(__srci, v353, v61);
            v12 = v391;
            swift_storeEnumTagMultiPayload();
            break;
          case 0xAu:
            v405 = v17;
            v63 = v10[1];
            *v9 = *v10;
            v9[1] = v63;
            v64 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0) + 20);
            v354 = (char *)v10 + v64;
            __srcj = (char *)v9 + v64;
            v65 = sub_2408E57A4();
            v392 = v12;
            v66 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 16);
            v17 = v405;
            swift_bridgeObjectRetain();
            v66(__srcj, v354, v65);
            v12 = v392;
            swift_storeEnumTagMultiPayload();
            break;
          case 0xBu:
            v406 = v17;
            v67 = v10[1];
            *v9 = *v10;
            v9[1] = v67;
            v68 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0) + 20);
            v355 = (char *)v10 + v68;
            __srck = (char *)v9 + v68;
            v69 = sub_2408E57A4();
            v393 = v12;
            v70 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v69 - 8) + 16);
            v17 = v406;
            swift_bridgeObjectRetain();
            v70(__srck, v355, v69);
            v12 = v393;
            swift_storeEnumTagMultiPayload();
            break;
          case 0xCu:
            *v9 = *v10;
            v71 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0) + 20);
            v356 = (char *)v10 + v71;
            __srcl = (char *)v9 + v71;
            v72 = sub_2408E57A4();
            v394 = v12;
            v73 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v72 - 8) + 16);
            swift_bridgeObjectRetain();
            v73(__srcl, v356, v72);
            v12 = v394;
            swift_storeEnumTagMultiPayload();
            break;
          case 0xDu:
            v407 = v17;
            v74 = v10[1];
            *v9 = *v10;
            v9[1] = v74;
            v75 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0) + 20);
            v357 = (char *)v10 + v75;
            __srcm = (char *)v9 + v75;
            v76 = sub_2408E57A4();
            v395 = v12;
            v77 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v76 - 8) + 16);
            v17 = v407;
            swift_bridgeObjectRetain();
            v77(__srcm, v357, v76);
            v12 = v395;
            swift_storeEnumTagMultiPayload();
            break;
          case 0xEu:
            v408 = v17;
            v78 = v10[1];
            *v9 = *v10;
            v9[1] = v78;
            v79 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0) + 20);
            v358 = (char *)v10 + v79;
            __srcn = (char *)v9 + v79;
            v80 = sub_2408E57A4();
            v396 = v12;
            v81 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v80 - 8) + 16);
            v17 = v408;
            swift_bridgeObjectRetain();
            v81(__srcn, v358, v80);
            v12 = v396;
            swift_storeEnumTagMultiPayload();
            break;
          case 0xFu:
          case 0x11u:
            v82 = sub_2408E57A4();
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v82 - 8) + 16))(v9, v10, v82);
            swift_storeEnumTagMultiPayload();
            break;
          case 0x10u:
            *v9 = *v10;
            v83 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0) + 20);
            v359 = (char *)v10 + v83;
            __srco = (char *)v9 + v83;
            v84 = sub_2408E57A4();
            v397 = v12;
            v85 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v84 - 8) + 16);
            swift_bridgeObjectRetain();
            v85(__srco, v359, v84);
            v12 = v397;
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v9, v10, *(_QWORD *)(v17 + 64));
            break;
        }
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v9, 0, 1, v16);
      }
      v243 = *(int *)(v11 + 20);
      v244 = (char *)v9 + v243;
      v245 = (char *)v10 + v243;
      v246 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v246 - 8) + 16))(v244, v245, v246);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v247 = *(int *)(a3 + 24);
    v248 = (char *)v4 + v247;
    v249 = (char *)a2 + v247;
    v250 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v250 - 8) + 16))(v248, v249, v250);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoASTFlatAssignExpr(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t updated;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for TranscriptProtoASTFlatExpr(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    v6 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v4, 1, v6))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v8 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8))
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                swift_bridgeObjectRelease();
                break;
              case 4u:
                swift_bridgeObjectRelease();
                v24 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                goto LABEL_38;
              case 5u:
                swift_bridgeObjectRelease();
                v24 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                goto LABEL_38;
              case 9u:
                swift_bridgeObjectRelease();
                v24 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_38:
                v25 = v4 + v24;
                v26 = sub_2408E57A4();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v25, v26);
                break;
              default:
                break;
            }
          }
          updated = type metadata accessor for TranscriptProtoASTFlatValue(0);
          goto LABEL_40;
        case 1u:
          v9 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
          v10 = v4 + *(int *)(v9 + 20);
          v11 = type metadata accessor for TranscriptProtoASTFlatValue(0);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
            goto LABEL_47;
          v12 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v10, 1, v12))
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                goto LABEL_18;
              case 4u:
                goto LABEL_41;
              case 5u:
                goto LABEL_42;
              case 9u:
                goto LABEL_44;
              default:
                goto LABEL_46;
            }
          }
          goto LABEL_46;
        case 2u:
          v13 = (int *)type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
          v14 = v4 + v13[5];
          v15 = type metadata accessor for TranscriptProtoASTFlatValue(0);
          v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48);
          if (!v16(v14, 1, v15))
          {
            v17 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v14, 1, v17))
            {
              switch(swift_getEnumCaseMultiPayload())
              {
                case 3u:
                case 6u:
                case 7u:
                case 8u:
                  swift_bridgeObjectRelease();
                  break;
                case 4u:
                  swift_bridgeObjectRelease();
                  v33 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                  goto LABEL_51;
                case 5u:
                  swift_bridgeObjectRelease();
                  v33 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                  goto LABEL_51;
                case 9u:
                  swift_bridgeObjectRelease();
                  v33 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_51:
                  v34 = v14 + v33;
                  v35 = sub_2408E57A4();
                  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 8))(v34, v35);
                  break;
                default:
                  break;
              }
            }
            v36 = v14 + *(int *)(v15 + 20);
            v37 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 8))(v36, v37);
          }
          v38 = v4 + v13[6];
          if (!v16(v38, 1, v15))
          {
            v39 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 48))(v38, 1, v39))
            {
              switch(swift_getEnumCaseMultiPayload())
              {
                case 3u:
                case 6u:
                case 7u:
                case 8u:
                  swift_bridgeObjectRelease();
                  break;
                case 4u:
                  swift_bridgeObjectRelease();
                  v48 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                  goto LABEL_69;
                case 5u:
                  swift_bridgeObjectRelease();
                  v48 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                  goto LABEL_69;
                case 9u:
                  swift_bridgeObjectRelease();
                  v48 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_69:
                  v49 = v38 + v48;
                  v50 = sub_2408E57A4();
                  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 8))(v49, v50);
                  break;
                default:
                  break;
              }
            }
            v51 = v38 + *(int *)(v15 + 20);
            v52 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 8))(v51, v52);
          }
          v22 = v13[7];
          goto LABEL_78;
        case 3u:
          swift_bridgeObjectRelease();
          v9 = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
          v10 = v4 + *(int *)(v9 + 20);
          v11 = type metadata accessor for TranscriptProtoASTFlatValue(0);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
            goto LABEL_47;
          v18 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v10, 1, v18))
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
LABEL_18:
                swift_bridgeObjectRelease();
                break;
              case 4u:
LABEL_41:
                swift_bridgeObjectRelease();
                v27 = type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0);
                goto LABEL_43;
              case 5u:
LABEL_42:
                swift_bridgeObjectRelease();
                v27 = type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0);
LABEL_43:
                v28 = *(int *)(v27 + 20);
                goto LABEL_45;
              case 9u:
LABEL_44:
                swift_bridgeObjectRelease();
                v28 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_45:
                v29 = v10 + v28;
                v30 = sub_2408E57A4();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v29, v30);
                break;
              default:
                break;
            }
          }
LABEL_46:
          v31 = v10 + *(int *)(v11 + 20);
          v32 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v31, v32);
LABEL_47:
          v22 = *(int *)(v9 + 24);
          goto LABEL_78;
        case 4u:
          v19 = type metadata accessor for TranscriptProtoASTFlatValue(0);
          v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48);
          if (!v20(v4, 1, v19))
          {
            v21 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v4, 1, v21))
            {
              switch(swift_getEnumCaseMultiPayload())
              {
                case 3u:
                case 6u:
                case 7u:
                case 8u:
                  swift_bridgeObjectRelease();
                  break;
                case 4u:
                  swift_bridgeObjectRelease();
                  v40 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                  goto LABEL_60;
                case 5u:
                  swift_bridgeObjectRelease();
                  v40 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                  goto LABEL_60;
                case 9u:
                  swift_bridgeObjectRelease();
                  v40 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_60:
                  v41 = v4 + v40;
                  v42 = sub_2408E57A4();
                  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 8))(v41, v42);
                  break;
                default:
                  break;
              }
            }
            v43 = v4 + *(int *)(v19 + 20);
            v44 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 8))(v43, v44);
          }
          v45 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
          v46 = v4 + *(int *)(v45 + 20);
          if (!v20(v46, 1, v19))
          {
            v47 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 48))(v46, 1, v47))
            {
              switch(swift_getEnumCaseMultiPayload())
              {
                case 3u:
                case 6u:
                case 7u:
                case 8u:
                  swift_bridgeObjectRelease();
                  break;
                case 4u:
                  swift_bridgeObjectRelease();
                  v53 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                  goto LABEL_75;
                case 5u:
                  swift_bridgeObjectRelease();
                  v53 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                  goto LABEL_75;
                case 9u:
                  swift_bridgeObjectRelease();
                  v53 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_75:
                  v54 = v46 + v53;
                  v55 = sub_2408E57A4();
                  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 8))(v54, v55);
                  break;
                default:
                  break;
              }
            }
            v56 = v46 + *(int *)(v19 + 20);
            v57 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 8))(v56, v57);
          }
          v22 = *(int *)(v45 + 24);
          goto LABEL_78;
        case 5u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v22 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0) + 24);
          goto LABEL_78;
        case 6u:
          swift_bridgeObjectRelease();
          updated = type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0);
          goto LABEL_40;
        case 7u:
          swift_bridgeObjectRelease();
          v9 = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
          v10 = v4 + *(int *)(v9 + 20);
          v11 = type metadata accessor for TranscriptProtoASTPickType(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
            goto LABEL_46;
          goto LABEL_47;
        case 8u:
          swift_bridgeObjectRelease();
          updated = type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0);
          goto LABEL_40;
        case 9u:
          swift_bridgeObjectRelease();
          v22 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0) + 28);
          goto LABEL_78;
        case 0xAu:
          swift_bridgeObjectRelease();
          updated = type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0);
          goto LABEL_40;
        case 0xBu:
          swift_bridgeObjectRelease();
          updated = type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0);
          goto LABEL_40;
        case 0xCu:
          swift_bridgeObjectRelease();
          updated = type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0);
          goto LABEL_40;
        case 0xDu:
          swift_bridgeObjectRelease();
          updated = type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0);
          goto LABEL_40;
        case 0xEu:
          swift_bridgeObjectRelease();
          updated = type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0);
          goto LABEL_40;
        case 0xFu:
        case 0x11u:
          v7 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v4, v7);
          break;
        case 0x10u:
          swift_bridgeObjectRelease();
          updated = type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0);
LABEL_40:
          v22 = *(int *)(updated + 20);
LABEL_78:
          v58 = v4 + v22;
          v59 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 8))(v58, v59);
          break;
        default:
          break;
      }
    }
    v60 = v4 + *(int *)(v5 + 20);
    v61 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 8))(v60, v61);
  }
  v62 = a1 + *(int *)(a2 + 24);
  v63 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 8))(v62, v63);
}

_QWORD *initializeWithCopy for TranscriptProtoASTFlatAssignExpr(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(_QWORD *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  int *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, char *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, char *, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, char *, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(char *, char *, uint64_t);
  uint64_t v69;
  uint64_t v70;
  void (*v71)(char *, char *, uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(char *, char *, uint64_t);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(char *, char *, uint64_t);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(char *, char *, uint64_t);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  _QWORD *v89;
  int *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _BYTE *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  _QWORD *v156;
  uint64_t *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  _QWORD *v161;
  void *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  char *v186;
  uint64_t v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  int v195;
  char *v196;
  char *v197;
  uint64_t v198;
  _QWORD *v199;
  char *v200;
  uint64_t v201;
  char *v202;
  uint64_t *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  int v208;
  uint64_t *v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  char *v214;
  uint64_t v215;
  uint64_t v216;
  char *v217;
  char *v218;
  uint64_t v219;
  char *v220;
  _QWORD *v221;
  _QWORD *v222;
  uint64_t v223;
  _QWORD *v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  int v228;
  _QWORD *v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  char *v233;
  uint64_t v234;
  uint64_t v235;
  char *v236;
  char *v237;
  uint64_t v238;
  uint64_t v239;
  char *v240;
  char *v241;
  uint64_t v242;
  uint64_t v243;
  char *v244;
  char *v245;
  uint64_t v246;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  void (*v251)(char *, char *, uint64_t);
  void (*v252)(char *, char *, uint64_t);
  void (*v253)(char *, char *, uint64_t);
  uint64_t v254;
  uint64_t v255;
  void (*v256)(char *, char *, uint64_t);
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  void (*v260)(char *, char *, uint64_t);
  void (*v261)(char *, char *, uint64_t);
  void (*v262)(char *, char *, uint64_t);
  void (*v263)(char *, char *, uint64_t);
  void (*v264)(char *, char *, uint64_t);
  void (*v265)(char *, char *, uint64_t);
  char *v266;
  char *v267;
  char *v268;
  void (*v269)(char *, char *, uint64_t);
  void (*v270)(char *, char *, uint64_t);
  void (*v271)(char *, char *, uint64_t);
  void (*v272)(char *, char *, uint64_t);
  void (*v273)(char *, char *, uint64_t);
  char *v274;
  char *v275;
  char *v276;
  char *v277;
  char *v278;
  char *v279;
  char *v280;
  char *v281;
  char *v282;
  char *v283;
  char *v284;
  char *v285;
  char *v286;
  char *v287;
  char *v288;
  char *v289;
  char *v290;
  char *v291;
  char *v292;
  char *v293;
  char *v294;
  char *v295;
  char *v296;
  char *v297;
  char *v298;
  char *v299;
  char *v300;
  uint64_t v301;
  void (*v302)(char *, char *, uint64_t);
  void (*v303)(char *, char *, uint64_t);
  void (*v304)(char *, char *, uint64_t);
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t *v311;
  char *v312;
  char *v313;
  char *v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  int *v319;
  uint64_t v320;
  int *v321;
  char *v322;
  char *v323;
  char *v324;
  char *v325;
  _QWORD *v326;
  _QWORD *v327;
  char *v328;
  int *v329;
  int *v330;
  void (*v331)(char *, char *, uint64_t);
  void (*v332)(char *, char *, uint64_t);
  void (*v333)(char *, char *, uint64_t);
  int *v334;
  _QWORD *__dst;
  _QWORD *__dsta;
  unsigned int (*__dste)(_QWORD *, uint64_t, uint64_t);
  _QWORD *__dstb;
  void (*__dstf)(char *, char *, uint64_t);
  _BYTE *__dstc;
  char *__dstg;
  char *__dsth;
  char *__dsti;
  char *__dstj;
  _QWORD *__dstd;
  int *v346;
  unsigned int (*v347)(char *, uint64_t, int *);
  int *v348;
  char *v349;
  char *v350;
  unsigned int (*v351)(char *, uint64_t, uint64_t);
  char *v352;
  char *v353;
  char *v354;
  char *v355;
  char *v356;
  char *v357;
  char *v358;
  char *v359;
  char *v360;
  char *v361;
  char *v362;
  char *v363;
  void *v364;
  _QWORD *v365;
  char *v366;
  char *v367;
  _QWORD *__src;
  int *__srca;
  _QWORD *__srcb;
  unsigned int (*__srcc)(_QWORD *, uint64_t, uint64_t);
  char *__srcf;
  char *__srcg;
  int *__srcd;
  char *__srch;
  char *__srci;
  char *__srcj;
  char *__srck;
  char *__srcl;
  char *__srcm;
  char *__srcn;
  char *__srco;
  char *__srcp;
  char *__srcq;
  void *__srce;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for TranscriptProtoASTFlatExpr(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000F20);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v14 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
    v15 = *(_QWORD *)(v14 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v15 + 48))(v9, 1, v14))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC20);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v402 = v15;
          v17 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          v18 = *(_QWORD *)(v17 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v18 + 48))(v9, 1, v17))
          {
            v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
            memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                v84 = v9[1];
                *v8 = *v9;
                v8[1] = v84;
                swift_bridgeObjectRetain();
                goto LABEL_54;
              case 4u:
                *v8 = *v9;
                v115 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                __dstg = (char *)v9 + v115;
                v361 = (char *)v8 + v115;
                v399 = v11;
                v116 = sub_2408E57A4();
                v331 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v116 - 8) + 16);
                swift_bridgeObjectRetain();
                v117 = v116;
                v11 = v399;
                v331(v361, __dstg, v117);
                goto LABEL_54;
              case 5u:
                *v8 = *v9;
                v118 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                __dsth = (char *)v9 + v118;
                v362 = (char *)v8 + v118;
                v400 = v11;
                v119 = sub_2408E57A4();
                v332 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v119 - 8) + 16);
                swift_bridgeObjectRetain();
                v120 = v119;
                v11 = v400;
                v332(v362, __dsth, v120);
                goto LABEL_54;
              case 9u:
                *(_DWORD *)v8 = *(_DWORD *)v9;
                v121 = v9[2];
                v8[1] = v9[1];
                v8[2] = v121;
                v122 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                __dsti = (char *)v9 + v122;
                v363 = (char *)v8 + v122;
                v401 = v11;
                v123 = sub_2408E57A4();
                v333 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v123 - 8) + 16);
                swift_bridgeObjectRetain();
                v124 = v123;
                v11 = v401;
                v333(v363, __dsti, v124);
LABEL_54:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v8, v9, *(_QWORD *)(v18 + 64));
                break;
            }
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v8, 0, 1, v17);
          }
          v125 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValue(0) + 20);
          v126 = (char *)v8 + v125;
          v127 = (char *)v9 + v125;
          v128 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v128 - 8) + 16))(v126, v127, v128);
          goto LABEL_86;
        case 1u:
          v402 = v15;
          v386 = v11;
          *(_BYTE *)v8 = *(_BYTE *)v9;
          v20 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
          v21 = *(int *)(v20 + 20);
          __dst = (_QWORD *)((char *)v8 + v21);
          v346 = (int *)v20;
          v22 = (_QWORD *)((char *)v9 + v21);
          v23 = type metadata accessor for TranscriptProtoASTFlatValue(0);
          v24 = *(_QWORD *)(v23 - 8);
          __src = v22;
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
          {
            v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
            memcpy(__dst, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
          }
          else
          {
            v318 = v24;
            v329 = (int *)v23;
            v85 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            v86 = *(_QWORD *)(v85 - 8);
            v87 = __src;
            if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v86 + 48))(__src, 1, v85))
            {
              v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
              v89 = __dst;
              memcpy(__dst, __src, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
              v90 = v329;
            }
            else
            {
              v309 = v86;
              v301 = v85;
              switch(swift_getEnumCaseMultiPayload())
              {
                case 3u:
                case 6u:
                case 7u:
                case 8u:
                  v109 = __src[1];
                  v89 = __dst;
                  *__dst = *__src;
                  __dst[1] = v109;
                  swift_bridgeObjectRetain();
                  v110 = v301;
                  goto LABEL_61;
                case 4u:
                  v89 = __dst;
                  *__dst = *__src;
                  v129 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                  v274 = (char *)__src + v129;
                  v289 = (char *)__dst + v129;
                  v130 = sub_2408E57A4();
                  v260 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v130 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v260(v289, v274, v130);
                  v110 = v301;
                  goto LABEL_61;
                case 5u:
                  v89 = __dst;
                  *__dst = *__src;
                  v131 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                  v275 = (char *)__src + v131;
                  v290 = (char *)__dst + v131;
                  v132 = sub_2408E57A4();
                  v261 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v132 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v261(v290, v275, v132);
                  v110 = v301;
                  goto LABEL_61;
                case 9u:
                  v89 = __dst;
                  *(_DWORD *)__dst = *(_DWORD *)__src;
                  v133 = __src[2];
                  __dst[1] = __src[1];
                  __dst[2] = v133;
                  v134 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                  v276 = (char *)__src + v134;
                  v291 = (char *)__dst + v134;
                  v135 = sub_2408E57A4();
                  v262 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v135 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v262(v291, v276, v135);
                  v110 = v301;
LABEL_61:
                  swift_storeEnumTagMultiPayload();
                  break;
                default:
                  v110 = v85;
                  v89 = __dst;
                  memcpy(__dst, __src, *(_QWORD *)(v86 + 64));
                  break;
              }
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v309 + 56))(v89, 0, 1, v110);
              v90 = v329;
              v87 = __src;
            }
            v136 = v90[5];
            __srcp = (char *)v89 + v136;
            v137 = (char *)v87 + v136;
            v138 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v138 - 8) + 16))(__srcp, v137, v138);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v318 + 56))(v89, 0, 1, v329);
          }
          v139 = v346[6];
          v140 = (char *)v8 + v139;
          v141 = (char *)v9 + v139;
          v142 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v142 - 8) + 16))(v140, v141, v142);
          goto LABEL_116;
        case 2u:
          v402 = v15;
          v386 = v11;
          *(_BYTE *)v8 = *(_BYTE *)v9;
          v26 = (int *)type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
          v27 = v26[5];
          __dsta = (_QWORD *)((char *)v8 + v27);
          v28 = (_QWORD *)((char *)v9 + v27);
          v29 = type metadata accessor for TranscriptProtoASTFlatValue(0);
          v326 = *(_QWORD **)(v29 - 8);
          __srca = (int *)v29;
          v347 = (unsigned int (*)(char *, uint64_t, int *))v326[6];
          if (((unsigned int (*)(_QWORD *, uint64_t))v347)(v28, 1))
          {
            v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
            memcpy(__dsta, v28, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
            v31 = __srca;
          }
          else
          {
            v319 = v26;
            v91 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            v92 = *(_QWORD *)(v91 - 8);
            if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v92 + 48))(v28, 1, v91))
            {
              v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
              v94 = __dsta;
              memcpy(__dsta, v28, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
            }
            else
            {
              v310 = v92;
              switch(swift_getEnumCaseMultiPayload())
              {
                case 3u:
                case 6u:
                case 7u:
                case 8u:
                  v111 = v28[1];
                  v112 = __dsta;
                  *__dsta = *v28;
                  __dsta[1] = v111;
                  swift_bridgeObjectRetain();
                  goto LABEL_69;
                case 4u:
                  v112 = __dsta;
                  *__dsta = *v28;
                  v143 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                  v277 = (char *)v28 + v143;
                  v292 = (char *)__dsta + v143;
                  v248 = sub_2408E57A4();
                  v263 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v248 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v263(v292, v277, v248);
                  goto LABEL_69;
                case 5u:
                  v112 = __dsta;
                  *__dsta = *v28;
                  v144 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                  v278 = (char *)v28 + v144;
                  v293 = (char *)__dsta + v144;
                  v249 = sub_2408E57A4();
                  v264 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v249 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v264(v293, v278, v249);
                  goto LABEL_69;
                case 9u:
                  v112 = __dsta;
                  *(_DWORD *)__dsta = *(_DWORD *)v28;
                  v145 = v28[2];
                  __dsta[1] = v28[1];
                  __dsta[2] = v145;
                  v146 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                  v279 = (char *)v28 + v146;
                  v294 = (char *)__dsta + v146;
                  v250 = sub_2408E57A4();
                  v265 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v250 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v265(v294, v279, v250);
LABEL_69:
                  swift_storeEnumTagMultiPayload();
                  break;
                default:
                  v112 = __dsta;
                  memcpy(__dsta, v28, *(_QWORD *)(v310 + 64));
                  break;
              }
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v310 + 56))(v112, 0, 1, v91);
              v94 = v112;
            }
            v31 = __srca;
            v147 = __srca[5];
            __dstj = (char *)v94 + v147;
            v148 = (char *)v28 + v147;
            v149 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v149 - 8) + 16))(__dstj, v148, v149);
            ((void (*)(_QWORD *, _QWORD, uint64_t, int *))v326[7])(v94, 0, 1, __srca);
            v26 = v319;
          }
          v150 = v26[6];
          __dstd = (_QWORD *)((char *)v8 + v150);
          v151 = (_QWORD *)((char *)v9 + v150);
          if (v347((char *)v9 + v150, 1, v31))
          {
            v152 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
            memcpy(__dstd, v151, *(_QWORD *)(*(_QWORD *)(v152 - 8) + 64));
          }
          else
          {
            v321 = v26;
            v153 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            v154 = *(_QWORD *)(v153 - 8);
            if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v154 + 48))(v151, 1, v153))
            {
              v155 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
              v156 = __dstd;
              memcpy(__dstd, v151, *(_QWORD *)(*(_QWORD *)(v155 - 8) + 64));
              v157 = v151;
            }
            else
            {
              v364 = (void *)v153;
              v311 = v151;
              v158 = v154;
              switch(swift_getEnumCaseMultiPayload())
              {
                case 3u:
                case 6u:
                case 7u:
                case 8u:
                  v160 = *v151;
                  v159 = v151[1];
                  v161 = __dstd;
                  *__dstd = v160;
                  __dstd[1] = v159;
                  swift_bridgeObjectRetain();
                  v162 = v364;
                  goto LABEL_103;
                case 4u:
                  v204 = *v151;
                  v161 = __dstd;
                  *__dstd = v204;
                  v205 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                  v295 = (char *)__dstd + v205;
                  v283 = (char *)v311 + v205;
                  v254 = sub_2408E57A4();
                  v269 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v254 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v269(v295, v283, v254);
                  v162 = v364;
                  goto LABEL_103;
                case 5u:
                  v206 = *v151;
                  v161 = __dstd;
                  *__dstd = v206;
                  v207 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                  v296 = (char *)__dstd + v207;
                  v284 = (char *)v311 + v207;
                  v255 = sub_2408E57A4();
                  v270 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v255 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v270(v296, v284, v255);
                  v162 = v364;
                  goto LABEL_103;
                case 9u:
                  v208 = *(_DWORD *)v151;
                  v209 = v151;
                  v161 = __dstd;
                  *(_DWORD *)__dstd = v208;
                  v210 = v209[2];
                  __dstd[1] = v209[1];
                  __dstd[2] = v210;
                  v211 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                  v285 = (char *)v209 + v211;
                  v297 = (char *)__dstd + v211;
                  v212 = sub_2408E57A4();
                  v256 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v212 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v256(v297, v285, v212);
                  v162 = v364;
LABEL_103:
                  swift_storeEnumTagMultiPayload();
                  break;
                default:
                  v158 = v154;
                  v203 = v151;
                  v161 = __dstd;
                  memcpy(__dstd, v203, *(_QWORD *)(v154 + 64));
                  v162 = v364;
                  break;
              }
              (*(void (**)(_QWORD *, _QWORD, uint64_t, void *))(v158 + 56))(v161, 0, 1, v162);
              v156 = v161;
              v157 = v311;
            }
            v213 = __srca[5];
            v214 = (char *)v156 + v213;
            v366 = (char *)v157 + v213;
            v215 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v215 - 8) + 16))(v214, v366, v215);
            ((void (*)(_QWORD *, _QWORD, uint64_t, int *))v326[7])(v156, 0, 1, __srca);
            v26 = v321;
          }
          v216 = v26[7];
          v217 = (char *)v8 + v216;
          v218 = (char *)v9 + v216;
          v219 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v219 - 8) + 16))(v217, v218, v219);
          goto LABEL_116;
        case 3u:
          v402 = v15;
          v387 = v11;
          v32 = v9[1];
          *v8 = *v9;
          v8[1] = v32;
          v348 = (int *)type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
          v33 = v348[5];
          v327 = (_QWORD *)((char *)v8 + v33);
          v34 = (_QWORD *)((char *)v9 + v33);
          v35 = type metadata accessor for TranscriptProtoASTFlatValue(0);
          v36 = *(_QWORD *)(v35 - 8);
          __dste = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v36 + 48);
          v37 = v35;
          swift_bridgeObjectRetain();
          __srcb = v34;
          if (__dste(v34, 1, v37))
          {
            v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
            memcpy(v327, v34, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
            v11 = v387;
          }
          else
          {
            v308 = v36;
            v95 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            v96 = *(_QWORD *)(v95 - 8);
            v320 = v95;
            v11 = v387;
            if ((*(unsigned int (**)(_QWORD *, uint64_t))(v96 + 48))(__srcb, 1))
            {
              v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
              v98 = __srcb;
              memcpy(v327, __srcb, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload())
              {
                case 3u:
                case 6u:
                case 7u:
                case 8u:
                  v113 = __srcb[1];
                  *v327 = *__srcb;
                  v327[1] = v113;
                  swift_bridgeObjectRetain();
                  goto LABEL_82;
                case 4u:
                  *v327 = *__srcb;
                  v163 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                  v266 = (char *)__srcb + v163;
                  v280 = (char *)v327 + v163;
                  v164 = sub_2408E57A4();
                  v251 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v164 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v251(v280, v266, v164);
                  v11 = v387;
                  goto LABEL_82;
                case 5u:
                  *v327 = *__srcb;
                  v165 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                  v267 = (char *)__srcb + v165;
                  v281 = (char *)v327 + v165;
                  v166 = sub_2408E57A4();
                  v252 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v166 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v252(v281, v267, v166);
                  v11 = v387;
                  goto LABEL_82;
                case 9u:
                  *(_DWORD *)v327 = *(_DWORD *)__srcb;
                  v167 = __srcb[2];
                  v327[1] = __srcb[1];
                  v327[2] = v167;
                  v168 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                  v268 = (char *)__srcb + v168;
                  v282 = (char *)v327 + v168;
                  v169 = sub_2408E57A4();
                  v253 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v169 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v253(v282, v268, v169);
                  v11 = v387;
LABEL_82:
                  swift_storeEnumTagMultiPayload();
                  break;
                default:
                  memcpy(v327, __srcb, *(_QWORD *)(v96 + 64));
                  break;
              }
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v96 + 56))(v327, 0, 1, v320);
              v98 = __srcb;
            }
            v170 = *(int *)(v37 + 20);
            __srcq = (char *)v327 + v170;
            v171 = (char *)v98 + v170;
            v172 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v172 - 8) + 16))(__srcq, v171, v172);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v308 + 56))(v327, 0, 1, v37);
          }
          v173 = v348[6];
          v174 = (char *)v8 + v173;
          v175 = (char *)v9 + v173;
          v176 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v176 - 8) + 16))(v174, v175, v176);
          goto LABEL_86;
        case 4u:
          v402 = v15;
          v39 = type metadata accessor for TranscriptProtoASTFlatValue(0);
          __dstb = *(_QWORD **)(v39 - 8);
          __srcc = (unsigned int (*)(_QWORD *, uint64_t, uint64_t))__dstb[6];
          v386 = v11;
          if (__srcc(v9, 1, v39))
          {
            v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
            memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
          }
          else
          {
            v330 = (int *)v39;
            v99 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            v100 = *(_QWORD *)(v99 - 8);
            if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v100 + 48))(v9, 1, v99))
            {
              v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
              memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v101 - 8) + 64));
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload())
              {
                case 3u:
                case 6u:
                case 7u:
                case 8u:
                  v114 = v9[1];
                  *v8 = *v9;
                  v8[1] = v114;
                  swift_bridgeObjectRetain();
                  goto LABEL_91;
                case 4u:
                  *v8 = *v9;
                  v177 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                  v312 = (char *)v9 + v177;
                  v322 = (char *)v8 + v177;
                  v178 = sub_2408E57A4();
                  v302 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v178 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v302(v322, v312, v178);
                  goto LABEL_91;
                case 5u:
                  *v8 = *v9;
                  v179 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                  v313 = (char *)v9 + v179;
                  v323 = (char *)v8 + v179;
                  v180 = sub_2408E57A4();
                  v303 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v180 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v303(v323, v313, v180);
                  goto LABEL_91;
                case 9u:
                  *(_DWORD *)v8 = *(_DWORD *)v9;
                  v181 = v9[2];
                  v8[1] = v9[1];
                  v8[2] = v181;
                  v182 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                  v314 = (char *)v9 + v182;
                  v324 = (char *)v8 + v182;
                  v183 = sub_2408E57A4();
                  v304 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v183 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v304(v324, v314, v183);
LABEL_91:
                  swift_storeEnumTagMultiPayload();
                  break;
                default:
                  memcpy(v8, v9, *(_QWORD *)(v100 + 64));
                  break;
              }
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v100 + 56))(v8, 0, 1, v99);
            }
            v184 = v330[5];
            v185 = (char *)v8 + v184;
            v186 = (char *)v9 + v184;
            v187 = sub_2408E57A4();
            v188 = v186;
            v39 = (uint64_t)v330;
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v187 - 8) + 16))(v185, v188, v187);
            ((void (*)(_QWORD *, _QWORD, uint64_t, int *))__dstb[7])(v8, 0, 1, v330);
          }
          v189 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
          v190 = *(int *)(v189 + 20);
          v365 = (_QWORD *)((char *)v8 + v190);
          v191 = (char *)v9 + v190;
          if (__srcc((_QWORD *)((char *)v9 + v190), 1, v39))
          {
            v192 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
            memcpy(v365, v191, *(_QWORD *)(*(_QWORD *)(v192 - 8) + 64));
          }
          else
          {
            __srce = (void *)v189;
            v334 = (int *)v39;
            v193 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            v194 = *(_QWORD *)(v193 - 8);
            v195 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v194 + 48))(v191, 1, v193);
            v196 = v191;
            if (v195)
            {
              v197 = v191;
              v198 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
              v199 = v365;
              memcpy(v365, v197, *(_QWORD *)(*(_QWORD *)(v198 - 8) + 64));
              v200 = v197;
            }
            else
            {
              v201 = v194;
              v202 = v196;
              v325 = v196;
              switch(swift_getEnumCaseMultiPayload())
              {
                case 3u:
                case 6u:
                case 7u:
                case 8u:
                  v227 = *(_QWORD *)v202;
                  v226 = *((_QWORD *)v202 + 1);
                  v221 = v365;
                  *v365 = v227;
                  v365[1] = v226;
                  swift_bridgeObjectRetain();
                  goto LABEL_112;
                case 4u:
                  v305 = *(_QWORD *)v202;
                  v315 = v193;
                  v222 = v202;
                  v221 = v365;
                  *v365 = v305;
                  v223 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                  v286 = (char *)v222 + v223;
                  v298 = (char *)v365 + v223;
                  v193 = v315;
                  v257 = sub_2408E57A4();
                  v271 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v257 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v271(v298, v286, v257);
                  goto LABEL_112;
                case 5u:
                  v306 = *(_QWORD *)v202;
                  v316 = v193;
                  v224 = v202;
                  v221 = v365;
                  *v365 = v306;
                  v225 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                  v287 = (char *)v224 + v225;
                  v299 = (char *)v365 + v225;
                  v193 = v316;
                  v258 = sub_2408E57A4();
                  v272 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v258 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v272(v299, v287, v258);
                  goto LABEL_112;
                case 9u:
                  v228 = *(_DWORD *)v202;
                  v317 = v193;
                  v229 = v202;
                  v221 = v365;
                  *(_DWORD *)v365 = v228;
                  v230 = v229[2];
                  v365[1] = v229[1];
                  v365[2] = v230;
                  v231 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                  v288 = (char *)v229 + v231;
                  v300 = (char *)v365 + v231;
                  v193 = v317;
                  v259 = sub_2408E57A4();
                  v273 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v259 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v273(v300, v288, v259);
LABEL_112:
                  swift_storeEnumTagMultiPayload();
                  break;
                default:
                  v220 = v202;
                  v221 = v365;
                  memcpy(v365, v220, *(_QWORD *)(v201 + 64));
                  break;
              }
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v201 + 56))(v221, 0, 1, v193);
              v199 = v221;
              v200 = v325;
            }
            v232 = v334[5];
            v233 = (char *)v199 + v232;
            v367 = &v200[v232];
            v234 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v234 - 8) + 16))(v233, v367, v234);
            ((void (*)(_QWORD *, _QWORD, uint64_t, int *))__dstb[7])(v199, 0, 1, v334);
            v189 = (uint64_t)__srce;
          }
          v235 = *(int *)(v189 + 24);
          v236 = (char *)v8 + v235;
          v237 = (char *)v9 + v235;
          v238 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v238 - 8) + 16))(v236, v237, v238);
LABEL_116:
          swift_storeEnumTagMultiPayload();
          v11 = v386;
          goto LABEL_117;
        case 5u:
          v403 = v15;
          v41 = v9[1];
          *v8 = *v9;
          v8[1] = v41;
          v8[2] = v9[2];
          v42 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0) + 24);
          v349 = (char *)v9 + v42;
          __srcf = (char *)v8 + v42;
          v388 = v11;
          v43 = sub_2408E57A4();
          __dstf = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16);
          v15 = v403;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v44 = v43;
          v11 = v388;
          __dstf(__srcf, v349, v44);
          swift_storeEnumTagMultiPayload();
          break;
        case 6u:
          *v8 = *v9;
          v45 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0) + 20);
          v350 = (char *)v9 + v45;
          __srcg = (char *)v8 + v45;
          v46 = sub_2408E57A4();
          v389 = v11;
          v47 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 16);
          swift_bridgeObjectRetain();
          v47(__srcg, v350, v46);
          v11 = v389;
          swift_storeEnumTagMultiPayload();
          break;
        case 7u:
          v402 = v15;
          v390 = v11;
          v48 = v9[1];
          *v8 = *v9;
          v8[1] = v48;
          __srcd = (int *)type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
          v49 = __srcd[5];
          __dstc = (char *)v8 + v49;
          v50 = (char *)v9 + v49;
          v51 = type metadata accessor for TranscriptProtoASTPickType(0);
          v307 = *(_QWORD *)(v51 - 8);
          v351 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v307 + 48);
          swift_bridgeObjectRetain();
          v328 = v50;
          if (v351(v50, 1, v51))
          {
            v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D08);
            memcpy(__dstc, v50, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
          }
          else
          {
            *(_QWORD *)__dstc = *(_QWORD *)v50;
            __dstc[8] = v50[8];
            v102 = *(int *)(v51 + 20);
            v103 = &__dstc[v102];
            v360 = &v328[v102];
            v104 = sub_2408E57A4();
            (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v104 - 8) + 16))(v103, v360, v104);
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v307 + 56))(__dstc, 0, 1, v51);
          }
          v11 = v390;
          v105 = __srcd[6];
          v106 = (char *)v8 + v105;
          v107 = (char *)v9 + v105;
          v108 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v108 - 8) + 16))(v106, v107, v108);
LABEL_86:
          swift_storeEnumTagMultiPayload();
LABEL_117:
          v15 = v402;
          break;
        case 8u:
          v404 = v15;
          v53 = v9[1];
          *v8 = *v9;
          v8[1] = v53;
          v54 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0) + 20);
          v352 = (char *)v9 + v54;
          __srch = (char *)v8 + v54;
          v55 = sub_2408E57A4();
          v391 = v11;
          v56 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 16);
          v15 = v404;
          swift_bridgeObjectRetain();
          v56(__srch, v352, v55);
          v11 = v391;
          swift_storeEnumTagMultiPayload();
          break;
        case 9u:
          v405 = v15;
          v57 = v9[1];
          *v8 = *v9;
          v8[1] = v57;
          *((_WORD *)v8 + 8) = *((_WORD *)v9 + 8);
          v58 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0) + 28);
          v353 = (char *)v9 + v58;
          __srci = (char *)v8 + v58;
          v59 = sub_2408E57A4();
          v392 = v11;
          v60 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16);
          v15 = v405;
          swift_bridgeObjectRetain();
          v60(__srci, v353, v59);
          v11 = v392;
          swift_storeEnumTagMultiPayload();
          break;
        case 0xAu:
          v406 = v15;
          v61 = v9[1];
          *v8 = *v9;
          v8[1] = v61;
          v62 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0) + 20);
          v354 = (char *)v9 + v62;
          __srcj = (char *)v8 + v62;
          v63 = sub_2408E57A4();
          v393 = v11;
          v64 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 16);
          v15 = v406;
          swift_bridgeObjectRetain();
          v64(__srcj, v354, v63);
          v11 = v393;
          swift_storeEnumTagMultiPayload();
          break;
        case 0xBu:
          v407 = v15;
          v65 = v9[1];
          *v8 = *v9;
          v8[1] = v65;
          v66 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0) + 20);
          v355 = (char *)v9 + v66;
          __srck = (char *)v8 + v66;
          v67 = sub_2408E57A4();
          v394 = v11;
          v68 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 16);
          v15 = v407;
          swift_bridgeObjectRetain();
          v68(__srck, v355, v67);
          v11 = v394;
          swift_storeEnumTagMultiPayload();
          break;
        case 0xCu:
          *v8 = *v9;
          v69 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0) + 20);
          v356 = (char *)v9 + v69;
          __srcl = (char *)v8 + v69;
          v70 = sub_2408E57A4();
          v395 = v11;
          v71 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 16);
          swift_bridgeObjectRetain();
          v71(__srcl, v356, v70);
          v11 = v395;
          swift_storeEnumTagMultiPayload();
          break;
        case 0xDu:
          v408 = v15;
          v72 = v9[1];
          *v8 = *v9;
          v8[1] = v72;
          v73 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0) + 20);
          v357 = (char *)v9 + v73;
          __srcm = (char *)v8 + v73;
          v74 = sub_2408E57A4();
          v396 = v11;
          v75 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v74 - 8) + 16);
          v15 = v408;
          swift_bridgeObjectRetain();
          v75(__srcm, v357, v74);
          v11 = v396;
          swift_storeEnumTagMultiPayload();
          break;
        case 0xEu:
          v409 = v15;
          v76 = v9[1];
          *v8 = *v9;
          v8[1] = v76;
          v77 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0) + 20);
          v358 = (char *)v9 + v77;
          __srcn = (char *)v8 + v77;
          v78 = sub_2408E57A4();
          v397 = v11;
          v79 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v78 - 8) + 16);
          v15 = v409;
          swift_bridgeObjectRetain();
          v79(__srcn, v358, v78);
          v11 = v397;
          swift_storeEnumTagMultiPayload();
          break;
        case 0xFu:
        case 0x11u:
          v80 = sub_2408E57A4();
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v80 - 8) + 16))(v8, v9, v80);
          swift_storeEnumTagMultiPayload();
          break;
        case 0x10u:
          *v8 = *v9;
          v81 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0) + 20);
          v359 = (char *)v9 + v81;
          __srco = (char *)v8 + v81;
          v82 = sub_2408E57A4();
          v398 = v11;
          v83 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v82 - 8) + 16);
          swift_bridgeObjectRetain();
          v83(__srco, v359, v82);
          v11 = v398;
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v8, v9, *(_QWORD *)(v15 + 64));
          break;
      }
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v8, 0, 1, v14);
    }
    v239 = *(int *)(v10 + 20);
    v240 = (char *)v8 + v239;
    v241 = (char *)v9 + v239;
    v242 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v242 - 8) + 16))(v240, v241, v242);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v243 = *(int *)(a3 + 24);
  v244 = (char *)a1 + v243;
  v245 = (char *)a2 + v243;
  v246 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v246 - 8) + 16))(v244, v245, v246);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoASTFlatAssignExpr(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  size_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(_QWORD *, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  size_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int *v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  int *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, char *, uint64_t);
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, char *, uint64_t);
  uint64_t v66;
  uint64_t v67;
  void (*v68)(char *, char *, uint64_t);
  uint64_t v69;
  uint64_t v70;
  void (*v71)(char *, char *, uint64_t);
  uint64_t v72;
  uint64_t v73;
  void (*v74)(char *, char *, uint64_t);
  uint64_t v75;
  uint64_t v76;
  void (*v77)(char *, char *, uint64_t);
  uint64_t v78;
  uint64_t v79;
  void (*v80)(char *, char *, uint64_t);
  uint64_t v81;
  uint64_t v82;
  void (*v83)(char *, char *, uint64_t);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void (*v87)(char *, char *, uint64_t);
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  unsigned int (**v92)(const void *, uint64_t, uint64_t);
  uint64_t v93;
  int *v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  int *v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void (*v114)(char *, char *, uint64_t);
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  void (*v121)(char *, char *, uint64_t);
  uint64_t v122;
  uint64_t v123;
  void (*v124)(char *, char *, uint64_t);
  uint64_t v125;
  uint64_t v126;
  void (*v127)(char *, char *, uint64_t);
  uint64_t v128;
  uint64_t v129;
  void (*v130)(char *, char *, uint64_t);
  uint64_t v131;
  uint64_t v132;
  void (*v133)(char *, char *, uint64_t);
  uint64_t v134;
  uint64_t v135;
  void (*v136)(char *, char *, uint64_t);
  uint64_t v137;
  uint64_t v138;
  void (*v139)(char *, char *, uint64_t);
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  void (*v143)(char *, char *, uint64_t);
  uint64_t v144;
  uint64_t v145;
  _QWORD *v146;
  uint64_t v147;
  _QWORD *v148;
  int *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  _QWORD *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  _QWORD *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  _BYTE *v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  _QWORD *v171;
  uint64_t v172;
  unsigned int (**v173)(_QWORD *, uint64_t, uint64_t);
  uint64_t v174;
  int *v175;
  uint64_t v176;
  _QWORD *v177;
  _QWORD *v178;
  uint64_t v179;
  unsigned int (*v180)(char *, uint64_t, int *);
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  uint64_t v185;
  _QWORD *v186;
  unsigned int (*v187)(char *, uint64_t, int *);
  int *v188;
  uint64_t v189;
  int *v190;
  uint64_t v191;
  unsigned int (*v192)(_QWORD *, uint64_t, uint64_t);
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  void (*v196)(char *, char *, uint64_t);
  uint64_t v197;
  uint64_t v198;
  char *v199;
  uint64_t v200;
  void (*v201)(char *, char *, uint64_t);
  char *v202;
  uint64_t v203;
  uint64_t v204;
  _BYTE *v205;
  uint64_t v206;
  unsigned int (*v207)(_BYTE *, uint64_t, uint64_t);
  uint64_t v208;
  uint64_t v209;
  char *v210;
  uint64_t v211;
  void (*v212)(char *, char *, uint64_t);
  char *v213;
  uint64_t v214;
  char *v215;
  uint64_t v216;
  void (*v217)(char *, char *, uint64_t);
  char *v218;
  uint64_t v219;
  char *v220;
  uint64_t v221;
  void (*v222)(char *, char *, uint64_t);
  char *v223;
  uint64_t v224;
  char *v225;
  uint64_t v226;
  void (*v227)(char *, char *, uint64_t);
  char *v228;
  uint64_t v229;
  char *v230;
  uint64_t v231;
  void (*v232)(char *, char *, uint64_t);
  char *v233;
  uint64_t v234;
  char *v235;
  uint64_t v236;
  void (*v237)(char *, char *, uint64_t);
  char *v238;
  uint64_t v239;
  char *v240;
  uint64_t v241;
  void (*v242)(char *, char *, uint64_t);
  char *v243;
  uint64_t v244;
  uint64_t v245;
  char *v246;
  uint64_t v247;
  void (*v248)(char *, char *, uint64_t);
  char *v249;
  uint64_t v250;
  uint64_t v251;
  _QWORD *v252;
  uint64_t v253;
  _QWORD *v254;
  int *v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  _QWORD *v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  _QWORD *v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  _BYTE *v269;
  uint64_t v270;
  uint64_t v271;
  char *v272;
  char *v273;
  uint64_t v274;
  uint64_t v275;
  _QWORD *v276;
  uint64_t v277;
  uint64_t v278;
  _QWORD *v279;
  _QWORD *v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  _QWORD *v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  _BYTE *v293;
  _BYTE *v294;
  uint64_t v295;
  uint64_t v296;
  char *v297;
  char *v298;
  uint64_t v299;
  uint64_t v300;
  _QWORD *v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  char *v312;
  char *v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  char *v327;
  char *v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  char *v337;
  uint64_t v338;
  uint64_t v339;
  char *v340;
  char *v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  char *v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t *v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  _QWORD *v355;
  uint64_t *v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t *v359;
  _QWORD *v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  char *v369;
  uint64_t v370;
  uint64_t v371;
  char *v372;
  char *v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  char *v382;
  char *v383;
  uint64_t v384;
  char *v385;
  uint64_t v386;
  uint64_t v387;
  char *v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  char *v392;
  uint64_t v393;
  _QWORD *v394;
  char *v395;
  char *v396;
  uint64_t v397;
  char *v398;
  uint64_t v399;
  _QWORD *v400;
  uint64_t *v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  int v406;
  uint64_t *v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  char *v411;
  uint64_t v412;
  uint64_t v413;
  char *v414;
  char *v415;
  uint64_t v416;
  uint64_t v417;
  char *v418;
  _QWORD *v419;
  uint64_t v420;
  uint64_t v421;
  _QWORD *v422;
  uint64_t v423;
  uint64_t v424;
  int v425;
  _QWORD *v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  char *v430;
  uint64_t v431;
  uint64_t v432;
  char *v433;
  char *v434;
  uint64_t v435;
  uint64_t v436;
  char *v437;
  char *v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;
  char *v450;
  char *v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  char *v460;
  uint64_t v461;
  uint64_t v462;
  char *v463;
  char *v464;
  uint64_t v465;
  uint64_t v466;
  uint64_t v467;
  uint64_t v468;
  uint64_t v469;
  char *v470;
  uint64_t v471;
  uint64_t v472;
  uint64_t *v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t v476;
  uint64_t v477;
  _QWORD *v478;
  uint64_t *v479;
  uint64_t v480;
  uint64_t v481;
  uint64_t *v482;
  _QWORD *v483;
  uint64_t v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t v490;
  uint64_t v491;
  char *v492;
  uint64_t v493;
  uint64_t v494;
  uint64_t v495;
  uint64_t v496;
  uint64_t v497;
  uint64_t v498;
  uint64_t v499;
  uint64_t v500;
  char *v501;
  char *v502;
  uint64_t v503;
  char *v504;
  uint64_t v505;
  uint64_t v506;
  char *v507;
  uint64_t v508;
  uint64_t v509;
  uint64_t v510;
  char *v511;
  uint64_t v512;
  _QWORD *v513;
  char *v514;
  char *v515;
  uint64_t v516;
  char *v517;
  uint64_t v518;
  _QWORD *v519;
  uint64_t *v520;
  uint64_t v521;
  uint64_t v522;
  uint64_t v523;
  uint64_t v524;
  int v525;
  uint64_t *v526;
  uint64_t v527;
  uint64_t v528;
  uint64_t v529;
  char *v530;
  uint64_t v531;
  uint64_t v532;
  char *v533;
  char *v534;
  uint64_t v535;
  uint64_t v536;
  char *v537;
  _QWORD *v538;
  uint64_t v539;
  uint64_t v540;
  _QWORD *v541;
  uint64_t v542;
  uint64_t v543;
  int v544;
  _QWORD *v545;
  uint64_t v546;
  uint64_t v547;
  uint64_t v548;
  char *v549;
  uint64_t v550;
  uint64_t v551;
  char *v552;
  char *v553;
  uint64_t v554;
  uint64_t v555;
  char *v556;
  char *v557;
  uint64_t v558;
  uint64_t v559;
  char *v560;
  char *v561;
  uint64_t v562;
  uint64_t v564;
  char *v565;
  uint64_t v566;
  uint64_t v567;
  char *v568;
  uint64_t v569;
  uint64_t v570;
  uint64_t v571;
  uint64_t v572;
  _QWORD *v573;
  char *v574;
  char *v575;
  uint64_t v576;
  uint64_t v577;
  char *v578;
  char *v579;
  uint64_t v580;
  uint64_t v581;
  uint64_t v582;
  uint64_t v583;
  uint64_t v584;
  char *v585;
  char *v586;
  uint64_t v587;
  uint64_t v588;
  _QWORD *v589;
  _QWORD *v590;
  uint64_t v591;
  uint64_t v592;
  uint64_t v593;
  uint64_t v594;
  uint64_t v595;
  uint64_t v596;
  uint64_t v597;
  uint64_t v598;
  uint64_t v599;
  uint64_t v600;
  uint64_t v601;
  char *v602;
  char *v603;
  uint64_t v604;
  uint64_t v605;
  char *v606;
  char *v607;
  uint64_t v608;
  uint64_t v609;
  uint64_t v610;
  uint64_t v611;
  uint64_t v612;
  uint64_t v613;
  uint64_t v614;
  uint64_t v615;
  char *v616;
  char *v617;
  uint64_t v618;
  char *v619;
  uint64_t v620;
  _QWORD *v621;
  _QWORD *v622;
  uint64_t v623;
  uint64_t v624;
  uint64_t v625;
  uint64_t v626;
  uint64_t v627;
  uint64_t v628;
  uint64_t v629;
  uint64_t v630;
  uint64_t v631;
  uint64_t v632;
  char *v633;
  char *v634;
  uint64_t v635;
  uint64_t v636;
  char *v637;
  char *v638;
  uint64_t v639;
  uint64_t v640;
  uint64_t v641;
  uint64_t v642;
  uint64_t v643;
  uint64_t v644;
  char *v645;
  char *v646;
  uint64_t v647;
  uint64_t v648;
  char *v649;
  char *v650;
  uint64_t v651;
  uint64_t v652;
  uint64_t v653;
  uint64_t v654;
  void (*v655)(char *, char *, uint64_t);
  void (*v656)(char *, char *, uint64_t);
  void (*v657)(char *, char *, uint64_t);
  uint64_t v658;
  uint64_t v659;
  void (*v660)(char *, char *, uint64_t);
  void (*v661)(char *, char *, uint64_t);
  void (*v662)(char *, char *, uint64_t);
  void (*v663)(char *, char *, uint64_t);
  void (*v664)(char *, char *, uint64_t);
  void (*v665)(char *, char *, uint64_t);
  void (*v666)(char *, char *, uint64_t);
  char *v667;
  char *v668;
  char *v669;
  void (*v670)(char *, char *, uint64_t);
  void (*v671)(char *, char *, uint64_t);
  void (*v672)(char *, char *, uint64_t);
  void (*v673)(char *, char *, uint64_t);
  void (*v674)(char *, char *, uint64_t);
  uint64_t v675;
  uint64_t v676;
  uint64_t v677;
  void (*v678)(char *, char *, uint64_t);
  void (*v679)(char *, char *, uint64_t);
  void (*v680)(char *, char *, uint64_t);
  uint64_t v681;
  uint64_t v682;
  void (*v683)(char *, char *, uint64_t);
  char *v684;
  char *v685;
  char *v686;
  char *v687;
  char *v688;
  char *v689;
  char *v690;
  char *v691;
  char *v692;
  char *v693;
  char *v694;
  char *v695;
  char *v696;
  char *v697;
  char *v698;
  void (*v699)(char *, char *, uint64_t);
  void (*v700)(char *, char *, uint64_t);
  void (*v701)(char *, char *, uint64_t);
  void (*v702)(char *, char *, uint64_t);
  void (*v703)(char *, char *, uint64_t);
  void (*v704)(char *, char *, uint64_t);
  char *v705;
  char *v706;
  char *v707;
  void (*v708)(char *, char *, uint64_t);
  void (*v709)(char *, char *, uint64_t);
  void (*v710)(char *, char *, uint64_t);
  void (*v711)(char *, char *, uint64_t);
  void (*v712)(char *, char *, uint64_t);
  char *v713;
  char *v714;
  char *v715;
  char *v716;
  char *v717;
  char *v718;
  char *v719;
  char *v720;
  char *v721;
  char *v722;
  char *v723;
  char *v724;
  char *v725;
  char *v726;
  char *v727;
  char *v728;
  char *v729;
  char *v730;
  char *v731;
  char *v732;
  char *v733;
  char *v734;
  char *v735;
  char *v736;
  char *v737;
  char *v738;
  char *v739;
  void (*v740)(char *, char *, uint64_t);
  void (*v741)(char *, char *, uint64_t);
  void (*v742)(char *, char *, uint64_t);
  uint64_t v743;
  uint64_t v744;
  uint64_t v745;
  void (*v746)(char *, char *, uint64_t);
  void (*v747)(char *, char *, uint64_t);
  void (*v748)(char *, char *, uint64_t);
  uint64_t v749;
  uint64_t v750;
  void (*v751)(char *, char *, uint64_t);
  void (*v752)(char *, char *, uint64_t);
  void (*v753)(char *, char *, uint64_t);
  uint64_t v754;
  uint64_t v755;
  char *v756;
  char *v757;
  char *v758;
  char *v759;
  char *v760;
  char *v761;
  char *v762;
  char *v763;
  char *v764;
  char *v765;
  char *v766;
  char *v767;
  char *v768;
  void (*v769)(char *, char *, uint64_t);
  void (*v770)(char *, char *, uint64_t);
  void (*v771)(char *, char *, uint64_t);
  char *v772;
  char *v773;
  char *v774;
  void (*v775)(char *, char *, uint64_t);
  void (*v776)(char *, char *, uint64_t);
  void (*v777)(char *, char *, uint64_t);
  uint64_t v778;
  uint64_t v779;
  uint64_t v780;
  uint64_t v781;
  uint64_t v782;
  uint64_t v783;
  uint64_t v784;
  uint64_t *v785;
  char *v786;
  char *v787;
  char *v788;
  uint64_t v789;
  uint64_t v790;
  void (*v791)(char *, char *, uint64_t);
  void (*v792)(char *, char *, uint64_t);
  void (*v793)(char *, char *, uint64_t);
  uint64_t v794;
  uint64_t v795;
  char *v796;
  char *v797;
  char *v798;
  char *v799;
  char *v800;
  char *v801;
  char *v802;
  char *v803;
  char *v804;
  char *v805;
  char *v806;
  char *v807;
  void (*v808)(char *, char *, uint64_t);
  void (*v809)(char *, char *, uint64_t);
  void (*v810)(char *, char *, uint64_t);
  uint64_t v811;
  uint64_t v812;
  int *v813;
  uint64_t v814;
  uint64_t v815;
  uint64_t v816;
  uint64_t v817;
  int *v818;
  char *v819;
  char *v820;
  char *v821;
  char *v822;
  uint64_t *v823;
  char *v824;
  char *v825;
  char *v826;
  uint64_t v827;
  char *v828;
  char *v829;
  char *v830;
  void (*v831)(char *, char *, uint64_t);
  void (*v832)(char *, char *, uint64_t);
  void (*v833)(char *, char *, uint64_t);
  char *v834;
  char *v835;
  char *v836;
  char *v837;
  char *v838;
  char *v839;
  _QWORD *v840;
  _QWORD *v841;
  char *v842;
  int *v843;
  int *v844;
  unsigned int (**v845)(const void *, uint64_t, uint64_t);
  int *v846;
  void *v847;
  _QWORD *v848;
  void (*v849)(char *, char *, uint64_t);
  void (*v850)(char *, char *, uint64_t);
  void (*v851)(char *, char *, uint64_t);
  _QWORD *v852;
  _QWORD *v853;
  int *v854;
  int *v855;
  char *v856;
  char *v857;
  char *v858;
  char *v859;
  char *v860;
  char *v861;
  char *v862;
  char *v863;
  char *v864;
  char *v865;
  _QWORD *__dst;
  _QWORD *__dsta;
  unsigned int (*__dstm)(_QWORD *, uint64_t, uint64_t);
  _QWORD *__dstb;
  void (*__dstn)(char *, char *, uint64_t);
  _BYTE *__dstc;
  _QWORD *__dstd;
  unsigned int (*__dsto)(_QWORD *, uint64_t, uint64_t);
  unsigned int (*__dstp)(char *, uint64_t, uint64_t);
  int *__dste;
  int *__dstf;
  _QWORD *__dstg;
  void *__dsth;
  char *__dstq;
  char *__dstr;
  char *__dsts;
  void (*__dstt)(char *, char *, uint64_t);
  void (*__dstu)(char *, char *, uint64_t);
  void (*__dstv)(char *, char *, uint64_t);
  char *__dstw;
  _QWORD *__dsti;
  int *__dstj;
  _QWORD *__dstk;
  char *__dstx;
  char *__dsty;
  char *__dstz;
  _QWORD *__dstl;
  int *v893;
  unsigned int (*v894)(char *, uint64_t, int *);
  int *v895;
  char *v896;
  char *v897;
  unsigned int (*v898)(char *, uint64_t, uint64_t);
  char *v899;
  char *v900;
  char *v901;
  char *v902;
  char *v903;
  char *v904;
  char *v905;
  char *v906;
  _QWORD *v907;
  _QWORD *v908;
  int *v909;
  _QWORD *v910;
  void (*v911)(char *, char *, uint64_t);
  char *v912;
  _QWORD *v913;
  void *v914;
  int *v915;
  int *v916;
  int *v917;
  char *v918;
  char *v919;
  char *v920;
  char *v921;
  char *v922;
  char *v923;
  _QWORD *v924;
  char *v925;
  char *v926;
  void (*v927)(char *, char *, uint64_t);
  void (*v928)(char *, char *, uint64_t);
  void (*v929)(char *, char *, uint64_t);
  char *v930;
  _QWORD *v931;
  int *v932;
  _QWORD *__src;
  int *__srca;
  _QWORD *__srcb;
  unsigned int (*__srcc)(_QWORD *, uint64_t, uint64_t);
  char *__srcp;
  char *__srcq;
  int *__srcd;
  char *__srcr;
  char *__srcs;
  char *__srct;
  char *__srcu;
  char *__srcv;
  char *__srcw;
  char *__srcx;
  char *__srcy;
  int *__srce;
  unsigned int (*__srcf)(char *, uint64_t, int *);
  _QWORD *__srcg;
  char *__srcz;
  char *__srcba;
  char *__srch;
  char *__srcbb;
  char *__srcbc;
  char *__srcbd;
  char *__srcbe;
  char *__srcbf;
  char *__srcbg;
  char *__srcbh;
  char *__srcbi;
  _QWORD *__srci;
  _QWORD *__srcj;
  _QWORD *__srck;
  char *__srcbj;
  _BYTE *__srcl;
  char *__srcbk;
  void *__srcm;
  char *__srcbl;
  char *__srcbm;
  char *__srcbn;
  char *__srcbo;
  char *__srcbp;
  void *__srcn;
  char *__srcbq;
  char *__srcbr;
  char *__srcbs;
  _QWORD *__srco;
  char *__srcbt;
  char *__srcbu;
  size_t *v981;
  _QWORD *v982;
  int *v983;
  _QWORD *v984;
  unsigned int (*v985)(_QWORD *, uint64_t, uint64_t);
  char *v986;
  char *v987;
  _BYTE *v988;
  char *v989;
  char *v990;
  char *v991;
  char *v992;
  char *v993;
  char *v994;
  char *v995;
  char *v996;
  _QWORD *v997;
  int *v998;
  int *v999;
  char *v1000;
  char *v1001;
  int *v1002;
  char *v1003;
  char *v1004;
  char *v1005;
  char *v1006;
  char *v1007;
  char *v1008;
  char *v1009;
  char *v1010;
  char *v1011;
  char *v1012;
  char *v1013;
  char *v1014;
  char *v1015;
  void *v1016;
  int *v1017;
  uint64_t v1018;
  uint64_t v1019;
  uint64_t v1020;
  uint64_t v1021;
  uint64_t v1022;
  uint64_t v1023;
  uint64_t v1024;
  uint64_t v1025;
  uint64_t v1026;
  uint64_t v1027;
  uint64_t v1028;
  uint64_t v1029;
  uint64_t v1030;
  uint64_t v1031;
  uint64_t v1032;
  uint64_t v1033;
  uint64_t v1034;
  uint64_t v1035;
  uint64_t v1036;
  uint64_t v1037;
  uint64_t v1038;
  uint64_t v1039;
  uint64_t v1040;
  uint64_t v1041;
  uint64_t v1042;
  uint64_t v1043;
  uint64_t v1044;
  uint64_t v1045;
  uint64_t v1046;
  uint64_t v1047;
  uint64_t v1048;
  uint64_t v1049;
  uint64_t v1050;
  uint64_t v1051;
  uint64_t v1052;
  uint64_t v1053;
  uint64_t v1054;
  uint64_t v1055;
  uint64_t v1056;
  uint64_t v1057;
  uint64_t v1058;
  uint64_t v1059;
  uint64_t v1060;
  uint64_t v1061;
  uint64_t v1062;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for TranscriptProtoASTFlatExpr(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (v13)
    {
      sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatExpr);
      goto LABEL_7;
    }
    v18 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
    v19 = *(_QWORD *)(v18 - 8);
    v20 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v19 + 48);
    v21 = v20(v7, 1, v18);
    v22 = v20(v8, 1, v18);
    if (v21)
    {
      if (!v22)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            v23 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            v24 = *(_QWORD *)(v23 - 8);
            if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v24 + 48))(v8, 1, v23))
            {
              v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
              memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload())
              {
                case 3u:
                case 6u:
                case 7u:
                case 8u:
                  *v7 = *v8;
                  v7[1] = v8[1];
                  swift_bridgeObjectRetain();
                  goto LABEL_161;
                case 4u:
                  *v7 = *v8;
                  v317 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                  v921 = (char *)v8 + v317;
                  __srcbl = (char *)v7 + v317;
                  v1057 = a3;
                  v318 = sub_2408E57A4();
                  __dstt = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v318 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v319 = v318;
                  a3 = v1057;
                  __dstt(__srcbl, v921, v319);
                  goto LABEL_161;
                case 5u:
                  *v7 = *v8;
                  v320 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                  v922 = (char *)v8 + v320;
                  __srcbm = (char *)v7 + v320;
                  v1058 = a3;
                  v321 = sub_2408E57A4();
                  __dstu = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v321 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v322 = v321;
                  a3 = v1058;
                  __dstu(__srcbm, v922, v322);
                  goto LABEL_161;
                case 9u:
                  *(_DWORD *)v7 = *(_DWORD *)v8;
                  v7[1] = v8[1];
                  v7[2] = v8[2];
                  v323 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                  v923 = (char *)v8 + v323;
                  __srcbn = (char *)v7 + v323;
                  v1059 = a3;
                  v324 = sub_2408E57A4();
                  __dstv = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v324 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v325 = v324;
                  a3 = v1059;
                  __dstv(__srcbn, v923, v325);
LABEL_161:
                  swift_storeEnumTagMultiPayload();
                  break;
                default:
                  memcpy(v7, v8, *(_QWORD *)(v24 + 64));
                  break;
              }
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v7, 0, 1, v23);
            }
            v326 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValue(0) + 20);
            v327 = (char *)v7 + v326;
            v328 = (char *)v8 + v326;
            v329 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v329 - 8) + 16))(v327, v328, v329);
            swift_storeEnumTagMultiPayload();
            break;
          case 1u:
            v1030 = a3;
            *(_BYTE *)v7 = *(_BYTE *)v8;
            v88 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
            v89 = *(int *)(v88 + 20);
            v907 = (_QWORD *)((char *)v7 + v89);
            __srce = (int *)v88;
            v90 = (_QWORD *)((char *)v8 + v89);
            v91 = type metadata accessor for TranscriptProtoASTFlatValue(0);
            v92 = *(unsigned int (***)(const void *, uint64_t, uint64_t))(v91 - 8);
            v982 = v90;
            if (v92[6](v90, 1, v91))
            {
              v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
              memcpy(v907, v90, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
            }
            else
            {
              v845 = v92;
              __dste = (int *)v91;
              v250 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
              v251 = *(_QWORD *)(v250 - 8);
              v252 = v982;
              if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v251 + 48))(v982, 1, v250))
              {
                v253 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
                v254 = v907;
                memcpy(v907, v982, *(_QWORD *)(*(_QWORD *)(v253 - 8) + 64));
                v255 = __dste;
              }
              else
              {
                v784 = v250;
                switch(swift_getEnumCaseMultiPayload())
                {
                  case 3u:
                  case 6u:
                  case 7u:
                  case 8u:
                    v254 = v907;
                    *v907 = *v982;
                    v907[1] = v982[1];
                    swift_bridgeObjectRetain();
                    v300 = v784;
                    goto LABEL_238;
                  case 4u:
                    v254 = v907;
                    *v907 = *v982;
                    v453 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                    v725 = (char *)v907 + v453;
                    v756 = (char *)v982 + v453;
                    v454 = sub_2408E57A4();
                    v699 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v454 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v699(v725, v756, v454);
                    v300 = v784;
                    goto LABEL_238;
                  case 5u:
                    v254 = v907;
                    *v907 = *v982;
                    v455 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                    v726 = (char *)v907 + v455;
                    v757 = (char *)v982 + v455;
                    v456 = sub_2408E57A4();
                    v700 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v456 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v700(v726, v757, v456);
                    v300 = v784;
                    goto LABEL_238;
                  case 9u:
                    v254 = v907;
                    *(_DWORD *)v907 = *(_DWORD *)v982;
                    v907[1] = v982[1];
                    v907[2] = v982[2];
                    v457 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                    v727 = (char *)v982 + v457;
                    v758 = (char *)v907 + v457;
                    v458 = sub_2408E57A4();
                    v701 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v458 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v701(v758, v727, v458);
                    v300 = v784;
LABEL_238:
                    swift_storeEnumTagMultiPayload();
                    break;
                  default:
                    v300 = v250;
                    v254 = v907;
                    memcpy(v907, v982, *(_QWORD *)(v251 + 64));
                    break;
                }
                (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v251 + 56))(v254, 0, 1, v300);
                v255 = __dste;
                v252 = v982;
              }
              v459 = v255[5];
              v1014 = (char *)v254 + v459;
              v460 = (char *)v252 + v459;
              v461 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v461 - 8) + 16))(v1014, v460, v461);
              ((void (*)(_QWORD *, _QWORD, uint64_t, int *))v845[7])(v254, 0, 1, __dste);
            }
            v462 = __srce[6];
            v463 = (char *)v7 + v462;
            v464 = (char *)v8 + v462;
            v465 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v465 - 8) + 16))(v463, v464, v465);
            goto LABEL_291;
          case 2u:
            v1030 = a3;
            *(_BYTE *)v7 = *(_BYTE *)v8;
            v94 = (int *)type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
            v95 = v94[5];
            v908 = (_QWORD *)((char *)v7 + v95);
            v96 = (_QWORD *)((char *)v8 + v95);
            v97 = type metadata accessor for TranscriptProtoASTFlatValue(0);
            __dstd = *(_QWORD **)(v97 - 8);
            v983 = (int *)v97;
            __srcf = (unsigned int (*)(char *, uint64_t, int *))__dstd[6];
            if (((unsigned int (*)(_QWORD *, uint64_t))__srcf)(v96, 1))
            {
              v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
              memcpy(v908, v96, *(_QWORD *)(*(_QWORD *)(v98 - 8) + 64));
              v99 = v983;
            }
            else
            {
              v846 = v94;
              v256 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
              v257 = *(_QWORD *)(v256 - 8);
              if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v257 + 48))(v96, 1, v256))
              {
                v258 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
                v259 = v908;
                memcpy(v908, v96, *(_QWORD *)(*(_QWORD *)(v258 - 8) + 64));
              }
              else
              {
                v816 = v257;
                switch(swift_getEnumCaseMultiPayload())
                {
                  case 3u:
                  case 6u:
                  case 7u:
                  case 8u:
                    v301 = v908;
                    *v908 = *v96;
                    v908[1] = v96[1];
                    swift_bridgeObjectRetain();
                    goto LABEL_246;
                  case 4u:
                    v301 = v908;
                    *v908 = *v96;
                    v466 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                    v728 = (char *)v96 + v466;
                    v759 = (char *)v908 + v466;
                    v675 = sub_2408E57A4();
                    v702 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v675 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v702(v759, v728, v675);
                    goto LABEL_246;
                  case 5u:
                    v301 = v908;
                    *v908 = *v96;
                    v467 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                    v729 = (char *)v96 + v467;
                    v760 = (char *)v908 + v467;
                    v676 = sub_2408E57A4();
                    v703 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v676 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v703(v760, v729, v676);
                    goto LABEL_246;
                  case 9u:
                    v301 = v908;
                    *(_DWORD *)v908 = *(_DWORD *)v96;
                    v908[1] = v96[1];
                    v908[2] = v96[2];
                    v468 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                    v730 = (char *)v96 + v468;
                    v761 = (char *)v908 + v468;
                    v677 = sub_2408E57A4();
                    v704 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v677 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v704(v761, v730, v677);
LABEL_246:
                    swift_storeEnumTagMultiPayload();
                    break;
                  default:
                    v301 = v908;
                    memcpy(v908, v96, *(_QWORD *)(v816 + 64));
                    break;
                }
                (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v816 + 56))(v301, 0, 1, v256);
                v259 = v301;
              }
              v99 = v983;
              v469 = v983[5];
              v930 = (char *)v259 + v469;
              v470 = (char *)v96 + v469;
              v471 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v471 - 8) + 16))(v930, v470, v471);
              ((void (*)(_QWORD *, _QWORD, uint64_t, int *))__dstd[7])(v259, 0, 1, v983);
              v94 = v846;
            }
            v472 = v94[6];
            v931 = (_QWORD *)((char *)v7 + v472);
            v473 = (_QWORD *)((char *)v8 + v472);
            if (__srcf((char *)v8 + v472, 1, v99))
            {
              v474 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
              memcpy(v931, v473, *(_QWORD *)(*(_QWORD *)(v474 - 8) + 64));
            }
            else
            {
              v855 = v94;
              v475 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
              v476 = *(_QWORD *)(v475 - 8);
              if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v476 + 48))(v473, 1, v475))
              {
                v477 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
                v478 = v931;
                memcpy(v931, v473, *(_QWORD *)(*(_QWORD *)(v477 - 8) + 64));
                v479 = v473;
              }
              else
              {
                v790 = v475;
                v823 = v473;
                v480 = v476;
                switch(swift_getEnumCaseMultiPayload())
                {
                  case 3u:
                  case 6u:
                  case 7u:
                  case 8u:
                    v481 = *v473;
                    v482 = v473;
                    v483 = v931;
                    *v931 = v481;
                    v931[1] = v482[1];
                    swift_bridgeObjectRetain();
                    v484 = v790;
                    goto LABEL_279;
                  case 4u:
                    v521 = *v473;
                    v483 = v931;
                    *v931 = v521;
                    v522 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                    v762 = (char *)v931 + v522;
                    v734 = (char *)v823 + v522;
                    v681 = sub_2408E57A4();
                    v708 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v681 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v708(v762, v734, v681);
                    v484 = v790;
                    goto LABEL_279;
                  case 5u:
                    v523 = *v473;
                    v483 = v931;
                    *v931 = v523;
                    v524 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                    v763 = (char *)v931 + v524;
                    v735 = (char *)v823 + v524;
                    v682 = sub_2408E57A4();
                    v709 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v682 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v709(v763, v735, v682);
                    v484 = v790;
                    goto LABEL_279;
                  case 9u:
                    v525 = *(_DWORD *)v473;
                    v526 = v473;
                    v483 = v931;
                    *(_DWORD *)v931 = v525;
                    v931[1] = v526[1];
                    v931[2] = v526[2];
                    v527 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                    v736 = (char *)v526 + v527;
                    v764 = (char *)v931 + v527;
                    v528 = sub_2408E57A4();
                    v683 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v528 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v683(v764, v736, v528);
                    v484 = v790;
LABEL_279:
                    swift_storeEnumTagMultiPayload();
                    break;
                  default:
                    v480 = v476;
                    v520 = v473;
                    v483 = v931;
                    memcpy(v931, v520, *(_QWORD *)(v476 + 64));
                    v484 = v790;
                    break;
                }
                (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v480 + 56))(v483, 0, 1, v484);
                v478 = v483;
                v479 = v823;
              }
              v529 = v983[5];
              v530 = (char *)v478 + v529;
              __srcbt = (char *)v479 + v529;
              v531 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v531 - 8) + 16))(v530, __srcbt, v531);
              ((void (*)(_QWORD *, _QWORD, uint64_t, int *))__dstd[7])(v478, 0, 1, v983);
              v94 = v855;
            }
            v532 = v94[7];
            v533 = (char *)v7 + v532;
            v534 = (char *)v8 + v532;
            v535 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v535 - 8) + 16))(v533, v534, v535);
            goto LABEL_291;
          case 3u:
            v1031 = a3;
            *v7 = *v8;
            v7[1] = v8[1];
            v100 = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
            v101 = *(int *)(v100 + 20);
            v909 = (int *)v100;
            __srcg = (_QWORD *)((char *)v7 + v101);
            v102 = (_QWORD *)((char *)v8 + v101);
            v103 = type metadata accessor for TranscriptProtoASTFlatValue(0);
            v104 = *(_QWORD *)(v103 - 8);
            __dsto = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v104 + 48);
            v105 = v103;
            swift_bridgeObjectRetain();
            v984 = v102;
            if (__dsto(v102, 1, v105))
            {
              v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
              memcpy(__srcg, v102, *(_QWORD *)(*(_QWORD *)(v106 - 8) + 64));
              a3 = v1031;
            }
            else
            {
              v815 = v104;
              v260 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
              v261 = *(_QWORD *)(v260 - 8);
              v847 = (void *)v260;
              a3 = v1031;
              if ((*(unsigned int (**)(_QWORD *, uint64_t))(v261 + 48))(v984, 1))
              {
                v262 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
                v263 = v984;
                memcpy(__srcg, v984, *(_QWORD *)(*(_QWORD *)(v262 - 8) + 64));
              }
              else
              {
                switch(swift_getEnumCaseMultiPayload())
                {
                  case 3u:
                  case 6u:
                  case 7u:
                  case 8u:
                    *__srcg = *v984;
                    __srcg[1] = v984[1];
                    swift_bridgeObjectRetain();
                    goto LABEL_259;
                  case 4u:
                    *__srcg = *v984;
                    v485 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                    v705 = (char *)v984 + v485;
                    v731 = (char *)__srcg + v485;
                    v486 = sub_2408E57A4();
                    v678 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v486 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v678(v731, v705, v486);
                    a3 = v1031;
                    goto LABEL_259;
                  case 5u:
                    *__srcg = *v984;
                    v487 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                    v706 = (char *)v984 + v487;
                    v732 = (char *)__srcg + v487;
                    v488 = sub_2408E57A4();
                    v679 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v488 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v679(v732, v706, v488);
                    a3 = v1031;
                    goto LABEL_259;
                  case 9u:
                    *(_DWORD *)__srcg = *(_DWORD *)v984;
                    __srcg[1] = v984[1];
                    __srcg[2] = v984[2];
                    v489 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                    v707 = (char *)v984 + v489;
                    v733 = (char *)__srcg + v489;
                    v490 = sub_2408E57A4();
                    v680 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v490 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v680(v733, v707, v490);
                    a3 = v1031;
LABEL_259:
                    swift_storeEnumTagMultiPayload();
                    break;
                  default:
                    memcpy(__srcg, v984, *(_QWORD *)(v261 + 64));
                    break;
                }
                (*(void (**)(_QWORD *, _QWORD, uint64_t, void *))(v261 + 56))(__srcg, 0, 1, v847);
                v263 = v984;
              }
              v491 = *(int *)(v105 + 20);
              v1015 = (char *)__srcg + v491;
              v492 = (char *)v263 + v491;
              v493 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v493 - 8) + 16))(v1015, v492, v493);
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v815 + 56))(__srcg, 0, 1, v105);
            }
            goto LABEL_113;
          case 4u:
            v107 = type metadata accessor for TranscriptProtoASTFlatValue(0);
            v910 = *(_QWORD **)(v107 - 8);
            v985 = (unsigned int (*)(_QWORD *, uint64_t, uint64_t))v910[6];
            v1030 = a3;
            if (v985(v8, 1, v107))
            {
              v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
              memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
            }
            else
            {
              __dstf = (int *)v107;
              v264 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
              v265 = *(_QWORD *)(v264 - 8);
              if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v265 + 48))(v8, 1, v264))
              {
                v266 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
                memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v266 - 8) + 64));
              }
              else
              {
                switch(swift_getEnumCaseMultiPayload())
                {
                  case 3u:
                  case 6u:
                  case 7u:
                  case 8u:
                    *v7 = *v8;
                    v7[1] = v8[1];
                    swift_bridgeObjectRetain();
                    goto LABEL_266;
                  case 4u:
                    *v7 = *v8;
                    v494 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                    v824 = (char *)v8 + v494;
                    v856 = (char *)v7 + v494;
                    v495 = sub_2408E57A4();
                    v791 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v495 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v791(v856, v824, v495);
                    goto LABEL_266;
                  case 5u:
                    *v7 = *v8;
                    v496 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                    v825 = (char *)v8 + v496;
                    v857 = (char *)v7 + v496;
                    v497 = sub_2408E57A4();
                    v792 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v497 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v792(v857, v825, v497);
                    goto LABEL_266;
                  case 9u:
                    *(_DWORD *)v7 = *(_DWORD *)v8;
                    v7[1] = v8[1];
                    v7[2] = v8[2];
                    v498 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                    v826 = (char *)v8 + v498;
                    v858 = (char *)v7 + v498;
                    v499 = sub_2408E57A4();
                    v793 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v499 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v793(v858, v826, v499);
LABEL_266:
                    swift_storeEnumTagMultiPayload();
                    break;
                  default:
                    memcpy(v7, v8, *(_QWORD *)(v265 + 64));
                    break;
                }
                (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v265 + 56))(v7, 0, 1, v264);
              }
              v500 = __dstf[5];
              v501 = (char *)v7 + v500;
              v502 = (char *)v8 + v500;
              v503 = sub_2408E57A4();
              v504 = v502;
              v107 = (uint64_t)__dstf;
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v503 - 8) + 16))(v501, v504, v503);
              ((void (*)(_QWORD *, _QWORD, uint64_t, int *))v910[7])(v7, 0, 1, __dstf);
            }
            v505 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
            v506 = *(int *)(v505 + 20);
            __srco = (_QWORD *)((char *)v7 + v506);
            v507 = (char *)v8 + v506;
            if (v985((_QWORD *)((char *)v8 + v506), 1, v107))
            {
              v508 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
              memcpy(__srco, v507, *(_QWORD *)(*(_QWORD *)(v508 - 8) + 64));
            }
            else
            {
              v1016 = (void *)v505;
              __dstj = (int *)v107;
              v509 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
              v510 = *(_QWORD *)(v509 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v510 + 48))(v507, 1, v509))
              {
                v511 = v507;
                v512 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
                v513 = __srco;
                memcpy(__srco, v511, *(_QWORD *)(*(_QWORD *)(v512 - 8) + 64));
                v514 = v511;
              }
              else
              {
                v827 = v510;
                v515 = v507;
                v516 = v509;
                v859 = v515;
                switch(swift_getEnumCaseMultiPayload())
                {
                  case 3u:
                  case 6u:
                  case 7u:
                  case 8u:
                    v517 = v515;
                    v518 = *(_QWORD *)v515;
                    v519 = __srco;
                    *__srco = v518;
                    __srco[1] = *((_QWORD *)v517 + 1);
                    swift_bridgeObjectRetain();
                    goto LABEL_287;
                  case 4u:
                    v794 = *(_QWORD *)v515;
                    v538 = v515;
                    v519 = __srco;
                    *__srco = v794;
                    v539 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                    v737 = (char *)v538 + v539;
                    v765 = (char *)__srco + v539;
                    v516 = v509;
                    v540 = sub_2408E57A4();
                    v710 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v540 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v710(v765, v737, v540);
                    goto LABEL_287;
                  case 5u:
                    v795 = *(_QWORD *)v515;
                    v541 = v515;
                    v519 = __srco;
                    *__srco = v795;
                    v542 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                    v738 = (char *)v541 + v542;
                    v766 = (char *)__srco + v542;
                    v516 = v509;
                    v543 = sub_2408E57A4();
                    v711 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v543 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v711(v766, v738, v543);
                    goto LABEL_287;
                  case 9u:
                    v544 = *(_DWORD *)v515;
                    v545 = v515;
                    v519 = __srco;
                    *(_DWORD *)__srco = v544;
                    __srco[1] = v545[1];
                    __srco[2] = v545[2];
                    v546 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                    v739 = (char *)v545 + v546;
                    v767 = (char *)__srco + v546;
                    v516 = v509;
                    v547 = sub_2408E57A4();
                    v712 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v547 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v712(v767, v739, v547);
LABEL_287:
                    swift_storeEnumTagMultiPayload();
                    v536 = v827;
                    break;
                  default:
                    v536 = v827;
                    v537 = v515;
                    v519 = __srco;
                    memcpy(__srco, v537, *(_QWORD *)(v827 + 64));
                    break;
                }
                (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v536 + 56))(v519, 0, 1, v516);
                v513 = v519;
                v514 = v859;
              }
              v548 = __dstj[5];
              v549 = (char *)v513 + v548;
              __srcbu = &v514[v548];
              v550 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v550 - 8) + 16))(v549, __srcbu, v550);
              ((void (*)(_QWORD *, _QWORD, uint64_t, int *))v910[7])(v513, 0, 1, __dstj);
              v505 = (uint64_t)v1016;
            }
            v551 = *(int *)(v505 + 24);
            v552 = (char *)v7 + v551;
            v553 = (char *)v8 + v551;
            v554 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v554 - 8) + 16))(v552, v553, v554);
LABEL_291:
            swift_storeEnumTagMultiPayload();
            a3 = v1030;
            break;
          case 5u:
            *v7 = *v8;
            v7[1] = v8[1];
            v7[2] = v8[2];
            v109 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0) + 24);
            __srcz = (char *)v8 + v109;
            v986 = (char *)v7 + v109;
            v1032 = a3;
            v110 = sub_2408E57A4();
            v911 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v110 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v111 = v110;
            a3 = v1032;
            v911(v986, __srcz, v111);
            swift_storeEnumTagMultiPayload();
            break;
          case 6u:
            *v7 = *v8;
            v112 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0) + 20);
            __srcba = (char *)v8 + v112;
            v987 = (char *)v7 + v112;
            v113 = sub_2408E57A4();
            v1033 = a3;
            v114 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v113 - 8) + 16);
            swift_bridgeObjectRetain();
            v114(v987, __srcba, v113);
            a3 = v1033;
            swift_storeEnumTagMultiPayload();
            break;
          case 7u:
            *v7 = *v8;
            v7[1] = v8[1];
            v909 = (int *)type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
            v115 = v909[5];
            v988 = (char *)v7 + v115;
            v116 = (char *)v8 + v115;
            v117 = type metadata accessor for TranscriptProtoASTPickType(0);
            v811 = *(_QWORD *)(v117 - 8);
            __dstp = *(unsigned int (**)(char *, uint64_t, uint64_t))(v811 + 48);
            swift_bridgeObjectRetain();
            __srch = v116;
            if (__dstp(v116, 1, v117))
            {
              v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D08);
              memcpy(v988, v116, *(_QWORD *)(*(_QWORD *)(v118 - 8) + 64));
            }
            else
            {
              v267 = *(_QWORD *)v116;
              v988[8] = v116[8];
              *(_QWORD *)v988 = v267;
              v268 = *(int *)(v117 + 20);
              v269 = &v988[v268];
              __srcbk = &__srch[v268];
              v270 = sub_2408E57A4();
              (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v270 - 8) + 16))(v269, __srcbk, v270);
              (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v811 + 56))(v988, 0, 1, v117);
            }
LABEL_113:
            v271 = v909[6];
            v272 = (char *)v7 + v271;
            v273 = (char *)v8 + v271;
            v274 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v274 - 8) + 16))(v272, v273, v274);
            swift_storeEnumTagMultiPayload();
            break;
          case 8u:
            *v7 = *v8;
            v7[1] = v8[1];
            v119 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0) + 20);
            __srcbb = (char *)v8 + v119;
            v989 = (char *)v7 + v119;
            v120 = sub_2408E57A4();
            v1034 = a3;
            v121 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v120 - 8) + 16);
            swift_bridgeObjectRetain();
            v121(v989, __srcbb, v120);
            a3 = v1034;
            swift_storeEnumTagMultiPayload();
            break;
          case 9u:
            *v7 = *v8;
            v7[1] = v8[1];
            *((_BYTE *)v7 + 16) = *((_BYTE *)v8 + 16);
            *((_BYTE *)v7 + 17) = *((_BYTE *)v8 + 17);
            v122 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0) + 28);
            __srcbc = (char *)v8 + v122;
            v990 = (char *)v7 + v122;
            v123 = sub_2408E57A4();
            v1035 = a3;
            v124 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v123 - 8) + 16);
            swift_bridgeObjectRetain();
            v124(v990, __srcbc, v123);
            a3 = v1035;
            swift_storeEnumTagMultiPayload();
            break;
          case 0xAu:
            *v7 = *v8;
            v7[1] = v8[1];
            v125 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0) + 20);
            __srcbd = (char *)v8 + v125;
            v991 = (char *)v7 + v125;
            v126 = sub_2408E57A4();
            v1036 = a3;
            v127 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v126 - 8) + 16);
            swift_bridgeObjectRetain();
            v127(v991, __srcbd, v126);
            a3 = v1036;
            swift_storeEnumTagMultiPayload();
            break;
          case 0xBu:
            *v7 = *v8;
            v7[1] = v8[1];
            v128 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0) + 20);
            __srcbe = (char *)v8 + v128;
            v992 = (char *)v7 + v128;
            v129 = sub_2408E57A4();
            v1037 = a3;
            v130 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v129 - 8) + 16);
            swift_bridgeObjectRetain();
            v130(v992, __srcbe, v129);
            a3 = v1037;
            swift_storeEnumTagMultiPayload();
            break;
          case 0xCu:
            *v7 = *v8;
            v131 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0) + 20);
            __srcbf = (char *)v8 + v131;
            v993 = (char *)v7 + v131;
            v132 = sub_2408E57A4();
            v1038 = a3;
            v133 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v132 - 8) + 16);
            swift_bridgeObjectRetain();
            v133(v993, __srcbf, v132);
            a3 = v1038;
            swift_storeEnumTagMultiPayload();
            break;
          case 0xDu:
            *v7 = *v8;
            v7[1] = v8[1];
            v134 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0) + 20);
            __srcbg = (char *)v8 + v134;
            v994 = (char *)v7 + v134;
            v135 = sub_2408E57A4();
            v1039 = a3;
            v136 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v135 - 8) + 16);
            swift_bridgeObjectRetain();
            v136(v994, __srcbg, v135);
            a3 = v1039;
            swift_storeEnumTagMultiPayload();
            break;
          case 0xEu:
            *v7 = *v8;
            v7[1] = v8[1];
            v137 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0) + 20);
            __srcbh = (char *)v8 + v137;
            v995 = (char *)v7 + v137;
            v138 = sub_2408E57A4();
            v1040 = a3;
            v139 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v138 - 8) + 16);
            swift_bridgeObjectRetain();
            v139(v995, __srcbh, v138);
            a3 = v1040;
            swift_storeEnumTagMultiPayload();
            break;
          case 0xFu:
          case 0x11u:
            v140 = sub_2408E57A4();
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v140 - 8) + 16))(v7, v8, v140);
            swift_storeEnumTagMultiPayload();
            break;
          case 0x10u:
            *v7 = *v8;
            v141 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0) + 20);
            __srcbi = (char *)v8 + v141;
            v996 = (char *)v7 + v141;
            v142 = sub_2408E57A4();
            v1041 = a3;
            v143 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v142 - 8) + 16);
            swift_bridgeObjectRetain();
            v143(v996, __srcbi, v142);
            a3 = v1041;
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v7, v8, *(_QWORD *)(v19 + 64));
            break;
        }
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v7, 0, 1, v18);
LABEL_293:
        v555 = *(int *)(v9 + 20);
        v556 = (char *)v7 + v555;
        v557 = (char *)v8 + v555;
        v558 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v558 - 8) + 24))(v556, v557, v558);
        goto LABEL_294;
      }
    }
    else
    {
      if (!v22)
      {
        if (a1 != a2)
        {
          sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoAstflatExprEnum);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              v30 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
              v31 = *(_QWORD *)(v30 - 8);
              if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v31 + 48))(v8, 1, v30))
              {
                v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
                memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
              }
              else
              {
                switch(swift_getEnumCaseMultiPayload())
                {
                  case 3u:
                  case 6u:
                  case 7u:
                  case 8u:
                    *v7 = *v8;
                    v7[1] = v8[1];
                    swift_bridgeObjectRetain();
                    goto LABEL_231;
                  case 4u:
                    *v7 = *v8;
                    v440 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                    __srcbq = (char *)v8 + v440;
                    v1011 = (char *)v7 + v440;
                    v1060 = a3;
                    v441 = sub_2408E57A4();
                    v927 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v441 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v442 = v441;
                    a3 = v1060;
                    v927(v1011, __srcbq, v442);
                    goto LABEL_231;
                  case 5u:
                    *v7 = *v8;
                    v443 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                    __srcbr = (char *)v8 + v443;
                    v1012 = (char *)v7 + v443;
                    v1061 = a3;
                    v444 = sub_2408E57A4();
                    v928 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v444 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v445 = v444;
                    a3 = v1061;
                    v928(v1012, __srcbr, v445);
                    goto LABEL_231;
                  case 9u:
                    *(_DWORD *)v7 = *(_DWORD *)v8;
                    v7[1] = v8[1];
                    v7[2] = v8[2];
                    v446 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                    __srcbs = (char *)v8 + v446;
                    v1013 = (char *)v7 + v446;
                    v1062 = a3;
                    v447 = sub_2408E57A4();
                    v929 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v447 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v448 = v447;
                    a3 = v1062;
                    v929(v1013, __srcbs, v448);
LABEL_231:
                    swift_storeEnumTagMultiPayload();
                    break;
                  default:
                    memcpy(v7, v8, *(_QWORD *)(v31 + 64));
                    break;
                }
                (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v7, 0, 1, v30);
              }
              v449 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValue(0) + 20);
              v450 = (char *)v7 + v449;
              v451 = (char *)v8 + v449;
              v452 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v452 - 8) + 16))(v450, v451, v452);
              swift_storeEnumTagMultiPayload();
              goto LABEL_293;
            case 1u:
              v1042 = a3;
              *(_BYTE *)v7 = *(_BYTE *)v8;
              v169 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
              v170 = *(int *)(v169 + 20);
              v997 = (_QWORD *)((char *)v7 + v170);
              v171 = (_QWORD *)((char *)v8 + v170);
              v172 = type metadata accessor for TranscriptProtoASTFlatValue(0);
              v173 = *(unsigned int (***)(_QWORD *, uint64_t, uint64_t))(v172 - 8);
              if (v173[6](v171, 1, v172))
              {
                v174 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
                memcpy(v997, v171, *(_QWORD *)(*(_QWORD *)(v174 - 8) + 64));
              }
              else
              {
                v914 = v173;
                __srcm = (void *)v169;
                v277 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
                __dstg = *(_QWORD **)(v277 - 8);
                if (((unsigned int (*)(_QWORD *, uint64_t, uint64_t))__dstg[6])(v171, 1, v277))
                {
                  v278 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
                  v279 = v997;
                  memcpy(v997, v171, *(_QWORD *)(*(_QWORD *)(v278 - 8) + 64));
                  v280 = v171;
                  v281 = v172;
                }
                else
                {
                  v817 = v277;
                  v852 = v171;
                  switch(swift_getEnumCaseMultiPayload())
                  {
                    case 3u:
                    case 6u:
                    case 7u:
                    case 8u:
                      v279 = v997;
                      *v997 = *v171;
                      v997[1] = v171[1];
                      swift_bridgeObjectRetain();
                      v315 = v817;
                      goto LABEL_299;
                    case 4u:
                      v279 = v997;
                      *v997 = *v171;
                      v564 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                      v796 = (char *)v997 + v564;
                      v565 = (char *)v171 + v564;
                      v566 = sub_2408E57A4();
                      v740 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v566 - 8) + 16);
                      swift_bridgeObjectRetain();
                      v740(v796, v565, v566);
                      v315 = v817;
                      goto LABEL_299;
                    case 5u:
                      v279 = v997;
                      *v997 = *v171;
                      v567 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                      v797 = (char *)v997 + v567;
                      v568 = (char *)v171 + v567;
                      v569 = sub_2408E57A4();
                      v741 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v569 - 8) + 16);
                      swift_bridgeObjectRetain();
                      v741(v797, v568, v569);
                      v315 = v817;
                      goto LABEL_299;
                    case 9u:
                      v279 = v997;
                      *(_DWORD *)v997 = *(_DWORD *)v171;
                      v997[1] = v171[1];
                      v997[2] = v171[2];
                      v570 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                      v768 = (char *)v171 + v570;
                      v798 = (char *)v997 + v570;
                      v571 = sub_2408E57A4();
                      v742 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v571 - 8) + 16);
                      swift_bridgeObjectRetain();
                      v742(v798, v768, v571);
                      v315 = v817;
LABEL_299:
                      swift_storeEnumTagMultiPayload();
                      break;
                    default:
                      v279 = v997;
                      memcpy(v997, v171, __dstg[8]);
                      v315 = v817;
                      break;
                  }
                  ((void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))__dstg[7])(v279, 0, 1, v315);
                  v281 = v172;
                  v280 = v852;
                }
                v572 = *(int *)(v281 + 20);
                v573 = v279;
                v574 = (char *)v279 + v572;
                v575 = (char *)v280 + v572;
                v576 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v576 - 8) + 16))(v574, v575, v576);
                (*((void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))v914 + 7))(v573, 0, 1, v281);
                v169 = (uint64_t)__srcm;
              }
              v577 = *(int *)(v169 + 24);
              v578 = (char *)v7 + v577;
              v579 = (char *)v8 + v577;
              v580 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v580 - 8) + 16))(v578, v579, v580);
              goto LABEL_353;
            case 2u:
              v1042 = a3;
              *(_BYTE *)v7 = *(_BYTE *)v8;
              v175 = (int *)type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
              v176 = v175[5];
              v177 = (_QWORD *)((char *)v7 + v176);
              v178 = (_QWORD *)((char *)v8 + v176);
              v179 = type metadata accessor for TranscriptProtoASTFlatValue(0);
              __srci = *(_QWORD **)(v179 - 8);
              v998 = (int *)v179;
              v180 = (unsigned int (*)(char *, uint64_t, int *))__srci[6];
              if (((unsigned int (*)(_QWORD *, uint64_t))v180)(v178, 1))
              {
                v181 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
                memcpy(v177, v178, *(_QWORD *)(*(_QWORD *)(v181 - 8) + 64));
              }
              else
              {
                v915 = v175;
                v282 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
                v848 = *(_QWORD **)(v282 - 8);
                if (((unsigned int (*)(_QWORD *, uint64_t, uint64_t))v848[6])(v178, 1, v282))
                {
                  v283 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
                  memcpy(v177, v178, *(_QWORD *)(*(_QWORD *)(v283 - 8) + 64));
                }
                else
                {
                  switch(swift_getEnumCaseMultiPayload())
                  {
                    case 3u:
                    case 6u:
                    case 7u:
                    case 8u:
                      *v177 = *v178;
                      v177[1] = v178[1];
                      swift_bridgeObjectRetain();
                      goto LABEL_307;
                    case 4u:
                      *v177 = *v178;
                      v581 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                      v799 = (char *)v178 + v581;
                      v828 = (char *)v177 + v581;
                      v743 = sub_2408E57A4();
                      v769 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v743 - 8) + 16);
                      swift_bridgeObjectRetain();
                      v769(v828, v799, v743);
                      goto LABEL_307;
                    case 5u:
                      *v177 = *v178;
                      v582 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                      v800 = (char *)v178 + v582;
                      v829 = (char *)v177 + v582;
                      v744 = sub_2408E57A4();
                      v770 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v744 - 8) + 16);
                      swift_bridgeObjectRetain();
                      v770(v829, v800, v744);
                      goto LABEL_307;
                    case 9u:
                      *(_DWORD *)v177 = *(_DWORD *)v178;
                      v177[1] = v178[1];
                      v177[2] = v178[2];
                      v583 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                      v801 = (char *)v178 + v583;
                      v830 = (char *)v177 + v583;
                      v745 = sub_2408E57A4();
                      v771 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v745 - 8) + 16);
                      swift_bridgeObjectRetain();
                      v771(v830, v801, v745);
LABEL_307:
                      swift_storeEnumTagMultiPayload();
                      break;
                    default:
                      memcpy(v177, v178, v848[8]);
                      break;
                  }
                  ((void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v848[7])(v177, 0, 1, v282);
                }
                v584 = v998[5];
                v585 = (char *)v177 + v584;
                v586 = (char *)v178 + v584;
                v587 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v587 - 8) + 16))(v585, v586, v587);
                ((void (*)(_QWORD *, _QWORD, uint64_t, int *))__srci[7])(v177, 0, 1, v998);
                v175 = v915;
              }
              v588 = v175[6];
              v589 = (_QWORD *)((char *)v7 + v588);
              v590 = (_QWORD *)((char *)v8 + v588);
              if (v180((char *)v8 + v588, 1, v998))
              {
                v591 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
                memcpy(v589, v590, *(_QWORD *)(*(_QWORD *)(v591 - 8) + 64));
              }
              else
              {
                v592 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
                __dstk = *(_QWORD **)(v592 - 8);
                v932 = v175;
                if (((unsigned int (*)(_QWORD *, uint64_t, uint64_t))__dstk[6])(v590, 1, v592))
                {
                  v593 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
                  memcpy(v589, v590, *(_QWORD *)(*(_QWORD *)(v593 - 8) + 64));
                }
                else
                {
                  switch(swift_getEnumCaseMultiPayload())
                  {
                    case 3u:
                    case 6u:
                    case 7u:
                    case 8u:
                      *v589 = *v590;
                      v589[1] = v590[1];
                      swift_bridgeObjectRetain();
                      v594 = v592;
                      goto LABEL_341;
                    case 4u:
                      *v589 = *v590;
                      v626 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                      v805 = (char *)v590 + v626;
                      v834 = (char *)v589 + v626;
                      v627 = sub_2408E57A4();
                      v775 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v627 - 8) + 16);
                      swift_bridgeObjectRetain();
                      v775(v834, v805, v627);
                      v594 = v592;
                      goto LABEL_341;
                    case 5u:
                      *v589 = *v590;
                      v628 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                      v806 = (char *)v590 + v628;
                      v835 = (char *)v589 + v628;
                      v629 = sub_2408E57A4();
                      v776 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v629 - 8) + 16);
                      swift_bridgeObjectRetain();
                      v776(v835, v806, v629);
                      v594 = v592;
                      goto LABEL_341;
                    case 9u:
                      *(_DWORD *)v589 = *(_DWORD *)v590;
                      v589[1] = v590[1];
                      v589[2] = v590[2];
                      v630 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                      v807 = (char *)v590 + v630;
                      v836 = (char *)v589 + v630;
                      v631 = sub_2408E57A4();
                      v777 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v631 - 8) + 16);
                      swift_bridgeObjectRetain();
                      v777(v836, v807, v631);
                      v594 = v592;
LABEL_341:
                      swift_storeEnumTagMultiPayload();
                      break;
                    default:
                      memcpy(v589, v590, __dstk[8]);
                      v594 = v592;
                      break;
                  }
                  ((void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))__dstk[7])(v589, 0, 1, v594);
                }
                v632 = v998[5];
                v633 = (char *)v589 + v632;
                v634 = (char *)v590 + v632;
                v635 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v635 - 8) + 16))(v633, v634, v635);
                ((void (*)(_QWORD *, _QWORD, uint64_t, int *))__srci[7])(v589, 0, 1, v998);
                v175 = v932;
              }
              v636 = v175[7];
              v637 = (char *)v7 + v636;
              v638 = (char *)v8 + v636;
              v639 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v639 - 8) + 16))(v637, v638, v639);
              goto LABEL_353;
            case 3u:
              v1042 = a3;
              *v7 = *v8;
              v7[1] = v8[1];
              v182 = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
              v183 = *(int *)(v182 + 20);
              __srcj = (_QWORD *)((char *)v7 + v183);
              v999 = (int *)v182;
              v184 = (char *)v8 + v183;
              v185 = type metadata accessor for TranscriptProtoASTFlatValue(0);
              v186 = *(_QWORD **)(v185 - 8);
              v187 = (unsigned int (*)(char *, uint64_t, int *))v186[6];
              v188 = (int *)v185;
              swift_bridgeObjectRetain();
              if (v187(v184, 1, v188))
              {
                v189 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
                memcpy(__srcj, v184, *(_QWORD *)(*(_QWORD *)(v189 - 8) + 64));
                v190 = v999;
              }
              else
              {
                __dsth = v186;
                v916 = v188;
                v284 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
                v285 = *(_QWORD *)(v284 - 8);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v285 + 48))(v184, 1, v284))
                {
                  v286 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
                  v287 = __srcj;
                  memcpy(__srcj, v184, *(_QWORD *)(*(_QWORD *)(v286 - 8) + 64));
                  v190 = v999;
                }
                else
                {
                  v853 = v184;
                  v316 = v284;
                  switch(swift_getEnumCaseMultiPayload())
                  {
                    case 3u:
                    case 6u:
                    case 7u:
                    case 8u:
                      *__srcj = *v853;
                      __srcj[1] = v853[1];
                      swift_bridgeObjectRetain();
                      goto LABEL_320;
                    case 4u:
                      *__srcj = *v853;
                      v595 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                      v772 = (char *)v853 + v595;
                      v802 = (char *)__srcj + v595;
                      v596 = sub_2408E57A4();
                      v746 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v596 - 8) + 16);
                      swift_bridgeObjectRetain();
                      v746(v802, v772, v596);
                      v284 = v316;
                      goto LABEL_320;
                    case 5u:
                      *__srcj = *v853;
                      v597 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                      v773 = (char *)v853 + v597;
                      v803 = (char *)__srcj + v597;
                      v598 = sub_2408E57A4();
                      v747 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v598 - 8) + 16);
                      swift_bridgeObjectRetain();
                      v747(v803, v773, v598);
                      v284 = v316;
                      goto LABEL_320;
                    case 9u:
                      *(_DWORD *)__srcj = *(_DWORD *)v853;
                      __srcj[1] = v853[1];
                      __srcj[2] = v853[2];
                      v599 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                      v774 = (char *)v853 + v599;
                      v804 = (char *)__srcj + v599;
                      v600 = sub_2408E57A4();
                      v748 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v600 - 8) + 16);
                      swift_bridgeObjectRetain();
                      v748(v804, v774, v600);
                      v284 = v316;
LABEL_320:
                      swift_storeEnumTagMultiPayload();
                      break;
                    default:
                      memcpy(__srcj, v853, *(_QWORD *)(v285 + 64));
                      break;
                  }
                  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v285 + 56))(__srcj, 0, 1, v284);
                  v190 = v999;
                  v287 = __srcj;
                  v184 = (char *)v853;
                }
                v601 = v188[5];
                v602 = (char *)v287 + v601;
                v603 = &v184[v601];
                v604 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v604 - 8) + 16))(v602, v603, v604);
                (*((void (**)(_QWORD *, _QWORD, uint64_t, int *))__dsth + 7))(v287, 0, 1, v916);
              }
              v605 = v190[6];
              v606 = (char *)v7 + v605;
              v607 = (char *)v8 + v605;
              v608 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v608 - 8) + 16))(v606, v607, v608);
              goto LABEL_353;
            case 4u:
              v191 = type metadata accessor for TranscriptProtoASTFlatValue(0);
              __srck = *(_QWORD **)(v191 - 8);
              v192 = (unsigned int (*)(_QWORD *, uint64_t, uint64_t))__srck[6];
              v1042 = a3;
              if (v192(v8, 1, v191))
              {
                v193 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
                memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v193 - 8) + 64));
              }
              else
              {
                v917 = (int *)v191;
                v288 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
                v289 = *(_QWORD *)(v288 - 8);
                if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v289 + 48))(v8, 1, v288))
                {
                  v290 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
                  memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v290 - 8) + 64));
                }
                else
                {
                  switch(swift_getEnumCaseMultiPayload())
                  {
                    case 3u:
                    case 6u:
                    case 7u:
                    case 8u:
                      *v7 = *v8;
                      v7[1] = v8[1];
                      swift_bridgeObjectRetain();
                      goto LABEL_328;
                    case 4u:
                      *v7 = *v8;
                      v609 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                      v860 = (char *)v8 + v609;
                      __dstx = (char *)v7 + v609;
                      v610 = sub_2408E57A4();
                      v831 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v610 - 8) + 16);
                      swift_bridgeObjectRetain();
                      v831(__dstx, v860, v610);
                      goto LABEL_328;
                    case 5u:
                      *v7 = *v8;
                      v611 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                      v861 = (char *)v8 + v611;
                      __dsty = (char *)v7 + v611;
                      v612 = sub_2408E57A4();
                      v832 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v612 - 8) + 16);
                      swift_bridgeObjectRetain();
                      v832(__dsty, v861, v612);
                      goto LABEL_328;
                    case 9u:
                      *(_DWORD *)v7 = *(_DWORD *)v8;
                      v7[1] = v8[1];
                      v7[2] = v8[2];
                      v613 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                      v862 = (char *)v8 + v613;
                      __dstz = (char *)v7 + v613;
                      v614 = sub_2408E57A4();
                      v833 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v614 - 8) + 16);
                      swift_bridgeObjectRetain();
                      v833(__dstz, v862, v614);
LABEL_328:
                      swift_storeEnumTagMultiPayload();
                      break;
                    default:
                      memcpy(v7, v8, *(_QWORD *)(v289 + 64));
                      break;
                  }
                  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v289 + 56))(v7, 0, 1, v288);
                }
                v615 = v917[5];
                v616 = (char *)v7 + v615;
                v617 = (char *)v8 + v615;
                v618 = sub_2408E57A4();
                v619 = v617;
                v191 = (uint64_t)v917;
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v618 - 8) + 16))(v616, v619, v618);
                ((void (*)(_QWORD *, _QWORD, uint64_t, int *))__srck[7])(v7, 0, 1, v917);
              }
              v1017 = (int *)type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
              v620 = v1017[5];
              v621 = (_QWORD *)((char *)v7 + v620);
              v622 = (_QWORD *)((char *)v8 + v620);
              if (v192((_QWORD *)((char *)v8 + v620), 1, v191))
              {
                v623 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
                memcpy(v621, v622, *(_QWORD *)(*(_QWORD *)(v623 - 8) + 64));
              }
              else
              {
                v624 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
                __dstl = *(_QWORD **)(v624 - 8);
                if (((unsigned int (*)(_QWORD *, uint64_t, uint64_t))__dstl[6])(v622, 1, v624))
                {
                  v625 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
                  memcpy(v621, v622, *(_QWORD *)(*(_QWORD *)(v625 - 8) + 64));
                }
                else
                {
                  switch(swift_getEnumCaseMultiPayload())
                  {
                    case 3u:
                    case 6u:
                    case 7u:
                    case 8u:
                      *v621 = *v622;
                      v621[1] = v622[1];
                      swift_bridgeObjectRetain();
                      goto LABEL_349;
                    case 4u:
                      *v621 = *v622;
                      v640 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                      v837 = (char *)v622 + v640;
                      v863 = (char *)v621 + v640;
                      v778 = sub_2408E57A4();
                      v808 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v778 - 8) + 16);
                      swift_bridgeObjectRetain();
                      v808(v863, v837, v778);
                      goto LABEL_349;
                    case 5u:
                      *v621 = *v622;
                      v641 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                      v838 = (char *)v622 + v641;
                      v864 = (char *)v621 + v641;
                      v779 = sub_2408E57A4();
                      v809 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v779 - 8) + 16);
                      swift_bridgeObjectRetain();
                      v809(v864, v838, v779);
                      goto LABEL_349;
                    case 9u:
                      *(_DWORD *)v621 = *(_DWORD *)v622;
                      v621[1] = v622[1];
                      v621[2] = v622[2];
                      v642 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                      v839 = (char *)v622 + v642;
                      v865 = (char *)v621 + v642;
                      v780 = sub_2408E57A4();
                      v810 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v780 - 8) + 16);
                      swift_bridgeObjectRetain();
                      v810(v865, v839, v780);
LABEL_349:
                      swift_storeEnumTagMultiPayload();
                      break;
                    default:
                      memcpy(v621, v622, __dstl[8]);
                      break;
                  }
                  ((void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))__dstl[7])(v621, 0, 1, v624);
                }
                v643 = *(int *)(v191 + 20);
                v644 = v191;
                v645 = (char *)v621 + v643;
                v646 = (char *)v622 + v643;
                v647 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v647 - 8) + 16))(v645, v646, v647);
                ((void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))__srck[7])(v621, 0, 1, v644);
              }
              v648 = v1017[6];
              v649 = (char *)v7 + v648;
              v650 = (char *)v8 + v648;
              v651 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v651 - 8) + 16))(v649, v650, v651);
LABEL_353:
              swift_storeEnumTagMultiPayload();
              a3 = v1042;
              break;
            case 5u:
              *v7 = *v8;
              v7[1] = v8[1];
              v7[2] = v8[2];
              v194 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0) + 24);
              __srcbj = (char *)v8 + v194;
              v1000 = (char *)v7 + v194;
              v1043 = a3;
              v195 = sub_2408E57A4();
              v196 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v195 - 8) + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v197 = v195;
              a3 = v1043;
              v196(v1000, __srcbj, v197);
              swift_storeEnumTagMultiPayload();
              break;
            case 6u:
              *v7 = *v8;
              v198 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0) + 20);
              v1001 = (char *)v7 + v198;
              v1044 = a3;
              v199 = (char *)v8 + v198;
              v200 = sub_2408E57A4();
              v201 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v200 - 8) + 16);
              swift_bridgeObjectRetain();
              v202 = v199;
              a3 = v1044;
              v201(v1001, v202, v200);
              swift_storeEnumTagMultiPayload();
              break;
            case 7u:
              v1045 = a3;
              *v7 = *v8;
              v7[1] = v8[1];
              v203 = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
              v204 = *(int *)(v203 + 20);
              __srcl = (char *)v7 + v204;
              v1002 = (int *)v203;
              v205 = (char *)v8 + v204;
              v206 = type metadata accessor for TranscriptProtoASTPickType(0);
              v913 = *(_QWORD **)(v206 - 8);
              v207 = (unsigned int (*)(_BYTE *, uint64_t, uint64_t))v913[6];
              swift_bridgeObjectRetain();
              if (v207(v205, 1, v206))
              {
                v208 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D08);
                memcpy(__srcl, v205, *(_QWORD *)(*(_QWORD *)(v208 - 8) + 64));
              }
              else
              {
                v291 = *(_QWORD *)v205;
                __srcl[8] = v205[8];
                *(_QWORD *)__srcl = v291;
                v292 = *(int *)(v206 + 20);
                v293 = &__srcl[v292];
                v294 = &v205[v292];
                v295 = sub_2408E57A4();
                (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v295 - 8) + 16))(v293, v294, v295);
                ((void (*)(_BYTE *, _QWORD, uint64_t, uint64_t))v913[7])(__srcl, 0, 1, v206);
              }
              a3 = v1045;
              v296 = v1002[6];
              v297 = (char *)v7 + v296;
              v298 = (char *)v8 + v296;
              v299 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v299 - 8) + 16))(v297, v298, v299);
              swift_storeEnumTagMultiPayload();
              break;
            case 8u:
              *v7 = *v8;
              v7[1] = v8[1];
              v209 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0) + 20);
              v1003 = (char *)v7 + v209;
              v1046 = a3;
              v210 = (char *)v8 + v209;
              v211 = sub_2408E57A4();
              v212 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v211 - 8) + 16);
              swift_bridgeObjectRetain();
              v213 = v210;
              a3 = v1046;
              v212(v1003, v213, v211);
              swift_storeEnumTagMultiPayload();
              break;
            case 9u:
              *v7 = *v8;
              v7[1] = v8[1];
              *((_BYTE *)v7 + 16) = *((_BYTE *)v8 + 16);
              *((_BYTE *)v7 + 17) = *((_BYTE *)v8 + 17);
              v214 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0) + 28);
              v1004 = (char *)v7 + v214;
              v1047 = a3;
              v215 = (char *)v8 + v214;
              v216 = sub_2408E57A4();
              v217 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v216 - 8) + 16);
              swift_bridgeObjectRetain();
              v218 = v215;
              a3 = v1047;
              v217(v1004, v218, v216);
              swift_storeEnumTagMultiPayload();
              break;
            case 0xAu:
              *v7 = *v8;
              v7[1] = v8[1];
              v219 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0) + 20);
              v1005 = (char *)v7 + v219;
              v1048 = a3;
              v220 = (char *)v8 + v219;
              v221 = sub_2408E57A4();
              v222 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v221 - 8) + 16);
              swift_bridgeObjectRetain();
              v223 = v220;
              a3 = v1048;
              v222(v1005, v223, v221);
              swift_storeEnumTagMultiPayload();
              break;
            case 0xBu:
              *v7 = *v8;
              v7[1] = v8[1];
              v224 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0) + 20);
              v1006 = (char *)v7 + v224;
              v1049 = a3;
              v225 = (char *)v8 + v224;
              v226 = sub_2408E57A4();
              v227 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v226 - 8) + 16);
              swift_bridgeObjectRetain();
              v228 = v225;
              a3 = v1049;
              v227(v1006, v228, v226);
              swift_storeEnumTagMultiPayload();
              break;
            case 0xCu:
              *v7 = *v8;
              v229 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0) + 20);
              v1007 = (char *)v7 + v229;
              v1050 = a3;
              v230 = (char *)v8 + v229;
              v231 = sub_2408E57A4();
              v232 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v231 - 8) + 16);
              swift_bridgeObjectRetain();
              v233 = v230;
              a3 = v1050;
              v232(v1007, v233, v231);
              swift_storeEnumTagMultiPayload();
              break;
            case 0xDu:
              *v7 = *v8;
              v7[1] = v8[1];
              v234 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0) + 20);
              v1008 = (char *)v7 + v234;
              v1051 = a3;
              v235 = (char *)v8 + v234;
              v236 = sub_2408E57A4();
              v237 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v236 - 8) + 16);
              swift_bridgeObjectRetain();
              v238 = v235;
              a3 = v1051;
              v237(v1008, v238, v236);
              swift_storeEnumTagMultiPayload();
              break;
            case 0xEu:
              *v7 = *v8;
              v7[1] = v8[1];
              v239 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0) + 20);
              v1009 = (char *)v7 + v239;
              v1052 = a3;
              v240 = (char *)v8 + v239;
              v241 = sub_2408E57A4();
              v242 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v241 - 8) + 16);
              swift_bridgeObjectRetain();
              v243 = v240;
              a3 = v1052;
              v242(v1009, v243, v241);
              swift_storeEnumTagMultiPayload();
              break;
            case 0xFu:
            case 0x11u:
              v244 = sub_2408E57A4();
              (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v244 - 8) + 16))(v7, v8, v244);
              swift_storeEnumTagMultiPayload();
              break;
            case 0x10u:
              *v7 = *v8;
              v245 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0) + 20);
              v1010 = (char *)v7 + v245;
              v1053 = a3;
              v246 = (char *)v8 + v245;
              v247 = sub_2408E57A4();
              v248 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v247 - 8) + 16);
              swift_bridgeObjectRetain();
              v249 = v246;
              a3 = v1053;
              v248(v1010, v249, v247);
              swift_storeEnumTagMultiPayload();
              break;
            default:
              v29 = *(_QWORD *)(v19 + 64);
              goto LABEL_19;
          }
        }
        goto LABEL_293;
      }
      sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoAstflatExprEnum);
    }
    v29 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC20) - 8) + 64);
LABEL_19:
    memcpy(v7, v8, v29);
    goto LABEL_293;
  }
  if (v13)
  {
LABEL_7:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000F20);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_294;
  }
  v14 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  v15 = *(size_t **)(v14 - 8);
  if (((unsigned int (*)(_QWORD *, uint64_t, uint64_t))v15[6])(v8, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC20);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v981 = v15;
        v26 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        v27 = *(_QWORD *)(v26 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v27 + 48))(v8, 1, v26))
        {
          v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
          memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              *v7 = *v8;
              v7[1] = v8[1];
              swift_bridgeObjectRetain();
              goto LABEL_146;
            case 4u:
              *v7 = *v8;
              v302 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              __dstq = (char *)v8 + v302;
              v918 = (char *)v7 + v302;
              v1054 = a3;
              v303 = sub_2408E57A4();
              v849 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v303 - 8) + 16);
              swift_bridgeObjectRetain();
              v304 = v303;
              a3 = v1054;
              v849(v918, __dstq, v304);
              goto LABEL_146;
            case 5u:
              *v7 = *v8;
              v305 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              __dstr = (char *)v8 + v305;
              v919 = (char *)v7 + v305;
              v1055 = a3;
              v306 = sub_2408E57A4();
              v850 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v306 - 8) + 16);
              swift_bridgeObjectRetain();
              v307 = v306;
              a3 = v1055;
              v850(v919, __dstr, v307);
              goto LABEL_146;
            case 9u:
              *(_DWORD *)v7 = *(_DWORD *)v8;
              v7[1] = v8[1];
              v7[2] = v8[2];
              v308 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              __dsts = (char *)v8 + v308;
              v920 = (char *)v7 + v308;
              v1056 = a3;
              v309 = sub_2408E57A4();
              v851 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v309 - 8) + 16);
              swift_bridgeObjectRetain();
              v310 = v309;
              a3 = v1056;
              v851(v920, __dsts, v310);
LABEL_146:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v7, v8, *(_QWORD *)(v27 + 64));
              break;
          }
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v7, 0, 1, v26);
        }
        v311 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValue(0) + 20);
        v312 = (char *)v7 + v311;
        v313 = (char *)v8 + v311;
        v314 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v314 - 8) + 16))(v312, v313, v314);
        goto LABEL_193;
      case 1u:
        v981 = v15;
        v1018 = a3;
        *(_BYTE *)v7 = *(_BYTE *)v8;
        v33 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
        v34 = *(int *)(v33 + 20);
        __dst = (_QWORD *)((char *)v7 + v34);
        v893 = (int *)v33;
        v35 = (_QWORD *)((char *)v8 + v34);
        v36 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        v37 = *(_QWORD *)(v36 - 8);
        __src = v35;
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
        {
          v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
          memcpy(__dst, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
        }
        else
        {
          v812 = v37;
          v843 = (int *)v36;
          v144 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          v145 = *(_QWORD *)(v144 - 8);
          v146 = __src;
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v145 + 48))(__src, 1, v144))
          {
            v147 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
            v148 = __dst;
            memcpy(__dst, __src, *(_QWORD *)(*(_QWORD *)(v147 - 8) + 64));
            v149 = v843;
          }
          else
          {
            v749 = v144;
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                v148 = __dst;
                *__dst = *__src;
                __dst[1] = __src[1];
                swift_bridgeObjectRetain();
                v275 = v749;
                goto LABEL_168;
              case 4u:
                v148 = __dst;
                *__dst = *__src;
                v330 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v684 = (char *)__dst + v330;
                v713 = (char *)__src + v330;
                v331 = sub_2408E57A4();
                v661 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v331 - 8) + 16);
                swift_bridgeObjectRetain();
                v661(v684, v713, v331);
                v275 = v749;
                goto LABEL_168;
              case 5u:
                v148 = __dst;
                *__dst = *__src;
                v332 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v685 = (char *)__dst + v332;
                v714 = (char *)__src + v332;
                v333 = sub_2408E57A4();
                v662 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v333 - 8) + 16);
                swift_bridgeObjectRetain();
                v662(v685, v714, v333);
                v275 = v749;
                goto LABEL_168;
              case 9u:
                v148 = __dst;
                *(_DWORD *)__dst = *(_DWORD *)__src;
                __dst[1] = __src[1];
                __dst[2] = __src[2];
                v334 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v686 = (char *)__src + v334;
                v715 = (char *)__dst + v334;
                v335 = sub_2408E57A4();
                v663 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v335 - 8) + 16);
                swift_bridgeObjectRetain();
                v663(v715, v686, v335);
                v275 = v749;
LABEL_168:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                v275 = v144;
                v148 = __dst;
                memcpy(__dst, __src, *(_QWORD *)(v145 + 64));
                break;
            }
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v145 + 56))(v148, 0, 1, v275);
            v149 = v843;
            v146 = __src;
          }
          v336 = v149[5];
          __srcbo = (char *)v148 + v336;
          v337 = (char *)v146 + v336;
          v338 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v338 - 8) + 16))(__srcbo, v337, v338);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v812 + 56))(v148, 0, 1, v843);
        }
        v339 = v893[6];
        v340 = (char *)v7 + v339;
        v341 = (char *)v8 + v339;
        v342 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v342 - 8) + 16))(v340, v341, v342);
        goto LABEL_223;
      case 2u:
        v981 = v15;
        v1018 = a3;
        *(_BYTE *)v7 = *(_BYTE *)v8;
        v39 = (int *)type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
        v40 = v39[5];
        __dsta = (_QWORD *)((char *)v7 + v40);
        v41 = (_QWORD *)((char *)v8 + v40);
        v42 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        v840 = *(_QWORD **)(v42 - 8);
        __srca = (int *)v42;
        v894 = (unsigned int (*)(char *, uint64_t, int *))v840[6];
        if (((unsigned int (*)(_QWORD *, uint64_t))v894)(v41, 1))
        {
          v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
          memcpy(__dsta, v41, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
          v44 = __srca;
        }
        else
        {
          v813 = v39;
          v150 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          v151 = *(_QWORD *)(v150 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v151 + 48))(v41, 1, v150))
          {
            v152 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
            v153 = __dsta;
            memcpy(__dsta, v41, *(_QWORD *)(*(_QWORD *)(v152 - 8) + 64));
          }
          else
          {
            v783 = v151;
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                v276 = __dsta;
                *__dsta = *v41;
                __dsta[1] = v41[1];
                swift_bridgeObjectRetain();
                goto LABEL_176;
              case 4u:
                v276 = __dsta;
                *__dsta = *v41;
                v343 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v687 = (char *)v41 + v343;
                v716 = (char *)__dsta + v343;
                v652 = sub_2408E57A4();
                v664 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v652 - 8) + 16);
                swift_bridgeObjectRetain();
                v664(v716, v687, v652);
                goto LABEL_176;
              case 5u:
                v276 = __dsta;
                *__dsta = *v41;
                v344 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v688 = (char *)v41 + v344;
                v717 = (char *)__dsta + v344;
                v653 = sub_2408E57A4();
                v665 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v653 - 8) + 16);
                swift_bridgeObjectRetain();
                v665(v717, v688, v653);
                goto LABEL_176;
              case 9u:
                v276 = __dsta;
                *(_DWORD *)__dsta = *(_DWORD *)v41;
                __dsta[1] = v41[1];
                __dsta[2] = v41[2];
                v345 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v689 = (char *)v41 + v345;
                v718 = (char *)__dsta + v345;
                v654 = sub_2408E57A4();
                v666 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v654 - 8) + 16);
                swift_bridgeObjectRetain();
                v666(v718, v689, v654);
LABEL_176:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                v276 = __dsta;
                memcpy(__dsta, v41, *(_QWORD *)(v783 + 64));
                break;
            }
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v783 + 56))(v276, 0, 1, v150);
            v153 = v276;
          }
          v44 = __srca;
          v346 = __srca[5];
          __dstw = (char *)v153 + v346;
          v347 = (char *)v41 + v346;
          v348 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v348 - 8) + 16))(__dstw, v347, v348);
          ((void (*)(_QWORD *, _QWORD, uint64_t, int *))v840[7])(v153, 0, 1, __srca);
          v39 = v813;
        }
        v349 = v39[6];
        __dsti = (_QWORD *)((char *)v7 + v349);
        v350 = (_QWORD *)((char *)v8 + v349);
        if (v894((char *)v8 + v349, 1, v44))
        {
          v351 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
          memcpy(__dsti, v350, *(_QWORD *)(*(_QWORD *)(v351 - 8) + 64));
        }
        else
        {
          v818 = v39;
          v352 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          v353 = *(_QWORD *)(v352 - 8);
          if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v353 + 48))(v350, 1, v352))
          {
            v354 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
            v355 = __dsti;
            memcpy(__dsti, v350, *(_QWORD *)(*(_QWORD *)(v354 - 8) + 64));
            v356 = v350;
          }
          else
          {
            v750 = v352;
            v785 = v350;
            v357 = v353;
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                v358 = *v350;
                v359 = v350;
                v360 = __dsti;
                *__dsti = v358;
                __dsti[1] = v359[1];
                swift_bridgeObjectRetain();
                v361 = v750;
                goto LABEL_211;
              case 4u:
                v402 = *v350;
                v360 = __dsti;
                *__dsti = v402;
                v403 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v719 = (char *)__dsti + v403;
                v693 = (char *)v785 + v403;
                v658 = sub_2408E57A4();
                v670 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v658 - 8) + 16);
                swift_bridgeObjectRetain();
                v670(v719, v693, v658);
                v361 = v750;
                goto LABEL_211;
              case 5u:
                v404 = *v350;
                v360 = __dsti;
                *__dsti = v404;
                v405 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v720 = (char *)__dsti + v405;
                v694 = (char *)v785 + v405;
                v659 = sub_2408E57A4();
                v671 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v659 - 8) + 16);
                swift_bridgeObjectRetain();
                v671(v720, v694, v659);
                v361 = v750;
                goto LABEL_211;
              case 9u:
                v406 = *(_DWORD *)v350;
                v407 = v350;
                v360 = __dsti;
                *(_DWORD *)__dsti = v406;
                __dsti[1] = v407[1];
                __dsti[2] = v407[2];
                v408 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v695 = (char *)v407 + v408;
                v721 = (char *)__dsti + v408;
                v409 = sub_2408E57A4();
                v660 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v409 - 8) + 16);
                swift_bridgeObjectRetain();
                v660(v721, v695, v409);
                v361 = v750;
LABEL_211:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                v357 = v353;
                v401 = v350;
                v360 = __dsti;
                memcpy(__dsti, v401, *(_QWORD *)(v353 + 64));
                v361 = v750;
                break;
            }
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v357 + 56))(v360, 0, 1, v361);
            v355 = v360;
            v356 = v785;
          }
          v410 = __srca[5];
          v411 = (char *)v355 + v410;
          v925 = (char *)v356 + v410;
          v412 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v412 - 8) + 16))(v411, v925, v412);
          ((void (*)(_QWORD *, _QWORD, uint64_t, int *))v840[7])(v355, 0, 1, __srca);
          v39 = v818;
        }
        v413 = v39[7];
        v414 = (char *)v7 + v413;
        v415 = (char *)v8 + v413;
        v416 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v416 - 8) + 16))(v414, v415, v416);
        goto LABEL_223;
      case 3u:
        v981 = v15;
        v1019 = a3;
        *v7 = *v8;
        v7[1] = v8[1];
        v895 = (int *)type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
        v45 = v895[5];
        v841 = (_QWORD *)((char *)v7 + v45);
        v46 = (_QWORD *)((char *)v8 + v45);
        v47 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        v48 = *(_QWORD *)(v47 - 8);
        __dstm = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v48 + 48);
        v49 = v47;
        swift_bridgeObjectRetain();
        __srcb = v46;
        if (__dstm(v46, 1, v49))
        {
          v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
          memcpy(v841, v46, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
          a3 = v1019;
        }
        else
        {
          v782 = v48;
          v154 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          v155 = *(_QWORD *)(v154 - 8);
          v814 = v154;
          a3 = v1019;
          if ((*(unsigned int (**)(_QWORD *, uint64_t))(v155 + 48))(__srcb, 1))
          {
            v156 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
            v157 = __srcb;
            memcpy(v841, __srcb, *(_QWORD *)(*(_QWORD *)(v156 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                *v841 = *__srcb;
                v841[1] = __srcb[1];
                swift_bridgeObjectRetain();
                goto LABEL_189;
              case 4u:
                *v841 = *__srcb;
                v362 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v667 = (char *)__srcb + v362;
                v690 = (char *)v841 + v362;
                v363 = sub_2408E57A4();
                v655 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v363 - 8) + 16);
                swift_bridgeObjectRetain();
                v655(v690, v667, v363);
                a3 = v1019;
                goto LABEL_189;
              case 5u:
                *v841 = *__srcb;
                v364 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v668 = (char *)__srcb + v364;
                v691 = (char *)v841 + v364;
                v365 = sub_2408E57A4();
                v656 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v365 - 8) + 16);
                swift_bridgeObjectRetain();
                v656(v691, v668, v365);
                a3 = v1019;
                goto LABEL_189;
              case 9u:
                *(_DWORD *)v841 = *(_DWORD *)__srcb;
                v841[1] = __srcb[1];
                v841[2] = __srcb[2];
                v366 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v669 = (char *)__srcb + v366;
                v692 = (char *)v841 + v366;
                v367 = sub_2408E57A4();
                v657 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v367 - 8) + 16);
                swift_bridgeObjectRetain();
                v657(v692, v669, v367);
                a3 = v1019;
LABEL_189:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v841, __srcb, *(_QWORD *)(v155 + 64));
                break;
            }
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v155 + 56))(v841, 0, 1, v814);
            v157 = __srcb;
          }
          v368 = *(int *)(v49 + 20);
          __srcbp = (char *)v841 + v368;
          v369 = (char *)v157 + v368;
          v370 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v370 - 8) + 16))(__srcbp, v369, v370);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v782 + 56))(v841, 0, 1, v49);
        }
        v371 = v895[6];
        v372 = (char *)v7 + v371;
        v373 = (char *)v8 + v371;
        v374 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v374 - 8) + 16))(v372, v373, v374);
        goto LABEL_193;
      case 4u:
        v981 = v15;
        v51 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        __dstb = *(_QWORD **)(v51 - 8);
        __srcc = (unsigned int (*)(_QWORD *, uint64_t, uint64_t))__dstb[6];
        v1018 = a3;
        if (__srcc(v8, 1, v51))
        {
          v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
          memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
        }
        else
        {
          v844 = (int *)v51;
          v158 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          v159 = *(_QWORD *)(v158 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v159 + 48))(v8, 1, v158))
          {
            v160 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
            memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v160 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                *v7 = *v8;
                v7[1] = v8[1];
                swift_bridgeObjectRetain();
                goto LABEL_198;
              case 4u:
                *v7 = *v8;
                v375 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v786 = (char *)v8 + v375;
                v819 = (char *)v7 + v375;
                v376 = sub_2408E57A4();
                v751 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v376 - 8) + 16);
                swift_bridgeObjectRetain();
                v751(v819, v786, v376);
                goto LABEL_198;
              case 5u:
                *v7 = *v8;
                v377 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v787 = (char *)v8 + v377;
                v820 = (char *)v7 + v377;
                v378 = sub_2408E57A4();
                v752 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v378 - 8) + 16);
                swift_bridgeObjectRetain();
                v752(v820, v787, v378);
                goto LABEL_198;
              case 9u:
                *(_DWORD *)v7 = *(_DWORD *)v8;
                v7[1] = v8[1];
                v7[2] = v8[2];
                v379 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v788 = (char *)v8 + v379;
                v821 = (char *)v7 + v379;
                v380 = sub_2408E57A4();
                v753 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v380 - 8) + 16);
                swift_bridgeObjectRetain();
                v753(v821, v788, v380);
LABEL_198:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v7, v8, *(_QWORD *)(v159 + 64));
                break;
            }
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v159 + 56))(v7, 0, 1, v158);
          }
          v381 = v844[5];
          v382 = (char *)v7 + v381;
          v383 = (char *)v8 + v381;
          v384 = sub_2408E57A4();
          v385 = v383;
          v51 = (uint64_t)v844;
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v384 - 8) + 16))(v382, v385, v384);
          ((void (*)(_QWORD *, _QWORD, uint64_t, int *))__dstb[7])(v7, 0, 1, v844);
        }
        v386 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
        v387 = *(int *)(v386 + 20);
        v924 = (_QWORD *)((char *)v7 + v387);
        v388 = (char *)v8 + v387;
        if (__srcc((_QWORD *)((char *)v8 + v387), 1, v51))
        {
          v389 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
          memcpy(v924, v388, *(_QWORD *)(*(_QWORD *)(v389 - 8) + 64));
        }
        else
        {
          __srcn = (void *)v386;
          v854 = (int *)v51;
          v390 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          v391 = *(_QWORD *)(v390 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v391 + 48))(v388, 1, v390))
          {
            v392 = v388;
            v393 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
            v394 = v924;
            memcpy(v924, v392, *(_QWORD *)(*(_QWORD *)(v393 - 8) + 64));
            v395 = v392;
          }
          else
          {
            v789 = v391;
            v396 = v388;
            v397 = v390;
            v822 = v396;
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                v398 = v396;
                v399 = *(_QWORD *)v396;
                v400 = v924;
                *v924 = v399;
                v924[1] = *((_QWORD *)v398 + 1);
                swift_bridgeObjectRetain();
                goto LABEL_219;
              case 4u:
                v754 = *(_QWORD *)v396;
                v419 = v396;
                v400 = v924;
                *v924 = v754;
                v420 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v696 = (char *)v419 + v420;
                v722 = (char *)v924 + v420;
                v397 = v390;
                v421 = sub_2408E57A4();
                v672 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v421 - 8) + 16);
                swift_bridgeObjectRetain();
                v672(v722, v696, v421);
                goto LABEL_219;
              case 5u:
                v755 = *(_QWORD *)v396;
                v422 = v396;
                v400 = v924;
                *v924 = v755;
                v423 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v697 = (char *)v422 + v423;
                v723 = (char *)v924 + v423;
                v397 = v390;
                v424 = sub_2408E57A4();
                v673 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v424 - 8) + 16);
                swift_bridgeObjectRetain();
                v673(v723, v697, v424);
                goto LABEL_219;
              case 9u:
                v425 = *(_DWORD *)v396;
                v426 = v396;
                v400 = v924;
                *(_DWORD *)v924 = v425;
                v924[1] = v426[1];
                v924[2] = v426[2];
                v427 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v698 = (char *)v426 + v427;
                v724 = (char *)v924 + v427;
                v397 = v390;
                v428 = sub_2408E57A4();
                v674 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v428 - 8) + 16);
                swift_bridgeObjectRetain();
                v674(v724, v698, v428);
LABEL_219:
                swift_storeEnumTagMultiPayload();
                v417 = v789;
                break;
              default:
                v417 = v789;
                v418 = v396;
                v400 = v924;
                memcpy(v924, v418, *(_QWORD *)(v789 + 64));
                break;
            }
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v417 + 56))(v400, 0, 1, v397);
            v394 = v400;
            v395 = v822;
          }
          v429 = v854[5];
          v430 = (char *)v394 + v429;
          v926 = &v395[v429];
          v431 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v431 - 8) + 16))(v430, v926, v431);
          ((void (*)(_QWORD *, _QWORD, uint64_t, int *))__dstb[7])(v394, 0, 1, v854);
          v386 = (uint64_t)__srcn;
        }
        v432 = *(int *)(v386 + 24);
        v433 = (char *)v7 + v432;
        v434 = (char *)v8 + v432;
        v435 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v435 - 8) + 16))(v433, v434, v435);
LABEL_223:
        swift_storeEnumTagMultiPayload();
        a3 = v1018;
        goto LABEL_224;
      case 5u:
        *v7 = *v8;
        v7[1] = v8[1];
        v7[2] = v8[2];
        v53 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0) + 24);
        v896 = (char *)v8 + v53;
        __srcp = (char *)v7 + v53;
        v1020 = a3;
        v54 = sub_2408E57A4();
        __dstn = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v55 = v54;
        a3 = v1020;
        __dstn(__srcp, v896, v55);
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        *v7 = *v8;
        v56 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0) + 20);
        v897 = (char *)v8 + v56;
        __srcq = (char *)v7 + v56;
        v57 = sub_2408E57A4();
        v1021 = a3;
        v58 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16);
        swift_bridgeObjectRetain();
        v58(__srcq, v897, v57);
        a3 = v1021;
        swift_storeEnumTagMultiPayload();
        break;
      case 7u:
        v981 = v15;
        *v7 = *v8;
        v7[1] = v8[1];
        __srcd = (int *)type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
        v59 = __srcd[5];
        __dstc = (char *)v7 + v59;
        v60 = (char *)v8 + v59;
        v61 = type metadata accessor for TranscriptProtoASTPickType(0);
        v781 = *(_QWORD *)(v61 - 8);
        v898 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v781 + 48);
        swift_bridgeObjectRetain();
        v842 = v60;
        if (v898(v60, 1, v61))
        {
          v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D08);
          memcpy(__dstc, v60, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
        }
        else
        {
          v161 = *(_QWORD *)v60;
          __dstc[8] = v60[8];
          *(_QWORD *)__dstc = v161;
          v162 = *(int *)(v61 + 20);
          v163 = &__dstc[v162];
          v912 = &v842[v162];
          v164 = sub_2408E57A4();
          (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v164 - 8) + 16))(v163, v912, v164);
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v781 + 56))(__dstc, 0, 1, v61);
        }
        v165 = __srcd[6];
        v166 = (char *)v7 + v165;
        v167 = (char *)v8 + v165;
        v168 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v168 - 8) + 16))(v166, v167, v168);
LABEL_193:
        swift_storeEnumTagMultiPayload();
LABEL_224:
        v15 = v981;
        break;
      case 8u:
        *v7 = *v8;
        v7[1] = v8[1];
        v63 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0) + 20);
        v899 = (char *)v8 + v63;
        __srcr = (char *)v7 + v63;
        v64 = sub_2408E57A4();
        v1022 = a3;
        v65 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 16);
        swift_bridgeObjectRetain();
        v65(__srcr, v899, v64);
        a3 = v1022;
        swift_storeEnumTagMultiPayload();
        break;
      case 9u:
        *v7 = *v8;
        v7[1] = v8[1];
        *((_BYTE *)v7 + 16) = *((_BYTE *)v8 + 16);
        *((_BYTE *)v7 + 17) = *((_BYTE *)v8 + 17);
        v66 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0) + 28);
        v900 = (char *)v8 + v66;
        __srcs = (char *)v7 + v66;
        v67 = sub_2408E57A4();
        v1023 = a3;
        v68 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 16);
        swift_bridgeObjectRetain();
        v68(__srcs, v900, v67);
        a3 = v1023;
        swift_storeEnumTagMultiPayload();
        break;
      case 0xAu:
        *v7 = *v8;
        v7[1] = v8[1];
        v69 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0) + 20);
        v901 = (char *)v8 + v69;
        __srct = (char *)v7 + v69;
        v70 = sub_2408E57A4();
        v1024 = a3;
        v71 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 16);
        swift_bridgeObjectRetain();
        v71(__srct, v901, v70);
        a3 = v1024;
        swift_storeEnumTagMultiPayload();
        break;
      case 0xBu:
        *v7 = *v8;
        v7[1] = v8[1];
        v72 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0) + 20);
        v902 = (char *)v8 + v72;
        __srcu = (char *)v7 + v72;
        v73 = sub_2408E57A4();
        v1025 = a3;
        v74 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v73 - 8) + 16);
        swift_bridgeObjectRetain();
        v74(__srcu, v902, v73);
        a3 = v1025;
        swift_storeEnumTagMultiPayload();
        break;
      case 0xCu:
        *v7 = *v8;
        v75 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0) + 20);
        v903 = (char *)v8 + v75;
        __srcv = (char *)v7 + v75;
        v76 = sub_2408E57A4();
        v1026 = a3;
        v77 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v76 - 8) + 16);
        swift_bridgeObjectRetain();
        v77(__srcv, v903, v76);
        a3 = v1026;
        swift_storeEnumTagMultiPayload();
        break;
      case 0xDu:
        *v7 = *v8;
        v7[1] = v8[1];
        v78 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0) + 20);
        v904 = (char *)v8 + v78;
        __srcw = (char *)v7 + v78;
        v79 = sub_2408E57A4();
        v1027 = a3;
        v80 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 16);
        swift_bridgeObjectRetain();
        v80(__srcw, v904, v79);
        a3 = v1027;
        swift_storeEnumTagMultiPayload();
        break;
      case 0xEu:
        *v7 = *v8;
        v7[1] = v8[1];
        v81 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0) + 20);
        v905 = (char *)v8 + v81;
        __srcx = (char *)v7 + v81;
        v82 = sub_2408E57A4();
        v1028 = a3;
        v83 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v82 - 8) + 16);
        swift_bridgeObjectRetain();
        v83(__srcx, v905, v82);
        a3 = v1028;
        swift_storeEnumTagMultiPayload();
        break;
      case 0xFu:
      case 0x11u:
        v84 = sub_2408E57A4();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v84 - 8) + 16))(v7, v8, v84);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x10u:
        *v7 = *v8;
        v85 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0) + 20);
        v906 = (char *)v8 + v85;
        __srcy = (char *)v7 + v85;
        v86 = sub_2408E57A4();
        v1029 = a3;
        v87 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v86 - 8) + 16);
        swift_bridgeObjectRetain();
        v87(__srcy, v906, v86);
        a3 = v1029;
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v7, v8, v15[8]);
        break;
    }
    ((void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v15[7])(v7, 0, 1, v14);
  }
  v436 = *(int *)(v9 + 20);
  v437 = (char *)v7 + v436;
  v438 = (char *)v8 + v436;
  v439 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v439 - 8) + 16))(v437, v438, v439);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_294:
  v559 = *(int *)(a3 + 24);
  v560 = (char *)a1 + v559;
  v561 = (char *)a2 + v559;
  v562 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v562 - 8) + 24))(v560, v561, v562);
  return a1;
}

_OWORD *initializeWithTake for TranscriptProtoASTFlatAssignExpr(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _DWORD *v7;
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _DWORD *v20;
  uint64_t v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  char *v25;
  _DWORD *v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;
  _DWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  char *v94;
  int EnumCaseMultiPayload;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  _DWORD *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _DWORD *v106;
  _DWORD *v107;
  uint64_t v108;
  _DWORD *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  _BYTE *v115;
  uint64_t v116;
  int v117;
  int v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  int v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  int v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  int *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  _DWORD *v162;
  int *v163;
  int v164;
  uint64_t v165;
  uint64_t v166;
  int *v167;
  _DWORD *v168;
  uint64_t v169;
  uint64_t v170;
  void *v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  uint64_t v190;
  uint64_t v191;
  char *v192;
  char *v193;
  uint64_t v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  char *v202;
  uint64_t v203;
  _DWORD *v204;
  char *v205;
  char *v206;
  int v207;
  uint64_t v208;
  uint64_t v209;
  _DWORD *v210;
  _DWORD *v211;
  uint64_t v212;
  uint64_t v213;
  int v214;
  int *v215;
  uint64_t v216;
  char *v217;
  char *v218;
  uint64_t v219;
  uint64_t v220;
  int *v221;
  uint64_t v222;
  uint64_t v223;
  int *v224;
  uint64_t v225;
  char *v226;
  uint64_t v227;
  uint64_t v228;
  char *v229;
  char *v230;
  uint64_t v231;
  int v232;
  _DWORD *v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  _DWORD *v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  char *v241;
  uint64_t v242;
  char *v243;
  uint64_t v244;
  uint64_t v245;
  char *v246;
  char *v247;
  uint64_t v248;
  uint64_t v249;
  char *v250;
  char *v251;
  uint64_t v252;
  uint64_t v253;
  char *v254;
  char *v255;
  uint64_t v256;
  char *v258;
  char *v259;
  char *v260;
  char *v261;
  uint64_t v262;
  char *v263;
  char *v264;
  char *v265;
  char *v266;
  char *v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  char *v271;
  char *v272;
  char *v273;
  char *v274;
  char *v275;
  uint64_t v276;
  _DWORD *v277;
  int *v278;
  uint64_t v279;
  uint64_t v280;
  int *v281;
  int *v282;
  char *v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  _DWORD *__dst;
  _QWORD *__dsta;
  _DWORD *__dstb;
  _BYTE *__dstd;
  char *__dste;
  _DWORD *__dstc;
  int *v294;
  unsigned int (*v295)(char *, uint64_t, int *);
  char *v296;
  void *v297;
  char *v298;
  char *v299;
  _DWORD *v300;
  char *v301;
  char *v302;
  _DWORD *__src;
  int *__srca;
  unsigned int (*__srcb)(_DWORD *, uint64_t, uint64_t);
  _BYTE *__srcc;
  char *__srce;
  char *__srcf;
  char *__srcg;
  char *__srch;
  void *__srcd;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (_DWORD *)((char *)a1 + v6);
  v8 = (_DWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for TranscriptProtoASTFlatExpr(0);
  v10 = *(_QWORD *)(v9 - 8);
  if (!(*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v12 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v12))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC20);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
LABEL_115:
      v249 = *(int *)(v9 + 20);
      v250 = (char *)v7 + v249;
      v251 = (char *)v8 + v249;
      v252 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v252 - 8) + 32))(v250, v251, v252);
      (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_116;
    }
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v317 = v13;
        v15 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        v16 = *(_QWORD *)(v15 - 8);
        if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v16 + 48))(v8, 1, v15))
        {
          v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
          memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
        }
        else
        {
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          switch(EnumCaseMultiPayload)
          {
            case 9:
              *v7 = *v8;
              *(_OWORD *)(v7 + 2) = *(_OWORD *)(v8 + 2);
              v134 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              __srcf = (char *)v7 + v134;
              v315 = v10;
              v135 = (char *)v8 + v134;
              v136 = sub_2408E57A4();
              v137 = v135;
              v10 = v315;
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v136 - 8) + 32))(__srcf, v137, v136);
              swift_storeEnumTagMultiPayload();
              break;
            case 5:
              *(_QWORD *)v7 = *(_QWORD *)v8;
              v138 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              __srcg = (char *)v7 + v138;
              v316 = v10;
              v139 = (char *)v8 + v138;
              v140 = sub_2408E57A4();
              v141 = v139;
              v10 = v316;
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v140 - 8) + 32))(__srcg, v141, v140);
              swift_storeEnumTagMultiPayload();
              break;
            case 4:
              *(_QWORD *)v7 = *(_QWORD *)v8;
              v96 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              __srce = (char *)v7 + v96;
              v314 = v10;
              v97 = (char *)v8 + v96;
              v98 = sub_2408E57A4();
              v99 = v97;
              v10 = v314;
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 32))(__srce, v99, v98);
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v7, v8, *(_QWORD *)(v16 + 64));
              break;
          }
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v7, 0, 1, v15);
        }
        v142 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValue(0) + 20);
        v143 = (char *)v7 + v142;
        v144 = (char *)v8 + v142;
        v145 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v145 - 8) + 32))(v143, v144, v145);
        goto LABEL_86;
      case 1u:
        v312 = v10;
        v317 = v13;
        *(_BYTE *)v7 = *(_BYTE *)v8;
        v18 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
        v19 = *(int *)(v18 + 20);
        __dst = (_DWORD *)((char *)v7 + v19);
        v294 = (int *)v18;
        v20 = (_DWORD *)((char *)v8 + v19);
        v21 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        v22 = *(_QWORD *)(v21 - 8);
        __src = v20;
        if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
          goto LABEL_14;
        v280 = v22;
        v285 = v21;
        v100 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        v101 = *(_QWORD *)(v100 - 8);
        v102 = __src;
        if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v101 + 48))(__src, 1, v100))
          goto LABEL_39;
        v276 = v101;
        v117 = swift_getEnumCaseMultiPayload();
        if (v117 == 9)
          goto LABEL_80;
        if (v117 == 5)
          goto LABEL_81;
        v268 = v100;
        v109 = __dst;
        if (v117 == 4)
          goto LABEL_54;
        goto LABEL_82;
      case 2u:
        v313 = v10;
        v318 = v13;
        *(_BYTE *)v7 = *(_BYTE *)v8;
        v23 = (int *)type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
        v24 = v23[5];
        v25 = (char *)v7 + v24;
        v26 = (_DWORD *)((char *)v8 + v24);
        v27 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        v284 = *(_QWORD *)(v27 - 8);
        v295 = *(unsigned int (**)(char *, uint64_t, int *))(v284 + 48);
        __srca = (int *)v27;
        if (((unsigned int (*)(_DWORD *, uint64_t))v295)(v26, 1))
        {
          v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
          memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
          v29 = __srca;
        }
        else
        {
          __dstb = v25;
          v281 = v23;
          v103 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          v104 = *(_QWORD *)(v103 - 8);
          if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v104 + 48))(v26, 1, v103))
          {
            v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
            v106 = __dstb;
            memcpy(__dstb, v26, *(_QWORD *)(*(_QWORD *)(v105 - 8) + 64));
            v107 = v26;
          }
          else
          {
            v262 = v104;
            v269 = v103;
            v118 = swift_getEnumCaseMultiPayload();
            v277 = v26;
            if (v118 == 9)
            {
              v106 = __dstb;
              *__dstb = *v26;
              *(_OWORD *)(__dstb + 2) = *(_OWORD *)(v26 + 2);
              v146 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              v147 = (char *)__dstb + v146;
              v148 = (char *)v26 + v146;
              v149 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v149 - 8) + 32))(v147, v148, v149);
              v123 = v269;
              swift_storeEnumTagMultiPayload();
              v119 = v262;
            }
            else
            {
              v119 = v104;
              v106 = __dstb;
              if (v118 == 5)
              {
                *(_QWORD *)__dstb = *(_QWORD *)v26;
                v150 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v259 = (char *)__dstb + v150;
                v151 = (char *)v26 + v150;
                v152 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v152 - 8) + 32))(v259, v151, v152);
                v123 = v269;
                swift_storeEnumTagMultiPayload();
              }
              else if (v118 == 4)
              {
                *(_QWORD *)__dstb = *(_QWORD *)v26;
                v120 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v258 = (char *)__dstb + v120;
                v121 = (char *)v26 + v120;
                v122 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v122 - 8) + 32))(v258, v121, v122);
                v123 = v269;
                swift_storeEnumTagMultiPayload();
              }
              else
              {
                memcpy(__dstb, v26, *(_QWORD *)(v262 + 64));
                v123 = v269;
              }
            }
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v119 + 56))(v106, 0, 1, v123);
            v107 = v277;
          }
          v29 = __srca;
          v153 = __srca[5];
          v154 = (char *)v106 + v153;
          __dste = (char *)v107 + v153;
          v155 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v155 - 8) + 32))(v154, __dste, v155);
          (*(void (**)(_DWORD *, _QWORD, uint64_t, int *))(v284 + 56))(v106, 0, 1, __srca);
          v23 = v281;
        }
        v156 = v23[6];
        __dstc = (_DWORD *)((char *)v7 + v156);
        v157 = (_DWORD *)((char *)v8 + v156);
        if (v295((char *)v8 + v156, 1, v29))
        {
          v158 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
          memcpy(__dstc, v157, *(_QWORD *)(*(_QWORD *)(v158 - 8) + 64));
        }
        else
        {
          v282 = v23;
          v159 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          v160 = *(_QWORD *)(v159 - 8);
          if ((*(unsigned int (**)(int *, uint64_t, uint64_t))(v160 + 48))(v157, 1, v159))
          {
            v161 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
            v162 = __dstc;
            memcpy(__dstc, v157, *(_QWORD *)(*(_QWORD *)(v161 - 8) + 64));
            v163 = v157;
          }
          else
          {
            v270 = v160;
            v297 = (void *)v159;
            v164 = swift_getEnumCaseMultiPayload();
            v278 = v157;
            if (v164 == 9)
            {
              v214 = *v157;
              v215 = v157;
              v168 = __dstc;
              *__dstc = v214;
              *(_OWORD *)(__dstc + 2) = *(_OWORD *)(v215 + 2);
              v216 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              v217 = (char *)__dstc + v216;
              v218 = (char *)v215 + v216;
              v219 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v219 - 8) + 32))(v217, v218, v219);
              v171 = v297;
              swift_storeEnumTagMultiPayload();
              v165 = v270;
            }
            else
            {
              v165 = v160;
              if (v164 == 5)
              {
                v220 = *(_QWORD *)v157;
                v221 = v157;
                v168 = __dstc;
                *(_QWORD *)__dstc = v220;
                v222 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v261 = (char *)__dstc + v222;
                v265 = (char *)v221 + v222;
                v223 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v223 - 8) + 32))(v261, v265, v223);
                v171 = v297;
                swift_storeEnumTagMultiPayload();
              }
              else if (v164 == 4)
              {
                v166 = *(_QWORD *)v157;
                v167 = v157;
                v168 = __dstc;
                *(_QWORD *)__dstc = v166;
                v169 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v260 = (char *)__dstc + v169;
                v263 = (char *)v167 + v169;
                v170 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v170 - 8) + 32))(v260, v263, v170);
                v171 = v297;
                swift_storeEnumTagMultiPayload();
              }
              else
              {
                v224 = v157;
                v168 = __dstc;
                memcpy(__dstc, v224, *(_QWORD *)(v160 + 64));
                v171 = v297;
              }
            }
            (*(void (**)(_DWORD *, _QWORD, uint64_t, void *))(v165 + 56))(v168, 0, 1, v171);
            v162 = v168;
            v163 = v278;
          }
          v225 = __srca[5];
          v226 = (char *)v162 + v225;
          v301 = (char *)v163 + v225;
          v227 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v227 - 8) + 32))(v226, v301, v227);
          (*(void (**)(_DWORD *, _QWORD, uint64_t, int *))(v284 + 56))(v162, 0, 1, __srca);
          v23 = v282;
        }
        v228 = v23[7];
        v229 = (char *)v7 + v228;
        v230 = (char *)v8 + v228;
        v231 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v231 - 8) + 32))(v229, v230, v231);
        goto LABEL_113;
      case 3u:
        v312 = v10;
        v317 = v13;
        *(_OWORD *)v7 = *(_OWORD *)v8;
        v30 = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
        v31 = *(int *)(v30 + 20);
        __dst = (_DWORD *)((char *)v7 + v31);
        v294 = (int *)v30;
        v32 = (_DWORD *)((char *)v8 + v31);
        v33 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        v34 = *(_QWORD *)(v33 - 8);
        __src = v32;
        if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
        {
LABEL_14:
          v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
          memcpy(__dst, __src, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
        }
        else
        {
          v280 = v34;
          v285 = v33;
          v100 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          v101 = *(_QWORD *)(v100 - 8);
          v102 = __src;
          if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v101 + 48))(__src, 1, v100))
          {
LABEL_39:
            v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
            v109 = __dst;
            memcpy(__dst, __src, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
            v110 = v285;
          }
          else
          {
            v276 = v101;
            v124 = swift_getEnumCaseMultiPayload();
            if (v124 == 9)
            {
LABEL_80:
              v129 = v100;
              v109 = __dst;
              *__dst = *__src;
              *(_OWORD *)(__dst + 2) = *(_OWORD *)(__src + 2);
              v172 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              v271 = (char *)__dst + v172;
              v173 = (char *)__src + v172;
              v174 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v174 - 8) + 32))(v271, v173, v174);
              swift_storeEnumTagMultiPayload();
            }
            else if (v124 == 5)
            {
LABEL_81:
              v129 = v100;
              v109 = __dst;
              *(_QWORD *)__dst = *(_QWORD *)__src;
              v175 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              v272 = (char *)__dst + v175;
              v176 = (char *)__src + v175;
              v177 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v177 - 8) + 32))(v272, v176, v177);
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              v268 = v100;
              v109 = __dst;
              if (v124 == 4)
              {
LABEL_54:
                *(_QWORD *)__dst = *(_QWORD *)__src;
                v125 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v126 = (char *)__dst + v125;
                v127 = (char *)__src + v125;
                v128 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v128 - 8) + 32))(v126, v127, v128);
                v129 = v268;
                swift_storeEnumTagMultiPayload();
              }
              else
              {
LABEL_82:
                memcpy(__dst, __src, *(_QWORD *)(v101 + 64));
                v129 = v268;
              }
            }
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v276 + 56))(v109, 0, 1, v129);
            v110 = v285;
            v102 = __src;
          }
          v178 = *(int *)(v110 + 20);
          __srch = (char *)v109 + v178;
          v179 = (char *)v102 + v178;
          v180 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v180 - 8) + 32))(__srch, v179, v180);
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v280 + 56))(v109, 0, 1, v285);
        }
LABEL_85:
        v10 = v312;
        v181 = v294[6];
        v182 = (char *)v7 + v181;
        v183 = (char *)v8 + v181;
        v184 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v184 - 8) + 32))(v182, v183, v184);
LABEL_86:
        swift_storeEnumTagMultiPayload();
        v13 = v317;
        goto LABEL_114;
      case 4u:
        v318 = v13;
        v36 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        __dsta = *(_QWORD **)(v36 - 8);
        __srcb = (unsigned int (*)(_DWORD *, uint64_t, uint64_t))__dsta[6];
        v313 = v10;
        if (__srcb(v8, 1, v36))
        {
          v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
          memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
        }
        else
        {
          v286 = v36;
          v111 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          v112 = *(_QWORD *)(v111 - 8);
          if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v112 + 48))(v8, 1, v111))
          {
            v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
            memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v113 - 8) + 64));
          }
          else
          {
            v130 = swift_getEnumCaseMultiPayload();
            switch(v130)
            {
              case 9:
                *v7 = *v8;
                *(_OWORD *)(v7 + 2) = *(_OWORD *)(v8 + 2);
                v185 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v298 = (char *)v7 + v185;
                v186 = (char *)v8 + v185;
                v187 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v187 - 8) + 32))(v298, v186, v187);
                swift_storeEnumTagMultiPayload();
                break;
              case 5:
                *(_QWORD *)v7 = *(_QWORD *)v8;
                v188 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v299 = (char *)v7 + v188;
                v189 = (char *)v8 + v188;
                v190 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v190 - 8) + 32))(v299, v189, v190);
                swift_storeEnumTagMultiPayload();
                break;
              case 4:
                *(_QWORD *)v7 = *(_QWORD *)v8;
                v131 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v296 = (char *)v7 + v131;
                v132 = (char *)v8 + v131;
                v133 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v133 - 8) + 32))(v296, v132, v133);
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v7, v8, *(_QWORD *)(v112 + 64));
                break;
            }
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v112 + 56))(v7, 0, 1, v111);
          }
          v191 = *(int *)(v286 + 20);
          v192 = (char *)v7 + v191;
          v193 = (char *)v8 + v191;
          v194 = sub_2408E57A4();
          v195 = v193;
          v36 = v286;
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v194 - 8) + 32))(v192, v195, v194);
          ((void (*)(_DWORD *, _QWORD, uint64_t, uint64_t))__dsta[7])(v7, 0, 1, v286);
        }
        v196 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
        v197 = *(int *)(v196 + 20);
        v300 = (_DWORD *)((char *)v7 + v197);
        v198 = (char *)v8 + v197;
        if (__srcb((_DWORD *)((char *)v8 + v197), 1, v36))
        {
          v199 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
          memcpy(v300, v198, *(_QWORD *)(*(_QWORD *)(v199 - 8) + 64));
          goto LABEL_112;
        }
        __srcd = (void *)v196;
        v287 = v36;
        v200 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        v201 = *(_QWORD *)(v200 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v201 + 48))(v198, 1, v200))
        {
          v202 = v198;
          v203 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
          v204 = v300;
          memcpy(v300, v202, *(_QWORD *)(*(_QWORD *)(v203 - 8) + 64));
          v205 = v202;
          goto LABEL_111;
        }
        v279 = v201;
        v206 = v198;
        v207 = swift_getEnumCaseMultiPayload();
        v208 = v200;
        v283 = v206;
        switch(v207)
        {
          case 9:
            v232 = *(_DWORD *)v206;
            v233 = v206;
            v211 = v300;
            *v300 = v232;
            *(_OWORD *)(v300 + 2) = *(_OWORD *)(v233 + 2);
            v234 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v266 = (char *)v233 + v234;
            v274 = (char *)v300 + v234;
            v208 = v200;
            v235 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v235 - 8) + 32))(v274, v266, v235);
            break;
          case 5:
            v236 = *(_QWORD *)v206;
            v237 = v206;
            v211 = v300;
            *(_QWORD *)v300 = v236;
            v238 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v267 = (char *)v237 + v238;
            v275 = (char *)v300 + v238;
            v208 = v200;
            v239 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v239 - 8) + 32))(v275, v267, v239);
            break;
          case 4:
            v209 = *(_QWORD *)v206;
            v210 = v206;
            v211 = v300;
            *(_QWORD *)v300 = v209;
            v212 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v264 = (char *)v210 + v212;
            v273 = (char *)v300 + v212;
            v208 = v200;
            v213 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v213 - 8) + 32))(v273, v264, v213);
            break;
          default:
            v240 = v279;
            v241 = v206;
            v211 = v300;
            memcpy(v300, v241, *(_QWORD *)(v279 + 64));
LABEL_110:
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v240 + 56))(v211, 0, 1, v208);
            v204 = v211;
            v205 = v283;
LABEL_111:
            v242 = *(int *)(v287 + 20);
            v243 = (char *)v204 + v242;
            v302 = &v205[v242];
            v244 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v244 - 8) + 32))(v243, v302, v244);
            ((void (*)(_DWORD *, _QWORD, uint64_t, uint64_t))__dsta[7])(v204, 0, 1, v287);
            v196 = (uint64_t)__srcd;
LABEL_112:
            v245 = *(int *)(v196 + 24);
            v246 = (char *)v7 + v245;
            v247 = (char *)v8 + v245;
            v248 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v248 - 8) + 32))(v246, v247, v248);
LABEL_113:
            swift_storeEnumTagMultiPayload();
            v10 = v313;
            v13 = v318;
LABEL_114:
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v7, 0, 1, v12);
            goto LABEL_115;
        }
        swift_storeEnumTagMultiPayload();
        v240 = v279;
        goto LABEL_110;
      case 5u:
        *(_OWORD *)v7 = *(_OWORD *)v8;
        *((_QWORD *)v7 + 2) = *((_QWORD *)v8 + 2);
        v38 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0) + 24);
        v319 = v13;
        v39 = (char *)v7 + v38;
        v40 = (char *)v8 + v38;
        v41 = sub_2408E57A4();
        v42 = v39;
        v13 = v319;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v42, v40, v41);
        swift_storeEnumTagMultiPayload();
        goto LABEL_114;
      case 6u:
        *(_QWORD *)v7 = *(_QWORD *)v8;
        v43 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0) + 20);
        v320 = v13;
        v44 = (char *)v7 + v43;
        v45 = (char *)v8 + v43;
        v46 = sub_2408E57A4();
        v47 = v44;
        v13 = v320;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v47, v45, v46);
        swift_storeEnumTagMultiPayload();
        goto LABEL_114;
      case 7u:
        v312 = v10;
        v317 = v13;
        *(_OWORD *)v7 = *(_OWORD *)v8;
        v48 = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
        v49 = *(int *)(v48 + 20);
        v294 = (int *)v48;
        __srcc = (char *)v7 + v49;
        v50 = (char *)v8 + v49;
        v51 = type metadata accessor for TranscriptProtoASTPickType(0);
        v52 = *(_QWORD *)(v51 - 8);
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51))
        {
          v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D08);
          memcpy(__srcc, v50, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
        }
        else
        {
          *(_QWORD *)__srcc = *(_QWORD *)v50;
          __srcc[8] = v50[8];
          v114 = *(int *)(v51 + 20);
          __dstd = &__srcc[v114];
          v115 = &v50[v114];
          v116 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v116 - 8) + 32))(__dstd, v115, v116);
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v52 + 56))(__srcc, 0, 1, v51);
        }
        goto LABEL_85;
      case 8u:
        *(_OWORD *)v7 = *(_OWORD *)v8;
        v54 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0) + 20);
        v321 = v13;
        v55 = (char *)v7 + v54;
        v56 = (char *)v8 + v54;
        v57 = sub_2408E57A4();
        v58 = v55;
        v13 = v321;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 32))(v58, v56, v57);
        swift_storeEnumTagMultiPayload();
        goto LABEL_114;
      case 9u:
        *(_OWORD *)v7 = *(_OWORD *)v8;
        *((_WORD *)v7 + 8) = *((_WORD *)v8 + 8);
        v59 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0) + 28);
        v322 = v13;
        v60 = (char *)v7 + v59;
        v61 = (char *)v8 + v59;
        v62 = sub_2408E57A4();
        v63 = v60;
        v13 = v322;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 32))(v63, v61, v62);
        swift_storeEnumTagMultiPayload();
        goto LABEL_114;
      case 0xAu:
        *(_OWORD *)v7 = *(_OWORD *)v8;
        v64 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0) + 20);
        v323 = v13;
        v65 = (char *)v7 + v64;
        v66 = (char *)v8 + v64;
        v67 = sub_2408E57A4();
        v68 = v65;
        v13 = v323;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 32))(v68, v66, v67);
        swift_storeEnumTagMultiPayload();
        goto LABEL_114;
      case 0xBu:
        *(_OWORD *)v7 = *(_OWORD *)v8;
        v69 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0) + 20);
        v324 = v13;
        v70 = (char *)v7 + v69;
        v71 = (char *)v8 + v69;
        v72 = sub_2408E57A4();
        v73 = v70;
        v13 = v324;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v72 - 8) + 32))(v73, v71, v72);
        swift_storeEnumTagMultiPayload();
        goto LABEL_114;
      case 0xCu:
        *(_QWORD *)v7 = *(_QWORD *)v8;
        v74 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0) + 20);
        v325 = v13;
        v75 = (char *)v7 + v74;
        v76 = (char *)v8 + v74;
        v77 = sub_2408E57A4();
        v78 = v75;
        v13 = v325;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v77 - 8) + 32))(v78, v76, v77);
        swift_storeEnumTagMultiPayload();
        goto LABEL_114;
      case 0xDu:
        *(_OWORD *)v7 = *(_OWORD *)v8;
        v79 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0) + 20);
        v326 = v13;
        v80 = (char *)v7 + v79;
        v81 = (char *)v8 + v79;
        v82 = sub_2408E57A4();
        v83 = v80;
        v13 = v326;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v82 - 8) + 32))(v83, v81, v82);
        swift_storeEnumTagMultiPayload();
        goto LABEL_114;
      case 0xEu:
        *(_OWORD *)v7 = *(_OWORD *)v8;
        v84 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0) + 20);
        v327 = v13;
        v85 = (char *)v7 + v84;
        v86 = (char *)v8 + v84;
        v87 = sub_2408E57A4();
        v88 = v85;
        v13 = v327;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v87 - 8) + 32))(v88, v86, v87);
        swift_storeEnumTagMultiPayload();
        goto LABEL_114;
      case 0xFu:
      case 0x11u:
        v89 = sub_2408E57A4();
        (*(void (**)(_DWORD *, _DWORD *, uint64_t))(*(_QWORD *)(v89 - 8) + 32))(v7, v8, v89);
        swift_storeEnumTagMultiPayload();
        goto LABEL_114;
      case 0x10u:
        *(_QWORD *)v7 = *(_QWORD *)v8;
        v90 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0) + 20);
        v328 = v13;
        v91 = (char *)v7 + v90;
        v92 = (char *)v8 + v90;
        v93 = sub_2408E57A4();
        v94 = v91;
        v13 = v328;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v93 - 8) + 32))(v94, v92, v93);
        swift_storeEnumTagMultiPayload();
        goto LABEL_114;
      default:
        memcpy(v7, v8, *(_QWORD *)(v13 + 64));
        goto LABEL_114;
    }
  }
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000F20);
  memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
LABEL_116:
  v253 = *(int *)(a3 + 24);
  v254 = (char *)a1 + v253;
  v255 = (char *)a2 + v253;
  v256 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v256 - 8) + 32))(v254, v255, v256);
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoASTFlatAssignExpr(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _DWORD *v8;
  _DWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(_DWORD *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(_DWORD *, uint64_t, uint64_t);
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  size_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _DWORD *v36;
  uint64_t v37;
  uint64_t v38;
  int *v39;
  uint64_t v40;
  _DWORD *v41;
  uint64_t v42;
  uint64_t v43;
  int *v44;
  uint64_t v45;
  uint64_t v46;
  _DWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  _BYTE *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  _DWORD *v112;
  uint64_t v113;
  uint64_t v114;
  int *v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  int *v120;
  uint64_t v121;
  uint64_t v122;
  _DWORD *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  _BYTE *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  char *v173;
  uint64_t v174;
  int v175;
  uint64_t v176;
  char *v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  _DWORD *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  _DWORD *v186;
  uint64_t v187;
  _DWORD *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  _BYTE *v194;
  uint64_t v195;
  int EnumCaseMultiPayload;
  uint64_t v197;
  char *v198;
  uint64_t v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  _DWORD *v203;
  uint64_t v204;
  unsigned int (**v205)(_DWORD *, uint64_t, uint64_t);
  int *v206;
  uint64_t v207;
  _DWORD *v208;
  _DWORD *v209;
  uint64_t v210;
  unsigned int (*v211)(_QWORD, _QWORD);
  uint64_t v212;
  uint64_t v213;
  unsigned int (**v214)(_DWORD *, uint64_t, uint64_t);
  uint64_t v215;
  uint64_t v216;
  unsigned int (*v217)(_DWORD *, uint64_t, uint64_t);
  uint64_t v218;
  uint64_t v219;
  char *v220;
  char *v221;
  uint64_t v222;
  uint64_t v223;
  char *v224;
  char *v225;
  uint64_t v226;
  uint64_t v227;
  _BYTE *v228;
  _BYTE *v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  char *v234;
  char *v235;
  uint64_t v236;
  uint64_t v237;
  char *v238;
  char *v239;
  uint64_t v240;
  uint64_t v241;
  char *v242;
  char *v243;
  uint64_t v244;
  uint64_t v245;
  char *v246;
  char *v247;
  uint64_t v248;
  uint64_t v249;
  char *v250;
  char *v251;
  uint64_t v252;
  uint64_t v253;
  char *v254;
  char *v255;
  uint64_t v256;
  uint64_t v257;
  char *v258;
  char *v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  char *v263;
  char *v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  _DWORD *v268;
  uint64_t v269;
  uint64_t v270;
  _DWORD *v271;
  uint64_t v272;
  _DWORD *v273;
  int *v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  _BYTE *v279;
  uint64_t v280;
  int v281;
  int v282;
  uint64_t v283;
  char *v284;
  uint64_t v285;
  uint64_t v286;
  int v287;
  uint64_t v288;
  char *v289;
  char *v290;
  uint64_t v291;
  uint64_t v292;
  int v293;
  uint64_t v294;
  char *v295;
  uint64_t v296;
  uint64_t v297;
  char *v298;
  uint64_t v299;
  char *v300;
  uint64_t v301;
  char *v302;
  uint64_t v303;
  char *v304;
  uint64_t v305;
  char *v306;
  char *v307;
  uint64_t v308;
  int v309;
  uint64_t v310;
  char *v311;
  char *v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  _DWORD *v319;
  _DWORD *v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  _BYTE *v326;
  uint64_t v327;
  uint64_t v328;
  char *v329;
  char *v330;
  uint64_t v331;
  int v332;
  int v333;
  _DWORD *v334;
  uint64_t v335;
  char *v336;
  char *v337;
  uint64_t v338;
  uint64_t v339;
  int v340;
  uint64_t v341;
  char *v342;
  char *v343;
  uint64_t v344;
  uint64_t v345;
  int v346;
  uint64_t v347;
  char *v348;
  uint64_t v349;
  uint64_t v350;
  char *v351;
  uint64_t v352;
  char *v353;
  uint64_t v354;
  char *v355;
  uint64_t v356;
  char *v357;
  uint64_t v358;
  char *v359;
  char *v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  char *v367;
  uint64_t v368;
  uint64_t v369;
  int *v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  _DWORD *v375;
  int *v376;
  int v377;
  void (**v378)(_DWORD *, _QWORD, uint64_t, _QWORD);
  uint64_t v379;
  int *v380;
  _DWORD *v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  char *v386;
  uint64_t v387;
  uint64_t v388;
  char *v389;
  uint64_t v390;
  uint64_t v391;
  char *v392;
  uint64_t v393;
  uint64_t v394;
  char *v395;
  char *v396;
  uint64_t v397;
  uint64_t v398;
  char *v399;
  uint64_t v400;
  uint64_t v401;
  char *v402;
  uint64_t v403;
  uint64_t v404;
  char *v405;
  char *v406;
  uint64_t v407;
  char *v408;
  uint64_t v409;
  uint64_t v410;
  char *v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  char *v416;
  _DWORD *v417;
  char *v418;
  char *v419;
  int v420;
  uint64_t v421;
  uint64_t v422;
  _DWORD *v423;
  _DWORD *v424;
  uint64_t v425;
  uint64_t v426;
  int v427;
  int *v428;
  uint64_t v429;
  char *v430;
  char *v431;
  uint64_t v432;
  uint64_t v433;
  int *v434;
  uint64_t v435;
  uint64_t v436;
  int *v437;
  uint64_t v438;
  char *v439;
  uint64_t v440;
  uint64_t v441;
  char *v442;
  char *v443;
  uint64_t v444;
  int v445;
  _DWORD *v446;
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;
  _DWORD *v450;
  uint64_t v451;
  uint64_t v452;
  uint64_t v453;
  char *v454;
  uint64_t v455;
  char *v456;
  uint64_t v457;
  uint64_t v458;
  char *v459;
  char *v460;
  uint64_t v461;
  uint64_t v462;
  char *v463;
  char *v464;
  uint64_t v465;
  int v466;
  uint64_t v467;
  int v468;
  uint64_t v469;
  char *v470;
  uint64_t v471;
  int v472;
  uint64_t v473;
  char *v474;
  char *v475;
  uint64_t v476;
  int v477;
  uint64_t v478;
  char *v479;
  uint64_t v480;
  uint64_t v481;
  char *v482;
  char *v483;
  uint64_t v484;
  uint64_t v485;
  char *v486;
  char *v487;
  uint64_t v488;
  uint64_t v489;
  char *v490;
  char *v491;
  uint64_t v492;
  uint64_t v493;
  char *v494;
  char *v495;
  uint64_t v496;
  uint64_t v497;
  char *v498;
  char *v499;
  uint64_t v500;
  uint64_t v501;
  uint64_t v502;
  char *v503;
  uint64_t v504;
  uint64_t v505;
  int *v506;
  uint64_t v507;
  uint64_t v508;
  uint64_t v509;
  uint64_t v510;
  _DWORD *v511;
  int *v512;
  int v513;
  _DWORD *v514;
  uint64_t v515;
  char *v516;
  char *v517;
  uint64_t v518;
  void *v519;
  uint64_t v520;
  char *v521;
  uint64_t v522;
  uint64_t v523;
  char *v524;
  uint64_t v525;
  uint64_t v526;
  uint64_t v527;
  char *v528;
  uint64_t v529;
  uint64_t v530;
  char *v531;
  char *v532;
  uint64_t v533;
  uint64_t v534;
  char *v535;
  uint64_t v536;
  uint64_t v537;
  char *v538;
  uint64_t v539;
  uint64_t v540;
  char *v541;
  char *v542;
  uint64_t v543;
  char *v544;
  uint64_t v545;
  uint64_t v546;
  _DWORD *v547;
  uint64_t v548;
  uint64_t v549;
  uint64_t v550;
  uint64_t v551;
  char *v552;
  _DWORD *v553;
  char *v554;
  int v555;
  _DWORD *v556;
  uint64_t v557;
  char *v558;
  uint64_t v559;
  int v560;
  int *v561;
  uint64_t v562;
  char *v563;
  char *v564;
  uint64_t v565;
  uint64_t v566;
  int *v567;
  uint64_t v568;
  char *v569;
  char *v570;
  uint64_t v571;
  uint64_t v572;
  uint64_t v573;
  char *v574;
  uint64_t v575;
  uint64_t v576;
  char *v577;
  char *v578;
  uint64_t v579;
  uint64_t v580;
  uint64_t v581;
  uint64_t v582;
  uint64_t v583;
  uint64_t v584;
  char *v585;
  uint64_t v586;
  uint64_t v587;
  char *v588;
  char *v589;
  uint64_t v590;
  uint64_t v591;
  char *v592;
  char *v593;
  uint64_t v594;
  uint64_t v595;
  char *v596;
  char *v597;
  uint64_t v598;
  uint64_t v600;
  char *v601;
  uint64_t v602;
  uint64_t v603;
  char *v604;
  uint64_t v605;
  uint64_t v606;
  char *v607;
  char *v608;
  uint64_t v609;
  uint64_t v610;
  _DWORD *v611;
  _DWORD *v612;
  uint64_t v613;
  uint64_t v614;
  uint64_t v615;
  uint64_t v616;
  int v617;
  uint64_t v618;
  char *v619;
  uint64_t v620;
  uint64_t v621;
  char *v622;
  char *v623;
  uint64_t v624;
  uint64_t v625;
  char *v626;
  char *v627;
  uint64_t v628;
  uint64_t v629;
  _DWORD *v630;
  char *v631;
  char *v632;
  uint64_t v633;
  uint64_t v634;
  char *v635;
  char *v636;
  uint64_t v637;
  uint64_t v638;
  char *v639;
  uint64_t v640;
  uint64_t v641;
  char *v642;
  uint64_t v643;
  uint64_t v644;
  char *v645;
  char *v646;
  uint64_t v647;
  char *v648;
  uint64_t v649;
  _DWORD *v650;
  _DWORD *v651;
  uint64_t v652;
  uint64_t v653;
  uint64_t v654;
  uint64_t v655;
  int v656;
  uint64_t v657;
  char *v658;
  uint64_t v659;
  uint64_t v660;
  char *v661;
  uint64_t v662;
  uint64_t v663;
  char *v664;
  uint64_t v665;
  uint64_t v666;
  char *v667;
  char *v668;
  uint64_t v669;
  uint64_t v670;
  char *v671;
  char *v672;
  uint64_t v673;
  uint64_t v674;
  char *v675;
  uint64_t v676;
  uint64_t v677;
  char *v678;
  uint64_t v679;
  uint64_t v680;
  uint64_t v681;
  char *v682;
  char *v683;
  uint64_t v684;
  uint64_t v685;
  char *v686;
  char *v687;
  uint64_t v688;
  char *v689;
  char *v690;
  char *v691;
  char *v692;
  char *v693;
  char *v694;
  char *v695;
  char *v696;
  char *v697;
  char *v698;
  uint64_t v699;
  uint64_t v700;
  uint64_t v701;
  char *v702;
  char *v703;
  uint64_t v704;
  char *v705;
  char *v706;
  char *v707;
  char *v708;
  char *v709;
  char *v710;
  char *v711;
  uint64_t v712;
  uint64_t v713;
  uint64_t v714;
  char *v715;
  int *v716;
  uint64_t v717;
  uint64_t v718;
  char *v719;
  char *v720;
  char *v721;
  char *v722;
  char *v723;
  uint64_t v724;
  int *v725;
  uint64_t v726;
  uint64_t v727;
  int *v728;
  char *v729;
  uint64_t v730;
  char *v731;
  int *v732;
  uint64_t v733;
  char *v734;
  char *v735;
  uint64_t v736;
  uint64_t v737;
  uint64_t v738;
  uint64_t v739;
  int *v740;
  uint64_t v741;
  uint64_t v742;
  _DWORD *v743;
  int *v744;
  char *v745;
  char *v746;
  char *v747;
  char *v748;
  char *v749;
  char *v750;
  char *v751;
  _DWORD *__dst;
  _DWORD *__dsta;
  _QWORD *__dstb;
  _QWORD *__dstc;
  _BYTE *__dstl;
  int *__dstd;
  int *__dste;
  void *__dstf;
  void *__dstg;
  char *__dstm;
  _DWORD *__dsth;
  int *__dsti;
  _QWORD *__dstj;
  _QWORD *__dstk;
  int *v766;
  unsigned int (*v767)(char *, uint64_t, int *);
  _DWORD *v768;
  _DWORD *v769;
  _QWORD *v770;
  _BYTE *v771;
  char *v772;
  void *v773;
  int *v774;
  int *v775;
  void *v776;
  char *v777;
  char *v778;
  _DWORD *v779;
  char *v780;
  char *v781;
  char *v782;
  _DWORD *v783;
  int *v784;
  void *v785;
  _DWORD *__src;
  int *__srca;
  unsigned int (*__srcb)(_DWORD *, uint64_t, uint64_t);
  _BYTE *__srcc;
  int *__srcd;
  unsigned int (*__srce)(char *, uint64_t);
  char *__srcl;
  _QWORD *__srcf;
  _QWORD *__srcg;
  char *__srcm;
  char *__srcn;
  void *__srch;
  _BYTE *__srco;
  char *__srcp;
  char *__srcq;
  void *__srci;
  void *__srcj;
  char *__srcr;
  char *__srcs;
  _DWORD *__srck;
  char *__srct;
  char *__srcu;
  uint64_t v808;
  uint64_t v809;
  uint64_t v810;
  uint64_t v811;
  uint64_t v812;
  uint64_t v813;
  uint64_t v814;
  uint64_t v815;
  uint64_t v816;
  uint64_t v817;
  uint64_t v818;
  uint64_t v819;
  uint64_t v820;
  uint64_t v821;
  void *v822;
  void *v823;
  void *v824;
  void *v825;
  void *v826;
  void *v827;
  void *v828;
  void *v829;
  void *v830;
  void *v831;
  void *v832;
  void *v833;
  _DWORD *v834;
  int *v835;
  unsigned int (*v836)(_DWORD *, uint64_t, uint64_t);
  _BYTE *v837;
  char *v838;
  _DWORD *v839;
  int *v840;
  int *v841;
  char *v842;
  char *v843;
  char *v844;
  char *v845;
  void *v846;
  char *v847;
  char *v848;
  int *v849;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (_DWORD *)((char *)a1 + v7);
  v9 = (_DWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for TranscriptProtoASTFlatExpr(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (v14)
    {
      sub_240388AE4((uint64_t)v8, type metadata accessor for TranscriptProtoASTFlatExpr);
      goto LABEL_7;
    }
    v19 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
    v20 = *(_QWORD *)(v19 - 8);
    v21 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v20 + 48);
    v22 = v21(v8, 1, v19);
    v23 = v21(v9, 1, v19);
    if (v22)
    {
      if (!v23)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            v24 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            v25 = *(_QWORD *)(v24 - 8);
            if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v25 + 48))(v9, 1, v24))
            {
              v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
              memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
            }
            else
            {
              EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
              switch(EnumCaseMultiPayload)
              {
                case 9:
                  *v8 = *v9;
                  *(_OWORD *)(v8 + 2) = *(_OWORD *)(v9 + 2);
                  v350 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                  v820 = a3;
                  v842 = (char *)v8 + v350;
                  v351 = (char *)v9 + v350;
                  v352 = sub_2408E57A4();
                  v353 = v351;
                  a3 = v820;
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v352 - 8) + 32))(v842, v353, v352);
                  swift_storeEnumTagMultiPayload();
                  break;
                case 5:
                  *(_QWORD *)v8 = *(_QWORD *)v9;
                  v354 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                  v821 = a3;
                  v843 = (char *)v8 + v354;
                  v355 = (char *)v9 + v354;
                  v356 = sub_2408E57A4();
                  v357 = v355;
                  a3 = v821;
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v356 - 8) + 32))(v843, v357, v356);
                  swift_storeEnumTagMultiPayload();
                  break;
                case 4:
                  *(_QWORD *)v8 = *(_QWORD *)v9;
                  v197 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                  v813 = a3;
                  v838 = (char *)v8 + v197;
                  v198 = (char *)v9 + v197;
                  v199 = sub_2408E57A4();
                  v200 = v198;
                  a3 = v813;
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v199 - 8) + 32))(v838, v200, v199);
                  swift_storeEnumTagMultiPayload();
                  break;
                default:
                  memcpy(v8, v9, *(_QWORD *)(v25 + 64));
                  break;
              }
              (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v8, 0, 1, v24);
            }
            v358 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValue(0) + 20);
            v359 = (char *)v8 + v358;
            v360 = (char *)v9 + v358;
            v361 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v361 - 8) + 32))(v359, v360, v361);
            swift_storeEnumTagMultiPayload();
            goto LABEL_296;
          case 1u:
            v810 = a3;
            *(_BYTE *)v8 = *(_BYTE *)v9;
            v110 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
            v111 = *(int *)(v110 + 20);
            v768 = (_DWORD *)((char *)v8 + v111);
            __srcd = (int *)v110;
            v112 = (_DWORD *)((char *)v9 + v111);
            v113 = type metadata accessor for TranscriptProtoASTFlatValue(0);
            v114 = *(_QWORD *)(v113 - 8);
            v834 = v112;
            if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v114 + 48))(v112, 1, v113))
              goto LABEL_52;
            v739 = v114;
            __dstd = (int *)v113;
            v266 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            v267 = *(_QWORD *)(v266 - 8);
            v268 = v834;
            if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v267 + 48))(v834, 1, v266))
              goto LABEL_112;
            v727 = v267;
            v332 = swift_getEnumCaseMultiPayload();
            if (v332 == 9)
              goto LABEL_262;
            if (v332 == 5)
              goto LABEL_263;
            v714 = v266;
            if (v332 != 4)
              goto LABEL_265;
            goto LABEL_162;
          case 2u:
            v811 = a3;
            *(_BYTE *)v8 = *(_BYTE *)v9;
            v115 = (int *)type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
            v116 = v115[5];
            v769 = (_DWORD *)((char *)v8 + v116);
            v117 = (char *)v9 + v116;
            v118 = type metadata accessor for TranscriptProtoASTFlatValue(0);
            __dstc = *(_QWORD **)(v118 - 8);
            v835 = (int *)v118;
            __srce = (unsigned int (*)(char *, uint64_t))__dstc[6];
            if (__srce(v117, 1))
            {
              v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
              memcpy(v769, v117, *(_QWORD *)(*(_QWORD *)(v119 - 8) + 64));
              v120 = v835;
              goto LABEL_254;
            }
            v740 = v115;
            v269 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            v726 = *(_QWORD *)(v269 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v726 + 48))(v117, 1, v269))
            {
              v270 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
              v271 = v769;
              memcpy(v769, v117, *(_QWORD *)(*(_QWORD *)(v270 - 8) + 64));
              goto LABEL_253;
            }
            v701 = v269;
            v715 = v117;
            v333 = swift_getEnumCaseMultiPayload();
            switch(v333)
            {
              case 9:
                v334 = v769;
                *v769 = *(_DWORD *)v715;
                *(_OWORD *)(v769 + 2) = *(_OWORD *)(v715 + 8);
                v493 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v494 = (char *)v769 + v493;
                v495 = &v715[v493];
                v496 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v496 - 8) + 32))(v494, v495, v496);
                v339 = v701;
                goto LABEL_250;
              case 5:
                v334 = v769;
                *(_QWORD *)v769 = *(_QWORD *)v715;
                v497 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v498 = (char *)v769 + v497;
                v499 = &v715[v497];
                v500 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v500 - 8) + 32))(v498, v499, v500);
                v339 = v701;
                goto LABEL_250;
              case 4:
                v334 = v769;
                *(_QWORD *)v769 = *(_QWORD *)v715;
                v335 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v336 = (char *)v769 + v335;
                v337 = &v715[v335];
                v338 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v338 - 8) + 32))(v336, v337, v338);
                v339 = v701;
LABEL_250:
                swift_storeEnumTagMultiPayload();
                v501 = v726;
                goto LABEL_252;
            }
            v501 = v726;
            v334 = v769;
            memcpy(v769, v715, *(_QWORD *)(v726 + 64));
            v339 = v701;
LABEL_252:
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v501 + 56))(v334, 0, 1, v339);
            v271 = v334;
            v117 = v715;
LABEL_253:
            v120 = v835;
            v502 = v835[5];
            v782 = (char *)v271 + v502;
            v503 = &v117[v502];
            v504 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v504 - 8) + 32))(v782, v503, v504);
            ((void (*)(_DWORD *, _QWORD, uint64_t, int *))__dstc[7])(v271, 0, 1, v835);
            v115 = v740;
LABEL_254:
            v505 = v115[6];
            v783 = (_DWORD *)((char *)v8 + v505);
            v506 = (_DWORD *)((char *)v9 + v505);
            if (((unsigned int (*)(char *, uint64_t, int *))__srce)((char *)v9 + v505, 1, v120))
            {
              v507 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
              memcpy(v783, v506, *(_QWORD *)(*(_QWORD *)(v507 - 8) + 64));
              goto LABEL_288;
            }
            v744 = v115;
            v508 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            v509 = *(_QWORD *)(v508 - 8);
            if ((*(unsigned int (**)(int *, uint64_t, uint64_t))(v509 + 48))(v506, 1, v508))
            {
              v510 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
              v511 = v783;
              memcpy(v783, v506, *(_QWORD *)(*(_QWORD *)(v510 - 8) + 64));
              v512 = v506;
LABEL_287:
              v573 = v835[5];
              v574 = (char *)v511 + v573;
              __srct = (char *)v512 + v573;
              v575 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v575 - 8) + 32))(v574, __srct, v575);
              ((void (*)(_DWORD *, _QWORD, uint64_t, int *))__dstc[7])(v511, 0, 1, v835);
              v115 = v744;
LABEL_288:
              v576 = v115[7];
              v577 = (char *)v8 + v576;
              v578 = (char *)v9 + v576;
              v579 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v579 - 8) + 32))(v577, v578, v579);
LABEL_295:
              swift_storeEnumTagMultiPayload();
              a3 = v811;
LABEL_296:
              (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v8, 0, 1, v19);
LABEL_297:
              v591 = *(int *)(v10 + 20);
              v592 = (char *)v8 + v591;
              v593 = (char *)v9 + v591;
              v594 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v594 - 8) + 40))(v592, v593, v594);
              goto LABEL_298;
            }
            v718 = v509;
            __srcj = (void *)v508;
            v513 = swift_getEnumCaseMultiPayload();
            v732 = v506;
            switch(v513)
            {
              case 9:
                v560 = *v506;
                v561 = v506;
                v514 = v783;
                *v783 = v560;
                *(_OWORD *)(v783 + 2) = *(_OWORD *)(v561 + 2);
                v562 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v563 = (char *)v783 + v562;
                v564 = (char *)v561 + v562;
                v565 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v565 - 8) + 32))(v563, v564, v565);
                v519 = __srcj;
                break;
              case 5:
                v566 = *(_QWORD *)v506;
                v567 = v506;
                v514 = v783;
                *(_QWORD *)v783 = v566;
                v568 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v569 = (char *)v783 + v568;
                v570 = (char *)v567 + v568;
                v571 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v571 - 8) + 32))(v569, v570, v571);
                v519 = __srcj;
                break;
              case 4:
                v514 = v783;
                *(_QWORD *)v783 = *(_QWORD *)v732;
                v515 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v516 = (char *)v783 + v515;
                v517 = (char *)v732 + v515;
                v518 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v518 - 8) + 32))(v516, v517, v518);
                v519 = __srcj;
                break;
              default:
                v572 = v509;
                v514 = v783;
                memcpy(v783, v732, *(_QWORD *)(v509 + 64));
                v519 = __srcj;
                goto LABEL_286;
            }
            swift_storeEnumTagMultiPayload();
            v572 = v718;
LABEL_286:
            (*(void (**)(_DWORD *, _QWORD, uint64_t, void *))(v572 + 56))(v514, 0, 1, v519);
            v511 = v514;
            v512 = v732;
            goto LABEL_287;
          case 3u:
            v810 = a3;
            *(_OWORD *)v8 = *(_OWORD *)v9;
            v121 = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
            v122 = *(int *)(v121 + 20);
            v768 = (_DWORD *)((char *)v8 + v122);
            __srcd = (int *)v121;
            v123 = (_DWORD *)((char *)v9 + v122);
            v124 = type metadata accessor for TranscriptProtoASTFlatValue(0);
            v125 = *(_QWORD *)(v124 - 8);
            v834 = v123;
            if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v125 + 48))(v123, 1, v124))
            {
LABEL_52:
              v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
              memcpy(v768, v834, *(_QWORD *)(*(_QWORD *)(v126 - 8) + 64));
              goto LABEL_268;
            }
            v739 = v125;
            __dstd = (int *)v124;
            v266 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            v267 = *(_QWORD *)(v266 - 8);
            v268 = v834;
            if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v267 + 48))(v834, 1, v266))
            {
LABEL_112:
              v272 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
              v273 = v768;
              memcpy(v768, v834, *(_QWORD *)(*(_QWORD *)(v272 - 8) + 64));
              v274 = __dstd;
              goto LABEL_267;
            }
            v727 = v267;
            v340 = swift_getEnumCaseMultiPayload();
            if (v340 == 9)
            {
LABEL_262:
              v345 = v266;
              v273 = v768;
              *v768 = *v834;
              *(_OWORD *)(v768 + 2) = *(_OWORD *)(v834 + 2);
              v520 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              v719 = (char *)v768 + v520;
              v521 = (char *)v834 + v520;
              v522 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v522 - 8) + 32))(v719, v521, v522);
            }
            else if (v340 == 5)
            {
LABEL_263:
              v345 = v266;
              v273 = v768;
              *(_QWORD *)v768 = *(_QWORD *)v834;
              v523 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              v720 = (char *)v768 + v523;
              v524 = (char *)v834 + v523;
              v525 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v525 - 8) + 32))(v720, v524, v525);
            }
            else
            {
              v714 = v266;
              if (v340 != 4)
              {
LABEL_265:
                v526 = v267;
                v273 = v768;
                memcpy(v768, v834, *(_QWORD *)(v267 + 64));
                v345 = v714;
LABEL_266:
                (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v526 + 56))(v273, 0, 1, v345);
                v274 = __dstd;
                v268 = v834;
LABEL_267:
                v527 = v274[5];
                v845 = (char *)v273 + v527;
                v528 = (char *)v268 + v527;
                v529 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v529 - 8) + 32))(v845, v528, v529);
                (*(void (**)(_DWORD *, _QWORD, uint64_t, int *))(v739 + 56))(v273, 0, 1, __dstd);
LABEL_268:
                a3 = v810;
                v530 = __srcd[6];
                v531 = (char *)v8 + v530;
                v532 = (char *)v9 + v530;
                v533 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v533 - 8) + 32))(v531, v532, v533);
                swift_storeEnumTagMultiPayload();
                goto LABEL_296;
              }
LABEL_162:
              v273 = v768;
              *(_QWORD *)v768 = *(_QWORD *)v834;
              v341 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              v342 = (char *)v768 + v341;
              v343 = (char *)v834 + v341;
              v344 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v344 - 8) + 32))(v342, v343, v344);
              v345 = v714;
            }
            swift_storeEnumTagMultiPayload();
            v526 = v727;
            goto LABEL_266;
          case 4u:
            v127 = type metadata accessor for TranscriptProtoASTFlatValue(0);
            v770 = *(_QWORD **)(v127 - 8);
            v836 = (unsigned int (*)(_DWORD *, uint64_t, uint64_t))v770[6];
            v811 = a3;
            if (v836(v9, 1, v127))
            {
              v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
              memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v128 - 8) + 64));
            }
            else
            {
              __dste = (int *)v127;
              v275 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
              v276 = *(_QWORD *)(v275 - 8);
              if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v276 + 48))(v9, 1, v275))
              {
                v277 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
                memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v277 - 8) + 64));
              }
              else
              {
                v346 = swift_getEnumCaseMultiPayload();
                switch(v346)
                {
                  case 9:
                    *v8 = *v9;
                    *(_OWORD *)(v8 + 2) = *(_OWORD *)(v9 + 2);
                    v534 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                    __srcr = (char *)v8 + v534;
                    v535 = (char *)v9 + v534;
                    v536 = sub_2408E57A4();
                    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v536 - 8) + 32))(__srcr, v535, v536);
                    swift_storeEnumTagMultiPayload();
                    break;
                  case 5:
                    *(_QWORD *)v8 = *(_QWORD *)v9;
                    v537 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                    __srcs = (char *)v8 + v537;
                    v538 = (char *)v9 + v537;
                    v539 = sub_2408E57A4();
                    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v539 - 8) + 32))(__srcs, v538, v539);
                    swift_storeEnumTagMultiPayload();
                    break;
                  case 4:
                    *(_QWORD *)v8 = *(_QWORD *)v9;
                    v347 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                    __srcp = (char *)v8 + v347;
                    v348 = (char *)v9 + v347;
                    v349 = sub_2408E57A4();
                    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v349 - 8) + 32))(__srcp, v348, v349);
                    swift_storeEnumTagMultiPayload();
                    break;
                  default:
                    memcpy(v8, v9, *(_QWORD *)(v276 + 64));
                    break;
                }
                (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v276 + 56))(v8, 0, 1, v275);
              }
              v540 = __dste[5];
              v541 = (char *)v8 + v540;
              v542 = (char *)v9 + v540;
              v543 = sub_2408E57A4();
              v544 = v542;
              v127 = (uint64_t)__dste;
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v543 - 8) + 32))(v541, v544, v543);
              ((void (*)(_DWORD *, _QWORD, uint64_t, int *))v770[7])(v8, 0, 1, __dste);
            }
            v545 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
            v546 = *(int *)(v545 + 20);
            __srck = (_DWORD *)((char *)v8 + v546);
            v547 = (_DWORD *)((char *)v9 + v546);
            if (v836((_DWORD *)((char *)v9 + v546), 1, v127))
            {
              v548 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
              memcpy(__srck, v547, *(_QWORD *)(*(_QWORD *)(v548 - 8) + 64));
            }
            else
            {
              v846 = (void *)v545;
              __dsti = (int *)v127;
              v549 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
              v550 = *(_QWORD *)(v549 - 8);
              if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v550 + 48))(v547, 1, v549))
              {
                v551 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
                v552 = (char *)v547;
                v553 = __srck;
                memcpy(__srck, v552, *(_QWORD *)(*(_QWORD *)(v551 - 8) + 64));
                v554 = v552;
              }
              else
              {
                v733 = v550;
                v555 = swift_getEnumCaseMultiPayload();
                v745 = (char *)v547;
                if (v555 == 9)
                {
                  v556 = __srck;
                  *__srck = *v547;
                  *(_OWORD *)(__srck + 2) = *(_OWORD *)(v547 + 2);
                  v580 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                  v710 = (char *)v547 + v580;
                  v722 = (char *)__srck + v580;
                  v581 = sub_2408E57A4();
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v581 - 8) + 32))(v722, v710, v581);
                  swift_storeEnumTagMultiPayload();
                }
                else if (v555 == 5)
                {
                  v556 = __srck;
                  *(_QWORD *)__srck = *(_QWORD *)v547;
                  v582 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                  v711 = (char *)v547 + v582;
                  v723 = (char *)__srck + v582;
                  v583 = sub_2408E57A4();
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v583 - 8) + 32))(v723, v711, v583);
                  swift_storeEnumTagMultiPayload();
                }
                else
                {
                  v556 = __srck;
                  if (v555 == 4)
                  {
                    *(_QWORD *)__srck = *(_QWORD *)v547;
                    v557 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                    v721 = (char *)__srck + v557;
                    v558 = (char *)v547 + v557;
                    v559 = sub_2408E57A4();
                    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v559 - 8) + 32))(v721, v558, v559);
                    swift_storeEnumTagMultiPayload();
                  }
                  else
                  {
                    memcpy(__srck, v547, *(_QWORD *)(v733 + 64));
                  }
                }
                (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v733 + 56))(v556, 0, 1, v549);
                v553 = v556;
                v554 = v745;
              }
              v584 = __dsti[5];
              v585 = (char *)v553 + v584;
              __srcu = &v554[v584];
              v586 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v586 - 8) + 32))(v585, __srcu, v586);
              ((void (*)(_DWORD *, _QWORD, uint64_t, int *))v770[7])(v553, 0, 1, __dsti);
              v545 = (uint64_t)v846;
            }
            v587 = *(int *)(v545 + 24);
            v588 = (char *)v8 + v587;
            v589 = (char *)v9 + v587;
            v590 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v590 - 8) + 32))(v588, v589, v590);
            goto LABEL_295;
          case 5u:
            *(_OWORD *)v8 = *(_OWORD *)v9;
            *((_QWORD *)v8 + 2) = *((_QWORD *)v9 + 2);
            v129 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0) + 24);
            v130 = (char *)v8 + v129;
            v131 = (char *)v9 + v129;
            v132 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v132 - 8) + 32))(v130, v131, v132);
            swift_storeEnumTagMultiPayload();
            goto LABEL_296;
          case 6u:
            *(_QWORD *)v8 = *(_QWORD *)v9;
            v133 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0) + 20);
            v134 = (char *)v8 + v133;
            v135 = (char *)v9 + v133;
            v136 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v136 - 8) + 32))(v134, v135, v136);
            swift_storeEnumTagMultiPayload();
            goto LABEL_296;
          case 7u:
            v810 = a3;
            *(_OWORD *)v8 = *(_OWORD *)v9;
            __srcd = (int *)type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
            v137 = __srcd[5];
            v837 = (char *)v8 + v137;
            v138 = (char *)v9 + v137;
            v139 = type metadata accessor for TranscriptProtoASTPickType(0);
            v140 = *(_QWORD *)(v139 - 8);
            if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v140 + 48))(v138, 1, v139))
            {
              v141 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D08);
              memcpy(v837, v138, *(_QWORD *)(*(_QWORD *)(v141 - 8) + 64));
            }
            else
            {
              *(_QWORD *)v837 = *(_QWORD *)v138;
              v837[8] = v138[8];
              v278 = *(int *)(v139 + 20);
              v771 = &v837[v278];
              v279 = &v138[v278];
              v280 = sub_2408E57A4();
              (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v280 - 8) + 32))(v771, v279, v280);
              (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v140 + 56))(v837, 0, 1, v139);
            }
            goto LABEL_268;
          case 8u:
            *(_OWORD *)v8 = *(_OWORD *)v9;
            v142 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0) + 20);
            v143 = (char *)v8 + v142;
            v144 = (char *)v9 + v142;
            v145 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v145 - 8) + 32))(v143, v144, v145);
            swift_storeEnumTagMultiPayload();
            goto LABEL_296;
          case 9u:
            *(_OWORD *)v8 = *(_OWORD *)v9;
            *((_WORD *)v8 + 8) = *((_WORD *)v9 + 8);
            v146 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0) + 28);
            v147 = (char *)v8 + v146;
            v148 = (char *)v9 + v146;
            v149 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v149 - 8) + 32))(v147, v148, v149);
            swift_storeEnumTagMultiPayload();
            goto LABEL_296;
          case 0xAu:
            *(_OWORD *)v8 = *(_OWORD *)v9;
            v150 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0) + 20);
            v151 = (char *)v8 + v150;
            v152 = (char *)v9 + v150;
            v153 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v153 - 8) + 32))(v151, v152, v153);
            swift_storeEnumTagMultiPayload();
            goto LABEL_296;
          case 0xBu:
            *(_OWORD *)v8 = *(_OWORD *)v9;
            v154 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0) + 20);
            v155 = (char *)v8 + v154;
            v156 = (char *)v9 + v154;
            v157 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v157 - 8) + 32))(v155, v156, v157);
            swift_storeEnumTagMultiPayload();
            goto LABEL_296;
          case 0xCu:
            *(_QWORD *)v8 = *(_QWORD *)v9;
            v158 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0) + 20);
            v159 = (char *)v8 + v158;
            v160 = (char *)v9 + v158;
            v161 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v161 - 8) + 32))(v159, v160, v161);
            swift_storeEnumTagMultiPayload();
            goto LABEL_296;
          case 0xDu:
            *(_OWORD *)v8 = *(_OWORD *)v9;
            v162 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0) + 20);
            v163 = (char *)v8 + v162;
            v164 = (char *)v9 + v162;
            v165 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v165 - 8) + 32))(v163, v164, v165);
            swift_storeEnumTagMultiPayload();
            goto LABEL_296;
          case 0xEu:
            *(_OWORD *)v8 = *(_OWORD *)v9;
            v166 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0) + 20);
            v167 = (char *)v8 + v166;
            v168 = (char *)v9 + v166;
            v169 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v169 - 8) + 32))(v167, v168, v169);
            swift_storeEnumTagMultiPayload();
            goto LABEL_296;
          case 0xFu:
          case 0x11u:
            v170 = sub_2408E57A4();
            (*(void (**)(_DWORD *, _DWORD *, uint64_t))(*(_QWORD *)(v170 - 8) + 32))(v8, v9, v170);
            swift_storeEnumTagMultiPayload();
            goto LABEL_296;
          case 0x10u:
            *(_QWORD *)v8 = *(_QWORD *)v9;
            v171 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0) + 20);
            v172 = (char *)v8 + v171;
            v173 = (char *)v9 + v171;
            v174 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v174 - 8) + 32))(v172, v173, v174);
            swift_storeEnumTagMultiPayload();
            goto LABEL_296;
          default:
            memcpy(v8, v9, *(_QWORD *)(v20 + 64));
            goto LABEL_296;
        }
      }
    }
    else
    {
      if (!v23)
      {
        if (a1 != a2)
        {
          sub_240388AE4((uint64_t)v8, type metadata accessor for TranscriptProtoAstflatExprEnum);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              v31 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
              v32 = *(_QWORD *)(v31 - 8);
              if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v32 + 48))(v9, 1, v31))
              {
                v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
                memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
              }
              else
              {
                v309 = swift_getEnumCaseMultiPayload();
                v819 = a3;
                switch(v309)
                {
                  case 9:
                    *v8 = *v9;
                    *(_OWORD *)(v8 + 2) = *(_OWORD *)(v9 + 2);
                    v481 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                    v482 = (char *)v8 + v481;
                    v483 = (char *)v9 + v481;
                    v484 = sub_2408E57A4();
                    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v484 - 8) + 32))(v482, v483, v484);
                    swift_storeEnumTagMultiPayload();
                    break;
                  case 5:
                    *(_QWORD *)v8 = *(_QWORD *)v9;
                    v485 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                    v486 = (char *)v8 + v485;
                    v487 = (char *)v9 + v485;
                    v488 = sub_2408E57A4();
                    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v488 - 8) + 32))(v486, v487, v488);
                    swift_storeEnumTagMultiPayload();
                    break;
                  case 4:
                    *(_QWORD *)v8 = *(_QWORD *)v9;
                    v310 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                    v311 = (char *)v8 + v310;
                    v312 = (char *)v9 + v310;
                    v313 = sub_2408E57A4();
                    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v313 - 8) + 32))(v311, v312, v313);
                    swift_storeEnumTagMultiPayload();
                    break;
                  default:
                    memcpy(v8, v9, *(_QWORD *)(v32 + 64));
                    break;
                }
                (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v8, 0, 1, v31);
                a3 = v819;
              }
              v489 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValue(0) + 20);
              v490 = (char *)v8 + v489;
              v491 = (char *)v9 + v489;
              v492 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v492 - 8) + 32))(v490, v491, v492);
              swift_storeEnumTagMultiPayload();
              goto LABEL_297;
            case 1u:
              v814 = a3;
              *(_BYTE *)v8 = *(_BYTE *)v9;
              v201 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
              v202 = *(int *)(v201 + 20);
              v839 = (_DWORD *)((char *)v8 + v202);
              v203 = (_DWORD *)((char *)v9 + v202);
              v204 = type metadata accessor for TranscriptProtoASTFlatValue(0);
              v205 = *(unsigned int (***)(_DWORD *, uint64_t, uint64_t))(v204 - 8);
              if (v205[6](v203, 1, v204))
                goto LABEL_91;
              v773 = v205;
              __srch = (void *)v201;
              v314 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
              __dstf = *(void **)(v314 - 8);
              if ((*((unsigned int (**)(_DWORD *, uint64_t, uint64_t))__dstf + 6))(v203, 1, v314))
                goto LABEL_146;
              v730 = v314;
              v743 = v203;
              v466 = swift_getEnumCaseMultiPayload();
              if (v466 == 9)
                goto LABEL_314;
              if (v466 == 5)
                goto LABEL_315;
              v319 = v839;
              if (v466 == 4)
                goto LABEL_235;
              goto LABEL_316;
            case 2u:
              v815 = a3;
              *(_BYTE *)v8 = *(_BYTE *)v9;
              v206 = (int *)type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
              v207 = v206[5];
              v208 = (_DWORD *)((char *)v8 + v207);
              v209 = (_DWORD *)((char *)v9 + v207);
              v210 = type metadata accessor for TranscriptProtoASTFlatValue(0);
              __srcf = *(_QWORD **)(v210 - 8);
              v211 = (unsigned int (*)(_QWORD, _QWORD))__srcf[6];
              v840 = (int *)v210;
              if (v211(v209, 1))
              {
                v212 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
                memcpy(v208, v209, *(_QWORD *)(*(_QWORD *)(v212 - 8) + 64));
              }
              else
              {
                v774 = v206;
                v315 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
                v741 = *(_QWORD *)(v315 - 8);
                __dstg = v211;
                if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v741 + 48))(v209, 1, v315))
                {
                  v316 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
                  memcpy(v208, v209, *(_QWORD *)(*(_QWORD *)(v316 - 8) + 64));
                }
                else
                {
                  v467 = v315;
                  v468 = swift_getEnumCaseMultiPayload();
                  switch(v468)
                  {
                    case 9:
                      *v208 = *v209;
                      *(_OWORD *)(v208 + 2) = *(_OWORD *)(v209 + 2);
                      v600 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                      v601 = (char *)v208 + v600;
                      v734 = (char *)v209 + v600;
                      v602 = sub_2408E57A4();
                      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v602 - 8) + 32))(v601, v734, v602);
                      swift_storeEnumTagMultiPayload();
                      break;
                    case 5:
                      *(_QWORD *)v208 = *(_QWORD *)v209;
                      v603 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                      v604 = (char *)v208 + v603;
                      v735 = (char *)v209 + v603;
                      v605 = sub_2408E57A4();
                      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v605 - 8) + 32))(v604, v735, v605);
                      swift_storeEnumTagMultiPayload();
                      break;
                    case 4:
                      *(_QWORD *)v208 = *(_QWORD *)v209;
                      v469 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                      v470 = (char *)v208 + v469;
                      v731 = (char *)v209 + v469;
                      v471 = sub_2408E57A4();
                      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v471 - 8) + 32))(v470, v731, v471);
                      swift_storeEnumTagMultiPayload();
                      break;
                    default:
                      memcpy(v208, v209, *(_QWORD *)(v741 + 64));
                      break;
                  }
                  (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v741 + 56))(v208, 0, 1, v467);
                }
                v606 = v840[5];
                v607 = (char *)v208 + v606;
                v608 = (char *)v209 + v606;
                v609 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v609 - 8) + 32))(v607, v608, v609);
                ((void (*)(_DWORD *, _QWORD, uint64_t, int *))__srcf[7])(v208, 0, 1, v840);
                v211 = (unsigned int (*)(_QWORD, _QWORD))__dstg;
                v206 = v774;
              }
              v610 = v206[6];
              v611 = (_DWORD *)((char *)v8 + v610);
              v612 = (_DWORD *)((char *)v9 + v610);
              if (((unsigned int (*)(char *, uint64_t, int *))v211)((char *)v9 + v610, 1, v840))
              {
                v613 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
                memcpy(v611, v612, *(_QWORD *)(*(_QWORD *)(v613 - 8) + 64));
              }
              else
              {
                v614 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
                __dstj = *(_QWORD **)(v614 - 8);
                v784 = v206;
                if (((unsigned int (*)(_DWORD *, uint64_t, uint64_t))__dstj[6])(v612, 1, v614))
                {
                  v615 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
                  memcpy(v611, v612, *(_QWORD *)(*(_QWORD *)(v615 - 8) + 64));
                }
                else
                {
                  v616 = v614;
                  v617 = swift_getEnumCaseMultiPayload();
                  switch(v617)
                  {
                    case 9:
                      *v611 = *v612;
                      *(_OWORD *)(v611 + 2) = *(_OWORD *)(v612 + 2);
                      v660 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                      v661 = (char *)v611 + v660;
                      v748 = (char *)v612 + v660;
                      v662 = sub_2408E57A4();
                      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v662 - 8) + 32))(v661, v748, v662);
                      swift_storeEnumTagMultiPayload();
                      break;
                    case 5:
                      *(_QWORD *)v611 = *(_QWORD *)v612;
                      v663 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                      v664 = (char *)v611 + v663;
                      v749 = (char *)v612 + v663;
                      v665 = sub_2408E57A4();
                      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v665 - 8) + 32))(v664, v749, v665);
                      swift_storeEnumTagMultiPayload();
                      break;
                    case 4:
                      *(_QWORD *)v611 = *(_QWORD *)v612;
                      v618 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                      v619 = (char *)v611 + v618;
                      v746 = (char *)v612 + v618;
                      v620 = sub_2408E57A4();
                      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v620 - 8) + 32))(v619, v746, v620);
                      swift_storeEnumTagMultiPayload();
                      break;
                    default:
                      memcpy(v611, v612, __dstj[8]);
                      break;
                  }
                  ((void (*)(_DWORD *, _QWORD, uint64_t, uint64_t))__dstj[7])(v611, 0, 1, v616);
                }
                v666 = v840[5];
                v667 = (char *)v611 + v666;
                v668 = (char *)v612 + v666;
                v669 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v669 - 8) + 32))(v667, v668, v669);
                ((void (*)(_DWORD *, _QWORD, uint64_t, int *))__srcf[7])(v611, 0, 1, v840);
                v206 = v784;
              }
              v670 = v206[7];
              v671 = (char *)v8 + v670;
              v672 = (char *)v9 + v670;
              v673 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v673 - 8) + 32))(v671, v672, v673);
              goto LABEL_345;
            case 3u:
              v814 = a3;
              *(_OWORD *)v8 = *(_OWORD *)v9;
              v201 = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
              v213 = *(int *)(v201 + 20);
              v839 = (_DWORD *)((char *)v8 + v213);
              v203 = (_DWORD *)((char *)v9 + v213);
              v204 = type metadata accessor for TranscriptProtoASTFlatValue(0);
              v214 = *(unsigned int (***)(_DWORD *, uint64_t, uint64_t))(v204 - 8);
              if (v214[6](v203, 1, v204))
              {
LABEL_91:
                v215 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
                memcpy(v839, v203, *(_QWORD *)(*(_QWORD *)(v215 - 8) + 64));
                a3 = v814;
              }
              else
              {
                v773 = v214;
                __srch = (void *)v201;
                v317 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
                __dstf = *(void **)(v317 - 8);
                if ((*((unsigned int (**)(_DWORD *, uint64_t, uint64_t))__dstf + 6))(v203, 1, v317))
                {
LABEL_146:
                  v318 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
                  v319 = v839;
                  memcpy(v839, v203, *(_QWORD *)(*(_QWORD *)(v318 - 8) + 64));
                  v320 = v203;
                  v321 = v204;
                }
                else
                {
                  v730 = v317;
                  v743 = v203;
                  v472 = swift_getEnumCaseMultiPayload();
                  if (v472 == 9)
                  {
LABEL_314:
                    v319 = v839;
                    *v839 = *v203;
                    *(_OWORD *)(v839 + 2) = *(_OWORD *)(v203 + 2);
                    v621 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                    v622 = (char *)v839 + v621;
                    v623 = (char *)v203 + v621;
                    v624 = sub_2408E57A4();
                    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v624 - 8) + 32))(v622, v623, v624);
                    swift_storeEnumTagMultiPayload();
                  }
                  else if (v472 == 5)
                  {
LABEL_315:
                    v319 = v839;
                    *(_QWORD *)v839 = *(_QWORD *)v203;
                    v625 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                    v626 = (char *)v839 + v625;
                    v627 = (char *)v203 + v625;
                    v628 = sub_2408E57A4();
                    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v628 - 8) + 32))(v626, v627, v628);
                    swift_storeEnumTagMultiPayload();
                  }
                  else
                  {
                    v319 = v839;
                    if (v472 == 4)
                    {
LABEL_235:
                      *(_QWORD *)v839 = *(_QWORD *)v203;
                      v473 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                      v474 = (char *)v839 + v473;
                      v475 = (char *)v203 + v473;
                      v476 = sub_2408E57A4();
                      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v476 - 8) + 32))(v474, v475, v476);
                      swift_storeEnumTagMultiPayload();
                    }
                    else
                    {
LABEL_316:
                      memcpy(v839, v203, *((_QWORD *)__dstf + 8));
                    }
                  }
                  (*((void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))__dstf + 7))(v319, 0, 1, v730);
                  v321 = v204;
                  v320 = v743;
                }
                v629 = *(int *)(v321 + 20);
                v630 = v319;
                v631 = (char *)v319 + v629;
                v632 = (char *)v320 + v629;
                v633 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v633 - 8) + 32))(v631, v632, v633);
                (*((void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))v773 + 7))(v630, 0, 1, v321);
                v201 = (uint64_t)__srch;
                a3 = v814;
              }
              v634 = *(int *)(v201 + 24);
              v635 = (char *)v8 + v634;
              v636 = (char *)v9 + v634;
              v637 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v637 - 8) + 32))(v635, v636, v637);
              swift_storeEnumTagMultiPayload();
              break;
            case 4u:
              v216 = type metadata accessor for TranscriptProtoASTFlatValue(0);
              __srcg = *(_QWORD **)(v216 - 8);
              v217 = (unsigned int (*)(_DWORD *, uint64_t, uint64_t))__srcg[6];
              v815 = a3;
              if (v217(v9, 1, v216))
              {
                v218 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
                memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v218 - 8) + 64));
              }
              else
              {
                v775 = (int *)v216;
                v322 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
                v323 = *(_QWORD *)(v322 - 8);
                if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v323 + 48))(v9, 1, v322))
                {
                  v324 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
                  memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v324 - 8) + 64));
                }
                else
                {
                  v477 = swift_getEnumCaseMultiPayload();
                  switch(v477)
                  {
                    case 9:
                      *v8 = *v9;
                      *(_OWORD *)(v8 + 2) = *(_OWORD *)(v9 + 2);
                      v638 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                      v847 = (char *)v8 + v638;
                      v639 = (char *)v9 + v638;
                      v640 = sub_2408E57A4();
                      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v640 - 8) + 32))(v847, v639, v640);
                      swift_storeEnumTagMultiPayload();
                      break;
                    case 5:
                      *(_QWORD *)v8 = *(_QWORD *)v9;
                      v641 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                      v848 = (char *)v8 + v641;
                      v642 = (char *)v9 + v641;
                      v643 = sub_2408E57A4();
                      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v643 - 8) + 32))(v848, v642, v643);
                      swift_storeEnumTagMultiPayload();
                      break;
                    case 4:
                      *(_QWORD *)v8 = *(_QWORD *)v9;
                      v478 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                      v844 = (char *)v8 + v478;
                      v479 = (char *)v9 + v478;
                      v480 = sub_2408E57A4();
                      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v480 - 8) + 32))(v844, v479, v480);
                      swift_storeEnumTagMultiPayload();
                      break;
                    default:
                      memcpy(v8, v9, *(_QWORD *)(v323 + 64));
                      break;
                  }
                  (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v323 + 56))(v8, 0, 1, v322);
                }
                v644 = v775[5];
                v645 = (char *)v8 + v644;
                v646 = (char *)v9 + v644;
                v647 = sub_2408E57A4();
                v648 = v646;
                v216 = (uint64_t)v775;
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v647 - 8) + 32))(v645, v648, v647);
                ((void (*)(_DWORD *, _QWORD, uint64_t, int *))__srcg[7])(v8, 0, 1, v775);
              }
              v849 = (int *)type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
              v649 = v849[5];
              v650 = (_DWORD *)((char *)v8 + v649);
              v651 = (_DWORD *)((char *)v9 + v649);
              if (v217((_DWORD *)((char *)v9 + v649), 1, v216))
              {
                v652 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
                memcpy(v650, v651, *(_QWORD *)(*(_QWORD *)(v652 - 8) + 64));
              }
              else
              {
                v653 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
                __dstk = *(_QWORD **)(v653 - 8);
                if (((unsigned int (*)(_DWORD *, uint64_t, uint64_t))__dstk[6])(v651, 1, v653))
                {
                  v654 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
                  memcpy(v650, v651, *(_QWORD *)(*(_QWORD *)(v654 - 8) + 64));
                }
                else
                {
                  v785 = (void *)v216;
                  v655 = v653;
                  v656 = swift_getEnumCaseMultiPayload();
                  switch(v656)
                  {
                    case 9:
                      *v650 = *v651;
                      *(_OWORD *)(v650 + 2) = *(_OWORD *)(v651 + 2);
                      v674 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                      v675 = (char *)v650 + v674;
                      v750 = (char *)v651 + v674;
                      v676 = sub_2408E57A4();
                      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v676 - 8) + 32))(v675, v750, v676);
                      swift_storeEnumTagMultiPayload();
                      break;
                    case 5:
                      *(_QWORD *)v650 = *(_QWORD *)v651;
                      v677 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                      v678 = (char *)v650 + v677;
                      v751 = (char *)v651 + v677;
                      v679 = sub_2408E57A4();
                      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v679 - 8) + 32))(v678, v751, v679);
                      swift_storeEnumTagMultiPayload();
                      break;
                    case 4:
                      *(_QWORD *)v650 = *(_QWORD *)v651;
                      v657 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                      v658 = (char *)v650 + v657;
                      v747 = (char *)v651 + v657;
                      v659 = sub_2408E57A4();
                      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v659 - 8) + 32))(v658, v747, v659);
                      swift_storeEnumTagMultiPayload();
                      break;
                    default:
                      memcpy(v650, v651, __dstk[8]);
                      break;
                  }
                  ((void (*)(_DWORD *, _QWORD, uint64_t, uint64_t))__dstk[7])(v650, 0, 1, v655);
                  v216 = (uint64_t)v785;
                }
                v680 = *(int *)(v216 + 20);
                v681 = v216;
                v682 = (char *)v650 + v680;
                v683 = (char *)v651 + v680;
                v684 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v684 - 8) + 32))(v682, v683, v684);
                ((void (*)(_DWORD *, _QWORD, uint64_t, uint64_t))__srcg[7])(v650, 0, 1, v681);
              }
              v685 = v849[6];
              v686 = (char *)v8 + v685;
              v687 = (char *)v9 + v685;
              v688 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v688 - 8) + 32))(v686, v687, v688);
LABEL_345:
              swift_storeEnumTagMultiPayload();
              a3 = v815;
              goto LABEL_297;
            case 5u:
              *(_OWORD *)v8 = *(_OWORD *)v9;
              *((_QWORD *)v8 + 2) = *((_QWORD *)v9 + 2);
              v219 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0) + 24);
              v220 = (char *)v8 + v219;
              v221 = (char *)v9 + v219;
              v222 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v222 - 8) + 32))(v220, v221, v222);
              swift_storeEnumTagMultiPayload();
              goto LABEL_297;
            case 6u:
              *(_QWORD *)v8 = *(_QWORD *)v9;
              v223 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0) + 20);
              v224 = (char *)v8 + v223;
              v225 = (char *)v9 + v223;
              v226 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v226 - 8) + 32))(v224, v225, v226);
              swift_storeEnumTagMultiPayload();
              goto LABEL_297;
            case 7u:
              v816 = a3;
              *(_OWORD *)v8 = *(_OWORD *)v9;
              v841 = (int *)type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
              v227 = v841[5];
              v228 = (char *)v8 + v227;
              v229 = (char *)v9 + v227;
              v230 = type metadata accessor for TranscriptProtoASTPickType(0);
              v231 = *(_QWORD *)(v230 - 8);
              if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v231 + 48))(v229, 1, v230))
              {
                v232 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D08);
                memcpy(v228, v229, *(_QWORD *)(*(_QWORD *)(v232 - 8) + 64));
              }
              else
              {
                *(_QWORD *)v228 = *(_QWORD *)v229;
                v228[8] = v229[8];
                v325 = *(int *)(v230 + 20);
                __srco = &v228[v325];
                v326 = &v229[v325];
                v327 = sub_2408E57A4();
                (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v327 - 8) + 32))(__srco, v326, v327);
                (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v231 + 56))(v228, 0, 1, v230);
              }
              a3 = v816;
              v328 = v841[6];
              v329 = (char *)v8 + v328;
              v330 = (char *)v9 + v328;
              v331 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v331 - 8) + 32))(v329, v330, v331);
              swift_storeEnumTagMultiPayload();
              goto LABEL_297;
            case 8u:
              *(_OWORD *)v8 = *(_OWORD *)v9;
              v233 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0) + 20);
              v234 = (char *)v8 + v233;
              v235 = (char *)v9 + v233;
              v236 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v236 - 8) + 32))(v234, v235, v236);
              swift_storeEnumTagMultiPayload();
              goto LABEL_297;
            case 9u:
              *(_OWORD *)v8 = *(_OWORD *)v9;
              *((_WORD *)v8 + 8) = *((_WORD *)v9 + 8);
              v237 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0) + 28);
              v238 = (char *)v8 + v237;
              v239 = (char *)v9 + v237;
              v240 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v240 - 8) + 32))(v238, v239, v240);
              swift_storeEnumTagMultiPayload();
              goto LABEL_297;
            case 0xAu:
              *(_OWORD *)v8 = *(_OWORD *)v9;
              v241 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0) + 20);
              v242 = (char *)v8 + v241;
              v243 = (char *)v9 + v241;
              v244 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v244 - 8) + 32))(v242, v243, v244);
              swift_storeEnumTagMultiPayload();
              goto LABEL_297;
            case 0xBu:
              *(_OWORD *)v8 = *(_OWORD *)v9;
              v245 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0) + 20);
              v246 = (char *)v8 + v245;
              v247 = (char *)v9 + v245;
              v248 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v248 - 8) + 32))(v246, v247, v248);
              swift_storeEnumTagMultiPayload();
              goto LABEL_297;
            case 0xCu:
              *(_QWORD *)v8 = *(_QWORD *)v9;
              v249 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0) + 20);
              v250 = (char *)v8 + v249;
              v251 = (char *)v9 + v249;
              v252 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v252 - 8) + 32))(v250, v251, v252);
              swift_storeEnumTagMultiPayload();
              goto LABEL_297;
            case 0xDu:
              *(_OWORD *)v8 = *(_OWORD *)v9;
              v253 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0) + 20);
              v254 = (char *)v8 + v253;
              v255 = (char *)v9 + v253;
              v256 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v256 - 8) + 32))(v254, v255, v256);
              swift_storeEnumTagMultiPayload();
              goto LABEL_297;
            case 0xEu:
              *(_OWORD *)v8 = *(_OWORD *)v9;
              v257 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0) + 20);
              v258 = (char *)v8 + v257;
              v259 = (char *)v9 + v257;
              v260 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v260 - 8) + 32))(v258, v259, v260);
              swift_storeEnumTagMultiPayload();
              goto LABEL_297;
            case 0xFu:
            case 0x11u:
              v261 = sub_2408E57A4();
              (*(void (**)(_DWORD *, _DWORD *, uint64_t))(*(_QWORD *)(v261 - 8) + 32))(v8, v9, v261);
              swift_storeEnumTagMultiPayload();
              goto LABEL_297;
            case 0x10u:
              *(_QWORD *)v8 = *(_QWORD *)v9;
              v262 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0) + 20);
              v263 = (char *)v8 + v262;
              v264 = (char *)v9 + v262;
              v265 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v265 - 8) + 32))(v263, v264, v265);
              swift_storeEnumTagMultiPayload();
              goto LABEL_297;
            default:
              v30 = *(_QWORD *)(v20 + 64);
              goto LABEL_19;
          }
        }
        goto LABEL_297;
      }
      sub_240388AE4((uint64_t)v8, type metadata accessor for TranscriptProtoAstflatExprEnum);
    }
    v30 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC20) - 8) + 64);
LABEL_19:
    memcpy(v8, v9, v30);
    goto LABEL_297;
  }
  if (!v14)
  {
    v15 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
    v16 = *(void **)(v15 - 8);
    if ((*((unsigned int (**)(_DWORD *, uint64_t, uint64_t))v16 + 6))(v9, 1, v15))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC20);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
LABEL_223:
      v462 = *(int *)(v10 + 20);
      v463 = (char *)v8 + v462;
      v464 = (char *)v9 + v462;
      v465 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v465 - 8) + 32))(v463, v464, v465);
      (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_298;
    }
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v822 = v16;
        v27 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        v28 = *(_QWORD *)(v27 - 8);
        if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v28 + 48))(v9, 1, v27))
        {
          v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
          memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
        }
        else
        {
          v175 = swift_getEnumCaseMultiPayload();
          switch(v175)
          {
            case 9:
              *v8 = *v9;
              *(_OWORD *)(v8 + 2) = *(_OWORD *)(v9 + 2);
              v297 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              __srcm = (char *)v8 + v297;
              v817 = a3;
              v298 = (char *)v9 + v297;
              v299 = sub_2408E57A4();
              v300 = v298;
              a3 = v817;
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v299 - 8) + 32))(__srcm, v300, v299);
              swift_storeEnumTagMultiPayload();
              break;
            case 5:
              *(_QWORD *)v8 = *(_QWORD *)v9;
              v301 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              __srcn = (char *)v8 + v301;
              v818 = a3;
              v302 = (char *)v9 + v301;
              v303 = sub_2408E57A4();
              v304 = v302;
              a3 = v818;
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v303 - 8) + 32))(__srcn, v304, v303);
              swift_storeEnumTagMultiPayload();
              break;
            case 4:
              *(_QWORD *)v8 = *(_QWORD *)v9;
              v176 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              __srcl = (char *)v8 + v176;
              v812 = a3;
              v177 = (char *)v9 + v176;
              v178 = sub_2408E57A4();
              v179 = v177;
              a3 = v812;
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v178 - 8) + 32))(__srcl, v179, v178);
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v8, v9, *(_QWORD *)(v28 + 64));
              break;
          }
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v8, 0, 1, v27);
        }
        v305 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValue(0) + 20);
        v306 = (char *)v8 + v305;
        v307 = (char *)v9 + v305;
        v308 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v308 - 8) + 32))(v306, v307, v308);
        goto LABEL_194;
      case 1u:
        v808 = a3;
        v822 = v16;
        *(_BYTE *)v8 = *(_BYTE *)v9;
        v34 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
        v35 = *(int *)(v34 + 20);
        __dst = (_DWORD *)((char *)v8 + v35);
        v766 = (int *)v34;
        v36 = (_DWORD *)((char *)v9 + v35);
        v37 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        v38 = *(_QWORD *)(v37 - 8);
        __src = v36;
        if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
          goto LABEL_30;
        v724 = v38;
        v737 = v37;
        v180 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        v181 = *(_QWORD *)(v180 - 8);
        v182 = __src;
        if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v181 + 48))(__src, 1, v180))
          goto LABEL_77;
        v712 = v181;
        v281 = swift_getEnumCaseMultiPayload();
        if (v281 == 9)
          goto LABEL_188;
        if (v281 == 5)
          goto LABEL_189;
        v699 = v180;
        v188 = __dst;
        if (v281 == 4)
          goto LABEL_127;
        goto LABEL_190;
      case 2u:
        v809 = a3;
        v823 = v16;
        *(_BYTE *)v8 = *(_BYTE *)v9;
        v39 = (int *)type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
        v40 = v39[5];
        __dsta = (_DWORD *)((char *)v8 + v40);
        v41 = (_DWORD *)((char *)v9 + v40);
        v42 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        v736 = *(_QWORD *)(v42 - 8);
        __srca = (int *)v42;
        v767 = *(unsigned int (**)(char *, uint64_t, int *))(v736 + 48);
        if (((unsigned int (*)(_DWORD *, uint64_t))v767)(v41, 1))
        {
          v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
          memcpy(__dsta, v41, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
          v44 = __srca;
        }
        else
        {
          v725 = v39;
          v183 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          v184 = *(_QWORD *)(v183 - 8);
          if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v184 + 48))(v41, 1, v183))
          {
            v185 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
            v186 = __dsta;
            memcpy(__dsta, v41, *(_QWORD *)(*(_QWORD *)(v185 - 8) + 64));
          }
          else
          {
            v713 = v184;
            v282 = swift_getEnumCaseMultiPayload();
            if (v282 == 9)
            {
              v286 = v183;
              v186 = __dsta;
              *__dsta = *v41;
              *(_OWORD *)(__dsta + 2) = *(_OWORD *)(v41 + 2);
              v362 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              v692 = (char *)v41 + v362;
              v702 = (char *)__dsta + v362;
              v363 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v363 - 8) + 32))(v702, v692, v363);
              swift_storeEnumTagMultiPayload();
            }
            else if (v282 == 5)
            {
              v286 = v183;
              v186 = __dsta;
              *(_QWORD *)__dsta = *(_QWORD *)v41;
              v364 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              v693 = (char *)v41 + v364;
              v703 = (char *)__dsta + v364;
              v365 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v365 - 8) + 32))(v703, v693, v365);
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              v700 = v183;
              v186 = __dsta;
              if (v282 == 4)
              {
                *(_QWORD *)__dsta = *(_QWORD *)v41;
                v283 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v284 = (char *)__dsta + v283;
                v691 = (char *)v41 + v283;
                v285 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v285 - 8) + 32))(v284, v691, v285);
                v286 = v700;
                swift_storeEnumTagMultiPayload();
              }
              else
              {
                memcpy(__dsta, v41, *(_QWORD *)(v184 + 64));
                v286 = v700;
              }
            }
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v713 + 56))(v186, 0, 1, v286);
          }
          v44 = __srca;
          v366 = __srca[5];
          __dstm = (char *)v186 + v366;
          v367 = (char *)v41 + v366;
          v368 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v368 - 8) + 32))(__dstm, v367, v368);
          (*(void (**)(_DWORD *, _QWORD, uint64_t, int *))(v736 + 56))(v186, 0, 1, __srca);
          v39 = v725;
        }
        v369 = v39[6];
        __dsth = (_DWORD *)((char *)v8 + v369);
        v370 = (_DWORD *)((char *)v9 + v369);
        if (v767((char *)v9 + v369, 1, v44))
        {
          v371 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
          memcpy(__dsth, v370, *(_QWORD *)(*(_QWORD *)(v371 - 8) + 64));
        }
        else
        {
          v728 = v39;
          v372 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          v373 = *(_QWORD *)(v372 - 8);
          if ((*(unsigned int (**)(int *, uint64_t, uint64_t))(v373 + 48))(v370, 1, v372))
          {
            v374 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
            v375 = __dsth;
            memcpy(__dsth, v370, *(_QWORD *)(*(_QWORD *)(v374 - 8) + 64));
            v376 = v370;
          }
          else
          {
            v776 = (void *)v373;
            v704 = v372;
            v377 = swift_getEnumCaseMultiPayload();
            v716 = v370;
            if (v377 == 9)
            {
              v427 = *v370;
              v428 = v370;
              v381 = __dsth;
              *__dsth = v427;
              *(_OWORD *)(__dsth + 2) = *(_OWORD *)(v428 + 2);
              v429 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              v430 = (char *)__dsth + v429;
              v431 = (char *)v428 + v429;
              v432 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v432 - 8) + 32))(v430, v431, v432);
              v384 = v704;
              swift_storeEnumTagMultiPayload();
              v378 = (void (**)(_DWORD *, _QWORD, uint64_t, _QWORD))v776;
            }
            else
            {
              v378 = (void (**)(_DWORD *, _QWORD, uint64_t, _QWORD))v373;
              if (v377 == 5)
              {
                v433 = *(_QWORD *)v370;
                v434 = v370;
                v381 = __dsth;
                *(_QWORD *)__dsth = v433;
                v435 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v690 = (char *)__dsth + v435;
                v696 = (char *)v434 + v435;
                v436 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v436 - 8) + 32))(v690, v696, v436);
                v384 = v704;
                swift_storeEnumTagMultiPayload();
              }
              else if (v377 == 4)
              {
                v379 = *(_QWORD *)v370;
                v380 = v370;
                v381 = __dsth;
                *(_QWORD *)__dsth = v379;
                v382 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v689 = (char *)__dsth + v382;
                v694 = (char *)v380 + v382;
                v383 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v383 - 8) + 32))(v689, v694, v383);
                v384 = v704;
                swift_storeEnumTagMultiPayload();
              }
              else
              {
                v437 = v370;
                v381 = __dsth;
                memcpy(__dsth, v437, *(_QWORD *)(v373 + 64));
                v384 = v704;
              }
            }
            v378[7](v381, 0, 1, v384);
            v375 = v381;
            v376 = v716;
          }
          v438 = __srca[5];
          v439 = (char *)v375 + v438;
          v780 = (char *)v376 + v438;
          v440 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v440 - 8) + 32))(v439, v780, v440);
          (*(void (**)(_DWORD *, _QWORD, uint64_t, int *))(v736 + 56))(v375, 0, 1, __srca);
          v39 = v728;
        }
        v441 = v39[7];
        v442 = (char *)v8 + v441;
        v443 = (char *)v9 + v441;
        v444 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v444 - 8) + 32))(v442, v443, v444);
        goto LABEL_221;
      case 3u:
        v808 = a3;
        v822 = v16;
        *(_OWORD *)v8 = *(_OWORD *)v9;
        v45 = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
        v46 = *(int *)(v45 + 20);
        __dst = (_DWORD *)((char *)v8 + v46);
        v766 = (int *)v45;
        v47 = (_DWORD *)((char *)v9 + v46);
        v48 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        v49 = *(_QWORD *)(v48 - 8);
        __src = v47;
        if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48))
        {
LABEL_30:
          v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
          memcpy(__dst, __src, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
        }
        else
        {
          v724 = v49;
          v737 = v48;
          v180 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          v181 = *(_QWORD *)(v180 - 8);
          v182 = __src;
          if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v181 + 48))(__src, 1, v180))
          {
LABEL_77:
            v187 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
            v188 = __dst;
            memcpy(__dst, __src, *(_QWORD *)(*(_QWORD *)(v187 - 8) + 64));
            v189 = v737;
          }
          else
          {
            v712 = v181;
            v287 = swift_getEnumCaseMultiPayload();
            if (v287 == 9)
            {
LABEL_188:
              v292 = v180;
              v188 = __dst;
              *__dst = *__src;
              *(_OWORD *)(__dst + 2) = *(_OWORD *)(__src + 2);
              v385 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              v705 = (char *)__dst + v385;
              v386 = (char *)__src + v385;
              v387 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v387 - 8) + 32))(v705, v386, v387);
              swift_storeEnumTagMultiPayload();
            }
            else if (v287 == 5)
            {
LABEL_189:
              v292 = v180;
              v188 = __dst;
              *(_QWORD *)__dst = *(_QWORD *)__src;
              v388 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              v706 = (char *)__dst + v388;
              v389 = (char *)__src + v388;
              v390 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v390 - 8) + 32))(v706, v389, v390);
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              v699 = v180;
              v188 = __dst;
              if (v287 == 4)
              {
LABEL_127:
                *(_QWORD *)__dst = *(_QWORD *)__src;
                v288 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v289 = (char *)__dst + v288;
                v290 = (char *)__src + v288;
                v291 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v291 - 8) + 32))(v289, v290, v291);
                v292 = v699;
                swift_storeEnumTagMultiPayload();
              }
              else
              {
LABEL_190:
                memcpy(__dst, __src, *(_QWORD *)(v181 + 64));
                v292 = v699;
              }
            }
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v712 + 56))(v188, 0, 1, v292);
            v189 = v737;
            v182 = __src;
          }
          v391 = *(int *)(v189 + 20);
          __srcq = (char *)v188 + v391;
          v392 = (char *)v182 + v391;
          v393 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v393 - 8) + 32))(__srcq, v392, v393);
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v724 + 56))(v188, 0, 1, v737);
        }
LABEL_193:
        a3 = v808;
        v394 = v766[6];
        v395 = (char *)v8 + v394;
        v396 = (char *)v9 + v394;
        v397 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v397 - 8) + 32))(v395, v396, v397);
LABEL_194:
        swift_storeEnumTagMultiPayload();
        v16 = v822;
        goto LABEL_222;
      case 4u:
        v823 = v16;
        v51 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        __dstb = *(_QWORD **)(v51 - 8);
        __srcb = (unsigned int (*)(_DWORD *, uint64_t, uint64_t))__dstb[6];
        v809 = a3;
        if (__srcb(v9, 1, v51))
        {
          v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
          memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
        }
        else
        {
          v738 = v51;
          v190 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          v191 = *(_QWORD *)(v190 - 8);
          if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v191 + 48))(v9, 1, v190))
          {
            v192 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
            memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v192 - 8) + 64));
          }
          else
          {
            v293 = swift_getEnumCaseMultiPayload();
            switch(v293)
            {
              case 9:
                *v8 = *v9;
                *(_OWORD *)(v8 + 2) = *(_OWORD *)(v9 + 2);
                v398 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v777 = (char *)v8 + v398;
                v399 = (char *)v9 + v398;
                v400 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v400 - 8) + 32))(v777, v399, v400);
                swift_storeEnumTagMultiPayload();
                break;
              case 5:
                *(_QWORD *)v8 = *(_QWORD *)v9;
                v401 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v778 = (char *)v8 + v401;
                v402 = (char *)v9 + v401;
                v403 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v403 - 8) + 32))(v778, v402, v403);
                swift_storeEnumTagMultiPayload();
                break;
              case 4:
                *(_QWORD *)v8 = *(_QWORD *)v9;
                v294 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v772 = (char *)v8 + v294;
                v295 = (char *)v9 + v294;
                v296 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v296 - 8) + 32))(v772, v295, v296);
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v8, v9, *(_QWORD *)(v191 + 64));
                break;
            }
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v191 + 56))(v8, 0, 1, v190);
          }
          v404 = *(int *)(v738 + 20);
          v405 = (char *)v8 + v404;
          v406 = (char *)v9 + v404;
          v407 = sub_2408E57A4();
          v408 = v406;
          v51 = v738;
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v407 - 8) + 32))(v405, v408, v407);
          ((void (*)(_DWORD *, _QWORD, uint64_t, uint64_t))__dstb[7])(v8, 0, 1, v738);
        }
        v409 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
        v410 = *(int *)(v409 + 20);
        v779 = (_DWORD *)((char *)v8 + v410);
        v411 = (char *)v9 + v410;
        if (__srcb((_DWORD *)((char *)v9 + v410), 1, v51))
        {
          v412 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
          memcpy(v779, v411, *(_QWORD *)(*(_QWORD *)(v412 - 8) + 64));
          goto LABEL_220;
        }
        __srci = (void *)v409;
        v742 = v51;
        v413 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        v414 = *(_QWORD *)(v413 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v414 + 48))(v411, 1, v413))
        {
          v415 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
          v416 = v411;
          v417 = v779;
          memcpy(v779, v416, *(_QWORD *)(*(_QWORD *)(v415 - 8) + 64));
          v418 = v416;
          goto LABEL_219;
        }
        v717 = v414;
        v419 = v411;
        v420 = swift_getEnumCaseMultiPayload();
        v421 = v413;
        v729 = v419;
        switch(v420)
        {
          case 9:
            v445 = *(_DWORD *)v419;
            v446 = v419;
            v424 = v779;
            *v779 = v445;
            *(_OWORD *)(v779 + 2) = *(_OWORD *)(v446 + 2);
            v447 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v697 = (char *)v446 + v447;
            v708 = (char *)v779 + v447;
            v421 = v413;
            v448 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v448 - 8) + 32))(v708, v697, v448);
            break;
          case 5:
            v449 = *(_QWORD *)v419;
            v450 = v419;
            v424 = v779;
            *(_QWORD *)v779 = v449;
            v451 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v698 = (char *)v450 + v451;
            v709 = (char *)v779 + v451;
            v421 = v413;
            v452 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v452 - 8) + 32))(v709, v698, v452);
            break;
          case 4:
            v422 = *(_QWORD *)v419;
            v423 = v419;
            v424 = v779;
            *(_QWORD *)v779 = v422;
            v425 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v695 = (char *)v423 + v425;
            v707 = (char *)v779 + v425;
            v421 = v413;
            v426 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v426 - 8) + 32))(v707, v695, v426);
            break;
          default:
            v453 = v717;
            v454 = v419;
            v424 = v779;
            memcpy(v779, v454, *(_QWORD *)(v717 + 64));
LABEL_218:
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v453 + 56))(v424, 0, 1, v421);
            v417 = v424;
            v418 = v729;
LABEL_219:
            v455 = *(int *)(v742 + 20);
            v456 = (char *)v417 + v455;
            v781 = &v418[v455];
            v457 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v457 - 8) + 32))(v456, v781, v457);
            ((void (*)(_DWORD *, _QWORD, uint64_t, uint64_t))__dstb[7])(v417, 0, 1, v742);
            v409 = (uint64_t)__srci;
LABEL_220:
            v458 = *(int *)(v409 + 24);
            v459 = (char *)v8 + v458;
            v460 = (char *)v9 + v458;
            v461 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v461 - 8) + 32))(v459, v460, v461);
LABEL_221:
            swift_storeEnumTagMultiPayload();
            a3 = v809;
            v16 = v823;
LABEL_222:
            (*((void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))v16 + 7))(v8, 0, 1, v15);
            goto LABEL_223;
        }
        swift_storeEnumTagMultiPayload();
        v453 = v717;
        goto LABEL_218;
      case 5u:
        *(_OWORD *)v8 = *(_OWORD *)v9;
        *((_QWORD *)v8 + 2) = *((_QWORD *)v9 + 2);
        v53 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0) + 24);
        v824 = v16;
        v54 = (char *)v8 + v53;
        v55 = (char *)v9 + v53;
        v56 = sub_2408E57A4();
        v57 = v54;
        v16 = v824;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 32))(v57, v55, v56);
        swift_storeEnumTagMultiPayload();
        goto LABEL_222;
      case 6u:
        *(_QWORD *)v8 = *(_QWORD *)v9;
        v58 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0) + 20);
        v825 = v16;
        v59 = (char *)v8 + v58;
        v60 = (char *)v9 + v58;
        v61 = sub_2408E57A4();
        v62 = v59;
        v16 = v825;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v62, v60, v61);
        swift_storeEnumTagMultiPayload();
        goto LABEL_222;
      case 7u:
        v808 = a3;
        v822 = v16;
        *(_OWORD *)v8 = *(_OWORD *)v9;
        v63 = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
        v64 = *(int *)(v63 + 20);
        v766 = (int *)v63;
        __srcc = (char *)v8 + v64;
        v65 = (char *)v9 + v64;
        v66 = type metadata accessor for TranscriptProtoASTPickType(0);
        v67 = *(_QWORD *)(v66 - 8);
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v67 + 48))(v65, 1, v66))
        {
          v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D08);
          memcpy(__srcc, v65, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
        }
        else
        {
          *(_QWORD *)__srcc = *(_QWORD *)v65;
          __srcc[8] = v65[8];
          v193 = *(int *)(v66 + 20);
          __dstl = &__srcc[v193];
          v194 = &v65[v193];
          v195 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v195 - 8) + 32))(__dstl, v194, v195);
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v67 + 56))(__srcc, 0, 1, v66);
        }
        goto LABEL_193;
      case 8u:
        *(_OWORD *)v8 = *(_OWORD *)v9;
        v69 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0) + 20);
        v826 = v16;
        v70 = (char *)v8 + v69;
        v71 = (char *)v9 + v69;
        v72 = sub_2408E57A4();
        v73 = v70;
        v16 = v826;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v72 - 8) + 32))(v73, v71, v72);
        swift_storeEnumTagMultiPayload();
        goto LABEL_222;
      case 9u:
        *(_OWORD *)v8 = *(_OWORD *)v9;
        *((_WORD *)v8 + 8) = *((_WORD *)v9 + 8);
        v74 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0) + 28);
        v827 = v16;
        v75 = (char *)v8 + v74;
        v76 = (char *)v9 + v74;
        v77 = sub_2408E57A4();
        v78 = v75;
        v16 = v827;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v77 - 8) + 32))(v78, v76, v77);
        swift_storeEnumTagMultiPayload();
        goto LABEL_222;
      case 0xAu:
        *(_OWORD *)v8 = *(_OWORD *)v9;
        v79 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0) + 20);
        v828 = v16;
        v80 = (char *)v8 + v79;
        v81 = (char *)v9 + v79;
        v82 = sub_2408E57A4();
        v83 = v80;
        v16 = v828;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v82 - 8) + 32))(v83, v81, v82);
        swift_storeEnumTagMultiPayload();
        goto LABEL_222;
      case 0xBu:
        *(_OWORD *)v8 = *(_OWORD *)v9;
        v84 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0) + 20);
        v829 = v16;
        v85 = (char *)v8 + v84;
        v86 = (char *)v9 + v84;
        v87 = sub_2408E57A4();
        v88 = v85;
        v16 = v829;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v87 - 8) + 32))(v88, v86, v87);
        swift_storeEnumTagMultiPayload();
        goto LABEL_222;
      case 0xCu:
        *(_QWORD *)v8 = *(_QWORD *)v9;
        v89 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0) + 20);
        v830 = v16;
        v90 = (char *)v8 + v89;
        v91 = (char *)v9 + v89;
        v92 = sub_2408E57A4();
        v93 = v90;
        v16 = v830;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v92 - 8) + 32))(v93, v91, v92);
        swift_storeEnumTagMultiPayload();
        goto LABEL_222;
      case 0xDu:
        *(_OWORD *)v8 = *(_OWORD *)v9;
        v94 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0) + 20);
        v831 = v16;
        v95 = (char *)v8 + v94;
        v96 = (char *)v9 + v94;
        v97 = sub_2408E57A4();
        v98 = v95;
        v16 = v831;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v97 - 8) + 32))(v98, v96, v97);
        swift_storeEnumTagMultiPayload();
        goto LABEL_222;
      case 0xEu:
        *(_OWORD *)v8 = *(_OWORD *)v9;
        v99 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0) + 20);
        v832 = v16;
        v100 = (char *)v8 + v99;
        v101 = (char *)v9 + v99;
        v102 = sub_2408E57A4();
        v103 = v100;
        v16 = v832;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v102 - 8) + 32))(v103, v101, v102);
        swift_storeEnumTagMultiPayload();
        goto LABEL_222;
      case 0xFu:
      case 0x11u:
        v104 = sub_2408E57A4();
        (*(void (**)(_DWORD *, _DWORD *, uint64_t))(*(_QWORD *)(v104 - 8) + 32))(v8, v9, v104);
        swift_storeEnumTagMultiPayload();
        goto LABEL_222;
      case 0x10u:
        *(_QWORD *)v8 = *(_QWORD *)v9;
        v105 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0) + 20);
        v833 = v16;
        v106 = (char *)v8 + v105;
        v107 = (char *)v9 + v105;
        v108 = sub_2408E57A4();
        v109 = v106;
        v16 = v833;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v108 - 8) + 32))(v109, v107, v108);
        swift_storeEnumTagMultiPayload();
        goto LABEL_222;
      default:
        memcpy(v8, v9, *((_QWORD *)v16 + 8));
        goto LABEL_222;
    }
  }
LABEL_7:
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000F20);
  memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
LABEL_298:
  v595 = *(int *)(a3 + 24);
  v596 = (char *)a1 + v595;
  v597 = (char *)a2 + v595;
  v598 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v598 - 8) + 40))(v596, v597, v598);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTFlatAssignExpr()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24068DA3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_15Tm(a1, a2, a3, &qword_257000F20);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTFlatAssignExpr()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24068DA54(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_16Tm(a1, a2, a3, a4, &qword_257000F20);
}

void sub_24068DA60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2404090B4(a1, a2, a3, (uint64_t)&unk_240906518, qword_257008530, (void (*)(uint64_t))type metadata accessor for TranscriptProtoASTFlatExpr);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoASTFlatExpr(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(_QWORD, _QWORD, _QWORD);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(_QWORD *, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int (*v41)(uint64_t *, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, char *, uint64_t);
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  void (*v53)(char *, char *, uint64_t);
  uint64_t v54;
  uint64_t v55;
  _BYTE *v56;
  _BYTE *v57;
  uint64_t v58;
  uint64_t v59;
  unsigned int (*v60)(_BYTE *, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  void (*v67)(char *, char *, uint64_t);
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  void (*v73)(char *, char *, uint64_t);
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  void (*v79)(char *, char *, uint64_t);
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  void (*v85)(char *, char *, uint64_t);
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  void (*v90)(char *, char *, uint64_t);
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  void (*v96)(char *, char *, uint64_t);
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  void (*v102)(char *, char *, uint64_t);
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  void (*v108)(char *, char *, uint64_t);
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  int *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  _QWORD *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  _BYTE *v125;
  _BYTE *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  void (*v138)(char *, char *, uint64_t);
  uint64_t v139;
  uint64_t v140;
  void (*v141)(char *, char *, uint64_t);
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  void (*v145)(char *, char *, uint64_t);
  uint64_t v146;
  char *v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  _QWORD *v171;
  _QWORD *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  char *v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  _QWORD *v206;
  _QWORD *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  char *v219;
  char *v220;
  uint64_t v221;
  uint64_t v222;
  char *v223;
  char *v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  char *v231;
  char *v232;
  uint64_t v233;
  uint64_t v234;
  char *v235;
  char *v236;
  uint64_t v237;
  uint64_t v238;
  char *v239;
  char *v240;
  uint64_t v241;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  void (*v249)(char *, char *, uint64_t);
  void (*v250)(char *, char *, uint64_t);
  void (*v251)(char *, char *, uint64_t);
  void (*v252)(char *, char *, uint64_t);
  void (*v253)(char *, char *, uint64_t);
  void (*v254)(char *, char *, uint64_t);
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  void (*v261)(char *, char *, uint64_t);
  void (*v262)(char *, char *, uint64_t);
  void (*v263)(char *, char *, uint64_t);
  char *v264;
  char *v265;
  char *v266;
  char *v267;
  char *v268;
  char *v269;
  void (*v270)(char *, char *, uint64_t);
  void (*v271)(char *, char *, uint64_t);
  void (*v272)(char *, char *, uint64_t);
  void (*v273)(char *, char *, uint64_t);
  void (*v274)(char *, char *, uint64_t);
  void (*v275)(char *, char *, uint64_t);
  char *v276;
  char *v277;
  char *v278;
  char *v279;
  char *v280;
  char *v281;
  char *v282;
  char *v283;
  char *v284;
  void (*v285)(char *, char *, uint64_t);
  void (*v286)(char *, char *, uint64_t);
  void (*v287)(char *, char *, uint64_t);
  char *v288;
  char *v289;
  char *v290;
  char *v291;
  char *v292;
  char *v293;
  uint64_t v294;
  uint64_t v295;
  char *v296;
  char *v297;
  char *v298;
  char *v299;
  char *v300;
  char *v301;
  char *v302;
  char *v303;
  char *v304;
  char *v305;
  char *v306;
  char *v307;
  unsigned int (*v308)(_QWORD, _QWORD, _QWORD);
  uint64_t v309;
  uint64_t v310;
  char *v311;
  char *v312;
  char *v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  char *v319;
  char *v320;
  char *v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  char *v328;
  uint64_t v329;
  char *v330;
  char *v331;
  char *v332;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC20);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v11 = v8;
          v12 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          v13 = *(_QWORD *)(v12 - 8);
          if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v13 + 48))(a2, 1, v12))
          {
            v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                v109 = a2[1];
                *a1 = *a2;
                a1[1] = v109;
                swift_bridgeObjectRetain();
                goto LABEL_54;
              case 4u:
                *a1 = *a2;
                v136 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v319 = (char *)a2 + v136;
                v330 = (char *)a1 + v136;
                v137 = sub_2408E57A4();
                v138 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v137 - 8) + 16);
                swift_bridgeObjectRetain();
                v138(v330, v319, v137);
                goto LABEL_54;
              case 5u:
                *a1 = *a2;
                v139 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v320 = (char *)a2 + v139;
                v331 = (char *)a1 + v139;
                v140 = sub_2408E57A4();
                v141 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v140 - 8) + 16);
                swift_bridgeObjectRetain();
                v141(v331, v320, v140);
                goto LABEL_54;
              case 9u:
                *(_DWORD *)a1 = *(_DWORD *)a2;
                v142 = a2[2];
                a1[1] = a2[1];
                a1[2] = v142;
                v143 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v321 = (char *)a2 + v143;
                v332 = (char *)a1 + v143;
                v144 = sub_2408E57A4();
                v145 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v144 - 8) + 16);
                swift_bridgeObjectRetain();
                v145(v332, v321, v144);
LABEL_54:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(a1, a2, *(_QWORD *)(v13 + 64));
                break;
            }
            (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v13 + 56))(a1, 0, 1, v12);
          }
          v8 = v11;
          v146 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValue(0) + 20);
          v147 = (char *)a1 + v146;
          v148 = (char *)a2 + v146;
          v149 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v149 - 8) + 16))(v147, v148, v149);
          swift_storeEnumTagMultiPayload();
          break;
        case 1u:
          v324 = v8;
          *(_BYTE *)a1 = *(_BYTE *)a2;
          v15 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
          v16 = *(int *)(v15 + 20);
          v17 = (uint64_t *)((char *)a1 + v16);
          v18 = (uint64_t *)((char *)a2 + v16);
          v19 = type metadata accessor for TranscriptProtoASTFlatValue(0);
          v20 = *(_QWORD *)(v19 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
          {
            v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
            memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
          }
          else
          {
            v317 = v20;
            v110 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            v111 = *(_QWORD *)(v110 - 8);
            if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v111 + 48))(v18, 1, v110))
            {
              v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
              memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v112 - 8) + 64));
            }
            else
            {
              v310 = v111;
              switch(swift_getEnumCaseMultiPayload())
              {
                case 3u:
                case 6u:
                case 7u:
                case 8u:
                  v132 = v18[1];
                  *v17 = *v18;
                  v17[1] = v132;
                  swift_bridgeObjectRetain();
                  goto LABEL_61;
                case 4u:
                  *v17 = *v18;
                  v150 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                  v276 = (char *)v18 + v150;
                  v296 = (char *)v17 + v150;
                  v246 = sub_2408E57A4();
                  v261 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v246 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v261(v296, v276, v246);
                  goto LABEL_61;
                case 5u:
                  *v17 = *v18;
                  v151 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                  v277 = (char *)v18 + v151;
                  v297 = (char *)v17 + v151;
                  v247 = sub_2408E57A4();
                  v262 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v247 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v262(v297, v277, v247);
                  goto LABEL_61;
                case 9u:
                  *(_DWORD *)v17 = *(_DWORD *)v18;
                  v152 = v18[2];
                  v17[1] = v18[1];
                  v17[2] = v152;
                  v153 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                  v278 = (char *)v18 + v153;
                  v298 = (char *)v17 + v153;
                  v248 = sub_2408E57A4();
                  v263 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v248 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v263(v298, v278, v248);
LABEL_61:
                  swift_storeEnumTagMultiPayload();
                  break;
                default:
                  memcpy(v17, v18, *(_QWORD *)(v111 + 64));
                  break;
              }
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v310 + 56))(v17, 0, 1, v110);
            }
            v154 = *(int *)(v19 + 20);
            v155 = (char *)v17 + v154;
            v156 = (char *)v18 + v154;
            v157 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v157 - 8) + 16))(v155, v156, v157);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v317 + 56))(v17, 0, 1, v19);
          }
          v8 = v324;
          v158 = *(int *)(v15 + 24);
          v159 = (char *)a1 + v158;
          v160 = (char *)a2 + v158;
          v161 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v161 - 8) + 16))(v159, v160, v161);
          swift_storeEnumTagMultiPayload();
          break;
        case 2u:
          v325 = v8;
          *(_BYTE *)a1 = *(_BYTE *)a2;
          v22 = (int *)type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
          v23 = v22[5];
          v24 = (uint64_t *)((char *)a1 + v23);
          v25 = (uint64_t *)((char *)a2 + v23);
          v26 = type metadata accessor for TranscriptProtoASTFlatValue(0);
          v27 = *(_QWORD *)(v26 - 8);
          v28 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v27 + 48);
          if (v28(v25, 1, v26))
          {
            v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
            memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
          }
          else
          {
            v308 = v28;
            v318 = v27;
            v113 = v22;
            v114 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            v115 = *(_QWORD *)(v114 - 8);
            if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v115 + 48))(v25, 1, v114))
            {
              v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
              memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v116 - 8) + 64));
              v22 = v113;
              v28 = v308;
            }
            else
            {
              v294 = v115;
              v22 = v113;
              switch(swift_getEnumCaseMultiPayload())
              {
                case 3u:
                case 6u:
                case 7u:
                case 8u:
                  v133 = v25[1];
                  *v24 = *v25;
                  v24[1] = v133;
                  swift_bridgeObjectRetain();
                  goto LABEL_69;
                case 4u:
                  *v24 = *v25;
                  v162 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                  v264 = (char *)v25 + v162;
                  v279 = (char *)v24 + v162;
                  v243 = sub_2408E57A4();
                  v249 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v243 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v249(v279, v264, v243);
                  goto LABEL_69;
                case 5u:
                  *v24 = *v25;
                  v163 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                  v265 = (char *)v25 + v163;
                  v280 = (char *)v24 + v163;
                  v244 = sub_2408E57A4();
                  v250 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v244 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v250(v280, v265, v244);
                  goto LABEL_69;
                case 9u:
                  *(_DWORD *)v24 = *(_DWORD *)v25;
                  v164 = v25[2];
                  v24[1] = v25[1];
                  v24[2] = v164;
                  v165 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                  v266 = (char *)v25 + v165;
                  v281 = (char *)v24 + v165;
                  v245 = sub_2408E57A4();
                  v251 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v245 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v251(v281, v266, v245);
LABEL_69:
                  swift_storeEnumTagMultiPayload();
                  break;
                default:
                  memcpy(v24, v25, *(_QWORD *)(v294 + 64));
                  v22 = v113;
                  break;
              }
              v28 = v308;
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v294 + 56))(v24, 0, 1, v114);
            }
            v166 = *(int *)(v26 + 20);
            v167 = (char *)v24 + v166;
            v168 = (char *)v25 + v166;
            v169 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v169 - 8) + 16))(v167, v168, v169);
            v27 = v318;
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v318 + 56))(v24, 0, 1, v26);
          }
          v170 = v22[6];
          v171 = (uint64_t *)((char *)a1 + v170);
          v172 = (uint64_t *)((char *)a2 + v170);
          if (v28((char *)a2 + v170, 1, v26))
          {
            v173 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
            memcpy(v171, v172, *(_QWORD *)(*(_QWORD *)(v173 - 8) + 64));
            v8 = v325;
          }
          else
          {
            v322 = v27;
            v174 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            v175 = *(_QWORD *)(v174 - 8);
            if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v175 + 48))(v172, 1, v174))
            {
              v176 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
              memcpy(v171, v172, *(_QWORD *)(*(_QWORD *)(v176 - 8) + 64));
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload())
              {
                case 3u:
                case 6u:
                case 7u:
                case 8u:
                  v177 = v172[1];
                  *v171 = *v172;
                  v171[1] = v177;
                  swift_bridgeObjectRetain();
                  goto LABEL_103;
                case 4u:
                  *v171 = *v172;
                  v214 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                  v288 = (char *)v172 + v214;
                  v302 = (char *)v171 + v214;
                  v255 = sub_2408E57A4();
                  v270 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v255 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v270(v302, v288, v255);
                  goto LABEL_103;
                case 5u:
                  *v171 = *v172;
                  v215 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                  v289 = (char *)v172 + v215;
                  v303 = (char *)v171 + v215;
                  v256 = sub_2408E57A4();
                  v271 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v256 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v271(v303, v289, v256);
                  goto LABEL_103;
                case 9u:
                  *(_DWORD *)v171 = *(_DWORD *)v172;
                  v216 = v172[2];
                  v171[1] = v172[1];
                  v171[2] = v216;
                  v217 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                  v290 = (char *)v172 + v217;
                  v304 = (char *)v171 + v217;
                  v257 = sub_2408E57A4();
                  v272 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v257 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v272(v304, v290, v257);
LABEL_103:
                  swift_storeEnumTagMultiPayload();
                  break;
                default:
                  memcpy(v171, v172, *(_QWORD *)(v175 + 64));
                  break;
              }
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v175 + 56))(v171, 0, 1, v174);
            }
            v8 = v325;
            v218 = *(int *)(v26 + 20);
            v219 = (char *)v171 + v218;
            v220 = (char *)v172 + v218;
            v221 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v221 - 8) + 16))(v219, v220, v221);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v322 + 56))(v171, 0, 1, v26);
          }
          v222 = v22[7];
          v223 = (char *)a1 + v222;
          v224 = (char *)a2 + v222;
          v225 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v225 - 8) + 16))(v223, v224, v225);
          swift_storeEnumTagMultiPayload();
          break;
        case 3u:
          v326 = v8;
          v30 = a2[1];
          *a1 = *a2;
          a1[1] = v30;
          v315 = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
          v31 = *(int *)(v315 + 20);
          v32 = (uint64_t *)((char *)a1 + v31);
          v33 = (uint64_t *)((char *)a2 + v31);
          v34 = type metadata accessor for TranscriptProtoASTFlatValue(0);
          v35 = *(_QWORD *)(v34 - 8);
          v36 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v35 + 48);
          swift_bridgeObjectRetain();
          if (v36(v33, 1, v34))
          {
            v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
            memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
            v38 = v315;
            v8 = v326;
          }
          else
          {
            v309 = v35;
            v117 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            v118 = *(_QWORD *)(v117 - 8);
            if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v118 + 48))(v33, 1, v117))
            {
              v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
              v120 = v32;
              memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v119 - 8) + 64));
              v8 = v326;
            }
            else
            {
              v295 = v118;
              v8 = v326;
              v120 = v32;
              switch(swift_getEnumCaseMultiPayload())
              {
                case 3u:
                case 6u:
                case 7u:
                case 8u:
                  v134 = v33[1];
                  *v32 = *v33;
                  v32[1] = v134;
                  swift_bridgeObjectRetain();
                  goto LABEL_82;
                case 4u:
                  *v32 = *v33;
                  v178 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                  v267 = (char *)v33 + v178;
                  v282 = (char *)v32 + v178;
                  v179 = sub_2408E57A4();
                  v252 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v179 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v252(v282, v267, v179);
                  v8 = v326;
                  goto LABEL_82;
                case 5u:
                  *v32 = *v33;
                  v180 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                  v268 = (char *)v33 + v180;
                  v283 = (char *)v32 + v180;
                  v181 = sub_2408E57A4();
                  v253 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v181 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v253(v283, v268, v181);
                  v8 = v326;
                  goto LABEL_82;
                case 9u:
                  *(_DWORD *)v32 = *(_DWORD *)v33;
                  v182 = v33[2];
                  v120[1] = v33[1];
                  v120[2] = v182;
                  v183 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                  v269 = (char *)v33 + v183;
                  v284 = (char *)v120 + v183;
                  v184 = sub_2408E57A4();
                  v254 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v184 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v254(v284, v269, v184);
                  v8 = v326;
LABEL_82:
                  swift_storeEnumTagMultiPayload();
                  break;
                default:
                  memcpy(v32, v33, *(_QWORD *)(v295 + 64));
                  break;
              }
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v295 + 56))(v120, 0, 1, v117);
            }
            v38 = v315;
            v185 = *(int *)(v34 + 20);
            v186 = (char *)v120 + v185;
            v187 = (char *)v33 + v185;
            v188 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v188 - 8) + 16))(v186, v187, v188);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v309 + 56))(v120, 0, 1, v34);
          }
          v189 = *(int *)(v38 + 24);
          v190 = (char *)a1 + v189;
          v191 = (char *)a2 + v189;
          v192 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v192 - 8) + 16))(v190, v191, v192);
          swift_storeEnumTagMultiPayload();
          break;
        case 4u:
          v327 = v8;
          v39 = type metadata accessor for TranscriptProtoASTFlatValue(0);
          v40 = *(_QWORD *)(v39 - 8);
          v41 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v40 + 48);
          if (v41(a2, 1, v39))
          {
            v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
          }
          else
          {
            v121 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            v122 = *(_QWORD *)(v121 - 8);
            if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v122 + 48))(a2, 1, v121))
            {
              v123 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v123 - 8) + 64));
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload())
              {
                case 3u:
                case 6u:
                case 7u:
                case 8u:
                  v135 = a2[1];
                  *a1 = *a2;
                  a1[1] = v135;
                  swift_bridgeObjectRetain();
                  goto LABEL_90;
                case 4u:
                  *a1 = *a2;
                  v193 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                  v299 = (char *)a2 + v193;
                  v311 = (char *)a1 + v193;
                  v194 = sub_2408E57A4();
                  v285 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v194 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v285(v311, v299, v194);
                  goto LABEL_90;
                case 5u:
                  *a1 = *a2;
                  v195 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                  v300 = (char *)a2 + v195;
                  v312 = (char *)a1 + v195;
                  v196 = sub_2408E57A4();
                  v286 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v196 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v286(v312, v300, v196);
                  goto LABEL_90;
                case 9u:
                  *(_DWORD *)a1 = *(_DWORD *)a2;
                  v197 = a2[2];
                  a1[1] = a2[1];
                  a1[2] = v197;
                  v198 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                  v301 = (char *)a2 + v198;
                  v313 = (char *)a1 + v198;
                  v199 = sub_2408E57A4();
                  v287 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v199 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v287(v313, v301, v199);
LABEL_90:
                  swift_storeEnumTagMultiPayload();
                  break;
                default:
                  memcpy(a1, a2, *(_QWORD *)(v122 + 64));
                  break;
              }
              (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v122 + 56))(a1, 0, 1, v121);
            }
            v200 = *(int *)(v39 + 20);
            v201 = (char *)a1 + v200;
            v202 = (char *)a2 + v200;
            v203 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v203 - 8) + 16))(v201, v202, v203);
            (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v40 + 56))(a1, 0, 1, v39);
          }
          v204 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
          v205 = *(int *)(v204 + 20);
          v206 = (uint64_t *)((char *)a1 + v205);
          v207 = (uint64_t *)((char *)a2 + v205);
          if (v41((uint64_t *)((char *)a2 + v205), 1, v39))
          {
            v208 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
            memcpy(v206, v207, *(_QWORD *)(*(_QWORD *)(v208 - 8) + 64));
          }
          else
          {
            v323 = v40;
            v209 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            v210 = *(_QWORD *)(v209 - 8);
            if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v210 + 48))(v207, 1, v209))
            {
              v211 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
              memcpy(v206, v207, *(_QWORD *)(*(_QWORD *)(v211 - 8) + 64));
              v212 = v323;
            }
            else
            {
              v314 = v210;
              switch(swift_getEnumCaseMultiPayload())
              {
                case 3u:
                case 6u:
                case 7u:
                case 8u:
                  v213 = v207[1];
                  *v206 = *v207;
                  v206[1] = v213;
                  swift_bridgeObjectRetain();
                  goto LABEL_111;
                case 4u:
                  *v206 = *v207;
                  v226 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                  v291 = (char *)v207 + v226;
                  v305 = (char *)v206 + v226;
                  v258 = sub_2408E57A4();
                  v273 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v258 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v273(v305, v291, v258);
                  goto LABEL_111;
                case 5u:
                  *v206 = *v207;
                  v227 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                  v292 = (char *)v207 + v227;
                  v306 = (char *)v206 + v227;
                  v259 = sub_2408E57A4();
                  v274 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v259 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v274(v306, v292, v259);
                  goto LABEL_111;
                case 9u:
                  *(_DWORD *)v206 = *(_DWORD *)v207;
                  v228 = v207[2];
                  v206[1] = v207[1];
                  v206[2] = v228;
                  v229 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                  v293 = (char *)v207 + v229;
                  v307 = (char *)v206 + v229;
                  v260 = sub_2408E57A4();
                  v275 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v260 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v275(v307, v293, v260);
LABEL_111:
                  swift_storeEnumTagMultiPayload();
                  break;
                default:
                  memcpy(v206, v207, *(_QWORD *)(v210 + 64));
                  break;
              }
              v212 = v323;
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v314 + 56))(v206, 0, 1, v209);
            }
            v230 = *(int *)(v39 + 20);
            v231 = (char *)v206 + v230;
            v232 = (char *)v207 + v230;
            v233 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v233 - 8) + 16))(v231, v232, v233);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v212 + 56))(v206, 0, 1, v39);
          }
          v234 = *(int *)(v204 + 24);
          v235 = (char *)a1 + v234;
          v236 = (char *)a2 + v234;
          v237 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v237 - 8) + 16))(v235, v236, v237);
          swift_storeEnumTagMultiPayload();
          v8 = v327;
          break;
        case 5u:
          v43 = a2[1];
          *a1 = *a2;
          a1[1] = v43;
          a1[2] = a2[2];
          v44 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0) + 24);
          v328 = (char *)a1 + v44;
          v45 = (char *)a2 + v44;
          v46 = sub_2408E57A4();
          v47 = v8;
          v48 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v48(v328, v45, v46);
          v8 = v47;
          swift_storeEnumTagMultiPayload();
          break;
        case 6u:
          *a1 = *a2;
          v49 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0) + 20);
          v50 = (char *)a1 + v49;
          v51 = (char *)a2 + v49;
          v52 = sub_2408E57A4();
          v53 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 16);
          swift_bridgeObjectRetain();
          v53(v50, v51, v52);
          swift_storeEnumTagMultiPayload();
          break;
        case 7u:
          v329 = v8;
          v54 = a2[1];
          *a1 = *a2;
          a1[1] = v54;
          v316 = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
          v55 = *(int *)(v316 + 20);
          v56 = (char *)a1 + v55;
          v57 = (char *)a2 + v55;
          v58 = type metadata accessor for TranscriptProtoASTPickType(0);
          v59 = *(_QWORD *)(v58 - 8);
          v60 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v59 + 48);
          swift_bridgeObjectRetain();
          if (v60(v57, 1, v58))
          {
            v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D08);
            memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
          }
          else
          {
            *(_QWORD *)v56 = *(_QWORD *)v57;
            v56[8] = v57[8];
            v124 = *(int *)(v58 + 20);
            v125 = &v56[v124];
            v126 = &v57[v124];
            v127 = sub_2408E57A4();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v127 - 8) + 16))(v125, v126, v127);
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v56, 0, 1, v58);
          }
          v8 = v329;
          v128 = *(int *)(v316 + 24);
          v129 = (char *)a1 + v128;
          v130 = (char *)a2 + v128;
          v131 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v131 - 8) + 16))(v129, v130, v131);
          swift_storeEnumTagMultiPayload();
          break;
        case 8u:
          v62 = a2[1];
          *a1 = *a2;
          a1[1] = v62;
          v63 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0) + 20);
          v64 = (char *)a1 + v63;
          v65 = (char *)a2 + v63;
          v66 = sub_2408E57A4();
          v67 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 16);
          swift_bridgeObjectRetain();
          v67(v64, v65, v66);
          swift_storeEnumTagMultiPayload();
          break;
        case 9u:
          v68 = a2[1];
          *a1 = *a2;
          a1[1] = v68;
          *((_WORD *)a1 + 8) = *((_WORD *)a2 + 8);
          v69 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0) + 28);
          v70 = (char *)a1 + v69;
          v71 = (char *)a2 + v69;
          v72 = sub_2408E57A4();
          v73 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v72 - 8) + 16);
          swift_bridgeObjectRetain();
          v73(v70, v71, v72);
          swift_storeEnumTagMultiPayload();
          break;
        case 0xAu:
          v74 = a2[1];
          *a1 = *a2;
          a1[1] = v74;
          v75 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0) + 20);
          v76 = (char *)a1 + v75;
          v77 = (char *)a2 + v75;
          v78 = sub_2408E57A4();
          v79 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v78 - 8) + 16);
          swift_bridgeObjectRetain();
          v79(v76, v77, v78);
          swift_storeEnumTagMultiPayload();
          break;
        case 0xBu:
          v80 = a2[1];
          *a1 = *a2;
          a1[1] = v80;
          v81 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0) + 20);
          v82 = (char *)a1 + v81;
          v83 = (char *)a2 + v81;
          v84 = sub_2408E57A4();
          v85 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v84 - 8) + 16);
          swift_bridgeObjectRetain();
          v85(v82, v83, v84);
          swift_storeEnumTagMultiPayload();
          break;
        case 0xCu:
          *a1 = *a2;
          v86 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0) + 20);
          v87 = (char *)a1 + v86;
          v88 = (char *)a2 + v86;
          v89 = sub_2408E57A4();
          v90 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v89 - 8) + 16);
          swift_bridgeObjectRetain();
          v90(v87, v88, v89);
          swift_storeEnumTagMultiPayload();
          break;
        case 0xDu:
          v91 = a2[1];
          *a1 = *a2;
          a1[1] = v91;
          v92 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0) + 20);
          v93 = (char *)a1 + v92;
          v94 = (char *)a2 + v92;
          v95 = sub_2408E57A4();
          v96 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v95 - 8) + 16);
          swift_bridgeObjectRetain();
          v96(v93, v94, v95);
          swift_storeEnumTagMultiPayload();
          break;
        case 0xEu:
          v97 = a2[1];
          *a1 = *a2;
          a1[1] = v97;
          v98 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0) + 20);
          v99 = (char *)a1 + v98;
          v100 = (char *)a2 + v98;
          v101 = sub_2408E57A4();
          v102 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 16);
          swift_bridgeObjectRetain();
          v102(v99, v100, v101);
          swift_storeEnumTagMultiPayload();
          break;
        case 0xFu:
        case 0x11u:
          v103 = sub_2408E57A4();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v103 - 8) + 16))(a1, a2, v103);
          swift_storeEnumTagMultiPayload();
          break;
        case 0x10u:
          *a1 = *a2;
          v104 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0) + 20);
          v105 = (char *)a1 + v104;
          v106 = (char *)a2 + v104;
          v107 = sub_2408E57A4();
          v108 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v107 - 8) + 16);
          swift_bridgeObjectRetain();
          v108(v105, v106, v107);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(v8 + 64));
          break;
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v238 = *(int *)(a3 + 20);
    v239 = (char *)a1 + v238;
    v240 = (char *)a2 + v238;
    v241 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v241 - 8) + 16))(v239, v240, v241);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoASTFlatExpr(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t updated;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v4 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v6 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(a1, 1, v6))
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              swift_bridgeObjectRelease();
              break;
            case 4u:
              swift_bridgeObjectRelease();
              v22 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              goto LABEL_37;
            case 5u:
              swift_bridgeObjectRelease();
              v22 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              goto LABEL_37;
            case 9u:
              swift_bridgeObjectRelease();
              v22 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_37:
              v23 = a1 + v22;
              v24 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
              break;
            default:
              break;
          }
        }
        updated = type metadata accessor for TranscriptProtoASTFlatValue(0);
        goto LABEL_39;
      case 1u:
        v7 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
        v8 = a1 + *(int *)(v7 + 20);
        v9 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
          goto LABEL_46;
        v10 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v8, 1, v10))
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              goto LABEL_17;
            case 4u:
              goto LABEL_40;
            case 5u:
              goto LABEL_41;
            case 9u:
              goto LABEL_43;
            default:
              goto LABEL_45;
          }
        }
        goto LABEL_45;
      case 2u:
        v11 = (int *)type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
        v12 = a1 + v11[5];
        v13 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        v14 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48);
        if (!v14(v12, 1, v13))
        {
          v15 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v12, 1, v15))
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                swift_bridgeObjectRelease();
                break;
              case 4u:
                swift_bridgeObjectRelease();
                v31 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                goto LABEL_50;
              case 5u:
                swift_bridgeObjectRelease();
                v31 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                goto LABEL_50;
              case 9u:
                swift_bridgeObjectRelease();
                v31 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_50:
                v32 = v12 + v31;
                v33 = sub_2408E57A4();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 8))(v32, v33);
                break;
              default:
                break;
            }
          }
          v34 = v12 + *(int *)(v13 + 20);
          v35 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 8))(v34, v35);
        }
        v36 = a1 + v11[6];
        if (!v14(v36, 1, v13))
        {
          v37 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 48))(v36, 1, v37))
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                swift_bridgeObjectRelease();
                break;
              case 4u:
                swift_bridgeObjectRelease();
                v46 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                goto LABEL_68;
              case 5u:
                swift_bridgeObjectRelease();
                v46 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                goto LABEL_68;
              case 9u:
                swift_bridgeObjectRelease();
                v46 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_68:
                v47 = v36 + v46;
                v48 = sub_2408E57A4();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 8))(v47, v48);
                break;
              default:
                break;
            }
          }
          v49 = v36 + *(int *)(v13 + 20);
          v50 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 8))(v49, v50);
        }
        v20 = v11[7];
        goto LABEL_77;
      case 3u:
        swift_bridgeObjectRelease();
        v7 = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
        v8 = a1 + *(int *)(v7 + 20);
        v9 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
          goto LABEL_46;
        v16 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v8, 1, v16))
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
LABEL_17:
              swift_bridgeObjectRelease();
              break;
            case 4u:
LABEL_40:
              swift_bridgeObjectRelease();
              v25 = type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0);
              goto LABEL_42;
            case 5u:
LABEL_41:
              swift_bridgeObjectRelease();
              v25 = type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0);
LABEL_42:
              v26 = *(int *)(v25 + 20);
              goto LABEL_44;
            case 9u:
LABEL_43:
              swift_bridgeObjectRelease();
              v26 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_44:
              v27 = v8 + v26;
              v28 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v27, v28);
              break;
            default:
              break;
          }
        }
LABEL_45:
        v29 = v8 + *(int *)(v9 + 20);
        v30 = sub_2408E57A4();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v29, v30);
LABEL_46:
        v20 = *(int *)(v7 + 24);
        goto LABEL_77;
      case 4u:
        v17 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48);
        if (!v18(a1, 1, v17))
        {
          v19 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(a1, 1, v19))
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                swift_bridgeObjectRelease();
                break;
              case 4u:
                swift_bridgeObjectRelease();
                v38 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                goto LABEL_59;
              case 5u:
                swift_bridgeObjectRelease();
                v38 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                goto LABEL_59;
              case 9u:
                swift_bridgeObjectRelease();
                v38 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_59:
                v39 = a1 + v38;
                v40 = sub_2408E57A4();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 8))(v39, v40);
                break;
              default:
                break;
            }
          }
          v41 = a1 + *(int *)(v17 + 20);
          v42 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 8))(v41, v42);
        }
        v43 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
        v44 = a1 + *(int *)(v43 + 20);
        if (!v18(v44, 1, v17))
        {
          v45 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 48))(v44, 1, v45))
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                swift_bridgeObjectRelease();
                break;
              case 4u:
                swift_bridgeObjectRelease();
                v51 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                goto LABEL_74;
              case 5u:
                swift_bridgeObjectRelease();
                v51 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                goto LABEL_74;
              case 9u:
                swift_bridgeObjectRelease();
                v51 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_74:
                v52 = v44 + v51;
                v53 = sub_2408E57A4();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 8))(v52, v53);
                break;
              default:
                break;
            }
          }
          v54 = v44 + *(int *)(v17 + 20);
          v55 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 8))(v54, v55);
        }
        v20 = *(int *)(v43 + 24);
        goto LABEL_77;
      case 5u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v20 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0) + 24);
        goto LABEL_77;
      case 6u:
        swift_bridgeObjectRelease();
        updated = type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0);
        goto LABEL_39;
      case 7u:
        swift_bridgeObjectRelease();
        v7 = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
        v8 = a1 + *(int *)(v7 + 20);
        v9 = type metadata accessor for TranscriptProtoASTPickType(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
          goto LABEL_45;
        goto LABEL_46;
      case 8u:
        swift_bridgeObjectRelease();
        updated = type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0);
        goto LABEL_39;
      case 9u:
        swift_bridgeObjectRelease();
        v20 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0) + 28);
        goto LABEL_77;
      case 0xAu:
        swift_bridgeObjectRelease();
        updated = type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0);
        goto LABEL_39;
      case 0xBu:
        swift_bridgeObjectRelease();
        updated = type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0);
        goto LABEL_39;
      case 0xCu:
        swift_bridgeObjectRelease();
        updated = type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0);
        goto LABEL_39;
      case 0xDu:
        swift_bridgeObjectRelease();
        updated = type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0);
        goto LABEL_39;
      case 0xEu:
        swift_bridgeObjectRelease();
        updated = type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0);
        goto LABEL_39;
      case 0xFu:
      case 0x11u:
        v5 = sub_2408E57A4();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
        break;
      case 0x10u:
        swift_bridgeObjectRelease();
        updated = type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0);
LABEL_39:
        v20 = *(int *)(updated + 20);
LABEL_77:
        v56 = a1 + v20;
        v57 = sub_2408E57A4();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 8))(v56, v57);
        break;
      default:
        break;
    }
  }
  v58 = a1 + *(int *)(a2 + 20);
  v59 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 8))(v58, v59);
}

_QWORD *initializeWithCopy for TranscriptProtoASTFlatExpr(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(_QWORD, _QWORD, _QWORD);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(_QWORD *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int (*v39)(_QWORD *, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  void (*v52)(char *, char *, uint64_t);
  uint64_t v53;
  uint64_t v54;
  _BYTE *v55;
  _BYTE *v56;
  uint64_t v57;
  uint64_t v58;
  unsigned int (*v59)(_BYTE *, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  void (*v66)(char *, char *, uint64_t);
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  void (*v72)(char *, char *, uint64_t);
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  void (*v78)(char *, char *, uint64_t);
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  void (*v84)(char *, char *, uint64_t);
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  void (*v89)(char *, char *, uint64_t);
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  void (*v95)(char *, char *, uint64_t);
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  void (*v101)(char *, char *, uint64_t);
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  void (*v107)(char *, char *, uint64_t);
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  int *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  _QWORD *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  _BYTE *v124;
  _BYTE *v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  void (*v137)(char *, char *, uint64_t);
  uint64_t v138;
  uint64_t v139;
  void (*v140)(char *, char *, uint64_t);
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  void (*v144)(char *, char *, uint64_t);
  uint64_t v145;
  char *v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  _QWORD *v170;
  _QWORD *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  char *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  _QWORD *v205;
  _QWORD *v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  char *v218;
  char *v219;
  uint64_t v220;
  uint64_t v221;
  char *v222;
  char *v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  char *v230;
  char *v231;
  uint64_t v232;
  uint64_t v233;
  char *v234;
  char *v235;
  uint64_t v236;
  uint64_t v237;
  char *v238;
  char *v239;
  uint64_t v240;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  void (*v248)(char *, char *, uint64_t);
  void (*v249)(char *, char *, uint64_t);
  void (*v250)(char *, char *, uint64_t);
  void (*v251)(char *, char *, uint64_t);
  void (*v252)(char *, char *, uint64_t);
  void (*v253)(char *, char *, uint64_t);
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  void (*v260)(char *, char *, uint64_t);
  void (*v261)(char *, char *, uint64_t);
  void (*v262)(char *, char *, uint64_t);
  char *v263;
  char *v264;
  char *v265;
  char *v266;
  char *v267;
  char *v268;
  void (*v269)(char *, char *, uint64_t);
  void (*v270)(char *, char *, uint64_t);
  void (*v271)(char *, char *, uint64_t);
  void (*v272)(char *, char *, uint64_t);
  void (*v273)(char *, char *, uint64_t);
  void (*v274)(char *, char *, uint64_t);
  char *v275;
  char *v276;
  char *v277;
  char *v278;
  char *v279;
  char *v280;
  char *v281;
  char *v282;
  char *v283;
  void (*v284)(char *, char *, uint64_t);
  void (*v285)(char *, char *, uint64_t);
  void (*v286)(char *, char *, uint64_t);
  char *v287;
  char *v288;
  char *v289;
  char *v290;
  char *v291;
  char *v292;
  uint64_t v293;
  uint64_t v294;
  char *v295;
  char *v296;
  char *v297;
  char *v298;
  char *v299;
  char *v300;
  char *v301;
  char *v302;
  char *v303;
  char *v304;
  char *v305;
  char *v306;
  unsigned int (*v307)(_QWORD, _QWORD, _QWORD);
  uint64_t v308;
  uint64_t v309;
  char *v310;
  char *v311;
  char *v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  char *v318;
  char *v319;
  char *v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  char *v327;
  uint64_t v328;
  char *v329;
  char *v330;
  char *v331;

  v6 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC20);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v9 = a3;
        v10 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        v11 = *(_QWORD *)(v10 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48))(a2, 1, v10))
        {
          v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              v108 = a2[1];
              *a1 = *a2;
              a1[1] = v108;
              swift_bridgeObjectRetain();
              goto LABEL_52;
            case 4u:
              *a1 = *a2;
              v135 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              v318 = (char *)a2 + v135;
              v329 = (char *)a1 + v135;
              v136 = sub_2408E57A4();
              v137 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v136 - 8) + 16);
              swift_bridgeObjectRetain();
              v137(v329, v318, v136);
              goto LABEL_52;
            case 5u:
              *a1 = *a2;
              v138 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              v319 = (char *)a2 + v138;
              v330 = (char *)a1 + v138;
              v139 = sub_2408E57A4();
              v140 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v139 - 8) + 16);
              swift_bridgeObjectRetain();
              v140(v330, v319, v139);
              goto LABEL_52;
            case 9u:
              *(_DWORD *)a1 = *(_DWORD *)a2;
              v141 = a2[2];
              a1[1] = a2[1];
              a1[2] = v141;
              v142 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              v320 = (char *)a2 + v142;
              v331 = (char *)a1 + v142;
              v143 = sub_2408E57A4();
              v144 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v143 - 8) + 16);
              swift_bridgeObjectRetain();
              v144(v331, v320, v143);
LABEL_52:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(v11 + 64));
              break;
          }
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(a1, 0, 1, v10);
        }
        a3 = v9;
        v145 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValue(0) + 20);
        v146 = (char *)a1 + v145;
        v147 = (char *)a2 + v145;
        v148 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v148 - 8) + 16))(v146, v147, v148);
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        v323 = a3;
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v13 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
        v14 = *(int *)(v13 + 20);
        v15 = (_QWORD *)((char *)a1 + v14);
        v16 = (_QWORD *)((char *)a2 + v14);
        v17 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        v18 = *(_QWORD *)(v17 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
        {
          v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
          memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
        }
        else
        {
          v316 = v18;
          v109 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          v110 = *(_QWORD *)(v109 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v110 + 48))(v16, 1, v109))
          {
            v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
            memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v111 - 8) + 64));
          }
          else
          {
            v309 = v110;
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                v131 = v16[1];
                *v15 = *v16;
                v15[1] = v131;
                swift_bridgeObjectRetain();
                goto LABEL_59;
              case 4u:
                *v15 = *v16;
                v149 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v275 = (char *)v16 + v149;
                v295 = (char *)v15 + v149;
                v245 = sub_2408E57A4();
                v260 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v245 - 8) + 16);
                swift_bridgeObjectRetain();
                v260(v295, v275, v245);
                goto LABEL_59;
              case 5u:
                *v15 = *v16;
                v150 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v276 = (char *)v16 + v150;
                v296 = (char *)v15 + v150;
                v246 = sub_2408E57A4();
                v261 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v246 - 8) + 16);
                swift_bridgeObjectRetain();
                v261(v296, v276, v246);
                goto LABEL_59;
              case 9u:
                *(_DWORD *)v15 = *(_DWORD *)v16;
                v151 = v16[2];
                v15[1] = v16[1];
                v15[2] = v151;
                v152 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v277 = (char *)v16 + v152;
                v297 = (char *)v15 + v152;
                v247 = sub_2408E57A4();
                v262 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v247 - 8) + 16);
                swift_bridgeObjectRetain();
                v262(v297, v277, v247);
LABEL_59:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v15, v16, *(_QWORD *)(v110 + 64));
                break;
            }
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v309 + 56))(v15, 0, 1, v109);
          }
          v153 = *(int *)(v17 + 20);
          v154 = (char *)v15 + v153;
          v155 = (char *)v16 + v153;
          v156 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v156 - 8) + 16))(v154, v155, v156);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v316 + 56))(v15, 0, 1, v17);
        }
        a3 = v323;
        v157 = *(int *)(v13 + 24);
        v158 = (char *)a1 + v157;
        v159 = (char *)a2 + v157;
        v160 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v160 - 8) + 16))(v158, v159, v160);
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        v324 = a3;
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v20 = (int *)type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
        v21 = v20[5];
        v22 = (_QWORD *)((char *)a1 + v21);
        v23 = (_QWORD *)((char *)a2 + v21);
        v24 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        v25 = *(_QWORD *)(v24 - 8);
        v26 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v25 + 48);
        if (v26(v23, 1, v24))
        {
          v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
          memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
        }
        else
        {
          v307 = v26;
          v317 = v25;
          v112 = v20;
          v113 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          v114 = *(_QWORD *)(v113 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v114 + 48))(v23, 1, v113))
          {
            v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
            memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v115 - 8) + 64));
            v20 = v112;
            v26 = v307;
          }
          else
          {
            v293 = v114;
            v20 = v112;
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                v132 = v23[1];
                *v22 = *v23;
                v22[1] = v132;
                swift_bridgeObjectRetain();
                goto LABEL_67;
              case 4u:
                *v22 = *v23;
                v161 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v263 = (char *)v23 + v161;
                v278 = (char *)v22 + v161;
                v242 = sub_2408E57A4();
                v248 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v242 - 8) + 16);
                swift_bridgeObjectRetain();
                v248(v278, v263, v242);
                goto LABEL_67;
              case 5u:
                *v22 = *v23;
                v162 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v264 = (char *)v23 + v162;
                v279 = (char *)v22 + v162;
                v243 = sub_2408E57A4();
                v249 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v243 - 8) + 16);
                swift_bridgeObjectRetain();
                v249(v279, v264, v243);
                goto LABEL_67;
              case 9u:
                *(_DWORD *)v22 = *(_DWORD *)v23;
                v163 = v23[2];
                v22[1] = v23[1];
                v22[2] = v163;
                v164 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v265 = (char *)v23 + v164;
                v280 = (char *)v22 + v164;
                v244 = sub_2408E57A4();
                v250 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v244 - 8) + 16);
                swift_bridgeObjectRetain();
                v250(v280, v265, v244);
LABEL_67:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v22, v23, *(_QWORD *)(v293 + 64));
                v20 = v112;
                break;
            }
            v26 = v307;
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v293 + 56))(v22, 0, 1, v113);
          }
          v165 = *(int *)(v24 + 20);
          v166 = (char *)v22 + v165;
          v167 = (char *)v23 + v165;
          v168 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v168 - 8) + 16))(v166, v167, v168);
          v25 = v317;
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v317 + 56))(v22, 0, 1, v24);
        }
        v169 = v20[6];
        v170 = (_QWORD *)((char *)a1 + v169);
        v171 = (_QWORD *)((char *)a2 + v169);
        if (v26((char *)a2 + v169, 1, v24))
        {
          v172 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
          memcpy(v170, v171, *(_QWORD *)(*(_QWORD *)(v172 - 8) + 64));
          a3 = v324;
        }
        else
        {
          v321 = v25;
          v173 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          v174 = *(_QWORD *)(v173 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v174 + 48))(v171, 1, v173))
          {
            v175 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
            memcpy(v170, v171, *(_QWORD *)(*(_QWORD *)(v175 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                v176 = v171[1];
                *v170 = *v171;
                v170[1] = v176;
                swift_bridgeObjectRetain();
                goto LABEL_101;
              case 4u:
                *v170 = *v171;
                v213 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v287 = (char *)v171 + v213;
                v301 = (char *)v170 + v213;
                v254 = sub_2408E57A4();
                v269 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v254 - 8) + 16);
                swift_bridgeObjectRetain();
                v269(v301, v287, v254);
                goto LABEL_101;
              case 5u:
                *v170 = *v171;
                v214 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v288 = (char *)v171 + v214;
                v302 = (char *)v170 + v214;
                v255 = sub_2408E57A4();
                v270 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v255 - 8) + 16);
                swift_bridgeObjectRetain();
                v270(v302, v288, v255);
                goto LABEL_101;
              case 9u:
                *(_DWORD *)v170 = *(_DWORD *)v171;
                v215 = v171[2];
                v170[1] = v171[1];
                v170[2] = v215;
                v216 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v289 = (char *)v171 + v216;
                v303 = (char *)v170 + v216;
                v256 = sub_2408E57A4();
                v271 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v256 - 8) + 16);
                swift_bridgeObjectRetain();
                v271(v303, v289, v256);
LABEL_101:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v170, v171, *(_QWORD *)(v174 + 64));
                break;
            }
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v174 + 56))(v170, 0, 1, v173);
          }
          a3 = v324;
          v217 = *(int *)(v24 + 20);
          v218 = (char *)v170 + v217;
          v219 = (char *)v171 + v217;
          v220 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v220 - 8) + 16))(v218, v219, v220);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v321 + 56))(v170, 0, 1, v24);
        }
        v221 = v20[7];
        v222 = (char *)a1 + v221;
        v223 = (char *)a2 + v221;
        v224 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v224 - 8) + 16))(v222, v223, v224);
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        v325 = a3;
        v28 = a2[1];
        *a1 = *a2;
        a1[1] = v28;
        v314 = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
        v29 = *(int *)(v314 + 20);
        v30 = (_QWORD *)((char *)a1 + v29);
        v31 = (_QWORD *)((char *)a2 + v29);
        v32 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        v33 = *(_QWORD *)(v32 - 8);
        v34 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v33 + 48);
        swift_bridgeObjectRetain();
        if (v34(v31, 1, v32))
        {
          v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
          memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
          v36 = v314;
          a3 = v325;
        }
        else
        {
          v308 = v33;
          v116 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          v117 = *(_QWORD *)(v116 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v117 + 48))(v31, 1, v116))
          {
            v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
            v119 = v30;
            memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v118 - 8) + 64));
            a3 = v325;
          }
          else
          {
            v294 = v117;
            a3 = v325;
            v119 = v30;
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                v133 = v31[1];
                *v30 = *v31;
                v30[1] = v133;
                swift_bridgeObjectRetain();
                goto LABEL_80;
              case 4u:
                *v30 = *v31;
                v177 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v266 = (char *)v31 + v177;
                v281 = (char *)v30 + v177;
                v178 = sub_2408E57A4();
                v251 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v178 - 8) + 16);
                swift_bridgeObjectRetain();
                v251(v281, v266, v178);
                a3 = v325;
                goto LABEL_80;
              case 5u:
                *v30 = *v31;
                v179 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v267 = (char *)v31 + v179;
                v282 = (char *)v30 + v179;
                v180 = sub_2408E57A4();
                v252 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v180 - 8) + 16);
                swift_bridgeObjectRetain();
                v252(v282, v267, v180);
                a3 = v325;
                goto LABEL_80;
              case 9u:
                *(_DWORD *)v30 = *(_DWORD *)v31;
                v181 = v31[2];
                v119[1] = v31[1];
                v119[2] = v181;
                v182 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v268 = (char *)v31 + v182;
                v283 = (char *)v119 + v182;
                v183 = sub_2408E57A4();
                v253 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v183 - 8) + 16);
                swift_bridgeObjectRetain();
                v253(v283, v268, v183);
                a3 = v325;
LABEL_80:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v30, v31, *(_QWORD *)(v294 + 64));
                break;
            }
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v294 + 56))(v119, 0, 1, v116);
          }
          v36 = v314;
          v184 = *(int *)(v32 + 20);
          v185 = (char *)v119 + v184;
          v186 = (char *)v31 + v184;
          v187 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v187 - 8) + 16))(v185, v186, v187);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v308 + 56))(v119, 0, 1, v32);
        }
        v188 = *(int *)(v36 + 24);
        v189 = (char *)a1 + v188;
        v190 = (char *)a2 + v188;
        v191 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v191 - 8) + 16))(v189, v190, v191);
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        v326 = a3;
        v37 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        v38 = *(_QWORD *)(v37 - 8);
        v39 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v38 + 48);
        if (v39(a2, 1, v37))
        {
          v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
        }
        else
        {
          v120 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          v121 = *(_QWORD *)(v120 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v121 + 48))(a2, 1, v120))
          {
            v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v122 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                v134 = a2[1];
                *a1 = *a2;
                a1[1] = v134;
                swift_bridgeObjectRetain();
                goto LABEL_88;
              case 4u:
                *a1 = *a2;
                v192 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v298 = (char *)a2 + v192;
                v310 = (char *)a1 + v192;
                v193 = sub_2408E57A4();
                v284 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v193 - 8) + 16);
                swift_bridgeObjectRetain();
                v284(v310, v298, v193);
                goto LABEL_88;
              case 5u:
                *a1 = *a2;
                v194 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v299 = (char *)a2 + v194;
                v311 = (char *)a1 + v194;
                v195 = sub_2408E57A4();
                v285 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v195 - 8) + 16);
                swift_bridgeObjectRetain();
                v285(v311, v299, v195);
                goto LABEL_88;
              case 9u:
                *(_DWORD *)a1 = *(_DWORD *)a2;
                v196 = a2[2];
                a1[1] = a2[1];
                a1[2] = v196;
                v197 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v300 = (char *)a2 + v197;
                v312 = (char *)a1 + v197;
                v198 = sub_2408E57A4();
                v286 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v198 - 8) + 16);
                swift_bridgeObjectRetain();
                v286(v312, v300, v198);
LABEL_88:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(a1, a2, *(_QWORD *)(v121 + 64));
                break;
            }
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v121 + 56))(a1, 0, 1, v120);
          }
          v199 = *(int *)(v37 + 20);
          v200 = (char *)a1 + v199;
          v201 = (char *)a2 + v199;
          v202 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v202 - 8) + 16))(v200, v201, v202);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v38 + 56))(a1, 0, 1, v37);
        }
        v203 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
        v204 = *(int *)(v203 + 20);
        v205 = (_QWORD *)((char *)a1 + v204);
        v206 = (_QWORD *)((char *)a2 + v204);
        if (v39((_QWORD *)((char *)a2 + v204), 1, v37))
        {
          v207 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
          memcpy(v205, v206, *(_QWORD *)(*(_QWORD *)(v207 - 8) + 64));
        }
        else
        {
          v322 = v38;
          v208 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          v209 = *(_QWORD *)(v208 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v209 + 48))(v206, 1, v208))
          {
            v210 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
            memcpy(v205, v206, *(_QWORD *)(*(_QWORD *)(v210 - 8) + 64));
            v211 = v322;
          }
          else
          {
            v313 = v209;
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                v212 = v206[1];
                *v205 = *v206;
                v205[1] = v212;
                swift_bridgeObjectRetain();
                goto LABEL_109;
              case 4u:
                *v205 = *v206;
                v225 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v290 = (char *)v206 + v225;
                v304 = (char *)v205 + v225;
                v257 = sub_2408E57A4();
                v272 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v257 - 8) + 16);
                swift_bridgeObjectRetain();
                v272(v304, v290, v257);
                goto LABEL_109;
              case 5u:
                *v205 = *v206;
                v226 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v291 = (char *)v206 + v226;
                v305 = (char *)v205 + v226;
                v258 = sub_2408E57A4();
                v273 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v258 - 8) + 16);
                swift_bridgeObjectRetain();
                v273(v305, v291, v258);
                goto LABEL_109;
              case 9u:
                *(_DWORD *)v205 = *(_DWORD *)v206;
                v227 = v206[2];
                v205[1] = v206[1];
                v205[2] = v227;
                v228 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v292 = (char *)v206 + v228;
                v306 = (char *)v205 + v228;
                v259 = sub_2408E57A4();
                v274 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v259 - 8) + 16);
                swift_bridgeObjectRetain();
                v274(v306, v292, v259);
LABEL_109:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v205, v206, *(_QWORD *)(v209 + 64));
                break;
            }
            v211 = v322;
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v313 + 56))(v205, 0, 1, v208);
          }
          v229 = *(int *)(v37 + 20);
          v230 = (char *)v205 + v229;
          v231 = (char *)v206 + v229;
          v232 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v232 - 8) + 16))(v230, v231, v232);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v211 + 56))(v205, 0, 1, v37);
        }
        v233 = *(int *)(v203 + 24);
        v234 = (char *)a1 + v233;
        v235 = (char *)a2 + v233;
        v236 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v236 - 8) + 16))(v234, v235, v236);
        swift_storeEnumTagMultiPayload();
        a3 = v326;
        break;
      case 5u:
        v41 = a2[1];
        *a1 = *a2;
        a1[1] = v41;
        a1[2] = a2[2];
        v42 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0) + 24);
        v327 = (char *)a1 + v42;
        v43 = (char *)a2 + v42;
        v44 = sub_2408E57A4();
        v45 = v7;
        v46 = a3;
        v47 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v47(v327, v43, v44);
        a3 = v46;
        v7 = v45;
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        *a1 = *a2;
        v48 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0) + 20);
        v49 = (char *)a1 + v48;
        v50 = (char *)a2 + v48;
        v51 = sub_2408E57A4();
        v52 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16);
        swift_bridgeObjectRetain();
        v52(v49, v50, v51);
        swift_storeEnumTagMultiPayload();
        break;
      case 7u:
        v328 = a3;
        v53 = a2[1];
        *a1 = *a2;
        a1[1] = v53;
        v315 = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
        v54 = *(int *)(v315 + 20);
        v55 = (char *)a1 + v54;
        v56 = (char *)a2 + v54;
        v57 = type metadata accessor for TranscriptProtoASTPickType(0);
        v58 = *(_QWORD *)(v57 - 8);
        v59 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v58 + 48);
        swift_bridgeObjectRetain();
        if (v59(v56, 1, v57))
        {
          v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D08);
          memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
        }
        else
        {
          *(_QWORD *)v55 = *(_QWORD *)v56;
          v55[8] = v56[8];
          v123 = *(int *)(v57 + 20);
          v124 = &v55[v123];
          v125 = &v56[v123];
          v126 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v126 - 8) + 16))(v124, v125, v126);
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
        }
        a3 = v328;
        v127 = *(int *)(v315 + 24);
        v128 = (char *)a1 + v127;
        v129 = (char *)a2 + v127;
        v130 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v130 - 8) + 16))(v128, v129, v130);
        swift_storeEnumTagMultiPayload();
        break;
      case 8u:
        v61 = a2[1];
        *a1 = *a2;
        a1[1] = v61;
        v62 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0) + 20);
        v63 = (char *)a1 + v62;
        v64 = (char *)a2 + v62;
        v65 = sub_2408E57A4();
        v66 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 16);
        swift_bridgeObjectRetain();
        v66(v63, v64, v65);
        swift_storeEnumTagMultiPayload();
        break;
      case 9u:
        v67 = a2[1];
        *a1 = *a2;
        a1[1] = v67;
        *((_WORD *)a1 + 8) = *((_WORD *)a2 + 8);
        v68 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0) + 28);
        v69 = (char *)a1 + v68;
        v70 = (char *)a2 + v68;
        v71 = sub_2408E57A4();
        v72 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v71 - 8) + 16);
        swift_bridgeObjectRetain();
        v72(v69, v70, v71);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xAu:
        v73 = a2[1];
        *a1 = *a2;
        a1[1] = v73;
        v74 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0) + 20);
        v75 = (char *)a1 + v74;
        v76 = (char *)a2 + v74;
        v77 = sub_2408E57A4();
        v78 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v77 - 8) + 16);
        swift_bridgeObjectRetain();
        v78(v75, v76, v77);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xBu:
        v79 = a2[1];
        *a1 = *a2;
        a1[1] = v79;
        v80 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0) + 20);
        v81 = (char *)a1 + v80;
        v82 = (char *)a2 + v80;
        v83 = sub_2408E57A4();
        v84 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v83 - 8) + 16);
        swift_bridgeObjectRetain();
        v84(v81, v82, v83);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xCu:
        *a1 = *a2;
        v85 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0) + 20);
        v86 = (char *)a1 + v85;
        v87 = (char *)a2 + v85;
        v88 = sub_2408E57A4();
        v89 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v88 - 8) + 16);
        swift_bridgeObjectRetain();
        v89(v86, v87, v88);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xDu:
        v90 = a2[1];
        *a1 = *a2;
        a1[1] = v90;
        v91 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0) + 20);
        v92 = (char *)a1 + v91;
        v93 = (char *)a2 + v91;
        v94 = sub_2408E57A4();
        v95 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v94 - 8) + 16);
        swift_bridgeObjectRetain();
        v95(v92, v93, v94);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xEu:
        v96 = a2[1];
        *a1 = *a2;
        a1[1] = v96;
        v97 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0) + 20);
        v98 = (char *)a1 + v97;
        v99 = (char *)a2 + v97;
        v100 = sub_2408E57A4();
        v101 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v100 - 8) + 16);
        swift_bridgeObjectRetain();
        v101(v98, v99, v100);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xFu:
      case 0x11u:
        v102 = sub_2408E57A4();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v102 - 8) + 16))(a1, a2, v102);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x10u:
        *a1 = *a2;
        v103 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0) + 20);
        v104 = (char *)a1 + v103;
        v105 = (char *)a2 + v103;
        v106 = sub_2408E57A4();
        v107 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v106 - 8) + 16);
        swift_bridgeObjectRetain();
        v107(v104, v105, v106);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v7 + 64));
        break;
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v237 = *(int *)(a3 + 20);
  v238 = (char *)a1 + v237;
  v239 = (char *)a2 + v237;
  v240 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v240 - 8) + 16))(v238, v239, v240);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoASTFlatExpr(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  size_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(_QWORD, _QWORD, _QWORD);
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int (*v39)(_QWORD *, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int (*v44)(_QWORD *, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, char *, uint64_t);
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  void (*v55)(char *, char *, uint64_t);
  uint64_t v56;
  _BYTE *v57;
  _BYTE *v58;
  uint64_t v59;
  uint64_t v60;
  unsigned int (*v61)(_BYTE *, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  void (*v67)(char *, char *, uint64_t);
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  void (*v72)(char *, char *, uint64_t);
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  void (*v77)(char *, char *, uint64_t);
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  void (*v82)(char *, char *, uint64_t);
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  void (*v87)(char *, char *, uint64_t);
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  void (*v92)(char *, char *, uint64_t);
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  void (*v97)(char *, char *, uint64_t);
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  void (*v103)(char *, char *, uint64_t);
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  _QWORD *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  int *v111;
  uint64_t v112;
  _QWORD *v113;
  _QWORD *v114;
  uint64_t v115;
  uint64_t v116;
  unsigned int (*v117)(_QWORD, _QWORD, _QWORD);
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  _QWORD *v122;
  uint64_t v123;
  uint64_t v124;
  unsigned int (*v125)(_QWORD *, uint64_t, uint64_t);
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unsigned int (*v129)(_QWORD *, uint64_t, uint64_t);
  uint64_t v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  void (*v135)(char *, char *, uint64_t);
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  void (*v140)(char *, char *, uint64_t);
  uint64_t v141;
  _BYTE *v142;
  _BYTE *v143;
  uint64_t v144;
  uint64_t v145;
  unsigned int (*v146)(_BYTE *, uint64_t, uint64_t);
  uint64_t v147;
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t v151;
  void (*v152)(char *, char *, uint64_t);
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  void (*v157)(char *, char *, uint64_t);
  uint64_t v158;
  char *v159;
  char *v160;
  uint64_t v161;
  void (*v162)(char *, char *, uint64_t);
  uint64_t v163;
  char *v164;
  char *v165;
  uint64_t v166;
  void (*v167)(char *, char *, uint64_t);
  uint64_t v168;
  char *v169;
  char *v170;
  uint64_t v171;
  void (*v172)(char *, char *, uint64_t);
  uint64_t v173;
  char *v174;
  char *v175;
  uint64_t v176;
  void (*v177)(char *, char *, uint64_t);
  uint64_t v178;
  char *v179;
  char *v180;
  uint64_t v181;
  void (*v182)(char *, char *, uint64_t);
  uint64_t v183;
  uint64_t v184;
  char *v185;
  char *v186;
  uint64_t v187;
  void (*v188)(char *, char *, uint64_t);
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  int *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  _QWORD *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  _BYTE *v206;
  _BYTE *v207;
  uint64_t v208;
  uint64_t v209;
  char *v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  int *v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  _BYTE *v229;
  _BYTE *v230;
  uint64_t v231;
  uint64_t v232;
  char *v233;
  char *v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  void (*v239)(char *, char *, uint64_t);
  uint64_t v240;
  uint64_t v241;
  void (*v242)(char *, char *, uint64_t);
  uint64_t v243;
  uint64_t v244;
  void (*v245)(char *, char *, uint64_t);
  uint64_t v246;
  char *v247;
  char *v248;
  uint64_t v249;
  uint64_t v250;
  char *v251;
  uint64_t v252;
  uint64_t v253;
  void (*v254)(char *, char *, uint64_t);
  uint64_t v255;
  char *v256;
  uint64_t v257;
  uint64_t v258;
  void (*v259)(char *, char *, uint64_t);
  uint64_t v260;
  char *v261;
  uint64_t v262;
  uint64_t v263;
  void (*v264)(char *, char *, uint64_t);
  uint64_t v265;
  char *v266;
  char *v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  char *v273;
  char *v274;
  uint64_t v275;
  uint64_t v276;
  char *v277;
  char *v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  char *v284;
  char *v285;
  uint64_t v286;
  uint64_t v287;
  _QWORD *v288;
  _QWORD *v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  char *v301;
  char *v302;
  uint64_t v303;
  uint64_t v304;
  char *v305;
  char *v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  char *v315;
  char *v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  _QWORD *v320;
  _QWORD *v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  char *v331;
  char *v332;
  uint64_t v333;
  uint64_t v334;
  char *v335;
  char *v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  char *v342;
  char *v343;
  uint64_t v344;
  uint64_t v345;
  char *v346;
  char *v347;
  uint64_t v348;
  uint64_t v349;
  char *v350;
  char *v351;
  uint64_t v352;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  char *v358;
  char *v359;
  uint64_t v360;
  uint64_t v361;
  char *v362;
  char *v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  char *v372;
  char *v373;
  uint64_t v374;
  uint64_t v375;
  _QWORD *v376;
  _QWORD *v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  char *v386;
  char *v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  char *v399;
  char *v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  _QWORD *v404;
  _QWORD *v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  char *v414;
  char *v415;
  uint64_t v416;
  uint64_t v417;
  char *v418;
  char *v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  char *v425;
  char *v426;
  uint64_t v427;
  uint64_t v428;
  char *v429;
  char *v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  void (*v438)(char *, char *, uint64_t);
  void (*v439)(char *, char *, uint64_t);
  void (*v440)(char *, char *, uint64_t);
  void (*v441)(char *, char *, uint64_t);
  void (*v442)(char *, char *, uint64_t);
  void (*v443)(char *, char *, uint64_t);
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;
  void (*v450)(char *, char *, uint64_t);
  void (*v451)(char *, char *, uint64_t);
  void (*v452)(char *, char *, uint64_t);
  void (*v453)(char *, char *, uint64_t);
  void (*v454)(char *, char *, uint64_t);
  void (*v455)(char *, char *, uint64_t);
  char *v456;
  char *v457;
  char *v458;
  char *v459;
  char *v460;
  char *v461;
  void (*v462)(char *, char *, uint64_t);
  void (*v463)(char *, char *, uint64_t);
  void (*v464)(char *, char *, uint64_t);
  void (*v465)(char *, char *, uint64_t);
  void (*v466)(char *, char *, uint64_t);
  void (*v467)(char *, char *, uint64_t);
  uint64_t v468;
  uint64_t v469;
  uint64_t v470;
  char *v471;
  char *v472;
  char *v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t v478;
  uint64_t v479;
  uint64_t v480;
  uint64_t v481;
  uint64_t v482;
  char *v483;
  char *v484;
  char *v485;
  char *v486;
  char *v487;
  char *v488;
  char *v489;
  char *v490;
  char *v491;
  void (*v492)(char *, char *, uint64_t);
  void (*v493)(char *, char *, uint64_t);
  void (*v494)(char *, char *, uint64_t);
  char *v495;
  char *v496;
  char *v497;
  char *v498;
  char *v499;
  char *v500;
  void (*v501)(char *, char *, uint64_t);
  void (*v502)(char *, char *, uint64_t);
  void (*v503)(char *, char *, uint64_t);
  char *v504;
  char *v505;
  char *v506;
  void (*v507)(char *, char *, uint64_t);
  void (*v508)(char *, char *, uint64_t);
  void (*v509)(char *, char *, uint64_t);
  void (*v510)(char *, char *, uint64_t);
  void (*v511)(char *, char *, uint64_t);
  void (*v512)(char *, char *, uint64_t);
  void (*v513)(char *, char *, uint64_t);
  void (*v514)(char *, char *, uint64_t);
  void (*v515)(char *, char *, uint64_t);
  uint64_t v516;
  uint64_t v517;
  uint64_t v518;
  char *v519;
  char *v520;
  char *v521;
  char *v522;
  char *v523;
  char *v524;
  char *v525;
  char *v526;
  char *v527;
  char *v528;
  char *v529;
  char *v530;
  char *v531;
  char *v532;
  char *v533;
  char *v534;
  char *v535;
  char *v536;
  void (*v537)(char *, char *, uint64_t);
  void (*v538)(char *, char *, uint64_t);
  void (*v539)(char *, char *, uint64_t);
  char *v540;
  char *v541;
  char *v542;
  char *v543;
  char *v544;
  char *v545;
  unsigned int (*v546)(_QWORD, _QWORD, _QWORD);
  uint64_t v547;
  uint64_t v548;
  uint64_t v549;
  char *v550;
  char *v551;
  char *v552;
  uint64_t v553;
  char *v554;
  char *v555;
  char *v556;
  char *v557;
  char *v558;
  char *v559;
  char *v560;
  char *v561;
  char *v562;
  char *v563;
  char *v564;
  char *v565;
  char *v566;
  char *v567;
  char *v568;
  uint64_t v569;
  uint64_t v570;
  uint64_t v571;
  uint64_t v572;
  unsigned int (*v573)(_QWORD, _QWORD, _QWORD);
  char *v574;
  char *v575;
  char *v576;
  uint64_t v577;
  uint64_t v578;
  char *v579;
  char *v580;
  char *v581;
  uint64_t v582;
  uint64_t v583;
  uint64_t v584;
  uint64_t v585;
  char *v586;
  uint64_t v587;
  uint64_t v588;
  uint64_t v589;
  uint64_t v590;
  char *v591;
  char *v592;
  char *v593;
  char *v594;
  char *v595;
  char *v596;
  uint64_t v597;
  uint64_t v598;
  uint64_t v599;
  uint64_t v600;

  v6 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v11 = a3;
          v12 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          v13 = *(_QWORD *)(v12 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v13 + 48))(a2, 1, v12))
          {
            v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                *a1 = *a2;
                a1[1] = a2[1];
                swift_bridgeObjectRetain();
                goto LABEL_102;
              case 4u:
                *a1 = *a2;
                v237 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v574 = (char *)a2 + v237;
                v591 = (char *)a1 + v237;
                v238 = sub_2408E57A4();
                v239 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v238 - 8) + 16);
                swift_bridgeObjectRetain();
                v239(v591, v574, v238);
                goto LABEL_102;
              case 5u:
                *a1 = *a2;
                v240 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v575 = (char *)a2 + v240;
                v592 = (char *)a1 + v240;
                v241 = sub_2408E57A4();
                v242 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v241 - 8) + 16);
                swift_bridgeObjectRetain();
                v242(v592, v575, v241);
                goto LABEL_102;
              case 9u:
                *(_DWORD *)a1 = *(_DWORD *)a2;
                a1[1] = a2[1];
                a1[2] = a2[2];
                v243 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v576 = (char *)a2 + v243;
                v593 = (char *)a1 + v243;
                v244 = sub_2408E57A4();
                v245 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v244 - 8) + 16);
                swift_bridgeObjectRetain();
                v245(v593, v576, v244);
LABEL_102:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(a1, a2, *(_QWORD *)(v13 + 64));
                break;
            }
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(a1, 0, 1, v12);
          }
          a3 = v11;
          v246 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValue(0) + 20);
          v247 = (char *)a1 + v246;
          v248 = (char *)a2 + v246;
          v249 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v249 - 8) + 16))(v247, v248, v249);
          swift_storeEnumTagMultiPayload();
          break;
        case 1u:
          v582 = a3;
          *(_BYTE *)a1 = *(_BYTE *)a2;
          v19 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
          v20 = *(int *)(v19 + 20);
          v21 = (_QWORD *)((char *)a1 + v20);
          v22 = (_QWORD *)((char *)a2 + v20);
          v23 = type metadata accessor for TranscriptProtoASTFlatValue(0);
          v24 = *(_QWORD *)(v23 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
          {
            v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
            memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
          }
          else
          {
            v571 = v19;
            v189 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            v190 = *(_QWORD *)(v189 - 8);
            if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v190 + 48))(v22, 1, v189))
            {
              v191 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
              memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v191 - 8) + 64));
              v192 = v24;
            }
            else
            {
              v548 = v190;
              v192 = v24;
              switch(swift_getEnumCaseMultiPayload())
              {
                case 3u:
                case 6u:
                case 7u:
                case 8u:
                  *v21 = *v22;
                  v21[1] = v22[1];
                  swift_bridgeObjectRetain();
                  goto LABEL_116;
                case 4u:
                  *v21 = *v22;
                  v269 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                  v483 = (char *)v22 + v269;
                  v519 = (char *)v21 + v269;
                  v435 = sub_2408E57A4();
                  v453 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v435 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v453(v519, v483, v435);
                  goto LABEL_116;
                case 5u:
                  *v21 = *v22;
                  v270 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                  v484 = (char *)v22 + v270;
                  v520 = (char *)v21 + v270;
                  v436 = sub_2408E57A4();
                  v454 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v436 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v454(v520, v484, v436);
                  goto LABEL_116;
                case 9u:
                  *(_DWORD *)v21 = *(_DWORD *)v22;
                  v21[1] = v22[1];
                  v21[2] = v22[2];
                  v271 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                  v485 = (char *)v22 + v271;
                  v521 = (char *)v21 + v271;
                  v437 = sub_2408E57A4();
                  v455 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v437 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v455(v521, v485, v437);
LABEL_116:
                  swift_storeEnumTagMultiPayload();
                  break;
                default:
                  memcpy(v21, v22, *(_QWORD *)(v548 + 64));
                  v192 = v24;
                  break;
              }
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v548 + 56))(v21, 0, 1, v189);
            }
            v272 = *(int *)(v23 + 20);
            v273 = (char *)v21 + v272;
            v274 = (char *)v22 + v272;
            v275 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v275 - 8) + 16))(v273, v274, v275);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v192 + 56))(v21, 0, 1, v23);
            v19 = v571;
            a3 = v582;
          }
          v276 = *(int *)(v19 + 24);
          v277 = (char *)a1 + v276;
          v278 = (char *)a2 + v276;
          v279 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v279 - 8) + 16))(v277, v278, v279);
          swift_storeEnumTagMultiPayload();
          break;
        case 2u:
          v583 = a3;
          *(_BYTE *)a1 = *(_BYTE *)a2;
          v26 = (int *)type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
          v27 = v26[5];
          v28 = (_QWORD *)((char *)a1 + v27);
          v29 = (_QWORD *)((char *)a2 + v27);
          v30 = type metadata accessor for TranscriptProtoASTFlatValue(0);
          v31 = *(_QWORD *)(v30 - 8);
          v32 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v31 + 48);
          if (v32(v29, 1, v30))
          {
            v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
            memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
          }
          else
          {
            v546 = v32;
            v572 = v31;
            v193 = v26;
            v194 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            v195 = *(_QWORD *)(v194 - 8);
            if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v195 + 48))(v29, 1, v194))
            {
              v196 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
              memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v196 - 8) + 64));
              v26 = v193;
              v32 = v546;
            }
            else
            {
              v516 = v195;
              v26 = v193;
              switch(swift_getEnumCaseMultiPayload())
              {
                case 3u:
                case 6u:
                case 7u:
                case 8u:
                  *v28 = *v29;
                  v28[1] = v29[1];
                  swift_bridgeObjectRetain();
                  goto LABEL_124;
                case 4u:
                  *v28 = *v29;
                  v280 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                  v456 = (char *)v29 + v280;
                  v486 = (char *)v28 + v280;
                  v432 = sub_2408E57A4();
                  v438 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v432 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v438(v486, v456, v432);
                  goto LABEL_124;
                case 5u:
                  *v28 = *v29;
                  v281 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                  v457 = (char *)v29 + v281;
                  v487 = (char *)v28 + v281;
                  v433 = sub_2408E57A4();
                  v439 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v433 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v439(v487, v457, v433);
                  goto LABEL_124;
                case 9u:
                  *(_DWORD *)v28 = *(_DWORD *)v29;
                  v28[1] = v29[1];
                  v28[2] = v29[2];
                  v282 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                  v458 = (char *)v29 + v282;
                  v488 = (char *)v28 + v282;
                  v434 = sub_2408E57A4();
                  v440 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v434 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v440(v488, v458, v434);
LABEL_124:
                  swift_storeEnumTagMultiPayload();
                  break;
                default:
                  memcpy(v28, v29, *(_QWORD *)(v516 + 64));
                  v26 = v193;
                  break;
              }
              v32 = v546;
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v516 + 56))(v28, 0, 1, v194);
            }
            v283 = *(int *)(v30 + 20);
            v284 = (char *)v28 + v283;
            v285 = (char *)v29 + v283;
            v286 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v286 - 8) + 16))(v284, v285, v286);
            v31 = v572;
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v572 + 56))(v28, 0, 1, v30);
          }
          v287 = v26[6];
          v288 = (_QWORD *)((char *)a1 + v287);
          v289 = (_QWORD *)((char *)a2 + v287);
          if (v32((char *)a2 + v287, 1, v30))
          {
            v290 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
            memcpy(v288, v289, *(_QWORD *)(*(_QWORD *)(v290 - 8) + 64));
            a3 = v583;
          }
          else
          {
            v577 = v31;
            v291 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            v292 = *(_QWORD *)(v291 - 8);
            if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v292 + 48))(v289, 1, v291))
            {
              v293 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
              memcpy(v288, v289, *(_QWORD *)(*(_QWORD *)(v293 - 8) + 64));
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload())
              {
                case 3u:
                case 6u:
                case 7u:
                case 8u:
                  *v288 = *v289;
                  v288[1] = v289[1];
                  swift_bridgeObjectRetain();
                  goto LABEL_158;
                case 4u:
                  *v288 = *v289;
                  v327 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                  v495 = (char *)v289 + v327;
                  v525 = (char *)v288 + v327;
                  v444 = sub_2408E57A4();
                  v462 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v444 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v462(v525, v495, v444);
                  goto LABEL_158;
                case 5u:
                  *v288 = *v289;
                  v328 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                  v496 = (char *)v289 + v328;
                  v526 = (char *)v288 + v328;
                  v445 = sub_2408E57A4();
                  v463 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v445 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v463(v526, v496, v445);
                  goto LABEL_158;
                case 9u:
                  *(_DWORD *)v288 = *(_DWORD *)v289;
                  v288[1] = v289[1];
                  v288[2] = v289[2];
                  v329 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                  v497 = (char *)v289 + v329;
                  v527 = (char *)v288 + v329;
                  v446 = sub_2408E57A4();
                  v464 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v446 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v464(v527, v497, v446);
LABEL_158:
                  swift_storeEnumTagMultiPayload();
                  break;
                default:
                  memcpy(v288, v289, *(_QWORD *)(v292 + 64));
                  break;
              }
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v292 + 56))(v288, 0, 1, v291);
            }
            a3 = v583;
            v330 = *(int *)(v30 + 20);
            v331 = (char *)v288 + v330;
            v332 = (char *)v289 + v330;
            v333 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v333 - 8) + 16))(v331, v332, v333);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v577 + 56))(v288, 0, 1, v30);
          }
          v334 = v26[7];
          v335 = (char *)a1 + v334;
          v336 = (char *)a2 + v334;
          v337 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v337 - 8) + 16))(v335, v336, v337);
          swift_storeEnumTagMultiPayload();
          break;
        case 3u:
          v584 = a3;
          *a1 = *a2;
          a1[1] = a2[1];
          v569 = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
          v34 = *(int *)(v569 + 20);
          v35 = (_QWORD *)((char *)a1 + v34);
          v36 = (_QWORD *)((char *)a2 + v34);
          v37 = type metadata accessor for TranscriptProtoASTFlatValue(0);
          v38 = *(_QWORD *)(v37 - 8);
          v39 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v38 + 48);
          swift_bridgeObjectRetain();
          if (v39(v36, 1, v37))
          {
            v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
            memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
            v41 = v569;
            a3 = v584;
          }
          else
          {
            v547 = v38;
            v197 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            v198 = *(_QWORD *)(v197 - 8);
            if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v198 + 48))(v36, 1, v197))
            {
              v199 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
              v200 = v35;
              memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v199 - 8) + 64));
              a3 = v584;
            }
            else
            {
              v517 = v198;
              a3 = v584;
              v200 = v35;
              switch(swift_getEnumCaseMultiPayload())
              {
                case 3u:
                case 6u:
                case 7u:
                case 8u:
                  *v35 = *v36;
                  v35[1] = v36[1];
                  swift_bridgeObjectRetain();
                  goto LABEL_137;
                case 4u:
                  *v35 = *v36;
                  v294 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                  v459 = (char *)v36 + v294;
                  v489 = (char *)v35 + v294;
                  v295 = sub_2408E57A4();
                  v441 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v295 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v441(v489, v459, v295);
                  a3 = v584;
                  goto LABEL_137;
                case 5u:
                  *v35 = *v36;
                  v296 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                  v460 = (char *)v36 + v296;
                  v490 = (char *)v35 + v296;
                  v297 = sub_2408E57A4();
                  v442 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v297 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v442(v490, v460, v297);
                  a3 = v584;
                  goto LABEL_137;
                case 9u:
                  *(_DWORD *)v35 = *(_DWORD *)v36;
                  v35[1] = v36[1];
                  v35[2] = v36[2];
                  v298 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                  v461 = (char *)v36 + v298;
                  v491 = (char *)v35 + v298;
                  v299 = sub_2408E57A4();
                  v443 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v299 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v443(v491, v461, v299);
                  a3 = v584;
LABEL_137:
                  swift_storeEnumTagMultiPayload();
                  break;
                default:
                  memcpy(v35, v36, *(_QWORD *)(v517 + 64));
                  break;
              }
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v517 + 56))(v35, 0, 1, v197);
            }
            v41 = v569;
            v300 = *(int *)(v37 + 20);
            v301 = (char *)v200 + v300;
            v302 = (char *)v36 + v300;
            v303 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v303 - 8) + 16))(v301, v302, v303);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v547 + 56))(v200, 0, 1, v37);
          }
          v304 = *(int *)(v41 + 24);
          v305 = (char *)a1 + v304;
          v306 = (char *)a2 + v304;
          v307 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v307 - 8) + 16))(v305, v306, v307);
          swift_storeEnumTagMultiPayload();
          break;
        case 4u:
          v585 = a3;
          v42 = type metadata accessor for TranscriptProtoASTFlatValue(0);
          v43 = *(_QWORD *)(v42 - 8);
          v44 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v43 + 48);
          if (v44(a2, 1, v42))
          {
            v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
          }
          else
          {
            v201 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            v202 = *(_QWORD *)(v201 - 8);
            if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v202 + 48))(a2, 1, v201))
            {
              v203 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v203 - 8) + 64));
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload())
              {
                case 3u:
                case 6u:
                case 7u:
                case 8u:
                  *a1 = *a2;
                  a1[1] = a2[1];
                  swift_bridgeObjectRetain();
                  goto LABEL_145;
                case 4u:
                  *a1 = *a2;
                  v308 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                  v522 = (char *)a2 + v308;
                  v550 = (char *)a1 + v308;
                  v309 = sub_2408E57A4();
                  v492 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v309 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v492(v550, v522, v309);
                  goto LABEL_145;
                case 5u:
                  *a1 = *a2;
                  v310 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                  v523 = (char *)a2 + v310;
                  v551 = (char *)a1 + v310;
                  v311 = sub_2408E57A4();
                  v493 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v311 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v493(v551, v523, v311);
                  goto LABEL_145;
                case 9u:
                  *(_DWORD *)a1 = *(_DWORD *)a2;
                  a1[1] = a2[1];
                  a1[2] = a2[2];
                  v312 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                  v524 = (char *)a2 + v312;
                  v552 = (char *)a1 + v312;
                  v313 = sub_2408E57A4();
                  v494 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v313 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v494(v552, v524, v313);
LABEL_145:
                  swift_storeEnumTagMultiPayload();
                  break;
                default:
                  memcpy(a1, a2, *(_QWORD *)(v202 + 64));
                  break;
              }
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v202 + 56))(a1, 0, 1, v201);
            }
            v314 = *(int *)(v42 + 20);
            v315 = (char *)a1 + v314;
            v316 = (char *)a2 + v314;
            v317 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v317 - 8) + 16))(v315, v316, v317);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v43 + 56))(a1, 0, 1, v42);
          }
          v318 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
          v319 = *(int *)(v318 + 20);
          v320 = (_QWORD *)((char *)a1 + v319);
          v321 = (_QWORD *)((char *)a2 + v319);
          if (v44((_QWORD *)((char *)a2 + v319), 1, v42))
          {
            v322 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
            memcpy(v320, v321, *(_QWORD *)(*(_QWORD *)(v322 - 8) + 64));
          }
          else
          {
            v578 = v43;
            v323 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            v324 = *(_QWORD *)(v323 - 8);
            if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v324 + 48))(v321, 1, v323))
            {
              v325 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
              memcpy(v320, v321, *(_QWORD *)(*(_QWORD *)(v325 - 8) + 64));
              v326 = v578;
            }
            else
            {
              v553 = v324;
              switch(swift_getEnumCaseMultiPayload())
              {
                case 3u:
                case 6u:
                case 7u:
                case 8u:
                  *v320 = *v321;
                  v320[1] = v321[1];
                  swift_bridgeObjectRetain();
                  goto LABEL_166;
                case 4u:
                  *v320 = *v321;
                  v338 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                  v498 = (char *)v321 + v338;
                  v528 = (char *)v320 + v338;
                  v447 = sub_2408E57A4();
                  v465 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v447 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v465(v528, v498, v447);
                  goto LABEL_166;
                case 5u:
                  *v320 = *v321;
                  v339 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                  v499 = (char *)v321 + v339;
                  v529 = (char *)v320 + v339;
                  v448 = sub_2408E57A4();
                  v466 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v448 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v466(v529, v499, v448);
                  goto LABEL_166;
                case 9u:
                  *(_DWORD *)v320 = *(_DWORD *)v321;
                  v320[1] = v321[1];
                  v320[2] = v321[2];
                  v340 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                  v500 = (char *)v321 + v340;
                  v530 = (char *)v320 + v340;
                  v449 = sub_2408E57A4();
                  v467 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v449 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v467(v530, v500, v449);
LABEL_166:
                  swift_storeEnumTagMultiPayload();
                  break;
                default:
                  memcpy(v320, v321, *(_QWORD *)(v324 + 64));
                  break;
              }
              v326 = v578;
              (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v553 + 56))(v320, 0, 1, v323);
            }
            v341 = *(int *)(v42 + 20);
            v342 = (char *)v320 + v341;
            v343 = (char *)v321 + v341;
            v344 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v344 - 8) + 16))(v342, v343, v344);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v326 + 56))(v320, 0, 1, v42);
          }
          v345 = *(int *)(v318 + 24);
          v346 = (char *)a1 + v345;
          v347 = (char *)a2 + v345;
          v348 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v348 - 8) + 16))(v346, v347, v348);
          swift_storeEnumTagMultiPayload();
          a3 = v585;
          break;
        case 5u:
          *a1 = *a2;
          a1[1] = a2[1];
          a1[2] = a2[2];
          v46 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0) + 24);
          v586 = (char *)a1 + v46;
          v47 = (char *)a2 + v46;
          v48 = sub_2408E57A4();
          v49 = a3;
          v50 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v50(v586, v47, v48);
          a3 = v49;
          swift_storeEnumTagMultiPayload();
          break;
        case 6u:
          *a1 = *a2;
          v51 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0) + 20);
          v52 = (char *)a1 + v51;
          v53 = (char *)a2 + v51;
          v54 = sub_2408E57A4();
          v55 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 16);
          swift_bridgeObjectRetain();
          v55(v52, v53, v54);
          swift_storeEnumTagMultiPayload();
          break;
        case 7u:
          v587 = a3;
          *a1 = *a2;
          a1[1] = a2[1];
          v570 = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
          v56 = *(int *)(v570 + 20);
          v57 = (char *)a1 + v56;
          v58 = (char *)a2 + v56;
          v59 = type metadata accessor for TranscriptProtoASTPickType(0);
          v60 = *(_QWORD *)(v59 - 8);
          v61 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v60 + 48);
          swift_bridgeObjectRetain();
          if (v61(v58, 1, v59))
          {
            v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D08);
            memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
          }
          else
          {
            v204 = *(_QWORD *)v58;
            v57[8] = v58[8];
            *(_QWORD *)v57 = v204;
            v205 = *(int *)(v59 + 20);
            v206 = &v57[v205];
            v207 = &v58[v205];
            v208 = sub_2408E57A4();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v208 - 8) + 16))(v206, v207, v208);
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
          }
          a3 = v587;
          v209 = *(int *)(v570 + 24);
          v210 = (char *)a1 + v209;
          v211 = (char *)a2 + v209;
          v212 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v212 - 8) + 16))(v210, v211, v212);
          swift_storeEnumTagMultiPayload();
          break;
        case 8u:
          *a1 = *a2;
          a1[1] = a2[1];
          v63 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0) + 20);
          v64 = (char *)a1 + v63;
          v65 = (char *)a2 + v63;
          v66 = sub_2408E57A4();
          v67 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 16);
          swift_bridgeObjectRetain();
          v67(v64, v65, v66);
          swift_storeEnumTagMultiPayload();
          break;
        case 9u:
          *a1 = *a2;
          a1[1] = a2[1];
          *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
          *((_BYTE *)a1 + 17) = *((_BYTE *)a2 + 17);
          v68 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0) + 28);
          v69 = (char *)a1 + v68;
          v70 = (char *)a2 + v68;
          v71 = sub_2408E57A4();
          v72 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v71 - 8) + 16);
          swift_bridgeObjectRetain();
          v72(v69, v70, v71);
          swift_storeEnumTagMultiPayload();
          break;
        case 0xAu:
          *a1 = *a2;
          a1[1] = a2[1];
          v73 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0) + 20);
          v74 = (char *)a1 + v73;
          v75 = (char *)a2 + v73;
          v76 = sub_2408E57A4();
          v77 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v76 - 8) + 16);
          swift_bridgeObjectRetain();
          v77(v74, v75, v76);
          swift_storeEnumTagMultiPayload();
          break;
        case 0xBu:
          *a1 = *a2;
          a1[1] = a2[1];
          v78 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0) + 20);
          v79 = (char *)a1 + v78;
          v80 = (char *)a2 + v78;
          v81 = sub_2408E57A4();
          v82 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v81 - 8) + 16);
          swift_bridgeObjectRetain();
          v82(v79, v80, v81);
          swift_storeEnumTagMultiPayload();
          break;
        case 0xCu:
          *a1 = *a2;
          v83 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0) + 20);
          v84 = (char *)a1 + v83;
          v85 = (char *)a2 + v83;
          v86 = sub_2408E57A4();
          v87 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v86 - 8) + 16);
          swift_bridgeObjectRetain();
          v87(v84, v85, v86);
          swift_storeEnumTagMultiPayload();
          break;
        case 0xDu:
          *a1 = *a2;
          a1[1] = a2[1];
          v88 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0) + 20);
          v89 = (char *)a1 + v88;
          v90 = (char *)a2 + v88;
          v91 = sub_2408E57A4();
          v92 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v91 - 8) + 16);
          swift_bridgeObjectRetain();
          v92(v89, v90, v91);
          swift_storeEnumTagMultiPayload();
          break;
        case 0xEu:
          *a1 = *a2;
          a1[1] = a2[1];
          v93 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0) + 20);
          v94 = (char *)a1 + v93;
          v95 = (char *)a2 + v93;
          v96 = sub_2408E57A4();
          v97 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v96 - 8) + 16);
          swift_bridgeObjectRetain();
          v97(v94, v95, v96);
          swift_storeEnumTagMultiPayload();
          break;
        case 0xFu:
        case 0x11u:
          v98 = sub_2408E57A4();
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v98 - 8) + 16))(a1, a2, v98);
          swift_storeEnumTagMultiPayload();
          break;
        case 0x10u:
          *a1 = *a2;
          v99 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0) + 20);
          v100 = (char *)a1 + v99;
          v101 = (char *)a2 + v99;
          v102 = sub_2408E57A4();
          v103 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v102 - 8) + 16);
          swift_bridgeObjectRetain();
          v103(v100, v101, v102);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(v7 + 64));
          break;
      }
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_171;
    }
    goto LABEL_8;
  }
  if (v10)
  {
    sub_240388AE4((uint64_t)a1, type metadata accessor for TranscriptProtoAstflatExprEnum);
LABEL_8:
    v15 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC20) - 8) + 64);
LABEL_9:
    memcpy(a1, a2, v15);
    goto LABEL_171;
  }
  if (a1 != a2)
  {
    sub_240388AE4((uint64_t)a1, type metadata accessor for TranscriptProtoAstflatExprEnum);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v16 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        v17 = *(_QWORD *)(v16 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v17 + 48))(a2, 1, v16))
        {
          v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              *a1 = *a2;
              a1[1] = a2[1];
              swift_bridgeObjectRetain();
              goto LABEL_109;
            case 4u:
              *a1 = *a2;
              v250 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              v594 = (char *)a1 + v250;
              v251 = (char *)a2 + v250;
              v252 = sub_2408E57A4();
              v253 = a3;
              v254 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v252 - 8) + 16);
              swift_bridgeObjectRetain();
              v254(v594, v251, v252);
              a3 = v253;
              goto LABEL_109;
            case 5u:
              *a1 = *a2;
              v255 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              v595 = (char *)a1 + v255;
              v256 = (char *)a2 + v255;
              v257 = sub_2408E57A4();
              v258 = a3;
              v259 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v257 - 8) + 16);
              swift_bridgeObjectRetain();
              v259(v595, v256, v257);
              a3 = v258;
              goto LABEL_109;
            case 9u:
              *(_DWORD *)a1 = *(_DWORD *)a2;
              a1[1] = a2[1];
              a1[2] = a2[2];
              v260 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              v596 = (char *)a1 + v260;
              v261 = (char *)a2 + v260;
              v262 = sub_2408E57A4();
              v263 = a3;
              v264 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v262 - 8) + 16);
              swift_bridgeObjectRetain();
              v264(v596, v261, v262);
              a3 = v263;
LABEL_109:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(v17 + 64));
              break;
          }
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v17 + 56))(a1, 0, 1, v16);
        }
        v265 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValue(0) + 20);
        v266 = (char *)a1 + v265;
        v267 = (char *)a2 + v265;
        v268 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v268 - 8) + 16))(v266, v267, v268);
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v104 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
        v105 = *(int *)(v104 + 20);
        v106 = (_QWORD *)((char *)a1 + v105);
        v107 = (_QWORD *)((char *)a2 + v105);
        v108 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        v109 = *(_QWORD *)(v108 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v109 + 48))(v107, 1, v108))
        {
          v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
          memcpy(v106, v107, *(_QWORD *)(*(_QWORD *)(v110 - 8) + 64));
        }
        else
        {
          v590 = a3;
          v213 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          v214 = *(_QWORD *)(v213 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v214 + 48))(v107, 1, v213))
          {
            v215 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
            memcpy(v106, v107, *(_QWORD *)(*(_QWORD *)(v215 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                *v106 = *v107;
                v106[1] = v107[1];
                swift_bridgeObjectRetain();
                goto LABEL_176;
              case 4u:
                *v106 = *v107;
                v354 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v531 = (char *)v107 + v354;
                v554 = (char *)v106 + v354;
                v468 = sub_2408E57A4();
                v501 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v468 - 8) + 16);
                swift_bridgeObjectRetain();
                v501(v554, v531, v468);
                goto LABEL_176;
              case 5u:
                *v106 = *v107;
                v355 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v532 = (char *)v107 + v355;
                v555 = (char *)v106 + v355;
                v469 = sub_2408E57A4();
                v502 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v469 - 8) + 16);
                swift_bridgeObjectRetain();
                v502(v555, v532, v469);
                goto LABEL_176;
              case 9u:
                *(_DWORD *)v106 = *(_DWORD *)v107;
                v106[1] = v107[1];
                v106[2] = v107[2];
                v356 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v533 = (char *)v107 + v356;
                v556 = (char *)v106 + v356;
                v470 = sub_2408E57A4();
                v503 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v470 - 8) + 16);
                swift_bridgeObjectRetain();
                v503(v556, v533, v470);
LABEL_176:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v106, v107, *(_QWORD *)(v214 + 64));
                break;
            }
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v214 + 56))(v106, 0, 1, v213);
          }
          v357 = *(int *)(v108 + 20);
          v358 = (char *)v106 + v357;
          v359 = (char *)v107 + v357;
          v360 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v360 - 8) + 16))(v358, v359, v360);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v109 + 56))(v106, 0, 1, v108);
          a3 = v590;
        }
        v361 = *(int *)(v104 + 24);
        v362 = (char *)a1 + v361;
        v363 = (char *)a2 + v361;
        v364 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v364 - 8) + 16))(v362, v363, v364);
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        v588 = a3;
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v111 = (int *)type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
        v112 = v111[5];
        v113 = (_QWORD *)((char *)a1 + v112);
        v114 = (_QWORD *)((char *)a2 + v112);
        v115 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        v116 = *(_QWORD *)(v115 - 8);
        v117 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v116 + 48);
        if (v117(v114, 1, v115))
        {
          v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
          memcpy(v113, v114, *(_QWORD *)(*(_QWORD *)(v118 - 8) + 64));
        }
        else
        {
          v573 = v117;
          v216 = v111;
          v217 = v116;
          v218 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          v219 = *(_QWORD *)(v218 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v219 + 48))(v114, 1, v218))
          {
            v220 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
            memcpy(v113, v114, *(_QWORD *)(*(_QWORD *)(v220 - 8) + 64));
            v116 = v217;
            v111 = v216;
          }
          else
          {
            v518 = v218;
            v549 = v219;
            v116 = v217;
            v111 = v216;
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                *v113 = *v114;
                v113[1] = v114[1];
                swift_bridgeObjectRetain();
                v236 = v518;
                goto LABEL_184;
              case 4u:
                *v113 = *v114;
                v365 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v471 = (char *)v113 + v365;
                v504 = (char *)v114 + v365;
                v366 = sub_2408E57A4();
                v450 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v366 - 8) + 16);
                swift_bridgeObjectRetain();
                v450(v471, v504, v366);
                v236 = v518;
                goto LABEL_184;
              case 5u:
                *v113 = *v114;
                v367 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v472 = (char *)v113 + v367;
                v505 = (char *)v114 + v367;
                v368 = sub_2408E57A4();
                v451 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v368 - 8) + 16);
                swift_bridgeObjectRetain();
                v451(v472, v505, v368);
                v236 = v518;
                goto LABEL_184;
              case 9u:
                *(_DWORD *)v113 = *(_DWORD *)v114;
                v113[1] = v114[1];
                v113[2] = v114[2];
                v369 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v473 = (char *)v113 + v369;
                v506 = (char *)v114 + v369;
                v370 = sub_2408E57A4();
                v452 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v370 - 8) + 16);
                swift_bridgeObjectRetain();
                v452(v473, v506, v370);
                v236 = v518;
LABEL_184:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v113, v114, *(_QWORD *)(v549 + 64));
                v116 = v217;
                v236 = v518;
                v111 = v216;
                break;
            }
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v549 + 56))(v113, 0, 1, v236);
          }
          v371 = *(int *)(v115 + 20);
          v372 = (char *)v113 + v371;
          v373 = (char *)v114 + v371;
          v374 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v374 - 8) + 16))(v372, v373, v374);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v116 + 56))(v113, 0, 1, v115);
          v117 = v573;
        }
        v375 = v111[6];
        v376 = (_QWORD *)((char *)a1 + v375);
        v377 = (_QWORD *)((char *)a2 + v375);
        if (v117((char *)a2 + v375, 1, v115))
        {
          v378 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
          memcpy(v376, v377, *(_QWORD *)(*(_QWORD *)(v378 - 8) + 64));
          a3 = v588;
        }
        else
        {
          v379 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          v380 = *(_QWORD *)(v379 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v380 + 48))(v377, 1, v379))
          {
            v381 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
            memcpy(v376, v377, *(_QWORD *)(*(_QWORD *)(v381 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                *v376 = *v377;
                v376[1] = v377[1];
                swift_bridgeObjectRetain();
                goto LABEL_217;
              case 4u:
                *v376 = *v377;
                v410 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v540 = (char *)v377 + v410;
                v563 = (char *)v376 + v410;
                v477 = sub_2408E57A4();
                v510 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v477 - 8) + 16);
                swift_bridgeObjectRetain();
                v510(v563, v540, v477);
                goto LABEL_217;
              case 5u:
                *v376 = *v377;
                v411 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v541 = (char *)v377 + v411;
                v564 = (char *)v376 + v411;
                v478 = sub_2408E57A4();
                v511 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v478 - 8) + 16);
                swift_bridgeObjectRetain();
                v511(v564, v541, v478);
                goto LABEL_217;
              case 9u:
                *(_DWORD *)v376 = *(_DWORD *)v377;
                v376[1] = v377[1];
                v376[2] = v377[2];
                v412 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v542 = (char *)v377 + v412;
                v565 = (char *)v376 + v412;
                v479 = sub_2408E57A4();
                v512 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v479 - 8) + 16);
                swift_bridgeObjectRetain();
                v512(v565, v542, v479);
LABEL_217:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v376, v377, *(_QWORD *)(v380 + 64));
                break;
            }
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v380 + 56))(v376, 0, 1, v379);
          }
          a3 = v588;
          v413 = *(int *)(v115 + 20);
          v414 = (char *)v376 + v413;
          v415 = (char *)v377 + v413;
          v416 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v416 - 8) + 16))(v414, v415, v416);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v116 + 56))(v376, 0, 1, v115);
        }
        v417 = v111[7];
        v418 = (char *)a1 + v417;
        v419 = (char *)a2 + v417;
        v420 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v420 - 8) + 16))(v418, v419, v420);
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        v589 = a3;
        *a1 = *a2;
        a1[1] = a2[1];
        v119 = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
        v120 = *(int *)(v119 + 20);
        v121 = (_QWORD *)((char *)a1 + v120);
        v122 = (_QWORD *)((char *)a2 + v120);
        v123 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        v124 = *(_QWORD *)(v123 - 8);
        v125 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v124 + 48);
        swift_bridgeObjectRetain();
        if (v125(v122, 1, v123))
        {
          v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
          memcpy(v121, v122, *(_QWORD *)(*(_QWORD *)(v126 - 8) + 64));
        }
        else
        {
          v221 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          v222 = *(_QWORD *)(v221 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v222 + 48))(v122, 1, v221))
          {
            v223 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
            memcpy(v121, v122, *(_QWORD *)(*(_QWORD *)(v223 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                *v121 = *v122;
                v121[1] = v122[1];
                swift_bridgeObjectRetain();
                goto LABEL_197;
              case 4u:
                *v121 = *v122;
                v382 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v534 = (char *)v122 + v382;
                v557 = (char *)v121 + v382;
                v474 = sub_2408E57A4();
                v507 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v474 - 8) + 16);
                swift_bridgeObjectRetain();
                v507(v557, v534, v474);
                goto LABEL_197;
              case 5u:
                *v121 = *v122;
                v383 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v535 = (char *)v122 + v383;
                v558 = (char *)v121 + v383;
                v475 = sub_2408E57A4();
                v508 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v475 - 8) + 16);
                swift_bridgeObjectRetain();
                v508(v558, v535, v475);
                goto LABEL_197;
              case 9u:
                *(_DWORD *)v121 = *(_DWORD *)v122;
                v121[1] = v122[1];
                v121[2] = v122[2];
                v384 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v536 = (char *)v122 + v384;
                v559 = (char *)v121 + v384;
                v476 = sub_2408E57A4();
                v509 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v476 - 8) + 16);
                swift_bridgeObjectRetain();
                v509(v559, v536, v476);
LABEL_197:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v121, v122, *(_QWORD *)(v222 + 64));
                break;
            }
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v222 + 56))(v121, 0, 1, v221);
          }
          v385 = *(int *)(v123 + 20);
          v386 = (char *)v121 + v385;
          v387 = (char *)v122 + v385;
          v388 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v388 - 8) + 16))(v386, v387, v388);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v124 + 56))(v121, 0, 1, v123);
        }
        goto LABEL_81;
      case 4u:
        v127 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        v128 = *(_QWORD *)(v127 - 8);
        v129 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v128 + 48);
        if (v129(a2, 1, v127))
        {
          v130 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v130 - 8) + 64));
        }
        else
        {
          v224 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          v225 = *(_QWORD *)(v224 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v225 + 48))(a2, 1, v224))
          {
            v226 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v226 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                *a1 = *a2;
                a1[1] = a2[1];
                swift_bridgeObjectRetain();
                goto LABEL_204;
              case 4u:
                *a1 = *a2;
                v389 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v560 = (char *)a2 + v389;
                v579 = (char *)a1 + v389;
                v597 = a3;
                v390 = sub_2408E57A4();
                v537 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v390 - 8) + 16);
                swift_bridgeObjectRetain();
                v391 = v390;
                a3 = v597;
                v537(v579, v560, v391);
                goto LABEL_204;
              case 5u:
                *a1 = *a2;
                v392 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v561 = (char *)a2 + v392;
                v580 = (char *)a1 + v392;
                v598 = a3;
                v393 = sub_2408E57A4();
                v538 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v393 - 8) + 16);
                swift_bridgeObjectRetain();
                v394 = v393;
                a3 = v598;
                v538(v580, v561, v394);
                goto LABEL_204;
              case 9u:
                *(_DWORD *)a1 = *(_DWORD *)a2;
                a1[1] = a2[1];
                a1[2] = a2[2];
                v395 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v562 = (char *)a2 + v395;
                v581 = (char *)a1 + v395;
                v599 = a3;
                v396 = sub_2408E57A4();
                v539 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v396 - 8) + 16);
                swift_bridgeObjectRetain();
                v397 = v396;
                a3 = v599;
                v539(v581, v562, v397);
LABEL_204:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(a1, a2, *(_QWORD *)(v225 + 64));
                break;
            }
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v225 + 56))(a1, 0, 1, v224);
          }
          v398 = *(int *)(v127 + 20);
          v399 = (char *)a1 + v398;
          v400 = (char *)a2 + v398;
          v401 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v401 - 8) + 16))(v399, v400, v401);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v128 + 56))(a1, 0, 1, v127);
        }
        v402 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
        v403 = *(int *)(v402 + 20);
        v404 = (_QWORD *)((char *)a1 + v403);
        v405 = (_QWORD *)((char *)a2 + v403);
        if (v129((_QWORD *)((char *)a2 + v403), 1, v127))
        {
          v406 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
          memcpy(v404, v405, *(_QWORD *)(*(_QWORD *)(v406 - 8) + 64));
        }
        else
        {
          v600 = a3;
          v407 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          v408 = *(_QWORD *)(v407 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v408 + 48))(v405, 1, v407))
          {
            v409 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
            memcpy(v404, v405, *(_QWORD *)(*(_QWORD *)(v409 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                *v404 = *v405;
                v404[1] = v405[1];
                swift_bridgeObjectRetain();
                goto LABEL_225;
              case 4u:
                *v404 = *v405;
                v421 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v543 = (char *)v405 + v421;
                v566 = (char *)v404 + v421;
                v480 = sub_2408E57A4();
                v513 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v480 - 8) + 16);
                swift_bridgeObjectRetain();
                v513(v566, v543, v480);
                goto LABEL_225;
              case 5u:
                *v404 = *v405;
                v422 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v544 = (char *)v405 + v422;
                v567 = (char *)v404 + v422;
                v481 = sub_2408E57A4();
                v514 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v481 - 8) + 16);
                swift_bridgeObjectRetain();
                v514(v567, v544, v481);
                goto LABEL_225;
              case 9u:
                *(_DWORD *)v404 = *(_DWORD *)v405;
                v404[1] = v405[1];
                v404[2] = v405[2];
                v423 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v545 = (char *)v405 + v423;
                v568 = (char *)v404 + v423;
                v482 = sub_2408E57A4();
                v515 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v482 - 8) + 16);
                swift_bridgeObjectRetain();
                v515(v568, v545, v482);
LABEL_225:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v404, v405, *(_QWORD *)(v408 + 64));
                break;
            }
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v408 + 56))(v404, 0, 1, v407);
          }
          a3 = v600;
          v424 = *(int *)(v127 + 20);
          v425 = (char *)v404 + v424;
          v426 = (char *)v405 + v424;
          v427 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v427 - 8) + 16))(v425, v426, v427);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v128 + 56))(v404, 0, 1, v127);
        }
        v428 = *(int *)(v402 + 24);
        v429 = (char *)a1 + v428;
        v430 = (char *)a2 + v428;
        v431 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v431 - 8) + 16))(v429, v430, v431);
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        v131 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0) + 24);
        v132 = (char *)a1 + v131;
        v133 = (char *)a2 + v131;
        v134 = sub_2408E57A4();
        v135 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v134 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v135(v132, v133, v134);
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        *a1 = *a2;
        v136 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0) + 20);
        v137 = (char *)a1 + v136;
        v138 = (char *)a2 + v136;
        v139 = sub_2408E57A4();
        v140 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v139 - 8) + 16);
        swift_bridgeObjectRetain();
        v140(v137, v138, v139);
        swift_storeEnumTagMultiPayload();
        break;
      case 7u:
        v589 = a3;
        *a1 = *a2;
        a1[1] = a2[1];
        v119 = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
        v141 = *(int *)(v119 + 20);
        v142 = (char *)a1 + v141;
        v143 = (char *)a2 + v141;
        v144 = type metadata accessor for TranscriptProtoASTPickType(0);
        v145 = *(_QWORD *)(v144 - 8);
        v146 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v145 + 48);
        swift_bridgeObjectRetain();
        if (v146(v143, 1, v144))
        {
          v147 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D08);
          memcpy(v142, v143, *(_QWORD *)(*(_QWORD *)(v147 - 8) + 64));
        }
        else
        {
          v227 = *(_QWORD *)v143;
          v142[8] = v143[8];
          *(_QWORD *)v142 = v227;
          v228 = *(int *)(v144 + 20);
          v229 = &v142[v228];
          v230 = &v143[v228];
          v231 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v231 - 8) + 16))(v229, v230, v231);
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v145 + 56))(v142, 0, 1, v144);
        }
LABEL_81:
        a3 = v589;
        v232 = *(int *)(v119 + 24);
        v233 = (char *)a1 + v232;
        v234 = (char *)a2 + v232;
        v235 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v235 - 8) + 16))(v233, v234, v235);
        swift_storeEnumTagMultiPayload();
        break;
      case 8u:
        *a1 = *a2;
        a1[1] = a2[1];
        v148 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0) + 20);
        v149 = (char *)a1 + v148;
        v150 = (char *)a2 + v148;
        v151 = sub_2408E57A4();
        v152 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v151 - 8) + 16);
        swift_bridgeObjectRetain();
        v152(v149, v150, v151);
        swift_storeEnumTagMultiPayload();
        break;
      case 9u:
        *a1 = *a2;
        a1[1] = a2[1];
        *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
        *((_BYTE *)a1 + 17) = *((_BYTE *)a2 + 17);
        v153 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0) + 28);
        v154 = (char *)a1 + v153;
        v155 = (char *)a2 + v153;
        v156 = sub_2408E57A4();
        v157 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v156 - 8) + 16);
        swift_bridgeObjectRetain();
        v157(v154, v155, v156);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xAu:
        *a1 = *a2;
        a1[1] = a2[1];
        v158 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0) + 20);
        v159 = (char *)a1 + v158;
        v160 = (char *)a2 + v158;
        v161 = sub_2408E57A4();
        v162 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v161 - 8) + 16);
        swift_bridgeObjectRetain();
        v162(v159, v160, v161);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xBu:
        *a1 = *a2;
        a1[1] = a2[1];
        v163 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0) + 20);
        v164 = (char *)a1 + v163;
        v165 = (char *)a2 + v163;
        v166 = sub_2408E57A4();
        v167 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v166 - 8) + 16);
        swift_bridgeObjectRetain();
        v167(v164, v165, v166);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xCu:
        *a1 = *a2;
        v168 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0) + 20);
        v169 = (char *)a1 + v168;
        v170 = (char *)a2 + v168;
        v171 = sub_2408E57A4();
        v172 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v171 - 8) + 16);
        swift_bridgeObjectRetain();
        v172(v169, v170, v171);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xDu:
        *a1 = *a2;
        a1[1] = a2[1];
        v173 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0) + 20);
        v174 = (char *)a1 + v173;
        v175 = (char *)a2 + v173;
        v176 = sub_2408E57A4();
        v177 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v176 - 8) + 16);
        swift_bridgeObjectRetain();
        v177(v174, v175, v176);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xEu:
        *a1 = *a2;
        a1[1] = a2[1];
        v178 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0) + 20);
        v179 = (char *)a1 + v178;
        v180 = (char *)a2 + v178;
        v181 = sub_2408E57A4();
        v182 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v181 - 8) + 16);
        swift_bridgeObjectRetain();
        v182(v179, v180, v181);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xFu:
      case 0x11u:
        v183 = sub_2408E57A4();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v183 - 8) + 16))(a1, a2, v183);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x10u:
        *a1 = *a2;
        v184 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0) + 20);
        v185 = (char *)a1 + v184;
        v186 = (char *)a2 + v184;
        v187 = sub_2408E57A4();
        v188 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v187 - 8) + 16);
        swift_bridgeObjectRetain();
        v188(v185, v186, v187);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        v15 = *(_QWORD *)(v7 + 64);
        goto LABEL_9;
    }
  }
LABEL_171:
  v349 = *(int *)(a3 + 20);
  v350 = (char *)a1 + v349;
  v351 = (char *)a2 + v349;
  v352 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v352 - 8) + 24))(v350, v351, v352);
  return a1;
}

_DWORD *initializeWithTake for TranscriptProtoASTFlatExpr(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  _DWORD *v21;
  _DWORD *v22;
  uint64_t v23;
  unsigned int (*v24)(_DWORD *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(_DWORD *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  int EnumCaseMultiPayload;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _BYTE *v97;
  _BYTE *v98;
  uint64_t v99;
  _BYTE *v100;
  int v101;
  uint64_t v102;
  uint64_t v103;
  int v104;
  uint64_t v105;
  uint64_t v106;
  int v107;
  uint64_t v108;
  uint64_t v109;
  int v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  _DWORD *v142;
  _DWORD *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  int v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  _DWORD *v168;
  _DWORD *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  int v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  char *v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  char *v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  char *v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  char *v202;
  uint64_t v203;
  uint64_t v204;
  char *v205;
  char *v206;
  uint64_t v207;
  uint64_t v208;
  char *v209;
  char *v210;
  uint64_t v211;
  uint64_t v212;
  char *v213;
  char *v214;
  uint64_t v215;
  char *v217;
  char *v218;
  char *v219;
  char *v220;
  char *v221;
  char *v222;
  char *v223;
  char *v224;
  char *v225;
  char *v226;
  char *v227;
  uint64_t v228;
  char *v229;
  char *v230;
  char *v231;
  char *v232;
  char *v233;
  char *v234;
  char *v235;
  char *v236;
  char *v237;
  char *v238;
  char *v239;
  int *v240;
  uint64_t v241;
  uint64_t v242;
  char *v243;
  uint64_t v244;
  char *v245;
  char *v246;
  uint64_t v247;
  uint64_t v248;
  char *v249;
  char *v250;
  char *v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;

  v6 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v9 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        v10 = *(_QWORD *)(v9 - 8);
        if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v10 + 48))(a2, 1, v9))
        {
          v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
        }
        else
        {
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          switch(EnumCaseMultiPayload)
          {
            case 9:
              *a1 = *a2;
              *(_OWORD *)(a1 + 2) = *(_OWORD *)(a2 + 2);
              v114 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              v115 = (char *)a1 + v114;
              v116 = (char *)a2 + v114;
              v117 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v117 - 8) + 32))(v115, v116, v117);
              swift_storeEnumTagMultiPayload();
              break;
            case 5:
              *(_QWORD *)a1 = *(_QWORD *)a2;
              v118 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              v119 = (char *)a1 + v118;
              v120 = (char *)a2 + v118;
              v121 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v121 - 8) + 32))(v119, v120, v121);
              swift_storeEnumTagMultiPayload();
              break;
            case 4:
              *(_QWORD *)a1 = *(_QWORD *)a2;
              v80 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              v81 = (char *)a1 + v80;
              v82 = (char *)a2 + v80;
              v83 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v83 - 8) + 32))(v81, v82, v83);
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(v10 + 64));
              break;
          }
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
        }
        v122 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValue(0) + 20);
        v123 = (char *)a1 + v122;
        v124 = (char *)a2 + v122;
        v125 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v125 - 8) + 32))(v123, v124, v125);
        goto LABEL_113;
      case 1u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v12 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
        v13 = *(int *)(v12 + 20);
        v14 = (char *)a1 + v13;
        v15 = (char *)a2 + v13;
        v16 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        v17 = *(_QWORD *)(v16 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
          goto LABEL_8;
        v248 = v17;
        v254 = a3;
        v84 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        v85 = *(_QWORD *)(v84 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v85 + 48))(v15, 1, v84))
          goto LABEL_33;
        v241 = v85;
        v101 = swift_getEnumCaseMultiPayload();
        if (v101 == 9)
        {
          *(_DWORD *)v14 = *(_DWORD *)v15;
          *(_OWORD *)(v14 + 8) = *(_OWORD *)(v15 + 8);
          v126 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          v127 = &v14[v126];
          v230 = &v15[v126];
          v128 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v128 - 8) + 32))(v127, v230, v128);
          swift_storeEnumTagMultiPayload();
          v129 = v241;
        }
        else
        {
          v87 = v248;
          if (v101 == 5)
          {
            *(_QWORD *)v14 = *(_QWORD *)v15;
            v130 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v222 = &v15[v130];
            v231 = &v14[v130];
            v131 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v131 - 8) + 32))(v231, v222, v131);
            goto LABEL_64;
          }
          if (v101 == 4)
          {
            *(_QWORD *)v14 = *(_QWORD *)v15;
            v102 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v219 = &v15[v102];
            v227 = &v14[v102];
            v103 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 32))(v227, v219, v103);
LABEL_64:
            swift_storeEnumTagMultiPayload();
            v129 = v241;
            goto LABEL_110;
          }
          memcpy(v14, v15, *(_QWORD *)(v241 + 64));
          v129 = v241;
        }
        v87 = v248;
LABEL_110:
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v129 + 56))(v14, 0, 1, v84);
LABEL_111:
        v204 = *(int *)(v16 + 20);
        v205 = &v14[v204];
        v206 = &v15[v204];
        v207 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v207 - 8) + 32))(v205, v206, v207);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v87 + 56))(v14, 0, 1, v16);
        a3 = v254;
LABEL_112:
        v208 = *(int *)(v12 + 24);
        v209 = (char *)a1 + v208;
        v210 = (char *)a2 + v208;
        v211 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v211 - 8) + 32))(v209, v210, v211);
LABEL_113:
        swift_storeEnumTagMultiPayload();
        goto LABEL_114;
      case 2u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v19 = (int *)type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
        v20 = v19[5];
        v21 = (_DWORD *)((char *)a1 + v20);
        v22 = (_DWORD *)((char *)a2 + v20);
        v23 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        v247 = *(_QWORD *)(v23 - 8);
        v24 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v247 + 48);
        if (v24(v22, 1, v23))
        {
          v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
          memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
        }
        else
        {
          v240 = v19;
          v255 = a3;
          v88 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          v89 = *(_QWORD *)(v88 - 8);
          if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v89 + 48))(v22, 1, v88))
          {
            v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
            memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
            v19 = v240;
          }
          else
          {
            v228 = v89;
            v104 = swift_getEnumCaseMultiPayload();
            if (v104 == 9)
            {
              *v21 = *v22;
              *(_OWORD *)(v21 + 2) = *(_OWORD *)(v22 + 2);
              v132 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              v133 = (char *)v21 + v132;
              v223 = (char *)v22 + v132;
              v134 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v134 - 8) + 32))(v133, v223, v134);
              swift_storeEnumTagMultiPayload();
              v19 = v240;
            }
            else
            {
              v19 = v240;
              if (v104 == 5)
              {
                *(_QWORD *)v21 = *(_QWORD *)v22;
                v135 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v218 = (char *)v22 + v135;
                v224 = (char *)v21 + v135;
                v136 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v136 - 8) + 32))(v224, v218, v136);
                swift_storeEnumTagMultiPayload();
              }
              else if (v104 == 4)
              {
                *(_QWORD *)v21 = *(_QWORD *)v22;
                v105 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v217 = (char *)v22 + v105;
                v220 = (char *)v21 + v105;
                v106 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v106 - 8) + 32))(v220, v217, v106);
                swift_storeEnumTagMultiPayload();
              }
              else
              {
                memcpy(v21, v22, *(_QWORD *)(v228 + 64));
              }
            }
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v228 + 56))(v21, 0, 1, v88);
          }
          v137 = *(int *)(v23 + 20);
          v138 = (char *)v21 + v137;
          v139 = (char *)v22 + v137;
          v140 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v140 - 8) + 32))(v138, v139, v140);
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v247 + 56))(v21, 0, 1, v23);
          a3 = v255;
        }
        v141 = v19[6];
        v142 = (_DWORD *)((char *)a1 + v141);
        v143 = (_DWORD *)((char *)a2 + v141);
        if (v24((_DWORD *)((char *)a2 + v141), 1, v23))
        {
          v144 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
          memcpy(v142, v143, *(_QWORD *)(*(_QWORD *)(v144 - 8) + 64));
        }
        else
        {
          v257 = a3;
          v145 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          v146 = *(_QWORD *)(v145 - 8);
          if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v146 + 48))(v143, 1, v145))
          {
            v147 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
            memcpy(v142, v143, *(_QWORD *)(*(_QWORD *)(v147 - 8) + 64));
          }
          else
          {
            v148 = swift_getEnumCaseMultiPayload();
            switch(v148)
            {
              case 9:
                *v142 = *v143;
                *(_OWORD *)(v142 + 2) = *(_OWORD *)(v143 + 2);
                v178 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v236 = (char *)v143 + v178;
                v245 = (char *)v142 + v178;
                v179 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v179 - 8) + 32))(v245, v236, v179);
                swift_storeEnumTagMultiPayload();
                break;
              case 5:
                *(_QWORD *)v142 = *(_QWORD *)v143;
                v180 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v237 = (char *)v143 + v180;
                v246 = (char *)v142 + v180;
                v181 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v181 - 8) + 32))(v246, v237, v181);
                swift_storeEnumTagMultiPayload();
                break;
              case 4:
                *(_QWORD *)v142 = *(_QWORD *)v143;
                v149 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v232 = (char *)v143 + v149;
                v243 = (char *)v142 + v149;
                v150 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v150 - 8) + 32))(v243, v232, v150);
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v142, v143, *(_QWORD *)(v146 + 64));
                break;
            }
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v146 + 56))(v142, 0, 1, v145);
          }
          v182 = *(int *)(v23 + 20);
          v183 = (char *)v142 + v182;
          v184 = (char *)v143 + v182;
          v185 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v185 - 8) + 32))(v183, v184, v185);
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v247 + 56))(v142, 0, 1, v23);
          a3 = v257;
        }
        v186 = v19[7];
        v187 = (char *)a1 + v186;
        v188 = (char *)a2 + v186;
        v189 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v189 - 8) + 32))(v187, v188, v189);
        goto LABEL_113;
      case 3u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v12 = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
        v26 = *(int *)(v12 + 20);
        v14 = (char *)a1 + v26;
        v15 = (char *)a2 + v26;
        v16 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        v27 = *(_QWORD *)(v16 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v15, 1, v16))
        {
LABEL_8:
          v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
          memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
          goto LABEL_112;
        }
        v248 = v27;
        v254 = a3;
        v91 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        v92 = *(_QWORD *)(v91 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v92 + 48))(v15, 1, v91))
        {
LABEL_33:
          v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
          memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
          v87 = v248;
        }
        else
        {
          v242 = v92;
          v107 = swift_getEnumCaseMultiPayload();
          if (v107 == 9)
          {
            *(_DWORD *)v14 = *(_DWORD *)v15;
            *(_OWORD *)(v14 + 8) = *(_OWORD *)(v15 + 8);
            v151 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v152 = &v14[v151];
            v233 = &v15[v151];
            v153 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v153 - 8) + 32))(v152, v233, v153);
            swift_storeEnumTagMultiPayload();
            v87 = v248;
          }
          else
          {
            v87 = v248;
            if (v107 == 5)
            {
              *(_QWORD *)v14 = *(_QWORD *)v15;
              v154 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              v225 = &v15[v154];
              v234 = &v14[v154];
              v155 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v155 - 8) + 32))(v234, v225, v155);
              swift_storeEnumTagMultiPayload();
            }
            else if (v107 == 4)
            {
              *(_QWORD *)v14 = *(_QWORD *)v15;
              v108 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              v221 = &v15[v108];
              v229 = &v14[v108];
              v109 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v109 - 8) + 32))(v229, v221, v109);
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              memcpy(v14, v15, *(_QWORD *)(v242 + 64));
            }
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v242 + 56))(v14, 0, 1, v91);
        }
        goto LABEL_111;
      case 4u:
        v253 = a3;
        v28 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        v29 = *(_QWORD *)(v28 - 8);
        v30 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v29 + 48);
        if (v30(a2, 1, v28))
        {
          v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
        }
        else
        {
          v93 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          v94 = *(_QWORD *)(v93 - 8);
          if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v94 + 48))(a2, 1, v93))
          {
            v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
          }
          else
          {
            v110 = swift_getEnumCaseMultiPayload();
            switch(v110)
            {
              case 9:
                *a1 = *a2;
                *(_OWORD *)(a1 + 2) = *(_OWORD *)(a2 + 2);
                v156 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v250 = (char *)a1 + v156;
                v157 = (char *)a2 + v156;
                v158 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v158 - 8) + 32))(v250, v157, v158);
                swift_storeEnumTagMultiPayload();
                break;
              case 5:
                *(_QWORD *)a1 = *(_QWORD *)a2;
                v159 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v251 = (char *)a1 + v159;
                v160 = (char *)a2 + v159;
                v161 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v161 - 8) + 32))(v251, v160, v161);
                swift_storeEnumTagMultiPayload();
                break;
              case 4:
                *(_QWORD *)a1 = *(_QWORD *)a2;
                v111 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v249 = (char *)a1 + v111;
                v112 = (char *)a2 + v111;
                v113 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v113 - 8) + 32))(v249, v112, v113);
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(a1, a2, *(_QWORD *)(v94 + 64));
                break;
            }
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v94 + 56))(a1, 0, 1, v93);
          }
          v162 = *(int *)(v28 + 20);
          v163 = (char *)a1 + v162;
          v164 = (char *)a2 + v162;
          v165 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v165 - 8) + 32))(v163, v164, v165);
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v29 + 56))(a1, 0, 1, v28);
        }
        v166 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
        v167 = *(int *)(v166 + 20);
        v168 = (_DWORD *)((char *)a1 + v167);
        v169 = (_DWORD *)((char *)a2 + v167);
        if (v30((_DWORD *)((char *)a2 + v167), 1, v28))
        {
          v170 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
          memcpy(v168, v169, *(_QWORD *)(*(_QWORD *)(v170 - 8) + 64));
          goto LABEL_107;
        }
        v252 = v29;
        v171 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        v172 = *(_QWORD *)(v171 - 8);
        if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v172 + 48))(v169, 1, v171))
        {
          v173 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
          memcpy(v168, v169, *(_QWORD *)(*(_QWORD *)(v173 - 8) + 64));
          v174 = v252;
          goto LABEL_106;
        }
        v244 = v172;
        v175 = swift_getEnumCaseMultiPayload();
        if (v175 == 9)
        {
          *v168 = *v169;
          *(_OWORD *)(v168 + 2) = *(_OWORD *)(v169 + 2);
          v190 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          v191 = (char *)v168 + v190;
          v238 = (char *)v169 + v190;
          v192 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v192 - 8) + 32))(v191, v238, v192);
        }
        else
        {
          if (v175 != 5)
          {
            v174 = v252;
            if (v175 == 4)
            {
              *(_QWORD *)v168 = *(_QWORD *)v169;
              v176 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              v226 = (char *)v169 + v176;
              v235 = (char *)v168 + v176;
              v177 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v177 - 8) + 32))(v235, v226, v177);
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              memcpy(v168, v169, *(_QWORD *)(v244 + 64));
            }
LABEL_105:
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v244 + 56))(v168, 0, 1, v171);
LABEL_106:
            v196 = *(int *)(v28 + 20);
            v197 = (char *)v168 + v196;
            v198 = (char *)v169 + v196;
            v199 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v199 - 8) + 32))(v197, v198, v199);
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v174 + 56))(v168, 0, 1, v28);
LABEL_107:
            v200 = *(int *)(v166 + 24);
            v201 = (char *)a1 + v200;
            v202 = (char *)a2 + v200;
            v203 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v203 - 8) + 32))(v201, v202, v203);
            swift_storeEnumTagMultiPayload();
            a3 = v253;
LABEL_114:
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
            goto LABEL_115;
          }
          *(_QWORD *)v168 = *(_QWORD *)v169;
          v193 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          v194 = (char *)v168 + v193;
          v239 = (char *)v169 + v193;
          v195 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v195 - 8) + 32))(v194, v239, v195);
        }
        swift_storeEnumTagMultiPayload();
        v174 = v252;
        goto LABEL_105;
      case 5u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        v32 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0) + 24);
        v33 = (char *)a1 + v32;
        v34 = (char *)a2 + v32;
        v35 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v33, v34, v35);
        goto LABEL_113;
      case 6u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v36 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0) + 20);
        v37 = (char *)a1 + v36;
        v38 = (char *)a2 + v36;
        v39 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
        goto LABEL_113;
      case 7u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v12 = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
        v40 = *(int *)(v12 + 20);
        v41 = (char *)a1 + v40;
        v42 = (char *)a2 + v40;
        v43 = type metadata accessor for TranscriptProtoASTPickType(0);
        v44 = *(_QWORD *)(v43 - 8);
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
        {
          v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D08);
          memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
        }
        else
        {
          *(_QWORD *)v41 = *(_QWORD *)v42;
          v41[8] = v42[8];
          v96 = *(int *)(v43 + 20);
          v256 = a3;
          v97 = &v41[v96];
          v98 = &v42[v96];
          v99 = sub_2408E57A4();
          v100 = v97;
          a3 = v256;
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v99 - 8) + 32))(v100, v98, v99);
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
        }
        goto LABEL_112;
      case 8u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v46 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0) + 20);
        v47 = (char *)a1 + v46;
        v48 = (char *)a2 + v46;
        v49 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 32))(v47, v48, v49);
        goto LABEL_113;
      case 9u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_WORD *)a1 + 8) = *((_WORD *)a2 + 8);
        v50 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0) + 28);
        v51 = (char *)a1 + v50;
        v52 = (char *)a2 + v50;
        v53 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v51, v52, v53);
        goto LABEL_113;
      case 0xAu:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v54 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0) + 20);
        v55 = (char *)a1 + v54;
        v56 = (char *)a2 + v54;
        v57 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 32))(v55, v56, v57);
        goto LABEL_113;
      case 0xBu:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v58 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0) + 20);
        v59 = (char *)a1 + v58;
        v60 = (char *)a2 + v58;
        v61 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v59, v60, v61);
        goto LABEL_113;
      case 0xCu:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v62 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0) + 20);
        v63 = (char *)a1 + v62;
        v64 = (char *)a2 + v62;
        v65 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 32))(v63, v64, v65);
        goto LABEL_113;
      case 0xDu:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v66 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0) + 20);
        v67 = (char *)a1 + v66;
        v68 = (char *)a2 + v66;
        v69 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v69 - 8) + 32))(v67, v68, v69);
        goto LABEL_113;
      case 0xEu:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v70 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0) + 20);
        v71 = (char *)a1 + v70;
        v72 = (char *)a2 + v70;
        v73 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v73 - 8) + 32))(v71, v72, v73);
        goto LABEL_113;
      case 0xFu:
      case 0x11u:
        v74 = sub_2408E57A4();
        (*(void (**)(_DWORD *, _DWORD *, uint64_t))(*(_QWORD *)(v74 - 8) + 32))(a1, a2, v74);
        goto LABEL_113;
      case 0x10u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v75 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0) + 20);
        v76 = (char *)a1 + v75;
        v77 = (char *)a2 + v75;
        v78 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v78 - 8) + 32))(v76, v77, v78);
        goto LABEL_113;
      default:
        memcpy(a1, a2, *(_QWORD *)(v7 + 64));
        goto LABEL_114;
    }
  }
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC20);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
LABEL_115:
  v212 = *(int *)(a3 + 20);
  v213 = (char *)a1 + v212;
  v214 = (char *)a2 + v212;
  v215 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v215 - 8) + 32))(v213, v214, v215);
  return a1;
}

_DWORD *assignWithTake for TranscriptProtoASTFlatExpr(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_DWORD *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  size_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _DWORD *v20;
  _DWORD *v21;
  uint64_t v22;
  uint64_t v23;
  int *v24;
  uint64_t v25;
  _DWORD *v26;
  _DWORD *v27;
  uint64_t v28;
  unsigned int (*v29)(_DWORD *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(_DWORD *, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE *v47;
  _BYTE *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  int EnumCaseMultiPayload;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _DWORD *v92;
  _DWORD *v93;
  uint64_t v94;
  uint64_t v95;
  int *v96;
  uint64_t v97;
  _DWORD *v98;
  _DWORD *v99;
  uint64_t v100;
  uint64_t v101;
  unsigned int (*v102)(_DWORD *, uint64_t, uint64_t);
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unsigned int (*v108)(_DWORD *, uint64_t, uint64_t);
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  _BYTE *v119;
  _BYTE *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  _BYTE *v169;
  _BYTE *v170;
  uint64_t v171;
  _BYTE *v172;
  int v173;
  uint64_t v174;
  char *v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  _BYTE *v189;
  _BYTE *v190;
  uint64_t v191;
  _BYTE *v192;
  int v193;
  int v194;
  uint64_t v195;
  uint64_t v196;
  int v197;
  uint64_t v198;
  uint64_t v199;
  int v200;
  uint64_t v201;
  char *v202;
  uint64_t v203;
  uint64_t v204;
  char *v205;
  char *v206;
  uint64_t v207;
  uint64_t v208;
  char *v209;
  char *v210;
  uint64_t v211;
  uint64_t v212;
  char *v213;
  char *v214;
  uint64_t v215;
  int v216;
  int v217;
  uint64_t v218;
  uint64_t v219;
  int v220;
  uint64_t v221;
  uint64_t v222;
  int v223;
  uint64_t v224;
  char *v225;
  char *v226;
  uint64_t v227;
  uint64_t v228;
  char *v229;
  char *v230;
  uint64_t v231;
  uint64_t v232;
  char *v233;
  char *v234;
  uint64_t v235;
  uint64_t v236;
  char *v237;
  char *v238;
  uint64_t v239;
  uint64_t v240;
  char *v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  char *v246;
  char *v247;
  uint64_t v248;
  uint64_t v249;
  _DWORD *v250;
  _DWORD *v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  int v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  char *v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  char *v265;
  char *v266;
  uint64_t v267;
  uint64_t v268;
  char *v269;
  char *v270;
  uint64_t v271;
  uint64_t v272;
  char *v273;
  uint64_t v274;
  uint64_t v275;
  char *v276;
  uint64_t v277;
  uint64_t v278;
  char *v279;
  char *v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  _DWORD *v284;
  _DWORD *v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  int v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  char *v299;
  char *v300;
  uint64_t v301;
  uint64_t v302;
  char *v303;
  char *v304;
  uint64_t v305;
  uint64_t v306;
  char *v307;
  uint64_t v308;
  uint64_t v309;
  char *v310;
  uint64_t v311;
  uint64_t v312;
  char *v313;
  char *v314;
  uint64_t v315;
  uint64_t v316;
  char *v317;
  char *v318;
  uint64_t v319;
  uint64_t v320;
  char *v321;
  char *v322;
  uint64_t v323;
  uint64_t v325;
  char *v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  char *v331;
  char *v332;
  uint64_t v333;
  uint64_t v334;
  _DWORD *v335;
  _DWORD *v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  int v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  char *v349;
  char *v350;
  uint64_t v351;
  uint64_t v352;
  char *v353;
  char *v354;
  uint64_t v355;
  uint64_t v356;
  char *v357;
  char *v358;
  uint64_t v359;
  uint64_t v360;
  char *v361;
  char *v362;
  uint64_t v363;
  uint64_t v364;
  char *v365;
  char *v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  _DWORD *v370;
  _DWORD *v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  int v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  char *v384;
  char *v385;
  uint64_t v386;
  uint64_t v387;
  char *v388;
  char *v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  char *v396;
  char *v397;
  uint64_t v398;
  uint64_t v399;
  char *v400;
  char *v401;
  uint64_t v402;
  char *v403;
  char *v404;
  char *v405;
  char *v406;
  char *v407;
  char *v408;
  char *v409;
  char *v410;
  char *v411;
  char *v412;
  uint64_t v413;
  char *v414;
  char *v415;
  char *v416;
  char *v417;
  char *v418;
  char *v419;
  char *v420;
  char *v421;
  char *v422;
  char *v423;
  char *v424;
  char *v425;
  int *v426;
  uint64_t v427;
  uint64_t v428;
  char *v429;
  char *v430;
  uint64_t v431;
  char *v432;
  char *v433;
  char *v434;
  char *v435;
  char *v436;
  char *v437;
  char *v438;
  char *v439;
  char *v440;
  char *v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  char *v445;
  char *v446;
  char *v447;
  char *v448;
  uint64_t v449;
  char *v450;
  char *v451;
  char *v452;
  char *v453;
  char *v454;
  char *v455;
  char *v456;
  char *v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  uint64_t v463;
  uint64_t v464;
  uint64_t v465;
  uint64_t v466;

  v6 = type metadata accessor for TranscriptProtoAstflatExprEnum(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v11 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          v12 = *(_QWORD *)(v11 - 8);
          if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
          {
            v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
          }
          else
          {
            EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            switch(EnumCaseMultiPayload)
            {
              case 9:
                *a1 = *a2;
                *(_OWORD *)(a1 + 2) = *(_OWORD *)(a2 + 2);
                v204 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v205 = (char *)a1 + v204;
                v206 = (char *)a2 + v204;
                v207 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v207 - 8) + 32))(v205, v206, v207);
                swift_storeEnumTagMultiPayload();
                break;
              case 5:
                *(_QWORD *)a1 = *(_QWORD *)a2;
                v208 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v209 = (char *)a1 + v208;
                v210 = (char *)a2 + v208;
                v211 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v211 - 8) + 32))(v209, v210, v211);
                swift_storeEnumTagMultiPayload();
                break;
              case 4:
                *(_QWORD *)a1 = *(_QWORD *)a2;
                v86 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v87 = (char *)a1 + v86;
                v88 = (char *)a2 + v86;
                v89 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v89 - 8) + 32))(v87, v88, v89);
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(a1, a2, *(_QWORD *)(v12 + 64));
                break;
            }
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
          }
          v212 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValue(0) + 20);
          v213 = (char *)a1 + v212;
          v214 = (char *)a2 + v212;
          v215 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v215 - 8) + 32))(v213, v214, v215);
          swift_storeEnumTagMultiPayload();
          goto LABEL_174;
        case 1u:
          *(_BYTE *)a1 = *(_BYTE *)a2;
          v18 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
          v19 = *(int *)(v18 + 20);
          v20 = (_DWORD *)((char *)a1 + v19);
          v21 = (_DWORD *)((char *)a2 + v19);
          v22 = type metadata accessor for TranscriptProtoASTFlatValue(0);
          v23 = *(_QWORD *)(v22 - 8);
          if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
            goto LABEL_20;
          v443 = v23;
          v460 = a3;
          v157 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          v158 = *(_QWORD *)(v157 - 8);
          if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v158 + 48))(v21, 1, v157))
            goto LABEL_67;
          v427 = v158;
          v193 = swift_getEnumCaseMultiPayload();
          if (v193 == 9)
            goto LABEL_142;
          v164 = v443;
          if (v193 == 5)
            goto LABEL_143;
          if (v193 != 4)
            goto LABEL_144;
          goto LABEL_95;
        case 2u:
          *(_BYTE *)a1 = *(_BYTE *)a2;
          v24 = (int *)type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
          v25 = v24[5];
          v26 = (_DWORD *)((char *)a1 + v25);
          v27 = (_DWORD *)((char *)a2 + v25);
          v28 = type metadata accessor for TranscriptProtoASTFlatValue(0);
          v442 = *(_QWORD *)(v28 - 8);
          v29 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v442 + 48);
          if (v29(v27, 1, v28))
          {
            v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
            memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
          }
          else
          {
            v426 = v24;
            v461 = a3;
            v159 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            v160 = *(_QWORD *)(v159 - 8);
            if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v160 + 48))(v27, 1, v159))
            {
              v161 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
              memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v161 - 8) + 64));
              v24 = v426;
            }
            else
            {
              v413 = v160;
              v194 = swift_getEnumCaseMultiPayload();
              if (v194 == 9)
              {
                *v26 = *v27;
                *(_OWORD *)(v26 + 2) = *(_OWORD *)(v27 + 2);
                v240 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v241 = (char *)v26 + v240;
                v408 = (char *)v27 + v240;
                v242 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v242 - 8) + 32))(v241, v408, v242);
                swift_storeEnumTagMultiPayload();
                v24 = v426;
              }
              else
              {
                v24 = v426;
                if (v194 == 5)
                {
                  *(_QWORD *)v26 = *(_QWORD *)v27;
                  v243 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                  v404 = (char *)v27 + v243;
                  v409 = (char *)v26 + v243;
                  v244 = sub_2408E57A4();
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v244 - 8) + 32))(v409, v404, v244);
                  swift_storeEnumTagMultiPayload();
                }
                else if (v194 == 4)
                {
                  *(_QWORD *)v26 = *(_QWORD *)v27;
                  v195 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                  v403 = (char *)v27 + v195;
                  v405 = (char *)v26 + v195;
                  v196 = sub_2408E57A4();
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v196 - 8) + 32))(v405, v403, v196);
                  swift_storeEnumTagMultiPayload();
                }
                else
                {
                  memcpy(v26, v27, *(_QWORD *)(v413 + 64));
                }
              }
              (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v413 + 56))(v26, 0, 1, v159);
            }
            v245 = *(int *)(v28 + 20);
            v246 = (char *)v26 + v245;
            v247 = (char *)v27 + v245;
            v248 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v248 - 8) + 32))(v246, v247, v248);
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v442 + 56))(v26, 0, 1, v28);
            a3 = v461;
          }
          v249 = v24[6];
          v250 = (_DWORD *)((char *)a1 + v249);
          v251 = (_DWORD *)((char *)a2 + v249);
          if (v29((_DWORD *)((char *)a2 + v249), 1, v28))
          {
            v252 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
            memcpy(v250, v251, *(_QWORD *)(*(_QWORD *)(v252 - 8) + 64));
          }
          else
          {
            v465 = a3;
            v253 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            v254 = *(_QWORD *)(v253 - 8);
            if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v254 + 48))(v251, 1, v253))
            {
              v255 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
              memcpy(v250, v251, *(_QWORD *)(*(_QWORD *)(v255 - 8) + 64));
            }
            else
            {
              v256 = swift_getEnumCaseMultiPayload();
              switch(v256)
              {
                case 9:
                  *v250 = *v251;
                  *(_OWORD *)(v250 + 2) = *(_OWORD *)(v251 + 2);
                  v294 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                  v420 = (char *)v251 + v294;
                  v432 = (char *)v250 + v294;
                  v295 = sub_2408E57A4();
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v295 - 8) + 32))(v432, v420, v295);
                  swift_storeEnumTagMultiPayload();
                  break;
                case 5:
                  *(_QWORD *)v250 = *(_QWORD *)v251;
                  v296 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                  v421 = (char *)v251 + v296;
                  v433 = (char *)v250 + v296;
                  v297 = sub_2408E57A4();
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v297 - 8) + 32))(v433, v421, v297);
                  swift_storeEnumTagMultiPayload();
                  break;
                case 4:
                  *(_QWORD *)v250 = *(_QWORD *)v251;
                  v257 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                  v416 = (char *)v251 + v257;
                  v430 = (char *)v250 + v257;
                  v258 = sub_2408E57A4();
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v258 - 8) + 32))(v430, v416, v258);
                  swift_storeEnumTagMultiPayload();
                  break;
                default:
                  memcpy(v250, v251, *(_QWORD *)(v254 + 64));
                  break;
              }
              (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v254 + 56))(v250, 0, 1, v253);
            }
            v298 = *(int *)(v28 + 20);
            v299 = (char *)v250 + v298;
            v300 = (char *)v251 + v298;
            v301 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v301 - 8) + 32))(v299, v300, v301);
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v442 + 56))(v250, 0, 1, v28);
            a3 = v465;
          }
          v302 = v24[7];
          v303 = (char *)a1 + v302;
          v304 = (char *)a2 + v302;
          v305 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v305 - 8) + 32))(v303, v304, v305);
          swift_storeEnumTagMultiPayload();
          goto LABEL_174;
        case 3u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          v18 = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
          v31 = *(int *)(v18 + 20);
          v20 = (_DWORD *)((char *)a1 + v31);
          v21 = (_DWORD *)((char *)a2 + v31);
          v22 = type metadata accessor for TranscriptProtoASTFlatValue(0);
          v32 = *(_QWORD *)(v22 - 8);
          if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v32 + 48))(v21, 1, v22))
          {
LABEL_20:
            v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
            memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
          }
          else
          {
            v443 = v32;
            v460 = a3;
            v157 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            v162 = *(_QWORD *)(v157 - 8);
            if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v162 + 48))(v21, 1, v157))
            {
LABEL_67:
              v163 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
              memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v163 - 8) + 64));
              v164 = v443;
            }
            else
            {
              v427 = v162;
              v197 = swift_getEnumCaseMultiPayload();
              if (v197 == 9)
              {
LABEL_142:
                *v20 = *v21;
                *(_OWORD *)(v20 + 2) = *(_OWORD *)(v21 + 2);
                v259 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v260 = (char *)v20 + v259;
                v417 = (char *)v21 + v259;
                v261 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v261 - 8) + 32))(v260, v417, v261);
                swift_storeEnumTagMultiPayload();
                v164 = v443;
              }
              else
              {
                v164 = v443;
                if (v197 == 5)
                {
LABEL_143:
                  *(_QWORD *)v20 = *(_QWORD *)v21;
                  v262 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                  v410 = (char *)v21 + v262;
                  v418 = (char *)v20 + v262;
                  v263 = sub_2408E57A4();
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v263 - 8) + 32))(v418, v410, v263);
                  swift_storeEnumTagMultiPayload();
                }
                else if (v197 == 4)
                {
LABEL_95:
                  *(_QWORD *)v20 = *(_QWORD *)v21;
                  v198 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                  v406 = (char *)v21 + v198;
                  v414 = (char *)v20 + v198;
                  v199 = sub_2408E57A4();
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v199 - 8) + 32))(v414, v406, v199);
                  swift_storeEnumTagMultiPayload();
                }
                else
                {
LABEL_144:
                  memcpy(v20, v21, *(_QWORD *)(v427 + 64));
                }
              }
              (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v427 + 56))(v20, 0, 1, v157);
            }
            v264 = *(int *)(v22 + 20);
            v265 = (char *)v20 + v264;
            v266 = (char *)v21 + v264;
            v267 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v267 - 8) + 32))(v265, v266, v267);
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v164 + 56))(v20, 0, 1, v22);
            a3 = v460;
          }
          goto LABEL_147;
        case 4u:
          v458 = a3;
          v34 = type metadata accessor for TranscriptProtoASTFlatValue(0);
          v35 = *(_QWORD *)(v34 - 8);
          v36 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v35 + 48);
          if (v36(a2, 1, v34))
          {
            v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
          }
          else
          {
            v165 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
            v166 = *(_QWORD *)(v165 - 8);
            if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v166 + 48))(a2, 1, v165))
            {
              v167 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
              memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v167 - 8) + 64));
            }
            else
            {
              v200 = swift_getEnumCaseMultiPayload();
              switch(v200)
              {
                case 9:
                  *a1 = *a2;
                  *(_OWORD *)(a1 + 2) = *(_OWORD *)(a2 + 2);
                  v272 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                  v447 = (char *)a1 + v272;
                  v273 = (char *)a2 + v272;
                  v274 = sub_2408E57A4();
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v274 - 8) + 32))(v447, v273, v274);
                  swift_storeEnumTagMultiPayload();
                  break;
                case 5:
                  *(_QWORD *)a1 = *(_QWORD *)a2;
                  v275 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                  v448 = (char *)a1 + v275;
                  v276 = (char *)a2 + v275;
                  v277 = sub_2408E57A4();
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v277 - 8) + 32))(v448, v276, v277);
                  swift_storeEnumTagMultiPayload();
                  break;
                case 4:
                  *(_QWORD *)a1 = *(_QWORD *)a2;
                  v201 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                  v445 = (char *)a1 + v201;
                  v202 = (char *)a2 + v201;
                  v203 = sub_2408E57A4();
                  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v203 - 8) + 32))(v445, v202, v203);
                  swift_storeEnumTagMultiPayload();
                  break;
                default:
                  memcpy(a1, a2, *(_QWORD *)(v166 + 64));
                  break;
              }
              (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v166 + 56))(a1, 0, 1, v165);
            }
            v278 = *(int *)(v34 + 20);
            v279 = (char *)a1 + v278;
            v280 = (char *)a2 + v278;
            v281 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v281 - 8) + 32))(v279, v280, v281);
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v35 + 56))(a1, 0, 1, v34);
          }
          v282 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
          v283 = *(int *)(v282 + 20);
          v284 = (_DWORD *)((char *)a1 + v283);
          v285 = (_DWORD *)((char *)a2 + v283);
          if (v36((_DWORD *)((char *)a2 + v283), 1, v34))
          {
            v286 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
            memcpy(v284, v285, *(_QWORD *)(*(_QWORD *)(v286 - 8) + 64));
            goto LABEL_173;
          }
          v449 = v35;
          v287 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          v288 = *(_QWORD *)(v287 - 8);
          if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v288 + 48))(v285, 1, v287))
          {
            v289 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
            memcpy(v284, v285, *(_QWORD *)(*(_QWORD *)(v289 - 8) + 64));
            v290 = v449;
            goto LABEL_172;
          }
          v431 = v288;
          v291 = swift_getEnumCaseMultiPayload();
          if (v291 == 9)
          {
            *v284 = *v285;
            *(_OWORD *)(v284 + 2) = *(_OWORD *)(v285 + 2);
            v306 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v307 = (char *)v284 + v306;
            v422 = (char *)v285 + v306;
            v308 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v308 - 8) + 32))(v307, v422, v308);
          }
          else
          {
            if (v291 != 5)
            {
              v290 = v449;
              if (v291 == 4)
              {
                *(_QWORD *)v284 = *(_QWORD *)v285;
                v292 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v411 = (char *)v285 + v292;
                v419 = (char *)v284 + v292;
                v293 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v293 - 8) + 32))(v419, v411, v293);
                swift_storeEnumTagMultiPayload();
              }
              else
              {
                memcpy(v284, v285, *(_QWORD *)(v431 + 64));
              }
LABEL_171:
              (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v431 + 56))(v284, 0, 1, v287);
LABEL_172:
              v312 = *(int *)(v34 + 20);
              v313 = (char *)v284 + v312;
              v314 = (char *)v285 + v312;
              v315 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v315 - 8) + 32))(v313, v314, v315);
              (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v290 + 56))(v284, 0, 1, v34);
LABEL_173:
              v316 = *(int *)(v282 + 24);
              v317 = (char *)a1 + v316;
              v318 = (char *)a2 + v316;
              v319 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v319 - 8) + 32))(v317, v318, v319);
              swift_storeEnumTagMultiPayload();
              a3 = v458;
LABEL_174:
              (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
              goto LABEL_175;
            }
            *(_QWORD *)v284 = *(_QWORD *)v285;
            v309 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v310 = (char *)v284 + v309;
            v423 = (char *)v285 + v309;
            v311 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v311 - 8) + 32))(v310, v423, v311);
          }
          swift_storeEnumTagMultiPayload();
          v290 = v449;
          goto LABEL_171;
        case 5u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
          v38 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0) + 24);
          v39 = (char *)a1 + v38;
          v40 = (char *)a2 + v38;
          v41 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v39, v40, v41);
          swift_storeEnumTagMultiPayload();
          goto LABEL_174;
        case 6u:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          v42 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0) + 20);
          v43 = (char *)a1 + v42;
          v44 = (char *)a2 + v42;
          v45 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(v43, v44, v45);
          swift_storeEnumTagMultiPayload();
          goto LABEL_174;
        case 7u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          v18 = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
          v46 = *(int *)(v18 + 20);
          v47 = (char *)a1 + v46;
          v48 = (char *)a2 + v46;
          v49 = type metadata accessor for TranscriptProtoASTPickType(0);
          v50 = *(_QWORD *)(v49 - 8);
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49))
          {
            v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D08);
            memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
          }
          else
          {
            *(_QWORD *)v47 = *(_QWORD *)v48;
            v47[8] = v48[8];
            v168 = *(int *)(v49 + 20);
            v462 = a3;
            v169 = &v47[v168];
            v170 = &v48[v168];
            v171 = sub_2408E57A4();
            v172 = v169;
            a3 = v462;
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v171 - 8) + 32))(v172, v170, v171);
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
          }
LABEL_147:
          v268 = *(int *)(v18 + 24);
          v269 = (char *)a1 + v268;
          v270 = (char *)a2 + v268;
          v271 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v271 - 8) + 32))(v269, v270, v271);
          swift_storeEnumTagMultiPayload();
          goto LABEL_174;
        case 8u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          v52 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0) + 20);
          v53 = (char *)a1 + v52;
          v54 = (char *)a2 + v52;
          v55 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 32))(v53, v54, v55);
          swift_storeEnumTagMultiPayload();
          goto LABEL_174;
        case 9u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *((_WORD *)a1 + 8) = *((_WORD *)a2 + 8);
          v56 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0) + 28);
          v57 = (char *)a1 + v56;
          v58 = (char *)a2 + v56;
          v59 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 32))(v57, v58, v59);
          swift_storeEnumTagMultiPayload();
          goto LABEL_174;
        case 0xAu:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          v60 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0) + 20);
          v61 = (char *)a1 + v60;
          v62 = (char *)a2 + v60;
          v63 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 32))(v61, v62, v63);
          swift_storeEnumTagMultiPayload();
          goto LABEL_174;
        case 0xBu:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          v64 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0) + 20);
          v65 = (char *)a1 + v64;
          v66 = (char *)a2 + v64;
          v67 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 32))(v65, v66, v67);
          swift_storeEnumTagMultiPayload();
          goto LABEL_174;
        case 0xCu:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          v68 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0) + 20);
          v69 = (char *)a1 + v68;
          v70 = (char *)a2 + v68;
          v71 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v71 - 8) + 32))(v69, v70, v71);
          swift_storeEnumTagMultiPayload();
          goto LABEL_174;
        case 0xDu:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          v72 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0) + 20);
          v73 = (char *)a1 + v72;
          v74 = (char *)a2 + v72;
          v75 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 32))(v73, v74, v75);
          swift_storeEnumTagMultiPayload();
          goto LABEL_174;
        case 0xEu:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          v76 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0) + 20);
          v77 = (char *)a1 + v76;
          v78 = (char *)a2 + v76;
          v79 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 32))(v77, v78, v79);
          swift_storeEnumTagMultiPayload();
          goto LABEL_174;
        case 0xFu:
        case 0x11u:
          v80 = sub_2408E57A4();
          (*(void (**)(_DWORD *, _DWORD *, uint64_t))(*(_QWORD *)(v80 - 8) + 32))(a1, a2, v80);
          swift_storeEnumTagMultiPayload();
          goto LABEL_174;
        case 0x10u:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          v81 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0) + 20);
          v82 = (char *)a1 + v81;
          v83 = (char *)a2 + v81;
          v84 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v84 - 8) + 32))(v82, v83, v84);
          swift_storeEnumTagMultiPayload();
          goto LABEL_174;
        default:
          memcpy(a1, a2, *(_QWORD *)(v7 + 64));
          goto LABEL_174;
      }
    }
    goto LABEL_8;
  }
  if (v10)
  {
    sub_240388AE4((uint64_t)a1, type metadata accessor for TranscriptProtoAstflatExprEnum);
LABEL_8:
    v14 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC20) - 8) + 64);
LABEL_9:
    memcpy(a1, a2, v14);
    goto LABEL_175;
  }
  if (a1 != a2)
  {
    sub_240388AE4((uint64_t)a1, type metadata accessor for TranscriptProtoAstflatExprEnum);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v15 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        v16 = *(_QWORD *)(v15 - 8);
        if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v16 + 48))(a2, 1, v15))
        {
          v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
        }
        else
        {
          v173 = swift_getEnumCaseMultiPayload();
          switch(v173)
          {
            case 9:
              *a1 = *a2;
              *(_OWORD *)(a1 + 2) = *(_OWORD *)(a2 + 2);
              v228 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              v229 = (char *)a1 + v228;
              v230 = (char *)a2 + v228;
              v231 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v231 - 8) + 32))(v229, v230, v231);
              swift_storeEnumTagMultiPayload();
              break;
            case 5:
              *(_QWORD *)a1 = *(_QWORD *)a2;
              v232 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              v233 = (char *)a1 + v232;
              v234 = (char *)a2 + v232;
              v235 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v235 - 8) + 32))(v233, v234, v235);
              swift_storeEnumTagMultiPayload();
              break;
            case 4:
              *(_QWORD *)a1 = *(_QWORD *)a2;
              v174 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              v175 = (char *)a1 + v174;
              v176 = (char *)a2 + v174;
              v177 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v177 - 8) + 32))(v175, v176, v177);
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(v16 + 64));
              break;
          }
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
        }
        v236 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValue(0) + 20);
        v237 = (char *)a1 + v236;
        v238 = (char *)a2 + v236;
        v239 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v239 - 8) + 32))(v237, v238, v239);
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v90 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
        v91 = *(int *)(v90 + 20);
        v92 = (_DWORD *)((char *)a1 + v91);
        v93 = (_DWORD *)((char *)a2 + v91);
        v94 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        v95 = *(_QWORD *)(v94 - 8);
        if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v95 + 48))(v93, 1, v94))
          goto LABEL_46;
        v463 = a3;
        v178 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        v179 = *(_QWORD *)(v178 - 8);
        if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v179 + 48))(v93, 1, v178))
          goto LABEL_80;
        v216 = swift_getEnumCaseMultiPayload();
        switch(v216)
        {
          case 9:
            goto LABEL_192;
          case 5:
            goto LABEL_193;
          case 4:
            goto LABEL_116;
        }
        goto LABEL_194;
      case 2u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v96 = (int *)type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
        v97 = v96[5];
        v98 = (_DWORD *)((char *)a1 + v97);
        v99 = (_DWORD *)((char *)a2 + v97);
        v100 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        v101 = *(_QWORD *)(v100 - 8);
        v102 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v101 + 48);
        if (v102(v99, 1, v100))
        {
          v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
          memcpy(v98, v99, *(_QWORD *)(*(_QWORD *)(v103 - 8) + 64));
        }
        else
        {
          v444 = v101;
          v464 = a3;
          v180 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          v181 = *(_QWORD *)(v180 - 8);
          if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v181 + 48))(v99, 1, v180))
          {
            v182 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
            memcpy(v98, v99, *(_QWORD *)(*(_QWORD *)(v182 - 8) + 64));
            v101 = v444;
          }
          else
          {
            v428 = v181;
            v217 = swift_getEnumCaseMultiPayload();
            if (v217 == 9)
            {
              *v98 = *v99;
              *(_OWORD *)(v98 + 2) = *(_OWORD *)(v99 + 2);
              v325 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              v326 = (char *)v98 + v325;
              v424 = (char *)v99 + v325;
              v327 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v327 - 8) + 32))(v326, v424, v327);
              swift_storeEnumTagMultiPayload();
              v101 = v444;
            }
            else
            {
              v101 = v444;
              if (v217 == 5)
              {
                *(_QWORD *)v98 = *(_QWORD *)v99;
                v328 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v412 = (char *)v99 + v328;
                v425 = (char *)v98 + v328;
                v329 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v329 - 8) + 32))(v425, v412, v329);
                swift_storeEnumTagMultiPayload();
              }
              else if (v217 == 4)
              {
                *(_QWORD *)v98 = *(_QWORD *)v99;
                v218 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v407 = (char *)v99 + v218;
                v415 = (char *)v98 + v218;
                v219 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v219 - 8) + 32))(v415, v407, v219);
                swift_storeEnumTagMultiPayload();
              }
              else
              {
                memcpy(v98, v99, *(_QWORD *)(v428 + 64));
              }
            }
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v428 + 56))(v98, 0, 1, v180);
          }
          v330 = *(int *)(v100 + 20);
          v331 = (char *)v98 + v330;
          v332 = (char *)v99 + v330;
          v333 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v333 - 8) + 32))(v331, v332, v333);
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v101 + 56))(v98, 0, 1, v100);
          a3 = v464;
        }
        v334 = v96[6];
        v335 = (_DWORD *)((char *)a1 + v334);
        v336 = (_DWORD *)((char *)a2 + v334);
        if (v102((_DWORD *)((char *)a2 + v334), 1, v100))
        {
          v337 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
          memcpy(v335, v336, *(_QWORD *)(*(_QWORD *)(v337 - 8) + 64));
        }
        else
        {
          v466 = a3;
          v338 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          v339 = *(_QWORD *)(v338 - 8);
          if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v339 + 48))(v336, 1, v338))
          {
            v340 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
            memcpy(v335, v336, *(_QWORD *)(*(_QWORD *)(v340 - 8) + 64));
          }
          else
          {
            v341 = swift_getEnumCaseMultiPayload();
            switch(v341)
            {
              case 9:
                *v335 = *v336;
                *(_OWORD *)(v335 + 2) = *(_OWORD *)(v336 + 2);
                v379 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v438 = (char *)v336 + v379;
                v454 = (char *)v335 + v379;
                v380 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v380 - 8) + 32))(v454, v438, v380);
                swift_storeEnumTagMultiPayload();
                break;
              case 5:
                *(_QWORD *)v335 = *(_QWORD *)v336;
                v381 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v439 = (char *)v336 + v381;
                v455 = (char *)v335 + v381;
                v382 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v382 - 8) + 32))(v455, v439, v382);
                swift_storeEnumTagMultiPayload();
                break;
              case 4:
                *(_QWORD *)v335 = *(_QWORD *)v336;
                v342 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v434 = (char *)v336 + v342;
                v450 = (char *)v335 + v342;
                v343 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v343 - 8) + 32))(v450, v434, v343);
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v335, v336, *(_QWORD *)(v339 + 64));
                break;
            }
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v339 + 56))(v335, 0, 1, v338);
          }
          v383 = *(int *)(v100 + 20);
          v384 = (char *)v335 + v383;
          v385 = (char *)v336 + v383;
          v386 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v386 - 8) + 32))(v384, v385, v386);
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v101 + 56))(v335, 0, 1, v100);
          a3 = v466;
        }
        v387 = v96[7];
        v388 = (char *)a1 + v387;
        v389 = (char *)a2 + v387;
        v390 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v390 - 8) + 32))(v388, v389, v390);
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v90 = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
        v104 = *(int *)(v90 + 20);
        v92 = (_DWORD *)((char *)a1 + v104);
        v93 = (_DWORD *)((char *)a2 + v104);
        v94 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        v95 = *(_QWORD *)(v94 - 8);
        if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v95 + 48))(v93, 1, v94))
        {
LABEL_46:
          v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
          memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v105 - 8) + 64));
        }
        else
        {
          v463 = a3;
          v178 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          v179 = *(_QWORD *)(v178 - 8);
          if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v179 + 48))(v93, 1, v178))
          {
LABEL_80:
            v183 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
            memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v183 - 8) + 64));
          }
          else
          {
            v220 = swift_getEnumCaseMultiPayload();
            switch(v220)
            {
              case 9:
LABEL_192:
                *v92 = *v93;
                *(_OWORD *)(v92 + 2) = *(_OWORD *)(v93 + 2);
                v344 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v435 = (char *)v93 + v344;
                v451 = (char *)v92 + v344;
                v345 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v345 - 8) + 32))(v451, v435, v345);
                swift_storeEnumTagMultiPayload();
                break;
              case 5:
LABEL_193:
                *(_QWORD *)v92 = *(_QWORD *)v93;
                v346 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v436 = (char *)v93 + v346;
                v452 = (char *)v92 + v346;
                v347 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v347 - 8) + 32))(v452, v436, v347);
                swift_storeEnumTagMultiPayload();
                break;
              case 4:
LABEL_116:
                *(_QWORD *)v92 = *(_QWORD *)v93;
                v221 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v429 = (char *)v93 + v221;
                v446 = (char *)v92 + v221;
                v222 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v222 - 8) + 32))(v446, v429, v222);
                swift_storeEnumTagMultiPayload();
                break;
              default:
LABEL_194:
                memcpy(v92, v93, *(_QWORD *)(v179 + 64));
                break;
            }
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v179 + 56))(v92, 0, 1, v178);
          }
          v348 = *(int *)(v94 + 20);
          v349 = (char *)v92 + v348;
          v350 = (char *)v93 + v348;
          v351 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v351 - 8) + 32))(v349, v350, v351);
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v95 + 56))(v92, 0, 1, v94);
          a3 = v463;
        }
LABEL_197:
        v352 = *(int *)(v90 + 24);
        v353 = (char *)a1 + v352;
        v354 = (char *)a2 + v352;
        v355 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v355 - 8) + 32))(v353, v354, v355);
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        v459 = a3;
        v106 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        v107 = *(_QWORD *)(v106 - 8);
        v108 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v107 + 48);
        if (v108(a2, 1, v106))
        {
          v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v109 - 8) + 64));
        }
        else
        {
          v184 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          v185 = *(_QWORD *)(v184 - 8);
          if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v185 + 48))(a2, 1, v184))
          {
            v186 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v186 - 8) + 64));
          }
          else
          {
            v223 = swift_getEnumCaseMultiPayload();
            switch(v223)
            {
              case 9:
                *a1 = *a2;
                *(_OWORD *)(a1 + 2) = *(_OWORD *)(a2 + 2);
                v356 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v357 = (char *)a1 + v356;
                v358 = (char *)a2 + v356;
                v359 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v359 - 8) + 32))(v357, v358, v359);
                swift_storeEnumTagMultiPayload();
                break;
              case 5:
                *(_QWORD *)a1 = *(_QWORD *)a2;
                v360 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v361 = (char *)a1 + v360;
                v362 = (char *)a2 + v360;
                v363 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v363 - 8) + 32))(v361, v362, v363);
                swift_storeEnumTagMultiPayload();
                break;
              case 4:
                *(_QWORD *)a1 = *(_QWORD *)a2;
                v224 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v225 = (char *)a1 + v224;
                v226 = (char *)a2 + v224;
                v227 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v227 - 8) + 32))(v225, v226, v227);
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(a1, a2, *(_QWORD *)(v185 + 64));
                break;
            }
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v185 + 56))(a1, 0, 1, v184);
          }
          v364 = *(int *)(v106 + 20);
          v365 = (char *)a1 + v364;
          v366 = (char *)a2 + v364;
          v367 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v367 - 8) + 32))(v365, v366, v367);
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v107 + 56))(a1, 0, 1, v106);
        }
        v368 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
        v369 = *(int *)(v368 + 20);
        v370 = (_DWORD *)((char *)a1 + v369);
        v371 = (_DWORD *)((char *)a2 + v369);
        if (v108((_DWORD *)((char *)a2 + v369), 1, v106))
        {
          v372 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
          memcpy(v370, v371, *(_QWORD *)(*(_QWORD *)(v372 - 8) + 64));
        }
        else
        {
          v373 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          v374 = *(_QWORD *)(v373 - 8);
          if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v374 + 48))(v371, 1, v373))
          {
            v375 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
            memcpy(v370, v371, *(_QWORD *)(*(_QWORD *)(v375 - 8) + 64));
          }
          else
          {
            v376 = swift_getEnumCaseMultiPayload();
            switch(v376)
            {
              case 9:
                *v370 = *v371;
                *(_OWORD *)(v370 + 2) = *(_OWORD *)(v371 + 2);
                v391 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v440 = (char *)v371 + v391;
                v456 = (char *)v370 + v391;
                v392 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v392 - 8) + 32))(v456, v440, v392);
                swift_storeEnumTagMultiPayload();
                break;
              case 5:
                *(_QWORD *)v370 = *(_QWORD *)v371;
                v393 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v441 = (char *)v371 + v393;
                v457 = (char *)v370 + v393;
                v394 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v394 - 8) + 32))(v457, v441, v394);
                swift_storeEnumTagMultiPayload();
                break;
              case 4:
                *(_QWORD *)v370 = *(_QWORD *)v371;
                v377 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v437 = (char *)v371 + v377;
                v453 = (char *)v370 + v377;
                v378 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v378 - 8) + 32))(v453, v437, v378);
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v370, v371, *(_QWORD *)(v374 + 64));
                break;
            }
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v374 + 56))(v370, 0, 1, v373);
          }
          v395 = *(int *)(v106 + 20);
          v396 = (char *)v370 + v395;
          v397 = (char *)v371 + v395;
          v398 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v398 - 8) + 32))(v396, v397, v398);
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v107 + 56))(v370, 0, 1, v106);
        }
        v399 = *(int *)(v368 + 24);
        v400 = (char *)a1 + v399;
        v401 = (char *)a2 + v399;
        v402 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v402 - 8) + 32))(v400, v401, v402);
        swift_storeEnumTagMultiPayload();
        a3 = v459;
        break;
      case 5u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        v110 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0) + 24);
        v111 = (char *)a1 + v110;
        v112 = (char *)a2 + v110;
        v113 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v113 - 8) + 32))(v111, v112, v113);
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v114 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0) + 20);
        v115 = (char *)a1 + v114;
        v116 = (char *)a2 + v114;
        v117 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v117 - 8) + 32))(v115, v116, v117);
        swift_storeEnumTagMultiPayload();
        break;
      case 7u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v90 = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
        v118 = *(int *)(v90 + 20);
        v119 = (char *)a1 + v118;
        v120 = (char *)a2 + v118;
        v121 = type metadata accessor for TranscriptProtoASTPickType(0);
        v122 = *(_QWORD *)(v121 - 8);
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v122 + 48))(v120, 1, v121))
        {
          v123 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D08);
          memcpy(v119, v120, *(_QWORD *)(*(_QWORD *)(v123 - 8) + 64));
        }
        else
        {
          *(_QWORD *)v119 = *(_QWORD *)v120;
          v119[8] = v120[8];
          v187 = *(int *)(v121 + 20);
          v188 = a3;
          v189 = &v119[v187];
          v190 = &v120[v187];
          v191 = sub_2408E57A4();
          v192 = v189;
          a3 = v188;
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v191 - 8) + 32))(v192, v190, v191);
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v122 + 56))(v119, 0, 1, v121);
        }
        goto LABEL_197;
      case 8u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v124 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0) + 20);
        v125 = (char *)a1 + v124;
        v126 = (char *)a2 + v124;
        v127 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v127 - 8) + 32))(v125, v126, v127);
        swift_storeEnumTagMultiPayload();
        break;
      case 9u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_WORD *)a1 + 8) = *((_WORD *)a2 + 8);
        v128 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0) + 28);
        v129 = (char *)a1 + v128;
        v130 = (char *)a2 + v128;
        v131 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v131 - 8) + 32))(v129, v130, v131);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xAu:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v132 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0) + 20);
        v133 = (char *)a1 + v132;
        v134 = (char *)a2 + v132;
        v135 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v135 - 8) + 32))(v133, v134, v135);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xBu:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v136 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0) + 20);
        v137 = (char *)a1 + v136;
        v138 = (char *)a2 + v136;
        v139 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v139 - 8) + 32))(v137, v138, v139);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xCu:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v140 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0) + 20);
        v141 = (char *)a1 + v140;
        v142 = (char *)a2 + v140;
        v143 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v143 - 8) + 32))(v141, v142, v143);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xDu:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v144 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0) + 20);
        v145 = (char *)a1 + v144;
        v146 = (char *)a2 + v144;
        v147 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v147 - 8) + 32))(v145, v146, v147);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xEu:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v148 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0) + 20);
        v149 = (char *)a1 + v148;
        v150 = (char *)a2 + v148;
        v151 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v151 - 8) + 32))(v149, v150, v151);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xFu:
      case 0x11u:
        v152 = sub_2408E57A4();
        (*(void (**)(_DWORD *, _DWORD *, uint64_t))(*(_QWORD *)(v152 - 8) + 32))(a1, a2, v152);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x10u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v153 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0) + 20);
        v154 = (char *)a1 + v153;
        v155 = (char *)a2 + v153;
        v156 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v156 - 8) + 32))(v154, v155, v156);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        v14 = *(_QWORD *)(v7 + 64);
        goto LABEL_9;
    }
  }
LABEL_175:
  v320 = *(int *)(a3 + 20);
  v321 = (char *)a1 + v320;
  v322 = (char *)a2 + v320;
  v323 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v323 - 8) + 40))(v321, v322, v323);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTFlatExpr()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406995E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_9Tm(a1, a2, a3, &qword_256FFEC20);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTFlatExpr()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406995FC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_10Tm(a1, a2, a3, a4, &qword_256FFEC20);
}

void sub_240699608(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240408100(a1, a2, a3, qword_2570085D0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoAstflatExprEnum);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoAstflatExprEnum(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(_QWORD, _QWORD, _QWORD);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(_QWORD *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(uint64_t *, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  _BYTE *v47;
  _BYTE *v48;
  uint64_t v49;
  uint64_t v50;
  unsigned int (*v51)(_BYTE *, uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  void (*v58)(char *, char *, uint64_t);
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  void (*v64)(char *, char *, uint64_t);
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  void (*v70)(char *, char *, uint64_t);
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  void (*v76)(char *, char *, uint64_t);
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  void (*v81)(char *, char *, uint64_t);
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  void (*v87)(char *, char *, uint64_t);
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  void (*v93)(char *, char *, uint64_t);
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  void (*v99)(char *, char *, uint64_t);
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  int *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _BYTE *v113;
  _BYTE *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  void (*v125)(char *, char *, uint64_t);
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  void (*v130)(char *, char *, uint64_t);
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  void (*v136)(char *, char *, uint64_t);
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  _QWORD *v157;
  _QWORD *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  _QWORD *v189;
  _QWORD *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  char *v202;
  uint64_t v203;
  uint64_t v204;
  char *v205;
  char *v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  char *v213;
  char *v214;
  uint64_t v215;
  uint64_t v216;
  char *v217;
  char *v218;
  uint64_t v219;
  void (*v220)(char *, char *, uint64_t);
  void (*v221)(char *, char *, uint64_t);
  void (*v222)(char *, char *, uint64_t);
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  char *v226;
  char *v227;
  char *v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  void (*v238)(char *, char *, uint64_t);
  void (*v239)(char *, char *, uint64_t);
  void (*v240)(char *, char *, uint64_t);
  char *v241;
  char *v242;
  char *v243;
  void (*v244)(char *, char *, uint64_t);
  void (*v245)(char *, char *, uint64_t);
  void (*v246)(char *, char *, uint64_t);
  void (*v247)(char *, char *, uint64_t);
  void (*v248)(char *, char *, uint64_t);
  void (*v249)(char *, char *, uint64_t);
  void (*v250)(char *, char *, uint64_t);
  void (*v251)(char *, char *, uint64_t);
  void (*v252)(char *, char *, uint64_t);
  uint64_t v253;
  char *v254;
  char *v255;
  char *v256;
  char *v257;
  char *v258;
  char *v259;
  void (*v260)(char *, char *, uint64_t);
  void (*v261)(char *, char *, uint64_t);
  void (*v262)(char *, char *, uint64_t);
  char *v263;
  char *v264;
  char *v265;
  char *v266;
  char *v267;
  char *v268;
  uint64_t v269;
  char *v270;
  char *v271;
  char *v272;
  char *v273;
  char *v274;
  char *v275;
  char *v276;
  char *v277;
  char *v278;
  char *v279;
  char *v280;
  char *v281;
  char *v282;
  char *v283;
  char *v284;
  unsigned int (*v285)(_QWORD, _QWORD, _QWORD);
  char *v286;
  char *v287;
  char *v288;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v7 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        v8 = *(_QWORD *)(v7 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
        {
          v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              v100 = a2[1];
              *a1 = *a2;
              a1[1] = v100;
              swift_bridgeObjectRetain();
              goto LABEL_52;
            case 4u:
              *a1 = *a2;
              v121 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              v122 = (char *)a1 + v121;
              v123 = (char *)a2 + v121;
              v124 = sub_2408E57A4();
              v125 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v124 - 8) + 16);
              swift_bridgeObjectRetain();
              v125(v122, v123, v124);
              goto LABEL_52;
            case 5u:
              *a1 = *a2;
              v126 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              v127 = (char *)a1 + v126;
              v128 = (char *)a2 + v126;
              v129 = sub_2408E57A4();
              v130 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v129 - 8) + 16);
              swift_bridgeObjectRetain();
              v130(v127, v128, v129);
              goto LABEL_52;
            case 9u:
              *(_DWORD *)a1 = *(_DWORD *)a2;
              v131 = a2[2];
              a1[1] = a2[1];
              a1[2] = v131;
              v132 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              v133 = (char *)a1 + v132;
              v134 = (char *)a2 + v132;
              v135 = sub_2408E57A4();
              v136 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v135 - 8) + 16);
              swift_bridgeObjectRetain();
              v136(v133, v134, v135);
LABEL_52:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(v8 + 64));
              break;
          }
          (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
        }
        v137 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValue(0) + 20);
        v138 = (char *)a1 + v137;
        v139 = (char *)a2 + v137;
        v140 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v140 - 8) + 16))(v138, v139, v140);
        swift_storeEnumTagMultiPayload();
        return a1;
      case 1u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v12 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
        v13 = *(int *)(v12 + 20);
        v14 = (uint64_t *)((char *)a1 + v13);
        v15 = (uint64_t *)((char *)a2 + v13);
        v16 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        v17 = *(_QWORD *)(v16 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
          goto LABEL_13;
        v101 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        v102 = *(_QWORD *)(v101 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v102 + 48))(v15, 1, v101))
          goto LABEL_36;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
          case 6u:
          case 7u:
          case 8u:
            v116 = v15[1];
            *v14 = *v15;
            v14[1] = v116;
            swift_bridgeObjectRetain();
            goto LABEL_59;
          case 4u:
            *v14 = *v15;
            v141 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v254 = (char *)v15 + v141;
            v270 = (char *)v14 + v141;
            v223 = sub_2408E57A4();
            v238 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v223 - 8) + 16);
            swift_bridgeObjectRetain();
            v238(v270, v254, v223);
            goto LABEL_59;
          case 5u:
            *v14 = *v15;
            v142 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v255 = (char *)v15 + v142;
            v271 = (char *)v14 + v142;
            v224 = sub_2408E57A4();
            v239 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v224 - 8) + 16);
            swift_bridgeObjectRetain();
            v239(v271, v255, v224);
            goto LABEL_59;
          case 9u:
            *(_DWORD *)v14 = *(_DWORD *)v15;
            v143 = v15[2];
            v14[1] = v15[1];
            v14[2] = v143;
            v144 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v256 = (char *)v15 + v144;
            v272 = (char *)v14 + v144;
            v225 = sub_2408E57A4();
            v240 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v225 - 8) + 16);
            swift_bridgeObjectRetain();
            v240(v272, v256, v225);
LABEL_59:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v14, v15, *(_QWORD *)(v102 + 64));
            break;
        }
        goto LABEL_79;
      case 2u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v18 = (int *)type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
        v19 = v18[5];
        v20 = (uint64_t *)((char *)a1 + v19);
        v21 = (uint64_t *)((char *)a2 + v19);
        v22 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        v23 = *(_QWORD *)(v22 - 8);
        v24 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v23 + 48);
        if (v24(v21, 1, v22))
        {
          v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
          memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
        }
        else
        {
          v285 = v24;
          v103 = v18;
          v104 = v23;
          v105 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          v106 = *(_QWORD *)(v105 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v106 + 48))(v21, 1, v105))
          {
            v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
            memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v107 - 8) + 64));
            v23 = v104;
            v18 = v103;
          }
          else
          {
            v253 = v105;
            v269 = v106;
            v23 = v104;
            v18 = v103;
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                v117 = v21[1];
                *v20 = *v21;
                v20[1] = v117;
                swift_bridgeObjectRetain();
                v118 = v253;
                goto LABEL_65;
              case 4u:
                *v20 = *v21;
                v145 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v226 = (char *)v20 + v145;
                v241 = (char *)v21 + v145;
                v146 = sub_2408E57A4();
                v220 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v146 - 8) + 16);
                swift_bridgeObjectRetain();
                v220(v226, v241, v146);
                v118 = v253;
                goto LABEL_65;
              case 5u:
                *v20 = *v21;
                v147 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v227 = (char *)v20 + v147;
                v242 = (char *)v21 + v147;
                v148 = sub_2408E57A4();
                v221 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v148 - 8) + 16);
                swift_bridgeObjectRetain();
                v221(v227, v242, v148);
                v118 = v253;
                goto LABEL_65;
              case 9u:
                *(_DWORD *)v20 = *(_DWORD *)v21;
                v149 = v21[2];
                v20[1] = v21[1];
                v20[2] = v149;
                v150 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v228 = (char *)v20 + v150;
                v243 = (char *)v21 + v150;
                v151 = sub_2408E57A4();
                v222 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v151 - 8) + 16);
                swift_bridgeObjectRetain();
                v222(v228, v243, v151);
                v118 = v253;
LABEL_65:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v20, v21, *(_QWORD *)(v269 + 64));
                v23 = v104;
                v118 = v253;
                v18 = v103;
                break;
            }
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v269 + 56))(v20, 0, 1, v118);
          }
          v152 = *(int *)(v22 + 20);
          v153 = (char *)v20 + v152;
          v154 = (char *)v21 + v152;
          v155 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v155 - 8) + 16))(v153, v154, v155);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
          v24 = v285;
        }
        v156 = v18[6];
        v157 = (uint64_t *)((char *)a1 + v156);
        v158 = (uint64_t *)((char *)a2 + v156);
        if (v24((char *)a2 + v156, 1, v22))
        {
          v159 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
          memcpy(v157, v158, *(_QWORD *)(*(_QWORD *)(v159 - 8) + 64));
        }
        else
        {
          v160 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          v161 = *(_QWORD *)(v160 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v161 + 48))(v158, 1, v160))
          {
            v162 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
            memcpy(v157, v158, *(_QWORD *)(*(_QWORD *)(v162 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                v163 = v158[1];
                *v157 = *v158;
                v157[1] = v163;
                swift_bridgeObjectRetain();
                goto LABEL_99;
              case 4u:
                *v157 = *v158;
                v196 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v263 = (char *)v158 + v196;
                v279 = (char *)v157 + v196;
                v232 = sub_2408E57A4();
                v247 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v232 - 8) + 16);
                swift_bridgeObjectRetain();
                v247(v279, v263, v232);
                goto LABEL_99;
              case 5u:
                *v157 = *v158;
                v197 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v264 = (char *)v158 + v197;
                v280 = (char *)v157 + v197;
                v233 = sub_2408E57A4();
                v248 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v233 - 8) + 16);
                swift_bridgeObjectRetain();
                v248(v280, v264, v233);
                goto LABEL_99;
              case 9u:
                *(_DWORD *)v157 = *(_DWORD *)v158;
                v198 = v158[2];
                v157[1] = v158[1];
                v157[2] = v198;
                v199 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v265 = (char *)v158 + v199;
                v281 = (char *)v157 + v199;
                v234 = sub_2408E57A4();
                v249 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v234 - 8) + 16);
                swift_bridgeObjectRetain();
                v249(v281, v265, v234);
LABEL_99:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v157, v158, *(_QWORD *)(v161 + 64));
                break;
            }
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v161 + 56))(v157, 0, 1, v160);
          }
          v200 = *(int *)(v22 + 20);
          v201 = (char *)v157 + v200;
          v202 = (char *)v158 + v200;
          v203 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v203 - 8) + 16))(v201, v202, v203);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v157, 0, 1, v22);
        }
        v204 = v18[7];
        v205 = (char *)a1 + v204;
        v206 = (char *)a2 + v204;
        v207 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v207 - 8) + 16))(v205, v206, v207);
        swift_storeEnumTagMultiPayload();
        return a1;
      case 3u:
        v26 = a2[1];
        *a1 = *a2;
        a1[1] = v26;
        v12 = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
        v27 = *(int *)(v12 + 20);
        v14 = (uint64_t *)((char *)a1 + v27);
        v15 = (uint64_t *)((char *)a2 + v27);
        v16 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        v17 = *(_QWORD *)(v16 - 8);
        v28 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v17 + 48);
        swift_bridgeObjectRetain();
        if (v28(v15, 1, v16))
        {
LABEL_13:
          v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
          memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
        }
        else
        {
          v101 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          v102 = *(_QWORD *)(v101 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v102 + 48))(v15, 1, v101))
          {
LABEL_36:
            v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
            memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                v119 = v15[1];
                *v14 = *v15;
                v14[1] = v119;
                swift_bridgeObjectRetain();
                goto LABEL_78;
              case 4u:
                *v14 = *v15;
                v164 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v257 = (char *)v15 + v164;
                v273 = (char *)v14 + v164;
                v229 = sub_2408E57A4();
                v244 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v229 - 8) + 16);
                swift_bridgeObjectRetain();
                v244(v273, v257, v229);
                goto LABEL_78;
              case 5u:
                *v14 = *v15;
                v165 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v258 = (char *)v15 + v165;
                v274 = (char *)v14 + v165;
                v230 = sub_2408E57A4();
                v245 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v230 - 8) + 16);
                swift_bridgeObjectRetain();
                v245(v274, v258, v230);
                goto LABEL_78;
              case 9u:
                *(_DWORD *)v14 = *(_DWORD *)v15;
                v166 = v15[2];
                v14[1] = v15[1];
                v14[2] = v166;
                v167 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v259 = (char *)v15 + v167;
                v275 = (char *)v14 + v167;
                v231 = sub_2408E57A4();
                v246 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v231 - 8) + 16);
                swift_bridgeObjectRetain();
                v246(v275, v259, v231);
LABEL_78:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v14, v15, *(_QWORD *)(v102 + 64));
                break;
            }
LABEL_79:
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v102 + 56))(v14, 0, 1, v101);
          }
          v168 = *(int *)(v16 + 20);
          v169 = (char *)v14 + v168;
          v170 = (char *)v15 + v168;
          v171 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v171 - 8) + 16))(v169, v170, v171);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
        }
        goto LABEL_81;
      case 4u:
        v30 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        v31 = *(_QWORD *)(v30 - 8);
        v32 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v31 + 48);
        if (v32(a2, 1, v30))
        {
          v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
        }
        else
        {
          v109 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          v110 = *(_QWORD *)(v109 - 8);
          if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v110 + 48))(a2, 1, v109))
          {
            v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v111 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                v120 = a2[1];
                *a1 = *a2;
                a1[1] = v120;
                swift_bridgeObjectRetain();
                goto LABEL_86;
              case 4u:
                *a1 = *a2;
                v176 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v276 = (char *)a2 + v176;
                v286 = (char *)a1 + v176;
                v177 = sub_2408E57A4();
                v260 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v177 - 8) + 16);
                swift_bridgeObjectRetain();
                v260(v286, v276, v177);
                goto LABEL_86;
              case 5u:
                *a1 = *a2;
                v178 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v277 = (char *)a2 + v178;
                v287 = (char *)a1 + v178;
                v179 = sub_2408E57A4();
                v261 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v179 - 8) + 16);
                swift_bridgeObjectRetain();
                v261(v287, v277, v179);
                goto LABEL_86;
              case 9u:
                *(_DWORD *)a1 = *(_DWORD *)a2;
                v180 = a2[2];
                a1[1] = a2[1];
                a1[2] = v180;
                v181 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v278 = (char *)a2 + v181;
                v288 = (char *)a1 + v181;
                v182 = sub_2408E57A4();
                v262 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v182 - 8) + 16);
                swift_bridgeObjectRetain();
                v262(v288, v278, v182);
LABEL_86:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(a1, a2, *(_QWORD *)(v110 + 64));
                break;
            }
            (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v110 + 56))(a1, 0, 1, v109);
          }
          v183 = *(int *)(v30 + 20);
          v184 = (char *)a1 + v183;
          v185 = (char *)a2 + v183;
          v186 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v186 - 8) + 16))(v184, v185, v186);
          (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v31 + 56))(a1, 0, 1, v30);
        }
        v187 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
        v188 = *(int *)(v187 + 20);
        v189 = (uint64_t *)((char *)a1 + v188);
        v190 = (uint64_t *)((char *)a2 + v188);
        if (v32((uint64_t *)((char *)a2 + v188), 1, v30))
        {
          v191 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
          memcpy(v189, v190, *(_QWORD *)(*(_QWORD *)(v191 - 8) + 64));
        }
        else
        {
          v192 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          v193 = *(_QWORD *)(v192 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v193 + 48))(v190, 1, v192))
          {
            v194 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
            memcpy(v189, v190, *(_QWORD *)(*(_QWORD *)(v194 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                v195 = v190[1];
                *v189 = *v190;
                v189[1] = v195;
                swift_bridgeObjectRetain();
                goto LABEL_107;
              case 4u:
                *v189 = *v190;
                v208 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v266 = (char *)v190 + v208;
                v282 = (char *)v189 + v208;
                v235 = sub_2408E57A4();
                v250 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v235 - 8) + 16);
                swift_bridgeObjectRetain();
                v250(v282, v266, v235);
                goto LABEL_107;
              case 5u:
                *v189 = *v190;
                v209 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v267 = (char *)v190 + v209;
                v283 = (char *)v189 + v209;
                v236 = sub_2408E57A4();
                v251 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v236 - 8) + 16);
                swift_bridgeObjectRetain();
                v251(v283, v267, v236);
                goto LABEL_107;
              case 9u:
                *(_DWORD *)v189 = *(_DWORD *)v190;
                v210 = v190[2];
                v189[1] = v190[1];
                v189[2] = v210;
                v211 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v268 = (char *)v190 + v211;
                v284 = (char *)v189 + v211;
                v237 = sub_2408E57A4();
                v252 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v237 - 8) + 16);
                swift_bridgeObjectRetain();
                v252(v284, v268, v237);
LABEL_107:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v189, v190, *(_QWORD *)(v193 + 64));
                break;
            }
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v193 + 56))(v189, 0, 1, v192);
          }
          v212 = *(int *)(v30 + 20);
          v213 = (char *)v189 + v212;
          v214 = (char *)v190 + v212;
          v215 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v215 - 8) + 16))(v213, v214, v215);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v189, 0, 1, v30);
        }
        v216 = *(int *)(v187 + 24);
        v217 = (char *)a1 + v216;
        v218 = (char *)a2 + v216;
        v219 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v219 - 8) + 16))(v217, v218, v219);
        swift_storeEnumTagMultiPayload();
        return a1;
      case 5u:
        v34 = a2[1];
        *a1 = *a2;
        a1[1] = v34;
        a1[2] = a2[2];
        v35 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0) + 24);
        v36 = (char *)a1 + v35;
        v37 = (char *)a2 + v35;
        v38 = sub_2408E57A4();
        v39 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v39(v36, v37, v38);
        swift_storeEnumTagMultiPayload();
        return a1;
      case 6u:
        *a1 = *a2;
        v40 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0) + 20);
        v41 = (char *)a1 + v40;
        v42 = (char *)a2 + v40;
        v43 = sub_2408E57A4();
        v44 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16);
        swift_bridgeObjectRetain();
        v44(v41, v42, v43);
        swift_storeEnumTagMultiPayload();
        return a1;
      case 7u:
        v45 = a2[1];
        *a1 = *a2;
        a1[1] = v45;
        v12 = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
        v46 = *(int *)(v12 + 20);
        v47 = (char *)a1 + v46;
        v48 = (char *)a2 + v46;
        v49 = type metadata accessor for TranscriptProtoASTPickType(0);
        v50 = *(_QWORD *)(v49 - 8);
        v51 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v50 + 48);
        swift_bridgeObjectRetain();
        if (v51(v48, 1, v49))
        {
          v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D08);
          memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
        }
        else
        {
          *(_QWORD *)v47 = *(_QWORD *)v48;
          v47[8] = v48[8];
          v112 = *(int *)(v49 + 20);
          v113 = &v47[v112];
          v114 = &v48[v112];
          v115 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v115 - 8) + 16))(v113, v114, v115);
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
        }
LABEL_81:
        v172 = *(int *)(v12 + 24);
        v173 = (char *)a1 + v172;
        v174 = (char *)a2 + v172;
        v175 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v175 - 8) + 16))(v173, v174, v175);
        swift_storeEnumTagMultiPayload();
        break;
      case 8u:
        v53 = a2[1];
        *a1 = *a2;
        a1[1] = v53;
        v54 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0) + 20);
        v55 = (char *)a1 + v54;
        v56 = (char *)a2 + v54;
        v57 = sub_2408E57A4();
        v58 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16);
        swift_bridgeObjectRetain();
        v58(v55, v56, v57);
        swift_storeEnumTagMultiPayload();
        break;
      case 9u:
        v59 = a2[1];
        *a1 = *a2;
        a1[1] = v59;
        *((_WORD *)a1 + 8) = *((_WORD *)a2 + 8);
        v60 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0) + 28);
        v61 = (char *)a1 + v60;
        v62 = (char *)a2 + v60;
        v63 = sub_2408E57A4();
        v64 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 16);
        swift_bridgeObjectRetain();
        v64(v61, v62, v63);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xAu:
        v65 = a2[1];
        *a1 = *a2;
        a1[1] = v65;
        v66 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0) + 20);
        v67 = (char *)a1 + v66;
        v68 = (char *)a2 + v66;
        v69 = sub_2408E57A4();
        v70 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v69 - 8) + 16);
        swift_bridgeObjectRetain();
        v70(v67, v68, v69);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xBu:
        v71 = a2[1];
        *a1 = *a2;
        a1[1] = v71;
        v72 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0) + 20);
        v73 = (char *)a1 + v72;
        v74 = (char *)a2 + v72;
        v75 = sub_2408E57A4();
        v76 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 16);
        swift_bridgeObjectRetain();
        v76(v73, v74, v75);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xCu:
        *a1 = *a2;
        v77 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0) + 20);
        v78 = (char *)a1 + v77;
        v79 = (char *)a2 + v77;
        v80 = sub_2408E57A4();
        v81 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v80 - 8) + 16);
        swift_bridgeObjectRetain();
        v81(v78, v79, v80);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xDu:
        v82 = a2[1];
        *a1 = *a2;
        a1[1] = v82;
        v83 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0) + 20);
        v84 = (char *)a1 + v83;
        v85 = (char *)a2 + v83;
        v86 = sub_2408E57A4();
        v87 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v86 - 8) + 16);
        swift_bridgeObjectRetain();
        v87(v84, v85, v86);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xEu:
        v88 = a2[1];
        *a1 = *a2;
        a1[1] = v88;
        v89 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0) + 20);
        v90 = (char *)a1 + v89;
        v91 = (char *)a2 + v89;
        v92 = sub_2408E57A4();
        v93 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v92 - 8) + 16);
        swift_bridgeObjectRetain();
        v93(v90, v91, v92);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xFu:
      case 0x11u:
        v94 = sub_2408E57A4();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v94 - 8) + 16))(a1, a2, v94);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x10u:
        *a1 = *a2;
        v95 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0) + 20);
        v96 = (char *)a1 + v95;
        v97 = (char *)a2 + v95;
        v98 = sub_2408E57A4();
        v99 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 16);
        swift_bridgeObjectRetain();
        v99(v96, v97, v98);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for TranscriptProtoAstflatExprEnum(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t updated;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      v3 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(a1, 1, v3))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
          case 6u:
          case 7u:
          case 8u:
            swift_bridgeObjectRelease();
            break;
          case 4u:
            swift_bridgeObjectRelease();
            v19 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            goto LABEL_35;
          case 5u:
            swift_bridgeObjectRelease();
            v19 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            goto LABEL_35;
          case 9u:
            swift_bridgeObjectRelease();
            v19 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_35:
            v20 = a1 + v19;
            v21 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v20, v21);
            break;
          default:
            break;
        }
      }
      updated = type metadata accessor for TranscriptProtoASTFlatValue(0);
      goto LABEL_37;
    case 1:
      v4 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
      v5 = a1 + *(int *)(v4 + 20);
      v6 = type metadata accessor for TranscriptProtoASTFlatValue(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6))
        goto LABEL_44;
      v7 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v5, 1, v7))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
          case 6u:
          case 7u:
          case 8u:
            goto LABEL_15;
          case 4u:
            goto LABEL_38;
          case 5u:
            goto LABEL_39;
          case 9u:
            goto LABEL_41;
          default:
            goto LABEL_43;
        }
      }
      goto LABEL_43;
    case 2:
      v8 = (int *)type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
      v9 = a1 + v8[5];
      v10 = type metadata accessor for TranscriptProtoASTFlatValue(0);
      v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48);
      if (!v11(v9, 1, v10))
      {
        v12 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v9, 1, v12))
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              swift_bridgeObjectRelease();
              break;
            case 4u:
              swift_bridgeObjectRelease();
              v28 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              goto LABEL_48;
            case 5u:
              swift_bridgeObjectRelease();
              v28 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              goto LABEL_48;
            case 9u:
              swift_bridgeObjectRelease();
              v28 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_48:
              v29 = v9 + v28;
              v30 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v29, v30);
              break;
            default:
              break;
          }
        }
        v31 = v9 + *(int *)(v10 + 20);
        v32 = sub_2408E57A4();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v31, v32);
      }
      v33 = a1 + v8[6];
      if (!v11(v33, 1, v10))
      {
        v34 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 48))(v33, 1, v34))
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              swift_bridgeObjectRelease();
              break;
            case 4u:
              swift_bridgeObjectRelease();
              v43 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              goto LABEL_66;
            case 5u:
              swift_bridgeObjectRelease();
              v43 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              goto LABEL_66;
            case 9u:
              swift_bridgeObjectRelease();
              v43 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_66:
              v44 = v33 + v43;
              v45 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 8))(v44, v45);
              break;
            default:
              break;
          }
        }
        v46 = v33 + *(int *)(v10 + 20);
        v47 = sub_2408E57A4();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 8))(v46, v47);
      }
      v17 = v8[7];
      goto LABEL_75;
    case 3:
      swift_bridgeObjectRelease();
      v4 = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
      v5 = a1 + *(int *)(v4 + 20);
      v6 = type metadata accessor for TranscriptProtoASTFlatValue(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6))
        goto LABEL_44;
      v13 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v5, 1, v13))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
          case 6u:
          case 7u:
          case 8u:
LABEL_15:
            swift_bridgeObjectRelease();
            break;
          case 4u:
LABEL_38:
            swift_bridgeObjectRelease();
            v22 = type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0);
            goto LABEL_40;
          case 5u:
LABEL_39:
            swift_bridgeObjectRelease();
            v22 = type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0);
LABEL_40:
            v23 = *(int *)(v22 + 20);
            goto LABEL_42;
          case 9u:
LABEL_41:
            swift_bridgeObjectRelease();
            v23 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_42:
            v24 = v5 + v23;
            v25 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v24, v25);
            break;
          default:
            break;
        }
      }
LABEL_43:
      v26 = v5 + *(int *)(v6 + 20);
      v27 = sub_2408E57A4();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v26, v27);
LABEL_44:
      v17 = *(int *)(v4 + 24);
      goto LABEL_75;
    case 4:
      v14 = type metadata accessor for TranscriptProtoASTFlatValue(0);
      v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48);
      if (!v15(a1, 1, v14))
      {
        v16 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(a1, 1, v16))
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              swift_bridgeObjectRelease();
              break;
            case 4u:
              swift_bridgeObjectRelease();
              v35 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              goto LABEL_57;
            case 5u:
              swift_bridgeObjectRelease();
              v35 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              goto LABEL_57;
            case 9u:
              swift_bridgeObjectRelease();
              v35 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_57:
              v36 = a1 + v35;
              v37 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 8))(v36, v37);
              break;
            default:
              break;
          }
        }
        v38 = a1 + *(int *)(v14 + 20);
        v39 = sub_2408E57A4();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 8))(v38, v39);
      }
      v40 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
      v41 = a1 + *(int *)(v40 + 20);
      if (!v15(v41, 1, v14))
      {
        v42 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 48))(v41, 1, v42))
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              swift_bridgeObjectRelease();
              break;
            case 4u:
              swift_bridgeObjectRelease();
              v48 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              goto LABEL_72;
            case 5u:
              swift_bridgeObjectRelease();
              v48 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              goto LABEL_72;
            case 9u:
              swift_bridgeObjectRelease();
              v48 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_72:
              v49 = v41 + v48;
              v50 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 8))(v49, v50);
              break;
            default:
              break;
          }
        }
        v51 = v41 + *(int *)(v14 + 20);
        v52 = sub_2408E57A4();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 8))(v51, v52);
      }
      v17 = *(int *)(v40 + 24);
      goto LABEL_75;
    case 5:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v17 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0) + 24);
      goto LABEL_75;
    case 6:
      swift_bridgeObjectRelease();
      updated = type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0);
      goto LABEL_37;
    case 7:
      swift_bridgeObjectRelease();
      v4 = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
      v5 = a1 + *(int *)(v4 + 20);
      v6 = type metadata accessor for TranscriptProtoASTPickType(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6))
        goto LABEL_43;
      goto LABEL_44;
    case 8:
      swift_bridgeObjectRelease();
      updated = type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0);
      goto LABEL_37;
    case 9:
      swift_bridgeObjectRelease();
      v17 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0) + 28);
      goto LABEL_75;
    case 10:
      swift_bridgeObjectRelease();
      updated = type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0);
      goto LABEL_37;
    case 11:
      swift_bridgeObjectRelease();
      updated = type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0);
      goto LABEL_37;
    case 12:
      swift_bridgeObjectRelease();
      updated = type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0);
      goto LABEL_37;
    case 13:
      swift_bridgeObjectRelease();
      updated = type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0);
      goto LABEL_37;
    case 14:
      swift_bridgeObjectRelease();
      updated = type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0);
      goto LABEL_37;
    case 15:
    case 17:
      goto LABEL_76;
    case 16:
      swift_bridgeObjectRelease();
      updated = type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0);
LABEL_37:
      v17 = *(int *)(updated + 20);
LABEL_75:
      a1 += v17;
LABEL_76:
      v53 = sub_2408E57A4();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 8))(a1, v53);
      break;
    default:
      return result;
  }
  return result;
}

_QWORD *initializeWithCopy for TranscriptProtoAstflatExprEnum(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(_QWORD, _QWORD, _QWORD);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(_QWORD *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(_QWORD *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  _BYTE *v45;
  uint64_t v46;
  uint64_t v47;
  unsigned int (*v48)(_BYTE *, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  void (*v55)(char *, char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  void (*v61)(char *, char *, uint64_t);
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  void (*v67)(char *, char *, uint64_t);
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  void (*v73)(char *, char *, uint64_t);
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  void (*v78)(char *, char *, uint64_t);
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  void (*v84)(char *, char *, uint64_t);
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  void (*v90)(char *, char *, uint64_t);
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  void (*v96)(char *, char *, uint64_t);
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  int *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  _BYTE *v110;
  _BYTE *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  void (*v122)(char *, char *, uint64_t);
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  void (*v127)(char *, char *, uint64_t);
  uint64_t v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  void (*v133)(char *, char *, uint64_t);
  uint64_t v134;
  char *v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  _QWORD *v154;
  _QWORD *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  _QWORD *v186;
  _QWORD *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  char *v198;
  char *v199;
  uint64_t v200;
  uint64_t v201;
  char *v202;
  char *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  char *v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  char *v214;
  char *v215;
  uint64_t v216;
  void (*v218)(char *, char *, uint64_t);
  void (*v219)(char *, char *, uint64_t);
  void (*v220)(char *, char *, uint64_t);
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  char *v224;
  char *v225;
  char *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  void (*v236)(char *, char *, uint64_t);
  void (*v237)(char *, char *, uint64_t);
  void (*v238)(char *, char *, uint64_t);
  char *v239;
  char *v240;
  char *v241;
  void (*v242)(char *, char *, uint64_t);
  void (*v243)(char *, char *, uint64_t);
  void (*v244)(char *, char *, uint64_t);
  void (*v245)(char *, char *, uint64_t);
  void (*v246)(char *, char *, uint64_t);
  void (*v247)(char *, char *, uint64_t);
  void (*v248)(char *, char *, uint64_t);
  void (*v249)(char *, char *, uint64_t);
  void (*v250)(char *, char *, uint64_t);
  uint64_t v251;
  char *v252;
  char *v253;
  char *v254;
  char *v255;
  char *v256;
  char *v257;
  void (*v258)(char *, char *, uint64_t);
  void (*v259)(char *, char *, uint64_t);
  void (*v260)(char *, char *, uint64_t);
  char *v261;
  char *v262;
  char *v263;
  char *v264;
  char *v265;
  char *v266;
  uint64_t v267;
  char *v268;
  char *v269;
  char *v270;
  char *v271;
  char *v272;
  char *v273;
  char *v274;
  char *v275;
  char *v276;
  char *v277;
  char *v278;
  char *v279;
  char *v280;
  char *v281;
  char *v282;
  unsigned int (*v283)(_QWORD, _QWORD, _QWORD);
  char *v284;
  char *v285;
  char *v286;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v6 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      v7 = *(_QWORD *)(v6 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
      {
        v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
          case 6u:
          case 7u:
          case 8u:
            v97 = a2[1];
            *a1 = *a2;
            a1[1] = v97;
            swift_bridgeObjectRetain();
            goto LABEL_49;
          case 4u:
            *a1 = *a2;
            v118 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v119 = (char *)a1 + v118;
            v120 = (char *)a2 + v118;
            v121 = sub_2408E57A4();
            v122 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v121 - 8) + 16);
            swift_bridgeObjectRetain();
            v122(v119, v120, v121);
            goto LABEL_49;
          case 5u:
            *a1 = *a2;
            v123 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v124 = (char *)a1 + v123;
            v125 = (char *)a2 + v123;
            v126 = sub_2408E57A4();
            v127 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v126 - 8) + 16);
            swift_bridgeObjectRetain();
            v127(v124, v125, v126);
            goto LABEL_49;
          case 9u:
            *(_DWORD *)a1 = *(_DWORD *)a2;
            v128 = a2[2];
            a1[1] = a2[1];
            a1[2] = v128;
            v129 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v130 = (char *)a1 + v129;
            v131 = (char *)a2 + v129;
            v132 = sub_2408E57A4();
            v133 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v132 - 8) + 16);
            swift_bridgeObjectRetain();
            v133(v130, v131, v132);
LABEL_49:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(v7 + 64));
            break;
        }
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      v134 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValue(0) + 20);
      v135 = (char *)a1 + v134;
      v136 = (char *)a2 + v134;
      v137 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v137 - 8) + 16))(v135, v136, v137);
      goto LABEL_108;
    case 1u:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v9 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
      v10 = *(int *)(v9 + 20);
      v11 = (_QWORD *)((char *)a1 + v10);
      v12 = (_QWORD *)((char *)a2 + v10);
      v13 = type metadata accessor for TranscriptProtoASTFlatValue(0);
      v14 = *(_QWORD *)(v13 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
        goto LABEL_10;
      v98 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      v99 = *(_QWORD *)(v98 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v99 + 48))(v12, 1, v98))
        goto LABEL_33;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 3u:
        case 6u:
        case 7u:
        case 8u:
          v113 = v12[1];
          *v11 = *v12;
          v11[1] = v113;
          swift_bridgeObjectRetain();
          goto LABEL_56;
        case 4u:
          *v11 = *v12;
          v138 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          v252 = (char *)v12 + v138;
          v268 = (char *)v11 + v138;
          v221 = sub_2408E57A4();
          v236 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v221 - 8) + 16);
          swift_bridgeObjectRetain();
          v236(v268, v252, v221);
          goto LABEL_56;
        case 5u:
          *v11 = *v12;
          v139 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          v253 = (char *)v12 + v139;
          v269 = (char *)v11 + v139;
          v222 = sub_2408E57A4();
          v237 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v222 - 8) + 16);
          swift_bridgeObjectRetain();
          v237(v269, v253, v222);
          goto LABEL_56;
        case 9u:
          *(_DWORD *)v11 = *(_DWORD *)v12;
          v140 = v12[2];
          v11[1] = v12[1];
          v11[2] = v140;
          v141 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          v254 = (char *)v12 + v141;
          v270 = (char *)v11 + v141;
          v223 = sub_2408E57A4();
          v238 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v223 - 8) + 16);
          swift_bridgeObjectRetain();
          v238(v270, v254, v223);
LABEL_56:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v11, v12, *(_QWORD *)(v99 + 64));
          break;
      }
      goto LABEL_76;
    case 2u:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v15 = (int *)type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
      v16 = v15[5];
      v17 = (_QWORD *)((char *)a1 + v16);
      v18 = (_QWORD *)((char *)a2 + v16);
      v19 = type metadata accessor for TranscriptProtoASTFlatValue(0);
      v20 = *(_QWORD *)(v19 - 8);
      v21 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v20 + 48);
      if (v21(v18, 1, v19))
      {
        v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        v283 = v21;
        v100 = v15;
        v101 = v20;
        v102 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        v103 = *(_QWORD *)(v102 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v103 + 48))(v18, 1, v102))
        {
          v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
          memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v104 - 8) + 64));
          v20 = v101;
          v15 = v100;
        }
        else
        {
          v251 = v102;
          v267 = v103;
          v20 = v101;
          v15 = v100;
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              v114 = v18[1];
              *v17 = *v18;
              v17[1] = v114;
              swift_bridgeObjectRetain();
              v115 = v251;
              goto LABEL_62;
            case 4u:
              *v17 = *v18;
              v142 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              v224 = (char *)v17 + v142;
              v239 = (char *)v18 + v142;
              v143 = sub_2408E57A4();
              v218 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v143 - 8) + 16);
              swift_bridgeObjectRetain();
              v218(v224, v239, v143);
              v115 = v251;
              goto LABEL_62;
            case 5u:
              *v17 = *v18;
              v144 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              v225 = (char *)v17 + v144;
              v240 = (char *)v18 + v144;
              v145 = sub_2408E57A4();
              v219 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v145 - 8) + 16);
              swift_bridgeObjectRetain();
              v219(v225, v240, v145);
              v115 = v251;
              goto LABEL_62;
            case 9u:
              *(_DWORD *)v17 = *(_DWORD *)v18;
              v146 = v18[2];
              v17[1] = v18[1];
              v17[2] = v146;
              v147 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              v226 = (char *)v17 + v147;
              v241 = (char *)v18 + v147;
              v148 = sub_2408E57A4();
              v220 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v148 - 8) + 16);
              swift_bridgeObjectRetain();
              v220(v226, v241, v148);
              v115 = v251;
LABEL_62:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v17, v18, *(_QWORD *)(v267 + 64));
              v20 = v101;
              v115 = v251;
              v15 = v100;
              break;
          }
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v267 + 56))(v17, 0, 1, v115);
        }
        v149 = *(int *)(v19 + 20);
        v150 = (char *)v17 + v149;
        v151 = (char *)v18 + v149;
        v152 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v152 - 8) + 16))(v150, v151, v152);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
        v21 = v283;
      }
      v153 = v15[6];
      v154 = (_QWORD *)((char *)a1 + v153);
      v155 = (_QWORD *)((char *)a2 + v153);
      if (v21((char *)a2 + v153, 1, v19))
      {
        v156 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
        memcpy(v154, v155, *(_QWORD *)(*(_QWORD *)(v156 - 8) + 64));
      }
      else
      {
        v157 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        v158 = *(_QWORD *)(v157 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v158 + 48))(v155, 1, v157))
        {
          v159 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
          memcpy(v154, v155, *(_QWORD *)(*(_QWORD *)(v159 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              v160 = v155[1];
              *v154 = *v155;
              v154[1] = v160;
              swift_bridgeObjectRetain();
              goto LABEL_96;
            case 4u:
              *v154 = *v155;
              v193 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              v261 = (char *)v155 + v193;
              v277 = (char *)v154 + v193;
              v230 = sub_2408E57A4();
              v245 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v230 - 8) + 16);
              swift_bridgeObjectRetain();
              v245(v277, v261, v230);
              goto LABEL_96;
            case 5u:
              *v154 = *v155;
              v194 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              v262 = (char *)v155 + v194;
              v278 = (char *)v154 + v194;
              v231 = sub_2408E57A4();
              v246 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v231 - 8) + 16);
              swift_bridgeObjectRetain();
              v246(v278, v262, v231);
              goto LABEL_96;
            case 9u:
              *(_DWORD *)v154 = *(_DWORD *)v155;
              v195 = v155[2];
              v154[1] = v155[1];
              v154[2] = v195;
              v196 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              v263 = (char *)v155 + v196;
              v279 = (char *)v154 + v196;
              v232 = sub_2408E57A4();
              v247 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v232 - 8) + 16);
              swift_bridgeObjectRetain();
              v247(v279, v263, v232);
LABEL_96:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v154, v155, *(_QWORD *)(v158 + 64));
              break;
          }
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v158 + 56))(v154, 0, 1, v157);
        }
        v197 = *(int *)(v19 + 20);
        v198 = (char *)v154 + v197;
        v199 = (char *)v155 + v197;
        v200 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v200 - 8) + 16))(v198, v199, v200);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v154, 0, 1, v19);
      }
      v201 = v15[7];
      v202 = (char *)a1 + v201;
      v203 = (char *)a2 + v201;
      v204 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v204 - 8) + 16))(v202, v203, v204);
      goto LABEL_108;
    case 3u:
      v23 = a2[1];
      *a1 = *a2;
      a1[1] = v23;
      v9 = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
      v24 = *(int *)(v9 + 20);
      v11 = (_QWORD *)((char *)a1 + v24);
      v12 = (_QWORD *)((char *)a2 + v24);
      v13 = type metadata accessor for TranscriptProtoASTFlatValue(0);
      v14 = *(_QWORD *)(v13 - 8);
      v25 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v14 + 48);
      swift_bridgeObjectRetain();
      if (v25(v12, 1, v13))
      {
LABEL_10:
        v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        v98 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        v99 = *(_QWORD *)(v98 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v99 + 48))(v12, 1, v98))
        {
LABEL_33:
          v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
          memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v105 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              v116 = v12[1];
              *v11 = *v12;
              v11[1] = v116;
              swift_bridgeObjectRetain();
              goto LABEL_75;
            case 4u:
              *v11 = *v12;
              v161 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              v255 = (char *)v12 + v161;
              v271 = (char *)v11 + v161;
              v227 = sub_2408E57A4();
              v242 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v227 - 8) + 16);
              swift_bridgeObjectRetain();
              v242(v271, v255, v227);
              goto LABEL_75;
            case 5u:
              *v11 = *v12;
              v162 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              v256 = (char *)v12 + v162;
              v272 = (char *)v11 + v162;
              v228 = sub_2408E57A4();
              v243 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v228 - 8) + 16);
              swift_bridgeObjectRetain();
              v243(v272, v256, v228);
              goto LABEL_75;
            case 9u:
              *(_DWORD *)v11 = *(_DWORD *)v12;
              v163 = v12[2];
              v11[1] = v12[1];
              v11[2] = v163;
              v164 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              v257 = (char *)v12 + v164;
              v273 = (char *)v11 + v164;
              v229 = sub_2408E57A4();
              v244 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v229 - 8) + 16);
              swift_bridgeObjectRetain();
              v244(v273, v257, v229);
LABEL_75:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v11, v12, *(_QWORD *)(v99 + 64));
              break;
          }
LABEL_76:
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v99 + 56))(v11, 0, 1, v98);
        }
        v165 = *(int *)(v13 + 20);
        v166 = (char *)v11 + v165;
        v167 = (char *)v12 + v165;
        v168 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v168 - 8) + 16))(v166, v167, v168);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      }
LABEL_78:
      v169 = *(int *)(v9 + 24);
      v170 = (char *)a1 + v169;
      v171 = (char *)a2 + v169;
      v172 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v172 - 8) + 16))(v170, v171, v172);
LABEL_108:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 4u:
      v27 = type metadata accessor for TranscriptProtoASTFlatValue(0);
      v28 = *(_QWORD *)(v27 - 8);
      v29 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v28 + 48);
      if (v29(a2, 1, v27))
      {
        v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        v106 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        v107 = *(_QWORD *)(v106 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v107 + 48))(a2, 1, v106))
        {
          v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              v117 = a2[1];
              *a1 = *a2;
              a1[1] = v117;
              swift_bridgeObjectRetain();
              goto LABEL_83;
            case 4u:
              *a1 = *a2;
              v173 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              v274 = (char *)a2 + v173;
              v284 = (char *)a1 + v173;
              v174 = sub_2408E57A4();
              v258 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v174 - 8) + 16);
              swift_bridgeObjectRetain();
              v258(v284, v274, v174);
              goto LABEL_83;
            case 5u:
              *a1 = *a2;
              v175 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              v275 = (char *)a2 + v175;
              v285 = (char *)a1 + v175;
              v176 = sub_2408E57A4();
              v259 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v176 - 8) + 16);
              swift_bridgeObjectRetain();
              v259(v285, v275, v176);
              goto LABEL_83;
            case 9u:
              *(_DWORD *)a1 = *(_DWORD *)a2;
              v177 = a2[2];
              a1[1] = a2[1];
              a1[2] = v177;
              v178 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              v276 = (char *)a2 + v178;
              v286 = (char *)a1 + v178;
              v179 = sub_2408E57A4();
              v260 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v179 - 8) + 16);
              swift_bridgeObjectRetain();
              v260(v286, v276, v179);
LABEL_83:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(v107 + 64));
              break;
          }
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v107 + 56))(a1, 0, 1, v106);
        }
        v180 = *(int *)(v27 + 20);
        v181 = (char *)a1 + v180;
        v182 = (char *)a2 + v180;
        v183 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v183 - 8) + 16))(v181, v182, v183);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v28 + 56))(a1, 0, 1, v27);
      }
      v184 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
      v185 = *(int *)(v184 + 20);
      v186 = (_QWORD *)((char *)a1 + v185);
      v187 = (_QWORD *)((char *)a2 + v185);
      if (v29((_QWORD *)((char *)a2 + v185), 1, v27))
      {
        v188 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
        memcpy(v186, v187, *(_QWORD *)(*(_QWORD *)(v188 - 8) + 64));
      }
      else
      {
        v189 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        v190 = *(_QWORD *)(v189 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v190 + 48))(v187, 1, v189))
        {
          v191 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
          memcpy(v186, v187, *(_QWORD *)(*(_QWORD *)(v191 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              v192 = v187[1];
              *v186 = *v187;
              v186[1] = v192;
              swift_bridgeObjectRetain();
              goto LABEL_104;
            case 4u:
              *v186 = *v187;
              v205 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              v264 = (char *)v187 + v205;
              v280 = (char *)v186 + v205;
              v233 = sub_2408E57A4();
              v248 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v233 - 8) + 16);
              swift_bridgeObjectRetain();
              v248(v280, v264, v233);
              goto LABEL_104;
            case 5u:
              *v186 = *v187;
              v206 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              v265 = (char *)v187 + v206;
              v281 = (char *)v186 + v206;
              v234 = sub_2408E57A4();
              v249 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v234 - 8) + 16);
              swift_bridgeObjectRetain();
              v249(v281, v265, v234);
              goto LABEL_104;
            case 9u:
              *(_DWORD *)v186 = *(_DWORD *)v187;
              v207 = v187[2];
              v186[1] = v187[1];
              v186[2] = v207;
              v208 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              v266 = (char *)v187 + v208;
              v282 = (char *)v186 + v208;
              v235 = sub_2408E57A4();
              v250 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v235 - 8) + 16);
              swift_bridgeObjectRetain();
              v250(v282, v266, v235);
LABEL_104:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v186, v187, *(_QWORD *)(v190 + 64));
              break;
          }
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v190 + 56))(v186, 0, 1, v189);
        }
        v209 = *(int *)(v27 + 20);
        v210 = (char *)v186 + v209;
        v211 = (char *)v187 + v209;
        v212 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v212 - 8) + 16))(v210, v211, v212);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v186, 0, 1, v27);
      }
      v213 = *(int *)(v184 + 24);
      v214 = (char *)a1 + v213;
      v215 = (char *)a2 + v213;
      v216 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v216 - 8) + 16))(v214, v215, v216);
      goto LABEL_108;
    case 5u:
      v31 = a2[1];
      *a1 = *a2;
      a1[1] = v31;
      a1[2] = a2[2];
      v32 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0) + 24);
      v33 = (char *)a1 + v32;
      v34 = (char *)a2 + v32;
      v35 = sub_2408E57A4();
      v36 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v36(v33, v34, v35);
      goto LABEL_108;
    case 6u:
      *a1 = *a2;
      v37 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0) + 20);
      v38 = (char *)a1 + v37;
      v39 = (char *)a2 + v37;
      v40 = sub_2408E57A4();
      v41 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16);
      swift_bridgeObjectRetain();
      v41(v38, v39, v40);
      goto LABEL_108;
    case 7u:
      v42 = a2[1];
      *a1 = *a2;
      a1[1] = v42;
      v9 = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
      v43 = *(int *)(v9 + 20);
      v44 = (char *)a1 + v43;
      v45 = (char *)a2 + v43;
      v46 = type metadata accessor for TranscriptProtoASTPickType(0);
      v47 = *(_QWORD *)(v46 - 8);
      v48 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v47 + 48);
      swift_bridgeObjectRetain();
      if (v48(v45, 1, v46))
      {
        v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D08);
        memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
      }
      else
      {
        *(_QWORD *)v44 = *(_QWORD *)v45;
        v44[8] = v45[8];
        v109 = *(int *)(v46 + 20);
        v110 = &v44[v109];
        v111 = &v45[v109];
        v112 = sub_2408E57A4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v112 - 8) + 16))(v110, v111, v112);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
      }
      goto LABEL_78;
    case 8u:
      v50 = a2[1];
      *a1 = *a2;
      a1[1] = v50;
      v51 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0) + 20);
      v52 = (char *)a1 + v51;
      v53 = (char *)a2 + v51;
      v54 = sub_2408E57A4();
      v55 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 16);
      swift_bridgeObjectRetain();
      v55(v52, v53, v54);
      goto LABEL_108;
    case 9u:
      v56 = a2[1];
      *a1 = *a2;
      a1[1] = v56;
      *((_WORD *)a1 + 8) = *((_WORD *)a2 + 8);
      v57 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0) + 28);
      v58 = (char *)a1 + v57;
      v59 = (char *)a2 + v57;
      v60 = sub_2408E57A4();
      v61 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 16);
      swift_bridgeObjectRetain();
      v61(v58, v59, v60);
      goto LABEL_108;
    case 0xAu:
      v62 = a2[1];
      *a1 = *a2;
      a1[1] = v62;
      v63 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0) + 20);
      v64 = (char *)a1 + v63;
      v65 = (char *)a2 + v63;
      v66 = sub_2408E57A4();
      v67 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 16);
      swift_bridgeObjectRetain();
      v67(v64, v65, v66);
      goto LABEL_108;
    case 0xBu:
      v68 = a2[1];
      *a1 = *a2;
      a1[1] = v68;
      v69 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0) + 20);
      v70 = (char *)a1 + v69;
      v71 = (char *)a2 + v69;
      v72 = sub_2408E57A4();
      v73 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v72 - 8) + 16);
      swift_bridgeObjectRetain();
      v73(v70, v71, v72);
      goto LABEL_108;
    case 0xCu:
      *a1 = *a2;
      v74 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0) + 20);
      v75 = (char *)a1 + v74;
      v76 = (char *)a2 + v74;
      v77 = sub_2408E57A4();
      v78 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v77 - 8) + 16);
      swift_bridgeObjectRetain();
      v78(v75, v76, v77);
      goto LABEL_108;
    case 0xDu:
      v79 = a2[1];
      *a1 = *a2;
      a1[1] = v79;
      v80 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0) + 20);
      v81 = (char *)a1 + v80;
      v82 = (char *)a2 + v80;
      v83 = sub_2408E57A4();
      v84 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v83 - 8) + 16);
      swift_bridgeObjectRetain();
      v84(v81, v82, v83);
      goto LABEL_108;
    case 0xEu:
      v85 = a2[1];
      *a1 = *a2;
      a1[1] = v85;
      v86 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0) + 20);
      v87 = (char *)a1 + v86;
      v88 = (char *)a2 + v86;
      v89 = sub_2408E57A4();
      v90 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v89 - 8) + 16);
      swift_bridgeObjectRetain();
      v90(v87, v88, v89);
      goto LABEL_108;
    case 0xFu:
    case 0x11u:
      v91 = sub_2408E57A4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v91 - 8) + 16))(a1, a2, v91);
      goto LABEL_108;
    case 0x10u:
      *a1 = *a2;
      v92 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0) + 20);
      v93 = (char *)a1 + v92;
      v94 = (char *)a2 + v92;
      v95 = sub_2408E57A4();
      v96 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v95 - 8) + 16);
      swift_bridgeObjectRetain();
      v96(v93, v94, v95);
      goto LABEL_108;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      return a1;
  }
}

_QWORD *assignWithCopy for TranscriptProtoAstflatExprEnum(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(_QWORD, _QWORD, _QWORD);
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(_QWORD *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(_QWORD *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  _BYTE *v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int (*v45)(_BYTE *, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  void (*v51)(char *, char *, uint64_t);
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  void (*v56)(char *, char *, uint64_t);
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  void (*v61)(char *, char *, uint64_t);
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  void (*v66)(char *, char *, uint64_t);
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  void (*v71)(char *, char *, uint64_t);
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  void (*v76)(char *, char *, uint64_t);
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  void (*v81)(char *, char *, uint64_t);
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  void (*v87)(char *, char *, uint64_t);
  uint64_t v88;
  uint64_t v89;
  int *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _BYTE *v101;
  _BYTE *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  void (*v109)(char *, char *, uint64_t);
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  void (*v114)(char *, char *, uint64_t);
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  void (*v119)(char *, char *, uint64_t);
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  _QWORD *v138;
  _QWORD *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  _QWORD *v167;
  _QWORD *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  char *v188;
  char *v189;
  uint64_t v190;
  uint64_t v191;
  char *v192;
  char *v193;
  uint64_t v194;
  void (*v196)(char *, char *, uint64_t);
  void (*v197)(char *, char *, uint64_t);
  void (*v198)(char *, char *, uint64_t);
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  char *v202;
  char *v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  void (*v214)(char *, char *, uint64_t);
  void (*v215)(char *, char *, uint64_t);
  void (*v216)(char *, char *, uint64_t);
  char *v217;
  char *v218;
  char *v219;
  void (*v220)(char *, char *, uint64_t);
  void (*v221)(char *, char *, uint64_t);
  void (*v222)(char *, char *, uint64_t);
  void (*v223)(char *, char *, uint64_t);
  void (*v224)(char *, char *, uint64_t);
  void (*v225)(char *, char *, uint64_t);
  void (*v226)(char *, char *, uint64_t);
  void (*v227)(char *, char *, uint64_t);
  void (*v228)(char *, char *, uint64_t);
  uint64_t v229;
  char *v230;
  char *v231;
  char *v232;
  char *v233;
  char *v234;
  char *v235;
  void (*v236)(char *, char *, uint64_t);
  void (*v237)(char *, char *, uint64_t);
  void (*v238)(char *, char *, uint64_t);
  char *v239;
  char *v240;
  char *v241;
  char *v242;
  char *v243;
  char *v244;
  uint64_t v245;
  char *v246;
  char *v247;
  char *v248;
  char *v249;
  char *v250;
  char *v251;
  char *v252;
  char *v253;
  char *v254;
  char *v255;
  char *v256;
  char *v257;
  char *v258;
  char *v259;
  char *v260;
  unsigned int (*v261)(_QWORD, _QWORD, _QWORD);
  char *v262;
  char *v263;
  char *v264;

  if (a1 != a2)
  {
    sub_240388AE4((uint64_t)a1, type metadata accessor for TranscriptProtoAstflatExprEnum);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v6 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        v7 = *(_QWORD *)(v6 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
        {
          v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              *a1 = *a2;
              a1[1] = a2[1];
              swift_bridgeObjectRetain();
              goto LABEL_50;
            case 4u:
              *a1 = *a2;
              v105 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              v106 = (char *)a1 + v105;
              v107 = (char *)a2 + v105;
              v108 = sub_2408E57A4();
              v109 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v108 - 8) + 16);
              swift_bridgeObjectRetain();
              v109(v106, v107, v108);
              goto LABEL_50;
            case 5u:
              *a1 = *a2;
              v110 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              v111 = (char *)a1 + v110;
              v112 = (char *)a2 + v110;
              v113 = sub_2408E57A4();
              v114 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v113 - 8) + 16);
              swift_bridgeObjectRetain();
              v114(v111, v112, v113);
              goto LABEL_50;
            case 9u:
              *(_DWORD *)a1 = *(_DWORD *)a2;
              a1[1] = a2[1];
              a1[2] = a2[2];
              v115 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              v116 = (char *)a1 + v115;
              v117 = (char *)a2 + v115;
              v118 = sub_2408E57A4();
              v119 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v118 - 8) + 16);
              swift_bridgeObjectRetain();
              v119(v116, v117, v118);
LABEL_50:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(v7 + 64));
              break;
          }
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
        }
        v120 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValue(0) + 20);
        v121 = (char *)a1 + v120;
        v122 = (char *)a2 + v120;
        v123 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v123 - 8) + 16))(v121, v122, v123);
        goto LABEL_109;
      case 1u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v9 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
        v10 = *(int *)(v9 + 20);
        v11 = (_QWORD *)((char *)a1 + v10);
        v12 = (_QWORD *)((char *)a2 + v10);
        v13 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        v14 = *(_QWORD *)(v13 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
          goto LABEL_11;
        v88 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        v89 = *(_QWORD *)(v88 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v89 + 48))(v12, 1, v88))
          goto LABEL_34;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
          case 6u:
          case 7u:
          case 8u:
            *v11 = *v12;
            v11[1] = v12[1];
            swift_bridgeObjectRetain();
            goto LABEL_57;
          case 4u:
            *v11 = *v12;
            v124 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v230 = (char *)v12 + v124;
            v246 = (char *)v11 + v124;
            v199 = sub_2408E57A4();
            v214 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v199 - 8) + 16);
            swift_bridgeObjectRetain();
            v214(v246, v230, v199);
            goto LABEL_57;
          case 5u:
            *v11 = *v12;
            v125 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v231 = (char *)v12 + v125;
            v247 = (char *)v11 + v125;
            v200 = sub_2408E57A4();
            v215 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v200 - 8) + 16);
            swift_bridgeObjectRetain();
            v215(v247, v231, v200);
            goto LABEL_57;
          case 9u:
            *(_DWORD *)v11 = *(_DWORD *)v12;
            v11[1] = v12[1];
            v11[2] = v12[2];
            v126 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v232 = (char *)v12 + v126;
            v248 = (char *)v11 + v126;
            v201 = sub_2408E57A4();
            v216 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v201 - 8) + 16);
            swift_bridgeObjectRetain();
            v216(v248, v232, v201);
LABEL_57:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v11, v12, *(_QWORD *)(v89 + 64));
            break;
        }
        goto LABEL_77;
      case 2u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v15 = (int *)type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
        v16 = v15[5];
        v17 = (_QWORD *)((char *)a1 + v16);
        v18 = (_QWORD *)((char *)a2 + v16);
        v19 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        v20 = *(_QWORD *)(v19 - 8);
        v21 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v20 + 48);
        if (v21(v18, 1, v19))
        {
          v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
          memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
        }
        else
        {
          v261 = v21;
          v90 = v15;
          v91 = v20;
          v92 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          v93 = *(_QWORD *)(v92 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v93 + 48))(v18, 1, v92))
          {
            v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
            memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
            v20 = v91;
            v15 = v90;
          }
          else
          {
            v229 = v92;
            v245 = v93;
            v20 = v91;
            v15 = v90;
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                *v17 = *v18;
                v17[1] = v18[1];
                swift_bridgeObjectRetain();
                v104 = v229;
                goto LABEL_63;
              case 4u:
                *v17 = *v18;
                v127 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v202 = (char *)v17 + v127;
                v217 = (char *)v18 + v127;
                v128 = sub_2408E57A4();
                v196 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v128 - 8) + 16);
                swift_bridgeObjectRetain();
                v196(v202, v217, v128);
                v104 = v229;
                goto LABEL_63;
              case 5u:
                *v17 = *v18;
                v129 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v203 = (char *)v17 + v129;
                v218 = (char *)v18 + v129;
                v130 = sub_2408E57A4();
                v197 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v130 - 8) + 16);
                swift_bridgeObjectRetain();
                v197(v203, v218, v130);
                v104 = v229;
                goto LABEL_63;
              case 9u:
                *(_DWORD *)v17 = *(_DWORD *)v18;
                v17[1] = v18[1];
                v17[2] = v18[2];
                v131 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v204 = (char *)v17 + v131;
                v219 = (char *)v18 + v131;
                v132 = sub_2408E57A4();
                v198 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v132 - 8) + 16);
                swift_bridgeObjectRetain();
                v198(v204, v219, v132);
                v104 = v229;
LABEL_63:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v17, v18, *(_QWORD *)(v245 + 64));
                v20 = v91;
                v104 = v229;
                v15 = v90;
                break;
            }
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v245 + 56))(v17, 0, 1, v104);
          }
          v133 = *(int *)(v19 + 20);
          v134 = (char *)v17 + v133;
          v135 = (char *)v18 + v133;
          v136 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v136 - 8) + 16))(v134, v135, v136);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
          v21 = v261;
        }
        v137 = v15[6];
        v138 = (_QWORD *)((char *)a1 + v137);
        v139 = (_QWORD *)((char *)a2 + v137);
        if (v21((char *)a2 + v137, 1, v19))
        {
          v140 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
          memcpy(v138, v139, *(_QWORD *)(*(_QWORD *)(v140 - 8) + 64));
        }
        else
        {
          v141 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          v142 = *(_QWORD *)(v141 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v142 + 48))(v139, 1, v141))
          {
            v143 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
            memcpy(v138, v139, *(_QWORD *)(*(_QWORD *)(v143 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                *v138 = *v139;
                v138[1] = v139[1];
                swift_bridgeObjectRetain();
                goto LABEL_97;
              case 4u:
                *v138 = *v139;
                v173 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v239 = (char *)v139 + v173;
                v255 = (char *)v138 + v173;
                v208 = sub_2408E57A4();
                v223 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v208 - 8) + 16);
                swift_bridgeObjectRetain();
                v223(v255, v239, v208);
                goto LABEL_97;
              case 5u:
                *v138 = *v139;
                v174 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v240 = (char *)v139 + v174;
                v256 = (char *)v138 + v174;
                v209 = sub_2408E57A4();
                v224 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v209 - 8) + 16);
                swift_bridgeObjectRetain();
                v224(v256, v240, v209);
                goto LABEL_97;
              case 9u:
                *(_DWORD *)v138 = *(_DWORD *)v139;
                v138[1] = v139[1];
                v138[2] = v139[2];
                v175 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v241 = (char *)v139 + v175;
                v257 = (char *)v138 + v175;
                v210 = sub_2408E57A4();
                v225 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v210 - 8) + 16);
                swift_bridgeObjectRetain();
                v225(v257, v241, v210);
LABEL_97:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v138, v139, *(_QWORD *)(v142 + 64));
                break;
            }
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v142 + 56))(v138, 0, 1, v141);
          }
          v176 = *(int *)(v19 + 20);
          v177 = (char *)v138 + v176;
          v178 = (char *)v139 + v176;
          v179 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v179 - 8) + 16))(v177, v178, v179);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v138, 0, 1, v19);
        }
        v180 = v15[7];
        v181 = (char *)a1 + v180;
        v182 = (char *)a2 + v180;
        v183 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v183 - 8) + 16))(v181, v182, v183);
        goto LABEL_109;
      case 3u:
        *a1 = *a2;
        a1[1] = a2[1];
        v9 = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
        v23 = *(int *)(v9 + 20);
        v11 = (_QWORD *)((char *)a1 + v23);
        v12 = (_QWORD *)((char *)a2 + v23);
        v13 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        v14 = *(_QWORD *)(v13 - 8);
        v24 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v14 + 48);
        swift_bridgeObjectRetain();
        if (v24(v12, 1, v13))
        {
LABEL_11:
          v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
          memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
        }
        else
        {
          v88 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          v89 = *(_QWORD *)(v88 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v89 + 48))(v12, 1, v88))
          {
LABEL_34:
            v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
            memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                *v11 = *v12;
                v11[1] = v12[1];
                swift_bridgeObjectRetain();
                goto LABEL_76;
              case 4u:
                *v11 = *v12;
                v144 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v233 = (char *)v12 + v144;
                v249 = (char *)v11 + v144;
                v205 = sub_2408E57A4();
                v220 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v205 - 8) + 16);
                swift_bridgeObjectRetain();
                v220(v249, v233, v205);
                goto LABEL_76;
              case 5u:
                *v11 = *v12;
                v145 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v234 = (char *)v12 + v145;
                v250 = (char *)v11 + v145;
                v206 = sub_2408E57A4();
                v221 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v206 - 8) + 16);
                swift_bridgeObjectRetain();
                v221(v250, v234, v206);
                goto LABEL_76;
              case 9u:
                *(_DWORD *)v11 = *(_DWORD *)v12;
                v11[1] = v12[1];
                v11[2] = v12[2];
                v146 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v235 = (char *)v12 + v146;
                v251 = (char *)v11 + v146;
                v207 = sub_2408E57A4();
                v222 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v207 - 8) + 16);
                swift_bridgeObjectRetain();
                v222(v251, v235, v207);
LABEL_76:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v11, v12, *(_QWORD *)(v89 + 64));
                break;
            }
LABEL_77:
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v89 + 56))(v11, 0, 1, v88);
          }
          v147 = *(int *)(v13 + 20);
          v148 = (char *)v11 + v147;
          v149 = (char *)v12 + v147;
          v150 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v150 - 8) + 16))(v148, v149, v150);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
        }
LABEL_79:
        v151 = *(int *)(v9 + 24);
        v152 = (char *)a1 + v151;
        v153 = (char *)a2 + v151;
        v154 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v154 - 8) + 16))(v152, v153, v154);
LABEL_109:
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        v26 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        v27 = *(_QWORD *)(v26 - 8);
        v28 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v27 + 48);
        if (v28(a2, 1, v26))
        {
          v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
        }
        else
        {
          v96 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          v97 = *(_QWORD *)(v96 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v97 + 48))(a2, 1, v96))
          {
            v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v98 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                *a1 = *a2;
                a1[1] = a2[1];
                swift_bridgeObjectRetain();
                goto LABEL_84;
              case 4u:
                *a1 = *a2;
                v155 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v252 = (char *)a2 + v155;
                v262 = (char *)a1 + v155;
                v156 = sub_2408E57A4();
                v236 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v156 - 8) + 16);
                swift_bridgeObjectRetain();
                v236(v262, v252, v156);
                goto LABEL_84;
              case 5u:
                *a1 = *a2;
                v157 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v253 = (char *)a2 + v157;
                v263 = (char *)a1 + v157;
                v158 = sub_2408E57A4();
                v237 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v158 - 8) + 16);
                swift_bridgeObjectRetain();
                v237(v263, v253, v158);
                goto LABEL_84;
              case 9u:
                *(_DWORD *)a1 = *(_DWORD *)a2;
                a1[1] = a2[1];
                a1[2] = a2[2];
                v159 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v254 = (char *)a2 + v159;
                v264 = (char *)a1 + v159;
                v160 = sub_2408E57A4();
                v238 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v160 - 8) + 16);
                swift_bridgeObjectRetain();
                v238(v264, v254, v160);
LABEL_84:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(a1, a2, *(_QWORD *)(v97 + 64));
                break;
            }
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v97 + 56))(a1, 0, 1, v96);
          }
          v161 = *(int *)(v26 + 20);
          v162 = (char *)a1 + v161;
          v163 = (char *)a2 + v161;
          v164 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v164 - 8) + 16))(v162, v163, v164);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v27 + 56))(a1, 0, 1, v26);
        }
        v165 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
        v166 = *(int *)(v165 + 20);
        v167 = (_QWORD *)((char *)a1 + v166);
        v168 = (_QWORD *)((char *)a2 + v166);
        if (v28((_QWORD *)((char *)a2 + v166), 1, v26))
        {
          v169 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
          memcpy(v167, v168, *(_QWORD *)(*(_QWORD *)(v169 - 8) + 64));
        }
        else
        {
          v170 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          v171 = *(_QWORD *)(v170 - 8);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v171 + 48))(v168, 1, v170))
          {
            v172 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
            memcpy(v167, v168, *(_QWORD *)(*(_QWORD *)(v172 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 3u:
              case 6u:
              case 7u:
              case 8u:
                *v167 = *v168;
                v167[1] = v168[1];
                swift_bridgeObjectRetain();
                goto LABEL_105;
              case 4u:
                *v167 = *v168;
                v184 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v242 = (char *)v168 + v184;
                v258 = (char *)v167 + v184;
                v211 = sub_2408E57A4();
                v226 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v211 - 8) + 16);
                swift_bridgeObjectRetain();
                v226(v258, v242, v211);
                goto LABEL_105;
              case 5u:
                *v167 = *v168;
                v185 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v243 = (char *)v168 + v185;
                v259 = (char *)v167 + v185;
                v212 = sub_2408E57A4();
                v227 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v212 - 8) + 16);
                swift_bridgeObjectRetain();
                v227(v259, v243, v212);
                goto LABEL_105;
              case 9u:
                *(_DWORD *)v167 = *(_DWORD *)v168;
                v167[1] = v168[1];
                v167[2] = v168[2];
                v186 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v244 = (char *)v168 + v186;
                v260 = (char *)v167 + v186;
                v213 = sub_2408E57A4();
                v228 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v213 - 8) + 16);
                swift_bridgeObjectRetain();
                v228(v260, v244, v213);
LABEL_105:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v167, v168, *(_QWORD *)(v171 + 64));
                break;
            }
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v171 + 56))(v167, 0, 1, v170);
          }
          v187 = *(int *)(v26 + 20);
          v188 = (char *)v167 + v187;
          v189 = (char *)v168 + v187;
          v190 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v190 - 8) + 16))(v188, v189, v190);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v167, 0, 1, v26);
        }
        v191 = *(int *)(v165 + 24);
        v192 = (char *)a1 + v191;
        v193 = (char *)a2 + v191;
        v194 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v194 - 8) + 16))(v192, v193, v194);
        goto LABEL_109;
      case 5u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        v30 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0) + 24);
        v31 = (char *)a1 + v30;
        v32 = (char *)a2 + v30;
        v33 = sub_2408E57A4();
        v34 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v34(v31, v32, v33);
        goto LABEL_109;
      case 6u:
        *a1 = *a2;
        v35 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0) + 20);
        v36 = (char *)a1 + v35;
        v37 = (char *)a2 + v35;
        v38 = sub_2408E57A4();
        v39 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16);
        swift_bridgeObjectRetain();
        v39(v36, v37, v38);
        goto LABEL_109;
      case 7u:
        *a1 = *a2;
        a1[1] = a2[1];
        v9 = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
        v40 = *(int *)(v9 + 20);
        v41 = (char *)a1 + v40;
        v42 = (char *)a2 + v40;
        v43 = type metadata accessor for TranscriptProtoASTPickType(0);
        v44 = *(_QWORD *)(v43 - 8);
        v45 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v44 + 48);
        swift_bridgeObjectRetain();
        if (v45(v42, 1, v43))
        {
          v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D08);
          memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
        }
        else
        {
          v99 = *(_QWORD *)v42;
          v41[8] = v42[8];
          *(_QWORD *)v41 = v99;
          v100 = *(int *)(v43 + 20);
          v101 = &v41[v100];
          v102 = &v42[v100];
          v103 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v103 - 8) + 16))(v101, v102, v103);
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
        }
        goto LABEL_79;
      case 8u:
        *a1 = *a2;
        a1[1] = a2[1];
        v47 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0) + 20);
        v48 = (char *)a1 + v47;
        v49 = (char *)a2 + v47;
        v50 = sub_2408E57A4();
        v51 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 16);
        swift_bridgeObjectRetain();
        v51(v48, v49, v50);
        goto LABEL_109;
      case 9u:
        *a1 = *a2;
        a1[1] = a2[1];
        *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
        *((_BYTE *)a1 + 17) = *((_BYTE *)a2 + 17);
        v52 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0) + 28);
        v53 = (char *)a1 + v52;
        v54 = (char *)a2 + v52;
        v55 = sub_2408E57A4();
        v56 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 16);
        swift_bridgeObjectRetain();
        v56(v53, v54, v55);
        goto LABEL_109;
      case 0xAu:
        *a1 = *a2;
        a1[1] = a2[1];
        v57 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0) + 20);
        v58 = (char *)a1 + v57;
        v59 = (char *)a2 + v57;
        v60 = sub_2408E57A4();
        v61 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 16);
        swift_bridgeObjectRetain();
        v61(v58, v59, v60);
        goto LABEL_109;
      case 0xBu:
        *a1 = *a2;
        a1[1] = a2[1];
        v62 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0) + 20);
        v63 = (char *)a1 + v62;
        v64 = (char *)a2 + v62;
        v65 = sub_2408E57A4();
        v66 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 16);
        swift_bridgeObjectRetain();
        v66(v63, v64, v65);
        goto LABEL_109;
      case 0xCu:
        *a1 = *a2;
        v67 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0) + 20);
        v68 = (char *)a1 + v67;
        v69 = (char *)a2 + v67;
        v70 = sub_2408E57A4();
        v71 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 16);
        swift_bridgeObjectRetain();
        v71(v68, v69, v70);
        goto LABEL_109;
      case 0xDu:
        *a1 = *a2;
        a1[1] = a2[1];
        v72 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0) + 20);
        v73 = (char *)a1 + v72;
        v74 = (char *)a2 + v72;
        v75 = sub_2408E57A4();
        v76 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 16);
        swift_bridgeObjectRetain();
        v76(v73, v74, v75);
        goto LABEL_109;
      case 0xEu:
        *a1 = *a2;
        a1[1] = a2[1];
        v77 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0) + 20);
        v78 = (char *)a1 + v77;
        v79 = (char *)a2 + v77;
        v80 = sub_2408E57A4();
        v81 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v80 - 8) + 16);
        swift_bridgeObjectRetain();
        v81(v78, v79, v80);
        goto LABEL_109;
      case 0xFu:
      case 0x11u:
        v82 = sub_2408E57A4();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v82 - 8) + 16))(a1, a2, v82);
        goto LABEL_109;
      case 0x10u:
        *a1 = *a2;
        v83 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0) + 20);
        v84 = (char *)a1 + v83;
        v85 = (char *)a2 + v83;
        v86 = sub_2408E57A4();
        v87 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v86 - 8) + 16);
        swift_bridgeObjectRetain();
        v87(v84, v85, v86);
        goto LABEL_109;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        return a1;
    }
  }
  return a1;
}

_DWORD *initializeWithTake for TranscriptProtoAstflatExprEnum(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _DWORD *v11;
  _DWORD *v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  _DWORD *v17;
  _DWORD *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(_DWORD *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(_DWORD *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  int EnumCaseMultiPayload;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _BYTE *v91;
  _BYTE *v92;
  uint64_t v93;
  int v94;
  int v95;
  uint64_t v96;
  uint64_t v97;
  int v98;
  uint64_t v99;
  uint64_t v100;
  int v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  _DWORD *v128;
  _DWORD *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  int v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  _DWORD *v163;
  _DWORD *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  int v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  char *v193;
  char *v194;
  uint64_t v195;
  char *v197;
  char *v198;
  char *v199;
  char *v200;
  char *v201;
  uint64_t v202;
  char *v203;
  char *v204;
  char *v205;
  char *v206;
  char *v207;
  char *v208;
  char *v209;
  char *v210;
  char *v211;
  uint64_t v212;
  char *v213;
  char *v214;
  char *v215;
  char *v216;
  char *v217;
  char *v218;
  char *v219;
  char *v220;
  char *v221;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v6 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      v7 = *(_QWORD *)(v6 - 8);
      if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
      {
        v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      }
      else
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        switch(EnumCaseMultiPayload)
        {
          case 9:
            *a1 = *a2;
            *(_OWORD *)(a1 + 2) = *(_OWORD *)(a2 + 2);
            v106 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v107 = (char *)a1 + v106;
            v108 = (char *)a2 + v106;
            v109 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v109 - 8) + 32))(v107, v108, v109);
            swift_storeEnumTagMultiPayload();
            break;
          case 5:
            *(_QWORD *)a1 = *(_QWORD *)a2;
            v110 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v111 = (char *)a1 + v110;
            v112 = (char *)a2 + v110;
            v113 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v113 - 8) + 32))(v111, v112, v113);
            swift_storeEnumTagMultiPayload();
            break;
          case 4:
            *(_QWORD *)a1 = *(_QWORD *)a2;
            v77 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v78 = (char *)a1 + v77;
            v79 = (char *)a2 + v77;
            v80 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v80 - 8) + 32))(v78, v79, v80);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(v7 + 64));
            break;
        }
        (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      v114 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValue(0) + 20);
      v115 = (char *)a1 + v114;
      v116 = (char *)a2 + v114;
      v117 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v117 - 8) + 32))(v115, v116, v117);
      goto LABEL_107;
    case 1u:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v9 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
      v10 = *(int *)(v9 + 20);
      v11 = (_DWORD *)((char *)a1 + v10);
      v12 = (_DWORD *)((char *)a2 + v10);
      v13 = type metadata accessor for TranscriptProtoASTFlatValue(0);
      v14 = *(_QWORD *)(v13 - 8);
      if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
        goto LABEL_10;
      v81 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      v82 = *(_QWORD *)(v81 - 8);
      if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v82 + 48))(v12, 1, v81))
        goto LABEL_35;
      v94 = swift_getEnumCaseMultiPayload();
      switch(v94)
      {
        case 9:
          goto LABEL_76;
        case 5:
          goto LABEL_77;
        case 4:
          goto LABEL_50;
      }
      goto LABEL_78;
    case 2u:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v15 = (int *)type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
      v16 = v15[5];
      v17 = (_DWORD *)((char *)a1 + v16);
      v18 = (_DWORD *)((char *)a2 + v16);
      v19 = type metadata accessor for TranscriptProtoASTFlatValue(0);
      v20 = *(_QWORD *)(v19 - 8);
      v21 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v20 + 48);
      if (v21(v18, 1, v19))
      {
        v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        v212 = v20;
        v83 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        v84 = *(_QWORD *)(v83 - 8);
        if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v84 + 48))(v18, 1, v83))
        {
          v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
          memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
          v20 = v212;
        }
        else
        {
          v202 = v84;
          v95 = swift_getEnumCaseMultiPayload();
          if (v95 == 9)
          {
            *v17 = *v18;
            *(_OWORD *)(v17 + 2) = *(_OWORD *)(v18 + 2);
            v118 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v119 = (char *)v17 + v118;
            v200 = (char *)v18 + v118;
            v120 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v120 - 8) + 32))(v119, v200, v120);
            swift_storeEnumTagMultiPayload();
            v20 = v212;
          }
          else
          {
            v20 = v212;
            if (v95 == 5)
            {
              *(_QWORD *)v17 = *(_QWORD *)v18;
              v121 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              v198 = (char *)v18 + v121;
              v201 = (char *)v17 + v121;
              v122 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v122 - 8) + 32))(v201, v198, v122);
              swift_storeEnumTagMultiPayload();
            }
            else if (v95 == 4)
            {
              *(_QWORD *)v17 = *(_QWORD *)v18;
              v96 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              v197 = (char *)v18 + v96;
              v199 = (char *)v17 + v96;
              v97 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v97 - 8) + 32))(v199, v197, v97);
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              memcpy(v17, v18, *(_QWORD *)(v202 + 64));
            }
          }
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v202 + 56))(v17, 0, 1, v83);
        }
        v123 = *(int *)(v19 + 20);
        v124 = (char *)v17 + v123;
        v125 = (char *)v18 + v123;
        v126 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v126 - 8) + 32))(v124, v125, v126);
        (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      }
      v127 = v15[6];
      v128 = (_DWORD *)((char *)a1 + v127);
      v129 = (_DWORD *)((char *)a2 + v127);
      if (v21((_DWORD *)((char *)a2 + v127), 1, v19))
      {
        v130 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
        memcpy(v128, v129, *(_QWORD *)(*(_QWORD *)(v130 - 8) + 64));
      }
      else
      {
        v131 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        v132 = *(_QWORD *)(v131 - 8);
        if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v132 + 48))(v129, 1, v131))
        {
          v133 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
          memcpy(v128, v129, *(_QWORD *)(*(_QWORD *)(v133 - 8) + 64));
        }
        else
        {
          v134 = swift_getEnumCaseMultiPayload();
          switch(v134)
          {
            case 9:
              *v128 = *v129;
              *(_OWORD *)(v128 + 2) = *(_OWORD *)(v129 + 2);
              v172 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              v208 = (char *)v129 + v172;
              v218 = (char *)v128 + v172;
              v173 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v173 - 8) + 32))(v218, v208, v173);
              swift_storeEnumTagMultiPayload();
              break;
            case 5:
              *(_QWORD *)v128 = *(_QWORD *)v129;
              v174 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              v209 = (char *)v129 + v174;
              v219 = (char *)v128 + v174;
              v175 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v175 - 8) + 32))(v219, v209, v175);
              swift_storeEnumTagMultiPayload();
              break;
            case 4:
              *(_QWORD *)v128 = *(_QWORD *)v129;
              v135 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              v204 = (char *)v129 + v135;
              v214 = (char *)v128 + v135;
              v136 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v136 - 8) + 32))(v214, v204, v136);
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v128, v129, *(_QWORD *)(v132 + 64));
              break;
          }
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v132 + 56))(v128, 0, 1, v131);
        }
        v176 = *(int *)(v19 + 20);
        v177 = (char *)v128 + v176;
        v178 = (char *)v129 + v176;
        v179 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v179 - 8) + 32))(v177, v178, v179);
        (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v128, 0, 1, v19);
      }
      v180 = v15[7];
      v181 = (char *)a1 + v180;
      v182 = (char *)a2 + v180;
      v183 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v183 - 8) + 32))(v181, v182, v183);
      goto LABEL_107;
    case 3u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v9 = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
      v23 = *(int *)(v9 + 20);
      v11 = (_DWORD *)((char *)a1 + v23);
      v12 = (_DWORD *)((char *)a2 + v23);
      v13 = type metadata accessor for TranscriptProtoASTFlatValue(0);
      v14 = *(_QWORD *)(v13 - 8);
      if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
      {
LABEL_10:
        v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        v81 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        v82 = *(_QWORD *)(v81 - 8);
        if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v82 + 48))(v12, 1, v81))
        {
LABEL_35:
          v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
          memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
        }
        else
        {
          v98 = swift_getEnumCaseMultiPayload();
          switch(v98)
          {
            case 9:
LABEL_76:
              *v11 = *v12;
              *(_OWORD *)(v11 + 2) = *(_OWORD *)(v12 + 2);
              v137 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              v205 = (char *)v12 + v137;
              v215 = (char *)v11 + v137;
              v138 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v138 - 8) + 32))(v215, v205, v138);
              swift_storeEnumTagMultiPayload();
              break;
            case 5:
LABEL_77:
              *(_QWORD *)v11 = *(_QWORD *)v12;
              v139 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              v206 = (char *)v12 + v139;
              v216 = (char *)v11 + v139;
              v140 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v140 - 8) + 32))(v216, v206, v140);
              swift_storeEnumTagMultiPayload();
              break;
            case 4:
LABEL_50:
              *(_QWORD *)v11 = *(_QWORD *)v12;
              v99 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              v203 = (char *)v12 + v99;
              v213 = (char *)v11 + v99;
              v100 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v100 - 8) + 32))(v213, v203, v100);
              swift_storeEnumTagMultiPayload();
              break;
            default:
LABEL_78:
              memcpy(v11, v12, *(_QWORD *)(v82 + 64));
              break;
          }
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v82 + 56))(v11, 0, 1, v81);
        }
        v141 = *(int *)(v13 + 20);
        v142 = (char *)v11 + v141;
        v143 = (char *)v12 + v141;
        v144 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v144 - 8) + 32))(v142, v143, v144);
        (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      }
LABEL_81:
      v145 = *(int *)(v9 + 24);
      v146 = (char *)a1 + v145;
      v147 = (char *)a2 + v145;
      v148 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v148 - 8) + 32))(v146, v147, v148);
LABEL_107:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 4u:
      v25 = type metadata accessor for TranscriptProtoASTFlatValue(0);
      v26 = *(_QWORD *)(v25 - 8);
      v27 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v26 + 48);
      if (v27(a2, 1, v25))
      {
        v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        v87 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        v88 = *(_QWORD *)(v87 - 8);
        if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v88 + 48))(a2, 1, v87))
        {
          v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
        }
        else
        {
          v101 = swift_getEnumCaseMultiPayload();
          switch(v101)
          {
            case 9:
              *a1 = *a2;
              *(_OWORD *)(a1 + 2) = *(_OWORD *)(a2 + 2);
              v149 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              v150 = (char *)a1 + v149;
              v151 = (char *)a2 + v149;
              v152 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v152 - 8) + 32))(v150, v151, v152);
              swift_storeEnumTagMultiPayload();
              break;
            case 5:
              *(_QWORD *)a1 = *(_QWORD *)a2;
              v153 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              v154 = (char *)a1 + v153;
              v155 = (char *)a2 + v153;
              v156 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v156 - 8) + 32))(v154, v155, v156);
              swift_storeEnumTagMultiPayload();
              break;
            case 4:
              *(_QWORD *)a1 = *(_QWORD *)a2;
              v102 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              v103 = (char *)a1 + v102;
              v104 = (char *)a2 + v102;
              v105 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v105 - 8) + 32))(v103, v104, v105);
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(v88 + 64));
              break;
          }
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v88 + 56))(a1, 0, 1, v87);
        }
        v157 = *(int *)(v25 + 20);
        v158 = (char *)a1 + v157;
        v159 = (char *)a2 + v157;
        v160 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v160 - 8) + 32))(v158, v159, v160);
        (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v26 + 56))(a1, 0, 1, v25);
      }
      v161 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
      v162 = *(int *)(v161 + 20);
      v163 = (_DWORD *)((char *)a1 + v162);
      v164 = (_DWORD *)((char *)a2 + v162);
      if (v27((_DWORD *)((char *)a2 + v162), 1, v25))
      {
        v165 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
        memcpy(v163, v164, *(_QWORD *)(*(_QWORD *)(v165 - 8) + 64));
      }
      else
      {
        v166 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        v167 = *(_QWORD *)(v166 - 8);
        if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v167 + 48))(v164, 1, v166))
        {
          v168 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
          memcpy(v163, v164, *(_QWORD *)(*(_QWORD *)(v168 - 8) + 64));
        }
        else
        {
          v169 = swift_getEnumCaseMultiPayload();
          switch(v169)
          {
            case 9:
              *v163 = *v164;
              *(_OWORD *)(v163 + 2) = *(_OWORD *)(v164 + 2);
              v184 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              v210 = (char *)v164 + v184;
              v220 = (char *)v163 + v184;
              v185 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v185 - 8) + 32))(v220, v210, v185);
              swift_storeEnumTagMultiPayload();
              break;
            case 5:
              *(_QWORD *)v163 = *(_QWORD *)v164;
              v186 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              v211 = (char *)v164 + v186;
              v221 = (char *)v163 + v186;
              v187 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v187 - 8) + 32))(v221, v211, v187);
              swift_storeEnumTagMultiPayload();
              break;
            case 4:
              *(_QWORD *)v163 = *(_QWORD *)v164;
              v170 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              v207 = (char *)v164 + v170;
              v217 = (char *)v163 + v170;
              v171 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v171 - 8) + 32))(v217, v207, v171);
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v163, v164, *(_QWORD *)(v167 + 64));
              break;
          }
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v167 + 56))(v163, 0, 1, v166);
        }
        v188 = *(int *)(v25 + 20);
        v189 = (char *)v163 + v188;
        v190 = (char *)v164 + v188;
        v191 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v191 - 8) + 32))(v189, v190, v191);
        (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v163, 0, 1, v25);
      }
      v192 = *(int *)(v161 + 24);
      v193 = (char *)a1 + v192;
      v194 = (char *)a2 + v192;
      v195 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v195 - 8) + 32))(v193, v194, v195);
      goto LABEL_107;
    case 5u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      v29 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0) + 24);
      v30 = (char *)a1 + v29;
      v31 = (char *)a2 + v29;
      v32 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v30, v31, v32);
      goto LABEL_107;
    case 6u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v33 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0) + 20);
      v34 = (char *)a1 + v33;
      v35 = (char *)a2 + v33;
      v36 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v34, v35, v36);
      goto LABEL_107;
    case 7u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v9 = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
      v37 = *(int *)(v9 + 20);
      v38 = (char *)a1 + v37;
      v39 = (char *)a2 + v37;
      v40 = type metadata accessor for TranscriptProtoASTPickType(0);
      v41 = *(_QWORD *)(v40 - 8);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
      {
        v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D08);
        memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      }
      else
      {
        *(_QWORD *)v38 = *(_QWORD *)v39;
        v38[8] = v39[8];
        v90 = *(int *)(v40 + 20);
        v91 = &v38[v90];
        v92 = &v39[v90];
        v93 = sub_2408E57A4();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v93 - 8) + 32))(v91, v92, v93);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
      }
      goto LABEL_81;
    case 8u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v43 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0) + 20);
      v44 = (char *)a1 + v43;
      v45 = (char *)a2 + v43;
      v46 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
      goto LABEL_107;
    case 9u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_WORD *)a1 + 8) = *((_WORD *)a2 + 8);
      v47 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0) + 28);
      v48 = (char *)a1 + v47;
      v49 = (char *)a2 + v47;
      v50 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v48, v49, v50);
      goto LABEL_107;
    case 0xAu:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v51 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0) + 20);
      v52 = (char *)a1 + v51;
      v53 = (char *)a2 + v51;
      v54 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v52, v53, v54);
      goto LABEL_107;
    case 0xBu:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v55 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0) + 20);
      v56 = (char *)a1 + v55;
      v57 = (char *)a2 + v55;
      v58 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v56, v57, v58);
      goto LABEL_107;
    case 0xCu:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v59 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0) + 20);
      v60 = (char *)a1 + v59;
      v61 = (char *)a2 + v59;
      v62 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 32))(v60, v61, v62);
      goto LABEL_107;
    case 0xDu:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v63 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0) + 20);
      v64 = (char *)a1 + v63;
      v65 = (char *)a2 + v63;
      v66 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 32))(v64, v65, v66);
      goto LABEL_107;
    case 0xEu:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v67 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0) + 20);
      v68 = (char *)a1 + v67;
      v69 = (char *)a2 + v67;
      v70 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 32))(v68, v69, v70);
      goto LABEL_107;
    case 0xFu:
    case 0x11u:
      v71 = sub_2408E57A4();
      (*(void (**)(_DWORD *, _DWORD *, uint64_t))(*(_QWORD *)(v71 - 8) + 32))(a1, a2, v71);
      goto LABEL_107;
    case 0x10u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v72 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0) + 20);
      v73 = (char *)a1 + v72;
      v74 = (char *)a2 + v72;
      v75 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 32))(v73, v74, v75);
      goto LABEL_107;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      return a1;
  }
}

_DWORD *assignWithTake for TranscriptProtoAstflatExprEnum(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _DWORD *v11;
  _DWORD *v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  _DWORD *v17;
  _DWORD *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(_DWORD *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(_DWORD *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  int EnumCaseMultiPayload;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _BYTE *v91;
  _BYTE *v92;
  uint64_t v93;
  int v94;
  int v95;
  uint64_t v96;
  uint64_t v97;
  int v98;
  uint64_t v99;
  uint64_t v100;
  int v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  _DWORD *v128;
  _DWORD *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  int v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  _DWORD *v163;
  _DWORD *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  int v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  char *v193;
  char *v194;
  uint64_t v195;
  char *v197;
  char *v198;
  char *v199;
  char *v200;
  char *v201;
  uint64_t v202;
  char *v203;
  char *v204;
  char *v205;
  char *v206;
  char *v207;
  char *v208;
  char *v209;
  char *v210;
  char *v211;
  uint64_t v212;
  char *v213;
  char *v214;
  char *v215;
  char *v216;
  char *v217;
  char *v218;
  char *v219;
  char *v220;
  char *v221;

  if (a1 != a2)
  {
    sub_240388AE4((uint64_t)a1, type metadata accessor for TranscriptProtoAstflatExprEnum);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v6 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        v7 = *(_QWORD *)(v6 - 8);
        if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
        {
          v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
        }
        else
        {
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          switch(EnumCaseMultiPayload)
          {
            case 9:
              *a1 = *a2;
              *(_OWORD *)(a1 + 2) = *(_OWORD *)(a2 + 2);
              v106 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              v107 = (char *)a1 + v106;
              v108 = (char *)a2 + v106;
              v109 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v109 - 8) + 32))(v107, v108, v109);
              swift_storeEnumTagMultiPayload();
              break;
            case 5:
              *(_QWORD *)a1 = *(_QWORD *)a2;
              v110 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              v111 = (char *)a1 + v110;
              v112 = (char *)a2 + v110;
              v113 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v113 - 8) + 32))(v111, v112, v113);
              swift_storeEnumTagMultiPayload();
              break;
            case 4:
              *(_QWORD *)a1 = *(_QWORD *)a2;
              v77 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              v78 = (char *)a1 + v77;
              v79 = (char *)a2 + v77;
              v80 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v80 - 8) + 32))(v78, v79, v80);
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(a1, a2, *(_QWORD *)(v7 + 64));
              break;
          }
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
        }
        v114 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValue(0) + 20);
        v115 = (char *)a1 + v114;
        v116 = (char *)a2 + v114;
        v117 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v117 - 8) + 32))(v115, v116, v117);
        goto LABEL_108;
      case 1u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v9 = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(0);
        v10 = *(int *)(v9 + 20);
        v11 = (_DWORD *)((char *)a1 + v10);
        v12 = (_DWORD *)((char *)a2 + v10);
        v13 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        v14 = *(_QWORD *)(v13 - 8);
        if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
          goto LABEL_11;
        v81 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
        v82 = *(_QWORD *)(v81 - 8);
        if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v82 + 48))(v12, 1, v81))
          goto LABEL_36;
        v94 = swift_getEnumCaseMultiPayload();
        switch(v94)
        {
          case 9:
            goto LABEL_77;
          case 5:
            goto LABEL_78;
          case 4:
            goto LABEL_51;
        }
        goto LABEL_79;
      case 2u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v15 = (int *)type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(0);
        v16 = v15[5];
        v17 = (_DWORD *)((char *)a1 + v16);
        v18 = (_DWORD *)((char *)a2 + v16);
        v19 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        v20 = *(_QWORD *)(v19 - 8);
        v21 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v20 + 48);
        if (v21(v18, 1, v19))
        {
          v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
          memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
        }
        else
        {
          v212 = v20;
          v83 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          v84 = *(_QWORD *)(v83 - 8);
          if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v84 + 48))(v18, 1, v83))
          {
            v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
            memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
            v20 = v212;
          }
          else
          {
            v202 = v84;
            v95 = swift_getEnumCaseMultiPayload();
            if (v95 == 9)
            {
              *v17 = *v18;
              *(_OWORD *)(v17 + 2) = *(_OWORD *)(v18 + 2);
              v118 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              v119 = (char *)v17 + v118;
              v200 = (char *)v18 + v118;
              v120 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v120 - 8) + 32))(v119, v200, v120);
              swift_storeEnumTagMultiPayload();
              v20 = v212;
            }
            else
            {
              v20 = v212;
              if (v95 == 5)
              {
                *(_QWORD *)v17 = *(_QWORD *)v18;
                v121 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v198 = (char *)v18 + v121;
                v201 = (char *)v17 + v121;
                v122 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v122 - 8) + 32))(v201, v198, v122);
                swift_storeEnumTagMultiPayload();
              }
              else if (v95 == 4)
              {
                *(_QWORD *)v17 = *(_QWORD *)v18;
                v96 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v197 = (char *)v18 + v96;
                v199 = (char *)v17 + v96;
                v97 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v97 - 8) + 32))(v199, v197, v97);
                swift_storeEnumTagMultiPayload();
              }
              else
              {
                memcpy(v17, v18, *(_QWORD *)(v202 + 64));
              }
            }
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v202 + 56))(v17, 0, 1, v83);
          }
          v123 = *(int *)(v19 + 20);
          v124 = (char *)v17 + v123;
          v125 = (char *)v18 + v123;
          v126 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v126 - 8) + 32))(v124, v125, v126);
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
        }
        v127 = v15[6];
        v128 = (_DWORD *)((char *)a1 + v127);
        v129 = (_DWORD *)((char *)a2 + v127);
        if (v21((_DWORD *)((char *)a2 + v127), 1, v19))
        {
          v130 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
          memcpy(v128, v129, *(_QWORD *)(*(_QWORD *)(v130 - 8) + 64));
        }
        else
        {
          v131 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          v132 = *(_QWORD *)(v131 - 8);
          if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v132 + 48))(v129, 1, v131))
          {
            v133 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
            memcpy(v128, v129, *(_QWORD *)(*(_QWORD *)(v133 - 8) + 64));
          }
          else
          {
            v134 = swift_getEnumCaseMultiPayload();
            switch(v134)
            {
              case 9:
                *v128 = *v129;
                *(_OWORD *)(v128 + 2) = *(_OWORD *)(v129 + 2);
                v172 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v208 = (char *)v129 + v172;
                v218 = (char *)v128 + v172;
                v173 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v173 - 8) + 32))(v218, v208, v173);
                swift_storeEnumTagMultiPayload();
                break;
              case 5:
                *(_QWORD *)v128 = *(_QWORD *)v129;
                v174 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v209 = (char *)v129 + v174;
                v219 = (char *)v128 + v174;
                v175 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v175 - 8) + 32))(v219, v209, v175);
                swift_storeEnumTagMultiPayload();
                break;
              case 4:
                *(_QWORD *)v128 = *(_QWORD *)v129;
                v135 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v204 = (char *)v129 + v135;
                v214 = (char *)v128 + v135;
                v136 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v136 - 8) + 32))(v214, v204, v136);
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v128, v129, *(_QWORD *)(v132 + 64));
                break;
            }
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v132 + 56))(v128, 0, 1, v131);
          }
          v176 = *(int *)(v19 + 20);
          v177 = (char *)v128 + v176;
          v178 = (char *)v129 + v176;
          v179 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v179 - 8) + 32))(v177, v178, v179);
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v128, 0, 1, v19);
        }
        v180 = v15[7];
        v181 = (char *)a1 + v180;
        v182 = (char *)a2 + v180;
        v183 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v183 - 8) + 32))(v181, v182, v183);
        goto LABEL_108;
      case 3u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v9 = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(0);
        v23 = *(int *)(v9 + 20);
        v11 = (_DWORD *)((char *)a1 + v23);
        v12 = (_DWORD *)((char *)a2 + v23);
        v13 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        v14 = *(_QWORD *)(v13 - 8);
        if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
        {
LABEL_11:
          v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
          memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
        }
        else
        {
          v81 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          v82 = *(_QWORD *)(v81 - 8);
          if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v82 + 48))(v12, 1, v81))
          {
LABEL_36:
            v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
            memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
          }
          else
          {
            v98 = swift_getEnumCaseMultiPayload();
            switch(v98)
            {
              case 9:
LABEL_77:
                *v11 = *v12;
                *(_OWORD *)(v11 + 2) = *(_OWORD *)(v12 + 2);
                v137 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v205 = (char *)v12 + v137;
                v215 = (char *)v11 + v137;
                v138 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v138 - 8) + 32))(v215, v205, v138);
                swift_storeEnumTagMultiPayload();
                break;
              case 5:
LABEL_78:
                *(_QWORD *)v11 = *(_QWORD *)v12;
                v139 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v206 = (char *)v12 + v139;
                v216 = (char *)v11 + v139;
                v140 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v140 - 8) + 32))(v216, v206, v140);
                swift_storeEnumTagMultiPayload();
                break;
              case 4:
LABEL_51:
                *(_QWORD *)v11 = *(_QWORD *)v12;
                v99 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v203 = (char *)v12 + v99;
                v213 = (char *)v11 + v99;
                v100 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v100 - 8) + 32))(v213, v203, v100);
                swift_storeEnumTagMultiPayload();
                break;
              default:
LABEL_79:
                memcpy(v11, v12, *(_QWORD *)(v82 + 64));
                break;
            }
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v82 + 56))(v11, 0, 1, v81);
          }
          v141 = *(int *)(v13 + 20);
          v142 = (char *)v11 + v141;
          v143 = (char *)v12 + v141;
          v144 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v144 - 8) + 32))(v142, v143, v144);
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
        }
LABEL_82:
        v145 = *(int *)(v9 + 24);
        v146 = (char *)a1 + v145;
        v147 = (char *)a2 + v145;
        v148 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v148 - 8) + 32))(v146, v147, v148);
LABEL_108:
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        v25 = type metadata accessor for TranscriptProtoASTFlatValue(0);
        v26 = *(_QWORD *)(v25 - 8);
        v27 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v26 + 48);
        if (v27(a2, 1, v25))
        {
          v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
        }
        else
        {
          v87 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          v88 = *(_QWORD *)(v87 - 8);
          if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v88 + 48))(a2, 1, v87))
          {
            v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
          }
          else
          {
            v101 = swift_getEnumCaseMultiPayload();
            switch(v101)
            {
              case 9:
                *a1 = *a2;
                *(_OWORD *)(a1 + 2) = *(_OWORD *)(a2 + 2);
                v149 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v150 = (char *)a1 + v149;
                v151 = (char *)a2 + v149;
                v152 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v152 - 8) + 32))(v150, v151, v152);
                swift_storeEnumTagMultiPayload();
                break;
              case 5:
                *(_QWORD *)a1 = *(_QWORD *)a2;
                v153 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v154 = (char *)a1 + v153;
                v155 = (char *)a2 + v153;
                v156 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v156 - 8) + 32))(v154, v155, v156);
                swift_storeEnumTagMultiPayload();
                break;
              case 4:
                *(_QWORD *)a1 = *(_QWORD *)a2;
                v102 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v103 = (char *)a1 + v102;
                v104 = (char *)a2 + v102;
                v105 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v105 - 8) + 32))(v103, v104, v105);
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(a1, a2, *(_QWORD *)(v88 + 64));
                break;
            }
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v88 + 56))(a1, 0, 1, v87);
          }
          v157 = *(int *)(v25 + 20);
          v158 = (char *)a1 + v157;
          v159 = (char *)a2 + v157;
          v160 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v160 - 8) + 32))(v158, v159, v160);
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v26 + 56))(a1, 0, 1, v25);
        }
        v161 = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(0);
        v162 = *(int *)(v161 + 20);
        v163 = (_DWORD *)((char *)a1 + v162);
        v164 = (_DWORD *)((char *)a2 + v162);
        if (v27((_DWORD *)((char *)a2 + v162), 1, v25))
        {
          v165 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
          memcpy(v163, v164, *(_QWORD *)(*(_QWORD *)(v165 - 8) + 64));
        }
        else
        {
          v166 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
          v167 = *(_QWORD *)(v166 - 8);
          if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v167 + 48))(v164, 1, v166))
          {
            v168 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
            memcpy(v163, v164, *(_QWORD *)(*(_QWORD *)(v168 - 8) + 64));
          }
          else
          {
            v169 = swift_getEnumCaseMultiPayload();
            switch(v169)
            {
              case 9:
                *v163 = *v164;
                *(_OWORD *)(v163 + 2) = *(_OWORD *)(v164 + 2);
                v184 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
                v210 = (char *)v164 + v184;
                v220 = (char *)v163 + v184;
                v185 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v185 - 8) + 32))(v220, v210, v185);
                swift_storeEnumTagMultiPayload();
                break;
              case 5:
                *(_QWORD *)v163 = *(_QWORD *)v164;
                v186 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
                v211 = (char *)v164 + v186;
                v221 = (char *)v163 + v186;
                v187 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v187 - 8) + 32))(v221, v211, v187);
                swift_storeEnumTagMultiPayload();
                break;
              case 4:
                *(_QWORD *)v163 = *(_QWORD *)v164;
                v170 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
                v207 = (char *)v164 + v170;
                v217 = (char *)v163 + v170;
                v171 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v171 - 8) + 32))(v217, v207, v171);
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v163, v164, *(_QWORD *)(v167 + 64));
                break;
            }
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v167 + 56))(v163, 0, 1, v166);
          }
          v188 = *(int *)(v25 + 20);
          v189 = (char *)v163 + v188;
          v190 = (char *)v164 + v188;
          v191 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v191 - 8) + 32))(v189, v190, v191);
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v163, 0, 1, v25);
        }
        v192 = *(int *)(v161 + 24);
        v193 = (char *)a1 + v192;
        v194 = (char *)a2 + v192;
        v195 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v195 - 8) + 32))(v193, v194, v195);
        goto LABEL_108;
      case 5u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        v29 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCallVariant(0) + 24);
        v30 = (char *)a1 + v29;
        v31 = (char *)a2 + v29;
        v32 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v30, v31, v32);
        goto LABEL_108;
      case 6u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v33 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSayVariant(0) + 20);
        v34 = (char *)a1 + v33;
        v35 = (char *)a2 + v33;
        v36 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v34, v35, v36);
        goto LABEL_108;
      case 7u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v9 = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(0);
        v37 = *(int *)(v9 + 20);
        v38 = (char *)a1 + v37;
        v39 = (char *)a2 + v37;
        v40 = type metadata accessor for TranscriptProtoASTPickType(0);
        v41 = *(_QWORD *)(v40 - 8);
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
        {
          v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D08);
          memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
        }
        else
        {
          *(_QWORD *)v38 = *(_QWORD *)v39;
          v38[8] = v39[8];
          v90 = *(int *)(v40 + 20);
          v91 = &v38[v90];
          v92 = &v39[v90];
          v93 = sub_2408E57A4();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v93 - 8) + 32))(v91, v92, v93);
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
        }
        goto LABEL_82;
      case 8u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v43 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(0) + 20);
        v44 = (char *)a1 + v43;
        v45 = (char *)a2 + v43;
        v46 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
        goto LABEL_108;
      case 9u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_WORD *)a1 + 8) = *((_WORD *)a2 + 8);
        v47 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(0) + 28);
        v48 = (char *)a1 + v47;
        v49 = (char *)a2 + v47;
        v50 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v48, v49, v50);
        goto LABEL_108;
      case 0xAu:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v51 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(0) + 20);
        v52 = (char *)a1 + v51;
        v53 = (char *)a2 + v51;
        v54 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v52, v53, v54);
        goto LABEL_108;
      case 0xBu:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v55 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(0) + 20);
        v56 = (char *)a1 + v55;
        v57 = (char *)a2 + v55;
        v58 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v56, v57, v58);
        goto LABEL_108;
      case 0xCu:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v59 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(0) + 20);
        v60 = (char *)a1 + v59;
        v61 = (char *)a2 + v59;
        v62 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 32))(v60, v61, v62);
        goto LABEL_108;
      case 0xDu:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v63 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(0) + 20);
        v64 = (char *)a1 + v63;
        v65 = (char *)a2 + v63;
        v66 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 32))(v64, v65, v66);
        goto LABEL_108;
      case 0xEu:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v67 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(0) + 20);
        v68 = (char *)a1 + v67;
        v69 = (char *)a2 + v67;
        v70 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 32))(v68, v69, v70);
        goto LABEL_108;
      case 0xFu:
      case 0x11u:
        v71 = sub_2408E57A4();
        (*(void (**)(_DWORD *, _DWORD *, uint64_t))(*(_QWORD *)(v71 - 8) + 32))(a1, a2, v71);
        goto LABEL_108;
      case 0x10u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v72 = *(int *)(type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(0) + 20);
        v73 = (char *)a1 + v72;
        v74 = (char *)a2 + v72;
        v75 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 32))(v73, v74, v75);
        goto LABEL_108;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        return a1;
    }
  }
  return a1;
}

uint64_t sub_2406A1998()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;

  result = type metadata accessor for TranscriptProtoASTFlatValue(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for TranscriptProtoASTFlatExprPrefixVariant(319);
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for TranscriptProtoASTFlatExprInfixVariant(319);
      if (v3 <= 0x3F)
      {
        result = type metadata accessor for TranscriptProtoASTFlatExprDotVariant(319);
        if (v4 <= 0x3F)
        {
          result = type metadata accessor for TranscriptProtoASTFlatExprIndexVariant(319);
          if (v5 <= 0x3F)
          {
            result = type metadata accessor for TranscriptProtoASTFlatExprCallVariant(319);
            if (v6 <= 0x3F)
            {
              result = type metadata accessor for TranscriptProtoASTFlatExprSayVariant(319);
              if (v7 <= 0x3F)
              {
                result = type metadata accessor for TranscriptProtoASTFlatExprPickVariant(319);
                if (v8 <= 0x3F)
                {
                  result = type metadata accessor for TranscriptProtoASTFlatExprConfirmVariant(319);
                  if (v9 <= 0x3F)
                  {
                    result = type metadata accessor for TranscriptProtoASTFlatExprSearchVariant(319);
                    if (v10 <= 0x3F)
                    {
                      result = type metadata accessor for TranscriptProtoASTFlatExprPickOneVariant(319);
                      if (v11 <= 0x3F)
                      {
                        result = type metadata accessor for TranscriptProtoASTFlatExprUndoVariant(319);
                        if (v12 <= 0x3F)
                        {
                          result = type metadata accessor for TranscriptProtoASTFlatExprResolveToolVariant(319);
                          if (v13 <= 0x3F)
                          {
                            result = type metadata accessor for TranscriptProtoASTFlatExprRejectVariant(319);
                            if (v14 <= 0x3F)
                            {
                              result = type metadata accessor for TranscriptProtoASTFlatExprCancelVariant(319);
                              if (v15 <= 0x3F)
                              {
                                result = sub_2408E57A4();
                                if (v16 <= 0x3F)
                                {
                                  result = type metadata accessor for TranscriptProtoASTFlatExprUpdateParametersVariant(319);
                                  if (v17 <= 0x3F)
                                  {
                                    swift_initEnumMetadataMultiPayload();
                                    return 0;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoASTFlatValue(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 3u:
        case 6u:
        case 7u:
        case 8u:
          v11 = a2[1];
          *a1 = *a2;
          a1[1] = v11;
          swift_bridgeObjectRetain();
          goto LABEL_11;
        case 4u:
          *a1 = *a2;
          v12 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          v13 = (char *)a1 + v12;
          v14 = (char *)a2 + v12;
          v15 = sub_2408E57A4();
          v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
          swift_bridgeObjectRetain();
          v16(v13, v14, v15);
          goto LABEL_11;
        case 5u:
          *a1 = *a2;
          v17 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          v18 = (char *)a1 + v17;
          v19 = (char *)a2 + v17;
          v20 = sub_2408E57A4();
          v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
          swift_bridgeObjectRetain();
          v21(v18, v19, v20);
          goto LABEL_11;
        case 9u:
          *(_DWORD *)a1 = *(_DWORD *)a2;
          v22 = a2[2];
          a1[1] = a2[1];
          a1[2] = v22;
          v23 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          v24 = (char *)a1 + v23;
          v25 = (char *)a2 + v23;
          v26 = sub_2408E57A4();
          v27 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
          swift_bridgeObjectRetain();
          v27(v24, v25, v26);
LABEL_11:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(v8 + 64));
          break;
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v28 = *(int *)(a3 + 20);
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    v31 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoASTFlatValue(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 3u:
      case 6u:
      case 7u:
      case 8u:
        swift_bridgeObjectRelease();
        break;
      case 4u:
        swift_bridgeObjectRelease();
        v5 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        goto LABEL_7;
      case 5u:
        swift_bridgeObjectRelease();
        v5 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        goto LABEL_7;
      case 9u:
        swift_bridgeObjectRelease();
        v5 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_7:
        v6 = a1 + v5;
        v7 = sub_2408E57A4();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
        break;
      default:
        break;
    }
  }
  v8 = a1 + *(int *)(a2 + 20);
  v9 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
}

_QWORD *initializeWithCopy for TranscriptProtoASTFlatValue(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;

  v6 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 3u:
      case 6u:
      case 7u:
      case 8u:
        v9 = a2[1];
        *a1 = *a2;
        a1[1] = v9;
        swift_bridgeObjectRetain();
        goto LABEL_9;
      case 4u:
        *a1 = *a2;
        v10 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        v11 = (char *)a1 + v10;
        v12 = (char *)a2 + v10;
        v13 = sub_2408E57A4();
        v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
        swift_bridgeObjectRetain();
        v14(v11, v12, v13);
        goto LABEL_9;
      case 5u:
        *a1 = *a2;
        v15 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        v16 = (char *)a1 + v15;
        v17 = (char *)a2 + v15;
        v18 = sub_2408E57A4();
        v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
        swift_bridgeObjectRetain();
        v19(v16, v17, v18);
        goto LABEL_9;
      case 9u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        v20 = a2[2];
        a1[1] = a2[1];
        a1[2] = v20;
        v21 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        v22 = (char *)a1 + v21;
        v23 = (char *)a2 + v21;
        v24 = sub_2408E57A4();
        v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
        swift_bridgeObjectRetain();
        v25(v22, v23, v24);
LABEL_9:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v7 + 64));
        break;
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v26 = *(int *)(a3 + 20);
  v27 = (char *)a1 + v26;
  v28 = (char *)a2 + v26;
  v29 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoASTFlatValue(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *, uint64_t, uint64_t);
  int v9;
  int v10;
  size_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);

  v6 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 3u:
        case 6u:
        case 7u:
        case 8u:
          *a1 = *a2;
          a1[1] = a2[1];
          swift_bridgeObjectRetain();
          goto LABEL_16;
        case 4u:
          *a1 = *a2;
          v12 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          v13 = (char *)a1 + v12;
          v14 = (char *)a2 + v12;
          v15 = sub_2408E57A4();
          v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
          swift_bridgeObjectRetain();
          v16(v13, v14, v15);
          goto LABEL_16;
        case 5u:
          *a1 = *a2;
          v17 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          v18 = (char *)a1 + v17;
          v19 = (char *)a2 + v17;
          v20 = sub_2408E57A4();
          v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
          swift_bridgeObjectRetain();
          v21(v18, v19, v20);
          goto LABEL_16;
        case 9u:
          *(_DWORD *)a1 = *(_DWORD *)a2;
          a1[1] = a2[1];
          a1[2] = a2[2];
          v22 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          v23 = (char *)a1 + v22;
          v24 = (char *)a2 + v22;
          v25 = sub_2408E57A4();
          v26 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
          swift_bridgeObjectRetain();
          v26(v23, v24, v25);
LABEL_16:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(v7 + 64));
          break;
      }
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_18;
    }
    goto LABEL_7;
  }
  if (v10)
  {
    sub_240388AE4((uint64_t)a1, type metadata accessor for TranscriptProtoAstflatValueEnum);
LABEL_7:
    v11 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30) - 8) + 64);
LABEL_8:
    memcpy(a1, a2, v11);
    goto LABEL_18;
  }
  if (a1 != a2)
  {
    sub_240388AE4((uint64_t)a1, type metadata accessor for TranscriptProtoAstflatValueEnum);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 3u:
      case 6u:
      case 7u:
      case 8u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        *a1 = *a2;
        v32 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        v33 = (char *)a1 + v32;
        v34 = (char *)a2 + v32;
        v35 = sub_2408E57A4();
        v36 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16);
        swift_bridgeObjectRetain();
        v36(v33, v34, v35);
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        *a1 = *a2;
        v37 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        v38 = (char *)a1 + v37;
        v39 = (char *)a2 + v37;
        v40 = sub_2408E57A4();
        v41 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16);
        swift_bridgeObjectRetain();
        v41(v38, v39, v40);
        swift_storeEnumTagMultiPayload();
        break;
      case 9u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        v42 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        v43 = (char *)a1 + v42;
        v44 = (char *)a2 + v42;
        v45 = sub_2408E57A4();
        v46 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16);
        swift_bridgeObjectRetain();
        v46(v43, v44, v45);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        v11 = *(_QWORD *)(v7 + 64);
        goto LABEL_8;
    }
  }
LABEL_18:
  v27 = *(int *)(a3 + 20);
  v28 = (char *)a1 + v27;
  v29 = (char *)a2 + v27;
  v30 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  return a1;
}

_DWORD *initializeWithTake for TranscriptProtoASTFlatValue(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  v6 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 9:
        *a1 = *a2;
        *(_OWORD *)(a1 + 2) = *(_OWORD *)(a2 + 2);
        v14 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        v15 = (char *)a1 + v14;
        v16 = (char *)a2 + v14;
        v17 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
        swift_storeEnumTagMultiPayload();
        break;
      case 5:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v18 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        v19 = (char *)a1 + v18;
        v20 = (char *)a2 + v18;
        v21 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
        swift_storeEnumTagMultiPayload();
        break;
      case 4:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v10 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        v11 = (char *)a1 + v10;
        v12 = (char *)a2 + v10;
        v13 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v7 + 64));
        break;
    }
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v22 = *(int *)(a3 + 20);
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
  return a1;
}

uint64_t assignWithTake for TranscriptProtoASTFlatValue(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  size_t v16;
  int EnumCaseMultiPayload;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v6 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      if (a1 == a2)
        goto LABEL_20;
      sub_240388AE4(a1, type metadata accessor for TranscriptProtoAstflatValueEnum);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      switch(EnumCaseMultiPayload)
      {
        case 9:
          *(_DWORD *)a1 = *(_DWORD *)a2;
          *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
          v35 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          v36 = a1 + v35;
          v37 = a2 + v35;
          v38 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
          swift_storeEnumTagMultiPayload();
          goto LABEL_20;
        case 5:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          v39 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          v40 = a1 + v39;
          v41 = a2 + v39;
          v42 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
          swift_storeEnumTagMultiPayload();
          goto LABEL_20;
        case 4:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          v18 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          v19 = a1 + v18;
          v20 = a2 + v18;
          v21 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
          swift_storeEnumTagMultiPayload();
          goto LABEL_20;
      }
      v16 = *(_QWORD *)(v7 + 64);
      goto LABEL_10;
    }
    sub_240388AE4(a1, type metadata accessor for TranscriptProtoAstflatValueEnum);
LABEL_9:
    v16 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30) - 8) + 64);
LABEL_10:
    memcpy((void *)a1, (const void *)a2, v16);
    goto LABEL_20;
  }
  if (v10)
    goto LABEL_9;
  v11 = swift_getEnumCaseMultiPayload();
  switch(v11)
  {
    case 9:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      v22 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
      v23 = a1 + v22;
      v24 = a2 + v22;
      v25 = sub_2408E57A4();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
      swift_storeEnumTagMultiPayload();
      break;
    case 5:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v26 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
      v27 = a1 + v26;
      v28 = a2 + v26;
      v29 = sub_2408E57A4();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v27, v28, v29);
      swift_storeEnumTagMultiPayload();
      break;
    case 4:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v12 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
      v13 = a1 + v12;
      v14 = a2 + v12;
      v15 = sub_2408E57A4();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy((void *)a1, (const void *)a2, *(_QWORD *)(v7 + 64));
      break;
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_20:
  v30 = *(int *)(a3 + 20);
  v31 = a1 + v30;
  v32 = a2 + v30;
  v33 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 40))(v31, v32, v33);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTFlatValue()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406A2CA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_9Tm(a1, a2, a3, &qword_256FFEC30);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTFlatValue()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406A2CB8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_10Tm(a1, a2, a3, a4, &qword_256FFEC30);
}

void sub_2406A2CC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240408100(a1, a2, a3, qword_257008710, (void (*)(uint64_t))type metadata accessor for TranscriptProtoAstflatValueEnum);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoAstflatValueEnum(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 3u:
      case 6u:
      case 7u:
      case 8u:
        v7 = a2[1];
        *a1 = *a2;
        a1[1] = v7;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        *a1 = *a2;
        v10 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        v11 = (char *)a1 + v10;
        v12 = (char *)a2 + v10;
        v13 = sub_2408E57A4();
        v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
        swift_bridgeObjectRetain();
        v14(v11, v12, v13);
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        *a1 = *a2;
        v15 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        v16 = (char *)a1 + v15;
        v17 = (char *)a2 + v15;
        v18 = sub_2408E57A4();
        v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
        swift_bridgeObjectRetain();
        v19(v16, v17, v18);
        swift_storeEnumTagMultiPayload();
        break;
      case 9u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        v20 = a2[2];
        a1[1] = a2[1];
        a1[2] = v20;
        v21 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        v22 = (char *)a1 + v21;
        v23 = (char *)a2 + v21;
        v24 = sub_2408E57A4();
        v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
        swift_bridgeObjectRetain();
        v25(v22, v23, v24);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for TranscriptProtoAstflatValueEnum(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 3:
    case 6:
    case 7:
    case 8:
      return swift_bridgeObjectRelease();
    case 4:
      swift_bridgeObjectRelease();
      v3 = type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0);
      goto LABEL_5;
    case 5:
      swift_bridgeObjectRelease();
      v3 = type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0);
LABEL_5:
      v4 = *(int *)(v3 + 20);
      goto LABEL_7;
    case 9:
      swift_bridgeObjectRelease();
      v4 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_7:
      v5 = a1 + v4;
      v6 = sub_2408E57A4();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
      break;
    default:
      return result;
  }
  return result;
}

_QWORD *initializeWithCopy for TranscriptProtoAstflatValueEnum(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);

  switch(swift_getEnumCaseMultiPayload())
  {
    case 3u:
    case 6u:
    case 7u:
    case 8u:
      v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      swift_bridgeObjectRetain();
      goto LABEL_7;
    case 4u:
      *a1 = *a2;
      v7 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = sub_2408E57A4();
      v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
      swift_bridgeObjectRetain();
      v11(v8, v9, v10);
      goto LABEL_7;
    case 5u:
      *a1 = *a2;
      v12 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = sub_2408E57A4();
      v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
      swift_bridgeObjectRetain();
      v16(v13, v14, v15);
      goto LABEL_7;
    case 9u:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      v17 = a2[2];
      a1[1] = a2[1];
      a1[2] = v17;
      v18 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
      v19 = (char *)a1 + v18;
      v20 = (char *)a2 + v18;
      v21 = sub_2408E57A4();
      v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
      swift_bridgeObjectRetain();
      v22(v19, v20, v21);
LABEL_7:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoAstflatValueEnum(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);

  if (a1 != a2)
  {
    sub_240388AE4((uint64_t)a1, type metadata accessor for TranscriptProtoAstflatValueEnum);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 3u:
      case 6u:
      case 7u:
      case 8u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_8;
      case 4u:
        *a1 = *a2;
        v6 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        v7 = (char *)a1 + v6;
        v8 = (char *)a2 + v6;
        v9 = sub_2408E57A4();
        v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
        swift_bridgeObjectRetain();
        v10(v7, v8, v9);
        goto LABEL_8;
      case 5u:
        *a1 = *a2;
        v11 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        v12 = (char *)a1 + v11;
        v13 = (char *)a2 + v11;
        v14 = sub_2408E57A4();
        v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
        swift_bridgeObjectRetain();
        v15(v12, v13, v14);
        goto LABEL_8;
      case 9u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        v16 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        v17 = (char *)a1 + v16;
        v18 = (char *)a2 + v16;
        v19 = sub_2408E57A4();
        v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
        swift_bridgeObjectRetain();
        v20(v17, v18, v19);
LABEL_8:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

char *initializeWithTake for TranscriptProtoAstflatValueEnum(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 9:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      v11 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
      v12 = &a1[v11];
      v13 = &a2[v11];
      v14 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
      swift_storeEnumTagMultiPayload();
      break;
    case 5:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v15 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
      v16 = &a1[v15];
      v17 = &a2[v15];
      v18 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
      swift_storeEnumTagMultiPayload();
      break;
    case 4:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v7 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
      v8 = &a1[v7];
      v9 = &a2[v7];
      v10 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithTake for TranscriptProtoAstflatValueEnum(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  if (a1 != a2)
  {
    sub_240388AE4((uint64_t)a1, type metadata accessor for TranscriptProtoAstflatValueEnum);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 9:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
        v11 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        v12 = &a1[v11];
        v13 = &a2[v11];
        v14 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
        swift_storeEnumTagMultiPayload();
        break;
      case 5:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v15 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        v16 = &a1[v15];
        v17 = &a2[v15];
        v18 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
        swift_storeEnumTagMultiPayload();
        break;
      case 4:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v7 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        v8 = &a1[v7];
        v9 = &a2[v7];
        v10 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_2406A3704()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for TranscriptProtoASTFlatValueDictVariant(319);
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for TranscriptProtoStatementID(319);
      if (v3 <= 0x3F)
      {
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTFlatValueArrayVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTFlatValueArrayVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTFlatValueDictVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTFlatValueDictVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoASTFlatExprIndexVariant(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(uint64_t *, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  void (*v51)(char *, char *, uint64_t);
  void (*v52)(char *, char *, uint64_t);
  void (*v53)(char *, char *, uint64_t);
  void (*v54)(char *, char *, uint64_t);
  void (*v55)(char *, char *, uint64_t);
  void (*v56)(char *, char *, uint64_t);
  char *v57;
  char *v58;
  char *v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  char *v65;
  char *v66;
  char *v67;
  char *v68;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for TranscriptProtoASTFlatValue(0);
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    if (v9(a2, 1, v7))
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      v12 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v13 + 48))(a2, 1, v12))
      {
        v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
          case 6u:
          case 7u:
          case 8u:
            v15 = a2[1];
            *a1 = *a2;
            a1[1] = v15;
            swift_bridgeObjectRetain();
            goto LABEL_13;
          case 4u:
            *a1 = *a2;
            v16 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v60 = (char *)a2 + v16;
            v66 = (char *)a1 + v16;
            v17 = sub_2408E57A4();
            v54 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
            swift_bridgeObjectRetain();
            v54(v66, v60, v17);
            goto LABEL_13;
          case 5u:
            *a1 = *a2;
            v18 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v61 = (char *)a2 + v18;
            v67 = (char *)a1 + v18;
            v19 = sub_2408E57A4();
            v55 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
            swift_bridgeObjectRetain();
            v55(v67, v61, v19);
            goto LABEL_13;
          case 9u:
            *(_DWORD *)a1 = *(_DWORD *)a2;
            v20 = a2[2];
            a1[1] = a2[1];
            a1[2] = v20;
            v21 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v62 = (char *)a2 + v21;
            v68 = (char *)a1 + v21;
            v22 = sub_2408E57A4();
            v56 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
            swift_bridgeObjectRetain();
            v56(v68, v62, v22);
LABEL_13:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(v13 + 64));
            break;
        }
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v13 + 56))(a1, 0, 1, v12);
      }
      v23 = *(int *)(v7 + 20);
      v24 = (char *)a1 + v23;
      v25 = (char *)a2 + v23;
      v26 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v27 = *(int *)(a3 + 20);
    v28 = (uint64_t *)((char *)a1 + v27);
    v29 = (uint64_t *)((char *)a2 + v27);
    if (v9((uint64_t *)((char *)a2 + v27), 1, v7))
    {
      v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      v31 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      v32 = *(_QWORD *)(v31 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v32 + 48))(v29, 1, v31))
      {
        v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
        memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
          case 6u:
          case 7u:
          case 8u:
            v34 = v29[1];
            *v28 = *v29;
            v28[1] = v34;
            swift_bridgeObjectRetain();
            goto LABEL_26;
          case 4u:
            *v28 = *v29;
            v35 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v57 = (char *)v29 + v35;
            v63 = (char *)v28 + v35;
            v36 = sub_2408E57A4();
            v51 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16);
            swift_bridgeObjectRetain();
            v51(v63, v57, v36);
            goto LABEL_26;
          case 5u:
            *v28 = *v29;
            v37 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v58 = (char *)v29 + v37;
            v64 = (char *)v28 + v37;
            v38 = sub_2408E57A4();
            v52 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16);
            swift_bridgeObjectRetain();
            v52(v64, v58, v38);
            goto LABEL_26;
          case 9u:
            *(_DWORD *)v28 = *(_DWORD *)v29;
            v39 = v29[2];
            v28[1] = v29[1];
            v28[2] = v39;
            v40 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v59 = (char *)v29 + v40;
            v65 = (char *)v28 + v40;
            v41 = sub_2408E57A4();
            v53 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16);
            swift_bridgeObjectRetain();
            v53(v65, v59, v41);
LABEL_26:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v28, v29, *(_QWORD *)(v32 + 64));
            break;
        }
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v28, 0, 1, v31);
      }
      v42 = *(int *)(v7 + 20);
      v43 = (char *)v28 + v42;
      v44 = (char *)v29 + v42;
      v45 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v43, v44, v45);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v28, 0, 1, v7);
    }
    v46 = *(int *)(a3 + 24);
    v47 = (char *)a1 + v46;
    v48 = (char *)a2 + v46;
    v49 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(v47, v48, v49);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoASTFlatExprIndexVariant(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48);
  if (!v5(a1, 1, v4))
  {
    v6 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(a1, 1, v6))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 3u:
        case 6u:
        case 7u:
        case 8u:
          swift_bridgeObjectRelease();
          break;
        case 4u:
          swift_bridgeObjectRelease();
          v7 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          goto LABEL_8;
        case 5u:
          swift_bridgeObjectRelease();
          v7 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          goto LABEL_8;
        case 9u:
          swift_bridgeObjectRelease();
          v7 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_8:
          v8 = a1 + v7;
          v9 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
          break;
        default:
          break;
      }
    }
    v10 = a1 + *(int *)(v4 + 20);
    v11 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  }
  v12 = a1 + *(int *)(a2 + 20);
  if (!v5(v12, 1, v4))
  {
    v13 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v12, 1, v13))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 3u:
        case 6u:
        case 7u:
        case 8u:
          swift_bridgeObjectRelease();
          break;
        case 4u:
          swift_bridgeObjectRelease();
          v14 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          goto LABEL_17;
        case 5u:
          swift_bridgeObjectRelease();
          v14 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          goto LABEL_17;
        case 9u:
          swift_bridgeObjectRelease();
          v14 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_17:
          v15 = v12 + v14;
          v16 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
          break;
        default:
          break;
      }
    }
    v17 = v12 + *(int *)(v4 + 20);
    v18 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  }
  v19 = a1 + *(int *)(a2 + 24);
  v20 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
}

_QWORD *initializeWithCopy for TranscriptProtoASTFlatExprIndexVariant(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(_QWORD *, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  void (*v49)(char *, char *, uint64_t);
  void (*v50)(char *, char *, uint64_t);
  void (*v51)(char *, char *, uint64_t);
  void (*v52)(char *, char *, uint64_t);
  void (*v53)(char *, char *, uint64_t);
  void (*v54)(char *, char *, uint64_t);
  char *v55;
  char *v56;
  char *v57;
  char *v58;
  char *v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  char *v65;
  char *v66;

  v6 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    v10 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48))(a2, 1, v10))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 3u:
        case 6u:
        case 7u:
        case 8u:
          v13 = a2[1];
          *a1 = *a2;
          a1[1] = v13;
          swift_bridgeObjectRetain();
          goto LABEL_11;
        case 4u:
          *a1 = *a2;
          v14 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          v58 = (char *)a2 + v14;
          v64 = (char *)a1 + v14;
          v15 = sub_2408E57A4();
          v52 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
          swift_bridgeObjectRetain();
          v52(v64, v58, v15);
          goto LABEL_11;
        case 5u:
          *a1 = *a2;
          v16 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          v59 = (char *)a2 + v16;
          v65 = (char *)a1 + v16;
          v17 = sub_2408E57A4();
          v53 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
          swift_bridgeObjectRetain();
          v53(v65, v59, v17);
          goto LABEL_11;
        case 9u:
          *(_DWORD *)a1 = *(_DWORD *)a2;
          v18 = a2[2];
          a1[1] = a2[1];
          a1[2] = v18;
          v19 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          v60 = (char *)a2 + v19;
          v66 = (char *)a1 + v19;
          v20 = sub_2408E57A4();
          v54 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
          swift_bridgeObjectRetain();
          v54(v66, v60, v20);
LABEL_11:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(v11 + 64));
          break;
      }
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(a1, 0, 1, v10);
    }
    v21 = *(int *)(v6 + 20);
    v22 = (char *)a1 + v21;
    v23 = (char *)a2 + v21;
    v24 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v25 = *(int *)(a3 + 20);
  v26 = (_QWORD *)((char *)a1 + v25);
  v27 = (_QWORD *)((char *)a2 + v25);
  if (v8((_QWORD *)((char *)a2 + v25), 1, v6))
  {
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    v29 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    v30 = *(_QWORD *)(v29 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v30 + 48))(v27, 1, v29))
    {
      v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 3u:
        case 6u:
        case 7u:
        case 8u:
          v32 = v27[1];
          *v26 = *v27;
          v26[1] = v32;
          swift_bridgeObjectRetain();
          goto LABEL_24;
        case 4u:
          *v26 = *v27;
          v33 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          v55 = (char *)v27 + v33;
          v61 = (char *)v26 + v33;
          v34 = sub_2408E57A4();
          v49 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16);
          swift_bridgeObjectRetain();
          v49(v61, v55, v34);
          goto LABEL_24;
        case 5u:
          *v26 = *v27;
          v35 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          v56 = (char *)v27 + v35;
          v62 = (char *)v26 + v35;
          v36 = sub_2408E57A4();
          v50 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16);
          swift_bridgeObjectRetain();
          v50(v62, v56, v36);
          goto LABEL_24;
        case 9u:
          *(_DWORD *)v26 = *(_DWORD *)v27;
          v37 = v27[2];
          v26[1] = v27[1];
          v26[2] = v37;
          v38 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          v57 = (char *)v27 + v38;
          v63 = (char *)v26 + v38;
          v39 = sub_2408E57A4();
          v51 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16);
          swift_bridgeObjectRetain();
          v51(v63, v57, v39);
LABEL_24:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v26, v27, *(_QWORD *)(v30 + 64));
          break;
      }
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v26, 0, 1, v29);
    }
    v40 = *(int *)(v6 + 20);
    v41 = (char *)v26 + v40;
    v42 = (char *)v27 + v40;
    v43 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v26, 0, 1, v6);
  }
  v44 = *(int *)(a3 + 24);
  v45 = (char *)a1 + v44;
  v46 = (char *)a2 + v44;
  v47 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoASTFlatExprIndexVariant(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(_QWORD *, uint64_t, uint64_t);
  int v18;
  int v19;
  size_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(_QWORD *, uint64_t, uint64_t);
  int v53;
  int v54;
  size_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(char *, char *, uint64_t);
  uint64_t v84;
  uint64_t v85;
  void (*v86)(char *, char *, uint64_t);
  uint64_t v87;
  uint64_t v88;
  void (*v89)(char *, char *, uint64_t);
  uint64_t v90;
  uint64_t v91;
  void (*v92)(char *, char *, uint64_t);
  uint64_t v93;
  uint64_t v94;
  void (*v95)(char *, char *, uint64_t);
  uint64_t v96;
  uint64_t v97;
  void (*v98)(char *, char *, uint64_t);
  void (*v99)(char *, char *, uint64_t);
  void (*v100)(char *, char *, uint64_t);
  void (*v101)(char *, char *, uint64_t);
  void (*v102)(char *, char *, uint64_t);
  void (*v103)(char *, char *, uint64_t);
  void (*v104)(char *, char *, uint64_t);
  void (*v105)(char *, char *, uint64_t);
  void (*v106)(char *, char *, uint64_t);
  void (*v107)(char *, char *, uint64_t);
  char *v108;
  char *v109;
  char *v110;
  void (*v111)(char *, char *, uint64_t);
  void (*v112)(char *, char *, uint64_t);
  void (*v113)(char *, char *, uint64_t);
  char *v114;
  char *v115;
  char *v116;
  char *v117;
  char *v118;
  char *v119;
  char *v120;
  char *v121;
  char *v122;
  char *v123;
  char *v124;
  char *v125;
  char *v126;
  char *v127;
  char *v128;
  char *v129;
  char *v130;
  char *v131;
  char *v132;
  char *v133;
  char *v134;
  char *v135;
  char *v136;
  char *v137;
  char *v138;
  char *v139;
  char *v140;
  char *v141;
  char *v142;
  char *v143;
  char *v144;
  char *v145;
  char *v146;

  v6 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_240388AE4((uint64_t)a1, type metadata accessor for TranscriptProtoASTFlatValue);
      goto LABEL_7;
    }
    v15 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    v16 = *(_QWORD *)(v15 - 8);
    v17 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v16 + 48);
    v18 = v17(a1, 1, v15);
    v19 = v17(a2, 1, v15);
    if (v18)
    {
      if (!v19)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
          case 6u:
          case 7u:
          case 8u:
            *a1 = *a2;
            a1[1] = a2[1];
            swift_bridgeObjectRetain();
            goto LABEL_32;
          case 4u:
            *a1 = *a2;
            v31 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v117 = (char *)a2 + v31;
            v135 = (char *)a1 + v31;
            v32 = sub_2408E57A4();
            v105 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16);
            swift_bridgeObjectRetain();
            v105(v135, v117, v32);
            goto LABEL_32;
          case 5u:
            *a1 = *a2;
            v33 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v118 = (char *)a2 + v33;
            v136 = (char *)a1 + v33;
            v34 = sub_2408E57A4();
            v106 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16);
            swift_bridgeObjectRetain();
            v106(v136, v118, v34);
            goto LABEL_32;
          case 9u:
            *(_DWORD *)a1 = *(_DWORD *)a2;
            a1[1] = a2[1];
            a1[2] = a2[2];
            v35 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v119 = (char *)a2 + v35;
            v137 = (char *)a1 + v35;
            v36 = sub_2408E57A4();
            v107 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16);
            swift_bridgeObjectRetain();
            v107(v137, v119, v36);
LABEL_32:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(_QWORD *)(v16 + 64));
            break;
        }
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
LABEL_34:
        v37 = *(int *)(v6 + 20);
        v38 = (char *)a1 + v37;
        v39 = (char *)a2 + v37;
        v40 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 24))(v38, v39, v40);
        goto LABEL_35;
      }
    }
    else
    {
      if (!v19)
      {
        if (a1 != a2)
        {
          sub_240388AE4((uint64_t)a1, type metadata accessor for TranscriptProtoAstflatValueEnum);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              *a1 = *a2;
              a1[1] = a2[1];
              swift_bridgeObjectRetain();
              swift_storeEnumTagMultiPayload();
              break;
            case 4u:
              *a1 = *a2;
              v81 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              v126 = (char *)a2 + v81;
              v141 = (char *)a1 + v81;
              v82 = sub_2408E57A4();
              v83 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v82 - 8) + 16);
              swift_bridgeObjectRetain();
              v83(v141, v126, v82);
              swift_storeEnumTagMultiPayload();
              break;
            case 5u:
              *a1 = *a2;
              v84 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              v127 = (char *)a2 + v84;
              v142 = (char *)a1 + v84;
              v85 = sub_2408E57A4();
              v86 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v85 - 8) + 16);
              swift_bridgeObjectRetain();
              v86(v142, v127, v85);
              swift_storeEnumTagMultiPayload();
              break;
            case 9u:
              *(_DWORD *)a1 = *(_DWORD *)a2;
              a1[1] = a2[1];
              a1[2] = a2[2];
              v87 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              v128 = (char *)a2 + v87;
              v143 = (char *)a1 + v87;
              v88 = sub_2408E57A4();
              v89 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v88 - 8) + 16);
              swift_bridgeObjectRetain();
              v89(v143, v128, v88);
              swift_storeEnumTagMultiPayload();
              break;
            default:
              v20 = *(_QWORD *)(v16 + 64);
              goto LABEL_17;
          }
        }
        goto LABEL_34;
      }
      sub_240388AE4((uint64_t)a1, type metadata accessor for TranscriptProtoAstflatValueEnum);
    }
    v20 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30) - 8) + 64);
LABEL_17:
    memcpy(a1, a2, v20);
    goto LABEL_34;
  }
  if (v10)
  {
LABEL_7:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_35;
  }
  v11 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 3u:
      case 6u:
      case 7u:
      case 8u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_25;
      case 4u:
        *a1 = *a2;
        v21 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        v114 = (char *)a2 + v21;
        v132 = (char *)a1 + v21;
        v22 = sub_2408E57A4();
        v102 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
        swift_bridgeObjectRetain();
        v102(v132, v114, v22);
        goto LABEL_25;
      case 5u:
        *a1 = *a2;
        v23 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        v115 = (char *)a2 + v23;
        v133 = (char *)a1 + v23;
        v24 = sub_2408E57A4();
        v103 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
        swift_bridgeObjectRetain();
        v103(v133, v115, v24);
        goto LABEL_25;
      case 9u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        v25 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        v116 = (char *)a2 + v25;
        v134 = (char *)a1 + v25;
        v26 = sub_2408E57A4();
        v104 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
        swift_bridgeObjectRetain();
        v104(v134, v116, v26);
LABEL_25:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v12 + 64));
        break;
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
  }
  v27 = *(int *)(v6 + 20);
  v28 = (char *)a1 + v27;
  v29 = (char *)a2 + v27;
  v30 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_35:
  v41 = *(int *)(a3 + 20);
  v42 = (_QWORD *)((char *)a1 + v41);
  v43 = (_QWORD *)((char *)a2 + v41);
  v44 = v8((_QWORD *)((char *)a1 + v41), 1, v6);
  v45 = v8(v43, 1, v6);
  if (!v44)
  {
    if (v45)
    {
      sub_240388AE4((uint64_t)v42, type metadata accessor for TranscriptProtoASTFlatValue);
      goto LABEL_41;
    }
    v50 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    v51 = *(_QWORD *)(v50 - 8);
    v52 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v51 + 48);
    v53 = v52(v42, 1, v50);
    v54 = v52(v43, 1, v50);
    if (v53)
    {
      if (!v54)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
          case 6u:
          case 7u:
          case 8u:
            *v42 = *v43;
            v42[1] = v43[1];
            swift_bridgeObjectRetain();
            goto LABEL_66;
          case 4u:
            *v42 = *v43;
            v66 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v123 = (char *)v43 + v66;
            v138 = (char *)v42 + v66;
            v67 = sub_2408E57A4();
            v111 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 16);
            swift_bridgeObjectRetain();
            v111(v138, v123, v67);
            goto LABEL_66;
          case 5u:
            *v42 = *v43;
            v68 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v124 = (char *)v43 + v68;
            v139 = (char *)v42 + v68;
            v69 = sub_2408E57A4();
            v112 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v69 - 8) + 16);
            swift_bridgeObjectRetain();
            v112(v139, v124, v69);
            goto LABEL_66;
          case 9u:
            *(_DWORD *)v42 = *(_DWORD *)v43;
            v42[1] = v43[1];
            v42[2] = v43[2];
            v70 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v125 = (char *)v43 + v70;
            v140 = (char *)v42 + v70;
            v71 = sub_2408E57A4();
            v113 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v71 - 8) + 16);
            swift_bridgeObjectRetain();
            v113(v140, v125, v71);
LABEL_66:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v42, v43, *(_QWORD *)(v51 + 64));
            break;
        }
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v42, 0, 1, v50);
LABEL_68:
        v72 = *(int *)(v6 + 20);
        v73 = (char *)v42 + v72;
        v74 = (char *)v43 + v72;
        v75 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 24))(v73, v74, v75);
        goto LABEL_69;
      }
    }
    else
    {
      if (!v54)
      {
        if (a1 != a2)
        {
          sub_240388AE4((uint64_t)v42, type metadata accessor for TranscriptProtoAstflatValueEnum);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              *v42 = *v43;
              v42[1] = v43[1];
              swift_bridgeObjectRetain();
              swift_storeEnumTagMultiPayload();
              break;
            case 4u:
              *v42 = *v43;
              v90 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              v129 = (char *)v43 + v90;
              v144 = (char *)v42 + v90;
              v91 = sub_2408E57A4();
              v92 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v91 - 8) + 16);
              swift_bridgeObjectRetain();
              v92(v144, v129, v91);
              swift_storeEnumTagMultiPayload();
              break;
            case 5u:
              *v42 = *v43;
              v93 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              v130 = (char *)v43 + v93;
              v145 = (char *)v42 + v93;
              v94 = sub_2408E57A4();
              v95 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v94 - 8) + 16);
              swift_bridgeObjectRetain();
              v95(v145, v130, v94);
              swift_storeEnumTagMultiPayload();
              break;
            case 9u:
              *(_DWORD *)v42 = *(_DWORD *)v43;
              v42[1] = v43[1];
              v42[2] = v43[2];
              v96 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              v131 = (char *)v43 + v96;
              v146 = (char *)v42 + v96;
              v97 = sub_2408E57A4();
              v98 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v97 - 8) + 16);
              swift_bridgeObjectRetain();
              v98(v146, v131, v97);
              swift_storeEnumTagMultiPayload();
              break;
            default:
              v55 = *(_QWORD *)(v51 + 64);
              goto LABEL_51;
          }
        }
        goto LABEL_68;
      }
      sub_240388AE4((uint64_t)v42, type metadata accessor for TranscriptProtoAstflatValueEnum);
    }
    v55 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30) - 8) + 64);
LABEL_51:
    memcpy(v42, v43, v55);
    goto LABEL_68;
  }
  if (v45)
  {
LABEL_41:
    v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    goto LABEL_69;
  }
  v46 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  v47 = *(_QWORD *)(v46 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v47 + 48))(v43, 1, v46))
  {
    v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 3u:
      case 6u:
      case 7u:
      case 8u:
        *v42 = *v43;
        v42[1] = v43[1];
        swift_bridgeObjectRetain();
        goto LABEL_59;
      case 4u:
        *v42 = *v43;
        v56 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        v108 = (char *)v43 + v56;
        v120 = (char *)v42 + v56;
        v57 = sub_2408E57A4();
        v99 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16);
        swift_bridgeObjectRetain();
        v99(v120, v108, v57);
        goto LABEL_59;
      case 5u:
        *v42 = *v43;
        v58 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        v109 = (char *)v43 + v58;
        v121 = (char *)v42 + v58;
        v59 = sub_2408E57A4();
        v100 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16);
        swift_bridgeObjectRetain();
        v100(v121, v109, v59);
        goto LABEL_59;
      case 9u:
        *(_DWORD *)v42 = *(_DWORD *)v43;
        v42[1] = v43[1];
        v42[2] = v43[2];
        v60 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        v110 = (char *)v43 + v60;
        v122 = (char *)v42 + v60;
        v61 = sub_2408E57A4();
        v101 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 16);
        swift_bridgeObjectRetain();
        v101(v122, v110, v61);
LABEL_59:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v42, v43, *(_QWORD *)(v47 + 64));
        break;
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v42, 0, 1, v46);
  }
  v62 = *(int *)(v6 + 20);
  v63 = (char *)v42 + v62;
  v64 = (char *)v43 + v62;
  v65 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 16))(v63, v64, v65);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v42, 0, 1, v6);
LABEL_69:
  v76 = *(int *)(a3 + 24);
  v77 = (char *)a1 + v76;
  v78 = (char *)a2 + v76;
  v79 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 24))(v77, v78, v79);
  return a1;
}

_DWORD *initializeWithTake for TranscriptProtoASTFlatExprIndexVariant(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(_DWORD *, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  _DWORD *v31;
  _DWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  char *v56;
  char *v57;
  char *v58;

  v6 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    v10 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v11 + 48))(a2, 1, v10))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      switch(EnumCaseMultiPayload)
      {
        case 9:
          *a1 = *a2;
          *(_OWORD *)(a1 + 2) = *(_OWORD *)(a2 + 2);
          v18 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          v19 = (char *)a1 + v18;
          v20 = (char *)a2 + v18;
          v21 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
          swift_storeEnumTagMultiPayload();
          break;
        case 5:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          v22 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          v23 = (char *)a1 + v22;
          v24 = (char *)a2 + v22;
          v25 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
          swift_storeEnumTagMultiPayload();
          break;
        case 4:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          v14 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          v15 = (char *)a1 + v14;
          v16 = (char *)a2 + v14;
          v17 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(v11 + 64));
          break;
      }
      (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(a1, 0, 1, v10);
    }
    v26 = *(int *)(v6 + 20);
    v27 = (char *)a1 + v26;
    v28 = (char *)a2 + v26;
    v29 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v27, v28, v29);
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v30 = *(int *)(a3 + 20);
  v31 = (_DWORD *)((char *)a1 + v30);
  v32 = (_DWORD *)((char *)a2 + v30);
  if (v8((_DWORD *)((char *)a2 + v30), 1, v6))
  {
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  else
  {
    v34 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    v35 = *(_QWORD *)(v34 - 8);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v35 + 48))(v32, 1, v34))
    {
      v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      v37 = swift_getEnumCaseMultiPayload();
      switch(v37)
      {
        case 9:
          *v31 = *v32;
          *(_OWORD *)(v31 + 2) = *(_OWORD *)(v32 + 2);
          v41 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          v57 = (char *)v31 + v41;
          v42 = (char *)v32 + v41;
          v43 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v57, v42, v43);
          swift_storeEnumTagMultiPayload();
          break;
        case 5:
          *(_QWORD *)v31 = *(_QWORD *)v32;
          v44 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          v58 = (char *)v31 + v44;
          v45 = (char *)v32 + v44;
          v46 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v58, v45, v46);
          swift_storeEnumTagMultiPayload();
          break;
        case 4:
          *(_QWORD *)v31 = *(_QWORD *)v32;
          v38 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          v56 = (char *)v31 + v38;
          v39 = (char *)v32 + v38;
          v40 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v56, v39, v40);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v31, v32, *(_QWORD *)(v35 + 64));
          break;
      }
      (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v31, 0, 1, v34);
    }
    v47 = *(int *)(v6 + 20);
    v48 = (char *)v31 + v47;
    v49 = (char *)v32 + v47;
    v50 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v48, v49, v50);
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v31, 0, 1, v6);
  }
  v51 = *(int *)(a3 + 24);
  v52 = (char *)a1 + v51;
  v53 = (char *)a2 + v51;
  v54 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v52, v53, v54);
  return a1;
}

uint64_t assignWithTake for TranscriptProtoASTFlatExprIndexVariant(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t);
  int v18;
  int v19;
  int EnumCaseMultiPayload;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  size_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t (*v71)(uint64_t, uint64_t, uint64_t);
  int v72;
  int v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  size_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  int v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;

  v6 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_240388AE4(a1, type metadata accessor for TranscriptProtoASTFlatValue);
      goto LABEL_7;
    }
    v15 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    v16 = *(_QWORD *)(v15 - 8);
    v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
    v18 = v17(a1, 1, v15);
    v19 = v17(a2, 1, v15);
    if (v18)
    {
      if (!v19)
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        switch(EnumCaseMultiPayload)
        {
          case 9:
            *(_DWORD *)a1 = *(_DWORD *)a2;
            *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
            v48 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v49 = a1 + v48;
            v50 = a2 + v48;
            v51 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(v49, v50, v51);
            swift_storeEnumTagMultiPayload();
            break;
          case 5:
            *(_QWORD *)a1 = *(_QWORD *)a2;
            v52 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v53 = a1 + v52;
            v54 = a2 + v52;
            v55 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 32))(v53, v54, v55);
            swift_storeEnumTagMultiPayload();
            break;
          case 4:
            *(_QWORD *)a1 = *(_QWORD *)a2;
            v21 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v22 = a1 + v21;
            v23 = a2 + v21;
            v24 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy((void *)a1, (const void *)a2, *(_QWORD *)(v16 + 64));
            break;
        }
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
        goto LABEL_36;
      }
    }
    else
    {
      if (!v19)
      {
        if (a1 == a2)
          goto LABEL_36;
        sub_240388AE4(a1, type metadata accessor for TranscriptProtoAstflatValueEnum);
        v43 = swift_getEnumCaseMultiPayload();
        switch(v43)
        {
          case 9:
            *(_DWORD *)a1 = *(_DWORD *)a2;
            *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
            v116 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v117 = a1 + v116;
            v118 = a2 + v116;
            v119 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v119 - 8) + 32))(v117, v118, v119);
            swift_storeEnumTagMultiPayload();
            goto LABEL_36;
          case 5:
            *(_QWORD *)a1 = *(_QWORD *)a2;
            v120 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v121 = a1 + v120;
            v122 = a2 + v120;
            v123 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v123 - 8) + 32))(v121, v122, v123);
            swift_storeEnumTagMultiPayload();
            goto LABEL_36;
          case 4:
            *(_QWORD *)a1 = *(_QWORD *)a2;
            v44 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v45 = a1 + v44;
            v46 = a2 + v44;
            v47 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(v45, v46, v47);
            swift_storeEnumTagMultiPayload();
            goto LABEL_36;
        }
        v30 = *(_QWORD *)(v16 + 64);
LABEL_21:
        memcpy((void *)a1, (const void *)a2, v30);
LABEL_36:
        v56 = *(int *)(v6 + 20);
        v57 = a1 + v56;
        v58 = a2 + v56;
        v59 = sub_2408E57A4();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 40))(v57, v58, v59);
        goto LABEL_37;
      }
      sub_240388AE4(a1, type metadata accessor for TranscriptProtoAstflatValueEnum);
    }
    v30 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30) - 8) + 64);
    goto LABEL_21;
  }
  if (v10)
  {
LABEL_7:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
    memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_37;
  }
  v11 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
    memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v25 = swift_getEnumCaseMultiPayload();
    switch(v25)
    {
      case 9:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
        v31 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        v32 = a1 + v31;
        v33 = a2 + v31;
        v34 = sub_2408E57A4();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
        swift_storeEnumTagMultiPayload();
        break;
      case 5:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v35 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        v36 = a1 + v35;
        v37 = a2 + v35;
        v38 = sub_2408E57A4();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
        swift_storeEnumTagMultiPayload();
        break;
      case 4:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v26 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        v27 = a1 + v26;
        v28 = a2 + v26;
        v29 = sub_2408E57A4();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v27, v28, v29);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy((void *)a1, (const void *)a2, *(_QWORD *)(v12 + 64));
        break;
    }
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
  }
  v39 = *(int *)(v6 + 20);
  v40 = a1 + v39;
  v41 = a2 + v39;
  v42 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_37:
  v60 = *(int *)(a3 + 20);
  v61 = a1 + v60;
  v62 = a2 + v60;
  v63 = v8(a1 + v60, 1, v6);
  v64 = v8(v62, 1, v6);
  if (!v63)
  {
    if (v64)
    {
      sub_240388AE4(v61, type metadata accessor for TranscriptProtoASTFlatValue);
      goto LABEL_43;
    }
    v69 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    v70 = *(_QWORD *)(v69 - 8);
    v71 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v70 + 48);
    v72 = v71(v61, 1, v69);
    v73 = v71(v62, 1, v69);
    if (v72)
    {
      if (!v73)
      {
        v74 = swift_getEnumCaseMultiPayload();
        switch(v74)
        {
          case 9:
            *(_DWORD *)v61 = *(_DWORD *)v62;
            *(_OWORD *)(v61 + 8) = *(_OWORD *)(v62 + 8);
            v99 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v100 = v61 + v99;
            v101 = v62 + v99;
            v102 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v102 - 8) + 32))(v100, v101, v102);
            swift_storeEnumTagMultiPayload();
            break;
          case 5:
            *(_QWORD *)v61 = *(_QWORD *)v62;
            v103 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v104 = v61 + v103;
            v105 = v62 + v103;
            v106 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v106 - 8) + 32))(v104, v105, v106);
            swift_storeEnumTagMultiPayload();
            break;
          case 4:
            *(_QWORD *)v61 = *(_QWORD *)v62;
            v75 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v76 = v61 + v75;
            v77 = v62 + v75;
            v78 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 32))(v76, v77, v78);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy((void *)v61, (const void *)v62, *(_QWORD *)(v70 + 64));
            break;
        }
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v70 + 56))(v61, 0, 1, v69);
        goto LABEL_72;
      }
    }
    else
    {
      if (!v73)
      {
        if (a1 == a2)
          goto LABEL_72;
        sub_240388AE4(v61, type metadata accessor for TranscriptProtoAstflatValueEnum);
        v94 = swift_getEnumCaseMultiPayload();
        switch(v94)
        {
          case 9:
            *(_DWORD *)v61 = *(_DWORD *)v62;
            *(_OWORD *)(v61 + 8) = *(_OWORD *)(v62 + 8);
            v124 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v125 = v61 + v124;
            v126 = v62 + v124;
            v127 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v127 - 8) + 32))(v125, v126, v127);
            swift_storeEnumTagMultiPayload();
            goto LABEL_72;
          case 5:
            *(_QWORD *)v61 = *(_QWORD *)v62;
            v128 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v129 = v61 + v128;
            v130 = v62 + v128;
            v131 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v131 - 8) + 32))(v129, v130, v131);
            swift_storeEnumTagMultiPayload();
            goto LABEL_72;
          case 4:
            *(_QWORD *)v61 = *(_QWORD *)v62;
            v95 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v96 = v61 + v95;
            v97 = v62 + v95;
            v98 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v98 - 8) + 32))(v96, v97, v98);
            swift_storeEnumTagMultiPayload();
            goto LABEL_72;
        }
        v83 = *(_QWORD *)(v70 + 64);
LABEL_57:
        memcpy((void *)v61, (const void *)v62, v83);
LABEL_72:
        v107 = *(int *)(v6 + 20);
        v108 = v61 + v107;
        v109 = v62 + v107;
        v110 = sub_2408E57A4();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v110 - 8) + 40))(v108, v109, v110);
        goto LABEL_73;
      }
      sub_240388AE4(v61, type metadata accessor for TranscriptProtoAstflatValueEnum);
    }
    v83 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30) - 8) + 64);
    goto LABEL_57;
  }
  if (v64)
  {
LABEL_43:
    v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
    memcpy((void *)v61, (const void *)v62, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
    goto LABEL_73;
  }
  v65 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  v66 = *(_QWORD *)(v65 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v66 + 48))(v62, 1, v65))
  {
    v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
    memcpy((void *)v61, (const void *)v62, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
  }
  else
  {
    v79 = swift_getEnumCaseMultiPayload();
    switch(v79)
    {
      case 9:
        *(_DWORD *)v61 = *(_DWORD *)v62;
        *(_OWORD *)(v61 + 8) = *(_OWORD *)(v62 + 8);
        v84 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        v133 = v61 + v84;
        v85 = v62 + v84;
        v86 = sub_2408E57A4();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 32))(v133, v85, v86);
        swift_storeEnumTagMultiPayload();
        break;
      case 5:
        *(_QWORD *)v61 = *(_QWORD *)v62;
        v87 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        v134 = v61 + v87;
        v88 = v62 + v87;
        v89 = sub_2408E57A4();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v89 - 8) + 32))(v134, v88, v89);
        swift_storeEnumTagMultiPayload();
        break;
      case 4:
        *(_QWORD *)v61 = *(_QWORD *)v62;
        v80 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        v132 = v61 + v80;
        v81 = v62 + v80;
        v82 = sub_2408E57A4();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 32))(v132, v81, v82);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy((void *)v61, (const void *)v62, *(_QWORD *)(v66 + 64));
        break;
    }
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v66 + 56))(v61, 0, 1, v65);
  }
  v90 = *(int *)(v6 + 20);
  v91 = v61 + v90;
  v92 = v62 + v90;
  v93 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v93 - 8) + 32))(v91, v92, v93);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(v61, 0, 1, v6);
LABEL_73:
  v111 = *(int *)(a3 + 24);
  v112 = a1 + v111;
  v113 = a2 + v111;
  v114 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v114 - 8) + 40))(v112, v113, v114);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTFlatExprIndexVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406A678C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_43Tm(a1, a2, a3, &qword_257000DF8);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTFlatExprIndexVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406A67A4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_44Tm(a1, a2, a3, a4, &qword_257000DF8);
}

void sub_2406A67B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2406C4844(a1, a2, a3, qword_2570082D0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoASTFlatValue);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoASTFlatExprInfixVariant(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(uint64_t *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, char *, uint64_t);
  void (*v55)(char *, char *, uint64_t);
  void (*v56)(char *, char *, uint64_t);
  void (*v57)(char *, char *, uint64_t);
  void (*v58)(char *, char *, uint64_t);
  void (*v59)(char *, char *, uint64_t);
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  char *v65;
  char *v66;
  char *v67;
  char *v68;
  char *v69;
  char *v70;
  char *v71;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = a3[5];
    v8 = (uint64_t *)((char *)a1 + v7);
    v9 = (uint64_t *)((char *)a2 + v7);
    v10 = type metadata accessor for TranscriptProtoASTFlatValue(0);
    v11 = *(_QWORD *)(v10 - 8);
    v12 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v11 + 48);
    if (v12(v9, 1, v10))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v15 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v16 + 48))(v9, 1, v15))
      {
        v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
          case 6u:
          case 7u:
          case 8u:
            v18 = v9[1];
            *v8 = *v9;
            v8[1] = v18;
            swift_bridgeObjectRetain();
            goto LABEL_13;
          case 4u:
            *v8 = *v9;
            v19 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v60 = (char *)v9 + v19;
            v66 = (char *)v8 + v19;
            v51 = sub_2408E57A4();
            v54 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16);
            swift_bridgeObjectRetain();
            v54(v66, v60, v51);
            goto LABEL_13;
          case 5u:
            *v8 = *v9;
            v20 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v61 = (char *)v9 + v20;
            v67 = (char *)v8 + v20;
            v52 = sub_2408E57A4();
            v55 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 16);
            swift_bridgeObjectRetain();
            v55(v67, v61, v52);
            goto LABEL_13;
          case 9u:
            *(_DWORD *)v8 = *(_DWORD *)v9;
            v21 = v9[2];
            v8[1] = v9[1];
            v8[2] = v21;
            v22 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v62 = (char *)v9 + v22;
            v68 = (char *)v8 + v22;
            v53 = sub_2408E57A4();
            v56 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 16);
            swift_bridgeObjectRetain();
            v56(v68, v62, v53);
LABEL_13:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v8, v9, *(_QWORD *)(v16 + 64));
            break;
        }
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v8, 0, 1, v15);
      }
      v23 = *(int *)(v10 + 20);
      v24 = (char *)v8 + v23;
      v25 = (char *)v9 + v23;
      v26 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    v27 = a3[6];
    v28 = (uint64_t *)((char *)v4 + v27);
    v29 = (uint64_t *)((char *)a2 + v27);
    if (v12((uint64_t *)((char *)a2 + v27), 1, v10))
    {
      v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      v31 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      v32 = *(_QWORD *)(v31 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v32 + 48))(v29, 1, v31))
      {
        v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
        memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
          case 6u:
          case 7u:
          case 8u:
            v34 = v29[1];
            *v28 = *v29;
            v28[1] = v34;
            swift_bridgeObjectRetain();
            goto LABEL_26;
          case 4u:
            *v28 = *v29;
            v35 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v63 = (char *)v29 + v35;
            v69 = (char *)v28 + v35;
            v36 = sub_2408E57A4();
            v57 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16);
            swift_bridgeObjectRetain();
            v57(v69, v63, v36);
            goto LABEL_26;
          case 5u:
            *v28 = *v29;
            v37 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v64 = (char *)v29 + v37;
            v70 = (char *)v28 + v37;
            v38 = sub_2408E57A4();
            v58 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16);
            swift_bridgeObjectRetain();
            v58(v70, v64, v38);
            goto LABEL_26;
          case 9u:
            *(_DWORD *)v28 = *(_DWORD *)v29;
            v39 = v29[2];
            v28[1] = v29[1];
            v28[2] = v39;
            v40 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v65 = (char *)v29 + v40;
            v71 = (char *)v28 + v40;
            v41 = sub_2408E57A4();
            v59 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16);
            swift_bridgeObjectRetain();
            v59(v71, v65, v41);
LABEL_26:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v28, v29, *(_QWORD *)(v32 + 64));
            break;
        }
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v28, 0, 1, v31);
      }
      v42 = *(int *)(v10 + 20);
      v43 = (char *)v28 + v42;
      v44 = (char *)v29 + v42;
      v45 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v43, v44, v45);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v28, 0, 1, v10);
    }
    v46 = a3[7];
    v47 = (char *)v4 + v46;
    v48 = (char *)a2 + v46;
    v49 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(v47, v48, v49);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoASTFlatExprInfixVariant(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v4 = a1 + a2[5];
  v5 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48);
  if (!v6(v4, 1, v5))
  {
    v7 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v4, 1, v7))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 3u:
        case 6u:
        case 7u:
        case 8u:
          swift_bridgeObjectRelease();
          break;
        case 4u:
          swift_bridgeObjectRelease();
          v8 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          goto LABEL_8;
        case 5u:
          swift_bridgeObjectRelease();
          v8 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          goto LABEL_8;
        case 9u:
          swift_bridgeObjectRelease();
          v8 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_8:
          v9 = v4 + v8;
          v10 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
          break;
        default:
          break;
      }
    }
    v11 = v4 + *(int *)(v5 + 20);
    v12 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  }
  v13 = a1 + a2[6];
  if (!v6(v13, 1, v5))
  {
    v14 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v13, 1, v14))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 3u:
        case 6u:
        case 7u:
        case 8u:
          swift_bridgeObjectRelease();
          break;
        case 4u:
          swift_bridgeObjectRelease();
          v15 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          goto LABEL_17;
        case 5u:
          swift_bridgeObjectRelease();
          v15 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          goto LABEL_17;
        case 9u:
          swift_bridgeObjectRelease();
          v15 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_17:
          v16 = v13 + v15;
          v17 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
          break;
        default:
          break;
      }
    }
    v18 = v13 + *(int *)(v5 + 20);
    v19 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18, v19);
  }
  v20 = a1 + a2[7];
  v21 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v20, v21);
}

_BYTE *initializeWithCopy for TranscriptProtoASTFlatExprInfixVariant(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(_BYTE *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE *v45;
  _BYTE *v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, char *, uint64_t);
  void (*v53)(char *, char *, uint64_t);
  void (*v54)(char *, char *, uint64_t);
  void (*v55)(char *, char *, uint64_t);
  void (*v56)(char *, char *, uint64_t);
  void (*v57)(char *, char *, uint64_t);
  char *v58;
  char *v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  char *v65;
  char *v66;
  char *v67;
  char *v68;
  char *v69;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v13 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v14 + 48))(v8, 1, v13))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 3u:
        case 6u:
        case 7u:
        case 8u:
          v16 = v8[1];
          *v7 = *v8;
          v7[1] = v16;
          swift_bridgeObjectRetain();
          goto LABEL_11;
        case 4u:
          *v7 = *v8;
          v17 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          v58 = (char *)v8 + v17;
          v64 = (char *)v7 + v17;
          v49 = sub_2408E57A4();
          v52 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 16);
          swift_bridgeObjectRetain();
          v52(v64, v58, v49);
          goto LABEL_11;
        case 5u:
          *v7 = *v8;
          v18 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          v59 = (char *)v8 + v18;
          v65 = (char *)v7 + v18;
          v50 = sub_2408E57A4();
          v53 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 16);
          swift_bridgeObjectRetain();
          v53(v65, v59, v50);
          goto LABEL_11;
        case 9u:
          *(_DWORD *)v7 = *(_DWORD *)v8;
          v19 = v8[2];
          v7[1] = v8[1];
          v7[2] = v19;
          v20 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          v60 = (char *)v8 + v20;
          v66 = (char *)v7 + v20;
          v51 = sub_2408E57A4();
          v54 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16);
          swift_bridgeObjectRetain();
          v54(v66, v60, v51);
LABEL_11:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v7, v8, *(_QWORD *)(v14 + 64));
          break;
      }
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v7, 0, 1, v13);
    }
    v21 = *(int *)(v9 + 20);
    v22 = (char *)v7 + v21;
    v23 = (char *)v8 + v21;
    v24 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v25 = a3[6];
  v26 = &a1[v25];
  v27 = &a2[v25];
  if (v11(&a2[v25], 1, v9))
  {
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    v29 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    v30 = *(_QWORD *)(v29 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v30 + 48))(v27, 1, v29))
    {
      v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 3u:
        case 6u:
        case 7u:
        case 8u:
          v32 = v27[1];
          *v26 = *v27;
          v26[1] = v32;
          swift_bridgeObjectRetain();
          goto LABEL_24;
        case 4u:
          *v26 = *v27;
          v33 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          v61 = (char *)v27 + v33;
          v67 = (char *)v26 + v33;
          v34 = sub_2408E57A4();
          v55 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16);
          swift_bridgeObjectRetain();
          v55(v67, v61, v34);
          goto LABEL_24;
        case 5u:
          *v26 = *v27;
          v35 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          v62 = (char *)v27 + v35;
          v68 = (char *)v26 + v35;
          v36 = sub_2408E57A4();
          v56 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16);
          swift_bridgeObjectRetain();
          v56(v68, v62, v36);
          goto LABEL_24;
        case 9u:
          *(_DWORD *)v26 = *(_DWORD *)v27;
          v37 = v27[2];
          v26[1] = v27[1];
          v26[2] = v37;
          v38 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          v63 = (char *)v27 + v38;
          v69 = (char *)v26 + v38;
          v39 = sub_2408E57A4();
          v57 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16);
          swift_bridgeObjectRetain();
          v57(v69, v63, v39);
LABEL_24:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v26, v27, *(_QWORD *)(v30 + 64));
          break;
      }
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v26, 0, 1, v29);
    }
    v40 = *(int *)(v9 + 20);
    v41 = (char *)v26 + v40;
    v42 = (char *)v27 + v40;
    v43 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v41, v42, v43);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v26, 0, 1, v9);
  }
  v44 = a3[7];
  v45 = &a1[v44];
  v46 = &a2[v44];
  v47 = sub_2408E57A4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
  return a1;
}

_BYTE *assignWithCopy for TranscriptProtoASTFlatExprInfixVariant(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_BYTE *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(_QWORD *, uint64_t, uint64_t);
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  int v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(_QWORD *, uint64_t, uint64_t);
  int v61;
  int v62;
  size_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  _BYTE *v88;
  _BYTE *v89;
  uint64_t v90;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void (*v103)(char *, char *, uint64_t);
  uint64_t v104;
  uint64_t v105;
  void (*v106)(char *, char *, uint64_t);
  uint64_t v107;
  uint64_t v108;
  void (*v109)(char *, char *, uint64_t);
  void (*v110)(char *, char *, uint64_t);
  void (*v111)(char *, char *, uint64_t);
  void (*v112)(char *, char *, uint64_t);
  char *v113;
  char *v114;
  char *v115;
  char *v116;
  char *v117;
  char *v118;
  char *v119;
  char *v120;
  char *v121;
  void (*v122)(char *, char *, uint64_t);
  void (*v123)(char *, char *, uint64_t);
  void (*v124)(char *, char *, uint64_t);
  void (*v125)(char *, char *, uint64_t);
  void (*v126)(char *, char *, uint64_t);
  void (*v127)(char *, char *, uint64_t);
  char *v128;
  char *v129;
  char *v130;
  char *v131;
  char *v132;
  char *v133;
  void (*v134)(char *, char *, uint64_t);
  void (*v135)(char *, char *, uint64_t);
  void (*v136)(char *, char *, uint64_t);
  char *v137;
  char *v138;
  char *v139;
  uint64_t v140;
  char *v141;
  char *v142;
  char *v143;
  char *v144;
  char *v145;
  char *v146;
  char *v147;
  char *v148;
  char *v149;
  char *v150;
  char *v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  char *v161;
  char *v162;
  char *v163;
  char *v164;
  char *v165;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (v13)
    {
      sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatValue);
      goto LABEL_7;
    }
    v153 = v10;
    v18 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    v140 = *(_QWORD *)(v18 - 8);
    v19 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v140 + 48);
    v20 = v19(v7, 1, v18);
    v21 = v19(v8, 1, v18);
    if (v20)
    {
      if (!v21)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
          case 6u:
          case 7u:
          case 8u:
            *v7 = *v8;
            v7[1] = v8[1];
            swift_bridgeObjectRetain();
            goto LABEL_31;
          case 4u:
            *v7 = *v8;
            v36 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v113 = (char *)v8 + v36;
            v119 = (char *)v7 + v36;
            v37 = sub_2408E57A4();
            v38 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16);
            swift_bridgeObjectRetain();
            v38(v119, v113, v37);
            goto LABEL_31;
          case 5u:
            *v7 = *v8;
            v39 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v114 = (char *)v8 + v39;
            v120 = (char *)v7 + v39;
            v40 = sub_2408E57A4();
            v41 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16);
            swift_bridgeObjectRetain();
            v41(v120, v114, v40);
            goto LABEL_31;
          case 9u:
            *(_DWORD *)v7 = *(_DWORD *)v8;
            v7[1] = v8[1];
            v7[2] = v8[2];
            v42 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v115 = (char *)v8 + v42;
            v121 = (char *)v7 + v42;
            v43 = sub_2408E57A4();
            v44 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16);
            swift_bridgeObjectRetain();
            v44(v121, v115, v43);
LABEL_31:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v7, v8, *(_QWORD *)(v140 + 64));
            break;
        }
        v10 = v153;
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v140 + 56))(v7, 0, 1, v18);
        goto LABEL_33;
      }
    }
    else
    {
      if (!v21)
      {
        v10 = v153;
        if (a1 != a2)
        {
          sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoAstflatValueEnum);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              *v7 = *v8;
              v7[1] = v8[1];
              swift_bridgeObjectRetain();
              swift_storeEnumTagMultiPayload();
              break;
            case 4u:
              *v7 = *v8;
              v92 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              v137 = (char *)v8 + v92;
              v147 = (char *)v7 + v92;
              v93 = sub_2408E57A4();
              v125 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v93 - 8) + 16);
              swift_bridgeObjectRetain();
              v94 = v93;
              v10 = v153;
              v125(v147, v137, v94);
              swift_storeEnumTagMultiPayload();
              break;
            case 5u:
              *v7 = *v8;
              v95 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              v138 = (char *)v8 + v95;
              v148 = (char *)v7 + v95;
              v96 = sub_2408E57A4();
              v126 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v96 - 8) + 16);
              swift_bridgeObjectRetain();
              v97 = v96;
              v10 = v153;
              v126(v148, v138, v97);
              swift_storeEnumTagMultiPayload();
              break;
            case 9u:
              *(_DWORD *)v7 = *(_DWORD *)v8;
              v7[1] = v8[1];
              v7[2] = v8[2];
              v98 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              v139 = (char *)v8 + v98;
              v149 = (char *)v7 + v98;
              v99 = sub_2408E57A4();
              v127 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 16);
              swift_bridgeObjectRetain();
              v100 = v99;
              v10 = v153;
              v127(v149, v139, v100);
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v7, v8, *(_QWORD *)(v140 + 64));
              break;
          }
        }
        goto LABEL_33;
      }
      sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoAstflatValueEnum);
    }
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    v10 = v153;
LABEL_33:
    v45 = *(int *)(v9 + 20);
    v46 = (char *)v7 + v45;
    v47 = (char *)v8 + v45;
    v48 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 24))(v46, v47, v48);
    goto LABEL_34;
  }
  if (v13)
  {
LABEL_7:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_34;
  }
  v14 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v15 + 48))(v8, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 3u:
      case 6u:
      case 7u:
      case 8u:
        *v7 = *v8;
        v7[1] = v8[1];
        swift_bridgeObjectRetain();
        goto LABEL_24;
      case 4u:
        *v7 = *v8;
        v23 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        v116 = (char *)v8 + v23;
        v128 = (char *)v7 + v23;
        v154 = v10;
        v24 = sub_2408E57A4();
        v110 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
        swift_bridgeObjectRetain();
        v25 = v24;
        v10 = v154;
        v110(v128, v116, v25);
        goto LABEL_24;
      case 5u:
        *v7 = *v8;
        v26 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        v117 = (char *)v8 + v26;
        v129 = (char *)v7 + v26;
        v155 = v10;
        v27 = sub_2408E57A4();
        v111 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
        swift_bridgeObjectRetain();
        v28 = v27;
        v10 = v155;
        v111(v129, v117, v28);
        goto LABEL_24;
      case 9u:
        *(_DWORD *)v7 = *(_DWORD *)v8;
        v7[1] = v8[1];
        v7[2] = v8[2];
        v29 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        v118 = (char *)v8 + v29;
        v130 = (char *)v7 + v29;
        v156 = v10;
        v30 = sub_2408E57A4();
        v112 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16);
        swift_bridgeObjectRetain();
        v31 = v30;
        v10 = v156;
        v112(v130, v118, v31);
LABEL_24:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v7, v8, *(_QWORD *)(v15 + 64));
        break;
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v7, 0, 1, v14);
  }
  v32 = *(int *)(v9 + 20);
  v33 = (char *)v7 + v32;
  v34 = (char *)v8 + v32;
  v35 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_34:
  v49 = a3[6];
  v50 = &a1[v49];
  v51 = &a2[v49];
  v52 = v11(&a1[v49], 1, v9);
  v53 = v11(v51, 1, v9);
  if (!v52)
  {
    if (v53)
    {
      sub_240388AE4((uint64_t)v50, type metadata accessor for TranscriptProtoASTFlatValue);
      goto LABEL_40;
    }
    v58 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    v59 = *(_QWORD *)(v58 - 8);
    v60 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v59 + 48);
    v61 = v60(v50, 1, v58);
    v62 = v60(v51, 1, v58);
    if (v61)
    {
      if (!v62)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
          case 6u:
          case 7u:
          case 8u:
            *v50 = *v51;
            v50[1] = v51[1];
            swift_bridgeObjectRetain();
            goto LABEL_65;
          case 4u:
            *v50 = *v51;
            v77 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v144 = (char *)v51 + v77;
            v160 = (char *)v50 + v77;
            v78 = sub_2408E57A4();
            v134 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v78 - 8) + 16);
            swift_bridgeObjectRetain();
            v134(v160, v144, v78);
            goto LABEL_65;
          case 5u:
            *v50 = *v51;
            v79 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v145 = (char *)v51 + v79;
            v161 = (char *)v50 + v79;
            v80 = sub_2408E57A4();
            v135 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v80 - 8) + 16);
            swift_bridgeObjectRetain();
            v135(v161, v145, v80);
            goto LABEL_65;
          case 9u:
            *(_DWORD *)v50 = *(_DWORD *)v51;
            v50[1] = v51[1];
            v50[2] = v51[2];
            v81 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v146 = (char *)v51 + v81;
            v162 = (char *)v50 + v81;
            v82 = sub_2408E57A4();
            v136 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v82 - 8) + 16);
            swift_bridgeObjectRetain();
            v136(v162, v146, v82);
LABEL_65:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v50, v51, *(_QWORD *)(v59 + 64));
            break;
        }
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v50, 0, 1, v58);
LABEL_67:
        v83 = *(int *)(v9 + 20);
        v84 = (char *)v50 + v83;
        v85 = (char *)v51 + v83;
        v86 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v86 - 8) + 24))(v84, v85, v86);
        goto LABEL_68;
      }
    }
    else
    {
      if (!v62)
      {
        if (a1 != a2)
        {
          sub_240388AE4((uint64_t)v50, type metadata accessor for TranscriptProtoAstflatValueEnum);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              *v50 = *v51;
              v50[1] = v51[1];
              swift_bridgeObjectRetain();
              swift_storeEnumTagMultiPayload();
              break;
            case 4u:
              *v50 = *v51;
              v101 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              v150 = (char *)v51 + v101;
              v163 = (char *)v50 + v101;
              v102 = sub_2408E57A4();
              v103 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v102 - 8) + 16);
              swift_bridgeObjectRetain();
              v103(v163, v150, v102);
              swift_storeEnumTagMultiPayload();
              break;
            case 5u:
              *v50 = *v51;
              v104 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              v151 = (char *)v51 + v104;
              v164 = (char *)v50 + v104;
              v105 = sub_2408E57A4();
              v106 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v105 - 8) + 16);
              swift_bridgeObjectRetain();
              v106(v164, v151, v105);
              swift_storeEnumTagMultiPayload();
              break;
            case 9u:
              *(_DWORD *)v50 = *(_DWORD *)v51;
              v50[1] = v51[1];
              v50[2] = v51[2];
              v107 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              v152 = (char *)v51 + v107;
              v165 = (char *)v50 + v107;
              v108 = sub_2408E57A4();
              v109 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v108 - 8) + 16);
              swift_bridgeObjectRetain();
              v109(v165, v152, v108);
              swift_storeEnumTagMultiPayload();
              break;
            default:
              v63 = *(_QWORD *)(v59 + 64);
              goto LABEL_50;
          }
        }
        goto LABEL_67;
      }
      sub_240388AE4((uint64_t)v50, type metadata accessor for TranscriptProtoAstflatValueEnum);
    }
    v63 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30) - 8) + 64);
LABEL_50:
    memcpy(v50, v51, v63);
    goto LABEL_67;
  }
  if (v53)
  {
LABEL_40:
    v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    goto LABEL_68;
  }
  v54 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  v55 = *(_QWORD *)(v54 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v55 + 48))(v51, 1, v54))
  {
    v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 3u:
      case 6u:
      case 7u:
      case 8u:
        *v50 = *v51;
        v50[1] = v51[1];
        swift_bridgeObjectRetain();
        goto LABEL_58;
      case 4u:
        *v50 = *v51;
        v64 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        v131 = (char *)v51 + v64;
        v141 = (char *)v50 + v64;
        v157 = v10;
        v65 = sub_2408E57A4();
        v122 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 16);
        swift_bridgeObjectRetain();
        v66 = v65;
        v10 = v157;
        v122(v141, v131, v66);
        goto LABEL_58;
      case 5u:
        *v50 = *v51;
        v67 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        v132 = (char *)v51 + v67;
        v142 = (char *)v50 + v67;
        v158 = v10;
        v68 = sub_2408E57A4();
        v123 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 16);
        swift_bridgeObjectRetain();
        v69 = v68;
        v10 = v158;
        v123(v142, v132, v69);
        goto LABEL_58;
      case 9u:
        *(_DWORD *)v50 = *(_DWORD *)v51;
        v50[1] = v51[1];
        v50[2] = v51[2];
        v70 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        v133 = (char *)v51 + v70;
        v143 = (char *)v50 + v70;
        v159 = v10;
        v71 = sub_2408E57A4();
        v124 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v71 - 8) + 16);
        swift_bridgeObjectRetain();
        v72 = v71;
        v10 = v159;
        v124(v143, v133, v72);
LABEL_58:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v50, v51, *(_QWORD *)(v55 + 64));
        break;
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v50, 0, 1, v54);
  }
  v73 = *(int *)(v9 + 20);
  v74 = (char *)v50 + v73;
  v75 = (char *)v51 + v73;
  v76 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v76 - 8) + 16))(v74, v75, v76);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v50, 0, 1, v9);
LABEL_68:
  v87 = a3[7];
  v88 = &a1[v87];
  v89 = &a2[v87];
  v90 = sub_2408E57A4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v90 - 8) + 24))(v88, v89, v90);
  return a1;
}

_BYTE *initializeWithTake for TranscriptProtoASTFlatExprInfixVariant(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _DWORD *v7;
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(_DWORD *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int EnumCaseMultiPayload;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _DWORD *v28;
  _DWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  _BYTE *v50;
  uint64_t v51;
  char *v53;
  char *v54;
  char *v55;
  char *v56;
  char *v57;
  char *v58;
  char *v59;
  char *v60;
  char *v61;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v13 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v14 + 48))(v8, 1, v13))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      switch(EnumCaseMultiPayload)
      {
        case 9:
          *v7 = *v8;
          *(_OWORD *)(v7 + 2) = *(_OWORD *)(v8 + 2);
          v19 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          v54 = (char *)v8 + v19;
          v57 = (char *)v7 + v19;
          v20 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v57, v54, v20);
          swift_storeEnumTagMultiPayload();
          break;
        case 5:
          *(_QWORD *)v7 = *(_QWORD *)v8;
          v21 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          v55 = (char *)v8 + v21;
          v58 = (char *)v7 + v21;
          v22 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v58, v55, v22);
          swift_storeEnumTagMultiPayload();
          break;
        case 4:
          *(_QWORD *)v7 = *(_QWORD *)v8;
          v17 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          v53 = (char *)v8 + v17;
          v56 = (char *)v7 + v17;
          v18 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v56, v53, v18);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v7, v8, *(_QWORD *)(v14 + 64));
          break;
      }
      (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v7, 0, 1, v13);
    }
    v23 = *(int *)(v9 + 20);
    v24 = (char *)v7 + v23;
    v25 = (char *)v8 + v23;
    v26 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v27 = a3[6];
  v28 = &a1[v27];
  v29 = &a2[v27];
  if (v11(&a2[v27], 1, v9))
  {
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    v31 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    v32 = *(_QWORD *)(v31 - 8);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v32 + 48))(v29, 1, v31))
    {
      v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      v34 = swift_getEnumCaseMultiPayload();
      switch(v34)
      {
        case 9:
          *v28 = *v29;
          *(_OWORD *)(v28 + 2) = *(_OWORD *)(v29 + 2);
          v38 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          v60 = (char *)v28 + v38;
          v39 = (char *)v29 + v38;
          v40 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v60, v39, v40);
          swift_storeEnumTagMultiPayload();
          break;
        case 5:
          *(_QWORD *)v28 = *(_QWORD *)v29;
          v41 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          v61 = (char *)v28 + v41;
          v42 = (char *)v29 + v41;
          v43 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v61, v42, v43);
          swift_storeEnumTagMultiPayload();
          break;
        case 4:
          *(_QWORD *)v28 = *(_QWORD *)v29;
          v35 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          v59 = (char *)v28 + v35;
          v36 = (char *)v29 + v35;
          v37 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v59, v36, v37);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v28, v29, *(_QWORD *)(v32 + 64));
          break;
      }
      (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v28, 0, 1, v31);
    }
    v44 = *(int *)(v9 + 20);
    v45 = (char *)v28 + v44;
    v46 = (char *)v29 + v44;
    v47 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(v45, v46, v47);
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v28, 0, 1, v9);
  }
  v48 = a3[7];
  v49 = &a1[v48];
  v50 = &a2[v48];
  v51 = sub_2408E57A4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(v49, v50, v51);
  return a1;
}

_BYTE *assignWithTake for TranscriptProtoASTFlatExprInfixVariant(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t);
  int v20;
  int v21;
  uint64_t v22;
  int EnumCaseMultiPayload;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _BYTE *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _BYTE *v60;
  int v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t (*v69)(uint64_t, uint64_t, uint64_t);
  int v70;
  int v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  _BYTE *v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  _BYTE *v79;
  uint64_t v80;
  size_t v81;
  uint64_t v82;
  _BYTE *v83;
  uint64_t v84;
  uint64_t v85;
  _BYTE *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _BYTE *v90;
  uint64_t v91;
  int v92;
  uint64_t v93;
  uint64_t v94;
  _BYTE *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _BYTE *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _BYTE *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _BYTE *v107;
  uint64_t v108;
  uint64_t v109;
  _BYTE *v110;
  _BYTE *v111;
  uint64_t v112;
  uint64_t v114;
  uint64_t v115;
  _BYTE *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  _BYTE *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  _BYTE *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  _BYTE *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  _BYTE *v132;
  _BYTE *v133;
  _BYTE *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;

  v3 = a3;
  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (uint64_t)&a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11((uint64_t)v8, 1, v9);
  if (!v12)
  {
    if (v13)
    {
      sub_240388AE4(v7, type metadata accessor for TranscriptProtoASTFlatValue);
      goto LABEL_7;
    }
    v131 = v10;
    v135 = v3;
    v18 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    v130 = *(_QWORD *)(v18 - 8);
    v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v130 + 48);
    v20 = v19(v7, 1, v18);
    v21 = v19((uint64_t)v8, 1, v18);
    if (v20)
    {
      if (!v21)
      {
        v22 = v18;
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        v10 = v131;
        switch(EnumCaseMultiPayload)
        {
          case 9:
            *(_DWORD *)v7 = *(_DWORD *)v8;
            *(_OWORD *)(v7 + 8) = *(_OWORD *)(v8 + 8);
            v45 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v46 = v7 + v45;
            v47 = &v8[v45];
            v48 = sub_2408E57A4();
            (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v46, v47, v48);
            break;
          case 5:
            *(_QWORD *)v7 = *(_QWORD *)v8;
            v49 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v50 = v7 + v49;
            v51 = &v8[v49];
            v52 = sub_2408E57A4();
            (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v50, v51, v52);
            break;
          case 4:
            *(_QWORD *)v7 = *(_QWORD *)v8;
            v24 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v25 = v7 + v24;
            v26 = &v8[v24];
            v27 = sub_2408E57A4();
            (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
            break;
          default:
            v53 = v130;
            memcpy((void *)v7, v8, *(_QWORD *)(v130 + 64));
            goto LABEL_35;
        }
        swift_storeEnumTagMultiPayload();
        v53 = v130;
LABEL_35:
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v53 + 56))(v7, 0, 1, v22);
        goto LABEL_36;
      }
    }
    else
    {
      if (!v21)
      {
        v10 = v131;
        if (a1 != a2)
        {
          sub_240388AE4(v7, type metadata accessor for TranscriptProtoAstflatValueEnum);
          v40 = swift_getEnumCaseMultiPayload();
          switch(v40)
          {
            case 9:
              *(_DWORD *)v7 = *(_DWORD *)v8;
              *(_OWORD *)(v7 + 8) = *(_OWORD *)(v8 + 8);
              v114 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              v115 = v7 + v114;
              v116 = &v8[v114];
              v117 = sub_2408E57A4();
              (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v117 - 8) + 32))(v115, v116, v117);
              swift_storeEnumTagMultiPayload();
              break;
            case 5:
              *(_QWORD *)v7 = *(_QWORD *)v8;
              v118 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              v119 = v7 + v118;
              v120 = &v8[v118];
              v121 = sub_2408E57A4();
              (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v121 - 8) + 32))(v119, v120, v121);
              swift_storeEnumTagMultiPayload();
              break;
            case 4:
              *(_QWORD *)v7 = *(_QWORD *)v8;
              v41 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              v42 = v7 + v41;
              v43 = &v8[v41];
              v44 = sub_2408E57A4();
              (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v42, v43, v44);
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy((void *)v7, v8, *(_QWORD *)(v130 + 64));
              break;
          }
        }
        goto LABEL_36;
      }
      sub_240388AE4(v7, type metadata accessor for TranscriptProtoAstflatValueEnum);
    }
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
    memcpy((void *)v7, v8, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    v10 = v131;
LABEL_36:
    v54 = *(int *)(v9 + 20);
    v55 = v7 + v54;
    v56 = &v8[v54];
    v57 = sub_2408E57A4();
    (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v57 - 8) + 40))(v55, v56, v57);
    v3 = v135;
    goto LABEL_37;
  }
  if (v13)
  {
LABEL_7:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
    memcpy((void *)v7, v8, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_37;
  }
  v14 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v15 + 48))(v8, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
    memcpy((void *)v7, v8, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v28 = swift_getEnumCaseMultiPayload();
    switch(v28)
    {
      case 9:
        *(_DWORD *)v7 = *(_DWORD *)v8;
        *(_OWORD *)(v7 + 8) = *(_OWORD *)(v8 + 8);
        v32 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        v133 = &v8[v32];
        v137 = v7 + v32;
        v33 = sub_2408E57A4();
        (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v137, v133, v33);
        swift_storeEnumTagMultiPayload();
        break;
      case 5:
        *(_QWORD *)v7 = *(_QWORD *)v8;
        v34 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        v134 = &v8[v34];
        v138 = v7 + v34;
        v35 = sub_2408E57A4();
        (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v138, v134, v35);
        swift_storeEnumTagMultiPayload();
        break;
      case 4:
        *(_QWORD *)v7 = *(_QWORD *)v8;
        v29 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        v132 = &v8[v29];
        v136 = v7 + v29;
        v30 = sub_2408E57A4();
        (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v136, v132, v30);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy((void *)v7, v8, *(_QWORD *)(v15 + 64));
        break;
    }
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v15 + 56))(v7, 0, 1, v14);
  }
  v36 = *(int *)(v9 + 20);
  v37 = v7 + v36;
  v38 = &v8[v36];
  v39 = sub_2408E57A4();
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_37:
  v58 = *(int *)(v3 + 24);
  v59 = (uint64_t)&a1[v58];
  v60 = &a2[v58];
  v61 = v11((uint64_t)&a1[v58], 1, v9);
  v62 = v11((uint64_t)v60, 1, v9);
  if (!v61)
  {
    if (v62)
    {
      sub_240388AE4(v59, type metadata accessor for TranscriptProtoASTFlatValue);
      goto LABEL_43;
    }
    v67 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    v68 = *(_QWORD *)(v67 - 8);
    v69 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v68 + 48);
    v70 = v69(v59, 1, v67);
    v71 = v69((uint64_t)v60, 1, v67);
    if (v70)
    {
      if (!v71)
      {
        v72 = swift_getEnumCaseMultiPayload();
        switch(v72)
        {
          case 9:
            *(_DWORD *)v59 = *(_DWORD *)v60;
            *(_OWORD *)(v59 + 8) = *(_OWORD *)(v60 + 8);
            v97 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v98 = v59 + v97;
            v99 = &v60[v97];
            v100 = sub_2408E57A4();
            (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v100 - 8) + 32))(v98, v99, v100);
            swift_storeEnumTagMultiPayload();
            break;
          case 5:
            *(_QWORD *)v59 = *(_QWORD *)v60;
            v101 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v102 = v59 + v101;
            v103 = &v60[v101];
            v104 = sub_2408E57A4();
            (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v104 - 8) + 32))(v102, v103, v104);
            swift_storeEnumTagMultiPayload();
            break;
          case 4:
            *(_QWORD *)v59 = *(_QWORD *)v60;
            v73 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v74 = v59 + v73;
            v75 = &v60[v73];
            v76 = sub_2408E57A4();
            (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v76 - 8) + 32))(v74, v75, v76);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy((void *)v59, v60, *(_QWORD *)(v68 + 64));
            break;
        }
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v68 + 56))(v59, 0, 1, v67);
        goto LABEL_72;
      }
    }
    else
    {
      if (!v71)
      {
        if (a1 == a2)
          goto LABEL_72;
        sub_240388AE4(v59, type metadata accessor for TranscriptProtoAstflatValueEnum);
        v92 = swift_getEnumCaseMultiPayload();
        switch(v92)
        {
          case 9:
            *(_DWORD *)v59 = *(_DWORD *)v60;
            *(_OWORD *)(v59 + 8) = *(_OWORD *)(v60 + 8);
            v122 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v123 = v59 + v122;
            v124 = &v60[v122];
            v125 = sub_2408E57A4();
            (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v125 - 8) + 32))(v123, v124, v125);
            swift_storeEnumTagMultiPayload();
            goto LABEL_72;
          case 5:
            *(_QWORD *)v59 = *(_QWORD *)v60;
            v126 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v127 = v59 + v126;
            v128 = &v60[v126];
            v129 = sub_2408E57A4();
            (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v129 - 8) + 32))(v127, v128, v129);
            swift_storeEnumTagMultiPayload();
            goto LABEL_72;
          case 4:
            *(_QWORD *)v59 = *(_QWORD *)v60;
            v93 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v94 = v59 + v93;
            v95 = &v60[v93];
            v96 = sub_2408E57A4();
            (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v96 - 8) + 32))(v94, v95, v96);
            swift_storeEnumTagMultiPayload();
            goto LABEL_72;
        }
        v81 = *(_QWORD *)(v68 + 64);
LABEL_57:
        memcpy((void *)v59, v60, v81);
LABEL_72:
        v105 = *(int *)(v9 + 20);
        v106 = v59 + v105;
        v107 = &v60[v105];
        v108 = sub_2408E57A4();
        (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v108 - 8) + 40))(v106, v107, v108);
        goto LABEL_73;
      }
      sub_240388AE4(v59, type metadata accessor for TranscriptProtoAstflatValueEnum);
    }
    v81 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30) - 8) + 64);
    goto LABEL_57;
  }
  if (v62)
  {
LABEL_43:
    v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
    memcpy((void *)v59, v60, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
    goto LABEL_73;
  }
  v63 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  v64 = *(_QWORD *)(v63 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v64 + 48))(v60, 1, v63))
  {
    v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
    memcpy((void *)v59, v60, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
  }
  else
  {
    v77 = swift_getEnumCaseMultiPayload();
    switch(v77)
    {
      case 9:
        *(_DWORD *)v59 = *(_DWORD *)v60;
        *(_OWORD *)(v59 + 8) = *(_OWORD *)(v60 + 8);
        v82 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        v140 = v59 + v82;
        v83 = &v60[v82];
        v84 = sub_2408E57A4();
        (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v84 - 8) + 32))(v140, v83, v84);
        swift_storeEnumTagMultiPayload();
        break;
      case 5:
        *(_QWORD *)v59 = *(_QWORD *)v60;
        v85 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        v141 = v59 + v85;
        v86 = &v60[v85];
        v87 = sub_2408E57A4();
        (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v87 - 8) + 32))(v141, v86, v87);
        swift_storeEnumTagMultiPayload();
        break;
      case 4:
        *(_QWORD *)v59 = *(_QWORD *)v60;
        v78 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        v139 = v59 + v78;
        v79 = &v60[v78];
        v80 = sub_2408E57A4();
        (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v80 - 8) + 32))(v139, v79, v80);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy((void *)v59, v60, *(_QWORD *)(v64 + 64));
        break;
    }
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v64 + 56))(v59, 0, 1, v63);
  }
  v88 = *(int *)(v9 + 20);
  v89 = v59 + v88;
  v90 = &v60[v88];
  v91 = sub_2408E57A4();
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v91 - 8) + 32))(v89, v90, v91);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(v59, 0, 1, v9);
LABEL_73:
  v109 = *(int *)(v3 + 28);
  v110 = &a1[v109];
  v111 = &a2[v109];
  v112 = sub_2408E57A4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v112 - 8) + 40))(v110, v111, v112);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTFlatExprInfixVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406A9840(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_307Tm(a1, a2, a3, &qword_257000DF8);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTFlatExprInfixVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_BYTE *sub_2406A9858(_BYTE *a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_308Tm(a1, a2, a3, a4, &qword_257000DF8);
}

void sub_2406A9864(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2406C3108(a1, a2, a3, qword_2570082D0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoASTFlatValue);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoExpression(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for TranscriptProtoExpressionEnum(0);
    if (!(*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(a2, 1, v7))
    {
      v10 = (char *)&loc_2406A9944 + 4 * word_2409037BC[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF98);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    v11 = *(int *)(a3 + 20);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoExpression(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t updated;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v4 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v6 = type metadata accessor for TranscriptProtoValueExpressionEnum(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(a1, 1, v6))
          goto LABEL_47;
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        switch(EnumCaseMultiPayload)
        {
          case 5:
            goto LABEL_8;
          case 4:
            swift_bridgeObjectRelease();
            v48 = a1 + *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
            v49 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 8))(v48, v49);
            break;
          case 3:
LABEL_8:
            swift_bridgeObjectRelease();
            break;
        }
LABEL_47:
        v27 = type metadata accessor for TranscriptProtoValueExpression(0);
        goto LABEL_48;
      case 1u:
        swift_bridgeObjectRelease();
        v8 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        goto LABEL_49;
      case 2u:
        updated = type metadata accessor for TranscriptProtoPrefixExpression(0);
        goto LABEL_26;
      case 3u:
        v10 = (int *)type metadata accessor for TranscriptProtoInfixExpression(0);
        v11 = a1 + v10[5];
        v12 = type metadata accessor for TranscriptProtoStatementID(0);
        v13 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48);
        if (!v13(v11, 1, v12))
        {
          swift_bridgeObjectRelease();
          v14 = v11 + *(int *)(v12 + 24);
          v15 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
        }
        v16 = a1 + v10[6];
        if (!v13(v16, 1, v12))
        {
          swift_bridgeObjectRelease();
          v17 = v16 + *(int *)(v12 + 24);
          v18 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
        }
        v8 = v10[7];
        goto LABEL_49;
      case 4u:
        swift_bridgeObjectRelease();
        updated = type metadata accessor for TranscriptProtoDotExpression(0);
        goto LABEL_26;
      case 5u:
        v19 = type metadata accessor for TranscriptProtoStatementID(0);
        v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48);
        if (!v20(a1, 1, v19))
        {
          swift_bridgeObjectRelease();
          v21 = a1 + *(int *)(v19 + 24);
          v22 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
        }
        v23 = type metadata accessor for TranscriptProtoIndexExpression(0);
        v24 = a1 + *(int *)(v23 + 20);
        if (!v20(v24, 1, v19))
        {
          swift_bridgeObjectRelease();
          v25 = v24 + *(int *)(v19 + 24);
          v26 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v25, v26);
        }
        v8 = *(int *)(v23 + 24);
        goto LABEL_49;
      case 6u:
        swift_bridgeObjectRelease();
        updated = type metadata accessor for TranscriptProtoUpdateParametersExpression(0);
        goto LABEL_26;
      case 7u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v8 = *(int *)(type metadata accessor for TranscriptProtoCallExpression(0) + 24);
        goto LABEL_49;
      case 8u:
        swift_bridgeObjectRelease();
        v27 = type metadata accessor for TranscriptProtoSayExpression(0);
        goto LABEL_48;
      case 9u:
        updated = type metadata accessor for TranscriptProtoPickExpression(0);
LABEL_26:
        v28 = updated;
        v29 = a1 + *(int *)(updated + 20);
        v30 = type metadata accessor for TranscriptProtoStatementID(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 48))(v29, 1, v30))
        {
          swift_bridgeObjectRelease();
          v31 = v29 + *(int *)(v30 + 24);
          v32 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v31, v32);
        }
        v8 = *(int *)(v28 + 24);
        goto LABEL_49;
      case 0xAu:
        v33 = type metadata accessor for TranscriptProtoStatementID(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(a1, 1, v33))
        {
          swift_bridgeObjectRelease();
          v34 = a1 + *(int *)(v33 + 24);
          v35 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 8))(v34, v35);
        }
        v27 = type metadata accessor for TranscriptProtoConfirmExpression(0);
        goto LABEL_48;
      case 0xBu:
        swift_bridgeObjectRelease();
        v8 = *(int *)(type metadata accessor for TranscriptProtoSearchExpression(0) + 28);
        goto LABEL_49;
      case 0xCu:
        v36 = type metadata accessor for TranscriptProtoStatementID(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 48))(a1, 1, v36))
        {
          swift_bridgeObjectRelease();
          v37 = a1 + *(int *)(v36 + 24);
          v38 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 8))(v37, v38);
        }
        v27 = type metadata accessor for TranscriptProtoPickOneExpression(0);
        goto LABEL_48;
      case 0xDu:
        swift_bridgeObjectRelease();
        v27 = type metadata accessor for TranscriptProtoResolveToolExpression(0);
        goto LABEL_48;
      case 0xEu:
        v39 = type metadata accessor for TranscriptProtoStatementID(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 48))(a1, 1, v39))
        {
          swift_bridgeObjectRelease();
          v40 = a1 + *(int *)(v39 + 24);
          v41 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 8))(v40, v41);
        }
        v27 = type metadata accessor for TranscriptProtoUndoExpression(0);
        goto LABEL_48;
      case 0xFu:
        v42 = type metadata accessor for TranscriptProtoStatementID(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 48))(a1, 1, v42))
        {
          swift_bridgeObjectRelease();
          v43 = a1 + *(int *)(v42 + 24);
          v44 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 8))(v43, v44);
        }
        v27 = type metadata accessor for TranscriptProtoRejectExpression(0);
        goto LABEL_48;
      case 0x10u:
        v45 = type metadata accessor for TranscriptProtoStatementID(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 48))(a1, 1, v45))
        {
          swift_bridgeObjectRelease();
          v46 = a1 + *(int *)(v45 + 24);
          v47 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 8))(v46, v47);
        }
        v27 = type metadata accessor for TranscriptProtoCancelExpression(0);
LABEL_48:
        v8 = *(int *)(v27 + 20);
LABEL_49:
        v50 = a1 + v8;
        v51 = sub_2408E57A4();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 8))(v50, v51);
        break;
      case 0x11u:
      case 0x12u:
      case 0x13u:
      case 0x14u:
        v5 = sub_2408E57A4();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
        break;
      default:
        break;
    }
  }
  v52 = a1 + *(int *)(a2 + 20);
  v53 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 8))(v52, v53);
}

char *initializeWithCopy for TranscriptProtoExpression(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(a2, 1, v6))
  {
    v8 = (char *)&loc_2406AB0EC + 4 * word_240903810[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF98);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  return a1;
}

char *assignWithCopy for TranscriptProtoExpression(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t (*v7)(char *, uint64_t, uint64_t);
  int v8;
  int v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v6 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  v7 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48);
  v8 = v7(a1, 1, v6);
  v9 = v7(a2, 1, v6);
  if (v8)
  {
    if (!v9)
    {
      v10 = (char *)&loc_2406AC2A8 + 4 * word_24090383A[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    goto LABEL_6;
  }
  if (v9)
  {
    sub_240388AE4((uint64_t)a1, type metadata accessor for TranscriptProtoExpressionEnum);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF98);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_9;
  }
  if (a1 != a2)
  {
    sub_240388AE4((uint64_t)a1, type metadata accessor for TranscriptProtoExpressionEnum);
    v12 = (char *)&loc_2406AC36C + 4 * word_240903864[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
LABEL_9:
  v13 = *(int *)(a3 + 20);
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 24))(v14, v15, v16);
  return a1;
}

char *initializeWithTake for TranscriptProtoExpression(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(a2, 1, v6))
  {
    v8 = (char *)&loc_2406AE708 + 4 * word_24090388E[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF98);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  return a1;
}

char *assignWithTake for TranscriptProtoExpression(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t (*v7)(char *, uint64_t, uint64_t);
  int v8;
  int v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v6 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  v7 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48);
  v8 = v7(a1, 1, v6);
  v9 = v7(a2, 1, v6);
  if (v8)
  {
    if (!v9)
    {
      v10 = (char *)&loc_2406AF714 + 4 * word_2409038B8[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    goto LABEL_6;
  }
  if (v9)
  {
    sub_240388AE4((uint64_t)a1, type metadata accessor for TranscriptProtoExpressionEnum);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF98);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_9;
  }
  if (a1 != a2)
  {
    sub_240388AE4((uint64_t)a1, type metadata accessor for TranscriptProtoExpressionEnum);
    v12 = (char *)&loc_2406AF7D8 + 4 * word_2409038E2[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
LABEL_9:
  v13 = *(int *)(a3 + 20);
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(v14, v15, v16);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoExpression()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406B1650(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_9Tm(a1, a2, a3, &qword_256FFCF98);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoExpression()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406B1668(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_10Tm(a1, a2, a3, a4, &qword_256FFCF98);
}

void sub_2406B1674(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240408100(a1, a2, a3, qword_257008AA0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoExpressionEnum);
}

uint64_t initializeBufferWithCopyOfBuffer for TranscriptProtoExpressionEnum(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_2406B16E8 + 4 * word_24090390C[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t destroy for TranscriptProtoExpressionEnum(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t updated;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      v3 = type metadata accessor for TranscriptProtoValueExpressionEnum(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(a1, 1, v3))
        goto LABEL_45;
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      switch(EnumCaseMultiPayload)
      {
        case 5:
          goto LABEL_6;
        case 4:
          swift_bridgeObjectRelease();
          v45 = a1 + *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
          v46 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 8))(v45, v46);
          break;
        case 3:
LABEL_6:
          swift_bridgeObjectRelease();
          break;
      }
LABEL_45:
      v24 = type metadata accessor for TranscriptProtoValueExpression(0);
      goto LABEL_46;
    case 1:
      swift_bridgeObjectRelease();
      v5 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
      goto LABEL_47;
    case 2:
      updated = type metadata accessor for TranscriptProtoPrefixExpression(0);
      goto LABEL_24;
    case 3:
      v7 = (int *)type metadata accessor for TranscriptProtoInfixExpression(0);
      v8 = a1 + v7[5];
      v9 = type metadata accessor for TranscriptProtoStatementID(0);
      v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48);
      if (!v10(v8, 1, v9))
      {
        swift_bridgeObjectRelease();
        v11 = v8 + *(int *)(v9 + 24);
        v12 = sub_2408E57A4();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
      }
      v13 = a1 + v7[6];
      if (!v10(v13, 1, v9))
      {
        swift_bridgeObjectRelease();
        v14 = v13 + *(int *)(v9 + 24);
        v15 = sub_2408E57A4();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
      }
      v5 = v7[7];
      goto LABEL_47;
    case 4:
      swift_bridgeObjectRelease();
      updated = type metadata accessor for TranscriptProtoDotExpression(0);
      goto LABEL_24;
    case 5:
      v16 = type metadata accessor for TranscriptProtoStatementID(0);
      v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48);
      if (!v17(a1, 1, v16))
      {
        swift_bridgeObjectRelease();
        v18 = a1 + *(int *)(v16 + 24);
        v19 = sub_2408E57A4();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18, v19);
      }
      v20 = type metadata accessor for TranscriptProtoIndexExpression(0);
      v21 = a1 + *(int *)(v20 + 20);
      if (!v17(v21, 1, v16))
      {
        swift_bridgeObjectRelease();
        v22 = v21 + *(int *)(v16 + 24);
        v23 = sub_2408E57A4();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v22, v23);
      }
      v5 = *(int *)(v20 + 24);
      goto LABEL_47;
    case 6:
      swift_bridgeObjectRelease();
      updated = type metadata accessor for TranscriptProtoUpdateParametersExpression(0);
      goto LABEL_24;
    case 7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v5 = *(int *)(type metadata accessor for TranscriptProtoCallExpression(0) + 24);
      goto LABEL_47;
    case 8:
      swift_bridgeObjectRelease();
      v24 = type metadata accessor for TranscriptProtoSayExpression(0);
      goto LABEL_46;
    case 9:
      updated = type metadata accessor for TranscriptProtoPickExpression(0);
LABEL_24:
      v25 = updated;
      v26 = a1 + *(int *)(updated + 20);
      v27 = type metadata accessor for TranscriptProtoStatementID(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 48))(v26, 1, v27))
      {
        swift_bridgeObjectRelease();
        v28 = v26 + *(int *)(v27 + 24);
        v29 = sub_2408E57A4();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(v28, v29);
      }
      v5 = *(int *)(v25 + 24);
      goto LABEL_47;
    case 10:
      v30 = type metadata accessor for TranscriptProtoStatementID(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 48))(a1, 1, v30))
      {
        swift_bridgeObjectRelease();
        v31 = a1 + *(int *)(v30 + 24);
        v32 = sub_2408E57A4();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v31, v32);
      }
      v24 = type metadata accessor for TranscriptProtoConfirmExpression(0);
      goto LABEL_46;
    case 11:
      swift_bridgeObjectRelease();
      v5 = *(int *)(type metadata accessor for TranscriptProtoSearchExpression(0) + 28);
      goto LABEL_47;
    case 12:
      v33 = type metadata accessor for TranscriptProtoStatementID(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(a1, 1, v33))
      {
        swift_bridgeObjectRelease();
        v34 = a1 + *(int *)(v33 + 24);
        v35 = sub_2408E57A4();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 8))(v34, v35);
      }
      v24 = type metadata accessor for TranscriptProtoPickOneExpression(0);
      goto LABEL_46;
    case 13:
      swift_bridgeObjectRelease();
      v24 = type metadata accessor for TranscriptProtoResolveToolExpression(0);
      goto LABEL_46;
    case 14:
      v36 = type metadata accessor for TranscriptProtoStatementID(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 48))(a1, 1, v36))
      {
        swift_bridgeObjectRelease();
        v37 = a1 + *(int *)(v36 + 24);
        v38 = sub_2408E57A4();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 8))(v37, v38);
      }
      v24 = type metadata accessor for TranscriptProtoUndoExpression(0);
      goto LABEL_46;
    case 15:
      v39 = type metadata accessor for TranscriptProtoStatementID(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 48))(a1, 1, v39))
      {
        swift_bridgeObjectRelease();
        v40 = a1 + *(int *)(v39 + 24);
        v41 = sub_2408E57A4();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 8))(v40, v41);
      }
      v24 = type metadata accessor for TranscriptProtoRejectExpression(0);
      goto LABEL_46;
    case 16:
      v42 = type metadata accessor for TranscriptProtoStatementID(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 48))(a1, 1, v42))
      {
        swift_bridgeObjectRelease();
        v43 = a1 + *(int *)(v42 + 24);
        v44 = sub_2408E57A4();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 8))(v43, v44);
      }
      v24 = type metadata accessor for TranscriptProtoCancelExpression(0);
LABEL_46:
      v5 = *(int *)(v24 + 20);
LABEL_47:
      a1 += v5;
      goto LABEL_48;
    case 17:
    case 18:
    case 19:
    case 20:
LABEL_48:
      v47 = sub_2408E57A4();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 8))(a1, v47);
      break;
    default:
      return result;
  }
  return result;
}

void initializeWithCopy for TranscriptProtoExpressionEnum()
{
  char *v0;

  v0 = (char *)sub_2406B2D4C + 4 * word_240903960[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_QWORD *sub_2406B2D4C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v2 = type metadata accessor for TranscriptProtoValueExpressionEnum(0);
  v3 = *(_QWORD *)(v2 - 8);
  if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload != 5)
    {
      if (EnumCaseMultiPayload == 4)
      {
        *v0 = *v1;
        v7 = *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
        v8 = (char *)v0 + v7;
        v9 = (char *)v1 + v7;
        v10 = sub_2408E57A4();
        v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
        swift_bridgeObjectRetain();
        v11(v8, v9, v10);
        swift_storeEnumTagMultiPayload();
        goto LABEL_10;
      }
      if (EnumCaseMultiPayload != 3)
      {
        memcpy(v0, v1, *(_QWORD *)(v3 + 64));
        goto LABEL_10;
      }
    }
    v6 = v1[1];
    *v0 = *v1;
    v0[1] = v6;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
LABEL_10:
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v3 + 56))(v0, 0, 1, v2);
    goto LABEL_11;
  }
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC68);
  memcpy(v0, v1, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
LABEL_11:
  v12 = *(int *)(type metadata accessor for TranscriptProtoValueExpression(0) + 20);
  v13 = (char *)v0 + v12;
  v14 = (char *)v1 + v12;
  v15 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithCopy for TranscriptProtoExpressionEnum(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_240388AE4(result, type metadata accessor for TranscriptProtoExpressionEnum);
    v2 = (char *)&loc_2406B3E28 + 4 * word_24090398A[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

void initializeWithTake for TranscriptProtoExpressionEnum()
{
  char *v0;

  v0 = (char *)sub_2406B4F88 + 4 * word_2409039B4[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_QWORD *sub_2406B4F88()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v2 = type metadata accessor for TranscriptProtoValueExpressionEnum(0);
  v3 = *(_QWORD *)(v2 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2))
  {
    v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC68);
    memcpy(v0, v1, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      *v0 = *v1;
      v5 = *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
      v6 = (char *)v0 + v5;
      v7 = (char *)v1 + v5;
      v8 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v0, v1, *(_QWORD *)(v3 + 64));
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v3 + 56))(v0, 0, 1, v2);
  }
  v9 = *(int *)(type metadata accessor for TranscriptProtoValueExpression(0) + 20);
  v10 = (char *)v0 + v9;
  v11 = (char *)v1 + v9;
  v12 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithTake for TranscriptProtoExpressionEnum(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_240388AE4(result, type metadata accessor for TranscriptProtoExpressionEnum);
    v2 = (char *)&loc_2406B5EF8 + 4 * word_2409039DE[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

uint64_t sub_2406B6E00()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;

  result = type metadata accessor for TranscriptProtoValueExpression(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for TranscriptProtoStatementID(319);
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for TranscriptProtoPrefixExpression(319);
      if (v3 <= 0x3F)
      {
        result = type metadata accessor for TranscriptProtoInfixExpression(319);
        if (v4 <= 0x3F)
        {
          result = type metadata accessor for TranscriptProtoDotExpression(319);
          if (v5 <= 0x3F)
          {
            result = type metadata accessor for TranscriptProtoIndexExpression(319);
            if (v6 <= 0x3F)
            {
              result = type metadata accessor for TranscriptProtoUpdateParametersExpression(319);
              if (v7 <= 0x3F)
              {
                result = type metadata accessor for TranscriptProtoCallExpression(319);
                if (v8 <= 0x3F)
                {
                  result = type metadata accessor for TranscriptProtoSayExpression(319);
                  if (v9 <= 0x3F)
                  {
                    result = type metadata accessor for TranscriptProtoPickExpression(319);
                    if (v10 <= 0x3F)
                    {
                      result = type metadata accessor for TranscriptProtoConfirmExpression(319);
                      if (v11 <= 0x3F)
                      {
                        result = type metadata accessor for TranscriptProtoSearchExpression(319);
                        if (v12 <= 0x3F)
                        {
                          result = type metadata accessor for TranscriptProtoPickOneExpression(319);
                          if (v13 <= 0x3F)
                          {
                            result = type metadata accessor for TranscriptProtoResolveToolExpression(319);
                            if (v14 <= 0x3F)
                            {
                              result = type metadata accessor for TranscriptProtoUndoExpression(319);
                              if (v15 <= 0x3F)
                              {
                                result = type metadata accessor for TranscriptProtoRejectExpression(319);
                                if (v16 <= 0x3F)
                                {
                                  result = type metadata accessor for TranscriptProtoCancelExpression(319);
                                  if (v17 <= 0x3F)
                                  {
                                    result = sub_2408E57A4();
                                    if (v18 <= 0x3F)
                                    {
                                      swift_initEnumMetadataMultiPayload();
                                      return 0;
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for TranscriptProtoValueExpression(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    v7 = type metadata accessor for TranscriptProtoValueExpressionEnum(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC68);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
LABEL_13:
      v18 = *(int *)(a3 + 20);
      v19 = (char *)a1 + v18;
      v20 = (char *)a2 + v18;
      v21 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
      return a1;
    }
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload != 5)
    {
      if (EnumCaseMultiPayload == 4)
      {
        *a1 = *a2;
        v13 = *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
        v14 = (char *)a1 + v13;
        v15 = (char *)a2 + v13;
        v16 = sub_2408E57A4();
        v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
        swift_bridgeObjectRetain();
        v17(v14, v15, v16);
        swift_storeEnumTagMultiPayload();
        goto LABEL_12;
      }
      if (EnumCaseMultiPayload != 3)
      {
        memcpy(a1, a2, *(_QWORD *)(v8 + 64));
        goto LABEL_12;
      }
    }
    v12 = a2[1];
    *a1 = *a2;
    a1[1] = v12;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
LABEL_12:
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    goto LABEL_13;
  }
  v10 = *a2;
  *a1 = *a2;
  a1 = (_QWORD *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t destroy for TranscriptProtoValueExpression(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = type metadata accessor for TranscriptProtoValueExpressionEnum(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 5:
        goto LABEL_5;
      case 4:
        swift_bridgeObjectRelease();
        v6 = a1 + *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
        v7 = sub_2408E57A4();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
        break;
      case 3:
LABEL_5:
        swift_bridgeObjectRelease();
        break;
    }
  }
  v8 = a1 + *(int *)(a2 + 20);
  v9 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
}

_QWORD *initializeWithCopy for TranscriptProtoValueExpression(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v6 = type metadata accessor for TranscriptProtoValueExpressionEnum(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload != 5)
    {
      if (EnumCaseMultiPayload == 4)
      {
        *a1 = *a2;
        v11 = *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
        v12 = (char *)a1 + v11;
        v13 = (char *)a2 + v11;
        v14 = sub_2408E57A4();
        v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
        swift_bridgeObjectRetain();
        v15(v12, v13, v14);
        swift_storeEnumTagMultiPayload();
        goto LABEL_10;
      }
      if (EnumCaseMultiPayload != 3)
      {
        memcpy(a1, a2, *(_QWORD *)(v7 + 64));
        goto LABEL_10;
      }
    }
    v10 = a2[1];
    *a1 = *a2;
    a1[1] = v10;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
LABEL_10:
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    goto LABEL_11;
  }
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC68);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
LABEL_11:
  v16 = *(int *)(a3 + 20);
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoValueExpression(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *, uint64_t, uint64_t);
  int v9;
  int v10;
  int EnumCaseMultiPayload;
  size_t v12;
  int v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);

  v6 = type metadata accessor for TranscriptProtoValueExpressionEnum(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload != 5)
      {
        if (EnumCaseMultiPayload == 4)
        {
          *a1 = *a2;
          v14 = *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
          v15 = (char *)a1 + v14;
          v16 = (char *)a2 + v14;
          v17 = sub_2408E57A4();
          v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
          swift_bridgeObjectRetain();
          v18(v15, v16, v17);
          swift_storeEnumTagMultiPayload();
          goto LABEL_19;
        }
        if (EnumCaseMultiPayload != 3)
        {
          memcpy(a1, a2, *(_QWORD *)(v7 + 64));
          goto LABEL_19;
        }
      }
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
LABEL_19:
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_20;
    }
    goto LABEL_9;
  }
  if (v10)
  {
    sub_240388AE4((uint64_t)a1, type metadata accessor for TranscriptProtoValueExpressionEnum);
LABEL_9:
    v12 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC68) - 8) + 64);
    goto LABEL_10;
  }
  if (a1 == a2)
    goto LABEL_20;
  sub_240388AE4((uint64_t)a1, type metadata accessor for TranscriptProtoValueExpressionEnum);
  v13 = swift_getEnumCaseMultiPayload();
  switch(v13)
  {
    case 5:
      goto LABEL_15;
    case 4:
      *a1 = *a2;
      v24 = *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
      v25 = (char *)a1 + v24;
      v26 = (char *)a2 + v24;
      v27 = sub_2408E57A4();
      v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
      swift_bridgeObjectRetain();
      v28(v25, v26, v27);
      swift_storeEnumTagMultiPayload();
      goto LABEL_20;
    case 3:
LABEL_15:
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
      goto LABEL_20;
  }
  v12 = *(_QWORD *)(v7 + 64);
LABEL_10:
  memcpy(a1, a2, v12);
LABEL_20:
  v19 = *(int *)(a3 + 20);
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  return a1;
}

_QWORD *initializeWithTake for TranscriptProtoValueExpression(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v6 = type metadata accessor for TranscriptProtoValueExpressionEnum(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC68);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      *a1 = *a2;
      v9 = *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(v7 + 64));
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v13 = *(int *)(a3 + 20);
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoValueExpression(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  size_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;

  v6 = type metadata accessor for TranscriptProtoValueExpressionEnum(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      if (a1 == a2)
        goto LABEL_14;
      sub_240388AE4((uint64_t)a1, type metadata accessor for TranscriptProtoValueExpressionEnum);
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        *a1 = *a2;
        v16 = *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
        v17 = (char *)a1 + v16;
        v18 = (char *)a2 + v16;
        v19 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
        swift_storeEnumTagMultiPayload();
        goto LABEL_14;
      }
      v15 = *(_QWORD *)(v7 + 64);
      goto LABEL_8;
    }
    sub_240388AE4((uint64_t)a1, type metadata accessor for TranscriptProtoValueExpressionEnum);
LABEL_7:
    v15 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC68) - 8) + 64);
LABEL_8:
    memcpy(a1, a2, v15);
    goto LABEL_14;
  }
  if (v10)
    goto LABEL_7;
  if (swift_getEnumCaseMultiPayload() == 4)
  {
    *a1 = *a2;
    v11 = *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(v7 + 64));
  }
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_14:
  v20 = *(int *)(a3 + 20);
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 40))(v21, v22, v23);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoValueExpression()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406B7AAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_9Tm(a1, a2, a3, &qword_256FFEC68);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoValueExpression()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406B7AC4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_10Tm(a1, a2, a3, a4, &qword_256FFEC68);
}

void sub_2406B7AD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240408100(a1, a2, a3, qword_257008BE0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoValueExpressionEnum);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoValueExpressionEnum(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload != 5)
    {
      if (EnumCaseMultiPayload == 4)
      {
        *a1 = *a2;
        v10 = *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
        v11 = (char *)a1 + v10;
        v12 = (char *)a2 + v10;
        v13 = sub_2408E57A4();
        v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
        swift_bridgeObjectRetain();
        v14(v11, v12, v13);
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      if (EnumCaseMultiPayload != 3)
      {
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        return a1;
      }
    }
    v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for TranscriptProtoValueExpressionEnum(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 5)
    return swift_bridgeObjectRelease();
  if ((_DWORD)result != 4)
  {
    if ((_DWORD)result != 3)
      return result;
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v3 = a1 + *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
  v4 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
}

_QWORD *initializeWithCopy for TranscriptProtoValueExpressionEnum(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 5)
  {
    if (EnumCaseMultiPayload == 4)
    {
      *a1 = *a2;
      v8 = *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_2408E57A4();
      v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
      swift_bridgeObjectRetain();
      v12(v9, v10, v11);
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (EnumCaseMultiPayload != 3)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      return a1;
    }
  }
  v7 = a2[1];
  *a1 = *a2;
  a1[1] = v7;
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoValueExpressionEnum(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  if (a1 != a2)
  {
    sub_240388AE4((uint64_t)a1, type metadata accessor for TranscriptProtoValueExpressionEnum);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload != 5)
    {
      if (EnumCaseMultiPayload == 4)
      {
        *a1 = *a2;
        v7 = *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
        v8 = (char *)a1 + v7;
        v9 = (char *)a2 + v7;
        v10 = sub_2408E57A4();
        v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
        swift_bridgeObjectRetain();
        v11(v8, v9, v10);
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      if (EnumCaseMultiPayload != 3)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        return a1;
      }
    }
    *a1 = *a2;
    a1[1] = a2[1];
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *initializeWithTake for TranscriptProtoValueExpressionEnum(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  if (swift_getEnumCaseMultiPayload() == 4)
  {
    *a1 = *a2;
    v6 = *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoValueExpressionEnum(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_240388AE4((uint64_t)a1, type metadata accessor for TranscriptProtoValueExpressionEnum);
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      *a1 = *a2;
      v6 = *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_2406B805C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for TranscriptProtoValueExpressionArrayVariant(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoValueExpressionArrayVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoValueExpressionArrayVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoPrefixExpression(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v24;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = *(int *)(a3 + 20);
    v8 = (uint64_t *)((char *)a1 + v7);
    v9 = (uint64_t *)((char *)a2 + v7);
    v10 = type metadata accessor for TranscriptProtoStatementID(0);
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      *(_DWORD *)v8 = *(_DWORD *)v9;
      v14 = v9[2];
      v8[1] = v9[1];
      v8[2] = v14;
      v15 = *(int *)(v10 + 24);
      v16 = (char *)v8 + v15;
      v24 = (char *)v9 + v15;
      v17 = sub_2408E57A4();
      v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
      swift_bridgeObjectRetain();
      v18(v16, v24, v17);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    v19 = *(int *)(a3 + 24);
    v20 = (char *)v4 + v19;
    v21 = (char *)a2 + v19;
    v22 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  }
  return v4;
}

_BYTE *initializeWithCopy for TranscriptProtoPrefixExpression(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  _BYTE *v18;
  _BYTE *v19;
  uint64_t v20;
  char *v22;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for TranscriptProtoStatementID(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v7 = *(_DWORD *)v8;
    v12 = v8[2];
    v7[1] = v8[1];
    v7[2] = v12;
    v13 = *(int *)(v9 + 24);
    v14 = (char *)v7 + v13;
    v22 = (char *)v8 + v13;
    v15 = sub_2408E57A4();
    v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    v16(v14, v22, v15);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v17 = *(int *)(a3 + 24);
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = sub_2408E57A4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  return a1;
}

_BYTE *assignWithCopy for TranscriptProtoPrefixExpression(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for TranscriptProtoStatementID(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      *(_DWORD *)v7 = *(_DWORD *)v8;
      v7[1] = v8[1];
      v7[2] = v8[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v24 = *(int *)(v9 + 24);
      v25 = (char *)v7 + v24;
      v26 = (char *)v8 + v24;
      v27 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 24))(v25, v26, v27);
      goto LABEL_7;
    }
    sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)v7 = *(_DWORD *)v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  v14 = *(int *)(v9 + 24);
  v15 = (char *)v7 + v14;
  v28 = (char *)v8 + v14;
  v16 = sub_2408E57A4();
  v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
  swift_bridgeObjectRetain();
  v17(v15, v28, v16);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v19 = *(int *)(a3 + 24);
  v20 = &a1[v19];
  v21 = &a2[v19];
  v22 = sub_2408E57A4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  return a1;
}

_BYTE *initializeWithTake for TranscriptProtoPrefixExpression(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _DWORD *v7;
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  _BYTE *v18;
  uint64_t v19;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for TranscriptProtoStatementID(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    *v7 = *v8;
    *(_OWORD *)(v7 + 2) = *(_OWORD *)(v8 + 2);
    v12 = *(int *)(v9 + 24);
    v13 = (char *)v7 + v12;
    v14 = (char *)v8 + v12;
    v15 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v16 = *(int *)(a3 + 24);
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = sub_2408E57A4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
  return a1;
}

_BYTE *assignWithTake for TranscriptProtoPrefixExpression(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (uint64_t)&a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for TranscriptProtoStatementID(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11((uint64_t)v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      *(_DWORD *)v7 = *(_DWORD *)v8;
      v24 = *((_QWORD *)v8 + 2);
      *(_QWORD *)(v7 + 8) = *((_QWORD *)v8 + 1);
      *(_QWORD *)(v7 + 16) = v24;
      swift_bridgeObjectRelease();
      v25 = *(int *)(v9 + 24);
      v26 = v7 + v25;
      v27 = &v8[v25];
      v28 = sub_2408E57A4();
      (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v28 - 8) + 40))(v26, v27, v28);
      goto LABEL_7;
    }
    sub_240388AE4(v7, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy((void *)v7, v8, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)v7 = *(_DWORD *)v8;
  *(_OWORD *)(v7 + 8) = *(_OWORD *)(v8 + 8);
  v14 = *(int *)(v9 + 24);
  v15 = v7 + v14;
  v16 = &v8[v14];
  v17 = sub_2408E57A4();
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v19 = *(int *)(a3 + 24);
  v20 = &a1[v19];
  v21 = &a2[v19];
  v22 = sub_2408E57A4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoPrefixExpression()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406B8848(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_315Tm(a1, a2, a3, &qword_256FFA300);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoPrefixExpression()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_BYTE *sub_2406B8860(_BYTE *a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_316Tm(a1, a2, a3, a4, &qword_256FFA300);
}

void sub_2406B886C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2404090B4(a1, a2, a3, (uint64_t)&unk_240907280, qword_256FFCBE0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementID);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoInfixExpression(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(uint64_t *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v33;
  char *v34;
  char *v35;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = a3[5];
    v8 = (uint64_t *)((char *)a1 + v7);
    v9 = (uint64_t *)((char *)a2 + v7);
    v10 = type metadata accessor for TranscriptProtoStatementID(0);
    v11 = *(_QWORD *)(v10 - 8);
    v12 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v11 + 48);
    if (v12(v9, 1, v10))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      *(_DWORD *)v8 = *(_DWORD *)v9;
      v15 = v9[2];
      v8[1] = v9[1];
      v8[2] = v15;
      v16 = *(int *)(v10 + 24);
      v33 = (char *)v9 + v16;
      v34 = (char *)v8 + v16;
      v17 = sub_2408E57A4();
      v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
      swift_bridgeObjectRetain();
      v18(v34, v33, v17);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    v19 = a3[6];
    v20 = (uint64_t *)((char *)v4 + v19);
    v21 = (uint64_t *)((char *)a2 + v19);
    if (v12((uint64_t *)((char *)a2 + v19), 1, v10))
    {
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      *(_DWORD *)v20 = *(_DWORD *)v21;
      v23 = v21[2];
      v20[1] = v21[1];
      v20[2] = v23;
      v24 = *(int *)(v10 + 24);
      v25 = (char *)v20 + v24;
      v35 = (char *)v21 + v24;
      v26 = sub_2408E57A4();
      v27 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
      swift_bridgeObjectRetain();
      v27(v25, v35, v26);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v20, 0, 1, v10);
    }
    v28 = a3[7];
    v29 = (char *)v4 + v28;
    v30 = (char *)a2 + v28;
    v31 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoInfixExpression(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = a1 + a2[5];
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48);
  if (!v6(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    v7 = v4 + *(int *)(v5 + 24);
    v8 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  v9 = a1 + a2[6];
  if (!v6(v9, 1, v5))
  {
    swift_bridgeObjectRelease();
    v10 = v9 + *(int *)(v5 + 24);
    v11 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  }
  v12 = a1 + a2[7];
  v13 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
}

_BYTE *initializeWithCopy for TranscriptProtoInfixExpression(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(_BYTE *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  _BYTE *v27;
  _BYTE *v28;
  uint64_t v29;
  char *v31;
  char *v32;
  char *v33;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for TranscriptProtoStatementID(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v7 = *(_DWORD *)v8;
    v13 = v8[2];
    v7[1] = v8[1];
    v7[2] = v13;
    v14 = *(int *)(v9 + 24);
    v31 = (char *)v8 + v14;
    v32 = (char *)v7 + v14;
    v15 = sub_2408E57A4();
    v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    v16(v32, v31, v15);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v17 = a3[6];
  v18 = &a1[v17];
  v19 = &a2[v17];
  if (v11(&a2[v17], 1, v9))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v18 = *(_DWORD *)v19;
    v21 = v19[2];
    v18[1] = v19[1];
    v18[2] = v21;
    v22 = *(int *)(v9 + 24);
    v23 = (char *)v18 + v22;
    v33 = (char *)v19 + v22;
    v24 = sub_2408E57A4();
    v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
    swift_bridgeObjectRetain();
    v25(v23, v33, v24);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v18, 0, 1, v9);
  }
  v26 = a3[7];
  v27 = &a1[v26];
  v28 = &a2[v26];
  v29 = sub_2408E57A4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
  return a1;
}

_BYTE *assignWithCopy for TranscriptProtoInfixExpression(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_BYTE *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  int v23;
  int v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for TranscriptProtoStatementID(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      *(_DWORD *)v7 = *(_DWORD *)v8;
      v7[1] = v8[1];
      v7[2] = v8[2];
      v14 = *(int *)(v9 + 24);
      v45 = v10;
      v15 = (char *)v7 + v14;
      v44 = (char *)v8 + v14;
      v16 = sub_2408E57A4();
      v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
      swift_bridgeObjectRetain();
      v18 = v15;
      v10 = v45;
      v17(v18, v44, v16);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)v7 = *(_DWORD *)v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v36 = *(int *)(v9 + 24);
  v37 = (char *)v7 + v36;
  v38 = (char *)v8 + v36;
  v39 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 24))(v37, v38, v39);
LABEL_7:
  v20 = a3[6];
  v21 = &a1[v20];
  v22 = &a2[v20];
  v23 = v11(&a1[v20], 1, v9);
  v24 = v11(v22, 1, v9);
  if (!v23)
  {
    if (!v24)
    {
      *(_DWORD *)v21 = *(_DWORD *)v22;
      v21[1] = v22[1];
      v21[2] = v22[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v40 = *(int *)(v9 + 24);
      v41 = (char *)v21 + v40;
      v42 = (char *)v22 + v40;
      v43 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 24))(v41, v42, v43);
      goto LABEL_13;
    }
    sub_240388AE4((uint64_t)v21, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_12;
  }
  if (v24)
  {
LABEL_12:
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_13;
  }
  *(_DWORD *)v21 = *(_DWORD *)v22;
  v21[1] = v22[1];
  v21[2] = v22[2];
  v25 = *(int *)(v9 + 24);
  v46 = v10;
  v26 = (char *)v21 + v25;
  v27 = (char *)v22 + v25;
  v28 = sub_2408E57A4();
  v29 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16);
  swift_bridgeObjectRetain();
  v29(v26, v27, v28);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v21, 0, 1, v9);
LABEL_13:
  v31 = a3[7];
  v32 = &a1[v31];
  v33 = &a2[v31];
  v34 = sub_2408E57A4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  return a1;
}

_BYTE *initializeWithTake for TranscriptProtoInfixExpression(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _DWORD *v7;
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(_DWORD *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _DWORD *v18;
  _DWORD *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  _BYTE *v27;
  uint64_t v28;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for TranscriptProtoStatementID(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    *v7 = *v8;
    *(_OWORD *)(v7 + 2) = *(_OWORD *)(v8 + 2);
    v13 = *(int *)(v9 + 24);
    v14 = (char *)v7 + v13;
    v15 = (char *)v8 + v13;
    v16 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v17 = a3[6];
  v18 = &a1[v17];
  v19 = &a2[v17];
  if (v11(&a2[v17], 1, v9))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    *v18 = *v19;
    *(_OWORD *)(v18 + 2) = *(_OWORD *)(v19 + 2);
    v21 = *(int *)(v9 + 24);
    v22 = (char *)v18 + v21;
    v23 = (char *)v19 + v21;
    v24 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v18, 0, 1, v9);
  }
  v25 = a3[7];
  v26 = &a1[v25];
  v27 = &a2[v25];
  v28 = sub_2408E57A4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v26, v27, v28);
  return a1;
}

_BYTE *assignWithTake for TranscriptProtoInfixExpression(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_BYTE *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  uint64_t v43;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for TranscriptProtoStatementID(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      *(_DWORD *)v7 = *(_DWORD *)v8;
      *(_OWORD *)(v7 + 1) = *(_OWORD *)(v8 + 1);
      v14 = *(int *)(v9 + 24);
      v15 = (char *)v7 + v14;
      v16 = (char *)v8 + v14;
      v17 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)v7 = *(_DWORD *)v8;
  v34 = v8[2];
  v7[1] = v8[1];
  v7[2] = v34;
  swift_bridgeObjectRelease();
  v35 = *(int *)(v9 + 24);
  v36 = (char *)v7 + v35;
  v37 = (char *)v8 + v35;
  v38 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
LABEL_7:
  v19 = a3[6];
  v20 = (uint64_t)&a1[v19];
  v21 = &a2[v19];
  v22 = v11(&a1[v19], 1, v9);
  v23 = v11(v21, 1, v9);
  if (!v22)
  {
    if (!v23)
    {
      *(_DWORD *)v20 = *(_DWORD *)v21;
      v39 = *((_QWORD *)v21 + 2);
      *(_QWORD *)(v20 + 8) = *((_QWORD *)v21 + 1);
      *(_QWORD *)(v20 + 16) = v39;
      swift_bridgeObjectRelease();
      v40 = *(int *)(v9 + 24);
      v41 = v20 + v40;
      v42 = &v21[v40];
      v43 = sub_2408E57A4();
      (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v43 - 8) + 40))(v41, v42, v43);
      goto LABEL_13;
    }
    sub_240388AE4(v20, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_12;
  }
  if (v23)
  {
LABEL_12:
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy((void *)v20, v21, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_13;
  }
  *(_DWORD *)v20 = *(_DWORD *)v21;
  *(_OWORD *)(v20 + 8) = *(_OWORD *)(v21 + 8);
  v24 = *(int *)(v9 + 24);
  v25 = v20 + v24;
  v26 = &v21[v24];
  v27 = sub_2408E57A4();
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(v20, 0, 1, v9);
LABEL_13:
  v29 = a3[7];
  v30 = &a1[v29];
  v31 = &a2[v29];
  v32 = sub_2408E57A4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v32 - 8) + 40))(v30, v31, v32);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoInfixExpression()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406B94EC(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_307Tm(a1, a2, a3, &qword_256FFA300);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoInfixExpression()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_BYTE *sub_2406B9504(_BYTE *a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_308Tm(a1, a2, a3, a4, &qword_256FFA300);
}

void sub_2406B9510(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2406C3108(a1, a2, a3, qword_256FFCBE0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementID);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoASTFlatExprPrefixVariant(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  void (*v34)(char *, char *, uint64_t);
  void (*v35)(char *, char *, uint64_t);
  void (*v36)(char *, char *, uint64_t);
  char *v37;
  char *v38;
  char *v39;
  char *v40;
  char *v41;
  char *v42;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = *(int *)(a3 + 20);
    v8 = (uint64_t *)((char *)a1 + v7);
    v9 = (uint64_t *)((char *)a2 + v7);
    v10 = type metadata accessor for TranscriptProtoASTFlatValue(0);
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v14 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
      v15 = *(_QWORD *)(v14 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v15 + 48))(v9, 1, v14))
      {
        v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
          case 6u:
          case 7u:
          case 8u:
            v17 = v9[1];
            *v8 = *v9;
            v8[1] = v17;
            swift_bridgeObjectRetain();
            goto LABEL_13;
          case 4u:
            *v8 = *v9;
            v18 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v37 = (char *)v9 + v18;
            v40 = (char *)v8 + v18;
            v19 = sub_2408E57A4();
            v34 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
            swift_bridgeObjectRetain();
            v34(v40, v37, v19);
            goto LABEL_13;
          case 5u:
            *v8 = *v9;
            v20 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v38 = (char *)v9 + v20;
            v41 = (char *)v8 + v20;
            v21 = sub_2408E57A4();
            v35 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
            swift_bridgeObjectRetain();
            v35(v41, v38, v21);
            goto LABEL_13;
          case 9u:
            *(_DWORD *)v8 = *(_DWORD *)v9;
            v22 = v9[2];
            v8[1] = v9[1];
            v8[2] = v22;
            v23 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v39 = (char *)v9 + v23;
            v42 = (char *)v8 + v23;
            v24 = sub_2408E57A4();
            v36 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
            swift_bridgeObjectRetain();
            v36(v42, v39, v24);
LABEL_13:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v8, v9, *(_QWORD *)(v15 + 64));
            break;
        }
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v8, 0, 1, v14);
      }
      v25 = *(int *)(v10 + 20);
      v26 = (char *)v8 + v25;
      v27 = (char *)v9 + v25;
      v28 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    v29 = *(int *)(a3 + 24);
    v30 = (char *)v4 + v29;
    v31 = (char *)a2 + v29;
    v32 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v30, v31, v32);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoASTFlatExprPrefixVariant(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    v6 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v4, 1, v6))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 3u:
        case 6u:
        case 7u:
        case 8u:
          swift_bridgeObjectRelease();
          break;
        case 4u:
          swift_bridgeObjectRelease();
          v7 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          goto LABEL_8;
        case 5u:
          swift_bridgeObjectRelease();
          v7 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          goto LABEL_8;
        case 9u:
          swift_bridgeObjectRelease();
          v7 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
LABEL_8:
          v8 = v4 + v7;
          v9 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
          break;
        default:
          break;
      }
    }
    v10 = v4 + *(int *)(v5 + 20);
    v11 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  }
  v12 = a1 + *(int *)(a2 + 24);
  v13 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
}

_BYTE *initializeWithCopy for TranscriptProtoASTFlatExprPrefixVariant(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  _BYTE *v29;
  uint64_t v30;
  void (*v32)(char *, char *, uint64_t);
  void (*v33)(char *, char *, uint64_t);
  void (*v34)(char *, char *, uint64_t);
  char *v35;
  char *v36;
  char *v37;
  char *v38;
  char *v39;
  char *v40;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v12 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v12))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 3u:
        case 6u:
        case 7u:
        case 8u:
          v15 = v8[1];
          *v7 = *v8;
          v7[1] = v15;
          swift_bridgeObjectRetain();
          goto LABEL_11;
        case 4u:
          *v7 = *v8;
          v16 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          v35 = (char *)v8 + v16;
          v38 = (char *)v7 + v16;
          v17 = sub_2408E57A4();
          v32 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
          swift_bridgeObjectRetain();
          v32(v38, v35, v17);
          goto LABEL_11;
        case 5u:
          *v7 = *v8;
          v18 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          v36 = (char *)v8 + v18;
          v39 = (char *)v7 + v18;
          v19 = sub_2408E57A4();
          v33 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
          swift_bridgeObjectRetain();
          v33(v39, v36, v19);
          goto LABEL_11;
        case 9u:
          *(_DWORD *)v7 = *(_DWORD *)v8;
          v20 = v8[2];
          v7[1] = v8[1];
          v7[2] = v20;
          v21 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          v37 = (char *)v8 + v21;
          v40 = (char *)v7 + v21;
          v22 = sub_2408E57A4();
          v34 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
          swift_bridgeObjectRetain();
          v34(v40, v37, v22);
LABEL_11:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v7, v8, *(_QWORD *)(v13 + 64));
          break;
      }
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v7, 0, 1, v12);
    }
    v23 = *(int *)(v9 + 20);
    v24 = (char *)v7 + v23;
    v25 = (char *)v8 + v23;
    v26 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v27 = *(int *)(a3 + 24);
  v28 = &a1[v27];
  v29 = &a2[v27];
  v30 = sub_2408E57A4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  return a1;
}

_BYTE *assignWithCopy for TranscriptProtoASTFlatExprPrefixVariant(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(_QWORD *, uint64_t, uint64_t);
  int v21;
  int v22;
  size_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE *v45;
  _BYTE *v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, char *, uint64_t);
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, char *, uint64_t);
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *, char *, uint64_t);
  void (*v58)(char *, char *, uint64_t);
  void (*v59)(char *, char *, uint64_t);
  void (*v60)(char *, char *, uint64_t);
  char *v61;
  char *v62;
  char *v63;
  void (*v64)(char *, char *, uint64_t);
  void (*v65)(char *, char *, uint64_t);
  void (*v66)(char *, char *, uint64_t);
  char *v67;
  char *v68;
  char *v69;
  char *v70;
  char *v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  char *v76;
  char *v77;
  char *v78;
  char *v79;
  char *v80;
  char *v81;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (v13)
    {
      sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoASTFlatValue);
      goto LABEL_7;
    }
    v18 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    v19 = *(_QWORD *)(v18 - 8);
    v20 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v19 + 48);
    v21 = v20(v7, 1, v18);
    v22 = v20(v8, 1, v18);
    if (v21)
    {
      if (!v22)
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 3u:
          case 6u:
          case 7u:
          case 8u:
            *v7 = *v8;
            v7[1] = v8[1];
            swift_bridgeObjectRetain();
            goto LABEL_32;
          case 4u:
            *v7 = *v8;
            v34 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v70 = (char *)v8 + v34;
            v76 = (char *)v7 + v34;
            v35 = sub_2408E57A4();
            v64 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16);
            swift_bridgeObjectRetain();
            v64(v76, v70, v35);
            goto LABEL_32;
          case 5u:
            *v7 = *v8;
            v36 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v71 = (char *)v8 + v36;
            v77 = (char *)v7 + v36;
            v37 = sub_2408E57A4();
            v65 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16);
            swift_bridgeObjectRetain();
            v65(v77, v71, v37);
            goto LABEL_32;
          case 9u:
            *(_DWORD *)v7 = *(_DWORD *)v8;
            v7[1] = v8[1];
            v7[2] = v8[2];
            v38 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v72 = (char *)v8 + v38;
            v78 = (char *)v7 + v38;
            v39 = sub_2408E57A4();
            v66 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16);
            swift_bridgeObjectRetain();
            v66(v78, v72, v39);
LABEL_32:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v7, v8, *(_QWORD *)(v19 + 64));
            break;
        }
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v7, 0, 1, v18);
LABEL_34:
        v40 = *(int *)(v9 + 20);
        v41 = (char *)v7 + v40;
        v42 = (char *)v8 + v40;
        v43 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 24))(v41, v42, v43);
        goto LABEL_35;
      }
    }
    else
    {
      if (!v22)
      {
        if (a1 != a2)
        {
          sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoAstflatValueEnum);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 3u:
            case 6u:
            case 7u:
            case 8u:
              *v7 = *v8;
              v7[1] = v8[1];
              swift_bridgeObjectRetain();
              swift_storeEnumTagMultiPayload();
              break;
            case 4u:
              *v7 = *v8;
              v49 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
              v73 = (char *)v8 + v49;
              v79 = (char *)v7 + v49;
              v50 = sub_2408E57A4();
              v51 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 16);
              swift_bridgeObjectRetain();
              v51(v79, v73, v50);
              swift_storeEnumTagMultiPayload();
              break;
            case 5u:
              *v7 = *v8;
              v52 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
              v74 = (char *)v8 + v52;
              v80 = (char *)v7 + v52;
              v53 = sub_2408E57A4();
              v54 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 16);
              swift_bridgeObjectRetain();
              v54(v80, v74, v53);
              swift_storeEnumTagMultiPayload();
              break;
            case 9u:
              *(_DWORD *)v7 = *(_DWORD *)v8;
              v7[1] = v8[1];
              v7[2] = v8[2];
              v55 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
              v75 = (char *)v8 + v55;
              v81 = (char *)v7 + v55;
              v56 = sub_2408E57A4();
              v57 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 16);
              swift_bridgeObjectRetain();
              v57(v81, v75, v56);
              swift_storeEnumTagMultiPayload();
              break;
            default:
              v23 = *(_QWORD *)(v19 + 64);
              goto LABEL_17;
          }
        }
        goto LABEL_34;
      }
      sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoAstflatValueEnum);
    }
    v23 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30) - 8) + 64);
LABEL_17:
    memcpy(v7, v8, v23);
    goto LABEL_34;
  }
  if (v13)
  {
LABEL_7:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_35;
  }
  v14 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v15 + 48))(v8, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 3u:
      case 6u:
      case 7u:
      case 8u:
        *v7 = *v8;
        v7[1] = v8[1];
        swift_bridgeObjectRetain();
        goto LABEL_25;
      case 4u:
        *v7 = *v8;
        v24 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        v61 = (char *)v8 + v24;
        v67 = (char *)v7 + v24;
        v25 = sub_2408E57A4();
        v58 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
        swift_bridgeObjectRetain();
        v58(v67, v61, v25);
        goto LABEL_25;
      case 5u:
        *v7 = *v8;
        v26 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        v62 = (char *)v8 + v26;
        v68 = (char *)v7 + v26;
        v27 = sub_2408E57A4();
        v59 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
        swift_bridgeObjectRetain();
        v59(v68, v62, v27);
        goto LABEL_25;
      case 9u:
        *(_DWORD *)v7 = *(_DWORD *)v8;
        v7[1] = v8[1];
        v7[2] = v8[2];
        v28 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        v63 = (char *)v8 + v28;
        v69 = (char *)v7 + v28;
        v29 = sub_2408E57A4();
        v60 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16);
        swift_bridgeObjectRetain();
        v60(v69, v63, v29);
LABEL_25:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v7, v8, *(_QWORD *)(v15 + 64));
        break;
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v7, 0, 1, v14);
  }
  v30 = *(int *)(v9 + 20);
  v31 = (char *)v7 + v30;
  v32 = (char *)v8 + v30;
  v33 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v31, v32, v33);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_35:
  v44 = *(int *)(a3 + 24);
  v45 = &a1[v44];
  v46 = &a2[v44];
  v47 = sub_2408E57A4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v47 - 8) + 24))(v45, v46, v47);
  return a1;
}

_BYTE *initializeWithTake for TranscriptProtoASTFlatExprPrefixVariant(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _DWORD *v7;
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int EnumCaseMultiPayload;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  _BYTE *v31;
  uint64_t v32;
  char *v34;
  char *v35;
  char *v36;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v12 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v12))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      switch(EnumCaseMultiPayload)
      {
        case 9:
          *v7 = *v8;
          *(_OWORD *)(v7 + 2) = *(_OWORD *)(v8 + 2);
          v19 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
          v35 = (char *)v7 + v19;
          v20 = (char *)v8 + v19;
          v21 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v35, v20, v21);
          swift_storeEnumTagMultiPayload();
          break;
        case 5:
          *(_QWORD *)v7 = *(_QWORD *)v8;
          v22 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
          v36 = (char *)v7 + v22;
          v23 = (char *)v8 + v22;
          v24 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v36, v23, v24);
          swift_storeEnumTagMultiPayload();
          break;
        case 4:
          *(_QWORD *)v7 = *(_QWORD *)v8;
          v16 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
          v34 = (char *)v7 + v16;
          v17 = (char *)v8 + v16;
          v18 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v34, v17, v18);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v7, v8, *(_QWORD *)(v13 + 64));
          break;
      }
      (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v7, 0, 1, v12);
    }
    v25 = *(int *)(v9 + 20);
    v26 = (char *)v7 + v25;
    v27 = (char *)v8 + v25;
    v28 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v26, v27, v28);
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v29 = *(int *)(a3 + 24);
  v30 = &a1[v29];
  v31 = &a2[v29];
  v32 = sub_2408E57A4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v30, v31, v32);
  return a1;
}

_BYTE *assignWithTake for TranscriptProtoASTFlatExprPrefixVariant(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t);
  int v21;
  int v22;
  int EnumCaseMultiPayload;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  size_t v32;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _BYTE *v58;
  uint64_t v59;
  uint64_t v60;
  _BYTE *v61;
  _BYTE *v62;
  uint64_t v63;
  uint64_t v65;
  uint64_t v66;
  _BYTE *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _BYTE *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (uint64_t)&a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for TranscriptProtoASTFlatValue(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11((uint64_t)v8, 1, v9);
  if (!v12)
  {
    if (v13)
    {
      sub_240388AE4(v7, type metadata accessor for TranscriptProtoASTFlatValue);
      goto LABEL_7;
    }
    v18 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
    v19 = *(_QWORD *)(v18 - 8);
    v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
    v21 = v20(v7, 1, v18);
    v22 = v20((uint64_t)v8, 1, v18);
    if (v21)
    {
      if (!v22)
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        switch(EnumCaseMultiPayload)
        {
          case 9:
            *(_DWORD *)v7 = *(_DWORD *)v8;
            *(_OWORD *)(v7 + 8) = *(_OWORD *)(v8 + 8);
            v48 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v49 = v7 + v48;
            v50 = &v8[v48];
            v51 = sub_2408E57A4();
            (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(v49, v50, v51);
            swift_storeEnumTagMultiPayload();
            break;
          case 5:
            *(_QWORD *)v7 = *(_QWORD *)v8;
            v52 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v53 = v7 + v52;
            v54 = &v8[v52];
            v55 = sub_2408E57A4();
            (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v55 - 8) + 32))(v53, v54, v55);
            swift_storeEnumTagMultiPayload();
            break;
          case 4:
            *(_QWORD *)v7 = *(_QWORD *)v8;
            v24 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v25 = v7 + v24;
            v26 = &v8[v24];
            v27 = sub_2408E57A4();
            (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy((void *)v7, v8, *(_QWORD *)(v19 + 64));
            break;
        }
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v19 + 56))(v7, 0, 1, v18);
        goto LABEL_36;
      }
    }
    else
    {
      if (!v22)
      {
        if (a1 == a2)
          goto LABEL_36;
        sub_240388AE4(v7, type metadata accessor for TranscriptProtoAstflatValueEnum);
        v43 = swift_getEnumCaseMultiPayload();
        switch(v43)
        {
          case 9:
            *(_DWORD *)v7 = *(_DWORD *)v8;
            *(_OWORD *)(v7 + 8) = *(_OWORD *)(v8 + 8);
            v65 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
            v66 = v7 + v65;
            v67 = &v8[v65];
            v68 = sub_2408E57A4();
            (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v68 - 8) + 32))(v66, v67, v68);
            swift_storeEnumTagMultiPayload();
            goto LABEL_36;
          case 5:
            *(_QWORD *)v7 = *(_QWORD *)v8;
            v69 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
            v70 = v7 + v69;
            v71 = &v8[v69];
            v72 = sub_2408E57A4();
            (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v72 - 8) + 32))(v70, v71, v72);
            swift_storeEnumTagMultiPayload();
            goto LABEL_36;
          case 4:
            *(_QWORD *)v7 = *(_QWORD *)v8;
            v44 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
            v45 = v7 + v44;
            v46 = &v8[v44];
            v47 = sub_2408E57A4();
            (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(v45, v46, v47);
            swift_storeEnumTagMultiPayload();
            goto LABEL_36;
        }
        v32 = *(_QWORD *)(v19 + 64);
LABEL_21:
        memcpy((void *)v7, v8, v32);
LABEL_36:
        v56 = *(int *)(v9 + 20);
        v57 = v7 + v56;
        v58 = &v8[v56];
        v59 = sub_2408E57A4();
        (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v59 - 8) + 40))(v57, v58, v59);
        goto LABEL_37;
      }
      sub_240388AE4(v7, type metadata accessor for TranscriptProtoAstflatValueEnum);
    }
    v32 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30) - 8) + 64);
    goto LABEL_21;
  }
  if (v13)
  {
LABEL_7:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DF8);
    memcpy((void *)v7, v8, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_37;
  }
  v14 = type metadata accessor for TranscriptProtoAstflatValueEnum(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v15 + 48))(v8, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEC30);
    memcpy((void *)v7, v8, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v28 = swift_getEnumCaseMultiPayload();
    switch(v28)
    {
      case 9:
        *(_DWORD *)v7 = *(_DWORD *)v8;
        *(_OWORD *)(v7 + 8) = *(_OWORD *)(v8 + 8);
        v33 = *(int *)(type metadata accessor for TranscriptProtoStatementID(0) + 24);
        v74 = v7 + v33;
        v34 = &v8[v33];
        v35 = sub_2408E57A4();
        (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v74, v34, v35);
        swift_storeEnumTagMultiPayload();
        break;
      case 5:
        *(_QWORD *)v7 = *(_QWORD *)v8;
        v36 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueDictVariant(0) + 20);
        v75 = v7 + v36;
        v37 = &v8[v36];
        v38 = sub_2408E57A4();
        (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v75, v37, v38);
        swift_storeEnumTagMultiPayload();
        break;
      case 4:
        *(_QWORD *)v7 = *(_QWORD *)v8;
        v29 = *(int *)(type metadata accessor for TranscriptProtoASTFlatValueArrayVariant(0) + 20);
        v73 = v7 + v29;
        v30 = &v8[v29];
        v31 = sub_2408E57A4();
        (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v73, v30, v31);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy((void *)v7, v8, *(_QWORD *)(v15 + 64));
        break;
    }
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v15 + 56))(v7, 0, 1, v14);
  }
  v39 = *(int *)(v9 + 20);
  v40 = v7 + v39;
  v41 = &v8[v39];
  v42 = sub_2408E57A4();
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_37:
  v60 = *(int *)(a3 + 24);
  v61 = &a1[v60];
  v62 = &a2[v60];
  v63 = sub_2408E57A4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v63 - 8) + 40))(v61, v62, v63);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTFlatExprPrefixVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406BAF04(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_315Tm(a1, a2, a3, &qword_257000DF8);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTFlatExprPrefixVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_BYTE *sub_2406BAF1C(_BYTE *a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_316Tm(a1, a2, a3, a4, &qword_257000DF8);
}

void sub_2406BAF28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2404090B4(a1, a2, a3, (uint64_t)&unk_240907280, qword_2570082D0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoASTFlatValue);
}

_QWORD *_s23LighthouseDataProcessor37TranscriptProtoSpeechRequestCandidateVwca_0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for TranscriptProtoStatementID(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      *(_DWORD *)v7 = *(_DWORD *)v8;
      v7[1] = v8[1];
      v7[2] = v8[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v24 = *(int *)(v9 + 24);
      v25 = (char *)v7 + v24;
      v26 = (char *)v8 + v24;
      v27 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 24))(v25, v26, v27);
      goto LABEL_7;
    }
    sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)v7 = *(_DWORD *)v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  v14 = *(int *)(v9 + 24);
  v15 = (char *)v7 + v14;
  v28 = (char *)v8 + v14;
  v16 = sub_2408E57A4();
  v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
  swift_bridgeObjectRetain();
  v17(v15, v28, v16);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v19 = *(int *)(a3 + 24);
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  return a1;
}

_QWORD *_s23LighthouseDataProcessor37TranscriptProtoSpeechRequestCandidateVwta_0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (uint64_t)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for TranscriptProtoStatementID(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12((uint64_t)v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      *(_DWORD *)v8 = *(_DWORD *)v9;
      v25 = *((_QWORD *)v9 + 2);
      *(_QWORD *)(v8 + 8) = *((_QWORD *)v9 + 1);
      *(_QWORD *)(v8 + 16) = v25;
      swift_bridgeObjectRelease();
      v26 = *(int *)(v10 + 24);
      v27 = v8 + v26;
      v28 = &v9[v26];
      v29 = sub_2408E57A4();
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 40))(v27, v28, v29);
      goto LABEL_7;
    }
    sub_240388AE4(v8, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy((void *)v8, v9, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)v8 = *(_DWORD *)v9;
  *(_OWORD *)(v8 + 8) = *(_OWORD *)(v9 + 8);
  v15 = *(int *)(v10 + 24);
  v16 = v8 + v15;
  v17 = &v9[v15];
  v18 = sub_2408E57A4();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  v20 = *(int *)(a3 + 24);
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 40))(v21, v22, v23);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoDotExpression()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406BB2D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_15Tm(a1, a2, a3, &qword_256FFA300);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoDotExpression()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406BB2F0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_16Tm(a1, a2, a3, a4, &qword_256FFA300);
}

uint64_t *_s23LighthouseDataProcessor30TranscriptProtoIndexExpressionVwCP_0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(uint64_t *, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v31;
  char *v32;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for TranscriptProtoStatementID(0);
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    if (v9(a2, 1, v7))
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      *(_DWORD *)a1 = *(_DWORD *)a2;
      v12 = a2[2];
      a1[1] = a2[1];
      a1[2] = v12;
      v13 = *(int *)(v7 + 24);
      v31 = (char *)a1 + v13;
      v14 = (char *)a2 + v13;
      v15 = sub_2408E57A4();
      v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
      swift_bridgeObjectRetain();
      v16(v31, v14, v15);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v17 = *(int *)(a3 + 20);
    v18 = (uint64_t *)((char *)a1 + v17);
    v19 = (uint64_t *)((char *)a2 + v17);
    if (v9((uint64_t *)((char *)a2 + v17), 1, v7))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      *(_DWORD *)v18 = *(_DWORD *)v19;
      v21 = v19[2];
      v18[1] = v19[1];
      v18[2] = v21;
      v22 = *(int *)(v7 + 24);
      v23 = (char *)v18 + v22;
      v32 = (char *)v19 + v22;
      v24 = sub_2408E57A4();
      v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
      swift_bridgeObjectRetain();
      v25(v23, v32, v24);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v18, 0, 1, v7);
    }
    v26 = *(int *)(a3 + 24);
    v27 = (char *)a1 + v26;
    v28 = (char *)a2 + v26;
    v29 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
  }
  return a1;
}

uint64_t _s23LighthouseDataProcessor30TranscriptProtoIndexExpressionVwxx_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = type metadata accessor for TranscriptProtoStatementID(0);
  v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48);
  if (!v5(a1, 1, v4))
  {
    swift_bridgeObjectRelease();
    v6 = a1 + *(int *)(v4 + 24);
    v7 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  v8 = a1 + *(int *)(a2 + 20);
  if (!v5(v8, 1, v4))
  {
    swift_bridgeObjectRelease();
    v9 = v8 + *(int *)(v4 + 24);
    v10 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  }
  v11 = a1 + *(int *)(a2 + 24);
  v12 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
}

_QWORD *_s23LighthouseDataProcessor30TranscriptProtoIndexExpressionVwcp_0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(_QWORD *, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v31;
  char *v32;

  v6 = type metadata accessor for TranscriptProtoStatementID(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    v10 = a2[2];
    a1[1] = a2[1];
    a1[2] = v10;
    v11 = *(int *)(v6 + 24);
    v31 = (char *)a1 + v11;
    v12 = (char *)a2 + v11;
    v13 = sub_2408E57A4();
    v14 = a3;
    v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    v15(v31, v12, v13);
    a3 = v14;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v16 = *(int *)(a3 + 20);
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  if (v8((_QWORD *)((char *)a2 + v16), 1, v6))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v17 = *(_DWORD *)v18;
    v20 = v18[2];
    v17[1] = v18[1];
    v17[2] = v20;
    v21 = *(int *)(v6 + 24);
    v22 = (char *)v17 + v21;
    v32 = (char *)v18 + v21;
    v23 = sub_2408E57A4();
    v24 = a3;
    v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
    swift_bridgeObjectRetain();
    v25(v22, v32, v23);
    a3 = v24;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v17, 0, 1, v6);
  }
  v26 = *(int *)(a3 + 24);
  v27 = (char *)a1 + v26;
  v28 = (char *)a2 + v26;
  v29 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
  return a1;
}

_QWORD *_s23LighthouseDataProcessor30TranscriptProtoIndexExpressionVwca_0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  int v21;
  int v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;

  v6 = type metadata accessor for TranscriptProtoStatementID(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      *(_DWORD *)a1 = *(_DWORD *)a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      v11 = *(int *)(v6 + 24);
      v42 = (char *)a1 + v11;
      v12 = (char *)a2 + v11;
      v13 = v7;
      v14 = sub_2408E57A4();
      v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
      swift_bridgeObjectRetain();
      v16 = v14;
      v7 = v13;
      v15(v42, v12, v16);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    sub_240388AE4((uint64_t)a1, type metadata accessor for TranscriptProtoStatementID);
LABEL_6:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)a1 = *(_DWORD *)a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v34 = *(int *)(v6 + 24);
  v35 = (char *)a1 + v34;
  v36 = (char *)a2 + v34;
  v37 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 24))(v35, v36, v37);
LABEL_7:
  v18 = *(int *)(a3 + 20);
  v19 = (_QWORD *)((char *)a1 + v18);
  v20 = (_QWORD *)((char *)a2 + v18);
  v21 = v8((_QWORD *)((char *)a1 + v18), 1, v6);
  v22 = v8(v20, 1, v6);
  if (!v21)
  {
    if (!v22)
    {
      *(_DWORD *)v19 = *(_DWORD *)v20;
      v19[1] = v20[1];
      v19[2] = v20[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v38 = *(int *)(v6 + 24);
      v39 = (char *)v19 + v38;
      v40 = (char *)v20 + v38;
      v41 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 24))(v39, v40, v41);
      goto LABEL_13;
    }
    sub_240388AE4((uint64_t)v19, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_12;
  }
  if (v22)
  {
LABEL_12:
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_13;
  }
  *(_DWORD *)v19 = *(_DWORD *)v20;
  v19[1] = v20[1];
  v19[2] = v20[2];
  v23 = *(int *)(v6 + 24);
  v43 = v7;
  v24 = (char *)v19 + v23;
  v25 = (char *)v20 + v23;
  v26 = sub_2408E57A4();
  v27 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
  swift_bridgeObjectRetain();
  v27(v24, v25, v26);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v19, 0, 1, v6);
LABEL_13:
  v29 = *(int *)(a3 + 24);
  v30 = (char *)a1 + v29;
  v31 = (char *)a2 + v29;
  v32 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 24))(v30, v31, v32);
  return a1;
}

_DWORD *_s23LighthouseDataProcessor30TranscriptProtoIndexExpressionVwtk_0(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(_DWORD *, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _DWORD *v15;
  _DWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  v6 = type metadata accessor for TranscriptProtoStatementID(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    *(_OWORD *)(a1 + 2) = *(_OWORD *)(a2 + 2);
    v10 = *(int *)(v6 + 24);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v14 = *(int *)(a3 + 20);
  v15 = (_DWORD *)((char *)a1 + v14);
  v16 = (_DWORD *)((char *)a2 + v14);
  if (v8((_DWORD *)((char *)a2 + v14), 1, v6))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    *v15 = *v16;
    *(_OWORD *)(v15 + 2) = *(_OWORD *)(v16 + 2);
    v18 = *(int *)(v6 + 24);
    v19 = (char *)v15 + v18;
    v20 = (char *)v16 + v18;
    v21 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v15, 0, 1, v6);
  }
  v22 = *(int *)(a3 + 24);
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
  return a1;
}

_QWORD *_s23LighthouseDataProcessor30TranscriptProtoIndexExpressionVwta_0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;

  v6 = type metadata accessor for TranscriptProtoStatementID(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8((char *)a1, 1, v6);
  v10 = v8((char *)a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      *(_DWORD *)a1 = *(_DWORD *)a2;
      *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
      v11 = *(int *)(v6 + 24);
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    sub_240388AE4((uint64_t)a1, type metadata accessor for TranscriptProtoStatementID);
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)a1 = *(_DWORD *)a2;
  v31 = a2[2];
  a1[1] = a2[1];
  a1[2] = v31;
  swift_bridgeObjectRelease();
  v32 = *(int *)(v6 + 24);
  v33 = (char *)a1 + v32;
  v34 = (char *)a2 + v32;
  v35 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 40))(v33, v34, v35);
LABEL_7:
  v16 = *(int *)(a3 + 20);
  v17 = (uint64_t)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = v8((char *)a1 + v16, 1, v6);
  v20 = v8(v18, 1, v6);
  if (!v19)
  {
    if (!v20)
    {
      *(_DWORD *)v17 = *(_DWORD *)v18;
      v36 = *((_QWORD *)v18 + 2);
      *(_QWORD *)(v17 + 8) = *((_QWORD *)v18 + 1);
      *(_QWORD *)(v17 + 16) = v36;
      swift_bridgeObjectRelease();
      v37 = *(int *)(v6 + 24);
      v38 = v17 + v37;
      v39 = &v18[v37];
      v40 = sub_2408E57A4();
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 40))(v38, v39, v40);
      goto LABEL_13;
    }
    sub_240388AE4(v17, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_12;
  }
  if (v20)
  {
LABEL_12:
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy((void *)v17, v18, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  *(_DWORD *)v17 = *(_DWORD *)v18;
  *(_OWORD *)(v17 + 8) = *(_OWORD *)(v18 + 8);
  v21 = *(int *)(v6 + 24);
  v22 = v17 + v21;
  v23 = &v18[v21];
  v24 = sub_2408E57A4();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(v17, 0, 1, v6);
LABEL_13:
  v26 = *(int *)(a3 + 24);
  v27 = (char *)a1 + v26;
  v28 = (char *)a2 + v26;
  v29 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 40))(v27, v28, v29);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoIndexExpression()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406BBF08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_43Tm(a1, a2, a3, &qword_256FFA300);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoIndexExpression()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406BBF20(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_44Tm(a1, a2, a3, a4, &qword_256FFA300);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoUpdateParametersExpression()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406BBF38(char *a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_77Tm(a1, a2, a3, &qword_256FFA300);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoUpdateParametersExpression()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_2406BBF50(char *a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_78Tm(a1, a2, a3, a4, &qword_256FFA300);
}

_QWORD *initializeBufferWithCopyOfBuffer for TranscriptProtoUpdateParameterExpression_UpdateParameter(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(_QWORD *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v26;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v8 = *(int *)(a3 + 24);
    v9 = (_QWORD *)(a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = type metadata accessor for TranscriptProtoStatementID(0);
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      *(_DWORD *)v9 = *(_DWORD *)v10;
      v16 = v10[2];
      v9[1] = v10[1];
      v9[2] = v16;
      v17 = *(int *)(v11 + 24);
      v18 = (char *)v9 + v17;
      v26 = (char *)v10 + v17;
      v19 = sub_2408E57A4();
      v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
      swift_bridgeObjectRetain();
      v20(v18, v26, v19);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v21 = *(int *)(a3 + 28);
    v22 = (char *)v4 + v21;
    v23 = (uint64_t)a2 + v21;
    v24 = sub_2408E57A4();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoUpdateParameterExpression_UpdateParameter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    v6 = v4 + *(int *)(v5 + 24);
    v7 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  v8 = a1 + *(int *)(a2 + 28);
  v9 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
}

uint64_t initializeWithCopy for TranscriptProtoUpdateParameterExpression_UpdateParameter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(_QWORD *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v24;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = *(int *)(a3 + 24);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = type metadata accessor for TranscriptProtoStatementID(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v8 = *(_DWORD *)v9;
    v14 = v9[2];
    v8[1] = v9[1];
    v8[2] = v14;
    v15 = *(int *)(v10 + 24);
    v16 = (char *)v8 + v15;
    v24 = (char *)v9 + v15;
    v17 = sub_2408E57A4();
    v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
    swift_bridgeObjectRetain();
    v18(v16, v24, v17);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v19 = *(int *)(a3 + 28);
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  return a1;
}

uint64_t assignWithCopy for TranscriptProtoUpdateParameterExpression_UpdateParameter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(int *)(a3 + 24);
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  v9 = type metadata accessor for TranscriptProtoStatementID(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      *(_DWORD *)v7 = *(_DWORD *)v8;
      v7[1] = v8[1];
      v7[2] = v8[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v24 = *(int *)(v9 + 24);
      v25 = (char *)v7 + v24;
      v26 = (char *)v8 + v24;
      v27 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 24))(v25, v26, v27);
      goto LABEL_7;
    }
    sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)v7 = *(_DWORD *)v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  v14 = *(int *)(v9 + 24);
  v15 = (char *)v7 + v14;
  v28 = (char *)v8 + v14;
  v16 = sub_2408E57A4();
  v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
  swift_bridgeObjectRetain();
  v17(v15, v28, v16);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v19 = *(int *)(a3 + 28);
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  return a1;
}

uint64_t initializeWithTake for TranscriptProtoUpdateParameterExpression_UpdateParameter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _DWORD *v7;
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(int *)(a3 + 24);
  v7 = (_DWORD *)(a1 + v6);
  v8 = (_DWORD *)(a2 + v6);
  v9 = type metadata accessor for TranscriptProtoStatementID(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    *v7 = *v8;
    *(_OWORD *)(v7 + 2) = *(_OWORD *)(v8 + 2);
    v12 = *(int *)(v9 + 24);
    v13 = (char *)v7 + v12;
    v14 = (char *)v8 + v12;
    v15 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v16 = *(int *)(a3 + 28);
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
  return a1;
}

uint64_t assignWithTake for TranscriptProtoUpdateParameterExpression_UpdateParameter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for TranscriptProtoStatementID(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      *(_DWORD *)v8 = *(_DWORD *)v9;
      v25 = *(_QWORD *)(v9 + 16);
      *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
      *(_QWORD *)(v8 + 16) = v25;
      swift_bridgeObjectRelease();
      v26 = *(int *)(v10 + 24);
      v27 = v8 + v26;
      v28 = v9 + v26;
      v29 = sub_2408E57A4();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 40))(v27, v28, v29);
      goto LABEL_7;
    }
    sub_240388AE4(v8, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy((void *)v8, (const void *)v9, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)v8 = *(_DWORD *)v9;
  *(_OWORD *)(v8 + 8) = *(_OWORD *)(v9 + 8);
  v15 = *(int *)(v10 + 24);
  v16 = v8 + v15;
  v17 = v9 + v15;
  v18 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  v20 = *(int *)(a3 + 28);
  v21 = a1 + v20;
  v22 = a2 + v20;
  v23 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 40))(v21, v22, v23);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoUpdateParameterExpression_UpdateParameter()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406BC7A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_83Tm(a1, a2, a3, &qword_256FFA300);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoUpdateParameterExpression_UpdateParameter()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406BC7B8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_84Tm(a1, a2, a3, a4, &qword_256FFA300);
}

void sub_2406BC7C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2406F960C(a1, a2, a3, (uint64_t)&unk_240906518, (uint64_t)&unk_2409066B0, qword_256FFCBE0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementID);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoCallExpression()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoCallExpression()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoSayExpression()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoSayExpression()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoPickExpression(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v24;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v7 = *(int *)(a3 + 20);
    v8 = (uint64_t *)((char *)a1 + v7);
    v9 = (uint64_t *)((char *)a2 + v7);
    v10 = type metadata accessor for TranscriptProtoStatementID(0);
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      *(_DWORD *)v8 = *(_DWORD *)v9;
      v14 = v9[2];
      v8[1] = v9[1];
      v8[2] = v14;
      v15 = *(int *)(v10 + 24);
      v16 = (char *)v8 + v15;
      v24 = (char *)v9 + v15;
      v17 = sub_2408E57A4();
      v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
      swift_bridgeObjectRetain();
      v18(v16, v24, v17);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    v19 = *(int *)(a3 + 24);
    v20 = (char *)v4 + v19;
    v21 = (char *)a2 + v19;
    v22 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  }
  return v4;
}

uint64_t _s23LighthouseDataProcessor31TranscriptProtoPrefixExpressionVwxx_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    v6 = v4 + *(int *)(v5 + 24);
    v7 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  v8 = a1 + *(int *)(a2 + 24);
  v9 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
}

_QWORD *initializeWithCopy for TranscriptProtoPickExpression(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v22;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for TranscriptProtoStatementID(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v7 = *(_DWORD *)v8;
    v12 = v8[2];
    v7[1] = v8[1];
    v7[2] = v12;
    v13 = *(int *)(v9 + 24);
    v14 = (char *)v7 + v13;
    v22 = (char *)v8 + v13;
    v15 = sub_2408E57A4();
    v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    v16(v14, v22, v15);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v17 = *(int *)(a3 + 24);
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoPickExpression(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for TranscriptProtoStatementID(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      *(_DWORD *)v7 = *(_DWORD *)v8;
      v7[1] = v8[1];
      v7[2] = v8[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v24 = *(int *)(v9 + 24);
      v25 = (char *)v7 + v24;
      v26 = (char *)v8 + v24;
      v27 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 24))(v25, v26, v27);
      goto LABEL_7;
    }
    sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)v7 = *(_DWORD *)v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  v14 = *(int *)(v9 + 24);
  v15 = (char *)v7 + v14;
  v28 = (char *)v8 + v14;
  v16 = sub_2408E57A4();
  v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
  swift_bridgeObjectRetain();
  v17(v15, v28, v16);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v19 = *(int *)(a3 + 24);
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoPickExpression(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (uint64_t)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for TranscriptProtoStatementID(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11((uint64_t)v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      *(_DWORD *)v7 = *(_DWORD *)v8;
      v24 = *((_QWORD *)v8 + 2);
      *(_QWORD *)(v7 + 8) = *((_QWORD *)v8 + 1);
      *(_QWORD *)(v7 + 16) = v24;
      swift_bridgeObjectRelease();
      v25 = *(int *)(v9 + 24);
      v26 = v7 + v25;
      v27 = &v8[v25];
      v28 = sub_2408E57A4();
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 40))(v26, v27, v28);
      goto LABEL_7;
    }
    sub_240388AE4(v7, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy((void *)v7, v8, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)v7 = *(_DWORD *)v8;
  *(_OWORD *)(v7 + 8) = *(_OWORD *)(v8 + 8);
  v14 = *(int *)(v9 + 24);
  v15 = v7 + v14;
  v16 = &v8[v14];
  v17 = sub_2408E57A4();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v19 = *(int *)(a3 + 24);
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoPickExpression()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406BCEEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(int *)(a3 + 20);
  }
  else
  {
    v8 = sub_2408E57A4();
    v7 = *(_QWORD *)(v8 - 8);
    v9 = *(int *)(a3 + 24);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoPickExpression()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406BCF6C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(int *)(a4 + 20);
  }
  else
  {
    v10 = sub_2408E57A4();
    v9 = *(_QWORD *)(v10 - 8);
    v11 = *(int *)(a4 + 24);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
}

void sub_2406BCFE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2404090B4(a1, a2, a3, MEMORY[0x24BEE0178] + 64, qword_256FFCBE0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementID);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoConfirmExpression()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406BD02C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_9Tm(a1, a2, a3, &qword_256FFA300);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoConfirmExpression()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406BD044(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_10Tm(a1, a2, a3, a4, &qword_256FFA300);
}

void sub_2406BD050(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240408100(a1, a2, a3, qword_256FFCBE0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementID);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoSearchExpression()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoSearchExpression()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t *_s23LighthouseDataProcessor32TranscriptProtoConfirmExpressionVwCP_0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for TranscriptProtoStatementID(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      *(_DWORD *)a1 = *(_DWORD *)a2;
      v11 = a2[2];
      a1[1] = a2[1];
      a1[2] = v11;
      v12 = *(int *)(v7 + 24);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = sub_2408E57A4();
      v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
      swift_bridgeObjectRetain();
      v16(v13, v14, v15);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v17 = *(int *)(a3 + 20);
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    v20 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  }
  return a1;
}

uint64_t _s23LighthouseDataProcessor32TranscriptProtoConfirmExpressionVwxx_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = type metadata accessor for TranscriptProtoStatementID(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4))
  {
    swift_bridgeObjectRelease();
    v5 = a1 + *(int *)(v4 + 24);
    v6 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  v7 = a1 + *(int *)(a2 + 20);
  v8 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

_QWORD *_s23LighthouseDataProcessor32TranscriptProtoConfirmExpressionVwcp_0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v6 = type metadata accessor for TranscriptProtoStatementID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    v9 = a2[2];
    a1[1] = a2[1];
    a1[2] = v9;
    v10 = *(int *)(v6 + 24);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = sub_2408E57A4();
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    v14(v11, v12, v13);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v15 = *(int *)(a3 + 20);
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

_DWORD *_s23LighthouseDataProcessor32TranscriptProtoConfirmExpressionVwtk_0(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v6 = type metadata accessor for TranscriptProtoStatementID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    *(_OWORD *)(a1 + 2) = *(_OWORD *)(a2 + 2);
    v9 = *(int *)(v6 + 24);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v13 = *(int *)(a3 + 20);
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoPickOneExpression()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406BD4A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_9Tm(a1, a2, a3, &qword_256FFA300);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoPickOneExpression()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406BD4BC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_10Tm(a1, a2, a3, a4, &qword_256FFA300);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoResolveToolExpression()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoResolveToolExpression()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoUndoExpression()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406BD4F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_9Tm(a1, a2, a3, &qword_256FFA300);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoUndoExpression()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406BD50C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_10Tm(a1, a2, a3, a4, &qword_256FFA300);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoRejectExpression()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406BD524(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_9Tm(a1, a2, a3, &qword_256FFA300);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoRejectExpression()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406BD53C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_10Tm(a1, a2, a3, a4, &qword_256FFA300);
}

_QWORD *_s23LighthouseDataProcessor32TranscriptProtoConfirmExpressionVwca_0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  v6 = type metadata accessor for TranscriptProtoStatementID(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      *(_DWORD *)a1 = *(_DWORD *)a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v22 = *(int *)(v6 + 24);
      v23 = (char *)a1 + v22;
      v24 = (char *)a2 + v22;
      v25 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 24))(v23, v24, v25);
      goto LABEL_7;
    }
    sub_240388AE4((uint64_t)a1, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)a1 = *(_DWORD *)a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  v11 = *(int *)(v6 + 24);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_2408E57A4();
  v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
  swift_bridgeObjectRetain();
  v15(v12, v13, v14);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v17 = *(int *)(a3 + 20);
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 24))(v18, v19, v20);
  return a1;
}

uint64_t _s23LighthouseDataProcessor32TranscriptProtoConfirmExpressionVwta_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v6 = type metadata accessor for TranscriptProtoStatementID(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      *(_DWORD *)a1 = *(_DWORD *)a2;
      v21 = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = v21;
      swift_bridgeObjectRelease();
      v22 = *(int *)(v6 + 24);
      v23 = a1 + v22;
      v24 = a2 + v22;
      v25 = sub_2408E57A4();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 40))(v23, v24, v25);
      goto LABEL_7;
    }
    sub_240388AE4(a1, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v11 = *(int *)(v6 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v16 = *(int *)(a3 + 20);
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 40))(v17, v18, v19);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoCancelExpression()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406BD880(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_9Tm(a1, a2, a3, &qword_256FFA300);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoCancelExpression()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406BD898(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_10Tm(a1, a2, a3, a4, &qword_256FFA300);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoNoMatchingToolExpression()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoNoMatchingToolExpression()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for TranscriptProtoNoMatchingToolExpression(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257009780);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoContinuePlanningExpression()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoContinuePlanningExpression()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for TranscriptProtoContinuePlanningExpression(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257009810);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoEndOfPlanExpression()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoEndOfPlanExpression()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for TranscriptProtoEndOfPlanExpression(uint64_t a1)
{
  return sub_2403BA700(a1, qword_2570098A0);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoGetMentionedAppsExpression()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoGetMentionedAppsExpression()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for TranscriptProtoGetMentionedAppsExpression(uint64_t a1)
{
  return sub_2403BA700(a1, qword_257009930);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTProgram()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTProgram()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoASTStmt(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *a2;
    if ((~*a2 & 0xF000000000000007) != 0)
      swift_retain();
    *a1 = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoASTStmt(_QWORD *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;

  if ((~*a1 & 0xF000000000000007) != 0)
    swift_release();
  v4 = (char *)a1 + *(int *)(a2 + 20);
  v5 = sub_2408E57A4();
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for TranscriptProtoASTStmt(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = *a2;
  if ((~*a2 & 0xF000000000000007) != 0)
    swift_retain();
  *a1 = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoASTStmt(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = *a2;
  v7 = *a2 & 0xF000000000000007;
  if ((~*a1 & 0xF000000000000007) != 0)
  {
    if (v7 != 0xF000000000000007)
    {
      *a1 = v6;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    sub_2406BDBC8((uint64_t)a1);
    v6 = *a2;
    goto LABEL_6;
  }
  if (v7 == 0xF000000000000007)
  {
LABEL_6:
    *a1 = v6;
    goto LABEL_8;
  }
  *a1 = v6;
  swift_retain();
LABEL_8:
  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  return a1;
}

uint64_t sub_2406BDBC8(uint64_t a1)
{
  swift_release();
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoASTStmt(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = *a2;
  if ((~*a1 & 0xF000000000000007) != 0)
  {
    if ((~v6 & 0xF000000000000007) != 0)
    {
      *a1 = v6;
      swift_release();
      goto LABEL_6;
    }
    sub_2406BDBC8((uint64_t)a1);
  }
  *a1 = v6;
LABEL_6:
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTStmt()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406BDC94(char *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;

  if ((_DWORD)a2 == 124)
  {
    v4 = (((*(_QWORD *)a1 >> 57) >> 5) | (4 * ((*(_QWORD *)a1 >> 57) & 0x18 | *(_QWORD *)a1 & 7))) ^ 0x7F;
    if (v4 >= 0x7D)
      return 0;
    else
      return v4;
  }
  else
  {
    v8 = sub_2408E57A4();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTStmt()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

unint64_t *sub_2406BDD28(unint64_t *result, uint64_t a2, int a3, uint64_t a4)
{
  unint64_t *v5;
  uint64_t v6;
  uint64_t v8;

  v5 = result;
  if (a3 == 124)
  {
    v6 = (~(_DWORD)a2 >> 2) & 0x1F | (32 * (~(_DWORD)a2 & 0x7F));
    *result = (v6 | (v6 << 57)) & 0xF000000000000007;
  }
  else
  {
    v8 = sub_2408E57A4();
    return (unint64_t *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))((char *)v5 + *(int *)(a4 + 20), a2, a2, v8);
  }
  return result;
}

uint64_t sub_2406BDDA8()
{
  return sub_2406F5810();
}

_QWORD *initializeBufferWithCopyOfBuffer for TranscriptProtoAststmtEnum(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t destroy for TranscriptProtoAststmtEnum()
{
  return swift_release();
}

_QWORD *assignWithCopy for TranscriptProtoAststmtEnum(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *__swift_memcpy8_8(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

_QWORD *assignWithTake for TranscriptProtoAststmtEnum(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoAststmtEnum(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7E && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 126);
  v3 = (((*(_QWORD *)a1 >> 57) >> 5) | (4 * ((*(_QWORD *)a1 >> 57) & 0x18 | *(_QWORD *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7D)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoAststmtEnum(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7D)
  {
    *(_QWORD *)result = a2 - 126;
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_2406BDF1C(_QWORD *a1)
{
  return *a1 >> 62;
}

_QWORD *sub_2406BDF28(_QWORD *result)
{
  *result &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t *sub_2406BDF38(uint64_t *result, uint64_t a2)
{
  *result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 62);
  return result;
}

ValueMetadata *type metadata accessor for TranscriptProtoAststmtEnum()
{
  return &type metadata for TranscriptProtoAststmtEnum;
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoASTIfStmt(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(uint64_t *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v39;
  char *v40;
  char *v41;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for TranscriptProtoASTExpr(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CF8);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v11 = *a2;
      if ((~*a2 & 0xF000000000000007) != 0)
        swift_retain();
      *a1 = v11;
      v12 = *(int *)(v7 + 20);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v16 = a3[5];
    v17 = (uint64_t *)((char *)a1 + v16);
    v18 = (uint64_t *)((char *)a2 + v16);
    v19 = type metadata accessor for TranscriptProtoASTBlockStmt(0);
    v20 = *(_QWORD *)(v19 - 8);
    v21 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v20 + 48);
    if (v21(v18, 1, v19))
    {
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DD8);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      *v17 = *v18;
      v23 = *(int *)(v19 + 20);
      v39 = (char *)v18 + v23;
      v40 = (char *)v17 + v23;
      v24 = sub_2408E57A4();
      v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
      swift_bridgeObjectRetain();
      v25(v40, v39, v24);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
    v26 = a3[6];
    v27 = (uint64_t *)((char *)a1 + v26);
    v28 = (uint64_t *)((char *)a2 + v26);
    if (v21((uint64_t *)((char *)a2 + v26), 1, v19))
    {
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DD8);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      *v27 = *v28;
      v30 = *(int *)(v19 + 20);
      v31 = (char *)v27 + v30;
      v41 = (char *)v28 + v30;
      v32 = sub_2408E57A4();
      v33 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16);
      swift_bridgeObjectRetain();
      v33(v31, v41, v32);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v27, 0, 1, v19);
    }
    v34 = a3[7];
    v35 = (char *)a1 + v34;
    v36 = (char *)a2 + v34;
    v37 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v35, v36, v37);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoASTIfStmt(_QWORD *a1, int *a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unsigned int (*v9)(char *, uint64_t, uint64_t);
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;

  v4 = type metadata accessor for TranscriptProtoASTExpr(0);
  if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4))
  {
    if ((~*a1 & 0xF000000000000007) != 0)
      swift_release();
    v5 = (char *)a1 + *(int *)(v4 + 20);
    v6 = sub_2408E57A4();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  v7 = (char *)a1 + a2[5];
  v8 = type metadata accessor for TranscriptProtoASTBlockStmt(0);
  v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  if (!v9(v7, 1, v8))
  {
    swift_bridgeObjectRelease();
    v10 = &v7[*(int *)(v8 + 20)];
    v11 = sub_2408E57A4();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  }
  v12 = (char *)a1 + a2[6];
  if (!v9(v12, 1, v8))
  {
    swift_bridgeObjectRelease();
    v13 = &v12[*(int *)(v8 + 20)];
    v14 = sub_2408E57A4();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  }
  v15 = (char *)a1 + a2[7];
  v16 = sub_2408E57A4();
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
}

_QWORD *initializeWithCopy for TranscriptProtoASTIfStmt(_QWORD *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(uint64_t *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v39;

  v6 = type metadata accessor for TranscriptProtoASTExpr(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CF8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = *a2;
    if ((~*a2 & 0xF000000000000007) != 0)
      swift_retain();
    *a1 = v9;
    v10 = *(int *)(v6 + 20);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v14 = a3[5];
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (uint64_t *)((char *)a2 + v14);
  v17 = type metadata accessor for TranscriptProtoASTBlockStmt(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v18 + 48);
  if (v19(v16, 1, v17))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DD8);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    *v15 = *v16;
    v21 = *(int *)(v17 + 20);
    v22 = (char *)v15 + v21;
    v39 = (char *)v16 + v21;
    v23 = sub_2408E57A4();
    v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
    swift_bridgeObjectRetain();
    v24(v22, v39, v23);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  v25 = a3[6];
  v26 = (_QWORD *)((char *)a1 + v25);
  v27 = (uint64_t *)((char *)a2 + v25);
  if (v19((uint64_t *)((char *)a2 + v25), 1, v17))
  {
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DD8);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    *v26 = *v27;
    v29 = *(int *)(v17 + 20);
    v30 = (char *)v26 + v29;
    v31 = (char *)v27 + v29;
    v32 = sub_2408E57A4();
    v33 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16);
    swift_bridgeObjectRetain();
    v33(v30, v31, v32);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v26, 0, 1, v17);
  }
  v34 = a3[7];
  v35 = (char *)a1 + v34;
  v36 = (char *)a2 + v34;
  v37 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v35, v36, v37);
  return a1;
}

uint64_t *assignWithCopy for TranscriptProtoASTIfStmt(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t *, uint64_t, uint64_t);
  int v23;
  int v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t *v33;
  int v34;
  int v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  char *v62;
  int *v63;
  int *v64;

  v6 = type metadata accessor for TranscriptProtoASTExpr(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_240388AE4((uint64_t)a1, type metadata accessor for TranscriptProtoASTExpr);
      goto LABEL_8;
    }
    v48 = *a2;
    v49 = *a2 & 0xF000000000000007;
    if ((~*a1 & 0xF000000000000007) != 0)
    {
      if (v49 != 0xF000000000000007)
      {
        *a1 = v48;
        swift_retain();
        swift_release();
        goto LABEL_31;
      }
      sub_2406BEA28((uint64_t)a1);
      v48 = *a2;
    }
    else if (v49 != 0xF000000000000007)
    {
      *a1 = v48;
      swift_retain();
LABEL_31:
      v58 = *(int *)(v6 + 20);
      v59 = (char *)a1 + v58;
      v60 = (char *)a2 + v58;
      v61 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 24))(v59, v60, v61);
      goto LABEL_9;
    }
    *a1 = v48;
    goto LABEL_31;
  }
  if (v10)
  {
LABEL_8:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CF8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_9;
  }
  v11 = *a2;
  if ((~*a2 & 0xF000000000000007) != 0)
    swift_retain();
  *a1 = v11;
  v12 = *(int *)(v6 + 20);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_9:
  v17 = a3[5];
  v18 = (uint64_t *)((char *)a1 + v17);
  v19 = (uint64_t *)((char *)a2 + v17);
  v20 = type metadata accessor for TranscriptProtoASTBlockStmt(0);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v21 + 48);
  v23 = v22(v18, 1, v20);
  v24 = v22(v19, 1, v20);
  if (v23)
  {
    if (!v24)
    {
      *v18 = *v19;
      v25 = *(int *)(v20 + 20);
      v63 = a3;
      v26 = (char *)v18 + v25;
      v62 = (char *)v19 + v25;
      v27 = sub_2408E57A4();
      v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
      swift_bridgeObjectRetain();
      v29 = v26;
      a3 = v63;
      v28(v29, v62, v27);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      goto LABEL_15;
    }
    goto LABEL_14;
  }
  if (v24)
  {
    sub_240388AE4((uint64_t)v18, type metadata accessor for TranscriptProtoASTBlockStmt);
LABEL_14:
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DD8);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_15;
  }
  *v18 = *v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v50 = *(int *)(v20 + 20);
  v51 = (char *)v18 + v50;
  v52 = (char *)v19 + v50;
  v53 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 24))(v51, v52, v53);
LABEL_15:
  v31 = a3[6];
  v32 = (uint64_t *)((char *)a1 + v31);
  v33 = (uint64_t *)((char *)a2 + v31);
  v34 = v22((uint64_t *)((char *)a1 + v31), 1, v20);
  v35 = v22(v33, 1, v20);
  if (!v34)
  {
    if (!v35)
    {
      *v32 = *v33;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v54 = *(int *)(v20 + 20);
      v55 = (char *)v32 + v54;
      v56 = (char *)v33 + v54;
      v57 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 24))(v55, v56, v57);
      goto LABEL_21;
    }
    sub_240388AE4((uint64_t)v32, type metadata accessor for TranscriptProtoASTBlockStmt);
    goto LABEL_20;
  }
  if (v35)
  {
LABEL_20:
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DD8);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    goto LABEL_21;
  }
  *v32 = *v33;
  v36 = *(int *)(v20 + 20);
  v64 = a3;
  v37 = (char *)v32 + v36;
  v38 = (char *)v33 + v36;
  v39 = sub_2408E57A4();
  v40 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16);
  swift_bridgeObjectRetain();
  v41 = v37;
  a3 = v64;
  v40(v41, v38, v39);
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v32, 0, 1, v20);
LABEL_21:
  v43 = a3[7];
  v44 = (char *)a1 + v43;
  v45 = (char *)a2 + v43;
  v46 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 24))(v44, v45, v46);
  return a1;
}

uint64_t sub_2406BEA28(uint64_t a1)
{
  swift_release();
  return a1;
}

_QWORD *initializeWithTake for TranscriptProtoASTIfStmt(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(_QWORD *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;

  v6 = type metadata accessor for TranscriptProtoASTExpr(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CF8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v9 = *(int *)(v6 + 20);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v13 = a3[5];
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  v16 = type metadata accessor for TranscriptProtoASTBlockStmt(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v17 + 48);
  if (v18(v15, 1, v16))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DD8);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    *v14 = *v15;
    v20 = *(int *)(v16 + 20);
    v21 = (char *)v14 + v20;
    v22 = (char *)v15 + v20;
    v23 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  v24 = a3[6];
  v25 = (_QWORD *)((char *)a1 + v24);
  v26 = (_QWORD *)((char *)a2 + v24);
  if (v18((_QWORD *)((char *)a2 + v24), 1, v16))
  {
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DD8);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    *v25 = *v26;
    v28 = *(int *)(v16 + 20);
    v29 = (char *)v25 + v28;
    v30 = (char *)v26 + v28;
    v31 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v25, 0, 1, v16);
  }
  v32 = a3[7];
  v33 = (char *)a1 + v32;
  v34 = (char *)a2 + v32;
  v35 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v33, v34, v35);
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoASTIfStmt(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(_QWORD *, uint64_t, uint64_t);
  int v22;
  int v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  int v32;
  int v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;

  v6 = type metadata accessor for TranscriptProtoASTExpr(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      *a1 = *a2;
      v11 = *(int *)(v6 + 20);
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    sub_240388AE4((uint64_t)a1, type metadata accessor for TranscriptProtoASTExpr);
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CF8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  v44 = *a2;
  if ((~*a1 & 0xF000000000000007) != 0)
  {
    if ((~v44 & 0xF000000000000007) != 0)
    {
      *a1 = v44;
      swift_release();
    }
    else
    {
      sub_2406BEA28((uint64_t)a1);
      *a1 = *a2;
    }
  }
  else
  {
    *a1 = v44;
  }
  v53 = *(int *)(v6 + 20);
  v54 = (char *)a1 + v53;
  v55 = (char *)a2 + v53;
  v56 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 40))(v54, v55, v56);
LABEL_7:
  v16 = a3[5];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  v19 = type metadata accessor for TranscriptProtoASTBlockStmt(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v20 + 48);
  v22 = v21(v17, 1, v19);
  v23 = v21(v18, 1, v19);
  if (v22)
  {
    if (!v23)
    {
      *v17 = *v18;
      v24 = *(int *)(v19 + 20);
      v25 = (char *)v17 + v24;
      v26 = (char *)v18 + v24;
      v27 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v23)
  {
    sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoASTBlockStmt);
LABEL_12:
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DD8);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_13;
  }
  *v17 = *v18;
  swift_bridgeObjectRelease();
  v45 = *(int *)(v19 + 20);
  v46 = (char *)v17 + v45;
  v47 = (char *)v18 + v45;
  v48 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 40))(v46, v47, v48);
LABEL_13:
  v29 = a3[6];
  v30 = (_QWORD *)((char *)a1 + v29);
  v31 = (_QWORD *)((char *)a2 + v29);
  v32 = v21((_QWORD *)((char *)a1 + v29), 1, v19);
  v33 = v21(v31, 1, v19);
  if (!v32)
  {
    if (!v33)
    {
      *v30 = *v31;
      swift_bridgeObjectRelease();
      v49 = *(int *)(v19 + 20);
      v50 = (char *)v30 + v49;
      v51 = (char *)v31 + v49;
      v52 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 40))(v50, v51, v52);
      goto LABEL_19;
    }
    sub_240388AE4((uint64_t)v30, type metadata accessor for TranscriptProtoASTBlockStmt);
    goto LABEL_18;
  }
  if (v33)
  {
LABEL_18:
    v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DD8);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    goto LABEL_19;
  }
  *v30 = *v31;
  v34 = *(int *)(v19 + 20);
  v35 = (char *)v30 + v34;
  v36 = (char *)v31 + v34;
  v37 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v35, v36, v37);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v30, 0, 1, v19);
LABEL_19:
  v39 = a3[7];
  v40 = (char *)a1 + v39;
  v41 = (char *)a2 + v39;
  v42 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTIfStmt()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406BF060(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_362Tm(a1, a2, a3, &qword_257000CF8, &qword_257000DD8);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTIfStmt()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406BF080(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_363Tm(a1, a2, a3, a4, &qword_257000CF8, &qword_257000DD8);
}

void sub_2406BF094(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2406F2B0C(a1, a2, a3, &qword_257009AF0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoASTExpr, qword_257009AF8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoASTBlockStmt);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoASTForInStmt(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(uint64_t *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v36;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = type metadata accessor for TranscriptProtoASTExpr(0);
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CF8);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      v16 = *v10;
      if ((~*v10 & 0xF000000000000007) != 0)
        swift_retain();
      *v9 = v16;
      v17 = *(int *)(v11 + 20);
      v18 = (char *)v9 + v17;
      v19 = (char *)v10 + v17;
      v20 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v21 = a3[6];
    v22 = (uint64_t *)((char *)v4 + v21);
    v23 = (uint64_t *)((char *)a2 + v21);
    v24 = type metadata accessor for TranscriptProtoASTBlockStmt(0);
    v25 = *(_QWORD *)(v24 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
    {
      v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DD8);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      *v22 = *v23;
      v27 = *(int *)(v24 + 20);
      v28 = (char *)v22 + v27;
      v36 = (char *)v23 + v27;
      v29 = sub_2408E57A4();
      v30 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16);
      swift_bridgeObjectRetain();
      v30(v28, v36, v29);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
    }
    v31 = a3[7];
    v32 = (char *)v4 + v31;
    v33 = (char *)a2 + v31;
    v34 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoASTForInStmt(uint64_t a1, int *a2)
{
  _QWORD *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  swift_bridgeObjectRelease();
  v4 = (_QWORD *)(a1 + a2[5]);
  v5 = type metadata accessor for TranscriptProtoASTExpr(0);
  if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    if ((~*v4 & 0xF000000000000007) != 0)
      swift_release();
    v6 = (char *)v4 + *(int *)(v5 + 20);
    v7 = sub_2408E57A4();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  v8 = a1 + a2[6];
  v9 = type metadata accessor for TranscriptProtoASTBlockStmt(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
  {
    swift_bridgeObjectRelease();
    v10 = v8 + *(int *)(v9 + 20);
    v11 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  }
  v12 = a1 + a2[7];
  v13 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
}

_QWORD *initializeWithCopy for TranscriptProtoASTForInStmt(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(uint64_t *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v34;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for TranscriptProtoASTExpr(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CF8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v14 = *v9;
    if ((~*v9 & 0xF000000000000007) != 0)
      swift_retain();
    *v8 = v14;
    v15 = *(int *)(v10 + 20);
    v16 = (char *)v8 + v15;
    v17 = (char *)v9 + v15;
    v18 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v19 = a3[6];
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = (_QWORD *)((char *)a2 + v19);
  v22 = type metadata accessor for TranscriptProtoASTBlockStmt(0);
  v23 = *(_QWORD *)(v22 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
  {
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DD8);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    *v20 = *v21;
    v25 = *(int *)(v22 + 20);
    v26 = (char *)v20 + v25;
    v34 = (char *)v21 + v25;
    v27 = sub_2408E57A4();
    v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
    swift_bridgeObjectRetain();
    v28(v26, v34, v27);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  }
  v29 = a3[7];
  v30 = (char *)a1 + v29;
  v31 = (char *)a2 + v29;
  v32 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v30, v31, v32);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoASTForInStmt(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(_QWORD *, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  int *v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for TranscriptProtoASTExpr(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (v13)
    {
      sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoASTExpr);
      goto LABEL_8;
    }
    v39 = *v8;
    v40 = *v8 & 0xF000000000000007;
    if ((~*v7 & 0xF000000000000007) != 0)
    {
      if (v40 != 0xF000000000000007)
      {
        *v7 = v39;
        swift_retain();
        swift_release();
        goto LABEL_24;
      }
      sub_2406BEA28((uint64_t)v7);
      v39 = *v8;
    }
    else if (v40 != 0xF000000000000007)
    {
      *v7 = v39;
      swift_retain();
LABEL_24:
      v45 = *(int *)(v9 + 20);
      v46 = (char *)v7 + v45;
      v47 = (char *)v8 + v45;
      v48 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 24))(v46, v47, v48);
      goto LABEL_9;
    }
    *v7 = v39;
    goto LABEL_24;
  }
  if (v13)
  {
LABEL_8:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CF8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_9;
  }
  v14 = *v8;
  if ((~*v8 & 0xF000000000000007) != 0)
    swift_retain();
  *v7 = v14;
  v15 = *(int *)(v9 + 20);
  v16 = (char *)v7 + v15;
  v17 = (char *)v8 + v15;
  v18 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_9:
  v20 = a3[6];
  v21 = (_QWORD *)((char *)a1 + v20);
  v22 = (_QWORD *)((char *)a2 + v20);
  v23 = type metadata accessor for TranscriptProtoASTBlockStmt(0);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v24 + 48);
  v26 = v25(v21, 1, v23);
  v27 = v25(v22, 1, v23);
  if (!v26)
  {
    if (!v27)
    {
      *v21 = *v22;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v41 = *(int *)(v23 + 20);
      v42 = (char *)v21 + v41;
      v43 = (char *)v22 + v41;
      v44 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 24))(v42, v43, v44);
      goto LABEL_15;
    }
    sub_240388AE4((uint64_t)v21, type metadata accessor for TranscriptProtoASTBlockStmt);
    goto LABEL_14;
  }
  if (v27)
  {
LABEL_14:
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DD8);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    goto LABEL_15;
  }
  *v21 = *v22;
  v28 = *(int *)(v23 + 20);
  v29 = (char *)v21 + v28;
  v49 = (char *)v22 + v28;
  v30 = sub_2408E57A4();
  v31 = a3;
  v32 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16);
  swift_bridgeObjectRetain();
  v32(v29, v49, v30);
  a3 = v31;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
LABEL_15:
  v34 = a3[7];
  v35 = (char *)a1 + v34;
  v36 = (char *)a2 + v34;
  v37 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 24))(v35, v36, v37);
  return a1;
}

_OWORD *initializeWithTake for TranscriptProtoASTForInStmt(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for TranscriptProtoASTExpr(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CF8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    *v7 = *v8;
    v12 = *(int *)(v9 + 20);
    v13 = (char *)v7 + v12;
    v14 = (char *)v8 + v12;
    v15 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v16 = a3[6];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  v19 = type metadata accessor for TranscriptProtoASTBlockStmt(0);
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DD8);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    *v17 = *v18;
    v22 = *(int *)(v19 + 20);
    v23 = (char *)v17 + v22;
    v24 = (char *)v18 + v22;
    v25 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  v26 = a3[7];
  v27 = (char *)a1 + v26;
  v28 = (char *)a2 + v26;
  v29 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v27, v28, v29);
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoASTForInStmt(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(_QWORD *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(_QWORD *, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for TranscriptProtoASTExpr(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      *v8 = *v9;
      v15 = *(int *)(v10 + 20);
      v16 = (char *)v8 + v15;
      v17 = (char *)v9 + v15;
      v18 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    sub_240388AE4((uint64_t)v8, type metadata accessor for TranscriptProtoASTExpr);
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CF8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  v38 = *v9;
  if ((~*v8 & 0xF000000000000007) != 0)
  {
    if ((~v38 & 0xF000000000000007) != 0)
    {
      *v8 = v38;
      swift_release();
    }
    else
    {
      sub_2406BEA28((uint64_t)v8);
      *v8 = *v9;
    }
  }
  else
  {
    *v8 = v38;
  }
  v43 = *(int *)(v10 + 20);
  v44 = (char *)v8 + v43;
  v45 = (char *)v9 + v43;
  v46 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 40))(v44, v45, v46);
LABEL_7:
  v20 = a3[6];
  v21 = (_QWORD *)((char *)a1 + v20);
  v22 = (_QWORD *)((char *)a2 + v20);
  v23 = type metadata accessor for TranscriptProtoASTBlockStmt(0);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v24 + 48);
  v26 = v25(v21, 1, v23);
  v27 = v25(v22, 1, v23);
  if (!v26)
  {
    if (!v27)
    {
      *v21 = *v22;
      swift_bridgeObjectRelease();
      v39 = *(int *)(v23 + 20);
      v40 = (char *)v21 + v39;
      v41 = (char *)v22 + v39;
      v42 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
      goto LABEL_13;
    }
    sub_240388AE4((uint64_t)v21, type metadata accessor for TranscriptProtoASTBlockStmt);
    goto LABEL_12;
  }
  if (v27)
  {
LABEL_12:
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000DD8);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_13;
  }
  *v21 = *v22;
  v28 = *(int *)(v23 + 20);
  v29 = (char *)v21 + v28;
  v30 = (char *)v22 + v28;
  v31 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
LABEL_13:
  v33 = a3[7];
  v34 = (char *)a1 + v33;
  v35 = (char *)a2 + v33;
  v36 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 40))(v34, v35, v36);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTForInStmt()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406BFDF0(uint64_t a1, uint64_t a2, int *a3)
{
  return __swift_get_extra_inhabitant_index_364Tm(a1, a2, a3, &qword_257000CF8, &qword_257000DD8);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTForInStmt()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406BFE10(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  return __swift_store_extra_inhabitant_index_365Tm(a1, a2, a3, a4, &qword_257000CF8, &qword_257000DD8);
}

void sub_2406BFE24()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_2403C8BE4(319, &qword_257009AF0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoASTExpr);
  if (v0 <= 0x3F)
  {
    sub_2403C8BE4(319, qword_257009AF8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoASTBlockStmt);
    if (v1 <= 0x3F)
    {
      sub_2408E57A4();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTBlockStmt()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTBlockStmt()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoASTLiteral(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for TranscriptProtoAstliteralEnum(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFED88);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      switch(EnumCaseMultiPayload)
      {
        case 5:
          *a1 = *a2;
          v13 = *(int *)(type metadata accessor for TranscriptProtoASTLiteralDictVariant(0) + 20);
          v14 = (char *)a1 + v13;
          v15 = (char *)a2 + v13;
          v16 = sub_2408E57A4();
          v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
          swift_bridgeObjectRetain();
          v17(v14, v15, v16);
          swift_storeEnumTagMultiPayload();
          break;
        case 4:
          *a1 = *a2;
          v18 = *(int *)(type metadata accessor for TranscriptProtoASTLiteralArrayVariant(0) + 20);
          v19 = (char *)a1 + v18;
          v20 = (char *)a2 + v18;
          v21 = sub_2408E57A4();
          v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
          swift_bridgeObjectRetain();
          v22(v19, v20, v21);
          swift_storeEnumTagMultiPayload();
          break;
        case 3:
          v12 = a2[1];
          *a1 = *a2;
          a1[1] = v12;
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(v8 + 64));
          break;
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v23 = *(int *)(a3 + 20);
    v24 = (char *)a1 + v23;
    v25 = (char *)a2 + v23;
    v26 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoASTLiteral(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = type metadata accessor for TranscriptProtoAstliteralEnum(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4))
    goto LABEL_9;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 5:
      swift_bridgeObjectRelease();
      v6 = type metadata accessor for TranscriptProtoASTLiteralDictVariant(0);
LABEL_8:
      v7 = a1 + *(int *)(v6 + 20);
      v8 = sub_2408E57A4();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
      break;
    case 4:
      swift_bridgeObjectRelease();
      v6 = type metadata accessor for TranscriptProtoASTLiteralArrayVariant(0);
      goto LABEL_8;
    case 3:
      swift_bridgeObjectRelease();
      break;
  }
LABEL_9:
  v9 = a1 + *(int *)(a2 + 20);
  v10 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

_QWORD *initializeWithCopy for TranscriptProtoASTLiteral(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;

  v6 = type metadata accessor for TranscriptProtoAstliteralEnum(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFED88);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 5:
        *a1 = *a2;
        v11 = *(int *)(type metadata accessor for TranscriptProtoASTLiteralDictVariant(0) + 20);
        v12 = (char *)a1 + v11;
        v13 = (char *)a2 + v11;
        v14 = sub_2408E57A4();
        v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
        swift_bridgeObjectRetain();
        v15(v12, v13, v14);
        swift_storeEnumTagMultiPayload();
        break;
      case 4:
        *a1 = *a2;
        v16 = *(int *)(type metadata accessor for TranscriptProtoASTLiteralArrayVariant(0) + 20);
        v17 = (char *)a1 + v16;
        v18 = (char *)a2 + v16;
        v19 = sub_2408E57A4();
        v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
        swift_bridgeObjectRetain();
        v20(v17, v18, v19);
        swift_storeEnumTagMultiPayload();
        break;
      case 3:
        v10 = a2[1];
        *a1 = *a2;
        a1[1] = v10;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v7 + 64));
        break;
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v21 = *(int *)(a3 + 20);
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  v24 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoASTLiteral(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *, uint64_t, uint64_t);
  int v9;
  int v10;
  int v11;
  size_t v12;
  int EnumCaseMultiPayload;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);

  v6 = type metadata accessor for TranscriptProtoAstliteralEnum(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      if (a1 == a2)
        goto LABEL_20;
      sub_240388AE4((uint64_t)a1, type metadata accessor for TranscriptProtoAstliteralEnum);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      switch(EnumCaseMultiPayload)
      {
        case 5:
          *a1 = *a2;
          v29 = *(int *)(type metadata accessor for TranscriptProtoASTLiteralDictVariant(0) + 20);
          v30 = (char *)a1 + v29;
          v31 = (char *)a2 + v29;
          v32 = sub_2408E57A4();
          v33 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16);
          swift_bridgeObjectRetain();
          v33(v30, v31, v32);
          swift_storeEnumTagMultiPayload();
          goto LABEL_20;
        case 4:
          *a1 = *a2;
          v34 = *(int *)(type metadata accessor for TranscriptProtoASTLiteralArrayVariant(0) + 20);
          v35 = (char *)a1 + v34;
          v36 = (char *)a2 + v34;
          v37 = sub_2408E57A4();
          v38 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16);
          swift_bridgeObjectRetain();
          v38(v35, v36, v37);
          swift_storeEnumTagMultiPayload();
          goto LABEL_20;
        case 3:
          *a1 = *a2;
          a1[1] = a2[1];
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
          goto LABEL_20;
      }
      v12 = *(_QWORD *)(v7 + 64);
      goto LABEL_10;
    }
    sub_240388AE4((uint64_t)a1, type metadata accessor for TranscriptProtoAstliteralEnum);
LABEL_9:
    v12 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256FFED88) - 8) + 64);
LABEL_10:
    memcpy(a1, a2, v12);
    goto LABEL_20;
  }
  if (v10)
    goto LABEL_9;
  v11 = swift_getEnumCaseMultiPayload();
  switch(v11)
  {
    case 5:
      *a1 = *a2;
      v14 = *(int *)(type metadata accessor for TranscriptProtoASTLiteralDictVariant(0) + 20);
      v15 = (char *)a1 + v14;
      v16 = (char *)a2 + v14;
      v17 = sub_2408E57A4();
      v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
      swift_bridgeObjectRetain();
      v18(v15, v16, v17);
      swift_storeEnumTagMultiPayload();
      break;
    case 4:
      *a1 = *a2;
      v19 = *(int *)(type metadata accessor for TranscriptProtoASTLiteralArrayVariant(0) + 20);
      v20 = (char *)a1 + v19;
      v21 = (char *)a2 + v19;
      v22 = sub_2408E57A4();
      v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
      swift_bridgeObjectRetain();
      v23(v20, v21, v22);
      swift_storeEnumTagMultiPayload();
      break;
    case 3:
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(v7 + 64));
      break;
  }
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_20:
  v24 = *(int *)(a3 + 20);
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  v27 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 24))(v25, v26, v27);
  return a1;
}

_QWORD *initializeWithTake for TranscriptProtoASTLiteral(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;

  v6 = type metadata accessor for TranscriptProtoAstliteralEnum(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFED88);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 5)
    {
      *a1 = *a2;
      v14 = *(int *)(type metadata accessor for TranscriptProtoASTLiteralDictVariant(0) + 20);
      v15 = (char *)a1 + v14;
      v16 = (char *)a2 + v14;
      v17 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 4)
    {
      *a1 = *a2;
      v10 = *(int *)(type metadata accessor for TranscriptProtoASTLiteralArrayVariant(0) + 20);
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(v7 + 64));
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v18 = *(int *)(a3 + 20);
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoASTLiteral(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *, uint64_t, uint64_t);
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  size_t v16;
  int EnumCaseMultiPayload;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;

  v6 = type metadata accessor for TranscriptProtoAstliteralEnum(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      if (a1 == a2)
        goto LABEL_17;
      sub_240388AE4((uint64_t)a1, type metadata accessor for TranscriptProtoAstliteralEnum);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 5)
      {
        *a1 = *a2;
        v31 = *(int *)(type metadata accessor for TranscriptProtoASTLiteralDictVariant(0) + 20);
        v32 = (char *)a1 + v31;
        v33 = (char *)a2 + v31;
        v34 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
        swift_storeEnumTagMultiPayload();
        goto LABEL_17;
      }
      if (EnumCaseMultiPayload == 4)
      {
        *a1 = *a2;
        v18 = *(int *)(type metadata accessor for TranscriptProtoASTLiteralArrayVariant(0) + 20);
        v19 = (char *)a1 + v18;
        v20 = (char *)a2 + v18;
        v21 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
        swift_storeEnumTagMultiPayload();
        goto LABEL_17;
      }
      v16 = *(_QWORD *)(v7 + 64);
      goto LABEL_9;
    }
    sub_240388AE4((uint64_t)a1, type metadata accessor for TranscriptProtoAstliteralEnum);
LABEL_8:
    v16 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256FFED88) - 8) + 64);
LABEL_9:
    memcpy(a1, a2, v16);
    goto LABEL_17;
  }
  if (v10)
    goto LABEL_8;
  v11 = swift_getEnumCaseMultiPayload();
  if (v11 == 5)
  {
    *a1 = *a2;
    v22 = *(int *)(type metadata accessor for TranscriptProtoASTLiteralDictVariant(0) + 20);
    v23 = (char *)a1 + v22;
    v24 = (char *)a2 + v22;
    v25 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
    swift_storeEnumTagMultiPayload();
  }
  else if (v11 == 4)
  {
    *a1 = *a2;
    v12 = *(int *)(type metadata accessor for TranscriptProtoASTLiteralArrayVariant(0) + 20);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(v7 + 64));
  }
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_17:
  v26 = *(int *)(a3 + 20);
  v27 = (char *)a1 + v26;
  v28 = (char *)a2 + v26;
  v29 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 40))(v27, v28, v29);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTLiteral()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406C0B74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_9Tm(a1, a2, a3, &qword_256FFED88);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTLiteral()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406C0B8C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_10Tm(a1, a2, a3, a4, &qword_256FFED88);
}

void sub_2406C0B98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240408100(a1, a2, a3, qword_257009CC0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoAstliteralEnum);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoAstliteralEnum(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 5:
        *a1 = *a2;
        v10 = *(int *)(type metadata accessor for TranscriptProtoASTLiteralDictVariant(0) + 20);
        v11 = (char *)a1 + v10;
        v12 = (char *)a2 + v10;
        v13 = sub_2408E57A4();
        v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
        swift_bridgeObjectRetain();
        v14(v11, v12, v13);
        swift_storeEnumTagMultiPayload();
        break;
      case 4:
        *a1 = *a2;
        v15 = *(int *)(type metadata accessor for TranscriptProtoASTLiteralArrayVariant(0) + 20);
        v16 = (char *)a1 + v15;
        v17 = (char *)a2 + v15;
        v18 = sub_2408E57A4();
        v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
        swift_bridgeObjectRetain();
        v19(v16, v17, v18);
        swift_storeEnumTagMultiPayload();
        break;
      case 3:
        v8 = a2[1];
        *a1 = *a2;
        a1[1] = v8;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for TranscriptProtoAstliteralEnum(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  result = swift_getEnumCaseMultiPayload();
  switch((_DWORD)result)
  {
    case 5:
      swift_bridgeObjectRelease();
      v3 = type metadata accessor for TranscriptProtoASTLiteralDictVariant(0);
LABEL_7:
      v4 = a1 + *(int *)(v3 + 20);
      v5 = sub_2408E57A4();
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
    case 4:
      swift_bridgeObjectRelease();
      v3 = type metadata accessor for TranscriptProtoASTLiteralArrayVariant(0);
      goto LABEL_7;
    case 3:
      return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *initializeWithCopy for TranscriptProtoAstliteralEnum(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 5:
      *a1 = *a2;
      v8 = *(int *)(type metadata accessor for TranscriptProtoASTLiteralDictVariant(0) + 20);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_2408E57A4();
      v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
      swift_bridgeObjectRetain();
      v12(v9, v10, v11);
      swift_storeEnumTagMultiPayload();
      break;
    case 4:
      *a1 = *a2;
      v13 = *(int *)(type metadata accessor for TranscriptProtoASTLiteralArrayVariant(0) + 20);
      v14 = (char *)a1 + v13;
      v15 = (char *)a2 + v13;
      v16 = sub_2408E57A4();
      v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
      swift_bridgeObjectRetain();
      v17(v14, v15, v16);
      swift_storeEnumTagMultiPayload();
      break;
    case 3:
      v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoAstliteralEnum(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);

  if (a1 != a2)
  {
    sub_240388AE4((uint64_t)a1, type metadata accessor for TranscriptProtoAstliteralEnum);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 5:
        *a1 = *a2;
        v7 = *(int *)(type metadata accessor for TranscriptProtoASTLiteralDictVariant(0) + 20);
        v8 = (char *)a1 + v7;
        v9 = (char *)a2 + v7;
        v10 = sub_2408E57A4();
        v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
        swift_bridgeObjectRetain();
        v11(v8, v9, v10);
        swift_storeEnumTagMultiPayload();
        break;
      case 4:
        *a1 = *a2;
        v12 = *(int *)(type metadata accessor for TranscriptProtoASTLiteralArrayVariant(0) + 20);
        v13 = (char *)a1 + v12;
        v14 = (char *)a2 + v12;
        v15 = sub_2408E57A4();
        v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
        swift_bridgeObjectRetain();
        v16(v13, v14, v15);
        swift_storeEnumTagMultiPayload();
        break;
      case 3:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

_QWORD *initializeWithTake for TranscriptProtoAstliteralEnum(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 5)
  {
    *a1 = *a2;
    v11 = *(int *)(type metadata accessor for TranscriptProtoASTLiteralDictVariant(0) + 20);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload == 4)
  {
    *a1 = *a2;
    v7 = *(int *)(type metadata accessor for TranscriptProtoASTLiteralArrayVariant(0) + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoAstliteralEnum(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  if (a1 != a2)
  {
    sub_240388AE4((uint64_t)a1, type metadata accessor for TranscriptProtoAstliteralEnum);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 5)
    {
      *a1 = *a2;
      v11 = *(int *)(type metadata accessor for TranscriptProtoASTLiteralDictVariant(0) + 20);
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 4)
    {
      *a1 = *a2;
      v7 = *(int *)(type metadata accessor for TranscriptProtoASTLiteralArrayVariant(0) + 20);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_2406C1294()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for TranscriptProtoASTLiteralArrayVariant(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for TranscriptProtoASTLiteralDictVariant(319);
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTLiteralArrayVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTLiteralArrayVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTLiteralDictVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTLiteralDictVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoASTExpr(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *a2;
    if ((~*a2 & 0xF000000000000007) != 0)
      swift_retain();
    *a1 = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoASTExpr(_QWORD *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;

  if ((~*a1 & 0xF000000000000007) != 0)
    swift_release();
  v4 = (char *)a1 + *(int *)(a2 + 20);
  v5 = sub_2408E57A4();
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for TranscriptProtoASTExpr(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = *a2;
  if ((~*a2 & 0xF000000000000007) != 0)
    swift_retain();
  *a1 = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoASTExpr(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = *a2;
  v7 = *a2 & 0xF000000000000007;
  if ((~*a1 & 0xF000000000000007) != 0)
  {
    if (v7 != 0xF000000000000007)
    {
      *a1 = v6;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    sub_2406BEA28((uint64_t)a1);
    v6 = *a2;
    goto LABEL_6;
  }
  if (v7 == 0xF000000000000007)
  {
LABEL_6:
    *a1 = v6;
    goto LABEL_8;
  }
  *a1 = v6;
  swift_retain();
LABEL_8:
  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoASTExpr(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = *a2;
  if ((~*a1 & 0xF000000000000007) != 0)
  {
    if ((~v6 & 0xF000000000000007) != 0)
    {
      *a1 = v6;
      swift_release();
      goto LABEL_6;
    }
    sub_2406BEA28((uint64_t)a1);
  }
  *a1 = v6;
LABEL_6:
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTExpr()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406C1668(char *a1, uint64_t a2, uint64_t a3)
{
  int v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v10;

  if ((_DWORD)a2 == 105)
  {
    v4 = (((*(_QWORD *)a1 >> 57) & 0x78 | *(_QWORD *)a1 & 7) >> 2) & 0xFFFFFF9F | (32 * (*(_QWORD *)a1 & 3));
    v5 = v4 ^ 0x7E;
    v6 = v4 ^ 0x7F;
    if (v5 >= 0x6A)
      return 0;
    else
      return v6;
  }
  else
  {
    v10 = sub_2408E57A4();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTExpr()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

unint64_t *sub_2406C1700(unint64_t *result, uint64_t a2, int a3, uint64_t a4)
{
  unint64_t *v5;
  uint64_t v6;
  uint64_t v8;

  v5 = result;
  if (a3 == 105)
  {
    v6 = (~(_DWORD)a2 >> 5) & 3 | (4 * (~(_DWORD)a2 & 0x7F));
    *result = (v6 | (v6 << 57)) & 0xF000000000000007;
  }
  else
  {
    v8 = sub_2408E57A4();
    return (unint64_t *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))((char *)v5 + *(int *)(a4 + 20), a2, a2, v8);
  }
  return result;
}

uint64_t sub_2406C1780()
{
  return sub_2406F5810();
}

_QWORD *initializeBufferWithCopyOfBuffer for TranscriptProtoAstexprEnum(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t destroy for TranscriptProtoAstexprEnum()
{
  return swift_release();
}

_QWORD *assignWithCopy for TranscriptProtoAstexprEnum(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoAstexprEnum(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoAstexprEnum(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x6B && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 107);
  v3 = ((((*(_QWORD *)a1 >> 57) & 0x78 | *(_QWORD *)a1 & 7) >> 2) & 0xFFFFFF9F | (32 * (*(_QWORD *)a1 & 3))) ^ 0x7F;
  if (v3 >= 0x6A)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoAstexprEnum(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x6A)
  {
    *(_QWORD *)result = a2 - 107;
    if (a3 >= 0x6B)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x6B)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 5) & 3 | (4 * (-a2 & 0x7F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_2406C18FC(_QWORD *a1)
{
  unsigned int v1;

  v1 = (*a1 >> 59) & 0x1E | (*a1 >> 2) & 1;
  if (v1 <= 0x14)
    return v1;
  else
    return (*a1 >> 3) + 21;
}

_QWORD *sub_2406C1920(_QWORD *result)
{
  *result &= 0xFFFFFFFFFFFFFFBuLL;
  return result;
}

unint64_t *sub_2406C1934(unint64_t *result, uint64_t a2)
{
  if (a2 < 0x15)
    *result = (a2 << 59) & 0xF000000000000000 | (4 * (a2 & 1)) | *result & 0xFFFFFFFFFFFFFF8;
  else
    *result = (8 * (a2 - 21)) | 0xA000000000000004;
  return result;
}

ValueMetadata *type metadata accessor for TranscriptProtoAstexprEnum()
{
  return &type metadata for TranscriptProtoAstexprEnum;
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoASTExprPrefixVariant(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = *(int *)(a3 + 20);
    v8 = (uint64_t *)((char *)a1 + v7);
    v9 = (uint64_t *)((char *)a2 + v7);
    v10 = type metadata accessor for TranscriptProtoASTExpr(0);
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CF8);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v14 = *v9;
      if ((~*v9 & 0xF000000000000007) != 0)
        swift_retain();
      *v8 = v14;
      v15 = *(int *)(v10 + 20);
      v16 = (char *)v8 + v15;
      v17 = (char *)v9 + v15;
      v18 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    v19 = *(int *)(a3 + 24);
    v20 = (char *)v4 + v19;
    v21 = (char *)a2 + v19;
    v22 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  }
  return v4;
}

_BYTE *initializeWithCopy for TranscriptProtoASTExprPrefixVariant(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  _BYTE *v19;
  uint64_t v20;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = (uint64_t *)&a2[v6];
  v9 = type metadata accessor for TranscriptProtoASTExpr(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CF8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v12 = *v8;
    if ((~*v8 & 0xF000000000000007) != 0)
      swift_retain();
    *v7 = v12;
    v13 = *(int *)(v9 + 20);
    v14 = (char *)v7 + v13;
    v15 = (char *)v8 + v13;
    v16 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v17 = *(int *)(a3 + 24);
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = sub_2408E57A4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  return a1;
}

_BYTE *assignWithCopy for TranscriptProtoASTExprPrefixVariant(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (uint64_t *)&a1[v6];
  v8 = (uint64_t *)&a2[v6];
  v9 = type metadata accessor for TranscriptProtoASTExpr(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (v13)
    {
      sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoASTExpr);
      goto LABEL_8;
    }
    v25 = *v8;
    v26 = *v8 & 0xF000000000000007;
    if ((~*v7 & 0xF000000000000007) != 0)
    {
      if (v26 != 0xF000000000000007)
      {
        *v7 = v25;
        swift_retain();
        swift_release();
        goto LABEL_17;
      }
      sub_2406BEA28((uint64_t)v7);
      v25 = *v8;
    }
    else if (v26 != 0xF000000000000007)
    {
      *v7 = v25;
      swift_retain();
LABEL_17:
      v27 = *(int *)(v9 + 20);
      v28 = (char *)v7 + v27;
      v29 = (char *)v8 + v27;
      v30 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
      goto LABEL_9;
    }
    *v7 = v25;
    goto LABEL_17;
  }
  if (v13)
  {
LABEL_8:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CF8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_9;
  }
  v14 = *v8;
  if ((~*v8 & 0xF000000000000007) != 0)
    swift_retain();
  *v7 = v14;
  v15 = *(int *)(v9 + 20);
  v16 = (char *)v7 + v15;
  v17 = (char *)v8 + v15;
  v18 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_9:
  v20 = *(int *)(a3 + 24);
  v21 = &a1[v20];
  v22 = &a2[v20];
  v23 = sub_2408E57A4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v23 - 8) + 24))(v21, v22, v23);
  return a1;
}

_BYTE *initializeWithTake for TranscriptProtoASTExprPrefixVariant(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  _BYTE *v18;
  uint64_t v19;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for TranscriptProtoASTExpr(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CF8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    *v7 = *v8;
    v12 = *(int *)(v9 + 20);
    v13 = (char *)v7 + v12;
    v14 = (char *)v8 + v12;
    v15 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v16 = *(int *)(a3 + 24);
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = sub_2408E57A4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
  return a1;
}

_BYTE *assignWithTake for TranscriptProtoASTExprPrefixVariant(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for TranscriptProtoASTExpr(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      *v7 = *v8;
      v14 = *(int *)(v9 + 20);
      v15 = (char *)v7 + v14;
      v16 = (char *)v8 + v14;
      v17 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CF8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  if (v13)
  {
    sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoASTExpr);
    goto LABEL_6;
  }
  v24 = *v8;
  if ((~*v7 & 0xF000000000000007) != 0)
  {
    if ((~v24 & 0xF000000000000007) != 0)
    {
      *v7 = v24;
      swift_release();
    }
    else
    {
      sub_2406BEA28((uint64_t)v7);
      *v7 = *v8;
    }
  }
  else
  {
    *v7 = v24;
  }
  v25 = *(int *)(v9 + 20);
  v26 = (char *)v7 + v25;
  v27 = (char *)v8 + v25;
  v28 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 40))(v26, v27, v28);
LABEL_7:
  v19 = *(int *)(a3 + 24);
  v20 = &a1[v19];
  v21 = &a2[v19];
  v22 = sub_2408E57A4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTExprPrefixVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406C20FC(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_315Tm(a1, a2, a3, &qword_257000CF8);
}

uint64_t __swift_get_extra_inhabitant_index_315Tm(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  unsigned int v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 253)
  {
    v5 = *a1;
    if (v5 >= 3)
      return v5 - 2;
    else
      return 0;
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(a4);
    v10 = *(_QWORD *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
    {
      v11 = v9;
      v12 = *(int *)(a3 + 20);
    }
    else
    {
      v11 = sub_2408E57A4();
      v10 = *(_QWORD *)(v11 - 8);
      v12 = *(int *)(a3 + 24);
    }
    return (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v10 + 48))(&a1[v12], a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTExprPrefixVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_BYTE *sub_2406C21AC(_BYTE *a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_316Tm(a1, a2, a3, a4, &qword_257000CF8);
}

_BYTE *__swift_store_extra_inhabitant_index_316Tm(_BYTE *result, uint64_t a2, int a3, uint64_t a4, uint64_t *a5)
{
  _BYTE *v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = result;
  if (a3 == 253)
  {
    *result = a2 + 2;
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(a5);
    v10 = *(_QWORD *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == a3)
    {
      v11 = v9;
      v12 = *(int *)(a4 + 20);
    }
    else
    {
      v11 = sub_2408E57A4();
      v10 = *(_QWORD *)(v11 - 8);
      v12 = *(int *)(a4 + 24);
    }
    return (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v10 + 56))(&v6[v12], a2, a2, v11);
  }
  return result;
}

void sub_2406C2250(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2404090B4(a1, a2, a3, (uint64_t)&unk_240907280, &qword_257009AF0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoASTExpr);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoASTExprInfixVariant(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(uint64_t *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = a3[5];
    v8 = (uint64_t *)((char *)a1 + v7);
    v9 = (uint64_t *)((char *)a2 + v7);
    v10 = type metadata accessor for TranscriptProtoASTExpr(0);
    v11 = *(_QWORD *)(v10 - 8);
    v12 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v11 + 48);
    if (v12(v9, 1, v10))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CF8);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v15 = *v9;
      if ((~*v9 & 0xF000000000000007) != 0)
        swift_retain();
      *v8 = v15;
      v16 = *(int *)(v10 + 20);
      v17 = (char *)v8 + v16;
      v18 = (char *)v9 + v16;
      v19 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    v20 = a3[6];
    v21 = (uint64_t *)((char *)v4 + v20);
    v22 = (uint64_t *)((char *)a2 + v20);
    if (v12((uint64_t *)((char *)a2 + v20), 1, v10))
    {
      v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CF8);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      v24 = *v22;
      if ((~*v22 & 0xF000000000000007) != 0)
        swift_retain();
      *v21 = v24;
      v25 = *(int *)(v10 + 20);
      v26 = (char *)v21 + v25;
      v27 = (char *)v22 + v25;
      v28 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v21, 0, 1, v10);
    }
    v29 = a3[7];
    v30 = (char *)v4 + v29;
    v31 = (char *)a2 + v29;
    v32 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v30, v31, v32);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoASTExprInfixVariant(uint64_t a1, int *a2)
{
  _QWORD *v4;
  uint64_t v5;
  unsigned int (*v6)(_QWORD *, uint64_t, uint64_t);
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = (_QWORD *)(a1 + a2[5]);
  v5 = type metadata accessor for TranscriptProtoASTExpr(0);
  v6 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48);
  if (!v6(v4, 1, v5))
  {
    if ((~*v4 & 0xF000000000000007) != 0)
      swift_release();
    v7 = (char *)v4 + *(int *)(v5 + 20);
    v8 = sub_2408E57A4();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  v9 = (_QWORD *)(a1 + a2[6]);
  if (!v6(v9, 1, v5))
  {
    if ((~*v9 & 0xF000000000000007) != 0)
      swift_release();
    v10 = (char *)v9 + *(int *)(v5 + 20);
    v11 = sub_2408E57A4();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  }
  v12 = a1 + a2[7];
  v13 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
}

_BYTE *initializeWithCopy for TranscriptProtoASTExprInfixVariant(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(uint64_t *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  _BYTE *v29;
  uint64_t v30;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = (uint64_t *)&a2[v6];
  v9 = type metadata accessor for TranscriptProtoASTExpr(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CF8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v13 = *v8;
    if ((~*v8 & 0xF000000000000007) != 0)
      swift_retain();
    *v7 = v13;
    v14 = *(int *)(v9 + 20);
    v15 = (char *)v7 + v14;
    v16 = (char *)v8 + v14;
    v17 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v18 = a3[6];
  v19 = &a1[v18];
  v20 = (uint64_t *)&a2[v18];
  if (v11((uint64_t *)&a2[v18], 1, v9))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CF8);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    v22 = *v20;
    if ((~*v20 & 0xF000000000000007) != 0)
      swift_retain();
    *v19 = v22;
    v23 = *(int *)(v9 + 20);
    v24 = (char *)v19 + v23;
    v25 = (char *)v20 + v23;
    v26 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v19, 0, 1, v9);
  }
  v27 = a3[7];
  v28 = &a1[v27];
  v29 = &a2[v27];
  v30 = sub_2408E57A4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  return a1;
}

_BYTE *assignWithCopy for TranscriptProtoASTExprInfixVariant(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (uint64_t *)&a1[v6];
  v8 = (uint64_t *)&a2[v6];
  v9 = type metadata accessor for TranscriptProtoASTExpr(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (v13)
    {
      sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoASTExpr);
      goto LABEL_8;
    }
    v36 = *v8;
    v37 = *v8 & 0xF000000000000007;
    if ((~*v7 & 0xF000000000000007) != 0)
    {
      if (v37 != 0xF000000000000007)
      {
        *v7 = v36;
        swift_retain();
        swift_release();
        goto LABEL_31;
      }
      sub_2406BEA28((uint64_t)v7);
      v36 = *v8;
    }
    else if (v37 != 0xF000000000000007)
    {
      *v7 = v36;
      swift_retain();
LABEL_31:
      v40 = *(int *)(v9 + 20);
      v41 = (char *)v7 + v40;
      v42 = (char *)v8 + v40;
      v43 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 24))(v41, v42, v43);
      goto LABEL_9;
    }
    *v7 = v36;
    goto LABEL_31;
  }
  if (v13)
  {
LABEL_8:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CF8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_9;
  }
  v14 = *v8;
  if ((~*v8 & 0xF000000000000007) != 0)
    swift_retain();
  *v7 = v14;
  v15 = *(int *)(v9 + 20);
  v16 = (char *)v7 + v15;
  v17 = (char *)v8 + v15;
  v18 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_9:
  v20 = a3[6];
  v21 = &a1[v20];
  v22 = (uint64_t *)&a2[v20];
  v23 = v11((uint64_t *)&a1[v20], 1, v9);
  v24 = v11(v22, 1, v9);
  if (!v23)
  {
    if (v24)
    {
      sub_240388AE4((uint64_t)v21, type metadata accessor for TranscriptProtoASTExpr);
      goto LABEL_16;
    }
    v38 = *v22;
    v39 = *v22 & 0xF000000000000007;
    if ((~*v21 & 0xF000000000000007) != 0)
    {
      if (v39 != 0xF000000000000007)
      {
        *v21 = v38;
        swift_retain();
        swift_release();
        goto LABEL_33;
      }
      sub_2406BEA28((uint64_t)v21);
      v38 = *v22;
    }
    else if (v39 != 0xF000000000000007)
    {
      *v21 = v38;
      swift_retain();
LABEL_33:
      v44 = *(int *)(v9 + 20);
      v45 = (char *)v21 + v44;
      v46 = (char *)v22 + v44;
      v47 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 24))(v45, v46, v47);
      goto LABEL_17;
    }
    *v21 = v38;
    goto LABEL_33;
  }
  if (v24)
  {
LABEL_16:
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CF8);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_17;
  }
  v25 = *v22;
  if ((~*v22 & 0xF000000000000007) != 0)
    swift_retain();
  *v21 = v25;
  v26 = *(int *)(v9 + 20);
  v27 = (char *)v21 + v26;
  v28 = (char *)v22 + v26;
  v29 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v21, 0, 1, v9);
LABEL_17:
  v31 = a3[7];
  v32 = &a1[v31];
  v33 = &a2[v31];
  v34 = sub_2408E57A4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  return a1;
}

_BYTE *initializeWithTake for TranscriptProtoASTExprInfixVariant(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(_BYTE *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  _BYTE *v27;
  uint64_t v28;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for TranscriptProtoASTExpr(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CF8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    *v7 = *v8;
    v13 = *(int *)(v9 + 20);
    v14 = (char *)v7 + v13;
    v15 = (char *)v8 + v13;
    v16 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v17 = a3[6];
  v18 = &a1[v17];
  v19 = &a2[v17];
  if (v11(&a2[v17], 1, v9))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CF8);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    *v18 = *v19;
    v21 = *(int *)(v9 + 20);
    v22 = (char *)v18 + v21;
    v23 = (char *)v19 + v21;
    v24 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v18, 0, 1, v9);
  }
  v25 = a3[7];
  v26 = &a1[v25];
  v27 = &a2[v25];
  v28 = sub_2408E57A4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v26, v27, v28);
  return a1;
}

_BYTE *assignWithTake for TranscriptProtoASTExprInfixVariant(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_BYTE *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  int v22;
  int v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for TranscriptProtoASTExpr(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      *v7 = *v8;
      v14 = *(int *)(v9 + 20);
      v15 = (char *)v7 + v14;
      v16 = (char *)v8 + v14;
      v17 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoASTExpr);
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CF8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  v34 = *v8;
  if ((~*v7 & 0xF000000000000007) != 0)
  {
    if ((~v34 & 0xF000000000000007) != 0)
    {
      *v7 = v34;
      swift_release();
    }
    else
    {
      sub_2406BEA28((uint64_t)v7);
      *v7 = *v8;
    }
  }
  else
  {
    *v7 = v34;
  }
  v36 = *(int *)(v9 + 20);
  v37 = (char *)v7 + v36;
  v38 = (char *)v8 + v36;
  v39 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 40))(v37, v38, v39);
LABEL_7:
  v19 = a3[6];
  v20 = &a1[v19];
  v21 = &a2[v19];
  v22 = v11(&a1[v19], 1, v9);
  v23 = v11(v21, 1, v9);
  if (v22)
  {
    if (!v23)
    {
      *v20 = *v21;
      v24 = *(int *)(v9 + 20);
      v25 = (char *)v20 + v24;
      v26 = (char *)v21 + v24;
      v27 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v20, 0, 1, v9);
      goto LABEL_13;
    }
LABEL_12:
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CF8);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_13;
  }
  if (v23)
  {
    sub_240388AE4((uint64_t)v20, type metadata accessor for TranscriptProtoASTExpr);
    goto LABEL_12;
  }
  v35 = *v21;
  if ((~*v20 & 0xF000000000000007) != 0)
  {
    if ((~v35 & 0xF000000000000007) != 0)
    {
      *v20 = v35;
      swift_release();
    }
    else
    {
      sub_2406BEA28((uint64_t)v20);
      *v20 = *v21;
    }
  }
  else
  {
    *v20 = v35;
  }
  v40 = *(int *)(v9 + 20);
  v41 = (char *)v20 + v40;
  v42 = (char *)v21 + v40;
  v43 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 40))(v41, v42, v43);
LABEL_13:
  v29 = a3[7];
  v30 = &a1[v29];
  v31 = &a2[v29];
  v32 = sub_2408E57A4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v32 - 8) + 40))(v30, v31, v32);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTExprInfixVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406C2FA0(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_307Tm(a1, a2, a3, &qword_257000CF8);
}

uint64_t __swift_get_extra_inhabitant_index_307Tm(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  unsigned int v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 237)
  {
    v5 = *a1;
    if (v5 >= 0x13)
      return v5 - 18;
    else
      return 0;
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(a4);
    v10 = *(_QWORD *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
    {
      v11 = v9;
      v12 = *(int *)(a3 + 20);
    }
    else
    {
      v11 = sub_2408E57A4();
      v10 = *(_QWORD *)(v11 - 8);
      v12 = *(int *)(a3 + 28);
    }
    return (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v10 + 48))(&a1[v12], a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTExprInfixVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_BYTE *sub_2406C3050(_BYTE *a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_308Tm(a1, a2, a3, a4, &qword_257000CF8);
}

_BYTE *__swift_store_extra_inhabitant_index_308Tm(_BYTE *result, uint64_t a2, int a3, uint64_t a4, uint64_t *a5)
{
  _BYTE *v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = result;
  if (a3 == 237)
  {
    *result = a2 + 18;
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(a5);
    v10 = *(_QWORD *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == a3)
    {
      v11 = v9;
      v12 = *(int *)(a4 + 20);
    }
    else
    {
      v11 = sub_2408E57A4();
      v10 = *(_QWORD *)(v11 - 8);
      v12 = *(int *)(a4 + 28);
    }
    return (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v10 + 56))(&v6[v12], a2, a2, v11);
  }
  return result;
}

void sub_2406C30F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2406C3108(a1, a2, a3, &qword_257009AF0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoASTExpr);
}

void sub_2406C3108(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, void (*a5)(uint64_t))
{
  unint64_t v5;
  unint64_t v6;

  sub_2403C8BE4(319, a4, a5);
  if (v5 <= 0x3F)
  {
    sub_2408E57A4();
    if (v6 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoASTExprDotVariant(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(uint64_t *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = type metadata accessor for TranscriptProtoASTExpr(0);
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CF8);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      v16 = *v10;
      if ((~*v10 & 0xF000000000000007) != 0)
        swift_retain();
      *v9 = v16;
      v17 = *(int *)(v11 + 20);
      v18 = (char *)v9 + v17;
      v19 = (char *)v10 + v17;
      v20 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v21 = *(int *)(a3 + 24);
    v22 = (char *)v4 + v21;
    v23 = (char *)a2 + v21;
    v24 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoASTExprDotVariant(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_bridgeObjectRelease();
  v4 = (_QWORD *)(a1 + *(int *)(a2 + 20));
  v5 = type metadata accessor for TranscriptProtoASTExpr(0);
  if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    if ((~*v4 & 0xF000000000000007) != 0)
      swift_release();
    v6 = (char *)v4 + *(int *)(v5 + 20);
    v7 = sub_2408E57A4();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  v8 = a1 + *(int *)(a2 + 24);
  v9 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
}

_QWORD *initializeWithCopy for TranscriptProtoASTExprDotVariant(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(uint64_t *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for TranscriptProtoASTExpr(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CF8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v14 = *v9;
    if ((~*v9 & 0xF000000000000007) != 0)
      swift_retain();
    *v8 = v14;
    v15 = *(int *)(v10 + 20);
    v16 = (char *)v8 + v15;
    v17 = (char *)v9 + v15;
    v18 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v19 = *(int *)(a3 + 24);
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoASTExprDotVariant(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for TranscriptProtoASTExpr(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (v13)
    {
      sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoASTExpr);
      goto LABEL_8;
    }
    v25 = *v8;
    v26 = *v8 & 0xF000000000000007;
    if ((~*v7 & 0xF000000000000007) != 0)
    {
      if (v26 != 0xF000000000000007)
      {
        *v7 = v25;
        swift_retain();
        swift_release();
        goto LABEL_17;
      }
      sub_2406BEA28((uint64_t)v7);
      v25 = *v8;
    }
    else if (v26 != 0xF000000000000007)
    {
      *v7 = v25;
      swift_retain();
LABEL_17:
      v27 = *(int *)(v9 + 20);
      v28 = (char *)v7 + v27;
      v29 = (char *)v8 + v27;
      v30 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
      goto LABEL_9;
    }
    *v7 = v25;
    goto LABEL_17;
  }
  if (v13)
  {
LABEL_8:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CF8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_9;
  }
  v14 = *v8;
  if ((~*v8 & 0xF000000000000007) != 0)
    swift_retain();
  *v7 = v14;
  v15 = *(int *)(v9 + 20);
  v16 = (char *)v7 + v15;
  v17 = (char *)v8 + v15;
  v18 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_9:
  v20 = *(int *)(a3 + 24);
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 24))(v21, v22, v23);
  return a1;
}

_OWORD *initializeWithTake for TranscriptProtoASTExprDotVariant(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  return sub_2406C373C(a1, a2, a3, type metadata accessor for TranscriptProtoASTExpr, &qword_257000CF8);
}

_OWORD *sub_2406C373C(_OWORD *a1, _OWORD *a2, uint64_t a3, uint64_t (*a4)(_QWORD), uint64_t *a5)
{
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;

  *a1 = *a2;
  v9 = *(int *)(a3 + 20);
  v10 = (_QWORD *)((char *)a1 + v9);
  v11 = (_QWORD *)((char *)a2 + v9);
  v12 = a4(0);
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(a5);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    *v10 = *v11;
    v15 = *(int *)(v12 + 20);
    v16 = (char *)v10 + v15;
    v17 = (char *)v11 + v15;
    v18 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  v19 = *(int *)(a3 + 24);
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoASTExprDotVariant(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(_QWORD *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for TranscriptProtoASTExpr(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      *v8 = *v9;
      v15 = *(int *)(v10 + 20);
      v16 = (char *)v8 + v15;
      v17 = (char *)v9 + v15;
      v18 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CF8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  if (v14)
  {
    sub_240388AE4((uint64_t)v8, type metadata accessor for TranscriptProtoASTExpr);
    goto LABEL_6;
  }
  v25 = *v9;
  if ((~*v8 & 0xF000000000000007) != 0)
  {
    if ((~v25 & 0xF000000000000007) != 0)
    {
      *v8 = v25;
      swift_release();
    }
    else
    {
      sub_2406BEA28((uint64_t)v8);
      *v8 = *v9;
    }
  }
  else
  {
    *v8 = v25;
  }
  v26 = *(int *)(v10 + 20);
  v27 = (char *)v8 + v26;
  v28 = (char *)v9 + v26;
  v29 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 40))(v27, v28, v29);
LABEL_7:
  v20 = *(int *)(a3 + 24);
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 40))(v21, v22, v23);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTExprDotVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406C3A2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_15Tm(a1, a2, a3, &qword_257000CF8);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTExprDotVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406C3A44(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_16Tm(a1, a2, a3, a4, &qword_257000CF8);
}

void sub_2406C3A50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2404090B4(a1, a2, a3, (uint64_t)&unk_240906518, &qword_257009AF0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoASTExpr);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoASTExprIndexVariant(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(uint64_t *, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for TranscriptProtoASTExpr(0);
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    if (v9(a2, 1, v7))
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CF8);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      v12 = *a2;
      if ((~*a2 & 0xF000000000000007) != 0)
        swift_retain();
      *a1 = v12;
      v13 = *(int *)(v7 + 20);
      v14 = (char *)a1 + v13;
      v15 = (char *)a2 + v13;
      v16 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v17 = *(int *)(a3 + 20);
    v18 = (uint64_t *)((char *)a1 + v17);
    v19 = (uint64_t *)((char *)a2 + v17);
    if (v9((uint64_t *)((char *)a2 + v17), 1, v7))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CF8);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      v21 = *v19;
      if ((~*v19 & 0xF000000000000007) != 0)
        swift_retain();
      *v18 = v21;
      v22 = *(int *)(v7 + 20);
      v23 = (char *)v18 + v22;
      v24 = (char *)v19 + v22;
      v25 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v18, 0, 1, v7);
    }
    v26 = *(int *)(a3 + 24);
    v27 = (char *)a1 + v26;
    v28 = (char *)a2 + v26;
    v29 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoASTExprIndexVariant(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int (*v5)(_QWORD *, uint64_t, uint64_t);
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;

  v4 = type metadata accessor for TranscriptProtoASTExpr(0);
  v5 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48);
  if (!v5(a1, 1, v4))
  {
    if ((~*a1 & 0xF000000000000007) != 0)
      swift_release();
    v6 = (char *)a1 + *(int *)(v4 + 20);
    v7 = sub_2408E57A4();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  v8 = (_QWORD *)((char *)a1 + *(int *)(a2 + 20));
  if (!v5(v8, 1, v4))
  {
    if ((~*v8 & 0xF000000000000007) != 0)
      swift_release();
    v9 = (char *)v8 + *(int *)(v4 + 20);
    v10 = sub_2408E57A4();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  }
  v11 = (char *)a1 + *(int *)(a2 + 24);
  v12 = sub_2408E57A4();
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
}

_QWORD *initializeWithCopy for TranscriptProtoASTExprIndexVariant(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(uint64_t *, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;

  v6 = type metadata accessor for TranscriptProtoASTExpr(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CF8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    v10 = *a2;
    if ((~*a2 & 0xF000000000000007) != 0)
      swift_retain();
    *a1 = v10;
    v11 = *(int *)(v6 + 20);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v15 = *(int *)(a3 + 20);
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (uint64_t *)((char *)a2 + v15);
  if (v8((uint64_t *)((char *)a2 + v15), 1, v6))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CF8);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    v19 = *v17;
    if ((~*v17 & 0xF000000000000007) != 0)
      swift_retain();
    *v16 = v19;
    v20 = *(int *)(v6 + 20);
    v21 = (char *)v16 + v20;
    v22 = (char *)v17 + v20;
    v23 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v16, 0, 1, v6);
  }
  v24 = *(int *)(a3 + 24);
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  v27 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
  return a1;
}

uint64_t *assignWithCopy for TranscriptProtoASTExprIndexVariant(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;

  v6 = type metadata accessor for TranscriptProtoASTExpr(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_240388AE4((uint64_t)a1, type metadata accessor for TranscriptProtoASTExpr);
      goto LABEL_8;
    }
    v33 = *a2;
    v34 = *a2 & 0xF000000000000007;
    if ((~*a1 & 0xF000000000000007) != 0)
    {
      if (v34 != 0xF000000000000007)
      {
        *a1 = v33;
        swift_retain();
        swift_release();
        goto LABEL_31;
      }
      sub_2406BEA28((uint64_t)a1);
      v33 = *a2;
    }
    else if (v34 != 0xF000000000000007)
    {
      *a1 = v33;
      swift_retain();
LABEL_31:
      v37 = *(int *)(v6 + 20);
      v38 = (char *)a1 + v37;
      v39 = (char *)a2 + v37;
      v40 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 24))(v38, v39, v40);
      goto LABEL_9;
    }
    *a1 = v33;
    goto LABEL_31;
  }
  if (v10)
  {
LABEL_8:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CF8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_9;
  }
  v11 = *a2;
  if ((~*a2 & 0xF000000000000007) != 0)
    swift_retain();
  *a1 = v11;
  v12 = *(int *)(v6 + 20);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_9:
  v17 = *(int *)(a3 + 20);
  v18 = (uint64_t *)((char *)a1 + v17);
  v19 = (uint64_t *)((char *)a2 + v17);
  v20 = v8((uint64_t *)((char *)a1 + v17), 1, v6);
  v21 = v8(v19, 1, v6);
  if (!v20)
  {
    if (v21)
    {
      sub_240388AE4((uint64_t)v18, type metadata accessor for TranscriptProtoASTExpr);
      goto LABEL_16;
    }
    v35 = *v19;
    v36 = *v19 & 0xF000000000000007;
    if ((~*v18 & 0xF000000000000007) != 0)
    {
      if (v36 != 0xF000000000000007)
      {
        *v18 = v35;
        swift_retain();
        swift_release();
        goto LABEL_33;
      }
      sub_2406BEA28((uint64_t)v18);
      v35 = *v19;
    }
    else if (v36 != 0xF000000000000007)
    {
      *v18 = v35;
      swift_retain();
LABEL_33:
      v41 = *(int *)(v6 + 20);
      v42 = (char *)v18 + v41;
      v43 = (char *)v19 + v41;
      v44 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 24))(v42, v43, v44);
      goto LABEL_17;
    }
    *v18 = v35;
    goto LABEL_33;
  }
  if (v21)
  {
LABEL_16:
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CF8);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    goto LABEL_17;
  }
  v22 = *v19;
  if ((~*v19 & 0xF000000000000007) != 0)
    swift_retain();
  *v18 = v22;
  v23 = *(int *)(v6 + 20);
  v24 = (char *)v18 + v23;
  v25 = (char *)v19 + v23;
  v26 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v18, 0, 1, v6);
LABEL_17:
  v28 = *(int *)(a3 + 24);
  v29 = (char *)a1 + v28;
  v30 = (char *)a2 + v28;
  v31 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 24))(v29, v30, v31);
  return a1;
}

_QWORD *initializeWithTake for TranscriptProtoASTExprIndexVariant(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(_QWORD *, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  v6 = type metadata accessor for TranscriptProtoASTExpr(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CF8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v10 = *(int *)(v6 + 20);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v14 = *(int *)(a3 + 20);
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (_QWORD *)((char *)a2 + v14);
  if (v8((_QWORD *)((char *)a2 + v14), 1, v6))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CF8);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    *v15 = *v16;
    v18 = *(int *)(v6 + 20);
    v19 = (char *)v15 + v18;
    v20 = (char *)v16 + v18;
    v21 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v15, 0, 1, v6);
  }
  v22 = *(int *)(a3 + 24);
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoASTExprIndexVariant(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  int v19;
  int v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;

  v6 = type metadata accessor for TranscriptProtoASTExpr(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      *a1 = *a2;
      v11 = *(int *)(v6 + 20);
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    sub_240388AE4((uint64_t)a1, type metadata accessor for TranscriptProtoASTExpr);
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CF8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  v31 = *a2;
  if ((~*a1 & 0xF000000000000007) != 0)
  {
    if ((~v31 & 0xF000000000000007) != 0)
    {
      *a1 = v31;
      swift_release();
    }
    else
    {
      sub_2406BEA28((uint64_t)a1);
      *a1 = *a2;
    }
  }
  else
  {
    *a1 = v31;
  }
  v33 = *(int *)(v6 + 20);
  v34 = (char *)a1 + v33;
  v35 = (char *)a2 + v33;
  v36 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 40))(v34, v35, v36);
LABEL_7:
  v16 = *(int *)(a3 + 20);
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  v19 = v8((_QWORD *)((char *)a1 + v16), 1, v6);
  v20 = v8(v18, 1, v6);
  if (v19)
  {
    if (!v20)
    {
      *v17 = *v18;
      v21 = *(int *)(v6 + 20);
      v22 = (char *)v17 + v21;
      v23 = (char *)v18 + v21;
      v24 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v17, 0, 1, v6);
      goto LABEL_13;
    }
LABEL_12:
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CF8);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  if (v20)
  {
    sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoASTExpr);
    goto LABEL_12;
  }
  v32 = *v18;
  if ((~*v17 & 0xF000000000000007) != 0)
  {
    if ((~v32 & 0xF000000000000007) != 0)
    {
      *v17 = v32;
      swift_release();
    }
    else
    {
      sub_2406BEA28((uint64_t)v17);
      *v17 = *v18;
    }
  }
  else
  {
    *v17 = v32;
  }
  v37 = *(int *)(v6 + 20);
  v38 = (char *)v17 + v37;
  v39 = (char *)v18 + v37;
  v40 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 40))(v38, v39, v40);
LABEL_13:
  v26 = *(int *)(a3 + 24);
  v27 = (char *)a1 + v26;
  v28 = (char *)a2 + v26;
  v29 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 40))(v27, v28, v29);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTExprIndexVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406C471C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_43Tm(a1, a2, a3, &qword_257000CF8);
}

uint64_t __swift_get_extra_inhabitant_index_43Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;

  v7 = __swift_instantiateConcreteTypeFromMangledName(a4);
  v8 = *(_QWORD *)(v7 - 8);
  if (*(_DWORD *)(v8 + 84) == (_DWORD)a2)
  {
    v9 = v7;
    v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    v11 = a1;
  }
  else
  {
    v9 = sub_2408E57A4();
    v11 = a1 + *(int *)(a3 + 24);
    v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48);
  }
  return v10(v11, a2, v9);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTExprIndexVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406C47A8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_44Tm(a1, a2, a3, a4, &qword_257000CF8);
}

uint64_t __swift_store_extra_inhabitant_index_44Tm(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v13;

  v9 = __swift_instantiateConcreteTypeFromMangledName(a5);
  v10 = *(_QWORD *)(v9 - 8);
  if (*(_DWORD *)(v10 + 84) == a3)
  {
    v11 = v9;
    v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    v13 = a1;
  }
  else
  {
    v11 = sub_2408E57A4();
    v13 = a1 + *(int *)(a4 + 24);
    v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56);
  }
  return v12(v13, a2, a2, v11);
}

void sub_2406C4830(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2406C4844(a1, a2, a3, &qword_257009AF0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoASTExpr);
}

void sub_2406C4844(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, void (*a5)(uint64_t))
{
  unint64_t v5;
  unint64_t v6;

  sub_2403C8BE4(319, a4, a5);
  if (v5 <= 0x3F)
  {
    sub_2408E57A4();
    if (v6 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTExprCallVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTExprCallVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTExprSayVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTExprSayVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t *_s23LighthouseDataProcessor37TranscriptProtoASTFlatExprPickVariantVwCP_0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(_BYTE *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for TranscriptProtoASTPickType(0);
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D08);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      *(_QWORD *)v9 = *(_QWORD *)v10;
      v9[8] = v10[8];
      v16 = *(int *)(v11 + 20);
      v17 = &v9[v16];
      v18 = &v10[v16];
      v19 = sub_2408E57A4();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v20 = *(int *)(a3 + 24);
    v21 = (char *)v4 + v20;
    v22 = (char *)a2 + v20;
    v23 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
  }
  return v4;
}

uint64_t sub_2406C4A6C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  swift_bridgeObjectRelease();
  v6 = a1 + *(int *)(a2 + 20);
  v7 = a3(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
  {
    v8 = v6 + *(int *)(v7 + 20);
    v9 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  }
  v10 = a1 + *(int *)(a2 + 24);
  v11 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
}

_QWORD *_s23LighthouseDataProcessor37TranscriptProtoASTFlatExprPickVariantVwcp_0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(_BYTE *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for TranscriptProtoASTPickType(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D08);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v8 = *(_QWORD *)v9;
    v8[8] = v9[8];
    v14 = *(int *)(v10 + 20);
    v15 = &v8[v14];
    v16 = &v9[v14];
    v17 = sub_2408E57A4();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v18 = *(int *)(a3 + 24);
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
  return a1;
}

_QWORD *_s23LighthouseDataProcessor37TranscriptProtoASTFlatExprPickVariantVwca_0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_BYTE *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  _BYTE *v28;
  uint64_t v29;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for TranscriptProtoASTPickType(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      v25 = *(_QWORD *)v8;
      v7[8] = v8[8];
      *(_QWORD *)v7 = v25;
      v26 = *(int *)(v9 + 20);
      v27 = &v7[v26];
      v28 = &v8[v26];
      v29 = sub_2408E57A4();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v29 - 8) + 24))(v27, v28, v29);
      goto LABEL_7;
    }
    sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoASTPickType);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D08);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  v14 = *(_QWORD *)v8;
  v7[8] = v8[8];
  *(_QWORD *)v7 = v14;
  v15 = *(int *)(v9 + 20);
  v16 = &v7[v15];
  v17 = &v8[v15];
  v18 = sub_2408E57A4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v20 = *(int *)(a3 + 24);
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 24))(v21, v22, v23);
  return a1;
}

_OWORD *_s23LighthouseDataProcessor37TranscriptProtoASTFlatExprPickVariantVwtk_0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for TranscriptProtoASTPickType(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D08);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v7 = *(_QWORD *)v8;
    v7[8] = v8[8];
    v12 = *(int *)(v9 + 20);
    v13 = &v7[v12];
    v14 = &v8[v12];
    v15 = sub_2408E57A4();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v16 = *(int *)(a3 + 24);
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
  return a1;
}

_QWORD *_s23LighthouseDataProcessor37TranscriptProtoASTFlatExprPickVariantVwta_0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(_BYTE *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  _BYTE *v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v25;
  _BYTE *v26;
  _BYTE *v27;
  uint64_t v28;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for TranscriptProtoASTPickType(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      *(_QWORD *)v8 = *(_QWORD *)v9;
      v8[8] = v9[8];
      v25 = *(int *)(v10 + 20);
      v26 = &v8[v25];
      v27 = &v9[v25];
      v28 = sub_2408E57A4();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v28 - 8) + 40))(v26, v27, v28);
      goto LABEL_7;
    }
    sub_240388AE4((uint64_t)v8, type metadata accessor for TranscriptProtoASTPickType);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000D08);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  *(_QWORD *)v8 = *(_QWORD *)v9;
  v8[8] = v9[8];
  v15 = *(int *)(v10 + 20);
  v16 = &v8[v15];
  v17 = &v9[v15];
  v18 = sub_2408E57A4();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  v20 = *(int *)(a3 + 24);
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 40))(v21, v22, v23);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTExprPickVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406C50B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_15Tm(a1, a2, a3, &qword_257000D08);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTExprPickVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406C50D0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_16Tm(a1, a2, a3, a4, &qword_257000D08);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTExprConfirmVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTExprConfirmVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTExprUndoVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_index_243Tm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = sub_2408E57A4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v9);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTExprUndoVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_index_244Tm(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  else
  {
    v7 = sub_2408E57A4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTExprCancelVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTExprCancelVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t _s23LighthouseDataProcessor31TranscriptProtoSearchExpressionVwta_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  v7 = *(int *)(a3 + 28);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTExprSearchVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTExprSearchVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTExprPickOneVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTExprPickOneVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTExprNoMatchingToolVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTExprNoMatchingToolVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for TranscriptProtoASTExprNoMatchingToolVariant(uint64_t a1)
{
  return sub_2403BA700(a1, qword_25700A698);
}

uint64_t *_s23LighthouseDataProcessor33ToolKitProtoDisplayRepresentationV8SubtitleV6StaticVwCP_0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_2408E57A4();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t _s23LighthouseDataProcessor33ToolKitProtoDisplayRepresentationV8SubtitleV6StaticVwxx_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *_s23LighthouseDataProcessor33ToolKitProtoDisplayRepresentationV8SubtitleV6StaticVwcp_0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_2408E57A4();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

_QWORD *_s23LighthouseDataProcessor33ToolKitProtoDisplayRepresentationV8SubtitleV6StaticVwca_0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *_s23LighthouseDataProcessor33ToolKitProtoDisplayRepresentationV7StorageVwtk_0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *_s23LighthouseDataProcessor33ToolKitProtoDisplayRepresentationV8SubtitleV6StaticVwta_0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTExprRejectVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_index_29Tm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_2408E57A4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTExprRejectVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_index_30Tm(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_2408E57A4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTExprResolveToolVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTExprResolveToolVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTExprContinuePlanningVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTExprContinuePlanningVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for TranscriptProtoASTExprContinuePlanningVariant(uint64_t a1)
{
  return sub_2403BA700(a1, qword_25700A848);
}

_QWORD *_s23LighthouseDataProcessor41TranscriptProtoUpdateParametersExpressionVwca_0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for TranscriptProtoStatementID(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      *(_DWORD *)v7 = *(_DWORD *)v8;
      v7[1] = v8[1];
      v7[2] = v8[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v24 = *(int *)(v9 + 24);
      v25 = (char *)v7 + v24;
      v26 = (char *)v8 + v24;
      v27 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 24))(v25, v26, v27);
      goto LABEL_7;
    }
    sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)v7 = *(_DWORD *)v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  v14 = *(int *)(v9 + 24);
  v15 = (char *)v7 + v14;
  v28 = (char *)v8 + v14;
  v16 = sub_2408E57A4();
  v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
  swift_bridgeObjectRetain();
  v17(v15, v28, v16);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v19 = *(int *)(a3 + 24);
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  return a1;
}

_QWORD *_s23LighthouseDataProcessor41TranscriptProtoUpdateParametersExpressionVwta_0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (uint64_t)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for TranscriptProtoStatementID(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11((uint64_t)v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      *(_DWORD *)v7 = *(_DWORD *)v8;
      v24 = *((_QWORD *)v8 + 2);
      *(_QWORD *)(v7 + 8) = *((_QWORD *)v8 + 1);
      *(_QWORD *)(v7 + 16) = v24;
      swift_bridgeObjectRelease();
      v25 = *(int *)(v9 + 24);
      v26 = v7 + v25;
      v27 = &v8[v25];
      v28 = sub_2408E57A4();
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 40))(v26, v27, v28);
      goto LABEL_7;
    }
    sub_240388AE4(v7, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy((void *)v7, v8, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)v7 = *(_DWORD *)v8;
  *(_OWORD *)(v7 + 8) = *(_OWORD *)(v8 + 8);
  v14 = *(int *)(v9 + 24);
  v15 = v7 + v14;
  v16 = &v8[v14];
  v17 = sub_2408E57A4();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v19 = *(int *)(a3 + 24);
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTExprUpdateParametersVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406C5AB0(char *a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_77Tm(a1, a2, a3, &qword_256FFA300);
}

uint64_t __swift_get_extra_inhabitant_index_77Tm(char *a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v5 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v5) = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(a4);
    v10 = *(_QWORD *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
    {
      v11 = v9;
      v12 = *(int *)(a3 + 20);
    }
    else
    {
      v11 = sub_2408E57A4();
      v10 = *(_QWORD *)(v11 - 8);
      v12 = *(int *)(a3 + 24);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(&a1[v12], a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTExprUpdateParametersVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_2406C5B68(char *a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_78Tm(a1, a2, a3, a4, &qword_256FFA300);
}

char *__swift_store_extra_inhabitant_index_78Tm(char *result, uint64_t a2, int a3, uint64_t a4, uint64_t *a5)
{
  char *v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(a5);
    v10 = *(_QWORD *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == a3)
    {
      v11 = v9;
      v12 = *(int *)(a4 + 20);
    }
    else
    {
      v11 = sub_2408E57A4();
      v10 = *(_QWORD *)(v11 - 8);
      v12 = *(int *)(a4 + 24);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(&v6[v12], a2, a2, v11);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTExprGetMentionedApps()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTExprGetMentionedApps()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for TranscriptProtoASTExprGetMentionedApps(uint64_t a1)
{
  return sub_2403BA700(a1, qword_25700A970);
}

uint64_t _s23LighthouseDataProcessor35TranscriptProtoASTExprPrefixVariantVwxx_0(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = (_QWORD *)(a1 + *(int *)(a2 + 20));
  v5 = type metadata accessor for TranscriptProtoASTExpr(0);
  if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    if ((~*v4 & 0xF000000000000007) != 0)
      swift_release();
    v6 = (char *)v4 + *(int *)(v5 + 20);
    v7 = sub_2408E57A4();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  v8 = a1 + *(int *)(a2 + 24);
  v9 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoASTUpdateExpr()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406C5D08(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 254)
  {
    v4 = *a1;
    if (v4 >= 2)
      return v4 - 1;
    else
      return 0;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CF8);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = sub_2408E57A4();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 24);
    }
    return (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoASTUpdateExpr()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_BYTE *sub_2406C5DB0(_BYTE *result, uint64_t a2, int a3, uint64_t a4)
{
  _BYTE *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 254)
  {
    *result = a2 + 1;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CF8);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = sub_2408E57A4();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 24);
    }
    return (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

void sub_2406C5E4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2404090B4(a1, a2, a3, (uint64_t)&unk_2409066B0, &qword_257009AF0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoASTExpr);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoToolParameterValue(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for TranscriptProtoToolParameterValueEnum(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEE58);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v12 = *a2;
      if (EnumCaseMultiPayload == 1)
      {
        if ((~v12 & 0xF000000000000007) != 0)
          swift_retain();
        *a1 = v12;
        v13 = *(int *)(type metadata accessor for ToolKitProtoTypedValue(0) + 20);
        v14 = (char *)a1 + v13;
        v15 = (char *)a2 + v13;
        v16 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
      }
      else
      {
        v17 = a2[1];
        *a1 = v12;
        a1[1] = v17;
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v18 = *(int *)(a3 + 20);
    v19 = (char *)a1 + v18;
    v20 = (char *)a2 + v18;
    v21 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoToolParameterValue(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;

  v4 = type metadata accessor for TranscriptProtoToolParameterValueEnum(0);
  if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4))
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      if ((~*a1 & 0xF000000000000007) != 0)
        swift_release();
      v5 = (char *)a1 + *(int *)(type metadata accessor for ToolKitProtoTypedValue(0) + 20);
      v6 = sub_2408E57A4();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  v7 = (char *)a1 + *(int *)(a2 + 20);
  v8 = sub_2408E57A4();
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

_QWORD *initializeWithCopy for TranscriptProtoToolParameterValue(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v6 = type metadata accessor for TranscriptProtoToolParameterValueEnum(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEE58);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v10 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      if ((~v10 & 0xF000000000000007) != 0)
        swift_retain();
      *a1 = v10;
      v11 = *(int *)(type metadata accessor for ToolKitProtoTypedValue(0) + 20);
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
    }
    else
    {
      v15 = a2[1];
      *a1 = v10;
      a1[1] = v15;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v16 = *(int *)(a3 + 20);
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  return a1;
}

uint64_t *assignWithCopy for TranscriptProtoToolParameterValue(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t *, uint64_t, uint64_t);
  int v9;
  int v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;

  v6 = type metadata accessor for TranscriptProtoToolParameterValueEnum(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v12 = *a2;
      if (EnumCaseMultiPayload == 1)
      {
        if ((~v12 & 0xF000000000000007) != 0)
          swift_retain();
        *a1 = v12;
        v13 = *(int *)(type metadata accessor for ToolKitProtoTypedValue(0) + 20);
        v14 = (char *)a1 + v13;
        v15 = (char *)a2 + v13;
        v16 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
      }
      else
      {
        *a1 = v12;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_17;
    }
LABEL_9:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEE58);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_17;
  }
  if (v10)
  {
    sub_240388AE4((uint64_t)a1, type metadata accessor for TranscriptProtoToolParameterValueEnum);
    goto LABEL_9;
  }
  if (a1 != a2)
  {
    sub_240388AE4((uint64_t)a1, type metadata accessor for TranscriptProtoToolParameterValueEnum);
    v18 = swift_getEnumCaseMultiPayload();
    v19 = *a2;
    if (v18 == 1)
    {
      if ((~v19 & 0xF000000000000007) != 0)
        swift_retain();
      *a1 = v19;
      v20 = *(int *)(type metadata accessor for ToolKitProtoTypedValue(0) + 20);
      v21 = (char *)a1 + v20;
      v22 = (char *)a2 + v20;
      v23 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      *a1 = v19;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_17:
  v24 = *(int *)(a3 + 20);
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  v27 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 24))(v25, v26, v27);
  return a1;
}

_QWORD *initializeWithTake for TranscriptProtoToolParameterValue(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v6 = type metadata accessor for TranscriptProtoToolParameterValueEnum(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFEE58);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      v9 = *(int *)(type metadata accessor for ToolKitProtoTypedValue(0) + 20);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(v7 + 64));
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v13 = *(int *)(a3 + 20);
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoToolParameterValue(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  size_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;

  v6 = type metadata accessor for TranscriptProtoToolParameterValueEnum(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      if (a1 == a2)
        goto LABEL_14;
      sub_240388AE4((uint64_t)a1, type metadata accessor for TranscriptProtoToolParameterValueEnum);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *a1 = *a2;
        v16 = *(int *)(type metadata accessor for ToolKitProtoTypedValue(0) + 20);
        v17 = (char *)a1 + v16;
        v18 = (char *)a2 + v16;
        v19 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
        swift_storeEnumTagMultiPayload();
        goto LABEL_14;
      }
      v15 = *(_QWORD *)(v7 + 64);
      goto LABEL_8;
    }
    sub_240388AE4((uint64_t)a1, type metadata accessor for TranscriptProtoToolParameterValueEnum);
LABEL_7:
    v15 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256FFEE58) - 8) + 64);
LABEL_8:
    memcpy(a1, a2, v15);
    goto LABEL_14;
  }
  if (v10)
    goto LABEL_7;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    v11 = *(int *)(type metadata accessor for ToolKitProtoTypedValue(0) + 20);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(v7 + 64));
  }
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_14:
  v20 = *(int *)(a3 + 20);
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 40))(v21, v22, v23);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoToolParameterValue()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406C6798(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_9Tm(a1, a2, a3, &qword_256FFEE58);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoToolParameterValue()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406C67B0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_10Tm(a1, a2, a3, a4, &qword_256FFEE58);
}

void sub_2406C67BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240408100(a1, a2, a3, qword_25700AAA8, (void (*)(uint64_t))type metadata accessor for TranscriptProtoToolParameterValueEnum);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoToolParameterValueEnum(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v7 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      if ((~v7 & 0xF000000000000007) != 0)
        swift_retain();
      *a1 = v7;
      v8 = *(int *)(type metadata accessor for ToolKitProtoTypedValue(0) + 20);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      v13 = a2[1];
      *a1 = v7;
      a1[1] = v13;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for TranscriptProtoToolParameterValueEnum(_QWORD *a1)
{
  char *v2;
  uint64_t v3;

  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_bridgeObjectRelease();
  if ((~*a1 & 0xF000000000000007) != 0)
    swift_release();
  v2 = (char *)a1 + *(int *)(type metadata accessor for ToolKitProtoTypedValue(0) + 20);
  v3 = sub_2408E57A4();
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_QWORD *initializeWithCopy for TranscriptProtoToolParameterValueEnum(_QWORD *a1, uint64_t *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v5 = *a2;
  if (EnumCaseMultiPayload == 1)
  {
    if ((~v5 & 0xF000000000000007) != 0)
      swift_retain();
    *a1 = v5;
    v6 = *(int *)(type metadata accessor for ToolKitProtoTypedValue(0) + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  }
  else
  {
    v10 = a2[1];
    *a1 = v5;
    a1[1] = v10;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t *assignWithCopy for TranscriptProtoToolParameterValueEnum(uint64_t *a1, uint64_t *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_240388AE4((uint64_t)a1, type metadata accessor for TranscriptProtoToolParameterValueEnum);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v5 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      if ((~v5 & 0xF000000000000007) != 0)
        swift_retain();
      *a1 = v5;
      v6 = *(int *)(type metadata accessor for ToolKitProtoTypedValue(0) + 20);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *a1 = v5;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *initializeWithTake for TranscriptProtoToolParameterValueEnum(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    v6 = *(int *)(type metadata accessor for ToolKitProtoTypedValue(0) + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoToolParameterValueEnum(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_240388AE4((uint64_t)a1, type metadata accessor for TranscriptProtoToolParameterValueEnum);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      v6 = *(int *)(type metadata accessor for ToolKitProtoTypedValue(0) + 20);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_2406C6C28()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ToolKitProtoTypedValue(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoEntitySpanMatchResult()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoEntitySpanMatchResult()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoToolRetrievalResponse()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_index_145Tm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_2408E57A4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 36), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoToolRetrievalResponse()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_index_146Tm(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_2408E57A4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 36), a2, a2, v7);
  }
  return result;
}

uint64_t sub_2406C6DC8()
{
  return sub_2406C6DE8();
}

uint64_t sub_2406C6DE8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2408E57A4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for TranscriptProtoSystemResponse(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  char *v9;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  char *v15;
  uint64_t v16;
  int *v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  int *v31;
  uint64_t v32;
  uint64_t v33;
  int *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  unsigned int (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  unsigned int (*v41)(char *, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  int *v79;
  void (*v80)(char *, char *, uint64_t);
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  _QWORD *v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  void (*v89)(char *, char *, uint64_t);
  unsigned int (*v91)(char *, uint64_t, uint64_t);
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  char *v95;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    v19 = (_QWORD *)(v20 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    v8 = a3[7];
    v9 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    a1[4] = a2[4];
    v12 = type metadata accessor for TranscriptProtoStatementOutcome(0);
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    v15 = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E8);
      memcpy(v9, v11, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      v17 = a3;
      v18 = a2;
      v19 = a1;
    }
    else
    {
      v21 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v11, 1, v21))
      {
        v23 = (char *)&loc_2406C6FFC + 4 * byte_240903A40[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
      memcpy(v9, v11, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      v17 = a3;
      v18 = a2;
      v19 = a1;
      v24 = *(int *)(v12 + 20);
      v25 = &v9[v24];
      v26 = &v15[v24];
      v27 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
    }
    v28 = v17[8];
    v29 = (_QWORD *)((char *)v19 + v28);
    v30 = (_QWORD *)((char *)v18 + v28);
    v31 = (int *)type metadata accessor for TranscriptProtoResponseOutput(0);
    v32 = *((_QWORD *)v31 - 1);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v32 + 48))(v30, 1, v31))
    {
      v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA400);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      v93 = v32;
      v94 = v18;
      v34 = v17;
      *v29 = *v30;
      *((_BYTE *)v29 + 8) = *((_BYTE *)v30 + 8);
      v29[2] = v30[2];
      v35 = v31[7];
      v36 = (char *)v29 + v35;
      v37 = (char *)v30 + v35;
      v38 = type metadata accessor for TranscriptProtoDialogType(0);
      v92 = *(_QWORD *)(v38 - 8);
      v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v92 + 48);
      v40 = v38;
      swift_bridgeObjectRetain();
      v41 = v39;
      swift_bridgeObjectRetain();
      if (v39(v37, 1, v40))
      {
        v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F8);
        memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
        v17 = v34;
        v18 = v94;
      }
      else
      {
        v91 = v39;
        v43 = type metadata accessor for TranscriptProtoDialogFormat(0);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 48))(v37, 1, v43))
        {
          v47 = (char *)&loc_2406C7A54 + 4 * byte_240903A4B[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F0);
        memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
        v45 = v37;
        v17 = v34;
        v18 = v94;
        v46 = v36;
        v48 = *(int *)(v40 + 20);
        v49 = &v36[v48];
        v50 = &v45[v48];
        v51 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v49, v50, v51);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v92 + 56))(v46, 0, 1, v40);
        v41 = v91;
      }
      v52 = v31[8];
      v53 = (char *)v29 + v52;
      v54 = (char *)v30 + v52;
      if (v41((char *)v30 + v52, 1, v40))
      {
        v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F8);
        memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      }
      else
      {
        v56 = type metadata accessor for TranscriptProtoDialogFormat(0);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 48))(v54, 1, v56))
        {
          v58 = (char *)&loc_2406C7C58 + 4 * byte_240903A50[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F0);
        memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
        v59 = *(int *)(v40 + 20);
        v60 = &v53[v59];
        v61 = &v54[v59];
        v62 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(v60, v61, v62);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v92 + 56))(v53, 0, 1, v40);
      }
      v63 = v31[9];
      v64 = (char *)v29 + v63;
      v65 = (char *)v30 + v63;
      v66 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 16))(v64, v65, v66);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v93 + 56))(v29, 0, 1, v31);
    }
    v67 = v17[9];
    v68 = (_QWORD *)((char *)v19 + v67);
    v69 = (_QWORD *)((char *)v18 + v67);
    v70 = type metadata accessor for TranscriptProtoStatementID(0);
    v71 = *(_QWORD *)(v70 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v71 + 48))(v69, 1, v70))
    {
      v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
      memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
    }
    else
    {
      *(_DWORD *)v68 = *(_DWORD *)v69;
      v73 = v69[2];
      v68[1] = v69[1];
      v68[2] = v73;
      v74 = *(int *)(v70 + 24);
      v75 = (char *)v68 + v74;
      v95 = (char *)v69 + v74;
      v76 = sub_2408E57A4();
      v77 = v19;
      v78 = v18;
      v79 = v17;
      v80 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v76 - 8) + 16);
      swift_bridgeObjectRetain();
      v80(v75, v95, v76);
      v17 = v79;
      v18 = v78;
      v19 = v77;
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v71 + 56))(v68, 0, 1, v70);
    }
    v81 = v17[10];
    v82 = v17[11];
    v83 = (_QWORD *)((char *)v19 + v81);
    v84 = (_QWORD *)((char *)v18 + v81);
    v85 = v84[1];
    *v83 = *v84;
    v83[1] = v85;
    v86 = (char *)v19 + v82;
    v87 = (char *)v18 + v82;
    v88 = sub_2408E57A4();
    v89 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v88 - 8) + 16);
    swift_bridgeObjectRetain();
    v89(v86, v87, v88);
  }
  return v19;
}

uint64_t destroy for TranscriptProtoSystemResponse(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  int EnumCaseMultiPayload;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int *v54;
  uint64_t v55;
  uint64_t v56;
  unsigned int (*v57)(uint64_t, uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[7];
  v5 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    v6 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v4, 1, v6))
    {
LABEL_53:
      v51 = v4 + *(int *)(v5 + 20);
      v52 = sub_2408E57A4();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 8))(v51, v52);
      goto LABEL_54;
    }
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v7 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
        v8 = (_QWORD *)(v4 + v7[6]);
        v9 = type metadata accessor for ToolKitProtoTypedValue(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
        {
          if ((~*v8 & 0xF000000000000007) != 0)
            swift_release();
          v10 = (char *)v8 + *(int *)(v9 + 20);
          v11 = sub_2408E57A4();
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
        }
        v12 = v4 + v7[7];
        v13 = type metadata accessor for TranscriptProtoUndoContext(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v12, 1, v13))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v14 = v12 + *(int *)(v13 + 28);
          v15 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
        }
        v16 = v7[8];
        goto LABEL_52;
      case 1u:
        swift_bridgeObjectRelease();
        v17 = type metadata accessor for TranscriptProtoActionConfirmation(0);
        goto LABEL_51;
      case 2u:
        swift_bridgeObjectRelease();
        v17 = type metadata accessor for TranscriptProtoParameterNeedsValue(0);
        goto LABEL_51;
      case 3u:
        swift_bridgeObjectRelease();
        v18 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
        goto LABEL_16;
      case 4u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v16 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
        goto LABEL_52;
      case 5u:
        swift_bridgeObjectRelease();
        v18 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
LABEL_16:
        v19 = v18;
        v20 = (_QWORD *)(v4 + *(int *)(v18 + 24));
        v21 = type metadata accessor for ToolKitProtoTypedValue(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v20, 1, v21))
        {
          if ((~*v20 & 0xF000000000000007) != 0)
            swift_release();
          v22 = (char *)v20 + *(int *)(v21 + 20);
          v23 = sub_2408E57A4();
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v22, v23);
        }
        v16 = *(int *)(v19 + 28);
        goto LABEL_52;
      case 6u:
        swift_bridgeObjectRelease();
        v24 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
        v25 = (_QWORD *)(v4 + *(int *)(v24 + 20));
        v26 = type metadata accessor for ToolKitProtoTypedValue(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(v25, 1, v26))
        {
          if ((~*v25 & 0xF000000000000007) != 0)
            swift_release();
          v27 = (char *)v25 + *(int *)(v26 + 20);
          v28 = sub_2408E57A4();
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v27, v28);
        }
        v16 = *(int *)(v24 + 24);
        goto LABEL_52;
      case 7u:
        v29 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 48))(v4, 1, v29))
          goto LABEL_50;
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload != 2)
        {
          if (EnumCaseMultiPayload == 1)
          {
            v31 = type metadata accessor for TranscriptProtoPermissionRequirement(0);
          }
          else
          {
            if (EnumCaseMultiPayload)
              goto LABEL_50;
            v31 = type metadata accessor for TranscriptProtoAppRequirement(0);
          }
LABEL_49:
          v47 = v4 + *(int *)(v31 + 20);
          v48 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 8))(v47, v48);
LABEL_50:
          v17 = type metadata accessor for TranscriptProtoActionRequirement(0);
LABEL_51:
          v16 = *(int *)(v17 + 20);
LABEL_52:
          v49 = v4 + v16;
          v50 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 8))(v49, v50);
          goto LABEL_53;
        }
        v39 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 48))(v4, 1, v39))
          goto LABEL_48;
        v40 = swift_getEnumCaseMultiPayload();
        if (v40 == 1)
        {
          v42 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 48))(v4, 1, v42))
          {
            v43 = v4 + *(int *)(v42 + 20);
            v44 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 8))(v43, v44);
          }
          v41 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0);
        }
        else
        {
          if (v40)
          {
LABEL_48:
            v31 = type metadata accessor for TranscriptProtoSystemRequirementMessage(0);
            goto LABEL_49;
          }
          swift_bridgeObjectRelease();
          v41 = type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0);
        }
        v45 = v4 + *(int *)(v41 + 20);
        v46 = sub_2408E57A4();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 8))(v45, v46);
        goto LABEL_48;
      case 8u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v16 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
        goto LABEL_52;
      case 9u:
        v32 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 48))(v4, 1, v32))
        {
          v33 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v4, 1, v33))
          {
            v34 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 48))(v4, 16, v34))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v35 = v4 + *(int *)(v34 + 28);
              v36 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 8))(v35, v36);
            }
          }
          v37 = v4 + *(int *)(v32 + 20);
          v38 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 8))(v37, v38);
        }
        v17 = type metadata accessor for TranscriptProtoActionFailure(0);
        goto LABEL_51;
      case 0xAu:
        swift_bridgeObjectRelease();
        v17 = type metadata accessor for TranscriptProtoValueDisambiguation(0);
        goto LABEL_51;
      default:
        goto LABEL_53;
    }
  }
LABEL_54:
  v53 = a1 + a2[8];
  v54 = (int *)type metadata accessor for TranscriptProtoResponseOutput(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v54 - 1) + 48))(v53, 1, v54))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v55 = v53 + v54[7];
    v56 = type metadata accessor for TranscriptProtoDialogType(0);
    v57 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 48);
    if (!v57(v55, 1, v56))
    {
      v58 = type metadata accessor for TranscriptProtoDialogFormat(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 48))(v55, 1, v58))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            swift_bridgeObjectRelease();
            v60 = type metadata accessor for TranscriptProtoStaticText(0);
            goto LABEL_62;
          case 1u:
            swift_bridgeObjectRelease();
            v60 = type metadata accessor for TranscriptProtoSonicText(0);
            goto LABEL_62;
          case 2u:
            swift_bridgeObjectRelease();
            v60 = type metadata accessor for TranscriptProtoGeneratedText(0);
LABEL_62:
            v61 = v55 + *(int *)(v60 + 20);
            v62 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 8))(v61, v62);
            break;
          case 3u:
          case 4u:
            v59 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 8))(v55, v59);
            break;
          default:
            break;
        }
      }
      v63 = v55 + *(int *)(v56 + 20);
      v64 = sub_2408E57A4();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 8))(v63, v64);
    }
    v65 = v53 + v54[8];
    if (!v57(v65, 1, v56))
    {
      v66 = type metadata accessor for TranscriptProtoDialogFormat(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 48))(v65, 1, v66))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            swift_bridgeObjectRelease();
            v68 = type metadata accessor for TranscriptProtoStaticText(0);
            goto LABEL_71;
          case 1u:
            swift_bridgeObjectRelease();
            v68 = type metadata accessor for TranscriptProtoSonicText(0);
            goto LABEL_71;
          case 2u:
            swift_bridgeObjectRelease();
            v68 = type metadata accessor for TranscriptProtoGeneratedText(0);
LABEL_71:
            v69 = v65 + *(int *)(v68 + 20);
            v70 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 8))(v69, v70);
            break;
          case 3u:
          case 4u:
            v67 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 8))(v65, v67);
            break;
          default:
            break;
        }
      }
      v71 = v65 + *(int *)(v56 + 20);
      v72 = sub_2408E57A4();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 8))(v71, v72);
    }
    v73 = v53 + v54[9];
    v74 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 8))(v73, v74);
  }
  v75 = a1 + a2[9];
  v76 = type metadata accessor for TranscriptProtoStatementID(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 48))(v75, 1, v76))
  {
    swift_bridgeObjectRelease();
    v77 = v75 + *(int *)(v76 + 24);
    v78 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 8))(v77, v78);
  }
  swift_bridgeObjectRelease();
  v79 = a1 + a2[11];
  v80 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v80 - 8) + 8))(v79, v80);
}

_QWORD *initializeWithCopy for TranscriptProtoSystemResponse(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  int *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  unsigned int (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;
  unsigned int (*v35)(char *, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  void (*v72)(char *, char *, uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  _QWORD *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  void (*v82)(char *, char *, uint64_t);
  unsigned int (*v84)(char *, uint64_t, uint64_t);
  uint64_t v85;
  _QWORD *v86;

  v3 = a2;
  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  a1[4] = a2[4];
  v7 = a3[7];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    v14 = a3;
  }
  else
  {
    v15 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v9, 1, v15))
    {
      v17 = (char *)&loc_2406C8B50 + 4 * byte_240903A6A[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    v14 = a3;
    v18 = *(int *)(v10 + 20);
    v19 = &v8[v18];
    v20 = &v9[v18];
    v21 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v22 = v14[8];
  v23 = (_QWORD *)((char *)a1 + v22);
  v24 = (_QWORD *)((char *)v3 + v22);
  v25 = (int *)type metadata accessor for TranscriptProtoResponseOutput(0);
  v26 = *((_QWORD *)v25 - 1);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v26 + 48))(v24, 1, v25))
  {
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA400);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    v86 = v3;
    v28 = v26;
    *v23 = *v24;
    *((_BYTE *)v23 + 8) = *((_BYTE *)v24 + 8);
    v23[2] = v24[2];
    v29 = v25[7];
    v30 = (char *)v23 + v29;
    v31 = (char *)v24 + v29;
    v32 = type metadata accessor for TranscriptProtoDialogType(0);
    v85 = *(_QWORD *)(v32 - 8);
    v33 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v85 + 48);
    v34 = v32;
    swift_bridgeObjectRetain();
    v35 = v33;
    swift_bridgeObjectRetain();
    if (v33(v31, 1, v34))
    {
      v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F8);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      v37 = v28;
      v3 = v86;
    }
    else
    {
      v84 = v33;
      v38 = type metadata accessor for TranscriptProtoDialogFormat(0);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 48))(v31, 1, v38))
      {
        v41 = (char *)&loc_2406C9828 + 4 * byte_240903A75[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F0);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      v37 = v28;
      v40 = v30;
      v3 = v86;
      v42 = *(int *)(v34 + 20);
      v43 = &v40[v42];
      v44 = &v31[v42];
      v45 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v43, v44, v45);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v40, 0, 1, v34);
      v35 = v84;
    }
    v46 = v25[8];
    v47 = (char *)v23 + v46;
    v48 = (char *)v24 + v46;
    if (v35((char *)v24 + v46, 1, v34))
    {
      v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F8);
      memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    }
    else
    {
      v50 = type metadata accessor for TranscriptProtoDialogFormat(0);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 48))(v48, 1, v50))
      {
        v52 = (char *)&loc_2406C99F4 + 4 * byte_240903A7A[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F0);
      memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
      v53 = *(int *)(v34 + 20);
      v54 = &v47[v53];
      v55 = &v48[v53];
      v56 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 16))(v54, v55, v56);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v47, 0, 1, v34);
    }
    v57 = v25[9];
    v58 = (char *)v23 + v57;
    v59 = (char *)v24 + v57;
    v60 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 16))(v58, v59, v60);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v37 + 56))(v23, 0, 1, v25);
    v14 = a3;
  }
  v61 = v14[9];
  v62 = (_QWORD *)((char *)a1 + v61);
  v63 = (_QWORD *)((char *)v3 + v61);
  v64 = type metadata accessor for TranscriptProtoStatementID(0);
  v65 = *(_QWORD *)(v64 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v65 + 48))(v63, 1, v64))
  {
    v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v62 = *(_DWORD *)v63;
    v67 = v63[2];
    v62[1] = v63[1];
    v62[2] = v67;
    v68 = *(int *)(v64 + 24);
    v69 = (char *)v62 + v68;
    v70 = (char *)v63 + v68;
    v71 = sub_2408E57A4();
    v72 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v71 - 8) + 16);
    swift_bridgeObjectRetain();
    v73 = v71;
    v14 = a3;
    v72(v69, v70, v73);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v62, 0, 1, v64);
  }
  v74 = v14[10];
  v75 = v14[11];
  v76 = (_QWORD *)((char *)a1 + v74);
  v77 = (_QWORD *)((char *)v3 + v74);
  v78 = v77[1];
  *v76 = *v77;
  v76[1] = v78;
  v79 = (char *)a1 + v75;
  v80 = (char *)v3 + v75;
  v81 = sub_2408E57A4();
  v82 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v81 - 8) + 16);
  swift_bridgeObjectRetain();
  v82(v79, v80, v81);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoSystemResponse(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t, uint64_t);
  int v19;
  int v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  int *v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t, uint64_t, int *);
  int v39;
  int v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  unsigned int (*v45)(char *, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)(char *, uint64_t, uint64_t);
  int v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t (*v63)(char *, uint64_t, uint64_t);
  int v64;
  int v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  int v100;
  int v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t (*v106)(char *, uint64_t, uint64_t);
  int v107;
  int v108;
  char *v109;
  char *v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  _QWORD *v122;
  _QWORD *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t (*v126)(_QWORD *, uint64_t, uint64_t);
  int v127;
  int v128;
  uint64_t v129;
  char *v130;
  _QWORD *v131;
  int *v132;
  uint64_t v133;
  void (*v134)(char *, char *, uint64_t);
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  _QWORD *v138;
  _QWORD *v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v145;
  char *v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  _QWORD *v155;
  _QWORD *v156;
  char *v157;
  int *v158;
  int *v159;

  v4 = a2;
  v5 = a1;
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5[2] = v4[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5[3] = v4[3];
  v5[4] = v4[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[7];
  v7 = (char *)v5 + v6;
  v8 = (char *)v4 + v6;
  v9 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (v13)
    {
      sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoStatementOutcome);
      goto LABEL_7;
    }
    v158 = a3;
    v17 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
    v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48);
    v19 = v18(v7, 1, v17);
    v20 = v18(v8, 1, v17);
    if (v19)
    {
      if (!v20)
      {
        v21 = (char *)&loc_2406C9E40 + 4 * word_240903A96[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
    }
    else
    {
      if (!v20)
      {
        a3 = v158;
        if (v5 != v4)
        {
          sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
          v24 = (char *)&loc_2406C9FE4 + 4 * word_240903AAC[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        goto LABEL_17;
      }
      sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    }
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    a3 = v158;
LABEL_17:
    v29 = *(int *)(v9 + 20);
    v30 = &v7[v29];
    v31 = &v8[v29];
    v32 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 24))(v30, v31, v32);
    goto LABEL_18;
  }
  if (v13)
  {
LABEL_7:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_18;
  }
  v14 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v8, 1, v14))
  {
    v22 = (char *)&loc_2406C9EF0 + 4 * word_240903A80[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
  memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  v25 = *(int *)(v9 + 20);
  v26 = &v7[v25];
  v27 = &v8[v25];
  v28 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_18:
  v33 = a3[8];
  v34 = (uint64_t)v5 + v33;
  v35 = (char *)v4 + v33;
  v36 = (int *)type metadata accessor for TranscriptProtoResponseOutput(0);
  v37 = *((_QWORD *)v36 - 1);
  v38 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v37 + 48);
  v39 = v38(v34, 1, v36);
  v40 = v38((uint64_t)v35, 1, v36);
  if (v39)
  {
    if (!v40)
    {
      v156 = v5;
      v159 = a3;
      *(_QWORD *)v34 = *(_QWORD *)v35;
      *(_BYTE *)(v34 + 8) = v35[8];
      *(_QWORD *)(v34 + 16) = *((_QWORD *)v35 + 2);
      v41 = v36[7];
      v42 = (char *)(v34 + v41);
      v43 = &v35[v41];
      v44 = type metadata accessor for TranscriptProtoDialogType(0);
      v153 = *(_QWORD *)(v44 - 8);
      v45 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v153 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v45(v43, 1, v44))
      {
        v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F8);
        memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
      }
      else
      {
        v58 = type metadata accessor for TranscriptProtoDialogFormat(0);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 48))(v43, 1, v58))
        {
          v61 = (char *)&loc_2406CC51C + 4 * byte_240903AC2[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F0);
        memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
        v69 = *(int *)(v44 + 20);
        v70 = &v42[v69];
        v71 = &v43[v69];
        v72 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v72 - 8) + 16))(v70, v71, v72);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v153 + 56))(v42, 0, 1, v44);
      }
      v73 = v36[8];
      v74 = (char *)(v34 + v73);
      v75 = &v35[v73];
      if (v45(&v35[v73], 1, v44))
      {
        v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F8);
        memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
      }
      else
      {
        v77 = type metadata accessor for TranscriptProtoDialogFormat(0);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 48))(v75, 1, v77))
        {
          v79 = (char *)&loc_2406CC828 + 4 * byte_240903AC7[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F0);
        memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
        v80 = *(int *)(v44 + 20);
        v81 = &v74[v80];
        v82 = &v75[v80];
        v83 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v83 - 8) + 16))(v81, v82, v83);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v153 + 56))(v74, 0, 1, v44);
      }
      v84 = v36[9];
      v85 = v34 + v84;
      v86 = &v35[v84];
      v87 = sub_2408E57A4();
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v87 - 8) + 16))(v85, v86, v87);
      (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v37 + 56))(v34, 0, 1, v36);
      goto LABEL_69;
    }
LABEL_24:
    v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA400);
    memcpy((void *)v34, v35, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    goto LABEL_70;
  }
  if (v40)
  {
    sub_240388AE4(v34, type metadata accessor for TranscriptProtoResponseOutput);
    goto LABEL_24;
  }
  v156 = v5;
  v159 = a3;
  v155 = v4;
  *(_QWORD *)v34 = *(_QWORD *)v35;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v34 + 8) = v35[8];
  *(_QWORD *)(v34 + 16) = *((_QWORD *)v35 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v48 = v36[7];
  v49 = (char *)(v34 + v48);
  v50 = &v35[v48];
  v51 = type metadata accessor for TranscriptProtoDialogType(0);
  v52 = *(_QWORD *)(v51 - 8);
  v53 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v52 + 48);
  v54 = v53(v49, 1, v51);
  v55 = v53(v50, 1, v51);
  if (!v54)
  {
    if (v55)
    {
      sub_240388AE4((uint64_t)v49, type metadata accessor for TranscriptProtoDialogType);
      goto LABEL_33;
    }
    v154 = v52;
    v62 = type metadata accessor for TranscriptProtoDialogFormat(0);
    v63 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 48);
    v64 = v63(v49, 1, v62);
    v65 = v63(v50, 1, v62);
    if (v64)
    {
      if (!v65)
      {
        v66 = (char *)&loc_2406CC5B4 + 4 * word_240903AD6[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
    }
    else
    {
      if (!v65)
      {
        v52 = v154;
        if (v156 != v155)
        {
          sub_240388AE4((uint64_t)v49, type metadata accessor for TranscriptProtoDialogFormat);
          v88 = (char *)&loc_2406CC9F0 + 4 * word_240903AE0[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        goto LABEL_50;
      }
      sub_240388AE4((uint64_t)v49, type metadata accessor for TranscriptProtoDialogFormat);
    }
    v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F0);
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
    v52 = v154;
LABEL_50:
    v93 = *(int *)(v51 + 20);
    v94 = &v49[v93];
    v95 = &v50[v93];
    v96 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v96 - 8) + 24))(v94, v95, v96);
    goto LABEL_51;
  }
  if (v55)
  {
LABEL_33:
    v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F8);
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    goto LABEL_51;
  }
  v56 = type metadata accessor for TranscriptProtoDialogFormat(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 48))(v50, 1, v56))
  {
    v67 = (char *)&loc_2406CC604 + 4 * word_240903ACC[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F0);
  memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
  v89 = *(int *)(v51 + 20);
  v90 = &v49[v89];
  v91 = &v50[v89];
  v92 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v92 - 8) + 16))(v90, v91, v92);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
LABEL_51:
  v97 = v36[8];
  v98 = (char *)(v34 + v97);
  v99 = &v35[v97];
  v100 = v53((char *)(v34 + v97), 1, v51);
  v101 = v53(v99, 1, v51);
  if (!v100)
  {
    if (v101)
    {
      sub_240388AE4((uint64_t)v98, type metadata accessor for TranscriptProtoDialogType);
      goto LABEL_57;
    }
    v105 = type metadata accessor for TranscriptProtoDialogFormat(0);
    v106 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v105 - 8) + 48);
    v107 = v106(v98, 1, v105);
    v108 = v106(v99, 1, v105);
    if (v107)
    {
      if (!v108)
      {
        v109 = (char *)&loc_2406CCD84 + 4 * word_240903AF0[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
    }
    else
    {
      if (!v108)
      {
        v4 = v155;
        if (v156 != v155)
        {
          sub_240388AE4((uint64_t)v98, type metadata accessor for TranscriptProtoDialogFormat);
          v112 = (char *)&loc_2406CCE78 + 4 * word_240903AFA[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        goto LABEL_78;
      }
      sub_240388AE4((uint64_t)v98, type metadata accessor for TranscriptProtoDialogFormat);
    }
    v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F0);
    memcpy(v98, v99, *(_QWORD *)(*(_QWORD *)(v111 - 8) + 64));
    v4 = v155;
LABEL_78:
    v149 = *(int *)(v51 + 20);
    v150 = &v98[v149];
    v151 = &v99[v149];
    v152 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v152 - 8) + 24))(v150, v151, v152);
    goto LABEL_68;
  }
  if (!v101)
  {
    v102 = type metadata accessor for TranscriptProtoDialogFormat(0);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v102 - 8) + 48))(v99, 1, v102))
    {
      v110 = (char *)&loc_2406CCDD4 + 4 * byte_240903AEA[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F0);
    memcpy(v98, v99, *(_QWORD *)(*(_QWORD *)(v103 - 8) + 64));
    v113 = *(int *)(v51 + 20);
    v114 = &v98[v113];
    v115 = &v99[v113];
    v116 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v116 - 8) + 16))(v114, v115, v116);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v98, 0, 1, v51);
    goto LABEL_67;
  }
LABEL_57:
  v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F8);
  memcpy(v98, v99, *(_QWORD *)(*(_QWORD *)(v104 - 8) + 64));
LABEL_67:
  v4 = v155;
LABEL_68:
  v117 = v36[9];
  v118 = v34 + v117;
  v119 = &v35[v117];
  v120 = sub_2408E57A4();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v120 - 8) + 24))(v118, v119, v120);
LABEL_69:
  v5 = v156;
  a3 = v159;
LABEL_70:
  v121 = a3[9];
  v122 = (_QWORD *)((char *)v5 + v121);
  v123 = (_QWORD *)((char *)v4 + v121);
  v124 = type metadata accessor for TranscriptProtoStatementID(0);
  v125 = *(_QWORD *)(v124 - 8);
  v126 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v125 + 48);
  v127 = v126(v122, 1, v124);
  v128 = v126(v123, 1, v124);
  if (!v127)
  {
    if (!v128)
    {
      *(_DWORD *)v122 = *(_DWORD *)v123;
      v122[1] = v123[1];
      v122[2] = v123[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v145 = *(int *)(v124 + 24);
      v146 = (char *)v122 + v145;
      v147 = (char *)v123 + v145;
      v148 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v148 - 8) + 24))(v146, v147, v148);
      goto LABEL_76;
    }
    sub_240388AE4((uint64_t)v122, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_75;
  }
  if (v128)
  {
LABEL_75:
    v136 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v122, v123, *(_QWORD *)(*(_QWORD *)(v136 - 8) + 64));
    goto LABEL_76;
  }
  *(_DWORD *)v122 = *(_DWORD *)v123;
  v122[1] = v123[1];
  v122[2] = v123[2];
  v129 = *(int *)(v124 + 24);
  v130 = (char *)v122 + v129;
  v157 = (char *)v123 + v129;
  v131 = v4;
  v132 = a3;
  v133 = sub_2408E57A4();
  v134 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v133 - 8) + 16);
  swift_bridgeObjectRetain();
  v135 = v133;
  a3 = v132;
  v4 = v131;
  v134(v130, v157, v135);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v125 + 56))(v122, 0, 1, v124);
LABEL_76:
  v137 = a3[10];
  v138 = (_QWORD *)((char *)v5 + v137);
  v139 = (_QWORD *)((char *)v4 + v137);
  *v138 = *v139;
  v138[1] = v139[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v140 = a3[11];
  v141 = (char *)v5 + v140;
  v142 = (char *)v4 + v140;
  v143 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v143 - 8) + 24))(v141, v142, v143);
  return v5;
}

void sub_2406CD2F0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(char *, char *, uint64_t);
  char *v5;
  char *v6;

  *v0 = *v1;
  v0[1] = v1[1];
  v2 = *(int *)(type metadata accessor for TranscriptProtoSonicText(0) + 20);
  v5 = (char *)v1 + v2;
  v6 = (char *)v0 + v2;
  v3 = sub_2408E57A4();
  v4 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v3 - 8) + 16);
  swift_bridgeObjectRetain();
  v4(v6, v5, v3);
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x2406CCC30);
}

void sub_2406CD358()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(char *, char *, uint64_t);
  char *v5;
  char *v6;

  *v0 = *v1;
  v0[1] = v1[1];
  v2 = *(int *)(type metadata accessor for TranscriptProtoGeneratedText(0) + 20);
  v5 = (char *)v1 + v2;
  v6 = (char *)v0 + v2;
  v3 = sub_2408E57A4();
  v4 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v3 - 8) + 16);
  swift_bridgeObjectRetain();
  v4(v6, v5, v3);
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x2406CCC30);
}

void sub_2406CD3C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v0, v1, v2);
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x2406CCC30);
}

void sub_2406CD3F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v0, v1, v2);
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x2406CCC30);
}

void sub_2406CD428()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(char *, char *, uint64_t);
  char *v5;
  char *v6;

  *v0 = *v1;
  v0[1] = v1[1];
  v2 = *(int *)(type metadata accessor for TranscriptProtoSonicText(0) + 20);
  v5 = (char *)v1 + v2;
  v6 = (char *)v0 + v2;
  v3 = sub_2408E57A4();
  v4 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v3 - 8) + 16);
  swift_bridgeObjectRetain();
  v4(v6, v5, v3);
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x2406CD2C0);
}

void sub_2406CD490()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(char *, char *, uint64_t);
  char *v5;
  char *v6;

  *v0 = *v1;
  v0[1] = v1[1];
  v2 = *(int *)(type metadata accessor for TranscriptProtoGeneratedText(0) + 20);
  v5 = (char *)v1 + v2;
  v6 = (char *)v0 + v2;
  v3 = sub_2408E57A4();
  v4 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v3 - 8) + 16);
  swift_bridgeObjectRetain();
  v4(v6, v5, v3);
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x2406CD2C0);
}

void sub_2406CD4F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v0, v1, v2);
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x2406CD2C0);
}

void sub_2406CD52C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v0, v1, v2);
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x2406CD2C0);
}

uint64_t initializeWithTake for TranscriptProtoSystemResponse(uint64_t a1, uint64_t a2, int *a3)
{
  int *v3;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  _DWORD *v53;
  _DWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v67;
  int *v68;
  int *v69;
  unsigned int (*v70)(char *, uint64_t, uint64_t);

  v3 = a3;
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v6 = a3[7];
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  v9 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v12 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v8, 1, v12))
    {
      v14 = (char *)&loc_2406CD7D0 + 4 * byte_240903B04[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    v15 = *(int *)(v9 + 20);
    v16 = &v7[v15];
    v17 = &v8[v15];
    v18 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v19 = v3[8];
  v20 = (_QWORD *)(a1 + v19);
  v21 = (_QWORD *)(a2 + v19);
  v22 = (int *)type metadata accessor for TranscriptProtoResponseOutput(0);
  v23 = *((_QWORD *)v22 - 1);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v23 + 48))(v21, 1, v22))
  {
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA400);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    *v20 = *v21;
    *((_BYTE *)v20 + 8) = *((_BYTE *)v21 + 8);
    v20[2] = v21[2];
    v25 = v22[7];
    v26 = (char *)v20 + v25;
    v27 = (char *)v21 + v25;
    v28 = type metadata accessor for TranscriptProtoDialogType(0);
    v67 = *(_QWORD *)(v28 - 8);
    v70 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48);
    if (v70(v27, 1, v28))
    {
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F8);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      v68 = v3;
      v30 = type metadata accessor for TranscriptProtoDialogFormat(0);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 48))(v27, 1, v30))
      {
        v32 = (char *)&loc_2406CE2FC + 4 * byte_240903B0F[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F0);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      v33 = *(int *)(v28 + 20);
      v34 = &v26[v33];
      v35 = &v27[v33];
      v36 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v34, v35, v36);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v26, 0, 1, v28);
      v3 = v68;
    }
    v37 = v22[8];
    v38 = (char *)v20 + v37;
    v39 = (char *)v21 + v37;
    if (v70((char *)v21 + v37, 1, v28))
    {
      v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F8);
      memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      v69 = v3;
      v41 = type metadata accessor for TranscriptProtoDialogFormat(0);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 48))(v39, 1, v41))
      {
        v43 = (char *)&loc_2406CE4C8 + 4 * byte_240903B14[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F0);
      memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      v44 = *(int *)(v28 + 20);
      v45 = &v38[v44];
      v46 = &v39[v44];
      v47 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(v45, v46, v47);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v38, 0, 1, v28);
      v3 = v69;
    }
    v48 = v22[9];
    v49 = (char *)v20 + v48;
    v50 = (char *)v21 + v48;
    v51 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(v49, v50, v51);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v23 + 56))(v20, 0, 1, v22);
  }
  v52 = v3[9];
  v53 = (_DWORD *)(a1 + v52);
  v54 = (_DWORD *)(a2 + v52);
  v55 = type metadata accessor for TranscriptProtoStatementID(0);
  v56 = *(_QWORD *)(v55 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55))
  {
    v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
  }
  else
  {
    *v53 = *v54;
    *(_OWORD *)(v53 + 2) = *(_OWORD *)(v54 + 2);
    v58 = *(int *)(v55 + 24);
    v59 = (char *)v53 + v58;
    v60 = (char *)v54 + v58;
    v61 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v59, v60, v61);
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
  }
  v62 = v3[11];
  *(_OWORD *)(a1 + v3[10]) = *(_OWORD *)(a2 + v3[10]);
  v63 = a1 + v62;
  v64 = a2 + v62;
  v65 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 32))(v63, v64, v65);
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoSystemResponse(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  int v21;
  int v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  int *v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t, uint64_t, int *);
  int v41;
  int v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  unsigned int (*v47)(char *, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(char *, uint64_t, uint64_t);
  int v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t (*v65)(char *, uint64_t, uint64_t);
  int v66;
  int v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  int v102;
  int v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t (*v108)(char *, uint64_t, uint64_t);
  int v109;
  int v110;
  char *v111;
  char *v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t (*v128)(uint64_t, uint64_t, uint64_t);
  int v129;
  int v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  _QWORD *v137;
  uint64_t *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  _QWORD *v158;
  _QWORD *v159;
  _QWORD *v160;
  int *v161;

  v4 = a2;
  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = v4[2];
  swift_bridgeObjectRelease();
  v7 = v4[4];
  a1[3] = v4[3];
  a1[4] = v7;
  swift_bridgeObjectRelease();
  v8 = a3[7];
  v9 = (char *)a1 + v8;
  v10 = (char *)v4 + v8;
  v11 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (v15)
    {
      sub_240388AE4((uint64_t)v9, type metadata accessor for TranscriptProtoStatementOutcome);
      goto LABEL_7;
    }
    v19 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
    v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48);
    v21 = v20(v9, 1, v19);
    v22 = v20(v10, 1, v19);
    if (v21)
    {
      if (!v22)
      {
        v23 = (char *)&loc_2406CE8A8 + 4 * word_240903B24[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
    }
    else
    {
      if (!v22)
      {
        if (a1 != v4)
        {
          sub_240388AE4((uint64_t)v9, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
          v26 = (char *)&loc_2406CEA38 + 4 * word_240903B3A[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        goto LABEL_17;
      }
      sub_240388AE4((uint64_t)v9, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    }
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
LABEL_17:
    v31 = *(int *)(v11 + 20);
    v32 = &v9[v31];
    v33 = &v10[v31];
    v34 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
    goto LABEL_18;
  }
  if (v15)
  {
LABEL_7:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E8);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_18;
  }
  v16 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v10, 1, v16))
  {
    v24 = (char *)&loc_2406CE94C + 4 * byte_240903B19[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
  memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  v27 = *(int *)(v11 + 20);
  v28 = &v9[v27];
  v29 = &v10[v27];
  v30 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_18:
  v35 = a3[8];
  v36 = (uint64_t)a1 + v35;
  v37 = (char *)v4 + v35;
  v38 = (int *)type metadata accessor for TranscriptProtoResponseOutput(0);
  v39 = *((_QWORD *)v38 - 1);
  v40 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v39 + 48);
  v41 = v40(v36, 1, v38);
  v42 = v40((uint64_t)v37, 1, v38);
  if (v41)
  {
    if (!v42)
    {
      v161 = a3;
      *(_QWORD *)v36 = *(_QWORD *)v37;
      *(_BYTE *)(v36 + 8) = v37[8];
      *(_QWORD *)(v36 + 16) = *((_QWORD *)v37 + 2);
      v43 = v38[7];
      v44 = (char *)(v36 + v43);
      v45 = &v37[v43];
      v46 = type metadata accessor for TranscriptProtoDialogType(0);
      v156 = *(_QWORD *)(v46 - 8);
      v47 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v156 + 48);
      if (v47(v45, 1, v46))
      {
        v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F8);
        memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
      }
      else
      {
        v159 = v4;
        v60 = type metadata accessor for TranscriptProtoDialogFormat(0);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 48))(v45, 1, v60))
        {
          v63 = (char *)&loc_2406D0A88 + 4 * byte_240903B50[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F0);
        memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
        v71 = *(int *)(v46 + 20);
        v72 = &v44[v71];
        v73 = &v45[v71];
        v74 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v74 - 8) + 32))(v72, v73, v74);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v156 + 56))(v44, 0, 1, v46);
        v4 = v159;
      }
      v75 = v38[8];
      v76 = (char *)(v36 + v75);
      v77 = &v37[v75];
      if (v47(&v37[v75], 1, v46))
      {
        v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F8);
        memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
      }
      else
      {
        v160 = v4;
        v79 = type metadata accessor for TranscriptProtoDialogFormat(0);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 48))(v77, 1, v79))
        {
          v81 = (char *)&loc_2406D0D70 + 4 * byte_240903B55[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F0);
        memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
        v82 = *(int *)(v46 + 20);
        v83 = &v76[v82];
        v84 = &v77[v82];
        v85 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v85 - 8) + 32))(v83, v84, v85);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v156 + 56))(v76, 0, 1, v46);
        v4 = v160;
      }
      v86 = v38[9];
      v87 = v36 + v86;
      v88 = &v37[v86];
      v89 = sub_2408E57A4();
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v89 - 8) + 32))(v87, v88, v89);
      (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v39 + 56))(v36, 0, 1, v38);
      goto LABEL_69;
    }
LABEL_24:
    v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA400);
    memcpy((void *)v36, v37, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    goto LABEL_70;
  }
  if (v42)
  {
    sub_240388AE4(v36, type metadata accessor for TranscriptProtoResponseOutput);
    goto LABEL_24;
  }
  v158 = v4;
  v161 = a3;
  *(_QWORD *)v36 = *(_QWORD *)v37;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v36 + 8) = v37[8];
  *(_QWORD *)(v36 + 16) = *((_QWORD *)v37 + 2);
  swift_bridgeObjectRelease();
  v50 = v38[7];
  v51 = (char *)(v36 + v50);
  v52 = &v37[v50];
  v53 = type metadata accessor for TranscriptProtoDialogType(0);
  v54 = *(_QWORD *)(v53 - 8);
  v55 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v54 + 48);
  v56 = v55(v51, 1, v53);
  v57 = v55(v52, 1, v53);
  if (!v56)
  {
    if (v57)
    {
      sub_240388AE4((uint64_t)v51, type metadata accessor for TranscriptProtoDialogType);
      goto LABEL_33;
    }
    v155 = v53;
    v157 = v54;
    v64 = type metadata accessor for TranscriptProtoDialogFormat(0);
    v65 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 48);
    v66 = v65(v51, 1, v64);
    v67 = v65(v52, 1, v64);
    if (v66)
    {
      v53 = v155;
      if (!v67)
      {
        v68 = (char *)&loc_2406D0B28 + 4 * word_240903B60[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
    }
    else
    {
      v53 = v155;
      if (!v67)
      {
        v54 = v157;
        if (a1 != v158)
        {
          sub_240388AE4((uint64_t)v51, type metadata accessor for TranscriptProtoDialogFormat);
          v90 = (char *)&loc_2406D0EF4 + 4 * word_240903B6A[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        goto LABEL_50;
      }
      sub_240388AE4((uint64_t)v51, type metadata accessor for TranscriptProtoDialogFormat);
    }
    v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F0);
    memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
    v54 = v157;
LABEL_50:
    v95 = *(int *)(v53 + 20);
    v96 = &v51[v95];
    v97 = &v52[v95];
    v98 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 40))(v96, v97, v98);
    goto LABEL_51;
  }
  if (v57)
  {
LABEL_33:
    v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F8);
    memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
    goto LABEL_51;
  }
  v58 = type metadata accessor for TranscriptProtoDialogFormat(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 48))(v52, 1, v58))
  {
    v69 = (char *)&loc_2406D0B74 + 4 * byte_240903B5A[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F0);
  memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
  v91 = *(int *)(v53 + 20);
  v92 = &v51[v91];
  v93 = &v52[v91];
  v94 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v94 - 8) + 32))(v92, v93, v94);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
LABEL_51:
  v99 = v38[8];
  v100 = (char *)(v36 + v99);
  v101 = &v37[v99];
  v102 = v55((char *)(v36 + v99), 1, v53);
  v103 = v55(v101, 1, v53);
  if (!v102)
  {
    if (v103)
    {
      sub_240388AE4((uint64_t)v100, type metadata accessor for TranscriptProtoDialogType);
      goto LABEL_57;
    }
    v107 = type metadata accessor for TranscriptProtoDialogFormat(0);
    v108 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v107 - 8) + 48);
    v109 = v108(v100, 1, v107);
    v110 = v108(v101, 1, v107);
    if (v109)
    {
      if (!v110)
      {
        v111 = (char *)&loc_2406D1228 + 4 * byte_240903B79[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
    }
    else
    {
      if (!v110)
      {
        v4 = v158;
        if (a1 != v158)
        {
          sub_240388AE4((uint64_t)v100, type metadata accessor for TranscriptProtoDialogFormat);
          v114 = (char *)&loc_2406D1318 + 4 * word_240903B7E[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        goto LABEL_78;
      }
      sub_240388AE4((uint64_t)v100, type metadata accessor for TranscriptProtoDialogFormat);
    }
    v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F0);
    memcpy(v100, v101, *(_QWORD *)(*(_QWORD *)(v113 - 8) + 64));
    v4 = v158;
LABEL_78:
    v151 = *(int *)(v53 + 20);
    v152 = &v100[v151];
    v153 = &v101[v151];
    v154 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v154 - 8) + 40))(v152, v153, v154);
    goto LABEL_68;
  }
  if (!v103)
  {
    v104 = type metadata accessor for TranscriptProtoDialogFormat(0);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v104 - 8) + 48))(v101, 1, v104))
    {
      v112 = (char *)&loc_2406D1274 + 4 * byte_240903B74[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F0);
    memcpy(v100, v101, *(_QWORD *)(*(_QWORD *)(v105 - 8) + 64));
    v115 = *(int *)(v53 + 20);
    v116 = &v100[v115];
    v117 = &v101[v115];
    v118 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v118 - 8) + 32))(v116, v117, v118);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v100, 0, 1, v53);
    goto LABEL_67;
  }
LABEL_57:
  v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3F8);
  memcpy(v100, v101, *(_QWORD *)(*(_QWORD *)(v106 - 8) + 64));
LABEL_67:
  v4 = v158;
LABEL_68:
  v119 = v38[9];
  v120 = v36 + v119;
  v121 = &v37[v119];
  v122 = sub_2408E57A4();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v122 - 8) + 40))(v120, v121, v122);
LABEL_69:
  a3 = v161;
LABEL_70:
  v123 = a3[9];
  v124 = (uint64_t)a1 + v123;
  v125 = (char *)v4 + v123;
  v126 = type metadata accessor for TranscriptProtoStatementID(0);
  v127 = *(_QWORD *)(v126 - 8);
  v128 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v127 + 48);
  v129 = v128(v124, 1, v126);
  v130 = v128((uint64_t)v125, 1, v126);
  if (!v129)
  {
    if (!v130)
    {
      *(_DWORD *)v124 = *(_DWORD *)v125;
      v146 = *((_QWORD *)v125 + 2);
      *(_QWORD *)(v124 + 8) = *((_QWORD *)v125 + 1);
      *(_QWORD *)(v124 + 16) = v146;
      swift_bridgeObjectRelease();
      v147 = *(int *)(v126 + 24);
      v148 = v124 + v147;
      v149 = &v125[v147];
      v150 = sub_2408E57A4();
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v150 - 8) + 40))(v148, v149, v150);
      goto LABEL_76;
    }
    sub_240388AE4(v124, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_75;
  }
  if (v130)
  {
LABEL_75:
    v135 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy((void *)v124, v125, *(_QWORD *)(*(_QWORD *)(v135 - 8) + 64));
    goto LABEL_76;
  }
  *(_DWORD *)v124 = *(_DWORD *)v125;
  *(_OWORD *)(v124 + 8) = *(_OWORD *)(v125 + 8);
  v131 = *(int *)(v126 + 24);
  v132 = v124 + v131;
  v133 = &v125[v131];
  v134 = sub_2408E57A4();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v134 - 8) + 32))(v132, v133, v134);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v127 + 56))(v124, 0, 1, v126);
LABEL_76:
  v136 = a3[10];
  v137 = (_QWORD *)((char *)a1 + v136);
  v138 = (_QWORD *)((char *)v4 + v136);
  v140 = *v138;
  v139 = v138[1];
  *v137 = v140;
  v137[1] = v139;
  swift_bridgeObjectRelease();
  v141 = a3[11];
  v142 = (char *)a1 + v141;
  v143 = (char *)v4 + v141;
  v144 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v144 - 8) + 40))(v142, v143, v144);
  return a1;
}

void sub_2406D16C4()
{
  _OWORD *v0;
  _OWORD *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;

  *v0 = *v1;
  v2 = *(int *)(type metadata accessor for TranscriptProtoSonicText(0) + 20);
  v3 = (char *)v0 + v2;
  v5 = (char *)v1 + v2;
  v4 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(v3, v5, v4);
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x2406D10C4);
}

void sub_2406D1718()
{
  _OWORD *v0;
  _OWORD *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;

  *v0 = *v1;
  v2 = *(int *)(type metadata accessor for TranscriptProtoGeneratedText(0) + 20);
  v3 = (char *)v0 + v2;
  v5 = (char *)v1 + v2;
  v4 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(v3, v5, v4);
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x2406D10C4);
}

void sub_2406D176C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32))(v0, v1, v2);
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x2406D10C4);
}

void sub_2406D17A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32))(v0, v1, v2);
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x2406D10C4);
}

void sub_2406D17D4()
{
  _OWORD *v0;
  _OWORD *v1;
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;

  *v0 = *v1;
  v2 = *(int *)(type metadata accessor for TranscriptProtoSonicText(0) + 20);
  v3 = (char *)v0 + v2;
  v4 = (char *)v1 + v2;
  v5 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v3, v4, v5);
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x2406D1694);
}

void sub_2406D1828()
{
  _OWORD *v0;
  _OWORD *v1;
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;

  *v0 = *v1;
  v2 = *(int *)(type metadata accessor for TranscriptProtoGeneratedText(0) + 20);
  v3 = (char *)v0 + v2;
  v4 = (char *)v1 + v2;
  v5 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v3, v4, v5);
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x2406D1694);
}

void sub_2406D187C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32))(v0, v1, v2);
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x2406D1694);
}

void sub_2406D18B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32))(v0, v1, v2);
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x2406D1694);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoSystemResponse()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406D1A54(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E8);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[7];
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA400);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[8];
      }
      else
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
        {
          v10 = v13;
          v11 = a3[9];
        }
        else
        {
          v10 = sub_2408E57A4();
          v9 = *(_QWORD *)(v10 - 8);
          v11 = a3[11];
        }
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoSystemResponse()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406D1B54(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E8);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[7];
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA400);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[8];
      }
      else
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == a3)
        {
          v10 = v13;
          v11 = a4[9];
        }
        else
        {
          v10 = sub_2408E57A4();
          v9 = *(_QWORD *)(v10 - 8);
          v11 = a4[11];
        }
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_2406D1C44()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_2403C8BE4(319, qword_257003778, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementOutcome);
  if (v0 <= 0x3F)
  {
    sub_2403C8BE4(319, qword_25700AD18, (void (*)(uint64_t))type metadata accessor for TranscriptProtoResponseOutput);
    if (v1 <= 0x3F)
    {
      sub_2403C8BE4(319, qword_256FFCBE0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementID);
      if (v2 <= 0x3F)
      {
        sub_2408E57A4();
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for TranscriptProtoInterpretedStatementResult(_QWORD *a1, char *a2, int *a3)
{
  char *v3;
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  int *v29;
  _QWORD *v30;
  char *v31;
  void (*v32)(char *, char *, uint64_t);
  char *v33;
  uint64_t v34;
  _QWORD *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  int *v42;
  _QWORD *v43;
  char *v44;
  void (*v45)(char *, char *, uint64_t);
  char *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  char *v50;
  uint64_t v51;
  _QWORD *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  _QWORD *v65;
  char *v66;
  void (*v67)(char *, char *, uint64_t);
  void (*v68)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  int *v78;

  v3 = a2;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *(_QWORD *)a2;
    *a1 = *(_QWORD *)a2;
    a1 = (_QWORD *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a3;
    v7 = type metadata accessor for TranscriptProtoStatementOutcome(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v3, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E8);
      memcpy(a1, v3, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v11 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v3, 1, v11))
      {
        v13 = (char *)&loc_2406D1E6C + 4 * word_240903B88[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
      memcpy(a1, v3, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      v14 = *(int *)(v7 + 20);
      v15 = (char *)a1 + v14;
      v16 = &v3[v14];
      v17 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v18 = v6[5];
    v19 = (_QWORD *)((char *)a1 + v18);
    v20 = &v3[v18];
    v21 = type metadata accessor for TranscriptProtoStatementID(0);
    v22 = *(_QWORD *)(v21 - 8);
    v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
    if (v23(v20, 1, v21))
    {
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      *(_DWORD *)v19 = *(_DWORD *)v20;
      v25 = *((_QWORD *)v20 + 2);
      v19[1] = *((_QWORD *)v20 + 1);
      v19[2] = v25;
      v26 = *(int *)(v21 + 24);
      v76 = v22;
      v27 = (char *)v19 + v26;
      v74 = &v20[v26];
      v28 = sub_2408E57A4();
      v29 = v6;
      v30 = a1;
      v31 = v3;
      v32 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16);
      swift_bridgeObjectRetain();
      v33 = v27;
      v22 = v76;
      v32(v33, v74, v28);
      v3 = v31;
      a1 = v30;
      v6 = v29;
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v76 + 56))(v19, 0, 1, v21);
    }
    v34 = v6[6];
    v35 = (_QWORD *)((char *)a1 + v34);
    v36 = &v3[v34];
    if (v23(&v3[v34], 1, v21))
    {
      v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      *(_DWORD *)v35 = *(_DWORD *)v36;
      v38 = *((_QWORD *)v36 + 2);
      v35[1] = *((_QWORD *)v36 + 1);
      v35[2] = v38;
      v39 = *(int *)(v21 + 24);
      v77 = v22;
      v40 = (char *)v35 + v39;
      v75 = &v36[v39];
      v41 = sub_2408E57A4();
      v42 = v6;
      v43 = a1;
      v44 = v3;
      v45 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16);
      swift_bridgeObjectRetain();
      v46 = v40;
      v22 = v77;
      v45(v46, v75, v41);
      v3 = v44;
      a1 = v43;
      v6 = v42;
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v77 + 56))(v35, 0, 1, v21);
    }
    v47 = v6[7];
    v48 = v6[8];
    v49 = (_QWORD *)((char *)a1 + v47);
    v50 = &v3[v47];
    v51 = *((_QWORD *)v50 + 1);
    *v49 = *(_QWORD *)v50;
    v49[1] = v51;
    v52 = (_QWORD *)((char *)a1 + v48);
    v53 = &v3[v48];
    v54 = *((_QWORD *)v53 + 1);
    *v52 = *(_QWORD *)v53;
    v52[1] = v54;
    v55 = v6[9];
    v56 = (_QWORD *)((char *)a1 + v55);
    v57 = &v3[v55];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v23(v57, 1, v21))
    {
      v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
      memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    }
    else
    {
      *(_DWORD *)v56 = *(_DWORD *)v57;
      v59 = *((_QWORD *)v57 + 2);
      v56[1] = *((_QWORD *)v57 + 1);
      v56[2] = v59;
      v60 = *(int *)(v21 + 24);
      v78 = v6;
      v61 = v22;
      v62 = (char *)v56 + v60;
      v63 = &v57[v60];
      v64 = sub_2408E57A4();
      v65 = a1;
      v66 = v3;
      v67 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 16);
      swift_bridgeObjectRetain();
      v67(v62, v63, v64);
      v3 = v66;
      a1 = v65;
      v68 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v61 + 56);
      v6 = v78;
      v68(v56, 0, 1, v21);
    }
    v69 = v6[10];
    v70 = (char *)a1 + v69;
    v71 = &v3[v69];
    v72 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v72 - 8) + 16))(v70, v71, v72);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoInterpretedStatementResult(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  int EnumCaseMultiPayload;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int (*v54)(uint64_t, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v4 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4))
  {
    v5 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(a1, 1, v5))
    {
LABEL_53:
      v50 = a1 + *(int *)(v4 + 20);
      v51 = sub_2408E57A4();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 8))(v50, v51);
      goto LABEL_54;
    }
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v6 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
        v7 = (_QWORD *)(a1 + v6[6]);
        v8 = type metadata accessor for ToolKitProtoTypedValue(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
        {
          if ((~*v7 & 0xF000000000000007) != 0)
            swift_release();
          v9 = (char *)v7 + *(int *)(v8 + 20);
          v10 = sub_2408E57A4();
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
        }
        v11 = a1 + v6[7];
        v12 = type metadata accessor for TranscriptProtoUndoContext(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v13 = v11 + *(int *)(v12 + 28);
          v14 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
        }
        v15 = v6[8];
        goto LABEL_52;
      case 1u:
        swift_bridgeObjectRelease();
        v16 = type metadata accessor for TranscriptProtoActionConfirmation(0);
        goto LABEL_51;
      case 2u:
        swift_bridgeObjectRelease();
        v16 = type metadata accessor for TranscriptProtoParameterNeedsValue(0);
        goto LABEL_51;
      case 3u:
        swift_bridgeObjectRelease();
        v17 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
        goto LABEL_16;
      case 4u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v15 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
        goto LABEL_52;
      case 5u:
        swift_bridgeObjectRelease();
        v17 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
LABEL_16:
        v18 = v17;
        v19 = (_QWORD *)(a1 + *(int *)(v17 + 24));
        v20 = type metadata accessor for ToolKitProtoTypedValue(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v19, 1, v20))
        {
          if ((~*v19 & 0xF000000000000007) != 0)
            swift_release();
          v21 = (char *)v19 + *(int *)(v20 + 20);
          v22 = sub_2408E57A4();
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
        }
        v15 = *(int *)(v18 + 28);
        goto LABEL_52;
      case 6u:
        swift_bridgeObjectRelease();
        v23 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
        v24 = (_QWORD *)(a1 + *(int *)(v23 + 20));
        v25 = type metadata accessor for ToolKitProtoTypedValue(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(v24, 1, v25))
        {
          if ((~*v24 & 0xF000000000000007) != 0)
            swift_release();
          v26 = (char *)v24 + *(int *)(v25 + 20);
          v27 = sub_2408E57A4();
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v26, v27);
        }
        v15 = *(int *)(v23 + 24);
        goto LABEL_52;
      case 7u:
        v28 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 48))(a1, 1, v28))
          goto LABEL_50;
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload != 2)
        {
          if (EnumCaseMultiPayload == 1)
          {
            v30 = type metadata accessor for TranscriptProtoPermissionRequirement(0);
          }
          else
          {
            if (EnumCaseMultiPayload)
              goto LABEL_50;
            v30 = type metadata accessor for TranscriptProtoAppRequirement(0);
          }
LABEL_49:
          v46 = a1 + *(int *)(v30 + 20);
          v47 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 8))(v46, v47);
LABEL_50:
          v16 = type metadata accessor for TranscriptProtoActionRequirement(0);
LABEL_51:
          v15 = *(int *)(v16 + 20);
LABEL_52:
          v48 = a1 + v15;
          v49 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 8))(v48, v49);
          goto LABEL_53;
        }
        v38 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 48))(a1, 1, v38))
          goto LABEL_48;
        v39 = swift_getEnumCaseMultiPayload();
        if (v39 == 1)
        {
          v41 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 48))(a1, 1, v41))
          {
            v42 = a1 + *(int *)(v41 + 20);
            v43 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 8))(v42, v43);
          }
          v40 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0);
        }
        else
        {
          if (v39)
          {
LABEL_48:
            v30 = type metadata accessor for TranscriptProtoSystemRequirementMessage(0);
            goto LABEL_49;
          }
          swift_bridgeObjectRelease();
          v40 = type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0);
        }
        v44 = a1 + *(int *)(v40 + 20);
        v45 = sub_2408E57A4();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 8))(v44, v45);
        goto LABEL_48;
      case 8u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v15 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
        goto LABEL_52;
      case 9u:
        v31 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 48))(a1, 1, v31))
        {
          v32 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 48))(a1, 1, v32))
          {
            v33 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(a1, 16, v33))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v34 = a1 + *(int *)(v33 + 28);
              v35 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 8))(v34, v35);
            }
          }
          v36 = a1 + *(int *)(v31 + 20);
          v37 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 8))(v36, v37);
        }
        v16 = type metadata accessor for TranscriptProtoActionFailure(0);
        goto LABEL_51;
      case 0xAu:
        swift_bridgeObjectRelease();
        v16 = type metadata accessor for TranscriptProtoValueDisambiguation(0);
        goto LABEL_51;
      default:
        goto LABEL_53;
    }
  }
LABEL_54:
  v52 = a1 + a2[5];
  v53 = type metadata accessor for TranscriptProtoStatementID(0);
  v54 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 48);
  if (!v54(v52, 1, v53))
  {
    swift_bridgeObjectRelease();
    v55 = v52 + *(int *)(v53 + 24);
    v56 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 8))(v55, v56);
  }
  v57 = a1 + a2[6];
  if (!v54(v57, 1, v53))
  {
    swift_bridgeObjectRelease();
    v58 = v57 + *(int *)(v53 + 24);
    v59 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 8))(v58, v59);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v60 = a1 + a2[9];
  if (!v54(v60, 1, v53))
  {
    swift_bridgeObjectRelease();
    v61 = v60 + *(int *)(v53 + 24);
    v62 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 8))(v61, v62);
  }
  v63 = a1 + a2[10];
  v64 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 8))(v63, v64);
}

char *initializeWithCopy for TranscriptProtoInterpretedStatementResult(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  int *v27;
  char *v28;
  char *v29;
  void (*v30)(char *, char *, uint64_t);
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  int *v40;
  char *v41;
  char *v42;
  void (*v43)(char *, char *, uint64_t);
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  void (*v65)(char *, char *, uint64_t);
  void (*v66)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  int *v76;

  v6 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a2, 1, v9))
    {
      v11 = (char *)&loc_2406D36F8 + 4 * word_240903BAA[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    v12 = *(int *)(v6 + 20);
    v13 = &a1[v12];
    v14 = &a2[v12];
    v15 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v16 = a3[5];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = type metadata accessor for TranscriptProtoStatementID(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
  if (v21(v18, 1, v19))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v17 = *(_DWORD *)v18;
    v23 = *((_QWORD *)v18 + 2);
    *((_QWORD *)v17 + 1) = *((_QWORD *)v18 + 1);
    *((_QWORD *)v17 + 2) = v23;
    v24 = *(int *)(v19 + 24);
    v74 = v20;
    v25 = &v17[v24];
    v72 = &v18[v24];
    v26 = sub_2408E57A4();
    v27 = a3;
    v28 = a1;
    v29 = a2;
    v30 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
    swift_bridgeObjectRetain();
    v31 = v25;
    v20 = v74;
    v30(v31, v72, v26);
    a2 = v29;
    a1 = v28;
    a3 = v27;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v74 + 56))(v17, 0, 1, v19);
  }
  v32 = a3[6];
  v33 = &a1[v32];
  v34 = &a2[v32];
  if (v21(&a2[v32], 1, v19))
  {
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v33 = *(_DWORD *)v34;
    v36 = *((_QWORD *)v34 + 2);
    *((_QWORD *)v33 + 1) = *((_QWORD *)v34 + 1);
    *((_QWORD *)v33 + 2) = v36;
    v37 = *(int *)(v19 + 24);
    v75 = v20;
    v38 = &v33[v37];
    v73 = &v34[v37];
    v39 = sub_2408E57A4();
    v40 = a3;
    v41 = a1;
    v42 = a2;
    v43 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16);
    swift_bridgeObjectRetain();
    v44 = v38;
    v20 = v75;
    v43(v44, v73, v39);
    a2 = v42;
    a1 = v41;
    a3 = v40;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v33, 0, 1, v19);
  }
  v45 = a3[7];
  v46 = a3[8];
  v47 = &a1[v45];
  v48 = &a2[v45];
  v49 = *((_QWORD *)v48 + 1);
  *(_QWORD *)v47 = *(_QWORD *)v48;
  *((_QWORD *)v47 + 1) = v49;
  v50 = &a1[v46];
  v51 = &a2[v46];
  v52 = *((_QWORD *)v51 + 1);
  *(_QWORD *)v50 = *(_QWORD *)v51;
  *((_QWORD *)v50 + 1) = v52;
  v53 = a3[9];
  v54 = &a1[v53];
  v55 = &a2[v53];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v21(v55, 1, v19))
  {
    v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v54 = *(_DWORD *)v55;
    v57 = *((_QWORD *)v55 + 2);
    *((_QWORD *)v54 + 1) = *((_QWORD *)v55 + 1);
    *((_QWORD *)v54 + 2) = v57;
    v58 = *(int *)(v19 + 24);
    v76 = a3;
    v59 = v20;
    v60 = &v54[v58];
    v61 = &v55[v58];
    v62 = sub_2408E57A4();
    v63 = a1;
    v64 = a2;
    v65 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 16);
    swift_bridgeObjectRetain();
    v65(v60, v61, v62);
    a2 = v64;
    a1 = v63;
    v66 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56);
    a3 = v76;
    v66(v54, 0, 1, v19);
  }
  v67 = a3[10];
  v68 = &a1[v67];
  v69 = &a2[v67];
  v70 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 16))(v68, v69, v70);
  return a1;
}

char *assignWithCopy for TranscriptProtoInterpretedStatementResult(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t (*v35)(char *, uint64_t, uint64_t);
  int v36;
  int v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  int *v41;
  char *v42;
  char *v43;
  void (*v44)(char *, char *, uint64_t);
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  int v50;
  int v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  int *v55;
  char *v56;
  char *v57;
  void (*v58)(char *, char *, uint64_t);
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  int v70;
  int v71;
  uint64_t v72;
  _QWORD *v73;
  char *v74;
  char *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  void (*v79)(char *, char *, uint64_t);
  void (*v80)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  char *v99;
  char *v100;
  _QWORD *__src;
  _QWORD *__srca;
  int *__srcb;

  v6 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_240388AE4((uint64_t)a1, type metadata accessor for TranscriptProtoStatementOutcome);
      goto LABEL_7;
    }
    v14 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
    v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48);
    v16 = v15(a1, 1, v14);
    v17 = v15(a2, 1, v14);
    if (v16)
    {
      if (!v17)
      {
        v18 = (char *)&loc_2406D4914 + 4 * word_240903BD6[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
    }
    else
    {
      if (!v17)
      {
        if (a1 != a2)
        {
          sub_240388AE4((uint64_t)a1, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
          v21 = (char *)&loc_2406D4AA4 + 4 * word_240903BEC[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        goto LABEL_17;
      }
      sub_240388AE4((uint64_t)a1, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    }
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
LABEL_17:
    v26 = *(int *)(v6 + 20);
    v27 = &a1[v26];
    v28 = &a2[v26];
    v29 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 24))(v27, v28, v29);
    goto LABEL_18;
  }
  if (v10)
  {
LABEL_7:
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_18;
  }
  v11 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(a2, 1, v11))
  {
    v19 = (char *)&loc_2406D49B4 + 4 * word_240903BC0[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  v22 = *(int *)(v6 + 20);
  v23 = &a1[v22];
  v24 = &a2[v22];
  v25 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_18:
  v30 = a3[5];
  v31 = &a1[v30];
  v32 = &a2[v30];
  v33 = type metadata accessor for TranscriptProtoStatementID(0);
  v34 = *(_QWORD **)(v33 - 8);
  v35 = (uint64_t (*)(char *, uint64_t, uint64_t))v34[6];
  v36 = v35(v31, 1, v33);
  v37 = v35(v32, 1, v33);
  if (v36)
  {
    if (!v37)
    {
      *(_DWORD *)v31 = *(_DWORD *)v32;
      *((_QWORD *)v31 + 1) = *((_QWORD *)v32 + 1);
      *((_QWORD *)v31 + 2) = *((_QWORD *)v32 + 2);
      v38 = *(int *)(v33 + 24);
      __src = v34;
      v39 = &v31[v38];
      v99 = &v32[v38];
      v40 = sub_2408E57A4();
      v41 = a3;
      v42 = a1;
      v43 = a2;
      v44 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16);
      swift_bridgeObjectRetain();
      v45 = v39;
      v34 = __src;
      v44(v45, v99, v40);
      a2 = v43;
      a1 = v42;
      a3 = v41;
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))__src[7])(v31, 0, 1, v33);
      goto LABEL_24;
    }
    goto LABEL_23;
  }
  if (v37)
  {
    sub_240388AE4((uint64_t)v31, type metadata accessor for TranscriptProtoStatementID);
LABEL_23:
    v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    goto LABEL_24;
  }
  *(_DWORD *)v31 = *(_DWORD *)v32;
  *((_QWORD *)v31 + 1) = *((_QWORD *)v32 + 1);
  *((_QWORD *)v31 + 2) = *((_QWORD *)v32 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v87 = *(int *)(v33 + 24);
  v88 = &v31[v87];
  v89 = &v32[v87];
  v90 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v90 - 8) + 24))(v88, v89, v90);
LABEL_24:
  v47 = a3[6];
  v48 = &a1[v47];
  v49 = &a2[v47];
  v50 = v35(&a1[v47], 1, v33);
  v51 = v35(v49, 1, v33);
  if (v50)
  {
    if (!v51)
    {
      *(_DWORD *)v48 = *(_DWORD *)v49;
      *((_QWORD *)v48 + 1) = *((_QWORD *)v49 + 1);
      *((_QWORD *)v48 + 2) = *((_QWORD *)v49 + 2);
      v52 = *(int *)(v33 + 24);
      __srca = v34;
      v53 = &v48[v52];
      v100 = &v49[v52];
      v54 = sub_2408E57A4();
      v55 = a3;
      v56 = a1;
      v57 = a2;
      v58 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 16);
      swift_bridgeObjectRetain();
      v59 = v53;
      v34 = __srca;
      v58(v59, v100, v54);
      a2 = v57;
      a1 = v56;
      a3 = v55;
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))__srca[7])(v48, 0, 1, v33);
      goto LABEL_30;
    }
    goto LABEL_29;
  }
  if (v51)
  {
    sub_240388AE4((uint64_t)v48, type metadata accessor for TranscriptProtoStatementID);
LABEL_29:
    v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    goto LABEL_30;
  }
  *(_DWORD *)v48 = *(_DWORD *)v49;
  *((_QWORD *)v48 + 1) = *((_QWORD *)v49 + 1);
  *((_QWORD *)v48 + 2) = *((_QWORD *)v49 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v91 = *(int *)(v33 + 24);
  v92 = &v48[v91];
  v93 = &v49[v91];
  v94 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v94 - 8) + 24))(v92, v93, v94);
LABEL_30:
  v61 = a3[7];
  v62 = &a1[v61];
  v63 = &a2[v61];
  *(_QWORD *)v62 = *(_QWORD *)v63;
  *((_QWORD *)v62 + 1) = *((_QWORD *)v63 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v64 = a3[8];
  v65 = &a1[v64];
  v66 = &a2[v64];
  *(_QWORD *)v65 = *(_QWORD *)v66;
  *((_QWORD *)v65 + 1) = *((_QWORD *)v66 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v67 = a3[9];
  v68 = &a1[v67];
  v69 = &a2[v67];
  v70 = v35(&a1[v67], 1, v33);
  v71 = v35(v69, 1, v33);
  if (!v70)
  {
    if (!v71)
    {
      *(_DWORD *)v68 = *(_DWORD *)v69;
      *((_QWORD *)v68 + 1) = *((_QWORD *)v69 + 1);
      *((_QWORD *)v68 + 2) = *((_QWORD *)v69 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v95 = *(int *)(v33 + 24);
      v96 = &v68[v95];
      v97 = &v69[v95];
      v98 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 24))(v96, v97, v98);
      goto LABEL_36;
    }
    sub_240388AE4((uint64_t)v68, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_35;
  }
  if (v71)
  {
LABEL_35:
    v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
    goto LABEL_36;
  }
  *(_DWORD *)v68 = *(_DWORD *)v69;
  *((_QWORD *)v68 + 1) = *((_QWORD *)v69 + 1);
  *((_QWORD *)v68 + 2) = *((_QWORD *)v69 + 2);
  v72 = *(int *)(v33 + 24);
  __srcb = a3;
  v73 = v34;
  v74 = &v68[v72];
  v75 = &v69[v72];
  v76 = sub_2408E57A4();
  v77 = a1;
  v78 = a2;
  v79 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v76 - 8) + 16);
  swift_bridgeObjectRetain();
  v79(v74, v75, v76);
  a2 = v78;
  a1 = v77;
  v80 = (void (*)(char *, _QWORD, uint64_t, uint64_t))v73[7];
  a3 = __srcb;
  v80(v68, 0, 1, v33);
LABEL_36:
  v82 = a3[10];
  v83 = &a1[v82];
  v84 = &a2[v82];
  v85 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v85 - 8) + 24))(v83, v84, v85);
  return a1;
}

char *initializeWithTake for TranscriptProtoInterpretedStatementResult(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;

  v6 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a2, 1, v9))
    {
      v11 = (char *)&loc_2406D7984 + 4 * byte_240903C02[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    v12 = *(int *)(v6 + 20);
    v13 = &a1[v12];
    v14 = &a2[v12];
    v15 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v16 = a3[5];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = type metadata accessor for TranscriptProtoStatementID(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
  if (v21(v18, 1, v19))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v17 = *(_DWORD *)v18;
    *(_OWORD *)(v17 + 8) = *(_OWORD *)(v18 + 8);
    v23 = *(int *)(v19 + 24);
    v24 = &v17[v23];
    v25 = &v18[v23];
    v26 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  v27 = a3[6];
  v28 = &a1[v27];
  v29 = &a2[v27];
  if (v21(&a2[v27], 1, v19))
  {
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v28 = *(_DWORD *)v29;
    *(_OWORD *)(v28 + 8) = *(_OWORD *)(v29 + 8);
    v31 = *(int *)(v19 + 24);
    v32 = &v28[v31];
    v33 = &v29[v31];
    v34 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v32, v33, v34);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v28, 0, 1, v19);
  }
  v35 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  *(_OWORD *)&a1[v35] = *(_OWORD *)&a2[v35];
  v36 = a3[9];
  v37 = &a1[v36];
  v38 = &a2[v36];
  if (v21(&a2[v36], 1, v19))
  {
    v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v37 = *(_DWORD *)v38;
    *(_OWORD *)(v37 + 8) = *(_OWORD *)(v38 + 8);
    v40 = *(int *)(v19 + 24);
    v41 = &v37[v40];
    v42 = &v38[v40];
    v43 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v41, v42, v43);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v37, 0, 1, v19);
  }
  v44 = a3[10];
  v45 = &a1[v44];
  v46 = &a2[v44];
  v47 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(v45, v46, v47);
  return a1;
}

char *assignWithTake for TranscriptProtoInterpretedStatementResult(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(char *, uint64_t, uint64_t);
  int v36;
  int v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  int v46;
  int v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  int v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;

  v6 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_240388AE4((uint64_t)a1, type metadata accessor for TranscriptProtoStatementOutcome);
      goto LABEL_7;
    }
    v14 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
    v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48);
    v16 = v15(a1, 1, v14);
    v17 = v15(a2, 1, v14);
    if (v16)
    {
      if (!v17)
      {
        v18 = (char *)&loc_2406D8940 + 4 * word_240903C24[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
    }
    else
    {
      if (!v17)
      {
        if (a1 != a2)
        {
          sub_240388AE4((uint64_t)a1, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
          v21 = (char *)&loc_2406D8ABC + 4 * word_240903C3A[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        goto LABEL_17;
      }
      sub_240388AE4((uint64_t)a1, type metadata accessor for TranscriptProtoStatementOutcomeEnum);
    }
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
LABEL_17:
    v26 = *(int *)(v6 + 20);
    v27 = &a1[v26];
    v28 = &a2[v26];
    v29 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 40))(v27, v28, v29);
    goto LABEL_18;
  }
  if (v10)
  {
LABEL_7:
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_18;
  }
  v11 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(a2, 1, v11))
  {
    v19 = (char *)&loc_2406D89D4 + 4 * word_240903C0E[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  v22 = *(int *)(v6 + 20);
  v23 = &a1[v22];
  v24 = &a2[v22];
  v25 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_18:
  v30 = a3[5];
  v31 = &a1[v30];
  v32 = &a2[v30];
  v33 = type metadata accessor for TranscriptProtoStatementID(0);
  v34 = *(_QWORD *)(v33 - 8);
  v35 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48);
  v36 = v35(v31, 1, v33);
  v37 = v35(v32, 1, v33);
  if (v36)
  {
    if (!v37)
    {
      *(_DWORD *)v31 = *(_DWORD *)v32;
      *(_OWORD *)(v31 + 8) = *(_OWORD *)(v32 + 8);
      v38 = *(int *)(v33 + 24);
      v39 = &v31[v38];
      v40 = &v32[v38];
      v41 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v39, v40, v41);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
      goto LABEL_24;
    }
    goto LABEL_23;
  }
  if (v37)
  {
    sub_240388AE4((uint64_t)v31, type metadata accessor for TranscriptProtoStatementID);
LABEL_23:
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    goto LABEL_24;
  }
  *(_DWORD *)v31 = *(_DWORD *)v32;
  v78 = *((_QWORD *)v32 + 2);
  *((_QWORD *)v31 + 1) = *((_QWORD *)v32 + 1);
  *((_QWORD *)v31 + 2) = v78;
  swift_bridgeObjectRelease();
  v79 = *(int *)(v33 + 24);
  v80 = &v31[v79];
  v81 = &v32[v79];
  v82 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v82 - 8) + 40))(v80, v81, v82);
LABEL_24:
  v43 = a3[6];
  v44 = &a1[v43];
  v45 = &a2[v43];
  v46 = v35(&a1[v43], 1, v33);
  v47 = v35(v45, 1, v33);
  if (v46)
  {
    if (!v47)
    {
      *(_DWORD *)v44 = *(_DWORD *)v45;
      *(_OWORD *)(v44 + 8) = *(_OWORD *)(v45 + 8);
      v48 = *(int *)(v33 + 24);
      v49 = &v44[v48];
      v50 = &v45[v48];
      v51 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(v49, v50, v51);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v44, 0, 1, v33);
      goto LABEL_30;
    }
    goto LABEL_29;
  }
  if (v47)
  {
    sub_240388AE4((uint64_t)v44, type metadata accessor for TranscriptProtoStatementID);
LABEL_29:
    v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    goto LABEL_30;
  }
  *(_DWORD *)v44 = *(_DWORD *)v45;
  v83 = *((_QWORD *)v45 + 2);
  *((_QWORD *)v44 + 1) = *((_QWORD *)v45 + 1);
  *((_QWORD *)v44 + 2) = v83;
  swift_bridgeObjectRelease();
  v84 = *(int *)(v33 + 24);
  v85 = &v44[v84];
  v86 = &v45[v84];
  v87 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v87 - 8) + 40))(v85, v86, v87);
LABEL_30:
  v53 = a3[7];
  v54 = &a1[v53];
  v55 = &a2[v53];
  v57 = *(_QWORD *)v55;
  v56 = *((_QWORD *)v55 + 1);
  *(_QWORD *)v54 = v57;
  *((_QWORD *)v54 + 1) = v56;
  swift_bridgeObjectRelease();
  v58 = a3[8];
  v59 = &a1[v58];
  v60 = &a2[v58];
  v62 = *(_QWORD *)v60;
  v61 = *((_QWORD *)v60 + 1);
  *(_QWORD *)v59 = v62;
  *((_QWORD *)v59 + 1) = v61;
  swift_bridgeObjectRelease();
  v63 = a3[9];
  v64 = (uint64_t)&a1[v63];
  v65 = &a2[v63];
  v66 = v35(&a1[v63], 1, v33);
  v67 = v35(v65, 1, v33);
  if (!v66)
  {
    if (!v67)
    {
      *(_DWORD *)v64 = *(_DWORD *)v65;
      v88 = *((_QWORD *)v65 + 2);
      *(_QWORD *)(v64 + 8) = *((_QWORD *)v65 + 1);
      *(_QWORD *)(v64 + 16) = v88;
      swift_bridgeObjectRelease();
      v89 = *(int *)(v33 + 24);
      v90 = v64 + v89;
      v91 = &v65[v89];
      v92 = sub_2408E57A4();
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v92 - 8) + 40))(v90, v91, v92);
      goto LABEL_36;
    }
    sub_240388AE4(v64, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_35;
  }
  if (v67)
  {
LABEL_35:
    v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy((void *)v64, v65, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
    goto LABEL_36;
  }
  *(_DWORD *)v64 = *(_DWORD *)v65;
  *(_OWORD *)(v64 + 8) = *(_OWORD *)(v65 + 8);
  v68 = *(int *)(v33 + 24);
  v69 = v64 + v68;
  v70 = &v65[v68];
  v71 = sub_2408E57A4();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v71 - 8) + 32))(v69, v70, v71);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v34 + 56))(v64, 0, 1, v33);
LABEL_36:
  v73 = a3[10];
  v74 = &a1[v73];
  v75 = &a2[v73];
  v76 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v76 - 8) + 40))(v74, v75, v76);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoInterpretedStatementResult()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406DB160(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int v14;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E8);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
  v10 = *(_QWORD *)(v9 - 8);
  if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
  {
    v11 = v9;
    v12 = a3[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1 + v12, a2, v11);
  }
  if ((_DWORD)a2 != 2147483646)
  {
    v11 = sub_2408E57A4();
    v10 = *(_QWORD *)(v11 - 8);
    v12 = a3[10];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1 + v12, a2, v11);
  }
  v13 = *(_QWORD *)(a1 + a3[7] + 8);
  if (v13 >= 0xFFFFFFFF)
    LODWORD(v13) = -1;
  v14 = v13 - 1;
  if (v14 < 0)
    v14 = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoInterpretedStatementResult()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406DB250(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E8);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    result = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    v14 = *(_QWORD *)(result - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = result;
      v15 = a4[5];
    }
    else
    {
      if (a3 == 2147483646)
      {
        *(_QWORD *)(a1 + a4[7] + 8) = a2;
        return result;
      }
      v10 = sub_2408E57A4();
      v14 = *(_QWORD *)(v10 - 8);
      v15 = a4[10];
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_2406DB324()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_2403C8BE4(319, qword_257003778, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementOutcome);
  if (v0 <= 0x3F)
  {
    sub_2403C8BE4(319, qword_256FFCBE0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementID);
    if (v1 <= 0x3F)
    {
      sub_2408E57A4();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for TranscriptProtoProgramStatement(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v3;
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v52;

  v3 = a2;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a3;
    v7 = type metadata accessor for TranscriptProtoStatementID(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v8 + 48))(v3, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
      memcpy(a1, v3, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      *(_DWORD *)a1 = *(_DWORD *)v3;
      v11 = v3[2];
      a1[1] = v3[1];
      a1[2] = v11;
      v12 = *(int *)(v7 + 24);
      v52 = (char *)a1 + v12;
      v13 = (char *)v3 + v12;
      v14 = v3;
      v15 = v7;
      v16 = v6;
      v17 = v8;
      v18 = sub_2408E57A4();
      v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
      swift_bridgeObjectRetain();
      v20 = v18;
      v21 = v17;
      v6 = v16;
      v22 = v15;
      v3 = v14;
      v19(v52, v13, v20);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v21 + 56))(a1, 0, 1, v22);
    }
    v23 = v6[5];
    v24 = (char *)a1 + v23;
    v25 = (char *)v3 + v23;
    v26 = type metadata accessor for TranscriptProtoExpression(0);
    v27 = *(_QWORD *)(v26 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
    {
      v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCFA0);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      v29 = type metadata accessor for TranscriptProtoExpressionEnum(0);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 48))(v25, 1, v29))
      {
        v31 = (char *)&loc_2406DB610 + 4 * word_240903C50[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF98);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      v32 = *(int *)(v26 + 20);
      v33 = &v24[v32];
      v34 = &v25[v32];
      v35 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
    }
    v36 = v6[6];
    v37 = (_QWORD *)((char *)a1 + v36);
    v38 = (_QWORD *)((char *)v3 + v36);
    v39 = type metadata accessor for ToolKitProtoTypeInstance(0);
    v40 = *(_QWORD *)(v39 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
    {
      v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    }
    else
    {
      v42 = *v38;
      if ((~*v38 & 0xF000000000000007) != 0)
        swift_retain();
      *v37 = v42;
      v43 = *(int *)(v39 + 20);
      v44 = (char *)v37 + v43;
      v45 = (char *)v38 + v43;
      v46 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
    }
    v47 = v6[7];
    v48 = (char *)a1 + v47;
    v49 = (char *)v3 + v47;
    v50 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v48, v49, v50);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoProgramStatement(uint64_t a1, int *a2)
{
  uint64_t v4;
  unsigned int (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t v14;
  uint64_t updated;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v4 = type metadata accessor for TranscriptProtoStatementID(0);
  v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48);
  if (!v5(a1, 1, v4))
  {
    swift_bridgeObjectRelease();
    v6 = a1 + *(int *)(v4 + 24);
    v7 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  v8 = a1 + a2[5];
  v9 = type metadata accessor for TranscriptProtoExpression(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
  {
    v10 = type metadata accessor for TranscriptProtoExpressionEnum(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v8, 1, v10))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v12 = type metadata accessor for TranscriptProtoValueExpressionEnum(0);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v8, 1, v12))
            goto LABEL_48;
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          switch(EnumCaseMultiPayload)
          {
            case 5:
              goto LABEL_11;
            case 4:
              swift_bridgeObjectRelease();
              v40 = v8 + *(int *)(type metadata accessor for TranscriptProtoValueExpressionArrayVariant(0) + 20);
              v41 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 8))(v40, v41);
              break;
            case 3:
LABEL_11:
              swift_bridgeObjectRelease();
              break;
          }
LABEL_48:
          v25 = type metadata accessor for TranscriptProtoValueExpression(0);
          goto LABEL_49;
        case 1u:
          swift_bridgeObjectRelease();
          v14 = *(int *)(v4 + 24);
          goto LABEL_50;
        case 2u:
          updated = type metadata accessor for TranscriptProtoPrefixExpression(0);
          goto LABEL_27;
        case 3u:
          v16 = (int *)type metadata accessor for TranscriptProtoInfixExpression(0);
          v17 = v8 + v16[5];
          if (!v5(v17, 1, v4))
          {
            swift_bridgeObjectRelease();
            v18 = v17 + *(int *)(v4 + 24);
            v19 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18, v19);
          }
          v20 = v8 + v16[6];
          if (!v5(v20, 1, v4))
          {
            swift_bridgeObjectRelease();
            v21 = v20 + *(int *)(v4 + 24);
            v22 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
          }
          v14 = v16[7];
          goto LABEL_50;
        case 4u:
          swift_bridgeObjectRelease();
          updated = type metadata accessor for TranscriptProtoDotExpression(0);
          goto LABEL_27;
        case 5u:
          if (!v5(v8, 1, v4))
          {
            swift_bridgeObjectRelease();
            v23 = v8 + *(int *)(v4 + 24);
            v24 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
          }
          updated = type metadata accessor for TranscriptProtoIndexExpression(0);
          goto LABEL_27;
        case 6u:
          swift_bridgeObjectRelease();
          updated = type metadata accessor for TranscriptProtoUpdateParametersExpression(0);
          goto LABEL_27;
        case 7u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v14 = *(int *)(type metadata accessor for TranscriptProtoCallExpression(0) + 24);
          goto LABEL_50;
        case 8u:
          swift_bridgeObjectRelease();
          v25 = type metadata accessor for TranscriptProtoSayExpression(0);
          goto LABEL_49;
        case 9u:
          updated = type metadata accessor for TranscriptProtoPickExpression(0);
LABEL_27:
          v26 = updated;
          v27 = v8 + *(int *)(updated + 20);
          if (!v5(v27, 1, v4))
          {
            swift_bridgeObjectRelease();
            v28 = v27 + *(int *)(v4 + 24);
            v29 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(v28, v29);
          }
          v14 = *(int *)(v26 + 24);
          goto LABEL_50;
        case 0xAu:
          if (!v5(v8, 1, v4))
          {
            swift_bridgeObjectRelease();
            v30 = v8 + *(int *)(v4 + 24);
            v31 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 8))(v30, v31);
          }
          v25 = type metadata accessor for TranscriptProtoConfirmExpression(0);
          goto LABEL_49;
        case 0xBu:
          swift_bridgeObjectRelease();
          v14 = *(int *)(type metadata accessor for TranscriptProtoSearchExpression(0) + 28);
          goto LABEL_50;
        case 0xCu:
          if (!v5(v8, 1, v4))
          {
            swift_bridgeObjectRelease();
            v32 = v8 + *(int *)(v4 + 24);
            v33 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 8))(v32, v33);
          }
          v25 = type metadata accessor for TranscriptProtoPickOneExpression(0);
          goto LABEL_49;
        case 0xDu:
          swift_bridgeObjectRelease();
          v25 = type metadata accessor for TranscriptProtoResolveToolExpression(0);
          goto LABEL_49;
        case 0xEu:
          if (!v5(v8, 1, v4))
          {
            swift_bridgeObjectRelease();
            v34 = v8 + *(int *)(v4 + 24);
            v35 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 8))(v34, v35);
          }
          v25 = type metadata accessor for TranscriptProtoUndoExpression(0);
          goto LABEL_49;
        case 0xFu:
          if (!v5(v8, 1, v4))
          {
            swift_bridgeObjectRelease();
            v36 = v8 + *(int *)(v4 + 24);
            v37 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 8))(v36, v37);
          }
          v25 = type metadata accessor for TranscriptProtoRejectExpression(0);
          goto LABEL_49;
        case 0x10u:
          if (!v5(v8, 1, v4))
          {
            swift_bridgeObjectRelease();
            v38 = v8 + *(int *)(v4 + 24);
            v39 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 8))(v38, v39);
          }
          v25 = type metadata accessor for TranscriptProtoCancelExpression(0);
LABEL_49:
          v14 = *(int *)(v25 + 20);
LABEL_50:
          v42 = v8 + v14;
          v43 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 8))(v42, v43);
          break;
        case 0x11u:
        case 0x12u:
        case 0x13u:
        case 0x14u:
          v11 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v8, v11);
          break;
        default:
          break;
      }
    }
    v44 = v8 + *(int *)(v9 + 20);
    v45 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 8))(v44, v45);
  }
  v46 = (_QWORD *)(a1 + a2[6]);
  v47 = type metadata accessor for ToolKitProtoTypeInstance(0);
  if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 48))(v46, 1, v47))
  {
    if ((~*v46 & 0xF000000000000007) != 0)
      swift_release();
    v48 = (char *)v46 + *(int *)(v47 + 20);
    v49 = sub_2408E57A4();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v49 - 8) + 8))(v48, v49);
  }
  v50 = a1 + a2[7];
  v51 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 8))(v50, v51);
}

_QWORD *initializeWithCopy for TranscriptProtoProgramStatement(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *__dst;

  v6 = type metadata accessor for TranscriptProtoStatementID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    v9 = a2[2];
    a1[1] = a2[1];
    a1[2] = v9;
    v10 = *(int *)(v6 + 24);
    __dst = (char *)a1 + v10;
    v11 = (char *)a2 + v10;
    v12 = v6;
    v13 = a1;
    v14 = a2;
    v15 = v7;
    v16 = sub_2408E57A4();
    v17 = a3;
    v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
    swift_bridgeObjectRetain();
    v19 = v16;
    v20 = v15;
    a2 = v14;
    a1 = v13;
    v18(__dst, v11, v19);
    a3 = v17;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v13, 0, 1, v12);
  }
  v21 = a3[5];
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  v24 = type metadata accessor for TranscriptProtoExpression(0);
  v25 = *(_QWORD *)(v24 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
  {
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCFA0);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    v27 = type metadata accessor for TranscriptProtoExpressionEnum(0);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 48))(v23, 1, v27))
    {
      v29 = (char *)&loc_2406DD06C + 4 * word_240903C90[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF98);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    v30 = *(int *)(v24 + 20);
    v31 = &v22[v30];
    v32 = &v23[v30];
    v33 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v31, v32, v33);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  }
  v34 = a3[6];
  v35 = (_QWORD *)((char *)a1 + v34);
  v36 = (_QWORD *)((char *)a2 + v34);
  v37 = type metadata accessor for ToolKitProtoTypeInstance(0);
  v38 = *(_QWORD *)(v37 - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
  {
    v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    v40 = *v36;
    if ((~*v36 & 0xF000000000000007) != 0)
      swift_retain();
    *v35 = v40;
    v41 = *(int *)(v37 + 20);
    v42 = (char *)v35 + v41;
    v43 = (char *)v36 + v41;
    v44 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v42, v43, v44);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
  }
  v45 = a3[7];
  v46 = (char *)a1 + v45;
  v47 = (char *)a2 + v45;
  v48 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v46, v47, v48);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoProgramStatement(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t (*v7)(_QWORD *, uint64_t, uint64_t);
  int v8;
  int v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(char *, uint64_t, uint64_t);
  int v22;
  size_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(char *, uint64_t, uint64_t);
  int v33;
  int v34;
  size_t v35;
  char *v36;
  char *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)(uint64_t *, uint64_t, uint64_t);
  int v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  int *v73;
  uint64_t v74;
  char *__dst;

  v6 = type metadata accessor for TranscriptProtoStatementID(0);
  v74 = *(_QWORD *)(v6 - 8);
  v7 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v74 + 48);
  v8 = v7(a1, 1, v6);
  v9 = v7(a2, 1, v6);
  if (v8)
  {
    if (!v9)
    {
      *(_DWORD *)a1 = *(_DWORD *)a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      v10 = *(int *)(v6 + 24);
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = sub_2408E57A4();
      v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
      swift_bridgeObjectRetain();
      v14(v11, v12, v13);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v74 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v9)
  {
    sub_240388AE4((uint64_t)a1, type metadata accessor for TranscriptProtoStatementID);
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)a1 = *(_DWORD *)a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v27 = *(int *)(v6 + 24);
  v28 = (char *)a1 + v27;
  v29 = (char *)a2 + v27;
  v30 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
LABEL_7:
  v16 = a3[5];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = type metadata accessor for TranscriptProtoExpression(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  __dst = v17;
  LODWORD(v17) = v21(v17, 1, v19);
  v22 = v21(v18, 1, v19);
  if (!(_DWORD)v17)
  {
    if (v22)
    {
      sub_240388AE4((uint64_t)__dst, type metadata accessor for TranscriptProtoExpression);
      v23 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256FFCFA0) - 8) + 64);
      v24 = __dst;
      goto LABEL_12;
    }
    v73 = a3;
    v31 = type metadata accessor for TranscriptProtoExpressionEnum(0);
    v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 48);
    v33 = v32(__dst, 1, v31);
    v34 = v32(v18, 1, v31);
    if (v33)
    {
      if (!v34)
      {
        v38 = (char *)&loc_2406DE6DC + 4 * word_240903CE4[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v35 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF98) - 8) + 64);
      v36 = __dst;
    }
    else
    {
      if (!v34)
      {
        a3 = v73;
        v36 = __dst;
        if (a1 != a2)
        {
          sub_240388AE4((uint64_t)__dst, type metadata accessor for TranscriptProtoExpressionEnum);
          v39 = (char *)&loc_2406DE774 + 4 * word_240903D0E[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        goto LABEL_26;
      }
      v36 = __dst;
      sub_240388AE4((uint64_t)__dst, type metadata accessor for TranscriptProtoExpressionEnum);
      v35 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF98) - 8) + 64);
    }
    memcpy(v36, v18, v35);
    a3 = v73;
LABEL_26:
    v40 = *(int *)(v19 + 20);
    v41 = &v36[v40];
    v42 = &v18[v40];
    v43 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 24))(v41, v42, v43);
    goto LABEL_27;
  }
  if (v22)
  {
    v23 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256FFCFA0) - 8) + 64);
    v24 = __dst;
LABEL_12:
    memcpy(v24, v18, v23);
    goto LABEL_27;
  }
  v25 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(v18, 1, v25))
  {
    v37 = (char *)&loc_2406DE620 + 4 * word_240903CBA[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF98);
  memcpy(__dst, v18, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  v44 = *(int *)(v19 + 20);
  v45 = &__dst[v44];
  v46 = &v18[v44];
  v47 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v45, v46, v47);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
LABEL_27:
  v48 = a3[6];
  v49 = (_QWORD *)((char *)a1 + v48);
  v50 = (_QWORD *)((char *)a2 + v48);
  v51 = type metadata accessor for ToolKitProtoTypeInstance(0);
  v52 = *(_QWORD *)(v51 - 8);
  v53 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v52 + 48);
  v54 = v53(v49, 1, v51);
  v55 = v53(v50, 1, v51);
  if (!v54)
  {
    if (v55)
    {
      sub_240388AE4((uint64_t)v49, type metadata accessor for ToolKitProtoTypeInstance);
      goto LABEL_34;
    }
    v67 = *v50;
    v68 = *v50 & 0xF000000000000007;
    if ((~*v49 & 0xF000000000000007) != 0)
    {
      if (v68 != 0xF000000000000007)
      {
        *v49 = v67;
        swift_retain();
        swift_release();
        goto LABEL_43;
      }
      sub_2403D4924((uint64_t)v49);
      v67 = *v50;
    }
    else if (v68 != 0xF000000000000007)
    {
      *v49 = v67;
      swift_retain();
LABEL_43:
      v69 = *(int *)(v51 + 20);
      v70 = (char *)v49 + v69;
      v71 = (char *)v50 + v69;
      v72 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v72 - 8) + 24))(v70, v71, v72);
      goto LABEL_35;
    }
    *v49 = v67;
    goto LABEL_43;
  }
  if (v55)
  {
LABEL_34:
    v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
    goto LABEL_35;
  }
  v56 = *v50;
  if ((~*v50 & 0xF000000000000007) != 0)
    swift_retain();
  *v49 = v56;
  v57 = *(int *)(v51 + 20);
  v58 = (char *)v49 + v57;
  v59 = (char *)v50 + v57;
  v60 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 16))(v58, v59, v60);
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
LABEL_35:
  v62 = a3[7];
  v63 = (char *)a1 + v62;
  v64 = (char *)a2 + v62;
  v65 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 24))(v63, v64, v65);
  return a1;
}

_DWORD *initializeWithTake for TranscriptProtoProgramStatement(_DWORD *a1, _DWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  int *v43;

  v6 = type metadata accessor for TranscriptProtoStatementID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    *(_OWORD *)(a1 + 2) = *(_OWORD *)(a2 + 2);
    v9 = *(int *)(v6 + 24);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v13 = a3[5];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = type metadata accessor for TranscriptProtoExpression(0);
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCFA0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    v43 = a3;
    v19 = v14;
    v20 = type metadata accessor for TranscriptProtoExpressionEnum(0);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v15, 1, v20))
    {
      v23 = (char *)&loc_2406E204C + 4 * word_240903D38[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF98);
    v22 = v19;
    memcpy(v19, v15, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    a3 = v43;
    v24 = *(int *)(v16 + 20);
    v25 = &v22[v24];
    v26 = &v15[v24];
    v27 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v22, 0, 1, v16);
  }
  v28 = a3[6];
  v29 = (_QWORD *)((char *)a1 + v28);
  v30 = (_QWORD *)((char *)a2 + v28);
  v31 = type metadata accessor for ToolKitProtoTypeInstance(0);
  v32 = *(_QWORD *)(v31 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
  {
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  else
  {
    *v29 = *v30;
    v34 = *(int *)(v31 + 20);
    v35 = (char *)v29 + v34;
    v36 = (char *)v30 + v34;
    v37 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v35, v36, v37);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
  }
  v38 = a3[7];
  v39 = (char *)a1 + v38;
  v40 = (char *)a2 + v38;
  v41 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v39, v40, v41);
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoProgramStatement(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(char *, uint64_t, uint64_t);
  char *v22;
  int v23;
  size_t v24;
  char *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(char *, uint64_t, uint64_t);
  int v36;
  char *v37;
  int v38;
  size_t v39;
  char *v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)(_QWORD *, uint64_t, uint64_t);
  int v58;
  int v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  int *v75;
  uint64_t v76;
  _QWORD *v77;
  char *__dst;

  v6 = type metadata accessor for TranscriptProtoStatementID(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      *(_DWORD *)a1 = *(_DWORD *)a2;
      *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
      v11 = *(int *)(v6 + 24);
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    sub_240388AE4((uint64_t)a1, type metadata accessor for TranscriptProtoStatementID);
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)a1 = *(_DWORD *)a2;
  v29 = a2[2];
  a1[1] = a2[1];
  a1[2] = v29;
  swift_bridgeObjectRelease();
  v30 = *(int *)(v6 + 24);
  v31 = (char *)a1 + v30;
  v32 = (char *)a2 + v30;
  v33 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 40))(v31, v32, v33);
LABEL_7:
  v16 = a3[5];
  v17 = (char *)a1 + v16;
  v77 = a2;
  v18 = (char *)a2 + v16;
  v19 = type metadata accessor for TranscriptProtoExpression(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  __dst = v17;
  LODWORD(v17) = v21(v17, 1, v19);
  v22 = v18;
  v76 = v19;
  v23 = v21(v18, 1, v19);
  if (!(_DWORD)v17)
  {
    if (v23)
    {
      sub_240388AE4((uint64_t)__dst, type metadata accessor for TranscriptProtoExpression);
      v24 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256FFCFA0) - 8) + 64);
      v25 = __dst;
      goto LABEL_12;
    }
    v75 = a3;
    v34 = type metadata accessor for TranscriptProtoExpressionEnum(0);
    v35 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 48);
    v36 = v35(__dst, 1, v34);
    v37 = v18;
    v38 = v35(v18, 1, v34);
    if (v36)
    {
      if (!v38)
      {
        v42 = (char *)&loc_2406E3524 + 4 * word_240903D8C[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v39 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF98) - 8) + 64);
      v40 = __dst;
    }
    else
    {
      if (!v38)
      {
        v26 = v77;
        v40 = __dst;
        a3 = v75;
        if (a1 != v77)
        {
          sub_240388AE4((uint64_t)__dst, type metadata accessor for TranscriptProtoExpressionEnum);
          v43 = (char *)&loc_2406E35B8 + 4 * word_240903DB6[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        goto LABEL_26;
      }
      v40 = __dst;
      sub_240388AE4((uint64_t)__dst, type metadata accessor for TranscriptProtoExpressionEnum);
      v39 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF98) - 8) + 64);
    }
    memcpy(v40, v18, v39);
    a3 = v75;
    v26 = v77;
LABEL_26:
    v48 = *(int *)(v76 + 20);
    v49 = &v40[v48];
    v50 = &v37[v48];
    v51 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 40))(v49, v50, v51);
    goto LABEL_27;
  }
  if (v23)
  {
    v24 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256FFCFA0) - 8) + 64);
    v25 = __dst;
LABEL_12:
    memcpy(v25, v18, v24);
    v26 = v77;
    goto LABEL_27;
  }
  v27 = type metadata accessor for TranscriptProtoExpressionEnum(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 48))(v18, 1, v27))
  {
    v41 = (char *)&loc_2406E3460 + 4 * word_240903D62[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCF98);
  memcpy(__dst, v18, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  v26 = v77;
  v44 = *(int *)(v19 + 20);
  v45 = &__dst[v44];
  v46 = &v22[v44];
  v47 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(v45, v46, v47);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v76);
LABEL_27:
  v52 = a3[6];
  v53 = (_QWORD *)((char *)a1 + v52);
  v54 = (_QWORD *)((char *)v26 + v52);
  v55 = type metadata accessor for ToolKitProtoTypeInstance(0);
  v56 = *(_QWORD *)(v55 - 8);
  v57 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v56 + 48);
  v58 = v57(v53, 1, v55);
  v59 = v57(v54, 1, v55);
  if (v58)
  {
    if (!v59)
    {
      *v53 = *v54;
      v60 = *(int *)(v55 + 20);
      v61 = (char *)v53 + v60;
      v62 = (char *)v54 + v60;
      v63 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 32))(v61, v62, v63);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
      goto LABEL_33;
    }
LABEL_32:
    v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
    goto LABEL_33;
  }
  if (v59)
  {
    sub_240388AE4((uint64_t)v53, type metadata accessor for ToolKitProtoTypeInstance);
    goto LABEL_32;
  }
  v70 = *v54;
  if ((~*v53 & 0xF000000000000007) != 0)
  {
    if ((~v70 & 0xF000000000000007) != 0)
    {
      *v53 = v70;
      swift_release();
    }
    else
    {
      sub_2403D4924((uint64_t)v53);
      *v53 = *v54;
    }
  }
  else
  {
    *v53 = v70;
  }
  v71 = *(int *)(v55 + 20);
  v72 = (char *)v53 + v71;
  v73 = (char *)v54 + v71;
  v74 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v74 - 8) + 40))(v72, v73, v74);
LABEL_33:
  v65 = a3[7];
  v66 = (char *)a1 + v65;
  v67 = (uint64_t)v26 + v65;
  v68 = sub_2408E57A4();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 40))(v66, v67, v68);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoProgramStatement()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406E6530(uint64_t a1, uint64_t a2, int *a3)
{
  return __swift_get_extra_inhabitant_index_425Tm(a1, a2, a3, &qword_256FFA300, &qword_256FFCFA0, &qword_256FFA428);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoProgramStatement()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406E6558(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  return __swift_store_extra_inhabitant_index_426Tm(a1, a2, a3, a4, &qword_256FFA300, &qword_256FFCFA0, &qword_256FFA428);
}

void sub_2406E6574()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_2403C8BE4(319, qword_256FFCBE0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementID);
  if (v0 <= 0x3F)
  {
    sub_2403C8BE4(319, qword_25700AE70, (void (*)(uint64_t))type metadata accessor for TranscriptProtoExpression);
    if (v1 <= 0x3F)
    {
      sub_2403C8BE4(319, qword_256FFBB00, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeInstance);
      if (v2 <= 0x3F)
      {
        sub_2408E57A4();
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v13 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    v7 = a2[5];
    v8 = *(int *)(a3 + 28);
    v9 = (char *)a2 + v8;
    v10 = (char *)a1 + v8;
    a1[4] = a2[4];
    a1[5] = v7;
    v11 = sub_2408E57A4();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v10, v9, v11);
  }
  return v3;
}

uint64_t destroy for ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = a2[5];
  v7 = *(int *)(a3 + 28);
  v8 = (char *)a2 + v7;
  v9 = (char *)a1 + v7;
  a1[4] = a2[4];
  a1[5] = v6;
  v10 = sub_2408E57A4();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v9, v8, v10);
  return a1;
}

_QWORD *assignWithCopy for ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 28);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *_s23LighthouseDataProcessor29TranscriptProtoLocaleSettingsVwtk_0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  v5 = *(int *)(a3 + 28);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

_QWORD *assignWithTake for ToolKitProtoRestrictionContext.InSet.ValueSet.LinkQuery(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  v9 = *(int *)(a3 + 28);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoLocaleSettings()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_index_3Tm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_2408E57A4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoLocaleSettings()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_index_4Tm(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_2408E57A4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoDeviceDetailsDeviceType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    v5 = *(int *)(a3 + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t _s23LighthouseDataProcessor38TranscriptProtoDeviceDetailsDeviceTypeVwxx_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_DWORD *initializeWithCopy for TranscriptProtoDeviceDetailsDeviceType(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_DWORD *assignWithCopy for TranscriptProtoDeviceDetailsDeviceType(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_DWORD *initializeWithTake for TranscriptProtoDeviceDetailsDeviceType(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_DWORD *assignWithTake for TranscriptProtoDeviceDetailsDeviceType(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoDeviceDetailsDeviceType()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_index_45Tm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 20);
  v5 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoDeviceDetailsDeviceType()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_index_46Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 20);
  v6 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, a2, a2, v6);
}

uint64_t sub_2406E6DA4()
{
  return sub_2406F5810();
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoDeviceDetails(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  _DWORD *v9;
  _DWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(_DWORD *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (_DWORD *)((char *)a1 + v8);
    v10 = (_DWORD *)((char *)a2 + v8);
    v11 = type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(0);
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA318);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      *v9 = *v10;
      v16 = *(int *)(v11 + 20);
      v17 = (char *)v9 + v16;
      v18 = (char *)v10 + v16;
      v19 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
      (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v20 = *(int *)(a3 + 24);
    v21 = (char *)v4 + v20;
    v22 = (char *)a2 + v20;
    v23 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoDeviceDetails(uint64_t a1, uint64_t a2)
{
  return sub_2406C4A6C(a1, a2, type metadata accessor for TranscriptProtoDeviceDetailsDeviceType);
}

_QWORD *initializeWithCopy for TranscriptProtoDeviceDetails(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _DWORD *v8;
  _DWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(_DWORD *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (_DWORD *)((char *)a1 + v7);
  v9 = (_DWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA318);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    *v8 = *v9;
    v14 = *(int *)(v10 + 20);
    v15 = (char *)v8 + v14;
    v16 = (char *)v9 + v14;
    v17 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v18 = *(int *)(a3 + 24);
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoDeviceDetails(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _DWORD *v7;
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_DWORD *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (_DWORD *)((char *)a1 + v6);
  v8 = (_DWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      *v7 = *v8;
      v24 = *(int *)(v9 + 20);
      v25 = (char *)v7 + v24;
      v26 = (char *)v8 + v24;
      v27 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 24))(v25, v26, v27);
      goto LABEL_7;
    }
    sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoDeviceDetailsDeviceType);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA318);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  *v7 = *v8;
  v14 = *(int *)(v9 + 20);
  v15 = (char *)v7 + v14;
  v16 = (char *)v8 + v14;
  v17 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
  (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v19 = *(int *)(a3 + 24);
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 24))(v20, v21, v22);
  return a1;
}

_OWORD *initializeWithTake for TranscriptProtoDeviceDetails(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _DWORD *v7;
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (_DWORD *)((char *)a1 + v6);
  v8 = (_DWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA318);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    *v7 = *v8;
    v12 = *(int *)(v9 + 20);
    v13 = (char *)v7 + v12;
    v14 = (char *)v8 + v12;
    v15 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v16 = *(int *)(a3 + 24);
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoDeviceDetails(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _DWORD *v8;
  _DWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(_DWORD *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (_DWORD *)((char *)a1 + v7);
  v9 = (_DWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for TranscriptProtoDeviceDetailsDeviceType(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      *v8 = *v9;
      v25 = *(int *)(v10 + 20);
      v26 = (char *)v8 + v25;
      v27 = (char *)v9 + v25;
      v28 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 40))(v26, v27, v28);
      goto LABEL_7;
    }
    sub_240388AE4((uint64_t)v8, type metadata accessor for TranscriptProtoDeviceDetailsDeviceType);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA318);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  *v8 = *v9;
  v15 = *(int *)(v10 + 20);
  v16 = (char *)v8 + v15;
  v17 = (char *)v9 + v15;
  v18 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  v20 = *(int *)(a3 + 24);
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 40))(v21, v22, v23);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoDeviceDetails()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406E7488(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_15Tm(a1, a2, a3, &qword_256FFA318);
}

uint64_t __swift_get_extra_inhabitant_index_15Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  unint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v5 = *(_QWORD *)(a1 + 8);
    if (v5 >= 0xFFFFFFFF)
      LODWORD(v5) = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(a4);
    v10 = *(_QWORD *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
    {
      v11 = v9;
      v12 = *(int *)(a3 + 20);
    }
    else
    {
      v11 = sub_2408E57A4();
      v10 = *(_QWORD *)(v11 - 8);
      v12 = *(int *)(a3 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1 + v12, a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoDeviceDetails()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406E7540(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_16Tm(a1, a2, a3, a4, &qword_256FFA318);
}

uint64_t __swift_store_extra_inhabitant_index_16Tm(uint64_t result, uint64_t a2, int a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(a5);
    v10 = *(_QWORD *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == a3)
    {
      v11 = v9;
      v12 = *(int *)(a4 + 20);
    }
    else
    {
      v11 = sub_2408E57A4();
      v10 = *(_QWORD *)(v11 - 8);
      v12 = *(int *)(a4 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v6 + v12, a2, a2, v11);
  }
  return result;
}

void sub_2406E75E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2404090B4(a1, a2, a3, (uint64_t)&unk_240906518, qword_25700B038, (void (*)(uint64_t))type metadata accessor for TranscriptProtoDeviceDetailsDeviceType);
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoStatementID(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    v5 = a2[2];
    a1[1] = a2[1];
    a1[2] = v5;
    v6 = *(int *)(a3 + 24);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_2408E57A4();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for TranscriptProtoStatementID(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for TranscriptProtoStatementID(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  v5 = *(int *)(a3 + 24);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_2408E57A4();
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

uint64_t assignWithCopy for TranscriptProtoStatementID(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for TranscriptProtoStatementID(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for TranscriptProtoStatementID(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoStatementID()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406E78D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = sub_2408E57A4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v9);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoStatementID()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406E7964(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 16) = a2;
  }
  else
  {
    v7 = sub_2408E57A4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_2406E79D8()
{
  return sub_2403FD2F0();
}

_QWORD *initializeBufferWithCopyOfBuffer for TranscriptProtoToolResolution(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v3;
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  _QWORD *v29;
  int *v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int (*v40)(_QWORD *, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  int *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  unsigned int (*v71)(_QWORD *, uint64_t, uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  void (*v79)(char *, char *, uint64_t);
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  int EnumCaseMultiPayload;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  _QWORD *v102;
  uint64_t v103;
  _QWORD *v104;
  unsigned int (*v105)(_QWORD, _QWORD, _QWORD);
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  uint64_t v113;
  _OWORD *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  _OWORD *v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  _QWORD *v127;
  _QWORD *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  _QWORD *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  void (**v140)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  _QWORD *v156;
  _QWORD *v157;
  uint64_t v158;
  uint64_t v159;
  unsigned int (*v160)(_QWORD *, uint64_t, uint64_t);
  uint64_t v161;
  int *v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  char *v166;
  uint64_t v167;
  void (*v168)(char *, char *, uint64_t);
  uint64_t v169;
  _QWORD *v170;
  _QWORD *v171;
  uint64_t v172;
  int *v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  char *v177;
  uint64_t v178;
  void (*v179)(char *, char *, uint64_t);
  uint64_t v180;
  char *v181;
  char *v182;
  uint64_t v183;
  uint64_t v185;
  unsigned int (*v186)(uint64_t *, uint64_t, uint64_t);
  uint64_t v187;
  _QWORD *v188;
  void (*v189)(char *, char *, uint64_t);
  _QWORD *v190;
  _QWORD *v191;
  char *v192;
  void *v193;
  _QWORD *v194;
  uint64_t v195;
  char *v196;
  unsigned int (*v197)(_QWORD *, uint64_t, uint64_t);
  char *v198;
  unsigned int (*v199)(_QWORD *, uint64_t, uint64_t);
  uint64_t v200;
  _QWORD *__dst;
  unsigned int (*__dstc)(_QWORD *, uint64_t, int *);
  int *__dstd;
  _QWORD *__dsta;
  void *__dstb;
  uint64_t v206;
  int *v207;
  int *v208;
  _QWORD *v209;
  _QWORD *v210;
  _QWORD *v211;

  v3 = a2;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a3;
    v7 = type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
    v8 = *(_QWORD *)(v7 - 8);
    v211 = v3;
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v8 + 48))(v3, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA468);
      memcpy(a1, v3, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v206 = v8;
      v207 = v6;
      v11 = v3[1];
      v12 = v7;
      *a1 = *v3;
      a1[1] = v11;
      v13 = v3[3];
      a1[2] = v3[2];
      a1[3] = v13;
      *((_BYTE *)a1 + 32) = *((_BYTE *)v3 + 32);
      v14 = v3[6];
      v15 = v3[7];
      a1[5] = v3[5];
      a1[6] = v14;
      v16 = v3[8];
      v17 = v3[9];
      a1[7] = v15;
      a1[8] = v16;
      a1[9] = v17;
      *((_BYTE *)a1 + 80) = *((_BYTE *)v3 + 80);
      v18 = v3[12];
      a1[11] = v3[11];
      a1[12] = v18;
      v19 = v3[14];
      a1[13] = v3[13];
      a1[14] = v19;
      v208 = (int *)v12;
      v20 = *(int *)(v12 + 68);
      __dst = (_QWORD *)((char *)a1 + v20);
      v21 = (_QWORD *)((char *)v3 + v20);
      v22 = type metadata accessor for ToolKitProtoTypeInstance(0);
      v185 = *(_QWORD *)(v22 - 8);
      v186 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v185 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v186(v21, 1, v22))
      {
        v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
        memcpy(__dst, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        v24 = *v21;
        if ((~*v21 & 0xF000000000000007) != 0)
          swift_retain();
        *__dst = v24;
        v25 = *(int *)(v22 + 20);
        v26 = (char *)__dst + v25;
        v27 = (char *)v21 + v25;
        v28 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v185 + 56))(__dst, 0, 1, v22);
      }
      v30 = v208;
      v29 = v3;
      v31 = v208[18];
      v32 = (_QWORD *)((char *)a1 + v31);
      v33 = (_QWORD *)((char *)v3 + v31);
      v34 = v33[1];
      *v32 = *v33;
      v32[1] = v34;
      v35 = v208[19];
      v36 = (_QWORD *)((char *)a1 + v35);
      v37 = (_QWORD *)((char *)v3 + v35);
      v38 = type metadata accessor for ToolKitProtoAppDefinition(0);
      v39 = *(_QWORD *)(v38 - 8);
      v40 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v39 + 48);
      swift_bridgeObjectRetain();
      if (v40(v37, 1, v38))
      {
        v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA438);
        memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
      }
      else
      {
        v195 = v39;
        v42 = v37[1];
        *v36 = *v37;
        v36[1] = v42;
        v43 = v37[3];
        v36[2] = v37[2];
        v36[3] = v43;
        v44 = v37[5];
        v36[4] = v37[4];
        v36[5] = v44;
        v45 = v37[7];
        v36[6] = v37[6];
        v36[7] = v45;
        v46 = v37[9];
        v36[8] = v37[8];
        v36[9] = v46;
        *((_BYTE *)v36 + 80) = *((_BYTE *)v37 + 80);
        v47 = *(int *)(v38 + 40);
        v191 = (_QWORD *)((char *)v36 + v47);
        v48 = (_QWORD *)((char *)v37 + v47);
        v49 = type metadata accessor for ToolKitProtoAppDefinition.Device(0);
        v188 = *(_QWORD **)(v49 - 8);
        __dstc = (unsigned int (*)(_QWORD *, uint64_t, int *))v188[6];
        v50 = (int *)v49;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__dstc(v48, 1, v50))
        {
          v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA430);
          memcpy(v191, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
          v30 = v208;
          v29 = v211;
          v52 = v195;
        }
        else
        {
          v53 = v48[1];
          v30 = v208;
          v29 = v211;
          v52 = v195;
          if (v53 == 1)
          {
            *(_OWORD *)v191 = *(_OWORD *)v48;
          }
          else
          {
            *v191 = *v48;
            v191[1] = v53;
            swift_bridgeObjectRetain();
          }
          v54 = v50[5];
          __dstd = v50;
          v55 = (char *)v191 + v54;
          v56 = (char *)v48 + v54;
          v57 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v55, v56, v57);
          ((void (*)(_QWORD *, _QWORD, uint64_t, int *))v188[7])(v191, 0, 1, __dstd);
        }
        v58 = *(int *)(v38 + 44);
        v59 = (char *)v36 + v58;
        v60 = (char *)v37 + v58;
        v61 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 16))(v59, v60, v61);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v36, 0, 1, v38);
      }
      v62 = v30[20];
      v63 = (_QWORD *)((char *)a1 + v62);
      v64 = (_QWORD *)((char *)v29 + v62);
      v65 = v64[1];
      *v63 = *v64;
      v63[1] = v65;
      v66 = v30[21];
      v67 = (_QWORD *)((char *)a1 + v66);
      v68 = (_QWORD *)((char *)v29 + v66);
      v69 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation(0);
      v70 = *(_QWORD *)(v69 - 8);
      v71 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v70 + 48);
      swift_bridgeObjectRetain();
      if (v71(v68, 1, v69))
      {
        v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA440);
        memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
      }
      else
      {
        v73 = v68[1];
        *v67 = *v68;
        v67[1] = v73;
        v74 = v68[3];
        v67[2] = v68[2];
        v67[3] = v74;
        v75 = *(int *)(v69 + 24);
        v76 = (char *)v67 + v75;
        v77 = (char *)v68 + v75;
        v78 = sub_2408E57A4();
        v79 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v78 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v80 = v78;
        v30 = v208;
        v79(v76, v77, v80);
        v29 = v211;
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v67, 0, 1, v69);
      }
      v81 = v30[22];
      v82 = (_QWORD *)((char *)a1 + v81);
      v83 = (_QWORD *)((char *)v29 + v81);
      v84 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon(0);
      v85 = *(_QWORD *)(v84 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v85 + 48))(v83, 1, v84))
      {
        v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA450);
        memcpy(v82, v83, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
      }
      else
      {
        v87 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind(0);
        v88 = *(_QWORD *)(v87 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v88 + 48))(v83, 1, v87))
        {
          v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA448);
          memcpy(v82, v83, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
        }
        else
        {
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          v91 = v83[1];
          *v82 = *v83;
          v82[1] = v91;
          if (EnumCaseMultiPayload == 1)
          {
            *((_BYTE *)v82 + 16) = *((_BYTE *)v83 + 16);
            v92 = v83[4];
            v82[3] = v83[3];
            v82[4] = v92;
            v93 = v83[6];
            v82[5] = v83[5];
            v82[6] = v93;
            v94 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0)
                         + 32);
            v192 = (char *)v83 + v94;
            v196 = (char *)v82 + v94;
            v95 = sub_2408E57A4();
            v189 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v95 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v189(v196, v192, v95);
          }
          else
          {
            swift_bridgeObjectRetain();
          }
          swift_storeEnumTagMultiPayload();
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v82, 0, 1, v87);
        }
        v30 = v208;
        v96 = *(int *)(v84 + 20);
        v97 = (char *)v82 + v96;
        v98 = (char *)v83 + v96;
        v99 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 16))(v97, v98, v99);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v82, 0, 1, v84);
      }
      v100 = v30[23];
      v101 = (_QWORD *)((char *)a1 + v100);
      v3 = v211;
      v102 = (_QWORD *)((char *)v211 + v100);
      v103 = type metadata accessor for ToolKitProtoContainerDefinition(0);
      v104 = *(_QWORD **)(v103 - 8);
      v105 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))v104[6];
      if (v105(v102, 1, v103))
      {
        v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA460);
        memcpy(v101, v102, *(_QWORD *)(*(_QWORD *)(v106 - 8) + 64));
      }
      else
      {
        v193 = v105;
        __dsta = v104;
        v107 = v102[1];
        *v101 = *v102;
        v101[1] = v107;
        v108 = v102[3];
        v101[2] = v102[2];
        v101[3] = v108;
        *((_WORD *)v101 + 16) = *((_WORD *)v102 + 16);
        v109 = v102[6];
        v101[5] = v102[5];
        v101[6] = v109;
        v110 = v102[8];
        v101[7] = v102[7];
        v101[8] = v110;
        v111 = *(int *)(v103 + 40);
        v190 = (_QWORD *)((char *)v101 + v111);
        v112 = (_QWORD *)((char *)v102 + v111);
        v113 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
        v187 = *(_QWORD *)(v113 - 8);
        v197 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v187 + 48);
        swift_bridgeObjectRetain();
        v114 = v112;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v197(v112, 1, v113))
        {
          v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA458);
          memcpy(v190, v112, *(_QWORD *)(*(_QWORD *)(v115 - 8) + 64));
          v30 = v208;
          v3 = v211;
          v104 = __dsta;
          v105 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))v193;
        }
        else
        {
          v116 = v112[1];
          v30 = v208;
          v104 = __dsta;
          v105 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))v193;
          if (v116 == 1)
          {
            *(_OWORD *)v190 = *v114;
          }
          else
          {
            *v190 = *(_QWORD *)v114;
            v190[1] = v116;
            swift_bridgeObjectRetain();
          }
          v117 = *(int *)(v113 + 20);
          v198 = (char *)v190 + v117;
          v118 = v114;
          v119 = v113;
          v120 = (char *)v118 + v117;
          v121 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v121 - 8) + 16))(v198, v120, v121);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v187 + 56))(v190, 0, 1, v119);
          v3 = v211;
        }
        v122 = *(int *)(v103 + 44);
        v123 = (char *)v101 + v122;
        v124 = (char *)v102 + v122;
        v125 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v125 - 8) + 16))(v123, v124, v125);
        ((void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v104[7])(v101, 0, 1, v103);
      }
      v126 = v30[24];
      v127 = (_QWORD *)((char *)a1 + v126);
      v128 = (_QWORD *)((char *)v3 + v126);
      if (v105((char *)v3 + v126, 1, v103))
      {
        v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA460);
        memcpy(v127, v128, *(_QWORD *)(*(_QWORD *)(v129 - 8) + 64));
      }
      else
      {
        __dstb = v104;
        v130 = v128[1];
        *v127 = *v128;
        v127[1] = v130;
        v131 = v128[3];
        v127[2] = v128[2];
        v127[3] = v131;
        *((_WORD *)v127 + 16) = *((_WORD *)v128 + 16);
        v132 = v128[6];
        v127[5] = v128[5];
        v127[6] = v132;
        v133 = v128[8];
        v127[7] = v128[7];
        v127[8] = v133;
        v134 = *(int *)(v103 + 40);
        v194 = (_QWORD *)((char *)v127 + v134);
        v135 = (_QWORD *)((char *)v128 + v134);
        v136 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
        v137 = *(_QWORD *)(v136 - 8);
        v199 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v137 + 48);
        v138 = v136;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v199(v135, 1, v138))
        {
          v139 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA458);
          memcpy(v194, v135, *(_QWORD *)(*(_QWORD *)(v139 - 8) + 64));
          v30 = v208;
          v3 = v211;
          v140 = (void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))__dstb;
        }
        else
        {
          v200 = v137;
          v141 = v135[1];
          v30 = v208;
          v140 = (void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))__dstb;
          if (v141 == 1)
          {
            *(_OWORD *)v194 = *(_OWORD *)v135;
          }
          else
          {
            *v194 = *v135;
            v194[1] = v141;
            swift_bridgeObjectRetain();
          }
          v142 = *(int *)(v138 + 20);
          v143 = v138;
          v144 = (char *)v194 + v142;
          v145 = (char *)v135 + v142;
          v146 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v146 - 8) + 16))(v144, v145, v146);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v200 + 56))(v194, 0, 1, v143);
          v3 = v211;
        }
        v147 = *(int *)(v103 + 44);
        v148 = (char *)v127 + v147;
        v149 = (char *)v128 + v147;
        v150 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v150 - 8) + 16))(v148, v149, v150);
        v140[7](v127, 0, 1, v103);
      }
      v151 = v30[25];
      v152 = (char *)a1 + v151;
      v153 = (char *)v3 + v151;
      v154 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v154 - 8) + 16))(v152, v153, v154);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v206 + 56))(a1, 0, 1, v30);
      v6 = v207;
    }
    v155 = v6[5];
    v156 = (_QWORD *)((char *)a1 + v155);
    v157 = (_QWORD *)((char *)v3 + v155);
    v158 = type metadata accessor for TranscriptProtoStatementID(0);
    v159 = *(_QWORD *)(v158 - 8);
    v160 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v159 + 48);
    if (v160(v157, 1, v158))
    {
      v161 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
      memcpy(v156, v157, *(_QWORD *)(*(_QWORD *)(v161 - 8) + 64));
    }
    else
    {
      *(_DWORD *)v156 = *(_DWORD *)v157;
      v209 = a1;
      v162 = v6;
      v163 = v157[2];
      v156[1] = v157[1];
      v156[2] = v163;
      v164 = *(int *)(v158 + 24);
      v165 = (char *)v156 + v164;
      v166 = (char *)v157 + v164;
      v167 = sub_2408E57A4();
      v168 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v167 - 8) + 16);
      v6 = v162;
      a1 = v209;
      swift_bridgeObjectRetain();
      v168(v165, v166, v167);
      v3 = v211;
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v159 + 56))(v156, 0, 1, v158);
    }
    v169 = v6[6];
    v170 = (_QWORD *)((char *)a1 + v169);
    v171 = (_QWORD *)((char *)v3 + v169);
    if (v160((_QWORD *)((char *)v3 + v169), 1, v158))
    {
      v172 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
      memcpy(v170, v171, *(_QWORD *)(*(_QWORD *)(v172 - 8) + 64));
    }
    else
    {
      *(_DWORD *)v170 = *(_DWORD *)v171;
      v210 = a1;
      v173 = v6;
      v174 = v171[2];
      v170[1] = v171[1];
      v170[2] = v174;
      v175 = *(int *)(v158 + 24);
      v176 = (char *)v170 + v175;
      v177 = (char *)v171 + v175;
      v178 = sub_2408E57A4();
      v179 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v178 - 8) + 16);
      v6 = v173;
      a1 = v210;
      swift_bridgeObjectRetain();
      v179(v176, v177, v178);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v159 + 56))(v170, 0, 1, v158);
    }
    v180 = v6[7];
    v181 = (char *)a1 + v180;
    v182 = (char *)v3 + v180;
    v183 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v183 - 8) + 16))(v181, v182, v183);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoToolResolution(uint64_t a1, int *a2)
{
  int *v4;
  _QWORD *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int EnumCaseMultiPayload;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unsigned int (*v49)(uint64_t, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v4 = (int *)type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v4 - 1) + 48))(a1, 1, v4))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5 = (_QWORD *)(a1 + v4[17]);
    v6 = type metadata accessor for ToolKitProtoTypeInstance(0);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6))
    {
      if ((~*v5 & 0xF000000000000007) != 0)
        swift_release();
      v7 = (char *)v5 + *(int *)(v6 + 20);
      v8 = sub_2408E57A4();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
    }
    swift_bridgeObjectRelease();
    v9 = a1 + v4[19];
    v10 = type metadata accessor for ToolKitProtoAppDefinition(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v11 = v9 + *(int *)(v10 + 40);
      v12 = type metadata accessor for ToolKitProtoAppDefinition.Device(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12))
      {
        if (*(_QWORD *)(v11 + 8) != 1)
          swift_bridgeObjectRelease();
        v13 = v11 + *(int *)(v12 + 20);
        v14 = sub_2408E57A4();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
      }
      v15 = v9 + *(int *)(v10 + 44);
      v16 = sub_2408E57A4();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
    }
    swift_bridgeObjectRelease();
    v17 = a1 + v4[21];
    v18 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v17, 1, v18))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v19 = v17 + *(int *)(v18 + 24);
      v20 = sub_2408E57A4();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
    }
    v21 = a1 + v4[22];
    v22 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v21, 1, v22))
    {
      v23 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v21, 1, v23))
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        swift_bridgeObjectRelease();
        if (EnumCaseMultiPayload == 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v25 = v21
              + *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0) + 32);
          v26 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v25, v26);
        }
      }
      v27 = v21 + *(int *)(v22 + 20);
      v28 = sub_2408E57A4();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v27, v28);
    }
    v29 = a1 + v4[23];
    v30 = type metadata accessor for ToolKitProtoContainerDefinition(0);
    v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 48);
    if (!v31(v29, 1, v30))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v32 = v29 + *(int *)(v30 + 40);
      v33 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v32, 1, v33))
      {
        if (*(_QWORD *)(v32 + 8) != 1)
          swift_bridgeObjectRelease();
        v34 = v32 + *(int *)(v33 + 20);
        v35 = sub_2408E57A4();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 8))(v34, v35);
      }
      v36 = v29 + *(int *)(v30 + 44);
      v37 = sub_2408E57A4();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 8))(v36, v37);
    }
    v38 = a1 + v4[24];
    if (!v31(v38, 1, v30))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v39 = v38 + *(int *)(v30 + 40);
      v40 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 48))(v39, 1, v40))
      {
        if (*(_QWORD *)(v39 + 8) != 1)
          swift_bridgeObjectRelease();
        v41 = v39 + *(int *)(v40 + 20);
        v42 = sub_2408E57A4();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 8))(v41, v42);
      }
      v43 = v38 + *(int *)(v30 + 44);
      v44 = sub_2408E57A4();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 8))(v43, v44);
    }
    v45 = a1 + v4[25];
    v46 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 8))(v45, v46);
  }
  v47 = a1 + a2[5];
  v48 = type metadata accessor for TranscriptProtoStatementID(0);
  v49 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 48);
  if (!v49(v47, 1, v48))
  {
    swift_bridgeObjectRelease();
    v50 = v47 + *(int *)(v48 + 24);
    v51 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 8))(v50, v51);
  }
  v52 = a1 + a2[6];
  if (!v49(v52, 1, v48))
  {
    swift_bridgeObjectRelease();
    v53 = v52 + *(int *)(v48 + 24);
    v54 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 8))(v53, v54);
  }
  v55 = a1 + a2[7];
  v56 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 8))(v55, v56);
}

_QWORD *initializeWithCopy for TranscriptProtoToolResolution(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  int *v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  unsigned int (*v37)(_QWORD *, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  void (**v49)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  unsigned int (*v68)(_QWORD *, uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  void (*v76)(char *, char *, uint64_t);
  char *v77;
  uint64_t v78;
  _QWORD *v79;
  _QWORD *v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  int EnumCaseMultiPayload;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  _QWORD *v101;
  uint64_t v102;
  _QWORD *v103;
  unsigned int (*v104)(_QWORD, _QWORD, _QWORD);
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  _QWORD *v126;
  _QWORD *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  _QWORD *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  void (**v138)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  _QWORD *v153;
  _QWORD *v154;
  uint64_t v155;
  uint64_t v156;
  unsigned int (*v157)(_QWORD *, uint64_t, uint64_t);
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  char *v162;
  uint64_t v163;
  _QWORD *v164;
  void (*v165)(char *, char *, uint64_t);
  char *v166;
  uint64_t v167;
  _QWORD *v168;
  _QWORD *v169;
  uint64_t v170;
  int *v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  _QWORD *v175;
  char *v176;
  uint64_t v177;
  void (*v178)(char *, char *, uint64_t);
  char *v179;
  uint64_t v180;
  char *v181;
  char *v182;
  uint64_t v183;
  uint64_t v185;
  uint64_t *v186;
  unsigned int (*v187)(uint64_t *, uint64_t, uint64_t);
  uint64_t v188;
  unsigned int (*v189)(_QWORD, _QWORD, _QWORD);
  void *v190;
  void (*v191)(char *, char *, uint64_t);
  _QWORD *v192;
  _QWORD *v193;
  void *v194;
  _QWORD *v195;
  char *v196;
  unsigned int (*v197)(_QWORD *, uint64_t, uint64_t);
  unsigned int (*v198)(_QWORD *, uint64_t, uint64_t);
  _QWORD *__dst;
  unsigned int (*__dstc)(_QWORD *, uint64_t, uint64_t);
  char *__dstd;
  _QWORD *__dsta;
  void *__dstb;
  uint64_t v204;
  int *v205;
  int *v206;
  int *v207;
  _QWORD *v208;
  _QWORD *v209;
  _QWORD *v210;
  _QWORD *v211;

  v6 = type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA468);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    v9 = a1;
  }
  else
  {
    v204 = v7;
    v206 = a3;
    v10 = a2[1];
    *a1 = *a2;
    a1[1] = v10;
    v11 = a2;
    v12 = a2[2];
    v13 = a2[3];
    a1[2] = v12;
    a1[3] = v13;
    *((_BYTE *)a1 + 32) = *((_BYTE *)v11 + 32);
    v14 = v6;
    v15 = v11[6];
    a1[5] = v11[5];
    a1[6] = v15;
    v16 = v11[8];
    a1[7] = v11[7];
    a1[8] = v16;
    a1[9] = v11[9];
    *((_BYTE *)a1 + 80) = *((_BYTE *)v11 + 80);
    v17 = v11[12];
    a1[11] = v11[11];
    a1[12] = v17;
    v194 = (void *)v11[14];
    a1[13] = v11[13];
    a1[14] = v194;
    v205 = (int *)v14;
    v18 = *(int *)(v14 + 68);
    v208 = a1;
    v210 = v11;
    __dst = (_QWORD *)((char *)a1 + v18);
    v186 = (_QWORD *)((char *)v11 + v18);
    v19 = type metadata accessor for ToolKitProtoTypeInstance(0);
    v185 = *(_QWORD *)(v19 - 8);
    v187 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v185 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v187(v186, 1, v19))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
      memcpy(__dst, v186, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      v21 = *v186;
      if ((~*v186 & 0xF000000000000007) != 0)
        swift_retain();
      *__dst = v21;
      v22 = *(int *)(v19 + 20);
      v23 = (char *)__dst + v22;
      v24 = (char *)v186 + v22;
      v25 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v185 + 56))(__dst, 0, 1, v19);
    }
    v26 = v208;
    a2 = v210;
    v27 = v205;
    v28 = v205[18];
    v29 = (_QWORD *)((char *)v208 + v28);
    v30 = (_QWORD *)((char *)v210 + v28);
    v31 = v30[1];
    *v29 = *v30;
    v29[1] = v31;
    v32 = v205[19];
    v33 = (_QWORD *)((char *)v208 + v32);
    v34 = (_QWORD *)((char *)v210 + v32);
    v35 = type metadata accessor for ToolKitProtoAppDefinition(0);
    v36 = *(_QWORD **)(v35 - 8);
    v37 = (unsigned int (*)(_QWORD *, uint64_t, uint64_t))v36[6];
    swift_bridgeObjectRetain();
    if (v37(v34, 1, v35))
    {
      v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA438);
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    }
    else
    {
      v190 = v36;
      v39 = v34[1];
      *v33 = *v34;
      v33[1] = v39;
      v40 = v34[3];
      v33[2] = v34[2];
      v33[3] = v40;
      v41 = v34[5];
      v33[4] = v34[4];
      v33[5] = v41;
      v42 = v34[7];
      v33[6] = v34[6];
      v33[7] = v42;
      v43 = v34[9];
      v33[8] = v34[8];
      v33[9] = v43;
      *((_BYTE *)v33 + 80) = *((_BYTE *)v34 + 80);
      v44 = *(int *)(v35 + 40);
      v195 = (_QWORD *)((char *)v33 + v44);
      v45 = (_QWORD *)((char *)v34 + v44);
      v46 = type metadata accessor for ToolKitProtoAppDefinition.Device(0);
      v188 = *(_QWORD *)(v46 - 8);
      __dstc = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v188 + 48);
      swift_bridgeObjectRetain();
      v47 = v45;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__dstc(v45, 1, v46))
      {
        v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA430);
        memcpy(v195, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
        v26 = v208;
        a2 = v210;
        v27 = v205;
        v49 = (void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))v190;
      }
      else
      {
        v50 = v45[1];
        if (v50 == 1)
        {
          *(_OWORD *)v195 = *(_OWORD *)v45;
        }
        else
        {
          *v195 = *v45;
          v195[1] = v50;
          swift_bridgeObjectRetain();
        }
        a2 = v210;
        v49 = (void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))v190;
        v51 = *(int *)(v46 + 20);
        v52 = (char *)v195 + v51;
        v53 = (char *)v47 + v51;
        v54 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(v52, v53, v54);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v188 + 56))(v195, 0, 1, v46);
        v26 = v208;
        v27 = v205;
      }
      v55 = *(int *)(v35 + 44);
      v56 = (char *)v33 + v55;
      v57 = (char *)v34 + v55;
      v58 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v56, v57, v58);
      v49[7](v33, 0, 1, v35);
    }
    v59 = v27[20];
    v60 = (_QWORD *)((char *)v26 + v59);
    v61 = (_QWORD *)((char *)a2 + v59);
    v62 = v61[1];
    *v60 = *v61;
    v60[1] = v62;
    v63 = v27[21];
    v64 = (_QWORD *)((char *)v26 + v63);
    v65 = (_QWORD *)((char *)a2 + v63);
    v66 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation(0);
    v67 = *(_QWORD *)(v66 - 8);
    v68 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v67 + 48);
    swift_bridgeObjectRetain();
    if (v68(v65, 1, v66))
    {
      v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA440);
      memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
    }
    else
    {
      v70 = v65[1];
      *v64 = *v65;
      v64[1] = v70;
      v71 = v65[3];
      v64[2] = v65[2];
      v64[3] = v71;
      v72 = *(int *)(v66 + 24);
      v73 = (char *)v64 + v72;
      v74 = (char *)v65 + v72;
      v75 = sub_2408E57A4();
      v76 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v77 = v73;
      v26 = v208;
      v76(v77, v74, v75);
      a2 = v210;
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v64, 0, 1, v66);
    }
    v78 = v27[22];
    v79 = v26;
    v80 = (_QWORD *)((char *)v26 + v78);
    v81 = (_QWORD *)((char *)a2 + v78);
    v82 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon(0);
    v83 = *(_QWORD *)(v82 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v83 + 48))(v81, 1, v82))
    {
      v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA450);
      memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
    }
    else
    {
      v85 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind(0);
      v86 = *(_QWORD *)(v85 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v86 + 48))(v81, 1, v85))
      {
        v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA448);
        memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
      }
      else
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        v89 = v81[1];
        *v80 = *v81;
        v80[1] = v89;
        if (EnumCaseMultiPayload == 1)
        {
          *((_BYTE *)v80 + 16) = *((_BYTE *)v81 + 16);
          v90 = v81[4];
          v80[3] = v81[3];
          v80[4] = v90;
          v91 = v81[6];
          v80[5] = v81[5];
          v80[6] = v91;
          v92 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0) + 32);
          v196 = (char *)v81 + v92;
          __dstd = (char *)v80 + v92;
          v93 = sub_2408E57A4();
          v191 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v93 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v94 = v93;
          v27 = v205;
          v79 = v208;
          v191(__dstd, v196, v94);
        }
        else
        {
          swift_bridgeObjectRetain();
        }
        a2 = v210;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v80, 0, 1, v85);
      }
      v95 = *(int *)(v82 + 20);
      v96 = (char *)v80 + v95;
      v97 = (char *)v81 + v95;
      v98 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v98 - 8) + 16))(v96, v97, v98);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v83 + 56))(v80, 0, 1, v82);
    }
    v99 = v27[23];
    v9 = v79;
    v100 = (_QWORD *)((char *)v79 + v99);
    v101 = (_QWORD *)((char *)a2 + v99);
    v102 = type metadata accessor for ToolKitProtoContainerDefinition(0);
    v103 = *(_QWORD **)(v102 - 8);
    v104 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))v103[6];
    if (v104(v101, 1, v102))
    {
      v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA460);
      memcpy(v100, v101, *(_QWORD *)(*(_QWORD *)(v105 - 8) + 64));
    }
    else
    {
      v189 = v104;
      __dsta = v103;
      v106 = v101[1];
      *v100 = *v101;
      v100[1] = v106;
      v107 = v101[3];
      v100[2] = v101[2];
      v100[3] = v107;
      *((_WORD *)v100 + 16) = *((_WORD *)v101 + 16);
      v108 = v101[6];
      v100[5] = v101[5];
      v100[6] = v108;
      v109 = v101[8];
      v100[7] = v101[7];
      v100[8] = v109;
      v110 = *(int *)(v102 + 40);
      v192 = (_QWORD *)((char *)v100 + v110);
      v111 = (_QWORD *)((char *)v101 + v110);
      v112 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
      v113 = *(_QWORD *)(v112 - 8);
      v197 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v113 + 48);
      swift_bridgeObjectRetain();
      v114 = v111;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v197(v111, 1, v112))
      {
        v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA458);
        memcpy(v192, v111, *(_QWORD *)(*(_QWORD *)(v115 - 8) + 64));
        v9 = v208;
        a2 = v210;
        v27 = v205;
        v103 = __dsta;
        v104 = v189;
      }
      else
      {
        v116 = v111[1];
        if (v116 == 1)
        {
          *(_OWORD *)v192 = *(_OWORD *)v111;
        }
        else
        {
          *v192 = *v111;
          v192[1] = v116;
          swift_bridgeObjectRetain();
        }
        v103 = __dsta;
        v104 = v189;
        v117 = *(int *)(v112 + 20);
        v118 = (char *)v192 + v117;
        v119 = (char *)v114 + v117;
        v120 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v120 - 8) + 16))(v118, v119, v120);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v113 + 56))(v192, 0, 1, v112);
        v9 = v208;
        a2 = v210;
        v27 = v205;
      }
      v121 = *(int *)(v102 + 44);
      v122 = (char *)v100 + v121;
      v123 = (char *)v101 + v121;
      v124 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v124 - 8) + 16))(v122, v123, v124);
      ((void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v103[7])(v100, 0, 1, v102);
    }
    v125 = v27[24];
    v126 = (_QWORD *)((char *)v9 + v125);
    v127 = (_QWORD *)((char *)a2 + v125);
    if (v104((char *)a2 + v125, 1, v102))
    {
      v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA460);
      memcpy(v126, v127, *(_QWORD *)(*(_QWORD *)(v128 - 8) + 64));
    }
    else
    {
      __dstb = v103;
      v129 = v127[1];
      *v126 = *v127;
      v126[1] = v129;
      v130 = v127[3];
      v126[2] = v127[2];
      v126[3] = v130;
      *((_WORD *)v126 + 16) = *((_WORD *)v127 + 16);
      v131 = v127[6];
      v126[5] = v127[5];
      v126[6] = v131;
      v132 = v127[8];
      v126[7] = v127[7];
      v126[8] = v132;
      v133 = *(int *)(v102 + 40);
      v193 = (_QWORD *)((char *)v126 + v133);
      v134 = (_QWORD *)((char *)v127 + v133);
      v135 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
      v136 = *(_QWORD *)(v135 - 8);
      v198 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v136 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v198(v134, 1, v135))
      {
        v137 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA458);
        memcpy(v193, v134, *(_QWORD *)(*(_QWORD *)(v137 - 8) + 64));
        v9 = v208;
        a2 = v210;
        v27 = v205;
        v138 = (void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))__dstb;
      }
      else
      {
        v139 = v134[1];
        if (v139 == 1)
        {
          *(_OWORD *)v193 = *(_OWORD *)v134;
        }
        else
        {
          *v193 = *v134;
          v193[1] = v139;
          swift_bridgeObjectRetain();
        }
        v138 = (void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))__dstb;
        v140 = *(int *)(v135 + 20);
        v141 = (char *)v193 + v140;
        v142 = (char *)v134 + v140;
        v143 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v143 - 8) + 16))(v141, v142, v143);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v136 + 56))(v193, 0, 1, v135);
        v9 = v208;
        a2 = v210;
        v27 = v205;
      }
      v144 = *(int *)(v102 + 44);
      v145 = (char *)v126 + v144;
      v146 = (char *)v127 + v144;
      v147 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v147 - 8) + 16))(v145, v146, v147);
      v138[7](v126, 0, 1, v102);
    }
    v148 = v27[25];
    v149 = (char *)v9 + v148;
    v150 = (char *)a2 + v148;
    v151 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v151 - 8) + 16))(v149, v150, v151);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v204 + 56))(v9, 0, 1, v27);
    a3 = v206;
  }
  v152 = a3[5];
  v153 = (_QWORD *)((char *)v9 + v152);
  v154 = (_QWORD *)((char *)a2 + v152);
  v155 = type metadata accessor for TranscriptProtoStatementID(0);
  v156 = *(_QWORD *)(v155 - 8);
  v157 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v156 + 48);
  if (v157(v154, 1, v155))
  {
    v158 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v153, v154, *(_QWORD *)(*(_QWORD *)(v158 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v153 = *(_DWORD *)v154;
    v207 = a3;
    v209 = v9;
    v159 = v154[2];
    v153[1] = v154[1];
    v153[2] = v159;
    v160 = *(int *)(v155 + 24);
    v161 = (char *)v153 + v160;
    v162 = (char *)v154 + v160;
    v163 = sub_2408E57A4();
    v164 = a2;
    v165 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v163 - 8) + 16);
    a3 = v207;
    swift_bridgeObjectRetain();
    v166 = v162;
    v9 = v209;
    v165(v161, v166, v163);
    a2 = v164;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v156 + 56))(v153, 0, 1, v155);
  }
  v167 = a3[6];
  v168 = (_QWORD *)((char *)v9 + v167);
  v169 = (_QWORD *)((char *)a2 + v167);
  if (v157((_QWORD *)((char *)a2 + v167), 1, v155))
  {
    v170 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v168, v169, *(_QWORD *)(*(_QWORD *)(v170 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v168 = *(_DWORD *)v169;
    v171 = a3;
    v172 = v169[2];
    v168[1] = v169[1];
    v168[2] = v172;
    v173 = *(int *)(v155 + 24);
    v174 = (char *)v168 + v173;
    v211 = a2;
    v175 = v9;
    v176 = (char *)v169 + v173;
    v177 = sub_2408E57A4();
    v178 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v177 - 8) + 16);
    a3 = v171;
    swift_bridgeObjectRetain();
    v179 = v176;
    v9 = v175;
    a2 = v211;
    v178(v174, v179, v177);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v156 + 56))(v168, 0, 1, v155);
  }
  v180 = a3[7];
  v181 = (char *)v9 + v180;
  v182 = (char *)a2 + v180;
  v183 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v183 - 8) + 16))(v181, v182, v183);
  return v9;
}

uint64_t assignWithCopy for TranscriptProtoToolResolution(uint64_t a1, uint64_t a2, int *a3)
{
  int *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t, int *);
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t *, uint64_t, uint64_t);
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  int *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  unsigned int (*v42)(_QWORD *, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  _QWORD *v47;
  int *v48;
  uint64_t v49;
  void (**v50)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(uint64_t, uint64_t, uint64_t);
  int v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t (*v77)(_QWORD *, uint64_t, uint64_t);
  _QWORD *v78;
  int v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  _QWORD *v90;
  uint64_t v91;
  _QWORD *v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  unsigned int (*v96)(_QWORD *, uint64_t, uint64_t);
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  void (*v102)(char *, char *, uint64_t);
  char *v103;
  uint64_t v104;
  _QWORD *v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  int v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  _QWORD *v122;
  uint64_t v123;
  _QWORD *v124;
  unsigned int (*v125)(_QWORD, _QWORD, _QWORD);
  uint64_t v126;
  uint64_t v127;
  _QWORD *v128;
  uint64_t v129;
  uint64_t v130;
  _QWORD *v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  _QWORD *v142;
  _QWORD *v143;
  uint64_t v144;
  uint64_t v145;
  _QWORD *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  void (**v150)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v151;
  char *v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  _QWORD *v190;
  _QWORD *v191;
  uint64_t v192;
  _QWORD *v193;
  _QWORD *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t (*v197)(_QWORD *, uint64_t, uint64_t);
  int v198;
  int v199;
  uint64_t v200;
  char *v201;
  char *v202;
  uint64_t v203;
  void (*v204)(char *, char *, uint64_t);
  char *v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  _QWORD *v209;
  _QWORD *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t (*v213)(_QWORD *, uint64_t, uint64_t);
  int v214;
  int v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  char *v221;
  char *v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t (*v226)(_QWORD *, uint64_t, uint64_t);
  int v227;
  int v228;
  int v229;
  uint64_t v230;
  uint64_t v231;
  void (*v232)(char *, char *, uint64_t);
  int EnumCaseMultiPayload;
  uint64_t v234;
  uint64_t v235;
  void (*v236)(char *, char *, uint64_t);
  uint64_t v237;
  uint64_t v238;
  char *v239;
  char *v240;
  uint64_t v241;
  int v242;
  uint64_t v243;
  uint64_t v244;
  void (*v245)(char *, char *, uint64_t);
  uint64_t v246;
  char *v247;
  char *v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t (*v255)(uint64_t, uint64_t, uint64_t);
  int v256;
  int v257;
  uint64_t v258;
  _QWORD *v259;
  uint64_t v260;
  _QWORD *v261;
  unsigned int (*v262)(_QWORD *, uint64_t, uint64_t);
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  int *v266;
  uint64_t v267;
  _QWORD *v268;
  _QWORD *v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t (*v272)(_QWORD *, uint64_t, uint64_t);
  int v273;
  int v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  char *v278;
  char *v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  char *v287;
  char *v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  int v298;
  int v299;
  uint64_t v300;
  _QWORD *v301;
  uint64_t v302;
  uint64_t v303;
  unsigned int (*v304)(_QWORD *, uint64_t, uint64_t);
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  _QWORD *v310;
  _QWORD *v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t (*v314)(_QWORD *, uint64_t, uint64_t);
  int v315;
  int v316;
  uint64_t v317;
  uint64_t v318;
  char *v319;
  char *v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  char *v328;
  char *v329;
  uint64_t v330;
  uint64_t v331;
  char *v332;
  char *v333;
  uint64_t v334;
  uint64_t v335;
  char *v336;
  char *v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  _QWORD *v349;
  _QWORD *v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t (*v353)(_QWORD *, uint64_t, uint64_t);
  int v354;
  int v355;
  uint64_t v356;
  char *v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  void (*v361)(char *, char *, uint64_t);
  char *v362;
  uint64_t v363;
  uint64_t v364;
  _QWORD *v365;
  _QWORD *v366;
  int v367;
  int v368;
  uint64_t v369;
  char *v370;
  uint64_t v371;
  char *v372;
  uint64_t v373;
  void (*v374)(char *, char *, uint64_t);
  char *v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v382;
  char *v383;
  char *v384;
  uint64_t v385;
  uint64_t v386;
  char *v387;
  char *v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t *v391;
  unsigned int (*v392)(uint64_t *, uint64_t, uint64_t);
  unsigned int (*v393)(_QWORD *, uint64_t, uint64_t);
  void *v394;
  unsigned int (*v395)(_QWORD *, uint64_t, uint64_t);
  void (*v396)(char *, char *, uint64_t);
  _QWORD *v397;
  unsigned int (*v398)(_QWORD *, uint64_t, uint64_t);
  void *v399;
  void *v400;
  unsigned int (*v401)(_QWORD *, uint64_t, int *);
  _QWORD *v402;
  void *v403;
  char *v404;
  void *v405;
  _QWORD *v406;
  char *v407;
  char *v408;
  _QWORD *v409;
  _QWORD *v410;
  _QWORD *__dst;
  _QWORD *__dsta;
  _QWORD *__dstb;
  int *__dstf;
  char *__dstg;
  _QWORD *__dstc;
  void *__dstd;
  char *__dsth;
  char *__dsti;
  char *__dstj;
  _QWORD *__dste;
  uint64_t v422;
  uint64_t v423;
  char *v424;
  uint64_t v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  int *v430;
  int *v431;
  char *v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;

  v5 = (int *)type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
  v6 = *((_QWORD *)v5 - 1);
  v7 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v6 + 48);
  v8 = v7(a1, 1, v5);
  v9 = v7(a2, 1, v5);
  if (!v8)
  {
    if (v9)
    {
      sub_240388AE4(a1, type metadata accessor for ToolKitProtoToolDefinition.Version1);
      goto LABEL_7;
    }
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v14 = v5[17];
    v15 = (uint64_t *)(a1 + v14);
    v16 = (uint64_t *)(a2 + v14);
    v17 = type metadata accessor for ToolKitProtoTypeInstance(0);
    v18 = *(_QWORD *)(v17 - 8);
    v19 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v18 + 48);
    v20 = v19(v15, 1, v17);
    v21 = v19(v16, 1, v17);
    if (v20)
    {
      if (!v21)
      {
        v22 = *v16;
        if ((~*v16 & 0xF000000000000007) != 0)
          swift_retain();
        *v15 = v22;
        v23 = *(int *)(v17 + 20);
        v24 = (char *)v15 + v23;
        v25 = (char *)v16 + v23;
        v26 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
LABEL_23:
        v52 = v5[18];
        v53 = (_QWORD *)(a1 + v52);
        v54 = (_QWORD *)(a2 + v52);
        *v53 = *v54;
        v53[1] = v54[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v55 = v5[19];
        v56 = a1 + v55;
        v57 = a2 + v55;
        v58 = type metadata accessor for ToolKitProtoAppDefinition(0);
        v59 = *(_QWORD *)(v58 - 8);
        v60 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v59 + 48);
        v61 = v60(v56, 1, v58);
        v62 = v60(v57, 1, v58);
        v431 = v5;
        v434 = a1;
        v429 = a2;
        if (v61)
        {
          if (!v62)
          {
            *(_QWORD *)v56 = *(_QWORD *)v57;
            *(_QWORD *)(v56 + 8) = *(_QWORD *)(v57 + 8);
            *(_QWORD *)(v56 + 16) = *(_QWORD *)(v57 + 16);
            *(_QWORD *)(v56 + 24) = *(_QWORD *)(v57 + 24);
            *(_QWORD *)(v56 + 32) = *(_QWORD *)(v57 + 32);
            *(_QWORD *)(v56 + 40) = *(_QWORD *)(v57 + 40);
            *(_QWORD *)(v56 + 48) = *(_QWORD *)(v57 + 48);
            *(_QWORD *)(v56 + 56) = *(_QWORD *)(v57 + 56);
            *(_QWORD *)(v56 + 64) = *(_QWORD *)(v57 + 64);
            *(_QWORD *)(v56 + 72) = *(_QWORD *)(v57 + 72);
            *(_BYTE *)(v56 + 80) = *(_BYTE *)(v57 + 80);
            v423 = v58;
            v63 = *(int *)(v58 + 40);
            v402 = (_QWORD *)(v57 + v63);
            __dstb = (_QWORD *)(v56 + v63);
            v64 = type metadata accessor for ToolKitProtoAppDefinition.Device(0);
            v65 = *(_QWORD **)(v64 - 8);
            v395 = (unsigned int (*)(_QWORD *, uint64_t, uint64_t))v65[6];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v395(v402, 1, v64))
            {
              v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA430);
              memcpy(__dstb, v402, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
              v5 = v431;
              v67 = a1;
            }
            else
            {
              v399 = v65;
              if (v402[1] == 1)
              {
                *(_OWORD *)__dstb = *(_OWORD *)v402;
              }
              else
              {
                *__dstb = *v402;
                __dstb[1] = v402[1];
                swift_bridgeObjectRetain();
              }
              v5 = v431;
              v67 = a1;
              v164 = *(int *)(v64 + 20);
              v165 = (char *)__dstb + v164;
              v166 = (char *)v402 + v164;
              v167 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v167 - 8) + 16))(v165, v166, v167);
              (*((void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))v399 + 7))(__dstb, 0, 1, v64);
            }
            v168 = *(int *)(v423 + 44);
            v169 = v56 + v168;
            v170 = v57 + v168;
            v171 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v171 - 8) + 16))(v169, v170, v171);
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v59 + 56))(v56, 0, 1, v423);
            a1 = v67;
LABEL_97:
            v189 = v5[20];
            v190 = (_QWORD *)(a1 + v189);
            v191 = (_QWORD *)(a2 + v189);
            *v190 = *v191;
            v190[1] = v191[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v192 = v5[21];
            v193 = (_QWORD *)(a1 + v192);
            v194 = (_QWORD *)(a2 + v192);
            v195 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation(0);
            v196 = *(_QWORD *)(v195 - 8);
            v197 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v196 + 48);
            v198 = v197(v193, 1, v195);
            v199 = v197(v194, 1, v195);
            if (v198)
            {
              if (!v199)
              {
                *v193 = *v194;
                v193[1] = v194[1];
                v193[2] = v194[2];
                v193[3] = v194[3];
                v200 = *(int *)(v195 + 24);
                v201 = (char *)v193 + v200;
                v202 = (char *)v194 + v200;
                v203 = sub_2408E57A4();
                v204 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v203 - 8) + 16);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                v205 = v201;
                a2 = v429;
                v5 = v431;
                v206 = v434;
                v204(v205, v202, v203);
                (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v196 + 56))(v193, 0, 1, v195);
                goto LABEL_104;
              }
            }
            else
            {
              if (!v199)
              {
                *v193 = *v194;
                v193[1] = v194[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v193[2] = v194[2];
                v193[3] = v194[3];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v220 = *(int *)(v195 + 24);
                v221 = (char *)v193 + v220;
                v222 = (char *)v194 + v220;
                v223 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v223 - 8) + 24))(v221, v222, v223);
                goto LABEL_103;
              }
              sub_240388AE4((uint64_t)v193, type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation);
            }
            v207 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA440);
            memcpy(v193, v194, *(_QWORD *)(*(_QWORD *)(v207 - 8) + 64));
LABEL_103:
            v206 = v434;
LABEL_104:
            v208 = v5[22];
            v209 = (_QWORD *)(v206 + v208);
            v210 = (_QWORD *)(a2 + v208);
            v211 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon(0);
            v212 = *(_QWORD *)(v211 - 8);
            v213 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v212 + 48);
            v214 = v213(v209, 1, v211);
            v215 = v213(v210, 1, v211);
            if (v214)
            {
              if (!v215)
              {
                v216 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind(0);
                v217 = *(_QWORD *)(v216 - 8);
                if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v217 + 48))(v210, 1, v216))
                {
                  v218 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA448);
                  memcpy(v209, v210, *(_QWORD *)(*(_QWORD *)(v218 - 8) + 64));
                }
                else
                {
                  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
                  *v209 = *v210;
                  v209[1] = v210[1];
                  if (EnumCaseMultiPayload == 1)
                  {
                    *((_BYTE *)v209 + 16) = *((_BYTE *)v210 + 16);
                    v209[3] = v210[3];
                    v209[4] = v210[4];
                    v209[5] = v210[5];
                    v209[6] = v210[6];
                    v234 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0)
                                  + 32);
                    v408 = (char *)v210 + v234;
                    __dsti = (char *)v209 + v234;
                    v235 = sub_2408E57A4();
                    v236 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v235 - 8) + 16);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    v236(__dsti, v408, v235);
                    v5 = v431;
                  }
                  else
                  {
                    swift_bridgeObjectRetain();
                  }
                  swift_storeEnumTagMultiPayload();
                  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v217 + 56))(v209, 0, 1, v216);
                  a2 = v429;
                }
                v238 = *(int *)(v211 + 20);
                v239 = (char *)v209 + v238;
                v240 = (char *)v210 + v238;
                v241 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v241 - 8) + 16))(v239, v240, v241);
                (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v212 + 56))(v209, 0, 1, v211);
LABEL_132:
                v250 = v5[23];
                v251 = v434;
                v252 = v434 + v250;
                v253 = a2 + v250;
                v254 = type metadata accessor for ToolKitProtoContainerDefinition(0);
                __dste = *(_QWORD **)(v254 - 8);
                v255 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))__dste[6];
                v256 = v255(v252, 1, v254);
                v257 = v255(v253, 1, v254);
                if (v256)
                {
                  if (!v257)
                  {
                    *(_QWORD *)v252 = *(_QWORD *)v253;
                    *(_QWORD *)(v252 + 8) = *(_QWORD *)(v253 + 8);
                    *(_QWORD *)(v252 + 16) = *(_QWORD *)(v253 + 16);
                    *(_QWORD *)(v252 + 24) = *(_QWORD *)(v253 + 24);
                    *(_BYTE *)(v252 + 32) = *(_BYTE *)(v253 + 32);
                    *(_BYTE *)(v252 + 33) = *(_BYTE *)(v253 + 33);
                    *(_QWORD *)(v252 + 40) = *(_QWORD *)(v253 + 40);
                    *(_QWORD *)(v252 + 48) = *(_QWORD *)(v253 + 48);
                    *(_QWORD *)(v252 + 56) = *(_QWORD *)(v253 + 56);
                    *(_QWORD *)(v252 + 64) = *(_QWORD *)(v253 + 64);
                    v258 = *(int *)(v254 + 40);
                    v409 = (_QWORD *)(v252 + v258);
                    v259 = (_QWORD *)(v253 + v258);
                    v260 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
                    v261 = *(_QWORD **)(v260 - 8);
                    v262 = (unsigned int (*)(_QWORD *, uint64_t, uint64_t))v261[6];
                    v263 = v260;
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    if (v262(v259, 1, v263))
                    {
                      v264 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA458);
                      memcpy(v409, v259, *(_QWORD *)(*(_QWORD *)(v264 - 8) + 64));
                      a2 = v429;
                      v5 = v431;
                    }
                    else
                    {
                      v400 = v261;
                      if (v259[1] == 1)
                      {
                        *(_OWORD *)v409 = *(_OWORD *)v259;
                      }
                      else
                      {
                        *v409 = *v259;
                        v409[1] = v259[1];
                        swift_bridgeObjectRetain();
                      }
                      a2 = v429;
                      v276 = *(int *)(v263 + 20);
                      v277 = v263;
                      v278 = (char *)v409 + v276;
                      v279 = (char *)v259 + v276;
                      v280 = sub_2408E57A4();
                      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v280 - 8) + 16))(v278, v279, v280);
                      (*((void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))v400 + 7))(v409, 0, 1, v277);
                      v5 = v431;
                    }
                    v281 = *(int *)(v254 + 44);
                    v282 = v252 + v281;
                    v283 = v253 + v281;
                    v284 = sub_2408E57A4();
                    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v284 - 8) + 16))(v282, v283, v284);
                    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))__dste[7])(v252, 0, 1, v254);
                    v251 = v434;
LABEL_158:
                    v294 = v5[24];
                    v295 = v251;
                    v296 = v251 + v294;
                    v297 = a2 + v294;
                    v298 = v255(v251 + v294, 1, v254);
                    v299 = v255(v297, 1, v254);
                    if (v298)
                    {
                      if (!v299)
                      {
                        *(_QWORD *)v296 = *(_QWORD *)v297;
                        *(_QWORD *)(v296 + 8) = *(_QWORD *)(v297 + 8);
                        *(_QWORD *)(v296 + 16) = *(_QWORD *)(v297 + 16);
                        *(_QWORD *)(v296 + 24) = *(_QWORD *)(v297 + 24);
                        *(_BYTE *)(v296 + 32) = *(_BYTE *)(v297 + 32);
                        *(_BYTE *)(v296 + 33) = *(_BYTE *)(v297 + 33);
                        *(_QWORD *)(v296 + 40) = *(_QWORD *)(v297 + 40);
                        *(_QWORD *)(v296 + 48) = *(_QWORD *)(v297 + 48);
                        *(_QWORD *)(v296 + 56) = *(_QWORD *)(v297 + 56);
                        *(_QWORD *)(v296 + 64) = *(_QWORD *)(v297 + 64);
                        v426 = v254;
                        v300 = *(int *)(v254 + 40);
                        v410 = (_QWORD *)(v296 + v300);
                        v301 = (_QWORD *)(v297 + v300);
                        v302 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
                        v303 = *(_QWORD *)(v302 - 8);
                        v304 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v303 + 48);
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        if (v304(v301, 1, v302))
                        {
                          v305 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA458);
                          memcpy(v410, v301, *(_QWORD *)(*(_QWORD *)(v305 - 8) + 64));
                          a2 = v429;
                          v5 = v431;
                          v306 = v426;
                        }
                        else
                        {
                          if (v301[1] == 1)
                          {
                            *(_OWORD *)v410 = *(_OWORD *)v301;
                          }
                          else
                          {
                            *v410 = *v301;
                            v410[1] = v301[1];
                            swift_bridgeObjectRetain();
                          }
                          v306 = v426;
                          a2 = v429;
                          v318 = *(int *)(v302 + 20);
                          v319 = (char *)v410 + v318;
                          v320 = (char *)v301 + v318;
                          v321 = sub_2408E57A4();
                          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v321 - 8) + 16))(v319, v320, v321);
                          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v303 + 56))(v410, 0, 1, v302);
                          v5 = v431;
                        }
                        v322 = *(int *)(v306 + 44);
                        v323 = v296 + v322;
                        v324 = v297 + v322;
                        v325 = sub_2408E57A4();
                        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v325 - 8) + 16))(v323, v324, v325);
                        ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))__dste[7])(v296, 0, 1, v306);
                        v295 = v434;
                        goto LABEL_193;
                      }
                      goto LABEL_164;
                    }
                    if (v299)
                    {
                      sub_240388AE4(v296, type metadata accessor for ToolKitProtoContainerDefinition);
LABEL_164:
                      v307 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA460);
                      memcpy((void *)v296, (const void *)v297, *(_QWORD *)(*(_QWORD *)(v307 - 8) + 64));
LABEL_193:
                      v343 = v5[25];
                      v344 = v295 + v343;
                      v345 = a2 + v343;
                      v346 = sub_2408E57A4();
                      v347 = v344;
                      a1 = v295;
                      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v346 - 8) + 24))(v347, v345, v346);
                      goto LABEL_194;
                    }
                    v308 = v251;
                    *(_QWORD *)v296 = *(_QWORD *)v297;
                    *(_QWORD *)(v296 + 8) = *(_QWORD *)(v297 + 8);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(_QWORD *)(v296 + 16) = *(_QWORD *)(v297 + 16);
                    *(_QWORD *)(v296 + 24) = *(_QWORD *)(v297 + 24);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(_BYTE *)(v296 + 32) = *(_BYTE *)(v297 + 32);
                    *(_BYTE *)(v296 + 33) = *(_BYTE *)(v297 + 33);
                    *(_QWORD *)(v296 + 40) = *(_QWORD *)(v297 + 40);
                    *(_QWORD *)(v296 + 48) = *(_QWORD *)(v297 + 48);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(_QWORD *)(v296 + 56) = *(_QWORD *)(v297 + 56);
                    *(_QWORD *)(v296 + 64) = *(_QWORD *)(v297 + 64);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    v427 = v254;
                    v309 = *(int *)(v254 + 40);
                    v310 = (_QWORD *)(v296 + v309);
                    v311 = (_QWORD *)(v297 + v309);
                    v312 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
                    v313 = *(_QWORD *)(v312 - 8);
                    v314 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v313 + 48);
                    v315 = v314(v310, 1, v312);
                    v316 = v314(v311, 1, v312);
                    if (v315)
                    {
                      if (!v316)
                      {
                        if (v311[1] == 1)
                        {
                          *(_OWORD *)v310 = *(_OWORD *)v311;
                        }
                        else
                        {
                          *v310 = *v311;
                          v310[1] = v311[1];
                          swift_bridgeObjectRetain();
                        }
                        v327 = *(int *)(v312 + 20);
                        v328 = (char *)v310 + v327;
                        v329 = (char *)v311 + v327;
                        v330 = sub_2408E57A4();
                        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v330 - 8) + 16))(v328, v329, v330);
                        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v313 + 56))(v310, 0, 1, v312);
                        goto LABEL_192;
                      }
                      goto LABEL_173;
                    }
                    if (v316)
                    {
                      sub_240388AE4((uint64_t)v310, type metadata accessor for ToolKitProtoContainerDefinition.Device);
LABEL_173:
                      v317 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA458);
                      memcpy(v310, v311, *(_QWORD *)(*(_QWORD *)(v317 - 8) + 64));
LABEL_192:
                      v295 = v308;
                      a2 = v429;
                      v5 = v431;
                      v339 = *(int *)(v427 + 44);
                      v340 = v296 + v339;
                      v341 = v297 + v339;
                      v342 = sub_2408E57A4();
                      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v342 - 8) + 24))(v340, v341, v342);
                      goto LABEL_193;
                    }
                    v326 = v311[1];
                    if (v310[1] == 1)
                    {
                      if (v326 != 1)
                      {
                        *v310 = *v311;
                        v310[1] = v311[1];
                        swift_bridgeObjectRetain();
LABEL_191:
                        v335 = *(int *)(v312 + 20);
                        v336 = (char *)v310 + v335;
                        v337 = (char *)v311 + v335;
                        v338 = sub_2408E57A4();
                        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v338 - 8) + 24))(v336, v337, v338);
                        goto LABEL_192;
                      }
                    }
                    else
                    {
                      if (v326 != 1)
                      {
                        *v310 = *v311;
                        v310[1] = v311[1];
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRelease();
                        goto LABEL_191;
                      }
                      sub_2406EBF14((uint64_t)v310);
                    }
                    *(_OWORD *)v310 = *(_OWORD *)v311;
                    goto LABEL_191;
                  }
LABEL_138:
                  v265 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA460);
                  memcpy((void *)v252, (const void *)v253, *(_QWORD *)(*(_QWORD *)(v265 - 8) + 64));
                  goto LABEL_158;
                }
                if (v257)
                {
                  sub_240388AE4(v252, type metadata accessor for ToolKitProtoContainerDefinition);
                  goto LABEL_138;
                }
                v266 = v5;
                *(_QWORD *)v252 = *(_QWORD *)v253;
                *(_QWORD *)(v252 + 8) = *(_QWORD *)(v253 + 8);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                *(_QWORD *)(v252 + 16) = *(_QWORD *)(v253 + 16);
                *(_QWORD *)(v252 + 24) = *(_QWORD *)(v253 + 24);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                *(_BYTE *)(v252 + 32) = *(_BYTE *)(v253 + 32);
                *(_BYTE *)(v252 + 33) = *(_BYTE *)(v253 + 33);
                *(_QWORD *)(v252 + 40) = *(_QWORD *)(v253 + 40);
                *(_QWORD *)(v252 + 48) = *(_QWORD *)(v253 + 48);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                *(_QWORD *)(v252 + 56) = *(_QWORD *)(v253 + 56);
                *(_QWORD *)(v252 + 64) = *(_QWORD *)(v253 + 64);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v425 = v254;
                v267 = *(int *)(v254 + 40);
                v268 = (_QWORD *)(v252 + v267);
                v269 = (_QWORD *)(v253 + v267);
                v270 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
                v271 = *(_QWORD *)(v270 - 8);
                v272 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v271 + 48);
                v273 = v272(v268, 1, v270);
                v274 = v272(v269, 1, v270);
                if (v273)
                {
                  if (!v274)
                  {
                    if (v269[1] == 1)
                    {
                      *(_OWORD *)v268 = *(_OWORD *)v269;
                    }
                    else
                    {
                      *v268 = *v269;
                      v268[1] = v269[1];
                      swift_bridgeObjectRetain();
                    }
                    v286 = *(int *)(v270 + 20);
                    v287 = (char *)v268 + v286;
                    v288 = (char *)v269 + v286;
                    v289 = sub_2408E57A4();
                    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v289 - 8) + 16))(v287, v288, v289);
                    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v271 + 56))(v268, 0, 1, v270);
                    goto LABEL_156;
                  }
LABEL_147:
                  v275 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA458);
                  memcpy(v268, v269, *(_QWORD *)(*(_QWORD *)(v275 - 8) + 64));
LABEL_156:
                  v251 = v434;
                  a2 = v429;
                  v5 = v266;
LABEL_157:
                  v254 = v425;
                  v290 = *(int *)(v425 + 44);
                  v291 = v252 + v290;
                  v292 = v253 + v290;
                  v293 = sub_2408E57A4();
                  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v293 - 8) + 24))(v291, v292, v293);
                  goto LABEL_158;
                }
                if (v274)
                {
                  sub_240388AE4((uint64_t)v268, type metadata accessor for ToolKitProtoContainerDefinition.Device);
                  goto LABEL_147;
                }
                v285 = v269[1];
                if (v268[1] == 1)
                {
                  v5 = v266;
                  if (v285 != 1)
                  {
                    *v268 = *v269;
                    v268[1] = v269[1];
                    swift_bridgeObjectRetain();
LABEL_189:
                    v331 = *(int *)(v270 + 20);
                    v332 = (char *)v268 + v331;
                    v333 = (char *)v269 + v331;
                    v334 = sub_2408E57A4();
                    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v334 - 8) + 24))(v332, v333, v334);
                    v251 = v434;
                    a2 = v429;
                    goto LABEL_157;
                  }
                }
                else
                {
                  v5 = v266;
                  if (v285 != 1)
                  {
                    *v268 = *v269;
                    v268[1] = v269[1];
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    goto LABEL_189;
                  }
                  sub_2406EBF14((uint64_t)v268);
                }
                *(_OWORD *)v268 = *(_OWORD *)v269;
                goto LABEL_189;
              }
LABEL_110:
              v219 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA450);
              memcpy(v209, v210, *(_QWORD *)(*(_QWORD *)(v219 - 8) + 64));
              goto LABEL_132;
            }
            if (v215)
            {
              sub_240388AE4((uint64_t)v209, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon);
              goto LABEL_110;
            }
            v224 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind(0);
            v225 = *(_QWORD *)(v224 - 8);
            v226 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v225 + 48);
            v227 = v226(v209, 1, v224);
            v228 = v226(v210, 1, v224);
            if (v227)
            {
              if (!v228)
              {
                v229 = swift_getEnumCaseMultiPayload();
                *v209 = *v210;
                v209[1] = v210[1];
                if (v229 == 1)
                {
                  *((_BYTE *)v209 + 16) = *((_BYTE *)v210 + 16);
                  v209[3] = v210[3];
                  v209[4] = v210[4];
                  v209[5] = v210[5];
                  v209[6] = v210[6];
                  v230 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0)
                                + 32);
                  v407 = (char *)v210 + v230;
                  __dsth = (char *)v209 + v230;
                  v231 = sub_2408E57A4();
                  v232 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v231 - 8) + 16);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  v232(__dsth, v407, v231);
                }
                else
                {
                  swift_bridgeObjectRetain();
                }
                v5 = v431;
                swift_storeEnumTagMultiPayload();
                (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v225 + 56))(v209, 0, 1, v224);
                goto LABEL_131;
              }
            }
            else
            {
              if (!v228)
              {
                if (v434 != a2)
                {
                  sub_240388AE4((uint64_t)v209, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind);
                  v242 = swift_getEnumCaseMultiPayload();
                  *v209 = *v210;
                  v209[1] = v210[1];
                  if (v242 == 1)
                  {
                    *((_BYTE *)v209 + 16) = *((_BYTE *)v210 + 16);
                    v209[3] = v210[3];
                    v209[4] = v210[4];
                    v209[5] = v210[5];
                    v209[6] = v210[6];
                    v243 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0)
                                  + 32);
                    __dstj = (char *)v210 + v243;
                    v424 = (char *)v209 + v243;
                    v244 = sub_2408E57A4();
                    v245 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v244 - 8) + 16);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    v245(v424, __dstj, v244);
                  }
                  else
                  {
                    swift_bridgeObjectRetain();
                  }
                  swift_storeEnumTagMultiPayload();
                  v5 = v431;
                }
                goto LABEL_131;
              }
              sub_240388AE4((uint64_t)v209, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind);
            }
            v237 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA448);
            memcpy(v209, v210, *(_QWORD *)(*(_QWORD *)(v237 - 8) + 64));
LABEL_131:
            v246 = *(int *)(v211 + 20);
            v247 = (char *)v209 + v246;
            v248 = (char *)v210 + v246;
            v249 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v249 - 8) + 24))(v247, v248, v249);
            goto LABEL_132;
          }
LABEL_29:
          v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA438);
          memcpy((void *)v56, (const void *)v57, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
          goto LABEL_97;
        }
        if (v62)
        {
          sub_240388AE4(v56, type metadata accessor for ToolKitProtoAppDefinition);
          goto LABEL_29;
        }
        *(_QWORD *)v56 = *(_QWORD *)v57;
        *(_QWORD *)(v56 + 8) = *(_QWORD *)(v57 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)(v56 + 16) = *(_QWORD *)(v57 + 16);
        *(_QWORD *)(v56 + 24) = *(_QWORD *)(v57 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)(v56 + 32) = *(_QWORD *)(v57 + 32);
        *(_QWORD *)(v56 + 40) = *(_QWORD *)(v57 + 40);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)(v56 + 48) = *(_QWORD *)(v57 + 48);
        *(_QWORD *)(v56 + 56) = *(_QWORD *)(v57 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)(v56 + 64) = *(_QWORD *)(v57 + 64);
        *(_QWORD *)(v56 + 72) = *(_QWORD *)(v57 + 72);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_BYTE *)(v56 + 80) = *(_BYTE *)(v57 + 80);
        v72 = *(int *)(v58 + 40);
        v73 = (_QWORD *)(v56 + v72);
        v74 = (_QWORD *)(v57 + v72);
        v75 = type metadata accessor for ToolKitProtoAppDefinition.Device(0);
        v76 = *(_QWORD *)(v75 - 8);
        v77 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v76 + 48);
        v78 = v73;
        LODWORD(v73) = v77(v73, 1, v75);
        v79 = v77(v74, 1, v75);
        if ((_DWORD)v73)
        {
          if (!v79)
          {
            if (v74[1] == 1)
            {
              *(_OWORD *)v78 = *(_OWORD *)v74;
            }
            else
            {
              *v78 = *v74;
              v78[1] = v74[1];
              swift_bridgeObjectRetain();
            }
            v177 = *(int *)(v75 + 20);
            v178 = (char *)v78 + v177;
            v179 = (char *)v74 + v177;
            v180 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v180 - 8) + 16))(v178, v179, v180);
            (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v76 + 56))(v78, 0, 1, v75);
            goto LABEL_96;
          }
          goto LABEL_80;
        }
        if (v79)
        {
          sub_240388AE4((uint64_t)v78, type metadata accessor for ToolKitProtoAppDefinition.Device);
LABEL_80:
          v163 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA430);
          memcpy(v78, v74, *(_QWORD *)(*(_QWORD *)(v163 - 8) + 64));
LABEL_96:
          a2 = v429;
          v5 = v431;
          v185 = *(int *)(v58 + 44);
          v186 = v56 + v185;
          v187 = v57 + v185;
          v188 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v188 - 8) + 24))(v186, v187, v188);
          goto LABEL_97;
        }
        v176 = v74[1];
        if (v78[1] == 1)
        {
          if (v176 != 1)
          {
            *v78 = *v74;
            v78[1] = v74[1];
            swift_bridgeObjectRetain();
LABEL_95:
            v181 = *(int *)(v75 + 20);
            v182 = (char *)v78 + v181;
            v183 = (char *)v74 + v181;
            v184 = sub_2408E57A4();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v184 - 8) + 24))(v182, v183, v184);
            goto LABEL_96;
          }
        }
        else
        {
          if (v176 != 1)
          {
            *v78 = *v74;
            v78[1] = v74[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            goto LABEL_95;
          }
          sub_2406EBEE0((uint64_t)v78);
        }
        *(_OWORD *)v78 = *(_OWORD *)v74;
        goto LABEL_95;
      }
LABEL_22:
      v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
      goto LABEL_23;
    }
    if (v21)
    {
      sub_240388AE4((uint64_t)v15, type metadata accessor for ToolKitProtoTypeInstance);
      goto LABEL_22;
    }
    v70 = *v16;
    v71 = *v16 & 0xF000000000000007;
    if ((~*v15 & 0xF000000000000007) != 0)
    {
      if (v71 != 0xF000000000000007)
      {
        *v15 = v70;
        swift_retain();
        swift_release();
        goto LABEL_85;
      }
      sub_2403D4924((uint64_t)v15);
      v70 = *v16;
    }
    else if (v71 != 0xF000000000000007)
    {
      *v15 = v70;
      swift_retain();
LABEL_85:
      v172 = *(int *)(v17 + 20);
      v173 = (char *)v15 + v172;
      v174 = (char *)v16 + v172;
      v175 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v175 - 8) + 24))(v173, v174, v175);
      goto LABEL_23;
    }
    *v15 = v70;
    goto LABEL_85;
  }
  if (v9)
  {
LABEL_7:
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA468);
    memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_194;
  }
  v422 = v6;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  v430 = v5;
  v433 = a1;
  v10 = v5[17];
  __dst = (_QWORD *)(a1 + v10);
  v428 = a2;
  v391 = (uint64_t *)(a2 + v10);
  v11 = type metadata accessor for ToolKitProtoTypeInstance(0);
  v390 = *(_QWORD *)(v11 - 8);
  v392 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v390 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v392(v391, 1, v11))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
    memcpy(__dst, v391, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v27 = *v391;
    if ((~*v391 & 0xF000000000000007) != 0)
      swift_retain();
    *__dst = v27;
    v28 = *(int *)(v11 + 20);
    v29 = (char *)__dst + v28;
    v30 = (char *)v391 + v28;
    v31 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v390 + 56))(__dst, 0, 1, v11);
  }
  v32 = v430;
  v33 = a1;
  v34 = v430[18];
  v35 = (_QWORD *)(a1 + v34);
  v36 = (_QWORD *)(a2 + v34);
  *v35 = *v36;
  v35[1] = v36[1];
  v37 = v430[19];
  v38 = (_QWORD *)(a1 + v37);
  v39 = (_QWORD *)(a2 + v37);
  v40 = type metadata accessor for ToolKitProtoAppDefinition(0);
  v41 = *(_QWORD **)(v40 - 8);
  v42 = (unsigned int (*)(_QWORD *, uint64_t, uint64_t))v41[6];
  swift_bridgeObjectRetain();
  if (v42(v39, 1, v40))
  {
    v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA438);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
  }
  else
  {
    v394 = v41;
    *v38 = *v39;
    v38[1] = v39[1];
    v38[2] = v39[2];
    v38[3] = v39[3];
    v38[4] = v39[4];
    v38[5] = v39[5];
    v38[6] = v39[6];
    v38[7] = v39[7];
    v38[8] = v39[8];
    v38[9] = v39[9];
    *((_BYTE *)v38 + 80) = *((_BYTE *)v39 + 80);
    v44 = *(int *)(v40 + 40);
    __dsta = (_QWORD *)((char *)v38 + v44);
    v45 = (_QWORD *)((char *)v39 + v44);
    v46 = type metadata accessor for ToolKitProtoAppDefinition.Device(0);
    v47 = *(_QWORD **)(v46 - 8);
    v401 = (unsigned int (*)(_QWORD *, uint64_t, int *))v47[6];
    v48 = (int *)v46;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v401(v45, 1, v48))
    {
      v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA430);
      memcpy(__dsta, v45, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
      a2 = v428;
      v32 = v430;
      v50 = (void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))v41;
    }
    else
    {
      v403 = v47;
      v69 = __dsta;
      if (v45[1] == 1)
      {
        *(_OWORD *)__dsta = *(_OWORD *)v45;
      }
      else
      {
        *__dsta = *v45;
        __dsta[1] = v45[1];
        swift_bridgeObjectRetain();
      }
      a2 = v428;
      v32 = v430;
      v50 = (void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))v394;
      v80 = v48[5];
      __dstf = v48;
      v81 = (char *)v69 + v80;
      v82 = (char *)v45 + v80;
      v83 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v83 - 8) + 16))(v81, v82, v83);
      (*((void (**)(_QWORD *, _QWORD, uint64_t, int *))v403 + 7))(v69, 0, 1, __dstf);
    }
    v84 = *(int *)(v40 + 44);
    v85 = (char *)v38 + v84;
    v86 = (char *)v39 + v84;
    v87 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v87 - 8) + 16))(v85, v86, v87);
    v50[7](v38, 0, 1, v40);
    v33 = v433;
  }
  v88 = v32[20];
  v89 = (_QWORD *)(v33 + v88);
  v90 = (_QWORD *)(a2 + v88);
  *v89 = *v90;
  v89[1] = v90[1];
  v91 = v32[21];
  v92 = (_QWORD *)(v33 + v91);
  v93 = (_QWORD *)(a2 + v91);
  v94 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation(0);
  v95 = *(_QWORD *)(v94 - 8);
  v96 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v95 + 48);
  swift_bridgeObjectRetain();
  if (v96(v93, 1, v94))
  {
    v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA440);
    memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
  }
  else
  {
    *v92 = *v93;
    v92[1] = v93[1];
    v92[2] = v93[2];
    v92[3] = v93[3];
    v98 = *(int *)(v94 + 24);
    v99 = (char *)v92 + v98;
    v100 = (char *)v93 + v98;
    v101 = sub_2408E57A4();
    v102 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v103 = v100;
    v32 = v430;
    v102(v99, v103, v101);
    a2 = v428;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v95 + 56))(v92, 0, 1, v94);
  }
  v104 = v32[22];
  v105 = (_QWORD *)(v33 + v104);
  v106 = (_QWORD *)(a2 + v104);
  v107 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon(0);
  v108 = *(_QWORD *)(v107 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v108 + 48))(v106, 1, v107))
  {
    v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA450);
    memcpy(v105, v106, *(_QWORD *)(*(_QWORD *)(v109 - 8) + 64));
  }
  else
  {
    v110 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind(0);
    v111 = *(_QWORD *)(v110 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v111 + 48))(v106, 1, v110))
    {
      v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA448);
      memcpy(v105, v106, *(_QWORD *)(*(_QWORD *)(v112 - 8) + 64));
    }
    else
    {
      v113 = swift_getEnumCaseMultiPayload();
      *v105 = *v106;
      v105[1] = v106[1];
      if (v113 == 1)
      {
        *((_BYTE *)v105 + 16) = *((_BYTE *)v106 + 16);
        v105[3] = v106[3];
        v105[4] = v106[4];
        v105[5] = v106[5];
        v105[6] = v106[6];
        v114 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0) + 32);
        v404 = (char *)v106 + v114;
        __dstg = (char *)v105 + v114;
        v115 = sub_2408E57A4();
        v396 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v115 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v396(__dstg, v404, v115);
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      a2 = v428;
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v111 + 56))(v105, 0, 1, v110);
    }
    v116 = *(int *)(v107 + 20);
    v117 = (char *)v105 + v116;
    v118 = (char *)v106 + v116;
    v119 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v119 - 8) + 16))(v117, v118, v119);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v108 + 56))(v105, 0, 1, v107);
    v32 = v430;
  }
  v120 = v32[23];
  a1 = v433;
  v121 = (_QWORD *)(v433 + v120);
  v122 = (_QWORD *)(a2 + v120);
  v123 = type metadata accessor for ToolKitProtoContainerDefinition(0);
  v124 = *(_QWORD **)(v123 - 8);
  v125 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))v124[6];
  if (v125(v122, 1, v123))
  {
    v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA460);
    memcpy(v121, v122, *(_QWORD *)(*(_QWORD *)(v126 - 8) + 64));
  }
  else
  {
    v405 = v125;
    __dstc = v124;
    *v121 = *v122;
    v121[1] = v122[1];
    v121[2] = v122[2];
    v121[3] = v122[3];
    *((_BYTE *)v121 + 32) = *((_BYTE *)v122 + 32);
    *((_BYTE *)v121 + 33) = *((_BYTE *)v122 + 33);
    v121[5] = v122[5];
    v121[6] = v122[6];
    v121[7] = v122[7];
    v121[8] = v122[8];
    v127 = *(int *)(v123 + 40);
    v397 = (_QWORD *)((char *)v121 + v127);
    v128 = (_QWORD *)((char *)v122 + v127);
    v129 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
    v130 = *(_QWORD *)(v129 - 8);
    v393 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v130 + 48);
    swift_bridgeObjectRetain();
    v131 = v128;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v393(v128, 1, v129))
    {
      v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA458);
      memcpy(v397, v128, *(_QWORD *)(*(_QWORD *)(v132 - 8) + 64));
      v32 = v430;
      v124 = __dstc;
    }
    else
    {
      if (v128[1] == 1)
      {
        *(_OWORD *)v397 = *(_OWORD *)v128;
      }
      else
      {
        *v397 = *v128;
        v397[1] = v128[1];
        swift_bridgeObjectRetain();
      }
      v32 = v430;
      v124 = __dstc;
      v133 = *(int *)(v129 + 20);
      v134 = (char *)v397 + v133;
      v135 = (char *)v131 + v133;
      v136 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v136 - 8) + 16))(v134, v135, v136);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v130 + 56))(v397, 0, 1, v129);
    }
    v137 = *(int *)(v123 + 44);
    v138 = (char *)v121 + v137;
    v139 = (char *)v122 + v137;
    v140 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v140 - 8) + 16))(v138, v139, v140);
    ((void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v124[7])(v121, 0, 1, v123);
    a1 = v433;
    a2 = v428;
    v125 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))v405;
  }
  v141 = v32[24];
  v142 = (_QWORD *)(a1 + v141);
  v143 = (_QWORD *)(a2 + v141);
  if (v125(a2 + v141, 1, v123))
  {
    v144 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA460);
    memcpy(v142, v143, *(_QWORD *)(*(_QWORD *)(v144 - 8) + 64));
  }
  else
  {
    __dstd = v124;
    *v142 = *v143;
    v142[1] = v143[1];
    v142[2] = v143[2];
    v142[3] = v143[3];
    *((_BYTE *)v142 + 32) = *((_BYTE *)v143 + 32);
    *((_BYTE *)v142 + 33) = *((_BYTE *)v143 + 33);
    v142[5] = v143[5];
    v142[6] = v143[6];
    v142[7] = v143[7];
    v142[8] = v143[8];
    v145 = *(int *)(v123 + 40);
    v406 = (_QWORD *)((char *)v142 + v145);
    v146 = (_QWORD *)((char *)v143 + v145);
    v147 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
    v148 = *(_QWORD *)(v147 - 8);
    v398 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v148 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v398(v146, 1, v147))
    {
      v149 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA458);
      memcpy(v406, v146, *(_QWORD *)(*(_QWORD *)(v149 - 8) + 64));
      v32 = v430;
      v150 = (void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))__dstd;
    }
    else
    {
      v150 = (void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))__dstd;
      if (v146[1] == 1)
      {
        *(_OWORD *)v406 = *(_OWORD *)v146;
      }
      else
      {
        *v406 = *v146;
        v406[1] = v146[1];
        swift_bridgeObjectRetain();
      }
      v32 = v430;
      v151 = *(int *)(v147 + 20);
      v152 = (char *)v406 + v151;
      v153 = (char *)v146 + v151;
      v154 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v154 - 8) + 16))(v152, v153, v154);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v148 + 56))(v406, 0, 1, v147);
    }
    v155 = *(int *)(v123 + 44);
    v156 = (char *)v142 + v155;
    v157 = (char *)v143 + v155;
    v158 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v158 - 8) + 16))(v156, v157, v158);
    v150[7](v142, 0, 1, v123);
    a1 = v433;
    a2 = v428;
  }
  v159 = v32[25];
  v160 = a1 + v159;
  v161 = a2 + v159;
  v162 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v162 - 8) + 16))(v160, v161, v162);
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v422 + 56))(a1, 0, 1, v32);
LABEL_194:
  v348 = a3[5];
  v349 = (_QWORD *)(a1 + v348);
  v350 = (_QWORD *)(a2 + v348);
  v351 = type metadata accessor for TranscriptProtoStatementID(0);
  v352 = *(_QWORD *)(v351 - 8);
  v353 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v352 + 48);
  v354 = v353(v349, 1, v351);
  v355 = v353(v350, 1, v351);
  if (v354)
  {
    if (!v355)
    {
      *(_DWORD *)v349 = *(_DWORD *)v350;
      v349[1] = v350[1];
      v349[2] = v350[2];
      v356 = *(int *)(v351 + 24);
      v432 = (char *)v349 + v356;
      v435 = a1;
      v357 = (char *)v350 + v356;
      v358 = sub_2408E57A4();
      v359 = v352;
      v360 = a2;
      v361 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v358 - 8) + 16);
      swift_bridgeObjectRetain();
      v362 = v357;
      a1 = v435;
      v361(v432, v362, v358);
      a2 = v360;
      v352 = v359;
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v359 + 56))(v349, 0, 1, v351);
      goto LABEL_200;
    }
    goto LABEL_199;
  }
  if (v355)
  {
    sub_240388AE4((uint64_t)v349, type metadata accessor for TranscriptProtoStatementID);
LABEL_199:
    v363 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v349, v350, *(_QWORD *)(*(_QWORD *)(v363 - 8) + 64));
    goto LABEL_200;
  }
  *(_DWORD *)v349 = *(_DWORD *)v350;
  v349[1] = v350[1];
  v349[2] = v350[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v382 = *(int *)(v351 + 24);
  v383 = (char *)v349 + v382;
  v384 = (char *)v350 + v382;
  v385 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v385 - 8) + 24))(v383, v384, v385);
LABEL_200:
  v364 = a3[6];
  v365 = (_QWORD *)(a1 + v364);
  v366 = (_QWORD *)(a2 + v364);
  v367 = v353((_QWORD *)(a1 + v364), 1, v351);
  v368 = v353(v366, 1, v351);
  if (!v367)
  {
    if (!v368)
    {
      *(_DWORD *)v365 = *(_DWORD *)v366;
      v365[1] = v366[1];
      v365[2] = v366[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v386 = *(int *)(v351 + 24);
      v387 = (char *)v365 + v386;
      v388 = (char *)v366 + v386;
      v389 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v389 - 8) + 24))(v387, v388, v389);
      goto LABEL_206;
    }
    sub_240388AE4((uint64_t)v365, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_205;
  }
  if (v368)
  {
LABEL_205:
    v376 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v365, v366, *(_QWORD *)(*(_QWORD *)(v376 - 8) + 64));
    goto LABEL_206;
  }
  *(_DWORD *)v365 = *(_DWORD *)v366;
  v365[1] = v366[1];
  v365[2] = v366[2];
  v369 = *(int *)(v351 + 24);
  v370 = (char *)v365 + v369;
  v371 = a1;
  v372 = (char *)v366 + v369;
  v373 = sub_2408E57A4();
  v374 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v373 - 8) + 16);
  swift_bridgeObjectRetain();
  v375 = v372;
  a1 = v371;
  v374(v370, v375, v373);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v352 + 56))(v365, 0, 1, v351);
LABEL_206:
  v377 = a3[7];
  v378 = a1 + v377;
  v379 = a2 + v377;
  v380 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v380 - 8) + 24))(v378, v379, v380);
  return a1;
}

uint64_t sub_2406EBEE0(uint64_t a1)
{
  destroy for ToolKitProtoAppDefinition.ToolKitProtoDeviceKind();
  return a1;
}

uint64_t sub_2406EBF14(uint64_t a1)
{
  destroy for ToolKitProtoContainerDefinition.ToolKitProtoDeviceKind();
  return a1;
}

_OWORD *initializeWithTake for TranscriptProtoToolResolution(_OWORD *a1, _OWORD *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD *v21;
  _OWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  _OWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  _OWORD *v41;
  _OWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  _OWORD *v52;
  _OWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  _OWORD *v69;
  _OWORD *v70;
  uint64_t v71;
  _QWORD *v72;
  unsigned int (*v73)(_OWORD *, uint64_t, uint64_t);
  uint64_t v74;
  __int128 v75;
  uint64_t v76;
  _OWORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  _OWORD *v89;
  _OWORD *v90;
  uint64_t v91;
  uint64_t v92;
  __int128 v93;
  uint64_t v94;
  _OWORD *v95;
  _OWORD *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  _DWORD *v112;
  _DWORD *v113;
  uint64_t v114;
  uint64_t v115;
  unsigned int (*v116)(_OWORD *, uint64_t, uint64_t);
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  _DWORD *v123;
  _DWORD *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  char *v135;
  char *v136;
  _OWORD *v137;
  char *v138;
  _OWORD *__dst;
  char *__dstc;
  _QWORD *__dsta;
  void *__dstb;
  uint64_t v143;
  int *v144;

  v6 = (int *)type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
  v7 = *((_QWORD *)v6 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA468);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v143 = v7;
    v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
    *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
    *(_OWORD *)((char *)a1 + 56) = *(_OWORD *)((char *)a2 + 56);
    *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
    *((_BYTE *)a1 + 80) = *((_BYTE *)a2 + 80);
    *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
    *(_OWORD *)((char *)a1 + 104) = *(_OWORD *)((char *)a2 + 104);
    v10 = v6[17];
    v11 = (_QWORD *)((char *)a1 + v10);
    v12 = (_QWORD *)((char *)a2 + v10);
    v13 = type metadata accessor for ToolKitProtoTypeInstance(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      *v11 = *v12;
      v16 = *(int *)(v13 + 20);
      v17 = (char *)v11 + v16;
      v18 = (char *)v12 + v16;
      v19 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    *(_OWORD *)((char *)a1 + v6[18]) = *(_OWORD *)((char *)a2 + v6[18]);
    v20 = v6[19];
    v21 = (_OWORD *)((char *)a1 + v20);
    v22 = (_OWORD *)((char *)a2 + v20);
    v23 = type metadata accessor for ToolKitProtoAppDefinition(0);
    v24 = *(_QWORD *)(v23 - 8);
    v144 = a3;
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
    {
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA438);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      v26 = v22[1];
      *v21 = *v22;
      v21[1] = v26;
      v27 = v22[3];
      v21[2] = v22[2];
      v21[3] = v27;
      v21[4] = v22[4];
      *((_BYTE *)v21 + 80) = *((_BYTE *)v22 + 80);
      v28 = *(int *)(v23 + 40);
      __dst = (_OWORD *)((char *)v21 + v28);
      v29 = (_OWORD *)((char *)v22 + v28);
      v30 = type metadata accessor for ToolKitProtoAppDefinition.Device(0);
      v31 = *(_QWORD *)(v30 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
      {
        v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA430);
        memcpy(__dst, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        *__dst = *v29;
        v33 = *(int *)(v30 + 20);
        v136 = (char *)__dst + v33;
        v34 = (char *)v29 + v33;
        v35 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v136, v34, v35);
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v31 + 56))(__dst, 0, 1, v30);
      }
      a3 = v144;
      v36 = *(int *)(v23 + 44);
      v37 = (char *)v21 + v36;
      v38 = (char *)v22 + v36;
      v39 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
    }
    *(_OWORD *)((char *)a1 + v6[20]) = *(_OWORD *)((char *)a2 + v6[20]);
    v40 = v6[21];
    v41 = (_OWORD *)((char *)a1 + v40);
    v42 = (_OWORD *)((char *)a2 + v40);
    v43 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation(0);
    v44 = *(_QWORD *)(v43 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
    {
      v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA440);
      memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    }
    else
    {
      v46 = v42[1];
      *v41 = *v42;
      v41[1] = v46;
      v47 = *(int *)(v43 + 24);
      v48 = (char *)v41 + v47;
      v49 = (char *)v42 + v47;
      v50 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v48, v49, v50);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
    }
    v51 = v6[22];
    v52 = (_OWORD *)((char *)a1 + v51);
    v53 = (_OWORD *)((char *)a2 + v51);
    v54 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon(0);
    v55 = *(_QWORD *)(v54 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v55 + 48))(v53, 1, v54))
    {
      v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA450);
      memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    }
    else
    {
      v57 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind(0);
      v58 = *(_QWORD *)(v57 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v58 + 48))(v53, 1, v57))
      {
        v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA448);
        memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *v52 = *v53;
          *((_BYTE *)v52 + 16) = *((_BYTE *)v53 + 16);
          *(_OWORD *)((char *)v52 + 24) = *(_OWORD *)((char *)v53 + 24);
          *(_OWORD *)((char *)v52 + 40) = *(_OWORD *)((char *)v53 + 40);
          v60 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0) + 32);
          __dstc = (char *)v52 + v60;
          v61 = (char *)v53 + v60;
          v62 = sub_2408E57A4();
          v63 = v61;
          a3 = v144;
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 32))(__dstc, v63, v62);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v52, v53, *(_QWORD *)(v58 + 64));
        }
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v52, 0, 1, v57);
      }
      v64 = *(int *)(v54 + 20);
      v65 = (char *)v52 + v64;
      v66 = (char *)v53 + v64;
      v67 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 32))(v65, v66, v67);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
    }
    v68 = v6[23];
    v69 = (_OWORD *)((char *)a1 + v68);
    v70 = (_OWORD *)((char *)a2 + v68);
    v71 = type metadata accessor for ToolKitProtoContainerDefinition(0);
    v72 = *(_QWORD **)(v71 - 8);
    v73 = (unsigned int (*)(_OWORD *, uint64_t, uint64_t))v72[6];
    if (v73(v70, 1, v71))
    {
      v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA460);
      memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
    }
    else
    {
      v75 = v70[1];
      *v69 = *v70;
      v69[1] = v75;
      *((_WORD *)v69 + 16) = *((_WORD *)v70 + 16);
      *(_OWORD *)((char *)v69 + 40) = *(_OWORD *)((char *)v70 + 40);
      *(_OWORD *)((char *)v69 + 56) = *(_OWORD *)((char *)v70 + 56);
      v76 = *(int *)(v71 + 40);
      v137 = (_OWORD *)((char *)v69 + v76);
      __dsta = v72;
      v77 = (_OWORD *)((char *)v70 + v76);
      v78 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
      v79 = *(_QWORD *)(v78 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v79 + 48))(v77, 1, v78))
      {
        v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA458);
        memcpy(v137, v77, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
      }
      else
      {
        *v137 = *v77;
        v81 = *(int *)(v78 + 20);
        v135 = (char *)v137 + v81;
        v82 = (char *)v77 + v81;
        v83 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v83 - 8) + 32))(v135, v82, v83);
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v137, 0, 1, v78);
      }
      a3 = v144;
      v72 = __dsta;
      v84 = *(int *)(v71 + 44);
      v85 = (char *)v69 + v84;
      v86 = (char *)v70 + v84;
      v87 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v87 - 8) + 32))(v85, v86, v87);
      ((void (*)(_OWORD *, _QWORD, uint64_t, uint64_t))__dsta[7])(v69, 0, 1, v71);
    }
    v88 = v6[24];
    v89 = (_OWORD *)((char *)a1 + v88);
    v90 = (_OWORD *)((char *)a2 + v88);
    if (v73((_OWORD *)((char *)a2 + v88), 1, v71))
    {
      v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA460);
      memcpy(v89, v90, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
      v92 = v143;
    }
    else
    {
      __dstb = v72;
      v93 = v90[1];
      *v89 = *v90;
      v89[1] = v93;
      *((_WORD *)v89 + 16) = *((_WORD *)v90 + 16);
      *(_OWORD *)((char *)v89 + 40) = *(_OWORD *)((char *)v90 + 40);
      *(_OWORD *)((char *)v89 + 56) = *(_OWORD *)((char *)v90 + 56);
      v94 = *(int *)(v71 + 40);
      v95 = (_OWORD *)((char *)v89 + v94);
      v96 = (_OWORD *)((char *)v90 + v94);
      v97 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
      v98 = *(_QWORD *)(v97 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v98 + 48))(v96, 1, v97))
      {
        v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA458);
        memcpy(v95, v96, *(_QWORD *)(*(_QWORD *)(v99 - 8) + 64));
      }
      else
      {
        *v95 = *v96;
        v100 = *(int *)(v97 + 20);
        v138 = (char *)v95 + v100;
        v101 = (char *)v96 + v100;
        v102 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v102 - 8) + 32))(v138, v101, v102);
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v98 + 56))(v95, 0, 1, v97);
      }
      v92 = v143;
      a3 = v144;
      v103 = *(int *)(v71 + 44);
      v104 = (char *)v89 + v103;
      v105 = (char *)v90 + v103;
      v106 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v106 - 8) + 32))(v104, v105, v106);
      (*((void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))__dstb + 7))(v89, 0, 1, v71);
    }
    v107 = v6[25];
    v108 = (char *)a1 + v107;
    v109 = (char *)a2 + v107;
    v110 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v110 - 8) + 32))(v108, v109, v110);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v92 + 56))(a1, 0, 1, v6);
  }
  v111 = a3[5];
  v112 = (_DWORD *)((char *)a1 + v111);
  v113 = (_DWORD *)((char *)a2 + v111);
  v114 = type metadata accessor for TranscriptProtoStatementID(0);
  v115 = *(_QWORD *)(v114 - 8);
  v116 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v115 + 48);
  if (v116(v113, 1, v114))
  {
    v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v112, v113, *(_QWORD *)(*(_QWORD *)(v117 - 8) + 64));
  }
  else
  {
    *v112 = *v113;
    *(_OWORD *)(v112 + 2) = *(_OWORD *)(v113 + 2);
    v118 = *(int *)(v114 + 24);
    v119 = (char *)v112 + v118;
    v120 = (char *)v113 + v118;
    v121 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v121 - 8) + 32))(v119, v120, v121);
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v115 + 56))(v112, 0, 1, v114);
  }
  v122 = a3[6];
  v123 = (_DWORD *)((char *)a1 + v122);
  v124 = (_DWORD *)((char *)a2 + v122);
  if (v116((_OWORD *)((char *)a2 + v122), 1, v114))
  {
    v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v123, v124, *(_QWORD *)(*(_QWORD *)(v125 - 8) + 64));
  }
  else
  {
    *v123 = *v124;
    *(_OWORD *)(v123 + 2) = *(_OWORD *)(v124 + 2);
    v126 = *(int *)(v114 + 24);
    v127 = (char *)v123 + v126;
    v128 = (char *)v124 + v126;
    v129 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v129 - 8) + 32))(v127, v128, v129);
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v115 + 56))(v123, 0, 1, v114);
  }
  v130 = a3[7];
  v131 = (char *)a1 + v130;
  v132 = (char *)a2 + v130;
  v133 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v133 - 8) + 32))(v131, v132, v133);
  return a1;
}

uint64_t assignWithTake for TranscriptProtoToolResolution(uint64_t a1, uint64_t a2, int *a3)
{
  int *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, int *);
  int v9;
  int v10;
  __int128 v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(_QWORD *, uint64_t, uint64_t);
  int v27;
  int v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  _OWORD *v38;
  _OWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  _OWORD *v46;
  _OWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t (*v62)(uint64_t, uint64_t, uint64_t);
  int v63;
  int v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;
  _OWORD *v68;
  _OWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  _OWORD *v82;
  _OWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  __int128 v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  _OWORD *v93;
  _OWORD *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t (*v117)(uint64_t, uint64_t, uint64_t);
  int v118;
  size_t v119;
  void *v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  _OWORD *v126;
  _OWORD *v127;
  uint64_t v128;
  _QWORD *v129;
  unsigned int (*v130)(_OWORD *, uint64_t, uint64_t);
  uint64_t v131;
  __int128 v132;
  uint64_t v133;
  _OWORD *v134;
  _OWORD *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  _OWORD *v147;
  _OWORD *v148;
  uint64_t v149;
  uint64_t v150;
  __int128 v151;
  uint64_t v152;
  _OWORD *v153;
  _OWORD *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  char *v183;
  uint64_t v184;
  _OWORD *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  _QWORD *v196;
  uint64_t *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  _OWORD *v201;
  _OWORD *v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t (*v205)(_OWORD *, uint64_t, uint64_t);
  int v206;
  int v207;
  __int128 v208;
  uint64_t v209;
  char *v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  _OWORD *v215;
  _OWORD *v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t (*v219)(_OWORD *, uint64_t, uint64_t);
  int v220;
  int v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  char *v229;
  char *v230;
  uint64_t v231;
  int *v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t (*v235)(_OWORD *, uint64_t, uint64_t);
  int v236;
  int v237;
  uint64_t v238;
  char *v239;
  char *v240;
  uint64_t v241;
  uint64_t v242;
  char *v243;
  char *v244;
  uint64_t v245;
  char *v246;
  char *v247;
  uint64_t v248;
  uint64_t v249;
  char *v250;
  char *v251;
  uint64_t v252;
  uint64_t v253;
  char *v254;
  char *v255;
  uint64_t v256;
  char *v257;
  uint64_t v258;
  char *v259;
  char *v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t (*v267)(uint64_t, uint64_t, uint64_t);
  int v268;
  int v269;
  __int128 v270;
  uint64_t v271;
  _OWORD *v272;
  _OWORD *v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  _OWORD *v284;
  uint64_t v285;
  uint64_t (*v286)(uint64_t, uint64_t, uint64_t);
  int v287;
  size_t v288;
  void *v289;
  uint64_t v290;
  char *v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  char *v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  int v308;
  int v309;
  int *v310;
  __int128 v311;
  uint64_t v312;
  _OWORD *v313;
  _OWORD *v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  _QWORD *v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t (*v328)(uint64_t, uint64_t, uint64_t);
  int v329;
  size_t v330;
  void *v331;
  uint64_t v332;
  char *v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  char *v341;
  uint64_t v342;
  _OWORD *v343;
  _OWORD *v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  char *v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  char *v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  _QWORD *v364;
  _QWORD *v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t (*v368)(_QWORD *, uint64_t, uint64_t);
  int v369;
  int v370;
  uint64_t v371;
  char *v372;
  char *v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  _QWORD *v378;
  int v379;
  int v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v391;
  uint64_t v392;
  char *v393;
  char *v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  char *v402;
  uint64_t v403;
  char *__srcc;
  _QWORD *__src;
  void *__srca;
  _QWORD *__srcb;
  char *__srcd;
  char *__srce;
  uint64_t v410;
  uint64_t v411;
  char *v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  int *v417;
  int *v418;
  int *v419;
  int *v420;

  v6 = (int *)type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
  v7 = *((_QWORD *)v6 - 1);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_240388AE4(a1, type metadata accessor for ToolKitProtoToolDefinition.Version1);
      goto LABEL_7;
    }
    v19 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v19;
    swift_bridgeObjectRelease();
    v20 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v20;
    swift_bridgeObjectRelease();
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    swift_bridgeObjectRelease();
    *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    swift_bridgeObjectRelease();
    v21 = v6[17];
    v22 = (_QWORD *)(a1 + v21);
    v23 = (_QWORD *)(a2 + v21);
    v24 = type metadata accessor for ToolKitProtoTypeInstance(0);
    v25 = *(_QWORD *)(v24 - 8);
    v26 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v25 + 48);
    v27 = v26(v22, 1, v24);
    v28 = v26(v23, 1, v24);
    if (v27)
    {
      if (!v28)
      {
        *v22 = *v23;
        v29 = *(int *)(v24 + 20);
        v30 = (char *)v22 + v29;
        v31 = (char *)v23 + v29;
        v32 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v30, v31, v32);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
        goto LABEL_19;
      }
    }
    else
    {
      if (!v28)
      {
        v106 = *v23;
        if ((~*v22 & 0xF000000000000007) != 0)
        {
          if ((~v106 & 0xF000000000000007) != 0)
          {
            *v22 = v106;
            swift_release();
          }
          else
          {
            sub_2403D4924((uint64_t)v22);
            *v22 = *v23;
          }
        }
        else
        {
          *v22 = v106;
        }
        v177 = *(int *)(v24 + 20);
        v178 = (char *)v22 + v177;
        v179 = (char *)v23 + v177;
        v180 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v180 - 8) + 40))(v178, v179, v180);
LABEL_19:
        v52 = v6[18];
        v53 = (_QWORD *)(a1 + v52);
        v54 = (uint64_t *)(a2 + v52);
        v56 = *v54;
        v55 = v54[1];
        *v53 = v56;
        v53[1] = v55;
        swift_bridgeObjectRelease();
        v57 = v6[19];
        v58 = a1 + v57;
        v59 = a2 + v57;
        v60 = type metadata accessor for ToolKitProtoAppDefinition(0);
        v61 = *(_QWORD *)(v60 - 8);
        v62 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v61 + 48);
        v63 = v62(v58, 1, v60);
        v64 = v62(v59, 1, v60);
        v418 = a3;
        v420 = v6;
        if (v63)
        {
          if (!v64)
          {
            v65 = *(_OWORD *)(v59 + 16);
            *(_OWORD *)v58 = *(_OWORD *)v59;
            *(_OWORD *)(v58 + 16) = v65;
            v66 = *(_OWORD *)(v59 + 48);
            *(_OWORD *)(v58 + 32) = *(_OWORD *)(v59 + 32);
            *(_OWORD *)(v58 + 48) = v66;
            *(_OWORD *)(v58 + 64) = *(_OWORD *)(v59 + 64);
            *(_BYTE *)(v58 + 80) = *(_BYTE *)(v59 + 80);
            v67 = *(int *)(v60 + 40);
            v68 = (_OWORD *)(v58 + v67);
            v69 = (_OWORD *)(v59 + v67);
            v70 = type metadata accessor for ToolKitProtoAppDefinition.Device(0);
            v71 = *(_QWORD *)(v70 - 8);
            if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v71 + 48))(v69, 1, v70))
            {
              v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA430);
              memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
            }
            else
            {
              *v68 = *v69;
              v170 = *(int *)(v70 + 20);
              v412 = (char *)v68 + v170;
              v171 = (char *)v69 + v170;
              v172 = sub_2408E57A4();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v172 - 8) + 32))(v412, v171, v172);
              (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v71 + 56))(v68, 0, 1, v70);
            }
            v173 = *(int *)(v60 + 44);
            v174 = v58 + v173;
            v175 = v59 + v173;
            v176 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v176 - 8) + 32))(v174, v175, v176);
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
            a3 = v418;
            v6 = v420;
LABEL_76:
            v195 = v6[20];
            v196 = (_QWORD *)(a1 + v195);
            v197 = (uint64_t *)(a2 + v195);
            v199 = *v197;
            v198 = v197[1];
            *v196 = v199;
            v196[1] = v198;
            swift_bridgeObjectRelease();
            v200 = v6[21];
            v201 = (_OWORD *)(a1 + v200);
            v202 = (_OWORD *)(a2 + v200);
            v203 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation(0);
            v204 = *(_QWORD *)(v203 - 8);
            v205 = *(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v204 + 48);
            v206 = v205(v201, 1, v203);
            v207 = v205(v202, 1, v203);
            if (v206)
            {
              if (!v207)
              {
                v208 = v202[1];
                *v201 = *v202;
                v201[1] = v208;
                v209 = *(int *)(v203 + 24);
                v210 = (char *)v201 + v209;
                v211 = (char *)v202 + v209;
                v212 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v212 - 8) + 32))(v210, v211, v212);
                (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v204 + 56))(v201, 0, 1, v203);
                goto LABEL_82;
              }
            }
            else
            {
              if (!v207)
              {
                v226 = *((_QWORD *)v202 + 1);
                *(_QWORD *)v201 = *(_QWORD *)v202;
                *((_QWORD *)v201 + 1) = v226;
                swift_bridgeObjectRelease();
                v227 = *((_QWORD *)v202 + 3);
                *((_QWORD *)v201 + 2) = *((_QWORD *)v202 + 2);
                *((_QWORD *)v201 + 3) = v227;
                swift_bridgeObjectRelease();
                v228 = *(int *)(v203 + 24);
                v229 = (char *)v201 + v228;
                v230 = (char *)v202 + v228;
                v231 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v231 - 8) + 40))(v229, v230, v231);
LABEL_82:
                v214 = v6[22];
                v215 = (_OWORD *)(a1 + v214);
                v216 = (_OWORD *)(a2 + v214);
                v217 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon(0);
                v218 = *(_QWORD *)(v217 - 8);
                v219 = *(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v218 + 48);
                v220 = v219(v215, 1, v217);
                v221 = v219(v216, 1, v217);
                if (v220)
                {
                  if (!v221)
                  {
                    v222 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind(0);
                    v223 = *(_QWORD *)(v222 - 8);
                    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v223 + 48))(v216, 1, v222))
                    {
                      v224 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA448);
                      memcpy(v215, v216, *(_QWORD *)(*(_QWORD *)(v224 - 8) + 64));
                    }
                    else
                    {
                      if (swift_getEnumCaseMultiPayload() == 1)
                      {
                        *v215 = *v216;
                        *((_BYTE *)v215 + 16) = *((_BYTE *)v216 + 16);
                        *(_OWORD *)((char *)v215 + 24) = *(_OWORD *)((char *)v216 + 24);
                        *(_OWORD *)((char *)v215 + 40) = *(_OWORD *)((char *)v216 + 40);
                        v242 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0)
                                      + 32);
                        v243 = (char *)v215 + v242;
                        v244 = (char *)v216 + v242;
                        v245 = sub_2408E57A4();
                        v246 = v243;
                        v247 = v244;
                        a3 = v418;
                        v6 = v420;
                        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v245 - 8) + 32))(v246, v247, v245);
                        swift_storeEnumTagMultiPayload();
                      }
                      else
                      {
                        memcpy(v215, v216, *(_QWORD *)(v223 + 64));
                      }
                      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v223 + 56))(v215, 0, 1, v222);
                    }
                    v249 = *(int *)(v217 + 20);
                    v250 = (char *)v215 + v249;
                    v251 = (char *)v216 + v249;
                    v252 = sub_2408E57A4();
                    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v252 - 8) + 32))(v250, v251, v252);
                    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v218 + 56))(v215, 0, 1, v217);
LABEL_108:
                    v262 = v6[23];
                    v263 = a1 + v262;
                    v264 = a2 + v262;
                    v265 = type metadata accessor for ToolKitProtoContainerDefinition(0);
                    v266 = *(_QWORD *)(v265 - 8);
                    v267 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v266 + 48);
                    v268 = v267(v263, 1, v265);
                    v269 = v267(v264, 1, v265);
                    if (v268)
                    {
                      if (!v269)
                      {
                        v413 = v266;
                        v270 = *(_OWORD *)(v264 + 16);
                        *(_OWORD *)v263 = *(_OWORD *)v264;
                        *(_OWORD *)(v263 + 16) = v270;
                        *(_WORD *)(v263 + 32) = *(_WORD *)(v264 + 32);
                        *(_OWORD *)(v263 + 40) = *(_OWORD *)(v264 + 40);
                        *(_OWORD *)(v263 + 56) = *(_OWORD *)(v264 + 56);
                        v271 = *(int *)(v265 + 40);
                        v272 = (_OWORD *)(v263 + v271);
                        v273 = (_OWORD *)(v264 + v271);
                        v274 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
                        v275 = *(_QWORD *)(v274 - 8);
                        if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v275 + 48))(v273, 1, v274))
                        {
                          v276 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA458);
                          memcpy(v272, v273, *(_QWORD *)(*(_QWORD *)(v276 - 8) + 64));
                        }
                        else
                        {
                          *v272 = *v273;
                          v290 = *(int *)(v274 + 20);
                          __srcd = (char *)v272 + v290;
                          v291 = (char *)v273 + v290;
                          v292 = sub_2408E57A4();
                          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v292 - 8) + 32))(__srcd, v291, v292);
                          (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v275 + 56))(v272, 0, 1, v274);
                        }
                        a3 = v418;
                        v293 = *(int *)(v265 + 44);
                        v294 = v263 + v293;
                        v295 = v264 + v293;
                        v296 = sub_2408E57A4();
                        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v296 - 8) + 32))(v294, v295, v296);
                        v266 = v413;
                        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v413 + 56))(v263, 0, 1, v265);
                        v6 = v420;
LABEL_126:
                        v305 = v6[24];
                        v306 = a1 + v305;
                        v307 = a2 + v305;
                        v308 = v267(a1 + v305, 1, v265);
                        v309 = v267(v307, 1, v265);
                        if (v308)
                        {
                          if (!v309)
                          {
                            v415 = v266;
                            v310 = a3;
                            v311 = *(_OWORD *)(v307 + 16);
                            *(_OWORD *)v306 = *(_OWORD *)v307;
                            *(_OWORD *)(v306 + 16) = v311;
                            *(_WORD *)(v306 + 32) = *(_WORD *)(v307 + 32);
                            *(_OWORD *)(v306 + 40) = *(_OWORD *)(v307 + 40);
                            *(_OWORD *)(v306 + 56) = *(_OWORD *)(v307 + 56);
                            v312 = *(int *)(v265 + 40);
                            v313 = (_OWORD *)(v306 + v312);
                            v314 = (_OWORD *)(v307 + v312);
                            v315 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
                            v316 = *(_QWORD *)(v315 - 8);
                            if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v316 + 48))(v314, 1, v315))
                            {
                              v317 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA458);
                              memcpy(v313, v314, *(_QWORD *)(*(_QWORD *)(v317 - 8) + 64));
                            }
                            else
                            {
                              *v313 = *v314;
                              v332 = *(int *)(v315 + 20);
                              __srce = (char *)v313 + v332;
                              v333 = (char *)v314 + v332;
                              v334 = sub_2408E57A4();
                              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v334 - 8) + 32))(__srce, v333, v334);
                              (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v316 + 56))(v313, 0, 1, v315);
                            }
                            a3 = v310;
                            v335 = *(int *)(v265 + 44);
                            v336 = v306 + v335;
                            v337 = v307 + v335;
                            v338 = sub_2408E57A4();
                            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v338 - 8) + 32))(v336, v337, v338);
                            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v415 + 56))(v306, 0, 1, v265);
                            v6 = v420;
                            goto LABEL_158;
                          }
                          goto LABEL_132;
                        }
                        if (v309)
                        {
                          sub_240388AE4(v306, type metadata accessor for ToolKitProtoContainerDefinition);
LABEL_132:
                          v318 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA460);
                          memcpy((void *)v306, (const void *)v307, *(_QWORD *)(*(_QWORD *)(v318 - 8) + 64));
LABEL_158:
                          v359 = v6[25];
                          v360 = a1 + v359;
                          v361 = a2 + v359;
                          v362 = sub_2408E57A4();
                          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v362 - 8) + 40))(v360, v361, v362);
                          goto LABEL_159;
                        }
                        v319 = *(_QWORD *)(v307 + 8);
                        *(_QWORD *)v306 = *(_QWORD *)v307;
                        *(_QWORD *)(v306 + 8) = v319;
                        swift_bridgeObjectRelease();
                        v320 = *(_QWORD *)(v307 + 24);
                        *(_QWORD *)(v306 + 16) = *(_QWORD *)(v307 + 16);
                        *(_QWORD *)(v306 + 24) = v320;
                        swift_bridgeObjectRelease();
                        *(_WORD *)(v306 + 32) = *(_WORD *)(v307 + 32);
                        v321 = *(_QWORD *)(v307 + 48);
                        *(_QWORD *)(v306 + 40) = *(_QWORD *)(v307 + 40);
                        *(_QWORD *)(v306 + 48) = v321;
                        swift_bridgeObjectRelease();
                        v322 = *(_QWORD *)(v307 + 64);
                        *(_QWORD *)(v306 + 56) = *(_QWORD *)(v307 + 56);
                        *(_QWORD *)(v306 + 64) = v322;
                        swift_bridgeObjectRelease();
                        v323 = *(int *)(v265 + 40);
                        v324 = v306 + v323;
                        v325 = (_QWORD *)(v307 + v323);
                        v326 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
                        v327 = *(_QWORD *)(v326 - 8);
                        v328 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v327 + 48);
                        v416 = v324;
                        LODWORD(v324) = v328(v324, 1, v326);
                        v329 = v328((uint64_t)v325, 1, v326);
                        if ((_DWORD)v324)
                        {
                          if (!v329)
                          {
                            *(_OWORD *)v416 = *(_OWORD *)v325;
                            v339 = *(int *)(v326 + 20);
                            v340 = v416 + v339;
                            v341 = (char *)v325 + v339;
                            v342 = sub_2408E57A4();
                            (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v342 - 8) + 32))(v340, v341, v342);
                            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v327 + 56))(v416, 0, 1, v326);
                            goto LABEL_157;
                          }
                          v330 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256FFA458)
                                                       - 8)
                                           + 64);
                          v331 = (void *)v416;
LABEL_140:
                          memcpy(v331, v325, v330);
LABEL_157:
                          a3 = v418;
                          v6 = v420;
                          v355 = *(int *)(v265 + 44);
                          v356 = v306 + v355;
                          v357 = v307 + v355;
                          v358 = sub_2408E57A4();
                          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v358 - 8) + 40))(v356, v357, v358);
                          goto LABEL_158;
                        }
                        if (v329)
                        {
                          sub_240388AE4(v416, type metadata accessor for ToolKitProtoContainerDefinition.Device);
                          v330 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256FFA458)
                                                       - 8)
                                           + 64);
                          v331 = (void *)v416;
                          goto LABEL_140;
                        }
                        if (*(_QWORD *)(v416 + 8) == 1)
                        {
                          v344 = v325;
                        }
                        else
                        {
                          v344 = v325;
                          v346 = v325[1];
                          if (v346 != 1)
                          {
                            *(_QWORD *)v416 = *v325;
                            *(_QWORD *)(v416 + 8) = v346;
                            swift_bridgeObjectRelease();
                            goto LABEL_156;
                          }
                          sub_2406EBF14(v416);
                        }
                        *(_OWORD *)v416 = *v344;
LABEL_156:
                        v351 = *(int *)(v326 + 20);
                        v352 = v416 + v351;
                        v353 = (char *)v344 + v351;
                        v354 = sub_2408E57A4();
                        (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v354 - 8) + 40))(v352, v353, v354);
                        goto LABEL_157;
                      }
LABEL_114:
                      v277 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA460);
                      memcpy((void *)v263, (const void *)v264, *(_QWORD *)(*(_QWORD *)(v277 - 8) + 64));
                      goto LABEL_126;
                    }
                    if (v269)
                    {
                      sub_240388AE4(v263, type metadata accessor for ToolKitProtoContainerDefinition);
                      goto LABEL_114;
                    }
                    v414 = v266;
                    v278 = *(_QWORD *)(v264 + 8);
                    *(_QWORD *)v263 = *(_QWORD *)v264;
                    *(_QWORD *)(v263 + 8) = v278;
                    swift_bridgeObjectRelease();
                    v279 = *(_QWORD *)(v264 + 24);
                    *(_QWORD *)(v263 + 16) = *(_QWORD *)(v264 + 16);
                    *(_QWORD *)(v263 + 24) = v279;
                    swift_bridgeObjectRelease();
                    *(_WORD *)(v263 + 32) = *(_WORD *)(v264 + 32);
                    v280 = *(_QWORD *)(v264 + 48);
                    *(_QWORD *)(v263 + 40) = *(_QWORD *)(v264 + 40);
                    *(_QWORD *)(v263 + 48) = v280;
                    swift_bridgeObjectRelease();
                    v281 = *(_QWORD *)(v264 + 64);
                    *(_QWORD *)(v263 + 56) = *(_QWORD *)(v264 + 56);
                    *(_QWORD *)(v263 + 64) = v281;
                    swift_bridgeObjectRelease();
                    v282 = *(int *)(v265 + 40);
                    v283 = v263 + v282;
                    v284 = (_OWORD *)(v264 + v282);
                    v285 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
                    v401 = *(_QWORD *)(v285 - 8);
                    v403 = v283;
                    v286 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v401 + 48);
                    LODWORD(v283) = v286(v283, 1, v285);
                    __srcb = v284;
                    v287 = v286((uint64_t)v284, 1, v285);
                    if ((_DWORD)v283)
                    {
                      if (!v287)
                      {
                        *(_OWORD *)v403 = *v284;
                        v297 = *(int *)(v285 + 20);
                        v298 = v403 + v297;
                        v299 = (char *)v284 + v297;
                        v300 = sub_2408E57A4();
                        (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v300 - 8) + 32))(v298, v299, v300);
                        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v401 + 56))(v403, 0, 1, v285);
                        goto LABEL_124;
                      }
                      v288 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256FFA458) - 8)
                                       + 64);
                      v289 = (void *)v403;
LABEL_122:
                      memcpy(v289, v284, v288);
LABEL_124:
                      a3 = v418;
                      v6 = v420;
                      v266 = v414;
LABEL_125:
                      v301 = *(int *)(v265 + 44);
                      v302 = v263 + v301;
                      v303 = v264 + v301;
                      v304 = sub_2408E57A4();
                      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v304 - 8) + 40))(v302, v303, v304);
                      goto LABEL_126;
                    }
                    if (v287)
                    {
                      sub_240388AE4(v403, type metadata accessor for ToolKitProtoContainerDefinition.Device);
                      v288 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256FFA458) - 8)
                                       + 64);
                      v289 = (void *)v403;
                      goto LABEL_122;
                    }
                    if (*(_QWORD *)(v403 + 8) == 1)
                    {
                      v343 = v284;
                      v266 = v414;
                    }
                    else
                    {
                      v266 = v414;
                      v345 = __srcb[1];
                      if (v345 != 1)
                      {
                        *(_QWORD *)v403 = *__srcb;
                        *(_QWORD *)(v403 + 8) = v345;
                        swift_bridgeObjectRelease();
                        v343 = __srcb;
                        goto LABEL_154;
                      }
                      sub_2406EBF14(v403);
                      v343 = __srcb;
                    }
                    *(_OWORD *)v403 = *v343;
LABEL_154:
                    v347 = *(int *)(v285 + 20);
                    v348 = v403 + v347;
                    v349 = (char *)v343 + v347;
                    v350 = sub_2408E57A4();
                    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v350 - 8) + 40))(v348, v349, v350);
                    a3 = v418;
                    v6 = v420;
                    goto LABEL_125;
                  }
LABEL_88:
                  v225 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA450);
                  memcpy(v215, v216, *(_QWORD *)(*(_QWORD *)(v225 - 8) + 64));
                  goto LABEL_108;
                }
                if (v221)
                {
                  sub_240388AE4((uint64_t)v215, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon);
                  goto LABEL_88;
                }
                v232 = a3;
                v233 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind(0);
                v234 = *(_QWORD *)(v233 - 8);
                v235 = *(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v234 + 48);
                v236 = v235(v215, 1, v233);
                v237 = v235(v216, 1, v233);
                if (v236)
                {
                  if (!v237)
                  {
                    if (swift_getEnumCaseMultiPayload() == 1)
                    {
                      *v215 = *v216;
                      *((_BYTE *)v215 + 16) = *((_BYTE *)v216 + 16);
                      *(_OWORD *)((char *)v215 + 24) = *(_OWORD *)((char *)v216 + 24);
                      *(_OWORD *)((char *)v215 + 40) = *(_OWORD *)((char *)v216 + 40);
                      v238 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0)
                                    + 32);
                      v239 = (char *)v215 + v238;
                      v240 = (char *)v216 + v238;
                      v241 = sub_2408E57A4();
                      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v241 - 8) + 32))(v239, v240, v241);
                      swift_storeEnumTagMultiPayload();
                    }
                    else
                    {
                      memcpy(v215, v216, *(_QWORD *)(v234 + 64));
                    }
                    a3 = v232;
                    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v234 + 56))(v215, 0, 1, v233);
                    goto LABEL_107;
                  }
                }
                else
                {
                  if (!v237)
                  {
                    a3 = v232;
                    if (a1 != a2)
                    {
                      sub_240388AE4((uint64_t)v215, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind);
                      if (swift_getEnumCaseMultiPayload() == 1)
                      {
                        *v215 = *v216;
                        *((_BYTE *)v215 + 16) = *((_BYTE *)v216 + 16);
                        *(_OWORD *)((char *)v215 + 24) = *(_OWORD *)((char *)v216 + 24);
                        *(_OWORD *)((char *)v215 + 40) = *(_OWORD *)((char *)v216 + 40);
                        v253 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0)
                                      + 32);
                        v254 = (char *)v215 + v253;
                        v255 = (char *)v216 + v253;
                        v256 = sub_2408E57A4();
                        v257 = v254;
                        a3 = v232;
                        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v256 - 8) + 32))(v257, v255, v256);
                        swift_storeEnumTagMultiPayload();
                      }
                      else
                      {
                        memcpy(v215, v216, *(_QWORD *)(v234 + 64));
                      }
                    }
                    goto LABEL_107;
                  }
                  sub_240388AE4((uint64_t)v215, type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind);
                }
                v248 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA448);
                memcpy(v215, v216, *(_QWORD *)(*(_QWORD *)(v248 - 8) + 64));
                a3 = v232;
LABEL_107:
                v258 = *(int *)(v217 + 20);
                v259 = (char *)v215 + v258;
                v260 = (char *)v216 + v258;
                v261 = sub_2408E57A4();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v261 - 8) + 40))(v259, v260, v261);
                v6 = v420;
                goto LABEL_108;
              }
              sub_240388AE4((uint64_t)v201, type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation);
            }
            v213 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA440);
            memcpy(v201, v202, *(_QWORD *)(*(_QWORD *)(v213 - 8) + 64));
            goto LABEL_82;
          }
LABEL_25:
          v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA438);
          memcpy((void *)v58, (const void *)v59, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
          goto LABEL_76;
        }
        if (v64)
        {
          sub_240388AE4(v58, type metadata accessor for ToolKitProtoAppDefinition);
          goto LABEL_25;
        }
        v107 = *(_QWORD *)(v59 + 8);
        *(_QWORD *)v58 = *(_QWORD *)v59;
        *(_QWORD *)(v58 + 8) = v107;
        swift_bridgeObjectRelease();
        v108 = *(_QWORD *)(v59 + 24);
        *(_QWORD *)(v58 + 16) = *(_QWORD *)(v59 + 16);
        *(_QWORD *)(v58 + 24) = v108;
        swift_bridgeObjectRelease();
        v109 = *(_QWORD *)(v59 + 40);
        *(_QWORD *)(v58 + 32) = *(_QWORD *)(v59 + 32);
        *(_QWORD *)(v58 + 40) = v109;
        swift_bridgeObjectRelease();
        v110 = *(_QWORD *)(v59 + 56);
        *(_QWORD *)(v58 + 48) = *(_QWORD *)(v59 + 48);
        *(_QWORD *)(v58 + 56) = v110;
        swift_bridgeObjectRelease();
        v111 = *(_QWORD *)(v59 + 72);
        *(_QWORD *)(v58 + 64) = *(_QWORD *)(v59 + 64);
        *(_QWORD *)(v58 + 72) = v111;
        swift_bridgeObjectRelease();
        *(_BYTE *)(v58 + 80) = *(_BYTE *)(v59 + 80);
        v112 = *(int *)(v60 + 40);
        v113 = v58 + v112;
        v114 = (_QWORD *)(v59 + v112);
        v115 = type metadata accessor for ToolKitProtoAppDefinition.Device(0);
        v116 = *(_QWORD *)(v115 - 8);
        v117 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v116 + 48);
        v411 = v113;
        LODWORD(v113) = v117(v113, 1, v115);
        v118 = v117((uint64_t)v114, 1, v115);
        if ((_DWORD)v113)
        {
          if (!v118)
          {
            *(_OWORD *)v411 = *(_OWORD *)v114;
            v181 = *(int *)(v115 + 20);
            v182 = v411 + v181;
            v183 = (char *)v114 + v181;
            v184 = sub_2408E57A4();
            (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v184 - 8) + 32))(v182, v183, v184);
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v116 + 56))(v411, 0, 1, v115);
            goto LABEL_75;
          }
          v119 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256FFA430) - 8) + 64);
          v120 = (void *)v411;
LABEL_64:
          memcpy(v120, v114, v119);
LABEL_75:
          a3 = v418;
          v6 = v420;
          v191 = *(int *)(v60 + 44);
          v192 = v58 + v191;
          v193 = v59 + v191;
          v194 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v194 - 8) + 40))(v192, v193, v194);
          goto LABEL_76;
        }
        if (v118)
        {
          sub_240388AE4(v411, type metadata accessor for ToolKitProtoAppDefinition.Device);
          v119 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256FFA430) - 8) + 64);
          v120 = (void *)v411;
          goto LABEL_64;
        }
        if (*(_QWORD *)(v411 + 8) == 1)
        {
          v185 = v114;
        }
        else
        {
          v185 = v114;
          v186 = v114[1];
          if (v186 != 1)
          {
            *(_QWORD *)v411 = *v114;
            *(_QWORD *)(v411 + 8) = v186;
            swift_bridgeObjectRelease();
            goto LABEL_74;
          }
          sub_2406EBEE0(v411);
        }
        *(_OWORD *)v411 = *v185;
LABEL_74:
        v187 = *(int *)(v115 + 20);
        v188 = v411 + v187;
        v189 = (char *)v185 + v187;
        v190 = sub_2408E57A4();
        (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v190 - 8) + 40))(v188, v189, v190);
        goto LABEL_75;
      }
      sub_240388AE4((uint64_t)v22, type metadata accessor for ToolKitProtoTypeInstance);
    }
    v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    goto LABEL_19;
  }
  if (v10)
  {
LABEL_7:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA468);
    memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_159;
  }
  v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v11;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  v12 = v6[17];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  v15 = type metadata accessor for ToolKitProtoTypeInstance(0);
  v16 = *(_QWORD *)(v15 - 8);
  v410 = v7;
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    *v13 = *v14;
    v33 = *(int *)(v15 + 20);
    v34 = (char *)v13 + v33;
    v35 = (char *)v14 + v33;
    v36 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v34, v35, v36);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  *(_OWORD *)(a1 + v6[18]) = *(_OWORD *)(a2 + v6[18]);
  v37 = v6[19];
  v38 = (_OWORD *)(a1 + v37);
  v39 = (_OWORD *)(a2 + v37);
  v40 = type metadata accessor for ToolKitProtoAppDefinition(0);
  v41 = *(_QWORD *)(v40 - 8);
  v417 = a3;
  v419 = v6;
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
  {
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA438);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
  }
  else
  {
    v43 = v39[1];
    *v38 = *v39;
    v38[1] = v43;
    v44 = v39[3];
    v38[2] = v39[2];
    v38[3] = v44;
    v38[4] = v39[4];
    *((_BYTE *)v38 + 80) = *((_BYTE *)v39 + 80);
    v45 = *(int *)(v40 + 40);
    v46 = (_OWORD *)((char *)v38 + v45);
    v47 = (_OWORD *)((char *)v39 + v45);
    v48 = type metadata accessor for ToolKitProtoAppDefinition.Device(0);
    v49 = *(_QWORD *)(v48 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48))
    {
      v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA430);
      memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    }
    else
    {
      *v46 = *v47;
      v74 = *(int *)(v48 + 20);
      __srcc = (char *)v46 + v74;
      v75 = (char *)v47 + v74;
      v76 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v76 - 8) + 32))(__srcc, v75, v76);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
    }
    v77 = *(int *)(v40 + 44);
    v78 = (char *)v38 + v77;
    v79 = (char *)v39 + v77;
    v80 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v80 - 8) + 32))(v78, v79, v80);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
    a3 = v417;
    v6 = v419;
  }
  *(_OWORD *)(a1 + v6[20]) = *(_OWORD *)(a2 + v6[20]);
  v81 = v6[21];
  v82 = (_OWORD *)(a1 + v81);
  v83 = (_OWORD *)(a2 + v81);
  v84 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation(0);
  v85 = *(_QWORD *)(v84 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v85 + 48))(v83, 1, v84))
  {
    v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA440);
    memcpy(v82, v83, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
  }
  else
  {
    v87 = v83[1];
    *v82 = *v83;
    v82[1] = v87;
    v88 = *(int *)(v84 + 24);
    v89 = (char *)v82 + v88;
    v90 = (char *)v83 + v88;
    v91 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v91 - 8) + 32))(v89, v90, v91);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v82, 0, 1, v84);
  }
  v92 = v6[22];
  v93 = (_OWORD *)(a1 + v92);
  v94 = (_OWORD *)(a2 + v92);
  v95 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon(0);
  v96 = *(_QWORD *)(v95 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v96 + 48))(v94, 1, v95))
  {
    v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA450);
    memcpy(v93, v94, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
  }
  else
  {
    v98 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind(0);
    v99 = *(_QWORD *)(v98 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v99 + 48))(v94, 1, v98))
    {
      v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA448);
      memcpy(v93, v94, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *v93 = *v94;
        *((_BYTE *)v93 + 16) = *((_BYTE *)v94 + 16);
        *(_OWORD *)((char *)v93 + 24) = *(_OWORD *)((char *)v94 + 24);
        *(_OWORD *)((char *)v93 + 40) = *(_OWORD *)((char *)v94 + 40);
        v101 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0) + 32);
        v102 = (char *)v93 + v101;
        v103 = (char *)v94 + v101;
        v104 = sub_2408E57A4();
        v105 = v103;
        a3 = v417;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v104 - 8) + 32))(v102, v105, v104);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v93, v94, *(_QWORD *)(v99 + 64));
      }
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v99 + 56))(v93, 0, 1, v98);
    }
    v121 = *(int *)(v95 + 20);
    v122 = (char *)v93 + v121;
    v123 = (char *)v94 + v121;
    v124 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v124 - 8) + 32))(v122, v123, v124);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v96 + 56))(v93, 0, 1, v95);
    v6 = v419;
  }
  v125 = v6[23];
  v126 = (_OWORD *)(a1 + v125);
  v127 = (_OWORD *)(a2 + v125);
  v128 = type metadata accessor for ToolKitProtoContainerDefinition(0);
  v129 = *(_QWORD **)(v128 - 8);
  v130 = (unsigned int (*)(_OWORD *, uint64_t, uint64_t))v129[6];
  if (v130(v127, 1, v128))
  {
    v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA460);
    memcpy(v126, v127, *(_QWORD *)(*(_QWORD *)(v131 - 8) + 64));
  }
  else
  {
    __src = v129;
    v132 = v127[1];
    *v126 = *v127;
    v126[1] = v132;
    *((_WORD *)v126 + 16) = *((_WORD *)v127 + 16);
    *(_OWORD *)((char *)v126 + 40) = *(_OWORD *)((char *)v127 + 40);
    *(_OWORD *)((char *)v126 + 56) = *(_OWORD *)((char *)v127 + 56);
    v133 = *(int *)(v128 + 40);
    v134 = (_OWORD *)((char *)v126 + v133);
    v135 = (_OWORD *)((char *)v127 + v133);
    v136 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
    v137 = *(_QWORD *)(v136 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v137 + 48))(v135, 1, v136))
    {
      v138 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA458);
      memcpy(v134, v135, *(_QWORD *)(*(_QWORD *)(v138 - 8) + 64));
    }
    else
    {
      *v134 = *v135;
      v139 = *(int *)(v136 + 20);
      v402 = (char *)v134 + v139;
      v140 = (char *)v135 + v139;
      v141 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v141 - 8) + 32))(v402, v140, v141);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v137 + 56))(v134, 0, 1, v136);
    }
    a3 = v417;
    v142 = *(int *)(v128 + 44);
    v143 = (char *)v126 + v142;
    v144 = (char *)v127 + v142;
    v145 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v145 - 8) + 32))(v143, v144, v145);
    v129 = __src;
    ((void (*)(_OWORD *, _QWORD, uint64_t, uint64_t))__src[7])(v126, 0, 1, v128);
    v6 = v419;
  }
  v146 = v6[24];
  v147 = (_OWORD *)(a1 + v146);
  v148 = (_OWORD *)(a2 + v146);
  if (v130((_OWORD *)(a2 + v146), 1, v128))
  {
    v149 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA460);
    memcpy(v147, v148, *(_QWORD *)(*(_QWORD *)(v149 - 8) + 64));
    v150 = v410;
  }
  else
  {
    __srca = v129;
    v151 = v148[1];
    *v147 = *v148;
    v147[1] = v151;
    *((_WORD *)v147 + 16) = *((_WORD *)v148 + 16);
    *(_OWORD *)((char *)v147 + 40) = *(_OWORD *)((char *)v148 + 40);
    *(_OWORD *)((char *)v147 + 56) = *(_OWORD *)((char *)v148 + 56);
    v152 = *(int *)(v128 + 40);
    v153 = (_OWORD *)((char *)v147 + v152);
    v154 = (_OWORD *)((char *)v148 + v152);
    v155 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
    v156 = *(_QWORD *)(v155 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v156 + 48))(v154, 1, v155))
    {
      v157 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA458);
      memcpy(v153, v154, *(_QWORD *)(*(_QWORD *)(v157 - 8) + 64));
    }
    else
    {
      *v153 = *v154;
      v158 = *(int *)(v155 + 20);
      v159 = (char *)v153 + v158;
      v160 = (char *)v154 + v158;
      v161 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v161 - 8) + 32))(v159, v160, v161);
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v156 + 56))(v153, 0, 1, v155);
    }
    v150 = v410;
    a3 = v417;
    v162 = *(int *)(v128 + 44);
    v163 = (char *)v147 + v162;
    v164 = (char *)v148 + v162;
    v165 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v165 - 8) + 32))(v163, v164, v165);
    (*((void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))__srca + 7))(v147, 0, 1, v128);
    v6 = v419;
  }
  v166 = v6[25];
  v167 = a1 + v166;
  v168 = a2 + v166;
  v169 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v169 - 8) + 32))(v167, v168, v169);
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v150 + 56))(a1, 0, 1, v6);
LABEL_159:
  v363 = a3[5];
  v364 = (_QWORD *)(a1 + v363);
  v365 = (_QWORD *)(a2 + v363);
  v366 = type metadata accessor for TranscriptProtoStatementID(0);
  v367 = *(_QWORD *)(v366 - 8);
  v368 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v367 + 48);
  v369 = v368(v364, 1, v366);
  v370 = v368(v365, 1, v366);
  if (v369)
  {
    if (!v370)
    {
      *(_DWORD *)v364 = *(_DWORD *)v365;
      *(_OWORD *)(v364 + 1) = *(_OWORD *)(v365 + 1);
      v371 = *(int *)(v366 + 24);
      v372 = (char *)v364 + v371;
      v373 = (char *)v365 + v371;
      v374 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v374 - 8) + 32))(v372, v373, v374);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v367 + 56))(v364, 0, 1, v366);
      goto LABEL_165;
    }
    goto LABEL_164;
  }
  if (v370)
  {
    sub_240388AE4((uint64_t)v364, type metadata accessor for TranscriptProtoStatementID);
LABEL_164:
    v375 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v364, v365, *(_QWORD *)(*(_QWORD *)(v375 - 8) + 64));
    goto LABEL_165;
  }
  *(_DWORD *)v364 = *(_DWORD *)v365;
  v391 = v365[2];
  v364[1] = v365[1];
  v364[2] = v391;
  swift_bridgeObjectRelease();
  v392 = *(int *)(v366 + 24);
  v393 = (char *)v364 + v392;
  v394 = (char *)v365 + v392;
  v395 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v395 - 8) + 40))(v393, v394, v395);
LABEL_165:
  v376 = a3[6];
  v377 = a1 + v376;
  v378 = (_QWORD *)(a2 + v376);
  v379 = v368((_QWORD *)(a1 + v376), 1, v366);
  v380 = v368(v378, 1, v366);
  if (!v379)
  {
    if (!v380)
    {
      *(_DWORD *)v377 = *(_DWORD *)v378;
      v396 = v378[2];
      *(_QWORD *)(v377 + 8) = v378[1];
      *(_QWORD *)(v377 + 16) = v396;
      swift_bridgeObjectRelease();
      v397 = *(int *)(v366 + 24);
      v398 = v377 + v397;
      v399 = (uint64_t)v378 + v397;
      v400 = sub_2408E57A4();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v400 - 8) + 40))(v398, v399, v400);
      goto LABEL_171;
    }
    sub_240388AE4(v377, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_170;
  }
  if (v380)
  {
LABEL_170:
    v385 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy((void *)v377, v378, *(_QWORD *)(*(_QWORD *)(v385 - 8) + 64));
    goto LABEL_171;
  }
  *(_DWORD *)v377 = *(_DWORD *)v378;
  *(_OWORD *)(v377 + 8) = *(_OWORD *)(v378 + 1);
  v381 = *(int *)(v366 + 24);
  v382 = v377 + v381;
  v383 = (uint64_t)v378 + v381;
  v384 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v384 - 8) + 32))(v382, v383, v384);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v367 + 56))(v377, 0, 1, v366);
LABEL_171:
  v386 = a3[7];
  v387 = a1 + v386;
  v388 = a2 + v386;
  v389 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v389 - 8) + 40))(v387, v388, v389);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoToolResolution()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406EE614(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_362Tm(a1, a2, a3, &qword_256FFA468, &qword_256FFA300);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoToolResolution()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406EE634(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_363Tm(a1, a2, a3, a4, &qword_256FFA468, &qword_256FFA300);
}

void sub_2406EE648(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2406F2B0C(a1, a2, a3, qword_25700B170, (void (*)(uint64_t))type metadata accessor for ToolKitProtoToolDefinition.Version1, qword_256FFCBE0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementID);
}

_QWORD *initializeBufferWithCopyOfBuffer for TranscriptProtoUndoRedoRequest(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(uint64_t *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v38;
  char *v39;
  char *v40;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v8 = a2[4];
    v9 = a3[7];
    v10 = (_QWORD *)(a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_QWORD *)(a1 + 32) = v8;
    v12 = type metadata accessor for TranscriptProtoStatementID(0);
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      *(_DWORD *)v10 = *(_DWORD *)v11;
      v17 = v11[2];
      v10[1] = v11[1];
      v10[2] = v17;
      v18 = *(int *)(v12 + 24);
      v38 = (char *)v11 + v18;
      v39 = (char *)v10 + v18;
      v19 = v13;
      v20 = sub_2408E57A4();
      v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
      swift_bridgeObjectRetain();
      v22 = v20;
      v13 = v19;
      v21(v39, v38, v22);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v10, 0, 1, v12);
    }
    v23 = a3[8];
    v24 = (_QWORD *)((char *)v4 + v23);
    v25 = (uint64_t *)((char *)a2 + v23);
    if (v14((uint64_t *)((char *)a2 + v23), 1, v12))
    {
      v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      *(_DWORD *)v24 = *(_DWORD *)v25;
      v27 = v25[2];
      v24[1] = v25[1];
      v24[2] = v27;
      v28 = *(int *)(v12 + 24);
      v29 = (char *)v24 + v28;
      v40 = (char *)v25 + v28;
      v30 = v13;
      v31 = sub_2408E57A4();
      v32 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16);
      swift_bridgeObjectRetain();
      v32(v29, v40, v31);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v24, 0, 1, v12);
    }
    v33 = a3[9];
    v34 = (char *)v4 + v33;
    v35 = (uint64_t)a2 + v33;
    v36 = sub_2408E57A4();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v34, v35, v36);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoUndoRedoRequest(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[7];
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48);
  if (!v6(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    v7 = v4 + *(int *)(v5 + 24);
    v8 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  v9 = a1 + a2[8];
  if (!v6(v9, 1, v5))
  {
    swift_bridgeObjectRelease();
    v10 = v9 + *(int *)(v5 + 24);
    v11 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  }
  v12 = a1 + a2[9];
  v13 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
}

uint64_t initializeWithCopy for TranscriptProtoUndoRedoRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(_QWORD *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v36;
  char *v37;
  char *v38;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v7;
  v8 = a3[7];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  v11 = type metadata accessor for TranscriptProtoStatementID(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v9 = *(_DWORD *)v10;
    v15 = v10[2];
    v9[1] = v10[1];
    v9[2] = v15;
    v16 = *(int *)(v11 + 24);
    v36 = (char *)v10 + v16;
    v37 = (char *)v9 + v16;
    v17 = v12;
    v18 = sub_2408E57A4();
    v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
    swift_bridgeObjectRetain();
    v20 = v18;
    v12 = v17;
    v19(v37, v36, v20);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v9, 0, 1, v11);
  }
  v21 = a3[8];
  v22 = (_QWORD *)(a1 + v21);
  v23 = (_QWORD *)(a2 + v21);
  if (v13((_QWORD *)(a2 + v21), 1, v11))
  {
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v22 = *(_DWORD *)v23;
    v25 = v23[2];
    v22[1] = v23[1];
    v22[2] = v25;
    v26 = *(int *)(v11 + 24);
    v27 = (char *)v22 + v26;
    v38 = (char *)v23 + v26;
    v28 = v12;
    v29 = sub_2408E57A4();
    v30 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16);
    swift_bridgeObjectRetain();
    v30(v27, v38, v29);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v22, 0, 1, v11);
  }
  v31 = a3[9];
  v32 = a1 + v31;
  v33 = a2 + v31;
  v34 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  return a1;
}

uint64_t assignWithCopy for TranscriptProtoUndoRedoRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  int *v17;
  void (*v18)(char *, char *, uint64_t);
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  int v24;
  int v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  int *v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[7];
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  v9 = type metadata accessor for TranscriptProtoStatementID(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      *(_DWORD *)v7 = *(_DWORD *)v8;
      v7[1] = v8[1];
      v7[2] = v8[2];
      v14 = *(int *)(v9 + 24);
      v47 = v10;
      v15 = (char *)v7 + v14;
      v46 = (char *)v8 + v14;
      v16 = sub_2408E57A4();
      v17 = a3;
      v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
      swift_bridgeObjectRetain();
      v19 = v15;
      v10 = v47;
      v18(v19, v46, v16);
      a3 = v17;
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
LABEL_6:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)v7 = *(_DWORD *)v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v38 = *(int *)(v9 + 24);
  v39 = (char *)v7 + v38;
  v40 = (char *)v8 + v38;
  v41 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 24))(v39, v40, v41);
LABEL_7:
  v21 = a3[8];
  v22 = (_QWORD *)(a1 + v21);
  v23 = (_QWORD *)(a2 + v21);
  v24 = v11((_QWORD *)(a1 + v21), 1, v9);
  v25 = v11(v23, 1, v9);
  if (!v24)
  {
    if (!v25)
    {
      *(_DWORD *)v22 = *(_DWORD *)v23;
      v22[1] = v23[1];
      v22[2] = v23[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v42 = *(int *)(v9 + 24);
      v43 = (char *)v22 + v42;
      v44 = (char *)v23 + v42;
      v45 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 24))(v43, v44, v45);
      goto LABEL_13;
    }
    sub_240388AE4((uint64_t)v22, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_12;
  }
  if (v25)
  {
LABEL_12:
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_13;
  }
  *(_DWORD *)v22 = *(_DWORD *)v23;
  v22[1] = v23[1];
  v22[2] = v23[2];
  v26 = *(int *)(v9 + 24);
  v48 = v10;
  v27 = (char *)v22 + v26;
  v28 = (char *)v23 + v26;
  v29 = sub_2408E57A4();
  v30 = a3;
  v31 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16);
  swift_bridgeObjectRetain();
  v31(v27, v28, v29);
  a3 = v30;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v22, 0, 1, v9);
LABEL_13:
  v33 = a3[9];
  v34 = a1 + v33;
  v35 = a2 + v33;
  v36 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 24))(v34, v35, v36);
  return a1;
}

uint64_t initializeWithTake for TranscriptProtoUndoRedoRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _DWORD *v7;
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(_DWORD *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _DWORD *v18;
  _DWORD *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v6 = a3[7];
  v7 = (_DWORD *)(a1 + v6);
  v8 = (_DWORD *)(a2 + v6);
  v9 = type metadata accessor for TranscriptProtoStatementID(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    *v7 = *v8;
    *(_OWORD *)(v7 + 2) = *(_OWORD *)(v8 + 2);
    v13 = *(int *)(v9 + 24);
    v14 = (char *)v7 + v13;
    v15 = (char *)v8 + v13;
    v16 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v17 = a3[8];
  v18 = (_DWORD *)(a1 + v17);
  v19 = (_DWORD *)(a2 + v17);
  if (v11((_DWORD *)(a2 + v17), 1, v9))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    *v18 = *v19;
    *(_OWORD *)(v18 + 2) = *(_OWORD *)(v19 + 2);
    v21 = *(int *)(v9 + 24);
    v22 = (char *)v18 + v21;
    v23 = (char *)v19 + v21;
    v24 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v18, 0, 1, v9);
  }
  v25 = a3[9];
  v26 = a1 + v25;
  v27 = a2 + v25;
  v28 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v26, v27, v28);
  return a1;
}

uint64_t assignWithTake for TranscriptProtoUndoRedoRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(_QWORD *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  v8 = a3[7];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  v11 = type metadata accessor for TranscriptProtoStatementID(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      *(_DWORD *)v9 = *(_DWORD *)v10;
      *(_OWORD *)(v9 + 1) = *(_OWORD *)(v10 + 1);
      v16 = *(int *)(v11 + 24);
      v17 = (char *)v9 + v16;
      v18 = (char *)v10 + v16;
      v19 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    sub_240388AE4((uint64_t)v9, type metadata accessor for TranscriptProtoStatementID);
LABEL_6:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)v9 = *(_DWORD *)v10;
  v36 = v10[2];
  v9[1] = v10[1];
  v9[2] = v36;
  swift_bridgeObjectRelease();
  v37 = *(int *)(v11 + 24);
  v38 = (char *)v9 + v37;
  v39 = (char *)v10 + v37;
  v40 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 40))(v38, v39, v40);
LABEL_7:
  v21 = a3[8];
  v22 = a1 + v21;
  v23 = (_QWORD *)(a2 + v21);
  v24 = v13((_QWORD *)(a1 + v21), 1, v11);
  v25 = v13(v23, 1, v11);
  if (!v24)
  {
    if (!v25)
    {
      *(_DWORD *)v22 = *(_DWORD *)v23;
      v41 = v23[2];
      *(_QWORD *)(v22 + 8) = v23[1];
      *(_QWORD *)(v22 + 16) = v41;
      swift_bridgeObjectRelease();
      v42 = *(int *)(v11 + 24);
      v43 = v22 + v42;
      v44 = (uint64_t)v23 + v42;
      v45 = sub_2408E57A4();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 40))(v43, v44, v45);
      goto LABEL_13;
    }
    sub_240388AE4(v22, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_12;
  }
  if (v25)
  {
LABEL_12:
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy((void *)v22, v23, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_13;
  }
  *(_DWORD *)v22 = *(_DWORD *)v23;
  *(_OWORD *)(v22 + 8) = *(_OWORD *)(v23 + 1);
  v26 = *(int *)(v11 + 24);
  v27 = v22 + v26;
  v28 = (uint64_t)v23 + v26;
  v29 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v27, v28, v29);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 56))(v22, 0, 1, v11);
LABEL_13:
  v31 = a3[9];
  v32 = a1 + v31;
  v33 = a2 + v31;
  v34 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoUndoRedoRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406EF3B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 28);
    }
    else
    {
      v10 = sub_2408E57A4();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 36);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoUndoRedoRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406EF468(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 28);
    }
    else
    {
      v10 = sub_2408E57A4();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 36);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_2406EF508()
{
  unint64_t v0;
  unint64_t v1;

  sub_2403C8BE4(319, qword_256FFCBE0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementID);
  if (v0 <= 0x3F)
  {
    sub_2408E57A4();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for TranscriptProtoClientUndoRedoRequest(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(uint64_t *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v34;
  char *v35;
  char *v36;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v8 = a3[6];
    v9 = (_QWORD *)(a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = type metadata accessor for TranscriptProtoStatementID(0);
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      *(_DWORD *)v9 = *(_DWORD *)v10;
      v16 = v10[2];
      v9[1] = v10[1];
      v9[2] = v16;
      v17 = *(int *)(v11 + 24);
      v34 = (char *)v10 + v17;
      v35 = (char *)v9 + v17;
      v18 = sub_2408E57A4();
      v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
      swift_bridgeObjectRetain();
      v19(v35, v34, v18);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v20 = a3[7];
    v21 = (_QWORD *)((char *)v4 + v20);
    v22 = (uint64_t *)((char *)a2 + v20);
    if (v13((uint64_t *)((char *)a2 + v20), 1, v11))
    {
      v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      *(_DWORD *)v21 = *(_DWORD *)v22;
      v24 = v22[2];
      v21[1] = v22[1];
      v21[2] = v24;
      v25 = *(int *)(v11 + 24);
      v26 = (char *)v21 + v25;
      v36 = (char *)v22 + v25;
      v27 = sub_2408E57A4();
      v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
      swift_bridgeObjectRetain();
      v28(v26, v36, v27);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v21, 0, 1, v11);
    }
    v29 = a3[8];
    v30 = (char *)v4 + v29;
    v31 = (uint64_t)a2 + v29;
    v32 = sub_2408E57A4();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v30, v31, v32);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoClientUndoRedoRequest(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[6];
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48);
  if (!v6(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    v7 = v4 + *(int *)(v5 + 24);
    v8 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  v9 = a1 + a2[7];
  if (!v6(v9, 1, v5))
  {
    swift_bridgeObjectRelease();
    v10 = v9 + *(int *)(v5 + 24);
    v11 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  }
  v12 = a1 + a2[8];
  v13 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
}

uint64_t initializeWithCopy for TranscriptProtoClientUndoRedoRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(_QWORD *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v32;
  char *v33;
  char *v34;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = a3[6];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = type metadata accessor for TranscriptProtoStatementID(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v8 = *(_DWORD *)v9;
    v14 = v9[2];
    v8[1] = v9[1];
    v8[2] = v14;
    v15 = *(int *)(v10 + 24);
    v32 = (char *)v9 + v15;
    v33 = (char *)v8 + v15;
    v16 = sub_2408E57A4();
    v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
    swift_bridgeObjectRetain();
    v17(v33, v32, v16);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v18 = a3[7];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (_QWORD *)(a2 + v18);
  if (v12((_QWORD *)(a2 + v18), 1, v10))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v19 = *(_DWORD *)v20;
    v22 = v20[2];
    v19[1] = v20[1];
    v19[2] = v22;
    v23 = *(int *)(v10 + 24);
    v24 = (char *)v19 + v23;
    v34 = (char *)v20 + v23;
    v25 = sub_2408E57A4();
    v26 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
    swift_bridgeObjectRetain();
    v26(v24, v34, v25);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v19, 0, 1, v10);
  }
  v27 = a3[8];
  v28 = a1 + v27;
  v29 = a2 + v27;
  v30 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  return a1;
}

uint64_t assignWithCopy for TranscriptProtoClientUndoRedoRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  int v23;
  int v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = a3[6];
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  v9 = type metadata accessor for TranscriptProtoStatementID(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      *(_DWORD *)v7 = *(_DWORD *)v8;
      v7[1] = v8[1];
      v7[2] = v8[2];
      v14 = *(int *)(v9 + 24);
      v45 = v10;
      v15 = (char *)v7 + v14;
      v44 = (char *)v8 + v14;
      v16 = sub_2408E57A4();
      v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
      swift_bridgeObjectRetain();
      v18 = v15;
      v10 = v45;
      v17(v18, v44, v16);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)v7 = *(_DWORD *)v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v36 = *(int *)(v9 + 24);
  v37 = (char *)v7 + v36;
  v38 = (char *)v8 + v36;
  v39 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 24))(v37, v38, v39);
LABEL_7:
  v20 = a3[7];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (_QWORD *)(a2 + v20);
  v23 = v11((_QWORD *)(a1 + v20), 1, v9);
  v24 = v11(v22, 1, v9);
  if (!v23)
  {
    if (!v24)
    {
      *(_DWORD *)v21 = *(_DWORD *)v22;
      v21[1] = v22[1];
      v21[2] = v22[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v40 = *(int *)(v9 + 24);
      v41 = (char *)v21 + v40;
      v42 = (char *)v22 + v40;
      v43 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 24))(v41, v42, v43);
      goto LABEL_13;
    }
    sub_240388AE4((uint64_t)v21, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_12;
  }
  if (v24)
  {
LABEL_12:
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_13;
  }
  *(_DWORD *)v21 = *(_DWORD *)v22;
  v21[1] = v22[1];
  v21[2] = v22[2];
  v25 = *(int *)(v9 + 24);
  v46 = v10;
  v26 = (char *)v21 + v25;
  v27 = (char *)v22 + v25;
  v28 = sub_2408E57A4();
  v29 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16);
  swift_bridgeObjectRetain();
  v29(v26, v27, v28);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v21, 0, 1, v9);
LABEL_13:
  v31 = a3[8];
  v32 = a1 + v31;
  v33 = a2 + v31;
  v34 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  return a1;
}

uint64_t initializeWithTake for TranscriptProtoClientUndoRedoRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _DWORD *v7;
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(_DWORD *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _DWORD *v18;
  _DWORD *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = a3[6];
  v7 = (_DWORD *)(a1 + v6);
  v8 = (_DWORD *)(a2 + v6);
  v9 = type metadata accessor for TranscriptProtoStatementID(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    *v7 = *v8;
    *(_OWORD *)(v7 + 2) = *(_OWORD *)(v8 + 2);
    v13 = *(int *)(v9 + 24);
    v14 = (char *)v7 + v13;
    v15 = (char *)v8 + v13;
    v16 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v17 = a3[7];
  v18 = (_DWORD *)(a1 + v17);
  v19 = (_DWORD *)(a2 + v17);
  if (v11((_DWORD *)(a2 + v17), 1, v9))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    *v18 = *v19;
    *(_OWORD *)(v18 + 2) = *(_OWORD *)(v19 + 2);
    v21 = *(int *)(v9 + 24);
    v22 = (char *)v18 + v21;
    v23 = (char *)v19 + v21;
    v24 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v18, 0, 1, v9);
  }
  v25 = a3[8];
  v26 = a1 + v25;
  v27 = a2 + v25;
  v28 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v26, v27, v28);
  return a1;
}

uint64_t assignWithTake for TranscriptProtoClientUndoRedoRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(_QWORD *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = a3[6];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = type metadata accessor for TranscriptProtoStatementID(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      *(_DWORD *)v8 = *(_DWORD *)v9;
      *(_OWORD *)(v8 + 1) = *(_OWORD *)(v9 + 1);
      v15 = *(int *)(v10 + 24);
      v16 = (char *)v8 + v15;
      v17 = (char *)v9 + v15;
      v18 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    sub_240388AE4((uint64_t)v8, type metadata accessor for TranscriptProtoStatementID);
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)v8 = *(_DWORD *)v9;
  v35 = v9[2];
  v8[1] = v9[1];
  v8[2] = v35;
  swift_bridgeObjectRelease();
  v36 = *(int *)(v10 + 24);
  v37 = (char *)v8 + v36;
  v38 = (char *)v9 + v36;
  v39 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 40))(v37, v38, v39);
LABEL_7:
  v20 = a3[7];
  v21 = a1 + v20;
  v22 = (_QWORD *)(a2 + v20);
  v23 = v12((_QWORD *)(a1 + v20), 1, v10);
  v24 = v12(v22, 1, v10);
  if (!v23)
  {
    if (!v24)
    {
      *(_DWORD *)v21 = *(_DWORD *)v22;
      v40 = v22[2];
      *(_QWORD *)(v21 + 8) = v22[1];
      *(_QWORD *)(v21 + 16) = v40;
      swift_bridgeObjectRelease();
      v41 = *(int *)(v10 + 24);
      v42 = v21 + v41;
      v43 = (uint64_t)v22 + v41;
      v44 = sub_2408E57A4();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 40))(v42, v43, v44);
      goto LABEL_13;
    }
    sub_240388AE4(v21, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_12;
  }
  if (v24)
  {
LABEL_12:
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy((void *)v21, v22, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_13;
  }
  *(_DWORD *)v21 = *(_DWORD *)v22;
  *(_OWORD *)(v21 + 8) = *(_OWORD *)(v22 + 1);
  v25 = *(int *)(v10 + 24);
  v26 = v21 + v25;
  v27 = (uint64_t)v22 + v25;
  v28 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v26, v27, v28);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))(v21, 0, 1, v10);
LABEL_13:
  v30 = a3[8];
  v31 = a1 + v30;
  v32 = a2 + v30;
  v33 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 40))(v31, v32, v33);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoClientUndoRedoRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoClientUndoRedoRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_2406F0294(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2406F02B0(a1, a2, a3, (uint64_t)&unk_240906518, qword_256FFCBE0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementID);
}

void sub_2406F02B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5, void (*a6)(uint64_t))
{
  unint64_t v6;
  unint64_t v7;

  sub_2403C8BE4(319, a5, a6);
  if (v6 <= 0x3F)
  {
    sub_2408E57A4();
    if (v7 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoTypeConversionRequest(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v43;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for ToolKitProtoTypedValue(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v11 = *a2;
      if ((~*a2 & 0xF000000000000007) != 0)
        swift_retain();
      *a1 = v11;
      v12 = *(int *)(v7 + 20);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v16 = a3[5];
    v17 = (uint64_t *)((char *)a1 + v16);
    v18 = (uint64_t *)((char *)a2 + v16);
    v19 = type metadata accessor for ToolKitProtoTypeInstance(0);
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      v22 = *v18;
      if ((~*v18 & 0xF000000000000007) != 0)
        swift_retain();
      *v17 = v22;
      v23 = *(int *)(v19 + 20);
      v24 = (char *)v17 + v23;
      v25 = (char *)v18 + v23;
      v26 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
    v27 = a3[6];
    v28 = (uint64_t *)((char *)a1 + v27);
    v29 = (uint64_t *)((char *)a2 + v27);
    v30 = type metadata accessor for TranscriptProtoStatementID(0);
    v31 = *(_QWORD *)(v30 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
    {
      v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      *(_DWORD *)v28 = *(_DWORD *)v29;
      v33 = v29[2];
      v28[1] = v29[1];
      v28[2] = v33;
      v34 = *(int *)(v30 + 24);
      v35 = (char *)v28 + v34;
      v43 = (char *)v29 + v34;
      v36 = sub_2408E57A4();
      v37 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16);
      swift_bridgeObjectRetain();
      v37(v35, v43, v36);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
    }
    v38 = a3[7];
    v39 = (char *)a1 + v38;
    v40 = (char *)a2 + v38;
    v41 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v39, v40, v41);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoTypeConversionRequest(_QWORD *a1, int *a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;

  v4 = type metadata accessor for ToolKitProtoTypedValue(0);
  if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4))
  {
    if ((~*a1 & 0xF000000000000007) != 0)
      swift_release();
    v5 = (char *)a1 + *(int *)(v4 + 20);
    v6 = sub_2408E57A4();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  v7 = (_QWORD *)((char *)a1 + a2[5]);
  v8 = type metadata accessor for ToolKitProtoTypeInstance(0);
  if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
  {
    if ((~*v7 & 0xF000000000000007) != 0)
      swift_release();
    v9 = (char *)v7 + *(int *)(v8 + 20);
    v10 = sub_2408E57A4();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  }
  v11 = (char *)a1 + a2[6];
  v12 = type metadata accessor for TranscriptProtoStatementID(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12))
  {
    swift_bridgeObjectRelease();
    v13 = &v11[*(int *)(v12 + 24)];
    v14 = sub_2408E57A4();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  }
  v15 = (char *)a1 + a2[7];
  v16 = sub_2408E57A4();
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
}

_QWORD *initializeWithCopy for TranscriptProtoTypeConversionRequest(_QWORD *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  int *v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v42;

  v6 = type metadata accessor for ToolKitProtoTypedValue(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = *a2;
    if ((~*a2 & 0xF000000000000007) != 0)
      swift_retain();
    *a1 = v9;
    v10 = *(int *)(v6 + 20);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v14 = a3[5];
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (uint64_t *)((char *)a2 + v14);
  v17 = type metadata accessor for ToolKitProtoTypeInstance(0);
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    v20 = *v16;
    if ((~*v16 & 0xF000000000000007) != 0)
      swift_retain();
    *v15 = v20;
    v21 = *(int *)(v17 + 20);
    v22 = (char *)v15 + v21;
    v23 = (char *)v16 + v21;
    v24 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  v25 = a3[6];
  v26 = (_QWORD *)((char *)a1 + v25);
  v27 = (uint64_t *)((char *)a2 + v25);
  v28 = type metadata accessor for TranscriptProtoStatementID(0);
  v29 = *(_QWORD *)(v28 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
  {
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v26 = *(_DWORD *)v27;
    v31 = v27[2];
    v26[1] = v27[1];
    v26[2] = v31;
    v32 = *(int *)(v28 + 24);
    v33 = (char *)v26 + v32;
    v42 = (char *)v27 + v32;
    v34 = sub_2408E57A4();
    v35 = a3;
    v36 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16);
    swift_bridgeObjectRetain();
    v36(v33, v42, v34);
    a3 = v35;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
  }
  v37 = a3[7];
  v38 = (char *)a1 + v37;
  v39 = (char *)a2 + v37;
  v40 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v38, v39, v40);
  return a1;
}

uint64_t *assignWithCopy for TranscriptProtoTypeConversionRequest(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t *, uint64_t, uint64_t);
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(_QWORD *, uint64_t, uint64_t);
  int v37;
  int v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t *v42;
  int *v43;
  void (*v44)(char *, char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;

  v6 = type metadata accessor for ToolKitProtoTypedValue(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_240388AE4((uint64_t)a1, type metadata accessor for ToolKitProtoTypedValue);
      goto LABEL_8;
    }
    v51 = *a2;
    v52 = *a2 & 0xF000000000000007;
    if ((~*a1 & 0xF000000000000007) != 0)
    {
      if (v52 != 0xF000000000000007)
      {
        *a1 = v51;
        swift_retain();
        swift_release();
        goto LABEL_38;
      }
      sub_2403C66E0((uint64_t)a1);
      v51 = *a2;
    }
    else if (v52 != 0xF000000000000007)
    {
      *a1 = v51;
      swift_retain();
LABEL_38:
      v59 = *(int *)(v6 + 20);
      v60 = (char *)a1 + v59;
      v61 = (char *)a2 + v59;
      v62 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 24))(v60, v61, v62);
      goto LABEL_9;
    }
    *a1 = v51;
    goto LABEL_38;
  }
  if (v10)
  {
LABEL_8:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_9;
  }
  v11 = *a2;
  if ((~*a2 & 0xF000000000000007) != 0)
    swift_retain();
  *a1 = v11;
  v12 = *(int *)(v6 + 20);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_9:
  v17 = a3[5];
  v18 = (uint64_t *)((char *)a1 + v17);
  v19 = (uint64_t *)((char *)a2 + v17);
  v20 = type metadata accessor for ToolKitProtoTypeInstance(0);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v21 + 48);
  v23 = v22(v18, 1, v20);
  v24 = v22(v19, 1, v20);
  if (!v23)
  {
    if (v24)
    {
      sub_240388AE4((uint64_t)v18, type metadata accessor for ToolKitProtoTypeInstance);
      goto LABEL_16;
    }
    v53 = *v19;
    v54 = *v19 & 0xF000000000000007;
    if ((~*v18 & 0xF000000000000007) != 0)
    {
      if (v54 != 0xF000000000000007)
      {
        *v18 = v53;
        swift_retain();
        swift_release();
        goto LABEL_40;
      }
      sub_2403D4924((uint64_t)v18);
      v53 = *v19;
    }
    else if (v54 != 0xF000000000000007)
    {
      *v18 = v53;
      swift_retain();
LABEL_40:
      v63 = *(int *)(v20 + 20);
      v64 = (char *)v18 + v63;
      v65 = (char *)v19 + v63;
      v66 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 24))(v64, v65, v66);
      goto LABEL_17;
    }
    *v18 = v53;
    goto LABEL_40;
  }
  if (v24)
  {
LABEL_16:
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_17;
  }
  v25 = *v19;
  if ((~*v19 & 0xF000000000000007) != 0)
    swift_retain();
  *v18 = v25;
  v26 = *(int *)(v20 + 20);
  v27 = (char *)v18 + v26;
  v28 = (char *)v19 + v26;
  v29 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
LABEL_17:
  v31 = a3[6];
  v32 = (uint64_t *)((char *)a1 + v31);
  v33 = (uint64_t *)((char *)a2 + v31);
  v34 = type metadata accessor for TranscriptProtoStatementID(0);
  v35 = *(_QWORD *)(v34 - 8);
  v36 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v35 + 48);
  v37 = v36(v32, 1, v34);
  v38 = v36(v33, 1, v34);
  if (!v37)
  {
    if (!v38)
    {
      *(_DWORD *)v32 = *(_DWORD *)v33;
      v32[1] = v33[1];
      v32[2] = v33[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v55 = *(int *)(v34 + 24);
      v56 = (char *)v32 + v55;
      v57 = (char *)v33 + v55;
      v58 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 24))(v56, v57, v58);
      goto LABEL_23;
    }
    sub_240388AE4((uint64_t)v32, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_22;
  }
  if (v38)
  {
LABEL_22:
    v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    goto LABEL_23;
  }
  *(_DWORD *)v32 = *(_DWORD *)v33;
  v32[1] = v33[1];
  v32[2] = v33[2];
  v39 = *(int *)(v34 + 24);
  v40 = (char *)v32 + v39;
  v67 = (char *)v33 + v39;
  v41 = sub_2408E57A4();
  v42 = a2;
  v43 = a3;
  v44 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16);
  swift_bridgeObjectRetain();
  v44(v40, v67, v41);
  a3 = v43;
  a2 = v42;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
LABEL_23:
  v46 = a3[7];
  v47 = (char *)a1 + v46;
  v48 = (char *)a2 + v46;
  v49 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 24))(v47, v48, v49);
  return a1;
}

_QWORD *initializeWithTake for TranscriptProtoTypeConversionRequest(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  _DWORD *v24;
  _DWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;

  v6 = type metadata accessor for ToolKitProtoTypedValue(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v9 = *(int *)(v6 + 20);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v13 = a3[5];
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  v16 = type metadata accessor for ToolKitProtoTypeInstance(0);
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    *v14 = *v15;
    v19 = *(int *)(v16 + 20);
    v20 = (char *)v14 + v19;
    v21 = (char *)v15 + v19;
    v22 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  v23 = a3[6];
  v24 = (_DWORD *)((char *)a1 + v23);
  v25 = (_DWORD *)((char *)a2 + v23);
  v26 = type metadata accessor for TranscriptProtoStatementID(0);
  v27 = *(_QWORD *)(v26 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    *v24 = *v25;
    *(_OWORD *)(v24 + 2) = *(_OWORD *)(v25 + 2);
    v29 = *(int *)(v26 + 24);
    v30 = (char *)v24 + v29;
    v31 = (char *)v25 + v29;
    v32 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v30, v31, v32);
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  }
  v33 = a3[7];
  v34 = (char *)a1 + v33;
  v35 = (char *)a2 + v33;
  v36 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v34, v35, v36);
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoTypeConversionRequest(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(_QWORD *, uint64_t, uint64_t);
  int v22;
  int v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, uint64_t, uint64_t);
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;

  v6 = type metadata accessor for ToolKitProtoTypedValue(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      *a1 = *a2;
      v11 = *(int *)(v6 + 20);
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    sub_240388AE4((uint64_t)a1, type metadata accessor for ToolKitProtoTypedValue);
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  v47 = *a2;
  if ((~*a1 & 0xF000000000000007) != 0)
  {
    if ((~v47 & 0xF000000000000007) != 0)
    {
      *a1 = v47;
      swift_release();
    }
    else
    {
      sub_2403C66E0((uint64_t)a1);
      *a1 = *a2;
    }
  }
  else
  {
    *a1 = v47;
  }
  v54 = *(int *)(v6 + 20);
  v55 = (char *)a1 + v54;
  v56 = (char *)a2 + v54;
  v57 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 40))(v55, v56, v57);
LABEL_7:
  v16 = a3[5];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  v19 = type metadata accessor for ToolKitProtoTypeInstance(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v20 + 48);
  v22 = v21(v17, 1, v19);
  v23 = v21(v18, 1, v19);
  if (v22)
  {
    if (!v23)
    {
      *v17 = *v18;
      v24 = *(int *)(v19 + 20);
      v25 = (char *)v17 + v24;
      v26 = (char *)v18 + v24;
      v27 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v23)
  {
    sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoTypeInstance);
LABEL_12:
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_13;
  }
  v48 = *v18;
  if ((~*v17 & 0xF000000000000007) != 0)
  {
    if ((~v48 & 0xF000000000000007) != 0)
    {
      *v17 = v48;
      swift_release();
    }
    else
    {
      sub_2403D4924((uint64_t)v17);
      *v17 = *v18;
    }
  }
  else
  {
    *v17 = v48;
  }
  v58 = *(int *)(v19 + 20);
  v59 = (char *)v17 + v58;
  v60 = (char *)v18 + v58;
  v61 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 40))(v59, v60, v61);
LABEL_13:
  v29 = a3[6];
  v30 = (uint64_t)a1 + v29;
  v31 = (char *)a2 + v29;
  v32 = type metadata accessor for TranscriptProtoStatementID(0);
  v33 = *(_QWORD *)(v32 - 8);
  v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v33 + 48);
  v35 = v34(v30, 1, v32);
  v36 = v34((uint64_t)v31, 1, v32);
  if (!v35)
  {
    if (!v36)
    {
      *(_DWORD *)v30 = *(_DWORD *)v31;
      v49 = *((_QWORD *)v31 + 2);
      *(_QWORD *)(v30 + 8) = *((_QWORD *)v31 + 1);
      *(_QWORD *)(v30 + 16) = v49;
      swift_bridgeObjectRelease();
      v50 = *(int *)(v32 + 24);
      v51 = v30 + v50;
      v52 = &v31[v50];
      v53 = sub_2408E57A4();
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 40))(v51, v52, v53);
      goto LABEL_19;
    }
    sub_240388AE4(v30, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_18;
  }
  if (v36)
  {
LABEL_18:
    v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy((void *)v30, v31, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    goto LABEL_19;
  }
  *(_DWORD *)v30 = *(_DWORD *)v31;
  *(_OWORD *)(v30 + 8) = *(_OWORD *)(v31 + 8);
  v37 = *(int *)(v32 + 24);
  v38 = v30 + v37;
  v39 = &v31[v37];
  v40 = sub_2408E57A4();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v38, v39, v40);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
LABEL_19:
  v42 = a3[7];
  v43 = (char *)a1 + v42;
  v44 = (char *)a2 + v42;
  v45 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 40))(v43, v44, v45);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoTypeConversionRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406F1550(uint64_t a1, uint64_t a2, int *a3)
{
  return __swift_get_extra_inhabitant_index_425Tm(a1, a2, a3, &qword_256FFA3A8, &qword_256FFA428, &qword_256FFA300);
}

uint64_t __swift_get_extra_inhabitant_index_425Tm(uint64_t a1, uint64_t a2, int *a3, uint64_t *a4, uint64_t *a5, uint64_t *a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v11 = __swift_instantiateConcreteTypeFromMangledName(a4);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v13 = v11;
    v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    v15 = a1;
  }
  else
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(a5);
    v17 = *(_QWORD *)(v16 - 8);
    if (*(_DWORD *)(v17 + 84) == (_DWORD)a2)
    {
      v13 = v16;
      v18 = a3[5];
    }
    else
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(a6);
      v17 = *(_QWORD *)(v19 - 8);
      if (*(_DWORD *)(v17 + 84) == (_DWORD)a2)
      {
        v13 = v19;
        v18 = a3[6];
      }
      else
      {
        v13 = sub_2408E57A4();
        v17 = *(_QWORD *)(v13 - 8);
        v18 = a3[7];
      }
    }
    v15 = a1 + v18;
    v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
  }
  return v14(v15, a2, v13);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoTypeConversionRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406F1644(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  return __swift_store_extra_inhabitant_index_426Tm(a1, a2, a3, a4, &qword_256FFA3A8, &qword_256FFA428, &qword_256FFA300);
}

uint64_t __swift_store_extra_inhabitant_index_426Tm(uint64_t a1, uint64_t a2, int a3, int *a4, uint64_t *a5, uint64_t *a6, uint64_t *a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v13 = __swift_instantiateConcreteTypeFromMangledName(a5);
  v14 = *(_QWORD *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v15 = v13;
    v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    v17 = a1;
  }
  else
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(a6);
    v19 = *(_QWORD *)(v18 - 8);
    if (*(_DWORD *)(v19 + 84) == a3)
    {
      v15 = v18;
      v20 = a4[5];
    }
    else
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName(a7);
      v19 = *(_QWORD *)(v21 - 8);
      if (*(_DWORD *)(v19 + 84) == a3)
      {
        v15 = v21;
        v20 = a4[6];
      }
      else
      {
        v15 = sub_2408E57A4();
        v19 = *(_QWORD *)(v15 - 8);
        v20 = a4[7];
      }
    }
    v17 = a1 + v20;
    v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56);
  }
  return v16(v17, a2, a2, v15);
}

void sub_2406F1734()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_2403C8BE4(319, &qword_256FFB188, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue);
  if (v0 <= 0x3F)
  {
    sub_2403C8BE4(319, qword_256FFBB00, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypeInstance);
    if (v1 <= 0x3F)
    {
      sub_2403C8BE4(319, qword_256FFCBE0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementID);
      if (v2 <= 0x3F)
      {
        sub_2408E57A4();
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoTypeConversionResult(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(uint64_t *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v41;
  char *v42;
  char *v43;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for ToolKitProtoTypedValue(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v11 = *a2;
      if ((~*a2 & 0xF000000000000007) != 0)
        swift_retain();
      *a1 = v11;
      v12 = *(int *)(v7 + 20);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v16 = a3[5];
    v17 = (uint64_t *)((char *)a1 + v16);
    v18 = (uint64_t *)((char *)a2 + v16);
    v19 = type metadata accessor for TranscriptProtoStatementID(0);
    v20 = *(_QWORD *)(v19 - 8);
    v21 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v20 + 48);
    if (v21(v18, 1, v19))
    {
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      *(_DWORD *)v17 = *(_DWORD *)v18;
      v23 = v18[2];
      v17[1] = v18[1];
      v17[2] = v23;
      v24 = *(int *)(v19 + 24);
      v41 = (char *)v18 + v24;
      v42 = (char *)v17 + v24;
      v25 = sub_2408E57A4();
      v26 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
      swift_bridgeObjectRetain();
      v26(v42, v41, v25);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
    v27 = a3[6];
    v28 = (uint64_t *)((char *)a1 + v27);
    v29 = (uint64_t *)((char *)a2 + v27);
    if (v21((uint64_t *)((char *)a2 + v27), 1, v19))
    {
      v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      *(_DWORD *)v28 = *(_DWORD *)v29;
      v31 = v29[2];
      v28[1] = v29[1];
      v28[2] = v31;
      v32 = *(int *)(v19 + 24);
      v33 = (char *)v28 + v32;
      v43 = (char *)v29 + v32;
      v34 = sub_2408E57A4();
      v35 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16);
      swift_bridgeObjectRetain();
      v35(v33, v43, v34);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v28, 0, 1, v19);
    }
    v36 = a3[7];
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    v39 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoTypeConversionResult(_QWORD *a1, int *a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unsigned int (*v9)(char *, uint64_t, uint64_t);
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;

  v4 = type metadata accessor for ToolKitProtoTypedValue(0);
  if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4))
  {
    if ((~*a1 & 0xF000000000000007) != 0)
      swift_release();
    v5 = (char *)a1 + *(int *)(v4 + 20);
    v6 = sub_2408E57A4();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  v7 = (char *)a1 + a2[5];
  v8 = type metadata accessor for TranscriptProtoStatementID(0);
  v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  if (!v9(v7, 1, v8))
  {
    swift_bridgeObjectRelease();
    v10 = &v7[*(int *)(v8 + 24)];
    v11 = sub_2408E57A4();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  }
  v12 = (char *)a1 + a2[6];
  if (!v9(v12, 1, v8))
  {
    swift_bridgeObjectRelease();
    v13 = &v12[*(int *)(v8 + 24)];
    v14 = sub_2408E57A4();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  }
  v15 = (char *)a1 + a2[7];
  v16 = sub_2408E57A4();
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
}

_QWORD *initializeWithCopy for TranscriptProtoTypeConversionResult(_QWORD *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(uint64_t *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v41;
  int *v42;
  int *v43;

  v6 = type metadata accessor for ToolKitProtoTypedValue(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = *a2;
    if ((~*a2 & 0xF000000000000007) != 0)
      swift_retain();
    *a1 = v9;
    v10 = *(int *)(v6 + 20);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v14 = a3[5];
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (uint64_t *)((char *)a2 + v14);
  v17 = type metadata accessor for TranscriptProtoStatementID(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v18 + 48);
  if (v19(v16, 1, v17))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v15 = *(_DWORD *)v16;
    v42 = a3;
    v21 = v16[2];
    v15[1] = v16[1];
    v15[2] = v21;
    v22 = *(int *)(v17 + 24);
    v23 = (char *)v15 + v22;
    v41 = (char *)v16 + v22;
    v24 = sub_2408E57A4();
    v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
    a3 = v42;
    swift_bridgeObjectRetain();
    v25(v23, v41, v24);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  v26 = a3[6];
  v27 = (_QWORD *)((char *)a1 + v26);
  v28 = (uint64_t *)((char *)a2 + v26);
  if (v19((uint64_t *)((char *)a2 + v26), 1, v17))
  {
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v27 = *(_DWORD *)v28;
    v43 = a3;
    v30 = v28[2];
    v27[1] = v28[1];
    v27[2] = v30;
    v31 = *(int *)(v17 + 24);
    v32 = (char *)v27 + v31;
    v33 = (char *)v28 + v31;
    v34 = sub_2408E57A4();
    v35 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16);
    a3 = v43;
    swift_bridgeObjectRetain();
    v35(v32, v33, v34);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v27, 0, 1, v17);
  }
  v36 = a3[7];
  v37 = (char *)a1 + v36;
  v38 = (char *)a2 + v36;
  v39 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
  return a1;
}

uint64_t *assignWithCopy for TranscriptProtoTypeConversionResult(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t *, uint64_t, uint64_t);
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t *, uint64_t, uint64_t);
  int v22;
  int v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  char *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t *v33;
  int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;

  v5 = type metadata accessor for ToolKitProtoTypedValue(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v6 + 48);
  v8 = v7(a1, 1, v5);
  v9 = v7(a2, 1, v5);
  if (!v8)
  {
    if (v9)
    {
      sub_240388AE4((uint64_t)a1, type metadata accessor for ToolKitProtoTypedValue);
      goto LABEL_8;
    }
    v48 = *a2;
    v49 = *a2 & 0xF000000000000007;
    if ((~*a1 & 0xF000000000000007) != 0)
    {
      if (v49 != 0xF000000000000007)
      {
        *a1 = v48;
        swift_retain();
        swift_release();
        goto LABEL_31;
      }
      sub_2403C66E0((uint64_t)a1);
      v48 = *a2;
    }
    else if (v49 != 0xF000000000000007)
    {
      *a1 = v48;
      swift_retain();
LABEL_31:
      v58 = *(int *)(v5 + 20);
      v59 = (char *)a1 + v58;
      v60 = (char *)a2 + v58;
      v61 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 24))(v59, v60, v61);
      goto LABEL_9;
    }
    *a1 = v48;
    goto LABEL_31;
  }
  if (v9)
  {
LABEL_8:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_9;
  }
  v10 = *a2;
  if ((~*a2 & 0xF000000000000007) != 0)
    swift_retain();
  *a1 = v10;
  v11 = *(int *)(v5 + 20);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
LABEL_9:
  v16 = a3[5];
  v17 = (uint64_t *)((char *)a1 + v16);
  v18 = (uint64_t *)((char *)a2 + v16);
  v19 = type metadata accessor for TranscriptProtoStatementID(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v20 + 48);
  v22 = v21(v17, 1, v19);
  v23 = v21(v18, 1, v19);
  if (v22)
  {
    if (!v23)
    {
      *(_DWORD *)v17 = *(_DWORD *)v18;
      v17[1] = v18[1];
      v17[2] = v18[2];
      v24 = *(int *)(v19 + 24);
      v62 = v20;
      v25 = (char *)v17 + v24;
      v26 = (char *)v18 + v24;
      v27 = sub_2408E57A4();
      v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
      swift_bridgeObjectRetain();
      v29 = v25;
      v20 = v62;
      v28(v29, v26, v27);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v17, 0, 1, v19);
      goto LABEL_15;
    }
    goto LABEL_14;
  }
  if (v23)
  {
    sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoStatementID);
LABEL_14:
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_15;
  }
  *(_DWORD *)v17 = *(_DWORD *)v18;
  v17[1] = v18[1];
  v17[2] = v18[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v50 = *(int *)(v19 + 24);
  v51 = (char *)v17 + v50;
  v52 = (char *)v18 + v50;
  v53 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 24))(v51, v52, v53);
LABEL_15:
  v31 = a3[6];
  v32 = (uint64_t *)((char *)a1 + v31);
  v33 = (uint64_t *)((char *)a2 + v31);
  v34 = v21((uint64_t *)((char *)a1 + v31), 1, v19);
  v35 = v21(v33, 1, v19);
  if (!v34)
  {
    if (!v35)
    {
      *(_DWORD *)v32 = *(_DWORD *)v33;
      v32[1] = v33[1];
      v32[2] = v33[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v54 = *(int *)(v19 + 24);
      v55 = (char *)v32 + v54;
      v56 = (char *)v33 + v54;
      v57 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 24))(v55, v56, v57);
      goto LABEL_21;
    }
    sub_240388AE4((uint64_t)v32, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_20;
  }
  if (v35)
  {
LABEL_20:
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    goto LABEL_21;
  }
  *(_DWORD *)v32 = *(_DWORD *)v33;
  v32[1] = v33[1];
  v32[2] = v33[2];
  v36 = *(int *)(v19 + 24);
  v37 = v20;
  v38 = (char *)v32 + v36;
  v39 = (char *)v33 + v36;
  v40 = sub_2408E57A4();
  v41 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16);
  swift_bridgeObjectRetain();
  v41(v38, v39, v40);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v32, 0, 1, v19);
LABEL_21:
  v43 = a3[7];
  v44 = (char *)a1 + v43;
  v45 = (char *)a2 + v43;
  v46 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 24))(v44, v45, v46);
  return a1;
}

_QWORD *initializeWithTake for TranscriptProtoTypeConversionResult(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _DWORD *v14;
  _DWORD *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(_DWORD *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _DWORD *v25;
  _DWORD *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;

  v6 = type metadata accessor for ToolKitProtoTypedValue(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v9 = *(int *)(v6 + 20);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v13 = a3[5];
  v14 = (_DWORD *)((char *)a1 + v13);
  v15 = (_DWORD *)((char *)a2 + v13);
  v16 = type metadata accessor for TranscriptProtoStatementID(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v17 + 48);
  if (v18(v15, 1, v16))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    *v14 = *v15;
    *(_OWORD *)(v14 + 2) = *(_OWORD *)(v15 + 2);
    v20 = *(int *)(v16 + 24);
    v21 = (char *)v14 + v20;
    v22 = (char *)v15 + v20;
    v23 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  v24 = a3[6];
  v25 = (_DWORD *)((char *)a1 + v24);
  v26 = (_DWORD *)((char *)a2 + v24);
  if (v18((_QWORD *)((char *)a2 + v24), 1, v16))
  {
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    *v25 = *v26;
    *(_OWORD *)(v25 + 2) = *(_OWORD *)(v26 + 2);
    v28 = *(int *)(v16 + 24);
    v29 = (char *)v25 + v28;
    v30 = (char *)v26 + v28;
    v31 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v25, 0, 1, v16);
  }
  v32 = a3[7];
  v33 = (char *)a1 + v32;
  v34 = (char *)a2 + v32;
  v35 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v33, v34, v35);
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoTypeConversionResult(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(char *, uint64_t, uint64_t);
  int v22;
  int v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;

  v6 = type metadata accessor for ToolKitProtoTypedValue(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      *a1 = *a2;
      v11 = *(int *)(v6 + 20);
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    sub_240388AE4((uint64_t)a1, type metadata accessor for ToolKitProtoTypedValue);
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  v44 = *a2;
  if ((~*a1 & 0xF000000000000007) != 0)
  {
    if ((~v44 & 0xF000000000000007) != 0)
    {
      *a1 = v44;
      swift_release();
    }
    else
    {
      sub_2403C66E0((uint64_t)a1);
      *a1 = *a2;
    }
  }
  else
  {
    *a1 = v44;
  }
  v55 = *(int *)(v6 + 20);
  v56 = (char *)a1 + v55;
  v57 = (char *)a2 + v55;
  v58 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 40))(v56, v57, v58);
LABEL_7:
  v16 = a3[5];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  v19 = type metadata accessor for TranscriptProtoStatementID(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  v22 = v21((char *)v17, 1, v19);
  v23 = v21((char *)v18, 1, v19);
  if (v22)
  {
    if (!v23)
    {
      *(_DWORD *)v17 = *(_DWORD *)v18;
      *(_OWORD *)(v17 + 1) = *(_OWORD *)(v18 + 1);
      v24 = *(int *)(v19 + 24);
      v25 = (char *)v17 + v24;
      v26 = (char *)v18 + v24;
      v27 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v23)
  {
    sub_240388AE4((uint64_t)v17, type metadata accessor for TranscriptProtoStatementID);
LABEL_12:
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_13;
  }
  *(_DWORD *)v17 = *(_DWORD *)v18;
  v45 = v18[2];
  v17[1] = v18[1];
  v17[2] = v45;
  swift_bridgeObjectRelease();
  v46 = *(int *)(v19 + 24);
  v47 = (char *)v17 + v46;
  v48 = (char *)v18 + v46;
  v49 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 40))(v47, v48, v49);
LABEL_13:
  v29 = a3[6];
  v30 = (uint64_t)a1 + v29;
  v31 = (char *)a2 + v29;
  v32 = v21((char *)a1 + v29, 1, v19);
  v33 = v21(v31, 1, v19);
  if (!v32)
  {
    if (!v33)
    {
      *(_DWORD *)v30 = *(_DWORD *)v31;
      v50 = *((_QWORD *)v31 + 2);
      *(_QWORD *)(v30 + 8) = *((_QWORD *)v31 + 1);
      *(_QWORD *)(v30 + 16) = v50;
      swift_bridgeObjectRelease();
      v51 = *(int *)(v19 + 24);
      v52 = v30 + v51;
      v53 = &v31[v51];
      v54 = sub_2408E57A4();
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 40))(v52, v53, v54);
      goto LABEL_19;
    }
    sub_240388AE4(v30, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_18;
  }
  if (v33)
  {
LABEL_18:
    v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy((void *)v30, v31, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    goto LABEL_19;
  }
  *(_DWORD *)v30 = *(_DWORD *)v31;
  *(_OWORD *)(v30 + 8) = *(_OWORD *)(v31 + 8);
  v34 = *(int *)(v19 + 24);
  v35 = v30 + v34;
  v36 = &v31[v34];
  v37 = sub_2408E57A4();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v35, v36, v37);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v20 + 56))(v30, 0, 1, v19);
LABEL_19:
  v39 = a3[7];
  v40 = (char *)a1 + v39;
  v41 = (char *)a2 + v39;
  v42 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoTypeConversionResult()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406F296C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_362Tm(a1, a2, a3, &qword_256FFA3A8, &qword_256FFA300);
}

uint64_t __swift_get_extra_inhabitant_index_362Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v9 = __swift_instantiateConcreteTypeFromMangledName(a4);
  v10 = *(_QWORD *)(v9 - 8);
  if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
  {
    v11 = v9;
    v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    v13 = a1;
  }
  else
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(a5);
    v15 = *(_QWORD *)(v14 - 8);
    if (*(_DWORD *)(v15 + 84) == (_DWORD)a2)
    {
      v11 = v14;
      v16 = *(int *)(a3 + 20);
    }
    else
    {
      v11 = sub_2408E57A4();
      v15 = *(_QWORD *)(v11 - 8);
      v16 = *(int *)(a3 + 28);
    }
    v13 = a1 + v16;
    v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
  }
  return v12(v13, a2, v11);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoTypeConversionResult()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406F2A28(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_363Tm(a1, a2, a3, a4, &qword_256FFA3A8, &qword_256FFA300);
}

uint64_t __swift_store_extra_inhabitant_index_363Tm(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t *a5, uint64_t *a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v11 = __swift_instantiateConcreteTypeFromMangledName(a5);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a3)
  {
    v13 = v11;
    v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56);
    v15 = a1;
  }
  else
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(a6);
    v17 = *(_QWORD *)(v16 - 8);
    if (*(_DWORD *)(v17 + 84) == a3)
    {
      v13 = v16;
      v18 = *(int *)(a4 + 20);
    }
    else
    {
      v13 = sub_2408E57A4();
      v17 = *(_QWORD *)(v13 - 8);
      v18 = *(int *)(a4 + 28);
    }
    v15 = a1 + v18;
    v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56);
  }
  return v14(v15, a2, a2, v13);
}

void sub_2406F2AE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2406F2B0C(a1, a2, a3, &qword_256FFB188, (void (*)(uint64_t))type metadata accessor for ToolKitProtoTypedValue, qword_256FFCBE0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementID);
}

void sub_2406F2B0C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, void (*a5)(uint64_t), unint64_t *a6, void (*a7)(uint64_t))
{
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  sub_2403C8BE4(319, a4, a5);
  if (v9 <= 0x3F)
  {
    sub_2403C8BE4(319, a6, a7);
    if (v10 <= 0x3F)
    {
      sub_2408E57A4();
      if (v11 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoQueryDecorationResult(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t DecorationToolRetrievalResponse;
  unsigned int (*v12)(_QWORD *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v25;
  char *v26;
  uint64_t v27;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v6 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v6 = a1;
    v7 = a2[2];
    a1[1] = a2[1];
    a1[2] = v7;
    a1[3] = a2[3];
    v8 = *(int *)(a3 + 32);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
    v27 = *(_QWORD *)(DecorationToolRetrievalResponse - 8);
    v12 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v27 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v12(v10, 1, DecorationToolRetrievalResponse))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA470);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v14 = v10[1];
      *v9 = *v10;
      v9[1] = v14;
      v15 = v10[3];
      v9[2] = v10[2];
      v9[3] = v15;
      *((_DWORD *)v9 + 8) = *((_DWORD *)v10 + 8);
      v16 = v10[6];
      v9[5] = v10[5];
      v9[6] = v16;
      v17 = *(int *)(DecorationToolRetrievalResponse + 36);
      v25 = (char *)v10 + v17;
      v26 = (char *)v9 + v17;
      v18 = sub_2408E57A4();
      v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v19(v26, v25, v18);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v9, 0, 1, DecorationToolRetrievalResponse);
    }
    v20 = *(int *)(a3 + 36);
    v21 = (char *)v6 + v20;
    v22 = (char *)a2 + v20;
    v23 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
  }
  return v6;
}

uint64_t destroy for TranscriptProtoQueryDecorationResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t DecorationToolRetrievalResponse;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 32);
  DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(DecorationToolRetrievalResponse - 8)
                                                                  + 48))(v4, 1, DecorationToolRetrievalResponse))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6 = v4 + *(int *)(DecorationToolRetrievalResponse + 36);
    v7 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  v8 = a1 + *(int *)(a2 + 36);
  v9 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
}

_QWORD *initializeWithCopy for TranscriptProtoQueryDecorationResult(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t DecorationToolRetrievalResponse;
  unsigned int (*v11)(_QWORD *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v24;
  char *v25;
  uint64_t v26;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  v7 = *(int *)(a3 + 32);
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
  v26 = *(_QWORD *)(DecorationToolRetrievalResponse - 8);
  v11 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v26 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11(v9, 1, DecorationToolRetrievalResponse))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA470);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v13 = v9[1];
    *v8 = *v9;
    v8[1] = v13;
    v14 = v9[3];
    v8[2] = v9[2];
    v8[3] = v14;
    *((_DWORD *)v8 + 8) = *((_DWORD *)v9 + 8);
    v15 = v9[6];
    v8[5] = v9[5];
    v8[6] = v15;
    v16 = *(int *)(DecorationToolRetrievalResponse + 36);
    v24 = (char *)v9 + v16;
    v25 = (char *)v8 + v16;
    v17 = sub_2408E57A4();
    v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v18(v25, v24, v17);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v8, 0, 1, DecorationToolRetrievalResponse);
  }
  v19 = *(int *)(a3 + 36);
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoQueryDecorationResult(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t DecorationToolRetrievalResponse;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void (*v26)(uint64_t, char *, uint64_t);
  char *v27;
  uint64_t v28;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 32);
  v7 = (uint64_t)a1 + v6;
  v8 = (char *)a2 + v6;
  DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
  v10 = *(_QWORD *)(DecorationToolRetrievalResponse - 8);
  v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, DecorationToolRetrievalResponse);
  v13 = v11((uint64_t)v8, 1, DecorationToolRetrievalResponse);
  if (!v12)
  {
    if (!v13)
    {
      *(_QWORD *)v7 = *(_QWORD *)v8;
      *(_QWORD *)(v7 + 8) = *((_QWORD *)v8 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v7 + 16) = *((_QWORD *)v8 + 2);
      *(_QWORD *)(v7 + 24) = *((_QWORD *)v8 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(v7 + 32) = *((_DWORD *)v8 + 8);
      *(_QWORD *)(v7 + 40) = *((_QWORD *)v8 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v7 + 48) = *((_QWORD *)v8 + 6);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v22 = *(int *)(DecorationToolRetrievalResponse + 36);
      v23 = v7 + v22;
      v24 = &v8[v22];
      v25 = sub_2408E57A4();
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 24))(v23, v24, v25);
      goto LABEL_7;
    }
    sub_240388AE4(v7, type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA470);
    memcpy((void *)v7, v8, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_QWORD *)(v7 + 8) = *((_QWORD *)v8 + 1);
  *(_QWORD *)(v7 + 16) = *((_QWORD *)v8 + 2);
  *(_QWORD *)(v7 + 24) = *((_QWORD *)v8 + 3);
  *(_DWORD *)(v7 + 32) = *((_DWORD *)v8 + 8);
  *(_QWORD *)(v7 + 40) = *((_QWORD *)v8 + 5);
  *(_QWORD *)(v7 + 48) = *((_QWORD *)v8 + 6);
  v14 = *(int *)(DecorationToolRetrievalResponse + 36);
  v27 = &v8[v14];
  v28 = v7 + v14;
  v15 = sub_2408E57A4();
  v26 = *(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v26(v28, v27, v15);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, DecorationToolRetrievalResponse);
LABEL_7:
  v17 = *(int *)(a3 + 36);
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 24))(v18, v19, v20);
  return a1;
}

_OWORD *initializeWithTake for TranscriptProtoQueryDecorationResult(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t DecorationToolRetrievalResponse;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 32);
  v8 = (_OWORD *)((char *)a1 + v7);
  v9 = (_OWORD *)((char *)a2 + v7);
  DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
  v11 = *(_QWORD *)(DecorationToolRetrievalResponse - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v11 + 48))(v9, 1, DecorationToolRetrievalResponse))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA470);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v13 = v9[1];
    *v8 = *v9;
    v8[1] = v13;
    *((_DWORD *)v8 + 8) = *((_DWORD *)v9 + 8);
    *(_OWORD *)((char *)v8 + 40) = *(_OWORD *)((char *)v9 + 40);
    v14 = *(int *)(DecorationToolRetrievalResponse + 36);
    v15 = (char *)v8 + v14;
    v16 = (char *)v9 + v14;
    v17 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, DecorationToolRetrievalResponse);
  }
  v18 = *(int *)(a3 + 36);
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoQueryDecorationResult(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t DecorationToolRetrievalResponse;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);
  int v12;
  int v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 32);
  v7 = (uint64_t)a1 + v6;
  v8 = (char *)a2 + v6;
  DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
  v10 = *(_QWORD *)(DecorationToolRetrievalResponse - 8);
  v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, DecorationToolRetrievalResponse);
  v13 = v11((uint64_t)v8, 1, DecorationToolRetrievalResponse);
  if (!v12)
  {
    if (!v13)
    {
      v25 = *((_QWORD *)v8 + 1);
      *(_QWORD *)v7 = *(_QWORD *)v8;
      *(_QWORD *)(v7 + 8) = v25;
      swift_bridgeObjectRelease();
      v26 = *((_QWORD *)v8 + 3);
      *(_QWORD *)(v7 + 16) = *((_QWORD *)v8 + 2);
      *(_QWORD *)(v7 + 24) = v26;
      swift_bridgeObjectRelease();
      *(_DWORD *)(v7 + 32) = *((_DWORD *)v8 + 8);
      *(_QWORD *)(v7 + 40) = *((_QWORD *)v8 + 5);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v7 + 48) = *((_QWORD *)v8 + 6);
      swift_bridgeObjectRelease();
      v27 = *(int *)(DecorationToolRetrievalResponse + 36);
      v28 = v7 + v27;
      v29 = &v8[v27];
      v30 = sub_2408E57A4();
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
      goto LABEL_7;
    }
    sub_240388AE4(v7, type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA470);
    memcpy((void *)v7, v8, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  v14 = *((_OWORD *)v8 + 1);
  *(_OWORD *)v7 = *(_OWORD *)v8;
  *(_OWORD *)(v7 + 16) = v14;
  *(_DWORD *)(v7 + 32) = *((_DWORD *)v8 + 8);
  *(_OWORD *)(v7 + 40) = *(_OWORD *)(v8 + 40);
  v15 = *(int *)(DecorationToolRetrievalResponse + 36);
  v16 = v7 + v15;
  v17 = &v8[v15];
  v18 = sub_2408E57A4();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, DecorationToolRetrievalResponse);
LABEL_7:
  v20 = *(int *)(a3 + 36);
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 40))(v21, v22, v23);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoQueryDecorationResult()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406F3608(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA470);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 32);
    }
    else
    {
      v10 = sub_2408E57A4();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 36);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoQueryDecorationResult()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_2406F36B8(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA470);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 32);
    }
    else
    {
      v10 = sub_2408E57A4();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 36);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

void sub_2406F3758()
{
  unint64_t v0;
  unint64_t v1;

  sub_2403C8BE4(319, qword_256FFB968, (void (*)(uint64_t))type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse);
  if (v0 <= 0x3F)
  {
    sub_2408E57A4();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for TranscriptProtoQueryDecorationPrePlannerResult(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(_QWORD *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t DecorationPrePlannerResultPayload;
  uint64_t v27;
  uint64_t v28;
  uint64_t DecorationPrePlannerPayloadEnum;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v41;

  v3 = a2;
  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a3;
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (_QWORD *)((char *)a1 + v8);
    v10 = (_QWORD *)((char *)a2 + v8);
    v11 = type metadata accessor for TranscriptProtoStatementID(0);
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      *(_DWORD *)v9 = *(_DWORD *)v10;
      v16 = v10[2];
      v9[1] = v10[1];
      v9[2] = v16;
      v17 = *(int *)(v11 + 24);
      v18 = (char *)v9 + v17;
      v41 = (char *)v10 + v17;
      v19 = sub_2408E57A4();
      v20 = v3;
      v21 = v6;
      v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
      swift_bridgeObjectRetain();
      v22(v18, v41, v19);
      v6 = v21;
      v3 = v20;
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v23 = *(int *)(v6 + 24);
    v24 = (char *)v4 + v23;
    v25 = (char *)v3 + v23;
    DecorationPrePlannerResultPayload = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload(0);
    v27 = *(_QWORD *)(DecorationPrePlannerResultPayload - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, DecorationPrePlannerResultPayload))
    {
      v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA480);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(DecorationPrePlannerPayloadEnum - 8)
                                                                     + 48))(v25, 1, DecorationPrePlannerPayloadEnum))
      {
        v31 = (char *)&loc_2406F3A08 + 4 * byte_240903DE0[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA478);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      v32 = *(int *)(DecorationPrePlannerResultPayload + 20);
      v33 = &v24[v32];
      v34 = &v25[v32];
      v35 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, DecorationPrePlannerResultPayload);
    }
    v36 = *(int *)(v6 + 28);
    v37 = (char *)v4 + v36;
    v38 = (char *)v3 + v36;
    v39 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoQueryDecorationPrePlannerResult(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t DecorationPrePlannerResultPayload;
  uint64_t DecorationPrePlannerPayloadEnum;
  uint64_t DecorationPrePlannerResultPayloadRepeatedStringVariant;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    v6 = v4 + *(int *)(v5 + 24);
    v7 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  v8 = a1 + a2[6];
  DecorationPrePlannerResultPayload = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(DecorationPrePlannerResultPayload - 8)
                                                                  + 48))(v8, 1, DecorationPrePlannerResultPayload))
  {
    DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(DecorationPrePlannerPayloadEnum - 8)
                                                                    + 48))(v8, 1, DecorationPrePlannerPayloadEnum))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          swift_bridgeObjectRelease();
          DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant(0);
          goto LABEL_12;
        case 1u:
          swift_bridgeObjectRelease();
          DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant(0);
          goto LABEL_12;
        case 2u:
          swift_bridgeObjectRelease();
          DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant(0);
          goto LABEL_12;
        case 3u:
          swift_bridgeObjectRelease();
          DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant(0);
          goto LABEL_12;
        case 4u:
          swift_bridgeObjectRelease();
          DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant(0);
          goto LABEL_12;
        case 5u:
          swift_bridgeObjectRelease();
          DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant(0);
LABEL_12:
          v12 = v8 + *(int *)(DecorationPrePlannerResultPayloadRepeatedStringVariant + 20);
          v13 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
          break;
        default:
          break;
      }
    }
    v14 = v8 + *(int *)(DecorationPrePlannerResultPayload + 20);
    v15 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
  }
  v16 = a1 + a2[7];
  v17 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
}

_QWORD *initializeWithCopy for TranscriptProtoQueryDecorationPrePlannerResult(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(_QWORD *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t DecorationPrePlannerResultPayload;
  uint64_t v26;
  uint64_t v27;
  uint64_t DecorationPrePlannerPayloadEnum;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v40;

  v3 = a3;
  v4 = a2;
  v5 = a1;
  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for TranscriptProtoStatementID(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v8 = *(_DWORD *)v9;
    v14 = v9[2];
    v8[1] = v9[1];
    v8[2] = v14;
    v15 = *(int *)(v10 + 24);
    v16 = (char *)v8 + v15;
    v40 = (char *)v9 + v15;
    v17 = sub_2408E57A4();
    v18 = v5;
    v19 = v4;
    v20 = v3;
    v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
    swift_bridgeObjectRetain();
    v21(v16, v40, v17);
    v3 = v20;
    v4 = v19;
    v5 = v18;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v22 = *(int *)(v3 + 24);
  v23 = (char *)v5 + v22;
  v24 = (char *)v4 + v22;
  DecorationPrePlannerResultPayload = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload(0);
  v26 = *(_QWORD *)(DecorationPrePlannerResultPayload - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, DecorationPrePlannerResultPayload))
  {
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA480);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(DecorationPrePlannerPayloadEnum - 8)
                                                                   + 48))(v24, 1, DecorationPrePlannerPayloadEnum))
    {
      v30 = (char *)&loc_2406F3F68 + 4 * byte_240903DEC[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA478);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    v31 = *(int *)(DecorationPrePlannerResultPayload + 20);
    v32 = &v23[v31];
    v33 = &v24[v31];
    v34 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, DecorationPrePlannerResultPayload);
  }
  v35 = *(int *)(v3 + 28);
  v36 = (char *)v5 + v35;
  v37 = (char *)v4 + v35;
  v38 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  return v5;
}

_QWORD *assignWithCopy for TranscriptProtoQueryDecorationPrePlannerResult(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t DecorationPrePlannerResultPayload;
  uint64_t v24;
  uint64_t (*v25)(char *, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t DecorationPrePlannerPayloadEnum;
  uint64_t (*v36)(char *, uint64_t, uint64_t);
  int v37;
  int v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v56;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v56 = a3;
  v6 = *(int *)(a3 + 20);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for TranscriptProtoStatementID(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      *(_DWORD *)v7 = *(_DWORD *)v8;
      v7[1] = v8[1];
      v7[2] = v8[2];
      v14 = *(int *)(v9 + 24);
      v15 = (char *)v7 + v14;
      v16 = (char *)v8 + v14;
      v17 = sub_2408E57A4();
      v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
      swift_bridgeObjectRetain();
      v18(v15, v16, v17);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)v7 = *(_DWORD *)v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v31 = *(int *)(v9 + 24);
  v32 = (char *)v7 + v31;
  v33 = (char *)v8 + v31;
  v34 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
LABEL_7:
  v20 = *(int *)(v56 + 24);
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  DecorationPrePlannerResultPayload = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload(0);
  v24 = *(_QWORD *)(DecorationPrePlannerResultPayload - 8);
  v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48);
  v26 = v25(v21, 1, DecorationPrePlannerResultPayload);
  v27 = v25(v22, 1, DecorationPrePlannerResultPayload);
  if (!v26)
  {
    if (v27)
    {
      sub_240388AE4((uint64_t)v21, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload);
      goto LABEL_13;
    }
    DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
    v36 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(DecorationPrePlannerPayloadEnum - 8) + 48);
    v37 = v36(v21, 1, DecorationPrePlannerPayloadEnum);
    v38 = v36(v22, 1, DecorationPrePlannerPayloadEnum);
    if (v37)
    {
      if (!v38)
      {
        v39 = (char *)&loc_2406F43C0 + 4 * byte_240903DF8[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
    }
    else
    {
      if (!v38)
      {
        if (a1 != a2)
        {
          sub_240388AE4((uint64_t)v21, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
          v42 = (char *)&loc_2406F4498 + 4 * byte_240903DFE[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        goto LABEL_24;
      }
      sub_240388AE4((uint64_t)v21, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
    }
    v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA478);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
LABEL_24:
    v47 = *(int *)(DecorationPrePlannerResultPayload + 20);
    v48 = &v21[v47];
    v49 = &v22[v47];
    v50 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 24))(v48, v49, v50);
    goto LABEL_25;
  }
  if (v27)
  {
LABEL_13:
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA480);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_25;
  }
  v28 = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 48))(v22, 1, v28))
  {
    v40 = (char *)&loc_2406F4408 + 4 * byte_240903DF2[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA478);
  memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  v43 = *(int *)(DecorationPrePlannerResultPayload + 20);
  v44 = &v21[v43];
  v45 = &v22[v43];
  v46 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v44, v45, v46);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, DecorationPrePlannerResultPayload);
LABEL_25:
  v51 = *(int *)(v56 + 28);
  v52 = (char *)a1 + v51;
  v53 = (char *)a2 + v51;
  v54 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 24))(v52, v53, v54);
  return a1;
}

_OWORD *initializeWithTake for TranscriptProtoQueryDecorationPrePlannerResult(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  _DWORD *v7;
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t DecorationPrePlannerResultPayload;
  uint64_t v20;
  uint64_t v21;
  uint64_t DecorationPrePlannerPayloadEnum;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (_DWORD *)((char *)a1 + v6);
  v8 = (_DWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for TranscriptProtoStatementID(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    *v7 = *v8;
    *(_OWORD *)(v7 + 2) = *(_OWORD *)(v8 + 2);
    v12 = *(int *)(v9 + 24);
    v13 = (char *)v7 + v12;
    v14 = (char *)v8 + v12;
    v15 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v16 = a3[6];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  DecorationPrePlannerResultPayload = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload(0);
  v20 = *(_QWORD *)(DecorationPrePlannerResultPayload - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, DecorationPrePlannerResultPayload))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA480);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(DecorationPrePlannerPayloadEnum - 8)
                                                                   + 48))(v18, 1, DecorationPrePlannerPayloadEnum))
    {
      v24 = (char *)&loc_2406F4AEC + 4 * byte_240903E04[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA478);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    v25 = *(int *)(DecorationPrePlannerResultPayload + 20);
    v26 = &v17[v25];
    v27 = &v18[v25];
    v28 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v26, v27, v28);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, DecorationPrePlannerResultPayload);
  }
  v29 = a3[7];
  v30 = (char *)a1 + v29;
  v31 = (char *)a2 + v29;
  v32 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v30, v31, v32);
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoQueryDecorationPrePlannerResult(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(_QWORD *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t DecorationPrePlannerResultPayload;
  uint64_t v24;
  uint64_t (*v25)(char *, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t DecorationPrePlannerPayloadEnum;
  uint64_t (*v37)(char *, uint64_t, uint64_t);
  int v38;
  int v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for TranscriptProtoStatementID(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      *(_DWORD *)v8 = *(_DWORD *)v9;
      *(_OWORD *)(v8 + 1) = *(_OWORD *)(v9 + 1);
      v15 = *(int *)(v10 + 24);
      v16 = (char *)v8 + v15;
      v17 = (char *)v9 + v15;
      v18 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    sub_240388AE4((uint64_t)v8, type metadata accessor for TranscriptProtoStatementID);
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)v8 = *(_DWORD *)v9;
  v31 = v9[2];
  v8[1] = v9[1];
  v8[2] = v31;
  swift_bridgeObjectRelease();
  v32 = *(int *)(v10 + 24);
  v33 = (char *)v8 + v32;
  v34 = (char *)v9 + v32;
  v35 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 40))(v33, v34, v35);
LABEL_7:
  v20 = a3[6];
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  DecorationPrePlannerResultPayload = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload(0);
  v24 = *(_QWORD *)(DecorationPrePlannerResultPayload - 8);
  v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48);
  v26 = v25(v21, 1, DecorationPrePlannerResultPayload);
  v27 = v25(v22, 1, DecorationPrePlannerResultPayload);
  if (!v26)
  {
    if (v27)
    {
      sub_240388AE4((uint64_t)v21, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload);
      goto LABEL_13;
    }
    DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
    v37 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(DecorationPrePlannerPayloadEnum - 8) + 48);
    v38 = v37(v21, 1, DecorationPrePlannerPayloadEnum);
    v39 = v37(v22, 1, DecorationPrePlannerPayloadEnum);
    if (v38)
    {
      if (!v39)
      {
        v40 = (char *)&loc_2406F4EE0 + 4 * byte_240903E10[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
    }
    else
    {
      if (!v39)
      {
        if (a1 != a2)
        {
          sub_240388AE4((uint64_t)v21, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
          v43 = (char *)&loc_2406F4FAC + 4 * byte_240903E16[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        goto LABEL_24;
      }
      sub_240388AE4((uint64_t)v21, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
    }
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA478);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
LABEL_24:
    v48 = *(int *)(DecorationPrePlannerResultPayload + 20);
    v49 = &v21[v48];
    v50 = &v22[v48];
    v51 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 40))(v49, v50, v51);
    goto LABEL_25;
  }
  if (v27)
  {
LABEL_13:
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA480);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_25;
  }
  v28 = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 48))(v22, 1, v28))
  {
    v41 = (char *)&loc_2406F4F20 + 4 * byte_240903E0A[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA478);
  memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  v44 = *(int *)(DecorationPrePlannerResultPayload + 20);
  v45 = &v21[v44];
  v46 = &v22[v44];
  v47 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(v45, v46, v47);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, DecorationPrePlannerResultPayload);
LABEL_25:
  v52 = a3[7];
  v53 = (char *)a1 + v52;
  v54 = (char *)a2 + v52;
  v55 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 40))(v53, v54, v55);
  return a1;
}

void sub_2406F522C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;

  *v0 = *v1;
  v2 = *(int *)(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant(0)
              + 20);
  v3 = (char *)v0 + v2;
  v4 = (char *)v1 + v2;
  v5 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v3, v4, v5);
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x2406F51B0);
}

void sub_2406F527C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;

  *v0 = *v1;
  v2 = *(int *)(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant(0)
              + 20);
  v3 = (char *)v0 + v2;
  v4 = (char *)v1 + v2;
  v5 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v3, v4, v5);
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x2406F51B0);
}

void sub_2406F52CC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;

  *v0 = *v1;
  v2 = *(int *)(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant(0)
              + 20);
  v3 = (char *)v0 + v2;
  v4 = (char *)v1 + v2;
  v5 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v3, v4, v5);
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x2406F51B0);
}

void sub_2406F531C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;

  *v0 = *v1;
  v2 = *(int *)(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant(0)
              + 20);
  v3 = (char *)v0 + v2;
  v4 = (char *)v1 + v2;
  v5 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v3, v4, v5);
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x2406F51B0);
}

void sub_2406F536C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;

  *v0 = *v1;
  v2 = *(int *)(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant(0)
              + 20);
  v3 = (char *)v0 + v2;
  v4 = (char *)v1 + v2;
  v5 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v3, v4, v5);
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x2406F51B0);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoQueryDecorationPrePlannerResult()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406F53C8(uint64_t a1, uint64_t a2, int *a3)
{
  return __swift_get_extra_inhabitant_index_364Tm(a1, a2, a3, &qword_256FFA300, &qword_256FFA480);
}

uint64_t __swift_get_extra_inhabitant_index_364Tm(uint64_t a1, uint64_t a2, int *a3, uint64_t *a4, uint64_t *a5)
{
  unint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v6 = *(_QWORD *)(a1 + 8);
    if (v6 >= 0xFFFFFFFF)
      LODWORD(v6) = -1;
    return (v6 + 1);
  }
  else
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(a4);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v13 = v11;
      v14 = a3[5];
    }
    else
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(a5);
      v12 = *(_QWORD *)(v15 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v13 = v15;
        v14 = a3[6];
      }
      else
      {
        v13 = sub_2408E57A4();
        v12 = *(_QWORD *)(v13 - 8);
        v14 = a3[7];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a1 + v14, a2, v13);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoQueryDecorationPrePlannerResult()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406F54B0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  return __swift_store_extra_inhabitant_index_365Tm(a1, a2, a3, a4, &qword_256FFA300, &qword_256FFA480);
}

uint64_t __swift_store_extra_inhabitant_index_365Tm(uint64_t result, uint64_t a2, int a3, int *a4, uint64_t *a5, uint64_t *a6)
{
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v7 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(a5);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == a3)
    {
      v13 = v11;
      v14 = a4[5];
    }
    else
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(a6);
      v12 = *(_QWORD *)(v15 - 8);
      if (*(_DWORD *)(v12 + 84) == a3)
      {
        v13 = v15;
        v14 = a4[6];
      }
      else
      {
        v13 = sub_2408E57A4();
        v12 = *(_QWORD *)(v13 - 8);
        v14 = a4[7];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v7 + v14, a2, a2, v13);
  }
  return result;
}

void sub_2406F5594()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_2403C8BE4(319, qword_256FFCBE0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementID);
  if (v0 <= 0x3F)
  {
    sub_2403C8BE4(319, qword_25700B520, (void (*)(uint64_t))type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayload);
    if (v1 <= 0x3F)
    {
      sub_2408E57A4();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t getEnumTagSinglePayload for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t getEnumTagSinglePayload for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_index_17Tm(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_2408E57A4();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *__swift_store_extra_inhabitant_index_18Tm(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_2408E57A4();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_2406F5810()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2408E57A4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoQueryDecorationPrePlannerResultPayload(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t DecorationPrePlannerPayloadEnum;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
    if (!(*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(DecorationPrePlannerPayloadEnum - 8)
                                                                      + 48))(a2, 1, DecorationPrePlannerPayloadEnum))
    {
      v10 = (char *)&loc_2406F594C + 4 * byte_240903E1C[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA478);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    v11 = *(int *)(a3 + 20);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  }
  return a1;
}

uint64_t destroy for TranscriptProtoQueryDecorationPrePlannerResultPayload(uint64_t a1, uint64_t a2)
{
  uint64_t DecorationPrePlannerPayloadEnum;
  uint64_t DecorationPrePlannerResultPayloadRepeatedStringVariant;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(DecorationPrePlannerPayloadEnum - 8)
                                                                  + 48))(a1, 1, DecorationPrePlannerPayloadEnum))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        swift_bridgeObjectRelease();
        DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant(0);
        goto LABEL_9;
      case 1u:
        swift_bridgeObjectRelease();
        DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant(0);
        goto LABEL_9;
      case 2u:
        swift_bridgeObjectRelease();
        DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant(0);
        goto LABEL_9;
      case 3u:
        swift_bridgeObjectRelease();
        DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant(0);
        goto LABEL_9;
      case 4u:
        swift_bridgeObjectRelease();
        DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant(0);
        goto LABEL_9;
      case 5u:
        swift_bridgeObjectRelease();
        DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant(0);
LABEL_9:
        v6 = a1 + *(int *)(DecorationPrePlannerResultPayloadRepeatedStringVariant + 20);
        v7 = sub_2408E57A4();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
        break;
      default:
        break;
    }
  }
  v8 = a1 + *(int *)(a2 + 20);
  v9 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
}

char *initializeWithCopy for TranscriptProtoQueryDecorationPrePlannerResultPayload(char *a1, char *a2, uint64_t a3)
{
  uint64_t DecorationPrePlannerPayloadEnum;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(DecorationPrePlannerPayloadEnum - 8)
                                                                 + 48))(a2, 1, DecorationPrePlannerPayloadEnum))
  {
    v8 = (char *)&loc_2406F5C50 + 4 * byte_240903E28[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA478);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  return a1;
}

char *assignWithCopy for TranscriptProtoQueryDecorationPrePlannerResultPayload(char *a1, char *a2, uint64_t a3)
{
  uint64_t DecorationPrePlannerPayloadEnum;
  uint64_t (*v7)(char *, uint64_t, uint64_t);
  int v8;
  int v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
  v7 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(DecorationPrePlannerPayloadEnum - 8) + 48);
  v8 = v7(a1, 1, DecorationPrePlannerPayloadEnum);
  v9 = v7(a2, 1, DecorationPrePlannerPayloadEnum);
  if (v8)
  {
    if (!v9)
    {
      v10 = (char *)&loc_2406F5E08 + 4 * byte_240903E2E[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    goto LABEL_6;
  }
  if (v9)
  {
    sub_240388AE4((uint64_t)a1, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA478);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_9;
  }
  if (a1 != a2)
  {
    sub_240388AE4((uint64_t)a1, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
    v12 = (char *)&loc_2406F5ED8 + 4 * byte_240903E34[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
LABEL_9:
  v13 = *(int *)(a3 + 20);
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 24))(v14, v15, v16);
  return a1;
}

void sub_2406F6150()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;
  void (*v6)(char *, char *, uint64_t);

  *v0 = *v1;
  v2 = *(int *)(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant(0)
              + 20);
  v3 = (char *)v0 + v2;
  v4 = (char *)v1 + v2;
  v5 = sub_2408E57A4();
  v6 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v5 - 8) + 16);
  swift_bridgeObjectRetain();
  v6(v3, v4, v5);
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x2406F6104);
}

void sub_2406F61AC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;
  void (*v6)(char *, char *, uint64_t);

  *v0 = *v1;
  v2 = *(int *)(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant(0)
              + 20);
  v3 = (char *)v0 + v2;
  v4 = (char *)v1 + v2;
  v5 = sub_2408E57A4();
  v6 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v5 - 8) + 16);
  swift_bridgeObjectRetain();
  v6(v3, v4, v5);
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x2406F6104);
}

void sub_2406F6208()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;
  void (*v6)(char *, char *, uint64_t);

  *v0 = *v1;
  v2 = *(int *)(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant(0)
              + 20);
  v3 = (char *)v0 + v2;
  v4 = (char *)v1 + v2;
  v5 = sub_2408E57A4();
  v6 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v5 - 8) + 16);
  swift_bridgeObjectRetain();
  v6(v3, v4, v5);
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x2406F6104);
}

void sub_2406F6264()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;
  void (*v6)(char *, char *, uint64_t);

  *v0 = *v1;
  v2 = *(int *)(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant(0)
              + 20);
  v3 = (char *)v0 + v2;
  v4 = (char *)v1 + v2;
  v5 = sub_2408E57A4();
  v6 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v5 - 8) + 16);
  swift_bridgeObjectRetain();
  v6(v3, v4, v5);
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x2406F6104);
}

void sub_2406F62C0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;
  void (*v6)(char *, char *, uint64_t);

  *v0 = *v1;
  v2 = *(int *)(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant(0)
              + 20);
  v3 = (char *)v0 + v2;
  v4 = (char *)v1 + v2;
  v5 = sub_2408E57A4();
  v6 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v5 - 8) + 16);
  swift_bridgeObjectRetain();
  v6(v3, v4, v5);
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x2406F6104);
}

char *initializeWithTake for TranscriptProtoQueryDecorationPrePlannerResultPayload(char *a1, char *a2, uint64_t a3)
{
  uint64_t DecorationPrePlannerPayloadEnum;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(DecorationPrePlannerPayloadEnum - 8)
                                                                 + 48))(a2, 1, DecorationPrePlannerPayloadEnum))
  {
    v8 = (char *)&loc_2406F63B8 + 4 * byte_240903E3A[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA478);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  return a1;
}

char *assignWithTake for TranscriptProtoQueryDecorationPrePlannerResultPayload(char *a1, char *a2, uint64_t a3)
{
  uint64_t DecorationPrePlannerPayloadEnum;
  uint64_t (*v7)(char *, uint64_t, uint64_t);
  int v8;
  int v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  DecorationPrePlannerPayloadEnum = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(0);
  v7 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(DecorationPrePlannerPayloadEnum - 8) + 48);
  v8 = v7(a1, 1, DecorationPrePlannerPayloadEnum);
  v9 = v7(a2, 1, DecorationPrePlannerPayloadEnum);
  if (v8)
  {
    if (!v9)
    {
      v10 = (char *)&loc_2406F6558 + 4 * byte_240903E40[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    goto LABEL_6;
  }
  if (v9)
  {
    sub_240388AE4((uint64_t)a1, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA478);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_9;
  }
  if (a1 != a2)
  {
    sub_240388AE4((uint64_t)a1, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
    v12 = (char *)&loc_2406F65E4 + 4 * byte_240903E46[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
LABEL_9:
  v13 = *(int *)(a3 + 20);
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(v14, v15, v16);
  return a1;
}

void sub_2406F6730()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;

  *v0 = *v1;
  v2 = *(int *)(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant(0)
              + 20);
  v3 = (char *)v0 + v2;
  v4 = (char *)v1 + v2;
  v5 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v3, v4, v5);
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x2406F66E8);
}

void sub_2406F6780()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;

  *v0 = *v1;
  v2 = *(int *)(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant(0)
              + 20);
  v3 = (char *)v0 + v2;
  v4 = (char *)v1 + v2;
  v5 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v3, v4, v5);
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x2406F66E8);
}

void sub_2406F67D0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;

  *v0 = *v1;
  v2 = *(int *)(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant(0)
              + 20);
  v3 = (char *)v0 + v2;
  v4 = (char *)v1 + v2;
  v5 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v3, v4, v5);
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x2406F66E8);
}

void sub_2406F6820()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;

  *v0 = *v1;
  v2 = *(int *)(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant(0)
              + 20);
  v3 = (char *)v0 + v2;
  v4 = (char *)v1 + v2;
  v5 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v3, v4, v5);
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x2406F66E8);
}

void sub_2406F6870()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;

  *v0 = *v1;
  v2 = *(int *)(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant(0)
              + 20);
  v3 = (char *)v0 + v2;
  v4 = (char *)v1 + v2;
  v5 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v3, v4, v5);
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x2406F66E8);
}

uint64_t getEnumTagSinglePayload for TranscriptProtoQueryDecorationPrePlannerResultPayload()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406F68CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_9Tm(a1, a2, a3, &qword_256FFA478);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoQueryDecorationPrePlannerResultPayload()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406F68E4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_10Tm(a1, a2, a3, a4, &qword_256FFA478);
}

void sub_2406F68F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240408100(a1, a2, a3, qword_25700B920, (void (*)(uint64_t))type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
}

uint64_t initializeBufferWithCopyOfBuffer for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_2406F695C + 4 * byte_240903E4C[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t destroy for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(uint64_t a1)
{
  uint64_t result;
  uint64_t DecorationPrePlannerResultPayloadRepeatedStringVariant;
  uint64_t v4;
  uint64_t v5;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant(0);
      goto LABEL_8;
    case 1:
      swift_bridgeObjectRelease();
      DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant(0);
      goto LABEL_8;
    case 2:
      swift_bridgeObjectRelease();
      DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant(0);
      goto LABEL_8;
    case 3:
      swift_bridgeObjectRelease();
      DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant(0);
      goto LABEL_8;
    case 4:
      swift_bridgeObjectRelease();
      DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant(0);
      goto LABEL_8;
    case 5:
      swift_bridgeObjectRelease();
      DecorationPrePlannerResultPayloadRepeatedStringVariant = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant(0);
LABEL_8:
      v4 = a1 + *(int *)(DecorationPrePlannerResultPayloadRepeatedStringVariant + 20);
      v5 = sub_2408E57A4();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
      break;
    default:
      return result;
  }
  return result;
}

void initializeWithCopy for TranscriptProtoQueryDecorationPrePlannerPayloadEnum()
{
  char *v0;

  v0 = (char *)sub_2406F6CDC + 4 * byte_240903E58[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_QWORD *sub_2406F6CDC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;
  void (*v6)(char *, char *, uint64_t);

  *v0 = *v1;
  v2 = *(int *)(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant(0)
              + 20);
  v3 = (char *)v0 + v2;
  v4 = (char *)v1 + v2;
  v5 = sub_2408E57A4();
  v6 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v5 - 8) + 16);
  swift_bridgeObjectRetain();
  v6(v3, v4, v5);
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithCopy for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_240388AE4(result, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
    v2 = (char *)&loc_2406F6E1C + 4 * byte_240903E5E[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

void initializeWithTake for TranscriptProtoQueryDecorationPrePlannerPayloadEnum()
{
  char *v0;

  v0 = (char *)sub_2406F6F40 + 4 * byte_240903E64[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_QWORD *sub_2406F6F40()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;

  *v0 = *v1;
  v2 = *(int *)(type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant(0)
              + 20);
  v3 = (char *)v0 + v2;
  v4 = (char *)v1 + v2;
  v5 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v3, v4, v5);
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithTake for TranscriptProtoQueryDecorationPrePlannerPayloadEnum(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_240388AE4(result, type metadata accessor for TranscriptProtoQueryDecorationPrePlannerPayloadEnum);
    v2 = (char *)&loc_2406F706C + 4 * byte_240903E6A[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

uint64_t sub_2406F7134()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  result = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedStringVariant(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedTypedValueVariant(319);
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedContextVariant(319);
      if (v3 <= 0x3F)
      {
        result = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedSpanMatchedEntityVariant(319);
        if (v4 <= 0x3F)
        {
          result = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedRetrievedToolVariant(319);
          if (v5 <= 0x3F)
          {
            result = type metadata accessor for TranscriptProtoQueryDecorationPrePlannerResultPayloadRepeatedToolQueryOutputVariant(319);
            if (v6 <= 0x3F)
            {
              swift_initEnumMetadataMultiPayload();
              return 0;
            }
          }
        }
      }
    }
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for TranscriptProtoTextQuery(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(_QWORD *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  char *v31;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v8 = a3[6];
    v9 = (_QWORD *)(a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = type metadata accessor for TranscriptProtoStatementID(0);
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      *(_DWORD *)v9 = *(_DWORD *)v10;
      v16 = v10[2];
      v9[1] = v10[1];
      v9[2] = v16;
      v17 = *(int *)(v11 + 24);
      v18 = (char *)v9 + v17;
      v31 = (char *)v10 + v17;
      v19 = sub_2408E57A4();
      v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
      swift_bridgeObjectRetain();
      v20(v18, v31, v19);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v21 = a3[7];
    v22 = a3[8];
    v23 = (_QWORD *)((char *)v4 + v21);
    v24 = (uint64_t *)((char *)a2 + v21);
    v25 = v24[1];
    *v23 = *v24;
    v23[1] = v25;
    v26 = (char *)v4 + v22;
    v27 = (uint64_t)a2 + v22;
    v28 = sub_2408E57A4();
    v29 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 16);
    swift_bridgeObjectRetain();
    v29(v26, v27, v28);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoTextQuery(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for TranscriptProtoStatementID(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    v6 = v4 + *(int *)(v5 + 24);
    v7 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  swift_bridgeObjectRelease();
  v8 = a1 + *(int *)(a2 + 32);
  v9 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
}

uint64_t initializeWithCopy for TranscriptProtoTextQuery(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(_QWORD *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t);
  char *v29;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = a3[6];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = type metadata accessor for TranscriptProtoStatementID(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v8 = *(_DWORD *)v9;
    v14 = v9[2];
    v8[1] = v9[1];
    v8[2] = v14;
    v15 = *(int *)(v10 + 24);
    v16 = (char *)v8 + v15;
    v29 = (char *)v9 + v15;
    v17 = sub_2408E57A4();
    v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
    swift_bridgeObjectRetain();
    v18(v16, v29, v17);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v19 = a3[7];
  v20 = a3[8];
  v21 = (_QWORD *)(a1 + v19);
  v22 = (_QWORD *)(a2 + v19);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  v24 = a1 + v20;
  v25 = a2 + v20;
  v26 = sub_2408E57A4();
  v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
  swift_bridgeObjectRetain();
  v27(v24, v25, v26);
  return a1;
}

uint64_t assignWithCopy for TranscriptProtoTextQuery(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = a3[6];
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  v9 = type metadata accessor for TranscriptProtoStatementID(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      *(_DWORD *)v7 = *(_DWORD *)v8;
      v7[1] = v8[1];
      v7[2] = v8[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v27 = *(int *)(v9 + 24);
      v28 = (char *)v7 + v27;
      v29 = (char *)v8 + v27;
      v30 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
      goto LABEL_7;
    }
    sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)v7 = *(_DWORD *)v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  v14 = *(int *)(v9 + 24);
  v15 = (char *)v7 + v14;
  v31 = (char *)v8 + v14;
  v16 = sub_2408E57A4();
  v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
  swift_bridgeObjectRetain();
  v17(v15, v31, v16);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v19 = a3[7];
  v20 = (_QWORD *)(a1 + v19);
  v21 = (_QWORD *)(a2 + v19);
  *v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22 = a3[8];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 24))(v23, v24, v25);
  return a1;
}

uint64_t initializeWithTake for TranscriptProtoTextQuery(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _DWORD *v7;
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = a3[6];
  v7 = (_DWORD *)(a1 + v6);
  v8 = (_DWORD *)(a2 + v6);
  v9 = type metadata accessor for TranscriptProtoStatementID(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    *v7 = *v8;
    *(_OWORD *)(v7 + 2) = *(_OWORD *)(v8 + 2);
    v12 = *(int *)(v9 + 24);
    v13 = (char *)v7 + v12;
    v14 = (char *)v8 + v12;
    v15 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v16 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
  return a1;
}

uint64_t assignWithTake for TranscriptProtoTextQuery(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = a3[6];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for TranscriptProtoStatementID(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      *(_DWORD *)v8 = *(_DWORD *)v9;
      v30 = *(_QWORD *)(v9 + 16);
      *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
      *(_QWORD *)(v8 + 16) = v30;
      swift_bridgeObjectRelease();
      v31 = *(int *)(v10 + 24);
      v32 = v8 + v31;
      v33 = v9 + v31;
      v34 = sub_2408E57A4();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 40))(v32, v33, v34);
      goto LABEL_7;
    }
    sub_240388AE4(v8, type metadata accessor for TranscriptProtoStatementID);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    memcpy((void *)v8, (const void *)v9, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  *(_DWORD *)v8 = *(_DWORD *)v9;
  *(_OWORD *)(v8 + 8) = *(_OWORD *)(v9 + 8);
  v15 = *(int *)(v10 + 24);
  v16 = v8 + v15;
  v17 = v9 + v15;
  v18 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  v20 = a3[7];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (uint64_t *)(a2 + v20);
  v24 = *v22;
  v23 = v22[1];
  *v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  v25 = a3[8];
  v26 = a1 + v25;
  v27 = a2 + v25;
  v28 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 40))(v26, v27, v28);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoTextQuery()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_index_439Tm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 24);
    }
    else
    {
      v10 = sub_2408E57A4();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 32);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoTextQuery()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_index_440Tm(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 24);
    }
    else
    {
      v10 = sub_2408E57A4();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 32);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_2406F7C58()
{
  unint64_t v0;
  unint64_t v1;

  sub_2403C8BE4(319, qword_256FFCBE0, (void (*)(uint64_t))type metadata accessor for TranscriptProtoStatementID);
  if (v0 <= 0x3F)
  {
    sub_2408E57A4();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoExternalAgentTextQuery(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(_QWORD *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v26;
  char *v27;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = *(int *)(a3 + 24);
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    v12 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA368);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      v17 = v11[1];
      *v10 = *v11;
      v10[1] = v17;
      v10[2] = v11[2];
      v18 = *(int *)(v12 + 24);
      v26 = (char *)v11 + v18;
      v27 = (char *)v10 + v18;
      v19 = sub_2408E57A4();
      v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v20(v27, v26, v19);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    v21 = *(int *)(a3 + 28);
    v22 = (char *)v4 + v21;
    v23 = (char *)a2 + v21;
    v24 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
  }
  return v4;
}

uint64_t destroy for TranscriptProtoExternalAgentTextQuery(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6 = v4 + *(int *)(v5 + 24);
    v7 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  v8 = a1 + *(int *)(a2 + 28);
  v9 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
}

_QWORD *initializeWithCopy for TranscriptProtoExternalAgentTextQuery(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(_QWORD *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v24;
  char *v25;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)((char *)a1 + v8);
  v10 = (_QWORD *)((char *)a2 + v8);
  v11 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA368);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    v15 = v10[1];
    *v9 = *v10;
    v9[1] = v15;
    v9[2] = v10[2];
    v16 = *(int *)(v11 + 24);
    v24 = (char *)v10 + v16;
    v25 = (char *)v9 + v16;
    v17 = sub_2408E57A4();
    v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v18(v25, v24, v17);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v19 = *(int *)(a3 + 28);
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoExternalAgentTextQuery(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      *v7 = *v8;
      v7[1] = v8[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v7[2] = v8[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v23 = *(int *)(v9 + 24);
      v24 = (char *)v7 + v23;
      v25 = (char *)v8 + v23;
      v26 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
      goto LABEL_7;
    }
    sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA368);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  *v7 = *v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  v14 = *(int *)(v9 + 24);
  v27 = (char *)v8 + v14;
  v28 = (char *)v7 + v14;
  v15 = sub_2408E57A4();
  v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v16(v28, v27, v15);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v18 = *(int *)(a3 + 28);
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(v19, v20, v21);
  return a1;
}

_OWORD *initializeWithTake for TranscriptProtoExternalAgentTextQuery(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 24);
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA368);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    *(_OWORD *)v8 = *(_OWORD *)v9;
    v8[2] = v9[2];
    v13 = *(int *)(v10 + 24);
    v14 = (char *)v8 + v13;
    v15 = (char *)v9 + v13;
    v16 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v17 = *(int *)(a3 + 28);
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoExternalAgentTextQuery(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(_QWORD *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)((char *)a1 + v8);
  v10 = (_QWORD *)((char *)a2 + v8);
  v11 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      v26 = v10[1];
      *v9 = *v10;
      v9[1] = v26;
      swift_bridgeObjectRelease();
      v9[2] = v10[2];
      swift_bridgeObjectRelease();
      v27 = *(int *)(v11 + 24);
      v28 = (char *)v9 + v27;
      v29 = (char *)v10 + v27;
      v30 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
      goto LABEL_7;
    }
    sub_240388AE4((uint64_t)v9, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA368);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  *(_OWORD *)v9 = *(_OWORD *)v10;
  v9[2] = v10[2];
  v16 = *(int *)(v11 + 24);
  v17 = (char *)v9 + v16;
  v18 = (char *)v10 + v16;
  v19 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  v21 = *(int *)(a3 + 28);
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  v24 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 40))(v22, v23, v24);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoExternalAgentTextQuery()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406F85A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_83Tm(a1, a2, a3, &qword_256FFA368);
}

uint64_t __swift_get_extra_inhabitant_index_83Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  unint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v5 = *(_QWORD *)(a1 + 8);
    if (v5 >= 0xFFFFFFFF)
      LODWORD(v5) = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(a4);
    v10 = *(_QWORD *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
    {
      v11 = v9;
      v12 = *(int *)(a3 + 24);
    }
    else
    {
      v11 = sub_2408E57A4();
      v10 = *(_QWORD *)(v11 - 8);
      v12 = *(int *)(a3 + 28);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1 + v12, a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoExternalAgentTextQuery()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406F8660(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_84Tm(a1, a2, a3, a4, &qword_256FFA368);
}

uint64_t __swift_store_extra_inhabitant_index_84Tm(uint64_t result, uint64_t a2, int a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(a5);
    v10 = *(_QWORD *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == a3)
    {
      v11 = v9;
      v12 = *(int *)(a4 + 24);
    }
    else
    {
      v11 = sub_2408E57A4();
      v10 = *(_QWORD *)(v11 - 8);
      v12 = *(int *)(a4 + 28);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v6 + v12, a2, a2, v11);
  }
  return result;
}

void sub_2406F8708(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2406F960C(a1, a2, a3, (uint64_t)&unk_240906518, (uint64_t)&unk_240906530, qword_257002760, (void (*)(uint64_t))type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
}

uint64_t initializeBufferWithCopyOfBuffer for TranscriptProtoSpeechQuery(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    v5 = a1;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    v6 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v6;
    v7 = *(int *)(a3 + 28);
    v8 = a1 + v7;
    v9 = (uint64_t)a2 + v7;
    v10 = sub_2408E57A4();
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v5;
}

uint64_t destroy for TranscriptProtoSpeechQuery(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for TranscriptProtoSpeechQuery(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(int *)(a3 + 28);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_2408E57A4();
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

uint64_t assignWithCopy for TranscriptProtoSpeechQuery(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 28);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for TranscriptProtoSpeechQuery(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v4 = *(int *)(a3 + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for TranscriptProtoSpeechQuery(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 28);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoSpeechQuery()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406F8A5C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_2408E57A4();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 28)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoSpeechQuery()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_2406F8AE4(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_2408E57A4();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 28)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_2406F8B58()
{
  return sub_2406F8B78();
}

uint64_t sub_2406F8B78()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2408E57A4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for TranscriptProtoExternalAgentSpeechQuery(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(_QWORD *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v25;
  char *v26;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a2[2];
    a1[1] = a2[1];
    a1[2] = v8;
    v9 = *(int *)(a3 + 24);
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    v12 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA368);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      v16 = v11[1];
      *v10 = *v11;
      v10[1] = v16;
      v10[2] = v11[2];
      v17 = *(int *)(v12 + 24);
      v25 = (char *)v11 + v17;
      v26 = (char *)v10 + v17;
      v18 = sub_2408E57A4();
      v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v19(v26, v25, v18);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    v20 = *(int *)(a3 + 28);
    v21 = (char *)v7 + v20;
    v22 = (char *)a2 + v20;
    v23 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
  }
  return v7;
}

uint64_t destroy for TranscriptProtoExternalAgentSpeechQuery(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6 = v4 + *(int *)(v5 + 24);
    v7 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  v8 = a1 + *(int *)(a2 + 28);
  v9 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
}

_QWORD *initializeWithCopy for TranscriptProtoExternalAgentSpeechQuery(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(_QWORD *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v23;
  char *v24;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  v7 = *(int *)(a3 + 24);
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA368);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v14 = v9[1];
    *v8 = *v9;
    v8[1] = v14;
    v8[2] = v9[2];
    v15 = *(int *)(v10 + 24);
    v23 = (char *)v9 + v15;
    v24 = (char *)v8 + v15;
    v16 = sub_2408E57A4();
    v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v17(v24, v23, v16);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v18 = *(int *)(a3 + 28);
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
  return a1;
}

_QWORD *assignWithCopy for TranscriptProtoExternalAgentSpeechQuery(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      *v7 = *v8;
      v7[1] = v8[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v7[2] = v8[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v23 = *(int *)(v9 + 24);
      v24 = (char *)v7 + v23;
      v25 = (char *)v8 + v23;
      v26 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
      goto LABEL_7;
    }
    sub_240388AE4((uint64_t)v7, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA368);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  *v7 = *v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  v14 = *(int *)(v9 + 24);
  v27 = (char *)v8 + v14;
  v28 = (char *)v7 + v14;
  v15 = sub_2408E57A4();
  v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v16(v28, v27, v15);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v18 = *(int *)(a3 + 28);
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(v19, v20, v21);
  return a1;
}

uint64_t initializeWithTake for TranscriptProtoExternalAgentSpeechQuery(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v6 = *(int *)(a3 + 24);
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  v9 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA368);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    *(_OWORD *)v7 = *(_OWORD *)v8;
    v7[2] = v8[2];
    v12 = *(int *)(v9 + 24);
    v13 = (char *)v7 + v12;
    v14 = (char *)v8 + v12;
    v15 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v16 = *(int *)(a3 + 28);
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
  return a1;
}

_QWORD *assignWithTake for TranscriptProtoExternalAgentSpeechQuery(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(_QWORD *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = a2[2];
  a1[1] = a2[1];
  a1[2] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 24);
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      v25 = v9[1];
      *v8 = *v9;
      v8[1] = v25;
      swift_bridgeObjectRelease();
      v8[2] = v9[2];
      swift_bridgeObjectRelease();
      v26 = *(int *)(v10 + 24);
      v27 = (char *)v8 + v26;
      v28 = (char *)v9 + v26;
      v29 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 40))(v27, v28, v29);
      goto LABEL_7;
    }
    sub_240388AE4((uint64_t)v8, type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA368);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  *(_OWORD *)v8 = *(_OWORD *)v9;
  v8[2] = v9[2];
  v15 = *(int *)(v10 + 24);
  v16 = (char *)v8 + v15;
  v17 = (char *)v9 + v15;
  v18 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  v20 = *(int *)(a3 + 28);
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 40))(v21, v22, v23);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoExternalAgentSpeechQuery()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2406F9484(char *a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_177Tm(a1, a2, a3, &qword_256FFA368);
}

uint64_t __swift_get_extra_inhabitant_index_177Tm(char *a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v5 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v5) = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(a4);
    v10 = *(_QWORD *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
    {
      v11 = v9;
      v12 = *(int *)(a3 + 24);
    }
    else
    {
      v11 = sub_2408E57A4();
      v10 = *(_QWORD *)(v11 - 8);
      v12 = *(int *)(a3 + 28);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(&a1[v12], a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoExternalAgentSpeechQuery()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_2406F953C(char *a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_178Tm(a1, a2, a3, a4, &qword_256FFA368);
}

char *__swift_store_extra_inhabitant_index_178Tm(char *result, uint64_t a2, int a3, uint64_t a4, uint64_t *a5)
{
  char *v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(a5);
    v10 = *(_QWORD *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == a3)
    {
      v11 = v9;
      v12 = *(int *)(a4 + 24);
    }
    else
    {
      v11 = sub_2408E57A4();
      v10 = *(_QWORD *)(v11 - 8);
      v12 = *(int *)(a4 + 28);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(&v6[v12], a2, a2, v11);
  }
  return result;
}

void sub_2406F95E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2406F960C(a1, a2, a3, MEMORY[0x24BEE0158] + 64, (uint64_t)&unk_240906530, qword_257002760, (void (*)(uint64_t))type metadata accessor for TranscriptProtoExternalAgentRequestRewriteMetadata);
}

void sub_2406F960C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t *a6, void (*a7)(uint64_t))
{
  unint64_t v7;
  unint64_t v8;

  sub_2403C8BE4(319, a6, a7);
  if (v7 <= 0x3F)
  {
    sub_2408E57A4();
    if (v8 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t _s23LighthouseDataProcessor26ToolKitProtoTypeDefinitionVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_2408E57A4();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t _s23LighthouseDataProcessor26ToolKitProtoTypeDefinitionVwxx_0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t _s23LighthouseDataProcessor26ToolKitProtoTypeDefinitionVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t _s23LighthouseDataProcessor26ToolKitProtoTypeDefinitionVwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t _s23LighthouseDataProcessor26ToolKitProtoTypeDefinitionVwtk_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t _s23LighthouseDataProcessor26ToolKitProtoTypeDefinitionVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptProtoContinuePlanning()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_index_13Tm(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for TranscriptProtoContinuePlanning()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_index_14Tm(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for TranscriptProtoContinuePlanning(uint64_t a1)
{
  return sub_2403BA700(a1, qword_25700BCB8);
}

uint64_t sub_2406F98CC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2408E57A4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_2406F9934()
{
  unint64_t result;

  result = qword_25700BCF0;
  if (!qword_25700BCF0)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for TranscriptProtoSystemRequirement, &type metadata for TranscriptProtoSystemRequirement);
    atomic_store(result, (unint64_t *)&qword_25700BCF0);
  }
  return result;
}

unint64_t sub_2406F9978()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256FFE6C0;
  if (!qword_256FFE6C0)
  {
    v1 = sub_2408E57A4();
    result = MEMORY[0x242684578](MEMORY[0x24BE5BF20], v1);
    atomic_store(result, (unint64_t *)&qword_256FFE6C0);
  }
  return result;
}

uint64_t sub_2406FA0B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  unint64_t v10;
  _QWORD *v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  _QWORD *v26;
  char *v27;
  _QWORD *v28;
  char *v29;
  _QWORD *v30;
  char *v31;
  _QWORD *v32;
  char *v33;
  _QWORD *v34;
  char *v35;
  _QWORD *v36;
  char *v37;
  uint64_t v38;
  _QWORD *v39;
  char *v40;
  _QWORD *v41;
  char *v42;
  _QWORD *v43;
  char *v44;
  _QWORD *v45;
  char *v46;
  _QWORD *v47;
  char *v48;
  _QWORD *v49;
  char *v50;
  _QWORD *v51;
  char *v52;
  _QWORD *v53;
  char *v54;
  _QWORD *v55;
  char *v56;
  uint64_t v58;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_25700BDD0);
  __swift_project_value_buffer(v0, (uint64_t)qword_25700BDD0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v58 = swift_allocObject();
  *(_OWORD *)(v58 + 16) = xmmword_240909830;
  v5 = v58 + v4;
  v6 = v58 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v58 + v4) = 0;
  *(_QWORD *)v6 = "APP_IN_FOCUS_BUNDLE_ID";
  *(_QWORD *)(v6 + 8) = 22;
  *(_BYTE *)(v6 + 16) = 2;
  v7 = *MEMORY[0x24BE5C318];
  v8 = sub_2408E5A74();
  v9 = *(void (**)(void))(*(_QWORD *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  v10 = v58 + v4 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v3) = 1;
  *(_QWORD *)v10 = "BLUETOOTH_DEVICE_TYPE";
  *(_QWORD *)(v10 + 8) = 21;
  *(_BYTE *)(v10 + 16) = 2;
  v9();
  v11 = (_QWORD *)(v58 + v4 + 2 * v3);
  v12 = (char *)v11 + *(int *)(v1 + 48);
  *v11 = 2;
  *(_QWORD *)v12 = "CALENDAR_EVENTS";
  *((_QWORD *)v12 + 1) = 15;
  v12[16] = 2;
  v9();
  v13 = (_QWORD *)(v58 + v4 + 3 * v3);
  v14 = (char *)v13 + *(int *)(v1 + 48);
  *v13 = 3;
  *(_QWORD *)v14 = "MOTION_STATE";
  *((_QWORD *)v14 + 1) = 12;
  v14[16] = 2;
  v9();
  v15 = (_QWORD *)(v58 + v4 + 4 * v3);
  v16 = (char *)v15 + *(int *)(v1 + 48);
  *v15 = 4;
  *(_QWORD *)v16 = "NOW_PLAYING_PLAYBACK_STATE";
  *((_QWORD *)v16 + 1) = 26;
  v16[16] = 2;
  v9();
  v17 = (_QWORD *)(v58 + v4 + 5 * v3);
  v18 = (char *)v17 + *(int *)(v1 + 48);
  *v17 = 5;
  *(_QWORD *)v18 = "POINT_OF_INTEREST";
  *((_QWORD *)v18 + 1) = 17;
  v18[16] = 2;
  v9();
  v19 = (_QWORD *)(v58 + v4 + 6 * v3);
  v20 = (char *)v19 + *(int *)(v1 + 48);
  *v19 = 6;
  *(_QWORD *)v20 = "RECENT_TRANSCRIPT";
  *((_QWORD *)v20 + 1) = 17;
  v20[16] = 2;
  v9();
  v21 = (_QWORD *)(v58 + v4 + 7 * v3);
  v22 = (char *)v21 + *(int *)(v1 + 48);
  *v21 = 7;
  *(_QWORD *)v22 = "SEMANTIC_LOCATION";
  *((_QWORD *)v22 + 1) = 17;
  v22[16] = 2;
  v9();
  v23 = v58 + v4 + 8 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + 8 * v3) = 8;
  *(_QWORD *)v23 = "ON_SCREEN_CONTENT_EMAIL_ADDRESS";
  *(_QWORD *)(v23 + 8) = 31;
  *(_BYTE *)(v23 + 16) = 2;
  v9();
  v24 = (_QWORD *)(v58 + v4 + 9 * v3);
  v25 = (char *)v24 + *(int *)(v1 + 48);
  *v24 = 9;
  *(_QWORD *)v25 = "ON_SCREEN_CONTENT_PHONE_NUMBER";
  *((_QWORD *)v25 + 1) = 30;
  v25[16] = 2;
  v9();
  v26 = (_QWORD *)(v58 + v4 + 10 * v3);
  v27 = (char *)v26 + *(int *)(v1 + 48);
  *v26 = 10;
  *(_QWORD *)v27 = "ON_SCREEN_CONTENT_POSTAL_ADDRESS";
  *((_QWORD *)v27 + 1) = 32;
  v27[16] = 2;
  v9();
  v28 = (_QWORD *)(v58 + v4 + 11 * v3);
  v29 = (char *)v28 + *(int *)(v1 + 48);
  *v28 = 11;
  *(_QWORD *)v29 = "ON_SCREEN_CONTENT_URI_LINK";
  *((_QWORD *)v29 + 1) = 26;
  v29[16] = 2;
  v9();
  v30 = (_QWORD *)(v58 + v4 + 12 * v3);
  v31 = (char *)v30 + *(int *)(v1 + 48);
  *v30 = 12;
  *(_QWORD *)v31 = "ON_SCREEN_PERSON";
  *((_QWORD *)v31 + 1) = 16;
  v31[16] = 2;
  v9();
  v32 = (_QWORD *)(v58 + v4 + 13 * v3);
  v33 = (char *)v32 + *(int *)(v1 + 48);
  *v32 = 13;
  *(_QWORD *)v33 = "ON_SCREEN_HOME";
  *((_QWORD *)v33 + 1) = 14;
  v33[16] = 2;
  v9();
  v34 = (_QWORD *)(v58 + v4 + 14 * v3);
  v35 = (char *)v34 + *(int *)(v1 + 48);
  *v34 = 14;
  *(_QWORD *)v35 = "ON_SCREEN_NOTIFICATION";
  *((_QWORD *)v35 + 1) = 22;
  v35[16] = 2;
  v9();
  v36 = (_QWORD *)(v58 + v4 + 15 * v3);
  v37 = (char *)v36 + *(int *)(v1 + 48);
  *v36 = 15;
  *(_QWORD *)v37 = "ON_SCREEN_DATE_TIME";
  *((_QWORD *)v37 + 1) = 19;
  v37[16] = 2;
  v9();
  v38 = v58 + v4 + 16 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + 16 * v3) = 16;
  *(_QWORD *)v38 = "CONVERSATIONAL_REMINDER";
  *(_QWORD *)(v38 + 8) = 23;
  *(_BYTE *)(v38 + 16) = 2;
  v9();
  v39 = (_QWORD *)(v58 + v4 + 17 * v3);
  v40 = (char *)v39 + *(int *)(v1 + 48);
  *v39 = 17;
  *(_QWORD *)v40 = "CONVERSATIONAL_CALENDAR_EVENT";
  *((_QWORD *)v40 + 1) = 29;
  v40[16] = 2;
  v9();
  v41 = (_QWORD *)(v58 + v4 + 18 * v3);
  v42 = (char *)v41 + *(int *)(v1 + 48);
  *v41 = 18;
  *(_QWORD *)v42 = "CONVERSATIONAL_PEOPLE";
  *((_QWORD *)v42 + 1) = 21;
  v42[16] = 2;
  v9();
  v43 = (_QWORD *)(v58 + v4 + 19 * v3);
  v44 = (char *)v43 + *(int *)(v1 + 48);
  *v43 = 19;
  *(_QWORD *)v44 = "CONVERSATIONAL_PLACES";
  *((_QWORD *)v44 + 1) = 21;
  v44[16] = 2;
  v9();
  v45 = (_QWORD *)(v58 + v4 + 20 * v3);
  v46 = (char *)v45 + *(int *)(v1 + 48);
  *v45 = 20;
  *(_QWORD *)v46 = "CONVERSATIONAL_ALARM";
  *((_QWORD *)v46 + 1) = 20;
  v46[16] = 2;
  v9();
  v47 = (_QWORD *)(v58 + v4 + 21 * v3);
  v48 = (char *)v47 + *(int *)(v1 + 48);
  *v47 = 21;
  *(_QWORD *)v48 = "CONVERSATIONAL_TIMER";
  *((_QWORD *)v48 + 1) = 20;
  v48[16] = 2;
  v9();
  v49 = (_QWORD *)(v58 + v4 + 22 * v3);
  v50 = (char *)v49 + *(int *)(v1 + 48);
  *v49 = 22;
  *(_QWORD *)v50 = "NOW_PLAYING_MEDIA_ITEM";
  *((_QWORD *)v50 + 1) = 22;
  v50[16] = 2;
  v9();
  v51 = (_QWORD *)(v58 + v4 + 23 * v3);
  v52 = (char *)v51 + *(int *)(v1 + 48);
  *v51 = 23;
  *(_QWORD *)v52 = "ON_SCREEN_CONTENT_APP_ENTITY";
  *((_QWORD *)v52 + 1) = 28;
  v52[16] = 2;
  v9();
  v53 = (_QWORD *)(v58 + v4 + 24 * v3);
  v54 = (char *)v53 + *(int *)(v1 + 48);
  *v53 = 24;
  *(_QWORD *)v54 = "SIRI_REQUEST_CONTEXT";
  *((_QWORD *)v54 + 1) = 20;
  v54[16] = 2;
  v9();
  v55 = (_QWORD *)(v58 + v4 + 25 * v3);
  v56 = (char *)v55 + *(int *)(v1 + 48);
  *v55 = 25;
  *(_QWORD *)v56 = "CURRENT_LOCATION";
  *((_QWORD *)v56 + 1) = 16;
  v56[16] = 2;
  v9();
  return sub_2408E5A80();
}

uint64_t static ContextProtoContextType._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF97A8, (uint64_t)qword_25700BDD0, a1);
}

uint64_t sub_2406FA70C@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF97A8, (uint64_t)qword_25700BDD0, a1);
}

uint64_t sub_2406FA72C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  uint64_t v16;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_25700BDE8);
  __swift_project_value_buffer(v0, (uint64_t)qword_25700BDE8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB740;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 0;
  *(_QWORD *)v7 = "Unknown";
  *(_QWORD *)(v7 + 8) = 7;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 1;
  *(_QWORD *)v11 = "Unsure1";
  *(_QWORD *)(v11 + 8) = 7;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 2;
  *(_QWORD *)v13 = "UnsureN";
  *((_QWORD *)v13 + 1) = 7;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "Known";
  *((_QWORD *)v15 + 1) = 5;
  v15[16] = 2;
  v10();
  v16 = v6 + 4 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + 4 * v3) = 4;
  *(_QWORD *)v16 = "Confident";
  *(_QWORD *)(v16 + 8) = 9;
  *(_BYTE *)(v16 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ContextProtoStructuredContextSiriRequestContextUserClassification._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF97B0, (uint64_t)qword_25700BDE8, a1);
}

uint64_t sub_2406FA948@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF97B0, (uint64_t)qword_25700BDE8, a1);
}

uint64_t sub_2406FA968()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_25700BE00);
  __swift_project_value_buffer(v0, (uint64_t)qword_25700BE00);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 0;
  *(_QWORD *)v7 = "LOW";
  *(_QWORD *)(v7 + 8) = 3;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 1;
  *(_QWORD *)v11 = "MEDIUM";
  *((_QWORD *)v11 + 1) = 6;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 2;
  *(_QWORD *)v12 = "HIGH";
  *(_QWORD *)(v12 + 8) = 4;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ContextProtoConfidenceBucket._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF97B8, (uint64_t)qword_25700BE00, a1);
}

uint64_t sub_2406FAB14@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF97B8, (uint64_t)qword_25700BE00, a1);
}

uint64_t sub_2406FAB34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_25700BE18);
  __swift_project_value_buffer(v0, (uint64_t)qword_25700BE18);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 0;
  *(_QWORD *)v7 = "unset";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 1;
  *(_QWORD *)v11 = "prePlanner";
  *((_QWORD *)v11 + 1) = 10;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 2;
  *(_QWORD *)v12 = "fullPlanner";
  *(_QWORD *)(v12 + 8) = 11;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ContextProtoQueryDecorationCaller._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF97C0, (uint64_t)qword_25700BE18, a1);
}

uint64_t sub_2406FACE0@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF97C0, (uint64_t)qword_25700BE18, a1);
}

uint64_t sub_2406FAD00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_25700BE30);
  __swift_project_value_buffer(v0, (uint64_t)qword_25700BE30);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 0;
  *(_QWORD *)v7 = "unknown";
  *(_QWORD *)(v7 + 8) = 7;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 1;
  *(_QWORD *)v11 = "siriEntityMatcher";
  *((_QWORD *)v11 + 1) = 17;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 2;
  *(_QWORD *)v12 = "globalEntityMatcher";
  *(_QWORD *)(v12 + 8) = 19;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ContextProtoEntityMatcherType._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF97C8, (uint64_t)qword_25700BE30, a1);
}

uint64_t sub_2406FAEAC@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF97C8, (uint64_t)qword_25700BE30, a1);
}

uint64_t sub_2406FAECC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_25700BE48);
  __swift_project_value_buffer(v0, (uint64_t)qword_25700BE48);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EAD90;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 0;
  *(_QWORD *)v7 = "homeEntity";
  *(_QWORD *)(v7 + 8) = 10;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 1;
  *(_QWORD *)v11 = "synonym";
  *(_QWORD *)(v11 + 8) = 7;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 2;
  *(_QWORD *)v13 = "transliteration";
  *((_QWORD *)v13 + 1) = 15;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "expandedEmoji";
  *((_QWORD *)v15 + 1) = 13;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 4;
  *(_QWORD *)v17 = "contactRelationship";
  *((_QWORD *)v17 + 1) = 19;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 5;
  *(_QWORD *)v19 = "contactHypocorism";
  *((_QWORD *)v19 + 1) = 17;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 6;
  *(_QWORD *)v21 = "contactHandle";
  *((_QWORD *)v21 + 1) = 13;
  v21[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ContextProtoAliasTypesOptions._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF97D0, (uint64_t)qword_25700BE48, a1);
}

uint64_t sub_2406FB150@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF97D0, (uint64_t)qword_25700BE48, a1);
}

unint64_t static ContextProtoRetrievedContext.protoMessageName.getter()
{
  return 0xD000000000000018;
}

uint64_t sub_2406FB18C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_25700BE60);
  __swift_project_value_buffer(v0, (uint64_t)qword_25700BE60);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EAD90;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "value";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "relevance";
  *(_QWORD *)(v11 + 8) = 9;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "type";
  *((_QWORD *)v13 + 1) = 4;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "metadata";
  *((_QWORD *)v15 + 1) = 8;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "typedValue";
  *((_QWORD *)v17 + 1) = 10;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "structuredContext";
  *((_QWORD *)v19 + 1) = 17;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 7;
  *(_QWORD *)v21 = "identifier";
  *((_QWORD *)v21 + 1) = 10;
  v21[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ContextProtoRetrievedContext._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF97D8, (uint64_t)qword_25700BE60, a1);
}

uint64_t ContextProtoRetrievedContext.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_240448B20(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for ContextProtoRetrievedContext, type metadata accessor for ToolKitProtoTypedValue, &qword_256FFE7E8, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
          break;
        case 2:
          sub_240448BC4(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for ContextProtoRetrievedContext, type metadata accessor for ContextProtoConfidence, &qword_25700C288, (uint64_t)&protocol conformance descriptor for ContextProtoConfidence);
          break;
        case 3:
          sub_24040B3F4();
          sub_2408E58A0();
          break;
        case 4:
          sub_240450F68(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for ContextProtoRetrievedContext, type metadata accessor for ContextProtoContextMetadata, &qword_25700C248, (uint64_t)&protocol conformance descriptor for ContextProtoContextMetadata);
          break;
        case 5:
          sub_2404557D8(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for ContextProtoRetrievedContext, type metadata accessor for ToolKitProtoTypedValue, &qword_256FFE7E8, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
          break;
        case 6:
          sub_2406FB638();
          break;
        case 7:
          type metadata accessor for ContextProtoRetrievedContext(0);
          sub_2408E5930();
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t sub_2406FB638()
{
  type metadata accessor for ContextProtoRetrievedContext(0);
  type metadata accessor for ContextProtoStructuredContext(0);
  sub_2404FA028(&qword_25700C2A0, type metadata accessor for ContextProtoStructuredContext, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContext);
  return sub_2408E596C();
}

uint64_t ContextProtoRetrievedContext.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  uint64_t v4;
  uint64_t result;

  result = sub_240707BD4((uint64_t)v3, a1, a2, a3, type metadata accessor for ContextProtoRetrievedContext);
  if (!v4)
  {
    sub_2406FB848((uint64_t)v3, a1, a2, a3);
    if (*v3)
    {
      sub_24040B3F4();
      sub_2408E59E4();
    }
    sub_2406FB9BC((uint64_t)v3, a1, a2, a3);
    sub_2406FBB30((uint64_t)v3, a1, a2, a3);
    sub_2406FBCA4((uint64_t)v3, a1, a2, a3);
    sub_2406FCA20((uint64_t)v3, a1, a2, a3, type metadata accessor for ContextProtoRetrievedContext);
    type metadata accessor for ContextProtoRetrievedContext(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_2406FB848(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB008);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ContextProtoConfidence(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ContextProtoRetrievedContext(0);
  sub_2403A9210(a1 + *(int *)(v12 + 24), (uint64_t)v7, &qword_256FFB008);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFB008);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ContextProtoConfidence);
  sub_2404FA028(&qword_25700C288, type metadata accessor for ContextProtoConfidence, (uint64_t)&protocol conformance descriptor for ContextProtoConfidence);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ContextProtoConfidence);
}

uint64_t sub_2406FB9BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB010);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ContextProtoContextMetadata(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ContextProtoRetrievedContext(0);
  sub_2403A9210(a1 + *(int *)(v12 + 28), (uint64_t)v7, &qword_256FFB010);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFB010);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ContextProtoContextMetadata);
  sub_2404FA028(&qword_25700C248, type metadata accessor for ContextProtoContextMetadata, (uint64_t)&protocol conformance descriptor for ContextProtoContextMetadata);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ContextProtoContextMetadata);
}

uint64_t sub_2406FBB30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ToolKitProtoTypedValue(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ContextProtoRetrievedContext(0);
  sub_2403A9210(a1 + *(int *)(v12 + 32), (uint64_t)v7, &qword_256FFA3A8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA3A8);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ToolKitProtoTypedValue);
  sub_2404FA028(&qword_256FFE7E8, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoTypedValue);
}

uint64_t sub_2406FBCA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB018);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ContextProtoStructuredContext(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ContextProtoRetrievedContext(0);
  sub_2403A9210(a1 + *(int *)(v12 + 36), (uint64_t)v7, &qword_256FFB018);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFB018);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ContextProtoStructuredContext);
  sub_2404FA028(&qword_25700C2A0, type metadata accessor for ContextProtoStructuredContext, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContext);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ContextProtoStructuredContext);
}

uint64_t ContextProtoRetrievedContext.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ContextProtoRetrievedContext, &qword_25700C0E0, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedContext);
}

uint64_t sub_2406FBE38@<X0>(int *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v4;
  uint64_t v5;
  void (*v6)(_BYTE *, uint64_t, uint64_t, uint64_t);
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t result;

  v4 = &a2[a1[5]];
  v5 = type metadata accessor for ToolKitProtoTypedValue(0);
  v6 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
  v6(v4, 1, 1, v5);
  v7 = &a2[a1[6]];
  v8 = type metadata accessor for ContextProtoConfidence(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v9 = &a2[a1[7]];
  v10 = type metadata accessor for ContextProtoContextMetadata(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  v6(&a2[a1[8]], 1, 1, v5);
  v11 = &a2[a1[9]];
  v12 = type metadata accessor for ContextProtoStructuredContext(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v13 = &a2[a1[10]];
  *v13 = 0;
  v13[1] = 0;
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a2 = 0;
  return result;
}

unint64_t sub_2406FBF4C()
{
  return 0xD000000000000018;
}

uint64_t sub_2406FBF68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ContextProtoRetrievedContext.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_2406FBF7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ContextProtoRetrievedContext.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2406FBF90()
{
  sub_2404FA028(&qword_25700C500, type metadata accessor for ContextProtoRetrievedContext, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedContext);
  return sub_2408E5828();
}

uint64_t sub_2406FBFE0@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF97D8, (uint64_t)qword_25700BE60, a1);
}

uint64_t sub_2406FBFFC()
{
  sub_2404FA028(&qword_256FFEF20, type metadata accessor for ContextProtoRetrievedContext, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedContext);
  return sub_2408E599C();
}

uint64_t sub_2406FC03C()
{
  sub_2404FA028(&qword_256FFEF20, type metadata accessor for ContextProtoRetrievedContext, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedContext);
  return sub_2408E59A8();
}

unint64_t static ContextProtoContextMetadata.protoMessageName.getter()
{
  return 0xD000000000000017;
}

uint64_t sub_2406FC0AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_25700BE78);
  __swift_project_value_buffer(v0, (uint64_t)qword_25700BE78);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EAD90;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "entity_id";
  *(_QWORD *)(v7 + 8) = 9;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C328];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "app_bundle_id";
  *(_QWORD *)(v11 + 8) = 13;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "saliency";
  *((_QWORD *)v13 + 1) = 8;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "on_screen_surrounding_text";
  *((_QWORD *)v15 + 1) = 26;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "on_screen_bounding_box";
  *((_QWORD *)v17 + 1) = 22;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "seq";
  *((_QWORD *)v19 + 1) = 3;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 7;
  *(_QWORD *)v21 = "group_id";
  *((_QWORD *)v21 + 1) = 8;
  v21[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ContextProtoContextMetadata._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF97E0, (uint64_t)qword_25700BE78, a1);
}

uint64_t ContextProtoContextMetadata.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;

  v5 = v3;
  result = sub_2408E5858();
  v11 = v4;
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
          goto LABEL_10;
        case 3:
          v12 = v11;
          sub_240450F68(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for ContextProtoContextMetadata, type metadata accessor for ContextProtoConfidence, &qword_25700C288, (uint64_t)&protocol conformance descriptor for ContextProtoConfidence);
          goto LABEL_11;
        case 4:
          type metadata accessor for ContextProtoSurroundingText(0);
          sub_2404FA028(&qword_25700C0E8, type metadata accessor for ContextProtoSurroundingText, (uint64_t)&protocol conformance descriptor for ContextProtoSurroundingText);
          v12 = v11;
          sub_2408E5960();
          goto LABEL_11;
        case 5:
          v12 = v11;
          sub_2404557D8(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for ContextProtoContextMetadata, type metadata accessor for ContextProtoBoundingBox, &qword_25700C260, (uint64_t)&protocol conformance descriptor for ContextProtoBoundingBox);
          goto LABEL_11;
        case 6:
          type metadata accessor for ContextProtoContextMetadata(0);
          v12 = v11;
          sub_2408E5918();
          goto LABEL_11;
        case 7:
          type metadata accessor for ContextProtoContextMetadata(0);
LABEL_10:
          v12 = v11;
          sub_2408E5930();
LABEL_11:
          v11 = v12;
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t ContextProtoContextMetadata.traverse<A>(visitor:)(uint64_t result, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v7;

  v7 = result;
  if (v3[2])
    result = sub_2408E5A38();
  if (!v4)
  {
    if (v3[4])
      sub_2408E5A38();
    sub_2406FC6C4((uint64_t)v3, v7, a2, a3);
    if (*(_QWORD *)(*v3 + 16))
    {
      type metadata accessor for ContextProtoSurroundingText(0);
      sub_2404FA028(&qword_25700C0E8, type metadata accessor for ContextProtoSurroundingText, (uint64_t)&protocol conformance descriptor for ContextProtoSurroundingText);
      sub_2408E5A5C();
    }
    sub_2406FC838((uint64_t)v3, v7, a2, a3);
    sub_2406FC9AC((uint64_t)v3);
    sub_2406FCA20((uint64_t)v3, v7, a2, a3, type metadata accessor for ContextProtoContextMetadata);
    type metadata accessor for ContextProtoContextMetadata(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_2406FC6C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB008);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ContextProtoConfidence(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ContextProtoContextMetadata(0);
  sub_2403A9210(a1 + *(int *)(v12 + 28), (uint64_t)v7, &qword_256FFB008);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFB008);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ContextProtoConfidence);
  sub_2404FA028(&qword_25700C288, type metadata accessor for ContextProtoConfidence, (uint64_t)&protocol conformance descriptor for ContextProtoConfidence);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ContextProtoConfidence);
}

uint64_t sub_2406FC838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB020);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ContextProtoBoundingBox(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ContextProtoContextMetadata(0);
  sub_2403A9210(a1 + *(int *)(v12 + 32), (uint64_t)v7, &qword_256FFB020);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFB020);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ContextProtoBoundingBox);
  sub_2404FA028(&qword_25700C260, type metadata accessor for ContextProtoBoundingBox, (uint64_t)&protocol conformance descriptor for ContextProtoBoundingBox);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ContextProtoBoundingBox);
}

uint64_t sub_2406FC9AC(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for ContextProtoContextMetadata(0);
  if ((*(_BYTE *)(a1 + *(int *)(result + 36) + 8) & 1) == 0)
    return sub_2408E5A2C();
  return result;
}

uint64_t sub_2406FCA20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t result;

  result = a5(0);
  if (*(_QWORD *)(a1 + *(int *)(result + 40) + 8))
    return sub_2408E5A38();
  return result;
}

uint64_t ContextProtoContextMetadata.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ContextProtoContextMetadata, &qword_25700C0F0, (uint64_t)&protocol conformance descriptor for ContextProtoContextMetadata);
}

uint64_t sub_2406FCAB4@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t result;

  *(_OWORD *)(a2 + 24) = 0u;
  *(_OWORD *)(a2 + 8) = 0u;
  v4 = a2 + a1[7];
  v5 = type metadata accessor for ContextProtoConfidence(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = a2 + a1[8];
  v7 = type metadata accessor for ContextProtoBoundingBox(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v8 = a1[10];
  v9 = a2 + a1[9];
  *(_QWORD *)v9 = 0;
  *(_BYTE *)(v9 + 8) = 1;
  v10 = (_QWORD *)(a2 + v8);
  *v10 = 0;
  v10[1] = 0;
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a2 = MEMORY[0x24BEE4AF8];
  return result;
}

unint64_t sub_2406FCB74()
{
  return 0xD000000000000017;
}

uint64_t sub_2406FCB90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ContextProtoContextMetadata.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_2406FCBA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ContextProtoContextMetadata.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2406FCBB8()
{
  sub_2404FA028(&qword_25700C4F8, type metadata accessor for ContextProtoContextMetadata, (uint64_t)&protocol conformance descriptor for ContextProtoContextMetadata);
  return sub_2408E5828();
}

uint64_t sub_2406FCC08@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF97E0, (uint64_t)qword_25700BE78, a1);
}

uint64_t sub_2406FCC24()
{
  sub_2404FA028(&qword_25700C248, type metadata accessor for ContextProtoContextMetadata, (uint64_t)&protocol conformance descriptor for ContextProtoContextMetadata);
  return sub_2408E599C();
}

uint64_t sub_2406FCC64()
{
  sub_2404FA028(&qword_25700C248, type metadata accessor for ContextProtoContextMetadata, (uint64_t)&protocol conformance descriptor for ContextProtoContextMetadata);
  return sub_2408E59A8();
}

unint64_t static ContextProtoBoundingBox.protoMessageName.getter()
{
  return 0xD000000000000013;
}

uint64_t sub_2406FCCD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_25700BE90);
  __swift_project_value_buffer(v0, (uint64_t)qword_25700BE90);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408E8FE0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "x_coordinate";
  *(_QWORD *)(v7 + 8) = 12;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C328];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "y_coordinate";
  *(_QWORD *)(v11 + 8) = 12;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "width";
  *((_QWORD *)v13 + 1) = 5;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "height";
  *((_QWORD *)v15 + 1) = 6;
  v15[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ContextProtoBoundingBox._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF97E8, (uint64_t)qword_25700BE90, a1);
}

uint64_t ContextProtoBoundingBox.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_2408E5858();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
        case 3:
        case 4:
          sub_2408E58C4();
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t ContextProtoBoundingBox.traverse<A>(visitor:)()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t result;

  if ((v0[4] & 1) == 0)
    result = sub_2408E59FC();
  if (!v1)
  {
    if ((v0[12] & 1) == 0)
      sub_2408E59FC();
    if ((v0[20] & 1) == 0)
      sub_2408E59FC();
    if ((v0[28] & 1) == 0)
      sub_2408E59FC();
    type metadata accessor for ContextProtoBoundingBox(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t ContextProtoBoundingBox.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ContextProtoBoundingBox, &qword_25700C0F8, (uint64_t)&protocol conformance descriptor for ContextProtoBoundingBox);
}

uint64_t sub_2406FD0C0@<X0>(uint64_t a1@<X8>)
{
  *(_DWORD *)a1 = 0;
  *(_BYTE *)(a1 + 4) = 1;
  *(_DWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 12) = 1;
  *(_DWORD *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 20) = 1;
  *(_DWORD *)(a1 + 24) = 0;
  *(_BYTE *)(a1 + 28) = 1;
  return _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
}

unint64_t sub_2406FD100()
{
  return 0xD000000000000013;
}

uint64_t sub_2406FD11C()
{
  return ContextProtoBoundingBox.decodeMessage<A>(decoder:)();
}

uint64_t sub_2406FD130()
{
  return ContextProtoBoundingBox.traverse<A>(visitor:)();
}

uint64_t sub_2406FD144()
{
  sub_2404FA028(&qword_25700C4F0, type metadata accessor for ContextProtoBoundingBox, (uint64_t)&protocol conformance descriptor for ContextProtoBoundingBox);
  return sub_2408E5828();
}

uint64_t sub_2406FD194@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF97E8, (uint64_t)qword_25700BE90, a1);
}

uint64_t sub_2406FD1B0()
{
  sub_2404FA028(&qword_25700C260, type metadata accessor for ContextProtoBoundingBox, (uint64_t)&protocol conformance descriptor for ContextProtoBoundingBox);
  return sub_2408E599C();
}

uint64_t sub_2406FD1F0()
{
  sub_2404FA028(&qword_25700C260, type metadata accessor for ContextProtoBoundingBox, (uint64_t)&protocol conformance descriptor for ContextProtoBoundingBox);
  return sub_2408E59A8();
}

unint64_t static ContextProtoSurroundingText.protoMessageName.getter()
{
  return 0xD000000000000017;
}

uint64_t sub_2406FD260()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_25700BEA8);
  __swift_project_value_buffer(v0, (uint64_t)qword_25700BEA8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "text";
  *(_QWORD *)(v7 + 8) = 4;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "on_screen_bounding_box";
  *((_QWORD *)v11 + 1) = 22;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ContextProtoSurroundingText._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF97F0, (uint64_t)qword_25700BEA8, a1);
}

uint64_t ContextProtoSurroundingText.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      if (result == 2)
      {
        sub_240448B20(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for ContextProtoSurroundingText, type metadata accessor for ContextProtoBoundingBox, &qword_25700C260, (uint64_t)&protocol conformance descriptor for ContextProtoBoundingBox);
      }
      else if (result == 1)
      {
        sub_2408E5930();
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t ContextProtoSurroundingText.traverse<A>(visitor:)(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;

  v7 = result;
  if (*(_QWORD *)(v3 + 8))
    result = sub_2408E5A38();
  if (!v4)
  {
    sub_2406FD560(v3, v7, a2, a3);
    type metadata accessor for ContextProtoSurroundingText(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_2406FD560(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB020);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ContextProtoBoundingBox(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ContextProtoSurroundingText(0);
  sub_2403A9210(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_256FFB020);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFB020);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ContextProtoBoundingBox);
  sub_2404FA028(&qword_25700C260, type metadata accessor for ContextProtoBoundingBox, (uint64_t)&protocol conformance descriptor for ContextProtoBoundingBox);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ContextProtoBoundingBox);
}

uint64_t ContextProtoSurroundingText.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ContextProtoSurroundingText, &qword_25700C100, (uint64_t)&protocol conformance descriptor for ContextProtoSurroundingText);
}

uint64_t sub_2406FD6F4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  char *v2;
  uint64_t v3;

  *a2 = 0;
  a2[1] = 0;
  v2 = (char *)a2 + *(int *)(a1 + 20);
  v3 = type metadata accessor for ContextProtoBoundingBox(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  return _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
}

unint64_t sub_2406FD758()
{
  return 0xD000000000000017;
}

uint64_t sub_2406FD774(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ContextProtoSurroundingText.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_2406FD788(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ContextProtoSurroundingText.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2406FD79C()
{
  sub_2404FA028(&qword_25700C4E8, type metadata accessor for ContextProtoSurroundingText, (uint64_t)&protocol conformance descriptor for ContextProtoSurroundingText);
  return sub_2408E5828();
}

uint64_t sub_2406FD7EC@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF97F0, (uint64_t)qword_25700BEA8, a1);
}

uint64_t sub_2406FD808()
{
  sub_2404FA028(&qword_25700C0E8, type metadata accessor for ContextProtoSurroundingText, (uint64_t)&protocol conformance descriptor for ContextProtoSurroundingText);
  return sub_2408E599C();
}

uint64_t sub_2406FD848()
{
  sub_2404FA028(&qword_25700C0E8, type metadata accessor for ContextProtoSurroundingText, (uint64_t)&protocol conformance descriptor for ContextProtoSurroundingText);
  return sub_2408E59A8();
}

unint64_t static ContextProtoConfidence.protoMessageName.getter()
{
  return 0xD000000000000012;
}

uint64_t sub_2406FD8B8(uint64_t a1)
{
  return sub_240706998(a1, qword_25700BEC0, (uint64_t)"score", (uint64_t)"bucket", 6);
}

uint64_t static ContextProtoConfidence._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF97F8, (uint64_t)qword_25700BEC0, a1);
}

uint64_t ContextProtoConfidence.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_2408E5858();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2)
      {
        sub_24040B36C();
        sub_2408E58A0();
      }
      else if (result == 1)
      {
        sub_2408E58D0();
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t ContextProtoConfidence.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (*(float *)v0 == 0.0 || (result = sub_2408E59FC(), !v1))
  {
    if (!*(_BYTE *)(v0 + 4) || (sub_24040B36C(), result = sub_2408E59E4(), !v1))
    {
      type metadata accessor for ContextProtoConfidence(0);
      return sub_2408E578C();
    }
  }
  return result;
}

uint64_t ContextProtoConfidence.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ContextProtoConfidence, &qword_25700C108, (uint64_t)&protocol conformance descriptor for ContextProtoConfidence);
}

uint64_t sub_2406FDAD0@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;

  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_DWORD *)a1 = 0;
  *(_BYTE *)(a1 + 4) = 0;
  return result;
}

unint64_t sub_2406FDB00()
{
  return 0xD000000000000012;
}

uint64_t sub_2406FDB1C()
{
  return ContextProtoConfidence.decodeMessage<A>(decoder:)();
}

uint64_t sub_2406FDB30()
{
  return ContextProtoConfidence.traverse<A>(visitor:)();
}

uint64_t sub_2406FDB44()
{
  sub_2404FA028(&qword_25700C4E0, type metadata accessor for ContextProtoConfidence, (uint64_t)&protocol conformance descriptor for ContextProtoConfidence);
  return sub_2408E5828();
}

uint64_t sub_2406FDB94@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF97F8, (uint64_t)qword_25700BEC0, a1);
}

uint64_t sub_2406FDBB0()
{
  sub_2404FA028(&qword_25700C288, type metadata accessor for ContextProtoConfidence, (uint64_t)&protocol conformance descriptor for ContextProtoConfidence);
  return sub_2408E599C();
}

uint64_t sub_2406FDBF0()
{
  sub_2404FA028(&qword_25700C288, type metadata accessor for ContextProtoConfidence, (uint64_t)&protocol conformance descriptor for ContextProtoConfidence);
  return sub_2408E59A8();
}

unint64_t static ContextProtoStructuredContext.protoMessageName.getter()
{
  return 0xD000000000000019;
}

uint64_t sub_2406FDC60(uint64_t a1)
{
  return sub_24070927C(a1, qword_25700BED8, (uint64_t)"siriRequestContext", 18);
}

uint64_t static ContextProtoStructuredContext._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9800, (uint64_t)qword_25700BED8, a1);
}

uint64_t ContextProtoStructuredContext.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  while (1)
  {
    result = sub_2408E5858();
    if (v4 || (v10 & 1) != 0)
      break;
    if (result == 1)
      sub_2406FDD04(v5, a1, a2, a3);
  }
  return result;
}

uint64_t sub_2406FDD04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v43 = a2;
  v45 = a4;
  v44 = a3;
  v5 = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v38 = (uint64_t)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v40 = (uint64_t)&v33 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB028);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ContextProtoStructuredContextKind(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v33 - v18;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C558);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = (char *)&v33 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v33 - v23;
  v39 = v6;
  v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v25((char *)&v33 - v23, 1, 1, v5);
  v36 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFB028);
  v34 = v14;
  v35 = v13;
  v37 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  if (v37 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFB028);
  }
  else
  {
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ContextProtoStructuredContextKind);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ContextProtoStructuredContextKind);
    sub_2403A97FC((uint64_t)v24, &qword_25700C558);
    v26 = v40;
    sub_2403A91CC((uint64_t)v17, v40, type metadata accessor for ContextProtoStructuredContextSiriRequestContext);
    sub_2403A91CC(v26, (uint64_t)v24, type metadata accessor for ContextProtoStructuredContextSiriRequestContext);
    v25(v24, 0, 1, v5);
  }
  v28 = (uint64_t)v41;
  v27 = v42;
  sub_2404FA028(&qword_25700C2B8, type metadata accessor for ContextProtoStructuredContextSiriRequestContext, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContext);
  sub_2408E596C();
  if (v27)
    return sub_2403A97FC((uint64_t)v24, &qword_25700C558);
  sub_2403A9210((uint64_t)v24, v28, &qword_25700C558);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v28, 1, v5) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_25700C558);
    return sub_2403A97FC(v28, &qword_25700C558);
  }
  else
  {
    v30 = v28;
    v31 = v38;
    sub_2403A91CC(v30, v38, type metadata accessor for ContextProtoStructuredContextSiriRequestContext);
    if (v37 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_25700C558);
    v32 = v36;
    sub_2403A97FC(v36, &qword_256FFB028);
    sub_2403A91CC(v31, v32, type metadata accessor for ContextProtoStructuredContextSiriRequestContext);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v34 + 56))(v32, 0, 1, v35);
  }
}

uint64_t ContextProtoStructuredContext.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  result = sub_2406FE154(v0);
  if (!v1)
  {
    type metadata accessor for ContextProtoStructuredContext(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_2406FE154(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB028);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFB028);
  v8 = type metadata accessor for ContextProtoStructuredContextKind(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v4, &qword_256FFB028);
  sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ContextProtoStructuredContextSiriRequestContext);
  sub_2404FA028(&qword_25700C2B8, type metadata accessor for ContextProtoStructuredContextSiriRequestContext, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContext);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v7, type metadata accessor for ContextProtoStructuredContextSiriRequestContext);
}

uint64_t ContextProtoStructuredContext.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ContextProtoStructuredContext, &qword_25700C110, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContext);
}

uint64_t sub_2406FE2E8@<X0>(uint64_t a1@<X8>)
{
  return sub_2404C7694(type metadata accessor for ContextProtoStructuredContextKind, a1);
}

unint64_t sub_2406FE2F4()
{
  return 0xD000000000000019;
}

uint64_t sub_2406FE310(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ContextProtoStructuredContext.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_2406FE324()
{
  return ContextProtoStructuredContext.traverse<A>(visitor:)();
}

uint64_t sub_2406FE338()
{
  sub_2404FA028(&qword_25700C4D8, type metadata accessor for ContextProtoStructuredContext, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContext);
  return sub_2408E5828();
}

uint64_t sub_2406FE388@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9800, (uint64_t)qword_25700BED8, a1);
}

uint64_t sub_2406FE3A4()
{
  sub_2404FA028(&qword_25700C2A0, type metadata accessor for ContextProtoStructuredContext, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContext);
  return sub_2408E599C();
}

uint64_t sub_2406FE3E4()
{
  sub_2404FA028(&qword_25700C2A0, type metadata accessor for ContextProtoStructuredContext, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContext);
  return sub_2408E59A8();
}

unint64_t static ContextProtoStructuredContextSiriRequestContext.protoMessageName.getter()
{
  return 0xD00000000000002BLL;
}

uint64_t sub_2406FE454()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  unint64_t v10;
  _QWORD *v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  _QWORD *v26;
  char *v27;
  _QWORD *v28;
  char *v29;
  _QWORD *v30;
  char *v31;
  _QWORD *v32;
  char *v33;
  _QWORD *v34;
  char *v35;
  _QWORD *v36;
  char *v37;
  uint64_t v38;
  _QWORD *v39;
  char *v40;
  _QWORD *v41;
  char *v42;
  _QWORD *v43;
  char *v44;
  _QWORD *v45;
  char *v46;
  uint64_t v48;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_25700BEF0);
  __swift_project_value_buffer(v0, (uint64_t)qword_25700BEF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v48 = swift_allocObject();
  *(_OWORD *)(v48 + 16) = xmmword_2408EB7B0;
  v5 = v48 + v4;
  v6 = v48 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v48 + v4) = 1;
  *(_QWORD *)v6 = "sessionID";
  *(_QWORD *)(v6 + 8) = 9;
  *(_BYTE *)(v6 + 16) = 2;
  v7 = *MEMORY[0x24BE5C318];
  v8 = sub_2408E5A74();
  v9 = *(void (**)(void))(*(_QWORD *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  v10 = v5 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v3) = 2;
  *(_QWORD *)v10 = "requestID";
  *(_QWORD *)(v10 + 8) = 9;
  *(_BYTE *)(v10 + 16) = 2;
  v9();
  v11 = (_QWORD *)(v5 + 2 * v3);
  v12 = (char *)v11 + *(int *)(v1 + 48);
  *v11 = 3;
  *(_QWORD *)v12 = "inputOrigin";
  *((_QWORD *)v12 + 1) = 11;
  v12[16] = 2;
  v9();
  v13 = (_QWORD *)(v5 + 3 * v3);
  v14 = (char *)v13 + *(int *)(v1 + 48);
  *v13 = 4;
  *(_QWORD *)v14 = "responseMode";
  *((_QWORD *)v14 + 1) = 12;
  v14[16] = 2;
  v9();
  v15 = (_QWORD *)(v5 + 4 * v3);
  v16 = (char *)v15 + *(int *)(v1 + 48);
  *v15 = 5;
  *(_QWORD *)v16 = "isEyesFree";
  *((_QWORD *)v16 + 1) = 10;
  v16[16] = 2;
  v9();
  v17 = (_QWORD *)(v5 + 5 * v3);
  v18 = (char *)v17 + *(int *)(v1 + 48);
  *v17 = 6;
  *(_QWORD *)v18 = "isMultiUser";
  *((_QWORD *)v18 + 1) = 11;
  v18[16] = 2;
  v9();
  v19 = (_QWORD *)(v5 + 6 * v3);
  v20 = (char *)v19 + *(int *)(v1 + 48);
  *v19 = 7;
  *(_QWORD *)v20 = "isVoiceTriggerEnabled";
  *((_QWORD *)v20 + 1) = 21;
  v20[16] = 2;
  v9();
  v21 = (_QWORD *)(v5 + 7 * v3);
  v22 = (char *)v21 + *(int *)(v1 + 48);
  *v21 = 8;
  *(_QWORD *)v22 = "isTextToSpeechEnabled";
  *((_QWORD *)v22 + 1) = 21;
  v22[16] = 2;
  v9();
  v23 = v5 + 8 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + 8 * v3) = 9;
  *(_QWORD *)v23 = "isTriggerlessFollowup";
  *(_QWORD *)(v23 + 8) = 21;
  *(_BYTE *)(v23 + 16) = 2;
  v9();
  v24 = (_QWORD *)(v5 + 9 * v3);
  v25 = (char *)v24 + *(int *)(v1 + 48);
  *v24 = 10;
  *(_QWORD *)v25 = "deviceRestrictions";
  *((_QWORD *)v25 + 1) = 18;
  v25[16] = 2;
  v9();
  v26 = (_QWORD *)(v5 + 10 * v3);
  v27 = (char *)v26 + *(int *)(v1 + 48);
  *v26 = 11;
  *(_QWORD *)v27 = "bargeInModes";
  *((_QWORD *)v27 + 1) = 12;
  v27[16] = 2;
  v9();
  v28 = (_QWORD *)(v5 + 11 * v3);
  v29 = (char *)v28 + *(int *)(v1 + 48);
  *v28 = 12;
  *(_QWORD *)v29 = "identifiedUser";
  *((_QWORD *)v29 + 1) = 14;
  v29[16] = 2;
  v9();
  v30 = (_QWORD *)(v5 + 12 * v3);
  v31 = (char *)v30 + *(int *)(v1 + 48);
  *v30 = 13;
  *(_QWORD *)v31 = "encodedLocation";
  *((_QWORD *)v31 + 1) = 15;
  v31[16] = 2;
  v9();
  v32 = (_QWORD *)(v5 + 13 * v3);
  v33 = (char *)v32 + *(int *)(v1 + 48);
  *v32 = 14;
  *(_QWORD *)v33 = "countryCode";
  *((_QWORD *)v33 + 1) = 11;
  v33[16] = 2;
  v9();
  v34 = (_QWORD *)(v5 + 14 * v3);
  v35 = (char *)v34 + *(int *)(v1 + 48);
  *v34 = 15;
  *(_QWORD *)v35 = "siriLocale";
  *((_QWORD *)v35 + 1) = 10;
  v35[16] = 2;
  v9();
  v36 = (_QWORD *)(v5 + 15 * v3);
  v37 = (char *)v36 + *(int *)(v1 + 48);
  *v36 = 16;
  *(_QWORD *)v37 = "contentRestrictions";
  *((_QWORD *)v37 + 1) = 19;
  v37[16] = 2;
  v9();
  v38 = v5 + 16 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + 16 * v3) = 17;
  *(_QWORD *)v38 = "uiScale";
  *(_QWORD *)(v38 + 8) = 7;
  *(_BYTE *)(v38 + 16) = 2;
  v9();
  v39 = (_QWORD *)(v5 + 17 * v3);
  v40 = (char *)v39 + *(int *)(v1 + 48);
  *v39 = 18;
  *(_QWORD *)v40 = "temperatureUnit";
  *((_QWORD *)v40 + 1) = 15;
  v40[16] = 2;
  v9();
  v41 = (_QWORD *)(v5 + 18 * v3);
  v42 = (char *)v41 + *(int *)(v1 + 48);
  *v41 = 19;
  *(_QWORD *)v42 = "allowUserGeneratedContent";
  *((_QWORD *)v42 + 1) = 25;
  v42[16] = 2;
  v9();
  v43 = (_QWORD *)(v5 + 19 * v3);
  v44 = (char *)v43 + *(int *)(v1 + 48);
  *v43 = 20;
  *(_QWORD *)v44 = "censorSpeech";
  *((_QWORD *)v44 + 1) = 12;
  v44[16] = 2;
  v9();
  v45 = (_QWORD *)(v5 + 20 * v3);
  v46 = (char *)v45 + *(int *)(v1 + 48);
  *v45 = 21;
  *(_QWORD *)v46 = "meCard";
  *((_QWORD *)v46 + 1) = 6;
  v46[16] = 2;
  v9();
  return sub_2408E5A80();
}

uint64_t static ContextProtoStructuredContextSiriRequestContext._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9808, (uint64_t)qword_25700BEF0, a1);
}

uint64_t ContextProtoStructuredContextSiriRequestContext.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
        case 3:
        case 4:
          goto LABEL_15;
        case 5:
        case 6:
        case 7:
        case 8:
        case 9:
          goto LABEL_5;
        case 10:
        case 11:
          sub_2408E590C();
          break;
        case 12:
          sub_2406FEC78();
          break;
        case 13:
          type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
          sub_2408E58AC();
          break;
        case 14:
        case 15:
        case 18:
          type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
LABEL_15:
          sub_2408E5930();
          break;
        case 16:
          sub_2406FED0C();
          break;
        case 17:
          type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
          sub_2408E5918();
          break;
        case 19:
        case 20:
          type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
LABEL_5:
          sub_2408E587C();
          break;
        case 21:
          sub_240701A94(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for ContextProtoStructuredContextSiriRequestContext, type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard, &qword_25700C300, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextMeCard);
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t sub_2406FEC78()
{
  type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
  sub_2404FA028(&qword_25700C2E8, type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextUser);
  return sub_2408E596C();
}

uint64_t sub_2406FED0C()
{
  type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
  sub_2404FA028(&qword_25700C2D0, type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextContentRestriction);
  return sub_2408E596C();
}

uint64_t ContextProtoStructuredContextSiriRequestContext.traverse<A>(visitor:)(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;

  v5 = v3;
  v8 = result;
  if (*(_QWORD *)(v5 + 24))
    result = sub_2408E5A38();
  if (!v4)
  {
    if (*(_QWORD *)(v5 + 40))
      sub_2408E5A38();
    if (*(_QWORD *)(v5 + 56))
      sub_2408E5A38();
    if (*(_QWORD *)(v5 + 72))
      sub_2408E5A38();
    if (*(_BYTE *)(v5 + 80) != 2)
      sub_2408E59D8();
    if (*(_BYTE *)(v5 + 81) != 2)
      sub_2408E59D8();
    if (*(_BYTE *)(v5 + 82) != 2)
      sub_2408E59D8();
    if (*(_BYTE *)(v5 + 83) != 2)
      sub_2408E59D8();
    if (*(_BYTE *)(v5 + 84) != 2)
      sub_2408E59D8();
    if (*(_QWORD *)(*(_QWORD *)v5 + 16))
      sub_2408E5A20();
    if (*(_QWORD *)(*(_QWORD *)(v5 + 8) + 16))
      sub_2408E5A20();
    sub_2406FF06C(v5, v8, a2, a3);
    sub_2406FF1E0(v5);
    sub_2406FF27C(v5);
    sub_2406FF2F0(v5);
    sub_2406FF364(v5, v8, a2, a3);
    sub_2406FF4D8(v5);
    sub_2406FF54C(v5);
    sub_2406FF5C0(v5);
    sub_2406FF634(v5);
    sub_2406FF6A8(v5, v8, a2, a3);
    type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_2406FF06C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB038);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  sub_2403A9210(a1 + *(int *)(v12 + 60), (uint64_t)v7, &qword_256FFB038);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFB038);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser);
  sub_2404FA028(&qword_25700C2E8, type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextUser);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser);
}

uint64_t sub_2406FF1E0(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  result = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  v3 = a1 + *(int *)(result + 64);
  v4 = *(_QWORD *)(v3 + 8);
  if (v4 >> 60 != 15)
  {
    v5 = *(_QWORD *)v3;
    sub_240360070(*(_QWORD *)v3, *(_QWORD *)(v3 + 8));
    sub_2408E59F0();
    return sub_2403C2424(v5, v4);
  }
  return result;
}

uint64_t sub_2406FF27C(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  if (*(_QWORD *)(a1 + *(int *)(result + 68) + 8))
    return sub_2408E5A38();
  return result;
}

uint64_t sub_2406FF2F0(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  if (*(_QWORD *)(a1 + *(int *)(result + 72) + 8))
    return sub_2408E5A38();
  return result;
}

uint64_t sub_2406FF364(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB040);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  sub_2403A9210(a1 + *(int *)(v12 + 76), (uint64_t)v7, &qword_256FFB040);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFB040);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction);
  sub_2404FA028(&qword_25700C2D0, type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextContentRestriction);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction);
}

uint64_t sub_2406FF4D8(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  if ((*(_BYTE *)(a1 + *(int *)(result + 80) + 8) & 1) == 0)
    return sub_2408E5A2C();
  return result;
}

uint64_t sub_2406FF54C(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  if (*(_QWORD *)(a1 + *(int *)(result + 84) + 8))
    return sub_2408E5A38();
  return result;
}

uint64_t sub_2406FF5C0(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  if (*(_BYTE *)(a1 + *(int *)(result + 88)) != 2)
    return sub_2408E59D8();
  return result;
}

uint64_t sub_2406FF634(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  if (*(_BYTE *)(a1 + *(int *)(result + 92)) != 2)
    return sub_2408E59D8();
  return result;
}

uint64_t sub_2406FF6A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB048);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  sub_2403A9210(a1 + *(int *)(v12 + 96), (uint64_t)v7, &qword_256FFB048);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFB048);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard);
  sub_2404FA028(&qword_25700C300, type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextMeCard);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard);
}

uint64_t ContextProtoStructuredContextSiriRequestContext.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ContextProtoStructuredContextSiriRequestContext, &qword_25700C118, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContext);
}

unint64_t sub_2406FF83C()
{
  return 0xD00000000000002BLL;
}

uint64_t (*sub_2406FF860())()
{
  return nullsub_1;
}

uint64_t sub_2406FF874(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ContextProtoStructuredContextSiriRequestContext.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_2406FF888(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ContextProtoStructuredContextSiriRequestContext.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2406FF89C()
{
  sub_2404FA028(&qword_25700C4D0, type metadata accessor for ContextProtoStructuredContextSiriRequestContext, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContext);
  return sub_2408E5828();
}

uint64_t sub_2406FF8EC@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9808, (uint64_t)qword_25700BEF0, a1);
}

uint64_t sub_2406FF908()
{
  sub_2404FA028(&qword_25700C2B8, type metadata accessor for ContextProtoStructuredContextSiriRequestContext, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContext);
  return sub_2408E599C();
}

uint64_t sub_2406FF948()
{
  sub_2404FA028(&qword_25700C2B8, type metadata accessor for ContextProtoStructuredContextSiriRequestContext, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContext);
  return sub_2408E59A8();
}

unint64_t static ContextProtoStructuredContextSiriRequestContextContentRestriction.protoMessageName.getter()
{
  return 0xD00000000000003DLL;
}

uint64_t sub_2406FF9B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_25700BF08);
  __swift_project_value_buffer(v0, (uint64_t)qword_25700BF08);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408E8FE0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "appRestriction";
  *(_QWORD *)(v7 + 8) = 14;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "countryCode";
  *(_QWORD *)(v11 + 8) = 11;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "movieRestriction";
  *((_QWORD *)v13 + 1) = 16;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "tvRestriction";
  *((_QWORD *)v15 + 1) = 13;
  v15[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ContextProtoStructuredContextSiriRequestContextContentRestriction._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9810, (uint64_t)qword_25700BF08, a1);
}

uint64_t ContextProtoStructuredContextSiriRequestContextContentRestriction.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_2408E5858();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 3:
        case 4:
          sub_2408E58DC();
          break;
        case 2:
          sub_2408E5930();
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t ContextProtoStructuredContextSiriRequestContextContentRestriction.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if ((*(_BYTE *)(v0 + 4) & 1) == 0)
    result = sub_2408E5A08();
  if (!v1)
  {
    if (*(_QWORD *)(v0 + 16))
      sub_2408E5A38();
    if ((*(_BYTE *)(v0 + 28) & 1) == 0)
      sub_2408E5A08();
    if ((*(_BYTE *)(v0 + 36) & 1) == 0)
      sub_2408E5A08();
    type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t ContextProtoStructuredContextSiriRequestContextContentRestriction.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction, &qword_25700C120, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextContentRestriction);
}

uint64_t sub_2406FFDA4@<X0>(uint64_t a1@<X8>)
{
  *(_DWORD *)a1 = 0;
  *(_BYTE *)(a1 + 4) = 1;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_DWORD *)(a1 + 24) = 0;
  *(_BYTE *)(a1 + 28) = 1;
  *(_DWORD *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 36) = 1;
  return _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
}

unint64_t sub_2406FFDE0()
{
  return 0xD00000000000003DLL;
}

uint64_t sub_2406FFDFC()
{
  return ContextProtoStructuredContextSiriRequestContextContentRestriction.decodeMessage<A>(decoder:)();
}

uint64_t sub_2406FFE10()
{
  return ContextProtoStructuredContextSiriRequestContextContentRestriction.traverse<A>(visitor:)();
}

uint64_t sub_2406FFE24()
{
  sub_2404FA028(&qword_25700C4C8, type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextContentRestriction);
  return sub_2408E5828();
}

uint64_t sub_2406FFE74@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9810, (uint64_t)qword_25700BF08, a1);
}

uint64_t sub_2406FFE90()
{
  sub_2404FA028(&qword_25700C2D0, type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextContentRestriction);
  return sub_2408E599C();
}

uint64_t sub_2406FFED0()
{
  sub_2404FA028(&qword_25700C2D0, type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextContentRestriction);
  return sub_2408E59A8();
}

unint64_t static ContextProtoStructuredContextSiriRequestContextUser.protoMessageName.getter()
{
  return 0xD00000000000002FLL;
}

uint64_t sub_2406FFF40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_25700BF20);
  __swift_project_value_buffer(v0, (uint64_t)qword_25700BF20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "userID";
  *(_QWORD *)(v7 + 8) = 6;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "isOnlyUserInHome";
  *((_QWORD *)v11 + 1) = 16;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 3;
  *(_QWORD *)v12 = "classification";
  *(_QWORD *)(v12 + 8) = 14;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ContextProtoStructuredContextSiriRequestContextUser._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9818, (uint64_t)qword_25700BF20, a1);
}

uint64_t ContextProtoStructuredContextSiriRequestContextUser.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = sub_2408E5858();
  v3 = v0;
  if (!v0)
  {
    while (1)
    {
      if ((v2 & 1) != 0)
        return result;
      if (result == 3)
        break;
      if (result == 2)
      {
        v4 = v3;
        sub_2408E587C();
        goto LABEL_5;
      }
      if (result == 1)
      {
        v4 = v3;
        sub_2408E5930();
        goto LABEL_5;
      }
LABEL_6:
      result = sub_2408E5858();
    }
    sub_24040B3B0();
    v4 = v3;
    sub_2408E5894();
LABEL_5:
    v3 = v4;
    goto LABEL_6;
  }
  return result;
}

uint64_t ContextProtoStructuredContextSiriRequestContextUser.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (*(_QWORD *)(v0 + 8))
    result = sub_2408E5A38();
  if (!v1)
  {
    if (*(_BYTE *)(v0 + 16) != 2)
      sub_2408E59D8();
    sub_2407002CC(v0);
    type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_2407002CC(uint64_t result)
{
  if (*(_BYTE *)(result + 17) != 5)
  {
    sub_24040B3B0();
    return sub_2408E59E4();
  }
  return result;
}

uint64_t ContextProtoStructuredContextSiriRequestContextUser.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser, &qword_25700C128, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextUser);
}

uint64_t sub_240700364@<X0>(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_WORD *)(a1 + 16) = 1282;
  return _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
}

unint64_t sub_24070038C()
{
  return 0xD00000000000002FLL;
}

uint64_t sub_2407003A8()
{
  return ContextProtoStructuredContextSiriRequestContextUser.decodeMessage<A>(decoder:)();
}

uint64_t sub_2407003BC()
{
  return ContextProtoStructuredContextSiriRequestContextUser.traverse<A>(visitor:)();
}

uint64_t sub_2407003D0()
{
  sub_2404FA028(&qword_25700C4C0, type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextUser);
  return sub_2408E5828();
}

uint64_t sub_240700420@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9818, (uint64_t)qword_25700BF20, a1);
}

uint64_t sub_24070043C()
{
  sub_2404FA028(&qword_25700C2E8, type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextUser);
  return sub_2408E599C();
}

uint64_t sub_24070047C()
{
  sub_2404FA028(&qword_25700C2E8, type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextUser);
  return sub_2408E59A8();
}

unint64_t static ContextProtoStructuredContextSiriRequestContextMeCard.protoMessageName.getter()
{
  return 0xD000000000000031;
}

uint64_t sub_2407004EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_25700BF38);
  __swift_project_value_buffer(v0, (uint64_t)qword_25700BF38);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408E91D0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "givenName";
  *(_QWORD *)(v7 + 8) = 9;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "middleName";
  *(_QWORD *)(v11 + 8) = 10;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "familyName";
  *((_QWORD *)v13 + 1) = 10;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "nickName";
  *((_QWORD *)v15 + 1) = 8;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "fullName";
  *((_QWORD *)v17 + 1) = 8;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "addresses";
  *((_QWORD *)v19 + 1) = 9;
  v19[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ContextProtoStructuredContextSiriRequestContextMeCard._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9820, (uint64_t)qword_25700BF38, a1);
}

uint64_t ContextProtoStructuredContextSiriRequestContextMeCard.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_2408E5858();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
          sub_2408E5930();
          break;
        case 6:
          type metadata accessor for ContextProtoStructuredContextSiriRequestContextAddress(0);
          sub_2404FA028(&qword_25700C130, type metadata accessor for ContextProtoStructuredContextSiriRequestContextAddress, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextAddress);
          sub_2408E5960();
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t ContextProtoStructuredContextSiriRequestContextMeCard.traverse<A>(visitor:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t result;

  if (v0[2])
    result = sub_2408E5A38();
  if (!v1)
  {
    if (v0[4])
      sub_2408E5A38();
    if (v0[6])
      sub_2408E5A38();
    if (v0[8])
      sub_2408E5A38();
    if (v0[10])
      sub_2408E5A38();
    if (*(_QWORD *)(*v0 + 16))
    {
      type metadata accessor for ContextProtoStructuredContextSiriRequestContextAddress(0);
      sub_2404FA028(&qword_25700C130, type metadata accessor for ContextProtoStructuredContextSiriRequestContextAddress, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextAddress);
      sub_2408E5A5C();
    }
    type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t ContextProtoStructuredContextSiriRequestContextMeCard.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard, &qword_25700C138, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextMeCard);
}

uint64_t sub_240700A4C@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;

  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 8) = 0u;
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a1 = MEMORY[0x24BEE4AF8];
  return result;
}

unint64_t sub_240700A98()
{
  return 0xD000000000000031;
}

uint64_t sub_240700AB4()
{
  return ContextProtoStructuredContextSiriRequestContextMeCard.decodeMessage<A>(decoder:)();
}

uint64_t sub_240700AC8()
{
  return ContextProtoStructuredContextSiriRequestContextMeCard.traverse<A>(visitor:)();
}

uint64_t sub_240700ADC()
{
  sub_2404FA028(&qword_25700C4B8, type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextMeCard);
  return sub_2408E5828();
}

uint64_t sub_240700B2C@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9820, (uint64_t)qword_25700BF38, a1);
}

uint64_t sub_240700B48()
{
  sub_2404FA028(&qword_25700C300, type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextMeCard);
  return sub_2408E599C();
}

uint64_t sub_240700B88()
{
  sub_2404FA028(&qword_25700C300, type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextMeCard);
  return sub_2408E59A8();
}

unint64_t static ContextProtoStructuredContextSiriRequestContextAddress.protoMessageName.getter()
{
  return 0xD000000000000032;
}

uint64_t sub_240700BF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_25700BF50);
  __swift_project_value_buffer(v0, (uint64_t)qword_25700BF50);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408E91D0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "label";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "street";
  *(_QWORD *)(v11 + 8) = 6;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "city";
  *((_QWORD *)v13 + 1) = 4;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "state";
  *((_QWORD *)v15 + 1) = 5;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "postalCode";
  *((_QWORD *)v17 + 1) = 10;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "countryCode";
  *((_QWORD *)v19 + 1) = 11;
  v19[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ContextProtoStructuredContextSiriRequestContextAddress._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9828, (uint64_t)qword_25700BF50, a1);
}

uint64_t ContextProtoStructuredContextSiriRequestContextAddress.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_2408E5858();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
          sub_2408E5930();
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t ContextProtoStructuredContextSiriRequestContextAddress.traverse<A>(visitor:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t result;

  if (v0[1])
    result = sub_2408E5A38();
  if (!v1)
  {
    if (v0[3])
      sub_2408E5A38();
    if (v0[5])
      sub_2408E5A38();
    if (v0[7])
      sub_2408E5A38();
    if (v0[9])
      sub_2408E5A38();
    if (v0[11])
      sub_2408E5A38();
    type metadata accessor for ContextProtoStructuredContextSiriRequestContextAddress(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t ContextProtoStructuredContextSiriRequestContextAddress.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ContextProtoStructuredContextSiriRequestContextAddress, &qword_25700C140, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextAddress);
}

uint64_t sub_2407010B0@<X0>(_OWORD *a1@<X8>)
{
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
}

unint64_t sub_2407010DC()
{
  return 0xD000000000000032;
}

uint64_t sub_2407010F8()
{
  return ContextProtoStructuredContextSiriRequestContextAddress.decodeMessage<A>(decoder:)();
}

uint64_t sub_24070110C()
{
  return ContextProtoStructuredContextSiriRequestContextAddress.traverse<A>(visitor:)();
}

uint64_t sub_240701120()
{
  sub_2404FA028(&qword_25700C4B0, type metadata accessor for ContextProtoStructuredContextSiriRequestContextAddress, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextAddress);
  return sub_2408E5828();
}

uint64_t sub_240701170@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9828, (uint64_t)qword_25700BF50, a1);
}

uint64_t sub_24070118C()
{
  sub_2404FA028(&qword_25700C130, type metadata accessor for ContextProtoStructuredContextSiriRequestContextAddress, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextAddress);
  return sub_2408E599C();
}

uint64_t sub_2407011CC()
{
  sub_2404FA028(&qword_25700C130, type metadata accessor for ContextProtoStructuredContextSiriRequestContextAddress, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextAddress);
  return sub_2408E59A8();
}

unint64_t static ContextProtoQueryDecorationOutput.protoMessageName.getter()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_24070123C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  unint64_t v10;
  _QWORD *v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  _QWORD *v26;
  char *v27;
  _QWORD *v28;
  char *v29;
  _QWORD *v30;
  char *v31;
  _QWORD *v32;
  char *v33;
  _QWORD *v34;
  char *v35;
  _QWORD *v36;
  char *v37;
  uint64_t v38;
  _QWORD *v39;
  char *v40;
  _QWORD *v41;
  char *v42;
  _QWORD *v43;
  char *v44;
  _QWORD *v45;
  char *v46;
  uint64_t v48;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_25700BF68);
  __swift_project_value_buffer(v0, (uint64_t)qword_25700BF68);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v48 = swift_allocObject();
  *(_OWORD *)(v48 + 16) = xmmword_2408EB7B0;
  v5 = v48 + v4;
  v6 = v48 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v48 + v4) = 12;
  *(_QWORD *)v6 = "spans";
  *(_QWORD *)(v6 + 8) = 5;
  *(_BYTE *)(v6 + 16) = 2;
  v7 = *MEMORY[0x24BE5C318];
  v8 = sub_2408E5A74();
  v9 = *(void (**)(void))(*(_QWORD *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  v10 = v48 + v4 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v3) = 13;
  *(_QWORD *)v10 = "spansIsPresent";
  *(_QWORD *)(v10 + 8) = 14;
  *(_BYTE *)(v10 + 16) = 2;
  v9();
  v11 = (_QWORD *)(v48 + v4 + 2 * v3);
  v12 = (char *)v11 + *(int *)(v1 + 48);
  *v11 = 3;
  *(_QWORD *)v12 = "requiredContext";
  *((_QWORD *)v12 + 1) = 15;
  v12[16] = 2;
  v9();
  v13 = (_QWORD *)(v48 + v4 + 3 * v3);
  v14 = (char *)v13 + *(int *)(v1 + 48);
  *v13 = 14;
  *(_QWORD *)v14 = "requiredContextIsPresent";
  *((_QWORD *)v14 + 1) = 24;
  v14[16] = 2;
  v9();
  v15 = (_QWORD *)(v48 + v4 + 4 * v3);
  v16 = (char *)v15 + *(int *)(v1 + 48);
  *v15 = 4;
  *(_QWORD *)v16 = "utteranceContext";
  *((_QWORD *)v16 + 1) = 16;
  v16[16] = 2;
  v9();
  v17 = (_QWORD *)(v48 + v4 + 5 * v3);
  v18 = (char *)v17 + *(int *)(v1 + 48);
  *v17 = 15;
  *(_QWORD *)v18 = "utteranceContextIsPresent";
  *((_QWORD *)v18 + 1) = 25;
  v18[16] = 2;
  v9();
  v19 = (_QWORD *)(v48 + v4 + 6 * v3);
  v20 = (char *)v19 + *(int *)(v1 + 48);
  *v19 = 5;
  *(_QWORD *)v20 = "originalRankedTools";
  *((_QWORD *)v20 + 1) = 19;
  v20[16] = 2;
  v9();
  v21 = (_QWORD *)(v48 + v4 + 7 * v3);
  v22 = (char *)v21 + *(int *)(v1 + 48);
  *v21 = 16;
  *(_QWORD *)v22 = "originalRankedToolsIsPresent";
  *((_QWORD *)v22 + 1) = 28;
  v22[16] = 2;
  v9();
  v23 = v48 + v4 + 8 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + 8 * v3) = 6;
  *(_QWORD *)v23 = "adjustedRankedTools";
  *(_QWORD *)(v23 + 8) = 19;
  *(_BYTE *)(v23 + 16) = 2;
  v9();
  v24 = (_QWORD *)(v48 + v4 + 9 * v3);
  v25 = (char *)v24 + *(int *)(v1 + 48);
  *v24 = 17;
  *(_QWORD *)v25 = "adjustedRankedToolsIsPresent";
  *((_QWORD *)v25 + 1) = 28;
  v25[16] = 2;
  v9();
  v26 = (_QWORD *)(v48 + v4 + 10 * v3);
  v27 = (char *)v26 + *(int *)(v1 + 48);
  *v26 = 7;
  *(_QWORD *)v27 = "originalRankedSpans";
  *((_QWORD *)v27 + 1) = 19;
  v27[16] = 2;
  v9();
  v28 = (_QWORD *)(v48 + v4 + 11 * v3);
  v29 = (char *)v28 + *(int *)(v1 + 48);
  *v28 = 18;
  *(_QWORD *)v29 = "originalRankedSpansIsPresent";
  *((_QWORD *)v29 + 1) = 28;
  v29[16] = 2;
  v9();
  v30 = (_QWORD *)(v48 + v4 + 12 * v3);
  v31 = (char *)v30 + *(int *)(v1 + 48);
  *v30 = 8;
  *(_QWORD *)v31 = "adjustedRankedSpans";
  *((_QWORD *)v31 + 1) = 19;
  v31[16] = 2;
  v9();
  v32 = (_QWORD *)(v48 + v4 + 13 * v3);
  v33 = (char *)v32 + *(int *)(v1 + 48);
  *v32 = 19;
  *(_QWORD *)v33 = "adjustedRankedSpansIsPresent";
  *((_QWORD *)v33 + 1) = 28;
  v33[16] = 2;
  v9();
  v34 = (_QWORD *)(v48 + v4 + 14 * v3);
  v35 = (char *)v34 + *(int *)(v1 + 48);
  *v34 = 9;
  *(_QWORD *)v35 = "originalRankedUtteranceContext";
  *((_QWORD *)v35 + 1) = 30;
  v35[16] = 2;
  v9();
  v36 = (_QWORD *)(v48 + v4 + 15 * v3);
  v37 = (char *)v36 + *(int *)(v1 + 48);
  *v36 = 20;
  *(_QWORD *)v37 = "originalRankedUtteranceContextIsPresent";
  *((_QWORD *)v37 + 1) = 39;
  v37[16] = 2;
  v9();
  v38 = v48 + v4 + 16 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + 16 * v3) = 10;
  *(_QWORD *)v38 = "adjustedRankedUtteranceContext";
  *(_QWORD *)(v38 + 8) = 30;
  *(_BYTE *)(v38 + 16) = 2;
  v9();
  v39 = (_QWORD *)(v48 + v4 + 17 * v3);
  v40 = (char *)v39 + *(int *)(v1 + 48);
  *v39 = 21;
  *(_QWORD *)v40 = "adjustedRankedUtteranceContextIsPresent";
  *((_QWORD *)v40 + 1) = 39;
  v40[16] = 2;
  v9();
  v41 = (_QWORD *)(v48 + v4 + 18 * v3);
  v42 = (char *)v41 + *(int *)(v1 + 48);
  *v41 = 11;
  *(_QWORD *)v42 = "toolRetrievalResponse";
  *((_QWORD *)v42 + 1) = 21;
  v42[16] = 2;
  v9();
  v43 = (_QWORD *)(v48 + v4 + 19 * v3);
  v44 = (char *)v43 + *(int *)(v1 + 48);
  *v43 = 22;
  *(_QWORD *)v44 = "dynamicEnumerationEntities";
  *((_QWORD *)v44 + 1) = 26;
  v44[16] = 2;
  v9();
  v45 = (_QWORD *)(v48 + v4 + 20 * v3);
  v46 = (char *)v45 + *(int *)(v1 + 48);
  *v45 = 23;
  *(_QWORD *)v46 = "dynamicEnumerationEntitiesIsPresent";
  *((_QWORD *)v46 + 1) = 35;
  v46[16] = 2;
  v9();
  return sub_2408E5A80();
}

uint64_t static ContextProtoQueryDecorationOutput._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9830, (uint64_t)qword_25700BF68, a1);
}

uint64_t ContextProtoQueryDecorationOutput.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;

  v5 = v3;
  result = sub_2408E5858();
  v11 = v4;
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 3:
        case 4:
          type metadata accessor for ContextProtoRetrievedContext(0);
          sub_2404FA028(&qword_256FFEF20, type metadata accessor for ContextProtoRetrievedContext, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedContext);
          goto LABEL_10;
        case 5:
        case 6:
        case 7:
        case 8:
        case 9:
        case 10:
          v12 = v11;
          sub_2408E590C();
          goto LABEL_12;
        case 11:
          v12 = v11;
          sub_240701A94(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for ContextProtoQueryDecorationOutput, type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse, &qword_257000CA0, (uint64_t)&protocol conformance descriptor for ContextProtoQueryDecorationToolRetrievalResponse);
          goto LABEL_12;
        case 12:
          type metadata accessor for ContextProtoSpanMatchedEntity(0);
          sub_2404FA028(&qword_256FFEE68, type metadata accessor for ContextProtoSpanMatchedEntity, (uint64_t)&protocol conformance descriptor for ContextProtoSpanMatchedEntity);
          goto LABEL_10;
        case 13:
        case 14:
        case 15:
        case 16:
        case 17:
        case 18:
        case 19:
        case 20:
        case 21:
        case 23:
          v12 = v11;
          sub_2408E5888();
          goto LABEL_12;
        case 22:
          type metadata accessor for ContextProtoDynamicEnumerationEntity(0);
          sub_2404FA028(&qword_257000F58, type metadata accessor for ContextProtoDynamicEnumerationEntity, (uint64_t)&protocol conformance descriptor for ContextProtoDynamicEnumerationEntity);
LABEL_10:
          v12 = v11;
          sub_2408E5960();
LABEL_12:
          v11 = v12;
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t sub_240701A94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD), uint64_t (*a6)(uint64_t), unint64_t *a7, uint64_t a8)
{
  a5(0);
  a6(0);
  sub_2404FA028(a7, a6, a8);
  return sub_2408E596C();
}

uint64_t ContextProtoQueryDecorationOutput.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v5 = v3;
  if (!*(_QWORD *)(*(_QWORD *)(v5 + 16) + 16)
    || (type metadata accessor for ContextProtoRetrievedContext(0),
        sub_2404FA028(&qword_256FFEF20, type metadata accessor for ContextProtoRetrievedContext, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedContext), result = sub_2408E5A5C(), !v4))
  {
    if (!*(_QWORD *)(*(_QWORD *)(v5 + 32) + 16)
      || (type metadata accessor for ContextProtoRetrievedContext(0),
          sub_2404FA028(&qword_256FFEF20, type metadata accessor for ContextProtoRetrievedContext, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedContext), result = sub_2408E5A5C(), !v4))
    {
      if (!*(_QWORD *)(*(_QWORD *)(v5 + 48) + 16) || (result = sub_2408E5A20(), !v4))
      {
        if (!*(_QWORD *)(*(_QWORD *)(v5 + 64) + 16) || (result = sub_2408E5A20(), !v4))
        {
          if (!*(_QWORD *)(*(_QWORD *)(v5 + 80) + 16) || (result = sub_2408E5A20(), !v4))
          {
            if (!*(_QWORD *)(*(_QWORD *)(v5 + 96) + 16) || (result = sub_2408E5A20(), !v4))
            {
              if (!*(_QWORD *)(*(_QWORD *)(v5 + 112) + 16) || (result = sub_2408E5A20(), !v4))
              {
                if (!*(_QWORD *)(*(_QWORD *)(v5 + 128) + 16) || (result = sub_2408E5A20(), !v4))
                {
                  result = sub_240701FE8(v5, a1, a2, a3);
                  if (!v4)
                  {
                    if (*(_QWORD *)(*(_QWORD *)v5 + 16))
                    {
                      type metadata accessor for ContextProtoSpanMatchedEntity(0);
                      sub_2404FA028(&qword_256FFEE68, type metadata accessor for ContextProtoSpanMatchedEntity, (uint64_t)&protocol conformance descriptor for ContextProtoSpanMatchedEntity);
                      sub_2408E5A5C();
                    }
                    if (*(_BYTE *)(v5 + 8) == 1)
                      sub_2408E59D8();
                    if (*(_BYTE *)(v5 + 24) == 1)
                      sub_2408E59D8();
                    if (*(_BYTE *)(v5 + 40) == 1)
                      sub_2408E59D8();
                    if (*(_BYTE *)(v5 + 56) == 1)
                      sub_2408E59D8();
                    if (*(_BYTE *)(v5 + 72) == 1)
                      sub_2408E59D8();
                    if (*(_BYTE *)(v5 + 88) == 1)
                      sub_2408E59D8();
                    if (*(_BYTE *)(v5 + 104) == 1)
                      sub_2408E59D8();
                    if (*(_BYTE *)(v5 + 120) == 1)
                      sub_2408E59D8();
                    if (*(_BYTE *)(v5 + 136) == 1)
                      sub_2408E59D8();
                    if (*(_QWORD *)(*(_QWORD *)(v5 + 144) + 16))
                    {
                      type metadata accessor for ContextProtoDynamicEnumerationEntity(0);
                      sub_2404FA028(&qword_257000F58, type metadata accessor for ContextProtoDynamicEnumerationEntity, (uint64_t)&protocol conformance descriptor for ContextProtoDynamicEnumerationEntity);
                      sub_2408E5A5C();
                    }
                    if (*(_BYTE *)(v5 + 152) == 1)
                      sub_2408E59D8();
                    type metadata accessor for ContextProtoQueryDecorationOutput(0);
                    return sub_2408E578C();
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_240701FE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t DecorationToolRetrievalResponse;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t DecorationOutput;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA470);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
  v9 = *(_QWORD *)(DecorationToolRetrievalResponse - 8);
  MEMORY[0x24BDAC7A8](DecorationToolRetrievalResponse);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  DecorationOutput = type metadata accessor for ContextProtoQueryDecorationOutput(0);
  sub_2403A9210(a1 + *(int *)(DecorationOutput + 96), (uint64_t)v7, &qword_256FFA470);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, DecorationToolRetrievalResponse) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA470);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse);
  sub_2404FA028(&qword_257000CA0, type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse, (uint64_t)&protocol conformance descriptor for ContextProtoQueryDecorationToolRetrievalResponse);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse);
}

uint64_t ContextProtoQueryDecorationOutput.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ContextProtoQueryDecorationOutput, &qword_25700C148, (uint64_t)&protocol conformance descriptor for ContextProtoQueryDecorationOutput);
}

unint64_t sub_240702180()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_24070219C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 100);
  v5 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_2407021DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 100);
  v5 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t sub_24070221C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ContextProtoQueryDecorationOutput.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_240702230(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ContextProtoQueryDecorationOutput.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_240702244()
{
  sub_2404FA028(&qword_25700C4A8, type metadata accessor for ContextProtoQueryDecorationOutput, (uint64_t)&protocol conformance descriptor for ContextProtoQueryDecorationOutput);
  return sub_2408E5828();
}

uint64_t sub_240702294@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9830, (uint64_t)qword_25700BF68, a1);
}

uint64_t sub_2407022B0()
{
  sub_2404FA028(&qword_25700C328, type metadata accessor for ContextProtoQueryDecorationOutput, (uint64_t)&protocol conformance descriptor for ContextProtoQueryDecorationOutput);
  return sub_2408E599C();
}

uint64_t sub_2407022F0()
{
  sub_2404FA028(&qword_25700C328, type metadata accessor for ContextProtoQueryDecorationOutput, (uint64_t)&protocol conformance descriptor for ContextProtoQueryDecorationOutput);
  return sub_2408E59A8();
}

unint64_t static ContextProtoQueryDecorationInput.protoMessageName.getter()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_240702360()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  unint64_t v10;
  _QWORD *v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v25;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_25700BF80);
  __swift_project_value_buffer(v0, (uint64_t)qword_25700BF80);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_240909840;
  v5 = v25 + v4;
  v6 = v25 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v25 + v4) = 1;
  *(_QWORD *)v6 = "query";
  *(_QWORD *)(v6 + 8) = 5;
  *(_BYTE *)(v6 + 16) = 2;
  v7 = *MEMORY[0x24BE5C318];
  v8 = sub_2408E5A74();
  v9 = *(void (**)(void))(*(_QWORD *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  v10 = v5 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v3) = 8;
  *(_QWORD *)v10 = "requestId";
  *(_QWORD *)(v10 + 8) = 9;
  *(_BYTE *)(v10 + 16) = 2;
  v9();
  v11 = (_QWORD *)(v5 + 2 * v3);
  v12 = (char *)v11 + *(int *)(v1 + 48);
  *v11 = 9;
  *(_QWORD *)v12 = "caller";
  *((_QWORD *)v12 + 1) = 6;
  v12[16] = 2;
  v9();
  v13 = (_QWORD *)(v5 + 3 * v3);
  v14 = (char *)v13 + *(int *)(v1 + 48);
  *v13 = 2;
  *(_QWORD *)v14 = "maxToolsReturned";
  *((_QWORD *)v14 + 1) = 16;
  v14[16] = 2;
  v9();
  v15 = (_QWORD *)(v5 + 4 * v3);
  v16 = (char *)v15 + *(int *)(v1 + 48);
  *v15 = 3;
  *(_QWORD *)v16 = "maxSpansReturned";
  *((_QWORD *)v16 + 1) = 16;
  v16[16] = 2;
  v9();
  v17 = (_QWORD *)(v5 + 5 * v3);
  v18 = (char *)v17 + *(int *)(v1 + 48);
  *v17 = 4;
  *(_QWORD *)v18 = "maxContextReturned";
  *((_QWORD *)v18 + 1) = 18;
  v18[16] = 2;
  v9();
  v19 = (_QWORD *)(v5 + 6 * v3);
  v20 = (char *)v19 + *(int *)(v1 + 48);
  *v19 = 5;
  *(_QWORD *)v20 = "spanTypeFilters";
  *((_QWORD *)v20 + 1) = 15;
  v20[16] = 2;
  v9();
  v21 = (_QWORD *)(v5 + 7 * v3);
  v22 = (char *)v21 + *(int *)(v1 + 48);
  *v21 = 6;
  *(_QWORD *)v22 = "spanTypeFiltersIsPresent";
  *((_QWORD *)v22 + 1) = 24;
  v22[16] = 2;
  v9();
  v23 = v5 + 8 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + 8 * v3) = 7;
  *(_QWORD *)v23 = "requiredContextReturned";
  *(_QWORD *)(v23 + 8) = 23;
  *(_BYTE *)(v23 + 16) = 2;
  v9();
  return sub_2408E5A80();
}

uint64_t static ContextProtoQueryDecorationInput._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9838, (uint64_t)qword_25700BF80, a1);
}

uint64_t ContextProtoQueryDecorationInput.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_2408E5858();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_2408E593C();
          break;
        case 2:
        case 3:
        case 4:
          sub_2408E58F4();
          break;
        case 5:
          type metadata accessor for ToolKitProtoTypeIdentifier(0);
          sub_2404FA028(&qword_25700C150, type metadata accessor for ToolKitProtoTypeIdentifier, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeIdentifier);
          sub_2408E5960();
          break;
        case 6:
          sub_2408E5888();
          break;
        case 7:
          sub_2408E587C();
          break;
        case 8:
          sub_2408E5930();
          break;
        case 9:
          sub_24040B328();
          sub_2408E58A0();
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t ContextProtoQueryDecorationInput.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = *(_QWORD *)v0;
  v3 = *(_QWORD *)(v0 + 8);
  v4 = HIBYTE(v3) & 0xF;
  if ((v3 & 0x2000000000000000) == 0)
    v4 = *(_QWORD *)v0 & 0xFFFFFFFFFFFFLL;
  if (!v4 || (result = sub_2408E5A38(), !v1))
  {
    if ((*(_BYTE *)(v0 + 64) & 1) == 0)
      result = sub_2408E5A14();
    if (!v1)
    {
      if ((*(_BYTE *)(v0 + 80) & 1) == 0)
        sub_2408E5A14();
      if ((*(_BYTE *)(v0 + 96) & 1) == 0)
        sub_2408E5A14();
      if (*(_QWORD *)(*(_QWORD *)(v0 + 24) + 16))
      {
        type metadata accessor for ToolKitProtoTypeIdentifier(0);
        sub_2404FA028(&qword_25700C150, type metadata accessor for ToolKitProtoTypeIdentifier, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeIdentifier);
        sub_2408E5A5C();
      }
      if (*(_BYTE *)(v0 + 32) == 1)
        sub_2408E59D8();
      if (*(_BYTE *)(v0 + 97) != 2)
        sub_2408E59D8();
      if (*(_QWORD *)(v0 + 48))
        sub_2408E5A38();
      if (*(_BYTE *)(v0 + 16))
      {
        sub_24040B328();
        sub_2408E59E4();
      }
      type metadata accessor for ContextProtoQueryDecorationInput(0);
      return sub_2408E578C();
    }
  }
  return result;
}

uint64_t ContextProtoQueryDecorationInput.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ContextProtoQueryDecorationInput, &qword_25700C158, (uint64_t)&protocol conformance descriptor for ContextProtoQueryDecorationInput);
}

uint64_t sub_240702AB4@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;

  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = 0;
  *(_BYTE *)(a1 + 64) = 1;
  *(_QWORD *)(a1 + 72) = 0;
  *(_BYTE *)(a1 + 80) = 1;
  *(_QWORD *)(a1 + 88) = 0;
  *(_WORD *)(a1 + 96) = 513;
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  *(_BYTE *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = MEMORY[0x24BEE4AF8];
  *(_BYTE *)(a1 + 32) = 0;
  return result;
}

unint64_t sub_240702B1C()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_240702B38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 52);
  v5 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_240702B78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 52);
  v5 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t (*sub_240702BB8())()
{
  return nullsub_1;
}

uint64_t sub_240702BCC()
{
  return ContextProtoQueryDecorationInput.decodeMessage<A>(decoder:)();
}

uint64_t sub_240702BE0()
{
  return ContextProtoQueryDecorationInput.traverse<A>(visitor:)();
}

uint64_t sub_240702BF4()
{
  sub_2404FA028(&qword_25700C4A0, type metadata accessor for ContextProtoQueryDecorationInput, (uint64_t)&protocol conformance descriptor for ContextProtoQueryDecorationInput);
  return sub_2408E5828();
}

uint64_t sub_240702C44@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9838, (uint64_t)qword_25700BF80, a1);
}

uint64_t sub_240702C60()
{
  sub_2404FA028(&qword_25700C340, type metadata accessor for ContextProtoQueryDecorationInput, (uint64_t)&protocol conformance descriptor for ContextProtoQueryDecorationInput);
  return sub_2408E599C();
}

uint64_t sub_240702CA0()
{
  sub_2404FA028(&qword_25700C340, type metadata accessor for ContextProtoQueryDecorationInput, (uint64_t)&protocol conformance descriptor for ContextProtoQueryDecorationInput);
  return sub_2408E59A8();
}

unint64_t static ContextProtoDynamicEnumerationEntity.protoMessageName.getter()
{
  return 0xD000000000000020;
}

uint64_t sub_240702D10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_25700BF98);
  __swift_project_value_buffer(v0, (uint64_t)qword_25700BF98);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "identifier";
  *(_QWORD *)(v7 + 8) = 10;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "parameterTypeInstance";
  *((_QWORD *)v11 + 1) = 21;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 3;
  *(_QWORD *)v12 = "typedValue";
  *(_QWORD *)(v12 + 8) = 10;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ContextProtoDynamicEnumerationEntity._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9840, (uint64_t)qword_25700BF98, a1);
}

uint64_t ContextProtoDynamicEnumerationEntity.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 3:
          sub_240448BC4(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for ContextProtoDynamicEnumerationEntity, type metadata accessor for ToolKitProtoTypedValue, &qword_256FFE7E8, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
          break;
        case 2:
          sub_240448B20(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for ContextProtoDynamicEnumerationEntity, type metadata accessor for ToolKitProtoTypeInstance, &qword_257000CB8, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance);
          break;
        case 1:
          sub_2408E593C();
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t ContextProtoDynamicEnumerationEntity.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;

  v8 = v3[1];
  v9 = HIBYTE(v8) & 0xF;
  if ((v8 & 0x2000000000000000) == 0)
    v9 = *v3 & 0xFFFFFFFFFFFFLL;
  if (!v9 || (result = sub_2408E5A38(), !v4))
  {
    result = sub_2407030C4((uint64_t)v3, a1, a2, a3);
    if (!v4)
    {
      sub_240703238((uint64_t)v3, a1, a2, a3);
      type metadata accessor for ContextProtoDynamicEnumerationEntity(0);
      return sub_2408E578C();
    }
  }
  return result;
}

uint64_t sub_2407030C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ToolKitProtoTypeInstance(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ContextProtoDynamicEnumerationEntity(0);
  sub_2403A9210(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_256FFA428);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA428);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ToolKitProtoTypeInstance);
  sub_2404FA028(&qword_257000CB8, type metadata accessor for ToolKitProtoTypeInstance, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeInstance);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoTypeInstance);
}

uint64_t sub_240703238(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ToolKitProtoTypedValue(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ContextProtoDynamicEnumerationEntity(0);
  sub_2403A9210(a1 + *(int *)(v12 + 24), (uint64_t)v7, &qword_256FFA3A8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFA3A8);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ToolKitProtoTypedValue);
  sub_2404FA028(&qword_256FFE7E8, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoTypedValue);
}

uint64_t ContextProtoDynamicEnumerationEntity.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ContextProtoDynamicEnumerationEntity, &qword_25700C160, (uint64_t)&protocol conformance descriptor for ContextProtoDynamicEnumerationEntity);
}

uint64_t sub_2407033CC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t result;

  v4 = (char *)a2 + *(int *)(a1 + 20);
  v5 = type metadata accessor for ToolKitProtoTypeInstance(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = (char *)a2 + *(int *)(a1 + 24);
  v7 = type metadata accessor for ToolKitProtoTypedValue(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a2 = 0;
  a2[1] = 0xE000000000000000;
  return result;
}

unint64_t sub_240703460()
{
  return 0xD000000000000020;
}

uint64_t sub_24070347C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ContextProtoDynamicEnumerationEntity.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_240703490(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ContextProtoDynamicEnumerationEntity.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_2407034A4()
{
  sub_2404FA028(&qword_25700C498, type metadata accessor for ContextProtoDynamicEnumerationEntity, (uint64_t)&protocol conformance descriptor for ContextProtoDynamicEnumerationEntity);
  return sub_2408E5828();
}

uint64_t sub_2407034F4@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9840, (uint64_t)qword_25700BF98, a1);
}

uint64_t sub_240703510()
{
  sub_2404FA028(&qword_257000F58, type metadata accessor for ContextProtoDynamicEnumerationEntity, (uint64_t)&protocol conformance descriptor for ContextProtoDynamicEnumerationEntity);
  return sub_2408E599C();
}

uint64_t sub_240703550()
{
  sub_2404FA028(&qword_257000F58, type metadata accessor for ContextProtoDynamicEnumerationEntity, (uint64_t)&protocol conformance descriptor for ContextProtoDynamicEnumerationEntity);
  return sub_2408E59A8();
}

unint64_t static ContextProtoRetrievedTool.protoMessageName.getter()
{
  return 0xD000000000000015;
}

uint64_t sub_2407035C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_25700BFB0);
  __swift_project_value_buffer(v0, (uint64_t)qword_25700BFB0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408E8FE0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "definition";
  *(_QWORD *)(v7 + 8) = 10;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "similarityScore";
  *(_QWORD *)(v11 + 8) = 15;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "sampleInvocations";
  *((_QWORD *)v13 + 1) = 17;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "stage";
  *((_QWORD *)v15 + 1) = 5;
  v15[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ContextProtoRetrievedTool._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9848, (uint64_t)qword_25700BFB0, a1);
}

uint64_t ContextProtoRetrievedTool.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;

  v5 = v3;
  result = sub_2408E5858();
  v11 = v4;
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          v12 = v11;
          sub_240450F68(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for ContextProtoRetrievedTool, type metadata accessor for ContextProtoRetrievedTool.Definition, &qword_25700C388, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedTool.Definition);
          goto LABEL_5;
        case 2:
          v12 = v11;
          sub_2408E58D0();
          goto LABEL_5;
        case 3:
          type metadata accessor for ContextProtoSampleInvocation(0);
          sub_2404FA028(&qword_25700C168, type metadata accessor for ContextProtoSampleInvocation, (uint64_t)&protocol conformance descriptor for ContextProtoSampleInvocation);
          v12 = v11;
          sub_2408E5960();
          goto LABEL_5;
        case 4:
          sub_24040B25C();
          v12 = v11;
          sub_2408E58A0();
LABEL_5:
          v11 = v12;
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t ContextProtoRetrievedTool.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  result = sub_240703A74(v3, a1, a2, a3);
  if (!v4)
  {
    if (*(float *)v3 != 0.0)
      sub_2408E59FC();
    if (*(_QWORD *)(*(_QWORD *)(v3 + 8) + 16))
    {
      type metadata accessor for ContextProtoSampleInvocation(0);
      sub_2404FA028(&qword_25700C168, type metadata accessor for ContextProtoSampleInvocation, (uint64_t)&protocol conformance descriptor for ContextProtoSampleInvocation);
      sub_2408E5A5C();
    }
    if (*(_BYTE *)(v3 + 16))
    {
      sub_24040B25C();
      sub_2408E59E4();
    }
    type metadata accessor for ContextProtoRetrievedTool(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_240703A74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB050);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ContextProtoRetrievedTool.Definition(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ContextProtoRetrievedTool(0);
  sub_2403A9210(a1 + *(int *)(v12 + 28), (uint64_t)v7, &qword_256FFB050);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFB050);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ContextProtoRetrievedTool.Definition);
  sub_2404FA028(&qword_25700C388, type metadata accessor for ContextProtoRetrievedTool.Definition, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedTool.Definition);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ContextProtoRetrievedTool.Definition);
}

uint64_t ContextProtoRetrievedTool.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ContextProtoRetrievedTool, &qword_25700C170, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedTool);
}

uint64_t sub_240703C08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = a2 + *(int *)(a1 + 28);
  v4 = type metadata accessor for ContextProtoRetrievedTool.Definition(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_DWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = MEMORY[0x24BEE4AF8];
  *(_BYTE *)(a2 + 16) = 0;
  return result;
}

unint64_t sub_240703C7C()
{
  return 0xD000000000000015;
}

uint64_t sub_240703C98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ContextProtoRetrievedTool.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_240703CAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ContextProtoRetrievedTool.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_240703CC0()
{
  sub_2404FA028(&qword_25700C490, type metadata accessor for ContextProtoRetrievedTool, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedTool);
  return sub_2408E5828();
}

uint64_t sub_240703D10@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9848, (uint64_t)qword_25700BFB0, a1);
}

uint64_t sub_240703D2C()
{
  sub_2404FA028(&qword_256FFEE78, type metadata accessor for ContextProtoRetrievedTool, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedTool);
  return sub_2408E599C();
}

uint64_t sub_240703D6C()
{
  sub_2404FA028(&qword_256FFEE78, type metadata accessor for ContextProtoRetrievedTool, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedTool);
  return sub_2408E59A8();
}

uint64_t sub_240703DC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_25700BFC8);
  __swift_project_value_buffer(v0, (uint64_t)qword_25700BFC8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 0;
  *(_QWORD *)v7 = "one";
  *(_QWORD *)(v7 + 8) = 3;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 1;
  *(_QWORD *)v11 = "two";
  *((_QWORD *)v11 + 1) = 3;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 2;
  *(_QWORD *)v12 = "three";
  *(_QWORD *)(v12 + 8) = 5;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ContextProtoRetrievedTool.Stage._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9850, (uint64_t)qword_25700BFC8, a1);
}

uint64_t sub_240703F6C@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9850, (uint64_t)qword_25700BFC8, a1);
}

uint64_t sub_240703F8C()
{
  uint64_t result;

  result = sub_2408E5D50();
  qword_25700BFE0 = 0xD000000000000015;
  *(_QWORD *)algn_25700BFE8 = 0x80000002409286E0;
  return result;
}

uint64_t static ContextProtoRetrievedTool.Definition.protoMessageName.getter()
{
  uint64_t v0;

  if (qword_256FF9858 != -1)
    swift_once();
  v0 = qword_25700BFE0;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_240704058()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_25700BFF0);
  __swift_project_value_buffer(v0, (uint64_t)qword_25700BFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408E8FE0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "implementation";
  *(_QWORD *)(v7 + 8) = 14;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "assistantSchema";
  *(_QWORD *)(v11 + 8) = 15;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "entitySetter";
  *((_QWORD *)v13 + 1) = 12;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "clientAction";
  *((_QWORD *)v15 + 1) = 12;
  v15[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ContextProtoRetrievedTool.Definition._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9860, (uint64_t)qword_25700BFF0, a1);
}

uint64_t ContextProtoRetrievedTool.Definition.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_240704328(v5, a1, a2, a3);
          break;
        case 2:
          sub_240704768(v5, a1, a2, a3);
          break;
        case 3:
          sub_240704BAC(v5, a1, a2, a3);
          break;
        case 4:
          sub_240704FF0(v5, a1, a2, a3);
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t sub_240704328(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB058);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA468);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFB058);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFB058);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload())
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
      v30 = v44;
      v29 = v45;
    }
    else
    {
      sub_2403A97FC((uint64_t)v24, &qword_256FFA468);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoToolDefinition.Version1);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoToolDefinition.Version1);
      v30 = v44;
      v25(v24, 0, 1, v44);
      v29 = v45;
    }
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFE778, type metadata accessor for ToolKitProtoToolDefinition.Version1, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_256FFA468);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_256FFA468);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_256FFA468);
    return sub_2403A97FC((uint64_t)v33, &qword_256FFA468);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoToolDefinition.Version1);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_256FFA468);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFB058);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoToolDefinition.Version1);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_240704768(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB058);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C548);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFB058);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFB058);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_2403A97FC((uint64_t)v24, &qword_25700C548);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoAssistantSchemaIdentifier);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoAssistantSchemaIdentifier);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_25700C540, type metadata accessor for ToolKitProtoAssistantSchemaIdentifier, (uint64_t)&protocol conformance descriptor for ToolKitProtoAssistantSchemaIdentifier);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_25700C548);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_25700C548);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_25700C548);
    return sub_2403A97FC((uint64_t)v33, &qword_25700C548);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoAssistantSchemaIdentifier);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_25700C548);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFB058);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoAssistantSchemaIdentifier);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_240704BAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB058);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA468);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFB058);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFB058);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_2403A97FC((uint64_t)v24, &qword_256FFA468);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoToolDefinition.Version1);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoToolDefinition.Version1);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFE778, type metadata accessor for ToolKitProtoToolDefinition.Version1, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_256FFA468);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_256FFA468);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_256FFA468);
    return sub_2403A97FC((uint64_t)v33, &qword_256FFA468);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoToolDefinition.Version1);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_256FFA468);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFB058);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoToolDefinition.Version1);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t sub_240704FF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a3;
  v47 = a4;
  v48 = a2;
  v5 = type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v40 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v43 = &v36[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB058);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v36[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v36[-v18];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA468);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v41 = &v36[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  v24 = &v36[-v23];
  v42 = v6;
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v44 = v5;
  v25(&v36[-v23], 1, 1, v5);
  v39 = a1;
  sub_2403A9210(a1, (uint64_t)v12, &qword_256FFB058);
  v38 = v14;
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  v27 = v26;
  if (v26 == 1)
  {
    sub_2403A97FC((uint64_t)v12, &qword_256FFB058);
    v28 = v13;
    v30 = v44;
    v29 = v45;
  }
  else
  {
    v37 = v26;
    v31 = (uint64_t)v43;
    sub_2403A91CC((uint64_t)v12, (uint64_t)v19, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
    sub_2403A91CC((uint64_t)v19, (uint64_t)v17, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
    v28 = v13;
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      sub_2403A97FC((uint64_t)v24, &qword_256FFA468);
      sub_2403A91CC((uint64_t)v17, v31, type metadata accessor for ToolKitProtoToolDefinition.Version1);
      sub_2403A91CC(v31, (uint64_t)v24, type metadata accessor for ToolKitProtoToolDefinition.Version1);
      v30 = v44;
      v25(v24, 0, 1, v44);
    }
    else
    {
      sub_240388AE4((uint64_t)v17, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
      v30 = v44;
    }
    v29 = v45;
    v27 = v37;
  }
  sub_2404FA028(&qword_256FFE778, type metadata accessor for ToolKitProtoToolDefinition.Version1, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1);
  sub_2408E596C();
  if (v29)
    return sub_2403A97FC((uint64_t)v24, &qword_256FFA468);
  v33 = v41;
  sub_2403A9210((uint64_t)v24, (uint64_t)v41, &qword_256FFA468);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v33, 1, v30) == 1)
  {
    sub_2403A97FC((uint64_t)v24, &qword_256FFA468);
    return sub_2403A97FC((uint64_t)v33, &qword_256FFA468);
  }
  else
  {
    v34 = v40;
    sub_2403A91CC((uint64_t)v33, (uint64_t)v40, type metadata accessor for ToolKitProtoToolDefinition.Version1);
    if (v27 != 1)
      sub_2408E5864();
    sub_2403A97FC((uint64_t)v24, &qword_256FFA468);
    v35 = v39;
    sub_2403A97FC(v39, &qword_256FFB058);
    sub_2403A91CC((uint64_t)v34, v35, type metadata accessor for ToolKitProtoToolDefinition.Version1);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v28);
  }
}

uint64_t ContextProtoRetrievedTool.Definition.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB058);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(v0, (uint64_t)v3, &qword_256FFB058);
  v4 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v3, 1, v4) != 1)
  {
    v5 = (char *)&loc_240705500 + 4 * byte_2409098BD[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  type metadata accessor for ContextProtoRetrievedTool.Definition(0);
  return sub_2408E578C();
}

uint64_t sub_2407055CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB058);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFB058);
  v8 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFB058);
    __break(1u);
  }
  else if (!swift_getEnumCaseMultiPayload())
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoToolDefinition.Version1);
    sub_2404FA028(&qword_256FFE778, type metadata accessor for ToolKitProtoToolDefinition.Version1, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoToolDefinition.Version1);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
  __break(1u);
  return result;
}

uint64_t sub_240705768(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB058);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoAssistantSchemaIdentifier(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFB058);
  v8 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFB058);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoAssistantSchemaIdentifier);
    sub_2404FA028(&qword_25700C540, type metadata accessor for ToolKitProtoAssistantSchemaIdentifier, (uint64_t)&protocol conformance descriptor for ToolKitProtoAssistantSchemaIdentifier);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoAssistantSchemaIdentifier);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
  __break(1u);
  return result;
}

uint64_t sub_240705908(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB058);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFB058);
  v8 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFB058);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoToolDefinition.Version1);
    sub_2404FA028(&qword_256FFE778, type metadata accessor for ToolKitProtoToolDefinition.Version1, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoToolDefinition.Version1);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
  __break(1u);
  return result;
}

uint64_t sub_240705AA8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB058);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2403A9210(a1, (uint64_t)v4, &qword_256FFB058);
  v8 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v4, &qword_256FFB058);
    __break(1u);
  }
  else if (swift_getEnumCaseMultiPayload() == 3)
  {
    sub_2403A91CC((uint64_t)v4, (uint64_t)v7, type metadata accessor for ToolKitProtoToolDefinition.Version1);
    sub_2404FA028(&qword_256FFE778, type metadata accessor for ToolKitProtoToolDefinition.Version1, (uint64_t)&protocol conformance descriptor for ToolKitProtoToolDefinition.Version1);
    sub_2408E5A68();
    return sub_240388AE4((uint64_t)v7, type metadata accessor for ToolKitProtoToolDefinition.Version1);
  }
  result = sub_240388AE4((uint64_t)v4, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
  __break(1u);
  return result;
}

uint64_t ContextProtoRetrievedTool.Definition.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ContextProtoRetrievedTool.Definition, &qword_25700C178, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedTool.Definition);
}

uint64_t sub_240705C68@<X0>(uint64_t a1@<X8>)
{
  return sub_2404C7694(type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum, a1);
}

uint64_t sub_240705C74()
{
  uint64_t v0;

  if (qword_256FF9858 != -1)
    swift_once();
  v0 = qword_25700BFE0;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_240705CD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ContextProtoRetrievedTool.Definition.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_240705CE4()
{
  return ContextProtoRetrievedTool.Definition.traverse<A>(visitor:)();
}

uint64_t sub_240705CF8()
{
  sub_2404FA028(&qword_25700C488, type metadata accessor for ContextProtoRetrievedTool.Definition, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedTool.Definition);
  return sub_2408E5828();
}

uint64_t sub_240705D48@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9860, (uint64_t)qword_25700BFF0, a1);
}

uint64_t sub_240705D64()
{
  sub_2404FA028(&qword_25700C388, type metadata accessor for ContextProtoRetrievedTool.Definition, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedTool.Definition);
  return sub_2408E599C();
}

uint64_t sub_240705DA4()
{
  sub_2404FA028(&qword_25700C388, type metadata accessor for ContextProtoRetrievedTool.Definition, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedTool.Definition);
  return sub_2408E59A8();
}

unint64_t static ContextProtoSampleInvocation.protoMessageName.getter()
{
  return 0xD000000000000018;
}

uint64_t sub_240705E14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_25700C008);
  __swift_project_value_buffer(v0, (uint64_t)qword_25700C008);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "invocationString";
  *(_QWORD *)(v7 + 8) = 16;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "score";
  *((_QWORD *)v11 + 1) = 5;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ContextProtoSampleInvocation._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9868, (uint64_t)qword_25700C008, a1);
}

uint64_t ContextProtoSampleInvocation.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_2408E5858();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2)
      {
        sub_2408E58D0();
      }
      else if (result == 1)
      {
        sub_2408E593C();
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t ContextProtoSampleInvocation.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *(_QWORD *)(v0 + 8);
  v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0)
    v3 = *(_QWORD *)v0 & 0xFFFFFFFFFFFFLL;
  if (!v3 || (result = sub_2408E5A38(), !v1))
  {
    if (*(float *)(v0 + 16) == 0.0 || (result = sub_2408E59FC(), !v1))
    {
      type metadata accessor for ContextProtoSampleInvocation(0);
      return sub_2408E578C();
    }
  }
  return result;
}

uint64_t ContextProtoSampleInvocation.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ContextProtoSampleInvocation, &qword_25700C180, (uint64_t)&protocol conformance descriptor for ContextProtoSampleInvocation);
}

uint64_t sub_24070610C@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;

  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  *(_DWORD *)(a1 + 16) = 0;
  return result;
}

unint64_t sub_240706140()
{
  return 0xD000000000000018;
}

uint64_t sub_24070615C()
{
  return ContextProtoSampleInvocation.decodeMessage<A>(decoder:)();
}

uint64_t sub_240706170()
{
  return ContextProtoSampleInvocation.traverse<A>(visitor:)();
}

uint64_t sub_240706184()
{
  sub_2404FA028(&qword_25700C480, type metadata accessor for ContextProtoSampleInvocation, (uint64_t)&protocol conformance descriptor for ContextProtoSampleInvocation);
  return sub_2408E5828();
}

uint64_t sub_2407061D4@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9868, (uint64_t)qword_25700C008, a1);
}

uint64_t sub_2407061F0()
{
  sub_2404FA028(&qword_25700C168, type metadata accessor for ContextProtoSampleInvocation, (uint64_t)&protocol conformance descriptor for ContextProtoSampleInvocation);
  return sub_2408E599C();
}

uint64_t sub_240706230()
{
  sub_2404FA028(&qword_25700C168, type metadata accessor for ContextProtoSampleInvocation, (uint64_t)&protocol conformance descriptor for ContextProtoSampleInvocation);
  return sub_2408E59A8();
}

unint64_t static ContextProtoToolRetrievalType.protoMessageName.getter()
{
  return 0xD000000000000019;
}

uint64_t sub_2407062A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_25700C020);
  __swift_project_value_buffer(v0, (uint64_t)qword_25700C020);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "identifier";
  *(_QWORD *)(v7 + 8) = 10;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "definition";
  *((_QWORD *)v11 + 1) = 10;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ContextProtoToolRetrievalType._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9870, (uint64_t)qword_25700C020, a1);
}

uint64_t ContextProtoToolRetrievalType.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      if (result == 2)
      {
        sub_240448B20(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for ContextProtoToolRetrievalType, type metadata accessor for ToolKitProtoTypeDefinition.Version1, &qword_25700C530, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeDefinition.Version1);
      }
      else if (result == 1)
      {
        type metadata accessor for ToolKitProtoTypeIdentifier(0);
        sub_2404FA028(&qword_25700C150, type metadata accessor for ToolKitProtoTypeIdentifier, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeIdentifier);
        sub_2408E596C();
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t ContextProtoToolRetrievalType.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  result = sub_2404533C8(v3, a1, a2, a3, &qword_256FFA7F8, type metadata accessor for ToolKitProtoTypeIdentifier, &qword_25700C150, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeIdentifier);
  if (!v4)
  {
    sub_240706600(v3, a1, a2, a3);
    type metadata accessor for ContextProtoToolRetrievalType(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_240706600(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB060);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ToolKitProtoTypeDefinition.Version1(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ContextProtoToolRetrievalType(0);
  sub_2403A9210(a1 + *(int *)(v12 + 20), (uint64_t)v7, &qword_256FFB060);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFB060);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ToolKitProtoTypeDefinition.Version1);
  sub_2404FA028(&qword_25700C530, type metadata accessor for ToolKitProtoTypeDefinition.Version1, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypeDefinition.Version1);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ToolKitProtoTypeDefinition.Version1);
}

uint64_t ContextProtoToolRetrievalType.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ContextProtoToolRetrievalType, &qword_25700C188, (uint64_t)&protocol conformance descriptor for ContextProtoToolRetrievalType);
}

uint64_t sub_240706794@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = type metadata accessor for ToolKitProtoTypeIdentifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a2, 1, 1, v4);
  v5 = a2 + *(int *)(a1 + 20);
  v6 = type metadata accessor for ToolKitProtoTypeDefinition.Version1(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  return _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
}

unint64_t sub_240706818()
{
  return 0xD000000000000019;
}

uint64_t sub_240706834(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ContextProtoToolRetrievalType.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_240706848(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ContextProtoToolRetrievalType.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_24070685C()
{
  sub_2404FA028(&qword_25700C478, type metadata accessor for ContextProtoToolRetrievalType, (uint64_t)&protocol conformance descriptor for ContextProtoToolRetrievalType);
  return sub_2408E5828();
}

uint64_t sub_2407068AC@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9870, (uint64_t)qword_25700C020, a1);
}

uint64_t sub_2407068C8()
{
  sub_2404FA028(&qword_256FFEE80, type metadata accessor for ContextProtoToolRetrievalType, (uint64_t)&protocol conformance descriptor for ContextProtoToolRetrievalType);
  return sub_2408E599C();
}

uint64_t sub_240706908()
{
  sub_2404FA028(&qword_256FFEE80, type metadata accessor for ContextProtoToolRetrievalType, (uint64_t)&protocol conformance descriptor for ContextProtoToolRetrievalType);
  return sub_2408E59A8();
}

unint64_t static ContextProtoToolQuery.protoMessageName.getter()
{
  return 0xD000000000000011;
}

uint64_t sub_240706978(uint64_t a1)
{
  return sub_240706998(a1, qword_25700C038, (uint64_t)"query", (uint64_t)"appBundleIds", 12);
}

uint64_t sub_240706998(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(void);
  char *v18;

  v7 = sub_2408E5A98();
  __swift_allocate_value_buffer(v7, a2);
  __swift_project_value_buffer(v7, (uint64_t)a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 72);
  v11 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_2408EADC0;
  v13 = (_QWORD *)(v12 + v11);
  v14 = v12 + v11 + *(int *)(v8 + 48);
  *v13 = 1;
  *(_QWORD *)v14 = a3;
  *(_QWORD *)(v14 + 8) = 5;
  *(_BYTE *)(v14 + 16) = 2;
  v15 = *MEMORY[0x24BE5C318];
  v16 = sub_2408E5A74();
  v17 = *(void (**)(void))(*(_QWORD *)(v16 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v17)(v14, v15, v16);
  v18 = (char *)v13 + v10 + *(int *)(v8 + 48);
  *(_QWORD *)((char *)v13 + v10) = 2;
  *(_QWORD *)v18 = a4;
  *((_QWORD *)v18 + 1) = a5;
  v18[16] = 2;
  v17();
  return sub_2408E5A80();
}

uint64_t static ContextProtoToolQuery._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9878, (uint64_t)qword_25700C038, a1);
}

uint64_t ContextProtoToolQuery.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_2408E5858();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2)
      {
        sub_2408E590C();
      }
      else if (result == 1)
      {
        sub_2408E593C();
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t ContextProtoToolQuery.traverse<A>(visitor:)()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = v0[1];
  v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0)
    v3 = *v0 & 0xFFFFFFFFFFFFLL;
  if (!v3 || (result = sub_2408E5A38(), !v1))
  {
    if (!*(_QWORD *)(v0[2] + 16) || (result = sub_2408E5A20(), !v1))
    {
      type metadata accessor for ContextProtoToolQuery(0);
      return sub_2408E578C();
    }
  }
  return result;
}

uint64_t ContextProtoToolQuery.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ContextProtoToolQuery, &qword_25700C190, (uint64_t)&protocol conformance descriptor for ContextProtoToolQuery);
}

uint64_t sub_240706C90@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;

  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = MEMORY[0x24BEE4AF8];
  return result;
}

unint64_t sub_240706CCC()
{
  return 0xD000000000000011;
}

uint64_t sub_240706CE8()
{
  return ContextProtoToolQuery.decodeMessage<A>(decoder:)();
}

uint64_t sub_240706CFC()
{
  return ContextProtoToolQuery.traverse<A>(visitor:)();
}

uint64_t sub_240706D10()
{
  sub_2404FA028(&qword_25700C470, type metadata accessor for ContextProtoToolQuery, (uint64_t)&protocol conformance descriptor for ContextProtoToolQuery);
  return sub_2408E5828();
}

uint64_t sub_240706D60@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9878, (uint64_t)qword_25700C038, a1);
}

uint64_t sub_240706D7C()
{
  sub_2404FA028(&qword_25700C3C0, type metadata accessor for ContextProtoToolQuery, (uint64_t)&protocol conformance descriptor for ContextProtoToolQuery);
  return sub_2408E599C();
}

uint64_t sub_240706DBC()
{
  sub_2404FA028(&qword_25700C3C0, type metadata accessor for ContextProtoToolQuery, (uint64_t)&protocol conformance descriptor for ContextProtoToolQuery);
  return sub_2408E59A8();
}

unint64_t static ContextProtoToolQueryOutput.protoMessageName.getter()
{
  return 0xD000000000000017;
}

uint64_t sub_240706E2C(uint64_t a1)
{
  return sub_24070927C(a1, qword_25700C050, (uint64_t)"definition", 10);
}

uint64_t static ContextProtoToolQueryOutput._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9880, (uint64_t)qword_25700C050, a1);
}

uint64_t ContextProtoToolQueryOutput.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_2408E5858();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 1)
      {
        type metadata accessor for ContextProtoRetrievedTool.Definition(0);
        sub_2404FA028(&qword_25700C388, type metadata accessor for ContextProtoRetrievedTool.Definition, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedTool.Definition);
        sub_2408E596C();
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t ContextProtoToolQueryOutput.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  result = sub_2404533C8(v3, a1, a2, a3, &qword_256FFB050, type metadata accessor for ContextProtoRetrievedTool.Definition, &qword_25700C388, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedTool.Definition);
  if (!v4)
  {
    type metadata accessor for ContextProtoToolQueryOutput(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t ContextProtoToolQueryOutput.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ContextProtoToolQueryOutput, &qword_25700C198, (uint64_t)&protocol conformance descriptor for ContextProtoToolQueryOutput);
}

uint64_t sub_240707004@<X0>(uint64_t a1@<X8>)
{
  return sub_2404C7694(type metadata accessor for ContextProtoRetrievedTool.Definition, a1);
}

unint64_t sub_240707010()
{
  return 0xD000000000000017;
}

uint64_t sub_24070702C()
{
  return ContextProtoToolQueryOutput.decodeMessage<A>(decoder:)();
}

uint64_t sub_240707040(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ContextProtoToolQueryOutput.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_240707054()
{
  sub_2404FA028(&qword_25700C468, type metadata accessor for ContextProtoToolQueryOutput, (uint64_t)&protocol conformance descriptor for ContextProtoToolQueryOutput);
  return sub_2408E5828();
}

uint64_t sub_2407070A4@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9880, (uint64_t)qword_25700C050, a1);
}

uint64_t sub_2407070C0()
{
  sub_2404FA028(&qword_256FFEF40, type metadata accessor for ContextProtoToolQueryOutput, (uint64_t)&protocol conformance descriptor for ContextProtoToolQueryOutput);
  return sub_2408E599C();
}

uint64_t sub_240707100()
{
  sub_2404FA028(&qword_256FFEF40, type metadata accessor for ContextProtoToolQueryOutput, (uint64_t)&protocol conformance descriptor for ContextProtoToolQueryOutput);
  return sub_2408E59A8();
}

unint64_t static ContextProtoQueryDecorationToolRetrievalResponse.protoMessageName.getter()
{
  return 0xD00000000000002CLL;
}

uint64_t sub_240707170()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  uint64_t v16;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_25700C068);
  __swift_project_value_buffer(v0, (uint64_t)qword_25700C068);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB740;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "originalSubQuery";
  *(_QWORD *)(v7 + 8) = 16;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "rewrittenQuery";
  *(_QWORD *)(v11 + 8) = 14;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "confidence";
  *((_QWORD *)v13 + 1) = 10;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "retrievedTools";
  *((_QWORD *)v15 + 1) = 14;
  v15[16] = 2;
  v10();
  v16 = v6 + 4 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + 4 * v3) = 5;
  *(_QWORD *)v16 = "types";
  *(_QWORD *)(v16 + 8) = 5;
  *(_BYTE *)(v16 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ContextProtoQueryDecorationToolRetrievalResponse._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9888, (uint64_t)qword_25700C068, a1);
}

uint64_t ContextProtoQueryDecorationToolRetrievalResponse.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = sub_2408E5858();
  v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
          v4 = v3;
          sub_2408E593C();
          goto LABEL_6;
        case 3:
          v4 = v3;
          sub_2408E58D0();
          goto LABEL_6;
        case 4:
          type metadata accessor for ContextProtoRetrievedTool(0);
          sub_2404FA028(&qword_256FFEE78, type metadata accessor for ContextProtoRetrievedTool, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedTool);
          goto LABEL_5;
        case 5:
          type metadata accessor for ContextProtoToolRetrievalType(0);
          sub_2404FA028(&qword_256FFEE80, type metadata accessor for ContextProtoToolRetrievalType, (uint64_t)&protocol conformance descriptor for ContextProtoToolRetrievalType);
LABEL_5:
          v4 = v3;
          sub_2408E5960();
LABEL_6:
          v3 = v4;
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t ContextProtoQueryDecorationToolRetrievalResponse.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  unint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v0 + 8);
  v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0)
    v3 = *(_QWORD *)v0 & 0xFFFFFFFFFFFFLL;
  if (!v3 || (result = sub_2408E5A38(), !v1))
  {
    v5 = *(_QWORD *)(v0 + 24);
    v6 = HIBYTE(v5) & 0xF;
    if ((v5 & 0x2000000000000000) == 0)
      v6 = *(_QWORD *)(v0 + 16) & 0xFFFFFFFFFFFFLL;
    if (!v6 || (result = sub_2408E5A38(), !v1))
    {
      if (*(float *)(v0 + 32) == 0.0 || (result = sub_2408E59FC(), !v1))
      {
        if (!*(_QWORD *)(*(_QWORD *)(v0 + 40) + 16)
          || (type metadata accessor for ContextProtoRetrievedTool(0),
              sub_2404FA028(&qword_256FFEE78, type metadata accessor for ContextProtoRetrievedTool, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedTool), result = sub_2408E5A5C(), !v1))
        {
          if (!*(_QWORD *)(*(_QWORD *)(v0 + 48) + 16)
            || (type metadata accessor for ContextProtoToolRetrievalType(0),
                sub_2404FA028(&qword_256FFEE80, type metadata accessor for ContextProtoToolRetrievalType, (uint64_t)&protocol conformance descriptor for ContextProtoToolRetrievalType), result = sub_2408E5A5C(), !v1))
          {
            type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
            return sub_2408E578C();
          }
        }
      }
    }
  }
  return result;
}

uint64_t ContextProtoQueryDecorationToolRetrievalResponse.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse, &qword_25700C1A0, (uint64_t)&protocol conformance descriptor for ContextProtoQueryDecorationToolRetrievalResponse);
}

unint64_t sub_2407076E8()
{
  return 0xD00000000000002CLL;
}

uint64_t sub_240707704()
{
  return ContextProtoQueryDecorationToolRetrievalResponse.decodeMessage<A>(decoder:)();
}

uint64_t sub_240707718()
{
  return ContextProtoQueryDecorationToolRetrievalResponse.traverse<A>(visitor:)();
}

uint64_t sub_24070772C()
{
  sub_2404FA028(&qword_25700C460, type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse, (uint64_t)&protocol conformance descriptor for ContextProtoQueryDecorationToolRetrievalResponse);
  return sub_2408E5828();
}

uint64_t sub_24070777C@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9888, (uint64_t)qword_25700C068, a1);
}

uint64_t sub_240707798()
{
  sub_2404FA028(&qword_257000CA0, type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse, (uint64_t)&protocol conformance descriptor for ContextProtoQueryDecorationToolRetrievalResponse);
  return sub_2408E599C();
}

uint64_t sub_2407077D8()
{
  sub_2404FA028(&qword_257000CA0, type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse, (uint64_t)&protocol conformance descriptor for ContextProtoQueryDecorationToolRetrievalResponse);
  return sub_2408E59A8();
}

unint64_t static ContextProtoSpanMatchedEntity.protoMessageName.getter()
{
  return 0xD000000000000019;
}

uint64_t sub_240707848()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_25700C080);
  __swift_project_value_buffer(v0, (uint64_t)qword_25700C080);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EADC0;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "typedValue";
  *(_QWORD *)(v7 + 8) = 10;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "matchMetadata";
  *((_QWORD *)v11 + 1) = 13;
  v11[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ContextProtoSpanMatchedEntity._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9890, (uint64_t)qword_25700C080, a1);
}

uint64_t ContextProtoSpanMatchedEntity.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      if (result == 2)
      {
        type metadata accessor for ContextProtoEntityMatch(0);
        sub_2404FA028(&qword_25700C1A8, type metadata accessor for ContextProtoEntityMatch, (uint64_t)&protocol conformance descriptor for ContextProtoEntityMatch);
        sub_2408E5960();
      }
      else if (result == 1)
      {
        sub_240448B20(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for ContextProtoSpanMatchedEntity, type metadata accessor for ToolKitProtoTypedValue, &qword_256FFE7E8, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t ContextProtoSpanMatchedEntity.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  result = sub_240707BD4(v3, a1, a2, a3, type metadata accessor for ContextProtoSpanMatchedEntity);
  if (!v4)
  {
    if (*(_QWORD *)(*(_QWORD *)v3 + 16))
    {
      type metadata accessor for ContextProtoEntityMatch(0);
      sub_2404FA028(&qword_25700C1A8, type metadata accessor for ContextProtoEntityMatch, (uint64_t)&protocol conformance descriptor for ContextProtoEntityMatch);
      sub_2408E5A5C();
    }
    type metadata accessor for ContextProtoSpanMatchedEntity(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_240707BD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD v16[4];

  v16[3] = a4;
  v16[1] = a3;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ToolKitProtoTypedValue(0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a5(0);
  sub_2403A9210(a1 + *(int *)(v14 + 20), (uint64_t)v9, &qword_256FFA3A8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
    return sub_2403A97FC((uint64_t)v9, &qword_256FFA3A8);
  sub_2403A91CC((uint64_t)v9, (uint64_t)v13, type metadata accessor for ToolKitProtoTypedValue);
  sub_2404FA028(&qword_256FFE7E8, type metadata accessor for ToolKitProtoTypedValue, (uint64_t)&protocol conformance descriptor for ToolKitProtoTypedValue);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v13, type metadata accessor for ToolKitProtoTypedValue);
}

uint64_t ContextProtoSpanMatchedEntity.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ContextProtoSpanMatchedEntity, &qword_25700C1B0, (uint64_t)&protocol conformance descriptor for ContextProtoSpanMatchedEntity);
}

uint64_t sub_240707D70@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  char *v3;
  uint64_t v4;
  uint64_t result;

  v3 = (char *)a2 + *(int *)(a1 + 20);
  v4 = type metadata accessor for ToolKitProtoTypedValue(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a2 = MEMORY[0x24BEE4AF8];
  return result;
}

unint64_t sub_240707DDC()
{
  return 0xD000000000000019;
}

uint64_t sub_240707DF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ContextProtoSpanMatchedEntity.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_240707E0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ContextProtoSpanMatchedEntity.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_240707E20()
{
  sub_2404FA028(&qword_25700C458, type metadata accessor for ContextProtoSpanMatchedEntity, (uint64_t)&protocol conformance descriptor for ContextProtoSpanMatchedEntity);
  return sub_2408E5828();
}

uint64_t sub_240707E70@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9890, (uint64_t)qword_25700C080, a1);
}

uint64_t sub_240707E8C()
{
  sub_2404FA028(&qword_256FFEE68, type metadata accessor for ContextProtoSpanMatchedEntity, (uint64_t)&protocol conformance descriptor for ContextProtoSpanMatchedEntity);
  return sub_2408E599C();
}

uint64_t sub_240707ECC()
{
  sub_2404FA028(&qword_256FFEE68, type metadata accessor for ContextProtoSpanMatchedEntity, (uint64_t)&protocol conformance descriptor for ContextProtoSpanMatchedEntity);
  return sub_2408E59A8();
}

unint64_t static ContextProtoEntityMatch.protoMessageName.getter()
{
  return 0xD000000000000013;
}

uint64_t sub_240707F3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;
  _QWORD *v25;
  char *v26;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_25700C098);
  __swift_project_value_buffer(v0, (uint64_t)qword_25700C098);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_240909850;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "sourceItemIdentifier";
  *(_QWORD *)(v7 + 8) = 20;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 3;
  *(_QWORD *)v11 = "entityName";
  *(_QWORD *)(v11 + 8) = 10;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 4;
  *(_QWORD *)v13 = "startIndex";
  *((_QWORD *)v13 + 1) = 10;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 5;
  *(_QWORD *)v15 = "endIndex";
  *((_QWORD *)v15 + 1) = 8;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 7;
  *(_QWORD *)v17 = "matchScore";
  *((_QWORD *)v17 + 1) = 10;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 8;
  *(_QWORD *)v19 = "matchProperties";
  *((_QWORD *)v19 + 1) = 15;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 9;
  *(_QWORD *)v21 = "matcherType";
  *((_QWORD *)v21 + 1) = 11;
  v21[16] = 2;
  v10();
  v22 = (_QWORD *)(v6 + 7 * v3);
  v23 = (char *)v22 + *(int *)(v1 + 48);
  *v22 = 10;
  *(_QWORD *)v23 = "originAppBundleId";
  *((_QWORD *)v23 + 1) = 17;
  v23[16] = 2;
  v10();
  v24 = v6 + 8 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + 8 * v3) = 11;
  *(_QWORD *)v24 = "userUtterance";
  *(_QWORD *)(v24 + 8) = 13;
  *(_BYTE *)(v24 + 16) = 2;
  v10();
  v25 = (_QWORD *)(v6 + 9 * v3);
  v26 = (char *)v25 + *(int *)(v1 + 48);
  *v25 = 12;
  *(_QWORD *)v26 = "identifier";
  *((_QWORD *)v26 + 1) = 10;
  v26[16] = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ContextProtoEntityMatch._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF9898, (uint64_t)qword_25700C098, a1);
}

uint64_t ContextProtoEntityMatch.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_2408E5858();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 3:
        case 10:
        case 11:
          sub_2408E593C();
          break;
        case 4:
        case 5:
          sub_2408E5900();
          break;
        case 7:
          sub_2408E58D0();
          break;
        case 8:
          sub_24070843C();
          break;
        case 9:
          sub_24040B2E4();
          sub_2408E58A0();
          break;
        case 12:
          type metadata accessor for ContextProtoEntityMatch(0);
          sub_2408E5930();
          break;
        default:
          break;
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t sub_24070843C()
{
  type metadata accessor for ContextProtoEntityMatch(0);
  type metadata accessor for ContextProtoMatchProperties(0);
  sub_2404FA028(&qword_25700C418, type metadata accessor for ContextProtoMatchProperties, (uint64_t)&protocol conformance descriptor for ContextProtoMatchProperties);
  return sub_2408E596C();
}

uint64_t ContextProtoEntityMatch.traverse<A>(visitor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v9;
  uint64_t v10;
  uint64_t result;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;

  v5 = v3;
  v9 = *(_QWORD *)(v5 + 8);
  v10 = HIBYTE(v9) & 0xF;
  if ((v9 & 0x2000000000000000) == 0)
    v10 = *(_QWORD *)v5 & 0xFFFFFFFFFFFFLL;
  if (!v10 || (result = sub_2408E5A38(), !v4))
  {
    v12 = *(_QWORD *)(v5 + 24);
    v13 = HIBYTE(v12) & 0xF;
    if ((v12 & 0x2000000000000000) == 0)
      v13 = *(_QWORD *)(v5 + 16) & 0xFFFFFFFFFFFFLL;
    if (!v13 || (result = sub_2408E5A38(), !v4))
    {
      if (!*(_QWORD *)(v5 + 32) || (result = sub_2408E5A14(), !v4))
      {
        if (!*(_QWORD *)(v5 + 40) || (result = sub_2408E5A14(), !v4))
        {
          if (*(float *)(v5 + 48) == 0.0 || (result = sub_2408E59FC(), !v4))
          {
            result = sub_2407086FC(v5, a1, a2, a3);
            if (!v4)
            {
              if (*(_BYTE *)(v5 + 52))
              {
                sub_24040B2E4();
                sub_2408E59E4();
              }
              v14 = *(_QWORD *)(v5 + 64);
              v15 = HIBYTE(v14) & 0xF;
              if ((v14 & 0x2000000000000000) == 0)
                v15 = *(_QWORD *)(v5 + 56) & 0xFFFFFFFFFFFFLL;
              if (v15)
                sub_2408E5A38();
              v16 = *(_QWORD *)(v5 + 80);
              v17 = HIBYTE(v16) & 0xF;
              if ((v16 & 0x2000000000000000) == 0)
                v17 = *(_QWORD *)(v5 + 72) & 0xFFFFFFFFFFFFLL;
              if (v17)
                sub_2408E5A38();
              sub_240708870(v5);
              type metadata accessor for ContextProtoEntityMatch(0);
              return sub_2408E578C();
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_2407086FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t matched;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB068);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  matched = type metadata accessor for ContextProtoMatchProperties(0);
  v9 = *(_QWORD *)(matched - 8);
  MEMORY[0x24BDAC7A8](matched);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ContextProtoEntityMatch(0);
  sub_2403A9210(a1 + *(int *)(v12 + 48), (uint64_t)v7, &qword_256FFB068);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, matched) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFB068);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ContextProtoMatchProperties);
  sub_2404FA028(&qword_25700C418, type metadata accessor for ContextProtoMatchProperties, (uint64_t)&protocol conformance descriptor for ContextProtoMatchProperties);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ContextProtoMatchProperties);
}

uint64_t sub_240708870(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for ContextProtoEntityMatch(0);
  if (*(_QWORD *)(a1 + *(int *)(result + 52) + 8))
    return sub_2408E5A38();
  return result;
}

uint64_t ContextProtoEntityMatch.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ContextProtoEntityMatch, &qword_25700C1B8, (uint64_t)&protocol conformance descriptor for ContextProtoEntityMatch);
}

uint64_t sub_240708904@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  char *v4;
  uint64_t matched;
  _QWORD *v6;
  uint64_t result;

  v4 = (char *)a2 + *(int *)(a1 + 48);
  matched = type metadata accessor for ContextProtoMatchProperties(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(matched - 8) + 56))(v4, 1, 1, matched);
  v6 = (_QWORD *)((char *)a2 + *(int *)(a1 + 52));
  *v6 = 0;
  v6[1] = 0;
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *a2 = 0;
  a2[1] = 0xE000000000000000;
  a2[2] = 0;
  a2[3] = 0xE000000000000000;
  a2[4] = 0;
  a2[5] = 0;
  *(_QWORD *)((char *)a2 + 45) = 0;
  a2[7] = 0;
  a2[8] = 0xE000000000000000;
  a2[9] = 0;
  a2[10] = 0xE000000000000000;
  return result;
}

unint64_t sub_240708988()
{
  return 0xD000000000000013;
}

uint64_t sub_2407089A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 56);
  v5 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_2407089E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 56);
  v5 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t (*sub_240708A24())()
{
  return nullsub_1;
}

uint64_t sub_240708A38()
{
  return ContextProtoEntityMatch.decodeMessage<A>(decoder:)();
}

uint64_t sub_240708A4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ContextProtoEntityMatch.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_240708A60()
{
  sub_2404FA028(&qword_25700C450, type metadata accessor for ContextProtoEntityMatch, (uint64_t)&protocol conformance descriptor for ContextProtoEntityMatch);
  return sub_2408E5828();
}

uint64_t sub_240708AB0@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF9898, (uint64_t)qword_25700C098, a1);
}

uint64_t sub_240708ACC()
{
  sub_2404FA028(&qword_25700C1A8, type metadata accessor for ContextProtoEntityMatch, (uint64_t)&protocol conformance descriptor for ContextProtoEntityMatch);
  return sub_2408E599C();
}

uint64_t sub_240708B0C()
{
  sub_2404FA028(&qword_25700C1A8, type metadata accessor for ContextProtoEntityMatch, (uint64_t)&protocol conformance descriptor for ContextProtoEntityMatch);
  return sub_2408E59A8();
}

unint64_t static ContextProtoMatchProperties.protoMessageName.getter()
{
  return 0xD000000000000017;
}

uint64_t sub_240708B7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_2408E5A98();
  __swift_allocate_value_buffer(v0, qword_25700C0B0);
  __swift_project_value_buffer(v0, (uint64_t)qword_25700C0B0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2408EB470;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "maxTokenCount";
  *(_QWORD *)(v7 + 8) = 13;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_2408E5A74();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "matchedTokenCount";
  *((_QWORD *)v11 + 1) = 17;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 3;
  *(_QWORD *)v12 = "matchedAliasTypes";
  *(_QWORD *)(v12 + 8) = 17;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_2408E5A80();
}

uint64_t static ContextProtoMatchProperties._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(&qword_256FF98A0, (uint64_t)qword_25700C0B0, a1);
}

uint64_t ContextProtoMatchProperties.decodeMessage<A>(decoder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v10;

  v5 = v3;
  result = sub_2408E5858();
  if (!v4)
  {
    while ((v10 & 1) == 0)
    {
      if (result == 3)
      {
        sub_240448BC4(a1, v5, a2, a3, (void (*)(_QWORD))type metadata accessor for ContextProtoMatchProperties, type metadata accessor for ContextProtoAliasTypes, &qword_25700C430, (uint64_t)&protocol conformance descriptor for ContextProtoAliasTypes);
      }
      else if (result == 2 || result == 1)
      {
        sub_2408E58F4();
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t ContextProtoMatchProperties.traverse<A>(visitor:)(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;

  v7 = result;
  if ((*(_BYTE *)(v3 + 8) & 1) == 0)
    result = sub_2408E5A14();
  if (!v4)
  {
    if ((*(_BYTE *)(v3 + 24) & 1) == 0)
      sub_2408E5A14();
    sub_240708EFC(v3, v7, a2, a3);
    type metadata accessor for ContextProtoMatchProperties(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t sub_240708EFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t matched;
  _QWORD v14[2];

  v14[1] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB070);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ContextProtoAliasTypes(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  matched = type metadata accessor for ContextProtoMatchProperties(0);
  sub_2403A9210(a1 + *(int *)(matched + 24), (uint64_t)v7, &qword_256FFB070);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_2403A97FC((uint64_t)v7, &qword_256FFB070);
  sub_2403A91CC((uint64_t)v7, (uint64_t)v11, type metadata accessor for ContextProtoAliasTypes);
  sub_2404FA028(&qword_25700C430, type metadata accessor for ContextProtoAliasTypes, (uint64_t)&protocol conformance descriptor for ContextProtoAliasTypes);
  sub_2408E5A68();
  return sub_240388AE4((uint64_t)v11, type metadata accessor for ContextProtoAliasTypes);
}

uint64_t ContextProtoMatchProperties.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ContextProtoMatchProperties, &qword_25700C1C0, (uint64_t)&protocol conformance descriptor for ContextProtoMatchProperties);
}

uint64_t sub_240709090@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)a2 = 0;
  *(_BYTE *)(a2 + 8) = 1;
  *(_QWORD *)(a2 + 16) = 0;
  *(_BYTE *)(a2 + 24) = 1;
  v2 = a2 + *(int *)(a1 + 24);
  v3 = type metadata accessor for ContextProtoAliasTypes(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  return _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
}

unint64_t sub_240709104()
{
  return 0xD000000000000017;
}

uint64_t sub_240709120(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ContextProtoMatchProperties.decodeMessage<A>(decoder:)(a1, a2, a3);
}

uint64_t sub_240709134(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ContextProtoMatchProperties.traverse<A>(visitor:)(a1, a2, a3);
}

uint64_t sub_240709148()
{
  sub_2404FA028(&qword_25700C448, type metadata accessor for ContextProtoMatchProperties, (uint64_t)&protocol conformance descriptor for ContextProtoMatchProperties);
  return sub_2408E5828();
}

uint64_t sub_240709198@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(&qword_256FF98A0, (uint64_t)qword_25700C0B0, a1);
}

uint64_t sub_2407091B4()
{
  sub_2404FA028(&qword_25700C418, type metadata accessor for ContextProtoMatchProperties, (uint64_t)&protocol conformance descriptor for ContextProtoMatchProperties);
  return sub_2408E599C();
}

uint64_t sub_2407091F4()
{
  sub_2404FA028(&qword_25700C418, type metadata accessor for ContextProtoMatchProperties, (uint64_t)&protocol conformance descriptor for ContextProtoMatchProperties);
  return sub_2408E59A8();
}

unint64_t static ContextProtoAliasTypes.protoMessageName.getter()
{
  return 0xD000000000000012;
}

uint64_t sub_240709264(uint64_t a1)
{
  return sub_24070927C(a1, qword_25700C0C8, (uint64_t)"options", 7);
}

uint64_t sub_24070927C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v7 = sub_2408E5A98();
  __swift_allocate_value_buffer(v7, a2);
  __swift_project_value_buffer(v7, (uint64_t)a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257000C40);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C48);
  v9 = *(unsigned __int8 *)(*(_QWORD *)(v8 - 8) + 80);
  v10 = (v9 + 32) & ~v9;
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_2408EADA0;
  v12 = v11 + v10 + *(int *)(v8 + 48);
  *(_QWORD *)(v11 + v10) = 1;
  *(_QWORD *)v12 = a3;
  *(_QWORD *)(v12 + 8) = a4;
  *(_BYTE *)(v12 + 16) = 2;
  v13 = *MEMORY[0x24BE5C318];
  v14 = sub_2408E5A74();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v12, v13, v14);
  return sub_2408E5A80();
}

uint64_t static ContextProtoAliasTypes._protobuf_nameMap.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240432544(qword_256FF98A8, (uint64_t)qword_25700C0C8, a1);
}

uint64_t ContextProtoAliasTypes.decodeMessage<A>(decoder:)()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_2408E5858();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 1)
      {
        sub_24040B2A0();
        sub_2408E5870();
      }
      result = sub_2408E5858();
    }
  }
  return result;
}

uint64_t ContextProtoAliasTypes.traverse<A>(visitor:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (!*(_QWORD *)(*(_QWORD *)v0 + 16) || (sub_24040B2A0(), result = sub_2408E59CC(), !v1))
  {
    type metadata accessor for ContextProtoAliasTypes(0);
    return sub_2408E578C();
  }
  return result;
}

uint64_t ContextProtoAliasTypes.hashValue.getter()
{
  return sub_240446F6C(type metadata accessor for ContextProtoAliasTypes, &qword_25700C1C8, (uint64_t)&protocol conformance descriptor for ContextProtoAliasTypes);
}

unint64_t sub_240709518()
{
  return 0xD000000000000012;
}

uint64_t sub_240709534()
{
  return ContextProtoAliasTypes.decodeMessage<A>(decoder:)();
}

uint64_t sub_240709548()
{
  return ContextProtoAliasTypes.traverse<A>(visitor:)();
}

uint64_t sub_24070955C()
{
  sub_2404FA028(&qword_25700C440, type metadata accessor for ContextProtoAliasTypes, (uint64_t)&protocol conformance descriptor for ContextProtoAliasTypes);
  return sub_2408E5828();
}

uint64_t sub_2407095AC@<X0>(uint64_t a1@<X8>)
{
  return sub_2404325C8(qword_256FF98A8, (uint64_t)qword_25700C0C8, a1);
}

uint64_t sub_2407095C8()
{
  sub_2404FA028(&qword_25700C430, type metadata accessor for ContextProtoAliasTypes, (uint64_t)&protocol conformance descriptor for ContextProtoAliasTypes);
  return sub_2408E599C();
}

uint64_t sub_240709608()
{
  sub_2404FA028(&qword_25700C430, type metadata accessor for ContextProtoAliasTypes, (uint64_t)&protocol conformance descriptor for ContextProtoAliasTypes);
  return sub_2408E59A8();
}

uint64_t _s23LighthouseDataProcessor48ContextProtoQueryDecorationToolRetrievalResponseV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  BOOL v11;
  char v12;
  BOOL v13;
  uint64_t DecorationToolRetrievalResponse;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  void (*v17)(char *, uint64_t);
  uint64_t v19;

  v4 = sub_2408E57A4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v19 - v9;
  v11 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (v11 || (v12 = 0, (sub_2408E617C() & 1) != 0))
  {
    v13 = *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24);
    if (v13 || (v12 = 0, (sub_2408E617C() & 1) != 0))
    {
      if (*(float *)(a1 + 32) == *(float *)(a2 + 32)
        && (sub_2408BA998(*(_QWORD *)(a1 + 40), *(_QWORD *)(a2 + 40)) & 1) != 0
        && (sub_2408BBEFC(*(_QWORD *)(a1 + 48), *(_QWORD *)(a2 + 48)) & 1) != 0)
      {
        DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
        v15 = a1 + *(int *)(DecorationToolRetrievalResponse + 36);
        v16 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
        v16(v10, v15, v4);
        v16(v8, a2 + *(int *)(DecorationToolRetrievalResponse + 36), v4);
        sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        v12 = sub_2408E5CD8();
        v17 = *(void (**)(char *, uint64_t))(v5 + 8);
        v17(v8, v4);
        v17(v10, v4);
      }
      else
      {
        v12 = 0;
      }
    }
  }
  return v12 & 1;
}

uint64_t _s23LighthouseDataProcessor36ContextProtoDynamicEnumerationEntityV2eeoiySbAC_ACtFZ_0(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  int *v34;
  uint64_t v35;
  unsigned int (*v36)(uint64_t, uint64_t, uint64_t);
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  char *v47;
  char *v49;
  char v50;
  uint64_t v51;
  void (*v52)(char *, char *, uint64_t);
  char *v53;
  uint64_t v54;
  char *v55;
  void (*v56)(char *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;

  v4 = sub_2408E57A4();
  v62 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v61 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v60 = (char *)&v57 - v7;
  v69 = type metadata accessor for ToolKitProtoTypedValue(0);
  v66 = *(_QWORD *)(v69 - 8);
  MEMORY[0x24BDAC7A8](v69);
  v59 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CA8);
  MEMORY[0x24BDAC7A8](v65);
  v70 = (uint64_t)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v63 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v67 = (uint64_t)&v57 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v68 = (uint64_t)&v57 - v15;
  v16 = type metadata accessor for ToolKitProtoTypeInstance(0);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v64 = (uint64_t)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CB0);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v57 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v57 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v23);
  v28 = (char *)&v57 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v57 - v29;
  v31 = *(_QWORD *)a1;
  v32 = *((_QWORD *)a1 + 1);
  v71 = a1;
  v72 = a2;
  if (v31 == *(_QWORD *)a2 && v32 == *((_QWORD *)a2 + 1) || (v33 = 0, (sub_2408E617C() & 1) != 0))
  {
    v58 = v4;
    v34 = (int *)type metadata accessor for ContextProtoDynamicEnumerationEntity(0);
    sub_2403A9210((uint64_t)&v71[v34[5]], (uint64_t)v30, &qword_256FFA428);
    sub_2403A9210((uint64_t)&v72[v34[5]], (uint64_t)v28, &qword_256FFA428);
    v35 = (uint64_t)&v21[*(int *)(v19 + 48)];
    sub_2403A9210((uint64_t)v30, (uint64_t)v21, &qword_256FFA428);
    sub_2403A9210((uint64_t)v28, v35, &qword_256FFA428);
    v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
    if (v36((uint64_t)v21, 1, v16) == 1)
    {
      sub_2403A97FC((uint64_t)v28, &qword_256FFA428);
      sub_2403A97FC((uint64_t)v30, &qword_256FFA428);
      if (v36(v35, 1, v16) == 1)
      {
        sub_2403A97FC((uint64_t)v21, &qword_256FFA428);
LABEL_11:
        v41 = v68;
        sub_2403A9210((uint64_t)&v71[v34[6]], v68, &qword_256FFA3A8);
        v42 = v67;
        sub_2403A9210((uint64_t)&v72[v34[6]], v67, &qword_256FFA3A8);
        v43 = v70;
        v44 = v70 + *(int *)(v65 + 48);
        sub_2403A9210(v41, v70, &qword_256FFA3A8);
        sub_2403A9210(v42, v44, &qword_256FFA3A8);
        v45 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v66 + 48);
        v46 = v69;
        if (v45(v43, 1, v69) == 1)
        {
          sub_2403A97FC(v42, &qword_256FFA3A8);
          sub_2403A97FC(v41, &qword_256FFA3A8);
          if (v45(v44, 1, v46) == 1)
          {
            sub_2403A97FC(v43, &qword_256FFA3A8);
LABEL_21:
            v51 = v62;
            v52 = *(void (**)(char *, char *, uint64_t))(v62 + 16);
            v53 = v60;
            v54 = v58;
            v52(v60, &v71[v34[7]], v58);
            v55 = v61;
            v52(v61, &v72[v34[7]], v54);
            sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
            v33 = sub_2408E5CD8();
            v56 = *(void (**)(char *, uint64_t))(v51 + 8);
            v56(v55, v54);
            v56(v53, v54);
            return v33 & 1;
          }
        }
        else
        {
          v47 = v63;
          sub_2403A9210(v43, (uint64_t)v63, &qword_256FFA3A8);
          if (v45(v44, 1, v46) != 1)
          {
            v49 = v59;
            sub_2403A91CC(v44, (uint64_t)v59, type metadata accessor for ToolKitProtoTypedValue);
            v50 = static ToolKitProtoTypedValue.== infix(_:_:)(v47, v49);
            sub_240388AE4((uint64_t)v49, type metadata accessor for ToolKitProtoTypedValue);
            sub_2403A97FC(v42, &qword_256FFA3A8);
            sub_2403A97FC(v41, &qword_256FFA3A8);
            sub_240388AE4((uint64_t)v47, type metadata accessor for ToolKitProtoTypedValue);
            sub_2403A97FC(v43, &qword_256FFA3A8);
            if ((v50 & 1) != 0)
              goto LABEL_21;
            goto LABEL_18;
          }
          sub_2403A97FC(v42, &qword_256FFA3A8);
          sub_2403A97FC(v41, &qword_256FFA3A8);
          sub_240388AE4((uint64_t)v47, type metadata accessor for ToolKitProtoTypedValue);
        }
        v37 = &qword_257000CA8;
        v38 = v43;
        goto LABEL_17;
      }
    }
    else
    {
      sub_2403A9210((uint64_t)v21, (uint64_t)v25, &qword_256FFA428);
      if (v36(v35, 1, v16) != 1)
      {
        v39 = v64;
        sub_2403A91CC(v35, v64, type metadata accessor for ToolKitProtoTypeInstance);
        v40 = static ToolKitProtoTypeInstance.== infix(_:_:)(v25, v39);
        sub_240388AE4(v39, type metadata accessor for ToolKitProtoTypeInstance);
        sub_2403A97FC((uint64_t)v28, &qword_256FFA428);
        sub_2403A97FC((uint64_t)v30, &qword_256FFA428);
        sub_240388AE4((uint64_t)v25, type metadata accessor for ToolKitProtoTypeInstance);
        sub_2403A97FC((uint64_t)v21, &qword_256FFA428);
        if ((v40 & 1) == 0)
        {
LABEL_18:
          v33 = 0;
          return v33 & 1;
        }
        goto LABEL_11;
      }
      sub_2403A97FC((uint64_t)v28, &qword_256FFA428);
      sub_2403A97FC((uint64_t)v30, &qword_256FFA428);
      sub_240388AE4((uint64_t)v25, type metadata accessor for ToolKitProtoTypeInstance);
    }
    v37 = &qword_257000CB0;
    v38 = (uint64_t)v21;
LABEL_17:
    sub_2403A97FC(v38, v37);
    goto LABEL_18;
  }
  return v33 & 1;
}

uint64_t _s23LighthouseDataProcessor33ContextProtoQueryDecorationOutputV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t DecorationToolRetrievalResponse;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  unsigned int (*v25)(uint64_t, uint64_t, uint64_t);
  char DecorationToolRetrievalResponseV2eeoiySbAC_ACtFZ_0;
  char v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);
  char *v34;
  uint64_t v35;
  char *v36;
  void (*v37)(char *, uint64_t);
  uint64_t DecorationOutput;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;

  v4 = sub_2408E57A4();
  v42 = *(_QWORD *)(v4 - 8);
  v43 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v41 = (char *)&DecorationOutput - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v40 = (char *)&DecorationOutput - v7;
  DecorationToolRetrievalResponse = type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse(0);
  v9 = *(_QWORD *)(DecorationToolRetrievalResponse - 8);
  MEMORY[0x24BDAC7A8](DecorationToolRetrievalResponse);
  v11 = (char *)&DecorationOutput - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000C98);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&DecorationOutput - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA470);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&DecorationOutput - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v16);
  v21 = (char *)&DecorationOutput - v20;
  MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&DecorationOutput - v22;
  if ((sub_2408BA37C(*(char **)a1) & 1) == 0
    || *(unsigned __int8 *)(a1 + 8) != *(unsigned __int8 *)(a2 + 8)
    || (sub_2408BA984(*(_QWORD *)(a1 + 16), *(_QWORD *)(a2 + 16)) & 1) == 0
    || *(unsigned __int8 *)(a1 + 24) != *(unsigned __int8 *)(a2 + 24)
    || (sub_2408BA984(*(_QWORD *)(a1 + 32), *(_QWORD *)(a2 + 32)) & 1) == 0
    || *(unsigned __int8 *)(a1 + 40) != *(unsigned __int8 *)(a2 + 40)
    || (sub_2408BAD50(*(_QWORD **)(a1 + 48), *(_QWORD **)(a2 + 48)) & 1) == 0
    || *(unsigned __int8 *)(a1 + 56) != *(unsigned __int8 *)(a2 + 56)
    || (sub_2408BAD50(*(_QWORD **)(a1 + 64), *(_QWORD **)(a2 + 64)) & 1) == 0
    || *(unsigned __int8 *)(a1 + 72) != *(unsigned __int8 *)(a2 + 72)
    || (sub_2408BAD50(*(_QWORD **)(a1 + 80), *(_QWORD **)(a2 + 80)) & 1) == 0
    || *(unsigned __int8 *)(a1 + 88) != *(unsigned __int8 *)(a2 + 88)
    || (sub_2408BAD50(*(_QWORD **)(a1 + 96), *(_QWORD **)(a2 + 96)) & 1) == 0
    || *(unsigned __int8 *)(a1 + 104) != *(unsigned __int8 *)(a2 + 104)
    || (sub_2408BAD50(*(_QWORD **)(a1 + 112), *(_QWORD **)(a2 + 112)) & 1) == 0
    || *(unsigned __int8 *)(a1 + 120) != *(unsigned __int8 *)(a2 + 120)
    || (sub_2408BAD50(*(_QWORD **)(a1 + 128), *(_QWORD **)(a2 + 128)) & 1) == 0
    || *(unsigned __int8 *)(a1 + 136) != *(unsigned __int8 *)(a2 + 136))
  {
    goto LABEL_28;
  }
  DecorationOutput = type metadata accessor for ContextProtoQueryDecorationOutput(0);
  sub_2403A9210(a1 + *(int *)(DecorationOutput + 96), (uint64_t)v23, &qword_256FFA470);
  sub_2403A9210(a2 + *(int *)(DecorationOutput + 96), (uint64_t)v21, &qword_256FFA470);
  v24 = (uint64_t)&v14[*(int *)(v12 + 48)];
  sub_2403A9210((uint64_t)v23, (uint64_t)v14, &qword_256FFA470);
  v39 = v24;
  sub_2403A9210((uint64_t)v21, v24, &qword_256FFA470);
  v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v25((uint64_t)v14, 1, DecorationToolRetrievalResponse) != 1)
  {
    sub_2403A9210((uint64_t)v14, (uint64_t)v18, &qword_256FFA470);
    if (v25(v39, 1, DecorationToolRetrievalResponse) != 1)
    {
      sub_2403A91CC(v39, (uint64_t)v11, type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse);
      DecorationToolRetrievalResponseV2eeoiySbAC_ACtFZ_0 = _s23LighthouseDataProcessor48ContextProtoQueryDecorationToolRetrievalResponseV2eeoiySbAC_ACtFZ_0((uint64_t)v18, (uint64_t)v11);
      sub_240388AE4((uint64_t)v11, type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse);
      sub_2403A97FC((uint64_t)v21, &qword_256FFA470);
      sub_2403A97FC((uint64_t)v23, &qword_256FFA470);
      sub_240388AE4((uint64_t)v18, type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse);
      sub_2403A97FC((uint64_t)v14, &qword_256FFA470);
      if ((DecorationToolRetrievalResponseV2eeoiySbAC_ACtFZ_0 & 1) == 0)
        goto LABEL_28;
      goto LABEL_26;
    }
    sub_2403A97FC((uint64_t)v21, &qword_256FFA470);
    sub_2403A97FC((uint64_t)v23, &qword_256FFA470);
    sub_240388AE4((uint64_t)v18, type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse);
LABEL_24:
    sub_2403A97FC((uint64_t)v14, &qword_257000C98);
    goto LABEL_28;
  }
  sub_2403A97FC((uint64_t)v21, &qword_256FFA470);
  sub_2403A97FC((uint64_t)v23, &qword_256FFA470);
  if (v25(v39, 1, DecorationToolRetrievalResponse) != 1)
    goto LABEL_24;
  sub_2403A97FC((uint64_t)v14, &qword_256FFA470);
LABEL_26:
  if ((sub_2408BCE10(*(_QWORD *)(a1 + 144), *(_QWORD *)(a2 + 144)) & 1) != 0
    && *(unsigned __int8 *)(a1 + 152) == *(unsigned __int8 *)(a2 + 152))
  {
    v29 = DecorationOutput;
    v30 = a1 + *(int *)(DecorationOutput + 100);
    v32 = v42;
    v31 = v43;
    v33 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 16);
    v34 = v40;
    v33(v40, v30, v43);
    v35 = a2 + *(int *)(v29 + 100);
    v36 = v41;
    v33(v41, v35, v31);
    sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v27 = sub_2408E5CD8();
    v37 = *(void (**)(char *, uint64_t))(v32 + 8);
    v37(v36, v31);
    v37(v34, v31);
    return v27 & 1;
  }
LABEL_28:
  v27 = 0;
  return v27 & 1;
}

uint64_t _s23LighthouseDataProcessor32ContextProtoQueryDecorationInputV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  int v19;
  int v20;
  uint64_t DecorationInput;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  void (*v24)(char *, uint64_t);
  uint64_t v25;

  v4 = sub_2408E57A4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v25 - v9;
  if (*(_QWORD *)a1 != *(_QWORD *)a2 || *(_QWORD *)(a1 + 8) != *(_QWORD *)(a2 + 8))
  {
    v12 = 0;
    if ((sub_2408E617C() & 1) == 0)
      return v12 & 1;
  }
  v13 = *(_QWORD *)(a1 + 48);
  v14 = *(_QWORD *)(a2 + 48);
  if (!v13)
  {
    if (v14)
      goto LABEL_34;
    goto LABEL_13;
  }
  if (!v14)
    goto LABEL_34;
  if (*(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40) && v13 == v14 || (v12 = 0, (sub_2408E617C() & 1) != 0))
  {
LABEL_13:
    if (*(unsigned __int8 *)(a1 + 16) == *(unsigned __int8 *)(a2 + 16))
    {
      v15 = *(_BYTE *)(a2 + 64);
      if ((*(_BYTE *)(a1 + 64) & 1) != 0)
      {
        if (!*(_BYTE *)(a2 + 64))
          goto LABEL_34;
      }
      else
      {
        if (*(_QWORD *)(a1 + 56) != *(_QWORD *)(a2 + 56))
          v15 = 1;
        if ((v15 & 1) != 0)
          goto LABEL_34;
      }
      v16 = *(_BYTE *)(a2 + 80);
      if ((*(_BYTE *)(a1 + 80) & 1) != 0)
      {
        if (!*(_BYTE *)(a2 + 80))
          goto LABEL_34;
      }
      else
      {
        if (*(_QWORD *)(a1 + 72) != *(_QWORD *)(a2 + 72))
          v16 = 1;
        if ((v16 & 1) != 0)
          goto LABEL_34;
      }
      v17 = *(_BYTE *)(a2 + 96);
      if ((*(_BYTE *)(a1 + 96) & 1) != 0)
      {
        if (!*(_BYTE *)(a2 + 96))
          goto LABEL_34;
      }
      else
      {
        if (*(_QWORD *)(a1 + 88) != *(_QWORD *)(a2 + 88))
          v17 = 1;
        if ((v17 & 1) != 0)
          goto LABEL_34;
      }
      if ((sub_2408BCE24(*(_QWORD *)(a1 + 24), *(_QWORD *)(a2 + 24)) & 1) == 0
        || *(unsigned __int8 *)(a1 + 32) != *(unsigned __int8 *)(a2 + 32))
      {
        goto LABEL_34;
      }
      v19 = *(unsigned __int8 *)(a1 + 97);
      v20 = *(unsigned __int8 *)(a2 + 97);
      if (v19 != 2)
      {
        if (v20 == 2 || ((((v20 & 1) == 0) ^ v19) & 1) == 0)
          goto LABEL_34;
LABEL_41:
        DecorationInput = type metadata accessor for ContextProtoQueryDecorationInput(0);
        v22 = a1 + *(int *)(DecorationInput + 52);
        v23 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
        v23(v10, v22, v4);
        v23(v8, a2 + *(int *)(DecorationInput + 52), v4);
        sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        v12 = sub_2408E5CD8();
        v24 = *(void (**)(char *, uint64_t))(v5 + 8);
        v24(v8, v4);
        v24(v10, v4);
        return v12 & 1;
      }
      if (v20 == 2)
        goto LABEL_41;
    }
LABEL_34:
    v12 = 0;
  }
  return v12 & 1;
}

uint64_t _s23LighthouseDataProcessor29ContextProtoToolRetrievalTypeV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t *v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int (*v43)(uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t, uint64_t);
  char *v54;
  uint64_t v55;
  char *v56;
  void (*v57)(char *, uint64_t);
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v71 = a2;
  v3 = sub_2408E57A4();
  v61 = *(_QWORD *)(v3 - 8);
  v62 = v3;
  v4 = MEMORY[0x24BDAC7A8](v3);
  v60 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v59 = (char *)&v58 - v6;
  v67 = type metadata accessor for ToolKitProtoTypeDefinition.Version1(0);
  v65 = *(_QWORD *)(v67 - 8);
  MEMORY[0x24BDAC7A8](v67);
  v58 = (uint64_t)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C520);
  MEMORY[0x24BDAC7A8](v64);
  v68 = (uint64_t)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB060);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v63 = (uint64_t)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v70 = (uint64_t)&v58 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v66 = (uint64_t)&v58 - v14;
  v15 = type metadata accessor for ToolKitProtoTypeIdentifier(0);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C528);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v58 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA7F8);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v58 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v23);
  v28 = (char *)&v58 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v58 - v29;
  v69 = a1;
  sub_2403A9210(a1, (uint64_t)&v58 - v29, &qword_256FFA7F8);
  sub_2403A9210(v71, (uint64_t)v28, &qword_256FFA7F8);
  v31 = (uint64_t)&v21[*(int *)(v19 + 48)];
  sub_2403A9210((uint64_t)v30, (uint64_t)v21, &qword_256FFA7F8);
  sub_2403A9210((uint64_t)v28, v31, &qword_256FFA7F8);
  v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  if (v32((uint64_t)v21, 1, v15) != 1)
  {
    sub_2403A9210((uint64_t)v21, (uint64_t)v25, &qword_256FFA7F8);
    if (v32(v31, 1, v15) != 1)
    {
      sub_2403A91CC(v31, (uint64_t)v18, type metadata accessor for ToolKitProtoTypeIdentifier);
      v35 = static ToolKitProtoTypeIdentifier.== infix(_:_:)((uint64_t)v25, (uint64_t)v18);
      sub_240388AE4((uint64_t)v18, type metadata accessor for ToolKitProtoTypeIdentifier);
      sub_2403A97FC((uint64_t)v28, &qword_256FFA7F8);
      sub_2403A97FC((uint64_t)v30, &qword_256FFA7F8);
      sub_240388AE4((uint64_t)v25, type metadata accessor for ToolKitProtoTypeIdentifier);
      sub_2403A97FC((uint64_t)v21, &qword_256FFA7F8);
      if ((v35 & 1) == 0)
        goto LABEL_15;
      goto LABEL_8;
    }
    sub_2403A97FC((uint64_t)v28, &qword_256FFA7F8);
    sub_2403A97FC((uint64_t)v30, &qword_256FFA7F8);
    sub_240388AE4((uint64_t)v25, type metadata accessor for ToolKitProtoTypeIdentifier);
LABEL_6:
    v33 = &qword_25700C528;
    v34 = (uint64_t)v21;
LABEL_14:
    sub_2403A97FC(v34, v33);
    goto LABEL_15;
  }
  sub_2403A97FC((uint64_t)v28, &qword_256FFA7F8);
  sub_2403A97FC((uint64_t)v30, &qword_256FFA7F8);
  if (v32(v31, 1, v15) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v21, &qword_256FFA7F8);
LABEL_8:
  v36 = type metadata accessor for ContextProtoToolRetrievalType(0);
  v37 = v69;
  v38 = v66;
  sub_2403A9210(v69 + *(int *)(v36 + 20), v66, &qword_256FFB060);
  v40 = v70;
  v39 = v71;
  sub_2403A9210(v71 + *(int *)(v36 + 20), v70, &qword_256FFB060);
  v41 = v68;
  v42 = v68 + *(int *)(v64 + 48);
  sub_2403A9210(v38, v68, &qword_256FFB060);
  sub_2403A9210(v40, v42, &qword_256FFB060);
  v43 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v65 + 48);
  v44 = v67;
  if (v43(v41, 1, v67) == 1)
  {
    sub_2403A97FC(v40, &qword_256FFB060);
    sub_2403A97FC(v38, &qword_256FFB060);
    if (v43(v42, 1, v44) == 1)
    {
      sub_2403A97FC(v41, &qword_256FFB060);
LABEL_18:
      v50 = v37 + *(int *)(v36 + 24);
      v52 = v61;
      v51 = v62;
      v53 = *(void (**)(char *, uint64_t, uint64_t))(v61 + 16);
      v54 = v59;
      v53(v59, v50, v62);
      v55 = v39 + *(int *)(v36 + 24);
      v56 = v60;
      v53(v60, v55, v51);
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v46 = sub_2408E5CD8();
      v57 = *(void (**)(char *, uint64_t))(v52 + 8);
      v57(v56, v51);
      v57(v54, v51);
      return v46 & 1;
    }
    goto LABEL_13;
  }
  v45 = v63;
  sub_2403A9210(v41, v63, &qword_256FFB060);
  if (v43(v42, 1, v44) == 1)
  {
    sub_2403A97FC(v70, &qword_256FFB060);
    sub_2403A97FC(v38, &qword_256FFB060);
    sub_240388AE4(v45, type metadata accessor for ToolKitProtoTypeDefinition.Version1);
LABEL_13:
    v33 = &qword_25700C520;
    v34 = v41;
    goto LABEL_14;
  }
  v48 = v58;
  sub_2403A91CC(v42, v58, type metadata accessor for ToolKitProtoTypeDefinition.Version1);
  v49 = static ToolKitProtoTypeDefinition.Version1.== infix(_:_:)(v45, v48);
  sub_240388AE4(v48, type metadata accessor for ToolKitProtoTypeDefinition.Version1);
  sub_2403A97FC(v70, &qword_256FFB060);
  sub_2403A97FC(v38, &qword_256FFB060);
  sub_240388AE4(v45, type metadata accessor for ToolKitProtoTypeDefinition.Version1);
  sub_2403A97FC(v41, &qword_256FFB060);
  if ((v49 & 1) != 0)
    goto LABEL_18;
LABEL_15:
  v46 = 0;
  return v46 & 1;
}

uint64_t _s23LighthouseDataProcessor29ContextProtoSpanMatchedEntityV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  char *v30;
  char v31;
  uint64_t *v32;
  uint64_t *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  char *v38;
  char *v39;
  char v40;
  void (*v41)(char *, uint64_t);
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t *v49;
  uint64_t *v50;

  v4 = sub_2408E57A4();
  v46 = *(_QWORD *)(v4 - 8);
  v47 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v45 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v44 = (char *)&v43 - v7;
  v8 = type metadata accessor for ToolKitProtoTypedValue(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v48 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CA8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v43 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v43 - v21;
  v23 = type metadata accessor for ContextProtoSpanMatchedEntity(0);
  v24 = *(int *)(v23 + 20);
  v49 = a1;
  v25 = (uint64_t)a1 + v24;
  v26 = v23;
  sub_2403A9210(v25, (uint64_t)v22, &qword_256FFA3A8);
  v27 = *(int *)(v26 + 20);
  v50 = a2;
  sub_2403A9210((uint64_t)a2 + v27, (uint64_t)v20, &qword_256FFA3A8);
  v28 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_2403A9210((uint64_t)v22, (uint64_t)v13, &qword_256FFA3A8);
  sub_2403A9210((uint64_t)v20, v28, &qword_256FFA3A8);
  v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v29((uint64_t)v13, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v20, &qword_256FFA3A8);
    sub_2403A97FC((uint64_t)v22, &qword_256FFA3A8);
    if (v29(v28, 1, v8) == 1)
    {
      sub_2403A97FC((uint64_t)v13, &qword_256FFA3A8);
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  sub_2403A9210((uint64_t)v13, (uint64_t)v17, &qword_256FFA3A8);
  if (v29(v28, 1, v8) == 1)
  {
    sub_2403A97FC((uint64_t)v20, &qword_256FFA3A8);
    sub_2403A97FC((uint64_t)v22, &qword_256FFA3A8);
    sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoTypedValue);
LABEL_6:
    sub_2403A97FC((uint64_t)v13, &qword_257000CA8);
LABEL_10:
    v40 = 0;
    return v40 & 1;
  }
  v30 = v48;
  sub_2403A91CC(v28, (uint64_t)v48, type metadata accessor for ToolKitProtoTypedValue);
  v31 = static ToolKitProtoTypedValue.== infix(_:_:)(v17, v30);
  sub_240388AE4((uint64_t)v30, type metadata accessor for ToolKitProtoTypedValue);
  sub_2403A97FC((uint64_t)v20, &qword_256FFA3A8);
  sub_2403A97FC((uint64_t)v22, &qword_256FFA3A8);
  sub_240388AE4((uint64_t)v17, type metadata accessor for ToolKitProtoTypedValue);
  sub_2403A97FC((uint64_t)v13, &qword_256FFA3A8);
  if ((v31 & 1) == 0)
    goto LABEL_10;
LABEL_8:
  v32 = v49;
  v33 = v50;
  if ((sub_2408BE920(*v49, *v50) & 1) == 0)
    goto LABEL_10;
  v34 = (char *)v32 + *(int *)(v26 + 24);
  v36 = v46;
  v35 = v47;
  v37 = *(void (**)(char *, char *, uint64_t))(v46 + 16);
  v38 = v44;
  v37(v44, v34, v47);
  v39 = v45;
  v37(v45, (char *)v33 + *(int *)(v26 + 24), v35);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v40 = sub_2408E5CD8();
  v41 = *(void (**)(char *, uint64_t))(v36 + 8);
  v41(v39, v35);
  v41(v38, v35);
  return v40 & 1;
}

uint64_t _s23LighthouseDataProcessor28ContextProtoSampleInvocationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  BOOL v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  void (*v16)(char *, uint64_t);
  uint64_t v18;

  v4 = sub_2408E57A4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v18 - v9;
  v11 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (v11 || (v12 = 0, (sub_2408E617C() & 1) != 0))
  {
    if (*(float *)(a1 + 16) == *(float *)(a2 + 16))
    {
      v13 = type metadata accessor for ContextProtoSampleInvocation(0);
      v14 = a1 + *(int *)(v13 + 24);
      v15 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
      v15(v10, v14, v4);
      v15(v8, a2 + *(int *)(v13 + 24), v4);
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v12 = sub_2408E5CD8();
      v16 = *(void (**)(char *, uint64_t))(v5 + 8);
      v16(v8, v4);
      v16(v10, v4);
    }
    else
    {
      v12 = 0;
    }
  }
  return v12 & 1;
}

uint64_t _s23LighthouseDataProcessor27ContextProtoToolQueryOutputV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  char v25;
  uint64_t Output;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  char *v30;
  char *v31;
  char v32;
  void (*v33)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;

  v38 = sub_2408E57A4();
  v42 = *(_QWORD *)(v38 - 8);
  v4 = MEMORY[0x24BDAC7A8](v38);
  v41 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v40 = (char *)&v35 - v6;
  v7 = type metadata accessor for ContextProtoRetrievedTool.Definition(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v36 = (uint64_t)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C518);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB050);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v35 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v35 - v20;
  v37 = a1;
  sub_2403A9210(a1, (uint64_t)&v35 - v20, &qword_256FFB050);
  v39 = a2;
  sub_2403A9210(a2, (uint64_t)v19, &qword_256FFB050);
  v22 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_2403A9210((uint64_t)v21, (uint64_t)v12, &qword_256FFB050);
  sub_2403A9210((uint64_t)v19, v22, &qword_256FFB050);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v23((uint64_t)v12, 1, v7) != 1)
  {
    sub_2403A9210((uint64_t)v12, (uint64_t)v16, &qword_256FFB050);
    if (v23(v22, 1, v7) != 1)
    {
      v24 = v36;
      sub_2403A91CC(v22, v36, type metadata accessor for ContextProtoRetrievedTool.Definition);
      v25 = _s23LighthouseDataProcessor25ContextProtoRetrievedToolV10DefinitionV2eeoiySbAE_AEtFZ_0((uint64_t)v16, v24);
      sub_240388AE4(v24, type metadata accessor for ContextProtoRetrievedTool.Definition);
      sub_2403A97FC((uint64_t)v19, &qword_256FFB050);
      sub_2403A97FC((uint64_t)v21, &qword_256FFB050);
      sub_240388AE4((uint64_t)v16, type metadata accessor for ContextProtoRetrievedTool.Definition);
      sub_2403A97FC((uint64_t)v12, &qword_256FFB050);
      if ((v25 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v32 = 0;
      return v32 & 1;
    }
    sub_2403A97FC((uint64_t)v19, &qword_256FFB050);
    sub_2403A97FC((uint64_t)v21, &qword_256FFB050);
    sub_240388AE4((uint64_t)v16, type metadata accessor for ContextProtoRetrievedTool.Definition);
LABEL_6:
    sub_2403A97FC((uint64_t)v12, &qword_25700C518);
    goto LABEL_9;
  }
  sub_2403A97FC((uint64_t)v19, &qword_256FFB050);
  sub_2403A97FC((uint64_t)v21, &qword_256FFB050);
  if (v23(v22, 1, v7) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v12, &qword_256FFB050);
LABEL_8:
  Output = type metadata accessor for ContextProtoToolQueryOutput(0);
  v27 = v38;
  v28 = v42;
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 16);
  v30 = v40;
  v29(v40, v37 + *(int *)(Output + 20), v38);
  v31 = v41;
  v29(v41, v39 + *(int *)(Output + 20), v27);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v32 = sub_2408E5CD8();
  v33 = *(void (**)(char *, uint64_t))(v28 + 8);
  v33(v31, v27);
  v33(v30, v27);
  return v32 & 1;
}

uint64_t _s23LighthouseDataProcessor27ContextProtoSurroundingTextV2eeoiySbAC_ACtFZ_0(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  char v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  char *v35;
  uint64_t v36;
  char *v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;

  v4 = sub_2408E57A4();
  v43 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v42 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v41 = (char *)&v39 - v7;
  v8 = type metadata accessor for ContextProtoBoundingBox(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v40 = (uint64_t)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C560);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB020);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v39 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v39 - v21;
  v23 = *((_QWORD *)a1 + 1);
  v44 = a2;
  v24 = *((_QWORD *)a2 + 1);
  if (!v23)
  {
    v39 = v4;
    v25 = a1;
    if (v24)
      goto LABEL_14;
    goto LABEL_8;
  }
  if (!v24)
    goto LABEL_14;
  v39 = v4;
  v25 = a1;
  if (*(_QWORD *)a1 == *(_QWORD *)v44 && v23 == v24 || (v26 = 0, (sub_2408E617C() & 1) != 0))
  {
LABEL_8:
    v27 = type metadata accessor for ContextProtoSurroundingText(0);
    sub_2403A9210((uint64_t)&v25[*(int *)(v27 + 20)], (uint64_t)v22, &qword_256FFB020);
    sub_2403A9210((uint64_t)&v44[*(int *)(v27 + 20)], (uint64_t)v20, &qword_256FFB020);
    v28 = (uint64_t)&v13[*(int *)(v11 + 48)];
    sub_2403A9210((uint64_t)v22, (uint64_t)v13, &qword_256FFB020);
    sub_2403A9210((uint64_t)v20, v28, &qword_256FFB020);
    v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    if (v29((uint64_t)v13, 1, v8) == 1)
    {
      sub_2403A97FC((uint64_t)v20, &qword_256FFB020);
      sub_2403A97FC((uint64_t)v22, &qword_256FFB020);
      if (v29(v28, 1, v8) == 1)
      {
        sub_2403A97FC((uint64_t)v13, &qword_256FFB020);
LABEL_17:
        v33 = v43;
        v34 = *(void (**)(char *, char *, uint64_t))(v43 + 16);
        v35 = v41;
        v36 = v39;
        v34(v41, &v25[*(int *)(v27 + 24)], v39);
        v37 = v42;
        v34(v42, &v44[*(int *)(v27 + 24)], v36);
        sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        v26 = sub_2408E5CD8();
        v38 = *(void (**)(char *, uint64_t))(v33 + 8);
        v38(v37, v36);
        v38(v35, v36);
        return v26 & 1;
      }
      goto LABEL_13;
    }
    sub_2403A9210((uint64_t)v13, (uint64_t)v17, &qword_256FFB020);
    if (v29(v28, 1, v8) == 1)
    {
      sub_2403A97FC((uint64_t)v20, &qword_256FFB020);
      sub_2403A97FC((uint64_t)v22, &qword_256FFB020);
      sub_240388AE4((uint64_t)v17, type metadata accessor for ContextProtoBoundingBox);
LABEL_13:
      sub_2403A97FC((uint64_t)v13, &qword_25700C560);
      goto LABEL_14;
    }
    v31 = v40;
    sub_2403A91CC(v28, v40, type metadata accessor for ContextProtoBoundingBox);
    v32 = _s23LighthouseDataProcessor23ContextProtoBoundingBoxV2eeoiySbAC_ACtFZ_0((uint64_t)v17, v31);
    sub_240388AE4(v31, type metadata accessor for ContextProtoBoundingBox);
    sub_2403A97FC((uint64_t)v20, &qword_256FFB020);
    sub_2403A97FC((uint64_t)v22, &qword_256FFB020);
    sub_240388AE4((uint64_t)v17, type metadata accessor for ContextProtoBoundingBox);
    sub_2403A97FC((uint64_t)v13, &qword_256FFB020);
    if ((v32 & 1) != 0)
      goto LABEL_17;
LABEL_14:
    v26 = 0;
  }
  return v26 & 1;
}

uint64_t _s23LighthouseDataProcessor25ContextProtoRetrievedToolV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t);
  char *v38;
  char *v39;
  char v40;
  void (*v41)(char *, uint64_t);
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v4 = sub_2408E57A4();
  v46 = *(_QWORD *)(v4 - 8);
  v47 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v45 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v44 = (char *)&v43 - v7;
  v8 = type metadata accessor for ContextProtoRetrievedTool.Definition(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v48 = (uint64_t)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C518);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB050);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v43 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v43 - v21;
  v23 = type metadata accessor for ContextProtoRetrievedTool(0);
  v24 = *(int *)(v23 + 28);
  v49 = a1;
  v25 = a1 + v24;
  v26 = v23;
  sub_2403A9210(v25, (uint64_t)v22, &qword_256FFB050);
  v27 = *(int *)(v26 + 28);
  v50 = a2;
  sub_2403A9210(a2 + v27, (uint64_t)v20, &qword_256FFB050);
  v28 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_2403A9210((uint64_t)v22, (uint64_t)v13, &qword_256FFB050);
  sub_2403A9210((uint64_t)v20, v28, &qword_256FFB050);
  v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v29((uint64_t)v13, 1, v8) != 1)
  {
    sub_2403A9210((uint64_t)v13, (uint64_t)v17, &qword_256FFB050);
    if (v29(v28, 1, v8) != 1)
    {
      v30 = v48;
      sub_2403A91CC(v28, v48, type metadata accessor for ContextProtoRetrievedTool.Definition);
      v31 = _s23LighthouseDataProcessor25ContextProtoRetrievedToolV10DefinitionV2eeoiySbAE_AEtFZ_0((uint64_t)v17, v30);
      sub_240388AE4(v30, type metadata accessor for ContextProtoRetrievedTool.Definition);
      sub_2403A97FC((uint64_t)v20, &qword_256FFB050);
      sub_2403A97FC((uint64_t)v22, &qword_256FFB050);
      sub_240388AE4((uint64_t)v17, type metadata accessor for ContextProtoRetrievedTool.Definition);
      sub_2403A97FC((uint64_t)v13, &qword_256FFB050);
      if ((v31 & 1) != 0)
        goto LABEL_8;
LABEL_12:
      v40 = 0;
      return v40 & 1;
    }
    sub_2403A97FC((uint64_t)v20, &qword_256FFB050);
    sub_2403A97FC((uint64_t)v22, &qword_256FFB050);
    sub_240388AE4((uint64_t)v17, type metadata accessor for ContextProtoRetrievedTool.Definition);
LABEL_6:
    sub_2403A97FC((uint64_t)v13, &qword_25700C518);
    goto LABEL_12;
  }
  sub_2403A97FC((uint64_t)v20, &qword_256FFB050);
  sub_2403A97FC((uint64_t)v22, &qword_256FFB050);
  if (v29(v28, 1, v8) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v13, &qword_256FFB050);
LABEL_8:
  v32 = v49;
  v33 = v50;
  if (*(float *)v49 != *(float *)v50
    || (sub_2408C051C(*(_QWORD *)(v49 + 8), *(_QWORD *)(v50 + 8)) & 1) == 0
    || *(unsigned __int8 *)(v32 + 16) != *(unsigned __int8 *)(v33 + 16))
  {
    goto LABEL_12;
  }
  v34 = v32 + *(int *)(v26 + 32);
  v36 = v46;
  v35 = v47;
  v37 = *(void (**)(char *, uint64_t, uint64_t))(v46 + 16);
  v38 = v44;
  v37(v44, v34, v47);
  v39 = v45;
  v37(v45, v33 + *(int *)(v26 + 32), v35);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v40 = sub_2408E5CD8();
  v41 = *(void (**)(char *, uint64_t))(v36 + 8);
  v41(v39, v35);
  v41(v38, v35);
  return v40 & 1;
}

uint64_t _s23LighthouseDataProcessor25ContextProtoRetrievedToolV10DefinitionV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  char *v31;
  char *v32;
  char v33;
  void (*v34)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;

  v39 = sub_2408E57A4();
  v43 = *(_QWORD *)(v39 - 8);
  v4 = MEMORY[0x24BDAC7A8](v39);
  v42 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v41 = (char *)&v36 - v6;
  v7 = type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v37 = (uint64_t)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C538);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB058);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v36 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v36 - v20;
  v38 = a1;
  sub_2403A9210(a1, (uint64_t)&v36 - v20, &qword_256FFB058);
  v40 = a2;
  sub_2403A9210(a2, (uint64_t)v19, &qword_256FFB058);
  v22 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_2403A9210((uint64_t)v21, (uint64_t)v12, &qword_256FFB058);
  sub_2403A9210((uint64_t)v19, v22, &qword_256FFB058);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v23((uint64_t)v12, 1, v7) != 1)
  {
    sub_2403A9210((uint64_t)v12, (uint64_t)v16, &qword_256FFB058);
    if (v23(v22, 1, v7) != 1)
    {
      v24 = v37;
      sub_2403A91CC(v22, v37, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
      static ContextProtoRetrievedTool.ContextProtoDefinitionEnum.== infix(_:_:)((uint64_t)v16, v24);
      v26 = v25;
      sub_240388AE4(v24, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
      sub_2403A97FC((uint64_t)v19, &qword_256FFB058);
      sub_2403A97FC((uint64_t)v21, &qword_256FFB058);
      sub_240388AE4((uint64_t)v16, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
      sub_2403A97FC((uint64_t)v12, &qword_256FFB058);
      if ((v26 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v33 = 0;
      return v33 & 1;
    }
    sub_2403A97FC((uint64_t)v19, &qword_256FFB058);
    sub_2403A97FC((uint64_t)v21, &qword_256FFB058);
    sub_240388AE4((uint64_t)v16, type metadata accessor for ContextProtoRetrievedTool.ContextProtoDefinitionEnum);
LABEL_6:
    sub_2403A97FC((uint64_t)v12, &qword_25700C538);
    goto LABEL_9;
  }
  sub_2403A97FC((uint64_t)v19, &qword_256FFB058);
  sub_2403A97FC((uint64_t)v21, &qword_256FFB058);
  if (v23(v22, 1, v7) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v12, &qword_256FFB058);
LABEL_8:
  v27 = type metadata accessor for ContextProtoRetrievedTool.Definition(0);
  v28 = v39;
  v29 = v43;
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 16);
  v31 = v41;
  v30(v41, v38 + *(int *)(v27 + 20), v39);
  v32 = v42;
  v30(v42, v40 + *(int *)(v27 + 20), v28);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v33 = sub_2408E5CD8();
  v34 = *(void (**)(char *, uint64_t))(v29 + 8);
  v34(v32, v28);
  v34(v31, v28);
  return v33 & 1;
}

uint64_t _s23LighthouseDataProcessor27ContextProtoMatchPropertiesV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char v22;
  char v23;
  uint64_t matched;
  uint64_t v25;
  unsigned int (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t *v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t);
  char *v37;
  uint64_t v38;
  char *v39;
  char v40;
  void (*v41)(char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t *v47;
  char *v48;
  char *v49;
  uint64_t v50;

  v4 = sub_2408E57A4();
  v50 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v49 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v48 = (char *)&v43 - v7;
  v8 = type metadata accessor for ContextProtoAliasTypes(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v47 = (uint64_t *)((char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C508);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB070);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v43 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v21 = (char *)&v43 - v20;
  v22 = *(_BYTE *)(a2 + 8);
  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 8))
      goto LABEL_24;
  }
  else
  {
    if (*(_QWORD *)a1 != *(_QWORD *)a2)
      v22 = 1;
    if ((v22 & 1) != 0)
      goto LABEL_24;
  }
  v23 = *(_BYTE *)(a2 + 24);
  if ((*(_BYTE *)(a1 + 24) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 24))
      goto LABEL_24;
  }
  else
  {
    if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
      v23 = 1;
    if ((v23 & 1) != 0)
      goto LABEL_24;
  }
  v45 = v4;
  v46 = (uint64_t *)v19;
  matched = type metadata accessor for ContextProtoMatchProperties(0);
  sub_2403A9210(a1 + *(int *)(matched + 24), (uint64_t)v21, &qword_256FFB070);
  v44 = matched;
  sub_2403A9210(a2 + *(int *)(matched + 24), (uint64_t)v18, &qword_256FFB070);
  v25 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_2403A9210((uint64_t)v21, (uint64_t)v13, &qword_256FFB070);
  sub_2403A9210((uint64_t)v18, v25, &qword_256FFB070);
  v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v26((uint64_t)v13, 1, v8) != 1)
  {
    v27 = v46;
    sub_2403A9210((uint64_t)v13, (uint64_t)v46, &qword_256FFB070);
    if (v26(v25, 1, v8) != 1)
    {
      v30 = v47;
      sub_2403A91CC(v25, (uint64_t)v47, type metadata accessor for ContextProtoAliasTypes);
      if (sub_2408C0E2C(*v27, *v30))
      {
        sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        v31 = sub_2408E5CD8();
        sub_240388AE4((uint64_t)v30, type metadata accessor for ContextProtoAliasTypes);
        sub_2403A97FC((uint64_t)v18, &qword_256FFB070);
        sub_2403A97FC((uint64_t)v21, &qword_256FFB070);
        sub_240388AE4((uint64_t)v27, type metadata accessor for ContextProtoAliasTypes);
        sub_2403A97FC((uint64_t)v13, &qword_256FFB070);
        if ((v31 & 1) != 0)
          goto LABEL_21;
LABEL_24:
        v40 = 0;
        return v40 & 1;
      }
      sub_240388AE4((uint64_t)v30, type metadata accessor for ContextProtoAliasTypes);
      sub_2403A97FC((uint64_t)v18, &qword_256FFB070);
      sub_2403A97FC((uint64_t)v21, &qword_256FFB070);
      sub_240388AE4((uint64_t)v27, type metadata accessor for ContextProtoAliasTypes);
      v29 = (uint64_t)v13;
      v28 = &qword_256FFB070;
LABEL_23:
      sub_2403A97FC(v29, v28);
      goto LABEL_24;
    }
    sub_2403A97FC((uint64_t)v18, &qword_256FFB070);
    sub_2403A97FC((uint64_t)v21, &qword_256FFB070);
    sub_240388AE4((uint64_t)v27, type metadata accessor for ContextProtoAliasTypes);
LABEL_18:
    v28 = &qword_25700C508;
    v29 = (uint64_t)v13;
    goto LABEL_23;
  }
  sub_2403A97FC((uint64_t)v18, &qword_256FFB070);
  sub_2403A97FC((uint64_t)v21, &qword_256FFB070);
  if (v26(v25, 1, v8) != 1)
    goto LABEL_18;
  sub_2403A97FC((uint64_t)v13, &qword_256FFB070);
LABEL_21:
  v32 = v44;
  v33 = v45;
  v34 = a1 + *(int *)(v44 + 28);
  v35 = v50;
  v36 = *(void (**)(char *, uint64_t, uint64_t))(v50 + 16);
  v37 = v48;
  v36(v48, v34, v45);
  v38 = a2 + *(int *)(v32 + 28);
  v39 = v49;
  v36(v49, v38, v33);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v40 = sub_2408E5CD8();
  v41 = *(void (**)(char *, uint64_t))(v35 + 8);
  v41(v39, v33);
  v41(v37, v33);
  return v40 & 1;
}

uint64_t _s23LighthouseDataProcessor23ContextProtoEntityMatchV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t matched;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  char v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t);
  char *v41;
  uint64_t v42;
  char *v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v4 = sub_2408E57A4();
  v50 = *(_QWORD *)(v4 - 8);
  v51 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v49 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v48 = (char *)&v45 - v7;
  matched = type metadata accessor for ContextProtoMatchProperties(0);
  v9 = *(_QWORD *)(matched - 8);
  MEMORY[0x24BDAC7A8](matched);
  v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C510);
  MEMORY[0x24BDAC7A8](v12);
  v52 = (uint64_t)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB068);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v45 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v45 - v21;
  if (*(_QWORD *)a1 != *(_QWORD *)a2 || *(_QWORD *)(a1 + 8) != *(_QWORD *)(a2 + 8))
  {
    v23 = 0;
    if ((sub_2408E617C() & 1) == 0)
      return v23 & 1;
  }
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16) || *(_QWORD *)(a1 + 24) != *(_QWORD *)(a2 + 24))
  {
    v23 = 0;
    if ((sub_2408E617C() & 1) == 0)
      return v23 & 1;
  }
  if (*(_QWORD *)(a1 + 32) != *(_QWORD *)(a2 + 32)
    || *(_QWORD *)(a1 + 40) != *(_QWORD *)(a2 + 40)
    || *(float *)(a1 + 48) != *(float *)(a2 + 48))
  {
    goto LABEL_31;
  }
  v24 = type metadata accessor for ContextProtoEntityMatch(0);
  sub_2403A9210(a1 + *(int *)(v24 + 48), (uint64_t)v22, &qword_256FFB068);
  v46 = v24;
  sub_2403A9210(a2 + *(int *)(v24 + 48), (uint64_t)v20, &qword_256FFB068);
  v25 = v52;
  v26 = v52 + *(int *)(v12 + 48);
  sub_2403A9210((uint64_t)v22, v52, &qword_256FFB068);
  v47 = v26;
  sub_2403A9210((uint64_t)v20, v26, &qword_256FFB068);
  v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v27(v25, 1, matched) == 1)
  {
    sub_2403A97FC((uint64_t)v20, &qword_256FFB068);
    v25 = v52;
    sub_2403A97FC((uint64_t)v22, &qword_256FFB068);
    if (v27(v47, 1, matched) == 1)
    {
      sub_2403A97FC(v25, &qword_256FFB068);
      goto LABEL_17;
    }
LABEL_15:
    sub_2403A97FC(v25, &qword_25700C510);
    goto LABEL_31;
  }
  sub_2403A9210(v25, (uint64_t)v17, &qword_256FFB068);
  v28 = v47;
  if (v27(v47, 1, matched) == 1)
  {
    sub_2403A97FC((uint64_t)v20, &qword_256FFB068);
    sub_2403A97FC((uint64_t)v22, &qword_256FFB068);
    sub_240388AE4((uint64_t)v17, type metadata accessor for ContextProtoMatchProperties);
    goto LABEL_15;
  }
  sub_2403A91CC(v28, (uint64_t)v11, type metadata accessor for ContextProtoMatchProperties);
  v29 = _s23LighthouseDataProcessor27ContextProtoMatchPropertiesV2eeoiySbAC_ACtFZ_0((uint64_t)v17, (uint64_t)v11);
  sub_240388AE4((uint64_t)v11, type metadata accessor for ContextProtoMatchProperties);
  sub_2403A97FC((uint64_t)v20, &qword_256FFB068);
  sub_2403A97FC((uint64_t)v22, &qword_256FFB068);
  sub_240388AE4((uint64_t)v17, type metadata accessor for ContextProtoMatchProperties);
  sub_2403A97FC(v25, &qword_256FFB068);
  if ((v29 & 1) == 0)
    goto LABEL_31;
LABEL_17:
  if (*(unsigned __int8 *)(a1 + 52) != *(unsigned __int8 *)(a2 + 52))
    goto LABEL_31;
  if (*(_QWORD *)(a1 + 56) != *(_QWORD *)(a2 + 56) || *(_QWORD *)(a1 + 64) != *(_QWORD *)(a2 + 64))
  {
    v23 = 0;
    if ((sub_2408E617C() & 1) == 0)
      return v23 & 1;
  }
  if (*(_QWORD *)(a1 + 72) != *(_QWORD *)(a2 + 72) || *(_QWORD *)(a1 + 80) != *(_QWORD *)(a2 + 80))
  {
    v23 = 0;
    if ((sub_2408E617C() & 1) == 0)
      return v23 & 1;
  }
  v30 = *(int *)(v46 + 52);
  v31 = (_QWORD *)(a1 + v30);
  v32 = *(_QWORD *)(a1 + v30 + 8);
  v33 = (_QWORD *)(a2 + v30);
  v34 = v33[1];
  if (!v32)
  {
    if (!v34)
    {
LABEL_33:
      v36 = v46;
      v37 = a1 + *(int *)(v46 + 56);
      v39 = v50;
      v38 = v51;
      v40 = *(void (**)(char *, uint64_t, uint64_t))(v50 + 16);
      v41 = v48;
      v40(v48, v37, v51);
      v42 = a2 + *(int *)(v36 + 56);
      v43 = v49;
      v40(v49, v42, v38);
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v23 = sub_2408E5CD8();
      v44 = *(void (**)(char *, uint64_t))(v39 + 8);
      v44(v43, v38);
      v44(v41, v38);
      return v23 & 1;
    }
    goto LABEL_31;
  }
  if (!v34)
  {
LABEL_31:
    v23 = 0;
    return v23 & 1;
  }
  if (*v31 == *v33 && v32 == v34)
    goto LABEL_33;
  v23 = 0;
  if ((sub_2408E617C() & 1) != 0)
    goto LABEL_33;
  return v23 & 1;
}

uint64_t _s23LighthouseDataProcessor23ContextProtoBoundingBoxV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  void (*v20)(char *, uint64_t);
  uint64_t v21;

  v4 = sub_2408E57A4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v21 - v9;
  v11 = *(_BYTE *)(a2 + 4);
  if ((*(_BYTE *)(a1 + 4) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 4))
      goto LABEL_21;
  }
  else
  {
    if (*(float *)a1 != *(float *)a2)
      v11 = 1;
    if ((v11 & 1) != 0)
      goto LABEL_21;
  }
  v12 = *(_BYTE *)(a2 + 12);
  if ((*(_BYTE *)(a1 + 12) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 12))
      goto LABEL_21;
  }
  else
  {
    if (*(float *)(a1 + 8) != *(float *)(a2 + 8))
      v12 = 1;
    if ((v12 & 1) != 0)
      goto LABEL_21;
  }
  v13 = *(_BYTE *)(a2 + 20);
  if ((*(_BYTE *)(a1 + 20) & 1) == 0)
  {
    if (*(float *)(a1 + 16) != *(float *)(a2 + 16))
      v13 = 1;
    if ((v13 & 1) != 0)
      goto LABEL_21;
LABEL_19:
    v14 = *(_BYTE *)(a2 + 28);
    if ((*(_BYTE *)(a1 + 28) & 1) != 0)
    {
      if (!*(_BYTE *)(a2 + 28))
        goto LABEL_21;
    }
    else
    {
      if (*(float *)(a1 + 24) != *(float *)(a2 + 24))
        v14 = 1;
      if ((v14 & 1) != 0)
        goto LABEL_21;
    }
    v17 = type metadata accessor for ContextProtoBoundingBox(0);
    v18 = a1 + *(int *)(v17 + 32);
    v19 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v19(v10, v18, v4);
    v19(v8, a2 + *(int *)(v17 + 32), v4);
    sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v15 = sub_2408E5CD8();
    v20 = *(void (**)(char *, uint64_t))(v5 + 8);
    v20(v8, v4);
    v20(v10, v4);
    return v15 & 1;
  }
  if (*(_BYTE *)(a2 + 20))
    goto LABEL_19;
LABEL_21:
  v15 = 0;
  return v15 & 1;
}

uint64_t _s23LighthouseDataProcessor22ContextProtoAliasTypesV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  unsigned __int8 *v15;
  unsigned __int8 *v16;
  int v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  char v23;
  void (*v24)(char *, uint64_t);
  uint64_t v26;

  v4 = sub_2408E57A4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v26 - v9;
  v11 = *a1;
  v12 = *a2;
  v13 = *(_QWORD *)(*a1 + 16);
  if (v13 != *(_QWORD *)(*a2 + 16))
  {
LABEL_10:
    v23 = 0;
    return v23 & 1;
  }
  if (v13)
    v14 = v11 == v12;
  else
    v14 = 1;
  if (!v14)
  {
    v15 = (unsigned __int8 *)(v11 + 32);
    v16 = (unsigned __int8 *)(v12 + 32);
    do
    {
      v18 = *v15++;
      v17 = v18;
      v19 = *v16++;
      if (v17 != v19)
        goto LABEL_10;
    }
    while (--v13);
  }
  v20 = type metadata accessor for ContextProtoAliasTypes(0);
  v21 = (uint64_t)a1 + *(int *)(v20 + 20);
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v22(v10, v21, v4);
  v22(v8, (uint64_t)a2 + *(int *)(v20 + 20), v4);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v23 = sub_2408E5CD8();
  v24 = *(void (**)(char *, uint64_t))(v5 + 8);
  v24(v8, v4);
  v24(v10, v4);
  return v23 & 1;
}

uint64_t _s23LighthouseDataProcessor21ContextProtoToolQueryV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  BOOL v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  void (*v16)(char *, uint64_t);
  uint64_t v18;

  v4 = sub_2408E57A4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v18 - v9;
  v11 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (v11 || (v12 = 0, (sub_2408E617C() & 1) != 0))
  {
    if ((sub_2408BAD50(*(_QWORD **)(a1 + 16), *(_QWORD **)(a2 + 16)) & 1) != 0)
    {
      v13 = type metadata accessor for ContextProtoToolQuery(0);
      v14 = a1 + *(int *)(v13 + 24);
      v15 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
      v15(v10, v14, v4);
      v15(v8, a2 + *(int *)(v13 + 24), v4);
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v12 = sub_2408E5CD8();
      v16 = *(void (**)(char *, uint64_t))(v5 + 8);
      v16(v8, v4);
      v16(v10, v4);
    }
    else
    {
      v12 = 0;
    }
  }
  return v12 & 1;
}

uint64_t _s23LighthouseDataProcessor022ContextProtoStructuredd11SiriRequestD7AddressV2eeoiySbAC_ACtFZ_0(_QWORD *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  char *v27;
  void (*v28)(char *, char *, uint64_t);
  void (*v29)(char *, uint64_t);
  uint64_t v30;

  v4 = sub_2408E57A4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v30 - v9;
  v11 = a1[1];
  v12 = *((_QWORD *)a2 + 1);
  if (!v11)
  {
    if (v12)
      goto LABEL_45;
    goto LABEL_10;
  }
  if (!v12)
    goto LABEL_45;
  v13 = *a1 == *(_QWORD *)a2 && v11 == v12;
  if (v13 || (v14 = 0, (sub_2408E617C() & 1) != 0))
  {
LABEL_10:
    v15 = a1[3];
    v16 = *((_QWORD *)a2 + 3);
    if (v15)
    {
      if (!v16)
        goto LABEL_45;
      if (a1[2] != *((_QWORD *)a2 + 2) || v15 != v16)
      {
        v14 = 0;
        if ((sub_2408E617C() & 1) == 0)
          return v14 & 1;
      }
    }
    else if (v16)
    {
      goto LABEL_45;
    }
    v17 = a1[5];
    v18 = *((_QWORD *)a2 + 5);
    if (v17)
    {
      if (!v18)
        goto LABEL_45;
      if (a1[4] != *((_QWORD *)a2 + 4) || v17 != v18)
      {
        v14 = 0;
        if ((sub_2408E617C() & 1) == 0)
          return v14 & 1;
      }
    }
    else if (v18)
    {
      goto LABEL_45;
    }
    v19 = a1[7];
    v20 = *((_QWORD *)a2 + 7);
    if (v19)
    {
      if (!v20)
        goto LABEL_45;
      if (a1[6] != *((_QWORD *)a2 + 6) || v19 != v20)
      {
        v14 = 0;
        if ((sub_2408E617C() & 1) == 0)
          return v14 & 1;
      }
    }
    else if (v20)
    {
      goto LABEL_45;
    }
    v21 = a1[9];
    v22 = *((_QWORD *)a2 + 9);
    if (v21)
    {
      if (!v22)
        goto LABEL_45;
      if (a1[8] != *((_QWORD *)a2 + 8) || v21 != v22)
      {
        v14 = 0;
        if ((sub_2408E617C() & 1) == 0)
          return v14 & 1;
      }
    }
    else if (v22)
    {
      goto LABEL_45;
    }
    v23 = a1[11];
    v24 = *((_QWORD *)a2 + 11);
    if (v23)
    {
      if (v24)
      {
        if (a1[10] != *((_QWORD *)a2 + 10) || v23 != v24)
        {
          v14 = 0;
          if ((sub_2408E617C() & 1) == 0)
            return v14 & 1;
        }
LABEL_47:
        v26 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextAddress(0);
        v27 = (char *)a1 + *(int *)(v26 + 40);
        v28 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
        v28(v10, v27, v4);
        v28(v8, &a2[*(int *)(v26 + 40)], v4);
        sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        v14 = sub_2408E5CD8();
        v29 = *(void (**)(char *, uint64_t))(v5 + 8);
        v29(v8, v4);
        v29(v10, v4);
        return v14 & 1;
      }
    }
    else if (!v24)
    {
      goto LABEL_47;
    }
LABEL_45:
    v14 = 0;
  }
  return v14 & 1;
}

uint64_t _s23LighthouseDataProcessor022ContextProtoStructuredd11SiriRequestD6MeCardV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, char *, uint64_t);
  void (*v26)(char *, uint64_t);
  uint64_t v28;

  v4 = sub_2408E57A4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v28 - v9;
  v11 = a1[2];
  v12 = a2[2];
  if (!v11)
  {
    if (v12)
      goto LABEL_40;
    goto LABEL_10;
  }
  if (!v12)
    goto LABEL_40;
  v13 = a1[1] == a2[1] && v11 == v12;
  if (v13 || (v14 = 0, (sub_2408E617C() & 1) != 0))
  {
LABEL_10:
    v15 = a1[4];
    v16 = a2[4];
    if (v15)
    {
      if (!v16)
        goto LABEL_40;
      if (a1[3] != a2[3] || v15 != v16)
      {
        v14 = 0;
        if ((sub_2408E617C() & 1) == 0)
          return v14 & 1;
      }
    }
    else if (v16)
    {
      goto LABEL_40;
    }
    v17 = a1[6];
    v18 = a2[6];
    if (v17)
    {
      if (!v18)
        goto LABEL_40;
      if (a1[5] != a2[5] || v17 != v18)
      {
        v14 = 0;
        if ((sub_2408E617C() & 1) == 0)
          return v14 & 1;
      }
    }
    else if (v18)
    {
      goto LABEL_40;
    }
    v19 = a1[8];
    v20 = a2[8];
    if (v19)
    {
      if (!v20)
        goto LABEL_40;
      if (a1[7] != a2[7] || v19 != v20)
      {
        v14 = 0;
        if ((sub_2408E617C() & 1) == 0)
          return v14 & 1;
      }
    }
    else if (v20)
    {
      goto LABEL_40;
    }
    v21 = a1[10];
    v22 = a2[10];
    if (v21)
    {
      if (!v22)
        goto LABEL_40;
      if (a1[9] != a2[9] || v21 != v22)
      {
        v14 = 0;
        if ((sub_2408E617C() & 1) == 0)
          return v14 & 1;
      }
    }
    else if (v22)
    {
      goto LABEL_40;
    }
    if ((sub_2408C23E0(*a1, *a2) & 1) != 0)
    {
      v23 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
      v24 = (char *)a1 + *(int *)(v23 + 40);
      v25 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
      v25(v10, v24, v4);
      v25(v8, (char *)a2 + *(int *)(v23 + 40), v4);
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v14 = sub_2408E5CD8();
      v26 = *(void (**)(char *, uint64_t))(v5 + 8);
      v26(v8, v4);
      v26(v10, v4);
      return v14 & 1;
    }
LABEL_40:
    v14 = 0;
  }
  return v14 & 1;
}

uint64_t _s23LighthouseDataProcessor022ContextProtoStructuredd11SiriRequestD18ContentRestrictionV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  void (*v21)(char *, uint64_t);
  uint64_t v22;

  v4 = sub_2408E57A4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v22 - v9;
  v11 = *(_BYTE *)(a2 + 4);
  if ((*(_BYTE *)(a1 + 4) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 4))
      goto LABEL_22;
  }
  else
  {
    if (*(_DWORD *)a1 != *(_DWORD *)a2)
      v11 = 1;
    if ((v11 & 1) != 0)
      goto LABEL_22;
  }
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_QWORD *)(a2 + 16);
  if (!v12)
  {
    if (v13)
      goto LABEL_22;
LABEL_14:
    v15 = *(_BYTE *)(a2 + 28);
    if ((*(_BYTE *)(a1 + 28) & 1) == 0)
    {
      if (*(_DWORD *)(a1 + 24) != *(_DWORD *)(a2 + 24))
        v15 = 1;
      if ((v15 & 1) != 0)
        goto LABEL_22;
LABEL_20:
      v16 = *(_BYTE *)(a2 + 36);
      if ((*(_BYTE *)(a1 + 36) & 1) != 0)
      {
        if (!*(_BYTE *)(a2 + 36))
          goto LABEL_22;
      }
      else
      {
        if (*(_DWORD *)(a1 + 32) != *(_DWORD *)(a2 + 32))
          v16 = 1;
        if ((v16 & 1) != 0)
          goto LABEL_22;
      }
      v18 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
      v19 = a1 + *(int *)(v18 + 32);
      v20 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
      v20(v10, v19, v4);
      v20(v8, a2 + *(int *)(v18 + 32), v4);
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v14 = sub_2408E5CD8();
      v21 = *(void (**)(char *, uint64_t))(v5 + 8);
      v21(v8, v4);
      v21(v10, v4);
      return v14 & 1;
    }
    if (*(_BYTE *)(a2 + 28))
      goto LABEL_20;
LABEL_22:
    v14 = 0;
    return v14 & 1;
  }
  if (!v13)
    goto LABEL_22;
  if (*(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8) && v12 == v13)
    goto LABEL_14;
  v14 = 0;
  if ((sub_2408E617C() & 1) != 0)
    goto LABEL_14;
  return v14 & 1;
}

uint64_t _s23LighthouseDataProcessor022ContextProtoStructuredd11SiriRequestD4UserV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  char v14;
  int v15;
  int v16;
  int v17;
  int v18;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  void (*v23)(char *, uint64_t);
  uint64_t v24;

  v4 = sub_2408E57A4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v24 - v9;
  v11 = *(_QWORD *)(a1 + 8);
  v12 = *(_QWORD *)(a2 + 8);
  if (!v11)
  {
    if (!v12)
      goto LABEL_10;
LABEL_17:
    v14 = 0;
    return v14 & 1;
  }
  if (!v12)
    goto LABEL_17;
  v13 = *(_QWORD *)a1 == *(_QWORD *)a2 && v11 == v12;
  if (v13 || (v14 = 0, (sub_2408E617C() & 1) != 0))
  {
LABEL_10:
    v15 = *(unsigned __int8 *)(a1 + 16);
    v16 = *(unsigned __int8 *)(a2 + 16);
    if (v15 == 2)
    {
      if (v16 != 2)
        goto LABEL_17;
    }
    else if (v16 == 2 || ((((v16 & 1) == 0) ^ v15) & 1) == 0)
    {
      goto LABEL_17;
    }
    v17 = *(unsigned __int8 *)(a1 + 17);
    v18 = *(unsigned __int8 *)(a2 + 17);
    if (v17 == 5)
    {
      if (v18 != 5)
        goto LABEL_17;
    }
    else
    {
      v14 = 0;
      if (v18 == 5 || v17 != v18)
        return v14 & 1;
    }
    v20 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
    v21 = a1 + *(int *)(v20 + 28);
    v22 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v22(v10, v21, v4);
    v22(v8, a2 + *(int *)(v20 + 28), v4);
    sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v14 = sub_2408E5CD8();
    v23 = *(void (**)(char *, uint64_t))(v5 + 8);
    v23(v8, v4);
    v23(v10, v4);
  }
  return v14 & 1;
}

uint64_t _s23LighthouseDataProcessor022ContextProtoStructuredd11SiriRequestD0V2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unsigned int (*v71)(uint64_t, uint64_t, uint64_t);
  uint64_t *v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  unint64_t v80;
  char v82;
  char v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  BOOL v96;
  uint64_t v97;
  char v98;
  int *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unsigned int (*v105)(uint64_t, uint64_t, uint64_t);
  uint64_t v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  double *v110;
  char v111;
  double *v112;
  int v113;
  uint64_t v114;
  _QWORD *v115;
  uint64_t v116;
  _QWORD *v117;
  uint64_t v118;
  uint64_t v119;
  char v120;
  uint64_t v121;
  int v122;
  int v123;
  uint64_t v124;
  int v125;
  int v126;
  int *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unsigned int (*v132)(uint64_t, uint64_t, uint64_t);
  uint64_t *v133;
  uint64_t *v134;
  char v135;
  int *v136;
  uint64_t v137;
  uint64_t v138;
  void (*v139)(char *, uint64_t, uint64_t);
  char *v140;
  char *v141;
  void (*v142)(char *, uint64_t);
  uint64_t v143;
  uint64_t v144;
  int *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t *v151;
  uint64_t *v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;

  v4 = sub_2408E57A4();
  v157 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v156 = (char *)&v143 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v155 = (char *)&v143 - v7;
  v153 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard(0);
  v148 = *(_QWORD *)(v153 - 8);
  MEMORY[0x24BDAC7A8](v153);
  v152 = (uint64_t *)((char *)&v143 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v147 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C580);
  MEMORY[0x24BDAC7A8](v147);
  v154 = (uint64_t)&v143 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB048);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v151 = (uint64_t *)((char *)&v143 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = MEMORY[0x24BDAC7A8](v11);
  v149 = (uint64_t)&v143 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v150 = (uint64_t)&v143 - v15;
  v162 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction(0);
  v160 = *(_QWORD *)(v162 - 8);
  MEMORY[0x24BDAC7A8](v162);
  v158 = (uint64_t)&v143 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v159 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C588);
  MEMORY[0x24BDAC7A8](v159);
  v165 = (uint64_t)&v143 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB040);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v161 = (uint64_t)&v143 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v163 = (uint64_t)&v143 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v164 = (uint64_t)&v143 - v23;
  v24 = type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser(0);
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)&v143 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C590);
  MEMORY[0x24BDAC7A8](v28);
  v30 = (char *)&v143 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB038);
  v32 = MEMORY[0x24BDAC7A8](v31);
  v34 = (char *)&v143 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = MEMORY[0x24BDAC7A8](v32);
  v37 = (char *)&v143 - v36;
  MEMORY[0x24BDAC7A8](v35);
  v38 = a2;
  v40 = (char *)&v143 - v39;
  v41 = *(_QWORD *)(a1 + 24);
  v42 = *(_QWORD *)(v38 + 24);
  if (!v41)
  {
    v146 = v4;
    if (v42)
      goto LABEL_69;
    goto LABEL_8;
  }
  if (!v42)
    goto LABEL_69;
  v146 = v4;
  if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(v38 + 16) && v41 == v42
    || (v43 = v38, v44 = sub_2408E617C(), v38 = v43, v45 = 0, (v44 & 1) != 0))
  {
LABEL_8:
    v46 = *(_QWORD *)(a1 + 40);
    v47 = *(_QWORD *)(v38 + 40);
    if (v46)
    {
      if (!v47)
        goto LABEL_69;
      if (*(_QWORD *)(a1 + 32) != *(_QWORD *)(v38 + 32) || v46 != v47)
      {
        v48 = v38;
        v49 = sub_2408E617C();
        v38 = v48;
        v45 = 0;
        if ((v49 & 1) == 0)
          return v45 & 1;
      }
    }
    else if (v47)
    {
      goto LABEL_69;
    }
    v50 = *(_QWORD *)(a1 + 56);
    v51 = *(_QWORD *)(v38 + 56);
    if (v50)
    {
      if (!v51)
        goto LABEL_69;
      if (*(_QWORD *)(a1 + 48) != *(_QWORD *)(v38 + 48) || v50 != v51)
      {
        v52 = v38;
        v53 = sub_2408E617C();
        v38 = v52;
        v45 = 0;
        if ((v53 & 1) == 0)
          return v45 & 1;
      }
    }
    else if (v51)
    {
      goto LABEL_69;
    }
    v54 = *(_QWORD *)(a1 + 72);
    v55 = *(_QWORD *)(v38 + 72);
    if (v54)
    {
      if (!v55)
        goto LABEL_69;
      if (*(_QWORD *)(a1 + 64) != *(_QWORD *)(v38 + 64) || v54 != v55)
      {
        v56 = v38;
        v57 = sub_2408E617C();
        v38 = v56;
        v45 = 0;
        if ((v57 & 1) == 0)
          return v45 & 1;
      }
    }
    else if (v55)
    {
      goto LABEL_69;
    }
    v58 = *(unsigned __int8 *)(a1 + 80);
    v59 = *(unsigned __int8 *)(v38 + 80);
    if (v58 == 2)
    {
      if (v59 != 2)
        goto LABEL_69;
    }
    else if (v59 == 2 || ((((v59 & 1) == 0) ^ v58) & 1) == 0)
    {
      goto LABEL_69;
    }
    v60 = *(unsigned __int8 *)(a1 + 81);
    v61 = *(unsigned __int8 *)(v38 + 81);
    if (v60 == 2)
    {
      if (v61 != 2)
        goto LABEL_69;
    }
    else if (v61 == 2 || ((((v61 & 1) == 0) ^ v60) & 1) == 0)
    {
      goto LABEL_69;
    }
    v62 = *(unsigned __int8 *)(a1 + 82);
    v63 = *(unsigned __int8 *)(v38 + 82);
    if (v62 == 2)
    {
      if (v63 != 2)
        goto LABEL_69;
    }
    else if (v63 == 2 || ((((v63 & 1) == 0) ^ v62) & 1) == 0)
    {
      goto LABEL_69;
    }
    v64 = *(unsigned __int8 *)(a1 + 83);
    v65 = *(unsigned __int8 *)(v38 + 83);
    if (v64 == 2)
    {
      if (v65 != 2)
        goto LABEL_69;
    }
    else if (v65 == 2 || ((((v65 & 1) == 0) ^ v64) & 1) == 0)
    {
      goto LABEL_69;
    }
    v66 = *(unsigned __int8 *)(a1 + 84);
    v67 = *(unsigned __int8 *)(v38 + 84);
    if (v66 == 2)
    {
      if (v67 != 2)
        goto LABEL_69;
    }
    else if (v67 == 2 || ((((v67 & 1) == 0) ^ v66) & 1) == 0)
    {
      goto LABEL_69;
    }
    v68 = v38;
    if ((sub_2408BAD50(*(_QWORD **)a1, *(_QWORD **)v38) & 1) == 0
      || (sub_2408BAD50(*(_QWORD **)(a1 + 8), *(_QWORD **)(v68 + 8)) & 1) == 0)
    {
      goto LABEL_69;
    }
    v145 = (int *)type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
    sub_2403A9210(a1 + v145[15], (uint64_t)v40, &qword_256FFB038);
    v69 = v145[15];
    v144 = v68;
    sub_2403A9210(v68 + v69, (uint64_t)v37, &qword_256FFB038);
    v70 = (uint64_t)&v30[*(int *)(v28 + 48)];
    sub_2403A9210((uint64_t)v40, (uint64_t)v30, &qword_256FFB038);
    sub_2403A9210((uint64_t)v37, v70, &qword_256FFB038);
    v71 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48);
    if (v71((uint64_t)v30, 1, v24) == 1)
    {
      sub_2403A97FC((uint64_t)v37, &qword_256FFB038);
      sub_2403A97FC((uint64_t)v40, &qword_256FFB038);
      if (v71(v70, 1, v24) == 1)
      {
        sub_2403A97FC((uint64_t)v30, &qword_256FFB038);
        goto LABEL_64;
      }
    }
    else
    {
      sub_2403A9210((uint64_t)v30, (uint64_t)v34, &qword_256FFB038);
      if (v71(v70, 1, v24) != 1)
      {
        sub_2403A91CC(v70, (uint64_t)v27, type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser);
        v74 = _s23LighthouseDataProcessor022ContextProtoStructuredd11SiriRequestD4UserV2eeoiySbAC_ACtFZ_0((uint64_t)v34, (uint64_t)v27);
        sub_240388AE4((uint64_t)v27, type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser);
        sub_2403A97FC((uint64_t)v37, &qword_256FFB038);
        sub_2403A97FC((uint64_t)v40, &qword_256FFB038);
        sub_240388AE4((uint64_t)v34, type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser);
        sub_2403A97FC((uint64_t)v30, &qword_256FFB038);
        if ((v74 & 1) == 0)
          goto LABEL_69;
LABEL_64:
        v75 = v145[16];
        v76 = *(_QWORD *)(a1 + v75);
        v77 = *(_QWORD *)(a1 + v75 + 8);
        v78 = (uint64_t *)(v144 + v75);
        v79 = *v78;
        v80 = v78[1];
        if (v77 >> 60 == 15)
        {
          if (v80 >> 60 == 15)
          {
LABEL_72:
            v84 = v145[17];
            v85 = (_QWORD *)(a1 + v84);
            v86 = *(_QWORD *)(a1 + v84 + 8);
            v87 = (_QWORD *)(v144 + v84);
            v88 = v87[1];
            if (v86)
            {
              if (!v88)
                goto LABEL_69;
              v89 = v144;
              if (*v85 != *v87 || v86 != v88)
              {
                v90 = sub_2408E617C();
                v89 = v144;
                v45 = 0;
                if ((v90 & 1) == 0)
                  return v45 & 1;
              }
            }
            else
            {
              v89 = v144;
              if (v88)
                goto LABEL_69;
            }
            v91 = v145[18];
            v92 = (_QWORD *)(a1 + v91);
            v93 = *(_QWORD *)(a1 + v91 + 8);
            v94 = (_QWORD *)(v89 + v91);
            v95 = v94[1];
            if (v93)
            {
              if (!v95)
                goto LABEL_69;
              v96 = *v92 == *v94;
              v97 = v144;
              if (!v96 || v93 != v95)
              {
                v98 = sub_2408E617C();
                v97 = v144;
                v45 = 0;
                if ((v98 & 1) == 0)
                  return v45 & 1;
              }
            }
            else
            {
              v97 = v144;
              if (v95)
                goto LABEL_69;
            }
            v99 = v145;
            v100 = v164;
            v101 = v97;
            sub_2403A9210(a1 + v145[19], v164, &qword_256FFB040);
            v102 = v163;
            sub_2403A9210(v101 + v99[19], v163, &qword_256FFB040);
            v103 = v165;
            v104 = v165 + *(int *)(v159 + 48);
            sub_2403A9210(v100, v165, &qword_256FFB040);
            sub_2403A9210(v102, v104, &qword_256FFB040);
            v105 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v160 + 48);
            if (v105(v103, 1, v162) == 1)
            {
              sub_2403A97FC(v163, &qword_256FFB040);
              sub_2403A97FC(v164, &qword_256FFB040);
              if (v105(v104, 1, v162) == 1)
              {
                sub_2403A97FC(v165, &qword_256FFB040);
LABEL_94:
                v109 = v145[20];
                v110 = (double *)(a1 + v109);
                v111 = *(_BYTE *)(a1 + v109 + 8);
                v112 = (double *)(v144 + v109);
                v113 = *(unsigned __int8 *)(v144 + v109 + 8);
                if ((v111 & 1) != 0)
                {
                  if (!v113)
                    goto LABEL_69;
                }
                else
                {
                  if (*v110 != *v112)
                    LOBYTE(v113) = 1;
                  if ((v113 & 1) != 0)
                    goto LABEL_69;
                }
                v114 = v145[21];
                v115 = (_QWORD *)(a1 + v114);
                v116 = *(_QWORD *)(a1 + v114 + 8);
                v117 = (_QWORD *)(v144 + v114);
                v118 = v117[1];
                if (v116)
                {
                  if (!v118)
                    goto LABEL_69;
                  v119 = v144;
                  if (*v115 != *v117 || v116 != v118)
                  {
                    v120 = sub_2408E617C();
                    v119 = v144;
                    v45 = 0;
                    if ((v120 & 1) == 0)
                      return v45 & 1;
                  }
                }
                else
                {
                  v119 = v144;
                  if (v118)
                    goto LABEL_69;
                }
                v121 = v145[22];
                v122 = *(unsigned __int8 *)(a1 + v121);
                v123 = *(unsigned __int8 *)(v119 + v121);
                if (v122 == 2)
                {
                  if (v123 != 2)
                    goto LABEL_69;
                }
                else if (v123 == 2 || ((((v123 & 1) == 0) ^ v122) & 1) == 0)
                {
                  goto LABEL_69;
                }
                v124 = v145[23];
                v125 = *(unsigned __int8 *)(a1 + v124);
                v126 = *(unsigned __int8 *)(v144 + v124);
                if (v125 == 2)
                {
                  if (v126 != 2)
                    goto LABEL_69;
                }
                else if (v126 == 2 || ((((v126 & 1) == 0) ^ v125) & 1) == 0)
                {
                  goto LABEL_69;
                }
                v127 = v145;
                v128 = v150;
                sub_2403A9210(a1 + v145[24], v150, &qword_256FFB048);
                v129 = v149;
                sub_2403A9210(v144 + v127[24], v149, &qword_256FFB048);
                v130 = v154;
                v131 = v154 + *(int *)(v147 + 48);
                sub_2403A9210(v128, v154, &qword_256FFB048);
                sub_2403A9210(v129, v131, &qword_256FFB048);
                v132 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v148 + 48);
                if (v132(v130, 1, v153) == 1)
                {
                  sub_2403A97FC(v149, &qword_256FFB048);
                  sub_2403A97FC(v150, &qword_256FFB048);
                  if (v132(v131, 1, v153) == 1)
                  {
                    sub_2403A97FC(v154, &qword_256FFB048);
LABEL_124:
                    v136 = v145;
                    v137 = v146;
                    v138 = v157;
                    v139 = *(void (**)(char *, uint64_t, uint64_t))(v157 + 16);
                    v140 = v155;
                    v139(v155, a1 + v145[25], v146);
                    v141 = v156;
                    v139(v156, v144 + v136[25], v137);
                    sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
                    v45 = sub_2408E5CD8();
                    v142 = *(void (**)(char *, uint64_t))(v138 + 8);
                    v142(v141, v137);
                    v142(v140, v137);
                    return v45 & 1;
                  }
                  goto LABEL_122;
                }
                sub_2403A9210(v154, (uint64_t)v151, &qword_256FFB048);
                if (v132(v131, 1, v153) == 1)
                {
                  sub_2403A97FC(v149, &qword_256FFB048);
                  sub_2403A97FC(v150, &qword_256FFB048);
                  sub_240388AE4((uint64_t)v151, type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard);
LABEL_122:
                  v72 = &qword_25700C580;
                  v73 = v154;
                  goto LABEL_62;
                }
                v133 = v152;
                sub_2403A91CC(v131, (uint64_t)v152, type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard);
                v134 = v151;
                v135 = _s23LighthouseDataProcessor022ContextProtoStructuredd11SiriRequestD6MeCardV2eeoiySbAC_ACtFZ_0(v151, v133);
                sub_240388AE4((uint64_t)v133, type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard);
                sub_2403A97FC(v149, &qword_256FFB048);
                sub_2403A97FC(v150, &qword_256FFB048);
                sub_240388AE4((uint64_t)v134, type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard);
                sub_2403A97FC(v154, &qword_256FFB048);
                if ((v135 & 1) != 0)
                  goto LABEL_124;
LABEL_69:
                v45 = 0;
                return v45 & 1;
              }
            }
            else
            {
              sub_2403A9210(v165, v161, &qword_256FFB040);
              if (v105(v104, 1, v162) != 1)
              {
                v106 = v158;
                sub_2403A91CC(v104, v158, type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction);
                v107 = v161;
                v108 = _s23LighthouseDataProcessor022ContextProtoStructuredd11SiriRequestD18ContentRestrictionV2eeoiySbAC_ACtFZ_0(v161, v106);
                sub_240388AE4(v106, type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction);
                sub_2403A97FC(v163, &qword_256FFB040);
                sub_2403A97FC(v164, &qword_256FFB040);
                sub_240388AE4(v107, type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction);
                sub_2403A97FC(v165, &qword_256FFB040);
                if ((v108 & 1) == 0)
                  goto LABEL_69;
                goto LABEL_94;
              }
              sub_2403A97FC(v163, &qword_256FFB040);
              sub_2403A97FC(v164, &qword_256FFB040);
              sub_240388AE4(v161, type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction);
            }
            v72 = &qword_25700C588;
            v73 = v165;
LABEL_62:
            sub_2403A97FC(v73, v72);
            goto LABEL_69;
          }
        }
        else if (v80 >> 60 != 15)
        {
          sub_2403C2410(v76, v77);
          sub_2403C2410(v79, v80);
          sub_2408C422C(v76, v77);
          v83 = v82;
          sub_2403C2424(v79, v80);
          sub_2403C2424(v76, v77);
          if ((v83 & 1) == 0)
            goto LABEL_69;
          goto LABEL_72;
        }
        sub_2403C2410(v76, v77);
        sub_2403C2410(v79, v80);
        sub_2403C2424(v76, v77);
        sub_2403C2424(v79, v80);
        goto LABEL_69;
      }
      sub_2403A97FC((uint64_t)v37, &qword_256FFB038);
      sub_2403A97FC((uint64_t)v40, &qword_256FFB038);
      sub_240388AE4((uint64_t)v34, type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser);
    }
    v72 = &qword_25700C590;
    v73 = (uint64_t)v30;
    goto LABEL_62;
  }
  return v45 & 1;
}

uint64_t _s23LighthouseDataProcessor022ContextProtoStructuredD0V2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  unsigned int (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t);
  char *v38;
  char *v39;
  char v40;
  void (*v41)(char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;

  v4 = sub_2408E57A4();
  v51 = *(_QWORD *)(v4 - 8);
  v52 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v50 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v49 = (char *)&v43 - v7;
  v8 = type metadata accessor for ContextProtoStructuredContextSiriRequestContext(0);
  MEMORY[0x24BDAC7A8](v8);
  v46 = (uint64_t)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB030);
  MEMORY[0x24BDAC7A8](v43);
  v44 = (uint64_t)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ContextProtoStructuredContextKind(0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v45 = (uint64_t)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C550);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB028);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v18);
  v23 = (char *)&v43 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v43 - v24;
  v47 = a1;
  sub_2403A9210(a1, (uint64_t)&v43 - v24, &qword_256FFB028);
  v48 = a2;
  sub_2403A9210(a2, (uint64_t)v23, &qword_256FFB028);
  v26 = (uint64_t)&v16[*(int *)(v14 + 48)];
  sub_2403A9210((uint64_t)v25, (uint64_t)v16, &qword_256FFB028);
  sub_2403A9210((uint64_t)v23, v26, &qword_256FFB028);
  v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  if (v27((uint64_t)v16, 1, v11) != 1)
  {
    sub_2403A9210((uint64_t)v16, (uint64_t)v20, &qword_256FFB028);
    if (v27(v26, 1, v11) != 1)
    {
      v28 = v45;
      sub_2403A91CC(v26, v45, type metadata accessor for ContextProtoStructuredContextKind);
      v29 = v44;
      v30 = v44 + *(int *)(v43 + 48);
      sub_240711970((uint64_t)v20, v44);
      sub_240711970(v28, v30);
      v31 = v29;
      v32 = v46;
      sub_2403A91CC(v31, v46, type metadata accessor for ContextProtoStructuredContextSiriRequestContext);
      v33 = _s23LighthouseDataProcessor022ContextProtoStructuredd11SiriRequestD0V2eeoiySbAC_ACtFZ_0(v32, v30);
      sub_240388AE4(v30, type metadata accessor for ContextProtoStructuredContextSiriRequestContext);
      sub_240388AE4(v32, type metadata accessor for ContextProtoStructuredContextSiriRequestContext);
      sub_240388AE4(v28, type metadata accessor for ContextProtoStructuredContextKind);
      sub_2403A97FC((uint64_t)v23, &qword_256FFB028);
      sub_2403A97FC((uint64_t)v25, &qword_256FFB028);
      sub_240388AE4((uint64_t)v20, type metadata accessor for ContextProtoStructuredContextKind);
      sub_2403A97FC((uint64_t)v16, &qword_256FFB028);
      if ((v33 & 1) != 0)
        goto LABEL_8;
LABEL_9:
      v40 = 0;
      return v40 & 1;
    }
    sub_2403A97FC((uint64_t)v23, &qword_256FFB028);
    sub_2403A97FC((uint64_t)v25, &qword_256FFB028);
    sub_240388AE4((uint64_t)v20, type metadata accessor for ContextProtoStructuredContextKind);
LABEL_6:
    sub_2403A97FC((uint64_t)v16, &qword_25700C550);
    goto LABEL_9;
  }
  sub_2403A97FC((uint64_t)v23, &qword_256FFB028);
  sub_2403A97FC((uint64_t)v25, &qword_256FFB028);
  if (v27(v26, 1, v11) != 1)
    goto LABEL_6;
  sub_2403A97FC((uint64_t)v16, &qword_256FFB028);
LABEL_8:
  v34 = type metadata accessor for ContextProtoStructuredContext(0);
  v36 = v51;
  v35 = v52;
  v37 = *(void (**)(char *, uint64_t, uint64_t))(v51 + 16);
  v38 = v49;
  v37(v49, v47 + *(int *)(v34 + 20), v52);
  v39 = v50;
  v37(v50, v48 + *(int *)(v34 + 20), v35);
  sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v40 = sub_2408E5CD8();
  v41 = *(void (**)(char *, uint64_t))(v36 + 8);
  v41(v39, v35);
  v41(v38, v35);
  return v40 & 1;
}

uint64_t _s23LighthouseDataProcessor021ContextProtoRetrievedD0V2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unsigned __int8 *v59;
  uint64_t v60;
  char **v61;
  uint64_t v62;
  char *v63;
  char v64;
  int *v65;
  unsigned __int8 *v66;
  unsigned int (*v67)(_QWORD, _QWORD, _QWORD);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t (*v72)(uint64_t, uint64_t, uint64_t);
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  int *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t (*v85)(uint64_t, uint64_t, uint64_t);
  int v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  int v91;
  uint64_t *v92;
  char v93;
  int *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unsigned int (*v100)(uint64_t, uint64_t, uint64_t);
  char *v101;
  char *v102;
  char v103;
  int *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unsigned int (*v108)(uint64_t, uint64_t, uint64_t);
  uint64_t v109;
  uint64_t v110;
  char v111;
  uint64_t v112;
  unsigned __int8 *v113;
  uint64_t v114;
  unsigned __int8 *v115;
  uint64_t v116;
  char v117;
  int *v119;
  unsigned __int8 *v120;
  uint64_t v121;
  void (*v122)(char *, unsigned __int8 *, uint64_t);
  char *v123;
  uint64_t v124;
  char *v125;
  void (*v126)(char *, uint64_t);
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t *v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  char *v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  unsigned __int8 *v159;
  int *v160;
  uint64_t v161;
  char **v162;
  unsigned __int8 *v163;

  v163 = a2;
  v130 = sub_2408E57A4();
  v129 = *(_QWORD *)(v130 - 8);
  v3 = MEMORY[0x24BDAC7A8](v130);
  v128 = (char *)&v127 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v127 = (char *)&v127 - v5;
  v134 = type metadata accessor for ContextProtoStructuredContext(0);
  v133 = *(_QWORD *)(v134 - 8);
  MEMORY[0x24BDAC7A8](v134);
  v131 = (uint64_t)&v127 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C570);
  MEMORY[0x24BDAC7A8](v132);
  v136 = (uint64_t)&v127 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB018);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v149 = (char *)&v127 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v147 = (char *)&v127 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v148 = (char *)&v127 - v13;
  v14 = type metadata accessor for ContextProtoContextMetadata(0);
  v144 = *(_QWORD *)(v14 - 8);
  v145 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v137 = (uint64_t *)((char *)&v127 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v143 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C578);
  MEMORY[0x24BDAC7A8](v143);
  v146 = (uint64_t)&v127 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB010);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v141 = (uint64_t)&v127 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v157 = (uint64_t)&v127 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v158 = (uint64_t)&v127 - v22;
  v23 = type metadata accessor for ContextProtoConfidence(0);
  v154 = *(_QWORD *)(v23 - 8);
  v155 = v23;
  MEMORY[0x24BDAC7A8](v23);
  v150 = (uint64_t)&v127 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C568);
  MEMORY[0x24BDAC7A8](v153);
  v156 = (uint64_t)&v127 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB008);
  v27 = MEMORY[0x24BDAC7A8](v26);
  v151 = (uint64_t)&v127 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = MEMORY[0x24BDAC7A8](v27);
  v161 = (uint64_t)&v127 - v30;
  MEMORY[0x24BDAC7A8](v29);
  v162 = (char **)((char *)&v127 - v31);
  v32 = type metadata accessor for ToolKitProtoTypedValue(0);
  v33 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v152 = (char *)&v127 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_257000CA8);
  v36 = MEMORY[0x24BDAC7A8](v35);
  v140 = (char *)&v127 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v36);
  v39 = (char *)&v127 - v38;
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3A8);
  v41 = MEMORY[0x24BDAC7A8](v40);
  v135 = (char *)&v127 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = MEMORY[0x24BDAC7A8](v41);
  v142 = (uint64_t)&v127 - v44;
  v45 = MEMORY[0x24BDAC7A8](v43);
  v139 = (uint64_t)&v127 - v46;
  v47 = MEMORY[0x24BDAC7A8](v45);
  v49 = (char *)&v127 - v48;
  v50 = MEMORY[0x24BDAC7A8](v47);
  v52 = (char *)&v127 - v51;
  MEMORY[0x24BDAC7A8](v50);
  v54 = (char *)&v127 - v53;
  v55 = type metadata accessor for ContextProtoRetrievedContext(0);
  v56 = *(int *)(v55 + 20);
  v159 = a1;
  sub_2403A9210((uint64_t)&a1[v56], (uint64_t)v54, &qword_256FFA3A8);
  v160 = (int *)v55;
  v57 = *(int *)(v55 + 20);
  v58 = v32;
  v59 = v163;
  sub_2403A9210((uint64_t)&v163[v57], (uint64_t)v52, &qword_256FFA3A8);
  v138 = v35;
  v60 = (uint64_t)&v39[*(int *)(v35 + 48)];
  sub_2403A9210((uint64_t)v54, (uint64_t)v39, &qword_256FFA3A8);
  sub_2403A9210((uint64_t)v52, v60, &qword_256FFA3A8);
  v61 = *(char ***)(v33 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v61)(v39, 1, v58) == 1)
  {
    sub_2403A97FC((uint64_t)v52, &qword_256FFA3A8);
    sub_2403A97FC((uint64_t)v54, &qword_256FFA3A8);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v61)(v60, 1, v58) != 1)
      goto LABEL_7;
    sub_2403A97FC((uint64_t)v39, &qword_256FFA3A8);
  }
  else
  {
    sub_2403A9210((uint64_t)v39, (uint64_t)v49, &qword_256FFA3A8);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v61)(v60, 1, v58) == 1)
    {
      sub_2403A97FC((uint64_t)v52, &qword_256FFA3A8);
      sub_2403A97FC((uint64_t)v54, &qword_256FFA3A8);
      v62 = (uint64_t)v49;
LABEL_6:
      sub_240388AE4(v62, type metadata accessor for ToolKitProtoTypedValue);
      goto LABEL_7;
    }
    v63 = v152;
    sub_2403A91CC(v60, (uint64_t)v152, type metadata accessor for ToolKitProtoTypedValue);
    v64 = sub_2408A2EB4(v49, v63);
    sub_240388AE4((uint64_t)v63, type metadata accessor for ToolKitProtoTypedValue);
    sub_2403A97FC((uint64_t)v52, &qword_256FFA3A8);
    sub_2403A97FC((uint64_t)v54, &qword_256FFA3A8);
    sub_240388AE4((uint64_t)v49, type metadata accessor for ToolKitProtoTypedValue);
    sub_2403A97FC((uint64_t)v39, &qword_256FFA3A8);
    if ((v64 & 1) == 0)
      goto LABEL_44;
  }
  v66 = v159;
  v65 = v160;
  v67 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))v162;
  sub_2403A9210((uint64_t)&v159[v160[6]], (uint64_t)v162, &qword_256FFB008);
  v68 = v161;
  sub_2403A9210((uint64_t)&v59[v65[6]], v161, &qword_256FFB008);
  v69 = v156;
  v70 = v156 + *(int *)(v153 + 48);
  sub_2403A9210((uint64_t)v67, v156, &qword_256FFB008);
  sub_2403A9210(v68, v70, &qword_256FFB008);
  v71 = v155;
  v72 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v154 + 48);
  if (v72(v69, 1, v155) == 1)
  {
    sub_2403A97FC(v68, &qword_256FFB008);
    sub_2403A97FC((uint64_t)v67, &qword_256FFB008);
    v73 = v72(v70, 1, v71);
    v75 = v157;
    v74 = v158;
    if (v73 == 1)
    {
      sub_2403A97FC(v69, &qword_256FFB008);
      goto LABEL_16;
    }
LABEL_14:
    sub_2403A97FC(v69, &qword_25700C568);
    goto LABEL_44;
  }
  v76 = v151;
  sub_2403A9210(v69, v151, &qword_256FFB008);
  v77 = v72(v70, 1, v71);
  v75 = v157;
  v74 = v158;
  if (v77 == 1)
  {
    sub_2403A97FC(v161, &qword_256FFB008);
    sub_2403A97FC((uint64_t)v162, &qword_256FFB008);
    sub_240388AE4(v76, type metadata accessor for ContextProtoConfidence);
    goto LABEL_14;
  }
  v78 = v150;
  sub_2403A91CC(v70, v150, type metadata accessor for ContextProtoConfidence);
  v79 = _s23LighthouseDataProcessor22ContextProtoConfidenceV2eeoiySbAC_ACtFZ_0(v76, v78);
  sub_240388AE4(v78, type metadata accessor for ContextProtoConfidence);
  sub_2403A97FC(v161, &qword_256FFB008);
  sub_2403A97FC((uint64_t)v162, &qword_256FFB008);
  v66 = v159;
  sub_240388AE4(v76, type metadata accessor for ContextProtoConfidence);
  sub_2403A97FC(v69, &qword_256FFB008);
  if ((v79 & 1) == 0)
    goto LABEL_44;
LABEL_16:
  if (*v66 != *v163)
    goto LABEL_44;
  v162 = v61;
  v80 = v58;
  v81 = v160;
  sub_2403A9210((uint64_t)&v66[v160[7]], v74, &qword_256FFB010);
  sub_2403A9210((uint64_t)&v163[v81[7]], v75, &qword_256FFB010);
  v82 = v146;
  v83 = v146 + *(int *)(v143 + 48);
  sub_2403A9210(v74, v146, &qword_256FFB010);
  sub_2403A9210(v75, v83, &qword_256FFB010);
  v84 = v145;
  v85 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v144 + 48);
  if (v85(v82, 1, v145) == 1)
  {
    sub_2403A97FC(v75, &qword_256FFB010);
    sub_2403A97FC(v74, &qword_256FFB010);
    v86 = v85(v83, 1, v84);
    v88 = (uint64_t)v148;
    v87 = (uint64_t)v149;
    v89 = (uint64_t)v147;
    if (v86 == 1)
    {
      sub_2403A97FC(v82, &qword_256FFB010);
      goto LABEL_24;
    }
LABEL_22:
    sub_2403A97FC(v82, &qword_25700C578);
    goto LABEL_44;
  }
  v90 = v141;
  sub_2403A9210(v82, v141, &qword_256FFB010);
  v91 = v85(v83, 1, v84);
  v88 = (uint64_t)v148;
  v87 = (uint64_t)v149;
  v89 = (uint64_t)v147;
  if (v91 == 1)
  {
    sub_2403A97FC(v157, &qword_256FFB010);
    sub_2403A97FC(v158, &qword_256FFB010);
    sub_240388AE4(v90, type metadata accessor for ContextProtoContextMetadata);
    goto LABEL_22;
  }
  v92 = v137;
  sub_2403A91CC(v83, (uint64_t)v137, type metadata accessor for ContextProtoContextMetadata);
  v93 = _s23LighthouseDataProcessor012ContextProtoD8MetadataV2eeoiySbAC_ACtFZ_0(v90, v92);
  sub_240388AE4((uint64_t)v92, type metadata accessor for ContextProtoContextMetadata);
  sub_2403A97FC(v157, &qword_256FFB010);
  sub_2403A97FC(v158, &qword_256FFB010);
  sub_240388AE4(v90, type metadata accessor for ContextProtoContextMetadata);
  sub_2403A97FC(v82, &qword_256FFB010);
  if ((v93 & 1) == 0)
    goto LABEL_44;
LABEL_24:
  v94 = v160;
  v95 = v139;
  sub_2403A9210((uint64_t)&v66[v160[8]], v139, &qword_256FFA3A8);
  v96 = v142;
  sub_2403A9210((uint64_t)&v163[v94[8]], v142, &qword_256FFA3A8);
  v39 = v140;
  v97 = (uint64_t)&v140[*(int *)(v138 + 48)];
  sub_2403A9210(v95, (uint64_t)v140, &qword_256FFA3A8);
  sub_2403A9210(v96, v97, &qword_256FFA3A8);
  v98 = v80;
  v99 = v80;
  v100 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v162;
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v162)(v39, 1, v99) == 1)
  {
    sub_2403A97FC(v96, &qword_256FFA3A8);
    sub_2403A97FC(v95, &qword_256FFA3A8);
    if (v100(v97, 1, v98) == 1)
    {
      sub_2403A97FC((uint64_t)v39, &qword_256FFA3A8);
      goto LABEL_30;
    }
LABEL_7:
    sub_2403A97FC((uint64_t)v39, &qword_257000CA8);
    goto LABEL_44;
  }
  v101 = v135;
  sub_2403A9210((uint64_t)v39, (uint64_t)v135, &qword_256FFA3A8);
  if (v100(v97, 1, v98) == 1)
  {
    sub_2403A97FC(v142, &qword_256FFA3A8);
    sub_2403A97FC(v95, &qword_256FFA3A8);
    v62 = (uint64_t)v101;
    goto LABEL_6;
  }
  v102 = v152;
  sub_2403A91CC(v97, (uint64_t)v152, type metadata accessor for ToolKitProtoTypedValue);
  v103 = sub_2408A2EB4(v101, v102);
  sub_240388AE4((uint64_t)v102, type metadata accessor for ToolKitProtoTypedValue);
  sub_2403A97FC(v142, &qword_256FFA3A8);
  sub_2403A97FC(v95, &qword_256FFA3A8);
  sub_240388AE4((uint64_t)v101, type metadata accessor for ToolKitProtoTypedValue);
  sub_2403A97FC((uint64_t)v39, &qword_256FFA3A8);
  if ((v103 & 1) == 0)
    goto LABEL_44;
LABEL_30:
  v104 = v160;
  sub_2403A9210((uint64_t)&v66[v160[9]], v88, &qword_256FFB018);
  sub_2403A9210((uint64_t)&v163[v104[9]], v89, &qword_256FFB018);
  v105 = v136;
  v106 = v136 + *(int *)(v132 + 48);
  sub_2403A9210(v88, v136, &qword_256FFB018);
  v107 = v105;
  sub_2403A9210(v89, v106, &qword_256FFB018);
  v108 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v133 + 48);
  v109 = v134;
  if (v108(v107, 1, v134) == 1)
  {
    sub_2403A97FC(v89, &qword_256FFB018);
    v107 = v136;
    sub_2403A97FC(v88, &qword_256FFB018);
    if (v108(v106, 1, v109) == 1)
    {
      sub_2403A97FC(v107, &qword_256FFB018);
      goto LABEL_37;
    }
LABEL_35:
    sub_2403A97FC(v107, &qword_25700C570);
    goto LABEL_44;
  }
  sub_2403A9210(v107, v87, &qword_256FFB018);
  if (v108(v106, 1, v109) == 1)
  {
    sub_2403A97FC(v89, &qword_256FFB018);
    sub_2403A97FC(v88, &qword_256FFB018);
    sub_240388AE4(v87, type metadata accessor for ContextProtoStructuredContext);
    goto LABEL_35;
  }
  v110 = v131;
  sub_2403A91CC(v106, v131, type metadata accessor for ContextProtoStructuredContext);
  v111 = _s23LighthouseDataProcessor022ContextProtoStructuredD0V2eeoiySbAC_ACtFZ_0(v87, v110);
  sub_240388AE4(v110, type metadata accessor for ContextProtoStructuredContext);
  sub_2403A97FC(v89, &qword_256FFB018);
  sub_2403A97FC(v88, &qword_256FFB018);
  sub_240388AE4(v87, type metadata accessor for ContextProtoStructuredContext);
  sub_2403A97FC(v107, &qword_256FFB018);
  if ((v111 & 1) == 0)
    goto LABEL_44;
LABEL_37:
  v112 = v160[10];
  v113 = &v66[v112];
  v114 = *(_QWORD *)&v66[v112 + 8];
  v115 = &v163[v112];
  v116 = *((_QWORD *)v115 + 1);
  if (!v114)
  {
    if (!v116)
    {
LABEL_46:
      v119 = v160;
      v120 = &v66[v160[11]];
      v121 = v129;
      v122 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v129 + 16);
      v123 = v127;
      v124 = v130;
      v122(v127, v120, v130);
      v125 = v128;
      v122(v128, &v163[v119[11]], v124);
      sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v117 = sub_2408E5CD8();
      v126 = *(void (**)(char *, uint64_t))(v121 + 8);
      v126(v125, v124);
      v126(v123, v124);
      return v117 & 1;
    }
    goto LABEL_44;
  }
  if (!v116)
  {
LABEL_44:
    v117 = 0;
    return v117 & 1;
  }
  if (*(_QWORD *)v113 == *(_QWORD *)v115 && v114 == v116)
    goto LABEL_46;
  v117 = 0;
  if ((sub_2408E617C() & 1) != 0)
    goto LABEL_46;
  return v117 & 1;
}

uint64_t _s23LighthouseDataProcessor22ContextProtoConfidenceV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  char v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v4 = sub_2408E57A4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v17 - v9;
  if (*(float *)a1 == *(float *)a2 && *(unsigned __int8 *)(a1 + 4) == *(unsigned __int8 *)(a2 + 4))
  {
    v11 = type metadata accessor for ContextProtoConfidence(0);
    v12 = a1 + *(int *)(v11 + 24);
    v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v13(v10, v12, v4);
    v13(v8, a2 + *(int *)(v11 + 24), v4);
    sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v14 = sub_2408E5CD8();
    v15 = *(void (**)(char *, uint64_t))(v5 + 8);
    v15(v8, v4);
    v15(v10, v4);
  }
  else
  {
    v14 = 0;
  }
  return v14 & 1;
}

uint64_t _s23LighthouseDataProcessor012ContextProtoD8MetadataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  _QWORD *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  char v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  char v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  char v48;
  uint64_t *v49;
  uint64_t *v50;
  int *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unsigned int (*v56)(uint64_t, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t *v63;
  double *v64;
  char v65;
  double *v66;
  int v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  char v73;
  uint64_t v75;
  void (*v76)(char *, char *, uint64_t);
  uint64_t v77;
  char *v78;
  uint64_t *v79;
  char *v80;
  void (*v81)(char *, uint64_t);
  uint64_t v82;
  int *v83;
  uint64_t *v84;
  uint64_t *v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;

  v3 = sub_2408E57A4();
  v89 = *(_QWORD *)(v3 - 8);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v88 = (char *)&v82 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v87 = (char *)&v82 - v6;
  v95 = type metadata accessor for ContextProtoBoundingBox(0);
  v92 = *(_QWORD *)(v95 - 8);
  MEMORY[0x24BDAC7A8](v95);
  v90 = (uint64_t)&v82 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C560);
  MEMORY[0x24BDAC7A8](v8);
  v96 = (uint64_t)&v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB020);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v91 = (uint64_t)&v82 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v93 = (uint64_t)&v82 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v94 = (uint64_t)&v82 - v15;
  v16 = type metadata accessor for ContextProtoConfidence(0);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v97 = (uint64_t)&v82 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C568);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v82 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFB008);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v82 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v23);
  v28 = (char *)&v82 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v31 = (char *)&v82 - v30;
  v32 = v29[2];
  v33 = a2[2];
  if (!v32)
  {
    v86 = v3;
    if (v33)
      goto LABEL_43;
    goto LABEL_8;
  }
  if (!v33)
    goto LABEL_43;
  v86 = v3;
  if (v29[1] == a2[1] && v32 == v33 || (v34 = v29, v35 = sub_2408E617C(), v29 = v34, v36 = 0, (v35 & 1) != 0))
  {
LABEL_8:
    v37 = v29[4];
    v38 = a2[4];
    if (v37)
    {
      if (!v38)
        goto LABEL_43;
      if (v29[3] != a2[3] || v37 != v38)
      {
        v39 = v29;
        v40 = sub_2408E617C();
        v29 = v39;
        v36 = 0;
        if ((v40 & 1) == 0)
          return v36 & 1;
      }
    }
    else if (v38)
    {
      goto LABEL_43;
    }
    v82 = v8;
    v41 = v29;
    v42 = type metadata accessor for ContextProtoContextMetadata(0);
    v43 = *(int *)(v42 + 28);
    v84 = v41;
    sub_2403A9210((uint64_t)v41 + v43, (uint64_t)v31, &qword_256FFB008);
    v83 = (int *)v42;
    v44 = *(int *)(v42 + 28);
    v85 = a2;
    sub_2403A9210((uint64_t)a2 + v44, (uint64_t)v28, &qword_256FFB008);
    v45 = (uint64_t)&v21[*(int *)(v19 + 48)];
    sub_2403A9210((uint64_t)v31, (uint64_t)v21, &qword_256FFB008);
    sub_2403A9210((uint64_t)v28, v45, &qword_256FFB008);
    v46 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
    if (v46((uint64_t)v21, 1, v16) == 1)
    {
      sub_2403A97FC((uint64_t)v28, &qword_256FFB008);
      sub_2403A97FC((uint64_t)v31, &qword_256FFB008);
      if (v46(v45, 1, v16) == 1)
      {
        sub_2403A97FC((uint64_t)v21, &qword_256FFB008);
        goto LABEL_22;
      }
    }
    else
    {
      sub_2403A9210((uint64_t)v21, (uint64_t)v25, &qword_256FFB008);
      if (v46(v45, 1, v16) != 1)
      {
        v47 = v97;
        sub_2403A91CC(v45, v97, type metadata accessor for ContextProtoConfidence);
        v48 = _s23LighthouseDataProcessor22ContextProtoConfidenceV2eeoiySbAC_ACtFZ_0((uint64_t)v25, v47);
        sub_240388AE4(v47, type metadata accessor for ContextProtoConfidence);
        sub_2403A97FC((uint64_t)v28, &qword_256FFB008);
        sub_2403A97FC((uint64_t)v31, &qword_256FFB008);
        sub_240388AE4((uint64_t)v25, type metadata accessor for ContextProtoConfidence);
        sub_2403A97FC((uint64_t)v21, &qword_256FFB008);
        if ((v48 & 1) == 0)
          goto LABEL_43;
LABEL_22:
        v50 = v84;
        v49 = v85;
        if ((sub_2408C3CB0(*v84, *v85) & 1) == 0)
          goto LABEL_43;
        v51 = v83;
        v52 = v94;
        sub_2403A9210((uint64_t)v50 + v83[8], v94, &qword_256FFB020);
        v53 = v93;
        sub_2403A9210((uint64_t)v49 + v51[8], v93, &qword_256FFB020);
        v54 = v96;
        v55 = v96 + *(int *)(v82 + 48);
        sub_2403A9210(v52, v96, &qword_256FFB020);
        sub_2403A9210(v53, v55, &qword_256FFB020);
        v56 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v92 + 48);
        v57 = v95;
        if (v56(v54, 1, v95) == 1)
        {
          sub_2403A97FC(v53, &qword_256FFB020);
          sub_2403A97FC(v52, &qword_256FFB020);
          if (v56(v55, 1, v57) == 1)
          {
            sub_2403A97FC(v54, &qword_256FFB020);
LABEL_30:
            v61 = v51[9];
            v63 = v84;
            v62 = v85;
            v64 = (double *)((char *)v84 + v61);
            v65 = *((_BYTE *)v84 + v61 + 8);
            v66 = (double *)((char *)v85 + v61);
            v67 = *((unsigned __int8 *)v85 + v61 + 8);
            if ((v65 & 1) != 0)
            {
              if (!v67)
                goto LABEL_43;
            }
            else
            {
              if (*v64 != *v66)
                LOBYTE(v67) = 1;
              if ((v67 & 1) != 0)
                goto LABEL_43;
            }
            v68 = v51[10];
            v69 = (uint64_t *)((char *)v84 + v68);
            v70 = *(uint64_t *)((char *)v84 + v68 + 8);
            v71 = (uint64_t *)((char *)v85 + v68);
            v72 = v71[1];
            if (v70)
            {
              if (v72)
              {
                if (*v69 != *v71 || v70 != v72)
                {
                  v73 = sub_2408E617C();
                  v63 = v84;
                  v62 = v85;
                  v36 = 0;
                  if ((v73 & 1) == 0)
                    return v36 & 1;
                }
LABEL_45:
                v75 = v89;
                v76 = *(void (**)(char *, char *, uint64_t))(v89 + 16);
                v77 = v86;
                v78 = v87;
                v79 = v62;
                v76(v87, (char *)v63 + v51[11], v86);
                v80 = v88;
                v76(v88, (char *)v79 + v51[11], v77);
                sub_2404FA028((unint64_t *)&qword_256FFE6C0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
                v36 = sub_2408E5CD8();
                v81 = *(void (**)(char *, uint64_t))(v75 + 8);
                v81(v80, v77);
                v81(v78, v77);
                return v36 & 1;
              }
            }
            else if (!v72)
            {
              goto LABEL_45;
            }
LABEL_43:
            v36 = 0;
            return v36 & 1;
          }
        }
        else
        {
          v58 = v91;
          sub_2403A9210(v54, v91, &qword_256FFB020);
          if (v56(v55, 1, v57) != 1)
          {
            v59 = v90;
            sub_2403A91CC(v55, v90, type metadata accessor for ContextProtoBoundingBox);
            v60 = _s23LighthouseDataProcessor23ContextProtoBoundingBoxV2eeoiySbAC_ACtFZ_0(v58, v59);
            sub_240388AE4(v59, type metadata accessor for ContextProtoBoundingBox);
            sub_2403A97FC(v53, &qword_256FFB020);
            sub_2403A97FC(v52, &qword_256FFB020);
            sub_240388AE4(v58, type metadata accessor for ContextProtoBoundingBox);
            sub_2403A97FC(v54, &qword_256FFB020);
            if ((v60 & 1) == 0)
              goto LABEL_43;
            goto LABEL_30;
          }
          sub_2403A97FC(v53, &qword_256FFB020);
          sub_2403A97FC(v52, &qword_256FFB020);
          sub_240388AE4(v58, type metadata accessor for ContextProtoBoundingBox);
        }
        sub_2403A97FC(v54, &qword_25700C560);
        goto LABEL_43;
      }
      sub_2403A97FC((uint64_t)v28, &qword_256FFB008);
      sub_2403A97FC((uint64_t)v31, &qword_256FFB008);
      sub_240388AE4((uint64_t)v25, type metadata accessor for ContextProtoConfidence);
    }
    sub_2403A97FC((uint64_t)v21, &qword_25700C568);
    goto LABEL_43;
  }
  return v36 & 1;
}

unint64_t sub_240710454()
{
  unint64_t result;

  result = qword_25700C1D0;
  if (!qword_25700C1D0)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ContextProtoContextType, &type metadata for ContextProtoContextType);
    atomic_store(result, (unint64_t *)&qword_25700C1D0);
  }
  return result;
}

unint64_t sub_24071049C()
{
  unint64_t result;

  result = qword_25700C1D8;
  if (!qword_25700C1D8)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ContextProtoContextType, &type metadata for ContextProtoContextType);
    atomic_store(result, (unint64_t *)&qword_25700C1D8);
  }
  return result;
}

unint64_t sub_2407104E4()
{
  unint64_t result;

  result = qword_25700C1E0;
  if (!qword_25700C1E0)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextUserClassification, &type metadata for ContextProtoStructuredContextSiriRequestContextUserClassification);
    atomic_store(result, (unint64_t *)&qword_25700C1E0);
  }
  return result;
}

unint64_t sub_24071052C()
{
  unint64_t result;

  result = qword_25700C1E8;
  if (!qword_25700C1E8)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextUserClassification, &type metadata for ContextProtoStructuredContextSiriRequestContextUserClassification);
    atomic_store(result, (unint64_t *)&qword_25700C1E8);
  }
  return result;
}

unint64_t sub_240710574()
{
  unint64_t result;

  result = qword_25700C1F0;
  if (!qword_25700C1F0)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ContextProtoConfidenceBucket, &type metadata for ContextProtoConfidenceBucket);
    atomic_store(result, (unint64_t *)&qword_25700C1F0);
  }
  return result;
}

unint64_t sub_2407105BC()
{
  unint64_t result;

  result = qword_25700C1F8;
  if (!qword_25700C1F8)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ContextProtoConfidenceBucket, &type metadata for ContextProtoConfidenceBucket);
    atomic_store(result, (unint64_t *)&qword_25700C1F8);
  }
  return result;
}

unint64_t sub_240710604()
{
  unint64_t result;

  result = qword_25700C200;
  if (!qword_25700C200)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ContextProtoQueryDecorationCaller, &type metadata for ContextProtoQueryDecorationCaller);
    atomic_store(result, (unint64_t *)&qword_25700C200);
  }
  return result;
}

unint64_t sub_24071064C()
{
  unint64_t result;

  result = qword_25700C208;
  if (!qword_25700C208)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ContextProtoQueryDecorationCaller, &type metadata for ContextProtoQueryDecorationCaller);
    atomic_store(result, (unint64_t *)&qword_25700C208);
  }
  return result;
}

unint64_t sub_240710694()
{
  unint64_t result;

  result = qword_25700C210;
  if (!qword_25700C210)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ContextProtoEntityMatcherType, &type metadata for ContextProtoEntityMatcherType);
    atomic_store(result, (unint64_t *)&qword_25700C210);
  }
  return result;
}

unint64_t sub_2407106DC()
{
  unint64_t result;

  result = qword_25700C218;
  if (!qword_25700C218)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ContextProtoEntityMatcherType, &type metadata for ContextProtoEntityMatcherType);
    atomic_store(result, (unint64_t *)&qword_25700C218);
  }
  return result;
}

unint64_t sub_240710724()
{
  unint64_t result;

  result = qword_25700C220;
  if (!qword_25700C220)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ContextProtoAliasTypesOptions, &type metadata for ContextProtoAliasTypesOptions);
    atomic_store(result, (unint64_t *)&qword_25700C220);
  }
  return result;
}

unint64_t sub_24071076C()
{
  unint64_t result;

  result = qword_25700C228;
  if (!qword_25700C228)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ContextProtoAliasTypesOptions, &type metadata for ContextProtoAliasTypesOptions);
    atomic_store(result, (unint64_t *)&qword_25700C228);
  }
  return result;
}

uint64_t sub_2407107B0()
{
  return sub_2404FA028(&qword_25700C230, type metadata accessor for ContextProtoRetrievedContext, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedContext);
}

uint64_t sub_2407107DC()
{
  return sub_2404FA028(&qword_256FFEF20, type metadata accessor for ContextProtoRetrievedContext, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedContext);
}

uint64_t sub_240710808()
{
  return sub_2404FA028(&qword_25700C0E0, type metadata accessor for ContextProtoRetrievedContext, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedContext);
}

uint64_t sub_240710834()
{
  return sub_2404FA028(&qword_25700C238, type metadata accessor for ContextProtoRetrievedContext, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedContext);
}

uint64_t sub_240710860()
{
  return sub_2404FA028(&qword_25700C240, type metadata accessor for ContextProtoContextMetadata, (uint64_t)&protocol conformance descriptor for ContextProtoContextMetadata);
}

uint64_t sub_24071088C()
{
  return sub_2404FA028(&qword_25700C248, type metadata accessor for ContextProtoContextMetadata, (uint64_t)&protocol conformance descriptor for ContextProtoContextMetadata);
}

uint64_t sub_2407108B8()
{
  return sub_2404FA028(&qword_25700C0F0, type metadata accessor for ContextProtoContextMetadata, (uint64_t)&protocol conformance descriptor for ContextProtoContextMetadata);
}

uint64_t sub_2407108E4()
{
  return sub_2404FA028(&qword_25700C250, type metadata accessor for ContextProtoContextMetadata, (uint64_t)&protocol conformance descriptor for ContextProtoContextMetadata);
}

uint64_t sub_240710910()
{
  return sub_2404FA028(&qword_25700C258, type metadata accessor for ContextProtoBoundingBox, (uint64_t)&protocol conformance descriptor for ContextProtoBoundingBox);
}

uint64_t sub_24071093C()
{
  return sub_2404FA028(&qword_25700C260, type metadata accessor for ContextProtoBoundingBox, (uint64_t)&protocol conformance descriptor for ContextProtoBoundingBox);
}

uint64_t sub_240710968()
{
  return sub_2404FA028(&qword_25700C0F8, type metadata accessor for ContextProtoBoundingBox, (uint64_t)&protocol conformance descriptor for ContextProtoBoundingBox);
}

uint64_t sub_240710994()
{
  return sub_2404FA028(&qword_25700C268, type metadata accessor for ContextProtoBoundingBox, (uint64_t)&protocol conformance descriptor for ContextProtoBoundingBox);
}

uint64_t sub_2407109C0()
{
  return sub_2404FA028(&qword_25700C270, type metadata accessor for ContextProtoSurroundingText, (uint64_t)&protocol conformance descriptor for ContextProtoSurroundingText);
}

uint64_t sub_2407109EC()
{
  return sub_2404FA028(&qword_25700C0E8, type metadata accessor for ContextProtoSurroundingText, (uint64_t)&protocol conformance descriptor for ContextProtoSurroundingText);
}

uint64_t sub_240710A18()
{
  return sub_2404FA028(&qword_25700C100, type metadata accessor for ContextProtoSurroundingText, (uint64_t)&protocol conformance descriptor for ContextProtoSurroundingText);
}

uint64_t sub_240710A44()
{
  return sub_2404FA028(&qword_25700C278, type metadata accessor for ContextProtoSurroundingText, (uint64_t)&protocol conformance descriptor for ContextProtoSurroundingText);
}

uint64_t sub_240710A70()
{
  return sub_2404FA028(&qword_25700C280, type metadata accessor for ContextProtoConfidence, (uint64_t)&protocol conformance descriptor for ContextProtoConfidence);
}

uint64_t sub_240710A9C()
{
  return sub_2404FA028(&qword_25700C288, type metadata accessor for ContextProtoConfidence, (uint64_t)&protocol conformance descriptor for ContextProtoConfidence);
}

uint64_t sub_240710AC8()
{
  return sub_2404FA028(&qword_25700C108, type metadata accessor for ContextProtoConfidence, (uint64_t)&protocol conformance descriptor for ContextProtoConfidence);
}

uint64_t sub_240710AF4()
{
  return sub_2404FA028(&qword_25700C290, type metadata accessor for ContextProtoConfidence, (uint64_t)&protocol conformance descriptor for ContextProtoConfidence);
}

uint64_t sub_240710B20()
{
  return sub_2404FA028(&qword_25700C298, type metadata accessor for ContextProtoStructuredContext, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContext);
}

uint64_t sub_240710B4C()
{
  return sub_2404FA028(&qword_25700C2A0, type metadata accessor for ContextProtoStructuredContext, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContext);
}

uint64_t sub_240710B78()
{
  return sub_2404FA028(&qword_25700C110, type metadata accessor for ContextProtoStructuredContext, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContext);
}

uint64_t sub_240710BA4()
{
  return sub_2404FA028(&qword_25700C2A8, type metadata accessor for ContextProtoStructuredContext, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContext);
}

uint64_t sub_240710BD0()
{
  return sub_2404FA028(&qword_25700C2B0, type metadata accessor for ContextProtoStructuredContextSiriRequestContext, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContext);
}

uint64_t sub_240710BFC()
{
  return sub_2404FA028(&qword_25700C2B8, type metadata accessor for ContextProtoStructuredContextSiriRequestContext, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContext);
}

uint64_t sub_240710C28()
{
  return sub_2404FA028(&qword_25700C118, type metadata accessor for ContextProtoStructuredContextSiriRequestContext, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContext);
}

uint64_t sub_240710C54()
{
  return sub_2404FA028(&qword_25700C2C0, type metadata accessor for ContextProtoStructuredContextSiriRequestContext, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContext);
}

uint64_t sub_240710C80()
{
  return sub_2404FA028(&qword_25700C2C8, type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextContentRestriction);
}

uint64_t sub_240710CAC()
{
  return sub_2404FA028(&qword_25700C2D0, type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextContentRestriction);
}

uint64_t sub_240710CD8()
{
  return sub_2404FA028(&qword_25700C120, type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextContentRestriction);
}

uint64_t sub_240710D04()
{
  return sub_2404FA028(&qword_25700C2D8, type metadata accessor for ContextProtoStructuredContextSiriRequestContextContentRestriction, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextContentRestriction);
}

uint64_t sub_240710D30()
{
  return sub_2404FA028(&qword_25700C2E0, type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextUser);
}

uint64_t sub_240710D5C()
{
  return sub_2404FA028(&qword_25700C2E8, type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextUser);
}

uint64_t sub_240710D88()
{
  return sub_2404FA028(&qword_25700C128, type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextUser);
}

uint64_t sub_240710DB4()
{
  return sub_2404FA028(&qword_25700C2F0, type metadata accessor for ContextProtoStructuredContextSiriRequestContextUser, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextUser);
}

uint64_t sub_240710DE0()
{
  return sub_2404FA028(&qword_25700C2F8, type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextMeCard);
}

uint64_t sub_240710E0C()
{
  return sub_2404FA028(&qword_25700C300, type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextMeCard);
}

uint64_t sub_240710E38()
{
  return sub_2404FA028(&qword_25700C138, type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextMeCard);
}

uint64_t sub_240710E64()
{
  return sub_2404FA028(&qword_25700C308, type metadata accessor for ContextProtoStructuredContextSiriRequestContextMeCard, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextMeCard);
}

uint64_t sub_240710E90()
{
  return sub_2404FA028(&qword_25700C310, type metadata accessor for ContextProtoStructuredContextSiriRequestContextAddress, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextAddress);
}

uint64_t sub_240710EBC()
{
  return sub_2404FA028(&qword_25700C130, type metadata accessor for ContextProtoStructuredContextSiriRequestContextAddress, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextAddress);
}

uint64_t sub_240710EE8()
{
  return sub_2404FA028(&qword_25700C140, type metadata accessor for ContextProtoStructuredContextSiriRequestContextAddress, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextAddress);
}

uint64_t sub_240710F14()
{
  return sub_2404FA028(&qword_25700C318, type metadata accessor for ContextProtoStructuredContextSiriRequestContextAddress, (uint64_t)&protocol conformance descriptor for ContextProtoStructuredContextSiriRequestContextAddress);
}

uint64_t sub_240710F40()
{
  return sub_2404FA028(&qword_25700C320, type metadata accessor for ContextProtoQueryDecorationOutput, (uint64_t)&protocol conformance descriptor for ContextProtoQueryDecorationOutput);
}

uint64_t sub_240710F6C()
{
  return sub_2404FA028(&qword_25700C328, type metadata accessor for ContextProtoQueryDecorationOutput, (uint64_t)&protocol conformance descriptor for ContextProtoQueryDecorationOutput);
}

uint64_t sub_240710F98()
{
  return sub_2404FA028(&qword_25700C148, type metadata accessor for ContextProtoQueryDecorationOutput, (uint64_t)&protocol conformance descriptor for ContextProtoQueryDecorationOutput);
}

uint64_t sub_240710FC4()
{
  return sub_2404FA028(&qword_25700C330, type metadata accessor for ContextProtoQueryDecorationOutput, (uint64_t)&protocol conformance descriptor for ContextProtoQueryDecorationOutput);
}

uint64_t sub_240710FF0()
{
  return sub_2404FA028(&qword_25700C338, type metadata accessor for ContextProtoQueryDecorationInput, (uint64_t)&protocol conformance descriptor for ContextProtoQueryDecorationInput);
}

uint64_t sub_24071101C()
{
  return sub_2404FA028(&qword_25700C340, type metadata accessor for ContextProtoQueryDecorationInput, (uint64_t)&protocol conformance descriptor for ContextProtoQueryDecorationInput);
}

uint64_t sub_240711048()
{
  return sub_2404FA028(&qword_25700C158, type metadata accessor for ContextProtoQueryDecorationInput, (uint64_t)&protocol conformance descriptor for ContextProtoQueryDecorationInput);
}

uint64_t sub_240711074()
{
  return sub_2404FA028(&qword_25700C348, type metadata accessor for ContextProtoQueryDecorationInput, (uint64_t)&protocol conformance descriptor for ContextProtoQueryDecorationInput);
}

uint64_t sub_2407110A0()
{
  return sub_2404FA028(&qword_25700C350, type metadata accessor for ContextProtoDynamicEnumerationEntity, (uint64_t)&protocol conformance descriptor for ContextProtoDynamicEnumerationEntity);
}

uint64_t sub_2407110CC()
{
  return sub_2404FA028(&qword_257000F58, type metadata accessor for ContextProtoDynamicEnumerationEntity, (uint64_t)&protocol conformance descriptor for ContextProtoDynamicEnumerationEntity);
}

uint64_t sub_2407110F8()
{
  return sub_2404FA028(&qword_25700C160, type metadata accessor for ContextProtoDynamicEnumerationEntity, (uint64_t)&protocol conformance descriptor for ContextProtoDynamicEnumerationEntity);
}

uint64_t sub_240711124()
{
  return sub_2404FA028(&qword_25700C358, type metadata accessor for ContextProtoDynamicEnumerationEntity, (uint64_t)&protocol conformance descriptor for ContextProtoDynamicEnumerationEntity);
}

uint64_t sub_240711150()
{
  return sub_2404FA028(&qword_25700C360, type metadata accessor for ContextProtoRetrievedTool, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedTool);
}

uint64_t sub_24071117C()
{
  return sub_2404FA028(&qword_256FFEE78, type metadata accessor for ContextProtoRetrievedTool, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedTool);
}

uint64_t sub_2407111A8()
{
  return sub_2404FA028(&qword_25700C170, type metadata accessor for ContextProtoRetrievedTool, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedTool);
}

uint64_t sub_2407111D4()
{
  return sub_2404FA028(&qword_25700C368, type metadata accessor for ContextProtoRetrievedTool, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedTool);
}

unint64_t sub_240711204()
{
  unint64_t result;

  result = qword_25700C370;
  if (!qword_25700C370)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ContextProtoRetrievedTool.Stage, &type metadata for ContextProtoRetrievedTool.Stage);
    atomic_store(result, (unint64_t *)&qword_25700C370);
  }
  return result;
}

unint64_t sub_24071124C()
{
  unint64_t result;

  result = qword_25700C378;
  if (!qword_25700C378)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ContextProtoRetrievedTool.Stage, &type metadata for ContextProtoRetrievedTool.Stage);
    atomic_store(result, (unint64_t *)&qword_25700C378);
  }
  return result;
}

uint64_t sub_240711290()
{
  return sub_2404FA028(&qword_25700C380, type metadata accessor for ContextProtoRetrievedTool.Definition, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedTool.Definition);
}

uint64_t sub_2407112BC()
{
  return sub_2404FA028(&qword_25700C388, type metadata accessor for ContextProtoRetrievedTool.Definition, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedTool.Definition);
}

uint64_t sub_2407112E8()
{
  return sub_2404FA028(&qword_25700C178, type metadata accessor for ContextProtoRetrievedTool.Definition, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedTool.Definition);
}

uint64_t sub_240711314()
{
  return sub_2404FA028(&qword_25700C390, type metadata accessor for ContextProtoRetrievedTool.Definition, (uint64_t)&protocol conformance descriptor for ContextProtoRetrievedTool.Definition);
}

uint64_t sub_240711340()
{
  return sub_2404FA028(&qword_25700C398, type metadata accessor for ContextProtoSampleInvocation, (uint64_t)&protocol conformance descriptor for ContextProtoSampleInvocation);
}

uint64_t sub_24071136C()
{
  return sub_2404FA028(&qword_25700C168, type metadata accessor for ContextProtoSampleInvocation, (uint64_t)&protocol conformance descriptor for ContextProtoSampleInvocation);
}

uint64_t sub_240711398()
{
  return sub_2404FA028(&qword_25700C180, type metadata accessor for ContextProtoSampleInvocation, (uint64_t)&protocol conformance descriptor for ContextProtoSampleInvocation);
}

uint64_t sub_2407113C4()
{
  return sub_2404FA028(&qword_25700C3A0, type metadata accessor for ContextProtoSampleInvocation, (uint64_t)&protocol conformance descriptor for ContextProtoSampleInvocation);
}

uint64_t sub_2407113F0()
{
  return sub_2404FA028(&qword_25700C3A8, type metadata accessor for ContextProtoToolRetrievalType, (uint64_t)&protocol conformance descriptor for ContextProtoToolRetrievalType);
}

uint64_t sub_24071141C()
{
  return sub_2404FA028(&qword_256FFEE80, type metadata accessor for ContextProtoToolRetrievalType, (uint64_t)&protocol conformance descriptor for ContextProtoToolRetrievalType);
}

uint64_t sub_240711448()
{
  return sub_2404FA028(&qword_25700C188, type metadata accessor for ContextProtoToolRetrievalType, (uint64_t)&protocol conformance descriptor for ContextProtoToolRetrievalType);
}

uint64_t sub_240711474()
{
  return sub_2404FA028(&qword_25700C3B0, type metadata accessor for ContextProtoToolRetrievalType, (uint64_t)&protocol conformance descriptor for ContextProtoToolRetrievalType);
}

uint64_t sub_2407114A0()
{
  return sub_2404FA028(&qword_25700C3B8, type metadata accessor for ContextProtoToolQuery, (uint64_t)&protocol conformance descriptor for ContextProtoToolQuery);
}

uint64_t sub_2407114CC()
{
  return sub_2404FA028(&qword_25700C3C0, type metadata accessor for ContextProtoToolQuery, (uint64_t)&protocol conformance descriptor for ContextProtoToolQuery);
}

uint64_t sub_2407114F8()
{
  return sub_2404FA028(&qword_25700C190, type metadata accessor for ContextProtoToolQuery, (uint64_t)&protocol conformance descriptor for ContextProtoToolQuery);
}

uint64_t sub_240711524()
{
  return sub_2404FA028(&qword_25700C3C8, type metadata accessor for ContextProtoToolQuery, (uint64_t)&protocol conformance descriptor for ContextProtoToolQuery);
}

uint64_t sub_240711550()
{
  return sub_2404FA028(&qword_25700C3D0, type metadata accessor for ContextProtoToolQueryOutput, (uint64_t)&protocol conformance descriptor for ContextProtoToolQueryOutput);
}

uint64_t sub_24071157C()
{
  return sub_2404FA028(&qword_256FFEF40, type metadata accessor for ContextProtoToolQueryOutput, (uint64_t)&protocol conformance descriptor for ContextProtoToolQueryOutput);
}

uint64_t sub_2407115A8()
{
  return sub_2404FA028(&qword_25700C198, type metadata accessor for ContextProtoToolQueryOutput, (uint64_t)&protocol conformance descriptor for ContextProtoToolQueryOutput);
}

uint64_t sub_2407115D4()
{
  return sub_2404FA028(&qword_25700C3D8, type metadata accessor for ContextProtoToolQueryOutput, (uint64_t)&protocol conformance descriptor for ContextProtoToolQueryOutput);
}

uint64_t sub_240711600()
{
  return sub_2404FA028(&qword_25700C3E0, type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse, (uint64_t)&protocol conformance descriptor for ContextProtoQueryDecorationToolRetrievalResponse);
}

uint64_t sub_24071162C()
{
  return sub_2404FA028(&qword_257000CA0, type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse, (uint64_t)&protocol conformance descriptor for ContextProtoQueryDecorationToolRetrievalResponse);
}

uint64_t sub_240711658()
{
  return sub_2404FA028(&qword_25700C1A0, type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse, (uint64_t)&protocol conformance descriptor for ContextProtoQueryDecorationToolRetrievalResponse);
}

uint64_t sub_240711684()
{
  return sub_2404FA028(&qword_25700C3E8, type metadata accessor for ContextProtoQueryDecorationToolRetrievalResponse, (uint64_t)&protocol conformance descriptor for ContextProtoQueryDecorationToolRetrievalResponse);
}

uint64_t sub_2407116B0()
{
  return sub_2404FA028(&qword_25700C3F0, type metadata accessor for ContextProtoSpanMatchedEntity, (uint64_t)&protocol conformance descriptor for ContextProtoSpanMatchedEntity);
}

uint64_t sub_2407116DC()
{
  return sub_2404FA028(&qword_256FFEE68, type metadata accessor for ContextProtoSpanMatchedEntity, (uint64_t)&protocol conformance descriptor for ContextProtoSpanMatchedEntity);
}

uint64_t sub_240711708()
{
  return sub_2404FA028(&qword_25700C1B0, type metadata accessor for ContextProtoSpanMatchedEntity, (uint64_t)&protocol conformance descriptor for ContextProtoSpanMatchedEntity);
}

uint64_t sub_240711734()
{
  return sub_2404FA028(&qword_25700C3F8, type metadata accessor for ContextProtoSpanMatchedEntity, (uint64_t)&protocol conformance descriptor for ContextProtoSpanMatchedEntity);
}

uint64_t sub_240711760()
{
  return sub_2404FA028(&qword_25700C400, type metadata accessor for ContextProtoEntityMatch, (uint64_t)&protocol conformance descriptor for ContextProtoEntityMatch);
}

uint64_t sub_24071178C()
{
  return sub_2404FA028(&qword_25700C1A8, type metadata accessor for ContextProtoEntityMatch, (uint64_t)&protocol conformance descriptor for ContextProtoEntityMatch);
}

uint64_t sub_2407117B8()
{
  return sub_2404FA028(&qword_25700C1B8, type metadata accessor for ContextProtoEntityMatch, (uint64_t)&protocol conformance descriptor for ContextProtoEntityMatch);
}

uint64_t sub_2407117E4()
{
  return sub_2404FA028(&qword_25700C408, type metadata accessor for ContextProtoEntityMatch, (uint64_t)&protocol conformance descriptor for ContextProtoEntityMatch);
}

uint64_t sub_240711810()
{
  return sub_2404FA028(&qword_25700C410, type metadata accessor for ContextProtoMatchProperties, (uint64_t)&protocol conformance descriptor for ContextProtoMatchProperties);
}

uint64_t sub_24071183C()
{
  return sub_2404FA028(&qword_25700C418, type metadata accessor for ContextProtoMatchProperties, (uint64_t)&protocol conformance descriptor for ContextProtoMatchProperties);
}

uint64_t sub_240711868()
{
  return sub_2404FA028(&qword_25700C1C0, type metadata accessor for ContextProtoMatchProperties, (uint64_t)&protocol conformance descriptor for ContextProtoMatchProperties);
}

uint64_t sub_240711894()
{
  return sub_2404FA028(&qword_25700C420, type metadata accessor for ContextProtoMatchProperties, (uint64_t)&protocol conformance descriptor for ContextProtoMatchProperties);
}

uint64_t sub_2407118C0()
{
  return sub_2404FA028(&qword_25700C428, type metadata accessor for ContextProtoAliasTypes, (uint64_t)&protocol conformance descriptor for ContextProtoAliasTypes);
}

uint64_t sub_2407118EC()
{
  return sub_2404FA028(&qword_25700C430, type metadata accessor for ContextProtoAliasTypes, (uint64_t)&protocol conformance descriptor for ContextProtoAliasTypes);
}

uint64_t sub_240711918()
{
  return sub_2404FA028(&qword_25700C1C8, type metadata accessor for ContextProtoAliasTypes, (uint64_t)&protocol conformance descriptor for ContextProtoAliasTypes);
}

uint64_t sub_240711944()
{
  return sub_2404FA028(&qword_25700C438, type metadata accessor for ContextProtoAliasTypes, (uint64_t)&protocol conformance descriptor for ContextProtoAliasTypes);
}

uint64_t sub_240711970(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ContextProtoStructuredContextKind(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id sub_2407119B4(uint64_t a1, uint64_t a2)
{
  return sub_2407119C8(a1, a2, &qword_2543560A8, (uint64_t (*)(char *, uint64_t, uint64_t))sub_2404FC4A8);
}

id sub_2407119C8(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(char *, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  void *v22;
  void *v23;
  uint64_t v25;

  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2408E5C6C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(a3);
  sub_2403A9210(v4 + *(int *)(v16 + 28), (uint64_t)v11, &qword_254355CD0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_2403A97FC((uint64_t)v11, &qword_254355CD0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
    v17 = a4(v15, a1, a2);
    if (v18 >> 60 != 15)
    {
      v20 = v17;
      v21 = v18;
      v22 = (void *)objc_opt_self();
      v23 = (void *)sub_2408E554C();
      v19 = objc_msgSend(v22, sel_eventWithData_dataVersion_, v23, 0);
      sub_2403C2424(v20, v21);

      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
      return v19;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  return 0;
}

uint64_t sub_240711B8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_2408E5C48();
  __swift_allocate_value_buffer(v0, qword_254356108);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_254356108);
  if (qword_2543560E0 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_254356410);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t BiomeProvisionalSELFIngestor.init(dataPool:config:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_2408E569C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a3, a1, v6);
  v7 = type metadata accessor for BiomeProvisionalSELFIngestor();
  sub_2403A9210(a2, a3 + *(int *)(v7 + 20), &qword_254355C80);
  return sub_240711CD4(a2, a3 + *(int *)(v7 + 24));
}

uint64_t type metadata accessor for BiomeProvisionalSELFIngestor()
{
  uint64_t result;

  result = qword_254355C98;
  if (!qword_254355C98)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_240711CD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355C80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void BiomeProvisionalSELFIngestor.append(data:timestamp:)(uint64_t a1, unint64_t a2)
{
  sub_240711E4C(a1, a2);
}

uint64_t BiomeProvisionalSELFIngestor.commit()()
{
  return swift_task_switch();
}

uint64_t sub_240711D44()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;

  if (qword_254355CC0 != -1)
    swift_once();
  v1 = sub_2408E5C48();
  __swift_project_value_buffer(v1, (uint64_t)qword_254356108);
  v2 = sub_2408E5C3C();
  v3 = sub_2408E5EA0();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_240347000, v2, v3, "commit()", v4, 2u);
    MEMORY[0x242684668](v4, -1, -1);
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_240711E24(uint64_t a1, unint64_t a2)
{
  sub_240711E4C(a1, a2);
}

uint64_t sub_240711E38()
{
  return swift_task_switch();
}

void sub_240711E4C(uint64_t a1, unint64_t a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  NSObject *v14;
  unint64_t v15;
  NSObject *v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  objc_class *v24;
  char *v25;
  char *v26;
  char *v27;
  id v28;
  void *v29;
  NSObject *v30;
  id v31;
  id v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  _QWORD *v36;
  id v37;
  uint64_t v38;
  NSObject *v39;
  _QWORD v40[2];
  NSObject *v41;
  NSObject *v42;
  objc_super v43;
  uint64_t v44;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFCA68);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for BiomeProvisionalSELFIngestor();
  v8 = sub_2404FC49C(a1, a2);
  if (v9 >> 60 == 15)
  {
    if (qword_254355CC0 != -1)
      swift_once();
    v10 = sub_2408E5C48();
    __swift_project_value_buffer(v10, (uint64_t)qword_254356108);
    v11 = sub_2408E5C3C();
    v12 = sub_2408E5EAC();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v13 = 0;
      _os_log_impl(&dword_240347000, v11, v12, "Skipping event missing data body", v13, 2u);
      MEMORY[0x242684668](v13, -1, -1);
    }

  }
  else
  {
    v14 = v8;
    v15 = v9;
    v16 = sub_2407119C8(a1, a2, &qword_254355C80, (uint64_t (*)(char *, uint64_t, uint64_t))sub_2404FC4A8);
    if (v16)
    {
      v42 = v16;
      if (qword_254355CC0 != -1)
        swift_once();
      v17 = sub_2408E5C48();
      __swift_project_value_buffer(v17, (uint64_t)qword_254356108);
      sub_240360070((uint64_t)v14, v15);
      v18 = sub_2408E5C3C();
      v19 = sub_2408E5E94();
      if (os_log_type_enabled(v18, v19))
      {
        v41 = v14;
        *(_DWORD *)swift_slowAlloc() = 134217984;
        __asm { BR              X10 }
      }
      sub_2403C2424((uint64_t)v14, v15);

      v24 = (objc_class *)type metadata accessor for DillProvisional();
      v25 = (char *)objc_allocWithZone(v24);
      v26 = &v25[OBJC_IVAR____TtC23LighthouseDataProcessor15DillProvisional_dillData];
      *(_QWORD *)v26 = v14;
      *((_QWORD *)v26 + 1) = v15;
      v27 = &v25[OBJC_IVAR____TtC23LighthouseDataProcessor15DillProvisional_eventId];
      *(_QWORD *)v27 = 0xD000000000000021;
      *((_QWORD *)v27 + 1) = 0x8000000240929410;
      *(_QWORD *)&v25[OBJC_IVAR____TtC23LighthouseDataProcessor15DillProvisional_version] = 4;
      sub_240360070((uint64_t)v14, v15);
      v43.receiver = v25;
      v43.super_class = v24;
      v28 = objc_msgSendSuper2(&v43, sel_init);
      if (!v28)
      {
        __break(1u);
        JUMPOUT(0x240712484);
      }
      v29 = v28;
      v30 = v42;
      sub_2408E56B4();
      sub_2408E5690();
      if (v2)
      {
        sub_2403A97FC((uint64_t)v7, &qword_256FFCA68);
        v31 = v2;
        v32 = v2;
        v33 = sub_2408E5C3C();
        v34 = sub_2408E5EAC();
        v42 = v33;
        if (os_log_type_enabled(v33, v34))
        {
          v41 = v30;
          v35 = (uint8_t *)swift_slowAlloc();
          v36 = (_QWORD *)swift_slowAlloc();
          *(_DWORD *)v35 = 138412290;
          v40[1] = v35 + 4;
          v37 = v2;
          v38 = _swift_stdlib_bridgeErrorToNSError();
          v44 = v38;
          sub_2408E5F3C();
          *v36 = v38;

          v39 = v42;
          _os_log_impl(&dword_240347000, v42, v34, "Error adding event to pool %@", v35, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName(&qword_257015860);
          swift_arrayDestroy();
          MEMORY[0x242684668](v36, -1, -1);
          MEMORY[0x242684668](v35, -1, -1);

          sub_2403C2424((uint64_t)v14, v15);
        }
        else
        {
          sub_2403C2424((uint64_t)v14, v15);

        }
      }
      else
      {

        sub_2403C2424((uint64_t)v14, v15);
        sub_2403A97FC((uint64_t)v7, &qword_256FFCA68);
      }
    }
    else
    {
      if (qword_254355CC0 != -1)
        swift_once();
      v20 = sub_2408E5C48();
      __swift_project_value_buffer(v20, (uint64_t)qword_254356108);
      v21 = sub_2408E5C3C();
      v22 = sub_2408E5EAC();
      if (os_log_type_enabled(v21, v22))
      {
        v23 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v23 = 0;
        _os_log_impl(&dword_240347000, v21, v22, "Skipping event missing monotonic timestamp", v23, 2u);
        MEMORY[0x242684668](v23, -1, -1);

        sub_2403C2424((uint64_t)v14, v15);
      }
      else
      {
        sub_2403C2424((uint64_t)v14, v15);

      }
    }
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for BiomeProvisionalSELFIngestor(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  void *v11;
  uint64_t v12;
  char v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  int v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  void *v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  int v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  _QWORD *v60;
  unsigned int (*v61)(char *, uint64_t, uint64_t);

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *a1 = *a2;
    v22 = (_QWORD *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_2408E569C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = *(void **)((char *)a2 + v8);
    v12 = *(_QWORD *)((char *)a2 + v8 + 8);
    v13 = *((_BYTE *)a2 + v8 + 16);
    sub_240420930(v11, v12, v13);
    *(_QWORD *)v9 = v11;
    *((_QWORD *)v9 + 1) = v12;
    v9[16] = v13;
    v14 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_254355C80);
    v15 = v14[7];
    v16 = &v9[v15];
    v17 = &v10[v15];
    v18 = sub_2408E5C6C();
    v19 = *(_QWORD *)(v18 - 8);
    v61 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
    if (v61(v17, 1, v18))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
    v60 = a1;
    v23 = v14[8];
    v24 = &v9[v23];
    v25 = &v10[v23];
    if (v61(&v10[v23], 1, v18))
    {
      v26 = v19;
      v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v24, v25, v18);
      v26 = v19;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v24, 0, 1, v18);
    }
    *(_QWORD *)&v9[v14[9]] = *(_QWORD *)&v10[v14[9]];
    v28 = v14[10];
    v29 = &v9[v28];
    v30 = &v10[v28];
    v31 = v10[v28 + 8];
    swift_bridgeObjectRetain();
    *(_QWORD *)v29 = *(_QWORD *)v30;
    if (v31 == 255)
    {
      v29[8] = v30[8];
    }
    else
    {
      v29[8] = v31;
      swift_bridgeObjectRetain();
    }
    v32 = v14[11];
    v33 = &v9[v32];
    v34 = &v10[v32];
    v35 = v26;
    if (*(_QWORD *)v34)
    {
      v36 = *((_QWORD *)v34 + 1);
      *(_QWORD *)v33 = *(_QWORD *)v34;
      *((_QWORD *)v33 + 1) = v36;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v33 = *(_OWORD *)v34;
    }
    v22 = v60;
    *(_QWORD *)&v9[v14[12]] = *(_QWORD *)&v10[v14[12]];
    v37 = *(int *)(a3 + 24);
    v38 = (char *)v60 + v37;
    v39 = (char *)a2 + v37;
    v40 = *(void **)((char *)a2 + v37);
    v41 = *((_QWORD *)v39 + 1);
    v42 = v39[16];
    swift_bridgeObjectRetain();
    sub_240420930(v40, v41, v42);
    *(_QWORD *)v38 = v40;
    *((_QWORD *)v38 + 1) = v41;
    v38[16] = v42;
    v43 = v14[7];
    v44 = &v38[v43];
    v45 = &v39[v43];
    if (v61(&v39[v43], 1, v18))
    {
      v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
      memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v44, v45, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v44, 0, 1, v18);
    }
    v47 = v14[8];
    v48 = &v38[v47];
    v49 = &v39[v47];
    if (v61(&v39[v47], 1, v18))
    {
      v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
      memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v48, v49, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v48, 0, 1, v18);
    }
    *(_QWORD *)&v38[v14[9]] = *(_QWORD *)&v39[v14[9]];
    v51 = v14[10];
    v52 = &v38[v51];
    v53 = &v39[v51];
    v54 = v39[v51 + 8];
    swift_bridgeObjectRetain();
    *(_QWORD *)v52 = *(_QWORD *)v53;
    if (v54 == 255)
    {
      v52[8] = v53[8];
    }
    else
    {
      v52[8] = v54;
      swift_bridgeObjectRetain();
    }
    v55 = v14[11];
    v56 = &v38[v55];
    v57 = &v39[v55];
    if (*(_QWORD *)v57)
    {
      v58 = *((_QWORD *)v57 + 1);
      *(_QWORD *)v56 = *(_QWORD *)v57;
      *((_QWORD *)v56 + 1) = v58;
      swift_retain();
    }
    else
    {
      *(_OWORD *)v56 = *(_OWORD *)v57;
    }
    *(_QWORD *)&v38[v14[12]] = *(_QWORD *)&v39[v14[12]];
    swift_bridgeObjectRetain();
  }
  return v22;
}

uint64_t destroy for BiomeProvisionalSELFIngestor(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = sub_2408E569C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  sub_240420B24(*(void **)v5, *(_QWORD *)(v5 + 8), *(_BYTE *)(v5 + 16));
  v6 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_254355C80);
  v7 = v5 + v6[7];
  v8 = sub_2408E5C6C();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (!v10(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  v11 = v5 + v6[8];
  if (!v10(v11, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v11, v8);
  swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(v5 + v6[10] + 8) != 255)
    swift_bridgeObjectRelease();
  if (*(_QWORD *)(v5 + v6[11]))
    swift_release();
  swift_bridgeObjectRelease();
  v12 = a1 + *(int *)(a2 + 24);
  sub_240420B24(*(void **)v12, *(_QWORD *)(v12 + 8), *(_BYTE *)(v12 + 16));
  v13 = v12 + v6[7];
  if (!v10(v13, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v13, v8);
  v14 = v12 + v6[8];
  if (!v10(v14, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v14, v8);
  swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(v12 + v6[10] + 8) != 255)
    swift_bridgeObjectRelease();
  if (*(_QWORD *)(v12 + v6[11]))
    swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for BiomeProvisionalSELFIngestor(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  char v12;
  int *v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(const void *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  void *v40;
  const void *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  const void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;

  v6 = sub_2408E569C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v56 = a3;
  v57 = a1;
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(void **)(a2 + v7);
  v11 = *(_QWORD *)(a2 + v7 + 8);
  v12 = *(_BYTE *)(a2 + v7 + 16);
  sub_240420930(v10, v11, v12);
  *(_QWORD *)v8 = v10;
  *(_QWORD *)(v8 + 8) = v11;
  *(_BYTE *)(v8 + 16) = v12;
  v13 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_254355C80);
  v14 = v13[7];
  v15 = (void *)(v8 + v14);
  v16 = (const void *)(v9 + v14);
  v17 = sub_2408E5C6C();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48);
  if (v19(v16, 1, v17))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v18 + 16))(v15, v16, v17);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  v21 = v13[8];
  v22 = (void *)(v8 + v21);
  v23 = (const void *)(v9 + v21);
  if (v19((const void *)(v9 + v21), 1, v17))
  {
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v18 + 16))(v22, v23, v17);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v22, 0, 1, v17);
  }
  *(_QWORD *)(v8 + v13[9]) = *(_QWORD *)(v9 + v13[9]);
  v25 = v13[10];
  v26 = v8 + v25;
  v27 = v9 + v25;
  v28 = *(unsigned __int8 *)(v9 + v25 + 8);
  swift_bridgeObjectRetain();
  *(_QWORD *)v26 = *(_QWORD *)v27;
  if (v28 == 255)
  {
    *(_BYTE *)(v26 + 8) = *(_BYTE *)(v27 + 8);
  }
  else
  {
    *(_BYTE *)(v26 + 8) = v28;
    swift_bridgeObjectRetain();
  }
  v29 = v13[11];
  v30 = (_QWORD *)(v8 + v29);
  v31 = (_QWORD *)(v9 + v29);
  if (*v31)
  {
    v32 = v31[1];
    *v30 = *v31;
    v30[1] = v32;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v30 = *(_OWORD *)v31;
  }
  *(_QWORD *)(v8 + v13[12]) = *(_QWORD *)(v9 + v13[12]);
  v33 = *(int *)(v56 + 24);
  v34 = v57 + v33;
  v35 = a2 + v33;
  v36 = *(void **)(a2 + v33);
  v37 = *(_QWORD *)(v35 + 8);
  v38 = *(_BYTE *)(v35 + 16);
  swift_bridgeObjectRetain();
  sub_240420930(v36, v37, v38);
  *(_QWORD *)v34 = v36;
  *(_QWORD *)(v34 + 8) = v37;
  *(_BYTE *)(v34 + 16) = v38;
  v39 = v13[7];
  v40 = (void *)(v34 + v39);
  v41 = (const void *)(v35 + v39);
  if (v19((const void *)(v35 + v39), 1, v17))
  {
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v18 + 16))(v40, v41, v17);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v40, 0, 1, v17);
  }
  v43 = v13[8];
  v44 = (void *)(v34 + v43);
  v45 = (const void *)(v35 + v43);
  if (v19((const void *)(v35 + v43), 1, v17))
  {
    v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v18 + 16))(v44, v45, v17);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v44, 0, 1, v17);
  }
  *(_QWORD *)(v34 + v13[9]) = *(_QWORD *)(v35 + v13[9]);
  v47 = v13[10];
  v48 = v34 + v47;
  v49 = v35 + v47;
  v50 = *(unsigned __int8 *)(v35 + v47 + 8);
  swift_bridgeObjectRetain();
  *(_QWORD *)v48 = *(_QWORD *)v49;
  if (v50 == 255)
  {
    *(_BYTE *)(v48 + 8) = *(_BYTE *)(v49 + 8);
  }
  else
  {
    *(_BYTE *)(v48 + 8) = v50;
    swift_bridgeObjectRetain();
  }
  v51 = v13[11];
  v52 = (_QWORD *)(v34 + v51);
  v53 = (_QWORD *)(v35 + v51);
  if (*v53)
  {
    v54 = v53[1];
    *v52 = *v53;
    v52[1] = v54;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v52 = *(_OWORD *)v53;
  }
  *(_QWORD *)(v34 + v13[12]) = *(_QWORD *)(v35 + v13[12]);
  swift_bridgeObjectRetain();
  return v57;
}

uint64_t assignWithCopy for BiomeProvisionalSELFIngestor(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  char v12;
  void *v13;
  uint64_t v14;
  char v15;
  int *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(void *, uint64_t, uint64_t);
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int v35;
  int v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  char v51;
  void *v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  void *v56;
  void *v57;
  int v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  void *v63;
  int v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  int v70;
  int v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v82;
  uint64_t v83;

  v6 = sub_2408E569C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v82 = a3;
  v83 = a1;
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(void **)(a2 + v7);
  v11 = *(_QWORD *)(a2 + v7 + 8);
  v12 = *(_BYTE *)(a2 + v7 + 16);
  sub_240420930(v10, v11, v12);
  v13 = *(void **)v8;
  v14 = *(_QWORD *)(v8 + 8);
  v15 = *(_BYTE *)(v8 + 16);
  *(_QWORD *)v8 = v10;
  *(_QWORD *)(v8 + 8) = v11;
  *(_BYTE *)(v8 + 16) = v12;
  sub_240420B24(v13, v14, v15);
  v16 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_254355C80);
  v17 = v16[7];
  v18 = (void *)(v8 + v17);
  v19 = (void *)(v9 + v17);
  v20 = sub_2408E5C6C();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v21 + 48);
  v23 = v22(v18, 1, v20);
  v24 = v22(v19, 1, v20);
  if (v23)
  {
    if (!v24)
    {
      (*(void (**)(void *, void *, uint64_t))(v21 + 16))(v18, v19, v20);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v24)
  {
    (*(void (**)(void *, uint64_t))(v21 + 8))(v18, v20);
LABEL_6:
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v21 + 24))(v18, v19, v20);
LABEL_7:
  v26 = v16[8];
  v27 = (void *)(v8 + v26);
  v28 = (void *)(v9 + v26);
  v29 = v22((void *)(v8 + v26), 1, v20);
  v30 = v22(v28, 1, v20);
  if (v29)
  {
    if (!v30)
    {
      (*(void (**)(void *, void *, uint64_t))(v21 + 16))(v27, v28, v20);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v27, 0, 1, v20);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v30)
  {
    (*(void (**)(void *, uint64_t))(v21 + 8))(v27, v20);
LABEL_12:
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v21 + 24))(v27, v28, v20);
LABEL_13:
  *(_QWORD *)(v8 + v16[9]) = *(_QWORD *)(v9 + v16[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v32 = v16[10];
  v33 = v8 + v32;
  v34 = (uint64_t *)(v9 + v32);
  v35 = *(unsigned __int8 *)(v8 + v32 + 8);
  v36 = *(unsigned __int8 *)(v9 + v32 + 8);
  if (v35 == 255)
  {
    if (v36 == 255)
    {
      v38 = *v34;
      *(_BYTE *)(v33 + 8) = *((_BYTE *)v34 + 8);
      *(_QWORD *)v33 = v38;
    }
    else
    {
      *(_QWORD *)v33 = *v34;
      *(_BYTE *)(v33 + 8) = v36;
      swift_bridgeObjectRetain();
    }
  }
  else if (v36 == 255)
  {
    sub_240421518(v33);
    v37 = *((_BYTE *)v34 + 8);
    *(_QWORD *)v33 = *v34;
    *(_BYTE *)(v33 + 8) = v37;
  }
  else
  {
    *(_QWORD *)v33 = *v34;
    *(_BYTE *)(v33 + 8) = v36;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v39 = v16[11];
  v40 = (_QWORD *)(v8 + v39);
  v41 = v9 + v39;
  v42 = *(_QWORD *)(v8 + v39);
  v43 = *(_QWORD *)(v9 + v39);
  if (v42)
  {
    if (v43)
    {
      v44 = *(_QWORD *)(v41 + 8);
      *v40 = v43;
      v40[1] = v44;
      swift_retain();
      swift_release();
      goto LABEL_29;
    }
    swift_release();
  }
  else if (v43)
  {
    v45 = *(_QWORD *)(v41 + 8);
    *v40 = v43;
    v40[1] = v45;
    swift_retain();
    goto LABEL_29;
  }
  *(_OWORD *)v40 = *(_OWORD *)v41;
LABEL_29:
  *(_QWORD *)(v8 + v16[12]) = *(_QWORD *)(v9 + v16[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v46 = *(int *)(v82 + 24);
  v47 = v83 + v46;
  v48 = a2 + v46;
  v49 = *(void **)(a2 + v46);
  v50 = *(_QWORD *)(v48 + 8);
  v51 = *(_BYTE *)(v48 + 16);
  sub_240420930(v49, v50, v51);
  v52 = *(void **)v47;
  v53 = *(_QWORD *)(v47 + 8);
  v54 = *(_BYTE *)(v47 + 16);
  *(_QWORD *)v47 = v49;
  *(_QWORD *)(v47 + 8) = v50;
  *(_BYTE *)(v47 + 16) = v51;
  sub_240420B24(v52, v53, v54);
  v55 = v16[7];
  v56 = (void *)(v47 + v55);
  v57 = (void *)(v48 + v55);
  v58 = v22((void *)(v47 + v55), 1, v20);
  v59 = v22(v57, 1, v20);
  if (v58)
  {
    if (!v59)
    {
      (*(void (**)(void *, void *, uint64_t))(v21 + 16))(v56, v57, v20);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v56, 0, 1, v20);
      goto LABEL_35;
    }
    goto LABEL_34;
  }
  if (v59)
  {
    (*(void (**)(void *, uint64_t))(v21 + 8))(v56, v20);
LABEL_34:
    v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
    memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    goto LABEL_35;
  }
  (*(void (**)(void *, void *, uint64_t))(v21 + 24))(v56, v57, v20);
LABEL_35:
  v61 = v16[8];
  v62 = (void *)(v47 + v61);
  v63 = (void *)(v48 + v61);
  v64 = v22((void *)(v47 + v61), 1, v20);
  v65 = v22(v63, 1, v20);
  if (v64)
  {
    if (!v65)
    {
      (*(void (**)(void *, void *, uint64_t))(v21 + 16))(v62, v63, v20);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v62, 0, 1, v20);
      goto LABEL_41;
    }
    goto LABEL_40;
  }
  if (v65)
  {
    (*(void (**)(void *, uint64_t))(v21 + 8))(v62, v20);
LABEL_40:
    v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
    memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
    goto LABEL_41;
  }
  (*(void (**)(void *, void *, uint64_t))(v21 + 24))(v62, v63, v20);
LABEL_41:
  *(_QWORD *)(v47 + v16[9]) = *(_QWORD *)(v48 + v16[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v67 = v16[10];
  v68 = v47 + v67;
  v69 = (uint64_t *)(v48 + v67);
  v70 = *(unsigned __int8 *)(v47 + v67 + 8);
  v71 = *(unsigned __int8 *)(v48 + v67 + 8);
  if (v70 == 255)
  {
    if (v71 == 255)
    {
      v73 = *v69;
      *(_BYTE *)(v68 + 8) = *((_BYTE *)v69 + 8);
      *(_QWORD *)v68 = v73;
    }
    else
    {
      *(_QWORD *)v68 = *v69;
      *(_BYTE *)(v68 + 8) = v71;
      swift_bridgeObjectRetain();
    }
  }
  else if (v71 == 255)
  {
    sub_240421518(v68);
    v72 = *((_BYTE *)v69 + 8);
    *(_QWORD *)v68 = *v69;
    *(_BYTE *)(v68 + 8) = v72;
  }
  else
  {
    *(_QWORD *)v68 = *v69;
    *(_BYTE *)(v68 + 8) = v71;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v74 = v16[11];
  v75 = (_QWORD *)(v47 + v74);
  v76 = v48 + v74;
  v77 = *(_QWORD *)(v47 + v74);
  v78 = *(_QWORD *)(v48 + v74);
  if (!v77)
  {
    if (v78)
    {
      v80 = *(_QWORD *)(v76 + 8);
      *v75 = v78;
      v75[1] = v80;
      swift_retain();
      goto LABEL_57;
    }
LABEL_56:
    *(_OWORD *)v75 = *(_OWORD *)v76;
    goto LABEL_57;
  }
  if (!v78)
  {
    swift_release();
    goto LABEL_56;
  }
  v79 = *(_QWORD *)(v76 + 8);
  *v75 = v78;
  v75[1] = v79;
  swift_retain();
  swift_release();
LABEL_57:
  *(_QWORD *)(v47 + v16[12]) = *(_QWORD *)(v48 + v16[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v83;
}

uint64_t initializeWithTake for BiomeProvisionalSELFIngestor(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(const void *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  const void *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  const void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;

  v6 = sub_2408E569C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v50 = a1;
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_OWORD *)v8 = *(_OWORD *)(a2 + v7);
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(a2 + v7 + 16);
  v10 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_254355C80);
  v11 = v10[7];
  v12 = (void *)(v8 + v11);
  v13 = (const void *)(v9 + v11);
  v14 = sub_2408E5C6C();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48);
  if (v16(v13, 1, v14))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v12, v13, v14);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v18 = v10[8];
  v19 = (void *)(v8 + v18);
  v20 = (const void *)(v9 + v18);
  if (v16((const void *)(v9 + v18), 1, v14))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v19, v20, v14);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v19, 0, 1, v14);
  }
  *(_QWORD *)(v8 + v10[9]) = *(_QWORD *)(v9 + v10[9]);
  v22 = v10[10];
  v23 = v8 + v22;
  v24 = v9 + v22;
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *(_BYTE *)(v23 + 8) = *(_BYTE *)(v24 + 8);
  v25 = v10[11];
  v26 = (_QWORD *)(v8 + v25);
  v27 = (uint64_t *)(v9 + v25);
  v28 = *v27;
  if (*v27)
  {
    v29 = v27[1];
    *v26 = v28;
    v26[1] = v29;
  }
  else
  {
    *(_OWORD *)v26 = *(_OWORD *)v27;
  }
  *(_QWORD *)(v8 + v10[12]) = *(_QWORD *)(v9 + v10[12]);
  v30 = *(int *)(a3 + 24);
  v31 = v50 + v30;
  v32 = a2 + v30;
  *(_OWORD *)v31 = *(_OWORD *)(a2 + v30);
  *(_BYTE *)(v31 + 16) = *(_BYTE *)(a2 + v30 + 16);
  v33 = v10[7];
  v34 = (void *)(v31 + v33);
  v35 = (const void *)(v32 + v33);
  if (v16((const void *)(v32 + v33), 1, v14))
  {
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v34, v35, v14);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v34, 0, 1, v14);
  }
  v37 = v10[8];
  v38 = (void *)(v31 + v37);
  v39 = (const void *)(v32 + v37);
  if (v16((const void *)(v32 + v37), 1, v14))
  {
    v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v38, v39, v14);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v38, 0, 1, v14);
  }
  *(_QWORD *)(v31 + v10[9]) = *(_QWORD *)(v32 + v10[9]);
  v41 = v10[10];
  v42 = v31 + v41;
  v43 = v32 + v41;
  *(_QWORD *)v42 = *(_QWORD *)v43;
  *(_BYTE *)(v42 + 8) = *(_BYTE *)(v43 + 8);
  v44 = v10[11];
  v45 = (_QWORD *)(v31 + v44);
  v46 = (uint64_t *)(v32 + v44);
  v47 = *v46;
  if (*v46)
  {
    v48 = v46[1];
    *v45 = v47;
    v45[1] = v48;
  }
  else
  {
    *(_OWORD *)v45 = *(_OWORD *)v46;
  }
  *(_QWORD *)(v31 + v10[12]) = *(_QWORD *)(v32 + v10[12]);
  return v50;
}

uint64_t assignWithTake for BiomeProvisionalSELFIngestor(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  void *v10;
  uint64_t v11;
  char v12;
  int *v13;
  uint64_t v14;
  void *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(void *, uint64_t, uint64_t);
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  char *v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  int v32;
  uint64_t v33;
  _QWORD *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _OWORD *v42;
  void *v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  void *v47;
  char *v48;
  int v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  char *v54;
  int v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  int v61;
  uint64_t v62;
  _QWORD *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v70;
  uint64_t v71;

  v6 = sub_2408E569C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v70 = a3;
  v71 = a1;
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = (_OWORD *)(a2 + v7);
  LOBYTE(v7) = *(_BYTE *)(a2 + v7 + 16);
  v10 = *(void **)v8;
  v11 = *(_QWORD *)(v8 + 8);
  v12 = *(_BYTE *)(v8 + 16);
  *(_OWORD *)v8 = *v9;
  *(_BYTE *)(v8 + 16) = v7;
  sub_240420B24(v10, v11, v12);
  v13 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_254355C80);
  v14 = v13[7];
  v15 = (void *)(v8 + v14);
  v16 = (char *)v9 + v14;
  v17 = sub_2408E5C6C();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v18 + 48);
  v20 = v19(v15, 1, v17);
  v21 = v19(v16, 1, v17);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(void *, char *, uint64_t))(v18 + 32))(v15, v16, v17);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v21)
  {
    (*(void (**)(void *, uint64_t))(v18 + 8))(v15, v17);
LABEL_6:
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, char *, uint64_t))(v18 + 40))(v15, v16, v17);
LABEL_7:
  v23 = v13[8];
  v24 = (void *)(v8 + v23);
  v25 = (char *)v9 + v23;
  v26 = v19((void *)(v8 + v23), 1, v17);
  v27 = v19(v25, 1, v17);
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(void *, char *, uint64_t))(v18 + 32))(v24, v25, v17);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v24, 0, 1, v17);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v27)
  {
    (*(void (**)(void *, uint64_t))(v18 + 8))(v24, v17);
LABEL_12:
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, char *, uint64_t))(v18 + 40))(v24, v25, v17);
LABEL_13:
  *(_QWORD *)(v8 + v13[9]) = *(_QWORD *)((char *)v9 + v13[9]);
  swift_bridgeObjectRelease();
  v29 = v13[10];
  v30 = v8 + v29;
  v31 = (char *)v9 + v29;
  if (*(unsigned __int8 *)(v8 + v29 + 8) != 255)
  {
    v32 = v31[8];
    if (v32 != 255)
    {
      *(_QWORD *)v30 = *(_QWORD *)v31;
      *(_BYTE *)(v30 + 8) = v32;
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
    sub_240421518(v30);
  }
  *(_QWORD *)v30 = *(_QWORD *)v31;
  *(_BYTE *)(v30 + 8) = v31[8];
LABEL_18:
  v33 = v13[11];
  v34 = (_QWORD *)(v8 + v33);
  v35 = (char *)v9 + v33;
  v36 = *(_QWORD *)(v8 + v33);
  v37 = *(_QWORD *)((char *)v9 + v33);
  if (v36)
  {
    if (v37)
    {
      v38 = *((_QWORD *)v35 + 1);
      *v34 = v37;
      v34[1] = v38;
      swift_release();
      goto LABEL_25;
    }
    swift_release();
  }
  else if (v37)
  {
    v39 = *((_QWORD *)v35 + 1);
    *v34 = v37;
    v34[1] = v39;
    goto LABEL_25;
  }
  *(_OWORD *)v34 = *(_OWORD *)v35;
LABEL_25:
  *(_QWORD *)(v8 + v13[12]) = *(_QWORD *)((char *)v9 + v13[12]);
  swift_bridgeObjectRelease();
  v40 = *(int *)(v70 + 24);
  v41 = v71 + v40;
  v42 = (_OWORD *)(a2 + v40);
  LOBYTE(v40) = *(_BYTE *)(a2 + v40 + 16);
  v43 = *(void **)v41;
  v44 = *(_QWORD *)(v41 + 8);
  v45 = *(_BYTE *)(v41 + 16);
  *(_OWORD *)v41 = *v42;
  *(_BYTE *)(v41 + 16) = v40;
  sub_240420B24(v43, v44, v45);
  v46 = v13[7];
  v47 = (void *)(v41 + v46);
  v48 = (char *)v42 + v46;
  v49 = v19((void *)(v41 + v46), 1, v17);
  v50 = v19(v48, 1, v17);
  if (v49)
  {
    if (!v50)
    {
      (*(void (**)(void *, char *, uint64_t))(v18 + 32))(v47, v48, v17);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v47, 0, 1, v17);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v50)
  {
    (*(void (**)(void *, uint64_t))(v18 + 8))(v47, v17);
LABEL_30:
    v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(void *, char *, uint64_t))(v18 + 40))(v47, v48, v17);
LABEL_31:
  v52 = v13[8];
  v53 = (void *)(v41 + v52);
  v54 = (char *)v42 + v52;
  v55 = v19((void *)(v41 + v52), 1, v17);
  v56 = v19(v54, 1, v17);
  if (v55)
  {
    if (!v56)
    {
      (*(void (**)(void *, char *, uint64_t))(v18 + 32))(v53, v54, v17);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v53, 0, 1, v17);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v56)
  {
    (*(void (**)(void *, uint64_t))(v18 + 8))(v53, v17);
LABEL_36:
    v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355CD0);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(void *, char *, uint64_t))(v18 + 40))(v53, v54, v17);
LABEL_37:
  *(_QWORD *)(v41 + v13[9]) = *(_QWORD *)((char *)v42 + v13[9]);
  swift_bridgeObjectRelease();
  v58 = v13[10];
  v59 = v41 + v58;
  v60 = (char *)v42 + v58;
  if (*(unsigned __int8 *)(v41 + v58 + 8) != 255)
  {
    v61 = v60[8];
    if (v61 != 255)
    {
      *(_QWORD *)v59 = *(_QWORD *)v60;
      *(_BYTE *)(v59 + 8) = v61;
      swift_bridgeObjectRelease();
      goto LABEL_42;
    }
    sub_240421518(v59);
  }
  *(_QWORD *)v59 = *(_QWORD *)v60;
  *(_BYTE *)(v59 + 8) = v60[8];
LABEL_42:
  v62 = v13[11];
  v63 = (_QWORD *)(v41 + v62);
  v64 = (char *)v42 + v62;
  v65 = *(_QWORD *)(v41 + v62);
  v66 = *(_QWORD *)((char *)v42 + v62);
  if (!v65)
  {
    if (v66)
    {
      v68 = *((_QWORD *)v64 + 1);
      *v63 = v66;
      v63[1] = v68;
      goto LABEL_49;
    }
LABEL_48:
    *(_OWORD *)v63 = *(_OWORD *)v64;
    goto LABEL_49;
  }
  if (!v66)
  {
    swift_release();
    goto LABEL_48;
  }
  v67 = *((_QWORD *)v64 + 1);
  *v63 = v66;
  v63[1] = v67;
  swift_release();
LABEL_49:
  *(_QWORD *)(v41 + v13[12]) = *(_QWORD *)((char *)v42 + v13[12]);
  swift_bridgeObjectRelease();
  return v71;
}

uint64_t getEnumTagSinglePayload for BiomeProvisionalSELFIngestor()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240713D18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_2408E569C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355C80);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = *(int *)(a3 + 20);
    }
    else
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C5A8);
      v12 = *(_QWORD *)(v8 - 8);
      v13 = *(int *)(a3 + 24);
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for BiomeProvisionalSELFIngestor()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240713DC4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v8 = sub_2408E569C();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254355C80);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25700C5A8);
      v14 = *(_QWORD *)(v10 - 8);
      v15 = *(int *)(a4 + 24);
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_240713E6C()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  sub_2408E569C();
  if (v0 <= 0x3F)
  {
    sub_240713EF0(319, v0, v1, v2);
    if (v3 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_240713EF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  uint64_t v5;

  if (!qword_2543560B8)
  {
    v4 = type metadata accessor for IngestConfig(0, MEMORY[0x24BEE4078], a3, a4);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_2543560B8);
  }
}

double static IntervalConst.maximumTimeToSearchHistorySeconds.getter()
{
  return 2419200.0;
}

uint64_t sub_240713F54()
{
  uint64_t v0;

  v0 = sub_2408E5624();
  __swift_allocate_value_buffer(v0, qword_25700C5B0);
  __swift_project_value_buffer(v0, (uint64_t)qword_25700C5B0);
  return sub_2408E55F4();
}

uint64_t static IntervalConst.timeSinceSevenDaysAgo.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_256FF98B8 != -1)
    swift_once();
  v2 = sub_2408E5624();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_25700C5B0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

unint64_t static CollectionConst.siri_application_id.getter()
{
  return 0xD00000000000001ELL;
}

uint64_t static CollectionConst.siri_client_identifier.getter()
{
  return 1769105747;
}

uint64_t static CollectionConst.defaultMaxEventsToCollect.getter()
{
  return 0;
}

unint64_t static CollectionConst.appIntentdataWorkerBundleID.getter()
{
  return 0xD000000000000034;
}

unint64_t static CollectionConst.ieMetricsWorkerBundleID.getter()
{
  return 0xD000000000000030;
}

uint64_t static DefaultValueConst.unknown.getter()
{
  return 0x6E776F6E6B6E75;
}

ValueMetadata *type metadata accessor for StreamIdentifier()
{
  return &type metadata for StreamIdentifier;
}

ValueMetadata *type metadata accessor for IntervalConst()
{
  return &type metadata for IntervalConst;
}

ValueMetadata *type metadata accessor for CollectionConst()
{
  return &type metadata for CollectionConst;
}

ValueMetadata *type metadata accessor for DefaultValueConst()
{
  return &type metadata for DefaultValueConst;
}

LighthouseDataProcessor::ResponseGenerationProtoResponseMode __swiftcall ResponseGenerationProtoResponseMode.init()()
{
  _BYTE *v0;
  LighthouseDataProcessor::ResponseGenerationProtoResponseMode result;

  *v0 = 0;
  return result;
}

LighthouseDataProcessor::ResponseGenerationProtoResponseMode_optional __swiftcall ResponseGenerationProtoResponseMode.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 5;
  if ((unint64_t)rawValue < 5)
    v2 = rawValue;
  *v1 = v2;
  return (LighthouseDataProcessor::ResponseGenerationProtoResponseMode_optional)rawValue;
}

uint64_t ResponseGenerationProtoResponseMode.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t ResponseGenerationProtoResponseGenerationInput.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;

  type metadata accessor for ResponseGenerationProtoResponseGenerationInput(0);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0xE000000000000000;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0xE000000000000000;
  *(_BYTE *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0xE000000000000000;
  *(_QWORD *)(a1 + 56) = MEMORY[0x24BEE4AF8];
  return result;
}

uint64_t type metadata accessor for ResponseGenerationProtoResponseGenerationInput(uint64_t a1)
{
  return sub_2403BA700(a1, qword_25700C638);
}

uint64_t ResponseGenerationProtoResponseGenerationInput.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ResponseGenerationProtoResponseGenerationInput(0) + 36);
  v4 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ResponseGenerationProtoResponseGenerationInput.unknownFields.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ResponseGenerationProtoResponseGenerationInput(0) + 36);
  v4 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ResponseGenerationProtoResponseGenerationInput.unknownFields.modify())()
{
  type metadata accessor for ResponseGenerationProtoResponseGenerationInput(0);
  return nullsub_1;
}

uint64_t ResponseGenerationProtoStatementResultDigest.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
  v3 = (int *)type metadata accessor for ResponseGenerationProtoStatementResultDigest(0);
  v4 = a1 + v3[5];
  v5 = type metadata accessor for TranscriptProtoAction(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = a1 + v3[6];
  v7 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  *(_BYTE *)(a1 + v3[7]) = 2;
  v8 = a1 + v3[8];
  v9 = type metadata accessor for TranscriptProtoResponseManifest(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v10 = a1 + v3[9];
  v11 = type metadata accessor for ToolKitProtoTypeDisplayRepresentation(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  return _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
}

uint64_t type metadata accessor for ResponseGenerationProtoStatementResultDigest(uint64_t a1)
{
  return sub_2403BA700(a1, (uint64_t *)&unk_25700C6D8);
}

uint64_t ResponseGenerationProtoStatementResultDigest.unknownFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ResponseGenerationProtoStatementResultDigest(0) + 40);
  v4 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ResponseGenerationProtoStatementResultDigest.unknownFields.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ResponseGenerationProtoStatementResultDigest(0) + 40);
  v4 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ResponseGenerationProtoStatementResultDigest.unknownFields.modify())()
{
  type metadata accessor for ResponseGenerationProtoStatementResultDigest(0);
  return nullsub_1;
}

void *static ResponseGenerationProtoResponseMode.allCases.getter()
{
  return &unk_2510A6ED0;
}

LighthouseDataProcessor::ResponseGenerationProtoResponseMode_optional sub_240714410(Swift::Int *a1)
{
  return ResponseGenerationProtoResponseMode.init(rawValue:)(*a1);
}

uint64_t sub_240714418()
{
  sub_24050532C();
  return sub_2408E5834();
}

void sub_240714450(_QWORD *a1@<X8>)
{
  *a1 = &unk_2510A6EF8;
}

uint64_t ResponseGenerationProtoResponseGenerationInput.clientRequestID.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ResponseGenerationProtoResponseGenerationInput.clientRequestID.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ResponseGenerationProtoResponseGenerationInput.clientRequestID.modify())()
{
  return nullsub_1;
}

uint64_t ResponseGenerationProtoResponseGenerationInput.utterance.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ResponseGenerationProtoResponseGenerationInput.utterance.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*ResponseGenerationProtoResponseGenerationInput.utterance.modify())()
{
  return nullsub_1;
}

void ResponseGenerationProtoResponseGenerationInput.responseMode.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 32);
}

_BYTE *ResponseGenerationProtoResponseGenerationInput.responseMode.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 32) = *result;
  return result;
}

uint64_t (*ResponseGenerationProtoResponseGenerationInput.responseMode.modify())()
{
  return nullsub_1;
}

uint64_t ResponseGenerationProtoResponseGenerationInput.responseLocale.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ResponseGenerationProtoResponseGenerationInput.responseLocale.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return result;
}

uint64_t (*ResponseGenerationProtoResponseGenerationInput.responseLocale.modify())()
{
  return nullsub_1;
}

uint64_t ResponseGenerationProtoResponseGenerationInput.statementResultDigests.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ResponseGenerationProtoResponseGenerationInput.statementResultDigests.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 56) = a1;
  return result;
}

uint64_t (*ResponseGenerationProtoResponseGenerationInput.statementResultDigests.modify())()
{
  return nullsub_1;
}

uint64_t ResponseGenerationProtoResponseGenerationInput.init(clientRequestID:utterance:responseMode:responseLocale:statementResultDigests:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  char v17;
  uint64_t result;

  v17 = *a5;
  type metadata accessor for ResponseGenerationProtoResponseGenerationInput(0);
  result = _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_BYTE *)(a9 + 32) = v17;
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = a7;
  *(_QWORD *)(a9 + 56) = a8;
  return result;
}

uint64_t ResponseGenerationProtoStatementResultDigest.toolDefinition.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2403A9210(v1, a1, &qword_256FFA468);
}

uint64_t ResponseGenerationProtoStatementResultDigest.toolDefinition.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_2403C25A0(a1, v1, &qword_256FFA468);
}

uint64_t (*ResponseGenerationProtoStatementResultDigest.toolDefinition.modify())()
{
  return nullsub_1;
}

uint64_t ResponseGenerationProtoStatementResultDigest.actionCreated.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ResponseGenerationProtoStatementResultDigest(0);
  return sub_2403A9210(v1 + *(int *)(v3 + 20), a1, &qword_2570012B8);
}

uint64_t ResponseGenerationProtoStatementResultDigest.actionCreated.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ResponseGenerationProtoStatementResultDigest(0);
  return sub_2403C25A0(a1, v1 + *(int *)(v3 + 20), &qword_2570012B8);
}

uint64_t (*ResponseGenerationProtoStatementResultDigest.actionCreated.modify())()
{
  type metadata accessor for ResponseGenerationProtoStatementResultDigest(0);
  return nullsub_1;
}

uint64_t ResponseGenerationProtoStatementResultDigest.statementOutcome.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ResponseGenerationProtoStatementResultDigest(0);
  return sub_2403A9210(v1 + *(int *)(v3 + 24), a1, &qword_256FFA3E8);
}

uint64_t ResponseGenerationProtoStatementResultDigest.statementOutcome.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ResponseGenerationProtoStatementResultDigest(0);
  return sub_2403C25A0(a1, v1 + *(int *)(v3 + 24), &qword_256FFA3E8);
}

uint64_t (*ResponseGenerationProtoStatementResultDigest.statementOutcome.modify())()
{
  type metadata accessor for ResponseGenerationProtoStatementResultDigest(0);
  return nullsub_1;
}

uint64_t ResponseGenerationProtoStatementResultDigest.undoOperation.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ResponseGenerationProtoStatementResultDigest(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t ResponseGenerationProtoStatementResultDigest.undoOperation.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for ResponseGenerationProtoStatementResultDigest(0);
  *(_BYTE *)(v1 + *(int *)(result + 28)) = v2;
  return result;
}

uint64_t (*ResponseGenerationProtoStatementResultDigest.undoOperation.modify())()
{
  type metadata accessor for ResponseGenerationProtoStatementResultDigest(0);
  return nullsub_1;
}

uint64_t ResponseGenerationProtoStatementResultDigest.responseManifest.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ResponseGenerationProtoStatementResultDigest(0);
  return sub_2403A9210(v1 + *(int *)(v3 + 32), a1, &qword_256FFA418);
}

uint64_t ResponseGenerationProtoStatementResultDigest.responseManifest.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ResponseGenerationProtoStatementResultDigest(0);
  return sub_2403C25A0(a1, v1 + *(int *)(v3 + 32), &qword_256FFA418);
}

uint64_t (*ResponseGenerationProtoStatementResultDigest.responseManifest.modify())()
{
  type metadata accessor for ResponseGenerationProtoStatementResultDigest(0);
  return nullsub_1;
}

uint64_t ResponseGenerationProtoStatementResultDigest.returnValueTypeDisplayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ResponseGenerationProtoStatementResultDigest(0);
  return sub_2403A9210(v1 + *(int *)(v3 + 36), a1, &qword_256FFBDC0);
}

uint64_t ResponseGenerationProtoStatementResultDigest.returnValueTypeDisplayRepresentation.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ResponseGenerationProtoStatementResultDigest(0);
  return sub_2403C25A0(a1, v1 + *(int *)(v3 + 36), &qword_256FFBDC0);
}

uint64_t (*ResponseGenerationProtoStatementResultDigest.returnValueTypeDisplayRepresentation.modify())()
{
  type metadata accessor for ResponseGenerationProtoStatementResultDigest(0);
  return nullsub_1;
}

uint64_t ResponseGenerationProtoStatementResultDigest.init(toolDefinition:actionCreated:statementOutcome:undoOperation:responseManifest:returnValueTypeDisplayRepresentation:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v23;

  v23 = *a4;
  v11 = type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a7, 1, 1, v11);
  v12 = (int *)type metadata accessor for ResponseGenerationProtoStatementResultDigest(0);
  v13 = a7 + v12[5];
  v14 = type metadata accessor for TranscriptProtoAction(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  v15 = a7 + v12[6];
  v16 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  v17 = v12[7];
  *(_BYTE *)(a7 + v17) = 2;
  v18 = a7 + v12[8];
  v19 = type metadata accessor for TranscriptProtoResponseManifest(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
  v20 = a7 + v12[9];
  v21 = type metadata accessor for ToolKitProtoTypeDisplayRepresentation(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 1, 1, v21);
  _s23LighthouseDataProcessor033TranscriptProtoRequestContentStopG0VACycfC_0();
  sub_2403C25A0(a1, a7, &qword_256FFA468);
  sub_2403C25A0(a2, v13, &qword_2570012B8);
  sub_2403C25A0(a3, v15, &qword_256FFA3E8);
  *(_BYTE *)(a7 + v17) = v23;
  sub_2403C25A0(a5, v18, &qword_256FFA418);
  return sub_2403C25A0(a6, v20, &qword_256FFBDC0);
}

unint64_t sub_240714BB8()
{
  unint64_t result;

  result = qword_25700C5C8;
  if (!qword_25700C5C8)
  {
    result = MEMORY[0x242684578](&protocol conformance descriptor for ResponseGenerationProtoResponseMode, &type metadata for ResponseGenerationProtoResponseMode);
    atomic_store(result, (unint64_t *)&qword_25700C5C8);
  }
  return result;
}

unint64_t sub_240714C00()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25700C5D0;
  if (!qword_25700C5D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25700C5D8);
    result = MEMORY[0x242684578](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_25700C5D0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ResponseGenerationProtoResponseMode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_240714C98 + 4 * byte_24090BFD5[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_240714CCC + 4 * asc_24090BFD0[v4]))();
}

uint64_t sub_240714CCC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_240714CD4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x240714CDCLL);
  return result;
}

uint64_t sub_240714CE8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x240714CF0);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_240714CF4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_240714CFC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ResponseGenerationProtoResponseMode()
{
  return &type metadata for ResponseGenerationProtoResponseMode;
}

_QWORD *initializeBufferWithCopyOfBuffer for ResponseGenerationProtoResponseGenerationInput(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v13 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    v6 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v6;
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    v7 = a2[6];
    *(_QWORD *)(a1 + 40) = a2[5];
    *(_QWORD *)(a1 + 48) = v7;
    v8 = *(int *)(a3 + 36);
    v9 = a1 + v8;
    v10 = (uint64_t)a2 + v8;
    *(_QWORD *)(a1 + 56) = a2[7];
    v11 = sub_2408E57A4();
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
  }
  return v3;
}

uint64_t destroy for ResponseGenerationProtoResponseGenerationInput(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 36);
  v5 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for ResponseGenerationProtoResponseGenerationInput(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  v7 = *(int *)(a3 + 36);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v10 = sub_2408E57A4();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for ResponseGenerationProtoResponseGenerationInput(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 36);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for ResponseGenerationProtoResponseGenerationInput(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v5 = *(int *)(a3 + 36);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for ResponseGenerationProtoResponseGenerationInput(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  v9 = *(int *)(a3 + 36);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_2408E57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for ResponseGenerationProtoResponseGenerationInput()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240715114(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_2408E57A4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 36), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for ResponseGenerationProtoResponseGenerationInput()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24071519C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_2408E57A4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 36), a2, a2, v7);
  }
  return result;
}

uint64_t sub_240715210()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2408E57A4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for ResponseGenerationProtoStatementResultDigest(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v3;
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  int *v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  _QWORD *v38;
  unsigned int (*v39)(_QWORD *, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  void (**v52)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  unsigned int (*v72)(_QWORD *, uint64_t, uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  void (*v80)(char *, char *, uint64_t);
  char *v81;
  uint64_t v82;
  _QWORD *v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  int EnumCaseMultiPayload;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  _QWORD *v104;
  uint64_t v105;
  _QWORD *v106;
  unsigned int (*v107)(_QWORD, _QWORD, _QWORD);
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  _QWORD *v130;
  _QWORD *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  _QWORD *v138;
  uint64_t v139;
  _QWORD *v140;
  _QWORD *v141;
  uint64_t v142;
  void (**v143)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  _QWORD *v159;
  _QWORD *v160;
  int *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  _QWORD *v166;
  _QWORD *v167;
  uint64_t v168;
  unsigned int (*v169)(_QWORD *, uint64_t, uint64_t);
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  void (*v175)(char *, char *, uint64_t);
  uint64_t v176;
  _QWORD *v177;
  _QWORD *v178;
  uint64_t v179;
  uint64_t v180;
  _QWORD *v181;
  _QWORD *v182;
  uint64_t v183;
  uint64_t v184;
  _QWORD *v185;
  _QWORD *v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  char *v190;
  uint64_t v191;
  void (*v192)(char *, char *, uint64_t);
  uint64_t v193;
  char *v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  uint64_t v202;
  char *v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  _QWORD *v207;
  _QWORD *v208;
  int *v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  _QWORD *v213;
  _QWORD *v214;
  uint64_t v215;
  uint64_t v216;
  unsigned int (*v217)(_QWORD *, uint64_t, uint64_t);
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  _QWORD *v226;
  _QWORD *v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  void (*v234)(char *, char *, uint64_t);
  uint64_t v235;
  uint64_t v236;
  _QWORD *v237;
  _QWORD *v238;
  uint64_t v239;
  uint64_t v240;
  _QWORD *v241;
  _QWORD *v242;
  uint64_t v243;
  uint64_t v244;
  char *v245;
  char *v246;
  uint64_t v247;
  void (*v248)(char *, char *, uint64_t);
  uint64_t v249;
  _QWORD *v250;
  _QWORD *v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  char *v258;
  char *v259;
  uint64_t v260;
  void (*v261)(char *, char *, uint64_t);
  uint64_t v262;
  uint64_t v263;
  char *v264;
  char *v265;
  uint64_t v266;
  uint64_t v268;
  _QWORD *__dst;
  uint64_t *v270;
  unsigned int (*v271)(_QWORD *, uint64_t, uint64_t);
  uint64_t v272;
  unsigned int (*v273)(uint64_t *, uint64_t, uint64_t);
  void *v274;
  void (*v275)(char *, char *, uint64_t);
  _QWORD *v276;
  unsigned int (*v277)(_QWORD *, uint64_t, uint64_t);
  void *v278;
  void (*v279)(char *, char *, uint64_t);
  unsigned int (*v280)(_QWORD *, uint64_t, uint64_t);
  void *v281;
  char *v282;
  void *v283;
  _QWORD *v284;
  void *v285;
  _QWORD *v286;
  char *v287;
  _QWORD *v288;
  void *v289;
  char *v290;
  char *v291;
  uint64_t v292;
  char *v293;
  char *v294;
  char *v295;
  int *v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  int *v300;
  _QWORD *v301;
  _QWORD *v302;

  v3 = a2;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a3;
    v7 = type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
    v8 = *(_QWORD *)(v7 - 8);
    v301 = v3;
    v302 = a1;
    v300 = v6;
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v8 + 48))(v3, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA468);
      memcpy(a1, v3, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v292 = v8;
      v11 = v3;
      v12 = *v3;
      v13 = v3[1];
      *a1 = v12;
      a1[1] = v13;
      v14 = v11[3];
      a1[2] = v11[2];
      a1[3] = v14;
      *((_BYTE *)a1 + 32) = *((_BYTE *)v11 + 32);
      v15 = a1;
      v16 = v11[6];
      v15[5] = v11[5];
      v15[6] = v16;
      v17 = v11[8];
      v15[7] = v11[7];
      v15[8] = v17;
      v15[9] = v11[9];
      *((_BYTE *)v15 + 80) = *((_BYTE *)v11 + 80);
      v18 = v11[12];
      v15[11] = v11[11];
      v15[12] = v18;
      v285 = (void *)v11[14];
      v15[13] = v11[13];
      v15[14] = v285;
      v296 = (int *)v7;
      v19 = *(int *)(v7 + 68);
      __dst = (_QWORD *)((char *)v15 + v19);
      v270 = (_QWORD *)((char *)v11 + v19);
      v20 = type metadata accessor for ToolKitProtoTypeInstance(0);
      v268 = *(_QWORD *)(v20 - 8);
      v273 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v268 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v273(v270, 1, v20))
      {
        v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
        memcpy(__dst, v270, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        v22 = *v270;
        if ((~*v270 & 0xF000000000000007) != 0)
          swift_retain();
        *__dst = v22;
        v23 = *(int *)(v20 + 20);
        v24 = (char *)__dst + v23;
        v25 = (char *)v270 + v23;
        v26 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v268 + 56))(__dst, 0, 1, v20);
      }
      v28 = v301;
      v27 = v302;
      v29 = v296;
      v30 = v296[18];
      v31 = (_QWORD *)((char *)v302 + v30);
      v32 = (_QWORD *)((char *)v301 + v30);
      v33 = v32[1];
      *v31 = *v32;
      v31[1] = v33;
      v34 = v296[19];
      v35 = (_QWORD *)((char *)v302 + v34);
      v36 = (_QWORD *)((char *)v301 + v34);
      v37 = type metadata accessor for ToolKitProtoAppDefinition(0);
      v38 = *(_QWORD **)(v37 - 8);
      v39 = (unsigned int (*)(_QWORD *, uint64_t, uint64_t))v38[6];
      swift_bridgeObjectRetain();
      if (v39(v36, 1, v37))
      {
        v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA438);
        memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        v274 = v38;
        v41 = v36[1];
        *v35 = *v36;
        v35[1] = v41;
        v42 = v36[3];
        v35[2] = v36[2];
        v35[3] = v42;
        v43 = v36[5];
        v35[4] = v36[4];
        v35[5] = v43;
        v44 = v36[7];
        v35[6] = v36[6];
        v35[7] = v44;
        v45 = v36[9];
        v35[8] = v36[8];
        v35[9] = v45;
        *((_BYTE *)v35 + 80) = *((_BYTE *)v36 + 80);
        v46 = *(int *)(v37 + 40);
        v286 = (_QWORD *)((char *)v35 + v46);
        v47 = (_QWORD *)((char *)v36 + v46);
        v48 = type metadata accessor for ToolKitProtoAppDefinition.Device(0);
        v49 = *(_QWORD **)(v48 - 8);
        v280 = (unsigned int (*)(_QWORD *, uint64_t, uint64_t))v49[6];
        v50 = v48;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v280(v47, 1, v50))
        {
          v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA430);
          memcpy(v286, v47, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
          v28 = v301;
          v27 = v302;
          v52 = (void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))v274;
        }
        else
        {
          v281 = v49;
          v53 = v47[1];
          if (v53 == 1)
          {
            *(_OWORD *)v286 = *(_OWORD *)v47;
          }
          else
          {
            *v286 = *v47;
            v286[1] = v53;
            swift_bridgeObjectRetain();
          }
          v28 = v301;
          v27 = v302;
          v52 = (void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))v274;
          v54 = *(int *)(v50 + 20);
          v55 = v50;
          v56 = (char *)v286 + v54;
          v57 = (char *)v47 + v54;
          v58 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v56, v57, v58);
          (*((void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))v281 + 7))(v286, 0, 1, v55);
        }
        v59 = *(int *)(v37 + 44);
        v60 = (char *)v35 + v59;
        v61 = (char *)v36 + v59;
        v62 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(v60, v61, v62);
        v52[7](v35, 0, 1, v37);
        v29 = v296;
      }
      v63 = v29[20];
      v64 = (_QWORD *)((char *)v27 + v63);
      v65 = (_QWORD *)((char *)v28 + v63);
      v66 = v65[1];
      *v64 = *v65;
      v64[1] = v66;
      v67 = v29[21];
      v68 = (_QWORD *)((char *)v27 + v67);
      v69 = (_QWORD *)((char *)v28 + v67);
      v70 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation(0);
      v71 = *(_QWORD *)(v70 - 8);
      v72 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v71 + 48);
      swift_bridgeObjectRetain();
      if (v72(v69, 1, v70))
      {
        v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA440);
        memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
      }
      else
      {
        v74 = v69[1];
        *v68 = *v69;
        v68[1] = v74;
        v75 = v69[3];
        v68[2] = v69[2];
        v68[3] = v75;
        v76 = *(int *)(v70 + 24);
        v77 = (char *)v68 + v76;
        v78 = (char *)v69 + v76;
        v79 = sub_2408E57A4();
        v80 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v81 = v77;
        v27 = v302;
        v80(v81, v78, v79);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v71 + 56))(v68, 0, 1, v70);
      }
      v82 = v29[22];
      v83 = (_QWORD *)((char *)v27 + v82);
      v3 = v301;
      v84 = (_QWORD *)((char *)v301 + v82);
      v85 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon(0);
      v86 = *(_QWORD *)(v85 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v86 + 48))(v84, 1, v85))
      {
        v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA450);
        memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
      }
      else
      {
        v88 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind(0);
        v89 = *(_QWORD *)(v88 - 8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v89 + 48))(v84, 1, v88))
        {
          v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA448);
          memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
        }
        else
        {
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          v92 = v84[1];
          *v83 = *v84;
          v83[1] = v92;
          if (EnumCaseMultiPayload == 1)
          {
            *((_BYTE *)v83 + 16) = *((_BYTE *)v84 + 16);
            v93 = v84[4];
            v83[3] = v84[3];
            v83[4] = v93;
            v94 = v84[6];
            v83[5] = v84[5];
            v83[6] = v94;
            v95 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0)
                         + 32);
            v282 = (char *)v84 + v95;
            v287 = (char *)v83 + v95;
            v96 = sub_2408E57A4();
            v275 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v96 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v97 = v96;
            v29 = v296;
            v275(v287, v282, v97);
          }
          else
          {
            swift_bridgeObjectRetain();
          }
          swift_storeEnumTagMultiPayload();
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v89 + 56))(v83, 0, 1, v88);
        }
        v98 = *(int *)(v85 + 20);
        v99 = (char *)v83 + v98;
        v100 = (char *)v84 + v98;
        v101 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v101 - 8) + 16))(v99, v100, v101);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v83, 0, 1, v85);
        v3 = v301;
      }
      v102 = v29[23];
      a1 = v302;
      v103 = (_QWORD *)((char *)v302 + v102);
      v104 = (_QWORD *)((char *)v3 + v102);
      v105 = type metadata accessor for ToolKitProtoContainerDefinition(0);
      v106 = *(_QWORD **)(v105 - 8);
      v107 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))v106[6];
      if (v107(v104, 1, v105))
      {
        v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA460);
        memcpy(v103, v104, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
      }
      else
      {
        v283 = v107;
        v288 = v106;
        v109 = v104[1];
        *v103 = *v104;
        v103[1] = v109;
        v110 = v104[3];
        v103[2] = v104[2];
        v103[3] = v110;
        *((_WORD *)v103 + 16) = *((_WORD *)v104 + 16);
        v111 = v104[6];
        v103[5] = v104[5];
        v103[6] = v111;
        v112 = v104[8];
        v103[7] = v104[7];
        v103[8] = v112;
        v113 = *(int *)(v105 + 40);
        v276 = (_QWORD *)((char *)v103 + v113);
        v114 = (_QWORD *)((char *)v104 + v113);
        v115 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
        v116 = *(_QWORD *)(v115 - 8);
        v271 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v116 + 48);
        swift_bridgeObjectRetain();
        v117 = v114;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v271(v114, 1, v115))
        {
          v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA458);
          memcpy(v276, v114, *(_QWORD *)(*(_QWORD *)(v118 - 8) + 64));
          v3 = v301;
          a1 = v302;
          v106 = v288;
        }
        else
        {
          v272 = v116;
          v119 = v114[1];
          if (v119 == 1)
          {
            *(_OWORD *)v276 = *(_OWORD *)v114;
          }
          else
          {
            *v276 = *v114;
            v276[1] = v119;
            swift_bridgeObjectRetain();
          }
          v3 = v301;
          a1 = v302;
          v106 = v288;
          v120 = v115;
          v121 = *(int *)(v115 + 20);
          v122 = (char *)v276 + v121;
          v123 = (char *)v117 + v121;
          v124 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v124 - 8) + 16))(v122, v123, v124);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v272 + 56))(v276, 0, 1, v120);
        }
        v125 = *(int *)(v105 + 44);
        v126 = (char *)v103 + v125;
        v127 = (char *)v104 + v125;
        v128 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v128 - 8) + 16))(v126, v127, v128);
        ((void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v106[7])(v103, 0, 1, v105);
        v29 = v296;
        v107 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))v283;
      }
      v129 = v29[24];
      v130 = (_QWORD *)((char *)a1 + v129);
      v131 = (_QWORD *)((char *)v3 + v129);
      if (v107((char *)v3 + v129, 1, v105))
      {
        v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA460);
        memcpy(v130, v131, *(_QWORD *)(*(_QWORD *)(v132 - 8) + 64));
      }
      else
      {
        v289 = v106;
        v133 = v131[1];
        *v130 = *v131;
        v130[1] = v133;
        v134 = v131[3];
        v130[2] = v131[2];
        v130[3] = v134;
        *((_WORD *)v130 + 16) = *((_WORD *)v131 + 16);
        v135 = v131[6];
        v130[5] = v131[5];
        v130[6] = v135;
        v136 = v131[8];
        v130[7] = v131[7];
        v130[8] = v136;
        v137 = *(int *)(v105 + 40);
        v284 = (_QWORD *)((char *)v130 + v137);
        v138 = (_QWORD *)((char *)v131 + v137);
        v139 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
        v140 = *(_QWORD **)(v139 - 8);
        v277 = (unsigned int (*)(_QWORD *, uint64_t, uint64_t))v140[6];
        swift_bridgeObjectRetain();
        v141 = v138;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v277(v138, 1, v139))
        {
          v142 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA458);
          memcpy(v284, v138, *(_QWORD *)(*(_QWORD *)(v142 - 8) + 64));
          v3 = v301;
          a1 = v302;
          v143 = (void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))v289;
        }
        else
        {
          v278 = v140;
          v143 = (void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))v289;
          v144 = v138[1];
          if (v144 == 1)
          {
            *(_OWORD *)v284 = *(_OWORD *)v138;
          }
          else
          {
            *v284 = *v138;
            v284[1] = v144;
            swift_bridgeObjectRetain();
          }
          v3 = v301;
          a1 = v302;
          v145 = v139;
          v146 = *(int *)(v139 + 20);
          v147 = (char *)v284 + v146;
          v148 = (char *)v141 + v146;
          v149 = sub_2408E57A4();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v149 - 8) + 16))(v147, v148, v149);
          (*((void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))v278 + 7))(v284, 0, 1, v145);
        }
        v150 = *(int *)(v105 + 44);
        v151 = (char *)v130 + v150;
        v152 = (char *)v131 + v150;
        v153 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v153 - 8) + 16))(v151, v152, v153);
        v143[7](v130, 0, 1, v105);
        v29 = v296;
      }
      v154 = v29[25];
      v155 = (char *)a1 + v154;
      v156 = (char *)v3 + v154;
      v157 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v157 - 8) + 16))(v155, v156, v157);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v292 + 56))(a1, 0, 1, v29);
      v6 = v300;
    }
    v158 = v6[5];
    v159 = (_QWORD *)((char *)a1 + v158);
    v160 = (_QWORD *)((char *)v3 + v158);
    v161 = (int *)type metadata accessor for TranscriptProtoAction(0);
    v162 = *((_QWORD *)v161 - 1);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v162 + 48))(v160, 1, v161))
    {
      v163 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570012B8);
      memcpy(v159, v160, *(_QWORD *)(*(_QWORD *)(v163 - 8) + 64));
    }
    else
    {
      v164 = v160[1];
      *v159 = *v160;
      v159[1] = v164;
      *((_BYTE *)v159 + 16) = *((_BYTE *)v160 + 16);
      v159[3] = v160[3];
      v165 = v161[7];
      v166 = (_QWORD *)((char *)v159 + v165);
      v167 = (_QWORD *)((char *)v160 + v165);
      v168 = type metadata accessor for TranscriptProtoStatementID(0);
      v297 = *(_QWORD *)(v168 - 8);
      v169 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v297 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v169(v167, 1, v168))
      {
        v170 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
        memcpy(v166, v167, *(_QWORD *)(*(_QWORD *)(v170 - 8) + 64));
      }
      else
      {
        *(_DWORD *)v166 = *(_DWORD *)v167;
        v171 = v167[2];
        v166[1] = v167[1];
        v166[2] = v171;
        v172 = *(int *)(v168 + 24);
        v173 = (char *)v166 + v172;
        v293 = (char *)v167 + v172;
        v174 = sub_2408E57A4();
        v175 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v174 - 8) + 16);
        swift_bridgeObjectRetain();
        v175(v173, v293, v174);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v297 + 56))(v166, 0, 1, v168);
      }
      v176 = v161[8];
      v177 = (_QWORD *)((char *)v159 + v176);
      v178 = (_QWORD *)((char *)v160 + v176);
      v179 = v178[1];
      *v177 = *v178;
      v177[1] = v179;
      v180 = v161[9];
      v181 = (_QWORD *)((char *)v159 + v180);
      v182 = (_QWORD *)((char *)v160 + v180);
      v183 = v182[1];
      *v181 = *v182;
      v181[1] = v183;
      v184 = v161[10];
      v185 = (_QWORD *)((char *)v159 + v184);
      v186 = (_QWORD *)((char *)v160 + v184);
      v187 = v186[1];
      *v185 = *v186;
      v185[1] = v187;
      v188 = v161[11];
      v189 = (char *)v159 + v188;
      v190 = (char *)v160 + v188;
      v191 = sub_2408E57A4();
      v192 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v191 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v192(v189, v190, v191);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v162 + 56))(v159, 0, 1, v161);
      v3 = v301;
      a1 = v302;
      v6 = v300;
    }
    v193 = v6[6];
    v194 = (char *)a1 + v193;
    v195 = (char *)v3 + v193;
    v196 = type metadata accessor for TranscriptProtoStatementOutcome(0);
    v197 = *(_QWORD *)(v196 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v197 + 48))(v195, 1, v196))
    {
      v198 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E8);
      memcpy(v194, v195, *(_QWORD *)(*(_QWORD *)(v198 - 8) + 64));
    }
    else
    {
      v199 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v199 - 8) + 48))(v195, 1, v199))
      {
        v201 = (char *)&loc_240716028 + 4 * word_24090BFDA[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v200 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
      memcpy(v194, v195, *(_QWORD *)(*(_QWORD *)(v200 - 8) + 64));
      v202 = *(int *)(v196 + 20);
      v203 = &v194[v202];
      v204 = &v195[v202];
      v205 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v205 - 8) + 16))(v203, v204, v205);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v197 + 56))(v194, 0, 1, v196);
      v6 = v300;
    }
    v206 = v6[8];
    *((_BYTE *)a1 + v6[7]) = *((_BYTE *)v3 + v6[7]);
    v207 = (_QWORD *)((char *)a1 + v206);
    v208 = (_QWORD *)((char *)v3 + v206);
    v209 = (int *)type metadata accessor for TranscriptProtoResponseManifest(0);
    v210 = *((_QWORD *)v209 - 1);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v210 + 48))(v208, 1, v209))
    {
      v211 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA418);
      memcpy(v207, v208, *(_QWORD *)(*(_QWORD *)(v211 - 8) + 64));
    }
    else
    {
      *v207 = *v208;
      v212 = v209[5];
      v213 = (_QWORD *)((char *)v207 + v212);
      v214 = (_QWORD *)((char *)v208 + v212);
      v215 = type metadata accessor for TranscriptProtoResponseDialog(0);
      v216 = *(_QWORD *)(v215 - 8);
      v217 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v216 + 48);
      swift_bridgeObjectRetain();
      if (v217(v214, 1, v215))
      {
        v218 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA408);
        memcpy(v213, v214, *(_QWORD *)(*(_QWORD *)(v218 - 8) + 64));
      }
      else
      {
        v219 = v214[1];
        *v213 = *v214;
        v213[1] = v219;
        v220 = v214[3];
        v213[2] = v214[2];
        v213[3] = v220;
        v221 = v214[5];
        v213[4] = v214[4];
        v213[5] = v221;
        v298 = v210;
        v222 = v214[7];
        v213[6] = v214[6];
        v213[7] = v222;
        v223 = *(int *)(v215 + 32);
        v290 = (char *)v214 + v223;
        v294 = (char *)v213 + v223;
        v224 = sub_2408E57A4();
        v279 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v224 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v210 = v298;
        swift_bridgeObjectRetain();
        v279(v294, v290, v224);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v216 + 56))(v213, 0, 1, v215);
      }
      v225 = v209[6];
      v226 = (_QWORD *)((char *)v207 + v225);
      v227 = (_QWORD *)((char *)v208 + v225);
      v228 = type metadata accessor for TranscriptProtoResponseVisual(0);
      v229 = *(_QWORD *)(v228 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v229 + 48))(v227, 1, v228))
      {
        v230 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA410);
        memcpy(v226, v227, *(_QWORD *)(*(_QWORD *)(v230 - 8) + 64));
      }
      else
      {
        v231 = v227[1];
        *v226 = *v227;
        v226[1] = v231;
        v232 = *(int *)(v228 + 24);
        v291 = (char *)v227 + v232;
        v295 = (char *)v226 + v232;
        v299 = v210;
        v233 = sub_2408E57A4();
        v234 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v233 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v235 = v233;
        v210 = v299;
        v234(v295, v291, v235);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v229 + 56))(v226, 0, 1, v228);
      }
      v236 = v209[7];
      v237 = (_QWORD *)((char *)v207 + v236);
      v238 = (_QWORD *)((char *)v208 + v236);
      v239 = v238[1];
      *v237 = *v238;
      v237[1] = v239;
      v240 = v209[8];
      v241 = (_QWORD *)((char *)v207 + v240);
      v242 = (_QWORD *)((char *)v208 + v240);
      v243 = v242[1];
      *v241 = *v242;
      v241[1] = v243;
      *((_BYTE *)v207 + v209[9]) = *((_BYTE *)v208 + v209[9]);
      *((_BYTE *)v207 + v209[10]) = *((_BYTE *)v208 + v209[10]);
      v244 = v209[11];
      v245 = (char *)v207 + v244;
      v246 = (char *)v208 + v244;
      v247 = sub_2408E57A4();
      v248 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v247 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v248(v245, v246, v247);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v210 + 56))(v207, 0, 1, v209);
      v3 = v301;
      a1 = v302;
      v6 = v300;
    }
    v249 = v6[9];
    v250 = (_QWORD *)((char *)a1 + v249);
    v251 = (_QWORD *)((char *)v3 + v249);
    v252 = type metadata accessor for ToolKitProtoTypeDisplayRepresentation(0);
    v253 = *(_QWORD *)(v252 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v253 + 48))(v251, 1, v252))
    {
      v254 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFBDC0);
      memcpy(v250, v251, *(_QWORD *)(*(_QWORD *)(v254 - 8) + 64));
    }
    else
    {
      v255 = v251[1];
      *v250 = *v251;
      v250[1] = v255;
      v256 = v251[3];
      v250[2] = v251[2];
      v250[3] = v256;
      v250[4] = v251[4];
      v257 = *(int *)(v252 + 28);
      v258 = (char *)v250 + v257;
      v259 = (char *)v251 + v257;
      v260 = sub_2408E57A4();
      v261 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v260 - 8) + 16);
      v6 = v300;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      a1 = v302;
      swift_bridgeObjectRetain();
      v262 = v260;
      v3 = v301;
      v261(v258, v259, v262);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v253 + 56))(v250, 0, 1, v252);
    }
    v263 = v6[10];
    v264 = (char *)a1 + v263;
    v265 = (char *)v3 + v263;
    v266 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v266 - 8) + 16))(v264, v265, v266);
  }
  return a1;
}

uint64_t destroy for ResponseGenerationProtoStatementResultDigest(uint64_t a1, int *a2)
{
  int *v4;
  _QWORD *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int EnumCaseMultiPayload;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int *v58;
  _QWORD *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  int v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  int *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;

  v4 = (int *)type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v4 - 1) + 48))(a1, 1, v4))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5 = (_QWORD *)(a1 + v4[17]);
    v6 = type metadata accessor for ToolKitProtoTypeInstance(0);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6))
    {
      if ((~*v5 & 0xF000000000000007) != 0)
        swift_release();
      v7 = (char *)v5 + *(int *)(v6 + 20);
      v8 = sub_2408E57A4();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
    }
    swift_bridgeObjectRelease();
    v9 = a1 + v4[19];
    v10 = type metadata accessor for ToolKitProtoAppDefinition(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v11 = v9 + *(int *)(v10 + 40);
      v12 = type metadata accessor for ToolKitProtoAppDefinition.Device(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12))
      {
        if (*(_QWORD *)(v11 + 8) != 1)
          swift_bridgeObjectRelease();
        v13 = v11 + *(int *)(v12 + 20);
        v14 = sub_2408E57A4();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
      }
      v15 = v9 + *(int *)(v10 + 44);
      v16 = sub_2408E57A4();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
    }
    swift_bridgeObjectRelease();
    v17 = a1 + v4[21];
    v18 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v17, 1, v18))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v19 = v17 + *(int *)(v18 + 24);
      v20 = sub_2408E57A4();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
    }
    v21 = a1 + v4[22];
    v22 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v21, 1, v22))
    {
      v23 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48))(v21, 1, v23))
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        swift_bridgeObjectRelease();
        if (EnumCaseMultiPayload == 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v25 = v21
              + *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0) + 32);
          v26 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v25, v26);
        }
      }
      v27 = v21 + *(int *)(v22 + 20);
      v28 = sub_2408E57A4();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v27, v28);
    }
    v29 = a1 + v4[23];
    v30 = type metadata accessor for ToolKitProtoContainerDefinition(0);
    v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 48);
    if (!v31(v29, 1, v30))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v32 = v29 + *(int *)(v30 + 40);
      v33 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v32, 1, v33))
      {
        if (*(_QWORD *)(v32 + 8) != 1)
          swift_bridgeObjectRelease();
        v34 = v32 + *(int *)(v33 + 20);
        v35 = sub_2408E57A4();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 8))(v34, v35);
      }
      v36 = v29 + *(int *)(v30 + 44);
      v37 = sub_2408E57A4();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 8))(v36, v37);
    }
    v38 = a1 + v4[24];
    if (!v31(v38, 1, v30))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v39 = v38 + *(int *)(v30 + 40);
      v40 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 48))(v39, 1, v40))
      {
        if (*(_QWORD *)(v39 + 8) != 1)
          swift_bridgeObjectRelease();
        v41 = v39 + *(int *)(v40 + 20);
        v42 = sub_2408E57A4();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 8))(v41, v42);
      }
      v43 = v38 + *(int *)(v30 + 44);
      v44 = sub_2408E57A4();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 8))(v43, v44);
    }
    v45 = a1 + v4[25];
    v46 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 8))(v45, v46);
  }
  v47 = a1 + a2[5];
  v48 = type metadata accessor for TranscriptProtoAction(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 48))(v47, 1, v48))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v49 = v47 + *(int *)(v48 + 28);
    v50 = type metadata accessor for TranscriptProtoStatementID(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 48))(v49, 1, v50))
    {
      swift_bridgeObjectRelease();
      v51 = v49 + *(int *)(v50 + 24);
      v52 = sub_2408E57A4();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 8))(v51, v52);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v53 = v47 + *(int *)(v48 + 44);
    v54 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 8))(v53, v54);
  }
  v55 = a1 + a2[6];
  v56 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 48))(v55, 1, v56))
  {
    v57 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 48))(v55, 1, v57))
    {
LABEL_88:
      v102 = v55 + *(int *)(v56 + 20);
      v103 = sub_2408E57A4();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v103 - 8) + 8))(v102, v103);
      goto LABEL_89;
    }
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v58 = (int *)type metadata accessor for TranscriptProtoActionSuccess(0);
        v59 = (_QWORD *)(v55 + v58[6]);
        v60 = type metadata accessor for ToolKitProtoTypedValue(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 48))(v59, 1, v60))
        {
          if ((~*v59 & 0xF000000000000007) != 0)
            swift_release();
          v61 = (char *)v59 + *(int *)(v60 + 20);
          v62 = sub_2408E57A4();
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v62 - 8) + 8))(v61, v62);
        }
        v63 = v55 + v58[7];
        v64 = type metadata accessor for TranscriptProtoUndoContext(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 48))(v63, 1, v64))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v65 = v63 + *(int *)(v64 + 28);
          v66 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 8))(v65, v66);
        }
        v67 = v58[8];
        goto LABEL_87;
      case 1u:
        swift_bridgeObjectRelease();
        v68 = type metadata accessor for TranscriptProtoActionConfirmation(0);
        goto LABEL_86;
      case 2u:
        swift_bridgeObjectRelease();
        v68 = type metadata accessor for TranscriptProtoParameterNeedsValue(0);
        goto LABEL_86;
      case 3u:
        swift_bridgeObjectRelease();
        v69 = type metadata accessor for TranscriptProtoParameterConfirmation(0);
        goto LABEL_51;
      case 4u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v67 = *(int *)(type metadata accessor for TranscriptProtoParameterDisambiguation(0) + 28);
        goto LABEL_87;
      case 5u:
        swift_bridgeObjectRelease();
        v69 = type metadata accessor for TranscriptProtoParameterNotAllowed(0);
LABEL_51:
        v70 = v69;
        v71 = (_QWORD *)(v55 + *(int *)(v69 + 24));
        v72 = type metadata accessor for ToolKitProtoTypedValue(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 48))(v71, 1, v72))
        {
          if ((~*v71 & 0xF000000000000007) != 0)
            swift_release();
          v73 = (char *)v71 + *(int *)(v72 + 20);
          v74 = sub_2408E57A4();
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v74 - 8) + 8))(v73, v74);
        }
        v67 = *(int *)(v70 + 28);
        goto LABEL_87;
      case 6u:
        swift_bridgeObjectRelease();
        v75 = type metadata accessor for TranscriptProtoParameterCandidatesNotFound(0);
        v76 = (_QWORD *)(v55 + *(int *)(v75 + 20));
        v77 = type metadata accessor for ToolKitProtoTypedValue(0);
        if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 48))(v76, 1, v77))
        {
          if ((~*v76 & 0xF000000000000007) != 0)
            swift_release();
          v78 = (char *)v76 + *(int *)(v77 + 20);
          v79 = sub_2408E57A4();
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v79 - 8) + 8))(v78, v79);
        }
        v67 = *(int *)(v75 + 24);
        goto LABEL_87;
      case 7u:
        v80 = type metadata accessor for TranscriptProtoActionRequirementEnum(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v80 - 8) + 48))(v55, 1, v80))
          goto LABEL_85;
        v81 = swift_getEnumCaseMultiPayload();
        if (v81 != 2)
        {
          if (v81 == 1)
          {
            v82 = type metadata accessor for TranscriptProtoPermissionRequirement(0);
          }
          else
          {
            if (v81)
              goto LABEL_85;
            v82 = type metadata accessor for TranscriptProtoAppRequirement(0);
          }
LABEL_84:
          v98 = v55 + *(int *)(v82 + 20);
          v99 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v99 - 8) + 8))(v98, v99);
LABEL_85:
          v68 = type metadata accessor for TranscriptProtoActionRequirement(0);
LABEL_86:
          v67 = *(int *)(v68 + 20);
LABEL_87:
          v100 = v55 + v67;
          v101 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v101 - 8) + 8))(v100, v101);
          goto LABEL_88;
        }
        v90 = type metadata accessor for TranscriptProtoSystemRequirementMessageEnum(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v90 - 8) + 48))(v55, 1, v90))
          goto LABEL_83;
        v91 = swift_getEnumCaseMultiPayload();
        if (v91 == 1)
        {
          v93 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequestAuthenticationLevel(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v93 - 8) + 48))(v55, 1, v93))
          {
            v94 = v55 + *(int *)(v93 + 20);
            v95 = sub_2408E57A4();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v95 - 8) + 8))(v94, v95);
          }
          v92 = type metadata accessor for TranscriptProtoSystemRequirementAuthenticationRequest(0);
        }
        else
        {
          if (v91)
          {
LABEL_83:
            v82 = type metadata accessor for TranscriptProtoSystemRequirementMessage(0);
            goto LABEL_84;
          }
          swift_bridgeObjectRelease();
          v92 = type metadata accessor for TranscriptProtoSystemRequirementProtectedAppRequest(0);
        }
        v96 = v55 + *(int *)(v92 + 20);
        v97 = sub_2408E57A4();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v97 - 8) + 8))(v96, v97);
        goto LABEL_83;
      case 8u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v67 = *(int *)(type metadata accessor for TranscriptProtoToolDisambiguation(0) + 24);
        goto LABEL_87;
      case 9u:
        v83 = type metadata accessor for TranscriptProtoActionFailureFailure(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 48))(v55, 1, v83))
        {
          v84 = type metadata accessor for TranscriptProtoActionFailureFailureEnum(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v84 - 8) + 48))(v55, 1, v84))
          {
            v85 = type metadata accessor for TranscriptProtoActionFailureDeveloperDefinedError(0);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v85 - 8) + 48))(v55, 16, v85))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v86 = v55 + *(int *)(v85 + 28);
              v87 = sub_2408E57A4();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v87 - 8) + 8))(v86, v87);
            }
          }
          v88 = v55 + *(int *)(v83 + 20);
          v89 = sub_2408E57A4();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v89 - 8) + 8))(v88, v89);
        }
        v68 = type metadata accessor for TranscriptProtoActionFailure(0);
        goto LABEL_86;
      case 0xAu:
        swift_bridgeObjectRelease();
        v68 = type metadata accessor for TranscriptProtoValueDisambiguation(0);
        goto LABEL_86;
      default:
        goto LABEL_88;
    }
  }
LABEL_89:
  v104 = a1 + a2[8];
  v105 = (int *)type metadata accessor for TranscriptProtoResponseManifest(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v105 - 1) + 48))(v104, 1, v105))
  {
    swift_bridgeObjectRelease();
    v106 = v104 + v105[5];
    v107 = type metadata accessor for TranscriptProtoResponseDialog(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v107 - 8) + 48))(v106, 1, v107))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v108 = v106 + *(int *)(v107 + 32);
      v109 = sub_2408E57A4();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v109 - 8) + 8))(v108, v109);
    }
    v110 = v104 + v105[6];
    v111 = type metadata accessor for TranscriptProtoResponseVisual(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v111 - 8) + 48))(v110, 1, v111))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v112 = v110 + *(int *)(v111 + 24);
      v113 = sub_2408E57A4();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v113 - 8) + 8))(v112, v113);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v114 = v104 + v105[11];
    v115 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v115 - 8) + 8))(v114, v115);
  }
  v116 = a1 + a2[9];
  v117 = type metadata accessor for ToolKitProtoTypeDisplayRepresentation(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v117 - 8) + 48))(v116, 1, v117))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v118 = v116 + *(int *)(v117 + 28);
    v119 = sub_2408E57A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v119 - 8) + 8))(v118, v119);
  }
  v120 = a1 + a2[10];
  v121 = sub_2408E57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v121 - 8) + 8))(v120, v121);
}

_QWORD *initializeWithCopy for ResponseGenerationProtoStatementResultDigest(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  int *v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  unsigned int (*v37)(_QWORD *, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  void (**v50)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  unsigned int (*v70)(_QWORD *, uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  void (*v78)(char *, char *, uint64_t);
  char *v79;
  uint64_t v80;
  _QWORD *v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  int EnumCaseMultiPayload;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  _QWORD *v102;
  uint64_t v103;
  _QWORD *v104;
  unsigned int (*v105)(_QWORD, _QWORD, _QWORD);
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  _QWORD *v128;
  _QWORD *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  _QWORD *v136;
  uint64_t v137;
  _QWORD *v138;
  _QWORD *v139;
  uint64_t v140;
  void (**v141)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  _QWORD *v157;
  _QWORD *v158;
  int *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  _QWORD *v164;
  _QWORD *v165;
  uint64_t v166;
  unsigned int (*v167)(_QWORD *, uint64_t, uint64_t);
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  void (*v173)(char *, char *, uint64_t);
  uint64_t v174;
  _QWORD *v175;
  _QWORD *v176;
  uint64_t v177;
  uint64_t v178;
  _QWORD *v179;
  _QWORD *v180;
  uint64_t v181;
  uint64_t v182;
  _QWORD *v183;
  _QWORD *v184;
  uint64_t v185;
  uint64_t v186;
  char *v187;
  char *v188;
  uint64_t v189;
  void (*v190)(char *, char *, uint64_t);
  uint64_t v191;
  char *v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  char *v199;
  uint64_t v200;
  char *v201;
  char *v202;
  uint64_t v203;
  uint64_t v204;
  _QWORD *v205;
  _QWORD *v206;
  int *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  _QWORD *v211;
  _QWORD *v212;
  uint64_t v213;
  uint64_t v214;
  unsigned int (*v215)(_QWORD *, uint64_t, uint64_t);
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  _QWORD *v224;
  _QWORD *v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  void (*v232)(char *, char *, uint64_t);
  uint64_t v233;
  uint64_t v234;
  _QWORD *v235;
  _QWORD *v236;
  uint64_t v237;
  uint64_t v238;
  _QWORD *v239;
  _QWORD *v240;
  uint64_t v241;
  uint64_t v242;
  char *v243;
  char *v244;
  uint64_t v245;
  void (*v246)(char *, char *, uint64_t);
  uint64_t v247;
  _QWORD *v248;
  _QWORD *v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  char *v256;
  char *v257;
  uint64_t v258;
  void (*v259)(char *, char *, uint64_t);
  uint64_t v260;
  uint64_t v261;
  char *v262;
  char *v263;
  uint64_t v264;
  uint64_t v266;
  _QWORD *__dst;
  uint64_t *v268;
  unsigned int (*v269)(_QWORD *, uint64_t, uint64_t);
  uint64_t v270;
  unsigned int (*v271)(uint64_t *, uint64_t, uint64_t);
  void *v272;
  void (*v273)(char *, char *, uint64_t);
  _QWORD *v274;
  unsigned int (*v275)(_QWORD *, uint64_t, uint64_t);
  void *v276;
  void (*v277)(char *, char *, uint64_t);
  unsigned int (*v278)(_QWORD *, uint64_t, uint64_t);
  void *v279;
  char *v280;
  void *v281;
  _QWORD *v282;
  void *v283;
  _QWORD *v284;
  char *v285;
  _QWORD *v286;
  void *v287;
  char *v288;
  char *v289;
  uint64_t v290;
  char *v291;
  char *v292;
  char *v293;
  int *v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  int *v298;
  _QWORD *v299;
  _QWORD *v300;

  v6 = type metadata accessor for ToolKitProtoToolDefinition.Version1(0);
  v7 = *(_QWORD *)(v6 - 8);
  v299 = a2;
  v300 = a1;
  v298 = a3;
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA468);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v290 = v7;
    v9 = a2;
    v10 = *a2;
    v11 = a2[1];
    *a1 = v10;
    a1[1] = v11;
    v12 = v9[3];
    a1[2] = v9[2];
    a1[3] = v12;
    *((_BYTE *)a1 + 32) = *((_BYTE *)v9 + 32);
    v13 = a1;
    v14 = v9[6];
    v13[5] = v9[5];
    v13[6] = v14;
    v15 = v9[8];
    v13[7] = v9[7];
    v13[8] = v15;
    v13[9] = v9[9];
    *((_BYTE *)v13 + 80) = *((_BYTE *)v9 + 80);
    v16 = v9[12];
    v13[11] = v9[11];
    v13[12] = v16;
    v283 = (void *)v9[14];
    v13[13] = v9[13];
    v13[14] = v283;
    v294 = (int *)v6;
    v17 = *(int *)(v6 + 68);
    __dst = (_QWORD *)((char *)v13 + v17);
    v268 = (_QWORD *)((char *)v9 + v17);
    v18 = type metadata accessor for ToolKitProtoTypeInstance(0);
    v266 = *(_QWORD *)(v18 - 8);
    v271 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v266 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v271(v268, 1, v18))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA428);
      memcpy(__dst, v268, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      v20 = *v268;
      if ((~*v268 & 0xF000000000000007) != 0)
        swift_retain();
      *__dst = v20;
      v21 = *(int *)(v18 + 20);
      v22 = (char *)__dst + v21;
      v23 = (char *)v268 + v21;
      v24 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v266 + 56))(__dst, 0, 1, v18);
    }
    v26 = v299;
    v25 = v300;
    v27 = v294;
    v28 = v294[18];
    v29 = (_QWORD *)((char *)v300 + v28);
    v30 = (_QWORD *)((char *)v299 + v28);
    v31 = v30[1];
    *v29 = *v30;
    v29[1] = v31;
    v32 = v294[19];
    v33 = (_QWORD *)((char *)v300 + v32);
    v34 = (_QWORD *)((char *)v299 + v32);
    v35 = type metadata accessor for ToolKitProtoAppDefinition(0);
    v36 = *(_QWORD **)(v35 - 8);
    v37 = (unsigned int (*)(_QWORD *, uint64_t, uint64_t))v36[6];
    swift_bridgeObjectRetain();
    if (v37(v34, 1, v35))
    {
      v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA438);
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    }
    else
    {
      v272 = v36;
      v39 = v34[1];
      *v33 = *v34;
      v33[1] = v39;
      v40 = v34[3];
      v33[2] = v34[2];
      v33[3] = v40;
      v41 = v34[5];
      v33[4] = v34[4];
      v33[5] = v41;
      v42 = v34[7];
      v33[6] = v34[6];
      v33[7] = v42;
      v43 = v34[9];
      v33[8] = v34[8];
      v33[9] = v43;
      *((_BYTE *)v33 + 80) = *((_BYTE *)v34 + 80);
      v44 = *(int *)(v35 + 40);
      v284 = (_QWORD *)((char *)v33 + v44);
      v45 = (_QWORD *)((char *)v34 + v44);
      v46 = type metadata accessor for ToolKitProtoAppDefinition.Device(0);
      v47 = *(_QWORD **)(v46 - 8);
      v278 = (unsigned int (*)(_QWORD *, uint64_t, uint64_t))v47[6];
      v48 = v46;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v278(v45, 1, v48))
      {
        v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA430);
        memcpy(v284, v45, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
        v26 = v299;
        v25 = v300;
        v50 = (void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))v272;
      }
      else
      {
        v279 = v47;
        v51 = v45[1];
        if (v51 == 1)
        {
          *(_OWORD *)v284 = *(_OWORD *)v45;
        }
        else
        {
          *v284 = *v45;
          v284[1] = v51;
          swift_bridgeObjectRetain();
        }
        v26 = v299;
        v25 = v300;
        v50 = (void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))v272;
        v52 = *(int *)(v48 + 20);
        v53 = v48;
        v54 = (char *)v284 + v52;
        v55 = (char *)v45 + v52;
        v56 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 16))(v54, v55, v56);
        (*((void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))v279 + 7))(v284, 0, 1, v53);
      }
      v57 = *(int *)(v35 + 44);
      v58 = (char *)v33 + v57;
      v59 = (char *)v34 + v57;
      v60 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 16))(v58, v59, v60);
      v50[7](v33, 0, 1, v35);
      v27 = v294;
    }
    v61 = v27[20];
    v62 = (_QWORD *)((char *)v25 + v61);
    v63 = (_QWORD *)((char *)v26 + v61);
    v64 = v63[1];
    *v62 = *v63;
    v62[1] = v64;
    v65 = v27[21];
    v66 = (_QWORD *)((char *)v25 + v65);
    v67 = (_QWORD *)((char *)v26 + v65);
    v68 = type metadata accessor for ToolKitProtoToolDefinition.Version1.Deprecation(0);
    v69 = *(_QWORD *)(v68 - 8);
    v70 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v69 + 48);
    swift_bridgeObjectRetain();
    if (v70(v67, 1, v68))
    {
      v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA440);
      memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
    }
    else
    {
      v72 = v67[1];
      *v66 = *v67;
      v66[1] = v72;
      v73 = v67[3];
      v66[2] = v67[2];
      v66[3] = v73;
      v74 = *(int *)(v68 + 24);
      v75 = (char *)v66 + v74;
      v76 = (char *)v67 + v74;
      v77 = sub_2408E57A4();
      v78 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v77 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v79 = v75;
      v25 = v300;
      v78(v79, v76, v77);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v69 + 56))(v66, 0, 1, v68);
    }
    v80 = v27[22];
    v81 = (_QWORD *)((char *)v25 + v80);
    a2 = v299;
    v82 = (_QWORD *)((char *)v299 + v80);
    v83 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon(0);
    v84 = *(_QWORD *)(v83 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v84 + 48))(v82, 1, v83))
    {
      v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA450);
      memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
    }
    else
    {
      v86 = type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolKitProtoToolIconKind(0);
      v87 = *(_QWORD *)(v86 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v87 + 48))(v82, 1, v86))
      {
        v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA448);
        memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
      }
      else
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        v90 = v82[1];
        *v81 = *v82;
        v81[1] = v90;
        if (EnumCaseMultiPayload == 1)
        {
          *((_BYTE *)v81 + 16) = *((_BYTE *)v82 + 16);
          v91 = v82[4];
          v81[3] = v82[3];
          v81[4] = v91;
          v92 = v82[6];
          v81[5] = v82[5];
          v81[6] = v92;
          v93 = *(int *)(type metadata accessor for ToolKitProtoToolDefinition.Version1.ToolIcon.ToolSymbolIcon(0) + 32);
          v280 = (char *)v82 + v93;
          v285 = (char *)v81 + v93;
          v94 = sub_2408E57A4();
          v273 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v94 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v95 = v94;
          v27 = v294;
          v273(v285, v280, v95);
        }
        else
        {
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v87 + 56))(v81, 0, 1, v86);
      }
      v96 = *(int *)(v83 + 20);
      v97 = (char *)v81 + v96;
      v98 = (char *)v82 + v96;
      v99 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v99 - 8) + 16))(v97, v98, v99);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v84 + 56))(v81, 0, 1, v83);
      a2 = v299;
    }
    v100 = v27[23];
    a1 = v300;
    v101 = (_QWORD *)((char *)v300 + v100);
    v102 = (_QWORD *)((char *)a2 + v100);
    v103 = type metadata accessor for ToolKitProtoContainerDefinition(0);
    v104 = *(_QWORD **)(v103 - 8);
    v105 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))v104[6];
    if (v105(v102, 1, v103))
    {
      v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA460);
      memcpy(v101, v102, *(_QWORD *)(*(_QWORD *)(v106 - 8) + 64));
    }
    else
    {
      v281 = v105;
      v286 = v104;
      v107 = v102[1];
      *v101 = *v102;
      v101[1] = v107;
      v108 = v102[3];
      v101[2] = v102[2];
      v101[3] = v108;
      *((_WORD *)v101 + 16) = *((_WORD *)v102 + 16);
      v109 = v102[6];
      v101[5] = v102[5];
      v101[6] = v109;
      v110 = v102[8];
      v101[7] = v102[7];
      v101[8] = v110;
      v111 = *(int *)(v103 + 40);
      v274 = (_QWORD *)((char *)v101 + v111);
      v112 = (_QWORD *)((char *)v102 + v111);
      v113 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
      v114 = *(_QWORD *)(v113 - 8);
      v269 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v114 + 48);
      swift_bridgeObjectRetain();
      v115 = v112;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v269(v112, 1, v113))
      {
        v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA458);
        memcpy(v274, v112, *(_QWORD *)(*(_QWORD *)(v116 - 8) + 64));
        a2 = v299;
        a1 = v300;
        v104 = v286;
      }
      else
      {
        v270 = v114;
        v117 = v112[1];
        if (v117 == 1)
        {
          *(_OWORD *)v274 = *(_OWORD *)v112;
        }
        else
        {
          *v274 = *v112;
          v274[1] = v117;
          swift_bridgeObjectRetain();
        }
        a2 = v299;
        a1 = v300;
        v104 = v286;
        v118 = v113;
        v119 = *(int *)(v113 + 20);
        v120 = (char *)v274 + v119;
        v121 = (char *)v115 + v119;
        v122 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v122 - 8) + 16))(v120, v121, v122);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v270 + 56))(v274, 0, 1, v118);
      }
      v123 = *(int *)(v103 + 44);
      v124 = (char *)v101 + v123;
      v125 = (char *)v102 + v123;
      v126 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v126 - 8) + 16))(v124, v125, v126);
      ((void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v104[7])(v101, 0, 1, v103);
      v27 = v294;
      v105 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))v281;
    }
    v127 = v27[24];
    v128 = (_QWORD *)((char *)a1 + v127);
    v129 = (_QWORD *)((char *)a2 + v127);
    if (v105((char *)a2 + v127, 1, v103))
    {
      v130 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA460);
      memcpy(v128, v129, *(_QWORD *)(*(_QWORD *)(v130 - 8) + 64));
    }
    else
    {
      v287 = v104;
      v131 = v129[1];
      *v128 = *v129;
      v128[1] = v131;
      v132 = v129[3];
      v128[2] = v129[2];
      v128[3] = v132;
      *((_WORD *)v128 + 16) = *((_WORD *)v129 + 16);
      v133 = v129[6];
      v128[5] = v129[5];
      v128[6] = v133;
      v134 = v129[8];
      v128[7] = v129[7];
      v128[8] = v134;
      v135 = *(int *)(v103 + 40);
      v282 = (_QWORD *)((char *)v128 + v135);
      v136 = (_QWORD *)((char *)v129 + v135);
      v137 = type metadata accessor for ToolKitProtoContainerDefinition.Device(0);
      v138 = *(_QWORD **)(v137 - 8);
      v275 = (unsigned int (*)(_QWORD *, uint64_t, uint64_t))v138[6];
      swift_bridgeObjectRetain();
      v139 = v136;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v275(v136, 1, v137))
      {
        v140 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA458);
        memcpy(v282, v136, *(_QWORD *)(*(_QWORD *)(v140 - 8) + 64));
        a2 = v299;
        a1 = v300;
        v141 = (void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))v287;
      }
      else
      {
        v276 = v138;
        v141 = (void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))v287;
        v142 = v136[1];
        if (v142 == 1)
        {
          *(_OWORD *)v282 = *(_OWORD *)v136;
        }
        else
        {
          *v282 = *v136;
          v282[1] = v142;
          swift_bridgeObjectRetain();
        }
        a2 = v299;
        a1 = v300;
        v143 = v137;
        v144 = *(int *)(v137 + 20);
        v145 = (char *)v282 + v144;
        v146 = (char *)v139 + v144;
        v147 = sub_2408E57A4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v147 - 8) + 16))(v145, v146, v147);
        (*((void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))v276 + 7))(v282, 0, 1, v143);
      }
      v148 = *(int *)(v103 + 44);
      v149 = (char *)v128 + v148;
      v150 = (char *)v129 + v148;
      v151 = sub_2408E57A4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v151 - 8) + 16))(v149, v150, v151);
      v141[7](v128, 0, 1, v103);
      v27 = v294;
    }
    v152 = v27[25];
    v153 = (char *)a1 + v152;
    v154 = (char *)a2 + v152;
    v155 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v155 - 8) + 16))(v153, v154, v155);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v290 + 56))(a1, 0, 1, v27);
    a3 = v298;
  }
  v156 = a3[5];
  v157 = (_QWORD *)((char *)a1 + v156);
  v158 = (_QWORD *)((char *)a2 + v156);
  v159 = (int *)type metadata accessor for TranscriptProtoAction(0);
  v160 = *((_QWORD *)v159 - 1);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v160 + 48))(v158, 1, v159))
  {
    v161 = __swift_instantiateConcreteTypeFromMangledName(&qword_2570012B8);
    memcpy(v157, v158, *(_QWORD *)(*(_QWORD *)(v161 - 8) + 64));
  }
  else
  {
    v162 = v158[1];
    *v157 = *v158;
    v157[1] = v162;
    *((_BYTE *)v157 + 16) = *((_BYTE *)v158 + 16);
    v157[3] = v158[3];
    v163 = v159[7];
    v164 = (_QWORD *)((char *)v157 + v163);
    v165 = (_QWORD *)((char *)v158 + v163);
    v166 = type metadata accessor for TranscriptProtoStatementID(0);
    v295 = *(_QWORD *)(v166 - 8);
    v167 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v295 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v167(v165, 1, v166))
    {
      v168 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA300);
      memcpy(v164, v165, *(_QWORD *)(*(_QWORD *)(v168 - 8) + 64));
    }
    else
    {
      *(_DWORD *)v164 = *(_DWORD *)v165;
      v169 = v165[2];
      v164[1] = v165[1];
      v164[2] = v169;
      v170 = *(int *)(v166 + 24);
      v171 = (char *)v164 + v170;
      v291 = (char *)v165 + v170;
      v172 = sub_2408E57A4();
      v173 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v172 - 8) + 16);
      swift_bridgeObjectRetain();
      v173(v171, v291, v172);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v295 + 56))(v164, 0, 1, v166);
    }
    v174 = v159[8];
    v175 = (_QWORD *)((char *)v157 + v174);
    v176 = (_QWORD *)((char *)v158 + v174);
    v177 = v176[1];
    *v175 = *v176;
    v175[1] = v177;
    v178 = v159[9];
    v179 = (_QWORD *)((char *)v157 + v178);
    v180 = (_QWORD *)((char *)v158 + v178);
    v181 = v180[1];
    *v179 = *v180;
    v179[1] = v181;
    v182 = v159[10];
    v183 = (_QWORD *)((char *)v157 + v182);
    v184 = (_QWORD *)((char *)v158 + v182);
    v185 = v184[1];
    *v183 = *v184;
    v183[1] = v185;
    v186 = v159[11];
    v187 = (char *)v157 + v186;
    v188 = (char *)v158 + v186;
    v189 = sub_2408E57A4();
    v190 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v189 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v190(v187, v188, v189);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v160 + 56))(v157, 0, 1, v159);
    a2 = v299;
    a1 = v300;
    a3 = v298;
  }
  v191 = a3[6];
  v192 = (char *)a1 + v191;
  v193 = (char *)a2 + v191;
  v194 = type metadata accessor for TranscriptProtoStatementOutcome(0);
  v195 = *(_QWORD *)(v194 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v195 + 48))(v193, 1, v194))
  {
    v196 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E8);
    memcpy(v192, v193, *(_QWORD *)(*(_QWORD *)(v196 - 8) + 64));
  }
  else
  {
    v197 = type metadata accessor for TranscriptProtoStatementOutcomeEnum(0);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v197 - 8) + 48))(v193, 1, v197))
    {
      v199 = (char *)&loc_240718CBC + 4 * word_24090BFFC[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v198 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA3E0);
    memcpy(v192, v193, *(_QWORD *)(*(_QWORD *)(v198 - 8) + 64));
    v200 = *(int *)(v194 + 20);
    v201 = &v192[v200];
    v202 = &v193[v200];
    v203 = sub_2408E57A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v203 - 8) + 16))(v201, v202, v203);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v195 + 56))(v192, 0, 1, v194);
    a3 = v298;
  }
  v204 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  v205 = (_QWORD *)((char *)a1 + v204);
  v206 = (_QWORD *)((char *)a2 + v204);
  v207 = (int *)type metadata accessor for TranscriptProtoResponseManifest(0);
  v208 = *((_QWORD *)v207 - 1);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v208 + 48))(v206, 1, v207))
  {
    v209 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA418);
    memcpy(v205, v206, *(_QWORD *)(*(_QWORD *)(v209 - 8) + 64));
  }
  else
  {
    *v205 = *v206;
    v210 = v207[5];
    v211 = (_QWORD *)((char *)v205 + v210);
    v212 = (_QWORD *)((char *)v206 + v210);
    v213 = type metadata accessor for TranscriptProtoResponseDialog(0);
    v214 = *(_QWORD *)(v213 - 8);
    v215 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v214 + 48);
    swift_bridgeObjectRetain();
    if (v215(v212, 1, v213))
    {
      v216 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA408);
      memcpy(v211, v212, *(_QWORD *)(*(_QWORD *)(v216 - 8) + 64));
    }
    else
    {
      v217 = v212[1];
      *v211 = *v212;
      v211[1] = v217;
      v218 = v212[3];
      v211[2] = v212[2];
      v211[3] = v218;
      v219 = v212[5];
      v211[4] = v212[4];
      v211[5] = v219;
      v296 = v208;
      v220 = v212[7];
      v211[6] = v212[6];
      v211[7] = v220;
      v221 = *(int *)(v213 + 32);
      v288 = (char *)v212 + v221;
      v292 = (char *)v211 + v221;
      v222 = sub_2408E57A4();
      v277 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v222 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v208 = v296;
      swift_bridgeObjectRetain();
      v277(v292, v288, v222);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v214 + 56))(v211, 0, 1, v213);
    }
    v223 = v207[6];
    v224 = (_QWORD *)((char *)v205 + v223);
    v225 = (_QWORD *)((char *)v206 + v223);
    v226 = type metadata accessor for TranscriptProtoResponseVisual(0);
    v227 = *(_QWORD *)(v226 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v227 + 48))(v225, 1, v226))
    {
      v228 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFA410);
      memcpy(v224, v225, *(_QWORD *)(*(_QWORD *)(v228 - 8) + 64));
    }
    else
    {
      v229 = v225[1];
      *v224 = *v225;
      v224[1] = v229;
      v230 = *(int *)(v226 + 24);
      v289 = (char *)v225 + v230;
      v293 = (char *)v224 + v230;
      v297 = v208;
      v231 = sub_2408E57A4();
      v232 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v231 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v233 = v231;
      v208 = v297;
      v232(v293, v289, v233);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v227 + 56))(v224, 0, 1, v226);
    }
    v234 = v207[7];
    v235 = (_QWORD *)((char *)v205 + v234);
    v236 = (_QWORD *)((char *)v206 + v234);
    v237 = v236[1];
    *v235 = *v236;
    v235[1] = v237;
    v238 = v207[8];
    v239 = (_QWORD *)((char *)v205 + v238);
    v240 = (_QWORD *)((char *)v206 + v238);
    v241 = v240[1];
    *v239 = *v240;
    v239[1] = v241;
    *((_BYTE *)v205 + v207[9]) = *((_BYTE *)v206 + v207[9]);
    *((_BYTE *)v205 + v207[10]) = *((_BYTE *)v206 + v207[10]);
    v242 = v207[11];
    v243 = (char *)v205 + v242;
    v244 = (char *)v206 + v242;
    v245 = sub_2408E57A4();
    v246 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v245 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v246(v243, v244, v245);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v208 + 56))(v205, 0, 1, v207);
    a2 = v299;
    a1 = v300;
    a3 = v298;
  }
  v247 = a3[9];
  v248 = (_QWORD *)((char *)a1 + v247);
  v249 = (_QWORD *)((char *)a2 + v247);
  v250 = type metadata accessor for ToolKitProtoTypeDisplayRepresentation(0);
  v251 = *(_QWORD *)(v250 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v251 + 48))(v249, 1, v250))
  {
    v252 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FFBDC0);
    memcpy(v248, v249, *(_QWORD *)(*(_QWORD *)(v252 - 8) + 64));
  }
  else
  {
    v253 = v249[1];
    *v248 = *v249;
    v248[1] = v253;
    v254 = v249[3];
    v248[2] = v249[2];
    v248[3] = v254;
    v248[4] = v249[4];
    v255 = *(int *)(v250 + 28);
    v256 = (char *)v248 + v255;
    v257 = (char *)v249 + v255;
    v258 = sub_2408E57A4();
    v259 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v258 - 8) + 16);
    a3 = v298;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a1 = v300;
    swift_bridgeObjectRetain();
    v260 = v258;
    a2 = v299;
    v259(v256, v257, v260);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v251 + 56))(v248, 0, 1, v250);
  }
  v261 = a3[10];
  v262 = (char *)a1 + v261;
  v263 = (char *)a2 + v261;
  v264 = sub_2408E57A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v264 - 8) + 16))(v262, v263, v264);
  return a1;
}

