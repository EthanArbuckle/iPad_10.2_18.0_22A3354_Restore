uint64_t sub_1AF684264(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v2 = OUTLINED_FUNCTION_28_3();
  v1(v2);
  OUTLINED_FUNCTION_25_0();
  return swift_unknownObjectRelease();
}

unint64_t sub_1AF6842A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1AF76AF18();
  sub_1AF76A5AC();
  v4 = OUTLINED_FUNCTION_27_1();
  return sub_1AF684304(a1, a2, v4);
}

unint64_t sub_1AF684304(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1AF76AD14() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1AF76AD14() & 1) == 0);
    }
  }
  return v6;
}

id getWFWalrusLogObject()
{
  if (getWFWalrusLogObject_onceToken[0] != -1)
    dispatch_once(getWFWalrusLogObject_onceToken, &__block_literal_global_114);
  return (id)getWFWalrusLogObject_log;
}

id getWFDatabaseLogObject()
{
  if (getWFDatabaseLogObject_onceToken != -1)
    dispatch_once(&getWFDatabaseLogObject_onceToken, &__block_literal_global_14);
  return (id)getWFDatabaseLogObject_log;
}

id getWFVoiceShortcutClientLogObject()
{
  if (getWFVoiceShortcutClientLogObject_onceToken != -1)
    dispatch_once(&getWFVoiceShortcutClientLogObject_onceToken, &__block_literal_global_4);
  return (id)getWFVoiceShortcutClientLogObject_log;
}

void VCVoiceShortcutManagerConfigureXPCInterface(void *a1)
{
  void *v1;
  id v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  void *v59;
  void *v60;
  void *v61;
  void *v62;
  void *v63;
  void *v64;
  void *v65;
  void *v66;
  void *v67;
  void *v68;
  void *v69;
  void *v70;
  void *v71;
  void *v72;
  void *v73;
  void *v74;
  void *v75;
  void *v76;
  void *v77;
  void *v78;
  void *v79;
  void *v80;
  void *v81;
  void *v82;
  void *v83;
  void *v84;
  void *v85;
  void *v86;
  void *v87;
  void *v88;
  void *v89;
  void *v90;
  void *v91;
  void *v92;
  void *v93;
  void *v94;
  uint64_t v95;
  void *v96;
  void *v97;
  uint64_t v98;
  void *v99;
  void *v100;
  void *v101;
  void *v102;
  void *v103;
  void *v104;
  void *v105;
  void *v106;
  void *v107;
  void *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void *v114;
  void *v115;
  void *v116;
  void *v117;
  void *v118;
  void *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  void *v125;
  void *v126;
  void *v127;
  void *v128;
  void *v129;
  void *v130;
  void *v131;
  void *v132;
  void *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  void *v139;
  void *v140;
  void *v141;
  void *v142;
  void *v143;
  _QWORD v144[3];
  uint64_t v145;
  _QWORD v146[4];
  _QWORD v147[4];
  _QWORD v148[2];
  _QWORD v149[2];
  uint64_t v150;
  _QWORD v151[2];
  uint64_t v152;
  uint64_t v153;
  _QWORD v154[2];
  uint64_t v155;
  _QWORD v156[2];
  uint64_t v157;
  _QWORD v158[2];
  uint64_t v159;
  _QWORD v160[2];
  _QWORD v161[2];
  _QWORD v162[2];
  _QWORD v163[2];
  _QWORD v164[2];
  _QWORD v165[2];
  uint64_t v166;
  _QWORD v167[2];
  _QWORD v168[2];
  _QWORD v169[2];
  _QWORD v170[4];
  _QWORD v171[2];
  _QWORD v172[4];

  v172[2] = *MEMORY[0x1E0C80C00];
  v1 = (void *)MEMORY[0x1E0C99E60];
  v2 = a1;
  v3 = objc_opt_class();
  objc_msgSend(v1, "setWithObjects:", v3, objc_opt_class(), 0);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setClasses:forSelector:argumentIndex:ofReply:", v4, sel_requestSandboxExtensionForToolKitIndexingWithCompletion_, 0, 1);

  objc_msgSend(MEMORY[0x1E0C99E60], "setWithObjects:", objc_opt_class(), 0);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setClasses:forSelector:argumentIndex:ofReply:", v5, sel_requestSandboxExtensionForToolKitIndexingWithCompletion_, 1, 1);

  objc_msgSend(MEMORY[0x1E0C99E60], "setWithObjects:", objc_opt_class(), 0);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setClasses:forSelector:argumentIndex:ofReply:", v6, sel_requestSandboxExtensionForToolKitIndexingWithCompletion_, 2, 1);

  v7 = (void *)MEMORY[0x1E0C99E60];
  v8 = objc_opt_class();
  objc_msgSend(v7, "setWithObjects:", v8, objc_opt_class(), 0);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setClasses:forSelector:argumentIndex:ofReply:", v9, sel_getVoiceShortcutsWithCompletion_, 0, 1);

  v10 = (void *)MEMORY[0x1E0C99E60];
  v11 = objc_opt_class();
  objc_msgSend(v10, "setWithObjects:", v11, objc_opt_class(), 0);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setClasses:forSelector:argumentIndex:ofReply:", v12, sel_getVoiceShortcutsForAppWithBundleIdentifier_completion_, 0, 1);

  objc_msgSend(MEMORY[0x1E0C99E60], "setWithObjects:", objc_opt_class(), 0);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setClasses:forSelector:argumentIndex:ofReply:", v13, sel_addVoiceShortcut_phrase_completion_, 0, 1);

  objc_msgSend(MEMORY[0x1E0C99E60], "setWithObjects:", objc_opt_class(), 0);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setClasses:forSelector:argumentIndex:ofReply:", v14, sel_updateVoiceShortcutWithIdentifier_phrase_shortcut_completion_, 0, 1);

  objc_msgSend(MEMORY[0x1E0C99E60], "setWithObjects:", objc_opt_class(), 0);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setClasses:forSelector:argumentIndex:ofReply:", v15, sel_getSiriPodcastsDatabaseURLWithCompletion_, 0, 1);

  v16 = (void *)MEMORY[0x1E0C99E60];
  v172[0] = objc_opt_class();
  v172[1] = objc_opt_class();
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v172, 2);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "setWithArray:", v17);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setClasses:forSelector:argumentIndex:ofReply:", v18, sel_setShortcutSuggestions_forAppWithBundleIdentifier_, 0, 0);

  v19 = (void *)MEMORY[0x1E0C99E60];
  v171[0] = objc_opt_class();
  v171[1] = objc_opt_class();
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v171, 2);
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v19, "setWithArray:", v20);
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setClasses:forSelector:argumentIndex:ofReply:", v21, sel_getShortcutSuggestionsForAppWithBundleIdentifier_completion_, 0, 1);

  v22 = (void *)MEMORY[0x1E0C99E60];
  v170[0] = objc_opt_class();
  v170[1] = objc_opt_class();
  v170[2] = objc_opt_class();
  v170[3] = objc_opt_class();
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v170, 4);
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v22, "setWithArray:", v23);
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setClasses:forSelector:argumentIndex:ofReply:", v24, sel_getShortcutSuggestionsForAllAppsWithLimit_completion_, 0, 1);

  v25 = (void *)MEMORY[0x1E0C99E60];
  v169[0] = objc_opt_class();
  v169[1] = objc_opt_class();
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v169, 2);
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v25, "setWithArray:", v26);
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setClasses:forSelector:argumentIndex:ofReply:", v27, sel_getShareSheetWorkflowsForExtensionMatchingDictionaries_hostBundleIdentifier_completion_, 0, 1);

  v28 = (void *)MEMORY[0x1E0C99E60];
  v168[0] = objc_opt_class();
  v168[1] = objc_opt_class();
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v168, 2);
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v28, "setWithArray:", v29);
  v30 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setClasses:forSelector:argumentIndex:ofReply:", v30, sel_getStingWorkflowsWithCompletion_, 0, 1);

  v31 = (void *)MEMORY[0x1E0C99E60];
  v167[0] = objc_opt_class();
  v167[1] = objc_opt_class();
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v167, 2);
  v32 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v31, "setWithArray:", v32);
  v33 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setClasses:forSelector:argumentIndex:ofReply:", v33, sel_getResultsForQuery_resultClassName_completion_, 0, 1);

  v34 = (void *)MEMORY[0x1E0C99E60];
  v166 = objc_opt_class();
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v166, 1);
  v35 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v34, "setWithArray:", v35);
  v36 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setClasses:forSelector:argumentIndex:ofReply:", v36, sel_getValueForDescriptor_resultClassName_completion_, 0, 1);

  v37 = (void *)MEMORY[0x1E0C99E60];
  v165[0] = objc_opt_class();
  v165[1] = objc_opt_class();
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v165, 2);
  v38 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v37, "setWithArray:", v38);
  v39 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setClasses:forSelector:argumentIndex:ofReply:", v39, sel_getFirstUnsortedWorkflowWithCompletion_, 0, 1);

  v40 = (void *)MEMORY[0x1E0C99E60];
  v164[0] = objc_opt_class();
  v164[1] = objc_opt_class();
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v164, 2);
  v41 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v40, "setWithArray:", v41);
  v42 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setClasses:forSelector:argumentIndex:ofReply:", v42, sel_getVaultItemsAccessForBackgroundRunner_, 0, 1);

  v43 = (void *)MEMORY[0x1E0C99E60];
  v163[0] = objc_opt_class();
  v163[1] = objc_opt_class();
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v163, 2);
  v44 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v43, "setWithArray:", v44);
  v45 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setClasses:forSelector:argumentIndex:ofReply:", v45, sel_getOnScreenContentWithOptions_completion_, 0, 0);

  v46 = (void *)MEMORY[0x1E0C99E60];
  v162[0] = objc_opt_class();
  v162[1] = objc_opt_class();
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v162, 2);
  v47 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v46, "setWithArray:", v47);
  v48 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setClasses:forSelector:argumentIndex:ofReply:", v48, sel_getOnScreenContentWithOptions_completionHandler_, 0, 0);

  v49 = (void *)MEMORY[0x1E0C99E60];
  v161[0] = objc_opt_class();
  v161[1] = objc_opt_class();
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v161, 2);
  v50 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v49, "setWithArray:", v50);
  v51 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setClasses:forSelector:argumentIndex:ofReply:", v51, sel_getOnScreenContentWithOptions_completionHandler_, 0, 1);

  v52 = (void *)MEMORY[0x1E0C99E60];
  v160[0] = objc_opt_class();
  v160[1] = objc_opt_class();
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v160, 2);
  v53 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v52, "setWithArray:", v53);
  v54 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setClasses:forSelector:argumentIndex:ofReply:", v54, sel_getSuggestedShortcutsWithLimit_completion_, 0, 1);

  v55 = (void *)MEMORY[0x1E0C99E60];
  v159 = objc_opt_class();
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v159, 1);
  v56 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v55, "setWithArray:", v56);
  v57 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setClasses:forSelector:argumentIndex:ofReply:", v57, sel_getSuggestedShortcutsWithLimit_completion_, 1, 1);

  v58 = (void *)MEMORY[0x1E0C99E60];
  v158[0] = objc_opt_class();
  v158[1] = objc_opt_class();
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v158, 2);
  v59 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v58, "setWithArray:", v59);
  v60 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setClasses:forSelector:argumentIndex:ofReply:", v60, sel_getRecentsCallWithTelephony_limit_completion_, 0, 1);

  v61 = (void *)MEMORY[0x1E0C99E60];
  v157 = objc_opt_class();
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v157, 1);
  v62 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v61, "setWithArray:", v62);
  v63 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setClasses:forSelector:argumentIndex:ofReply:", v63, sel_getRecentsCallWithTelephony_limit_completion_, 1, 1);

  v64 = (void *)MEMORY[0x1E0C99E60];
  v156[0] = objc_opt_class();
  v156[1] = objc_opt_class();
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v156, 2);
  v65 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v64, "setWithArray:", v65);
  v66 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setClasses:forSelector:argumentIndex:ofReply:", v66, sel_getFavoriteContactsWithLimit_completion_, 0, 1);

  v67 = (void *)MEMORY[0x1E0C99E60];
  v155 = objc_opt_class();
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v155, 1);
  v68 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v67, "setWithArray:", v68);
  v69 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setClasses:forSelector:argumentIndex:ofReply:", v69, sel_getFavoriteContactsWithLimit_completion_, 1, 1);

  v70 = (void *)MEMORY[0x1E0C99E60];
  v154[0] = objc_opt_class();
  v154[1] = objc_opt_class();
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v154, 2);
  v71 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v70, "setWithArray:", v71);
  v72 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setClasses:forSelector:argumentIndex:ofReply:", v72, sel_getUpcomingMediaForBundleIdentifier_limit_completion_, 0, 1);

  v73 = (void *)MEMORY[0x1E0C99E60];
  v153 = objc_opt_class();
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v153, 1);
  v74 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v73, "setWithArray:", v74);
  v75 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setClasses:forSelector:argumentIndex:ofReply:", v75, sel_getUpcomingMediaForBundleIdentifier_limit_completion_, 1, 1);

  v76 = (void *)MEMORY[0x1E0C99E60];
  v152 = objc_opt_class();
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v152, 1);
  v77 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v76, "setWithArray:", v77);
  v78 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setClasses:forSelector:argumentIndex:ofReply:", v78, sel_getLinkActionWithAppBundleIdentifier_appIntentIdentifier_expandingParameterName_limit_completion_, 0, 1);

  v79 = (void *)MEMORY[0x1E0C99E60];
  v151[0] = objc_opt_class();
  v151[1] = objc_opt_class();
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v151, 2);
  v80 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v79, "setWithArray:", v80);
  v81 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setClasses:forSelector:argumentIndex:ofReply:", v81, sel_getLinkActionWithAppBundleIdentifier_appIntentIdentifier_expandingParameterName_limit_completion_, 1, 1);

  v82 = (void *)MEMORY[0x1E0C99E60];
  v150 = objc_opt_class();
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v150, 1);
  v83 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v82, "setWithArray:", v83);
  v84 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setClasses:forSelector:argumentIndex:ofReply:", v84, sel_getLinkActionWithAppBundleIdentifier_appIntentIdentifier_expandingParameterName_limit_completion_, 2, 1);

  v85 = (void *)MEMORY[0x1E0C99E60];
  v149[0] = objc_opt_class();
  v149[1] = objc_opt_class();
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v149, 2);
  v86 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v85, "setWithArray:", v86);
  v87 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setClasses:forSelector:argumentIndex:ofReply:", v87, sel_computeFinderResizedSizesForImages_inSizes_completion_, 0, 0);

  v88 = (void *)MEMORY[0x1E0C99E60];
  v148[0] = objc_opt_class();
  v148[1] = objc_opt_class();
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v148, 2);
  v89 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v88, "setWithArray:", v89);
  v90 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setClasses:forSelector:argumentIndex:ofReply:", v90, sel_computeFinderResizedSizesForImages_inSizes_completion_, 1, 0);

  v91 = (void *)MEMORY[0x1E0C99E60];
  v147[0] = objc_opt_class();
  v147[1] = objc_opt_class();
  v147[2] = objc_opt_class();
  v147[3] = objc_opt_class();
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v147, 4);
  v92 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v91, "setWithArray:", v92);
  v93 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setClasses:forSelector:argumentIndex:ofReply:", v93, sel_computeFinderResizedSizesForImages_inSizes_completion_, 0, 1);

  v94 = (void *)MEMORY[0x1E0C99E60];
  v95 = objc_opt_class();
  objc_msgSend(v94, "setWithObjects:", v95, objc_opt_class(), 0);
  v96 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setClasses:forSelector:argumentIndex:ofReply:", v96, sel_resolveFilePath_workflowID_completion_, 0, 1);

  v97 = (void *)MEMORY[0x1E0C99E60];
  v98 = objc_opt_class();
  objc_msgSend(v97, "setWithObjects:", v98, objc_opt_class(), 0);
  v99 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setClasses:forSelector:argumentIndex:ofReply:", v99, sel_resolveBookmarkData_completion_, 0, 1);

  objc_msgSend(MEMORY[0x1E0C99E60], "setWithObjects:", objc_opt_class(), 0);
  v100 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setClasses:forSelector:argumentIndex:ofReply:", v100, sel_createBookmarkWithURL_workflowID_completion_, 0, 1);

  objc_msgSend(MEMORY[0x1E0C99E60], "setWithObjects:", objc_opt_class(), 0);
  v101 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setClasses:forSelector:argumentIndex:ofReply:", v101, sel_createBookmarkWithBookmarkableString_path_workflowID_completion_, 0, 1);

  objc_msgSend(MEMORY[0x1E0C99E60], "setWithObjects:", objc_opt_class(), 0);
  v102 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setClasses:forSelector:argumentIndex:ofReply:", v102, sel_resolveCrossDeviceItemID_completion_, 0, 1);

  objc_msgSend(MEMORY[0x1E0C99E60], "setWithObjects:", objc_opt_class(), 0);
  v103 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setClasses:forSelector:argumentIndex:ofReply:", v103, sel_fetchURLForFPItem_completion_, 0, 1);

  objc_msgSend(MEMORY[0x1E0C99E60], "setWithObject:", objc_opt_class());
  v104 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setClasses:forSelector:argumentIndex:ofReply:", v104, sel_archiveAction_withActionMetadata_completion_, 0, 1);

  objc_msgSend(MEMORY[0x1E0C99E60], "setWithObject:", objc_opt_class());
  v105 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setClasses:forSelector:argumentIndex:ofReply:", v105, sel_archiveAction_withActionMetadata_completion_, 1, 1);

  objc_msgSend(MEMORY[0x1E0C99E60], "setWithObject:", objc_opt_class());
  v106 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setClasses:forSelector:argumentIndex:ofReply:", v106, sel_unarchiveActionFromData_withActionMetadata_completion_, 0, 1);

  objc_msgSend(MEMORY[0x1E0C99E60], "setWithObject:", objc_opt_class());
  v107 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setClasses:forSelector:argumentIndex:ofReply:", v107, sel_unarchiveActionFromData_withActionMetadata_completion_, 1, 1);

  v108 = (void *)MEMORY[0x1E0C99E60];
  v109 = objc_opt_class();
  v110 = objc_opt_class();
  v111 = objc_opt_class();
  v112 = objc_opt_class();
  v113 = objc_opt_class();
  objc_msgSend(v108, "setWithObjects:", v109, v110, v111, v112, v113, objc_opt_class(), 0);
  v114 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setClasses:forSelector:argumentIndex:ofReply:", v114, sel_getLinkActionWithAppBundleIdentifier_appIntentIdentifier_serializedParameterStates_completion_, 2, 0);

  objc_msgSend(MEMORY[0x1E0C99E60], "setWithObject:", objc_opt_class());
  v115 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setClasses:forSelector:argumentIndex:ofReply:", v115, sel_getLinkActionWithAppBundleIdentifier_appIntentIdentifier_serializedParameterStates_completion_, 0, 1);

  objc_msgSend(MEMORY[0x1E0C99E60], "setWithObject:", objc_opt_class());
  v116 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setClasses:forSelector:argumentIndex:ofReply:", v116, sel_getLinkActionWithAppBundleIdentifier_appIntentIdentifier_serializedParameterStates_completion_, 1, 1);

  objc_msgSend(MEMORY[0x1E0C99E60], "setWithObject:", objc_opt_class());
  v117 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setClasses:forSelector:argumentIndex:ofReply:", v117, sel_getMigratedAppIntentWithINIntent_completion_, 0, 1);

  objc_msgSend(MEMORY[0x1E0C99E60], "setWithObject:", objc_opt_class());
  v118 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setClasses:forSelector:argumentIndex:ofReply:", v118, sel_getMigratedAppIntentWithINIntent_completion_, 1, 1);

  v119 = (void *)MEMORY[0x1E0C99E60];
  v120 = objc_opt_class();
  v121 = objc_opt_class();
  v122 = objc_opt_class();
  v123 = objc_opt_class();
  v124 = objc_opt_class();
  objc_msgSend(v119, "setWithObjects:", v120, v121, v122, v123, v124, objc_opt_class(), 0);
  v125 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setClasses:forSelector:argumentIndex:ofReply:", v125, sel_getSerializedParametersForLinkAction_actionMetadata_completion_, 0, 1);

  objc_msgSend(MEMORY[0x1E0C99E60], "setWithObject:", objc_opt_class());
  v126 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setClasses:forSelector:argumentIndex:ofReply:", v126, sel_getSerializedParametersForLinkAction_actionMetadata_completion_, 1, 1);

  objc_msgSend(v2, "setClass:forSelector:argumentIndex:ofReply:", objc_opt_class(), sel_loadFileURLWithItemProviderRequestMetadata_type_openInPlace_completion_, 0, 1);
  objc_msgSend(v2, "setClass:forSelector:argumentIndex:ofReply:", objc_opt_class(), sel_loadFileURLWithItemProviderRequestMetadata_type_openInPlace_completion_, 1, 1);
  objc_msgSend(v2, "setClass:forSelector:argumentIndex:ofReply:", objc_opt_class(), sel_loadDataWithItemProviderRequestMetadata_type_completion_, 0, 1);
  objc_msgSend(v2, "setClass:forSelector:argumentIndex:ofReply:", objc_opt_class(), sel_loadDataWithItemProviderRequestMetadata_type_completion_, 1, 1);
  v127 = (void *)MEMORY[0x1E0C99E60];
  v146[0] = objc_opt_class();
  v146[1] = objc_opt_class();
  v146[2] = objc_opt_class();
  v146[3] = objc_opt_class();
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v146, 4);
  v128 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v127, "setWithArray:", v128);
  v129 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setClasses:forSelector:argumentIndex:ofReply:", v129, sel_fetchAvailableStaccatoActions_, 0, 1);

  objc_msgSend(v2, "setClass:forSelector:argumentIndex:ofReply:", objc_opt_class(), sel_fetchAvailableStaccatoActions_, 1, 1);
  v130 = (void *)MEMORY[0x1E0C99E60];
  v145 = objc_opt_class();
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v145, 1);
  v131 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v130, "setWithArray:", v131);
  v132 = (void *)objc_claimAutoreleasedReturnValue();
  v133 = (void *)MEMORY[0x1E0C99E60];
  v134 = objc_opt_class();
  v135 = objc_opt_class();
  v136 = objc_opt_class();
  v137 = objc_opt_class();
  v138 = objc_opt_class();
  objc_msgSend(v133, "setWithObjects:", v134, v135, v136, v137, v138, objc_opt_class(), 0);
  v139 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v132, "setByAddingObjectsFromSet:", v139);
  v140 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setClasses:forSelector:argumentIndex:ofReply:", v140, sel_fetchAllValueSectionsForStaccatoParameter_completion_, 0, 1);

  objc_msgSend(v2, "setClass:forSelector:argumentIndex:ofReply:", objc_opt_class(), sel_fetchAllValueSectionsForStaccatoParameter_completion_, 1, 1);
  objc_msgSend(v2, "setClass:forSelector:argumentIndex:ofReply:", objc_opt_class(), sel_configuredStaccatoActionFromTemplate_valuesByParameterKey_completion_, 0, 0);
  v141 = (void *)MEMORY[0x1E0C99E60];
  v144[0] = objc_opt_class();
  v144[1] = objc_opt_class();
  v144[2] = objc_opt_class();
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v144, 3);
  v142 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v141, "setWithArray:", v142);
  v143 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setClasses:forSelector:argumentIndex:ofReply:", v143, sel_configuredStaccatoActionFromTemplate_valuesByParameterKey_completion_, 1, 0);

  objc_msgSend(v2, "setClass:forSelector:argumentIndex:ofReply:", objc_opt_class(), sel_configuredStaccatoActionFromTemplate_valuesByParameterKey_completion_, 0, 1);
  objc_msgSend(v2, "setClass:forSelector:argumentIndex:ofReply:", objc_opt_class(), sel_configuredStaccatoActionFromTemplate_valuesByParameterKey_completion_, 1, 1);
  objc_msgSend(v2, "setClass:forSelector:argumentIndex:ofReply:", objc_opt_class(), sel_defaultStaccatoActionWithCompletion_, 0, 1);
  objc_msgSend(v2, "setClass:forSelector:argumentIndex:ofReply:", objc_opt_class(), sel_defaultStaccatoActionWithCompletion_, 1, 1);

}

void type metadata accessor for SetSilentModeAction()
{
  OUTLINED_FUNCTION_25();
}

id getWFGeneralLogObject()
{
  if (getWFGeneralLogObject_onceToken != -1)
    dispatch_once(&getWFGeneralLogObject_onceToken, &__block_literal_global_1857);
  return (id)getWFGeneralLogObject_log;
}

void sub_1AF688498(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1AF6886E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1AF689BF0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1AF689EC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1AF68A134(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id UIImageFunction()
{
  return (id)classUIImage;
}

void sub_1AF68AD80(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(v1 + 16))(v1);
  _Unwind_Resume(a1);
}

id UIColorFunction()
{
  return (id)classUIColor;
}

Class initUIImage()
{
  Class result;

  if (UIKitLibrary_sOnce != -1)
    dispatch_once(&UIKitLibrary_sOnce, &__block_literal_global_3856);
  result = objc_getClass("UIImage");
  classUIImage = (uint64_t)result;
  getUIImageClass = (uint64_t (*)())UIImageFunction;
  return result;
}

Class initUIColor()
{
  Class result;

  if (UIKitLibrary_sOnce_10439 != -1)
    dispatch_once(&UIKitLibrary_sOnce_10439, &__block_literal_global_10440);
  result = objc_getClass("UIColor");
  classUIColor = (uint64_t)result;
  getUIColorClass = (uint64_t (*)())UIColorFunction;
  return result;
}

const __CFString *WFSystemImageNameForGlyphCharacter(uint64_t a1)
{
  int v1;
  const __CFString *result;

  v1 = WFReplacementGlyphCharacterForCharacter(a1);
  result = 0;
  switch(v1)
  {
    case 61440:
      result = CFSTR("app.2.stack.3d");
      break;
    case 61441:
    case 61443:
    case 61445:
    case 61451:
    case 61463:
    case 61469:
    case 61485:
    case 61492:
    case 61516:
    case 61526:
    case 61527:
    case 61580:
    case 61594:
    case 61595:
    case 61596:
    case 61597:
    case 61598:
    case 61599:
    case 61600:
    case 61601:
    case 61602:
    case 61603:
    case 61604:
    case 61605:
    case 61606:
    case 61607:
    case 61608:
    case 61609:
    case 61610:
    case 61611:
    case 61612:
    case 61613:
    case 61614:
    case 61615:
    case 61616:
    case 61617:
    case 61618:
    case 61619:
    case 61620:
    case 61621:
    case 61622:
    case 61623:
    case 61624:
    case 61625:
    case 61626:
    case 61627:
    case 61628:
    case 61629:
    case 61630:
    case 61631:
    case 61632:
    case 61633:
    case 61634:
    case 61635:
    case 61636:
    case 61637:
    case 61638:
    case 61639:
    case 61640:
    case 61641:
    case 61642:
    case 61643:
    case 61644:
    case 61645:
    case 61646:
    case 61647:
    case 61648:
    case 61649:
    case 61650:
    case 61651:
    case 61652:
    case 61653:
    case 61654:
    case 61655:
    case 61656:
    case 61657:
    case 61658:
    case 61659:
    case 61660:
    case 61661:
    case 61662:
    case 61663:
    case 61664:
    case 61665:
    case 61666:
    case 61667:
    case 61668:
    case 61669:
    case 61670:
    case 61671:
    case 61672:
    case 61673:
    case 61674:
    case 61675:
    case 61676:
    case 61677:
    case 61678:
    case 61679:
    case 61680:
    case 61681:
    case 61682:
    case 61683:
    case 61684:
    case 61685:
    case 61686:
    case 61687:
    case 61688:
    case 61689:
    case 61690:
    case 61691:
    case 61692:
    case 61693:
    case 61694:
    case 61695:
    case 61706:
    case 61707:
    case 61708:
    case 61709:
    case 61710:
    case 61711:
    case 61722:
    case 61723:
    case 61724:
    case 61725:
    case 61726:
    case 61727:
    case 61738:
    case 61739:
    case 61740:
    case 61741:
    case 61742:
    case 61743:
    case 61754:
    case 61755:
    case 61756:
    case 61757:
    case 61758:
    case 61759:
    case 61770:
    case 61771:
    case 61772:
    case 61773:
    case 61774:
    case 61775:
    case 61786:
    case 61787:
    case 61788:
    case 61789:
    case 61790:
    case 61791:
    case 61802:
    case 61803:
    case 61804:
    case 61805:
    case 61806:
    case 61807:
    case 61818:
    case 61819:
    case 61820:
    case 61821:
    case 61822:
    case 61823:
    case 61834:
    case 61835:
    case 61836:
    case 61837:
    case 61838:
    case 61839:
    case 61850:
    case 61851:
    case 61852:
    case 61853:
    case 61854:
    case 61855:
    case 61856:
    case 61857:
    case 61858:
    case 61859:
    case 61860:
    case 61861:
    case 61862:
    case 61863:
    case 61864:
    case 61865:
    case 61866:
    case 61867:
    case 61868:
    case 61869:
    case 61870:
    case 61871:
    case 61872:
    case 61873:
    case 61874:
    case 61875:
    case 61876:
    case 61877:
    case 61878:
    case 61879:
    case 61880:
    case 61881:
    case 61882:
    case 61883:
    case 61884:
    case 61885:
    case 61886:
    case 61887:
    case 61888:
    case 61889:
    case 61890:
    case 61891:
    case 61892:
    case 61893:
    case 61894:
    case 61895:
    case 61896:
    case 61897:
    case 61898:
    case 61899:
    case 61900:
    case 61901:
    case 61902:
    case 61903:
    case 61904:
    case 61905:
    case 61906:
    case 61907:
    case 61908:
    case 61909:
    case 61910:
    case 61911:
    case 61912:
    case 61913:
    case 61914:
    case 61915:
    case 61916:
    case 61917:
    case 61918:
    case 61919:
    case 61920:
    case 61921:
    case 61922:
    case 61923:
    case 61924:
    case 61925:
    case 61926:
    case 61927:
    case 61928:
    case 61929:
    case 61930:
    case 61931:
    case 61932:
    case 61933:
    case 61934:
    case 61935:
    case 61936:
    case 61937:
    case 61938:
    case 61939:
    case 61940:
    case 61941:
    case 61942:
    case 61943:
    case 61944:
    case 61945:
    case 61946:
    case 61947:
    case 61948:
    case 61949:
    case 61950:
    case 61951:
    case 61962:
    case 61963:
    case 61964:
    case 61965:
    case 61966:
    case 61967:
    case 61978:
    case 61979:
    case 61980:
    case 61981:
    case 61982:
    case 61983:
    case 61994:
    case 61995:
    case 61996:
    case 61997:
    case 61998:
    case 61999:
    case 62010:
    case 62011:
    case 62012:
    case 62013:
    case 62014:
    case 62015:
    case 62026:
    case 62027:
    case 62028:
    case 62029:
    case 62030:
    case 62031:
    case 62032:
    case 62042:
    case 62043:
    case 62044:
    case 62045:
    case 62046:
    case 62047:
    case 62058:
    case 62059:
    case 62060:
    case 62061:
    case 62062:
    case 62063:
    case 62074:
    case 62075:
    case 62076:
    case 62077:
    case 62078:
    case 62079:
    case 62090:
    case 62091:
    case 62092:
    case 62093:
    case 62094:
    case 62095:
    case 62106:
    case 62107:
    case 62108:
    case 62109:
    case 62110:
    case 62111:
    case 62112:
    case 62113:
    case 62114:
    case 62115:
    case 62116:
    case 62117:
    case 62118:
    case 62119:
    case 62120:
    case 62121:
    case 62122:
    case 62123:
    case 62124:
    case 62125:
    case 62126:
    case 62127:
    case 62128:
    case 62129:
    case 62130:
    case 62131:
    case 62132:
    case 62133:
    case 62134:
    case 62135:
    case 62136:
    case 62137:
    case 62138:
    case 62139:
    case 62140:
    case 62141:
    case 62142:
    case 62143:
    case 62144:
    case 62145:
    case 62146:
    case 62147:
    case 62148:
    case 62149:
    case 62150:
    case 62151:
    case 62152:
    case 62153:
    case 62154:
    case 62155:
    case 62156:
    case 62157:
    case 62158:
    case 62159:
    case 62160:
    case 62161:
    case 62162:
    case 62163:
    case 62164:
    case 62165:
    case 62166:
    case 62167:
    case 62168:
    case 62169:
    case 62170:
    case 62171:
    case 62172:
    case 62173:
    case 62174:
    case 62175:
    case 62176:
    case 62177:
    case 62178:
    case 62179:
    case 62180:
    case 62181:
    case 62182:
    case 62183:
    case 62184:
    case 62185:
    case 62186:
    case 62187:
    case 62188:
    case 62189:
    case 62190:
    case 62191:
    case 62192:
    case 62193:
    case 62194:
    case 62195:
    case 62196:
    case 62197:
    case 62198:
    case 62199:
    case 62200:
    case 62201:
    case 62202:
    case 62203:
    case 62204:
    case 62205:
    case 62206:
    case 62207:
      return result;
    case 61442:
      result = CFSTR("book.closed.fill");
      break;
    case 61444:
      result = CFSTR("map.fill");
      break;
    case 61446:
      result = CFSTR("car.2.fill");
      break;
    case 61447:
      result = CFSTR("bolt.car.fill");
      break;
    case 61448:
      result = CFSTR("bus.doubledecker.fill");
      break;
    case 61449:
      result = CFSTR("tram.fill");
      break;
    case 61450:
      result = CFSTR("tram.tunnel.fill");
      break;
    case 61452:
      result = CFSTR("gauge");
      break;
    case 61453:
      result = CFSTR("speedometer");
      break;
    case 61454:
      result = CFSTR("barometer");
      break;
    case 61455:
      result = CFSTR("network");
      break;
    case 61456:
      result = CFSTR("rectangle.stack.fill");
      break;
    case 61457:
      result = CFSTR("square.stack.fill");
      break;
    case 61458:
      result = CFSTR("square.stack.3d.down.right.fill");
      break;
    case 61459:
      result = CFSTR("photo.fill.on.rectangle.fill");
      break;
    case 61460:
      result = CFSTR("photo.on.rectangle.angled");
      break;
    case 61461:
      result = CFSTR("camera.aperture");
      break;
    case 61462:
      result = CFSTR("paperplane.circle.fill");
      break;
    case 61464:
      result = CFSTR("note");
      break;
    case 61465:
      result = CFSTR("note.text");
      break;
    case 61466:
      result = CFSTR("note.text.badge.plus");
      break;
    case 61467:
      result = CFSTR("arrow.up.message.fill");
      break;
    case 61468:
      result = CFSTR("plus.message.fill");
      break;
    case 61470:
      result = CFSTR("speaker.wave.2.fill");
      break;
    case 61471:
      result = CFSTR("speaker.wave.3.fill");
      break;
    case 61472:
      result = CFSTR("speaker.slash.fill");
      break;
    case 61473:
      result = CFSTR("speaker.fill");
      break;
    case 61474:
      result = CFSTR("tv.and.hifispeaker.fill");
      break;
    case 61475:
      result = CFSTR("earpods");
      break;
    case 61476:
      result = CFSTR("airpods");
      break;
    case 61477:
      result = CFSTR("airpodspro");
      break;
    case 61478:
      result = CFSTR("hifispeaker.fill");
      break;
    case 61479:
      result = CFSTR("headphones.circle.fill");
      break;
    case 61480:
      result = CFSTR("radio.fill");
      break;
    case 61481:
      result = CFSTR("hearingdevice.ear.fill");
      break;
    case 61482:
      result = CFSTR("appletv.fill");
      break;
    case 61483:
      result = CFSTR("homepod.fill");
      break;
    case 61484:
      result = CFSTR("applewatch.radiowaves.left.and.right");
      break;
    case 61486:
      result = CFSTR("iphone");
      break;
    case 61487:
      result = CFSTR("iphone.radiowaves.left.and.right");
      break;
    case 61488:
      result = CFSTR("apps.iphone");
      break;
    case 61489:
      result = CFSTR("ipad");
      break;
    case 61490:
      result = CFSTR("ipad.landscape");
      break;
    case 61491:
      result = CFSTR("ipod");
      break;
    case 61493:
      result = CFSTR("figure.run.circle.fill");
      break;
    case 61494:
      result = CFSTR("figure.run.motion");
      break;
    case 61495:
      result = CFSTR("person.closed.fill");
      break;
    case 61496:
      result = CFSTR("person.open.fill");
      break;
    case 61497:
      result = CFSTR("arrow.triangle.turn.up.right.diamond.fill");
      break;
    case 61498:
      result = CFSTR("arrow.turn.up.right");
      break;
    case 61499:
      result = CFSTR("airplayaudio");
      break;
    case 61500:
      result = CFSTR("airplayvideo");
      break;
    case 61501:
      result = CFSTR("airdrop");
      break;
    case 61502:
      result = CFSTR("music.note.list");
      break;
    case 61503:
      result = CFSTR("music.note");
      break;
    case 61504:
      result = CFSTR("music.square.stack.fill");
      break;
    case 61505:
      result = CFSTR("waveform.path");
      break;
    case 61506:
      result = CFSTR("livephoto.play");
      break;
    case 61507:
      result = CFSTR("livephoto");
      break;
    case 61508:
      result = CFSTR("slowmo");
      break;
    case 61509:
      result = CFSTR("timelapse");
      break;
    case 61510:
      result = CFSTR("calendar.badge.plus");
      break;
    case 61511:
      result = CFSTR("calendar.badge.exclamationmark");
      break;
    case 61512:
      result = CFSTR("timer");
      break;
    case 61513:
      result = CFSTR("timer.square");
      break;
    case 61514:
      result = CFSTR("square.and.pencil");
      break;
    case 61515:
      result = CFSTR("plus.square.fill.on.square.fill");
      break;
    case 61517:
      result = CFSTR("moon.circle.fill");
      break;
    case 61518:
      result = CFSTR("nightshift");
      break;
    case 61519:
      result = CFSTR("truetone");
      break;
    case 61520:
      result = CFSTR("dial.low.fill");
      break;
    case 61521:
      result = CFSTR("dial.high.fill");
      break;
    case 61522:
      result = CFSTR("qrcode.viewfinder");
      break;
    case 61523:
      result = CFSTR("camera.viewfinder");
      break;
    case 61524:
      result = CFSTR("wallet.pass.fill");
      break;
    case 61525:
      result = CFSTR("appearance");
      break;
    case 61528:
      result = CFSTR("nosign");
      break;
    case 61529:
      result = CFSTR("command");
      break;
    case 61530:
      result = CFSTR("command.circle.fill");
      break;
    case 61531:
      result = CFSTR("command.square.fill");
      break;
    case 61532:
      result = CFSTR("brain.filled.head.profile");
      break;
    case 61533:
      result = CFSTR("brain.fill");
      break;
    case 61534:
      result = CFSTR("emoji.face.grinning.inverse");
      break;
    case 61535:
      result = CFSTR("emoji.face.smiling.with.smiling.eyes.inverse");
      break;
    case 61536:
      result = CFSTR("emoji.face.grinning.with.squinting.eyes.inverse");
      break;
    case 61537:
      result = CFSTR("emoji.face.with.tears.of.joy.inverse");
      break;
    case 61538:
      result = CFSTR("emoji.face.rolling.on.the.floor.laughing.inverse");
      break;
    case 61539:
      result = CFSTR("emoji.face.winking.with.stuck.out.tongue.inverse");
      break;
    case 61540:
      result = CFSTR("emoji.face.grimacing.inverse");
      break;
    case 61541:
      result = CFSTR("emoji.face.smiling.with.heart.eyes.inverse");
      break;
    case 61542:
      result = CFSTR("emoji.face.blowing.a.kiss.inverse");
      break;
    case 61543:
      result = CFSTR("emoji.face.smiling.with.hearts.inverse");
      break;
    case 61544:
      result = CFSTR("emoji.face.smiling.with.sunglasses.inverse");
      break;
    case 61545:
      result = CFSTR("emoji.face.with.starry.eyes.inverse");
      break;
    case 61546:
      result = CFSTR("memoji.inverse");
      break;
    case 61547:
      result = CFSTR("emoji.thumbsup.fill");
      break;
    case 61548:
      result = CFSTR("emoji.peace.hand.sign.fill");
      break;
    case 61549:
      result = CFSTR("emoji.love.you.gesture.fill");
      break;
    case 61550:
      result = CFSTR("emoji.closed.fist.fill");
      break;
    case 61551:
      result = CFSTR("facemask.fill");
      break;
    case 61552:
      result = CFSTR("puzzlepiece.extension.fill");
      break;
    case 61553:
      result = CFSTR("takeoutbag.and.cup.and.straw.fill");
      break;
    case 61554:
      result = CFSTR("emoji.bear.face.inverse");
      break;
    case 61555:
      result = CFSTR("emoji.tiger.face.inverse");
      break;
    case 61556:
      result = CFSTR("emoji.monkey.face.inverse");
      break;
    case 61557:
      result = CFSTR("emoji.ram.face.inverse");
      break;
    case 61558:
      result = CFSTR("emoji.rabbit.face.inverse");
      break;
    case 61559:
      result = CFSTR("emoji.snake.inverse");
      break;
    case 61560:
      result = CFSTR("emoji.chicken.face.inverse");
      break;
    case 61561:
      result = CFSTR("emoji.pig.face.inverse");
      break;
    case 61562:
      result = CFSTR("emoji.mouse.face.inverse");
      break;
    case 61563:
      result = CFSTR("emoji.cow.face.inverse");
      break;
    case 61564:
      result = CFSTR("emoji.dragon.face.inverse");
      break;
    case 61565:
      result = CFSTR("emoji.alien.monster.inverse");
      break;
    case 61566:
      result = CFSTR("emoji.robot.face.inverse");
      break;
    case 61567:
      result = CFSTR("emoji.ghost.inverse");
      break;
    case 61568:
      result = CFSTR("emoji.pile.of.poop.inverse");
      break;
    case 61569:
      result = CFSTR("emoji.skull.inverse");
      break;
    case 61570:
      result = CFSTR("folder");
      break;
    case 61571:
      result = CFSTR("folder.fill.badge.gearshape");
      break;
    case 61572:
      result = CFSTR("rectangle.grid.2x2.fill");
      break;
    case 61573:
      result = CFSTR("rectangle.grid.2x2");
      break;
    case 61574:
      result = CFSTR("rectangle.split.2x1.fill");
      break;
    case 61575:
      result = CFSTR("rectangle.split.3x1.fill");
      break;
    case 61576:
      result = CFSTR("rectangle.split.3x1");
      break;
    case 61577:
      result = CFSTR("emoji.heart.fill");
      break;
    case 61578:
      result = CFSTR("emoji.hearts.2.fill");
      break;
    case 61579:
      result = CFSTR("star.leadinghalf.filled");
      break;
    case 61581:
      result = CFSTR("emoji.sparkles");
      break;
    case 61582:
      result = CFSTR("arrow.up.message");
      break;
    case 61583:
      result = CFSTR("quote.bubble");
      break;
    case 61584:
      result = CFSTR("hand.raised.slash.fill");
      break;
    case 61585:
      result = CFSTR("hand.raised.slash");
      break;
    case 61586:
      result = CFSTR("waveform");
      break;
    case 61587:
      result = CFSTR("checklist");
      break;
    case 61588:
      result = CFSTR("character.textbox");
      break;
    case 61589:
      result = CFSTR("xmark.square");
      break;
    case 61590:
      result = CFSTR("eraser.fill");
      break;
    case 61591:
      result = CFSTR("scribble.variable");
      break;
    case 61592:
      result = CFSTR("pencil.and.scribble");
      break;
    case 61593:
      result = CFSTR("clipboard.fill");
      break;
    case 61696:
      result = CFSTR("list.bullet.clipboard.fill");
      break;
    case 61697:
      result = CFSTR("richtext.page.fill");
      break;
    case 61698:
      result = CFSTR("text.page.fill");
      break;
    case 61699:
      result = CFSTR("append.page.fill");
      break;
    case 61700:
      result = CFSTR("apple.terminal.fill");
      break;
    case 61701:
      result = CFSTR("calendar.badge.clock");
      break;
    case 61702:
      result = CFSTR("calendar.badge.minus");
      break;
    case 61703:
      result = CFSTR("calendar.badge.checkmark");
      break;
    case 61704:
      result = CFSTR("quicknote");
      break;
    case 61705:
      result = CFSTR("menucard.fill");
      break;
    case 61712:
      result = CFSTR("magazine.fill");
      break;
    case 61713:
      result = CFSTR("photo.artframe");
      break;
    case 61714:
      result = CFSTR("figure.wave");
      break;
    case 61715:
      result = CFSTR("dumbbell.fill");
      break;
    case 61716:
      result = CFSTR("sportscourt.fill");
      break;
    case 61717:
      result = CFSTR("tennis.racket");
      break;
    case 61718:
      result = CFSTR("skateboard.fill");
      break;
    case 61719:
      result = CFSTR("duffle.bag.fill");
      break;
    case 61720:
      result = CFSTR("apple.classical");
      break;
    case 61721:
      result = CFSTR("bluetooth");
      break;
    case 61728:
      result = CFSTR("flag.2.crossed.fill");
      break;
    case 61729:
      result = CFSTR("flag.checkered.2.crossed");
      break;
    case 61730:
      result = CFSTR("x.squareroot");
      break;
    case 61731:
      result = CFSTR("flashlight.on.fill");
      break;
    case 61732:
      result = CFSTR("flashlight.slash");
      break;
    case 61733:
      result = CFSTR("paintpalette.fill");
      break;
    case 61734:
      result = CFSTR("mail.stack.fill");
      break;
    case 61735:
      result = CFSTR("mail.fill");
      break;
    case 61736:
      result = CFSTR("gearshape.fill");
      break;
    case 61737:
      result = CFSTR("gearshape.2.fill");
      break;
    case 61744:
      result = CFSTR("signature");
      break;
    case 61745:
      result = CFSTR("wallet.fill");
      break;
    case 61746:
      result = CFSTR("metronome.fill");
      break;
    case 61747:
      result = CFSTR("numbers");
      break;
    case 61748:
      result = CFSTR("pianokeys.inverse");
      break;
    case 61749:
      result = CFSTR("paintbrush.pointed.fill");
      break;
    case 61750:
      result = CFSTR("applescript.fill");
      break;
    case 61751:
      result = CFSTR("scroll.fill");
      break;
    case 61752:
      result = CFSTR("scanner.fill");
      break;
    case 61753:
      result = CFSTR("handbag.fill");
      break;
    case 61760:
      result = CFSTR("suitcase.rolling.fill");
      break;
    case 61761:
      result = CFSTR("homekit");
      break;
    case 61762:
      result = CFSTR("building.columns.fill");
      break;
    case 61763:
      result = CFSTR("lamp.desk.fill");
      break;
    case 61764:
      result = CFSTR("lamp.ceiling.fill");
      break;
    case 61765:
      result = CFSTR("fan.floor.fill");
      break;
    case 61766:
      result = CFSTR("fan.fill");
      break;
    case 61767:
      result = CFSTR("fan.ceiling.fill");
      break;
    case 61768:
      result = CFSTR("lamp.floor.fill");
      break;
    case 61769:
      result = CFSTR("powerplug.fill");
      break;
    case 61776:
      result = CFSTR("balloon.fill");
      break;
    case 61777:
      result = CFSTR("sailboat.regatta.fill");
      break;
    case 61778:
      result = CFSTR("fireworks");
      break;
    case 61779:
      result = CFSTR("party.popper.fill");
      break;
    case 61780:
      result = CFSTR("popcorn.fill");
      break;
    case 61781:
      result = CFSTR("frying.pan.fill");
      break;
    case 61782:
      result = CFSTR("sofa.fill");
      break;
    case 61783:
      result = CFSTR("torus");
      break;
    case 61784:
      result = CFSTR("macintosh.classic");
      break;
    case 61785:
      result = CFSTR("finder");
      break;
    case 61792:
      result = CFSTR("watch.analog");
      break;
    case 61793:
      result = CFSTR("applewatch.side.right");
      break;
    case 61794:
      result = CFSTR("mediastick");
      break;
    case 61795:
      result = CFSTR("tv");
      break;
    case 61796:
      result = CFSTR("shazam.logo.fill");
      break;
    case 61797:
      result = CFSTR("guitars.fill");
      break;
    case 61798:
      result = CFSTR("moped.fill");
      break;
    case 61799:
      result = CFSTR("scooter");
      break;
    case 61800:
      result = CFSTR("stroller.fill");
      break;
    case 61801:
      result = CFSTR("comb.fill");
      break;
    case 61808:
      result = CFSTR("horn.fill");
      break;
    case 61809:
      result = CFSTR("tortoise.fill");
      break;
    case 61810:
      result = CFSTR("hare.fill");
      break;
    case 61811:
      result = CFSTR("dog.fill");
      break;
    case 61812:
      result = CFSTR("cat.fill");
      break;
    case 61813:
      result = CFSTR("lizard.fill");
      break;
    case 61814:
      result = CFSTR("bird.fill");
      break;
    case 61815:
      result = CFSTR("ant.fill");
      break;
    case 61816:
      result = CFSTR("ladybug.fill");
      break;
    case 61817:
      result = CFSTR("function");
      break;
    case 61824:
      result = CFSTR("percent");
      break;
    case 61825:
      result = CFSTR("teddybear.fill");
      break;
    case 61826:
      result = CFSTR("leaf.fill");
      break;
    case 61827:
      result = CFSTR("textformat.characters");
      break;
    case 61828:
      result = CFSTR("crown.fill");
      break;
    case 61829:
      result = CFSTR("movieclapper.fill");
      break;
    case 61830:
      result = CFSTR("textformat");
      break;
    case 61831:
      result = CFSTR("film.stack.fill");
      break;
    case 61832:
      result = CFSTR("textformat.size");
      break;
    case 61833:
      result = CFSTR("textformat.superscript");
      break;
    case 61840:
      result = CFSTR("textformat.subscript");
      break;
    case 61841:
      result = CFSTR("sum");
      break;
    case 61842:
      result = CFSTR("compass.drawing");
      break;
    case 61843:
      result = CFSTR("angle");
      break;
    case 61844:
      result = CFSTR("bold.italic.underline");
      break;
    case 61845:
      result = CFSTR("characters.lowercase");
      break;
    case 61846:
      result = CFSTR("characters.uppercase");
      break;
    case 61847:
      result = CFSTR("vision.pro");
      break;
    case 61848:
      result = CFSTR("battery.25percent");
      break;
    case 61849:
      result = CFSTR("battery.100percent.bolt");
      break;
    case 61952:
      result = CFSTR("xmark");
      break;
    case 61953:
      result = CFSTR("arrow.left");
      break;
    case 61954:
      result = CFSTR("arrow.right");
      break;
    case 61955:
      result = CFSTR("arrow.up");
      break;
    case 61956:
      result = CFSTR("arrow.down");
      break;
    case 61957:
      result = CFSTR("medical.thermometer.fill");
      break;
    case 61958:
      result = CFSTR("calendar.and.person");
      break;
    case 61959:
      result = CFSTR("calendar.and.chart.bar");
      break;
    case 61960:
      result = CFSTR("person.crop.badge.magnifyingglass.fill");
      break;
    case 61961:
      result = CFSTR("apple.journal");
      break;
    case 61968:
      result = CFSTR("figure.run.treadmill");
      break;
    case 61969:
      result = CFSTR("figure.walk.treadmill");
      break;
    case 61970:
    case 62103:
      result = CFSTR("figure.ice.skating");
      break;
    case 61971:
      result = CFSTR("degreesign.celsius");
      break;
    case 61972:
      result = CFSTR("degreesign.farenheit");
      break;
    case 61973:
      result = CFSTR("fire.extinguisher.fill");
      break;
    case 61974:
      result = CFSTR("wallet.bifold.fill");
      break;
    case 61975:
      result = CFSTR("house.badge.wifi.fill");
      break;
    case 61976:
      result = CFSTR("key.2.on.ring.fill");
      break;
    case 61977:
      result = CFSTR("wheelchair");
      break;
    case 61984:
      result = CFSTR("helmet.fill");
      break;
    case 61985:
      result = CFSTR("coat.fill");
      break;
    case 61986:
      result = CFSTR("jacket.fill");
      break;
    case 61987:
      result = CFSTR("heart.text.clipboard.fill");
      break;
    case 61988:
      result = CFSTR("humidity.fill");
      break;
    case 61989:
      result = CFSTR("sparkles");
      break;
    case 61990:
      result = CFSTR("moon.haze.fill");
      break;
    case 61991:
      result = CFSTR("moon.stars.fill");
      break;
    case 61992:
      result = CFSTR("cloud.hail.fill");
      break;
    case 61993:
      result = CFSTR("cloud.sleet.fill");
      break;
    case 62000:
      result = CFSTR("cloud.bolt.fill");
      break;
    case 62001:
      result = CFSTR("cloud.bolt.rain.fill");
      break;
    case 62002:
      result = CFSTR("cloud.sun.fill");
      break;
    case 62003:
      result = CFSTR("cloud.sun.rain.fill");
      break;
    case 62004:
      result = CFSTR("cloud.sun.bolt.fill");
      break;
    case 62005:
      result = CFSTR("cloud.moon.fill");
      break;
    case 62006:
      result = CFSTR("cloud.moon.rain.fill");
      break;
    case 62007:
      result = CFSTR("cloud.moon.bolt.fill");
      break;
    case 62008:
      result = CFSTR("wind");
      break;
    case 62009:
      result = CFSTR("wind.snow");
      break;
    case 62016:
      result = CFSTR("tornado");
      break;
    case 62017:
      result = CFSTR("thermometer.sun.fill");
      break;
    case 62018:
      result = CFSTR("thermometer.snowflake");
      break;
    case 62019:
      result = CFSTR("sunset.fill");
      break;
    case 62020:
      result = CFSTR("sunrise.fill");
      break;
    case 62021:
      result = CFSTR("airplane.departure");
      break;
    case 62022:
      result = CFSTR("airplane.arrival");
      break;
    case 62023:
      result = CFSTR("cablecar.fill");
      break;
    case 62024:
      result = CFSTR("lightrail.fill");
      break;
    case 62025:
      result = CFSTR("ferry.fill");
      break;
    case 62033:
      result = CFSTR("truck.box.fill");
      break;
    case 62034:
      result = CFSTR("ev.charger.fill");
      break;
    case 62035:
      result = CFSTR("road.lanes");
      break;
    case 62036:
      result = CFSTR("flag.pattern.checkered");
      break;
    case 62037:
      result = CFSTR("arcade.stick.console.fill");
      break;
    case 62038:
      result = CFSTR("gearshift.layout.sixspeed");
      break;
    case 62039:
      result = CFSTR("formfitting.gamecontroller.fill");
      break;
    case 62040:
      result = CFSTR("joystickcontroller.fill");
      break;
    case 62041:
      result = CFSTR("personalhotspot");
      break;
    case 62048:
      result = CFSTR("bolt.horizontal.fill");
      break;
    case 62049:
      result = CFSTR("satellite.fill");
      break;
    case 62050:
      result = CFSTR("usb");
      break;
    case 62051:
      result = CFSTR("bonjour");
      break;
    case 62052:
      result = CFSTR("port.hdmi");
      break;
    case 62053:
      result = CFSTR("port.thunderbolt");
      break;
    case 62054:
      result = CFSTR("port.usb.c");
      break;
    case 62055:
      result = CFSTR("port.usb.a");
      break;
    case 62056:
      result = CFSTR("port.usb.b");
      break;
    case 62057:
      result = CFSTR("port.ethernet");
      break;
    case 62064:
      result = CFSTR("port.vga");
      break;
    case 62065:
      result = CFSTR("thunderbolt");
      break;
    case 62066:
      result = CFSTR("firewire");
      break;
    case 62067:
      result = CFSTR("ethernet");
      break;
    case 62068:
      result = CFSTR("antenna.radiowaves.left.and.right");
      break;
    case 62069:
      result = CFSTR("oven.fill");
      break;
    case 62070:
      result = CFSTR("microwave.fill");
      break;
    case 62071:
      result = CFSTR("refrigerator.fill");
      break;
    case 62072:
      result = CFSTR("toilet.fill");
      break;
    case 62073:
      result = CFSTR("lightbulb.led.fill");
      break;
    case 62080:
      result = CFSTR("lightbulb.led.wide.fill");
      break;
    case 62081:
      result = CFSTR("figure.archery");
      break;
    case 62082:
      result = CFSTR("figure.basketball");
      break;
    case 62083:
      result = CFSTR("figure.climbing");
      break;
    case 62084:
      result = CFSTR("figure.cooldown");
      break;
    case 62085:
      result = CFSTR("figure.core.training");
      break;
    case 62086:
      result = CFSTR("figure.curling");
      break;
    case 62087:
      result = CFSTR("figure.elliptical");
      break;
    case 62088:
      result = CFSTR("figure.fencing");
      break;
    case 62089:
      result = CFSTR("figure.gymnastics");
      break;
    case 62096:
      result = CFSTR("figure.highintensity.intervaltraining");
      break;
    case 62097:
      result = CFSTR("figure.hockey");
      break;
    case 62098:
      result = CFSTR("figure.ice.hockey");
      break;
    case 62099:
      result = CFSTR("figure.indoor.cycle");
      break;
    case 62100:
      result = CFSTR("figure.outdoor.cycle");
      break;
    case 62101:
      result = CFSTR("figure.outdoor.rowing");
      break;
    case 62102:
      result = CFSTR("figure.skateboarding");
      break;
    case 62104:
      result = CFSTR("figure.stair.stepper");
      break;
    case 62105:
      result = CFSTR("medal.fill");
      break;
    case 62208:
      result = CFSTR("fossil.shell.fill");
      break;
    case 62209:
      result = CFSTR("move.3d");
      break;
    case 62210:
      result = CFSTR("hat.cap.fill");
      break;
    case 62211:
      result = CFSTR("book.and.wrench.fill");
      break;
    case 62212:
      result = CFSTR("key.radiowaves.forward.fill");
      break;
    default:
      switch(v1)
      {
        case 59392:
          result = CFSTR("ellipsis");
          break;
        case 59395:
          result = CFSTR("dollarsign");
          break;
        case 59402:
          result = CFSTR("video.fill");
          break;
        case 59403:
          result = CFSTR("message.and.message.fill");
          break;
        case 59405:
          result = CFSTR("square.grid.4x3.fill");
          break;
        case 59412:
          result = CFSTR("globe");
          break;
        case 59414:
          result = CFSTR("message.fill");
          break;
        case 59436:
          result = CFSTR("laptopcomputer");
          break;
        case 59437:
          result = CFSTR("figure");
          break;
        case 59445:
          result = CFSTR("list.bullet");
          break;
        case 59446:
          result = CFSTR("keyboard.fill");
          break;
        case 59448:
          result = CFSTR("sterlingsign");
          break;
        case 59452:
          result = CFSTR("car.fill");
          break;
        case 59456:
          result = CFSTR("emoji.american.football.inverse");
          break;
        case 59459:
          result = CFSTR("icloud.fill");
          break;
        case 59465:
          result = CFSTR("book.fill");
          break;
        case 59478:
          result = CFSTR("tree.fill");
          break;
        case 59489:
          result = CFSTR("battery.100");
          break;
        case 59497:
          result = CFSTR("dot.radiowaves.up.forward");
          break;
        case 59508:
          result = CFSTR("play.fill");
          break;
        case 59511:
          result = CFSTR("wand.and.stars.inverse");
          break;
        case 59512:
          result = CFSTR("eurosign");
          break;
        case 59514:
          result = CFSTR("yensign");
          break;
        case 59515:
          result = CFSTR("bitcoinsign");
          break;
        case 59516:
          result = CFSTR("circle.dotted");
          break;
        case 59519:
          result = CFSTR("cylinder.split.1x2.fill");
          break;
        case 59648:
          result = CFSTR("airplane");
          break;
        case 59649:
          result = CFSTR("alarm.fill");
          break;
        case 59650:
          result = CFSTR("exclamationmark.triangle.fill");
          break;
        case 59651:
          result = CFSTR("emoji.alien.inverse");
          break;
        case 59652:
          result = CFSTR("cross.fill");
          break;
        case 59653:
          result = CFSTR("archivebox.fill");
          break;
        case 59654:
          result = CFSTR("arrowshape.turn.up.backward.fill");
          break;
        case 59655:
          result = CFSTR("arrowshape.turn.up.forward.fill");
          break;
        case 59656:
          result = CFSTR("staroflife.fill");
          break;
        case 59657:
          result = CFSTR("atom");
          break;
        case 59660:
          result = CFSTR("bandage.fill");
          break;
        case 59661:
          result = CFSTR("barcode");
          break;
        case 59662:
          result = CFSTR("chart.bar.fill");
          break;
        case 59663:
          result = CFSTR("emoji.baseball.inverse");
          break;
        case 59664:
          result = CFSTR("emoji.basketball.inverse");
          break;
        case 59665:
          result = CFSTR("bathtub.fill");
          break;
        case 59666:
          result = CFSTR("bed.double.fill");
          break;
        case 59667:
          result = CFSTR("bell.fill");
          break;
        case 59668:
          result = CFSTR("bicycle");
          break;
        case 59669:
          result = CFSTR("binoculars.fill");
          break;
        case 59670:
          result = CFSTR("bookmark.fill");
          break;
        case 59671:
          result = CFSTR("books.vertical.fill");
          break;
        case 59673:
          result = CFSTR("square.fill");
          break;
        case 59674:
          result = CFSTR("square");
          break;
        case 59675:
          result = CFSTR("hand.point.up.braille.fill");
          break;
        case 59676:
          result = CFSTR("briefcase.fill");
          break;
        case 59677:
          result = CFSTR("building.2.fill");
          break;
        case 59678:
          result = CFSTR("bus.fill");
          break;
        case 59679:
          result = CFSTR("birthday.cake.fill");
          break;
        case 59680:
          result = CFSTR("calculator.fill");
          break;
        case 59681:
          result = CFSTR("calendar");
          break;
        case 59682:
          result = CFSTR("camera.fill");
          break;
        case 59683:
          result = CFSTR("carrot.fill");
          break;
        case 59684:
          result = CFSTR("emoji.cat.face.inverse");
          break;
        case 59685:
          result = CFSTR("link");
          break;
        case 59690:
          result = CFSTR("checkmark");
          break;
        case 59692:
          result = CFSTR("chevron.down");
          break;
        case 59693:
          result = CFSTR("square.and.arrow.down.fill");
          break;
        case 59695:
          result = CFSTR("forward.fill");
          break;
        case 59696:
          result = CFSTR("chevron.backward");
          break;
        case 59697:
          result = CFSTR("info");
          break;
        case 59699:
          result = CFSTR("play.circle.fill");
          break;
        case 59700:
          result = CFSTR("plus");
          break;
        case 59702:
          result = CFSTR("power");
          break;
        case 59703:
          result = CFSTR("questionmark");
          break;
        case 59704:
          result = CFSTR("backward.fill");
          break;
        case 59705:
          result = CFSTR("chevron.forward");
          break;
        case 59706:
          result = CFSTR("stop.fill");
          break;
        case 59707:
          result = CFSTR("chevron.up");
          break;
        case 59708:
          result = CFSTR("square.and.arrow.up");
          break;
        case 59709:
          result = CFSTR("xmark.circle.fill");
          break;
        case 59711:
          result = CFSTR("doc.on.clipboard.fill");
          break;
        case 59712:
          result = CFSTR("clock.fill");
          break;
        case 59713:
          result = CFSTR("hanger");
          break;
        case 59714:
          result = CFSTR("cloud.fill");
          break;
        case 59715:
          result = CFSTR("cloud.rain.fill");
          break;
        case 59716:
          result = CFSTR("eyedropper.halffull");
          break;
        case 59717:
          result = CFSTR("safari.fill");
          break;
        case 59718:
          result = CFSTR("point.3.filled.connected.trianglepath.dotted");
          break;
        case 59719:
          result = CFSTR("creditcard.fill");
          break;
        case 59720:
          result = CFSTR("crop");
          break;
        case 59721:
          result = CFSTR("cube.fill");
          break;
        case 59722:
          result = CFSTR("server.rack");
          break;
        case 59723:
          result = CFSTR("dice.fill");
          break;
        case 59724:
          result = CFSTR("signpost.right.and.left.fill");
          break;
        case 59725:
          result = CFSTR("document.fill");
          break;
        case 59726:
          result = CFSTR("doc.text.fill");
          break;
        case 59727:
          result = CFSTR("doc.text");
          break;
        case 59728:
          result = CFSTR("emoji.dog.face.inverse");
          break;
        case 59729:
          result = CFSTR("quote.bubble.fill");
          break;
        case 59730:
          result = CFSTR("theatermasks.fill");
          break;
        case 59732:
          result = CFSTR("dot.radiowaves.forward");
          break;
        case 59733:
          result = CFSTR("film.fill");
          break;
        case 59734:
          result = CFSTR("flame.fill");
          break;
        case 59735:
          result = CFSTR("fish.fill");
          break;
        case 59736:
          result = CFSTR("flag.fill");
          break;
        case 59737:
          result = CFSTR("folder.fill");
          break;
        case 59738:
          result = CFSTR("shoeprints.fill");
          break;
        case 59739:
          result = CFSTR("square.grid.2x2.fill");
          break;
        case 59740:
          result = CFSTR("apple.slice.fill");
          break;
        case 59741:
          result = CFSTR("fuelpump.fill");
          break;
        case 59742:
          result = CFSTR("gamecontroller.fill");
          break;
        case 59743:
          result = CFSTR("gear");
          break;
        case 59744:
          result = CFSTR("gift.fill");
          break;
        case 59745:
          result = CFSTR("eyeglasses");
          break;
        case 59746:
          result = CFSTR("graduationcap.fill");
          break;
        case 59747:
          result = CFSTR("storefront.fill");
          break;
        case 59748:
          result = CFSTR("hammer.fill");
          break;
        case 59750:
          result = CFSTR("bag.fill");
          break;
        case 59751:
          result = CFSTR("hand.raised.fill");
          break;
        case 59752:
          result = CFSTR("internaldrive.fill");
          break;
        case 59753:
          result = CFSTR("headphones");
          break;
        case 59754:
          result = CFSTR("heart.fill");
          break;
        case 59755:
          result = CFSTR("house.fill");
          break;
        case 59756:
          result = CFSTR("emoji.horse.face.inverse");
          break;
        case 59757:
          result = CFSTR("hourglass");
          break;
        case 59758:
          result = CFSTR("infinity");
          break;
        case 59759:
          result = CFSTR("inhaler.fill");
          break;
        case 59760:
          result = CFSTR("key.fill");
          break;
        case 59761:
          result = CFSTR("washer.fill");
          break;
        case 59762:
          result = CFSTR("lifepreserver.fill");
          break;
        case 59763:
          result = CFSTR("lightbulb.fill");
          break;
        case 59764:
          result = CFSTR("bolt.fill");
          break;
        case 59767:
          result = CFSTR("rays");
          break;
        case 59768:
          result = CFSTR("location.fill");
          break;
        case 59769:
          result = CFSTR("mappin.and.ellipse");
          break;
        case 59770:
          result = CFSTR("lock.fill");
          break;
        case 59771:
          result = CFSTR("wand.and.rays.inverse");
          break;
        case 59772:
          result = CFSTR("magnifyingglass");
          break;
        case 59773:
          result = CFSTR("envelope.fill");
          break;
        case 59774:
          result = CFSTR("envelope.open.fill");
          break;
        case 59775:
          result = CFSTR("figure.stand");
          break;
        case 59776:
          result = CFSTR("wineglass.fill");
          break;
        case 59778:
          result = CFSTR("cross.vial.fill");
          break;
        case 59779:
          result = CFSTR("text.bubble.fill");
          break;
        case 59780:
          result = CFSTR("mic.fill");
          break;
        case 59782:
          result = CFSTR("moon.fill");
          break;
        case 59783:
          result = CFSTR("motorcycle.fill");
          break;
        case 59784:
          result = CFSTR("photo.fill");
          break;
        case 59785:
          result = CFSTR("mountain.2.fill");
          break;
        case 59786:
          result = CFSTR("arrow.up.and.down.and.arrow.left.and.right");
          break;
        case 59788:
          result = CFSTR("ticket.fill");
          break;
        case 59789:
          result = CFSTR("cup.and.saucer.fill");
          break;
        case 59790:
          result = CFSTR("music");
          break;
        case 59791:
          result = CFSTR("doc.richtext");
          break;
        case 59792:
          result = CFSTR("stove.fill");
          break;
        case 59793:
          result = CFSTR("paintbrush.fill");
          break;
        case 59794:
          result = CFSTR("paperclip");
          break;
        case 59795:
          result = CFSTR("p.square.fill");
          break;
        case 59796:
          result = CFSTR("pawprint.fill");
          break;
        case 59797:
          result = CFSTR("peacesign");
          break;
        case 59798:
          result = CFSTR("pencil");
          break;
        case 59799:
          result = CFSTR("person.3.fill");
          break;
        case 59800:
          result = CFSTR("person.2.fill");
          break;
        case 59801:
          result = CFSTR("person.fill");
          break;
        case 59803:
          result = CFSTR("figure.dance");
          break;
        case 59804:
          result = CFSTR("person.raised.hand");
          break;
        case 59805:
          result = CFSTR("figure.hiking");
          break;
        case 59806:
          result = CFSTR("figure.roll");
          break;
        case 59807:
          result = CFSTR("figure.strengthtraining.traditional");
          break;
        case 59808:
          result = CFSTR("figure.run");
          break;
        case 59809:
          result = CFSTR("figure.skiing.crosscountry");
          break;
        case 59810:
          result = CFSTR("figure.snowboarding");
          break;
        case 59811:
          result = CFSTR("figure.pool.swim");
          break;
        case 59812:
          result = CFSTR("figure.walk");
          break;
        case 59814:
          result = CFSTR("phone.fill");
          break;
        case 59815:
          result = CFSTR("pills.fill");
          break;
        case 59816:
          result = CFSTR("podcasts");
          break;
        case 59817:
          result = CFSTR("printer.fill");
          break;
        case 59818:
          result = CFSTR("puzzlepiece.fill");
          break;
        case 59819:
          result = CFSTR("qrcode");
          break;
        case 59820:
          result = CFSTR("arrow.3.trianglepath");
          break;
        case 59821:
          result = CFSTR("arrow.2.squarepath");
          break;
        case 59822:
          result = CFSTR("rocket.fill");
          break;
        case 59823:
          result = CFSTR("sailboat.fill");
          break;
        case 59824:
          result = CFSTR("scissors");
          break;
        case 59825:
          result = CFSTR("screwdriver.fill");
          break;
        case 59826:
          result = CFSTR("externaldrive.connected.to.line.below.fill");
          break;
        case 59827:
          result = CFSTR("tshirt.fill");
          break;
        case 59828:
          result = CFSTR("cart.fill");
          break;
        case 59829:
          result = CFSTR("shower.fill");
          break;
        case 59830:
          result = CFSTR("arrow.down.right.and.arrow.up.left");
          break;
        case 59832:
          result = CFSTR("shuffle");
          break;
        case 59833:
          result = CFSTR("slider.horizontal.3");
          break;
        case 59834:
          result = CFSTR("face.smiling.inverse");
          break;
        case 59835:
          result = CFSTR("snowflake");
          break;
        case 59836:
          result = CFSTR("paperplane.fill");
          break;
        case 59837:
          result = CFSTR("emoji.soccer.ball.inverse");
          break;
        case 59839:
          result = CFSTR("speaker.wave.1.fill");
          break;
        case 59840:
          result = CFSTR("stairs");
          break;
        case 59841:
          result = CFSTR("star.fill");
          break;
        case 59843:
          result = CFSTR("stethoscope");
          break;
        case 59844:
          result = CFSTR("stopwatch.fill");
          break;
        case 59845:
          result = CFSTR("sun.max.fill");
          break;
        case 59846:
          result = CFSTR("arrow.triangle.2.circlepath");
          break;
        case 59847:
          result = CFSTR("syringe.fill");
          break;
        case 59848:
          result = CFSTR("tag.fill");
          break;
        case 59849:
          result = CFSTR("circle.circle");
          break;
        case 59851:
          result = CFSTR("tv.fill");
          break;
        case 59852:
          result = CFSTR("tennisball.fill");
          break;
        case 59853:
          result = CFSTR("t.square.fill");
          break;
        case 59854:
          result = CFSTR("thermometer.medium");
          break;
        case 59856:
          result = CFSTR("camera.filters");
          break;
        case 59857:
          result = CFSTR("hand.thumbsup.fill");
          break;
        case 59859:
          result = CFSTR("trash.fill");
          break;
        case 59860:
          result = CFSTR("trophy.fill");
          break;
        case 59861:
          result = CFSTR("umbrella.fill");
          break;
        case 59862:
          result = CFSTR("lock.open.fill");
          break;
        case 59863:
          result = CFSTR("fork.knife");
          break;
        case 59864:
          result = CFSTR("play.rectangle.fill");
          break;
        case 59865:
          result = CFSTR("applewatch");
          break;
        case 59866:
          result = CFSTR("drop.fill");
          break;
        case 59867:
          result = CFSTR("wifi");
          break;
        case 59870:
          result = CFSTR("wrench.fill");
          break;
        default:
          return result;
      }
      break;
  }
  return result;
}

uint64_t WFReplacementGlyphCharacterForCharacter(uint64_t a1)
{
  uint64_t result;

  if ((int)a1 <= 59854)
  {
    result = 59848;
    switch((int)a1)
    {
      case 59393:
        return 59654;
      case 59394:
        return 59788;
      case 59395:
      case 59402:
      case 59403:
      case 59405:
      case 59408:
      case 59412:
      case 59414:
      case 59421:
      case 59433:
      case 59436:
      case 59437:
      case 59439:
      case 59445:
      case 59446:
      case 59448:
      case 59451:
      case 59452:
      case 59453:
      case 59454:
      case 59455:
      case 59456:
      case 59459:
      case 59465:
      case 59468:
      case 59480:
      case 59489:
      case 59496:
      case 59497:
      case 59503:
      case 59504:
      case 59505:
      case 59506:
      case 59508:
      case 59511:
      case 59512:
      case 59514:
      case 59515:
      case 59516:
      case 59519:
      case 59520:
      case 59542:
      case 59583:
      case 59584:
      case 59585:
      case 59586:
      case 59587:
      case 59588:
      case 59589:
      case 59590:
      case 59591:
      case 59592:
      case 59593:
      case 59594:
      case 59595:
      case 59596:
      case 59597:
      case 59598:
      case 59599:
      case 59600:
      case 59601:
      case 59602:
      case 59603:
      case 59604:
      case 59605:
      case 59606:
      case 59607:
      case 59608:
      case 59609:
      case 59610:
      case 59611:
      case 59612:
      case 59613:
      case 59614:
      case 59615:
      case 59616:
      case 59617:
      case 59618:
      case 59619:
      case 59620:
      case 59621:
      case 59622:
      case 59623:
      case 59624:
      case 59625:
      case 59626:
      case 59627:
      case 59628:
      case 59629:
      case 59630:
      case 59631:
      case 59632:
      case 59633:
      case 59634:
      case 59635:
      case 59636:
      case 59637:
      case 59638:
      case 59639:
      case 59640:
      case 59641:
      case 59642:
      case 59643:
      case 59644:
      case 59645:
      case 59646:
      case 59647:
      case 59648:
      case 59649:
      case 59650:
      case 59651:
      case 59652:
      case 59653:
      case 59654:
      case 59655:
      case 59656:
      case 59657:
      case 59658:
      case 59659:
      case 59660:
      case 59661:
      case 59662:
      case 59663:
      case 59664:
      case 59665:
      case 59666:
      case 59667:
      case 59668:
      case 59669:
      case 59670:
      case 59671:
      case 59672:
      case 59673:
      case 59675:
      case 59676:
      case 59677:
      case 59678:
      case 59679:
      case 59680:
      case 59681:
      case 59682:
      case 59683:
      case 59684:
      case 59685:
      case 59686:
      case 59687:
      case 59688:
      case 59690:
      case 59691:
      case 59692:
      case 59693:
      case 59695:
      case 59696:
      case 59697:
      case 59698:
      case 59700:
      case 59702:
      case 59703:
      case 59704:
      case 59705:
      case 59706:
      case 59707:
      case 59708:
      case 59711:
      case 59712:
      case 59713:
      case 59714:
      case 59715:
      case 59716:
      case 59717:
      case 59718:
      case 59719:
      case 59720:
      case 59721:
      case 59722:
      case 59723:
      case 59724:
      case 59725:
      case 59726:
      case 59728:
      case 59729:
      case 59730:
      case 59731:
      case 59732:
      case 59733:
      case 59734:
      case 59735:
      case 59736:
      case 59737:
      case 59738:
      case 59739:
      case 59740:
      case 59741:
      case 59742:
      case 59743:
      case 59744:
      case 59745:
      case 59746:
      case 59747:
      case 59748:
      case 59749:
      case 59750:
      case 59751:
      case 59752:
      case 59753:
      case 59754:
      case 59755:
      case 59756:
      case 59757:
      case 59758:
      case 59759:
      case 59760:
      case 59761:
      case 59762:
      case 59763:
      case 59764:
      case 59767:
      case 59768:
      case 59769:
      case 59770:
      case 59771:
      case 59772:
      case 59773:
      case 59774:
      case 59775:
      case 59776:
      case 59777:
      case 59778:
      case 59779:
      case 59780:
      case 59781:
      case 59782:
      case 59783:
      case 59784:
      case 59785:
      case 59786:
      case 59788:
      case 59789:
      case 59790:
        return a1;
      case 59396:
        return 59762;
      case 59397:
        return 59846;
      case 59398:
        return 59857;
      case 59399:
        return 59755;
      case 59400:
        return 59776;
      case 59401:
        return 59682;
      case 59404:
        return 59718;
      case 59406:
        return 59648;
      case 59407:
        return 59744;
      case 59409:
        return 59773;
      case 59410:
        return 59764;
      case 59411:
        return 59850;
      case 59413:
        return 59799;
      case 59415:
        return 59712;
      case 59416:
        return 59768;
      case 59417:
        return 59841;
      case 59418:
        return 59782;
      case 59419:
        return 59671;
      case 59420:
        return 59752;
      case 59422:
        return 59709;
      case 59423:
        return result;
      case 59424:
        return 59824;
      case 59425:
        return 59652;
      case 59426:
        return 59667;
      case 59427:
        return 59655;
      case 59428:
        return 59738;
      case 59429:
        return 59796;
      case 59430:
        return 59821;
      case 59431:
        return 59802;
      case 59432:
        return 59677;
      case 59434:
      case 59549:
      case 59550:
        return 59676;
      case 59435:
        return 59688;
      case 59438:
        return 59733;
      case 59440:
        return 59650;
      case 59441:
        goto LABEL_52;
      case 59442:
        return 59859;
      case 59443:
        return 59734;
      case 59444:
      case 59543:
        return 59772;
      case 59447:
      case 59710:
        return 59514;
      case 59449:
      case 59694:
        return 59512;
      case 59450:
        return 59749;
      case 59457:
        return 59757;
      case 59458:
        return 59736;
      case 59460:
        return 59745;
      case 59461:
        return 59815;
      case 59462:
      case 59581:
        return 59719;
      case 59463:
        return 59758;
      case 59464:
      case 59689:
        return 59515;
      case 59466:
        return 59860;
      case 59467:
        return 59845;
      case 59469:
      case 59536:
        return 59769;
      case 59470:
      case 59531:
      case 59727:
      case 59765:
      case 59766:
        return 59726;
      case 59471:
        return 59751;
      case 59472:
        return 59753;
      case 59473:
        return 59748;
      case 59474:
        return 59737;
      case 59475:
      case 59532:
      case 59575:
        return 59798;
      case 59476:
        return 59789;
      case 59477:
        return 59863;
      case 59478:
        return 59731;
      case 59479:
      case 59559:
      case 59560:
      case 59579:
        return 59790;
      case 59481:
        return 59754;
      case 59482:
        return 59861;
      case 59483:
        return 59811;
      case 59484:
        return 59869;
      case 59485:
        return 59760;
      case 59486:
        return 59781;
      case 59487:
        return 59727;
      case 59488:
        return 59866;
      case 59490:
        return 59763;
      case 59491:
        return 59835;
      case 59492:
        return 59770;
      case 59493:
        return 59862;
      case 59494:
        return 59446;
      case 59495:
      case 59562:
      case 59563:
        return 59742;
      case 59498:
        return 59814;
      case 59499:
        return 59743;
      case 59500:
        return 59828;
      case 59501:
        return 59780;
      case 59502:
        return 61473;
      case 59507:
        return 59832;
      case 59509:
      case 59674:
        return 59673;
      case 59510:
        return 59674;
      case 59513:
        return 59395;
      case 59517:
        return 59746;
      case 59518:
        return 59820;
      case 59521:
      case 59522:
      case 59528:
      case 59530:
        return 59793;
      case 59523:
      case 59524:
      case 59537:
      case 59538:
      case 59539:
      case 59540:
      case 59541:
      case 59561:
        return 59436;
      case 59525:
        return 59721;
      case 59526:
      case 59547:
        return 59412;
      case 59527:
        return 59670;
      case 59529:
      case 59546:
      case 59555:
      case 59556:
      case 59564:
      case 59565:
      case 59580:
        return 59685;
      case 59533:
      case 59534:
      case 59544:
      case 59545:
      case 59567:
      case 59568:
      case 59574:
        return 59800;
      case 59535:
      case 59548:
      case 59553:
      case 59554:
        return 59784;
      case 59551:
      case 59552:
        return 59459;
      case 59557:
      case 59558:
      case 59573:
        return 59403;
      case 59566:
        return 59690;
      case 59569:
      case 59570:
        return 59414;
      case 59571:
      case 59572:
      case 59576:
      case 59577:
      case 59578:
      case 59787:
        return 59864;
      case 59582:
        return 59791;
      case 59699:
        return 59508;
      case 59701:
        return 59448;
      case 59709:
        goto LABEL_48;
      case 59791:
        return 61697;
      default:
        if ((_DWORD)a1 != 59831)
          return a1;
LABEL_52:
        result = 59830;
        break;
    }
    return result;
  }
  if ((int)a1 <= 61569)
  {
    if ((int)a1 > 61512)
    {
      if ((int)a1 > 61529)
      {
        if ((_DWORD)a1 == 61530 || (_DWORD)a1 == 61531)
          return 61529;
      }
      else
      {
        if ((_DWORD)a1 == 61513)
          return 61512;
        if ((_DWORD)a1 == 61517)
          return 59782;
      }
    }
    else if ((int)a1 > 61478)
    {
      if ((_DWORD)a1 == 61479)
        return 59753;
      if ((_DWORD)a1 == 61493)
        return 59808;
    }
    else
    {
      if ((_DWORD)a1 == 59855)
        return 59414;
      if ((_DWORD)a1 == 61462)
        return 59836;
    }
    return a1;
  }
  if ((int)a1 <= 61581)
  {
    switch((_DWORD)a1)
    {
      case 0xF082:
        return 59737;
      case 0xF085:
        return 61572;
      case 0xF088:
        return 61575;
    }
    return a1;
  }
  switch((int)a1)
  {
    case 61582:
      result = 61467;
      break;
    case 61583:
      result = 59729;
      break;
    case 61585:
      result = 61584;
      break;
    case 61589:
LABEL_48:
      result = 61952;
      break;
    default:
      return a1;
  }
  return result;
}

id colorDefaults()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  _QWORD v43[2];
  _QWORD v44[2];
  _QWORD v45[2];
  _QWORD v46[2];
  _QWORD v47[2];
  _QWORD v48[2];
  void *v49;
  void *v50;
  void *v51;
  _QWORD v52[2];
  _QWORD v53[2];
  _QWORD v54[2];
  _QWORD v55[2];
  _QWORD v56[2];
  void *v57;
  _QWORD v58[15];
  _QWORD v59[17];

  v59[15] = *MEMORY[0x1E0C80C00];
  v58[0] = CFSTR("com.apple.MobileSMS");
  +[WFColor colorWithSystemColor:](WFColor, "colorWithSystemColor:", 1);
  v42 = (void *)objc_claimAutoreleasedReturnValue();
  v57 = v42;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v57, 1);
  v41 = (void *)objc_claimAutoreleasedReturnValue();
  v59[0] = v41;
  v58[1] = CFSTR("com.apple.mobilenotes");
  +[WFColor colorWithRGBAValue:](WFColor, "colorWithRGBAValue:", 4292346111);
  v40 = (void *)objc_claimAutoreleasedReturnValue();
  v56[0] = v40;
  +[WFColor colorWithRGBAValue:](WFColor, "colorWithRGBAValue:", 4206559487);
  v39 = (void *)objc_claimAutoreleasedReturnValue();
  v56[1] = v39;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v56, 2);
  v38 = (void *)objc_claimAutoreleasedReturnValue();
  v59[1] = v38;
  v58[2] = CFSTR("com.apple.Music");
  +[WFColor colorWithRGBAValue:](WFColor, "colorWithRGBAValue:", 3915806463);
  v37 = (void *)objc_claimAutoreleasedReturnValue();
  v55[0] = v37;
  +[WFColor colorWithRGBAValue:](WFColor, "colorWithRGBAValue:", 3862840575);
  v36 = (void *)objc_claimAutoreleasedReturnValue();
  v55[1] = v36;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v55, 2);
  v35 = (void *)objc_claimAutoreleasedReturnValue();
  v59[2] = v35;
  v58[3] = CFSTR("com.apple.podcasts");
  +[WFColor colorWithRGBAValue:](WFColor, "colorWithRGBAValue:", 3363108095);
  v34 = (void *)objc_claimAutoreleasedReturnValue();
  v54[0] = v34;
  +[WFColor colorWithRGBAValue:](WFColor, "colorWithRGBAValue:", 2033302271);
  v33 = (void *)objc_claimAutoreleasedReturnValue();
  v54[1] = v33;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v54, 2);
  v32 = (void *)objc_claimAutoreleasedReturnValue();
  v59[3] = v32;
  v58[4] = CFSTR("com.apple.AppStore");
  +[WFColor colorWithRGBAValue:](WFColor, "colorWithRGBAValue:", 1573123839);
  v31 = (void *)objc_claimAutoreleasedReturnValue();
  v53[0] = v31;
  +[WFColor colorWithRGBAValue:](WFColor, "colorWithRGBAValue:", 946924287);
  v30 = (void *)objc_claimAutoreleasedReturnValue();
  v53[1] = v30;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v53, 2);
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  v59[4] = v29;
  v58[5] = CFSTR("com.apple.iBooks");
  +[WFColor colorWithRGBAValue:](WFColor, "colorWithRGBAValue:", 4054531327);
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  v52[0] = v28;
  +[WFColor colorWithRGBAValue:](WFColor, "colorWithRGBAValue:", 3899668223);
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  v52[1] = v27;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v52, 2);
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  v59[5] = v26;
  v58[6] = CFSTR("com.apple.VoiceMemos");
  +[WFColor colorWithRGBAValue:](WFColor, "colorWithRGBAValue:", 437918719);
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  v51 = v25;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v51, 1);
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  v59[6] = v24;
  v58[7] = CFSTR("com.apple.stocks");
  +[WFColor colorWithRGBAValue:](WFColor, "colorWithRGBAValue:", 185273343);
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  v50 = v23;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v50, 1);
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  v59[7] = v22;
  v58[8] = CFSTR("com.apple.mobiletimer");
  +[WFColor colorWithRGBAValue:](WFColor, "colorWithRGBAValue:", 471604991);
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  v49 = v21;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v49, 1);
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  v59[8] = v20;
  v58[9] = CFSTR("com.apple.Pages");
  +[WFColor colorWithRGBAValue:](WFColor, "colorWithRGBAValue:", 4105784831);
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v48[0] = v19;
  +[WFColor colorWithRGBAValue:](WFColor, "colorWithRGBAValue:", 3968547327);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v48[1] = v18;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v48, 2);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v59[9] = v17;
  v58[10] = CFSTR("com.apple.Keynote");
  +[WFColor colorWithRGBAValue:](WFColor, "colorWithRGBAValue:", 1657403647);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v47[0] = v16;
  +[WFColor colorWithRGBAValue:](WFColor, "colorWithRGBAValue:", 845473791);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v47[1] = v15;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v47, 2);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v59[10] = v14;
  v58[11] = CFSTR("com.apple.Numbers");
  +[WFColor colorWithRGBAValue:](WFColor, "colorWithRGBAValue:", 2582804991);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v46[0] = v13;
  +[WFColor colorWithRGBAValue:](WFColor, "colorWithRGBAValue:", 1657816319);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v46[1] = v12;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v46, 2);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v59[11] = v0;
  v58[12] = CFSTR("com.apple.camera");
  +[WFColor colorWithRGBAValue:](WFColor, "colorWithRGBAValue:", 3840207359);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v45[0] = v1;
  +[WFColor colorWithRGBAValue:](WFColor, "colorWithRGBAValue:", 2391708671);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v45[1] = v2;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v45, 2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v59[12] = v3;
  v58[13] = CFSTR("com.apple.tv");
  +[WFColor colorWithRGBAValue:](WFColor, "colorWithRGBAValue:", 858993663);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v44[0] = v4;
  +[WFColor colorWithRGBAValue:](WFColor, "colorWithRGBAValue:", 404232703);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v44[1] = v5;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v44, 2);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v59[13] = v6;
  v58[14] = CFSTR("com.apple.freeform");
  +[WFColor colorWithRGBAValue:](WFColor, "colorWithRGBAValue:", 372857343);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v43[0] = v7;
  +[WFColor colorWithRGBAValue:](WFColor, "colorWithRGBAValue:", 372857343);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v43[1] = v8;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v43, 2);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v59[14] = v9;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v59, v58, 15);
  v11 = (id)objc_claimAutoreleasedReturnValue();

  return v11;
}

id WFLocalizedAllShortcutsString()
{
  return WFLocalizedString(CFSTR("All Shortcuts"));
}

id getWFWorkflowExecutionLogObject()
{
  if (getWFWorkflowExecutionLogObject_onceToken != -1)
    dispatch_once(&getWFWorkflowExecutionLogObject_onceToken, &__block_literal_global_20);
  return (id)getWFWorkflowExecutionLogObject_log;
}

void WFWorkflowIconDrawerGloballyCacheDrawerContext()
{
  id v0;
  NSObject *v1;
  WFWorkflowIconDrawerContext *v2;
  void *v3;
  int v4;
  const char *v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_lock((os_unfair_lock_t)&contextLock);
  if (!context)
  {
    v0 = WFImageBeginUsingCoreGlyphsCatalogs();
    getWFVoiceShortcutClientLogObject();
    v1 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
    {
      v4 = 136315138;
      v5 = "WFWorkflowIconDrawerGloballyCacheDrawerContext";
      _os_log_impl(&dword_1AF681000, v1, OS_LOG_TYPE_DEFAULT, "%s Loading icon drawer context into cache", (uint8_t *)&v4, 0xCu);
    }

    v2 = objc_alloc_init(WFWorkflowIconDrawerContext);
    v3 = (void *)context;
    context = (uint64_t)v2;

  }
  os_unfair_lock_unlock((os_unfair_lock_t)&contextLock);
}

BOOL WFShouldReverseLayoutDirection()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getNSParagraphStyleClass_softClass;
  v7 = getNSParagraphStyleClass_softClass;
  if (!getNSParagraphStyleClass_softClass)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getNSParagraphStyleClass_block_invoke;
    v3[3] = &unk_1E5FC8858;
    v3[4] = &v4;
    __getNSParagraphStyleClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = objc_retainAutorelease(v0);
  _Block_object_dispose(&v4, 8);
  return objc_msgSend(v1, "defaultWritingDirectionForLanguage:", 0) == 1;
}

void sub_1AF68F2D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getNSParagraphStyleClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  void *v4;
  void *v5;

  if (!UIFoundationLibraryCore_frameworkLibrary)
    UIFoundationLibraryCore_frameworkLibrary = _sl_dlopen();
  if (!UIFoundationLibraryCore_frameworkLibrary)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *UIFoundationLibrary(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("WFLayoutDirection.m"), 17, CFSTR("%s"), 0);

    goto LABEL_8;
  }
  result = objc_getClass("NSParagraphStyle");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getNSParagraphStyleClass(void)_block_invoke");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("WFLayoutDirection.m"), 18, CFSTR("Unable to find class %s"), "NSParagraphStyle");

LABEL_8:
    __break(1u);
  }
  getNSParagraphStyleClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

id WFImageBeginUsingCoreGlyphsCatalogs()
{
  uint64_t v0;
  NSObject *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  int v8;
  const char *v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_lock((os_unfair_lock_t)&WFImageResidentCoreGlyphsCatalogsLock);
  v0 = WFImageLockedResidentCoreGlyphsCatalogRefCount;
  if (!WFImageLockedResidentCoreGlyphsCatalogRefCount)
  {
    getWFVoiceShortcutClientLogObject();
    v1 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v1, OS_LOG_TYPE_INFO))
    {
      v8 = 136315138;
      v9 = "WFImageBeginUsingCoreGlyphsCatalogs";
      _os_log_impl(&dword_1AF681000, v1, OS_LOG_TYPE_INFO, "%s Loading core glyph catalogs into memory", (uint8_t *)&v8, 0xCu);
    }

    v2 = (void *)objc_opt_new();
    WFImageGetCoreGlyphsCatalogNamed(CFSTR("CoreGlyphs.bundle"));
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    WFImageGetCoreGlyphsCatalogNamed(CFSTR("CoreGlyphsPrivate.bundle"));
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    if (v3)
      objc_msgSend(v2, "addObject:", v3);
    if (v4)
      objc_msgSend(v2, "addObject:", v4);

    v5 = (void *)WFImageLockedResidentCoreGlyphsCatalogs;
    WFImageLockedResidentCoreGlyphsCatalogs = (uint64_t)v2;

    v0 = WFImageLockedResidentCoreGlyphsCatalogRefCount;
  }
  WFImageLockedResidentCoreGlyphsCatalogRefCount = v0 + 1;
  v6 = (id)WFImageLockedResidentCoreGlyphsCatalogs;
  os_unfair_lock_unlock((os_unfair_lock_t)&WFImageResidentCoreGlyphsCatalogsLock);
  return v6;
}

void sub_1AF68F814(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

id WFImageGetCoreGlyphsCatalogNamed(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  objc_class *v12;
  void *v13;
  id v14;
  NSObject *v15;
  id v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _BYTE buf[24];
  void *v23;
  __int128 *v24;
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  NSSearchPathForDirectoriesInDomains(NSCoreServiceDirectory, 8uLL, 0);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "sortedArrayUsingComparator:", &__block_literal_global_39_15391);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v20 = 0u;
  v21 = 0u;
  v18 = 0u;
  v19 = 0u;
  v5 = v3;
  v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v18, buf, 16);
  if (!v6)
  {
LABEL_9:

    goto LABEL_10;
  }
  v7 = *(_QWORD *)v19;
LABEL_3:
  v8 = 0;
  while (1)
  {
    if (*(_QWORD *)v19 != v7)
      objc_enumerationMutation(v5);
    objc_msgSend(*(id *)(*((_QWORD *)&v18 + 1) + 8 * v8), "stringByAppendingPathComponent:", v1);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    if ((objc_msgSend(v4, "fileExistsAtPath:", v9) & 1) != 0)
      break;

    if (v6 == ++v8)
    {
      v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v18, buf, 16);
      if (!v6)
        goto LABEL_9;
      goto LABEL_3;
    }
  }

  if (!v9)
LABEL_10:
    __assert_rtn("WFImageGetCoreServicesBundlePath", "WFImage+Glyphs.m", 72, "foundBundle != nil");

  objc_msgSend(MEMORY[0x1E0CB34D0], "bundleWithPath:", v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  if (v10)
  {
    *(_QWORD *)&v18 = 0;
    *((_QWORD *)&v18 + 1) = &v18;
    *(_QWORD *)&v19 = 0x2050000000;
    v11 = (void *)getCUICatalogClass_softClass;
    *((_QWORD *)&v19 + 1) = getCUICatalogClass_softClass;
    if (!getCUICatalogClass_softClass)
    {
      *(_QWORD *)buf = MEMORY[0x1E0C809B0];
      *(_QWORD *)&buf[8] = 3221225472;
      *(_QWORD *)&buf[16] = __getCUICatalogClass_block_invoke;
      v23 = &unk_1E5FC8858;
      v24 = &v18;
      __getCUICatalogClass_block_invoke((uint64_t)buf);
      v11 = *(void **)(*((_QWORD *)&v18 + 1) + 24);
    }
    v12 = objc_retainAutorelease(v11);
    _Block_object_dispose(&v18, 8);
    v17 = 0;
    v13 = (void *)objc_msgSend([v12 alloc], "initWithName:fromBundle:error:", CFSTR("Assets"), v10, &v17);
    v14 = v17;
    if (v14)
    {
      getWFVoiceShortcutClientLogObject();
      v15 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 136315650;
        *(_QWORD *)&buf[4] = "WFImageGetCoreGlyphsCatalogNamed";
        *(_WORD *)&buf[12] = 2112;
        *(_QWORD *)&buf[14] = v1;
        *(_WORD *)&buf[22] = 2112;
        v23 = v14;
        _os_log_impl(&dword_1AF681000, v15, OS_LOG_TYPE_ERROR, "%s Can't load asset catalog named 'Assets' in requested bundle with name %@: %@", buf, 0x20u);
      }

    }
  }
  else
  {
    v13 = 0;
  }

  return v13;
}

void sub_1AF68FB24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getCUICatalogClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  void *v4;
  void *v5;

  if (!CoreUILibraryCore_frameworkLibrary)
    CoreUILibraryCore_frameworkLibrary = _sl_dlopen();
  if (!CoreUILibraryCore_frameworkLibrary)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *CoreUILibrary(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("WFImage+Glyphs.m"), 22, CFSTR("%s"), 0);

    goto LABEL_8;
  }
  result = objc_getClass("CUICatalog");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getCUICatalogClass(void)_block_invoke");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("WFImage+Glyphs.m"), 23, CFSTR("Unable to find class %s"), "CUICatalog");

LABEL_8:
    __break(1u);
  }
  getCUICatalogClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void WFImageEndUsingCoreGlyphsCatalogs()
{
  uint64_t v0;
  NSObject *v1;
  void *v2;
  void *v3;
  void *v4;
  int v5;
  const char *v6;
  uint64_t v7;

  v7 = *MEMORY[0x1E0C80C00];
  os_unfair_lock_lock((os_unfair_lock_t)&WFImageResidentCoreGlyphsCatalogsLock);
  v0 = WFImageLockedResidentCoreGlyphsCatalogRefCount;
  if (!WFImageLockedResidentCoreGlyphsCatalogRefCount)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void WFImageEndUsingCoreGlyphsCatalogs(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();

    v0 = WFImageLockedResidentCoreGlyphsCatalogRefCount;
  }
  WFImageLockedResidentCoreGlyphsCatalogRefCount = v0 - 1;
  if (v0 == 1)
  {
    getWFVoiceShortcutClientLogObject();
    v1 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v1, OS_LOG_TYPE_INFO))
    {
      v5 = 136315138;
      v6 = "WFImageEndUsingCoreGlyphsCatalogs";
      _os_log_impl(&dword_1AF681000, v1, OS_LOG_TYPE_INFO, "%s Evicting core glyph catalogs from memory, refcount = 0", (uint8_t *)&v5, 0xCu);
    }

    v2 = (void *)WFImageLockedResidentCoreGlyphsCatalogs;
    WFImageLockedResidentCoreGlyphsCatalogs = 0;

  }
  os_unfair_lock_unlock((os_unfair_lock_t)&WFImageResidentCoreGlyphsCatalogsLock);
}

void sub_1AF68FE2C(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock((os_unfair_lock_t)&WFImageResidentCoreGlyphsCatalogsLock);
  _Unwind_Resume(a1);
}

id WFSystemImageNameForOutlineGlyphCharacter(uint64_t a1)
{
  int v1;
  void *v2;
  id v3;
  void *v4;

  v1 = a1;
  WFSystemImageNameForGlyphCharacter(a1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if (v2)
  {
    if (WFNonFillGlyphAvailable(v1) && objc_msgSend(v2, "hasSuffix:", CFSTR(".fill")))
    {
      objc_msgSend(v2, "stringByReplacingOccurrencesOfString:withString:options:range:", CFSTR(".fill"), &stru_1E5FC92C0, 4, objc_msgSend(v2, "length") - objc_msgSend(CFSTR(".fill"), "length"), objc_msgSend(CFSTR(".fill"), "length"));
      v3 = (id)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v3 = v2;
    }
    v4 = v3;
  }
  else
  {
    v4 = 0;
  }

  return v4;
}

id WFLocalizedPhrasesGroupedByParameterIdentifier(void *a1, _QWORD *a2, _QWORD *a3)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t i;
  void *v12;
  void *v13;
  LNAutoShortcutParameterPhraseGroup *v14;
  LNAutoShortcutParameterPhraseGroup *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  void *v23;
  void *v24;
  void *v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  _BYTE v30[128];
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v24 = (void *)objc_opt_new();
  v4 = (void *)objc_opt_new();
  v5 = (void *)objc_opt_new();
  v25 = (void *)objc_opt_new();
  v26 = 0u;
  v27 = 0u;
  v28 = 0u;
  v29 = 0u;
  v23 = v3;
  objc_msgSend(v3, "orderedPhrases");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v26, v30, 16);
  if (v7)
  {
    v8 = v7;
    v9 = 0;
    v10 = *(_QWORD *)v27;
    do
    {
      for (i = 0; i != v8; ++i)
      {
        if (*(_QWORD *)v27 != v10)
          objc_enumerationMutation(v6);
        v12 = *(void **)(*((_QWORD *)&v26 + 1) + 8 * i);
        objc_msgSend(v12, "parameterIdentifier");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        if (v13)
        {
          objc_msgSend(v4, "objectForKeyedSubscript:", v13);
          v14 = (LNAutoShortcutParameterPhraseGroup *)objc_claimAutoreleasedReturnValue();
          if (!v14)
          {
            v15 = [LNAutoShortcutParameterPhraseGroup alloc];
            v14 = -[LNAutoShortcutParameterPhraseGroup initWithParameterID:phrases:](v15, "initWithParameterID:phrases:", v13, MEMORY[0x1E0C9AA60]);
            objc_msgSend(v4, "setObject:forKeyedSubscript:", v14, v13);
            objc_msgSend(v24, "addObject:", v14);
            objc_msgSend(v5, "addObject:", v12);
          }
          -[LNAutoShortcutParameterPhraseGroup addPhrase:](v14, "addPhrase:", v12);

        }
        else
        {
          objc_msgSend(v25, "addObject:", v12);
          if ((v9 & 1) == 0)
            objc_msgSend(v5, "addObject:", v12);
          v9 = 1;
        }

      }
      v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v26, v30, 16);
    }
    while (v8);
  }

  v16 = objc_msgSend(v25, "count");
  if (a2 && v16)
    *a2 = (id)objc_msgSend(v25, "copy");
  v17 = objc_msgSend(v5, "count");
  if (a3 && v17)
    *a3 = objc_retainAutorelease(v5);
  if (objc_msgSend(v24, "count"))
    v18 = v24;
  else
    v18 = 0;
  v19 = v18;

  return v19;
}

uint64_t WFNonFillGlyphAvailable(int a1)
{
  uint64_t result;
  unsigned int v3;

  result = 0;
  if (a1 > 61458)
  {
    v3 = a1 - 61459;
    if (v3 <= 0x38 && ((1 << v3) & 0x100003000008001) != 0)
      return result;
    return 1;
  }
  if (a1 != 59405 && a1 != 59738 && a1 != 61450)
    return 1;
  return result;
}

WFGradient *WFWorkflowGradientFromRGBA(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  WFGradient *v13;

  +[WFColor colorWithP3RGBAValue:](WFColor, "colorWithP3RGBAValue:", a1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  +[WFColor colorWithP3RGBAValue:](WFColor, "colorWithP3RGBAValue:", a2);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  +[WFColor colorWithP3RGBAValue:](WFColor, "colorWithP3RGBAValue:", a3);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  +[WFColor colorWithP3RGBAValue:](WFColor, "colorWithP3RGBAValue:", a4);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  +[WFColor colorWithDisplayP3Red:green:blue:alpha:](WFColor, "colorWithDisplayP3Red:green:blue:alpha:", 1.0, 1.0, 1.0, 0.14);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  +[WFColor colorWithDisplayP3Red:green:blue:alpha:](WFColor, "colorWithDisplayP3Red:green:blue:alpha:", 1.0, 1.0, 1.0, 0.0);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = -[WFGradient initWithBaseColor:darkBaseColor:accessibilityBaseColor:darkAccessibilityBaseColor:startColor:endColor:blendMode:]([WFGradient alloc], "initWithBaseColor:darkBaseColor:accessibilityBaseColor:darkAccessibilityBaseColor:startColor:endColor:blendMode:", v7, v8, v9, v10, v11, v12, 0);

  return v13;
}

id getWFStaccatoLogObject()
{
  if (getWFStaccatoLogObject_onceToken != -1)
    dispatch_once(&getWFStaccatoLogObject_onceToken, &__block_literal_global_116);
  return (id)getWFStaccatoLogObject_log;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x1B5DFC61C]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

id getWFCloudKitSyncLogObject()
{
  if (getWFCloudKitSyncLogObject_onceToken != -1)
    dispatch_once(&getWFCloudKitSyncLogObject_onceToken, &__block_literal_global_26);
  return (id)getWFCloudKitSyncLogObject_log;
}

uint64_t VCIsInternalBuild()
{
  if (VCIsInternalBuild_onceToken != -1)
    dispatch_once(&VCIsInternalBuild_onceToken, &__block_literal_global_15734);
  return VCIsInternalBuild_isInternal;
}

void sub_1AF6933D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1AF693640(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id VCVoiceShortcutManagerXPCInterface()
{
  void *v0;

  objc_msgSend(MEMORY[0x1E0CB3B50], "interfaceWithProtocol:", &unk_1EEE82E58);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  VCVoiceShortcutManagerConfigureXPCInterface(v0);
  return v0;
}

id getWFAppIntentsLogObject()
{
  if (getWFAppIntentsLogObject_onceToken != -1)
    dispatch_once(&getWFAppIntentsLogObject_onceToken, &__block_literal_global_72);
  return (id)getWFAppIntentsLogObject_log;
}

id WFLocalizedString(void *a1)
{
  id v1;
  void *v2;
  void *v3;

  v1 = a1;
  WFCurrentBundle();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "localizedStringForKey:value:table:", v1, v1, 0);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

id WFCurrentBundle()
{
  if (WFCurrentBundle_onceToken != -1)
    dispatch_once(&WFCurrentBundle_onceToken, &__block_literal_global_17318);
  return (id)WFCurrentBundle_bundle;
}

void __getWFVoiceShortcutClientLogObject_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create(WFLogSubsystem, "VoiceShortcutClient");
  v1 = (void *)getWFVoiceShortcutClientLogObject_log;
  getWFVoiceShortcutClientLogObject_log = (uint64_t)v0;

}

id getWFSecurityLogObject()
{
  if (getWFSecurityLogObject_onceToken != -1)
    dispatch_once(&getWFSecurityLogObject_onceToken, &__block_literal_global_60);
  return (id)getWFSecurityLogObject_log;
}

id getWFFilesLogObject()
{
  if (getWFFilesLogObject_onceToken != -1)
    dispatch_once(&getWFFilesLogObject_onceToken, &__block_literal_global_66);
  return (id)getWFFilesLogObject_log;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

id getWFSpotlightSyncLogObject()
{
  if (getWFSpotlightSyncLogObject_onceToken != -1)
    dispatch_once(&getWFSpotlightSyncLogObject_onceToken, &__block_literal_global_42);
  return (id)getWFSpotlightSyncLogObject_log;
}

void __getWFWalrusLogObject_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create(WFLogSubsystem, "Walrus");
  v1 = (void *)getWFWalrusLogObject_log;
  getWFWalrusLogObject_log = (uint64_t)v0;

}

void __getWFTipsLogObject_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create(WFLogSubsystem, "Tips");
  v1 = (void *)getWFTipsLogObject_log;
  getWFTipsLogObject_log = (uint64_t)v0;

}

void __getWFHomescreenLogObject_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create(WFLogSubsystem, "Homescreen");
  v1 = (void *)getWFHomescreenLogObject_log;
  getWFHomescreenLogObject_log = (uint64_t)v0;

}

void __getWFGeneralLogObject_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create(WFLogSubsystem, "General");
  v1 = (void *)getWFGeneralLogObject_log;
  getWFGeneralLogObject_log = (uint64_t)v0;

}

void __getWFGalleryLogObject_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create(WFLogSubsystem, "Gallery");
  v1 = (void *)getWFGalleryLogObject_log;
  getWFGalleryLogObject_log = (uint64_t)v0;

}

void __getWFFilesLogObject_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create(WFLogSubsystem, "Files");
  v1 = (void *)getWFFilesLogObject_log;
  getWFFilesLogObject_log = (uint64_t)v0;

}

void __getWFDatabaseLogObject_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create(WFLogSubsystem, "Database");
  v1 = (void *)getWFDatabaseLogObject_log;
  getWFDatabaseLogObject_log = (uint64_t)v0;

}

void __getWFCoherenceLogObject_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create(WFLogSubsystem, "Coherence");
  v1 = (void *)getWFCoherenceLogObject_log;
  getWFCoherenceLogObject_log = (uint64_t)v0;

}

id getWFTipsLogObject()
{
  if (getWFTipsLogObject_onceToken != -1)
    dispatch_once(&getWFTipsLogObject_onceToken, &__block_literal_global_64);
  return (id)getWFTipsLogObject_log;
}

id getWFHomescreenLogObject()
{
  if (getWFHomescreenLogObject_onceToken != -1)
    dispatch_once(&getWFHomescreenLogObject_onceToken, &__block_literal_global_62);
  return (id)getWFHomescreenLogObject_log;
}

id getWFGalleryLogObject()
{
  if (getWFGalleryLogObject_onceToken != -1)
    dispatch_once(&getWFGalleryLogObject_onceToken, &__block_literal_global_44);
  return (id)getWFGalleryLogObject_log;
}

id getWFCoherenceLogObject()
{
  if (getWFCoherenceLogObject_onceToken != -1)
    dispatch_once(&getWFCoherenceLogObject_onceToken, &__block_literal_global_84);
  return (id)getWFCoherenceLogObject_log;
}

id VCAppBundleIdentifierForBundleRecord(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  void *v13;

  v1 = a1;
  objc_msgSend(v1, "bundleIdentifier");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(&unk_1E6004198, "objectForKey:", v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    objc_msgSend(v1, "bundleIdentifier");
    v4 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(&unk_1E6004198, "objectForKey:", v4);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v6 = v1;
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
      v7 = v6;
    else
      v7 = 0;
    v4 = v7;

    objc_msgSend(v4, "containingBundleRecord");
    v8 = objc_claimAutoreleasedReturnValue();
    v9 = (void *)v8;
    if (v8)
    {
      VCAppBundleIdentifierForBundleRecord(v8);
      v5 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v10 = v6;
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0)
        v11 = v10;
      else
        v11 = 0;
      v12 = v11;

      if (v12 || !v4)
        v13 = v12;
      else
        v13 = v4;
      objc_msgSend(v13, "bundleIdentifier");
      v5 = (void *)objc_claimAutoreleasedReturnValue();

    }
  }

  return v5;
}

id WFSystemStaccatoActionIdentifiersBySection()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v14;
  const __CFString *v15;
  const __CFString *v16;
  const __CFString *v17;
  const __CFString *v18;
  const __CFString *v19;
  const __CFString *v20;
  const __CFString *v21;
  const __CFString *v22;
  const __CFString *v23;
  _QWORD v24[9];
  _QWORD v25[11];

  v25[9] = *MEMORY[0x1E0C80C00];
  v23 = CFSTR("com.apple.ShortcutsActions.SetSilentModeAction");
  v24[0] = CFSTR("SilentMode");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v23, 1);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v25[0] = v14;
  v24[1] = CFSTR("Focus");
  v22 = CFSTR("com.apple.springboard.Focus");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v22, 1);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v25[1] = v0;
  v24[2] = CFSTR("Camera");
  v21 = CFSTR("com.apple.springboard.OpenCamera");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v21, 1);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v25[2] = v1;
  v24[3] = CFSTR("VoiceMemos");
  v20 = CFSTR("com.apple.VoiceMemos.ToggleRecording");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v20, 1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v25[3] = v2;
  v24[4] = CFSTR("MusicRecognition");
  v19 = CFSTR("com.apple.musicrecognition.RecognizeMusicIntent");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v19, 1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v25[4] = v3;
  v24[5] = CFSTR("Flashlight");
  v18 = CFSTR("com.apple.springboard.ToggleFlashlight");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v18, 1);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v25[5] = v4;
  v24[6] = CFSTR("Accessibility");
  v17 = CFSTR("com.apple.AccessibilityUIServer.ToggleAccessibilityFeatureIntent");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v17, 1);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v25[6] = v5;
  v24[7] = CFSTR("Translate");
  v16 = CFSTR("com.apple.Translate.ToggleSpeechTranslationIntent");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v16, 1);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v25[7] = v6;
  v24[8] = CFSTR("Magnifier");
  v15 = CFSTR("com.apple.Magnifier.MagnifierIntent");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v15, 1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v25[8] = v7;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v25, v24, 9);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = (void *)objc_msgSend(v8, "mutableCopy");

  if (VCIsInternalBuild_onceToken != -1)
    dispatch_once(&VCIsInternalBuild_onceToken, &__block_literal_global_15734);
  if (VCIsInternalBuild_isInternal)
  {
    v10 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99EA0]), "initWithSuiteName:", CFSTR("com.apple.siri.shortcuts"));
    objc_msgSend(v10, "dictionaryForKey:", CFSTR("WFStaccatoActionTemplates"));
    v11 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v9, "addEntriesFromDictionary:", v11);
  }
  v12 = (void *)objc_msgSend(v9, "copy");

  return v12;
}

uint64_t static XPCAppProtectionEventStream.name.getter()
{
  return sub_1AF76A57C();
}

VoiceShortcutClient::XPCAppProtectionEventStream::Event::CodingKeys_optional __swiftcall XPCAppProtectionEventStream.Event.CodingKeys.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  char v4;
  VoiceShortcutClient::XPCAppProtectionEventStream::Event::CodingKeys_optional result;

  v2 = v1;
  v3 = sub_1AF76AA8C();
  OUTLINED_FUNCTION_10();
  v4 = 3;
  if (v3 < 3)
    v4 = v3;
  *v2 = v4;
  OUTLINED_FUNCTION_9();
  return result;
}

VoiceShortcutClient::XPCAppProtectionEventStream::Event::CodingKeys_optional __swiftcall XPCAppProtectionEventStream.Event.CodingKeys.init(stringValue:)(Swift::String stringValue)
{
  _BYTE *v1;
  _BYTE *v2;
  VoiceShortcutClient::XPCAppProtectionEventStream::Event::CodingKeys_optional result;
  char v4;

  v2 = v1;
  result.value = XPCAppProtectionEventStream.Event.CodingKeys.init(rawValue:)(stringValue).value;
  *v2 = v4;
  return result;
}

VoiceShortcutClient::XPCAppProtectionEventStream::Event::CodingKeys_optional __swiftcall XPCAppProtectionEventStream.Event.CodingKeys.init(intValue:)(Swift::Int intValue)
{
  _BYTE *v1;

  *v1 = 3;
  return (VoiceShortcutClient::XPCAppProtectionEventStream::Event::CodingKeys_optional)intValue;
}

uint64_t XPCAppProtectionEventStream.Event.CodingKeys.intValue.getter()
{
  return 0;
}

uint64_t XPCAppProtectionEventStream.Event.CodingKeys.rawValue.getter()
{
  char *v0;

  return *(_QWORD *)&aXpceventhidden[8 * *v0];
}

uint64_t XPCAppProtectionEventStream.Event.CodingKeys.stringValue.getter()
{
  char *v0;

  return *(_QWORD *)&aXpceventhidden[8 * *v0];
}

uint64_t sub_1AF695A30(char *a1, char *a2)
{
  return sub_1AF695CA4(*a1, *a2);
}

uint64_t sub_1AF695A3C()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  char v6;

  v0 = sub_1AF76A1B0();
  v2 = v1;
  v3 = sub_1AF76A1B0();
  v5 = v4;
  v6 = MEMORY[0x1B5DFA984](v0, v2, v3, v4);
  sub_1AF697C78(v3, v5);
  sub_1AF697C78(v0, v2);
  return v6 & 1;
}

uint64_t sub_1AF695AB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_1AF76A57C();
  v2 = v1;
  if (v0 == sub_1AF76A57C() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_1AF76AD14();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

void sub_1AF695B3C(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6F666E4972657355;
  else
    v3 = 1701667150;
  if (v2)
    v4 = 0xE400000000000000;
  else
    v4 = 0xE800000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x6F666E4972657355;
  else
    v5 = 1701667150;
  if ((a2 & 1) != 0)
    v6 = 0xE800000000000000;
  else
    v6 = 0xE400000000000000;
  if (v3 != v5 || v4 != v6)
    OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_9();
}

uint64_t sub_1AF695BB4()
{
  return 1;
}

void sub_1AF695BBC(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x656C67676F74;
  else
    v3 = 1852994932;
  if (v2)
    v4 = 0xE400000000000000;
  else
    v4 = 0xE600000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x656C67676F74;
  else
    v5 = 1852994932;
  if ((a2 & 1) != 0)
    v6 = 0xE600000000000000;
  else
    v6 = 0xE400000000000000;
  if (v3 != v5 || v4 != v6)
    OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_9();
}

void sub_1AF695C30(char a1, char a2)
{
  if (*(_QWORD *)&aIsonetimregion[8 * a1] != *(_QWORD *)&aIsonetimregion[8 * a2]
    || *(_QWORD *)&aTimerange_2[8 * a1 + 8] != *(_QWORD *)&aTimerange_2[8 * a2 + 8])
  {
    OUTLINED_FUNCTION_6();
  }
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_9();
}

BOOL sub_1AF695C98(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

uint64_t sub_1AF695CA4(char a1, char a2)
{
  char v3;

  if (*(_QWORD *)&aXpceventhidden[8 * a1] == *(_QWORD *)&aXpceventhidden[8 * a2]
    && *(_QWORD *)&aXpceventhidden[8 * a1 + 24] == *(_QWORD *)&aXpceventhidden[8 * a2 + 24])
  {
    v3 = 1;
  }
  else
  {
    v3 = sub_1AF76AD14();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

void sub_1AF695D28()
{
  sub_1AF6DC56C();
}

uint64_t sub_1AF695D30()
{
  return sub_1AF6DC6CC();
}

void sub_1AF695D38()
{
  sub_1AF6DC880();
}

VoiceShortcutClient::XPCAppProtectionEventStream::Event::CodingKeys_optional sub_1AF695D40(Swift::String *a1)
{
  return XPCAppProtectionEventStream.Event.CodingKeys.init(rawValue:)(*a1);
}

void sub_1AF695D4C(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = XPCAppProtectionEventStream.Event.CodingKeys.rawValue.getter();
  a1[1] = v2;
  OUTLINED_FUNCTION_19();
}

uint64_t sub_1AF695D74()
{
  return 0;
}

uint64_t sub_1AF695D84()
{
  sub_1AF697D4C();
  return sub_1AF76AF90();
}

uint64_t sub_1AF695DAC()
{
  sub_1AF697D4C();
  return sub_1AF76AF9C();
}

uint64_t XPCAppProtectionEventStream.Event.init(from:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *v5;
  _QWORD *v6;
  void *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  xpc_object_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  _BYTE v24[40];
  xpc_object_t v25;

  sub_1AF696138(a1, (uint64_t)v24);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED01F670);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v5 = sub_1AF69644C(v23);
    if (v2)
    {
      __swift_destroy_boxed_opaque_existential_1(a1);
      OUTLINED_FUNCTION_2();
      OUTLINED_FUNCTION_1();
      return swift_unknownObjectRelease();
    }
    else
    {
      v7 = v5;
      v8 = (_QWORD *)sub_1AF69B51C(0x746E657645435058, 0xEC000000656D614ELL, v5);
      v21 = sub_1AF6968B0(v8, v9, 0);
      v12 = v11;
      swift_bridgeObjectRelease();
      v22 = v12;
      OUTLINED_FUNCTION_13();
      v13 = xpc_dictionary_get_value(v7, "hiddenPayload");
      v25 = v7;
      v14 = (void *)OUTLINED_FUNCTION_21((uint64_t)v13, 1);
      swift_unknownObjectRelease();
      sub_1AF6961B8(v14);
      v16 = v15;
      swift_unknownObjectRelease();
      swift_bridgeObjectRetain();
      v17 = xpc_dictionary_get_value(v25, "unhiddenPayload");
      v20 = (void *)OUTLINED_FUNCTION_21((uint64_t)v17, 2);
      swift_unknownObjectRelease();
      sub_1AF6961B8(v20);
      v19 = v18;
      __swift_destroy_boxed_opaque_existential_1(a1);
      OUTLINED_FUNCTION_2();
      OUTLINED_FUNCTION_1();
      OUTLINED_FUNCTION_8();
      OUTLINED_FUNCTION_27();
      OUTLINED_FUNCTION_29();
      swift_unknownObjectRelease();
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_13();
      OUTLINED_FUNCTION_4();
      *a2 = v21;
      a2[1] = v22;
      a2[2] = v16;
      a2[3] = v19;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_1AF69617C();
    OUTLINED_FUNCTION_5();
    *v6 = 0;
    v6[1] = 0;
    swift_willThrow();
    return __swift_destroy_boxed_opaque_existential_1(a1);
  }
}

uint64_t sub_1AF696138(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_1AF69617C()
{
  unint64_t result;

  result = qword_1EEE4B6C8;
  if (!qword_1EEE4B6C8)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF7777AC, &type metadata for XPCAppProtectionEventStream.Event.XPCEventDecodingError);
    atomic_store(result, (unint64_t *)&qword_1EEE4B6C8);
  }
  return result;
}

void sub_1AF6961B8(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  size_t count;
  int64_t v8;

  v2 = MEMORY[0x1B5DFCA90]();
  if (v2 == sub_1AF76A384())
  {
    count = xpc_array_get_count(a1);
    if ((count & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      v8 = count;
      swift_unknownObjectRetain();
      sub_1AF696280(0, v8, a1);
    }
  }
  else
  {
    sub_1AF76A384();
    v3 = sub_1AF76A588();
    v5 = v4;
    sub_1AF69617C();
    swift_allocError();
    *v6 = v3;
    v6[1] = v5;
    swift_willThrow();
  }
}

void sub_1AF696280(int64_t a1, int64_t a2, void *a3)
{
  uint64_t v3;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;

  v3 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (!v3)
  {
LABEL_12:
    swift_unknownObjectRelease();
    return;
  }
  v18 = MEMORY[0x1E0DEE9D8];
  sub_1AF6A7588(0, v3 & ~(v3 >> 63), 0);
  if ((v3 & 0x8000000000000000) == 0)
  {
    v7 = a1;
    while (a2 != v7)
    {
      if (!xpc_array_get_string(a3, v7))
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4B8C8);
        v14 = sub_1AF76A588();
        v16 = v15;
        sub_1AF69617C();
        swift_allocError();
        *v17 = v14;
        v17[1] = v16;
        swift_willThrow();
        swift_unknownObjectRelease();
        swift_release();
        return;
      }
      v8 = sub_1AF76A5C4();
      v10 = v9;
      v12 = *(_QWORD *)(v18 + 16);
      v11 = *(_QWORD *)(v18 + 24);
      if (v12 >= v11 >> 1)
        sub_1AF6A7588(v11 > 1, v12 + 1, 1);
      *(_QWORD *)(v18 + 16) = v12 + 1;
      v13 = v18 + 16 * v12;
      *(_QWORD *)(v13 + 32) = v8;
      *(_QWORD *)(v13 + 40) = v10;
      if (a2 < a1)
        goto LABEL_16;
      if (v7 >= a2)
        goto LABEL_17;
      if (a2 == ++v7)
        goto LABEL_12;
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
LABEL_19:
  __break(1u);
}

_QWORD *sub_1AF696438(_QWORD *a1)
{
  return sub_1AF69644C(a1);
}

_QWORD *sub_1AF69644C(_QWORD *a1)
{
  const _xpc_type_s *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t *v5;
  _QWORD v7[2];

  v2 = (const _xpc_type_s *)MEMORY[0x1B5DFCA90]();
  if (v2 == (const _xpc_type_s *)sub_1AF76A3C0())
  {
    swift_unknownObjectRetain();
    OUTLINED_FUNCTION_13();
  }
  else
  {
    v3 = sub_1AF76A99C();
    OUTLINED_FUNCTION_5();
    v5 = v4;
    *v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4B8B8);
    v7[0] = 0;
    v7[1] = 0xE000000000000000;
    OUTLINED_FUNCTION_13();
    sub_1AF76A960();
    sub_1AF76A5B8();
    xpc_type_get_name(v2);
    sub_1AF76A5C4();
    OUTLINED_FUNCTION_23();
    OUTLINED_FUNCTION_1();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4B8C0);
    a1 = v7;
    sub_1AF76A5B8();
    sub_1AF76A990();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(v5, *MEMORY[0x1E0DEC450], v3);
    OUTLINED_FUNCTION_24();
  }
  return a1;
}

uint64_t XPCAppProtectionEventStream.Event.notification.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t inited;
  uint64_t v4;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  sub_1AF76A558();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEE4B6D0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AF777250;
  sub_1AF76A57C();
  OUTLINED_FUNCTION_28();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BD80);
  *(_QWORD *)(inited + 96) = v4;
  *(_QWORD *)(inited + 72) = v2;
  sub_1AF76A57C();
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_28();
  *(_QWORD *)(inited + 168) = v4;
  *(_QWORD *)(inited + 144) = v1;
  swift_bridgeObjectRetain();
  sub_1AF76A4C8();
  return sub_1AF76A030();
}

uint64_t sub_1AF6966F4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return XPCAppProtectionEventStream.Event.init(from:)(a1, a2);
}

uint64_t sub_1AF69670C(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;

  if (a1)
    return swift_unknownObjectRetain();
  v4 = sub_1AF76A99C();
  swift_allocError();
  v6 = (_BYTE *)v5;
  *(_QWORD *)(v5 + 24) = &type metadata for XPCAppProtectionEventStream.Event.CodingKeys;
  *(_QWORD *)(v5 + 32) = sub_1AF697D4C();
  *v6 = a2;
  swift_bridgeObjectRetain();
  sub_1AF76A960();
  swift_bridgeObjectRelease();
  sub_1AF696AF0();
  sub_1AF76AB94();
  sub_1AF76A5B8();
  swift_bridgeObjectRelease();
  sub_1AF76A5B8();
  sub_1AF76A5B8();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4B8B0);
  sub_1AF76A5B8();
  sub_1AF76A990();
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(*(_QWORD *)(v4 - 8) + 104))(v6, *MEMORY[0x1E0DEC448], v4);
  return swift_willThrow();
}

_QWORD *sub_1AF6968B0(_QWORD *a1, uint64_t a2, char a3)
{
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _QWORD v9[2];
  char v10;

  if (a2)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    v5 = sub_1AF76A99C();
    swift_allocError();
    v7 = (_BYTE *)v6;
    *(_QWORD *)(v6 + 24) = &type metadata for XPCAppProtectionEventStream.Event.CodingKeys;
    *(_QWORD *)(v6 + 32) = sub_1AF697D4C();
    *v7 = a3;
    swift_bridgeObjectRetain();
    sub_1AF76A960();
    swift_bridgeObjectRelease();
    v9[0] = 0xD00000000000001DLL;
    v9[1] = 0x80000001AF780AC0;
    v10 = a3;
    sub_1AF696AF0();
    sub_1AF76AB94();
    sub_1AF76A5B8();
    swift_bridgeObjectRelease();
    sub_1AF76A5B8();
    sub_1AF76A5B8();
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4B8B0);
    a1 = v9;
    sub_1AF76A5B8();
    sub_1AF76A990();
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(v7, *MEMORY[0x1E0DEC448], v5);
    swift_willThrow();
  }
  return a1;
}

unint64_t sub_1AF696A70()
{
  unint64_t result;

  result = qword_1EEE4B6E0;
  if (!qword_1EEE4B6E0)
  {
    result = MEMORY[0x1B5DFC634](&protocol conformance descriptor for XPCAppProtectionEventStream.Event.CodingKeys, &type metadata for XPCAppProtectionEventStream.Event.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4B6E0);
  }
  return result;
}

unint64_t sub_1AF696AB0()
{
  unint64_t result;

  result = qword_1EEE4B6E8;
  if (!qword_1EEE4B6E8)
  {
    result = MEMORY[0x1B5DFC634](&protocol conformance descriptor for XPCAppProtectionEventStream.Event.CodingKeys, &type metadata for XPCAppProtectionEventStream.Event.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4B6E8);
  }
  return result;
}

unint64_t sub_1AF696AF0()
{
  unint64_t result;

  result = qword_1EEE4B6F0;
  if (!qword_1EEE4B6F0)
  {
    result = MEMORY[0x1B5DFC634](&protocol conformance descriptor for XPCAppProtectionEventStream.Event.CodingKeys, &type metadata for XPCAppProtectionEventStream.Event.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4B6F0);
  }
  return result;
}

unint64_t sub_1AF696B2C(uint64_t a1)
{
  unint64_t result;

  result = sub_1AF696B50();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1AF696B50()
{
  unint64_t result;

  result = qword_1EEE4B6F8;
  if (!qword_1EEE4B6F8)
  {
    result = MEMORY[0x1B5DFC634](&protocol conformance descriptor for XPCAppProtectionEventStream.Event, &type metadata for XPCAppProtectionEventStream.Event);
    atomic_store(result, (unint64_t *)&qword_1EEE4B6F8);
  }
  return result;
}

unint64_t sub_1AF696B90()
{
  unint64_t result;

  result = qword_1EEE4B700;
  if (!qword_1EEE4B700)
  {
    result = MEMORY[0x1B5DFC634](&protocol conformance descriptor for XPCAppProtectionEventStream.Event, &type metadata for XPCAppProtectionEventStream.Event);
    atomic_store(result, (unint64_t *)&qword_1EEE4B700);
  }
  return result;
}

void type metadata accessor for XPCAppProtectionEventStream()
{
  OUTLINED_FUNCTION_25();
}

uint64_t initializeBufferWithCopyOfBuffer for XPCAppProtectionEventStream.Event(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for XPCAppProtectionEventStream.Event()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for XPCAppProtectionEventStream.Event(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for XPCAppProtectionEventStream.Event(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t assignWithTake for XPCAppProtectionEventStream.Event(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for XPCAppProtectionEventStream.Event(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for XPCAppProtectionEventStream.Event(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for XPCAppProtectionEventStream.Event()
{
  OUTLINED_FUNCTION_25();
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for XPCAppProtectionEventStream.Event.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFE)
  {
    if (a2 + 2 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 2) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 3;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v5 = v6 - 3;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for XPCAppProtectionEventStream.Event.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1AF696ED0 + 4 * byte_1AF777275[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1AF696F04 + 4 * byte_1AF777270[v4]))();
}

uint64_t sub_1AF696F04(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AF696F0C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AF696F14);
  return result;
}

uint64_t sub_1AF696F20(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AF696F28);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1AF696F2C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AF696F34(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AF696F40(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_1AF696F4C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

void type metadata accessor for XPCAppProtectionEventStream.Event.CodingKeys()
{
  OUTLINED_FUNCTION_25();
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_1AF696F6C(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1AF696F8C(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for os_activity_scope_state_s(uint64_t a1)
{
  sub_1AF697EC0(a1, &qword_1EEE4B7C8);
}

void type metadata accessor for ProgressUserInfoKey(uint64_t a1)
{
  sub_1AF697EC0(a1, (unint64_t *)&unk_1EEE4B7D0);
}

void type metadata accessor for LSPersistentIdentifier(uint64_t a1)
{
  sub_1AF697EC0(a1, &qword_1EEE4B448);
}

_QWORD *initializeBufferWithCopyOfBuffer for XPCAppProtectionEventStream.Event.XPCEventDecodingError(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for XPCAppProtectionEventStream.Event.XPCEventDecodingError()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for XPCAppProtectionEventStream.Event.XPCEventDecodingError(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for XPCAppProtectionEventStream.Event.XPCEventDecodingError(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for XPCAppProtectionEventStream.Event.XPCEventDecodingError(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for XPCAppProtectionEventStream.Event.XPCEventDecodingError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

uint64_t sub_1AF697138(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_1AF697150(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCAppProtectionEventStream.Event.XPCEventDecodingError()
{
  return &type metadata for XPCAppProtectionEventStream.Event.XPCEventDecodingError;
}

uint64_t sub_1AF697180(uint64_t a1, char a2)
{
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;

  if (a1)
    return swift_unknownObjectRetain();
  sub_1AF76A99C();
  OUTLINED_FUNCTION_5();
  v5 = (_BYTE *)v4;
  *(_QWORD *)(v4 + 24) = &unk_1E5FC1AC8;
  *(_QWORD *)(v4 + 32) = sub_1AF697D88();
  *v5 = a2 & 1;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_22();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4B8B0);
  OUTLINED_FUNCTION_3();
  v6 = OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_11(v6, *MEMORY[0x1E0DEC448]);
  return OUTLINED_FUNCTION_24();
}

uint64_t sub_1AF6972A8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;

  if (a2)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    a1 = sub_1AF76A99C();
    OUTLINED_FUNCTION_5();
    v6 = (_BYTE *)v5;
    *(_QWORD *)(v5 + 24) = &unk_1E5FC1AC8;
    *(_QWORD *)(v5 + 32) = sub_1AF697D88();
    *v6 = a3 & 1;
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_22();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_7();
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_23();
    OUTLINED_FUNCTION_2();
    OUTLINED_FUNCTION_12();
    OUTLINED_FUNCTION_16();
    OUTLINED_FUNCTION_1();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4B8B0);
    OUTLINED_FUNCTION_3();
    v7 = OUTLINED_FUNCTION_14();
    OUTLINED_FUNCTION_11(v7, *MEMORY[0x1E0DEC448]);
    OUTLINED_FUNCTION_24();
  }
  return a1;
}

uint64_t sub_1AF6973E8(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_1AF76A18C();
  *a2 = 0;
  return result;
}

uint64_t sub_1AF697474(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_1AF76A1A4();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_1AF697510()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;

  v0 = sub_1AF76A1B0();
  v2 = v1;
  v3 = sub_1AF76A180();
  sub_1AF697C78(v0, v2);
  return v3;
}

uint64_t sub_1AF697554()
{
  return sub_1AF6975D4();
}

uint64_t sub_1AF69755C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v3 = sub_1AF76A1B0();
  v5 = v4;
  v6 = a2();
  sub_1AF697C78(v3, v5);
  return v6;
}

void sub_1AF6975A4(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v3;

  v3 = sub_1AF76A57C();
  a2(v3);
  OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_19();
}

uint64_t sub_1AF6975D4()
{
  return sub_1AF76A534();
}

void sub_1AF6975E0()
{
  sub_1AF6C3528();
}

uint64_t sub_1AF6975E8(uint64_t a1)
{
  _QWORD *v1;

  return sub_1AF6976D4(a1, *v1);
}

uint64_t sub_1AF6975F0()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;

  v0 = sub_1AF76A1B0();
  v2 = v1;
  sub_1AF76AF18();
  sub_1AF76A1BC();
  v3 = sub_1AF76AF3C();
  sub_1AF697C78(v0, v2);
  return v3;
}

uint64_t sub_1AF697664()
{
  uint64_t v0;

  sub_1AF76A57C();
  sub_1AF76AF18();
  sub_1AF76A5AC();
  v0 = sub_1AF76AF3C();
  swift_bridgeObjectRelease();
  return v0;
}

void sub_1AF6976D8()
{
  uint64_t *v0;

  sub_1AF6975A4(*v0, (void (*)(uint64_t))MEMORY[0x1E0CB1940]);
}

uint64_t sub_1AF6976F8(uint64_t a1, id *a2)
{
  return sub_1AF69807C(a1, a2);
}

uint64_t sub_1AF69770C(uint64_t a1, id *a2)
{
  return sub_1AF69800C(a1, a2) & 1;
}

void sub_1AF697724()
{
  uint64_t *v0;

  sub_1AF6975A4(*v0, MEMORY[0x1E0DEA950]);
}

uint64_t sub_1AF697744()
{
  return sub_1AF697CD0();
}

uint64_t sub_1AF69774C()
{
  return sub_1AF697664();
}

void sub_1AF697754(_QWORD *a1@<X8>)
{
  uint64_t v2;

  sub_1AF6980E0();
  *a1 = v2;
}

uint64_t sub_1AF697778()
{
  uint64_t *v0;

  return sub_1AF69755C(*v0, MEMORY[0x1E0CB01F0]);
}

uint64_t sub_1AF6977A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1AF697510();
  *a1 = result;
  return result;
}

uint64_t sub_1AF6977C4()
{
  uint64_t *v0;

  return sub_1AF69755C(*v0, MEMORY[0x1E0CB0300]);
}

uint64_t sub_1AF6977E4()
{
  return sub_1AF6C34F0();
}

uint64_t sub_1AF6977EC()
{
  return sub_1AF6975F0();
}

uint64_t sub_1AF6977F4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  v5 = sub_1AF76A180();
  result = sub_1AF697C78(v3, v4);
  *a2 = v5;
  return result;
}

void sub_1AF69783C(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = sub_1AF6C3258();
  a1[1] = v2;
  OUTLINED_FUNCTION_19();
}

BOOL sub_1AF697860(uint64_t *a1, uint64_t *a2)
{
  return sub_1AF695C98(*a1, *a2);
}

uint64_t sub_1AF69786C()
{
  return sub_1AF695AB8();
}

uint64_t sub_1AF697878()
{
  return sub_1AF695A3C();
}

_QWORD *sub_1AF697884@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_1AF697890(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_1AF69789C()
{
  sub_1AF697B8C(qword_1EEE4A2D8, (uint64_t (*)(uint64_t))type metadata accessor for WFLogCategoryName, (uint64_t)&unk_1AF777A14);
  sub_1AF697B8C(&qword_1EEE4B910, (uint64_t (*)(uint64_t))type metadata accessor for WFLogCategoryName, (uint64_t)&unk_1AF7779BC);
  sub_1AF69810C();
  return sub_1AF76AA80();
}

uint64_t sub_1AF697940()
{
  sub_1AF697B8C(&qword_1EEE4B870, (uint64_t (*)(uint64_t))type metadata accessor for ProgressUserInfoKey, (uint64_t)&unk_1AF77771C);
  sub_1AF697B8C(&qword_1EEE4B878, (uint64_t (*)(uint64_t))type metadata accessor for ProgressUserInfoKey, (uint64_t)&unk_1AF7776BC);
  return sub_1AF76AA80();
}

void sub_1AF6979C4(uint64_t *a1@<X8>)
{
  uint64_t v2;

  v2 = sub_1AF76A558();
  OUTLINED_FUNCTION_4();
  *a1 = v2;
  OUTLINED_FUNCTION_9();
}

uint64_t sub_1AF6979FC@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1AF697A24(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1AF697A28()
{
  sub_1AF697B8C((unint64_t *)&qword_1EEE4B928, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_1AF777A54);
  sub_1AF697B8C((unint64_t *)&unk_1EEE4B930, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_1AF7778B0);
  return sub_1AF76AA80();
}

uint64_t sub_1AF697AAC()
{
  sub_1AF697B8C(&qword_1EEE4B880, (uint64_t (*)(uint64_t))type metadata accessor for LSPersistentIdentifier, (uint64_t)&unk_1AF7775C0);
  sub_1AF697B8C(&qword_1EEE4B888, (uint64_t (*)(uint64_t))type metadata accessor for LSPersistentIdentifier, (uint64_t)&unk_1AF777568);
  sub_1AF697D10();
  return sub_1AF76AA80();
}

void sub_1AF697B34()
{
  sub_1AF697B8C(&qword_1EEE4B840, (uint64_t (*)(uint64_t))type metadata accessor for LSPersistentIdentifier, (uint64_t)&unk_1AF777530);
}

void sub_1AF697B60()
{
  sub_1AF697B8C(&qword_1EEE4B848, (uint64_t (*)(uint64_t))type metadata accessor for LSPersistentIdentifier, (uint64_t)&unk_1AF777508);
}

void sub_1AF697B8C(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v5;

  if (!*a1)
  {
    v5 = a2(255);
    atomic_store(MEMORY[0x1B5DFC634](a3, v5), a1);
  }
  OUTLINED_FUNCTION_19();
}

void sub_1AF697BC8()
{
  sub_1AF697B8C(&qword_1EEE4B850, (uint64_t (*)(uint64_t))type metadata accessor for LSPersistentIdentifier, (uint64_t)&unk_1AF777598);
}

void sub_1AF697BF4()
{
  sub_1AF697B8C(&qword_1EEE4B858, (uint64_t (*)(uint64_t))type metadata accessor for ProgressUserInfoKey, (uint64_t)&unk_1AF777680);
}

void sub_1AF697C20()
{
  sub_1AF697B8C(&qword_1EEE4B860, (uint64_t (*)(uint64_t))type metadata accessor for ProgressUserInfoKey, (uint64_t)&unk_1AF777654);
}

void sub_1AF697C4C()
{
  sub_1AF697B8C(&qword_1EEE4B868, (uint64_t (*)(uint64_t))type metadata accessor for ProgressUserInfoKey, (uint64_t)&unk_1AF7776F0);
}

uint64_t sub_1AF697C78(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t sub_1AF697CBC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1AF697C78(a1, a2);
  return a1;
}

uint64_t sub_1AF697CD0()
{
  sub_1AF76A57C();
  sub_1AF76A5AC();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1AF697D10()
{
  unint64_t result;

  result = qword_1EEE4B890;
  if (!qword_1EEE4B890)
  {
    result = MEMORY[0x1B5DFC634](MEMORY[0x1E0CB0358], MEMORY[0x1E0CB0338]);
    atomic_store(result, (unint64_t *)&qword_1EEE4B890);
  }
  return result;
}

unint64_t sub_1AF697D4C()
{
  unint64_t result;

  result = qword_1EEE4B898;
  if (!qword_1EEE4B898)
  {
    result = MEMORY[0x1B5DFC634](&protocol conformance descriptor for XPCAppProtectionEventStream.Event.CodingKeys, &type metadata for XPCAppProtectionEventStream.Event.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4B898);
  }
  return result;
}

unint64_t sub_1AF697D88()
{
  unint64_t result;

  result = qword_1EEE4B8A0;
  if (!qword_1EEE4B8A0)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77805C, &unk_1E5FC1AC8);
    atomic_store(result, (unint64_t *)&qword_1EEE4B8A0);
  }
  return result;
}

unint64_t sub_1AF697DC4()
{
  unint64_t result;

  result = qword_1EEE4B8A8;
  if (!qword_1EEE4B8A8)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF778034, &unk_1E5FC1AC8);
    atomic_store(result, (unint64_t *)&qword_1EEE4B8A8);
  }
  return result;
}

_QWORD *__swift_memcpy8_8(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t sub_1AF697E0C(uint64_t a1, int a2)
{
  int v2;

  if (a2)
  {
    if (a2 == 1 || !*(_BYTE *)(a1 + 8))
    {
      if (*(_QWORD *)a1)
        v2 = -1;
      else
        v2 = 0;
    }
    else
    {
      v2 = *(_DWORD *)a1 + 1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1AF697E48(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 1)
  {
    *(_QWORD *)result = a2 - 2;
    if (a3 >= 2)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 2)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = 0;
  }
  return result;
}

void type metadata accessor for WFLogCategoryName(uint64_t a1)
{
  sub_1AF697EC0(a1, &qword_1ED01FB40);
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_1AF697EC0(a1, &qword_1ED01FB48);
}

void type metadata accessor for NSKeyValueChangeKey(uint64_t a1)
{
  sub_1AF697EC0(a1, &qword_1EEE4B8D0);
}

void sub_1AF697EC0(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

void sub_1AF697F04()
{
  sub_1AF697B8C(&qword_1EEE4B8D8, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_1AF777874);
}

void sub_1AF697F30()
{
  sub_1AF697B8C(&qword_1EEE4B8E0, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_1AF777848);
}

void sub_1AF697F5C()
{
  sub_1AF697B8C(&qword_1EEE4B8E8, (uint64_t (*)(uint64_t))type metadata accessor for WFLogCategoryName, (uint64_t)&unk_1AF777984);
}

void sub_1AF697F88()
{
  sub_1AF697B8C((unint64_t *)&unk_1EEE4B8F0, (uint64_t (*)(uint64_t))type metadata accessor for WFLogCategoryName, (uint64_t)&unk_1AF77795C);
}

void sub_1AF697FB4()
{
  sub_1AF697B8C(&qword_1ED01FB38, (uint64_t (*)(uint64_t))type metadata accessor for WFLogCategoryName, (uint64_t)&unk_1AF7779EC);
}

void sub_1AF697FE0()
{
  sub_1AF697B8C((unint64_t *)&unk_1EEE4B900, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_1AF7778E4);
}

uint64_t sub_1AF69800C(uint64_t a1, id *a2)
{
  _QWORD *v2;
  char v3;

  OUTLINED_FUNCTION_18(a1, a2);
  v3 = sub_1AF76A570();
  *v2 = 0;
  return v3 & 1;
}

uint64_t sub_1AF69807C(uint64_t a1, id *a2)
{
  _QWORD *v2;
  uint64_t result;

  OUTLINED_FUNCTION_18(a1, a2);
  result = sub_1AF76A564();
  *v2 = 0;
  return result;
}

void sub_1AF6980E0()
{
  sub_1AF76A57C();
  sub_1AF76A558();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_19();
}

unint64_t sub_1AF69810C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEE4B918;
  if (!qword_1EEE4B918)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE4B920);
    result = MEMORY[0x1B5DFC634](MEMORY[0x1E0DEA550], v1);
    atomic_store(result, (unint64_t *)&qword_1EEE4B918);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x1B5DFC628](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0);
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_1()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_2()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_3()
{
  return sub_1AF76A5B8();
}

uint64_t OUTLINED_FUNCTION_4()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_5()
{
  return swift_allocError();
}

uint64_t OUTLINED_FUNCTION_6()
{
  return sub_1AF76AD14();
}

unint64_t OUTLINED_FUNCTION_7()
{
  return sub_1AF697DC4();
}

uint64_t OUTLINED_FUNCTION_8()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_10()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(v3, a2, v2);
}

uint64_t OUTLINED_FUNCTION_12()
{
  return sub_1AF76A5B8();
}

uint64_t OUTLINED_FUNCTION_13()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_14()
{
  return sub_1AF76A990();
}

uint64_t OUTLINED_FUNCTION_16()
{
  return sub_1AF76A5B8();
}

uint64_t OUTLINED_FUNCTION_17()
{
  return sub_1AF76AB94();
}

void OUTLINED_FUNCTION_18(uint64_t a1, id *a2)
{

}

uint64_t OUTLINED_FUNCTION_21(uint64_t a1, char a2)
{
  return sub_1AF69670C(a1, a2);
}

uint64_t OUTLINED_FUNCTION_22()
{
  return sub_1AF76A960();
}

uint64_t OUTLINED_FUNCTION_23()
{
  return sub_1AF76A5B8();
}

uint64_t OUTLINED_FUNCTION_24()
{
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_27()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_28()
{
  return sub_1AF76A924();
}

uint64_t OUTLINED_FUNCTION_29()
{
  return swift_unknownObjectRelease();
}

BOOL RunnerProcess.init(rawValue:)(uint64_t a1)
{
  return a1 && a1 == 1;
}

void sub_1AF698330()
{
  sub_1AF6DC578();
}

void sub_1AF698338()
{
  sub_1AF6DC7A4();
}

BOOL sub_1AF698340@<W0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  _BOOL8 result;
  char v4;

  result = RunnerProcess.init(rawValue:)(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

unint64_t static RunnerConnection.ServiceSpec.SystemRunner.machName.getter()
{
  return OUTLINED_FUNCTION_8_0();
}

unint64_t static RunnerConnection.ServiceSpec.SystemRunner.domain.getter()
{
  return OUTLINED_FUNCTION_8_0();
}

unint64_t static RunnerConnection.ServiceSpec.SystemRunner.serviceIdentifier.getter()
{
  return 0xD00000000000001ALL;
}

unint64_t static RunnerConnection.ServiceSpec.XPCRunner.serviceName.getter()
{
  return 0xD00000000000002ELL;
}

void sub_1AF6983C0(void *a1@<X0>, char *a2@<X8>)
{
  void *v4;
  id v5;
  uint64_t v6;
  char v7;
  _OWORD v8[2];
  _BYTE v9[24];
  uint64_t v10;

  v4 = (void *)sub_1AF76A558();
  v5 = objc_msgSend(a1, sel_valueForEntitlement_, v4);

  if (v5)
  {
    sub_1AF76A8DC();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v8, 0, sizeof(v8));
  }
  sub_1AF69B124((uint64_t)v8, (uint64_t)v9);
  if (!v10)
  {

    sub_1AF69B16C((uint64_t)v9);
    goto LABEL_11;
  }
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_8;
  if ((objc_msgSend(a1, sel_isInvalid) & 1) != 0)
  {
    swift_bridgeObjectRelease();
LABEL_8:

    goto LABEL_11;
  }
  v6 = sub_1AF76AA8C();

  swift_bridgeObjectRelease();
  if (!v6)
  {
    v7 = 0;
    goto LABEL_12;
  }
LABEL_11:
  v7 = 1;
LABEL_12:
  *a2 = v7;
}

void RunnerConnection.Policy.Client.init(client:)(void *a1@<X0>, _BYTE *a2@<X8>)
{
  char v4;

  sub_1AF6983C0(objc_msgSend(a1, sel_remoteToken), &v4);

  *a2 = v4;
}

uint64_t RunnerConnection.Policy.Client.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1AF76AA8C();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t RunnerConnection.Policy.Client.rawValue.getter()
{
  return 0x74756374726F6853;
}

uint64_t sub_1AF6985D8@<X0>(BOOL *a1@<X8>)
{
  return RunnerConnection.Policy.Client.init(rawValue:)(a1);
}

uint64_t sub_1AF6985E4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = RunnerConnection.Policy.Client.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1AF698608@<X0>(void *a1@<X0>, _BOOL8 *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  unint64_t v15;
  unint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  _BOOL8 v20;
  os_unfair_lock_s *v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  os_unfair_lock_s *v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t result;
  uint64_t v41;
  unint64_t v42;
  __int128 v43;
  __int128 v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  unint64_t v51;

  v4 = sub_1AF76A354();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = ((uint64_t (*)(void))MEMORY[0x1E0C80A78])();
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v41 - v9;
  *((_QWORD *)&v50 + 1) = &type metadata for ShortcutsFeatureFlags;
  v51 = sub_1AF69B0B4();
  LOBYTE(v49) = 7;
  v11 = sub_1AF76A258();
  v12 = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v49);
  if ((v11 & 1) != 0)
  {
    v46 = v5;
    v47 = v4;
    objc_opt_self();
    v45 = a1;
    v13 = swift_dynamicCastObjCClass();
    v14 = v13 != 0;
    v15 = 0xD00000000000001FLL;
    if (!v13)
      v15 = 0xD000000000000023;
    v42 = v15;
    if (v13)
      v16 = 0x80000001AF780E00;
    else
      v16 = 0x80000001AF780DD0;
    v17 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
    objc_msgSend(v17, sel_if_auditToken);
    v43 = v50;
    v44 = v49;

    v18 = objc_allocWithZone(MEMORY[0x1E0D016E0]);
    v49 = v44;
    v50 = v43;
    sub_1AF6983C0(objc_msgSend(v18, sel_initWithAuditToken_, &v49), (char *)&v49);
    LODWORD(v44) = v49;
    if ((_BYTE)v49)
      v20 = 0;
    else
      v20 = v14;
    if (qword_1ED01FA90 != -1)
      v19 = swift_once();
    v21 = (os_unfair_lock_s *)qword_1ED01FB20;
    MEMORY[0x1E0C80A78](v19);
    *(&v41 - 2) = (uint64_t)"XPCRunner";
    swift_retain();
    os_unfair_lock_lock(v21 + 4);
    sub_1AF69E128(v22, (uint64_t (*)(void))sub_1AF69B1AC);
    os_unfair_lock_unlock(v21 + 4);
    swift_release();
    swift_bridgeObjectRetain();
    v23 = sub_1AF76A33C();
    v24 = sub_1AF76A804();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = OUTLINED_FUNCTION_16_0();
      v26 = OUTLINED_FUNCTION_16_0();
      *(_QWORD *)&v43 = a2;
      *(_QWORD *)&v49 = v26;
      *(_DWORD *)v25 = 136315906;
      v48 = v14;
      v27 = sub_1AF76A588();
      v48 = sub_1AF6AC2A0(v27, v28, (uint64_t *)&v49);
      OUTLINED_FUNCTION_11_0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 12) = 2080;
      swift_bridgeObjectRetain();
      v48 = sub_1AF6AC2A0(v42, v16, (uint64_t *)&v49);
      OUTLINED_FUNCTION_11_0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v25 + 22) = 2080;
      v48 = v20;
      v29 = sub_1AF76A588();
      v31 = OUTLINED_FUNCTION_13_0(v29, v30);
      OUTLINED_FUNCTION_4_0(v31);
      OUTLINED_FUNCTION_12_0();
      *(_WORD *)(v25 + 32) = 2080;
      LOBYTE(v48) = v44;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BAD0);
      v32 = sub_1AF76A588();
      v34 = OUTLINED_FUNCTION_13_0(v32, v33);
      OUTLINED_FUNCTION_4_0(v34);
      OUTLINED_FUNCTION_12_0();
      _os_log_impl(&dword_1AF681000, v23, v24, "run request ideally goes to %s because '%s', decided on %s for %s", (uint8_t *)v25, 0x2Au);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_7_0();
    }

    swift_bridgeObjectRelease_n();
    result = (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v10, v47);
  }
  else
  {
    if (qword_1ED01FA90 != -1)
      v12 = swift_once();
    v35 = (os_unfair_lock_s *)qword_1ED01FB20;
    MEMORY[0x1E0C80A78](v12);
    *(&v41 - 2) = (uint64_t)"XPCRunner";
    swift_retain();
    os_unfair_lock_lock(v35 + 4);
    sub_1AF69E128(v36, (uint64_t (*)(void))sub_1AF69B1AC);
    os_unfair_lock_unlock(v35 + 4);
    swift_release();
    v37 = sub_1AF76A33C();
    v38 = sub_1AF76A804();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = (uint8_t *)OUTLINED_FUNCTION_16_0();
      *(_WORD *)v39 = 0;
      _os_log_impl(&dword_1AF681000, v37, v38, "Shortcuts/system_runner=off, dispatching run to isolated process", v39, 2u);
      OUTLINED_FUNCTION_7_0();
    }

    result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    v20 = 0;
  }
  *a2 = v20;
  return result;
}

uint64_t sub_1AF698B40()
{
  uint64_t result;

  result = sub_1AF698B5C();
  qword_1EEE4B9A0 = result;
  return result;
}

uint64_t sub_1AF698B5C()
{
  id v0;
  id v1;
  id v2;
  uint64_t v4;

  sub_1AF69B0F0(0, &qword_1EEE4BAD8);
  v0 = sub_1AF698C80();
  v1 = (id)WFOutOfProcessWorkflowControllerVendorBSProtocol();
  objc_msgSend(v0, sel_setServer_, v1);

  v2 = (id)WFOutOfProcessWorkflowControllerHostBSProtocol();
  objc_msgSend(v0, sel_setClient_, v2);

  objc_msgSend(v0, sel_setClientMessagingExpectation_, 0);
  objc_msgSend(v0, sel_copy);
  sub_1AF76A8DC();

  swift_unknownObjectRelease();
  sub_1AF69B0F0(0, &qword_1EEE4BAE0);
  swift_dynamicCast();
  return v4;
}

id sub_1AF698C80()
{
  void *v0;
  id v1;

  v0 = (void *)sub_1AF76A558();
  swift_bridgeObjectRelease();
  v1 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_interfaceWithIdentifier_, v0);

  return v1;
}

id static RunnerConnection.bsServiceInterface.getter()
{
  if (qword_1EEE4B610 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_0();
  return (id)qword_1EEE4B9A0;
}

void static RunnerConnection.bsServiceInterface.setter(uint64_t a1)
{
  void *v2;

  if (qword_1EEE4B610 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_0();
  v2 = (void *)qword_1EEE4B9A0;
  qword_1EEE4B9A0 = a1;

}

void static RunnerConnection.bsServiceInterface.modify()
{
  if (qword_1EEE4B610 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_19();
}

uint64_t sub_1AF698E38()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR___WFRunnerConnection_policy);
}

uint64_t RunnerConnection.onInterruption.getter()
{
  return sub_1AF699168(&OBJC_IVAR___WFRunnerConnection_onInterruption);
}

uint64_t sub_1AF698E68(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t sub_1AF698E78(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t RunnerConnection.onInterruption.setter(uint64_t a1, uint64_t a2)
{
  return sub_1AF69924C(a1, a2, &OBJC_IVAR___WFRunnerConnection_onInterruption);
}

uint64_t sub_1AF698F38(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_1AF698F48@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1 + OBJC_IVAR___WFRunnerConnection_onInterruption);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_1AF69B1C4;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_1AF698E68(v4);
}

uint64_t sub_1AF698FDC(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_1AF69B1C4;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR___WFRunnerConnection_onInterruption);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  sub_1AF698E68(v3);
  return sub_1AF698F38(v8);
}

void RunnerConnection.onInterruption.modify()
{
  OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_19();
}

id sub_1AF6990E8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  _QWORD v9[6];

  v5 = a3();
  if (!v5)
    return OUTLINED_FUNCTION_5_0(0);
  v9[4] = v5;
  v9[5] = v6;
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 1107296256;
  v9[2] = sub_1AF698E78;
  v9[3] = a4;
  v7 = _Block_copy(v9);
  swift_release();
  return OUTLINED_FUNCTION_5_0(v7);
}

uint64_t RunnerConnection.onInvalidation.getter()
{
  return sub_1AF699168(&OBJC_IVAR___WFRunnerConnection_onInvalidation);
}

uint64_t sub_1AF699168(_QWORD *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v2 = (uint64_t *)(v1 + *a1);
  OUTLINED_FUNCTION_0_0();
  v3 = *v2;
  sub_1AF698E68(*v2);
  return v3;
}

uint64_t RunnerConnection.onInvalidation.setter(uint64_t a1, uint64_t a2)
{
  return sub_1AF69924C(a1, a2, &OBJC_IVAR___WFRunnerConnection_onInvalidation);
}

uint64_t sub_1AF69924C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t *v6;
  uint64_t v7;

  v6 = (uint64_t *)(v3 + *a3);
  OUTLINED_FUNCTION_0_0();
  v7 = *v6;
  *v6 = a1;
  v6[1] = a2;
  return sub_1AF698F38(v7);
}

uint64_t sub_1AF6992A0@<X0>(_QWORD *a1@<X0>, void (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)();

  v3 = (uint64_t *)(*a1 + OBJC_IVAR___WFRunnerConnection_onInvalidation);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_1AF69AF70;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (void (*)())v6;
  return sub_1AF698E68(v4);
}

uint64_t sub_1AF699334(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_1AF69AF70;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR___WFRunnerConnection_onInvalidation);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  sub_1AF698E68(v3);
  return sub_1AF698F38(v8);
}

void RunnerConnection.onInvalidation.modify()
{
  OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_19();
}

void RunnerConnection.__allocating_init(runDescriptor:host:onInterruption:onInvalidation:)()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_1_0();
  v0 = (void *)OUTLINED_FUNCTION_2_0();
  RunnerConnection.init(runDescriptor:host:onInterruption:onInvalidation:)(v0, v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_6_0();
}

id RunnerConnection.init(runDescriptor:host:onInterruption:onInvalidation:)(id a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char *v6;
  char *v7;
  char *v11;
  char *v12;
  char *v13;
  void *v14;
  char v15;
  char *v16;
  id v17;
  objc_class *ObjectType;
  _BOOL8 v22;
  objc_super v23;

  v7 = v6;
  ObjectType = (objc_class *)swift_getObjectType();
  OUTLINED_FUNCTION_18_0();
  v11 = &v7[OBJC_IVAR___WFRunnerConnection_connection];
  *(_QWORD *)v11 = 0;
  v11[8] = -1;
  v12 = &v7[OBJC_IVAR___WFRunnerConnection_onInterruption];
  *(_QWORD *)v12 = 0;
  *((_QWORD *)v12 + 1) = 0;
  v13 = &v7[OBJC_IVAR___WFRunnerConnection_onInvalidation];
  *(_QWORD *)v13 = 0;
  *((_QWORD *)v13 + 1) = 0;
  swift_unknownObjectWeakAssign();
  v14 = *(void **)v11;
  *(_QWORD *)v11 = 0;
  v15 = v11[8];
  v11[8] = -1;
  v16 = v7;
  sub_1AF6995F0(v14, v15);
  OUTLINED_FUNCTION_0_0();
  *(_QWORD *)v12 = a3;
  *((_QWORD *)v12 + 1) = a4;
  swift_retain();
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_0_0();
  *(_QWORD *)v13 = a5;
  *((_QWORD *)v13 + 1) = a6;
  swift_retain();
  OUTLINED_FUNCTION_15();
  if (a1)
  {
    a1 = a1;
    sub_1AF698608(a1, &v22);
    *(_QWORD *)&v16[OBJC_IVAR___WFRunnerConnection_policy] = v22;
  }
  else
  {
    *(_QWORD *)&v16[OBJC_IVAR___WFRunnerConnection_policy] = 0;
  }

  v23.receiver = v16;
  v23.super_class = ObjectType;
  v17 = objc_msgSendSuper2(&v23, sel_init);

  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return v17;
}

void sub_1AF6995F0(id a1, char a2)
{
  if (a2 != -1)

}

void RunnerConnection.__allocating_init(policy:host:onInterruption:onInvalidation:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_1_0();
  v0 = (uint64_t *)OUTLINED_FUNCTION_2_0();
  RunnerConnection.init(policy:host:onInterruption:onInvalidation:)(v0, v1, v2, v3, v4, v5);
  OUTLINED_FUNCTION_6_0();
}

id RunnerConnection.init(policy:host:onInterruption:onInvalidation:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char *v6;
  char *v7;
  uint64_t ObjectType;
  char *v13;
  uint64_t *v14;
  uint64_t *v15;
  void *v16;
  char v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v24;
  objc_class *v25;
  objc_super v26;

  v7 = v6;
  ObjectType = swift_getObjectType();
  v24 = *a1;
  v25 = (objc_class *)ObjectType;
  OUTLINED_FUNCTION_18_0();
  v13 = &v7[OBJC_IVAR___WFRunnerConnection_connection];
  *(_QWORD *)v13 = 0;
  v13[8] = -1;
  v14 = (uint64_t *)&v7[OBJC_IVAR___WFRunnerConnection_onInterruption];
  *v14 = 0;
  v14[1] = 0;
  v15 = (uint64_t *)&v7[OBJC_IVAR___WFRunnerConnection_onInvalidation];
  *v15 = 0;
  v15[1] = 0;
  swift_unknownObjectWeakAssign();
  v16 = *(void **)v13;
  *(_QWORD *)v13 = 0;
  v17 = v13[8];
  v13[8] = -1;
  v18 = v7;
  sub_1AF6995F0(v16, v17);
  OUTLINED_FUNCTION_0_0();
  v19 = *v14;
  *v14 = a3;
  v14[1] = a4;
  swift_retain();
  sub_1AF698F38(v19);
  OUTLINED_FUNCTION_0_0();
  v20 = *v15;
  *v15 = a5;
  v15[1] = a6;
  swift_retain();
  sub_1AF698F38(v20);
  *(_QWORD *)&v18[OBJC_IVAR___WFRunnerConnection_policy] = v24;

  v26.receiver = v18;
  v26.super_class = v25;
  v21 = objc_msgSendSuper2(&v26, sel_init);
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return v21;
}

void RunnerConnection.asyncRunner(reason:)()
{
  sub_1AF699890(1);
}

void sub_1AF699890(char a1)
{
  uint64_t v1;
  char v3;
  void *v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  __int128 v9;
  __int128 v10;

  v4 = (void *)sub_1AF699B84();
  if (!v1)
  {
    if ((v3 & 1) != 0)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4B9E8);
      v5 = swift_allocObject();
      *(_OWORD *)(v5 + 16) = xmmword_1AF777B30;
      sub_1AF69B0F0(0, &qword_1EEE4B9F0);
      v6 = v4;
      *(_QWORD *)(v5 + 32) = sub_1AF69A454();
      *(_QWORD *)(v5 + 40) = sub_1AF69A454();
      *(_QWORD *)&v10 = v5;
      sub_1AF76A60C();
      sub_1AF69B0F0(0, &qword_1EEE4B9F8);
      v7 = (void *)sub_1AF76A5F4();
      swift_bridgeObjectRelease();
      v8 = objc_msgSend(v6, sel_remoteTargetWithLaunchingAssertionAttributes_, v7);

      if (v8)
      {
        sub_1AF76A8DC();

        swift_unknownObjectRelease();
        sub_1AF69AF78(&v9, &v10);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED01F860);
        swift_dynamicCast();
      }
      else
      {
        __break(1u);
      }
    }
    else
    {
      objc_msgSend(objc_allocWithZone((Class)WFOutOfProcessWorkflowControllerXPCProxy), sel_initWithConnection_isSynchronous_, v4, (a1 & 1) == 0);

    }
  }
}

void RunnerConnection.syncRunner(reason:)()
{
  sub_1AF699890(0);
}

id sub_1AF699AD4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;

  v7 = sub_1AF76A57C();
  v9 = v8;
  v10 = a1;
  v11 = (void *)a5(v7, v9);
  OUTLINED_FUNCTION_12_0();

  return OUTLINED_FUNCTION_5_0(v11);
}

uint64_t sub_1AF699B84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  os_unfair_lock_s *v10;
  os_unfair_lock_s *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint8_t *v16;
  uint64_t v17;
  void *v18;
  int v19;
  void (*v20)(void *);
  id v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  double v28;
  void *v29;
  uint64_t v30;
  void *v31;
  char *v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  void (*v39)(char *, id);
  id v40;
  id v41;
  void *v42;
  id v43;
  id v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  id v52;
  id v53;
  void *v54;
  char v55;
  id v56;
  uint64_t result;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  int v69;
  void *v70;
  uint64_t ObjectType;
  char *v72;
  unint64_t v73;
  id v74;
  CFTimeInterval aBlock;
  uint64_t v76;
  void *v77;
  void *v78;
  void *v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;

  v2 = v0;
  v82 = *MEMORY[0x1E0C80C00];
  ObjectType = swift_getObjectType();
  v3 = (_QWORD *)sub_1AF76A234();
  v73 = *(v3 - 1);
  v74 = v3;
  MEMORY[0x1E0C80A78](v3);
  v72 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1AF76A354();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED01FA90 != -1)
    v7 = swift_once();
  v10 = (os_unfair_lock_s *)qword_1ED01FB20;
  MEMORY[0x1E0C80A78](v7);
  *(&v58 - 2) = (uint64_t)"XPCRunner";
  v11 = v10 + 4;
  swift_retain();
  os_unfair_lock_lock(v10 + 4);
  sub_1AF69E128(v12, (uint64_t (*)(void))sub_1AF69AF88);
  if (v1)
    goto LABEL_24;
  os_unfair_lock_unlock(v10 + 4);
  swift_release();
  v13 = sub_1AF76A33C();
  v14 = sub_1AF76A804();
  v11 = (os_unfair_lock_s *)v14;
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    v70 = (void *)v5;
    v16 = v15;
    *(_DWORD *)v15 = 134217984;
    aBlock = CACurrentMediaTime();
    sub_1AF76A8C4();
    _os_log_impl(&dword_1AF681000, v13, (os_log_type_t)v11, "[Performance] Opening connection to runner: %f", v16, 0xCu);
    v5 = (uint64_t)v70;
    MEMORY[0x1B5DFC6E8](v16, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  v17 = v2 + OBJC_IVAR___WFRunnerConnection_connection;
  v18 = *(void **)(v2 + OBJC_IVAR___WFRunnerConnection_connection);
  v19 = *(unsigned __int8 *)(v2 + OBJC_IVAR___WFRunnerConnection_connection + 8);
  if (v19 != 255)
  {
    v20 = 0;
    v21 = *(id *)(v2 + OBJC_IVAR___WFRunnerConnection_connection);
LABEL_18:
    sub_1AF69B004(v18, v19);
    sub_1AF698F38((uint64_t)v20);
    return (uint64_t)v21;
  }
  v22 = *(double *)(v2 + OBJC_IVAR___WFRunnerConnection_policy);
  v70 = *(void **)(v2 + OBJC_IVAR___WFRunnerConnection_connection);
  v69 = 255;
  if (v22 == 0.0)
  {
    ObjectType = 0;
    dlopen("/System/Library/PrivateFrameworks/WorkflowKit.framework/WorkflowKit", 0);
    v23 = MEMORY[0x1B5DFC7B4](v2 + OBJC_IVAR___WFRunnerConnection_host);
    if (v23)
    {
      v24 = v23;
      sub_1AF69B0F0(0, &qword_1EEE4B428);
      v21 = sub_1AF69A8C8();
      v25 = WFOutOfProcessWorkflowControllerVendorXPCInterface();
      objc_msgSend(v21, sel_setRemoteObjectInterface_, v25);

      v26 = WFOutOfProcessWorkflowControllerHostXPCInterface();
      objc_msgSend(v21, sel_setExportedInterface_, v26);

      objc_msgSend(v21, sel_setExportedObject_, v24);
      v27 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v79 = sub_1AF69AFC4;
      v80 = v27;
      v28 = MEMORY[0x1E0C809B0];
      aBlock = MEMORY[0x1E0C809B0];
      v76 = 1107296256;
      v77 = sub_1AF698E78;
      v78 = &block_descriptor_38;
      v29 = _Block_copy(&aBlock);
      swift_release();
      objc_msgSend(v21, sel_setInterruptionHandler_, v29);
      _Block_release(v29);
      v30 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v79 = sub_1AF69AFE4;
      v80 = v30;
      aBlock = v28;
      v76 = 1107296256;
      v77 = sub_1AF698E78;
      v78 = &block_descriptor_42;
      v31 = _Block_copy(&aBlock);
      swift_release();
      objc_msgSend(v21, sel_setInvalidationHandler_, v31);
      _Block_release(v31);
      v68 = v24;
      v32 = v72;
      sub_1AF76A228();
      v33 = sub_1AF76A21C();
      LOBYTE(v31) = v33;
      LOBYTE(v29) = v34;
      v35 = v33 >> 8;
      v36 = v33 >> 16;
      v37 = v33 >> 24;
      v38 = HIDWORD(v33);
      v59 = v33 >> 40;
      v60 = HIWORD(v33);
      v61 = HIBYTE(v33);
      v62 = v34 >> 8;
      v63 = v34 >> 16;
      v64 = v34 >> 24;
      v65 = HIDWORD(v34);
      v66 = v34 >> 40;
      v67 = HIWORD(v34);
      v39 = *(void (**)(char *, id))(v73 + 8);
      v73 = HIBYTE(v34);
      v39(v32, v74);
      LOBYTE(aBlock) = (_BYTE)v31;
      BYTE1(aBlock) = v35;
      BYTE2(aBlock) = v36;
      BYTE3(aBlock) = v37;
      BYTE4(aBlock) = v38;
      BYTE5(aBlock) = v59;
      BYTE6(aBlock) = v60;
      HIBYTE(aBlock) = v61;
      LOBYTE(v76) = (_BYTE)v29;
      BYTE1(v76) = v62;
      BYTE2(v76) = v63;
      BYTE3(v76) = v64;
      BYTE4(v76) = v65;
      BYTE5(v76) = v66;
      BYTE6(v76) = v67;
      HIBYTE(v76) = v73;
      v40 = objc_msgSend(v21, sel__xpcConnection);
      xpc_connection_set_oneshot_instance();
      swift_unknownObjectRelease();
      v41 = objc_msgSend(v21, sel__xpcConnection);
      xpc_connection_set_qos_class_floor();
      swift_unknownObjectRelease();
      objc_msgSend(v21, sel_resume);
      swift_unknownObjectRelease();
      v42 = *(void **)v17;
      *(_QWORD *)v17 = v21;
      LOBYTE(v29) = *(_BYTE *)(v17 + 8);
      *(_BYTE *)(v17 + 8) = 0;
      v43 = v21;
      sub_1AF6995F0(v42, (char)v29);
      v20 = 0;
LABEL_17:
      v18 = v70;
      LOBYTE(v19) = v69;
      goto LABEL_18;
    }
    __break(1u);
    goto LABEL_21;
  }
  if (*(_QWORD *)&v22 == 1)
  {
    sub_1AF69B0F0(0, &qword_1EEE4BA60);
    v74 = sub_1AF69A4E4(0xD000000000000017, 0x80000001AF780B10, 0xD00000000000001ALL, 0x80000001AF780B30, 0, 0);
    if (v74)
    {
      v44 = objc_msgSend((id)objc_opt_self(), sel_connectionWithEndpoint_, v74);
      if (v44)
      {
        v45 = v44;
        v81 = &unk_1EEE82C78;
        v46 = swift_dynamicCastObjCProtocolConditional();
        if (v46)
        {
          v21 = (id)v46;
          v47 = swift_allocObject();
          swift_unknownObjectWeakInit();
          v48 = swift_allocObject();
          v49 = ObjectType;
          *(_QWORD *)(v48 + 16) = v47;
          *(_QWORD *)(v48 + 24) = v49;
          v50 = swift_allocObject();
          *(_QWORD *)(v50 + 16) = sub_1AF69B03C;
          *(_QWORD *)(v50 + 24) = v48;
          v79 = sub_1AF69B054;
          v80 = v50;
          aBlock = MEMORY[0x1E0C809B0];
          v76 = 1107296256;
          v77 = sub_1AF69A88C;
          v78 = &block_descriptor_52;
          v51 = _Block_copy(&aBlock);
          v52 = v45;
          swift_retain();
          swift_release();
          objc_msgSend(v21, sel_configureConnection_, v51);

          _Block_release(v51);
          LOBYTE(v51) = swift_isEscapingClosureAtFileLocation();
          swift_release();
          if ((v51 & 1) != 0)
            __break(1u);
          v53 = v52;
          objc_msgSend(v21, sel_activate);

          v54 = *(void **)v17;
          *(_QWORD *)v17 = v21;
          v55 = *(_BYTE *)(v17 + 8);
          *(_BYTE *)(v17 + 8) = 1;
          v56 = v53;
          sub_1AF6995F0(v54, v55);
          v20 = sub_1AF69B03C;
          goto LABEL_17;
        }
        goto LABEL_23;
      }
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      os_unfair_lock_unlock(v11);
      __break(1u);
      goto LABEL_25;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
LABEL_25:
  aBlock = v22;
  result = sub_1AF76AE88();
  __break(1u);
  return result;
}

id sub_1AF69A454()
{
  void *v0;
  void *v1;
  id v2;

  v0 = (void *)sub_1AF76A558();
  swift_bridgeObjectRelease();
  v1 = (void *)sub_1AF76A558();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_attributeWithDomain_name_, v0, v1);

  return v2;
}

id sub_1AF69A4E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v7;
  void *v8;
  void *v9;
  id v10;

  v7 = (void *)sub_1AF76A558();
  swift_bridgeObjectRelease();
  v8 = (void *)sub_1AF76A558();
  swift_bridgeObjectRelease();
  if (a6)
  {
    v9 = (void *)sub_1AF76A558();
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = 0;
  }
  v10 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_endpointForMachName_service_instance_, v7, v8, v9);

  return v10;
}

void sub_1AF69A5B4(void *a1, uint64_t a2)
{
  uint64_t v4;
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t aBlock;
  uint64_t v13;
  void (*v14)(uint64_t, void *);
  void *v15;
  void (*v16)(uint64_t);
  uint64_t v17;

  v4 = a2 + 16;
  v5 = objc_msgSend((id)objc_opt_self(), sel_userInteractive);
  objc_msgSend(a1, sel_setServiceQuality_, v5);

  if (qword_1EEE4B610 != -1)
    swift_once();
  swift_beginAccess();
  objc_msgSend(a1, sel_setInterface_, qword_1EEE4B9A0);
  v16 = sub_1AF69B074;
  v17 = a2;
  v6 = MEMORY[0x1E0C809B0];
  aBlock = MEMORY[0x1E0C809B0];
  v13 = 1107296256;
  v14 = sub_1AF69A7C4;
  v15 = &block_descriptor_55;
  v7 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_setInterruptionHandler_, v7);
  _Block_release(v7);
  v16 = sub_1AF69B094;
  v17 = a2;
  aBlock = v6;
  v13 = 1107296256;
  v14 = sub_1AF69A7C4;
  v15 = &block_descriptor_58;
  v8 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_setInvalidationHandler_, v8);
  _Block_release(v8);
  swift_beginAccess();
  v9 = MEMORY[0x1B5DFC7B4](v4);
  if (v9
    && (v10 = (void *)v9, v11 = MEMORY[0x1B5DFC7B4](v9 + OBJC_IVAR___WFRunnerConnection_host), v10, v11))
  {
    objc_msgSend(a1, sel_setInterfaceTarget_, v11);
    swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

void sub_1AF69A7C4(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

void sub_1AF69A814(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void (**v7)(void);
  void (*v8)(void);

  v4 = a2 + 16;
  OUTLINED_FUNCTION_0_0();
  v5 = MEMORY[0x1B5DFC7B4](v4);
  if (v5)
  {
    v6 = (void *)v5;
    v7 = (void (**)(void))(v5 + *a3);
    OUTLINED_FUNCTION_0_0();
    v8 = *v7;
    if (*v7)
    {
      OUTLINED_FUNCTION_17_0();
      v8();
      OUTLINED_FUNCTION_14_0();
    }
    else
    {

    }
  }
  OUTLINED_FUNCTION_9_0();
}

uint64_t sub_1AF69A88C(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_unknownObjectRetain();
  v3(a2);
  return swift_unknownObjectRelease();
}

id sub_1AF69A8C8()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v1 = (void *)sub_1AF76A558();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithServiceName_, v1);

  return v2;
}

void sub_1AF69A938(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void (**v6)(void);
  void (*v7)(void);

  v3 = a1 + 16;
  OUTLINED_FUNCTION_0_0();
  v4 = MEMORY[0x1B5DFC7B4](v3);
  if (v4)
  {
    v5 = (void *)v4;
    v6 = (void (**)(void))(v4 + *a2);
    OUTLINED_FUNCTION_0_0();
    v7 = *v6;
    if (*v6)
    {
      OUTLINED_FUNCTION_17_0();
      v7();
      OUTLINED_FUNCTION_14_0();
    }
    else
    {

    }
  }
  OUTLINED_FUNCTION_9_0();
}

Swift::Void __swiftcall RunnerConnection.invalidate()()
{
  uint64_t v0;

  if (*(unsigned __int8 *)(v0 + OBJC_IVAR___WFRunnerConnection_connection + 8) != 255)
    objc_msgSend(*(id *)(v0 + OBJC_IVAR___WFRunnerConnection_connection), sel_invalidate);
}

id RunnerConnection.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void RunnerConnection.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id RunnerConnection.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t RunnerProcess.debugDescription.getter(uint64_t a1)
{
  uint64_t result;

  result = 0xD000000000000016;
  if (!a1)
    return 0xD000000000000023;
  if (a1 != 1)
  {
    result = sub_1AF76AE88();
    __break(1u);
  }
  return result;
}

unint64_t sub_1AF69AB74()
{
  unint64_t result;

  result = qword_1EEE4B9D0;
  if (!qword_1EEE4B9D0)
  {
    result = MEMORY[0x1B5DFC634](&protocol conformance descriptor for RunnerProcess, &type metadata for RunnerProcess);
    atomic_store(result, (unint64_t *)&qword_1EEE4B9D0);
  }
  return result;
}

unint64_t sub_1AF69ABB4()
{
  unint64_t result;

  result = qword_1EEE4B9D8;
  if (!qword_1EEE4B9D8)
  {
    result = MEMORY[0x1B5DFC634](&protocol conformance descriptor for RunnerConnection.Policy.Client, &type metadata for RunnerConnection.Policy.Client);
    atomic_store(result, (unint64_t *)&qword_1EEE4B9D8);
  }
  return result;
}

uint64_t sub_1AF69ABF0()
{
  uint64_t *v0;

  return RunnerProcess.debugDescription.getter(*v0);
}

void type metadata accessor for RunnerProcess()
{
  OUTLINED_FUNCTION_25();
}

uint64_t type metadata accessor for RunnerConnection()
{
  return objc_opt_self();
}

uint64_t method lookup function for RunnerConnection()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RunnerConnection.__allocating_init(runDescriptor:host:onInterruption:onInvalidation:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of RunnerConnection.__allocating_init(policy:host:onInterruption:onInvalidation:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

void type metadata accessor for RunnerConnection.ServiceSpec()
{
  OUTLINED_FUNCTION_25();
}

void type metadata accessor for RunnerConnection.ServiceSpec.SystemRunner()
{
  OUTLINED_FUNCTION_25();
}

void type metadata accessor for RunnerConnection.ServiceSpec.XPCRunner()
{
  OUTLINED_FUNCTION_25();
}

void type metadata accessor for RunnerConnection.Policy()
{
  OUTLINED_FUNCTION_25();
}

uint64_t getEnumTagSinglePayload for RunnerConnection.Policy.Client(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for RunnerConnection.Policy.Client(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1AF69AD14 + 4 * byte_1AF777B40[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1AF69AD34 + 4 * byte_1AF777B45[v4]))();
}

_BYTE *sub_1AF69AD14(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1AF69AD34(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AF69AD3C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AF69AD44(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AF69AD4C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AF69AD54(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_1AF69AD60()
{
  return 0;
}

void type metadata accessor for RunnerConnection.Policy.Client()
{
  OUTLINED_FUNCTION_25();
}

uint64_t initializeBufferWithCopyOfBuffer for RunnerConnection.XPCConnection(uint64_t a1, uint64_t a2)
{
  void *v3;
  char v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v4;
  v5 = v3;
  return a1;
}

void destroy for RunnerConnection.XPCConnection(id *a1)
{

}

uint64_t assignWithCopy for RunnerConnection.XPCConnection(uint64_t a1, uint64_t a2)
{
  void *v3;
  char v4;
  void *v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(_BYTE *)(a2 + 8);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v4;
  v6 = v3;

  return a1;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t assignWithTake for RunnerConnection.XPCConnection(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;

  return a1;
}

uint64_t getEnumTagSinglePayload for RunnerConnection.XPCConnection(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 9))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 1)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RunnerConnection.XPCConnection(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_1AF69AEBC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_1AF69AEC4(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for RunnerConnection.XPCConnection()
{
  return &type metadata for RunnerConnection.XPCConnection;
}

uint64_t sub_1AF69AEE0()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1AF69AF04()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t sub_1AF69AF28(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

uint64_t sub_1AF69AF4C()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1AF69AF70()
{
  uint64_t v0;

  sub_1AF6D5114(*(void (**)(void))(v0 + 16));
}

_OWORD *sub_1AF69AF78(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_1AF69AF88@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1AF69CD60(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1AF69AFA0()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1AF69AFC4()
{
  uint64_t v0;

  sub_1AF69A938(v0, &OBJC_IVAR___WFRunnerConnection_onInterruption);
}

void sub_1AF69AFE4()
{
  uint64_t v0;

  sub_1AF69A938(v0, &OBJC_IVAR___WFRunnerConnection_onInvalidation);
}

id sub_1AF69B004(id result, char a2)
{
  if (a2 != -1)
    return result;
  return result;
}

uint64_t sub_1AF69B018()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1AF69B03C(void *a1)
{
  uint64_t v1;

  sub_1AF69A5B4(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1AF69B044()
{
  return swift_deallocObject();
}

uint64_t sub_1AF69B054()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

void sub_1AF69B074(uint64_t a1)
{
  uint64_t v1;

  sub_1AF69A814(a1, v1, &OBJC_IVAR___WFRunnerConnection_onInterruption);
}

void sub_1AF69B094(uint64_t a1)
{
  uint64_t v1;

  sub_1AF69A814(a1, v1, &OBJC_IVAR___WFRunnerConnection_onInvalidation);
}

unint64_t sub_1AF69B0B4()
{
  unint64_t result;

  result = qword_1ED01F858;
  if (!qword_1ED01F858)
  {
    result = MEMORY[0x1B5DFC634](&protocol conformance descriptor for ShortcutsFeatureFlags, &type metadata for ShortcutsFeatureFlags);
    atomic_store(result, (unint64_t *)&qword_1ED01F858);
  }
  return result;
}

void sub_1AF69B0F0(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    objc_opt_self();
    atomic_store(swift_getObjCClassMetadata(), a2);
  }
  OUTLINED_FUNCTION_19();
}

uint64_t sub_1AF69B124(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BAE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AF69B16C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BAE8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1AF69B1AC@<X0>(uint64_t a1@<X8>)
{
  return sub_1AF69AF88(a1);
}

uint64_t OUTLINED_FUNCTION_0_0()
{
  return swift_beginAccess();
}

id OUTLINED_FUNCTION_1_0()
{
  objc_class *v0;

  return objc_allocWithZone(v0);
}

uint64_t OUTLINED_FUNCTION_2_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_4_0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 144) = a1;
  return sub_1AF76A8C4();
}

id OUTLINED_FUNCTION_5_0(id a1)
{
  return a1;
}

void OUTLINED_FUNCTION_7_0()
{
  JUMPOUT(0x1B5DFC6E8);
}

unint64_t OUTLINED_FUNCTION_8_0()
{
  return 0xD000000000000017;
}

uint64_t OUTLINED_FUNCTION_11_0()
{
  return sub_1AF76A8C4();
}

uint64_t OUTLINED_FUNCTION_12_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_13_0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_1AF6AC2A0(a1, a2, (uint64_t *)(v2 - 128));
}

uint64_t OUTLINED_FUNCTION_14_0()
{
  uint64_t v0;

  return sub_1AF698F38(v0);
}

uint64_t OUTLINED_FUNCTION_15()
{
  uint64_t v0;

  return sub_1AF698F38(v0);
}

uint64_t OUTLINED_FUNCTION_16_0()
{
  return swift_slowAlloc();
}

void OUTLINED_FUNCTION_17_0()
{
  void *v0;
  uint64_t v1;

  sub_1AF698E68(v1);

}

uint64_t OUTLINED_FUNCTION_18_0()
{
  return swift_unknownObjectWeakInit();
}

ValueMetadata *type metadata accessor for XPCDictionary()
{
  return &type metadata for XPCDictionary;
}

uint64_t sub_1AF69B33C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t result;
  uint64_t v6;
  _QWORD aBlock[6];
  uint64_t v8;

  v8 = MEMORY[0x1E0DEE9D8];
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = &v8;
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = sub_1AF69B620;
  *(_QWORD *)(v3 + 24) = v2;
  aBlock[4] = sub_1AF69B634;
  aBlock[5] = v3;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1AF69B4CC;
  aBlock[3] = &block_descriptor_0;
  v4 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  xpc_dictionary_apply(a1, v4);
  _Block_release(v4);
  LOBYTE(a1) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((a1 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v6 = v8;
    swift_release();
    return v6;
  }
  return result;
}

uint64_t sub_1AF69B470(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = sub_1AF76A5C4();
  v6 = v5;
  sub_1AF6A649C();
  v7 = *(_QWORD *)(*a3 + 16);
  sub_1AF6A658C(v7);
  v8 = *a3;
  *(_QWORD *)(v8 + 16) = v7 + 1;
  v9 = v8 + 16 * v7;
  *(_QWORD *)(v9 + 32) = v4;
  *(_QWORD *)(v9 + 40) = v6;
  return 1;
}

uint64_t sub_1AF69B4CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v5)(uint64_t, uint64_t);
  char v6;

  v5 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 32);
  swift_unknownObjectRetain();
  v6 = v5(a2, a3);
  swift_unknownObjectRelease();
  return v6 & 1;
}

uint64_t sub_1AF69B51C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  const char *string;

  v4 = sub_1AF76A594();
  string = xpc_dictionary_get_string(a3, (const char *)(v4 + 32));
  swift_release();
  if (string)
    return sub_1AF76A5C4();
  else
    return 0;
}

uint64_t sub_1AF69B570(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (a2)
  {
    v3 = OUTLINED_FUNCTION_1_1();
    swift_bridgeObjectRelease();
    v4 = sub_1AF76A594();
    swift_bridgeObjectRelease();
    xpc_dictionary_set_string(v2, (const char *)(v3 + 32), (const char *)(v4 + 32));
    swift_release();
  }
  else
  {
    v5 = OUTLINED_FUNCTION_1_1();
    swift_bridgeObjectRelease();
    xpc_dictionary_set_value(v2, (const char *)(v5 + 32), 0);
  }
  return swift_release();
}

uint64_t sub_1AF69B614()
{
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_1AF69B620(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1AF69B470(a1, a2, *(uint64_t **)(v2 + 16));
}

uint64_t sub_1AF69B628()
{
  return OUTLINED_FUNCTION_0_1();
}

uint64_t sub_1AF69B634()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))() & 1;
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_0_1()
{
  return swift_deallocObject();
}

uint64_t OUTLINED_FUNCTION_1_1()
{
  return sub_1AF76A594();
}

id sub_1AF69B688()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for RunnerPrewarmManager()), sel_init);
  qword_1ED01F840 = (uint64_t)result;
  return result;
}

id RunnerPrewarmManager.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id static RunnerPrewarmManager.shared.getter()
{
  if (qword_1ED01F848 != -1)
    swift_once();
  return (id)qword_1ED01F840;
}

void *RunnerPrewarmManager.connection.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR___WFRunnerPrewarmManager_connection);
  OUTLINED_FUNCTION_0_0();
  v2 = *v1;
  v3 = v2;
  return v2;
}

void RunnerPrewarmManager.connection.setter(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;

  v3 = (void **)(v1 + OBJC_IVAR___WFRunnerPrewarmManager_connection);
  OUTLINED_FUNCTION_0_0();
  v4 = *v3;
  *v3 = a1;

  OUTLINED_FUNCTION_8_1();
}

uint64_t (*RunnerPrewarmManager.connection.modify())()
{
  OUTLINED_FUNCTION_0_0();
  return j__swift_endAccess;
}

void sub_1AF69B85C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  void **v14;
  uint64_t v15;
  os_unfair_lock_s *v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  os_unfair_lock_s *v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  os_unfair_lock_s *v32;
  char *v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  void *v41;
  void *v42;
  void *v43;
  _QWORD v44[2];
  char *v45;
  uint64_t v46;
  uint64_t aBlock[7];

  v2 = v1;
  v4 = sub_1AF76A354();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v6);
  v11 = (char *)v44 - v10;
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v44 - v12;
  v14 = (void **)(v2 + OBJC_IVAR___WFRunnerPrewarmManager_connection);
  v15 = OUTLINED_FUNCTION_0_0();
  if (*v14)
  {
    if (qword_1ED01FA90 != -1)
      v15 = swift_once();
    v16 = (os_unfair_lock_s *)qword_1ED01FB20;
    MEMORY[0x1E0C80A78](v15);
    OUTLINED_FUNCTION_3_0();
    swift_retain();
    os_unfair_lock_lock(v16 + 4);
    OUTLINED_FUNCTION_4_1(v17, (uint64_t (*)(void))sub_1AF69AF88);
    os_unfair_lock_unlock(v16 + 4);
    swift_release();
    v18 = sub_1AF76A33C();
    v19 = sub_1AF76A81C();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)OUTLINED_FUNCTION_16_0();
      *(_WORD *)v20 = 0;
      _os_log_impl(&dword_1AF681000, v18, v19, "Warm runner already waiting", v20, 2u);
      OUTLINED_FUNCTION_7_0();
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  else
  {
    v45 = v11;
    v46 = v4;
    if (qword_1ED01FA90 != -1)
      v15 = swift_once();
    v21 = (os_unfair_lock_s *)qword_1ED01FB20;
    MEMORY[0x1E0C80A78](v15);
    OUTLINED_FUNCTION_3_0();
    swift_retain();
    os_unfair_lock_lock(v21 + 4);
    OUTLINED_FUNCTION_4_1(v22, (uint64_t (*)(void))sub_1AF69B1AC);
    os_unfair_lock_unlock(v21 + 4);
    swift_release();
    v23 = sub_1AF76A33C();
    v24 = sub_1AF76A81C();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)OUTLINED_FUNCTION_16_0();
      *(_WORD *)v25 = 0;
      _os_log_impl(&dword_1AF681000, v23, v24, "Prewarming runner", v25, 2u);
      OUTLINED_FUNCTION_7_0();
    }

    v26 = *(void (**)(char *, uint64_t))(v5 + 8);
    v27 = v46;
    v26(v13, v46);
    aBlock[0] = 0;
    v28 = OUTLINED_FUNCTION_6_1();
    OUTLINED_FUNCTION_9_1();
    v29 = OUTLINED_FUNCTION_6_1();
    OUTLINED_FUNCTION_9_1();
    objc_allocWithZone((Class)type metadata accessor for RunnerConnection());
    swift_unknownObjectRetain();
    v30 = RunnerConnection.init(policy:host:onInterruption:onInvalidation:)(aBlock, a1, (uint64_t)sub_1AF69C03C, v28, (uint64_t)sub_1AF69C03C, v29);
    sub_1AF699890(0);
    if (v11)
    {
      v32 = (os_unfair_lock_s *)qword_1ED01FB20;
      MEMORY[0x1E0C80A78](v31);
      OUTLINED_FUNCTION_3_0();
      swift_retain();
      os_unfair_lock_lock(v32 + 4);
      v33 = v45;
      OUTLINED_FUNCTION_4_1(v34, (uint64_t (*)(void))sub_1AF69B1AC);
      os_unfair_lock_unlock(v32 + 4);
      swift_release();
      OUTLINED_FUNCTION_7_1();
      OUTLINED_FUNCTION_7_1();
      v35 = sub_1AF76A33C();
      v36 = sub_1AF76A810();
      if (os_log_type_enabled(v35, v36))
      {
        v37 = (uint8_t *)OUTLINED_FUNCTION_16_0();
        v38 = OUTLINED_FUNCTION_16_0();
        v44[1] = v30;
        v39 = (_QWORD *)v38;
        *(_DWORD *)v37 = 138412290;
        OUTLINED_FUNCTION_7_1();
        v40 = _swift_stdlib_bridgeErrorToNSError();
        aBlock[0] = v40;
        sub_1AF76A8C4();
        *v39 = v40;
        OUTLINED_FUNCTION_2_1();
        OUTLINED_FUNCTION_2_1();
        _os_log_impl(&dword_1AF681000, v35, v36, "Failed to prewarm, runner didn't come up: %@", v37, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BB58);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_7_0();
      }
      OUTLINED_FUNCTION_2_1();
      OUTLINED_FUNCTION_2_1();
      OUTLINED_FUNCTION_2_1();

      v26(v33, v27);
    }
    else
    {
      v41 = v31;
      aBlock[4] = (uint64_t)nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_1AF69BE38;
      aBlock[3] = (uint64_t)&block_descriptor_1;
      v42 = _Block_copy(aBlock);
      objc_msgSend(v41, sel_prewarmRunnerWithCompletion_, v42);
      _Block_release(v42);
      swift_unknownObjectRelease();
      v43 = *v14;
      *v14 = v30;

    }
  }
}

void sub_1AF69BDC0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void **v4;
  void *v5;

  v1 = a1 + 16;
  OUTLINED_FUNCTION_0_0();
  v2 = MEMORY[0x1B5DFC7B4](v1);
  if (v2)
  {
    v3 = (void *)v2;
    v4 = (void **)(v2 + OBJC_IVAR___WFRunnerPrewarmManager_connection);
    OUTLINED_FUNCTION_0_0();
    v5 = *v4;
    *v4 = 0;

  }
}

void sub_1AF69BE38(uint64_t a1, void *a2)
{
  void (*v3)(void *);
  id v4;

  v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3(a2);
  swift_release();

}

void sub_1AF69BEE0()
{
  uint64_t v0;
  void **v1;
  void *v2;

  v1 = (void **)(v0 + OBJC_IVAR___WFRunnerPrewarmManager_connection);
  OUTLINED_FUNCTION_0_0();
  v2 = *v1;
  *v1 = 0;

  OUTLINED_FUNCTION_8_1();
}

id RunnerPrewarmManager.init()()
{
  char *v0;
  objc_class *ObjectType;
  objc_super v3;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v0[OBJC_IVAR___WFRunnerPrewarmManager_connection] = 0;
  v3.receiver = v0;
  v3.super_class = ObjectType;
  return objc_msgSendSuper2(&v3, sel_init);
}

id RunnerPrewarmManager.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for RunnerPrewarmManager()
{
  return objc_opt_self();
}

uint64_t sub_1AF69C018()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1AF69C03C()
{
  uint64_t v0;

  sub_1AF69BDC0(v0);
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

void OUTLINED_FUNCTION_2_1()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_4_1(uint64_t a1, uint64_t (*a2)(void))
{
  return sub_1AF69E128(a1, a2);
}

uint64_t OUTLINED_FUNCTION_6_1()
{
  return swift_allocObject();
}

id OUTLINED_FUNCTION_7_1()
{
  void *v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_9_1()
{
  return swift_unknownObjectWeakInit();
}

unint64_t static XPCDistributedNotificationEventStream.name.getter()
{
  return 0xD00000000000001CLL;
}

uint64_t XPCDistributedNotificationEventStream.Event.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  OUTLINED_FUNCTION_6_2();
  return v1;
}

uint64_t XPCDistributedNotificationEventStream.Event.userInfo.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t XPCDistributedNotificationEventStream.Event.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  _QWORD *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16[5];
  uint64_t v17;

  sub_1AF696138(a1, (uint64_t)v16);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED01F670);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v5 = sub_1AF696438(v15);
    if (v2)
    {
      __swift_destroy_boxed_opaque_existential_1(a1);
      OUTLINED_FUNCTION_1_2();
      OUTLINED_FUNCTION_0_2();
      return swift_unknownObjectRelease();
    }
    else
    {
      v6 = v5;
      v7 = sub_1AF69B51C(1701667150, 0xE400000000000000, v5);
      v9 = sub_1AF6972A8(v7, v8, 0);
      v14 = v11;
      v17 = v9;
      swift_bridgeObjectRelease();
      v12 = xpc_dictionary_get_value(v6, "UserInfo");
      sub_1AF697180((uint64_t)v12, 1);
      OUTLINED_FUNCTION_3_1();
      result = _CFXPCCreateCFObjectFromXPCObject();
      if (result)
      {
        swift_unknownObjectRetain_n();
        OUTLINED_FUNCTION_8_2();
        swift_unknownObjectRelease_n();
        objc_opt_self();
        if (swift_dynamicCastObjCClass())
        {
          v16[0] = 0;
          sub_1AF76A4A4();
          OUTLINED_FUNCTION_7_2();
          v13 = v16[0];
          OUTLINED_FUNCTION_3_1();
          swift_unknownObjectRelease();
          OUTLINED_FUNCTION_1_2();
          OUTLINED_FUNCTION_0_2();
          OUTLINED_FUNCTION_4_2();
          result = OUTLINED_FUNCTION_12_0();
        }
        else
        {
          swift_unknownObjectRelease();
          OUTLINED_FUNCTION_1_2();
          OUTLINED_FUNCTION_0_2();
          OUTLINED_FUNCTION_4_2();
          OUTLINED_FUNCTION_12_0();
          OUTLINED_FUNCTION_7_2();
          result = OUTLINED_FUNCTION_3_1();
          v13 = 0;
        }
        *a2 = v17;
        a2[1] = v14;
        a2[2] = v13;
      }
      else
      {
        __break(1u);
      }
    }
  }
  else
  {
    sub_1AF69C51C();
    swift_allocError();
    swift_willThrow();
    return OUTLINED_FUNCTION_8_2();
  }
  return result;
}

uint64_t sub_1AF69C3B4()
{
  uint64_t v0;
  unsigned int v1;

  v0 = sub_1AF76AA8C();
  swift_bridgeObjectRelease();
  if (v0 == 1)
    v1 = 1;
  else
    v1 = 2;
  if (v0)
    return v1;
  else
    return 0;
}

uint64_t sub_1AF69C408(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6F666E4972657355;
  else
    return 1701667150;
}

uint64_t sub_1AF69C438()
{
  return sub_1AF76AF24();
}

uint64_t sub_1AF69C45C()
{
  sub_1AF76AF18();
  sub_1AF76AF24();
  return sub_1AF76AF3C();
}

void sub_1AF69C49C(char *a1, char *a2)
{
  sub_1AF695B3C(*a1, *a2);
}

void sub_1AF69C4A8()
{
  sub_1AF6DC5BC();
}

uint64_t sub_1AF69C4B0()
{
  return sub_1AF6DC668();
}

void sub_1AF69C4B8()
{
  sub_1AF6DC91C();
}

uint64_t sub_1AF69C4C0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1AF69C3B4();
  *a1 = result;
  return result;
}

uint64_t sub_1AF69C4EC@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1AF69C408(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1AF69C514()
{
  char *v0;

  return sub_1AF69C408(*v0);
}

unint64_t sub_1AF69C51C()
{
  unint64_t result;

  result = qword_1EEE4BB60;
  if (!qword_1EEE4BB60)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF777F20, &type metadata for XPCDistributedNotificationEventStream.Event.XPCEventDecodingError);
    atomic_store(result, (unint64_t *)&qword_1EEE4BB60);
  }
  return result;
}

uint64_t sub_1AF69C558@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1AF69C404();
  *a1 = result;
  return result;
}

void sub_1AF69C57C(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1AF69C588()
{
  sub_1AF697D88();
  return sub_1AF76AF90();
}

uint64_t sub_1AF69C5B0()
{
  sub_1AF697D88();
  return sub_1AF76AF9C();
}

uint64_t sub_1AF69C5E0()
{
  sub_1AF76AF18();
  sub_1AF76AF24();
  return sub_1AF76AF3C();
}

uint64_t XPCDistributedNotificationEventStream.Event.notification.getter()
{
  sub_1AF76A558();
  OUTLINED_FUNCTION_6_2();
  return sub_1AF76A030();
}

unint64_t XPCDistributedNotificationEventStream.Event.description.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  sub_1AF76A960();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1AF76A5B8();
  swift_bridgeObjectRelease();
  sub_1AF76A5B8();
  if (v1)
    sub_1AF76A4BC();
  sub_1AF76A5B8();
  swift_bridgeObjectRelease();
  sub_1AF76A5B8();
  return 0xD00000000000001BLL;
}

uint64_t sub_1AF69C78C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return XPCDistributedNotificationEventStream.Event.init(from:)(a1, a2);
}

unint64_t sub_1AF69C7A0()
{
  static XPCDistributedNotificationEventStream.name.getter();
  return 0xD00000000000001CLL;
}

unint64_t sub_1AF69C7BC(uint64_t a1)
{
  unint64_t result;

  result = sub_1AF69C7E0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1AF69C7E0()
{
  unint64_t result;

  result = qword_1ED01F658;
  if (!qword_1ED01F658)
  {
    result = MEMORY[0x1B5DFC634](&protocol conformance descriptor for XPCDistributedNotificationEventStream.Event, &type metadata for XPCDistributedNotificationEventStream.Event);
    atomic_store(result, (unint64_t *)&qword_1ED01F658);
  }
  return result;
}

unint64_t sub_1AF69C820()
{
  unint64_t result;

  result = qword_1ED01F660;
  if (!qword_1ED01F660)
  {
    result = MEMORY[0x1B5DFC634](&protocol conformance descriptor for XPCDistributedNotificationEventStream.Event, &type metadata for XPCDistributedNotificationEventStream.Event);
    atomic_store(result, (unint64_t *)&qword_1ED01F660);
  }
  return result;
}

void type metadata accessor for XPCDistributedNotificationEventStream()
{
  OUTLINED_FUNCTION_25();
}

uint64_t destroy for XPCDistributedNotificationEventStream.Event()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s19VoiceShortcutClient37XPCDistributedNotificationEventStreamV5EventVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_6_2();
  return a1;
}

_QWORD *assignWithCopy for XPCDistributedNotificationEventStream.Event(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for XPCDistributedNotificationEventStream.Event(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for XPCDistributedNotificationEventStream.Event(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for XPCDistributedNotificationEventStream.Event(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for XPCDistributedNotificationEventStream.Event()
{
  OUTLINED_FUNCTION_25();
}

uint64_t storeEnumTagSinglePayload for XPCDistributedNotificationEventStream.Event.XPCEventDecodingError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1AF69CA40 + 4 * byte_1AF777DC0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1AF69CA60 + 4 * byte_1AF777DC5[v4]))();
}

_BYTE *sub_1AF69CA40(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1AF69CA60(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AF69CA68(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AF69CA70(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AF69CA78(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AF69CA80(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for XPCDistributedNotificationEventStream.Event.XPCEventDecodingError()
{
  return &type metadata for XPCDistributedNotificationEventStream.Event.XPCEventDecodingError;
}

unint64_t sub_1AF69CAA0()
{
  unint64_t result;

  result = qword_1EEE4BB68;
  if (!qword_1EEE4BB68)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF777EF8, &type metadata for XPCDistributedNotificationEventStream.Event.XPCEventDecodingError);
    atomic_store(result, (unint64_t *)&qword_1EEE4BB68);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for XPCEndpointCodingError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 1) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v5 = v6 - 2;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t sub_1AF69CB64(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AF69CBB0 + 4 * byte_1AF777DCF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AF69CBE4 + 4 * byte_1AF777DCA[v4]))();
}

uint64_t sub_1AF69CBE4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AF69CBEC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AF69CBF4);
  return result;
}

uint64_t sub_1AF69CC00(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AF69CC08);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AF69CC0C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AF69CC14(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_1AF69CC20(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

void type metadata accessor for XPCDistributedNotificationEventStream.Event.CodingKeys()
{
  OUTLINED_FUNCTION_25();
}

unint64_t sub_1AF69CC3C()
{
  unint64_t result;

  result = qword_1EEE4BB70;
  if (!qword_1EEE4BB70)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77800C, &unk_1E5FC1AC8);
    atomic_store(result, (unint64_t *)&qword_1EEE4BB70);
  }
  return result;
}

unint64_t sub_1AF69CC7C()
{
  unint64_t result;

  result = qword_1EEE4BB78;
  if (!qword_1EEE4BB78)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF777F6C, &unk_1E5FC1AC8);
    atomic_store(result, (unint64_t *)&qword_1EEE4BB78);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_2()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_1_2()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_3_1()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_4_2()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_6_2()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_7_2()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_8_2()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0);
}

uint64_t static WFLog.subscript.getter(uint64_t a1)
{
  return sub_1AF69D5BC(a1, &qword_1ED01FA90, (os_unfair_lock_s **)&qword_1ED01FB20, (void (*)(uint64_t))sub_1AF69CD60);
}

uint64_t sub_1AF69CD18()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED01FAB0);
  result = swift_allocObject();
  *(_DWORD *)(result + 16) = 0;
  qword_1ED01FB20 = result;
  return result;
}

void sub_1AF69CD4C(uint64_t a1)
{
  sub_1AF69D110(a1, (void (*)(_QWORD))MEMORY[0x1E0DF2258], (uint64_t *)&off_1ED01FA98);
}

uint64_t sub_1AF69CD60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  char v12;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED01FB28);
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78]();
  OUTLINED_FUNCTION_17_1();
  v5 = sub_1AF76A354();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78]();
  OUTLINED_FUNCTION_4_3();
  v9 = v8 - v7;
  if (qword_1ED01FAA8 != -1)
    swift_once();
  swift_beginAccess();
  v10 = off_1ED01FA98;
  if (*((_QWORD *)off_1ED01FA98 + 2) && (v11 = sub_1AF6C3548(a1), (v12 & 1) != 0))
  {
    OUTLINED_FUNCTION_33(v9, v10[7] + *(_QWORD *)(v6 + 72) * v11, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16));
    OUTLINED_FUNCTION_33(a2, v9, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 32));
  }
  else
  {
    swift_endAccess();
    sub_1AF76A5C4();
    sub_1AF76A5C4();
    sub_1AF76A348();
    OUTLINED_FUNCTION_33(v2, a2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16));
    __swift_storeEnumTagSinglePayload(v2, 0, 1, v5);
    swift_beginAccess();
    sub_1AF69CF38();
  }
  return swift_endAccess();
}

void sub_1AF69CF38()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t *v3;
  void (*v4)(char *, uint64_t);
  uint64_t (*v5)(_QWORD);
  uint64_t (*v6)(_QWORD);
  uint64_t *v7;
  uint64_t *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  char v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;

  OUTLINED_FUNCTION_7_3();
  v3 = v2;
  v23 = v4;
  v6 = v5;
  v8 = v7;
  v9 = v0;
  v11 = v10;
  v13 = v12;
  __swift_instantiateConcreteTypeFromMangledName(v7);
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78]();
  OUTLINED_FUNCTION_18_1();
  v14 = v6(0);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78]();
  v17 = (char *)&v23 - v16;
  if (__swift_getEnumTagSinglePayload(v13, 1, v14) == 1)
  {
    sub_1AF69E688(v13, v8);
    v18 = sub_1AF6C3548(v11);
    if ((v19 & 1) != 0)
    {
      v20 = v18;
      swift_isUniquelyReferenced_nonNull_native();
      v24 = *v0;
      *v0 = 0x8000000000000000;
      __swift_instantiateConcreteTypeFromMangledName(v3);
      sub_1AF76AA14();
      v21 = v24;
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v15 + 32))(v1, *(_QWORD *)(v24 + 56) + *(_QWORD *)(v15 + 72) * v20, v14);
      type metadata accessor for WFLogCategoryName(0);
      sub_1AF69E648();
      sub_1AF76AA20();
      *v9 = v21;
      swift_bridgeObjectRelease();
      v22 = 0;
    }
    else
    {
      v22 = 1;
    }
    __swift_storeEnumTagSinglePayload(v1, v22, 1, v14);
    sub_1AF69E688(v1, v8);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 32))(v17, v13, v14);
    v23(v17, v11);
  }
  OUTLINED_FUNCTION_0_3();
}

const char *static WFLogSignpost.enableTelemetry.getter()
{
  return "enableTelemetry=YES";
}

void sub_1AF69D0FC(uint64_t a1)
{
  sub_1AF69D110(a1, (void (*)(_QWORD))MEMORY[0x1E0DF2170], (uint64_t *)&off_1EEE4BB80);
}

void sub_1AF69D110(uint64_t a1, void (*a2)(_QWORD), uint64_t *a3)
{
  type metadata accessor for WFLogCategoryName(0);
  a2(0);
  sub_1AF69E648();
  *a3 = sub_1AF76A4C8();
  OUTLINED_FUNCTION_9();
}

uint64_t sub_1AF69D168()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED01FAB0);
  result = swift_allocObject();
  *(_DWORD *)(result + 16) = 0;
  qword_1EEE4BB88 = result;
  return result;
}

uint64_t WFLogSignpost.signposter.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_3_2();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t WFLogSignpost.name.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(OUTLINED_FUNCTION_6_3() + 20));
}

uint64_t WFLogSignpost.state.getter()
{
  OUTLINED_FUNCTION_6_3();
  return swift_retain();
}

uint64_t WFLogSignpost.init(_:_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v12 = OUTLINED_FUNCTION_3_2();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a6, a1, v12);
  result = OUTLINED_FUNCTION_6_3();
  v14 = a6 + *(int *)(result + 20);
  *(_QWORD *)v14 = a2;
  *(_QWORD *)(v14 + 8) = a3;
  *(_BYTE *)(v14 + 16) = a4;
  *(_QWORD *)(a6 + *(int *)(result + 24)) = a5;
  return result;
}

void static WFLogSignpost.begin(_:_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  os_unfair_lock_s *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  uint64_t v38;
  unint64_t v39;

  OUTLINED_FUNCTION_7_3();
  v3 = v2;
  v35 = v5;
  v36 = v4;
  v39 = v6;
  v8 = v7;
  v37 = v9;
  v38 = OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_22_0();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_13_1();
  v12 = MEMORY[0x1E0C80A78](v11);
  v33 = (char *)&v33 - v13;
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v33 - v14;
  v34 = OUTLINED_FUNCTION_3_2();
  v16 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  OUTLINED_FUNCTION_4_3();
  v19 = v18 - v17;
  if (qword_1EEE4B628 != -1)
    swift_once();
  v20 = (os_unfair_lock_s *)(qword_1EEE4BB88 + 16);
  OUTLINED_FUNCTION_19_0();
  os_unfair_lock_lock(v20);
  OUTLINED_FUNCTION_29_0(v8, v19);
  os_unfair_lock_unlock(v20);
  OUTLINED_FUNCTION_20();
  sub_1AF76A2E8();
  sub_1AF76A2A0();
  v21 = (void *)sub_1AF76A2E8();
  sub_1AF76A870();
  sub_1AF76A294();
  if ((OUTLINED_FUNCTION_32() & 1) == 0)
  {

    (*(void (**)(uint64_t, char *, uint64_t))(v1 + 16))(v0, v15, v38);
    sub_1AF76A324();
    OUTLINED_FUNCTION_26();
    OUTLINED_FUNCTION_21_0();
    OUTLINED_FUNCTION_12_1();
    v22 = v35;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 32))(v35, v19, v34);
    v23 = OUTLINED_FUNCTION_6_3();
    v24 = (unint64_t *)(v22 + *(int *)(v23 + 20));
    v25 = v36;
    *v24 = v39;
    v24[1] = v25;
    OUTLINED_FUNCTION_23_0(v23, (uint64_t)v24);
    OUTLINED_FUNCTION_0_3();
    return;
  }
  if ((v37 & 1) == 0)
  {
    if (v39)
      goto LABEL_11;
    __break(1u);
  }
  if (HIDWORD(v39))
  {
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if (v39 >> 11 == 27)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  if (WORD1(v39) > 0x10u)
    goto LABEL_29;
LABEL_11:
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v33, v15, v38);
  if ((v8 & 0x8000000000000000) == 0)
  {
    if (HIDWORD(v8))
    {
      OUTLINED_FUNCTION_1_3();
      OUTLINED_FUNCTION_14_1();
      goto LABEL_35;
    }
    v26 = v3[2];
    v27 = v3[5];
    v28 = v3[6];
    OUTLINED_FUNCTION_16_0();
    if (v28)
    {
      OUTLINED_FUNCTION_10_0();
      if (!v30)
        goto LABEL_30;
      v29 = OUTLINED_FUNCTION_16_0();
    }
    else
    {
      v29 = 0;
    }
    if (v27)
    {
      OUTLINED_FUNCTION_9_2();
      if (!v30)
        goto LABEL_31;
      v31 = OUTLINED_FUNCTION_16_0();
    }
    else
    {
      v31 = 0;
    }
    OUTLINED_FUNCTION_8_3(v31);
    if (v29)
    {
      swift_bridgeObjectRetain();
      v32 = v26 + 40;
      do
      {
        OUTLINED_FUNCTION_24_0();
        OUTLINED_FUNCTION_5_1();
        OUTLINED_FUNCTION_25_0();
        v32 += 16;
        --v29;
      }
      while (v29);
      OUTLINED_FUNCTION_31();
    }
    __break(1u);
    goto LABEL_28;
  }
LABEL_33:
  OUTLINED_FUNCTION_1_3();
  OUTLINED_FUNCTION_15_0();
LABEL_35:
  OUTLINED_FUNCTION_11_1();
  __break(1u);
}

uint64_t static WFLogSignpost.signposter(for:)(uint64_t a1)
{
  return sub_1AF69D5BC(a1, &qword_1EEE4B628, (os_unfair_lock_s **)&qword_1EEE4BB88, (void (*)(uint64_t))sub_1AF69DE78);
}

uint64_t sub_1AF69D5BC(uint64_t a1, _QWORD *a2, os_unfair_lock_s **a3, void (*a4)(uint64_t))
{
  os_unfair_lock_s *v7;

  if (*a2 != -1)
    swift_once();
  v7 = *a3;
  swift_retain();
  os_unfair_lock_lock(v7 + 4);
  a4(a1);
  os_unfair_lock_unlock(v7 + 4);
  return swift_release();
}

void static WFLogSignpost.begin(_:_:_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  unint64_t v9;
  unint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  os_unfair_lock_s *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  int v38;
  uint64_t v39;
  int v40;
  unint64_t v41;

  OUTLINED_FUNCTION_7_3();
  v4 = v3;
  v36 = v6;
  v37 = v5;
  v41 = v7;
  v40 = v8;
  v10 = v9;
  v38 = v11;
  v39 = OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_22_0();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_13_1();
  v14 = MEMORY[0x1E0C80A78](v13);
  v34 = (char *)&v33 - v15;
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v33 - v16;
  v35 = OUTLINED_FUNCTION_3_2();
  v18 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  OUTLINED_FUNCTION_18_1();
  if (qword_1EEE4B628 != -1)
    swift_once();
  v19 = (os_unfair_lock_s *)(qword_1EEE4BB88 + 16);
  OUTLINED_FUNCTION_19_0();
  os_unfair_lock_lock(v19);
  OUTLINED_FUNCTION_29_0(v10, v0);
  os_unfair_lock_unlock(v19);
  OUTLINED_FUNCTION_20();
  sub_1AF76A2D0();
  v20 = (void *)sub_1AF76A2E8();
  sub_1AF76A870();
  sub_1AF76A294();
  if ((OUTLINED_FUNCTION_32() & 1) == 0)
  {

    (*(void (**)(uint64_t, char *, uint64_t))(v2 + 16))(v1, v17, v39);
    sub_1AF76A324();
    OUTLINED_FUNCTION_26();
    OUTLINED_FUNCTION_21_0();
    OUTLINED_FUNCTION_12_1();
    v21 = v36;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v36, v0, v35);
    v22 = OUTLINED_FUNCTION_6_3();
    v23 = (unint64_t *)(v21 + *(int *)(v22 + 20));
    v24 = v37;
    *v23 = v41;
    v23[1] = v24;
    OUTLINED_FUNCTION_23_0(v22, (uint64_t)v23);
    OUTLINED_FUNCTION_0_3();
    return;
  }
  if ((v38 & 1) == 0)
  {
    if (v41)
      goto LABEL_11;
    __break(1u);
  }
  if (HIDWORD(v41))
  {
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if (v41 >> 11 == 27)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  if (WORD1(v41) > 0x10u)
    goto LABEL_29;
LABEL_11:
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v34, v17, v39);
  if ((v10 & 0x8000000000000000) == 0)
  {
    if (HIDWORD(v10))
    {
      OUTLINED_FUNCTION_1_3();
      OUTLINED_FUNCTION_14_1();
      goto LABEL_35;
    }
    v25 = v4;
    v26 = *(_QWORD *)(v4 + 16);
    v27 = *(_QWORD *)(v4 + 40);
    v28 = *(_QWORD *)(v25 + 48);
    OUTLINED_FUNCTION_16_0();
    if (v28)
    {
      OUTLINED_FUNCTION_10_0();
      if (!v30)
        goto LABEL_30;
      v29 = OUTLINED_FUNCTION_16_0();
    }
    else
    {
      v29 = 0;
    }
    if (v27)
    {
      OUTLINED_FUNCTION_9_2();
      if (!v30)
        goto LABEL_31;
      v31 = OUTLINED_FUNCTION_16_0();
    }
    else
    {
      v31 = 0;
    }
    OUTLINED_FUNCTION_8_3(v31);
    if (v29)
    {
      swift_bridgeObjectRetain();
      v32 = v26 + 40;
      do
      {
        OUTLINED_FUNCTION_24_0();
        OUTLINED_FUNCTION_5_1();
        OUTLINED_FUNCTION_25_0();
        v32 += 16;
        --v29;
      }
      while (v29);
      OUTLINED_FUNCTION_31();
    }
    __break(1u);
    goto LABEL_28;
  }
LABEL_33:
  OUTLINED_FUNCTION_1_3();
  OUTLINED_FUNCTION_15_0();
LABEL_35:
  OUTLINED_FUNCTION_11_1();
  __break(1u);
}

Swift::Void __swiftcall WFLogSignpost.end()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  NSObject *v16;
  uint64_t v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  const char *v21;
  uint8_t *v22;
  os_signpost_id_t v23;
  uint64_t v24;
  uint64_t v25;
  os_signpost_type_t v26;
  uint64_t v27;
  uint64_t v28;
  const char *v29;
  uint64_t v30;
  uint64_t v31;

  OUTLINED_FUNCTION_7_3();
  v3 = sub_1AF76A300();
  v27 = *(_QWORD *)(v3 - 8);
  v28 = v3;
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_4_3();
  v30 = v6 - v5;
  v7 = OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_22_0();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_4_3();
  v11 = v10 - v9;
  v12 = OUTLINED_FUNCTION_3_2();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_17_1();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v1, v0, v12);
  v14 = v0 + *(int *)(OUTLINED_FUNCTION_6_3() + 20);
  v29 = *(const char **)v14;
  v15 = *(_BYTE *)(v14 + 16);
  OUTLINED_FUNCTION_19_0();
  v16 = sub_1AF76A2E8();
  sub_1AF76A30C();
  v26 = sub_1AF76A864();
  if ((sub_1AF76A8A0() & 1) == 0)
  {
LABEL_13:
    OUTLINED_FUNCTION_20();

    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v11, v7);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v1, v12);
    OUTLINED_FUNCTION_0_3();
    return;
  }
  v24 = v13;
  v25 = v2;
  if ((v15 & 1) == 0)
  {
    v18 = v29;
    v17 = v30;
    if (v29)
    {
      v20 = v27;
      v19 = v28;
LABEL_9:
      OUTLINED_FUNCTION_19_0();
      sub_1AF76A330();
      OUTLINED_FUNCTION_20();
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v20 + 88))(v17, v19) == *MEMORY[0x1E0DF2190])
      {
        v21 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v17, v19);
        v21 = "";
      }
      v22 = (uint8_t *)OUTLINED_FUNCTION_16_0();
      *(_WORD *)v22 = 0;
      v23 = sub_1AF76A2AC();
      _os_signpost_emit_with_name_impl(&dword_1AF681000, v16, v26, v23, v18, v21, v22, 2u);
      MEMORY[0x1B5DFC6E8](v22, -1, -1);
      v13 = v24;
      v2 = v25;
      goto LABEL_13;
    }
    __break(1u);
    goto LABEL_15;
  }
  v17 = v30;
  if ((unint64_t)v29 >> 32)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v29 >> 11 != 27)
  {
    v20 = v27;
    v19 = v28;
    if (v29 >> 16 <= 0x10)
    {
      v18 = (const char *)&v31;
      goto LABEL_9;
    }
    goto LABEL_16;
  }
LABEL_17:
  __break(1u);
}

void static WFLogSignpost.event(_:_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  os_unfair_lock_s *v17;
  void *v18;
  unint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[4];
  int v32;
  _BYTE *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  uint64_t v40;

  OUTLINED_FUNCTION_7_3();
  v1 = v0;
  v32 = v2;
  v34 = v3;
  v5 = v4;
  v6 = OUTLINED_FUNCTION_16_1();
  v35 = *(_QWORD *)(v6 - 8);
  v36 = v6;
  OUTLINED_FUNCTION_27_0();
  v8 = MEMORY[0x1E0C80A78](v7);
  v33 = &v31[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v8);
  v11 = &v31[-v10];
  v12 = OUTLINED_FUNCTION_3_2();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_4_3();
  v16 = v15 - v14;
  if (qword_1EEE4B628 != -1)
    swift_once();
  v17 = (os_unfair_lock_s *)(qword_1EEE4BB88 + 16);
  swift_retain();
  os_unfair_lock_lock(v17);
  OUTLINED_FUNCTION_29_0(v5, v16);
  os_unfair_lock_unlock(v17);
  swift_release();
  sub_1AF76A2B8();
  v18 = (void *)sub_1AF76A2E8();
  sub_1AF76A87C();
  v19 = sub_1AF76A294();
  if ((sub_1AF76A8A0() & 1) == 0)
  {

    (*(void (**)(_BYTE *, uint64_t))(v35 + 8))(v11, v36);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v16, v12);
    OUTLINED_FUNCTION_0_3();
    return;
  }
  if ((v32 & 1) == 0)
  {
    if (v34)
      goto LABEL_11;
    __break(1u);
  }
  if (HIDWORD(v34))
  {
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if (v34 >> 11 == 27)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  if (WORD1(v34) > 0x10u)
    goto LABEL_29;
LABEL_11:
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v35 + 16))(v33, v11, v36);
  if ((v19 & 0x8000000000000000) == 0)
  {
    if (HIDWORD(v19))
    {
      OUTLINED_FUNCTION_1_3();
      OUTLINED_FUNCTION_14_1();
      goto LABEL_35;
    }
    v20 = *(_QWORD *)(v1 + 16);
    v21 = *(_BYTE *)(v1 + 24);
    v22 = *(_BYTE *)(v1 + 25);
    v23 = *(_QWORD *)(v1 + 40);
    v24 = *(_QWORD *)(v1 + 48);
    v25 = (_BYTE *)OUTLINED_FUNCTION_16_0();
    if (v24)
    {
      OUTLINED_FUNCTION_10_0();
      if (!v27)
        goto LABEL_30;
      v26 = OUTLINED_FUNCTION_16_0();
    }
    else
    {
      v26 = 0;
    }
    if (v23)
    {
      OUTLINED_FUNCTION_9_2();
      if (!v27)
        goto LABEL_31;
      v28 = OUTLINED_FUNCTION_16_0();
    }
    else
    {
      v28 = 0;
    }
    v40 = v20;
    v37 = v28;
    v38 = v26;
    *v25 = v21;
    v25[1] = v22;
    v39 = v25 + 2;
    v29 = *(_QWORD *)(v20 + 16);
    if (v29)
    {
      swift_bridgeObjectRetain();
      v30 = v20 + 40;
      do
      {
        OUTLINED_FUNCTION_24_0();
        OUTLINED_FUNCTION_5_1();
        OUTLINED_FUNCTION_25_0();
        v30 += 16;
        --v29;
      }
      while (v29);
      OUTLINED_FUNCTION_31();
    }
    __break(1u);
    goto LABEL_28;
  }
LABEL_33:
  OUTLINED_FUNCTION_1_3();
  OUTLINED_FUNCTION_15_0();
LABEL_35:
  OUTLINED_FUNCTION_11_1();
  __break(1u);
}

void sub_1AF69DE78(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  unint64_t v16;
  char v17;
  os_unfair_lock_s *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BBA0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1AF76A354();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1AF76A2F4();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EEE4B620 != -1)
    swift_once();
  swift_beginAccess();
  v15 = off_1EEE4BB80;
  if (*((_QWORD *)off_1EEE4BB80 + 2) && (v16 = sub_1AF6C3548(a1), (v17 & 1) != 0))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v12 + 16))(v14, v15[7] + *(_QWORD *)(v12 + 72) * v16, v11);
    (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(a2, v14, v11);
    swift_endAccess();
  }
  else
  {
    v21 = a2;
    swift_endAccess();
    if (qword_1ED01FA90 != -1)
      swift_once();
    v18 = (os_unfair_lock_s *)(qword_1ED01FB20 + 16);
    swift_retain();
    os_unfair_lock_lock(v18);
    sub_1AF69CD60(a1, (uint64_t)v10);
    os_unfair_lock_unlock(v18);
    if (v2)
    {
      __break(1u);
    }
    else
    {
      swift_release();
      v19 = v21;
      sub_1AF76A2DC();
      (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v7, v19, v11);
      __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v11);
      swift_beginAccess();
      sub_1AF69CF38();
      swift_endAccess();
    }
  }
}

uint64_t sub_1AF69E128(uint64_t a1, uint64_t (*a2)(void))
{
  return OUTLINED_FUNCTION_28_0(a1, a2);
}

uint64_t type metadata accessor for WFLogSignpost()
{
  uint64_t result;

  result = qword_1EEE4BB90;
  if (!qword_1EEE4BB90)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1AF69E17C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for WFLog()
{
  return &type metadata for WFLog;
}

uint64_t *initializeBufferWithCopyOfBuffer for WFLogSignpost(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_1AF76A2F4();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *(_OWORD *)v10 = *(_OWORD *)v11;
    v10[16] = v11[16];
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
  }
  swift_retain();
  return a1;
}

uint64_t destroy for WFLogSignpost(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1AF76A2F4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_release();
}

uint64_t initializeWithCopy for WFLogSignpost(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1AF76A2F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_BYTE *)(v9 + 16) = *(_BYTE *)(v10 + 16);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for WFLogSignpost(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_1AF76A2F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);
  *(_BYTE *)(v8 + 16) = *(_BYTE *)(v9 + 16);
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for WFLogSignpost(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1AF76A2F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_BYTE *)(v9 + 16) = *(_BYTE *)(v10 + 16);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  return a1;
}

uint64_t assignWithTake for WFLogSignpost(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1AF76A2F4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_BYTE *)(v9 + 16) = *(_BYTE *)(v10 + 16);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for WFLogSignpost()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AF69E49C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = OUTLINED_FUNCTION_3_2();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t __swift_getEnumTagSinglePayload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for WFLogSignpost()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1AF69E528(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;

  v8 = OUTLINED_FUNCTION_3_2();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    __swift_storeEnumTagSinglePayload(a1, a2, a2, v8);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
    OUTLINED_FUNCTION_9();
  }
}

uint64_t __swift_storeEnumTagSinglePayload(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_1AF69E59C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1AF76A2F4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1AF69E61C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  result = OUTLINED_FUNCTION_28_0(a1, a2);
  if (!v2)
    return v4;
  return result;
}

unint64_t sub_1AF69E648()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEE4A2D8[0];
  if (!qword_1EEE4A2D8[0])
  {
    type metadata accessor for WFLogCategoryName(255);
    result = MEMORY[0x1B5DFC634](&unk_1AF777A14, v1);
    atomic_store(result, qword_1EEE4A2D8);
  }
  return result;
}

uint64_t sub_1AF69E688(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t OUTLINED_FUNCTION_3_2()
{
  return sub_1AF76A2F4();
}

uint64_t OUTLINED_FUNCTION_5_1()
{
  uint64_t (*v0)(uint64_t, uint64_t, uint64_t);
  uint64_t v1;

  return v0(v1 - 104, v1 - 112, v1 - 120);
}

uint64_t OUTLINED_FUNCTION_6_3()
{
  return type metadata accessor for WFLogSignpost();
}

uint64_t OUTLINED_FUNCTION_8_3(uint64_t result)
{
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;

  *(_QWORD *)(v6 - 88) = v1;
  *(_QWORD *)(v6 - 120) = result;
  *(_QWORD *)(v6 - 112) = v3;
  *v2 = v4;
  v2[1] = v5;
  *(_QWORD *)(v6 - 104) = v2 + 2;
  return result;
}

uint64_t OUTLINED_FUNCTION_11_1()
{
  return sub_1AF76AA2C();
}

uint64_t OUTLINED_FUNCTION_12_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_16_1()
{
  return sub_1AF76A2C4();
}

uint64_t OUTLINED_FUNCTION_19_0()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_20()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_21_0()
{
  return sub_1AF76A318();
}

uint64_t OUTLINED_FUNCTION_23_0@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  char v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(a2 + 16) = v2;
  *(_QWORD *)(v4 + *(int *)(result + 24)) = v3;
  return result;
}

uint64_t OUTLINED_FUNCTION_24_0()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_25_0()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_26()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_28_0(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

void OUTLINED_FUNCTION_29_0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1AF69DE78(a1, a2);
}

uint64_t OUTLINED_FUNCTION_31()
{
  uint64_t v0;

  return sub_1AF69E17C(v0 - 88);
}

uint64_t OUTLINED_FUNCTION_32()
{
  return sub_1AF76A8A0();
}

uint64_t OUTLINED_FUNCTION_33@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

unint64_t StaticString._asString.getter(unint64_t result, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0)
  {
    if (result)
      return sub_1AF76A5A0();
    __break(1u);
  }
  if (HIDWORD(result))
  {
    __break(1u);
LABEL_11:
    __break(1u);
    return sub_1AF76A5A0();
  }
  if (result >> 11 == 27)
    goto LABEL_14;
  if (WORD1(result) > 0x10u)
    goto LABEL_11;
  if ((result & 0xFFFFFF80) != 0 || result <= 0xFF)
    return sub_1AF76A5A0();
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

id static NSBundle._current.getter()
{
  if (qword_1EEE4B630 != -1)
    swift_once();
  return (id)qword_1EEE4BBA8;
}

id sub_1AF69E9F8()
{
  uint64_t ObjCClassFromMetadata;
  id result;

  _s2__CMa();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  result = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  qword_1EEE4BBA8 = (uint64_t)result;
  return result;
}

uint64_t sub_1AF69EA4C()
{
  return swift_deallocClassInstance();
}

uint64_t _s2__CMa()
{
  return objc_opt_self();
}

uint64_t sub_1AF69EA7C(void *a1)
{
  int64_t length;
  int64_t v3;
  const void *bytes_ptr;
  uint64_t v5;

  length = xpc_data_get_length(a1);
  if (length >= 1 && (v3 = length, (bytes_ptr = xpc_data_get_bytes_ptr(a1)) != 0))
  {
    v5 = MEMORY[0x1B5DFA9B4](bytes_ptr, v3);
    swift_unknownObjectRelease();
  }
  else
  {
    MEMORY[0x1B5DFCA90](a1);
    sub_1AF76A36C();
    swift_unknownObjectRelease();
    return 0;
  }
  return v5;
}

uint64_t ShortcutsFeatureFlags.isFeatureEnabled.getter()
{
  char *v0;
  char v1;
  char v2;
  _BYTE v4[24];
  ValueMetadata *v5;
  unint64_t v6;

  v1 = *v0;
  v5 = &type metadata for ShortcutsFeatureFlags;
  v6 = sub_1AF69B0B4();
  v4[0] = v1;
  v2 = sub_1AF76A258();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  return v2 & 1;
}

const char *ShortcutsFeatureFlags.domain.getter()
{
  return "Shortcuts";
}

uint64_t ShortcutsFeatureFlags.feature.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(const char *, uint64_t))((char *)sub_1AF69EBA4 + 4 * byte_1AF778120[*v0]))("universal_previews", 18);
}

const char *sub_1AF69EBA4()
{
  return "rich_choose_from_menu";
}

BOOL static ShortcutsFeatureFlags.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ShortcutsFeatureFlags.hash(into:)()
{
  return sub_1AF76AF24();
}

uint64_t ShortcutsFeatureFlags.hashValue.getter()
{
  sub_1AF76AF18();
  sub_1AF76AF24();
  return sub_1AF76AF3C();
}

uint64_t sub_1AF69ECB4()
{
  sub_1AF76AF18();
  sub_1AF76AF24();
  return sub_1AF76AF3C();
}

unint64_t sub_1AF69ECF8()
{
  unint64_t result;

  result = qword_1EEE4BBB0[0];
  if (!qword_1EEE4BBB0[0])
  {
    result = MEMORY[0x1B5DFC634](&protocol conformance descriptor for ShortcutsFeatureFlags, &type metadata for ShortcutsFeatureFlags);
    atomic_store(result, qword_1EEE4BBB0);
  }
  return result;
}

const char *sub_1AF69ED34()
{
  return "Shortcuts";
}

uint64_t sub_1AF69ED48()
{
  return ShortcutsFeatureFlags.feature.getter();
}

uint64_t getEnumTagSinglePayload for ShortcutsFeatureFlags(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF8)
  {
    if (a2 + 8 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 8) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 9;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v5 = v6 - 9;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ShortcutsFeatureFlags(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1AF69EE34 + 4 * byte_1AF77812E[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1AF69EE68 + 4 * byte_1AF778129[v4]))();
}

uint64_t sub_1AF69EE68(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AF69EE70(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AF69EE78);
  return result;
}

uint64_t sub_1AF69EE84(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AF69EE8CLL);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1AF69EE90(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AF69EE98(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ShortcutsFeatureFlags()
{
  return &type metadata for ShortcutsFeatureFlags;
}

uint64_t sub_1AF69EEB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _BYTE v11[8];

  v7 = type metadata accessor for WeakReference(0, *(_QWORD *)(a3 + a2 - 8), a3, a4);
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16))(v11, a1, v7);
  v9 = MEMORY[0x1B5DFC7B4](v11);
  result = (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v11, v7);
  *a5 = v9;
  return result;
}

void WeakReference.wrappedValue.getter()
{
  JUMPOUT(0x1B5DFC7B4);
}

uint64_t WeakReference.wrappedValue.setter()
{
  OUTLINED_FUNCTION_1_4();
  return OUTLINED_FUNCTION_0_4();
}

uint64_t (*WeakReference.wrappedValue.modify(_QWORD *a1))()
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = MEMORY[0x1B5DFC7B4](v1);
  return sub_1AF69EF94;
}

uint64_t sub_1AF69EF94()
{
  OUTLINED_FUNCTION_1_4();
  return OUTLINED_FUNCTION_0_4();
}

uint64_t WeakReference.init(_:)()
{
  swift_unknownObjectWeakInit();
  OUTLINED_FUNCTION_1_4();
  return OUTLINED_FUNCTION_0_4();
}

uint64_t WeakReference.init(nilLiteral:)()
{
  return WeakReference.init(_:)();
}

uint64_t sub_1AF69EFF4()
{
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_1AF69F004()
{
  return 8;
}

_QWORD *sub_1AF69F010(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1AF69F01C()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1AF69F038(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1AF69F058(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 8) = v3;
  return result;
}

uint64_t type metadata accessor for WeakReference(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for WeakReference);
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x1B5DFC5B0](a1, v6, a5);
}

uint64_t OUTLINED_FUNCTION_0_4()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_1_4()
{
  return swift_unknownObjectWeakAssign();
}

id NSProgress.observe(_:options:changeHandler:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  id v9;
  id v10;
  id v11;

  v9 = objc_allocWithZone((Class)type metadata accessor for ProgressKeyValueObservation());
  v10 = v4;
  v11 = a1;
  swift_retain();
  return sub_1AF69F160(v10, v11, a2, a3, a4);
}

uint64_t type metadata accessor for ProgressKeyValueObservation()
{
  return objc_opt_self();
}

id sub_1AF69F160(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _BYTE *v5;
  char *v11;
  id v12;
  id v13;
  char *v14;
  char *v15;
  id v16;
  void *v17;
  objc_super v19;
  uint64_t v20;
  unint64_t v21;

  v5[OBJC_IVAR____TtC19VoiceShortcutClient27ProgressKeyValueObservation_observing] = 1;
  *(_QWORD *)&v5[OBJC_IVAR____TtC19VoiceShortcutClient27ProgressKeyValueObservation_progress] = a1;
  *(_QWORD *)&v5[OBJC_IVAR____TtC19VoiceShortcutClient27ProgressKeyValueObservation_key] = a2;
  v20 = 0x6F666E4972657375;
  v21 = 0xE90000000000002ELL;
  sub_1AF76A57C();
  v11 = v5;
  v12 = a1;
  v13 = a2;
  sub_1AF76A5B8();
  swift_bridgeObjectRelease();
  v14 = &v11[OBJC_IVAR____TtC19VoiceShortcutClient27ProgressKeyValueObservation_keyPath];
  *(_QWORD *)v14 = 0x6F666E4972657375;
  *((_QWORD *)v14 + 1) = 0xE90000000000002ELL;
  v15 = &v11[OBJC_IVAR____TtC19VoiceShortcutClient27ProgressKeyValueObservation_changeHandler];
  *(_QWORD *)v15 = a4;
  *((_QWORD *)v15 + 1) = a5;
  swift_retain();

  v19.receiver = v11;
  v19.super_class = (Class)type metadata accessor for ProgressKeyValueObservation();
  v16 = objc_msgSendSuper2(&v19, sel_init);
  swift_bridgeObjectRetain();
  v17 = (void *)sub_1AF76A558();
  swift_bridgeObjectRelease();
  objc_msgSend(v12, sel_addObserver_forKeyPath_options_context_, v16, v17, a3, 0);

  swift_release();
  return v16;
}

id ProgressKeyValueObservation.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  sub_1AF69F3A8();
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ProgressKeyValueObservation();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1AF69F3A8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;

  v1 = OBJC_IVAR____TtC19VoiceShortcutClient27ProgressKeyValueObservation_observing;
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC19VoiceShortcutClient27ProgressKeyValueObservation_observing) == 1)
  {
    v2 = *(void **)(v0 + OBJC_IVAR____TtC19VoiceShortcutClient27ProgressKeyValueObservation_progress);
    v3 = (void *)sub_1AF76A558();
    objc_msgSend(v2, sel_removeObserver_forKeyPath_, v0, v3);

    *(_BYTE *)(v0 + v1) = 0;
  }
}

uint64_t sub_1AF69F420()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0
                                           + OBJC_IVAR____TtC19VoiceShortcutClient27ProgressKeyValueObservation_changeHandler))(*(_QWORD *)(v0 + OBJC_IVAR____TtC19VoiceShortcutClient27ProgressKeyValueObservation_progress));
}

id ProgressKeyValueObservation.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void ProgressKeyValueObservation.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t method lookup function for ProgressKeyValueObservation()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ProgressKeyValueObservation.invalidate()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

unint64_t sub_1AF69F5C4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEE4B928;
  if (!qword_1EEE4B928)
  {
    type metadata accessor for NSKeyValueChangeKey(255);
    result = MEMORY[0x1B5DFC634](&unk_1AF777A54, v1);
    atomic_store(result, (unint64_t *)&qword_1EEE4B928);
  }
  return result;
}

uint64_t sub_1AF69F604(uint64_t a1)
{
  int64_t v1;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_1AF6A75A4(0, v1, 0);
    __asm { BR              X9 }
  }
  return MEMORY[0x1E0DEE9D8];
}

_QWORD *sub_1AF69F788(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  const _xpc_type_s *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t *v6;
  _QWORD v8[2];

  v2 = a2;
  v3 = (const _xpc_type_s *)MEMORY[0x1B5DFCA90](a2);
  if (v3 == (const _xpc_type_s *)sub_1AF76A3C0())
  {
    swift_unknownObjectRetain();
    OUTLINED_FUNCTION_13();
  }
  else
  {
    v4 = sub_1AF76A99C();
    OUTLINED_FUNCTION_5();
    v6 = v5;
    *v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4B8B8);
    v8[0] = 0;
    v8[1] = 0xE000000000000000;
    OUTLINED_FUNCTION_13();
    sub_1AF76A960();
    v2 = v8;
    sub_1AF76A5B8();
    xpc_type_get_name(v3);
    sub_1AF76A5C4();
    OUTLINED_FUNCTION_81();
    OUTLINED_FUNCTION_1();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4B8C0);
    OUTLINED_FUNCTION_14_2();
    sub_1AF76A990();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v4 - 8) + 104))(v6, *MEMORY[0x1E0DEC450], v4);
    swift_willThrow();
  }
  return v2;
}

uint64_t sub_1AF69F8C8(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  v4 = OUTLINED_FUNCTION_6_4();
  v6 = sub_1AF69B51C(v4, v5, a2);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_20_0(MEMORY[0x1E0DEA968], (uint64_t)&v8, v6);
  result = swift_bridgeObjectRelease();
  if (!v2)
    return v8;
  return result;
}

unint64_t sub_1AF69F96C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  char v5;
  uint64_t v6;

  if (!*(_QWORD *)(a3 + 16))
    return 0xF000000000000007;
  v4 = sub_1AF6842A4(a1, a2);
  if ((v5 & 1) == 0)
    return 0xF000000000000007;
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 56) + 8 * v4);
  swift_retain();
  return v6;
}

void sub_1AF69F9B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(_QWORD *)(a3 + 16))
    OUTLINED_FUNCTION_90(a1, a2);
  OUTLINED_FUNCTION_19();
}

void sub_1AF69F9EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;

  if (*(_QWORD *)(a3 + 16))
  {
    OUTLINED_FUNCTION_90(a1, a2);
    if ((v3 & 1) != 0)
      swift_bridgeObjectRetain();
  }
  OUTLINED_FUNCTION_19();
}

uint64_t sub_1AF69FA28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;

  if (!*(_QWORD *)(a3 + 16))
    return 0;
  v4 = OUTLINED_FUNCTION_90(a1, a2);
  if ((v5 & 1) == 0)
    return 0;
  v6 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 16 * v4);
  swift_retain();
  return v6;
}

uint64_t sub_1AF69FA78(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[5];

  v3 = type metadata accessor for XPCEncoder();
  v4 = OUTLINED_FUNCTION_24_1();
  OUTLINED_FUNCTION_45();
  v14[3] = v3;
  v14[4] = sub_1AF6A634C();
  v14[0] = v4;
  swift_retain();
  v5 = a1;
  OUTLINED_FUNCTION_84();
  if (v1)
  {
    OUTLINED_FUNCTION_86();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    v6 = sub_1AF6A08AC();
    sub_1AF69FB4C(v6, v7, v8);
    v5 = v9;
    v10 = OUTLINED_FUNCTION_28_1();
    sub_1AF6A0EC0(v10, v11, v12);
    OUTLINED_FUNCTION_86();
  }
  return v5;
}

void sub_1AF69FB4C(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }
}

void sub_1AF69FB90()
{
  uint64_t v0;
  xpc_object_t empty;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  int64_t v23;

  OUTLINED_FUNCTION_6_2();
  empty = xpc_dictionary_create_empty();
  v2 = 0;
  v3 = *(_QWORD *)(v0 + 64);
  v22 = v0 + 64;
  v4 = 1 << *(_BYTE *)(v0 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & v3;
  v23 = (unint64_t)(v4 + 63) >> 6;
  if ((v5 & v3) == 0)
    goto LABEL_5;
LABEL_4:
  for (v6 &= v6 - 1; ; v6 = (v8 - 1) & v8)
  {
    OUTLINED_FUNCTION_13();
    v10 = OUTLINED_FUNCTION_28_1();
    sub_1AF6A0E74(v10, v11, v12);
    v13 = OUTLINED_FUNCTION_28_1();
    sub_1AF69FB4C(v13, v14, v15);
    v17 = v16;
    v18 = sub_1AF76A594();
    swift_bridgeObjectRelease();
    xpc_dictionary_set_value(empty, (const char *)(v18 + 32), v17);
    OUTLINED_FUNCTION_67();
    swift_unknownObjectRelease();
    v19 = OUTLINED_FUNCTION_28_1();
    sub_1AF6A0EC0(v19, v20, v21);
    if (v6)
      goto LABEL_4;
LABEL_5:
    v7 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_23;
    }
    if (v7 >= v23)
      goto LABEL_21;
    v8 = *(_QWORD *)(v22 + 8 * v7);
    ++v2;
    if (!v8)
    {
      v2 = v7 + 1;
      if (v7 + 1 >= v23)
        goto LABEL_21;
      v8 = *(_QWORD *)(v22 + 8 * v2);
      if (!v8)
      {
        v2 = v7 + 2;
        if (v7 + 2 >= v23)
          goto LABEL_21;
        v8 = *(_QWORD *)(v22 + 8 * v2);
        if (!v8)
          break;
      }
    }
LABEL_18:
    ;
  }
  v9 = v7 + 3;
  if (v9 < v23)
  {
    v8 = *(_QWORD *)(v22 + 8 * v9);
    if (!v8)
    {
      while (1)
      {
        v2 = v9 + 1;
        if (__OFADD__(v9, 1))
          break;
        if (v2 >= v23)
          goto LABEL_21;
        v8 = *(_QWORD *)(v22 + 8 * v2);
        ++v9;
        if (v8)
          goto LABEL_18;
      }
LABEL_23:
      __break(1u);
      JUMPOUT(0x1AF69FE68);
    }
    v2 = v9;
    goto LABEL_18;
  }
LABEL_21:
  swift_release();
  OUTLINED_FUNCTION_10_1();
}

uint64_t sub_1AF69FE8C()
{
  OUTLINED_FUNCTION_62();
  swift_unknownObjectRetain();
  OUTLINED_FUNCTION_63();
  sub_1AF6A7B58();
  return sub_1AF76A768();
}

uint64_t sub_1AF69FF44()
{
  uint64_t v0;

  sub_1AF6A0EC0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for XPCEncoderStorage.XPCEncoderValue()
{
  return objc_opt_self();
}

uint64_t sub_1AF69FF8C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  unint64_t v11;

  type metadata accessor for XPCEncoderStorage.XPCEncoderValue();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  *(_BYTE *)(v10 + 32) = a3;
  v11 = v10 | 0x8000000000000000;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1AF6A0E74(a1, a2, a3);
  sub_1AF6D99AC(v11, a4, a5);
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AF6A0048(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  swift_beginAccess();
  v5 = *(_QWORD *)(v2 + 16);
  if (*(_QWORD *)(v5 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v6 = sub_1AF6842A4(a1, a2);
    if ((v7 & 1) != 0)
    {
      v8 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v6);
      swift_retain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      __asm { BR              X10 }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  type metadata accessor for XPCEncoderStorage.XPCEncoderArray();
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = MEMORY[0x1E0DEE9D8];
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1AF6D99AC(v9 | 0x4000000000000000, a1, a2);
  swift_endAccess();
  swift_bridgeObjectRelease();
  return v9;
}

void sub_1AF6A0194()
{
  swift_release();
  __break(1u);
}

void sub_1AF6A01A0()
{
  swift_release();
  __break(1u);
  JUMPOUT(0x1AF6A01ACLL);
}

uint64_t sub_1AF6A01BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  swift_beginAccess();
  v5 = *(_QWORD *)(v2 + 16);
  if (*(_QWORD *)(v5 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v6 = sub_1AF6842A4(a1, a2);
    if ((v7 & 1) != 0)
    {
      v8 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v6);
      swift_retain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      __asm { BR              X10 }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  type metadata accessor for XPCEncoderStorage.XPCEncoderDict();
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = sub_1AF76A4C8();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v10 = swift_retain();
  sub_1AF6D99AC(v10, a1, a2);
  swift_endAccess();
  swift_bridgeObjectRelease();
  return v9;
}

void sub_1AF6A031C()
{
  swift_release();
  __break(1u);
}

void sub_1AF6A0328()
{
  swift_release();
  __break(1u);
  JUMPOUT(0x1AF6A0334);
}

uint64_t sub_1AF6A0344(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;

  swift_beginAccess();
  v7 = *(_QWORD *)(v3 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8 = sub_1AF69F96C(a2, a3, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((~v8 & 0xF000000000000007) != 0)
    __asm { BR              X10 }
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1AF6D99AC(a1 | 0xC000000000000000, a2, a3);
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

void sub_1AF6A0444()
{
  uint64_t v0;

  sub_1AF6A7C18(v0);
  __break(1u);
}

void sub_1AF6A0450()
{
  uint64_t v0;

  sub_1AF6A7C18(v0);
  __break(1u);
}

void sub_1AF6A045C()
{
  uint64_t v0;

  sub_1AF6A7C18(v0);
  __break(1u);
}

void sub_1AF6A0468()
{
  uint64_t v0;

  sub_1AF6A7C18(v0);
  __break(1u);
  JUMPOUT(0x1AF6A0474);
}

uint64_t sub_1AF6A0484()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v0 = swift_bridgeObjectRetain();
  v1 = sub_1AF6A7CD0(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t type metadata accessor for XPCEncoderStorage.XPCEncoderDict()
{
  return objc_opt_self();
}

uint64_t sub_1AF6A0508(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;

  type metadata accessor for XPCEncoderStorage.XPCEncoderValue();
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a2;
  *(_BYTE *)(v7 + 32) = a3;
  v8 = v7 | 0x8000000000000000;
  swift_beginAccess();
  sub_1AF6A0E74(a1, a2, a3);
  sub_1AF6A64B8((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AF6A664C);
  v9 = *(_QWORD *)(*(_QWORD *)(v3 + 16) + 16);
  sub_1AF6A65A8(v9, (uint64_t (*)(BOOL))sub_1AF6A664C);
  v10 = *(_QWORD *)(v3 + 16);
  *(_QWORD *)(v10 + 16) = v9 + 1;
  *(_QWORD *)(v10 + 8 * v9 + 32) = v8;
  return swift_endAccess();
}

uint64_t sub_1AF6A05D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  type metadata accessor for XPCEncoderStorage.XPCEncoderArray();
  v1 = swift_allocObject();
  *(_QWORD *)(v1 + 16) = MEMORY[0x1E0DEE9D8];
  swift_beginAccess();
  swift_retain();
  sub_1AF6A64B8((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AF6A664C);
  v2 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 16);
  sub_1AF6A65A8(v2, (uint64_t (*)(BOOL))sub_1AF6A664C);
  v3 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v3 + 16) = v2 + 1;
  *(_QWORD *)(v3 + 8 * v2 + 32) = v1 | 0x4000000000000000;
  swift_endAccess();
  return v1;
}

uint64_t sub_1AF6A0690()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  type metadata accessor for XPCEncoderStorage.XPCEncoderDict();
  v1 = swift_allocObject();
  *(_QWORD *)(v1 + 16) = sub_1AF76A4C8();
  swift_beginAccess();
  swift_retain();
  sub_1AF6A64B8((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AF6A664C);
  v2 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 16);
  sub_1AF6A65A8(v2, (uint64_t (*)(BOOL))sub_1AF6A664C);
  v3 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v3 + 16) = v2 + 1;
  *(_QWORD *)(v3 + 8 * v2 + 32) = v1;
  swift_endAccess();
  return v1;
}

uint64_t sub_1AF6A0768(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1 | 0xC000000000000000;
  swift_beginAccess();
  swift_retain();
  sub_1AF6A64B8((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AF6A664C);
  v3 = *(_QWORD *)(*(_QWORD *)(v1 + 16) + 16);
  sub_1AF6A65A8(v3, (uint64_t (*)(BOOL))sub_1AF6A664C);
  v4 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v4 + 16) = v3 + 1;
  *(_QWORD *)(v4 + 8 * v3 + 32) = v2;
  return swift_endAccess();
}

uint64_t sub_1AF6A0804()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v0 = swift_bridgeObjectRetain();
  v1 = sub_1AF69F604(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1AF6A0868()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for XPCEncoderStorage.XPCEncoderArray()
{
  return objc_opt_self();
}

uint64_t sub_1AF6A08AC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  if ((~v1 & 0xF000000000000007) != 0)
    __asm { BR              X10 }
  return 0;
}

void sub_1AF6A09A4()
{
  unint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_49();
  if (v2)
  {
    type metadata accessor for XPCEncoderStorage.XPCEncoderDict();
    v3 = OUTLINED_FUNCTION_16_2();
    *(_QWORD *)(v3 + 16) = sub_1AF76A4C8();
    v4 = *(_QWORD *)(v1 + 32);
    *(_QWORD *)(v1 + 32) = v3;
    swift_retain();
    sub_1AF6A7C18(v4);
LABEL_5:
    OUTLINED_FUNCTION_9_3();
    sub_1AF6A7C6C(v0);
    OUTLINED_FUNCTION_6_2();
    return;
  }
  if (!(v0 >> 62))
    goto LABEL_5;
  __break(1u);
}

uint64_t sub_1AF6A0A60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  sub_1AF6A09A4();
  v6 = type metadata accessor for XPCKeyedEncoding(0, a2, a3, v5);
  MEMORY[0x1B5DFC634](&unk_1AF778644, v6);
  return sub_1AF76AB7C();
}

void sub_1AF6A0AD8(uint64_t *a1@<X8>)
{
  unint64_t v1;
  uint64_t v2;
  char v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_49();
  if (v4)
  {
    type metadata accessor for XPCEncoderStorage.XPCEncoderArray();
    v5 = OUTLINED_FUNCTION_16_2();
    *(_QWORD *)(v5 + 16) = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v2 + 32) = v5 | 0x4000000000000000;
    swift_retain();
    sub_1AF6A7C18(v1);
LABEL_6:
    OUTLINED_FUNCTION_9_3();
    v6 = *(_QWORD *)(v2 + 16);
    a1[3] = (uint64_t)&unk_1E5FC02C0;
    a1[4] = sub_1AF6A7C84();
    *a1 = v5;
    a1[1] = v6;
    sub_1AF6A7C6C(v1);
    OUTLINED_FUNCTION_6_2();
    return;
  }
  if (v1 >> 62 == 1)
  {
    v5 = v1 & 0x3FFFFFFFFFFFFFFFLL;
    goto LABEL_6;
  }
  __break(1u);
}

void sub_1AF6A0B8C(uint64_t *a1@<X8>)
{
  unint64_t v1;
  uint64_t v2;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_49();
  if (v4)
  {
    v5 = sub_1AF76A4C8();
    type metadata accessor for XPCEncoderStorage.XPCEncoderValue();
    v6 = OUTLINED_FUNCTION_16_2();
    *(_QWORD *)(v6 + 16) = v5;
    *(_QWORD *)(v6 + 24) = 0;
    *(_BYTE *)(v6 + 32) = 0;
    v7 = *(_QWORD *)(v2 + 32);
    *(_QWORD *)(v2 + 32) = v6 | 0x8000000000000000;
    swift_retain();
    sub_1AF6A7C18(v7);
LABEL_6:
    OUTLINED_FUNCTION_9_3();
    v8 = *(_QWORD *)(v2 + 16);
    a1[3] = (uint64_t)&unk_1E5FC1550;
    a1[4] = sub_1AF6A7C30();
    *a1 = v6;
    a1[1] = v8;
    sub_1AF6A7C6C(v1);
    OUTLINED_FUNCTION_6_2();
    return;
  }
  if (v1 >> 62 == 2)
  {
    v6 = v1 & 0x3FFFFFFFFFFFFFFFLL;
    goto LABEL_6;
  }
  __break(1u);
}

uint64_t sub_1AF6A0C70()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1AF6A7C18(*(_QWORD *)(v0 + 32));
  return v0;
}

uint64_t sub_1AF6A0C9C()
{
  sub_1AF6A0C70();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for XPCEncoder()
{
  return objc_opt_self();
}

_QWORD *initializeBufferWithCopyOfBuffer for XPCEncoderStorage(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t destroy for XPCEncoderStorage()
{
  return swift_release();
}

_QWORD *assignWithCopy for XPCEncoderStorage(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *assignWithTake for XPCEncoderStorage(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for XPCEncoderStorage(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0x7D && *(_BYTE *)(a1 + 8))
    {
      v2 = *(_DWORD *)a1 + 124;
    }
    else
    {
      v2 = (((*(_QWORD *)a1 >> 57) >> 5) | (4 * ((*(_QWORD *)a1 >> 57) & 0x18 | *(_QWORD *)a1 & 7))) ^ 0x7F;
      if (v2 >= 0x7C)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for XPCEncoderStorage(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7C)
  {
    *(_QWORD *)result = a2 - 125;
    if (a3 >= 0x7D)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7D)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1AF6A0E30(_QWORD *a1)
{
  return *a1 >> 62;
}

_QWORD *sub_1AF6A0E3C(_QWORD *result)
{
  *result &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t *sub_1AF6A0E4C(uint64_t *result, uint64_t a2)
{
  *result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 62);
  return result;
}

ValueMetadata *type metadata accessor for XPCEncoderStorage()
{
  return &type metadata for XPCEncoderStorage;
}

uint64_t sub_1AF6A0E74(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  switch(a3)
  {
    case 0:
    case 1:
    case 3:
      result = swift_bridgeObjectRetain();
      break;
    case 7:
      result = swift_unknownObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t destroy for XPCValue(uint64_t a1)
{
  return sub_1AF6A0EC0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_1AF6A0EC0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  switch(a3)
  {
    case 0:
    case 1:
    case 3:
      result = swift_bridgeObjectRelease();
      break;
    case 7:
      result = swift_unknownObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

void _s19VoiceShortcutClient8XPCValueOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1AF6A0E74(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  OUTLINED_FUNCTION_9();
}

uint64_t assignWithCopy for XPCValue(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1AF6A0E74(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1AF6A0EC0(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for XPCValue(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1AF6A0EC0(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for XPCValue(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xF8 && *(_BYTE *)(a1 + 17))
    {
      v2 = *(_DWORD *)a1 + 247;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 8)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for XPCValue(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF7)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 248;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xF8)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xF8)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_1AF6A106C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 7u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 8);
}

uint64_t sub_1AF6A1084(uint64_t result, unsigned int a2)
{
  if (a2 >= 8)
  {
    *(_QWORD *)result = a2 - 8;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 8;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for XPCValue()
{
  return &type metadata for XPCValue;
}

void sub_1AF6A10B4(_QWORD *a1, _OWORD *a2, uint64_t a3)
{
  sub_1AF6A80BC(a1, a2, a3, (void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

void type metadata accessor for XPCSingleValueEncoding()
{
  OUTLINED_FUNCTION_25();
}

void sub_1AF6A10DC(_QWORD *a1, _OWORD *a2, uint64_t a3)
{
  sub_1AF6A80BC(a1, a2, a3, (void (*)(_QWORD))MEMORY[0x1E0DEEEC0]);
}

void type metadata accessor for XPCSingleValueDecoding()
{
  OUTLINED_FUNCTION_25();
}

uint64_t sub_1AF6A10F8()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1AF6A1128(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_31_0(a1, a2);
  *(_QWORD *)(v2 + 16) = *(_QWORD *)(v3 + 16);
  swift_unknownObjectRetain();
  OUTLINED_FUNCTION_6_2();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_9();
}

_QWORD *sub_1AF6A1160(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AF6A11D4(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for XPCDecoder()
{
  OUTLINED_FUNCTION_25();
}

void sub_1AF6A1234()
{
  _QWORD *v0;

  v0[2] = MEMORY[0x1E0DEE9D8];
  sub_1AF76AA08();
  v0[3] = sub_1AF76A4C8();
  v0[4] = 0xF000000000000007;
  OUTLINED_FUNCTION_19();
}

uint64_t sub_1AF6A1288()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AF6A12C8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AF6A12D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AF6A0A60(a1, a2, a3);
}

void sub_1AF6A12F4(uint64_t *a1@<X8>)
{
  sub_1AF6A0AD8(a1);
}

void sub_1AF6A1314(uint64_t *a1@<X8>)
{
  sub_1AF6A0B8C(a1);
}

void sub_1AF6A1334()
{
  uint64_t v0;
  uint64_t v1;

  v0 = OUTLINED_FUNCTION_54();
  sub_1AF69FF8C(0, 0, 8, v0, v1);
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_72();
}

void sub_1AF6A1380()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_52();
  v0 = OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_78(v0, v1, 2, v2);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_5_2();
}

void sub_1AF6A13C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1AF76AF78();
  OUTLINED_FUNCTION_75(a1, a2, 3, v4);
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_21_1();
}

void sub_1AF6A141C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_54();
  v0 = OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_78(v0, v1, 6, v2);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_5_2();
}

void sub_1AF6A1460()
{
  sub_1AF6A141C();
}

void sub_1AF6A1478(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_35(a1, a2, a3);
}

void sub_1AF6A148C(char a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_35(a1, a2, a3);
}

void sub_1AF6A14A4(__int16 a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_35(a1, a2, a3);
}

void sub_1AF6A14BC(int a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_35(a1, a2, a3);
}

void sub_1AF6A14D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_34(a1, a2, a3);
}

void sub_1AF6A14E8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v6;

  v6 = OUTLINED_FUNCTION_52();
  OUTLINED_FUNCTION_75(a1, 0, a4, v6);
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_21_1();
}

void sub_1AF6A1538(unsigned __int8 a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_34(a1, a2, a3);
}

void sub_1AF6A1550(unsigned __int16 a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_34(a1, a2, a3);
}

void sub_1AF6A1568(unsigned int a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_34(a1, a2, a3);
}

void sub_1AF6A1580()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  xpc_object_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[5];

  OUTLINED_FUNCTION_46();
  v2 = v1;
  v4 = v3;
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_4_3();
  v10 = v9 - v8;
  v13 = sub_1AF6A1784(v11, v12);
  if (v13)
  {
    v14 = (uint64_t)v13;
    swift_unknownObjectRetain();
    v15 = sub_1AF76AF78();
    OUTLINED_FUNCTION_93(v14, 0, 7, v15);
    swift_unknownObjectRelease_n();
    OUTLINED_FUNCTION_23_1();
  }
  else
  {
    v24 = type metadata accessor for XPCEncoder();
    v16 = OUTLINED_FUNCTION_24_1();
    OUTLINED_FUNCTION_45();
    OUTLINED_FUNCTION_0_0();
    sub_1AF6A64B8((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AF6A6738);
    v17 = *(_QWORD *)(*(_QWORD *)(v16 + 16) + 16);
    sub_1AF6A65A8(v17, (uint64_t (*)(BOOL))sub_1AF6A6738);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v10, v4, v5);
    sub_1AF6A8480(v17, v10, (uint64_t *)(v16 + 16), v5, *(_QWORD *)(v2 + 24));
    swift_endAccess();
    v25[3] = v24;
    v25[4] = sub_1AF6A634C();
    v25[0] = v16;
    swift_retain();
    sub_1AF76A510();
    if (v0)
    {
      OUTLINED_FUNCTION_20();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
      v18 = sub_1AF6A08AC();
      v20 = v19;
      v22 = v21;
      v23 = sub_1AF76AF78();
      OUTLINED_FUNCTION_93(v18, v20, v22, v23);
      OUTLINED_FUNCTION_23_1();
      sub_1AF6A0EC0(v18, v20, v22);
      OUTLINED_FUNCTION_20();
    }
  }
  OUTLINED_FUNCTION_2_2();
}

xpc_object_t sub_1AF6A1784(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  void (*v24)(char *, uint64_t, uint64_t);
  double v25;
  double v26;
  xpc_object_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BC60);
  MEMORY[0x1E0C80A78](v4);
  v39 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_1AF76A174();
  v38 = *(_QWORD *)(v40 - 8);
  MEMORY[0x1E0C80A78](v40);
  v37 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEE4BC68);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a2 - 8);
  v12 = MEMORY[0x1E0C80A78](v8);
  v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v36 - v16;
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v36 - v18;
  v20 = sub_1AF76A1F8();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v36 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v24(v19, a1, a2);
  if (swift_dynamicCast())
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v20);
    if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v20) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v23, v10, v20);
      sub_1AF76A1E0();
      v26 = v25 * 1000000000.0;
      if ((~*(_QWORD *)&v26 & 0x7FF0000000000000) != 0)
      {
        if (v26 > -9.22337204e18)
        {
          if (v26 < 9.22337204e18)
          {
            v27 = xpc_date_create((uint64_t)v26);
            (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
            return v27;
          }
LABEL_19:
          __break(1u);
          JUMPOUT(0x1AF6A1C68);
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_19;
    }
  }
  else
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 1, 1, v20);
  }
  sub_1AF6A6388((uint64_t)v10, (uint64_t *)&unk_1EEE4BC68);
  v24(v17, a1, a2);
  if (swift_dynamicCast())
    __asm { BR              X10 }
  v24(v14, a1, a2);
  v29 = (uint64_t)v39;
  v28 = v40;
  if (swift_dynamicCast())
  {
    __swift_storeEnumTagSinglePayload(v29, 0, 1, v28);
    if (__swift_getEnumTagSinglePayload(v29, 1, v28) != 1)
    {
      v31 = v37;
      v30 = v38;
      (*(void (**)(char *, uint64_t, uint64_t))(v38 + 32))(v37, v29, v28);
      v32 = sub_1AF76A15C();
      sub_1AF69FB4C(v32, v33, 3);
      v27 = v34;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v28);
      return v27;
    }
  }
  else
  {
    __swift_storeEnumTagSinglePayload(v29, 1, 1, v28);
  }
  sub_1AF6A6388(v29, &qword_1EEE4BC60);
  return 0;
}

void sub_1AF6A1C9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 *inited;
  __n128 *v13;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v15;
  uint64_t v16;

  v8 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(a3 + 24);
  v10 = sub_1AF76AF78();
  sub_1AF6A01BC(v10, v11);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BD58);
  inited = (__n128 *)swift_initStackObject();
  v13 = OUTLINED_FUNCTION_77(inited, (__n128)xmmword_1AF778CD0);
  inited[3].n128_u64[1] = v8;
  inited[4].n128_u64[0] = v9;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)v13);
  (*(void (**)(uint64_t *, uint64_t, unint64_t))(*(_QWORD *)(v8 - 8) + 16))(boxed_opaque_existential_1, a2, v8);
  OUTLINED_FUNCTION_6_2();
  OUTLINED_FUNCTION_74();
  v16 = type metadata accessor for XPCKeyedEncoding(0, a4, a5, v15);
  MEMORY[0x1B5DFC634](&unk_1AF778644, v16);
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_22_1();
}

unint64_t sub_1AF6A1D90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 *inited;
  __n128 *v13;
  uint64_t *boxed_opaque_existential_1;
  unint64_t result;

  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = sub_1AF76AF78();
  v10 = sub_1AF6A0048(v8, v9);
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(v3 + 8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BD58);
  inited = (__n128 *)swift_initStackObject();
  v13 = OUTLINED_FUNCTION_77(inited, (__n128)xmmword_1AF778CD0);
  inited[3].n128_u64[1] = v6;
  inited[4].n128_u64[0] = v7;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)v13);
  (*(void (**)(uint64_t *, uint64_t, unint64_t))(*(_QWORD *)(v6 - 8) + 16))(boxed_opaque_existential_1, a1, v6);
  OUTLINED_FUNCTION_6_2();
  sub_1AF6A63C0((uint64_t)inited);
  a3[3] = (uint64_t)&unk_1E5FC02C0;
  result = sub_1AF6A7C84();
  a3[4] = result;
  *a3 = v10;
  a3[1] = v11;
  return result;
}

void sub_1AF6A1E78(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a1 + 16);
  sub_1AF76A8AC();
  OUTLINED_FUNCTION_66();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v8 - v6;
  OUTLINED_FUNCTION_89();
  sub_1AF76AF84();
  if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v4) == 1)
  {
    __break(1u);
  }
  else
  {
    sub_1AF6A1F34((uint64_t)v7, a1, a2);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v7, v4);
    OUTLINED_FUNCTION_43();
  }
}

void sub_1AF6A1F34(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  __n128 *inited;
  __n128 *v11;
  unint64_t v12;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v14;
  uint64_t v15;

  v8 = type metadata accessor for XPCEncoder();
  OUTLINED_FUNCTION_16_2();
  OUTLINED_FUNCTION_92();
  v9 = *(_QWORD *)(v3 + 8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BD58);
  inited = (__n128 *)swift_initStackObject();
  v11 = OUTLINED_FUNCTION_77(inited, (__n128)xmmword_1AF778CD0);
  v12 = *(_QWORD *)(a2 + 16);
  inited[3].n128_u64[1] = v12;
  inited[4].n128_u64[0] = *(_QWORD *)(a2 + 24);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)v11);
  (*(void (**)(uint64_t *, uint64_t, unint64_t))(*(_QWORD *)(v12 - 8) + 16))(boxed_opaque_existential_1, a1, v12);
  OUTLINED_FUNCTION_6_2();
  sub_1AF6A63C0((uint64_t)inited);
  swift_beginAccess();
  *(_QWORD *)(v4 + 16) = v9;
  swift_bridgeObjectRelease();
  v14 = sub_1AF76AF78();
  sub_1AF6A0344(v4, v14, v15);
  swift_bridgeObjectRelease();
  a3[3] = v8;
  a3[4] = sub_1AF6A634C();
  *a3 = v4;
  OUTLINED_FUNCTION_22_1();
}

void sub_1AF6A2050()
{
  sub_1AF6A1334();
}

void sub_1AF6A2064()
{
  sub_1AF6A1380();
}

void sub_1AF6A2078(uint64_t a1, uint64_t a2)
{
  sub_1AF6A13C4(a1, a2);
}

void sub_1AF6A208C()
{
  sub_1AF6A141C();
}

void sub_1AF6A20A0()
{
  sub_1AF6A1460();
}

void sub_1AF6A20B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1AF6A1478(a1, a2, a3);
}

void sub_1AF6A20C8(char a1, uint64_t a2, uint64_t a3)
{
  sub_1AF6A148C(a1, a2, a3);
}

void sub_1AF6A20DC(__int16 a1, uint64_t a2, uint64_t a3)
{
  sub_1AF6A14A4(a1, a2, a3);
}

void sub_1AF6A20F0(int a1, uint64_t a2, uint64_t a3)
{
  sub_1AF6A14BC(a1, a2, a3);
}

void sub_1AF6A2104(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1AF6A14E8(a1, a2, a3, 4);
}

uint64_t sub_1AF6A211C()
{
  return sub_1AF76AE64();
}

void sub_1AF6A2130(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1AF6A14D4(a1, a2, a3);
}

void sub_1AF6A2144(unsigned __int8 a1, uint64_t a2, uint64_t a3)
{
  sub_1AF6A1538(a1, a2, a3);
}

void sub_1AF6A2158(unsigned __int16 a1, uint64_t a2, uint64_t a3)
{
  sub_1AF6A1550(a1, a2, a3);
}

void sub_1AF6A216C(unsigned int a1, uint64_t a2, uint64_t a3)
{
  sub_1AF6A1568(a1, a2, a3);
}

void sub_1AF6A2180(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1AF6A14E8(a1, a2, a3, 5);
}

uint64_t sub_1AF6A2198()
{
  return sub_1AF76AE70();
}

void sub_1AF6A21AC()
{
  sub_1AF6A1580();
}

uint64_t sub_1AF6A21D0()
{
  return sub_1AF76AE58();
}

uint64_t sub_1AF6A21F8()
{
  return sub_1AF76ADEC();
}

uint64_t sub_1AF6A220C()
{
  return sub_1AF76ADE0();
}

uint64_t sub_1AF6A2220()
{
  return sub_1AF76ADF8();
}

void sub_1AF6A2238(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1AF6A2394(a1, a2, a3, a4, MEMORY[0x1E0DED8E8]);
}

uint64_t sub_1AF6A2254()
{
  return sub_1AF76AE04();
}

void sub_1AF6A226C(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1AF6A2324(a1, a2, a3, a4, MEMORY[0x1E0DED908]);
}

void sub_1AF6A2288(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1AF6A235C(a1, a2, a3, a4, MEMORY[0x1E0DED910]);
}

void sub_1AF6A22A4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1AF6A2394(a1, a2, a3, a4, MEMORY[0x1E0DED918]);
}

uint64_t sub_1AF6A22C0()
{
  return sub_1AF76AE28();
}

uint64_t sub_1AF6A22D8()
{
  return sub_1AF76AE34();
}

uint64_t sub_1AF6A22F0()
{
  return sub_1AF76AE10();
}

void sub_1AF6A2308(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1AF6A2324(a1, a2, a3, a4, MEMORY[0x1E0DED928]);
}

void sub_1AF6A2324(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD))
{
  a5(a1 & 0x1FF);
  OUTLINED_FUNCTION_55();
}

void sub_1AF6A2340(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1AF6A235C(a1, a2, a3, a4, MEMORY[0x1E0DED938]);
}

void sub_1AF6A235C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD))
{
  a5(a1 & 0x1FFFF);
  OUTLINED_FUNCTION_55();
}

void sub_1AF6A2378(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1AF6A2394(a1, a2, a3, a4, MEMORY[0x1E0DED940]);
}

void sub_1AF6A2394(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t))
{
  a5(a1 | ((HIDWORD(a1) & 1) << 32));
  OUTLINED_FUNCTION_55();
}

uint64_t sub_1AF6A23B8()
{
  return sub_1AF76AE40();
}

uint64_t sub_1AF6A23D0()
{
  return sub_1AF76AE4C();
}

uint64_t sub_1AF6A23E8()
{
  return sub_1AF76AE1C();
}

void sub_1AF6A2410(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1AF6A1C9C(a1, a2, a5, a3, a4);
}

uint64_t sub_1AF6A2430(uint64_t a1)
{
  OUTLINED_FUNCTION_9_3();
  return *(_QWORD *)(*(_QWORD *)(a1 + 16) + 16);
}

void sub_1AF6A2468()
{
  sub_1AF6A0508(0, 0, 8);
  OUTLINED_FUNCTION_19();
}

void sub_1AF6A2498(char a1)
{
  sub_1AF6A0508(a1 & 1, 0, 2);
  OUTLINED_FUNCTION_19();
}

void sub_1AF6A24C8(uint64_t a1, uint64_t a2)
{
  sub_1AF6A0508(a1, a2, 3);
  OUTLINED_FUNCTION_19();
}

void sub_1AF6A24F0(double a1)
{
  OUTLINED_FUNCTION_37(a1);
  OUTLINED_FUNCTION_19();
}

void sub_1AF6A2510(float a1)
{
  OUTLINED_FUNCTION_37(a1);
  OUTLINED_FUNCTION_19();
}

void sub_1AF6A2534(uint64_t a1)
{
  OUTLINED_FUNCTION_7_4(a1);
  OUTLINED_FUNCTION_19();
}

void sub_1AF6A2554(char a1)
{
  OUTLINED_FUNCTION_7_4(a1);
  OUTLINED_FUNCTION_19();
}

void sub_1AF6A2578(__int16 a1)
{
  OUTLINED_FUNCTION_7_4(a1);
  OUTLINED_FUNCTION_19();
}

void sub_1AF6A259C(int a1)
{
  OUTLINED_FUNCTION_7_4(a1);
  OUTLINED_FUNCTION_19();
}

void sub_1AF6A25C0(uint64_t a1)
{
  OUTLINED_FUNCTION_8_4(a1);
  OUTLINED_FUNCTION_19();
}

void sub_1AF6A25E0(unsigned __int8 a1)
{
  OUTLINED_FUNCTION_8_4(a1);
  OUTLINED_FUNCTION_19();
}

void sub_1AF6A2604(unsigned __int16 a1)
{
  OUTLINED_FUNCTION_8_4(a1);
  OUTLINED_FUNCTION_19();
}

void sub_1AF6A2628(unsigned int a1)
{
  OUTLINED_FUNCTION_8_4(a1);
  OUTLINED_FUNCTION_19();
}

uint64_t sub_1AF6A264C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  xpc_object_t v4;
  uint64_t v6;
  uint64_t inited;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  _QWORD v22[5];
  uint64_t v23;

  v4 = sub_1AF6A1784(a1, a2);
  if (v4)
  {
    sub_1AF6A0508((uint64_t)v4, 0, 7);
    return swift_unknownObjectRelease();
  }
  else
  {
    v23 = type metadata accessor for XPCEncoder();
    v6 = OUTLINED_FUNCTION_24_1();
    OUTLINED_FUNCTION_45();
    v21 = *(_QWORD *)(v2 + 8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BD58);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1AF778CD0;
    OUTLINED_FUNCTION_0_0();
    v8 = sub_1AF6A2844();
    v10 = v9;
    v12 = v11;
    v14 = v13;
    *(_QWORD *)(inited + 56) = &type metadata for XPCKey;
    *(_QWORD *)(inited + 64) = sub_1AF6A82CC();
    v15 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v15;
    *(_QWORD *)(v15 + 16) = v8;
    *(_QWORD *)(v15 + 24) = v10;
    *(_QWORD *)(v15 + 32) = v12;
    *(_BYTE *)(v15 + 40) = v14 & 1;
    swift_bridgeObjectRetain();
    sub_1AF6A63C0(inited);
    OUTLINED_FUNCTION_0_0();
    *(_QWORD *)(v6 + 16) = v21;
    swift_bridgeObjectRelease();
    v22[3] = v23;
    v22[4] = sub_1AF6A634C();
    v22[0] = v6;
    swift_retain();
    sub_1AF76A510();
    if (v3)
    {
      OUTLINED_FUNCTION_82();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
      v16 = sub_1AF6A08AC();
      v18 = v17;
      v20 = v19;
      sub_1AF6A0508(v16, v17, v19);
      sub_1AF6A0EC0(v16, v18, v20);
      return OUTLINED_FUNCTION_82();
    }
  }
}

uint64_t sub_1AF6A2844()
{
  sub_1AF76AB94();
  sub_1AF76A5B8();
  swift_bridgeObjectRelease();
  return 0x207865646E49;
}

uint64_t sub_1AF6A28C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_1AF6A0690();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BD58);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AF778CD0;
  OUTLINED_FUNCTION_9_3();
  v6 = OUTLINED_FUNCTION_79();
  v8 = v7;
  v10 = v9;
  v12 = v11;
  *(_QWORD *)(inited + 56) = &type metadata for XPCKey;
  *(_QWORD *)(inited + 64) = sub_1AF6A82CC();
  v13 = OUTLINED_FUNCTION_16_2();
  *(_QWORD *)(inited + 32) = v13;
  *(_QWORD *)(v13 + 16) = v6;
  *(_QWORD *)(v13 + 24) = v8;
  *(_QWORD *)(v13 + 32) = v10;
  *(_BYTE *)(v13 + 40) = v12 & 1;
  swift_bridgeObjectRetain();
  sub_1AF6A63C0(inited);
  v15 = type metadata accessor for XPCKeyedEncoding(0, a2, a3, v14);
  MEMORY[0x1B5DFC634](&unk_1AF778644, v15);
  return OUTLINED_FUNCTION_50();
}

unint64_t sub_1AF6A29F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  unint64_t result;

  v3 = sub_1AF6A05D0();
  v4 = *(_QWORD *)(v1 + 8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BD58);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AF778CD0;
  OUTLINED_FUNCTION_9_3();
  v6 = OUTLINED_FUNCTION_79();
  v8 = v7;
  v10 = v9;
  v12 = v11;
  *(_QWORD *)(inited + 56) = &type metadata for XPCKey;
  *(_QWORD *)(inited + 64) = sub_1AF6A82CC();
  v13 = OUTLINED_FUNCTION_16_2();
  *(_QWORD *)(inited + 32) = v13;
  *(_QWORD *)(v13 + 16) = v6;
  *(_QWORD *)(v13 + 24) = v8;
  *(_QWORD *)(v13 + 32) = v10;
  *(_BYTE *)(v13 + 40) = v12 & 1;
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_74();
  a1[3] = (uint64_t)&unk_1E5FC02C0;
  result = sub_1AF6A7C84();
  a1[4] = result;
  *a1 = v3;
  a1[1] = v4;
  return result;
}

unint64_t sub_1AF6A2AE8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  unint64_t result;
  uint64_t v12;

  v12 = type metadata accessor for XPCEncoder();
  OUTLINED_FUNCTION_16_2();
  OUTLINED_FUNCTION_92();
  OUTLINED_FUNCTION_9_3();
  v3 = OUTLINED_FUNCTION_79();
  v5 = v4;
  v7 = v6;
  v9 = v8 & 1;
  swift_beginAccess();
  sub_1AF6A64B8((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1AF6A6738);
  v10 = *(_QWORD *)(*(_QWORD *)(v1 + 16) + 16);
  sub_1AF6A65A8(v10, (uint64_t (*)(BOOL))sub_1AF6A6738);
  sub_1AF6A83C4(v10, v3, v5, v7, v9, (uint64_t *)(v1 + 16));
  swift_endAccess();
  sub_1AF6A0768(v1);
  a1[3] = v12;
  result = sub_1AF6A634C();
  a1[4] = result;
  *a1 = v1;
  return result;
}

uint64_t sub_1AF6A2BEC()
{
  uint64_t *v0;

  return sub_1AF6A2430(*v0);
}

void sub_1AF6A2BF4()
{
  sub_1AF6A2468();
}

void sub_1AF6A2C08(char a1)
{
  sub_1AF6A2498(a1);
}

void sub_1AF6A2C1C(uint64_t a1, uint64_t a2)
{
  sub_1AF6A24C8(a1, a2);
}

void sub_1AF6A2C30(double a1)
{
  sub_1AF6A24F0(a1);
}

void sub_1AF6A2C44(float a1)
{
  sub_1AF6A2510(a1);
}

void sub_1AF6A2C58(uint64_t a1)
{
  sub_1AF6A2534(a1);
}

void sub_1AF6A2C6C(char a1)
{
  sub_1AF6A2554(a1);
}

void sub_1AF6A2C80(__int16 a1)
{
  sub_1AF6A2578(a1);
}

void sub_1AF6A2C94(int a1)
{
  sub_1AF6A259C(a1);
}

uint64_t sub_1AF6A2CA8()
{
  return sub_1AF76ACF0();
}

void sub_1AF6A2CBC(uint64_t a1)
{
  sub_1AF6A25C0(a1);
}

void sub_1AF6A2CD0(unsigned __int8 a1)
{
  sub_1AF6A25E0(a1);
}

void sub_1AF6A2CE4(unsigned __int16 a1)
{
  sub_1AF6A2604(a1);
}

void sub_1AF6A2CF8(unsigned int a1)
{
  sub_1AF6A2628(a1);
}

uint64_t sub_1AF6A2D0C()
{
  return sub_1AF76ACFC();
}

uint64_t sub_1AF6A2D20(uint64_t a1, uint64_t a2)
{
  return sub_1AF6A264C(a1, a2);
}

uint64_t sub_1AF6A2D34()
{
  return sub_1AF76AC18();
}

uint64_t sub_1AF6A2D5C()
{
  return sub_1AF76AC3C();
}

uint64_t sub_1AF6A2D84()
{
  return sub_1AF76AC30();
}

uint64_t sub_1AF6A2DAC()
{
  return sub_1AF76AC48();
}

uint64_t sub_1AF6A2DD4()
{
  return sub_1AF76AC54();
}

uint64_t sub_1AF6A2DFC()
{
  return sub_1AF76AC60();
}

uint64_t sub_1AF6A2E24()
{
  return sub_1AF76AC78();
}

uint64_t sub_1AF6A2E4C()
{
  return sub_1AF76AC84();
}

uint64_t sub_1AF6A2E74()
{
  return sub_1AF76AC90();
}

uint64_t sub_1AF6A2E9C()
{
  return sub_1AF76AC9C();
}

uint64_t sub_1AF6A2EC4()
{
  return sub_1AF76ACB4();
}

uint64_t sub_1AF6A2EEC()
{
  return sub_1AF76AC6C();
}

uint64_t sub_1AF6A2F14()
{
  return sub_1AF76ACA8();
}

uint64_t sub_1AF6A2F3C()
{
  return sub_1AF76ACC0();
}

uint64_t sub_1AF6A2F64()
{
  return sub_1AF76ACCC();
}

uint64_t sub_1AF6A2F8C()
{
  return sub_1AF76ACD8();
}

uint64_t sub_1AF6A2FB4()
{
  return sub_1AF76ACE4();
}

uint64_t sub_1AF6A2FDC()
{
  return sub_1AF76AC24();
}

void sub_1AF6A3018()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 16);
  v3 = *(_QWORD *)(*v0 + 24);
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = 0;
  v4 = *(_BYTE *)(v1 + 32);
  *(_BYTE *)(v1 + 32) = 8;
  OUTLINED_FUNCTION_15_1(v2, v3, v4);
  OUTLINED_FUNCTION_13_2();
}

void sub_1AF6A304C(char a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v2 = *v1;
  v3 = a1 & 1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = *(_QWORD *)(*v1 + 24);
  *(_QWORD *)(v2 + 16) = v3;
  *(_QWORD *)(v2 + 24) = 0;
  v6 = *(_BYTE *)(v2 + 32);
  *(_BYTE *)(v2 + 32) = 2;
  OUTLINED_FUNCTION_15_1(v4, v5, v6);
  OUTLINED_FUNCTION_13_2();
}

uint64_t sub_1AF6A3084(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *v2;
  v5 = *(_QWORD *)(*v2 + 16);
  v4 = *(_QWORD *)(*v2 + 24);
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = a2;
  v6 = *(_BYTE *)(v3 + 32);
  *(_BYTE *)(v3 + 32) = 3;
  swift_bridgeObjectRetain();
  return OUTLINED_FUNCTION_15_1(v5, v4, v6);
}

void sub_1AF6A30D8(double a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 16);
  v4 = *(_QWORD *)(*v1 + 24);
  *(double *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = 0;
  v5 = *(_BYTE *)(v2 + 32);
  *(_BYTE *)(v2 + 32) = 6;
  OUTLINED_FUNCTION_15_1(v3, v4, v5);
  OUTLINED_FUNCTION_13_2();
}

void sub_1AF6A3110(float a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 16);
  v4 = *(_QWORD *)(*v1 + 24);
  *(double *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = 0;
  v5 = *(_BYTE *)(v2 + 32);
  *(_BYTE *)(v2 + 32) = 6;
  OUTLINED_FUNCTION_15_1(v3, v4, v5);
  OUTLINED_FUNCTION_13_2();
}

void sub_1AF6A314C(char a1)
{
  OUTLINED_FUNCTION_11_2(a1);
  OUTLINED_FUNCTION_13_2();
}

void sub_1AF6A316C(__int16 a1)
{
  OUTLINED_FUNCTION_11_2(a1);
  OUTLINED_FUNCTION_13_2();
}

void sub_1AF6A318C(int a1)
{
  OUTLINED_FUNCTION_11_2(a1);
  OUTLINED_FUNCTION_13_2();
}

void sub_1AF6A31AC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 16);
  v5 = *(_QWORD *)(*v2 + 24);
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = 0;
  v6 = *(_BYTE *)(v3 + 32);
  *(_BYTE *)(v3 + 32) = a2;
  OUTLINED_FUNCTION_15_1(v4, v5, v6);
  OUTLINED_FUNCTION_13_2();
}

void sub_1AF6A31E4(unsigned __int8 a1)
{
  OUTLINED_FUNCTION_12_2(a1);
  OUTLINED_FUNCTION_13_2();
}

void sub_1AF6A3204(unsigned __int16 a1)
{
  OUTLINED_FUNCTION_12_2(a1);
  OUTLINED_FUNCTION_13_2();
}

void sub_1AF6A3224(unsigned int a1)
{
  OUTLINED_FUNCTION_12_2(a1);
  OUTLINED_FUNCTION_13_2();
}

uint64_t sub_1AF6A3244(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t *v4;
  xpc_object_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  _QWORD v21[5];

  v4 = v2;
  v5 = sub_1AF6A1784(a1, a2);
  if (v5)
  {
    v6 = *v2;
    v8 = *(_QWORD *)(*v2 + 16);
    v7 = *(_QWORD *)(*v2 + 24);
    *(_QWORD *)(v6 + 16) = v5;
    *(_QWORD *)(v6 + 24) = 0;
    v9 = *(_BYTE *)(v6 + 32);
    *(_BYTE *)(v6 + 32) = 7;
    v10 = v8;
    return sub_1AF6A0EC0(v10, v7, v9);
  }
  v12 = type metadata accessor for XPCEncoder();
  v13 = OUTLINED_FUNCTION_24_1();
  OUTLINED_FUNCTION_45();
  v14 = v2[1];
  OUTLINED_FUNCTION_0_0();
  *(_QWORD *)(v13 + 16) = v14;
  OUTLINED_FUNCTION_6_2();
  swift_bridgeObjectRelease();
  v21[3] = v12;
  v21[4] = sub_1AF6A634C();
  v21[0] = v13;
  swift_retain();
  OUTLINED_FUNCTION_84();
  if (!v3)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    v15 = *v4;
    v16 = sub_1AF6A08AC();
    v18 = v17;
    v20 = v19;
    OUTLINED_FUNCTION_20();
    v10 = *(_QWORD *)(v15 + 16);
    v7 = *(_QWORD *)(v15 + 24);
    *(_QWORD *)(v15 + 16) = v16;
    *(_QWORD *)(v15 + 24) = v18;
    v9 = *(_BYTE *)(v15 + 32);
    *(_BYTE *)(v15 + 32) = v20;
    return sub_1AF6A0EC0(v10, v7, v9);
  }
  OUTLINED_FUNCTION_20();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
}

void sub_1AF6A3370()
{
  sub_1AF6A3018();
}

void sub_1AF6A3384(char a1)
{
  sub_1AF6A304C(a1);
}

uint64_t sub_1AF6A3398(uint64_t a1, uint64_t a2)
{
  return sub_1AF6A3084(a1, a2);
}

void sub_1AF6A33AC(double a1)
{
  sub_1AF6A30D8(a1);
}

void sub_1AF6A33C0(float a1)
{
  sub_1AF6A3110(a1);
}

void sub_1AF6A33D4(uint64_t a1)
{
  sub_1AF6A31AC(a1, 4);
}

void sub_1AF6A33EC(char a1)
{
  sub_1AF6A314C(a1);
}

void sub_1AF6A3400(__int16 a1)
{
  sub_1AF6A316C(a1);
}

void sub_1AF6A3414(int a1)
{
  sub_1AF6A318C(a1);
}

uint64_t sub_1AF6A3428()
{
  return sub_1AF76AD50();
}

void sub_1AF6A343C(uint64_t a1)
{
  sub_1AF6A31AC(a1, 5);
}

void sub_1AF6A3454(unsigned __int8 a1)
{
  sub_1AF6A31E4(a1);
}

void sub_1AF6A3468(unsigned __int16 a1)
{
  sub_1AF6A3204(a1);
}

void sub_1AF6A347C(unsigned int a1)
{
  sub_1AF6A3224(a1);
}

uint64_t sub_1AF6A3490()
{
  return sub_1AF76AD5C();
}

uint64_t sub_1AF6A34A4(uint64_t a1, uint64_t a2)
{
  return sub_1AF6A3244(a1, a2);
}

uint64_t sub_1AF6A34C4()
{
  return sub_1AF76AB94();
}

uint64_t sub_1AF6A350C()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void sub_1AF6A3538(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  sub_1AF6A34B8();
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = v5;
}

uint64_t sub_1AF6A3564()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t sub_1AF6A3570@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  char v5;

  result = sub_1AF6A34C4();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_1AF6A359C()
{
  sub_1AF6A82CC();
  return sub_1AF76AF90();
}

uint64_t sub_1AF6A35C4()
{
  sub_1AF6A82CC();
  return sub_1AF76AF9C();
}

_QWORD *sub_1AF6A35EC(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *result;
  uint64_t v10;
  uint64_t v11;

  result = sub_1AF69F788(a1, a2);
  if (!v6)
  {
    v11 = type metadata accessor for XPCKeyedDecoding(0, a5, a6, v10);
    MEMORY[0x1B5DFC634](&unk_1AF778924, v11);
    return (_QWORD *)sub_1AF76AB1C();
  }
  return result;
}

uint64_t sub_1AF6A3670@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  const _xpc_type_s *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;

  v6 = (const _xpc_type_s *)MEMORY[0x1B5DFCA90]();
  if (v6 == (const _xpc_type_s *)sub_1AF76A384())
  {
    a3[3] = &unk_1E5FC0238;
    a3[4] = sub_1AF6A7BD0();
    *a3 = a1;
    a3[1] = a2;
    a3[2] = 0;
    swift_unknownObjectRetain();
    return swift_bridgeObjectRetain();
  }
  else
  {
    v7 = sub_1AF76A99C();
    OUTLINED_FUNCTION_5();
    v9 = v8;
    *v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BC88);
    swift_bridgeObjectRetain();
    sub_1AF76A960();
    swift_bridgeObjectRelease();
    xpc_type_get_name(v6);
    sub_1AF76A5C4();
    OUTLINED_FUNCTION_81();
    OUTLINED_FUNCTION_1();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4B8C0);
    OUTLINED_FUNCTION_14_2();
    sub_1AF76A990();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v9, *MEMORY[0x1E0DEC450], v7);
    return swift_willThrow();
  }
}

void sub_1AF6A37CC(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  a3[3] = &unk_1E5FC14D0;
  a3[4] = sub_1AF6A7B94();
  *a3 = a1;
  a3[1] = a2;
  swift_unknownObjectRetain();
  OUTLINED_FUNCTION_6_2();
  OUTLINED_FUNCTION_72();
}

uint64_t sub_1AF6A381C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AF6A3824()
{
  return swift_bridgeObjectRetain();
}

_QWORD *sub_1AF6A382C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1AF6A35EC(a1, *(_QWORD **)v4, *(_QWORD *)(v4 + 8), a4, a2, a3);
}

uint64_t sub_1AF6A384C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;

  return sub_1AF6A3670(*v1, v1[1], a1);
}

void sub_1AF6A3864(_QWORD *a1@<X8>)
{
  uint64_t *v1;

  sub_1AF6A37CC(*v1, v1[1], a1);
}

uint64_t sub_1AF6A387C(void *a1)
{
  uint64_t v1;

  sub_1AF69B33C(a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BD80);
  sub_1AF6A8380();
  v1 = sub_1AF76A5DC();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1AF6A3900()
{
  swift_bridgeObjectRetain();
  return sub_1AF76AF84();
}

BOOL sub_1AF6A3960(uint64_t a1, void *a2)
{
  uint64_t v3;
  xpc_object_t v4;

  sub_1AF76AF78();
  v3 = sub_1AF76A594();
  v4 = xpc_dictionary_get_value(a2, (const char *)(v3 + 32));
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_67();
  if (v4)
    swift_unknownObjectRelease();
  return v4 != 0;
}

uint64_t sub_1AF6A39D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;

  v23 = a6;
  v26 = a3;
  v12 = sub_1AF76A8AC();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v22 - v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v22 - v14, a1, v12);
  if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, a5) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(a5 - 8) + 32))(a7, v15, a5);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  v16 = sub_1AF76A99C();
  swift_allocError();
  v18 = v17;
  v19 = v23;
  v17[3] = a4;
  v17[4] = v19;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v17);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 16))(boxed_opaque_existential_1, a2, a4);
  v24 = 0;
  v25 = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_1AF76A960();
  sub_1AF76A5B8();
  sub_1AF76AD08();
  sub_1AF76A5B8();
  sub_1AF76AF78();
  sub_1AF76A5B8();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4B8B0);
  sub_1AF76A5B8();
  sub_1AF76A990();
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v18, *MEMORY[0x1E0DEC448], v16);
  return swift_willThrow();
}

BOOL sub_1AF6A3C04(uint64_t a1, void *a2)
{
  uint64_t v3;
  xpc_object_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_6_4();
  v3 = sub_1AF76A594();
  v4 = xpc_dictionary_get_value(a2, (const char *)(v3 + 32));
  OUTLINED_FUNCTION_12_0();
  swift_release();
  if (!v4)
    return 0;
  v5 = MEMORY[0x1B5DFCA90](v4);
  v6 = sub_1AF76A378();
  OUTLINED_FUNCTION_76();
  return v5 == v6;
}

void sub_1AF6A3C98(uint64_t a1, void *a2)
{
  uint64_t v3;

  OUTLINED_FUNCTION_6_4();
  v3 = sub_1AF76A594();
  xpc_dictionary_get_BOOL(a2, (const char *)(v3 + 32));
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_82();
  OUTLINED_FUNCTION_72();
}

uint64_t sub_1AF6A3CEC(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  OUTLINED_FUNCTION_6_4();
  v3 = sub_1AF76A594();
  v4 = xpc_dictionary_get_double(a2, (const char *)(v3 + 32));
  swift_bridgeObjectRelease();
  swift_release();
  return OUTLINED_FUNCTION_20_0(MEMORY[0x1E0DEB070], (uint64_t)&v6, v4);
}

float sub_1AF6A3D94(uint64_t a1, void *a2)
{
  double v2;

  sub_1AF6A3CEC(a1, a2);
  return v2;
}

uint64_t sub_1AF6A3DAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1AF6A3EBC(a1, a2, a3, a4, a5, MEMORY[0x1E0C862A0], MEMORY[0x1E0DEDC60]);
}

uint64_t sub_1AF6A3DD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t result;

  result = sub_1AF6A3EBC(a1, a2, a3, a4, a5, MEMORY[0x1E0C862A0], MEMORY[0x1E0DEDC60]);
  if (!v5)
  {
    if (result < -128)
    {
      __break(1u);
    }
    else if (result <= 127)
    {
      return result;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1AF6A3E10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t result;

  result = sub_1AF6A3EBC(a1, a2, a3, a4, a5, MEMORY[0x1E0C862A0], MEMORY[0x1E0DEDC60]);
  if (!v5)
  {
    if (result < -32768)
    {
      __break(1u);
    }
    else if (result < 0x8000)
    {
      return result;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1AF6A3E50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t result;

  result = sub_1AF6A3EBC(a1, a2, a3, a4, a5, MEMORY[0x1E0C862A0], MEMORY[0x1E0DEDC60]);
  if (!v5)
  {
    if (result < (uint64_t)0xFFFFFFFF80000000)
    {
      __break(1u);
    }
    else if (result <= 0x7FFFFFFF)
    {
      return result;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1AF6A3E98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1AF6A3EBC(a1, a2, a3, a4, a5, MEMORY[0x1E0C862D0], MEMORY[0x1E0DEE190]);
}

uint64_t sub_1AF6A3EBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t), uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v18;
  char v19;
  uint64_t v20;

  OUTLINED_FUNCTION_6_4();
  v14 = sub_1AF76A594();
  v15 = a6(a2, v14 + 32);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_86();
  v18 = v15;
  v19 = 0;
  result = sub_1AF6A39D8((uint64_t)&v18, v7, a3, a4, a7, a5, (uint64_t)&v20);
  if (!v8)
    return v20;
  return result;
}

void sub_1AF6A3F80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  unint64_t v6;

  v6 = sub_1AF6A3EBC(a1, a2, a3, a4, a5, MEMORY[0x1E0C862D0], MEMORY[0x1E0DEE190]);
  if (v5 || v6 < 0x100)
  {
    OUTLINED_FUNCTION_91();
  }
  else
  {
    OUTLINED_FUNCTION_1_5();
    OUTLINED_FUNCTION_0_5();
    __break(1u);
  }
}

void sub_1AF6A3FD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  unint64_t v6;

  v6 = sub_1AF6A3EBC(a1, a2, a3, a4, a5, MEMORY[0x1E0C862D0], MEMORY[0x1E0DEE190]);
  if (v5 || v6 < 0x10000)
  {
    OUTLINED_FUNCTION_91();
  }
  else
  {
    OUTLINED_FUNCTION_1_5();
    OUTLINED_FUNCTION_0_5();
    __break(1u);
  }
}

void sub_1AF6A4030(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  unint64_t v6;

  v6 = sub_1AF6A3EBC(a1, a2, a3, a4, a5, MEMORY[0x1E0C862D0], MEMORY[0x1E0DEE190]);
  if (!v5 && HIDWORD(v6))
  {
    OUTLINED_FUNCTION_1_5();
    OUTLINED_FUNCTION_0_5();
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_91();
  }
}

void *sub_1AF6A4088(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  xpc_object_t v12;
  uint64_t v13;
  uint64_t inited;
  uint64_t *boxed_opaque_existential_1;
  xpc_object_t v17;
  void *v18;

  sub_1AF76AF78();
  v11 = sub_1AF76A594();
  v12 = xpc_dictionary_get_value(a2, (const char *)(v11 + 32));
  swift_bridgeObjectRelease();
  swift_release();
  v17 = v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEE4BD70);
  sub_1AF6A39D8((uint64_t)&v17, a1, a3, a4, v13, a5, (uint64_t)&v18);
  swift_unknownObjectRelease();
  if (!v5)
  {
    a2 = v18;
    sub_1AF76AA08();
    swift_unknownObjectRetain();
    sub_1AF76A4C8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BD58);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1AF778CD0;
    *(_QWORD *)(inited + 56) = a4;
    *(_QWORD *)(inited + 64) = a5;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 32));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 16))(boxed_opaque_existential_1, a1, a4);
    v18 = (void *)a3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1AF6A63C0(inited);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  return a2;
}

void sub_1AF6A4230(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, xpc_object_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  xpc_object_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  void *v54;
  unint64_t v55;
  uint64_t v56;
  __n128 *inited;
  __n128 *v58;
  unint64_t v59;
  uint64_t *boxed_opaque_existential_1;
  void *v61;
  void *v62;
  void (*v63)(uint64_t, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  void *v74[15];

  OUTLINED_FUNCTION_46();
  a19 = v21;
  a20 = v22;
  v72 = v23;
  v73 = v20;
  v68 = v25;
  v69 = v24;
  v27 = v26;
  v29 = v28;
  v31 = v30;
  v33 = v32;
  v35 = v34;
  v66 = sub_1AF76A8AC();
  v67 = *(_QWORD *)(v66 - 8);
  OUTLINED_FUNCTION_66();
  v37 = MEMORY[0x1E0C80A78](v36);
  v70 = (uint64_t)&v65 - v38;
  v71 = v29;
  v39 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v37);
  OUTLINED_FUNCTION_4_3();
  v42 = v41 - v40;
  sub_1AF76AF78();
  v43 = sub_1AF76A594();
  v44 = xpc_dictionary_get_value(v33, (const char *)(v43 + 32));
  v45 = v35;
  v46 = v31;
  swift_bridgeObjectRelease();
  v47 = v72;
  swift_release();
  a10 = v44;
  v48 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEE4BD70);
  v49 = v73;
  sub_1AF6A39D8((uint64_t)&a10, v45, (uint64_t)v47, v31, v48, v27, (uint64_t)v74);
  swift_unknownObjectRelease();
  if (!v49)
  {
    v65 = v39;
    v50 = v67;
    v73 = v27;
    v52 = v70;
    v51 = v71;
    v53 = v74[0];
    sub_1AF6A44FC(v71, v74[0], v71, v70);
    if (__swift_getEnumTagSinglePayload(v52, 1, v51) == 1)
    {
      (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v70, v66);
      OUTLINED_FUNCTION_62();
      swift_unknownObjectRetain();
      v54 = (void *)OUTLINED_FUNCTION_63();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BD58);
      v55 = v46;
      v56 = v45;
      inited = (__n128 *)swift_initStackObject();
      v58 = OUTLINED_FUNCTION_77(inited, (__n128)xmmword_1AF778CD0);
      v59 = v73;
      inited[3].n128_u64[1] = v55;
      inited[4].n128_u64[0] = v59;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)v58);
      (*(void (**)(uint64_t *, uint64_t, unint64_t))(*(_QWORD *)(v55 - 8) + 16))(boxed_opaque_existential_1, v56, v55);
      v74[0] = v47;
      swift_unknownObjectRetain();
      OUTLINED_FUNCTION_13();
      OUTLINED_FUNCTION_6_2();
      sub_1AF6A63C0((uint64_t)inited);
      v61 = v74[0];
      v74[3] = &unk_1E5FBF100;
      v62 = (void *)sub_1AF6A7B58();
      v74[0] = v53;
      v74[1] = v61;
      v74[4] = v62;
      v74[2] = v54;
      swift_bridgeObjectRetain();
      sub_1AF76A768();
      OUTLINED_FUNCTION_23_1();
      OUTLINED_FUNCTION_12_0();
      swift_unknownObjectRelease_n();
    }
    else
    {
      swift_unknownObjectRelease();
      v63 = *(void (**)(uint64_t, uint64_t, uint64_t))(v65 + 32);
      v64 = v71;
      v63(v42, v70, v71);
      v63(v68, v42, v64);
    }
  }
  OUTLINED_FUNCTION_2_2();
}

uint64_t sub_1AF6A44FC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  void *v11;
  uint64_t v12;
  uint64_t v13;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BC60);
  MEMORY[0x1E0C80A78](v8);
  v9 = sub_1AF76A1F8();
  if (MEMORY[0x1E0C80A78](v9) == a1)
  {
    xpc_date_get_value(a2);
    sub_1AF76A1D4();
LABEL_9:
    if (swift_dynamicCast())
    {
      v13 = a4;
      v12 = 0;
    }
    else
    {
      v13 = a4;
      v12 = 1;
    }
    return __swift_storeEnumTagSinglePayload(v13, v12, 1, a3);
  }
  if (a1 != MEMORY[0x1E0CB0338])
  {
    if (sub_1AF76A174() != a1 || !xpc_string_get_string_ptr(a2))
      return __swift_storeEnumTagSinglePayload(a4, 1, 1, a3);
    sub_1AF76A5C4();
    sub_1AF76A168();
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  v11 = (void *)swift_unknownObjectRetain();
  sub_1AF69EA7C(v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BC78);
  v12 = swift_dynamicCast() ^ 1;
  v13 = a4;
  return __swift_storeEnumTagSinglePayload(v13, v12, 1, a3);
}

void sub_1AF6A46D8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  v11 = sub_1AF6A4088(a2, a3, a4, a5, a7);
  if (!v8)
  {
    sub_1AF6A35EC((uint64_t)v11, v11, v12, v13, a6, a8);
    OUTLINED_FUNCTION_1();
    OUTLINED_FUNCTION_23_1();
    OUTLINED_FUNCTION_76();
  }
  OUTLINED_FUNCTION_36();
}

void sub_1AF6A4760(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v6;
  void *v8;
  uint64_t v9;

  v8 = sub_1AF6A4088(a1, a2, a3, a4, a5);
  if (!v6)
  {
    sub_1AF6A3670((uint64_t)v8, v9, a6);
    OUTLINED_FUNCTION_12_0();
    OUTLINED_FUNCTION_23_1();
    OUTLINED_FUNCTION_76();
  }
  OUTLINED_FUNCTION_5_2();
}

void sub_1AF6A47B8(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_1AF76A8AC();
  OUTLINED_FUNCTION_66();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v21 - v12;
  OUTLINED_FUNCTION_89();
  sub_1AF76AF84();
  OUTLINED_FUNCTION_65((uint64_t)v13);
  if (v14)
  {
    __break(1u);
  }
  else
  {
    v15 = sub_1AF6A4088((uint64_t)v13, a1, a2, a3, a4);
    if (v5)
    {
      OUTLINED_FUNCTION_33_0();
    }
    else
    {
      v18 = v15;
      v19 = v16;
      v20 = v17;
      OUTLINED_FUNCTION_33_0();
      a5[3] = &unk_1E5FBF100;
      a5[4] = sub_1AF6A7B58();
      *a5 = v18;
      a5[1] = v19;
      a5[2] = v20;
    }
    OUTLINED_FUNCTION_36();
  }
}

void sub_1AF6A48A4(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v6;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;

  v8 = sub_1AF6A4088(a1, a2, a3, a4, a5);
  if (!v6)
  {
    v11 = v8;
    v12 = v9;
    v13 = v10;
    a6[3] = &unk_1E5FBF100;
    a6[4] = sub_1AF6A7B58();
    *a6 = v11;
    a6[1] = v12;
    a6[2] = v13;
  }
  OUTLINED_FUNCTION_5_2();
}

uint64_t sub_1AF6A48FC()
{
  void **v0;

  return sub_1AF6A387C(*v0);
}

BOOL sub_1AF6A490C(uint64_t a1)
{
  void **v1;

  return sub_1AF6A3960(a1, *v1);
}

BOOL sub_1AF6A491C(uint64_t a1)
{
  void **v1;

  return sub_1AF6A3C04(a1, *v1);
}

uint64_t sub_1AF6A4940(uint64_t a1)
{
  void **v1;
  char v2;

  sub_1AF6A3C98(a1, *v1);
  return v2 & 1;
}

uint64_t sub_1AF6A4964(uint64_t a1)
{
  void **v1;

  return sub_1AF69F8C8(a1, *v1);
}

uint64_t sub_1AF6A4984(uint64_t a1)
{
  void **v1;

  return sub_1AF6A3CEC(a1, *v1);
}

float sub_1AF6A49A4(uint64_t a1)
{
  void **v1;

  return sub_1AF6A3D94(a1, *v1);
}

uint64_t sub_1AF6A49C4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1AF6A3DAC(a1, *v2, v2[1], *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
}

uint64_t sub_1AF6A49E4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1AF6A3DD0(a1, *v2, v2[1], *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
}

uint64_t sub_1AF6A4A04(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1AF6A3E10(a1, *v2, v2[1], *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
}

uint64_t sub_1AF6A4A24(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1AF6A3E50(a1, *v2, v2[1], *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
}

uint64_t sub_1AF6A4A44(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1AF6A3EBC(a1, *v2, v2[1], *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), MEMORY[0x1E0C862A0], MEMORY[0x1E0DEDC60]);
}

uint64_t sub_1AF6A4A74()
{
  return sub_1AF76ADC8();
}

uint64_t sub_1AF6A4A88(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1AF6A3E98(a1, *v2, v2[1], *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
}

void sub_1AF6A4AA8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_1AF6A3F80(a1, *v2, v2[1], *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
}

void sub_1AF6A4AC8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_1AF6A3FD8(a1, *v2, v2[1], *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
}

void sub_1AF6A4AE8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_1AF6A4030(a1, *v2, v2[1], *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
}

uint64_t sub_1AF6A4B08(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1AF6A3EBC(a1, *v2, v2[1], *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), MEMORY[0x1E0C862D0], MEMORY[0x1E0DEE190]);
}

uint64_t sub_1AF6A4B38()
{
  return sub_1AF76ADD4();
}

#error "1AF6A4B68: call analysis failed (funcsize=10)"

uint64_t sub_1AF6A4B74()
{
  return sub_1AF76AD74();
}

uint64_t sub_1AF6A4B88()
{
  return sub_1AF76AD68();
}

uint64_t sub_1AF6A4B9C()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_1AF76AD80();
  if (v0)
    return v2;
  return result;
}

uint64_t sub_1AF6A4BBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AF6A4D3C(a1, a2, a3, MEMORY[0x1E0DED7E8]);
}

uint64_t sub_1AF6A4BD8()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_1AF76AD8C();
  if (v0)
    return v2;
  return result;
}

void sub_1AF6A4BF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1AF6A4CC4(a1, a2, a3, MEMORY[0x1E0DED808]);
}

void sub_1AF6A4C14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1AF6A4D00(a1, a2, a3, MEMORY[0x1E0DED810]);
}

uint64_t sub_1AF6A4C30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AF6A4D3C(a1, a2, a3, MEMORY[0x1E0DED818]);
}

uint64_t sub_1AF6A4C4C()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_1AF76ADB0();
  if (v0)
    return v2;
  return result;
}

uint64_t sub_1AF6A4C6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AF6A4D98(a1, a2, a3, MEMORY[0x1E0DED830]);
}

uint64_t sub_1AF6A4C88()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_1AF76AD98();
  if (v0)
    return v2;
  return result;
}

void sub_1AF6A4CA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1AF6A4CC4(a1, a2, a3, MEMORY[0x1E0DED828]);
}

void sub_1AF6A4CC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  __int16 v4;

  v4 = a4();
  OUTLINED_FUNCTION_68(v4 & 0x1FF);
  OUTLINED_FUNCTION_55();
}

void sub_1AF6A4CE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1AF6A4D00(a1, a2, a3, MEMORY[0x1E0DED838]);
}

void sub_1AF6A4D00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v4;

  v4 = a4();
  OUTLINED_FUNCTION_68(v4 & 0x1FFFF);
  OUTLINED_FUNCTION_55();
}

uint64_t sub_1AF6A4D20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AF6A4D3C(a1, a2, a3, MEMORY[0x1E0DED840]);
}

uint64_t sub_1AF6A4D3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  unint64_t v4;

  v4 = a4();
  return OUTLINED_FUNCTION_53(v4);
}

uint64_t sub_1AF6A4D5C()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_1AF76ADBC();
  if (v0)
    return v2;
  return result;
}

uint64_t sub_1AF6A4D7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AF6A4D98(a1, a2, a3, MEMORY[0x1E0DED850]);
}

uint64_t sub_1AF6A4D98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  result = a4();
  if (v4)
    return v6;
  return result;
}

uint64_t sub_1AF6A4DBC()
{
  return sub_1AF76ADA4();
}

void sub_1AF6A4DE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  sub_1AF6A46D8(a1, a2, *(void **)v5, *(_QWORD *)(v5 + 8), *(_QWORD *)(a5 + 16), a3, *(_QWORD *)(a5 + 24), a4);
}

void sub_1AF6A4E0C(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;

  sub_1AF6A4760(a1, *(void **)v3, *(_QWORD *)(v3 + 8), *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
}

void sub_1AF6A4E2C(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  sub_1AF6A47B8(*(void **)v2, *(_QWORD *)(v2 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a2);
}

void sub_1AF6A4E4C(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;

  sub_1AF6A48A4(a1, *(void **)v3, *(_QWORD *)(v3 + 8), *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
}

size_t sub_1AF6A4E6C(void *a1)
{
  return xpc_array_get_count(a1);
}

void sub_1AF6A4E84(void *a1)
{
  xpc_array_get_count(a1);
  OUTLINED_FUNCTION_19();
}

_QWORD *sub_1AF6A4EA8(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD v7[2];

  if (a2)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    v3 = sub_1AF76A99C();
    swift_allocError();
    v5 = v4;
    *v4 = MEMORY[0x1E0DEA968];
    v7[0] = 0;
    v7[1] = 0xE000000000000000;
    swift_bridgeObjectRetain();
    sub_1AF76A960();
    sub_1AF76A5B8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4B8C0);
    sub_1AF76A5B8();
    a1 = v7;
    sub_1AF76A5B8();
    sub_1AF76A990();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(v5, *MEMORY[0x1E0DEC450], v3);
    swift_willThrow();
  }
  return a1;
}

void sub_1AF6A5010()
{
  uint64_t v0;
  size_t v1;
  id v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = xpc_array_get_value(*(xpc_object_t *)v0, v1);
  if (__OFADD__(v1, 1))
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v0 + 16) = v1 + 1;
    MEMORY[0x1B5DFCA90]();
    sub_1AF76A378();
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_72();
  }
}

void sub_1AF6A507C()
{
  uint64_t v0;
  size_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  xpc_array_get_BOOL(*(xpc_object_t *)v0, v1);
  if (__OFADD__(v1, 1))
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_87(v1 + 1);
    OUTLINED_FUNCTION_60();
  }
}

uint64_t sub_1AF6A50B4()
{
  uint64_t v0;
  uint64_t v1;
  size_t v2;
  _QWORD *string;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t result;

  v2 = *(_QWORD *)(v0 + 16);
  string = xpc_array_get_string(*(xpc_object_t *)v0, v2);
  if (string)
  {
    string = (_QWORD *)sub_1AF76A5C4();
    v5 = v4;
  }
  else
  {
    v5 = 0;
  }
  v6 = sub_1AF6A4EA8(string, v5);
  result = OUTLINED_FUNCTION_1();
  if (v1)
    return (uint64_t)v6;
  if (!__OFADD__(v2, 1))
  {
    *(_QWORD *)(v0 + 16) = v2 + 1;
    return (uint64_t)v6;
  }
  __break(1u);
  return result;
}

void sub_1AF6A5150()
{
  uint64_t v0;

  OUTLINED_FUNCTION_41();
  if (__OFADD__(v0, 1))
    __break(1u);
  else
    OUTLINED_FUNCTION_87(v0 + 1);
}

void sub_1AF6A517C()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_41();
  if (__OFADD__(v1, 1))
    __break(1u);
  else
    *(_QWORD *)(v0 + 16) = v1 + 1;
}

void sub_1AF6A51B0()
{
  uint64_t v0;
  uint64_t v1;
  int64_t v2;

  v2 = OUTLINED_FUNCTION_18_2();
  if (__OFADD__(v1, 1))
  {
    __break(1u);
    goto LABEL_6;
  }
  *(_QWORD *)(v0 + 16) = v1 + 1;
  if (v2 < -128)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v2 <= 127)
  {
    OUTLINED_FUNCTION_60();
    return;
  }
LABEL_7:
  __break(1u);
}

void sub_1AF6A51F4()
{
  uint64_t v0;
  uint64_t v1;
  int64_t v2;

  v2 = OUTLINED_FUNCTION_18_2();
  if (__OFADD__(v1, 1))
  {
    __break(1u);
    goto LABEL_6;
  }
  *(_QWORD *)(v0 + 16) = v1 + 1;
  if (v2 < -32768)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v2 < 0x8000)
  {
    OUTLINED_FUNCTION_60();
    return;
  }
LABEL_7:
  __break(1u);
}

void sub_1AF6A5238()
{
  uint64_t v0;
  uint64_t v1;
  int64_t v2;

  v2 = OUTLINED_FUNCTION_18_2();
  if (__OFADD__(v1, 1))
  {
    __break(1u);
    goto LABEL_6;
  }
  *(_QWORD *)(v0 + 16) = v1 + 1;
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v2 <= 0x7FFFFFFF)
  {
    OUTLINED_FUNCTION_60();
    return;
  }
LABEL_7:
  __break(1u);
}

void sub_1AF6A5284(uint64_t (*a1)(_QWORD, _QWORD))
{
  uint64_t v1;

  OUTLINED_FUNCTION_30(a1);
  if (__OFADD__(v1, 1))
    __break(1u);
  else
    OUTLINED_FUNCTION_87(v1 + 1);
}

void sub_1AF6A52B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_19_1();
  if (__OFADD__(v1, 1))
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v0 + 16) = v1 + 1;
    if (v2 < 0x100)
    {
      OUTLINED_FUNCTION_32_0();
      return;
    }
  }
  OUTLINED_FUNCTION_1_5();
  OUTLINED_FUNCTION_0_5();
  __break(1u);
}

void sub_1AF6A5310()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_19_1();
  if (__OFADD__(v1, 1))
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v0 + 16) = v1 + 1;
    if (v2 < 0x10000)
    {
      OUTLINED_FUNCTION_32_0();
      return;
    }
  }
  OUTLINED_FUNCTION_1_5();
  OUTLINED_FUNCTION_0_5();
  __break(1u);
}

void sub_1AF6A5370()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_19_1();
  if (__OFADD__(v1, 1))
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v0 + 16) = v1 + 1;
    if (!HIDWORD(v2))
    {
      OUTLINED_FUNCTION_32_0();
      return;
    }
  }
  OUTLINED_FUNCTION_1_5();
  OUTLINED_FUNCTION_0_5();
  __break(1u);
}

void sub_1AF6A53D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  size_t v17;
  xpc_object_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  xpc_object_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  unint64_t v36;

  OUTLINED_FUNCTION_46();
  v2 = v0;
  v4 = v3;
  v6 = v5;
  v31 = v7;
  v8 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_4_3();
  v29 = v11 - v10;
  v12 = sub_1AF76A8AC();
  v13 = *(_QWORD *)(v12 - 8);
  OUTLINED_FUNCTION_66();
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v27 - v15;
  v17 = *(_QWORD *)(v2 + 16);
  v18 = xpc_array_get_value(*(xpc_object_t *)v2, v17);
  v30 = v4;
  sub_1AF6A44FC(v6, v18, v6, (uint64_t)v16);
  OUTLINED_FUNCTION_65((uint64_t)v16);
  if (v19)
  {
    v28 = v8;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
    OUTLINED_FUNCTION_62();
    swift_unknownObjectRetain();
    v20 = MEMORY[0x1E0DEE9D8];
    v21 = OUTLINED_FUNCTION_63();
    v35 = &unk_1E5FBF100;
    v22 = sub_1AF6A7B58();
    v32 = v18;
    v33 = v20;
    v36 = v22;
    v34 = v21;
    swift_bridgeObjectRetain();
    v23 = v29;
    sub_1AF76A768();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    if (!v1)
    {
      v24 = *(_QWORD *)(v2 + 16);
      v25 = __OFADD__(v24, 1);
      v26 = v24 + 1;
      if (v25)
        goto LABEL_10;
      *(_QWORD *)(v2 + 16) = v26;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 32))(v31, v23, v6);
    }
LABEL_8:
    OUTLINED_FUNCTION_2_2();
    return;
  }
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v31, v16, v6);
  if (!__OFADD__(v17, 1))
  {
    *(_QWORD *)(v2 + 16) = v17 + 1;
    goto LABEL_8;
  }
  __break(1u);
LABEL_10:
  __break(1u);
}

uint64_t sub_1AF6A55AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5 = (_QWORD *)sub_1AF6A5630();
  sub_1AF6A35EC((uint64_t)v5, v5, v6, v7, a2, a3);
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_23_1();
  return swift_unknownObjectRelease();
}

uint64_t sub_1AF6A5630()
{
  uint64_t v0;
  size_t v1;
  xpc_object_t v2;
  uint64_t inited;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = xpc_array_get_value(*(xpc_object_t *)v0, v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BD58);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AF778CD0;
  v4 = sub_1AF6A2844();
  v6 = v5;
  v8 = v7;
  v10 = v9;
  *(_QWORD *)(inited + 56) = &type metadata for XPCKey;
  *(_QWORD *)(inited + 64) = sub_1AF6A82CC();
  v11 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v11;
  *(_QWORD *)(v11 + 16) = v4;
  *(_QWORD *)(v11 + 24) = v6;
  *(_QWORD *)(v11 + 32) = v8;
  *(_BYTE *)(v11 + 40) = v10 & 1;
  swift_bridgeObjectRetain();
  result = sub_1AF6A63C0(inited);
  if (__OFADD__(v1, 1))
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v0 + 16) = v1 + 1;
    sub_1AF76AA08();
    sub_1AF76A4C8();
    return (uint64_t)v2;
  }
  return result;
}

void sub_1AF6A5770(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1AF6A5630();
  sub_1AF6A3670(v2, v3, a1);
  OUTLINED_FUNCTION_12_0();
  OUTLINED_FUNCTION_23_1();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_21_1();
}

void sub_1AF6A57C8(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = sub_1AF6A5630();
  v4 = v3;
  v6 = v5;
  a1[3] = (uint64_t)&unk_1E5FBF100;
  a1[4] = sub_1AF6A7B58();
  *a1 = v2;
  a1[1] = v4;
  a1[2] = v6;
  OUTLINED_FUNCTION_5_2();
}

size_t sub_1AF6A581C()
{
  void **v0;

  return sub_1AF6A4E6C(*v0);
}

void sub_1AF6A5838()
{
  void **v0;

  sub_1AF6A4E84(*v0);
}

uint64_t sub_1AF6A5844()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t sub_1AF6A584C()
{
  char v0;

  sub_1AF6A5010();
  return v0 & 1;
}

uint64_t sub_1AF6A5864()
{
  char v0;

  sub_1AF6A507C();
  return v0 & 1;
}

uint64_t sub_1AF6A587C()
{
  return sub_1AF6A50B4();
}

void sub_1AF6A5890()
{
  sub_1AF6A5150();
}

void sub_1AF6A58A4()
{
  sub_1AF6A517C();
}

void sub_1AF6A58B8()
{
  sub_1AF6A5284(MEMORY[0x1E0C85E60]);
}

void sub_1AF6A58D4()
{
  sub_1AF6A51B0();
}

void sub_1AF6A58E8()
{
  sub_1AF6A51F4();
}

void sub_1AF6A58FC()
{
  sub_1AF6A5238();
}

uint64_t sub_1AF6A5910()
{
  return sub_1AF76AC00();
}

void sub_1AF6A5924()
{
  sub_1AF6A5284(MEMORY[0x1E0C85E78]);
}

void sub_1AF6A5940()
{
  sub_1AF6A52B0();
}

void sub_1AF6A5954()
{
  sub_1AF6A5310();
}

void sub_1AF6A5968()
{
  sub_1AF6A5370();
}

uint64_t sub_1AF6A597C()
{
  return sub_1AF76AC0C();
}

void sub_1AF6A5990()
{
  sub_1AF6A53D0();
}

uint64_t sub_1AF6A59A4()
{
  return sub_1AF76ABAC();
}

uint64_t sub_1AF6A59B8()
{
  return sub_1AF76ABA0();
}

uint64_t sub_1AF6A59CC()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_1AF76ABB8();
  if (v0)
    return v2;
  return result;
}

uint64_t sub_1AF6A59EC(uint64_t a1, uint64_t a2)
{
  return sub_1AF6A5B6C(a1, a2, MEMORY[0x1E0DED2E0]);
}

uint64_t sub_1AF6A5A08()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_1AF76ABC4();
  if (v0)
    return v2;
  return result;
}

void sub_1AF6A5A28(uint64_t a1, uint64_t a2)
{
  sub_1AF6A5AF4(a1, a2, MEMORY[0x1E0DED300]);
}

void sub_1AF6A5A44(uint64_t a1, uint64_t a2)
{
  sub_1AF6A5B30(a1, a2, MEMORY[0x1E0DED308]);
}

uint64_t sub_1AF6A5A60(uint64_t a1, uint64_t a2)
{
  return sub_1AF6A5B6C(a1, a2, MEMORY[0x1E0DED310]);
}

uint64_t sub_1AF6A5A7C()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_1AF76ABE8();
  if (v0)
    return v2;
  return result;
}

uint64_t sub_1AF6A5A9C(uint64_t a1, uint64_t a2)
{
  return sub_1AF6A5BC8(a1, a2, MEMORY[0x1E0DED328]);
}

uint64_t sub_1AF6A5AB8()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_1AF76ABD0();
  if (v0)
    return v2;
  return result;
}

void sub_1AF6A5AD8(uint64_t a1, uint64_t a2)
{
  sub_1AF6A5AF4(a1, a2, MEMORY[0x1E0DED320]);
}

void sub_1AF6A5AF4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  __int16 v3;

  v3 = a3();
  OUTLINED_FUNCTION_68(v3 & 0x1FF);
  OUTLINED_FUNCTION_55();
}

void sub_1AF6A5B14(uint64_t a1, uint64_t a2)
{
  sub_1AF6A5B30(a1, a2, MEMORY[0x1E0DED330]);
}

void sub_1AF6A5B30(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v3;

  v3 = a3();
  OUTLINED_FUNCTION_68(v3 & 0x1FFFF);
  OUTLINED_FUNCTION_55();
}

uint64_t sub_1AF6A5B50(uint64_t a1, uint64_t a2)
{
  return sub_1AF6A5B6C(a1, a2, MEMORY[0x1E0DED338]);
}

uint64_t sub_1AF6A5B6C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  unint64_t v3;

  v3 = a3();
  return OUTLINED_FUNCTION_53(v3);
}

uint64_t sub_1AF6A5B8C()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_1AF76ABF4();
  if (v0)
    return v2;
  return result;
}

uint64_t sub_1AF6A5BAC(uint64_t a1, uint64_t a2)
{
  return sub_1AF6A5BC8(a1, a2, MEMORY[0x1E0DED348]);
}

uint64_t sub_1AF6A5BC8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  result = a3();
  if (v3)
    return v5;
  return result;
}

uint64_t sub_1AF6A5BEC()
{
  return sub_1AF76ABDC();
}

uint64_t sub_1AF6A5C14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AF6A55AC(a1, a2, a3);
}

void sub_1AF6A5C28(_QWORD *a1@<X8>)
{
  sub_1AF6A5770(a1);
}

void sub_1AF6A5C3C(uint64_t *a1@<X8>)
{
  sub_1AF6A57C8(a1);
}

void sub_1AF6A5C50()
{
  MEMORY[0x1B5DFCA90]();
  sub_1AF76A378();
  OUTLINED_FUNCTION_19();
}

uint64_t sub_1AF6A5C78(uint64_t result)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t *v3;

  if (!result)
  {
    v1 = sub_1AF76A99C();
    swift_allocError();
    v3 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4B8C0);
    *v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4B920);
    swift_bridgeObjectRetain();
    sub_1AF76A960();
    sub_1AF76A5B8();
    sub_1AF76A5B8();
    sub_1AF76A5B8();
    sub_1AF76A990();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v1 - 8) + 104))(v3, *MEMORY[0x1E0DEC450], v1);
    return swift_willThrow();
  }
  return result;
}

BOOL sub_1AF6A5DD0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1AF76A360();
  swift_unknownObjectRelease();
  return v2 == a1;
}

uint64_t sub_1AF6A5E10(void *a1)
{
  uint64_t v1;
  const char *string_ptr;
  uint64_t result;

  string_ptr = xpc_string_get_string_ptr(a1);
  result = sub_1AF6A5C78((uint64_t)string_ptr);
  if (!v1)
    return sub_1AF76A5C4();
  return result;
}

double sub_1AF6A5E60(void *a1)
{
  return xpc_double_get_value(a1);
}

float sub_1AF6A5E84(void *a1)
{
  return xpc_double_get_value(a1);
}

void sub_1AF6A5EAC(void *a1)
{
  OUTLINED_FUNCTION_40(a1);
  OUTLINED_FUNCTION_13_2();
}

void sub_1AF6A5EC8(void *a1)
{
  int64_t v1;

  v1 = OUTLINED_FUNCTION_40(a1);
  if (v1 < -128)
  {
    __break(1u);
  }
  else if (v1 <= 127)
  {
    OUTLINED_FUNCTION_13_2();
    return;
  }
  __break(1u);
}

void sub_1AF6A5EFC(void *a1)
{
  int64_t v1;

  v1 = OUTLINED_FUNCTION_40(a1);
  if (v1 < -32768)
  {
    __break(1u);
  }
  else if (v1 < 0x8000)
  {
    OUTLINED_FUNCTION_13_2();
    return;
  }
  __break(1u);
}

void sub_1AF6A5F30(void *a1)
{
  int64_t v1;

  v1 = OUTLINED_FUNCTION_40(a1);
  if (v1 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (v1 <= 0x7FFFFFFF)
  {
    OUTLINED_FUNCTION_13_2();
    return;
  }
  __break(1u);
}

void sub_1AF6A5F6C(void *a1)
{
  OUTLINED_FUNCTION_42(a1);
  OUTLINED_FUNCTION_13_2();
}

void sub_1AF6A5F88(void *a1)
{
  if (OUTLINED_FUNCTION_42(a1) >= 0x100)
  {
    OUTLINED_FUNCTION_1_5();
    OUTLINED_FUNCTION_0_5();
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_32_0();
  }
}

void sub_1AF6A5FD8(void *a1)
{
  if (OUTLINED_FUNCTION_42(a1) >= 0x10000)
  {
    OUTLINED_FUNCTION_1_5();
    OUTLINED_FUNCTION_0_5();
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_32_0();
  }
}

void sub_1AF6A6028(void *a1)
{
  if (OUTLINED_FUNCTION_42(a1) >> 32)
  {
    OUTLINED_FUNCTION_1_5();
    OUTLINED_FUNCTION_0_5();
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_32_0();
  }
}

void sub_1AF6A6078()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  _QWORD v20[6];
  char *v21;

  OUTLINED_FUNCTION_46();
  v1 = v0;
  v3 = v2;
  v21 = v4;
  v5 = sub_1AF76A8AC();
  v6 = *(_QWORD *)(v5 - 8);
  OUTLINED_FUNCTION_66();
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v20 - v9;
  v11 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_4_3();
  v14 = (char *)(v13 - v12);
  sub_1AF6A44FC(v1, v3, v1, (uint64_t)v10);
  OUTLINED_FUNCTION_65((uint64_t)v10);
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);
    OUTLINED_FUNCTION_62();
    swift_unknownObjectRetain();
    v16 = MEMORY[0x1E0DEE9D8];
    v17 = OUTLINED_FUNCTION_63();
    v20[4] = &unk_1E5FBF100;
    v18 = sub_1AF6A7B58();
    v20[1] = v3;
    v20[2] = v16;
    v20[5] = v18;
    v20[3] = v17;
    sub_1AF76A768();
  }
  else
  {
    v19 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v19(v14, v10, v1);
    v19(v21, v14, v1);
  }
  OUTLINED_FUNCTION_2_2();
}

void sub_1AF6A61D8()
{
  sub_1AF6A5C50();
}

BOOL sub_1AF6A61E0()
{
  uint64_t *v0;

  return sub_1AF6A5DD0(*v0);
}

uint64_t sub_1AF6A61FC()
{
  void **v0;

  return sub_1AF6A5E10(*v0);
}

double sub_1AF6A6214()
{
  void **v0;

  return sub_1AF6A5E60(*v0);
}

float sub_1AF6A622C()
{
  void **v0;

  return sub_1AF6A5E84(*v0);
}

void sub_1AF6A6244()
{
  void **v0;

  sub_1AF6A5EAC(*v0);
}

void sub_1AF6A625C()
{
  void **v0;

  sub_1AF6A5EC8(*v0);
}

void sub_1AF6A6274()
{
  void **v0;

  sub_1AF6A5EFC(*v0);
}

void sub_1AF6A628C()
{
  void **v0;

  sub_1AF6A5F30(*v0);
}

uint64_t sub_1AF6A62A4()
{
  return sub_1AF76AD2C();
}

void sub_1AF6A62B8()
{
  void **v0;

  sub_1AF6A5F6C(*v0);
}

void sub_1AF6A62D0()
{
  void **v0;

  sub_1AF6A5F88(*v0);
}

void sub_1AF6A62E8()
{
  void **v0;

  sub_1AF6A5FD8(*v0);
}

void sub_1AF6A6300()
{
  void **v0;

  sub_1AF6A6028(*v0);
}

uint64_t sub_1AF6A6318()
{
  return sub_1AF76AD38();
}

void sub_1AF6A632C()
{
  sub_1AF6A6078();
}

unint64_t sub_1AF6A634C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEE4CDA0;
  if (!qword_1EEE4CDA0)
  {
    v1 = type metadata accessor for XPCEncoder();
    result = MEMORY[0x1B5DFC634](&unk_1AF778558, v1);
    atomic_store(result, (unint64_t *)&qword_1EEE4CDA0);
  }
  return result;
}

void sub_1AF6A6388(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  OUTLINED_FUNCTION_19();
}

uint64_t sub_1AF6A63C0(uint64_t result)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  int64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  v2 = *(_QWORD *)(result + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v6 = result;
  result = swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)result || v5 > *(_QWORD *)(v3 + 24) >> 1)
  {
    if (v4 <= v5)
      v7 = v4 + v2;
    else
      v7 = v4;
    result = (uint64_t)sub_1AF6A6738((char *)result, v7, 1, v3);
    v3 = result;
  }
  if (!*(_QWORD *)(v6 + 16))
  {
    if (!v2)
      goto LABEL_14;
    goto LABEL_16;
  }
  v8 = *(_QWORD *)(v3 + 16);
  if ((*(_QWORD *)(v3 + 24) >> 1) - v8 < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  result = sub_1AF6A73A8(v6 + 32, v2, v3 + 40 * v8 + 32);
  if (!v2)
  {
LABEL_14:
    result = swift_bridgeObjectRelease();
    *v1 = v3;
    return result;
  }
  v9 = *(_QWORD *)(v3 + 16);
  v10 = __OFADD__(v9, v2);
  v11 = v9 + v2;
  if (!v10)
  {
    *(_QWORD *)(v3 + 16) = v11;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

void sub_1AF6A649C()
{
  sub_1AF6A6528(&qword_1EEE4CD10, (void (*)(_QWORD, uint64_t, _QWORD *, uint64_t))sub_1AF6A69C4, (void (*)(uint64_t, uint64_t, _QWORD *))sub_1AF6A6ED8);
}

uint64_t sub_1AF6A64B8(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;

  v3 = *v1;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v1 = v3;
  if (!(_DWORD)result)
  {
    result = a1(result, *(_QWORD *)(v3 + 16) + 1, 1, v3);
    *v1 = result;
  }
  return result;
}

void sub_1AF6A650C()
{
  sub_1AF6A6528((uint64_t *)&unk_1EEE4A2B8, (void (*)(_QWORD, uint64_t, _QWORD *, uint64_t))sub_1AF6A6CC8, (void (*)(uint64_t, uint64_t, _QWORD *))sub_1AF6A6ED8);
}

void sub_1AF6A6528(uint64_t *a1, void (*a2)(_QWORD, uint64_t, _QWORD *, uint64_t), void (*a3)(uint64_t, uint64_t, _QWORD *))
{
  uint64_t *v3;
  uint64_t v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;

  v7 = *v3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v3 = v7;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1AF6A682C(0, *(_QWORD *)(v7 + 16) + 1, 1, v7, a1, a2, a3);
    *v3 = v9;
  }
  OUTLINED_FUNCTION_43();
}

void sub_1AF6A658C(uint64_t a1)
{
  sub_1AF6A6604(a1, &qword_1EEE4CD10, (void (*)(_QWORD, uint64_t, _QWORD *, uint64_t))sub_1AF6A69C4, (void (*)(uint64_t, uint64_t, _QWORD *))sub_1AF6A6ED8);
}

uint64_t sub_1AF6A65A8(uint64_t result, uint64_t (*a2)(BOOL))
{
  uint64_t v2;
  unint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)v2 + 24);
  if (result + 1 > (uint64_t)(v3 >> 1))
  {
    result = a2(v3 > 1);
    *(_QWORD *)v2 = result;
  }
  return result;
}

void sub_1AF6A65E8(uint64_t a1)
{
  sub_1AF6A6604(a1, (uint64_t *)&unk_1EEE4A2B8, (void (*)(_QWORD, uint64_t, _QWORD *, uint64_t))sub_1AF6A6CC8, (void (*)(uint64_t, uint64_t, _QWORD *))sub_1AF6A6ED8);
}

void sub_1AF6A6604(uint64_t a1, uint64_t *a2, void (*a3)(_QWORD, uint64_t, _QWORD *, uint64_t), void (*a4)(uint64_t, uint64_t, _QWORD *))
{
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;

  v5 = *(_QWORD *)(*v4 + 24);
  if (a1 + 1 > (uint64_t)(v5 >> 1))
  {
    sub_1AF6A682C(v5 > 1, a1 + 1, 1, *v4, a2, a3, a4);
    *v4 = v6;
  }
}

char *sub_1AF6A664C(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BCB8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 8);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  if ((v5 & 1) != 0)
  {
    sub_1AF6A6FE4((char *)(a4 + 32), v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1AF6A6AB8(0, v8, (unint64_t)v12, a4);
  }
  return v10;
}

char *sub_1AF6A6738(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BD58);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  if ((v5 & 1) != 0)
  {
    sub_1AF6A7068((char *)(a4 + 32), v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1AF6A6BAC(0, v8, (unint64_t)v12, a4);
  }
  return v10;
}

void sub_1AF6A682C(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t *a5, void (*a6)(_QWORD, uint64_t, _QWORD *, uint64_t), void (*a7)(uint64_t, uint64_t, _QWORD *))
{
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;

  if ((a3 & 1) != 0)
  {
    OUTLINED_FUNCTION_59();
    if (v12 != v13)
    {
      if (v11 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_58();
    }
  }
  else
  {
    v11 = a2;
  }
  v14 = *(_QWORD *)(a4 + 16);
  if (v11 <= v14)
    v15 = *(_QWORD *)(a4 + 16);
  else
    v15 = v11;
  if (v15)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v16 = (_QWORD *)OUTLINED_FUNCTION_16_2();
    _swift_stdlib_malloc_size(v16);
    OUTLINED_FUNCTION_83();
    v16[2] = v14;
    v16[3] = v17;
  }
  else
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v18 = v16 + 4;
  if ((a1 & 1) != 0)
  {
    a7(a4 + 32, v14, v18);
    *(_QWORD *)(a4 + 16) = 0;
    OUTLINED_FUNCTION_10();
  }
  else
  {
    a6(0, v14, v18, a4);
  }
  OUTLINED_FUNCTION_43();
}

void sub_1AF6A68F4(char a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;

  if ((a3 & 1) != 0)
  {
    OUTLINED_FUNCTION_59();
    if (v7 != v8)
    {
      if (v6 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_58();
    }
  }
  else
  {
    v6 = a2;
  }
  v9 = *(_QWORD *)(a4 + 16);
  if (v6 <= v9)
    v10 = *(_QWORD *)(a4 + 16);
  else
    v10 = v6;
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEE4B600);
    v11 = (char *)OUTLINED_FUNCTION_16_2();
    v12 = _swift_stdlib_malloc_size(v11);
    *((_QWORD *)v11 + 2) = v9;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 24);
  }
  else
  {
    v11 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v11 + 32;
  if ((a1 & 1) != 0)
  {
    sub_1AF6A7180((char *)(a4 + 32), v9, v13);
    *(_QWORD *)(a4 + 16) = 0;
    OUTLINED_FUNCTION_10();
  }
  else
  {
    sub_1AF6A6DDC(0, v9, (unint64_t)v13, a4);
  }
  OUTLINED_FUNCTION_43();
}

uint64_t sub_1AF6A69C4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1AF76AA74();
  __break(1u);
  return result;
}

uint64_t sub_1AF6A6AB8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 8 * a1 + 32;
    v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1AF76AA74();
  __break(1u);
  return result;
}

uint64_t sub_1AF6A6BAC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BD68);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1AF76AA74();
  __break(1u);
  return result;
}

uint64_t sub_1AF6A6CC8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_1ED01F680);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1AF76AA74();
  __break(1u);
  return result;
}

uint64_t sub_1AF6A6DDC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1AF76AA74();
  __break(1u);
  return result;
}

char *sub_1AF6A6ED8(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1AF76AA74();
    __break(1u);
  }
  else if (__dst != __src || &__src[16 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 16 * a2);
  }
  return __src;
}

char *sub_1AF6A6F5C(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1AF76AA74();
    __break(1u);
  }
  else if (__dst != __src || &__src[24 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 24 * a2);
  }
  return __src;
}

char *sub_1AF6A6FE4(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1AF76AA74();
    __break(1u);
  }
  else if (__dst != __src || &__src[8 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 8 * a2);
  }
  return __src;
}

char *sub_1AF6A7068(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1AF76AA74();
    __break(1u);
  }
  else if (__dst != __src || &__src[40 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 40 * a2);
  }
  return __src;
}

char *sub_1AF6A70F4(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1AF76AA74();
    __break(1u);
  }
  else if (__dst != __src || &__src[48 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 48 * a2);
  }
  return __src;
}

char *sub_1AF6A7180(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1AF76AA74();
    __break(1u);
  }
  else if (__dst != __src || &__src[24 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 24 * a2);
  }
  return __src;
}

uint64_t sub_1AF6A720C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;

  if ((a2 & 0x8000000000000000) == 0 && (a3 + 16 * a2 <= a1 || a1 + 16 * a2 <= a3))
    return swift_arrayInitWithCopy();
  result = sub_1AF76AA74();
  __break(1u);
  return result;
}

uint64_t sub_1AF6A72D8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;

  if ((a2 & 0x8000000000000000) == 0 && (a3 + 24 * a2 <= a1 || a1 + 24 * a2 <= a3))
    return swift_arrayInitWithCopy();
  result = sub_1AF76AA74();
  __break(1u);
  return result;
}

uint64_t sub_1AF6A73A8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  BOOL v3;
  uint64_t result;

  if (a2 < 0 || (a3 + 40 * a2 > a1 ? (v3 = a1 + 40 * a2 > a3) : (v3 = 0), v3))
  {
    result = sub_1AF76AA74();
    __break(1u);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BD68);
    return swift_arrayInitWithCopy();
  }
  return result;
}

uint64_t sub_1AF6A7498(unint64_t a1, uint64_t a2, unint64_t a3)
{
  BOOL v3;
  uint64_t result;

  if (a2 < 0 || (a3 + 48 * a2 > a1 ? (v3 = a1 + 48 * a2 > a3) : (v3 = 0), v3))
  {
    result = sub_1AF76AA74();
    __break(1u);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_1EEE4BCD0);
    return swift_arrayInitWithCopy();
  }
  return result;
}

void sub_1AF6A7588(char a1, uint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v4;

  sub_1AF6A75DC(a1, a2, a3, *v3);
  *v3 = v4;
}

char *sub_1AF6A75A4(char *a1, int64_t a2, char a3)
{
  uint64_t *v3;
  char *result;

  result = sub_1AF6A7694(a1, a2, a3, *v3);
  *v3 = (uint64_t)result;
  return result;
}

char *sub_1AF6A75C0(char *a1, int64_t a2, char a3)
{
  uint64_t *v3;
  char *result;

  result = sub_1AF6A777C(a1, a2, a3, *v3);
  *v3 = (uint64_t)result;
  return result;
}

void sub_1AF6A75DC(char a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;

  if ((a3 & 1) != 0)
  {
    OUTLINED_FUNCTION_59();
    if (v7 != v8)
    {
      if (v6 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_58();
    }
  }
  else
  {
    v6 = a2;
  }
  v9 = *(_QWORD *)(a4 + 16);
  if (v6 <= v9)
    v10 = *(_QWORD *)(a4 + 16);
  else
    v10 = v6;
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4CD10);
    v11 = (char *)OUTLINED_FUNCTION_16_2();
    _swift_stdlib_malloc_size(v11);
    OUTLINED_FUNCTION_83();
    *((_QWORD *)v11 + 2) = v9;
    *((_QWORD *)v11 + 3) = v12;
  }
  else
  {
    v11 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v11 + 32;
  v14 = (char *)(a4 + 32);
  if ((a1 & 1) != 0)
  {
    sub_1AF6A6ED8(v14, v9, v13);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1AF6A720C((unint64_t)v14, v9, (unint64_t)v13);
  }
  swift_release();
  OUTLINED_FUNCTION_9();
}

char *sub_1AF6A7694(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BCB0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_1AF6A6F5C(v13, v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1AF6A72D8((unint64_t)v13, v8, (unint64_t)v12);
  }
  swift_release();
  return v10;
}

char *sub_1AF6A777C(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BCC8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_1AF6A70F4(v13, v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1AF6A7498((unint64_t)v13, v8, (unint64_t)v12);
  }
  swift_release();
  return v10;
}

void sub_1AF6A7864(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!sub_1AF76A054() || !__OFSUB__(a1, sub_1AF76A06C()))
  {
    sub_1AF76A060();
    __asm { BR              X10 }
  }
  __break(1u);
  JUMPOUT(0x1AF6A7934);
}

uint64_t sub_1AF6A794C(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

void sub_1AF6A7990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  __asm { BR              X10 }
}

xpc_object_t sub_1AF6A79CC(const void *a1)
{
  unint64_t v1;
  uint64_t v2;
  xpc_object_t v3;

  v3 = xpc_data_create(a1, BYTE6(v1));
  sub_1AF697C78(v2, v1);
  return v3;
}

uint64_t sub_1AF6A7A38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  __int16 v12;
  char v13;
  char v14;
  char v15;
  char v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v11 = a1;
  v12 = a2;
  v13 = BYTE2(a2);
  v14 = BYTE3(a2);
  v15 = BYTE4(a2);
  v16 = BYTE5(a2);
  sub_1AF6A794C(a4, a5);
  sub_1AF6A7990((uint64_t)&v11, (uint64_t)&v17, a3, a4, a5);
  v9 = v8;
  sub_1AF697C78(a4, a5);
  return v9;
}

unint64_t sub_1AF6A7B58()
{
  unint64_t result;

  result = qword_1ED01F580[0];
  if (!qword_1ED01F580[0])
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF7783A0, &unk_1E5FBF100);
    atomic_store(result, qword_1ED01F580);
  }
  return result;
}

unint64_t sub_1AF6A7B94()
{
  unint64_t result;

  result = qword_1EEE4BC80;
  if (!qword_1EEE4BC80)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF7783E8, &unk_1E5FC14D0);
    atomic_store(result, (unint64_t *)&qword_1EEE4BC80);
  }
  return result;
}

unint64_t sub_1AF6A7BD0()
{
  unint64_t result;

  result = qword_1EEE4BC90;
  if (!qword_1EEE4BC90)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF778AA4, &unk_1E5FC0238);
    atomic_store(result, (unint64_t *)&qword_1EEE4BC90);
  }
  return result;
}

uint64_t type metadata accessor for XPCKeyedDecoding(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for XPCKeyedDecoding);
}

uint64_t sub_1AF6A7C18(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
    return swift_release();
  return result;
}

unint64_t sub_1AF6A7C30()
{
  unint64_t result;

  result = qword_1EEE4BCA0;
  if (!qword_1EEE4BCA0)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF7784A0, &unk_1E5FC1550);
    atomic_store(result, (unint64_t *)&qword_1EEE4BCA0);
  }
  return result;
}

uint64_t sub_1AF6A7C6C(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
    return swift_retain();
  return result;
}

unint64_t sub_1AF6A7C84()
{
  unint64_t result;

  result = qword_1EEE4BCA8;
  if (!qword_1EEE4BCA8)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF7787BC, &unk_1E5FC02C0);
    atomic_store(result, (unint64_t *)&qword_1EEE4BCA8);
  }
  return result;
}

uint64_t type metadata accessor for XPCKeyedEncoding(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for XPCKeyedEncoding);
}

uint64_t sub_1AF6A7CD0(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BCC0);
  result = sub_1AF76AA50();
  v13 = a1;
  v5 = *(_QWORD *)(a1 + 64);
  v4 = (_QWORD *)(a1 + 64);
  v3 = v5;
  v6 = 1 << *((_BYTE *)v4 - 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v12 = (unint64_t)(v6 + 63) >> 6;
  if ((v7 & v3) != 0)
  {
    v8 = __clz(__rbit64(v7 & v3));
    goto LABEL_18;
  }
  if ((unint64_t)(v6 + 63) >> 6 > 1)
  {
    v9 = v4[1];
    v10 = 1;
    if (v9)
      goto LABEL_17;
    v10 = 2;
    if (v12 <= 2)
      return result;
    v9 = v4[2];
    if (v9)
      goto LABEL_17;
    v10 = 3;
    if (v12 <= 3)
      return result;
    v9 = v4[3];
    if (v9)
    {
LABEL_17:
      v8 = __clz(__rbit64(v9)) + (v10 << 6);
LABEL_18:
      __asm { BR              X9 }
    }
    v11 = 4;
    if (v12 > 4)
    {
      v9 = v4[4];
      if (v9)
      {
        v10 = 4;
        goto LABEL_17;
      }
      while (1)
      {
        v10 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
          __break(1u);
          JUMPOUT(0x1AF6A7F9CLL);
        }
        if (v10 >= v12)
          break;
        v9 = v4[v10];
        ++v11;
        if (v9)
          goto LABEL_17;
      }
    }
  }
  return result;
}

uint64_t sub_1AF6A7FAC()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1AF6A7FB4()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_1AF6A7FDC(uint64_t *a1, uint64_t *a2)
{
  OUTLINED_FUNCTION_31_0(a1, a2);
  swift_retain();
  OUTLINED_FUNCTION_6_2();
  OUTLINED_FUNCTION_19();
}

void sub_1AF6A8000(uint64_t *a1, uint64_t *a2)
{
  OUTLINED_FUNCTION_64(a1, a2);
  swift_retain();
  OUTLINED_FUNCTION_67();
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_9();
}

void type metadata accessor for XPCUnkeyedEncoding()
{
  OUTLINED_FUNCTION_25();
}

uint64_t sub_1AF6A803C()
{
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1AF6A8064(uint64_t *a1, uint64_t *a2)
{
  OUTLINED_FUNCTION_31_0(a1, a2);
  swift_unknownObjectRetain();
  OUTLINED_FUNCTION_6_2();
  OUTLINED_FUNCTION_19();
}

void sub_1AF6A8088(uint64_t *a1, uint64_t *a2)
{
  OUTLINED_FUNCTION_64(a1, a2);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_9();
}

void sub_1AF6A80BC(_QWORD *a1, _OWORD *a2, uint64_t a3, void (*a4)(_QWORD))
{
  a4(*a1);
  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_19();
}

uint64_t _s19VoiceShortcutClient17XPCMessageHandlerVwet_0(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

_QWORD *sub_1AF6A8134(_QWORD *result, int a2, int a3)
{
  if (a2 < 0)
  {
    *result = a2 ^ 0x80000000;
    result[1] = 0;
    if (a3 < 0)
      *((_BYTE *)result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
      return OUTLINED_FUNCTION_70(result, a2);
    }
    *((_BYTE *)result + 16) = 0;
    if (a2)
      return OUTLINED_FUNCTION_70(result, a2);
  }
  return result;
}

void sub_1AF6A816C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_31_0(a1, a2);
  *(_QWORD *)(v2 + 16) = *(_QWORD *)(v3 + 16);
  swift_unknownObjectRetain();
  OUTLINED_FUNCTION_6_2();
  OUTLINED_FUNCTION_19();
}

_QWORD *sub_1AF6A8198(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

uint64_t sub_1AF6A81FC(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for XPCActivity(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

_QWORD *sub_1AF6A8280(_QWORD *result, int a2, int a3)
{
  if (a2 < 0)
  {
    result[1] = 0;
    result[2] = 0;
    *result = a2 ^ 0x80000000;
    if (a3 < 0)
      *((_BYTE *)result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
      return OUTLINED_FUNCTION_70(result, a2);
    }
    *((_BYTE *)result + 24) = 0;
    if (a2)
      return OUTLINED_FUNCTION_70(result, a2);
  }
  return result;
}

void type metadata accessor for XPCUnkeyedDecoding()
{
  OUTLINED_FUNCTION_25();
}

uint64_t sub_1AF6A82C4(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 24);
}

unint64_t sub_1AF6A82CC()
{
  unint64_t result;

  result = qword_1EEE4BD60;
  if (!qword_1EEE4BD60)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF778C6C, &type metadata for XPCKey);
    atomic_store(result, (unint64_t *)&qword_1EEE4BD60);
  }
  return result;
}

uint64_t sub_1AF6A8308()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_1AF6A8368()
{
  return sub_1AF6A3900();
}

unint64_t sub_1AF6A8380()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEE4BD88;
  if (!qword_1EEE4BD88)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE4BD80);
    result = MEMORY[0x1B5DFC634](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1EEE4BD88);
  }
  return result;
}

uint64_t sub_1AF6A83C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t *a6)
{
  uint64_t v12;
  uint64_t v13;
  __int128 v15;
  ValueMetadata *v16;
  unint64_t v17;

  v16 = &type metadata for XPCKey;
  v17 = sub_1AF6A82CC();
  v12 = swift_allocObject();
  *(_QWORD *)&v15 = v12;
  *(_QWORD *)(v12 + 16) = a2;
  *(_QWORD *)(v12 + 24) = a3;
  *(_QWORD *)(v12 + 32) = a4;
  *(_BYTE *)(v12 + 40) = a5 & 1;
  v13 = *a6;
  *(_QWORD *)(v13 + 16) = a1 + 1;
  return sub_1AF6A8468(&v15, v13 + 40 * a1 + 32);
}

uint64_t sub_1AF6A8468(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_1AF6A8480(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v13 = a4;
  v14 = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(boxed_opaque_existential_1, a2, a4);
  v10 = *a3;
  *(_QWORD *)(v10 + 16) = a1 + 1;
  return sub_1AF6A8468(&v12, v10 + 40 * a1 + 32);
}

uint64_t initializeWithCopy for XPCKey(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for XPCKey(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for XPCKey(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for XPCKey(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 25))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for XPCKey(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 25) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCKey()
{
  return &type metadata for XPCKey;
}

unint64_t sub_1AF6A8680()
{
  unint64_t result;

  result = qword_1EEE4BD90;
  if (!qword_1EEE4BD90)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF778C1C, &type metadata for XPCKey);
    atomic_store(result, (unint64_t *)&qword_1EEE4BD90);
  }
  return result;
}

unint64_t sub_1AF6A86C0()
{
  unint64_t result;

  result = qword_1EEE4BD98;
  if (!qword_1EEE4BD98)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF778C44, &type metadata for XPCKey);
    atomic_store(result, (unint64_t *)&qword_1EEE4BD98);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_5()
{
  return sub_1AF76AA2C();
}

uint64_t OUTLINED_FUNCTION_6_4()
{
  return sub_1AF76AF78();
}

uint64_t OUTLINED_FUNCTION_7_4(uint64_t a1)
{
  return sub_1AF6A0508(a1, 0, 4);
}

uint64_t OUTLINED_FUNCTION_8_4(uint64_t a1)
{
  return sub_1AF6A0508(a1, 0, 5);
}

uint64_t OUTLINED_FUNCTION_9_3()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_11_2@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 16);
  v4 = *(_QWORD *)(*v1 + 24);
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = 0;
  v5 = *(_BYTE *)(v2 + 32);
  *(_BYTE *)(v2 + 32) = 4;
  return sub_1AF6A0EC0(v3, v4, v5);
}

uint64_t OUTLINED_FUNCTION_12_2@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 16);
  v4 = *(_QWORD *)(*v1 + 24);
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = 0;
  v5 = *(_BYTE *)(v2 + 32);
  *(_BYTE *)(v2 + 32) = 5;
  return sub_1AF6A0EC0(v3, v4, v5);
}

uint64_t OUTLINED_FUNCTION_14_2()
{
  return sub_1AF76A5B8();
}

uint64_t OUTLINED_FUNCTION_15_1(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1AF6A0EC0(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_16_2()
{
  return swift_allocObject();
}

int64_t OUTLINED_FUNCTION_18_2()
{
  uint64_t v0;

  return xpc_array_get_int64(*(xpc_object_t *)v0, *(_QWORD *)(v0 + 16));
}

uint64_t OUTLINED_FUNCTION_19_1()
{
  uint64_t v0;

  return xpc_array_get_uint64(*(xpc_object_t *)v0, *(_QWORD *)(v0 + 16));
}

uint64_t OUTLINED_FUNCTION_20_0@<X0>(uint64_t a1@<X5>, uint64_t a2@<X8>, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  return sub_1AF6A39D8((uint64_t)&a3, v3, v6, v5, a1, v4, a2);
}

uint64_t OUTLINED_FUNCTION_23_1()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_24_1()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_28_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_30(uint64_t (*a1)(_QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(*v1, v1[2]);
}

uint64_t OUTLINED_FUNCTION_31_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  return result;
}

uint64_t OUTLINED_FUNCTION_33_0()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 8))(v1, v0);
}

void OUTLINED_FUNCTION_34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1AF6A14E8(a1, a2, a3, 5);
}

void OUTLINED_FUNCTION_35(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1AF6A14E8(a1, a2, a3, 4);
}

uint64_t OUTLINED_FUNCTION_37(double a1)
{
  return sub_1AF6A0508(*(uint64_t *)&a1, 0, 6);
}

int64_t OUTLINED_FUNCTION_40(xpc_object_t xint)
{
  return xpc_int64_get_value(xint);
}

double OUTLINED_FUNCTION_41()
{
  uint64_t v0;

  return xpc_array_get_double(*(xpc_object_t *)v0, *(_QWORD *)(v0 + 16));
}

uint64_t OUTLINED_FUNCTION_42(xpc_object_t xuint)
{
  return xpc_uint64_get_value(xuint);
}

void OUTLINED_FUNCTION_45()
{
  sub_1AF6A1234();
}

uint64_t OUTLINED_FUNCTION_47()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = *(_QWORD *)(v0 + 8);
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_50()
{
  return sub_1AF76AB7C();
}

uint64_t OUTLINED_FUNCTION_52()
{
  return sub_1AF76AF78();
}

uint64_t OUTLINED_FUNCTION_53(unint64_t a1)
{
  return a1 | ((HIDWORD(a1) & 1) << 32);
}

uint64_t OUTLINED_FUNCTION_54()
{
  return sub_1AF76AF78();
}

uint64_t OUTLINED_FUNCTION_57()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_62()
{
  return sub_1AF76AA08();
}

uint64_t OUTLINED_FUNCTION_63()
{
  return sub_1AF76A4C8();
}

uint64_t OUTLINED_FUNCTION_64(uint64_t *a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_65(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_67()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_68@<X0>(unsigned int a1@<W8>)
{
  return a1;
}

uint64_t OUTLINED_FUNCTION_69()
{
  uint64_t v0;

  return v0;
}

_QWORD *OUTLINED_FUNCTION_70(_QWORD *result, int a2)
{
  *result = (a2 - 1);
  return result;
}

uint64_t OUTLINED_FUNCTION_74()
{
  uint64_t v0;

  return sub_1AF6A63C0(v0);
}

uint64_t OUTLINED_FUNCTION_75(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1AF69FF8C(a1, a2, a3, a4, v4);
}

uint64_t OUTLINED_FUNCTION_76()
{
  return swift_unknownObjectRelease();
}

__n128 *OUTLINED_FUNCTION_77(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  return a1 + 2;
}

uint64_t OUTLINED_FUNCTION_78(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1AF69FF8C(a1, a2, a3, a4, v4);
}

uint64_t OUTLINED_FUNCTION_79()
{
  return sub_1AF6A2844();
}

uint64_t OUTLINED_FUNCTION_81()
{
  return sub_1AF76A5B8();
}

uint64_t OUTLINED_FUNCTION_82()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_84()
{
  return sub_1AF76A510();
}

uint64_t OUTLINED_FUNCTION_86()
{
  return swift_release();
}

void OUTLINED_FUNCTION_87(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
}

uint64_t OUTLINED_FUNCTION_89()
{
  return 0x7265707573;
}

unint64_t OUTLINED_FUNCTION_90(uint64_t a1, uint64_t a2)
{
  return sub_1AF6842A4(a1, a2);
}

void OUTLINED_FUNCTION_92()
{
  sub_1AF6A1234();
}

uint64_t OUTLINED_FUNCTION_93(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1AF69FF8C(a1, a2, a3, a4, v4);
}

ValueMetadata *type metadata accessor for XPCArray()
{
  return &type metadata for XPCArray;
}

uint64_t VCVoiceShortcutClient.scheduleTrigger(_:with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  v4[6] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BDA8);
  v4[7] = swift_task_alloc();
  v4[8] = swift_task_alloc();
  v4[9] = OUTLINED_FUNCTION_17_2();
  v4[10] = OUTLINED_FUNCTION_0_6();
  v5 = OUTLINED_FUNCTION_15_2();
  v4[11] = v5;
  v4[12] = *(_QWORD *)(v5 - 8);
  v4[13] = OUTLINED_FUNCTION_0_6();
  type metadata accessor for TriggerType(0);
  v4[14] = OUTLINED_FUNCTION_0_6();
  OUTLINED_FUNCTION_9_4();
  return OUTLINED_FUNCTION_2_3();
}

uint64_t sub_1AF6A8C80()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v1 = v0[14];
  v2 = v0[10];
  v3 = (_QWORD *)v0[3];
  v4 = v3[3];
  v5 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v4);
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(v4, v5);
  v6 = v2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BDB0) + 48);
  sub_1AF6A99C8(v1, v2, type metadata accessor for TriggerType);
  sub_1AF6DC978(v6);
  OUTLINED_FUNCTION_16_3();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_11_3();
  v7 = (_QWORD *)swift_task_alloc();
  v0[15] = v7;
  *v7 = v0;
  v7[1] = sub_1AF6A8D6C;
  return sub_1AF6A9B2C(v0[13], v0[10]);
}

uint64_t sub_1AF6A8D6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  v2 = swift_task_dealloc();
  OUTLINED_FUNCTION_21_2(v2, type metadata accessor for VoiceShortcutClientRequest);
  OUTLINED_FUNCTION_9_4();
  return OUTLINED_FUNCTION_1_6();
}

uint64_t sub_1AF6A8DD4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t (*v12)(void);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *boxed_opaque_existential_1;
  __int128 v24;
  __int128 v25;
  __int128 v26;

  v1 = v0[16];
  sub_1AF6A97D8(&qword_1EEE4BDB8, &qword_1EEE4BDA8);
  sub_1AF76A438();
  if (v1)
  {
    v2 = (*(uint64_t (**)(_QWORD, _QWORD))(v0[12] + 8))(v0[13], v0[11]);
  }
  else
  {
    sub_1AF6A90BC(v0[8], v0[7]);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      v13 = v0[13];
      v14 = v0[14];
      v15 = v0[11];
      v16 = v0[12];
      v18 = v0[7];
      v17 = v0[8];
      v19 = (uint64_t *)v0[2];
      v19[3] = type metadata accessor for ScheduledTrigger(0);
      sub_1AF6A91BC(&qword_1EEE4BDD0, (uint64_t)&protocol conformance descriptor for ScheduledTrigger);
      v19[4] = v20;
      sub_1AF6A91BC(&qword_1EEE4BDD8, (uint64_t)&protocol conformance descriptor for ScheduledTrigger);
      v19[5] = v21;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v19);
      sub_1AF6A91F8(v18, (uint64_t)boxed_opaque_existential_1);
      sub_1AF6A917C(v17);
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v13, v15);
      sub_1AF6A9084(v14, type metadata accessor for TriggerType);
      OUTLINED_FUNCTION_20_1();
      OUTLINED_FUNCTION_23_2();
      OUTLINED_FUNCTION_12_3();
      OUTLINED_FUNCTION_7_5();
      OUTLINED_FUNCTION_5_3();
      v12 = (uint64_t (*)(void))v0[1];
      return v12();
    }
    v4 = v0[12];
    v3 = v0[13];
    v5 = v0[11];
    v6 = (__int128 *)v0[7];
    v7 = v0[8];
    v25 = v6[1];
    v26 = *v6;
    v24 = v6[2];
    v8 = *((_QWORD *)v6 + 6);
    sub_1AF6A9104();
    v9 = OUTLINED_FUNCTION_5();
    *(_OWORD *)v10 = v26;
    *(_OWORD *)(v10 + 16) = v25;
    *(_OWORD *)(v10 + 32) = v24;
    *(_QWORD *)(v10 + 48) = v8;
    sub_1AF6A9140();
    OUTLINED_FUNCTION_5();
    *v11 = v9;
    OUTLINED_FUNCTION_14_3();
    sub_1AF6A917C(v7);
    v2 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  }
  OUTLINED_FUNCTION_21_2(v2, type metadata accessor for TriggerType);
  OUTLINED_FUNCTION_7_5();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_23_2();
  OUTLINED_FUNCTION_20_1();
  swift_task_dealloc();
  v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_1AF6A8FF8(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_21_2(a1, type metadata accessor for TriggerType);
  OUTLINED_FUNCTION_7_5();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_23_2();
  OUTLINED_FUNCTION_20_1();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_8_5(*(uint64_t (**)(void))(v1 + 8));
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

void sub_1AF6A9084(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  OUTLINED_FUNCTION_19();
}

uint64_t sub_1AF6A90BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BDA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1AF6A9104()
{
  unint64_t result;

  result = qword_1EEE4BDC0;
  if (!qword_1EEE4BDC0)
  {
    result = MEMORY[0x1B5DFC634](&protocol conformance descriptor for CodableError, &type metadata for CodableError);
    atomic_store(result, (unint64_t *)&qword_1EEE4BDC0);
  }
  return result;
}

unint64_t sub_1AF6A9140()
{
  unint64_t result;

  result = qword_1EEE4BDC8;
  if (!qword_1EEE4BDC8)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF778DA4, &_s24VoiceShortcutClientErrorON);
    atomic_store(result, (unint64_t *)&qword_1EEE4BDC8);
  }
  return result;
}

uint64_t sub_1AF6A917C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BDA8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1AF6A91BC(unint64_t *a1, uint64_t a2)
{
  uint64_t v4;

  if (!*a1)
  {
    v4 = type metadata accessor for ScheduledTrigger(255);
    atomic_store(MEMORY[0x1B5DFC634](a2, v4), a1);
  }
  OUTLINED_FUNCTION_19();
}

uint64_t sub_1AF6A91F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ScheduledTrigger(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t VCVoiceShortcutClient.deleteScheduledTrigger(with:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[9] = a1;
  v2[10] = v1;
  v2[11] = OUTLINED_FUNCTION_17_2();
  v2[12] = OUTLINED_FUNCTION_0_6();
  v3 = OUTLINED_FUNCTION_15_2();
  v2[13] = v3;
  v2[14] = *(_QWORD *)(v3 - 8);
  v2[15] = OUTLINED_FUNCTION_0_6();
  OUTLINED_FUNCTION_9_4();
  return OUTLINED_FUNCTION_2_3();
}

uint64_t sub_1AF6A9294()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD **)(v0 + 96);
  v2 = *(_QWORD **)(v0 + 72);
  v3 = v2[3];
  v4 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v3);
  *v1 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 24))(v3, v4);
  v1[1] = v5;
  OUTLINED_FUNCTION_16_3();
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_11_3();
  v6 = (_QWORD *)swift_task_alloc();
  v7 = OUTLINED_FUNCTION_6_5(v6);
  return sub_1AF6A9B2C(v7, v8);
}

uint64_t sub_1AF6A9330()
{
  uint64_t v0;

  OUTLINED_FUNCTION_4_4();
  sub_1AF6A9084(*(_QWORD *)(v0 + 96), type metadata accessor for VoiceShortcutClientRequest);
  OUTLINED_FUNCTION_9_4();
  return OUTLINED_FUNCTION_1_6();
}

uint64_t sub_1AF6A937C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t (*v14)(void);
  uint64_t v16;
  void (*v17)(uint64_t);

  v1 = v0[17];
  sub_1AF6A94C4();
  sub_1AF76A438();
  if (v1)
  {
    v2 = OUTLINED_FUNCTION_19_2();
  }
  else
  {
    v4 = v0[4];
    if (!v4)
    {
      v16 = OUTLINED_FUNCTION_22_2();
      v17(v16);
      OUTLINED_FUNCTION_5_3();
      OUTLINED_FUNCTION_12_3();
      v14 = (uint64_t (*)(void))v0[1];
      return v14();
    }
    v5 = v0[2];
    v6 = v0[3];
    v7 = v0[5];
    v8 = v0[6];
    v9 = v0[7];
    v10 = v0[8];
    sub_1AF6A9104();
    v11 = OUTLINED_FUNCTION_5();
    *v12 = v5;
    v12[1] = v6;
    v12[2] = v4;
    v12[3] = v7;
    v12[4] = v8;
    v12[5] = v9;
    v12[6] = v10;
    sub_1AF6A9140();
    OUTLINED_FUNCTION_5();
    *v13 = v11;
    OUTLINED_FUNCTION_14_3();
    v2 = OUTLINED_FUNCTION_22_2();
  }
  v3(v2);
  OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_5_3();
  v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_1AF6A9498()
{
  uint64_t v0;

  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_7_5();
  return OUTLINED_FUNCTION_8_5(*(uint64_t (**)(void))(v0 + 8));
}

unint64_t sub_1AF6A94C4()
{
  unint64_t result;

  result = qword_1EEE4BDE8;
  if (!qword_1EEE4BDE8)
  {
    result = MEMORY[0x1B5DFC634](&protocol conformance descriptor for VoiceShortcutResponse, &type metadata for VoiceShortcutResponse);
    atomic_store(result, (unint64_t *)&qword_1EEE4BDE8);
  }
  return result;
}

uint64_t VCVoiceShortcutClient.fetchAllScheduledTriggers()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[10] = v0;
  v1[11] = OUTLINED_FUNCTION_17_2();
  v1[12] = OUTLINED_FUNCTION_0_6();
  v2 = OUTLINED_FUNCTION_15_2();
  v1[13] = v2;
  v1[14] = *(_QWORD *)(v2 - 8);
  v1[15] = OUTLINED_FUNCTION_0_6();
  OUTLINED_FUNCTION_9_4();
  return OUTLINED_FUNCTION_2_3();
}

uint64_t sub_1AF6A9558()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_16_3();
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_11_3();
  v0 = (_QWORD *)swift_task_alloc();
  v1 = OUTLINED_FUNCTION_6_5(v0);
  return sub_1AF6A9B2C(v1, v2);
}

uint64_t sub_1AF6A95BC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_4_4();
  sub_1AF6A9084(*(_QWORD *)(v0 + 96), type metadata accessor for VoiceShortcutClientRequest);
  OUTLINED_FUNCTION_9_4();
  return OUTLINED_FUNCTION_1_6();
}

uint64_t sub_1AF6A9608()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 136);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BDF8);
  sub_1AF6A97D8(&qword_1EEE4BE00, &qword_1EEE4BDF8);
  sub_1AF76A438();
  if (v1)
  {
    v2 = OUTLINED_FUNCTION_19_2();
LABEL_5:
    v3(v2);
    OUTLINED_FUNCTION_18_3();
    OUTLINED_FUNCTION_5_3();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v5 = *(_QWORD *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  v7 = *(_QWORD *)(v0 + 32);
  v6 = *(_QWORD *)(v0 + 40);
  v9 = *(_QWORD *)(v0 + 48);
  v8 = *(_QWORD *)(v0 + 56);
  v10 = *(_QWORD *)(v0 + 64);
  v11 = *(_QWORD *)(v0 + 104);
  if ((*(_BYTE *)(v0 + 72) & 1) != 0)
  {
    sub_1AF6A9104();
    v12 = OUTLINED_FUNCTION_5();
    *v13 = v5;
    v13[1] = v4;
    v13[2] = v7;
    v13[3] = v6;
    v13[4] = v9;
    v13[5] = v8;
    v13[6] = v10;
    sub_1AF6A9140();
    OUTLINED_FUNCTION_5();
    *v14 = v12;
    OUTLINED_FUNCTION_14_3();
    v2 = OUTLINED_FUNCTION_22_2();
    goto LABEL_5;
  }
  v18 = sub_1AF6A9814(v5);
  sub_1AF6A9990(v5, v4, v7, v6, v9, v8, v10, 0);
  v16 = OUTLINED_FUNCTION_22_2();
  v17(v16, v11);
  OUTLINED_FUNCTION_5_3();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v18);
}

uint64_t sub_1AF6A97A8()
{
  uint64_t v0;

  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_7_5();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1AF6A97D8(unint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  if (!*a1)
  {
    v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    atomic_store(MEMORY[0x1B5DFC634](&protocol conformance descriptor for VoiceShortcutResponseWithValue<A>, v3), a1);
  }
  OUTLINED_FUNCTION_19();
}

uint64_t sub_1AF6A9814(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v13;
  __int128 v14[3];
  uint64_t v15;

  v2 = type metadata accessor for ScheduledTrigger(0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = MEMORY[0x1E0DEE9D8];
  if (v6)
  {
    v15 = MEMORY[0x1E0DEE9D8];
    sub_1AF6A75C0(0, v6, 0);
    v8 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v9 = *(_QWORD *)(v3 + 72);
    do
    {
      sub_1AF6A99C8(v8, (uint64_t)v5, type metadata accessor for ScheduledTrigger);
      __swift_instantiateConcreteTypeFromMangledName(qword_1EEE4BCD0);
      swift_dynamicCast();
      v7 = v15;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1AF6A75C0(0, *(_QWORD *)(v7 + 16) + 1, 1);
        v7 = v15;
      }
      v11 = *(_QWORD *)(v7 + 16);
      v10 = *(_QWORD *)(v7 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_1AF6A75C0((char *)(v10 > 1), v11 + 1, 1);
        v7 = v15;
      }
      *(_QWORD *)(v7 + 16) = v11 + 1;
      sub_1AF6A9A08(v14, (_OWORD *)(v7 + 48 * v11 + 32));
      v8 += v9;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_1AF6A9990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  if ((a8 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

void sub_1AF6A99C8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  OUTLINED_FUNCTION_19();
}

_OWORD *sub_1AF6A9A08(__int128 *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[2];
  a2[1] = a1[1];
  a2[2] = v3;
  *a2 = v2;
  return a2;
}

uint64_t OUTLINED_FUNCTION_0_6()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_1_6()
{
  return swift_task_switch();
}

uint64_t OUTLINED_FUNCTION_2_3()
{
  return swift_task_switch();
}

uint64_t OUTLINED_FUNCTION_4_4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 136) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_5_3()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_6_5(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 128) = a1;
  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 120);
}

uint64_t OUTLINED_FUNCTION_7_5()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_8_5(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_11_3()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_12_3()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_13_3()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_14_3()
{
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_15_2()
{
  return sub_1AF76A444();
}

uint64_t OUTLINED_FUNCTION_16_3()
{
  return type metadata accessor for VoiceShortcutClientRequest.Automations(0);
}

uint64_t OUTLINED_FUNCTION_17_2()
{
  return type metadata accessor for VoiceShortcutClientRequest(0);
}

uint64_t OUTLINED_FUNCTION_18_3()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_19_2()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 120);
}

uint64_t OUTLINED_FUNCTION_20_1()
{
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_21_2(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_1AF6A9084(v2, a2);
}

uint64_t OUTLINED_FUNCTION_22_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_23_2()
{
  return swift_task_dealloc();
}

uint64_t sub_1AF6A9B2C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType();
  v2[3] = a2;
  v2[4] = ObjectType;
  v2[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1AF6A9B80()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 24);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v2;
  sub_1AF76A444();
  *v2 = v0;
  v2[1] = sub_1AF6A9C20;
  return sub_1AF76AE7C();
}

uint64_t sub_1AF6A9C20()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 56) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1AF6A9C94()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t static VCVoiceShortcutClient.daemonMachService.getter()
{
  return 0xD00000000000001ALL;
}

_QWORD *_s24VoiceShortcutClientErrorOwCP(_QWORD *a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF)
    v4 = v3;
  *a1 = v3;
  return a1;
}

void _s24VoiceShortcutClientErrorOwxx(void **a1)
{
  void *v1;

  v1 = *a1;
  if ((unint64_t)v1 >= 0xFFFFFFFF)

}

void **_s24VoiceShortcutClientErrorOwca(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;
  void *v6;
  id v7;

  v3 = *a1;
  v4 = *a2;
  if ((unint64_t)v3 < 0xFFFFFFFF)
  {
    if ((unint64_t)v4 >= 0xFFFFFFFF)
      v7 = v4;
    *a1 = v4;
  }
  else if ((unint64_t)v4 < 0xFFFFFFFF)
  {

    *a1 = *a2;
  }
  else
  {
    v5 = v4;
    v6 = *a1;
    *a1 = v4;

  }
  return a1;
}

void **_s24VoiceShortcutClientErrorOwta(void **a1, unint64_t *a2)
{
  void *v3;
  unint64_t v4;

  v3 = *a1;
  v4 = *a2;
  if ((unint64_t)v3 < 0xFFFFFFFF)
    goto LABEL_6;
  if (v4 < 0xFFFFFFFF)
  {

LABEL_6:
    *a1 = (void *)v4;
    return a1;
  }
  *a1 = (void *)v4;

  return a1;
}

uint64_t _s24VoiceShortcutClientErrorOwet(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 >= 3)
    return v5;
  else
    return 0;
}

uint64_t _s24VoiceShortcutClientErrorOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 1;
  }
  return result;
}

uint64_t sub_1AF6A9ED4(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_1AF6A9EEC(_QWORD *result, int a2)
{
  unsigned int v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2)
      return result;
    v2 = a2 - 1;
  }
  *result = v2;
  return result;
}

ValueMetadata *_s24VoiceShortcutClientErrorOMa()
{
  return &_s24VoiceShortcutClientErrorON;
}

uint64_t sub_1AF6A9F20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;

  v1 = sub_1AF76A3FC();
  MEMORY[0x1E0C80A78](v1);
  sub_1AF76A420();
  sub_1AF76A3F0();
  result = sub_1AF76A3E4();
  if (v0)
    return v3;
  return result;
}

uint64_t sub_1AF6A9FCC(id a1)
{
  id v3;

  if (!a1)
    return 0xD000000000000024;
  if (a1 == (id)1)
    return 0x206E776F6E6B6E55;
  v3 = a1;
  sub_1AF76A960();
  sub_1AF76A5B8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED01F870);
  sub_1AF76A9FC();
  sub_1AF6AA190(a1);
  return 0;
}

uint64_t sub_1AF6AA0C0(uint64_t a1)
{
  uint64_t v1;

  v1 = 200;
  if (a1 == 1)
    v1 = 10000;
  if (a1)
    return v1;
  else
    return 100;
}

uint64_t sub_1AF6AA0E0()
{
  sub_1AF6AA154();
  return sub_1AF76AEB8();
}

uint64_t sub_1AF6AA108()
{
  sub_1AF6AA154();
  return sub_1AF76AEAC();
}

uint64_t sub_1AF6AA130()
{
  id *v0;

  return sub_1AF6A9FCC(*v0);
}

uint64_t sub_1AF6AA148()
{
  uint64_t *v0;

  return sub_1AF6AA0C0(*v0);
}

unint64_t sub_1AF6AA154()
{
  unint64_t result;

  result = qword_1EEE4BE08;
  if (!qword_1EEE4BE08)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF778D1C, &_s24VoiceShortcutClientErrorON);
    atomic_store(result, &qword_1EEE4BE08);
  }
  return result;
}

void sub_1AF6AA190(id a1)
{
  if ((unint64_t)a1 >= 2)

}

uint64_t sub_1AF6AA1A0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v8;
  uint64_t v9;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BE18);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x1E0C80A78](v2);
  if (sub_1AF6A9F20())
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
    v8 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    v9 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v9 + v8, (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
    type metadata accessor for VoiceShortcutClientRequest(0);
    sub_1AF6AA658(&qword_1EEE4BE20, type metadata accessor for VoiceShortcutClientRequest, (uint64_t)&protocol conformance descriptor for VoiceShortcutClientRequest);
    sub_1AF76A408();
    swift_release();
    sub_1AF76A414();
    return swift_release();
  }
  else
  {
    sub_1AF6A9140();
    v5 = swift_allocError();
    *v6 = 0;
    v10[0] = v5;
    return sub_1AF76A660();
  }
}

uint64_t sub_1AF6AA354(uint64_t a1)
{
  return sub_1AF6AA1A0(a1);
}

uint64_t sub_1AF6AA35C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[2];

  v20[0] = a2;
  v3 = sub_1AF76A42C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1AF76A444();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v20 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BE28);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AF6AA610(a1, (uint64_t)v16);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v16, v3);
    sub_1AF6AA658(&qword_1EEE4BE30, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF04E8], MEMORY[0x1E0DF04F8]);
    v17 = swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 16))(v18, v6, v3);
    v20[1] = v17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BE18);
    sub_1AF76A660();
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v16, v7);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BE18);
    sub_1AF76A66C();
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  }
}

uint64_t sub_1AF6AA56C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BE18);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1AF6AA5D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BE18) - 8) + 80);
  return sub_1AF6AA35C(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t sub_1AF6AA610(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BE28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AF6AA658(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x1B5DFC634](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1AF6AA69C(uint64_t (*a1)(void), uint64_t a2, os_unfair_lock_s *a3)
{
  os_unfair_lock_s *v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a3 + 4;
  os_unfair_lock_lock(a3 + 4);
  sub_1AF6ACB0C(v5, a1, &v6);
  os_unfair_lock_unlock(v4);
}

void *sub_1AF6AA70C()
{
  void *result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4B3B0);
  result = (void *)sub_1AF76A4C8();
  off_1EEE4A250 = result;
  return result;
}

uint64_t sub_1AF6AA750()
{
  uint64_t result;

  result = sub_1AF76A4C8();
  qword_1EEE4A270 = result;
  return result;
}

uint64_t sub_1AF6AA78C()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED01FAB0);
  result = swift_allocObject();
  *(_DWORD *)(result + 16) = 0;
  qword_1ED01F608 = result;
  return result;
}

uint64_t sub_1AF6AA7C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  _QWORD v7[2];

  v0 = sub_1AF76A840();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1AF76A834();
  MEMORY[0x1E0C80A78](v4);
  v5 = sub_1AF76A48C();
  MEMORY[0x1E0C80A78](v5);
  sub_1AF6ACB34();
  sub_1AF76A474();
  v7[1] = MEMORY[0x1E0DEE9D8];
  sub_1AF6ACB70();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4CCB0);
  sub_1AF6ACBB0();
  sub_1AF76A900();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DEF8D0], v0);
  result = sub_1AF76A84C();
  qword_1EEE4BE38 = result;
  return result;
}

uint64_t sub_1AF6AA950()
{
  uint64_t v0;

  v0 = sub_1AF76A354();
  __swift_allocate_value_buffer(v0, qword_1EEE4A288);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EEE4A288);
  return sub_1AF76A348();
}

void static XPCEventStream.activate()(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  unint64_t v9;
  os_unfair_lock_s *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (qword_1EEE4A2A8 != -1)
    swift_once();
  v4 = sub_1AF76A354();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EEE4A288);
  v5 = sub_1AF76A33C();
  v6 = sub_1AF76A81C();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    *(_DWORD *)v7 = 136315138;
    v8 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
    sub_1AF6AC2A0(v8, v9, &v13);
    sub_1AF76A8C4();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1AF681000, v5, v6, "Attempting to activate stream: %s.", v7, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_7_0();
  }

  if (qword_1ED01F618 != -1)
    swift_once();
  v10 = (os_unfair_lock_s *)(qword_1ED01F608 + 16);
  os_unfair_lock_assert_not_owner((const os_unfair_lock *)(qword_1ED01F608 + 16));
  MEMORY[0x1E0C80A78](v11);
  os_unfair_lock_lock(v10);
  sub_1AF69E128(v12, (uint64_t (*)(void))sub_1AF6AAFE4);
  os_unfair_lock_unlock(v10);
  OUTLINED_FUNCTION_0_3();
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

void sub_1AF6AABC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  int v11;
  NSObject *v12;
  _QWORD *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t aBlock[8];

  if (qword_1EEE4A280 != -1)
    swift_once();
  v6 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 24);
  v7 = v6(a2, a3);
  v9 = v8;
  swift_beginAccess();
  sub_1AF69F9B4(v7, v9, qword_1EEE4A270);
  v11 = v10;
  swift_endAccess();
  swift_bridgeObjectRelease();
  if (v11 == 2)
  {
    v6(a2, a3);
    if (qword_1EEE4B640 != -1)
      swift_once();
    v12 = qword_1EEE4BE38;
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = a2;
    v13[3] = a3;
    v13[4] = a1;
    aBlock[4] = (uint64_t)sub_1AF6ACAB0;
    aBlock[5] = (uint64_t)v13;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1AF684264;
    aBlock[3] = (uint64_t)&block_descriptor_2;
    v14 = _Block_copy(aBlock);
    swift_release();
    v15 = sub_1AF76A594();
    swift_bridgeObjectRelease();
    xpc_set_event_stream_handler((const char *)(v15 + 32), v12, v14);
    swift_release();
    _Block_release(v14);
    v16 = v6(a2, a3);
    v18 = v17;
    swift_beginAccess();
    sub_1AF6D9A04(1, v16, v18);
    swift_endAccess();
    swift_bridgeObjectRelease();
    if (qword_1EEE4A2A8 != -1)
      swift_once();
    v19 = sub_1AF76A354();
    __swift_project_value_buffer(v19, (uint64_t)qword_1EEE4A288);
    v20 = sub_1AF76A33C();
    v21 = sub_1AF76A81C();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      v29 = swift_slowAlloc();
      aBlock[0] = v29;
      *(_DWORD *)v22 = 136315138;
      v23 = v6(a2, a3);
      aBlock[7] = sub_1AF6AC2A0(v23, v24, aBlock);
      sub_1AF76A8C4();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AF681000, v20, v21, "Stream: %s has been successfully activated.", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1B5DFC6E8](v29, -1, -1);
      MEMORY[0x1B5DFC6E8](v22, -1, -1);
    }

  }
  else
  {
    if (qword_1EEE4A2A8 != -1)
      swift_once();
    v25 = sub_1AF76A354();
    __swift_project_value_buffer(v25, (uint64_t)qword_1EEE4A288);
    v26 = sub_1AF76A33C();
    v27 = sub_1AF76A810();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v28 = 0;
      _os_log_impl(&dword_1AF681000, v26, v27, "Attempted to activate an already active stream.", v28, 2u);
      MEMORY[0x1B5DFC6E8](v28, -1, -1);
    }

  }
}

void sub_1AF6AAFE4()
{
  uint64_t *v0;

  sub_1AF6AABC8(v0[4], v0[2], v0[3]);
}

void sub_1AF6AB000(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  const char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t AssociatedConformanceWitness;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  os_unfair_lock_s *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v42;
  unint64_t v43;
  void (*v44)(char *, uint64_t);
  uint8_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t *);
  uint64_t *boxed_opaque_existential_1;
  _QWORD v51[2];
  uint8_t *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57[5];
  uint64_t v58;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v11 = (char *)v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)v51 - v13;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)v51 - v15;
  v17 = (const char *)sub_1AF76A3A8();
  if (xpc_dictionary_get_string(a1, v17))
  {
    v55 = v11;
    v56 = v3;
    v18 = sub_1AF76A5C4();
    v20 = v19;
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    sub_1AF69FE8C();
    v53 = v18;
    v54 = v8;
    if (qword_1ED01F618 != -1)
      swift_once();
    v32 = (os_unfair_lock_s *)qword_1ED01F608;
    os_unfair_lock_assert_not_owner((const os_unfair_lock *)(qword_1ED01F608 + 16));
    MEMORY[0x1E0C80A78](v33);
    v51[-6] = a2;
    v51[-5] = a3;
    v34 = v53;
    v51[-4] = v56;
    v51[-3] = v34;
    v51[-2] = v20;
    sub_1AF6AA69C((uint64_t (*)(void))sub_1AF6ACAEC, (uint64_t)&v51[-8], v32);
    v56 = v35;
    swift_bridgeObjectRelease();
    if (qword_1EEE4A2A8 != -1)
      swift_once();
    v36 = sub_1AF76A354();
    __swift_project_value_buffer(v36, (uint64_t)qword_1EEE4A288);
    v37 = v54;
    v38 = *(void (**)(char *, char *, uint64_t))(v54 + 16);
    v38(v14, v16, AssociatedTypeWitness);
    v39 = sub_1AF76A33C();
    v40 = sub_1AF76A81C();
    if (os_log_type_enabled(v39, v40))
    {
      v41 = (uint8_t *)swift_slowAlloc();
      v53 = swift_slowAlloc();
      v57[0] = v53;
      *(_DWORD *)v41 = 136315138;
      v51[1] = v41 + 4;
      v52 = v41;
      v38(v55, v14, AssociatedTypeWitness);
      v42 = sub_1AF76A588();
      v58 = sub_1AF6AC2A0(v42, v43, v57);
      sub_1AF76A8C4();
      swift_bridgeObjectRelease();
      v44 = *(void (**)(char *, uint64_t))(v37 + 8);
      v44(v14, AssociatedTypeWitness);
      v45 = v52;
      _os_log_impl(&dword_1AF681000, v39, v40, "Dispatching XPC event: %s", v52, 0xCu);
      v46 = v53;
      swift_arrayDestroy();
      MEMORY[0x1B5DFC6E8](v46, -1, -1);
      MEMORY[0x1B5DFC6E8](v45, -1, -1);
    }
    else
    {
      v44 = *(void (**)(char *, uint64_t))(v37 + 8);
      v44(v14, AssociatedTypeWitness);
    }

    v47 = *(_QWORD *)(v56 + 16);
    if (v47)
    {
      v48 = v56 + 40;
      do
      {
        v49 = *(void (**)(uint64_t *))(v48 - 8);
        v57[3] = AssociatedTypeWitness;
        v57[4] = AssociatedConformanceWitness;
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v57);
        v38((char *)boxed_opaque_existential_1, v16, AssociatedTypeWitness);
        swift_retain();
        v49(v57);
        swift_release();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
        v48 += 16;
        --v47;
      }
      while (v47);
    }
    swift_bridgeObjectRelease();
    v44(v16, AssociatedTypeWitness);
  }
  else
  {
    if (qword_1EEE4A2A8 != -1)
      swift_once();
    v22 = sub_1AF76A354();
    __swift_project_value_buffer(v22, (uint64_t)qword_1EEE4A288);
    swift_unknownObjectRetain_n();
    v23 = sub_1AF76A33C();
    v24 = sub_1AF76A810();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      v26 = swift_slowAlloc();
      v57[0] = v26;
      *(_DWORD *)v25 = 136315138;
      v27 = swift_unknownObjectRetain();
      v28 = MEMORY[0x1B5DFC970](v27);
      v29 = sub_1AF76A5C4();
      v31 = v30;
      MEMORY[0x1B5DFC6E8](v28, -1, -1);
      swift_unknownObjectRelease();
      v58 = sub_1AF6AC2A0(v29, v31, v57);
      sub_1AF76A8C4();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1AF681000, v23, v24, "Unable to decode XPC event: %s", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1B5DFC6E8](v26, -1, -1);
      MEMORY[0x1B5DFC6E8](v25, -1, -1);

    }
    else
    {

      swift_unknownObjectRelease_n();
    }
  }
}

void sub_1AF6AB6F8(uint64_t a1@<X1>, unint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20[5];

  if (qword_1ED01F628 != -1)
    swift_once();
  v10 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4);
  v12 = v11;
  swift_beginAccess();
  v13 = sub_1AF69F9E8(v10, v12, off_1EEE4A250);
  swift_bridgeObjectRelease();
  if (v13)
  {
    swift_bridgeObjectRetain();
    v14 = sub_1AF69F9E8(a1, a2, v13);
    swift_endAccess();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v14)
      goto LABEL_13;
  }
  else
  {
    swift_endAccess();
  }
  if (qword_1EEE4A2A8 != -1)
    swift_once();
  v15 = sub_1AF76A354();
  __swift_project_value_buffer(v15, (uint64_t)qword_1EEE4A288);
  swift_bridgeObjectRetain_n();
  v16 = sub_1AF76A33C();
  v17 = sub_1AF76A810();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc();
    v19 = swift_slowAlloc();
    v20[0] = v19;
    *(_DWORD *)v18 = 136315138;
    swift_bridgeObjectRetain();
    v20[4] = sub_1AF6AC2A0(a1, a2, v20);
    sub_1AF76A8C4();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1AF681000, v16, v17, "Received an XPC event that we do not have an registered handler for: %s. This is a serious programming error that might lead to missed messages and stuck streams.", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1B5DFC6E8](v19, -1, -1);
    MEMORY[0x1B5DFC6E8](v18, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v14 = MEMORY[0x1E0DEE9D8];
LABEL_13:
  *a5 = v14;
}

void static XPCEventStream.register(matching:_:)()
{
  os_unfair_lock_s *v0;
  uint64_t v1;
  uint64_t v2;

  if (qword_1ED01F618 != -1)
    swift_once();
  v0 = (os_unfair_lock_s *)(qword_1ED01F608 + 16);
  os_unfair_lock_assert_not_owner((const os_unfair_lock *)(qword_1ED01F608 + 16));
  MEMORY[0x1E0C80A78](v1);
  os_unfair_lock_lock(v0);
  sub_1AF69E128(v2, sub_1AF6ACA08);
  os_unfair_lock_unlock(v0);
  OUTLINED_FUNCTION_0_3();
}

uint64_t sub_1AF6ABA60(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t isUniquelyReferenced_nonNull_native)
{
  uint64_t (*v12)(unint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t (*v26)(unint64_t, uint64_t);
  _QWORD *v27;
  _QWORD *v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BOOL8 v32;
  unint64_t v33;
  char v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD *v37;
  unint64_t v38;
  char v39;
  uint64_t v40;
  _BOOL8 v41;
  unint64_t v42;
  char v43;
  char v44;
  void *v45;
  unint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t result;
  uint64_t v55;
  unint64_t v57;
  uint64_t v58[3];
  void *v59;

  if (qword_1EEE4A280 != -1)
    swift_once();
  v12 = *(uint64_t (**)(unint64_t, uint64_t))(isUniquelyReferenced_nonNull_native + 24);
  v13 = v12(a6, isUniquelyReferenced_nonNull_native);
  v15 = v14;
  swift_beginAccess();
  sub_1AF69F9B4(v13, v15, qword_1EEE4A270);
  LOBYTE(v13) = v16;
  swift_endAccess();
  swift_bridgeObjectRelease();
  v57 = a3;
  if ((v13 & 1) == 0)
    goto LABEL_8;
  if (qword_1EEE4A2A8 != -1)
    goto LABEL_25;
  while (1)
  {
    v17 = sub_1AF76A354();
    __swift_project_value_buffer(v17, (uint64_t)qword_1EEE4A288);
    swift_bridgeObjectRetain_n();
    v18 = sub_1AF76A33C();
    v19 = sub_1AF76A810();
    if (os_log_type_enabled(v18, v19))
    {
      v55 = a5;
      v20 = (uint8_t *)swift_slowAlloc();
      v21 = a4;
      v22 = swift_slowAlloc();
      v58[0] = v22;
      *(_DWORD *)v20 = 136315138;
      swift_bridgeObjectRetain();
      v59 = (void *)sub_1AF6AC2A0(a2, v57, v58);
      sub_1AF76A8C4();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1AF681000, v18, v19, "Attempting to register for new event (%s) after the stream has already been activated. This is a serious programming error that might lead to missed messages and stuck streams.", v20, 0xCu);
      swift_arrayDestroy();
      v23 = v22;
      a4 = v21;
      MEMORY[0x1B5DFC6E8](v23, -1, -1);
      v24 = v20;
      a5 = v55;
      MEMORY[0x1B5DFC6E8](v24, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
LABEL_8:
    if (qword_1ED01F628 != -1)
      swift_once();
    v25 = v12(a6, isUniquelyReferenced_nonNull_native);
    v12 = v26;
    v27 = (_QWORD *)swift_allocObject();
    v27[2] = a6;
    v27[3] = isUniquelyReferenced_nonNull_native;
    v27[4] = a4;
    v27[5] = a5;
    a6 = (unint64_t)&off_1EEE4A250;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v28 = off_1EEE4A250;
    v59 = off_1EEE4A250;
    off_1EEE4A250 = (_UNKNOWN *)0x8000000000000000;
    v29 = sub_1AF6842A4(v25, (uint64_t)v12);
    v31 = v28[2];
    v32 = (v30 & 1) == 0;
    a4 = v31 + v32;
    if (__OFADD__(v31, v32))
    {
      __break(1u);
      goto LABEL_24;
    }
    a6 = v29;
    a5 = v30;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4B478);
    if ((sub_1AF76AA14() & 1) != 0)
    {
      v33 = sub_1AF6842A4(v25, (uint64_t)v12);
      if ((a5 & 1) != (v34 & 1))
        goto LABEL_26;
      a6 = v33;
    }
    off_1EEE4A250 = v59;
    swift_bridgeObjectRelease();
    v35 = off_1EEE4A250;
    if ((a5 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      sub_1AF6AC254((uint64_t *)&v59);
      sub_1AF6DA314(a6, v25, v12, v59, v35);
    }
    swift_bridgeObjectRetain();
    v36 = v35[7];
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v59 = *(void **)(v36 + 8 * a6);
    v37 = v59;
    *(_QWORD *)(v36 + 8 * a6) = 0x8000000000000000;
    v38 = sub_1AF6842A4(a2, v57);
    v40 = v37[2];
    v41 = (v39 & 1) == 0;
    a4 = v40 + v41;
    if (!__OFADD__(v40, v41))
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    swift_once();
  }
  v42 = v38;
  v43 = v39;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4B480);
  v44 = sub_1AF76AA14();
  v45 = v59;
  if ((v44 & 1) != 0)
  {
    v46 = sub_1AF6842A4(a2, v57);
    if ((v43 & 1) != (v47 & 1))
    {
LABEL_26:
      result = sub_1AF76AEA0();
      __break(1u);
      return result;
    }
    v42 = v46;
  }
  *(_QWORD *)(v36 + 8 * a6) = v45;
  swift_bridgeObjectRelease();
  v48 = *(_QWORD *)(v36 + 8 * a6);
  swift_bridgeObjectRetain();
  if ((v43 & 1) == 0)
  {
    sub_1AF6DA314(v42, a2, v57, MEMORY[0x1E0DEE9D8], v48);
    swift_bridgeObjectRetain();
  }
  v49 = *(_QWORD *)(v48 + 56);
  swift_bridgeObjectRelease();
  v50 = (uint64_t *)(v49 + 8 * v42);
  sub_1AF6A650C();
  v51 = *(_QWORD *)(*v50 + 16);
  sub_1AF6A65E8(v51);
  v52 = *v50;
  *(_QWORD *)(v52 + 16) = v51 + 1;
  v53 = v52 + 16 * v51;
  *(_QWORD *)(v53 + 32) = sub_1AF6ACA58;
  *(_QWORD *)(v53 + 40) = v27;
  swift_endAccess();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1AF6ABF78(uint64_t a1, void (*a2)(char *))
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v21[5];
  uint64_t v22;
  _BYTE v23[40];

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = sub_1AF76A8AC();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v21[-1] - v8;
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](v7);
  v12 = (char *)&v21[-1] - v11;
  sub_1AF696138(a1, (uint64_t)v23);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4A2B0);
  if ((swift_dynamicCast() & 1) != 0)
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, AssociatedTypeWitness);
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v9, AssociatedTypeWitness);
    a2(v12);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, AssociatedTypeWitness);
  }
  else
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 1, 1, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    if (qword_1EEE4A2A8 != -1)
      swift_once();
    v13 = sub_1AF76A354();
    __swift_project_value_buffer(v13, (uint64_t)qword_1EEE4A288);
    sub_1AF696138(a1, (uint64_t)v23);
    v14 = sub_1AF76A33C();
    v15 = sub_1AF76A810();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      v17 = swift_slowAlloc();
      v22 = v17;
      *(_DWORD *)v16 = 136315138;
      sub_1AF696138((uint64_t)v23, (uint64_t)v21);
      v18 = sub_1AF76A588();
      v21[0] = sub_1AF6AC2A0(v18, v19, &v22);
      sub_1AF76A8C4();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
      _os_log_impl(&dword_1AF681000, v14, v15, "Received unexpected event type: %s", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1B5DFC6E8](v17, -1, -1);
      MEMORY[0x1B5DFC6E8](v16, -1, -1);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
    }

  }
}

uint64_t sub_1AF6AC254@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEE4B3D0);
  result = sub_1AF76A4C8();
  *a1 = result;
  return result;
}

uint64_t sub_1AF6AC2A0(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[3];
  uint64_t ObjectType;

  v6 = sub_1AF6AC370(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_1AF6ACA64((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x1E0DEC2B8];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_1AF6ACA64((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_1AF6AC370(_QWORD *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0 && __dst && a3 - (uint64_t)__dst > (uint64_t)(HIBYTE(a6) & 0xF))
    {
      __src[0] = a5;
      __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
      sub_1AF6AC4C4((char *)__src, HIBYTE(a6) & 0xF, __dst);
      sub_1AF76A8D0();
      result = 0;
      *a1 = __dst;
      return result;
    }
    goto LABEL_11;
  }
  if ((a6 & 0x1000000000000000) != 0)
  {
LABEL_11:
    result = sub_1AF6AC588(a5, a6);
    *a1 = v11;
    return result;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
  }
  else
  {
    v8 = sub_1AF76A9C0();
    if (!v8)
    {
      result = sub_1AF76AA2C();
      __break(1u);
      return result;
    }
  }
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

void *sub_1AF6AC4C4(char *__src, size_t __n, char *__dst)
{
  void *result;

  if ((__n & 0x8000000000000000) == 0 && (&__dst[__n] <= __src || &__src[__n] <= __dst))
    return memcpy(__dst, __src, __n);
  result = (void *)sub_1AF76AA74();
  __break(1u);
  return result;
}

uint64_t sub_1AF6AC588(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_1AF6AC61C(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = (uint64_t)sub_1AF6AC7F0(0, *(_QWORD *)(v2 + 16) + 1, 1, v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = (uint64_t)sub_1AF6AC7F0((char *)(v3 > 1), v4 + 1, 1, v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1AF6AC61C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
  {
    v2 = sub_1AF76A5D0();
    if (v2)
      goto LABEL_6;
    return MEMORY[0x1E0DEE9D8];
  }
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v2)
    return MEMORY[0x1E0DEE9D8];
LABEL_6:
  v3 = sub_1AF6AC78C(v2, 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v4 = v3;
    v5 = sub_1AF76A96C();
    if ((v6 & 1) != 0 || v5 != v2)
      goto LABEL_14;
    return (uint64_t)v4;
  }
  sub_1AF76AA74();
  __break(1u);
LABEL_14:
  result = sub_1AF76AA2C();
  __break(1u);
  return result;
}

_QWORD *sub_1AF6AC78C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BE40);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

char *sub_1AF6AC7F0(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BE40);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_1AF6AC988(v13, v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1AF6AC8C4(v13, v8, v12);
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_1AF6AC8C4(char *__src, size_t __n, char *__dst)
{
  void *result;

  if ((__n & 0x8000000000000000) == 0 && (&__dst[__n] <= __src || &__src[__n] <= __dst))
    return memcpy(__dst, __src, __n);
  result = (void *)sub_1AF76AA74();
  __break(1u);
  return result;
}

char *sub_1AF6AC988(char *__src, size_t __len, char *__dst)
{
  if ((__len & 0x8000000000000000) != 0)
  {
    __src = (char *)sub_1AF76AA74();
    __break(1u);
  }
  else if (__dst != __src || &__src[__len] <= __dst)
  {
    return (char *)memmove(__dst, __src, __len);
  }
  return __src;
}

uint64_t sub_1AF6ACA08()
{
  uint64_t v0;

  return sub_1AF6ABA60(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t dispatch thunk of static XPCEventStream.name.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_1AF6ACA34()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1AF6ACA58(uint64_t a1)
{
  uint64_t v1;

  sub_1AF6ABF78(a1, *(void (**)(char *))(v1 + 32));
}

uint64_t sub_1AF6ACA64(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1AF6ACAA0()
{
  return swift_deallocObject();
}

void sub_1AF6ACAB0(void *a1)
{
  uint64_t v1;

  sub_1AF6AB000(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

void sub_1AF6ACAEC(uint64_t *a1@<X8>)
{
  uint64_t v1;

  sub_1AF6AB6F8(*(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_1AF6ACB0C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;

  result = sub_1AF69E61C(a1, a2);
  if (!v3)
    *a3 = result;
  return result;
}

unint64_t sub_1AF6ACB34()
{
  unint64_t result;

  result = qword_1EEE4CCA0;
  if (!qword_1EEE4CCA0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EEE4CCA0);
  }
  return result;
}

unint64_t sub_1AF6ACB70()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEE4BE48;
  if (!qword_1EEE4BE48)
  {
    v1 = sub_1AF76A834();
    result = MEMORY[0x1B5DFC634](MEMORY[0x1E0DEF828], v1);
    atomic_store(result, (unint64_t *)&qword_1EEE4BE48);
  }
  return result;
}

unint64_t sub_1AF6ACBB0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEE4BE50;
  if (!qword_1EEE4BE50)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE4CCB0);
    result = MEMORY[0x1B5DFC634](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1EEE4BE50);
  }
  return result;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

void sub_1AF6ACC34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_7_3();
  OUTLINED_FUNCTION_17_3();
  OUTLINED_FUNCTION_0_7();
  v1 = MEMORY[0x1E0C80A78](v0);
  v2 = MEMORY[0x1E0C80A78](v1);
  MEMORY[0x1E0C80A78](v2);
  sub_1AF76A12C();
  OUTLINED_FUNCTION_26_0();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_11_4();
  sub_1AF76A24C();
  OUTLINED_FUNCTION_0_7();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_22_3();
  sub_1AF76A540();
  v5 = OUTLINED_FUNCTION_28_2();
  OUTLINED_FUNCTION_7_6(v5, *MEMORY[0x1E0CAF9B8]);
  OUTLINED_FUNCTION_1_7();
  OUTLINED_FUNCTION_0_3();
}

BOOL sub_1AF6ACDEC(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_1AF6ACDFC()
{
  return sub_1AF76AF24();
}

uint64_t sub_1AF6ACE20()
{
  sub_1AF76AF18();
  sub_1AF76AF24();
  return sub_1AF76AF3C();
}

BOOL sub_1AF6ACE64(char *a1, char *a2)
{
  return sub_1AF6ACDEC(*a1, *a2);
}

uint64_t sub_1AF6ACE70()
{
  return sub_1AF6ACE20();
}

uint64_t sub_1AF6ACE78()
{
  return sub_1AF6ACDFC();
}

void sub_1AF6ACE80()
{
  sub_1AF6ACC34();
}

uint64_t sub_1AF6ACE88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_17_3();
  OUTLINED_FUNCTION_0_7();
  MEMORY[0x1E0C80A78](v1);
  v2 = OUTLINED_FUNCTION_5_4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_15_3();
  sub_1AF76A24C();
  OUTLINED_FUNCTION_0_7();
  MEMORY[0x1E0C80A78](v4);
  sub_1AF76A540();
  sub_1AF76A240();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v0, *MEMORY[0x1E0CAF9B8], v2);
  OUTLINED_FUNCTION_3_3();
  return OUTLINED_FUNCTION_1_7();
}

void sub_1AF6ACF7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_7_3();
  v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BEA8);
  OUTLINED_FUNCTION_0_7();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_5_4();
  OUTLINED_FUNCTION_26_0();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_22_3();
  OUTLINED_FUNCTION_18_4();
  OUTLINED_FUNCTION_0_7();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_14_4();
  sub_1AF76A54C();
  OUTLINED_FUNCTION_0_7();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_4_3();
  v9 = sub_1AF76A138();
  OUTLINED_FUNCTION_0_7();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_4_3();
  sub_1AF76A540();
  sub_1AF76A240();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v0, *MEMORY[0x1E0CAF9B8], v1);
  OUTLINED_FUNCTION_9_5();
  OUTLINED_FUNCTION_1_7();
  OUTLINED_FUNCTION_8_6();
  __swift_storeEnumTagSinglePayload(v11, v12, v13, v9);
  sub_1AF769EE0();
  v14 = sub_1AF769ED4();
  __swift_storeEnumTagSinglePayload(v4, 0, 1, v14);
  OUTLINED_FUNCTION_0_3();
}

uint64_t sub_1AF6AD0D4()
{
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BED0);
  sub_1AF6AEB88();
  sub_1AF6AEC04(&qword_1EEE4BED8, &qword_1EEE4BED0, MEMORY[0x1E0C91BF0]);
  return sub_1AF769FB8();
}

void sub_1AF6AD164()
{
  sub_1AF769EB0();
  OUTLINED_FUNCTION_19();
}

void sub_1AF6AD180(_QWORD *a1@<X8>)
{
  uint64_t v2;

  sub_1AF6AD164();
  *a1 = v2;
}

uint64_t sub_1AF6AD1A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  void (*v19)(char *, uint64_t);
  _QWORD v21[3];
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;

  v27 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BEE0);
  v2 = *(_QWORD *)(v1 - 8);
  v25 = v1;
  v26 = v2;
  v3 = MEMORY[0x1E0C80A78](v1);
  v23 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v24 = (char *)v21 - v5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BEE8);
  v22 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v21 - v10;
  v28 = 1;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BEF0);
  sub_1AF6AEB88();
  sub_1AF6ADFF8();
  sub_1AF6AEC04(&qword_1EEE4BEF8, &qword_1EEE4BEF0, MEMORY[0x1E0C916B0]);
  v21[1] = v12;
  sub_1AF769FAC();
  sub_1AF6AEC04(&qword_1EEE4BF00, &qword_1EEE4BEE8, MEMORY[0x1E0C91B38]);
  v21[2] = v13;
  v14 = v11;
  sub_1AF769FA0();
  v22 = *(_QWORD *)(v22 + 8);
  ((void (*)(char *, uint64_t))v22)(v9, v6);
  v15 = v23;
  sub_1AF769FC4();
  sub_1AF6AEC04(&qword_1EEE4BF08, &qword_1EEE4BEE0, MEMORY[0x1E0C91C18]);
  v17 = v24;
  v16 = v25;
  v18 = v15;
  sub_1AF769FA0();
  v19 = *(void (**)(char *, uint64_t))(v26 + 8);
  v19(v18, v16);
  sub_1AF769F94();
  v19(v17, v16);
  return ((uint64_t (*)(char *, uint64_t))v22)(v14, v6);
}

uint64_t sub_1AF6AD45C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  void (*v10)(char *, uint64_t);
  _QWORD v12[2];

  v12[1] = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BF10);
  MEMORY[0x1E0C80A78](v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BF18);
  MEMORY[0x1E0C80A78](v2);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BEF0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v12 - v8;
  sub_1AF6AEB88();
  sub_1AF769F34();
  sub_1AF769F28();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BF20);
  sub_1AF769F1C();
  swift_release();
  sub_1AF769F28();
  sub_1AF769F40();
  sub_1AF769F10();
  sub_1AF6AEC04(&qword_1EEE4BEF8, &qword_1EEE4BEF0, MEMORY[0x1E0C916B0]);
  sub_1AF769F58();
  v10 = *(void (**)(char *, uint64_t))(v4 + 8);
  v10(v7, v3);
  sub_1AF769F58();
  return ((uint64_t (*)(char *, uint64_t))v10)(v9, v3);
}

uint64_t sub_1AF6AD6A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  void (*v10)(char *, uint64_t);
  _QWORD v12[2];

  v12[1] = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BF10);
  MEMORY[0x1E0C80A78](v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BF18);
  MEMORY[0x1E0C80A78](v2);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BEF0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v12 - v8;
  sub_1AF6AEB88();
  sub_1AF769F34();
  sub_1AF769F28();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BF20);
  sub_1AF769F1C();
  swift_release();
  sub_1AF769F28();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BF28);
  sub_1AF769F1C();
  swift_release();
  sub_1AF769F28();
  sub_1AF769F40();
  sub_1AF769F10();
  sub_1AF6AEC04(&qword_1EEE4BEF8, &qword_1EEE4BEF0, MEMORY[0x1E0C916B0]);
  sub_1AF769F58();
  v10 = *(void (**)(char *, uint64_t))(v4 + 8);
  v10(v7, v3);
  sub_1AF769F58();
  return ((uint64_t (*)(char *, uint64_t))v10)(v9, v3);
}

void sub_1AF6AD93C()
{
  sub_1AF769EB0();
  OUTLINED_FUNCTION_19();
}

void sub_1AF6AD958(_QWORD *a1@<X8>)
{
  uint64_t v2;

  sub_1AF6AD93C();
  *a1 = v2;
}

uint64_t sub_1AF6AD980()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BEA8);
  OUTLINED_FUNCTION_0_7();
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_11_4();
  v1 = sub_1AF76A138();
  OUTLINED_FUNCTION_0_7();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_19_3();
  sub_1AF76A120();
  OUTLINED_FUNCTION_8_6();
  __swift_storeEnumTagSinglePayload(v3, v4, v5, v1);
  return sub_1AF769F88();
}

uint64_t sub_1AF6ADA20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  OUTLINED_FUNCTION_7_3();
  OUTLINED_FUNCTION_17_3();
  OUTLINED_FUNCTION_0_7();
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_2_4();
  OUTLINED_FUNCTION_23_3();
  MEMORY[0x1E0C80A78](v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BF30);
  OUTLINED_FUNCTION_0_7();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_13_4(v3, v24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BEA8);
  OUTLINED_FUNCTION_0_7();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_12_4(v5, v25);
  v6 = sub_1AF76A12C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_4_3();
  v10 = v9 - v8;
  OUTLINED_FUNCTION_18_4();
  OUTLINED_FUNCTION_0_7();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_4_3();
  v28 = sub_1AF76A138();
  OUTLINED_FUNCTION_0_7();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_2_4();
  OUTLINED_FUNCTION_23_3();
  MEMORY[0x1E0C80A78](v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BF38);
  v14 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BF40) - 8);
  v27 = *(_QWORD *)(v14 + 72);
  v15 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_1AF777250;
  *(_BYTE *)(v29 + v15) = 0;
  sub_1AF76A540();
  sub_1AF76A240();
  v16 = *MEMORY[0x1E0CAF9B8];
  v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 104);
  v26(v10, v16, v6);
  OUTLINED_FUNCTION_3_3();
  OUTLINED_FUNCTION_1_7();
  OUTLINED_FUNCTION_8_6();
  __swift_storeEnumTagSinglePayload(v17, v18, v19, v28);
  sub_1AF769EEC();
  OUTLINED_FUNCTION_20_2();
  sub_1AF769EF8();
  *(_BYTE *)(v29 + v15 + v27) = 1;
  sub_1AF76A540();
  sub_1AF76A240();
  v26(v10, v16, v6);
  OUTLINED_FUNCTION_1_7();
  OUTLINED_FUNCTION_8_6();
  __swift_storeEnumTagSinglePayload(v20, v21, v22, v28);
  OUTLINED_FUNCTION_20_2();
  sub_1AF769EF8();
  sub_1AF769F04();
  sub_1AF6AE1B4();
  return sub_1AF76A4C8();
}

uint64_t sub_1AF6ADD38()
{
  uint64_t v0;
  unsigned int v1;

  v0 = sub_1AF76AA8C();
  swift_bridgeObjectRelease();
  if (v0 == 1)
    v1 = 1;
  else
    v1 = 2;
  if (v0)
    return v1;
  else
    return 0;
}

uint64_t sub_1AF6ADD88(char a1)
{
  if ((a1 & 1) != 0)
    return 0x656C67676F74;
  else
    return 1852994932;
}

void sub_1AF6ADDB4(char *a1, char *a2)
{
  sub_1AF695BBC(*a1, *a2);
}

unint64_t sub_1AF6ADDC4()
{
  unint64_t result;

  result = qword_1ED01FAF8;
  if (!qword_1ED01FAF8)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF778E64, &unk_1E5FC03B8);
    atomic_store(result, (unint64_t *)&qword_1ED01FAF8);
  }
  return result;
}

void sub_1AF6ADE00()
{
  sub_1AF6DC5C8();
}

uint64_t sub_1AF6ADE08()
{
  return sub_1AF6DC704();
}

void sub_1AF6ADE10()
{
  sub_1AF6DC828();
}

uint64_t sub_1AF6ADE18@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1AF6ADD38();
  *a1 = result;
  return result;
}

uint64_t sub_1AF6ADE44@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1AF6ADD88(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_1AF6ADE6C()
{
  sub_1AF6AEC04(&qword_1EEE4BE58, &qword_1EEE4BE60, MEMORY[0x1E0DEAF50]);
}

void sub_1AF6ADE98(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E5FC0330;
}

unint64_t sub_1AF6ADEAC()
{
  unint64_t result;

  result = qword_1ED01FAB8;
  if (!qword_1ED01FAB8)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF778F7C, &unk_1E5FC03B8);
    atomic_store(result, (unint64_t *)&qword_1ED01FAB8);
  }
  return result;
}

unint64_t sub_1AF6ADEEC()
{
  unint64_t result;

  result = qword_1ED01FAE0;
  if (!qword_1ED01FAE0)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF778FB4, &unk_1E5FC03B8);
    atomic_store(result, (unint64_t *)&qword_1ED01FAE0);
  }
  return result;
}

unint64_t sub_1AF6ADF2C()
{
  unint64_t result;

  result = qword_1ED01FB00;
  if (!qword_1ED01FB00)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF778ECC, &unk_1E5FC03B8);
    atomic_store(result, (unint64_t *)&qword_1ED01FB00);
  }
  return result;
}

uint64_t sub_1AF6ADF68()
{
  return MEMORY[0x1E0DEA9E0];
}

unint64_t sub_1AF6ADF78()
{
  unint64_t result;

  result = qword_1ED01FAD0;
  if (!qword_1ED01FAD0)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF778FE4, &unk_1E5FC03B8);
    atomic_store(result, (unint64_t *)&qword_1ED01FAD0);
  }
  return result;
}

unint64_t sub_1AF6ADFB8()
{
  unint64_t result;

  result = qword_1ED01FAD8;
  if (!qword_1ED01FAD8)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77900C, &unk_1E5FC03B8);
    atomic_store(result, (unint64_t *)&qword_1ED01FAD8);
  }
  return result;
}

unint64_t sub_1AF6ADFF8()
{
  unint64_t result;

  result = qword_1ED01FAC0;
  if (!qword_1ED01FAC0)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF779034, &unk_1E5FC03B8);
    atomic_store(result, (unint64_t *)&qword_1ED01FAC0);
  }
  return result;
}

unint64_t sub_1AF6AE038()
{
  unint64_t result;

  result = qword_1ED01FAC8;
  if (!qword_1ED01FAC8)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77908C, &unk_1E5FC03B8);
    atomic_store(result, (unint64_t *)&qword_1ED01FAC8);
  }
  return result;
}

uint64_t sub_1AF6AE07C()
{
  sub_1AF6AE0BC();
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1AF6AE0BC()
{
  unint64_t result;

  result = qword_1EEE4BE68;
  if (!qword_1EEE4BE68)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF778F3C, &unk_1E5FC03B8);
    atomic_store(result, (unint64_t *)&qword_1EEE4BE68);
  }
  return result;
}

uint64_t sub_1AF6AE0F8()
{
  sub_1AF6AE0BC();
  return sub_1AF769E44();
}

unint64_t sub_1AF6AE134()
{
  unint64_t result;

  result = qword_1ED01FAE8;
  if (!qword_1ED01FAE8)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF7790CC, &unk_1E5FC03B8);
    atomic_store(result, (unint64_t *)&qword_1ED01FAE8);
  }
  return result;
}

unint64_t sub_1AF6AE174()
{
  unint64_t result;

  result = qword_1ED01FB08;
  if (!qword_1ED01FB08)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF778F04, &unk_1E5FC03B8);
    atomic_store(result, (unint64_t *)&qword_1ED01FB08);
  }
  return result;
}

unint64_t sub_1AF6AE1B4()
{
  unint64_t result;

  result = qword_1ED01FAF0;
  if (!qword_1ED01FAF0)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF778E8C, &unk_1E5FC03B8);
    atomic_store(result, (unint64_t *)&qword_1ED01FAF0);
  }
  return result;
}

uint64_t sub_1AF6AE1F4()
{
  sub_1AF6AE038();
  return sub_1AF769F70();
}

unint64_t sub_1AF6AE230()
{
  unint64_t result;

  result = qword_1ED01FA80;
  if (!qword_1ED01FA80)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF779184, &unk_1E5FC0470);
    atomic_store(result, (unint64_t *)&qword_1ED01FA80);
  }
  return result;
}

unint64_t sub_1AF6AE270()
{
  unint64_t result;

  result = qword_1ED01FB10;
  if (!qword_1ED01FB10)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF7791AC, &unk_1E5FC0470);
    atomic_store(result, (unint64_t *)&qword_1ED01FB10);
  }
  return result;
}

uint64_t sub_1AF6AE2AC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1AF6AE2BC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1AF6AE2CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1AF6AE2E8()
{
  uint64_t v0;
  id v1;
  unsigned __int8 v2;
  _BYTE *v3;
  id v4;
  void *v5;
  unsigned __int8 v6;
  _BYTE *v7;
  uint64_t v8;
  void *v9;
  uint64_t (*v10)(void);
  _BYTE *v11;

  v1 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
  v2 = objc_msgSend(v1, sel_hasCapability_, CFSTR("HardwareRingerSwitch"));

  if ((v2 & 1) != 0)
  {
    sub_1AF6AEBC4();
    OUTLINED_FUNCTION_5();
    *v3 = 0;
    swift_willThrow();
LABEL_10:
    v10 = *(uint64_t (**)(void))(v0 + 8);
    return v10();
  }
  v4 = objc_msgSend(objc_allocWithZone((Class)WFAVSystemController), sel_init);
  sub_1AF769EA4();
  if (*(_BYTE *)(v0 + 40) == 1)
  {
    v5 = (void *)OUTLINED_FUNCTION_16_4();
    v6 = objc_msgSend(v4, sel_toggleSilentModeWithReason_client_, v5, 1);

    if ((v6 & 1) == 0)
    {
      sub_1AF6AEBC4();
      OUTLINED_FUNCTION_5();
      *v7 = 1;
LABEL_9:
      swift_willThrow();

      goto LABEL_10;
    }
  }
  else
  {
    sub_1AF769EA4();
    v8 = *(unsigned __int8 *)(v0 + 40);
    v9 = (void *)OUTLINED_FUNCTION_16_4();
    LOBYTE(v8) = objc_msgSend(v4, sel_setSilentMode_reason_client_, v8, v9, 1);

    if ((v8 & 1) == 0)
    {
      sub_1AF6AEBC4();
      OUTLINED_FUNCTION_5();
      *v11 = 2;
      goto LABEL_9;
    }
  }
  sub_1AF769E98();

  v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_1AF6AE4AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38[2];
  unsigned int v39;
  uint64_t v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  char v50;
  uint64_t v51;
  uint64_t v52;

  OUTLINED_FUNCTION_7_3();
  v51 = v0;
  v52 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BE98);
  OUTLINED_FUNCTION_0_7();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_13_4(v3, v38[0]);
  OUTLINED_FUNCTION_17_3();
  OUTLINED_FUNCTION_0_7();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_2_4();
  v47 = v5;
  OUTLINED_FUNCTION_23_3();
  MEMORY[0x1E0C80A78](v6);
  v48 = sub_1AF769F4C();
  v45 = *(_QWORD *)(v48 - 8);
  MEMORY[0x1E0C80A78](v48);
  OUTLINED_FUNCTION_12_4(v7, v38[0]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BEA0);
  OUTLINED_FUNCTION_0_7();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_2_4();
  v43 = v9;
  OUTLINED_FUNCTION_23_3();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v38 - v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BEA8);
  OUTLINED_FUNCTION_0_7();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_14_4();
  v14 = sub_1AF76A12C();
  v15 = *(_QWORD *)(v14 - 8);
  v42 = v14;
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_4_3();
  v18 = v17 - v16;
  OUTLINED_FUNCTION_18_4();
  OUTLINED_FUNCTION_0_7();
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_15_3();
  v20 = sub_1AF76A138();
  v40 = v20;
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_2_4();
  v44 = v21;
  OUTLINED_FUNCTION_23_3();
  MEMORY[0x1E0C80A78](v22);
  OUTLINED_FUNCTION_19_3();
  sub_1AF76A540();
  v38[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BEB0);
  sub_1AF76A240();
  v41 = *MEMORY[0x1E0CAF9B8];
  v23 = *(void (**)(uint64_t))(v15 + 104);
  v23(v18);
  OUTLINED_FUNCTION_9_5();
  OUTLINED_FUNCTION_1_7();
  OUTLINED_FUNCTION_8_6();
  __swift_storeEnumTagSinglePayload(v24, v25, v26, v20);
  v50 = 0;
  sub_1AF769E8C();
  v38[0] = (uint64_t)v12;
  OUTLINED_FUNCTION_6_6((uint64_t)v12);
  OUTLINED_FUNCTION_6_6(v43);
  v39 = *MEMORY[0x1E0C91738];
  v27 = v46;
  v28 = *(void (**)(uint64_t))(v45 + 104);
  v28(v46);
  sub_1AF6AE0BC();
  v29 = sub_1AF769EBC();
  sub_1AF76A540();
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BEB8);
  sub_1AF76A240();
  ((void (*)(uint64_t, _QWORD, uint64_t))v23)(v18, v41, v42);
  OUTLINED_FUNCTION_3_3();
  OUTLINED_FUNCTION_1_7();
  OUTLINED_FUNCTION_8_6();
  __swift_storeEnumTagSinglePayload(v30, v31, v32, v40);
  v49 = 1;
  sub_1AF76A648();
  OUTLINED_FUNCTION_8_6();
  __swift_storeEnumTagSinglePayload(v33, v34, v35, v36);
  OUTLINED_FUNCTION_6_6(v38[0]);
  ((void (*)(uint64_t, _QWORD, uint64_t))v28)(v27, v39, v48);
  sub_1AF769EC8();
  return v29;
}

uint64_t sub_1AF6AE840(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *v1;
  v4 = v1[1];
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_1AF6AE8A4;
  return sub_1AF6AE2CC(a1, v5, v4);
}

uint64_t sub_1AF6AE8A4()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1AF6AE8EC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1AF6AE4AC();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1AF6AE910()
{
  sub_1AF6AEB88();
  return sub_1AF769E74();
}

uint64_t sub_1AF6AE93C()
{
  swift_release();
  return swift_release();
}

void sub_1AF6AE964(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = a2[1];
  *a1 = *a2;
  a1[1] = v2;
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_19();
}

_QWORD *sub_1AF6AE994(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_1AF6AE9F0(_OWORD *a1, _OWORD *a2)
{
  swift_release();
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t sub_1AF6AEA2C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_1AF6AEA68(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AF6AEAB4 + 4 * byte_1AF778E55[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AF6AEAE8 + 4 * asc_1AF778E50[v4]))();
}

uint64_t sub_1AF6AEAE8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AF6AEAF0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AF6AEAF8);
  return result;
}

uint64_t sub_1AF6AEB04(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AF6AEB0CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AF6AEB10(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AF6AEB18(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for SetSilentModeAction.SetSilentModeOperation()
{
  OUTLINED_FUNCTION_25();
}

void sub_1AF6AEB30()
{
  sub_1AF6AEC04(&qword_1EEE4BE78, &qword_1EEE4BE80, MEMORY[0x1E0C91BB8]);
}

void sub_1AF6AEB5C()
{
  sub_1AF6AEC04(&qword_1EEE4BE88, &qword_1EEE4BE90, MEMORY[0x1E0C91590]);
}

unint64_t sub_1AF6AEB88()
{
  unint64_t result;

  result = qword_1ED01FB18;
  if (!qword_1ED01FB18)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF7790F4, &unk_1E5FC0470);
    atomic_store(result, (unint64_t *)&qword_1ED01FB18);
  }
  return result;
}

unint64_t sub_1AF6AEBC4()
{
  unint64_t result;

  result = qword_1EEE4BEC8;
  if (!qword_1EEE4BEC8)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF779308, &unk_1E5FC0810);
    atomic_store(result, (unint64_t *)&qword_1EEE4BEC8);
  }
  return result;
}

void sub_1AF6AEC04(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;

  if (!*a1)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    atomic_store(MEMORY[0x1B5DFC634](a3, v5), a1);
  }
  OUTLINED_FUNCTION_19();
}

uint64_t sub_1AF6AEC44(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1AF6AEC90 + 4 * byte_1AF778E5F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1AF6AECC4 + 4 * byte_1AF778E5A[v4]))();
}

uint64_t sub_1AF6AECC4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AF6AECCC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AF6AECD4);
  return result;
}

uint64_t sub_1AF6AECE0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AF6AECE8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1AF6AECEC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AF6AECF4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for SilentModeActionError()
{
  OUTLINED_FUNCTION_25();
}

unint64_t sub_1AF6AED10()
{
  unint64_t result;

  result = qword_1EEE4BF48;
  if (!qword_1EEE4BF48)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF7792E0, &unk_1E5FC0810);
    atomic_store(result, (unint64_t *)&qword_1EEE4BF48);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_7()
{
  return sub_1AF76A144();
}

uint64_t OUTLINED_FUNCTION_3_3()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_5_4()
{
  return sub_1AF76A12C();
}

uint64_t OUTLINED_FUNCTION_6_6(uint64_t a1)
{
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(a1, 1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_7_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 104))(v2, a2, v3);
}

uint64_t OUTLINED_FUNCTION_9_5()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_11_4()
{
  return 0;
}

void OUTLINED_FUNCTION_12_4(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 120) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void OUTLINED_FUNCTION_13_4(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 104) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_14_4()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_15_3()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_16_4()
{
  return sub_1AF76A558();
}

uint64_t OUTLINED_FUNCTION_17_3()
{
  return sub_1AF76A54C();
}

uint64_t OUTLINED_FUNCTION_18_4()
{
  return sub_1AF76A24C();
}

uint64_t OUTLINED_FUNCTION_19_3()
{
  return 0x6F6974617265704FLL;
}

uint64_t OUTLINED_FUNCTION_20_2()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v0, 1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_28_2()
{
  return sub_1AF76A240();
}

uint64_t AsyncSequence.next()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  v6 = sub_1AF769FDC();
  v4[6] = v6;
  v4[7] = *(_QWORD *)(v6 - 8);
  v4[8] = OUTLINED_FUNCTION_0_6();
  v4[9] = OUTLINED_FUNCTION_2_5();
  v7 = sub_1AF76A8AC();
  v4[10] = v7;
  v4[11] = *(_QWORD *)(v7 - 8);
  v4[12] = OUTLINED_FUNCTION_0_6();
  v4[13] = *(_QWORD *)(a2 - 8);
  v4[14] = OUTLINED_FUNCTION_0_6();
  v8 = OUTLINED_FUNCTION_2_5();
  v4[15] = v8;
  v4[16] = *(_QWORD *)(v8 - 8);
  v4[17] = OUTLINED_FUNCTION_0_6();
  return swift_task_switch();
}

uint64_t sub_1AF6AF000()
{
  _QWORD *v0;
  _QWORD *v1;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[13] + 16))(v0[14], v0[5], v0[3]);
  sub_1AF76A708();
  swift_getAssociatedConformanceWitness();
  v1 = (_QWORD *)swift_task_alloc();
  v0[18] = v1;
  *v1 = v0;
  v1[1] = sub_1AF6AF0C8;
  return sub_1AF76A684();
}

uint64_t sub_1AF6AF0C8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 152) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1AF6AF12C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 72);
  if (__swift_getEnumTagSinglePayload(v1, 1, v2) == 1)
  {
    v4 = *(_QWORD *)(v0 + 56);
    v3 = *(_QWORD *)(v0 + 64);
    v5 = *(_QWORD *)(v0 + 48);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(v1, *(_QWORD *)(v0 + 80));
    *(_DWORD *)(v0 + 160) = 2;
    sub_1AF6AF2DC(MEMORY[0x1E0DEE9D8]);
    sub_1AF6AF404();
    sub_1AF76A0FC();
    sub_1AF769FD0();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    swift_willThrow();
    OUTLINED_FUNCTION_3_4();
    OUTLINED_FUNCTION_1_8();
    OUTLINED_FUNCTION_7_5();
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 16);
    OUTLINED_FUNCTION_3_4();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32))(v6, v1, v2);
    OUTLINED_FUNCTION_7_5();
    swift_task_dealloc();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1AF6AF280()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 8))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 120));
  OUTLINED_FUNCTION_1_8();
  OUTLINED_FUNCTION_7_5();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_1AF6AF2DC(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEE4CE20);
  v2 = sub_1AF76AA68();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1AF6AF4A8(v6, (uint64_t)&v15);
    v7 = v15;
    v8 = v16;
    result = sub_1AF6AF444(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_1AF69AF78(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1AF6AF404()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEE4B068;
  if (!qword_1EEE4B068)
  {
    v1 = sub_1AF769FDC();
    result = MEMORY[0x1B5DFC634](MEMORY[0x1E0CADE88], v1);
    atomic_store(result, (unint64_t *)&qword_1EEE4B068);
  }
  return result;
}

unint64_t sub_1AF6AF444(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1AF76AF18();
  sub_1AF76A5AC();
  v4 = sub_1AF76AF3C();
  return sub_1AF6AF4F0(a1, a2, v4);
}

uint64_t sub_1AF6AF4A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BF58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1AF6AF4F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t i;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v15;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  i = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * i);
    if ((*v10 != a1 || v10[1] != a2) && (sub_1AF76AD14() & 1) == 0)
    {
      v12 = ~v5;
      i = (i + 1) & v12;
      if (((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
      {
        v13 = (_QWORD *)(v9 + 16 * i);
        if ((*v13 != a1 || v13[1] != a2) && (sub_1AF76AD14() & 1) == 0)
        {
          for (i = (i + 1) & v12; ((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v12)
          {
            v15 = (_QWORD *)(v9 + 16 * i);
            if (*v15 == a1 && v15[1] == a2)
              break;
            if ((sub_1AF76AD14() & 1) != 0)
              break;
          }
        }
      }
    }
  }
  return i;
}

uint64_t OUTLINED_FUNCTION_1_8()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_2_5()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_3_4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t sub_1AF6AF668()
{
  qword_1EEE4BF60 = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "_os_activity_current");
  return swift_unknownObjectRetain();
}

uint64_t WFLogActivity.Handle.deinit()
{
  uint64_t v0;

  OUTLINED_FUNCTION_0_8();
  os_activity_scope_leave((os_activity_scope_state_t)(v0 + 24));
  swift_endAccess();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t WFLogActivity.Handle.__deallocating_deinit()
{
  WFLogActivity.Handle.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1AF6AF6FC()
{
  uint64_t v0;
  NSObject *v1;

  v1 = *(NSObject **)(v0 + 16);
  OUTLINED_FUNCTION_0_8();
  os_activity_scope_enter(v1, (os_activity_scope_state_t)(v0 + 24));
  return swift_endAccess();
}

_QWORD *static WFLogActivity.begin(name:)(char *a1, uint64_t a2, char a3)
{
  int v3;
  NSObject *v5;
  char *v6;
  unsigned int v7;
  unsigned int v8;
  os_activity_t v9;
  _QWORD *v10;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  char description[8];

  if ((a3 & 1) != 0)
  {
    if ((unint64_t)a1 >> 32)
    {
LABEL_15:
      __break(1u);
      goto LABEL_16;
    }
    v7 = a1 >> 11;
    if (a1 >> 11 == 27)
    {
      __break(1u);
    }
    else
    {
      v7 = a1 >> 16;
      if (a1 >> 16 > 0x10)
      {
        __break(1u);
      }
      else if ((a1 & 0xFFFFFF80) == 0)
      {
        if (a1 > 0xFF)
        {
          __break(1u);
          goto LABEL_21;
        }
        v8 = ((_BYTE)a1 + 1);
LABEL_11:
        *(_QWORD *)description = (v8 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << ((32 - (__clz(v8) & 0x38)) & 0x38));
        if (qword_1EEE4B650 == -1)
        {
LABEL_12:
          v5 = qword_1EEE4BF60;
          v6 = description;
          goto LABEL_13;
        }
LABEL_21:
        swift_once();
        goto LABEL_12;
      }
      v3 = (a1 & 0x3F) << 8;
      if (a1 < 0x800)
      {
        v8 = (v3 | (a1 >> 6)) + 33217;
        goto LABEL_11;
      }
    }
    v12 = (v3 | (a1 >> 6) & 0x3F) << 8;
    v13 = (((v12 | (a1 >> 12) & 0x3F) << 8) | (a1 >> 18)) - 2122219023;
    v14 = (v12 | (a1 >> 12)) + 8487393;
    if (v7)
      v8 = v13;
    else
      v8 = v14;
    goto LABEL_11;
  }
  if (!a1)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (qword_1EEE4B650 != -1)
LABEL_16:
    swift_once();
  v5 = qword_1EEE4BF60;
  v6 = a1;
LABEL_13:
  v9 = _os_activity_create(&dword_1AF681000, v6, v5, OS_ACTIVITY_FLAG_DEFAULT);
  type metadata accessor for WFLogActivity.Handle();
  v10 = (_QWORD *)swift_allocObject();
  v10[3] = 0;
  v10[4] = 0;
  v10[2] = v9;
  sub_1AF6AF6FC();
  return v10;
}

uint64_t type metadata accessor for WFLogActivity.Handle()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for WFLogActivity()
{
  return &type metadata for WFLogActivity;
}

uint64_t method lookup function for WFLogActivity.Handle()
{
  return swift_lookUpClassMethod();
}

uint64_t OUTLINED_FUNCTION_0_8()
{
  return swift_beginAccess();
}

BOOL sub_1AF6AF948(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_1AF6AF958()
{
  return sub_1AF76AF24();
}

uint64_t sub_1AF6AF97C()
{
  sub_1AF76AF18();
  sub_1AF76AF24();
  return sub_1AF76AF3C();
}

BOOL sub_1AF6AF9C0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1AF6AF948(*a1, *a2);
}

uint64_t sub_1AF6AF9CC()
{
  return sub_1AF6AF97C();
}

uint64_t sub_1AF6AF9D4()
{
  return sub_1AF6AF958();
}

uint64_t XPCEndpoint.endpoint.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t XPCEndpoint.init(_:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

void XPCEndpoint.init(from:)(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AF76AF48();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BF70);
    if ((OUTLINED_FUNCTION_2_6() & 1) != 0)
    {
      v5 = swift_unknownObjectRetain();
      v6 = MEMORY[0x1B5DFCA90](v5);
      if (v6 == sub_1AF76A39C())
      {
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        *a2 = v10;
      }
      else
      {
        sub_1AF6AFB04();
        OUTLINED_FUNCTION_5();
        *v7 = 1;
        swift_willThrow();
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease_n();
      }
    }
    else
    {
      sub_1AF6AFB04();
      v8 = OUTLINED_FUNCTION_5();
      OUTLINED_FUNCTION_3_5(v8, v9);
    }
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  OUTLINED_FUNCTION_0_9();
}

unint64_t sub_1AF6AFB04()
{
  unint64_t result;

  result = qword_1EEE4BF78;
  if (!qword_1EEE4BF78)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF7794E0, &type metadata for XPCEndpointCodingError);
    atomic_store(result, (unint64_t *)&qword_1EEE4BF78);
  }
  return result;
}

void XPCEndpoint.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;

  v2 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AF76AF60();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BF80);
  if ((OUTLINED_FUNCTION_2_6() & 1) != 0)
  {
    v3 = *(_QWORD *)(v8 + 16);
    v4 = *(_QWORD *)(v8 + 24);
    *(_QWORD *)(v8 + 16) = v2;
    *(_QWORD *)(v8 + 24) = 0;
    v5 = *(_BYTE *)(v8 + 32);
    *(_BYTE *)(v8 + 32) = 7;
    swift_unknownObjectRetain();
    sub_1AF6A0EC0(v3, v4, v5);
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    sub_1AF6AFB04();
    v6 = OUTLINED_FUNCTION_5();
    OUTLINED_FUNCTION_3_5(v6, v7);
  }
  OUTLINED_FUNCTION_0_9();
}

void sub_1AF6AFC0C(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  XPCEndpoint.init(from:)(a1, a2);
}

void sub_1AF6AFC20(_QWORD *a1)
{
  XPCEndpoint.encode(to:)(a1);
}

BOOL static XPCEndpoint.== infix(_:_:)(xpc_object_t *a1, xpc_object_t *a2)
{
  return xpc_equal(*a1, *a2);
}

uint64_t XPCEndpoint.description.getter()
{
  uint64_t v0;
  uint64_t v1;

  sub_1AF76A960();
  swift_bridgeObjectRelease();
  v0 = swift_unknownObjectRetain();
  v1 = MEMORY[0x1B5DFC970](v0);
  sub_1AF76A5C4();
  MEMORY[0x1B5DFC6E8](v1, -1, -1);
  swift_unknownObjectRelease();
  sub_1AF76A5B8();
  swift_bridgeObjectRelease();
  sub_1AF76A5B8();
  return 0x646E65206370783CLL;
}

ValueMetadata *type metadata accessor for XPCEndpoint()
{
  return &type metadata for XPCEndpoint;
}

uint64_t storeEnumTagSinglePayload for XPCEndpointCodingError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AF6AFD80 + 4 * byte_1AF77939D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AF6AFDB4 + 4 * byte_1AF779398[v4]))();
}

uint64_t sub_1AF6AFDB4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AF6AFDBC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AF6AFDC4);
  return result;
}

uint64_t sub_1AF6AFDD0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AF6AFDD8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AF6AFDDC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AF6AFDE4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for XPCEndpointCodingError()
{
  return &type metadata for XPCEndpointCodingError;
}

unint64_t sub_1AF6AFE04()
{
  unint64_t result;

  result = qword_1EEE4BF88;
  if (!qword_1EEE4BF88)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF7794B8, &type metadata for XPCEndpointCodingError);
    atomic_store(result, (unint64_t *)&qword_1EEE4BF88);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_2_6()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_3_5(uint64_t a1, _BYTE *a2)
{
  *a2 = 0;
  return swift_willThrow();
}

uint64_t sub_1AF6AFE70(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  char *v25;
  char *v26;
  void (*v27)(char *, _QWORD);
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, char *);
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char v49[40];
  uint64_t v50;

  v37 = a5;
  v38 = a8;
  v44 = a1;
  v45 = a2;
  v36 = *(_QWORD *)(a5 - 8);
  MEMORY[0x1E0C80A78](a1);
  v46 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v12 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v13 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v41 = (char *)&v32 - v14;
  MEMORY[0x1E0C80A78](v13);
  v40 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = swift_getAssociatedTypeWitness();
  v39 = *(_QWORD *)(v16 - 8);
  v17 = MEMORY[0x1E0C80A78](v16);
  v35 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v32 - v19;
  v42 = v8;
  v21 = a6;
  v22 = sub_1AF76A7B0();
  if (!v22)
    return sub_1AF76A618();
  v23 = v22;
  v33 = v16;
  v50 = sub_1AF76A9E4();
  v43 = sub_1AF76A9F0();
  sub_1AF76A9CC();
  v34 = v20;
  result = sub_1AF76A7A4();
  if (v23 < 0)
  {
    __break(1u);
  }
  else
  {
    v47 = v21;
    v25 = v41;
    v26 = v34;
    while (1)
    {
      v27 = (void (*)(char *, _QWORD))sub_1AF76A7EC();
      (*(void (**)(char *))(v12 + 16))(v25);
      v27(v49, 0);
      v28 = v48;
      v44(v25, v46);
      if (v28)
        break;
      v48 = 0;
      (*(void (**)(char *, uint64_t))(v12 + 8))(v25, AssociatedTypeWitness);
      sub_1AF76A9D8();
      sub_1AF76A7BC();
      if (!--v23)
      {
        v29 = v39;
        v30 = v35;
        v31 = v33;
        (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v35, v26, v33);
        sub_1AF76A918();
        (*(void (**)(char *, uint64_t))(v29 + 8))(v30, v31);
        return v50;
      }
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v25, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v26, v33);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v36 + 32))(v38, v46, v37);
  }
  return result;
}

BOOL static ProtobufUseCase.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ProtobufUseCase.hash(into:)()
{
  return sub_1AF76AF24();
}

uint64_t ProtobufUseCase.hashValue.getter()
{
  sub_1AF76AF18();
  sub_1AF76AF24();
  return sub_1AF76AF3C();
}

uint64_t OnewayProtobufRepresentable.protobuf.getter(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = 0;
  return (*(uint64_t (**)(char *, uint64_t))(a2 + 16))(&v3, a1);
}

uint64_t OnewayProtobufRepresentable<>.protobufBytes.getter()
{
  return OnewayProtobufRepresentable<>.protobufBytes(useCase:)();
}

uint64_t OnewayProtobufRepresentable<>.protobufBytes(useCase:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t AssociatedTypeWitness;
  char v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_46();
  v13 = v2;
  v14 = v3;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  OUTLINED_FUNCTION_13_5();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v12 = *v9;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(&v12, v7, v5);
  if (!v1)
  {
    v0 = sub_1AF76A288();
    OUTLINED_FUNCTION_7_7();
  }
  return v0;
}

id OnewayProtobufRepresentable<>.protobufBytes(compressionAlgorithm:useCase:)(id a1, _BYTE *a2)
{
  uint64_t v2;
  void *v4;
  id v5;
  id v6;
  void *v8;
  id v9[2];

  v9[1] = *(id *)MEMORY[0x1E0C80C00];
  LOBYTE(v9[0]) = *a2;
  OnewayProtobufRepresentable<>.protobufBytes(useCase:)();
  if (!v2)
  {
    v4 = (void *)sub_1AF76A180();
    v9[0] = 0;
    a1 = objc_msgSend(v4, sel_compressedDataUsingAlgorithm_error_, a1, v9);

    v5 = v9[0];
    if (a1)
    {
      v6 = a1;
      a1 = (id)sub_1AF76A1B0();

    }
    else
    {
      v8 = v5;
      sub_1AF76A114();

      swift_willThrow();
    }
    OUTLINED_FUNCTION_9_6();
  }
  return a1;
}

void ProtobufRepresentable.init(protobuf:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  OUTLINED_FUNCTION_46();
  v24 = v3;
  v25 = v0;
  v5 = v4;
  v7 = v6;
  OUTLINED_FUNCTION_14_5();
  v26 = v8;
  v27 = v1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = sub_1AF76A8AC();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v24 - v13;
  v15 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v24 - v17;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v7, v10);
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, AssociatedTypeWitness) == 1)
  {
    v19 = *(void (**)(char *, uint64_t))(v11 + 8);
    v19(v14, v10);
    v22 = type metadata accessor for ProtobufRepresentableError(0, AssociatedTypeWitness, v20, v21);
    MEMORY[0x1B5DFC634](&protocol conformance descriptor for ProtobufRepresentableError<A>, v22);
    swift_allocError();
    *v23 = AssociatedTypeWitness;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    v19(v7, v10);
  }
  else
  {
    OUTLINED_FUNCTION_16_5((uint64_t)v18, (uint64_t)v14, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 32));
    OUTLINED_FUNCTION_16_5(v2, (uint64_t)v18, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 16));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v2, v26, v5);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v7, v10);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, AssociatedTypeWitness);
  }
  OUTLINED_FUNCTION_2_2();
}

uint64_t type metadata accessor for ProtobufRepresentableError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ProtobufRepresentableError);
}

void ProtobufRepresentable.init(optionalProtobuf:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[2];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  OUTLINED_FUNCTION_46();
  v2 = v1;
  v29 = v3;
  v26 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v1);
  v28 = (uint64_t)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = v6;
  OUTLINED_FUNCTION_14_5();
  v30 = v7;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = sub_1AF76A8AC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v25 - v12;
  v14 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v15 = MEMORY[0x1E0C80A78](v11);
  v17 = (char *)v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)v25 - v18;
  v20 = v2;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, v2, v9);
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, AssociatedTypeWitness) == 1)
  {
    v21 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v21(v20, v9);
    v21((uint64_t)v13, v9);
    v22 = 1;
    v23 = v29;
    v24 = v30;
LABEL_6:
    __swift_storeEnumTagSinglePayload(v23, v22, 1, v24);
    goto LABEL_7;
  }
  v25[1] = v2;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v19, v13, AssociatedTypeWitness);
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v19, AssociatedTypeWitness);
  v24 = v30;
  (*(void (**)(char *, uint64_t))(v27 + 16))(v17, v30);
  if (!v0)
  {
    OUTLINED_FUNCTION_5_5();
    OUTLINED_FUNCTION_4_5();
    v23 = v29;
    OUTLINED_FUNCTION_16_5(v29, v28, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 32));
    v22 = 0;
    goto LABEL_6;
  }
  OUTLINED_FUNCTION_5_5();
  OUTLINED_FUNCTION_4_5();
LABEL_7:
  OUTLINED_FUNCTION_2_2();
}

void ProtobufRepresentable<>.init(protobufBytes:compressionAlgorithm:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t AssociatedTypeWitness;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  void *v34;
  _QWORD v35[2];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42[6];

  OUTLINED_FUNCTION_46();
  v40 = v3;
  v41 = v1;
  v37 = v0;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v13 = v12;
  v15 = v14;
  v35[1] = v16;
  v42[5] = *(id *)MEMORY[0x1E0C80C00];
  v17 = sub_1AF76A270();
  MEMORY[0x1E0C80A78](v17);
  v38 = v5;
  OUTLINED_FUNCTION_13_5();
  v36 = v7;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v19 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  OUTLINED_FUNCTION_13_1();
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)v35 - v21;
  if ((v9 & 1) != 0)
  {
    v39 = v19;
    sub_1AF6A794C(v15, v13);
  }
  else
  {
    v23 = (void *)sub_1AF76A180();
    v42[0] = 0;
    v24 = objc_msgSend(v23, sel_decompressedDataUsingAlgorithm_error_, v11, v42);

    v25 = v42[0];
    if (!v24)
    {
      v34 = v25;
      sub_1AF76A114();

      swift_willThrow();
      v30 = v15;
      v31 = v13;
      goto LABEL_9;
    }
    v39 = v19;
    v26 = v24;
    sub_1AF76A1B0();

  }
  memset(v42, 0, 40);
  v27 = OUTLINED_FUNCTION_8_7();
  sub_1AF6A794C(v27, v28);
  sub_1AF76A264();
  OUTLINED_FUNCTION_8_7();
  v29 = v41;
  sub_1AF76A27C();
  if (v29)
  {
    OUTLINED_FUNCTION_10_2();
    v30 = OUTLINED_FUNCTION_8_7();
LABEL_9:
    sub_1AF697C78(v30, v31);
    goto LABEL_10;
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v39 + 16))(v2, v22, AssociatedTypeWitness);
  (*(void (**)(uint64_t, uint64_t))(v38 + 16))(v2, v36);
  v32 = OUTLINED_FUNCTION_8_7();
  sub_1AF697C78(v32, v33);
  OUTLINED_FUNCTION_10_2();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v22, AssociatedTypeWitness);
LABEL_10:
  OUTLINED_FUNCTION_2_2();
}

uint64_t sub_1AF6B0AD8(uint64_t a1)
{
  return sub_1AF6B0B2C(a1, (void (*)(_QWORD))MEMORY[0x1E0CAE1E8], MEMORY[0x1E0CAE1D8], &qword_1EEE4BF90);
}

uint64_t static ProtobufRepresentableEscapeHatchCoding.encoder.getter()
{
  return sub_1AF6B0B90(&qword_1EEE4B658);
}

uint64_t sub_1AF6B0B10(uint64_t a1)
{
  return sub_1AF6B0B2C(a1, (void (*)(_QWORD))MEMORY[0x1E0CAE0B8], MEMORY[0x1E0CAE0A8], &qword_1EEE4BF98);
}

uint64_t sub_1AF6B0B2C(uint64_t a1, void (*a2)(_QWORD), uint64_t (*a3)(void), uint64_t *a4)
{
  uint64_t result;

  a2(0);
  swift_allocObject();
  result = a3();
  *a4 = result;
  return result;
}

uint64_t static ProtobufRepresentableEscapeHatchCoding.decoder.getter()
{
  return sub_1AF6B0B90(&qword_1EEE4B660);
}

uint64_t sub_1AF6B0B90(_QWORD *a1)
{
  if (*a1 != -1)
    swift_once();
  return swift_retain();
}

void Array<A>.protobuf(useCase:)(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_11_5(a1, a2);
  sub_1AF76A630();
  OUTLINED_FUNCTION_2_7();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED01F870);
  OUTLINED_FUNCTION_12_5();
}

uint64_t sub_1AF6B0C2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;

  return OUTLINED_FUNCTION_3_6((void (*)(char *, char *))sub_1AF6B0CC0, (uint64_t)&v6, a3, a4, a5, a1, MEMORY[0x1E0DEDB38], (uint64_t)&v7);
}

uint64_t sub_1AF6B0C70(uint64_t a1, char a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t result;
  char v8;

  v8 = a2 & 1;
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(a4 + 16))(&v8, a3, a4);
  if (v5)
    *a5 = v5;
  return result;
}

uint64_t sub_1AF6B0CC0(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  return sub_1AF6B0C70(a1, *(_BYTE *)(v2 + 32), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

void sub_1AF6B0CE0(uint64_t a1)
{
  uint64_t *v1;

  Array<A>.protobuf(useCase:)(a1, *v1);
}

uint64_t sub_1AF6B0D04(uint64_t result)
{
  _QWORD *v1;
  uint64_t v2;

  if (!v2)
    *v1 = result;
  return result;
}

uint64_t Array<A>.init(protobuf:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[4];
  _QWORD v10[2];

  v10[1] = a1;
  v9[2] = a2;
  v9[3] = a3;
  OUTLINED_FUNCTION_14_5();
  swift_getAssociatedTypeWitness();
  v4 = OUTLINED_FUNCTION_15_4();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED01F870);
  v6 = MEMORY[0x1B5DFC634](MEMORY[0x1E0DEAF50], v4);
  v7 = sub_1AF6AFE70((void (*)(char *, char *))sub_1AF6B0EC0, (uint64_t)v9, v4, a2, v5, v6, MEMORY[0x1E0DEDB38], (uint64_t)v10);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1AF6B0DF0(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  _QWORD v14[2];

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v11 = (char *)v14 - v10;
  (*(void (**)(char *, uint64_t))(v12 + 16))((char *)v14 - v10, a1);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(a3 + 16))(v11, a2, a3);
  if (v4)
    *a4 = v4;
  return result;
}

uint64_t sub_1AF6B0EC0(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  return sub_1AF6B0DF0(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1AF6B0EDC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t result;

  result = Array<A>.init(protobuf:)(*a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a3 - 8));
  if (!v4)
    *a4 = result;
  return result;
}

void Set<>.protobuf(useCase:)(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_11_5(a1, a2);
  sub_1AF76A78C();
  OUTLINED_FUNCTION_2_7();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED01F870);
  OUTLINED_FUNCTION_12_5();
}

uint64_t sub_1AF6B0F7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;

  return OUTLINED_FUNCTION_3_6((void (*)(char *, char *))sub_1AF6B1010, (uint64_t)&v6, a3, a4, a5, a1, MEMORY[0x1E0DEDB38], (uint64_t)&v7);
}

uint64_t sub_1AF6B0FC0(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  uint64_t v6;
  uint64_t result;
  char v9;

  v9 = a2 & 1;
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(a5 + 16))(&v9, a3, a5);
  if (v6)
    *a6 = v6;
  return result;
}

uint64_t sub_1AF6B1010(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  return sub_1AF6B0FC0(a1, *(_BYTE *)(v2 + 40), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), a2);
}

void sub_1AF6B1034(uint64_t a1)
{
  uint64_t *v1;

  Set<>.protobuf(useCase:)(a1, *v1);
}

uint64_t sub_1AF6B1058(uint64_t result)
{
  _QWORD *v1;
  uint64_t v2;

  if (!v2)
    *v1 = result;
  return result;
}

uint64_t Set<>.init(protobuf:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _QWORD v11[5];
  uint64_t v12;
  uint64_t v13;

  v13 = a1;
  v11[2] = a2;
  v11[3] = a3;
  v11[4] = a4;
  OUTLINED_FUNCTION_14_5();
  swift_getAssociatedTypeWitness();
  v6 = OUTLINED_FUNCTION_15_4();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED01F870);
  v8 = MEMORY[0x1B5DFC634](MEMORY[0x1E0DEAF50], v6);
  v9 = sub_1AF6AFE70((void (*)(char *, char *))sub_1AF6B1258, (uint64_t)v11, v6, a2, v7, v8, MEMORY[0x1E0DEDB38], (uint64_t)&v12);
  result = swift_bridgeObjectRelease();
  if (!v4)
  {
    v13 = v9;
    sub_1AF76A630();
    OUTLINED_FUNCTION_12_5();
  }
  return result;
}

uint64_t sub_1AF6B1188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  _QWORD v15[2];

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v12 = (char *)v15 - v11;
  (*(void (**)(char *, uint64_t))(v13 + 16))((char *)v15 - v11, a1);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(a4 + 16))(v12, a2, a4);
  if (v5)
    *a5 = v5;
  return result;
}

uint64_t sub_1AF6B1258(uint64_t a1, _QWORD *a2)
{
  uint64_t *v2;

  return sub_1AF6B1188(a1, v2[2], v2[3], v2[4], a2);
}

uint64_t sub_1AF6B1278@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t result;

  result = Set<>.init(protobuf:)(*a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), *(_QWORD *)(a3 - 8));
  if (!v4)
    *a4 = result;
  return result;
}

uint64_t Dictionary<>.protobuf(useCase:)()
{
  OUTLINED_FUNCTION_13_5();
  swift_getAssociatedTypeWitness();
  return sub_1AF76A4EC();
}

uint64_t sub_1AF6B1338()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v4;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v4 = *(_BYTE *)(v0 + 32);
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 16))(&v4, v1);
}

uint64_t sub_1AF6B1370@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = Dictionary<>.protobuf(useCase:)();
  if (!v1)
    *a1 = result;
  return result;
}

uint64_t Dictionary<>.init(protobuf:)()
{
  uint64_t v0;

  OUTLINED_FUNCTION_13_5();
  swift_getAssociatedTypeWitness();
  v0 = sub_1AF76A4EC();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1AF6B1440(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v8 = (char *)&v11 - v7;
  (*(void (**)(char *, uint64_t))(v9 + 16))((char *)&v11 - v7, a1);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(a3 + 16))(v8, a2, a3);
}

uint64_t sub_1AF6B14F8(uint64_t a1)
{
  uint64_t v1;

  return sub_1AF6B1440(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

unint64_t sub_1AF6B1514()
{
  unint64_t result;

  result = qword_1EEE4BFA0[0];
  if (!qword_1EEE4BFA0[0])
  {
    result = MEMORY[0x1B5DFC634](&protocol conformance descriptor for ProtobufUseCase, &type metadata for ProtobufUseCase);
    atomic_store(result, qword_1EEE4BFA0);
  }
  return result;
}

uint64_t sub_1AF6B1550(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)a3 + 8);
  result = MEMORY[0x1B5DFC634](&protocol conformance descriptor for <A> [A], a2, &v5);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1AF6B1594(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)a3 + 8);
  result = MEMORY[0x1B5DFC634](&protocol conformance descriptor for <> Set<A>, a2, &v5);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1AF6B15D8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = Dictionary<>.init(protobuf:)();
  if (!v1)
    *a1 = result;
  return result;
}

uint64_t sub_1AF6B160C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)a3 + 8);
  result = MEMORY[0x1B5DFC634](&protocol conformance descriptor for <> [A : B], a2, &v5);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t storeEnumTagSinglePayload for ProtobufUseCase(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AF6B169C + 4 * byte_1AF779525[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AF6B16D0 + 4 * byte_1AF779520[v4]))();
}

uint64_t sub_1AF6B16D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AF6B16D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AF6B16E0);
  return result;
}

uint64_t sub_1AF6B16EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AF6B16F4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AF6B16F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AF6B1700(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ProtobufUseCase()
{
  return &type metadata for ProtobufUseCase;
}

uint64_t dispatch thunk of OnewayProtobufRepresentable.protobuf(useCase:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of ProtobufRepresentable.init(protobuf:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_1AF6B174C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *sub_1AF6B17C4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v8 + ((unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    v9 = *((unsigned __int8 *)a2 + v5);
    if (v9 >= 2)
    {
      if (v5 <= 3)
        v10 = v5;
      else
        v10 = 4;
      __asm { BR              X13 }
    }
    if (v9 == 1)
    {
      (*(void (**)(uint64_t *))(v4 + 16))(a1);
      *((_BYTE *)v3 + v5) = 1;
    }
    else
    {
      *a1 = *a2;
      *((_BYTE *)a1 + v5) = 0;
    }
  }
  return v3;
}

uint64_t sub_1AF6B18D8(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unsigned int v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  if (v3 <= 8)
    v3 = 8;
  v4 = *(unsigned __int8 *)(result + v3);
  if (v4 < 2)
  {
    if (v4 == 1)
      return (*(uint64_t (**)(void))(v2 + 8))();
  }
  else
  {
    if (v3 <= 3)
      v5 = v3;
    else
      v5 = 4;
    return ((uint64_t (*)(void))((char *)&loc_1AF6B1920 + 4 * byte_1AF77952F[v5]))();
  }
  return result;
}

_QWORD *sub_1AF6B1974(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  char v8;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 1)
  {
    (*(void (**)(_QWORD *))(v4 + 16))(a1);
    v8 = 1;
  }
  else
  {
    v8 = 0;
    *a1 = *a2;
  }
  *((_BYTE *)a1 + v5) = v8;
  return a1;
}

_QWORD *sub_1AF6B1A48(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  char v12;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 8uLL)
      v7 = 8;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *((unsigned __int8 *)a1 + v7);
    if (v8 >= 2)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 1)
      (*(void (**)(_QWORD *, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
    v10 = *((unsigned __int8 *)a2 + v7);
    if (v10 >= 2)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 16))(a1, a2, v5);
      v12 = 1;
    }
    else
    {
      v12 = 0;
      *a1 = *a2;
    }
    *((_BYTE *)a1 + v7) = v12;
  }
  return a1;
}

_QWORD *sub_1AF6B1BC8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  char v8;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 1)
  {
    (*(void (**)(_QWORD *))(v4 + 32))(a1);
    v8 = 1;
  }
  else
  {
    v8 = 0;
    *a1 = *a2;
  }
  *((_BYTE *)a1 + v5) = v8;
  return a1;
}

_QWORD *sub_1AF6B1C9C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  char v12;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 8uLL)
      v7 = 8;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *((unsigned __int8 *)a1 + v7);
    if (v8 >= 2)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 1)
      (*(void (**)(_QWORD *, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
    v10 = *((unsigned __int8 *)a2 + v7);
    if (v10 >= 2)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 32))(a1, a2, v5);
      v12 = 1;
    }
    else
    {
      v12 = 0;
      *a1 = *a2;
    }
    *((_BYTE *)a1 + v7) = v12;
  }
  return a1;
}

uint64_t sub_1AF6B1E1C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  int v6;
  unsigned int v8;
  int v9;
  unsigned int v10;

  v3 = 8;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) > 8uLL)
    v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_21;
  v4 = v3 + 1;
  v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    v8 = ((a2 + ~(-1 << v5) - 254) >> v5) + 1;
    if (HIWORD(v8))
    {
      v6 = *(_DWORD *)(a1 + v4);
      if (!v6)
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 > 0xFF)
    {
      v6 = *(unsigned __int16 *)(a1 + v4);
      if (!*(_WORD *)(a1 + v4))
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 < 2)
    {
LABEL_21:
      v10 = *(unsigned __int8 *)(a1 + v3);
      if (v10 >= 2)
        return (v10 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v6 = *(unsigned __int8 *)(a1 + v4);
  if (!*(_BYTE *)(a1 + v4))
    goto LABEL_21;
LABEL_14:
  v9 = (v6 - 1) << v5;
  if (v4 > 3)
    v9 = 0;
  if (!(_DWORD)v4)
    return (v9 + 255);
  if (v4 > 3)
    LODWORD(v4) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1AF6B1EE0 + 4 * byte_1AF779552[(v4 - 1)]))();
}

void sub_1AF6B1F2C(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  size_t v6;
  char v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  if (v5 <= 8)
    v5 = 8;
  v6 = v5 + 1;
  v7 = 8 * (v5 + 1);
  if (a3 < 0xFF)
  {
    v8 = 0u;
  }
  else if (v6 <= 3)
  {
    v10 = ((a3 + ~(-1 << v7) - 254) >> v7) + 1;
    if (HIWORD(v10))
    {
      v8 = 4u;
    }
    else if (v10 >= 0x100)
    {
      v8 = 2;
    }
    else
    {
      v8 = v10 > 1;
    }
  }
  else
  {
    v8 = 1u;
  }
  if (a2 <= 0xFE)
    __asm { BR              X11 }
  v9 = a2 - 255;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      v11 = v9 & ~(-1 << v7);
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v11;
        *((_BYTE *)a1 + 2) = BYTE2(v11);
      }
      else if ((_DWORD)v6 == 2)
      {
        *a1 = v11;
      }
      else
      {
        *(_BYTE *)a1 = v11;
      }
    }
  }
  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v9;
  }
  __asm { BR              X10 }
}

uint64_t sub_1AF6B20D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = 8;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64) > 8uLL)
    v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64);
  if (*(unsigned __int8 *)(a1 + v2) < 2u)
    return *(unsigned __int8 *)(a1 + v2);
  if (v2 <= 3)
    v3 = v2;
  else
    v3 = 4;
  return ((uint64_t (*)(void))((char *)&loc_1AF6B2118 + 4 * byte_1AF779560[v3]))();
}

void sub_1AF6B2160(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  size_t v4;
  unsigned int v5;
  unsigned int v6;
  int v7;

  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) <= 8uLL)
    v4 = 8;
  else
    v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (a2 > 1)
  {
    v5 = a2 - 2;
    if (v4 < 4)
    {
      v6 = v5 >> (8 * v4);
      v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if ((_DWORD)v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if ((_DWORD)v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

ValueMetadata *type metadata accessor for ProtobufRepresentableEscapeHatchCoding()
{
  return &type metadata for ProtobufRepresentableEscapeHatchCoding;
}

uint64_t OUTLINED_FUNCTION_2_7()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_3_6(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  return sub_1AF6AFE70(a1, a2, v9, v8, v10, a6, a7, a8);
}

uint64_t OUTLINED_FUNCTION_4_5()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_5_5()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, uint64_t))(v0 + 8))(*(_QWORD *)(v2 - 136), v1);
}

uint64_t OUTLINED_FUNCTION_7_7()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_8_7()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_9_6()
{
  unint64_t v0;
  uint64_t v1;

  return sub_1AF697C78(v1, v0);
}

uint64_t OUTLINED_FUNCTION_10_2()
{
  uint64_t v0;
  unint64_t v1;

  return sub_1AF697C78(v0, v1);
}

void OUTLINED_FUNCTION_11_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 40) = a2;
}

void OUTLINED_FUNCTION_12_5()
{
  JUMPOUT(0x1B5DFC634);
}

uint64_t OUTLINED_FUNCTION_13_5()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_14_5()
{
  return 255;
}

uint64_t OUTLINED_FUNCTION_15_4()
{
  return sub_1AF76A630();
}

uint64_t OUTLINED_FUNCTION_16_5@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

BOOL static XPCActivityResult.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void XPCActivityResult.hash(into:)()
{
  sub_1AF76AF24();
  OUTLINED_FUNCTION_19();
}

uint64_t static XPCActivity.register(_:criteria:onRun:)(uint64_t a1, uint64_t a2, void **a3, uint64_t a4, uint64_t a5)
{
  void *v9;
  _QWORD *v10;
  void *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v9 = *a3;
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a1;
  v10[3] = a2;
  v10[4] = a4;
  v10[5] = a5;
  v11 = OUTLINED_FUNCTION_22_4((uint64_t)sub_1AF684264, MEMORY[0x1E0C809B0], 1107296256, v14, v15);
  OUTLINED_FUNCTION_28_3();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  v12 = sub_1AF76A594();
  xpc_activity_register((const char *)(v12 + 32), v9, v11);
  OUTLINED_FUNCTION_25_0();
  _Block_release(v11);
  return swift_unknownObjectRelease();
}

xpc_activity_state_t sub_1AF6B243C(_xpc_activity_s *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  xpc_activity_state_t result;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;

  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4B3E0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = xpc_activity_get_state(a1);
  if (result == 2)
  {
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    xpc_activity_set_state(a1, 4);
    v14 = sub_1AF76A69C();
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 1, 1, v14);
    v15 = (_QWORD *)swift_allocObject();
    v15[2] = 0;
    v15[3] = 0;
    v15[4] = a4;
    v15[5] = a5;
    v15[6] = a1;
    v15[7] = a2;
    v15[8] = a3;
    swift_retain();
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_1AF6D5358((uint64_t)v12, (uint64_t)&unk_1EEE4C0A0, (uint64_t)v15);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_1AF6B2574()
{
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_23_4();
  return swift_deallocObject();
}

xpc_activity_state_t sub_1AF6B259C(_xpc_activity_s *a1)
{
  uint64_t *v1;

  return sub_1AF6B243C(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

void static XPCActivity.register(_:onCheckIn:onRun:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v12;
  _QWORD *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v12 = (void *)*MEMORY[0x1E0C80748];
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = a1;
  v13[3] = a2;
  v13[4] = a5;
  v13[5] = a6;
  v13[6] = a3;
  v13[7] = a4;
  v14 = OUTLINED_FUNCTION_22_4((uint64_t)sub_1AF684264, MEMORY[0x1E0C809B0], 1107296256, v16, v17);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_release();
  v15 = sub_1AF76A594();
  xpc_activity_register((const char *)(v15 + 32), v12, v14);
  OUTLINED_FUNCTION_25_0();
  _Block_release(v14);
}

xpc_activity_state_t sub_1AF6B26C8(_xpc_activity_s *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(xpc_object_t *))
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  xpc_activity_state_t result;
  uint64_t v16;
  _QWORD *v17;
  _xpc_activity_s *v18;
  xpc_object_t empty;
  uint64_t v20;
  xpc_object_t v21;

  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4B3E0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = xpc_activity_get_state(a1);
  if (result)
  {
    if (result == 2)
    {
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      xpc_activity_set_state(a1, 4);
      v16 = sub_1AF76A69C();
      __swift_storeEnumTagSinglePayload((uint64_t)v14, 1, 1, v16);
      v17 = (_QWORD *)swift_allocObject();
      v17[2] = 0;
      v17[3] = 0;
      v17[4] = a4;
      v17[5] = a5;
      v17[6] = a1;
      v17[7] = a2;
      v17[8] = a3;
      swift_retain();
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      sub_1AF6D5358((uint64_t)v14, (uint64_t)&unk_1EEE4C098, (uint64_t)v17);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      return swift_release();
    }
  }
  else
  {
    v18 = (_xpc_activity_s *)swift_unknownObjectRetain();
    empty = xpc_activity_copy_criteria(v18);
    if (!empty)
      empty = xpc_dictionary_create_empty();
    swift_unknownObjectRelease();
    v21 = empty;
    a6(&v21);
    xpc_activity_set_criteria(a1, v21);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1AF6B2860()
{
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_23_4();
  swift_release();
  return swift_deallocObject();
}

xpc_activity_state_t sub_1AF6B2890(_xpc_activity_s *a1)
{
  uint64_t v1;

  return sub_1AF6B26C8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(void (**)(xpc_object_t *))(v1 + 48));
}

uint64_t static XPCActivity.unregister(_:)()
{
  uint64_t v0;

  v0 = sub_1AF76A594();
  xpc_activity_unregister((const char *)(v0 + 32));
  return swift_release();
}

uint64_t sub_1AF6B28CC(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  _QWORD *v9;
  int *v11;

  v8[2] = a6;
  v8[4] = a8;
  v8[5] = a6;
  v8[3] = a7;
  v11 = (int *)((char *)a4 + *a4);
  v9 = (_QWORD *)swift_task_alloc();
  v8[6] = v9;
  *v9 = v8;
  v9[1] = sub_1AF6B2948;
  return ((uint64_t (*)(_QWORD *, _QWORD *))v11)(v8 + 7, v8 + 2);
}

uint64_t sub_1AF6B2948()
{
  OUTLINED_FUNCTION_16_6();
  return swift_task_switch();
}

uint64_t sub_1AF6B2990()
{
  uint64_t v0;
  xpc_activity_state_t v1;

  if (*(_BYTE *)(v0 + 56))
    v1 = 3;
  else
    v1 = 5;
  xpc_activity_set_state(*(xpc_activity_t *)(v0 + 40), v1);
  return OUTLINED_FUNCTION_12_6(*(uint64_t (**)(void))(v0 + 8));
}

BOOL XPCActivity.shouldDefer.getter()
{
  xpc_activity_t *v0;

  return xpc_activity_should_defer(*v0);
}

void XPCActivity.description.getter()
{
  sub_1AF76A960();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1AF76A5B8();
  OUTLINED_FUNCTION_18_5();
  OUTLINED_FUNCTION_17_4();
  OUTLINED_FUNCTION_20_3();
}

void XPCActivityCriteria.init()(xpc_object_t *a1@<X8>)
{
  *a1 = xpc_dictionary_create_empty();
  OUTLINED_FUNCTION_19();
}

void XPCActivityCriteria.interval.getter(int64_t *a1@<X8>)
{
  sub_1AF6B2CC4(a1);
}

uint64_t sub_1AF6B2A98(int64_t *a1)
{
  int64_t v2;

  v2 = *a1;
  return XPCActivityCriteria.interval.setter(&v2);
}

uint64_t XPCActivityCriteria.interval.setter(int64_t *a1)
{
  return sub_1AF6B2D54(a1);
}

uint64_t XPCActivityInterval.init(seconds:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

void XPCActivityCriteria.interval.modify()
{
  int64_t *v0;
  uint64_t v1;
  int64_t v2;

  OUTLINED_FUNCTION_13_6();
  OUTLINED_FUNCTION_25_1(*MEMORY[0x1E0C807A8]);
  v1 = OUTLINED_FUNCTION_7_8();
  v2 = OUTLINED_FUNCTION_10_3(v1);
  OUTLINED_FUNCTION_8_8();
  OUTLINED_FUNCTION_4();
  *v0 = v2;
  OUTLINED_FUNCTION_9();
}

BOOL XPCActivityCriteria.isRepeating.getter()
{
  return sub_1AF6B32F4();
}

BOOL sub_1AF6B2B40@<W0>(_BYTE *a1@<X8>)
{
  _BOOL8 result;

  result = XPCActivityCriteria.isRepeating.getter();
  *a1 = result;
  return result;
}

uint64_t XPCActivityCriteria.isRepeating.setter(char a1)
{
  return sub_1AF6B3390(a1);
}

void XPCActivityCriteria.isRepeating.modify()
{
  uint64_t v0;
  uint64_t v1;
  BOOL v2;

  OUTLINED_FUNCTION_13_6();
  OUTLINED_FUNCTION_15_5(*MEMORY[0x1E0C80898]);
  v1 = OUTLINED_FUNCTION_7_8();
  v2 = OUTLINED_FUNCTION_3_7(v1);
  OUTLINED_FUNCTION_8_8();
  OUTLINED_FUNCTION_4();
  *(_BYTE *)(v0 + 16) = v2;
  OUTLINED_FUNCTION_9();
}

void XPCActivityCriteria.delay.getter(int64_t *a1@<X8>)
{
  sub_1AF6B2CC4(a1);
}

_QWORD *sub_1AF6B2BE8@<X0>(_QWORD *(*a1)(uint64_t *__return_ptr)@<X3>, _QWORD *a2@<X8>)
{
  _QWORD *result;
  uint64_t v4;

  result = a1(&v4);
  *a2 = v4;
  return result;
}

uint64_t sub_1AF6B2C28(int64_t *a1)
{
  int64_t v2;

  v2 = *a1;
  return XPCActivityCriteria.delay.setter(&v2);
}

uint64_t XPCActivityCriteria.delay.setter(int64_t *a1)
{
  return sub_1AF6B2D54(a1);
}

void XPCActivityCriteria.delay.modify()
{
  int64_t *v0;
  uint64_t v1;
  int64_t v2;

  OUTLINED_FUNCTION_13_6();
  OUTLINED_FUNCTION_25_1(*MEMORY[0x1E0C80760]);
  v1 = OUTLINED_FUNCTION_7_8();
  v2 = OUTLINED_FUNCTION_10_3(v1);
  OUTLINED_FUNCTION_8_8();
  OUTLINED_FUNCTION_4();
  *v0 = v2;
  OUTLINED_FUNCTION_9();
}

void XPCActivityCriteria.gracePeriod.getter(int64_t *a1@<X8>)
{
  sub_1AF6B2CC4(a1);
}

void sub_1AF6B2CC4(int64_t *a1@<X8>)
{
  void **v1;
  void *v3;
  uint64_t v4;
  int64_t int64;

  v3 = *v1;
  sub_1AF76A5C4();
  v4 = sub_1AF76A594();
  int64 = xpc_dictionary_get_int64(v3, (const char *)(v4 + 32));
  OUTLINED_FUNCTION_18_5();
  OUTLINED_FUNCTION_8_8();
  *a1 = int64;
  OUTLINED_FUNCTION_9();
}

uint64_t sub_1AF6B2D14(int64_t *a1)
{
  int64_t v2;

  v2 = *a1;
  return XPCActivityCriteria.gracePeriod.setter(&v2);
}

uint64_t XPCActivityCriteria.gracePeriod.setter(int64_t *a1)
{
  return sub_1AF6B2D54(a1);
}

uint64_t sub_1AF6B2D54(int64_t *a1)
{
  void *v1;
  int64_t v2;
  uint64_t v3;

  v2 = *a1;
  sub_1AF76A5C4();
  v3 = OUTLINED_FUNCTION_30_0();
  OUTLINED_FUNCTION_18_5();
  xpc_dictionary_set_int64(v1, (const char *)(v3 + 32), v2);
  return OUTLINED_FUNCTION_0_10();
}

void XPCActivityCriteria.gracePeriod.modify()
{
  int64_t *v0;
  uint64_t v1;
  int64_t v2;

  OUTLINED_FUNCTION_13_6();
  OUTLINED_FUNCTION_25_1(*MEMORY[0x1E0C80790]);
  v1 = OUTLINED_FUNCTION_7_8();
  v2 = OUTLINED_FUNCTION_10_3(v1);
  OUTLINED_FUNCTION_8_8();
  OUTLINED_FUNCTION_4();
  *v0 = v2;
  OUTLINED_FUNCTION_9();
}

uint64_t sub_1AF6B2DE8(int64_t *a1)
{
  void *v1;
  int64_t v2;
  uint64_t v3;

  v1 = (void *)a1[1];
  v2 = *a1;
  OUTLINED_FUNCTION_32_1();
  v3 = OUTLINED_FUNCTION_24_2();
  OUTLINED_FUNCTION_4();
  xpc_dictionary_set_int64(v1, (const char *)(v3 + 32), v2);
  return OUTLINED_FUNCTION_0_10();
}

void XPCActivityCriteria.priority.getter(char *a1@<X8>)
{
  void **v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *v1;
  v4 = sub_1AF76A5C4();
  v6 = sub_1AF69B51C(v4, v5, v3);
  v8 = v7;
  OUTLINED_FUNCTION_23_1();
  if (v8)
  {
    sub_1AF6B2F80(v6, v8, a1);
  }
  else
  {
    *a1 = 2;
    OUTLINED_FUNCTION_9();
  }
}

void sub_1AF6B2E9C(_BYTE *a1@<X8>)
{
  char v2;

  XPCActivityCriteria.priority.getter(&v2);
  *a1 = v2;
}

uint64_t sub_1AF6B2EDC(unsigned __int8 *a1)
{
  unsigned __int8 v2;

  v2 = *a1;
  return XPCActivityCriteria.priority.setter(&v2);
}

uint64_t XPCActivityCriteria.priority.setter(unsigned __int8 *a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *a1;
  sub_1AF76A5C4();
  if (v1 == 2)
  {
    v2 = 0;
    v3 = 0;
  }
  else
  {
    v2 = OUTLINED_FUNCTION_34_0();
  }
  return sub_1AF69B570(v2, v3);
}

void sub_1AF6B2F80(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v6;
  char v8;
  char v9;
  uint64_t v10;
  char v12;

  if (sub_1AF76A5C4() == a1 && v6 == a2)
  {
    v9 = 0;
    goto LABEL_14;
  }
  v8 = OUTLINED_FUNCTION_4_6();
  OUTLINED_FUNCTION_23_1();
  v9 = 0;
  if ((v8 & 1) != 0)
  {
LABEL_15:
    OUTLINED_FUNCTION_4();
    goto LABEL_16;
  }
  v9 = 1;
  if (sub_1AF76A5C4() == a1 && v10 == a2)
  {
LABEL_14:
    OUTLINED_FUNCTION_4();
    goto LABEL_15;
  }
  v12 = OUTLINED_FUNCTION_4_6();
  OUTLINED_FUNCTION_4();
  OUTLINED_FUNCTION_23_1();
  if ((v12 & 1) != 0)
    v9 = 1;
  else
    v9 = 2;
LABEL_16:
  *a3 = v9;
  OUTLINED_FUNCTION_43();
}

void (*XPCActivityCriteria.priority.modify(void ***a1))(uint64_t a1)
{
  void **v1;
  char *v2;
  void *v3;
  void **v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  char v13;
  uint64_t v14;
  char v16;

  v2 = (char *)(a1 + 2);
  v3 = *v1;
  v4 = (void **)*MEMORY[0x1E0C80878];
  *a1 = v1;
  a1[1] = v4;
  v5 = OUTLINED_FUNCTION_32_1();
  v7 = sub_1AF69B51C(v5, v6, v3);
  v9 = v8;
  OUTLINED_FUNCTION_23_1();
  if (!v9)
  {
    v13 = 2;
    goto LABEL_18;
  }
  if (sub_1AF76A5C4() == v7 && v9 == v10)
  {
    v13 = 0;
    goto LABEL_16;
  }
  v12 = OUTLINED_FUNCTION_4_6();
  OUTLINED_FUNCTION_23_1();
  v13 = 0;
  if ((v12 & 1) != 0)
  {
LABEL_17:
    OUTLINED_FUNCTION_4();
    goto LABEL_18;
  }
  v13 = 1;
  if (sub_1AF76A5C4() == v7 && v9 == v14)
  {
LABEL_16:
    OUTLINED_FUNCTION_23_1();
    goto LABEL_17;
  }
  v16 = OUTLINED_FUNCTION_4_6();
  OUTLINED_FUNCTION_23_1();
  OUTLINED_FUNCTION_4();
  if ((v16 & 1) != 0)
    v13 = 1;
  else
    v13 = 2;
LABEL_18:
  *v2 = v13;
  return sub_1AF6B312C;
}

void sub_1AF6B312C(uint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(a1 + 16);
  sub_1AF76A5C4();
  if (v1 == 2)
  {
    v2 = 0;
    v3 = 0;
  }
  else
  {
    v2 = OUTLINED_FUNCTION_34_0();
  }
  sub_1AF69B570(v2, v3);
  OUTLINED_FUNCTION_43();
}

BOOL XPCActivityCriteria.allowBattery.getter()
{
  return sub_1AF6B32F4();
}

BOOL sub_1AF6B31AC@<W0>(_BYTE *a1@<X8>)
{
  _BOOL8 result;

  result = XPCActivityCriteria.allowBattery.getter();
  *a1 = result;
  return result;
}

uint64_t XPCActivityCriteria.allowBattery.setter(char a1)
{
  return sub_1AF6B3390(a1);
}

void XPCActivityCriteria.allowBattery.modify()
{
  uint64_t v0;
  uint64_t v1;
  BOOL v2;

  OUTLINED_FUNCTION_13_6();
  OUTLINED_FUNCTION_15_5(*MEMORY[0x1E0C80738]);
  v1 = OUTLINED_FUNCTION_7_8();
  v2 = OUTLINED_FUNCTION_3_7(v1);
  OUTLINED_FUNCTION_8_8();
  OUTLINED_FUNCTION_4();
  *(_BYTE *)(v0 + 16) = v2;
  OUTLINED_FUNCTION_9();
}

BOOL XPCActivityCriteria.requireScreenSleep.getter()
{
  return sub_1AF6B32F4();
}

BOOL sub_1AF6B3250@<W0>(_BYTE *a1@<X8>)
{
  _BOOL8 result;

  result = XPCActivityCriteria.requireScreenSleep.getter();
  *a1 = result;
  return result;
}

uint64_t XPCActivityCriteria.requireScreenSleep.setter(char a1)
{
  return sub_1AF6B3390(a1);
}

void XPCActivityCriteria.requireScreenSleep.modify()
{
  uint64_t v0;
  uint64_t v1;
  BOOL v2;

  OUTLINED_FUNCTION_13_6();
  OUTLINED_FUNCTION_15_5(*MEMORY[0x1E0C808D8]);
  v1 = OUTLINED_FUNCTION_7_8();
  v2 = OUTLINED_FUNCTION_3_7(v1);
  OUTLINED_FUNCTION_8_8();
  OUTLINED_FUNCTION_4();
  *(_BYTE *)(v0 + 16) = v2;
  OUTLINED_FUNCTION_9();
}

BOOL XPCActivityCriteria.preventDeviceSleep.getter()
{
  return sub_1AF6B32F4();
}

BOOL sub_1AF6B32F4()
{
  void **v0;
  void *v1;
  uint64_t v2;
  _BOOL8 v3;

  v1 = *v0;
  sub_1AF76A5C4();
  v2 = OUTLINED_FUNCTION_7_8();
  v3 = xpc_dictionary_get_BOOL(v1, (const char *)(v2 + 32));
  OUTLINED_FUNCTION_4();
  swift_release();
  return v3;
}

BOOL sub_1AF6B3348@<W0>(_BYTE *a1@<X8>)
{
  _BOOL8 result;

  result = XPCActivityCriteria.preventDeviceSleep.getter();
  *a1 = result;
  return result;
}

uint64_t XPCActivityCriteria.preventDeviceSleep.setter(char a1)
{
  return sub_1AF6B3390(a1);
}

uint64_t sub_1AF6B3390(char a1)
{
  void *v1;
  uint64_t v3;

  sub_1AF76A5C4();
  v3 = OUTLINED_FUNCTION_30_0();
  OUTLINED_FUNCTION_18_5();
  xpc_dictionary_set_BOOL(v1, (const char *)(v3 + 32), a1 & 1);
  return OUTLINED_FUNCTION_0_10();
}

void XPCActivityCriteria.preventDeviceSleep.modify()
{
  uint64_t v0;
  uint64_t v1;
  BOOL v2;

  OUTLINED_FUNCTION_13_6();
  OUTLINED_FUNCTION_15_5(*MEMORY[0x1E0C80870]);
  v1 = OUTLINED_FUNCTION_7_8();
  v2 = OUTLINED_FUNCTION_3_7(v1);
  OUTLINED_FUNCTION_8_8();
  OUTLINED_FUNCTION_4();
  *(_BYTE *)(v0 + 16) = v2;
  OUTLINED_FUNCTION_9();
}

uint64_t sub_1AF6B3424(uint64_t a1)
{
  void *v1;
  char v2;
  uint64_t v3;

  v1 = *(void **)a1;
  v2 = *(_BYTE *)(a1 + 16);
  OUTLINED_FUNCTION_32_1();
  v3 = OUTLINED_FUNCTION_24_2();
  OUTLINED_FUNCTION_4();
  xpc_dictionary_set_BOOL(v1, (const char *)(v3 + 32), v2);
  return OUTLINED_FUNCTION_0_10();
}

void XPCActivityCriteria.description.getter()
{
  uint64_t v0;
  uint64_t v1;

  sub_1AF76A960();
  swift_bridgeObjectRelease();
  v0 = OUTLINED_FUNCTION_28_3();
  v1 = MEMORY[0x1B5DFC970](v0);
  sub_1AF76A5C4();
  MEMORY[0x1B5DFC6E8](v1, -1, -1);
  swift_unknownObjectRelease();
  sub_1AF76A5B8();
  OUTLINED_FUNCTION_23_1();
  OUTLINED_FUNCTION_17_4();
  OUTLINED_FUNCTION_20_3();
}

uint64_t XPCActivityInterval.seconds.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

void sub_1AF6B3518()
{
  qword_1EEE4C030 = *MEMORY[0x1E0C807C8];
}

void static XPCActivityInterval.oneMinute.getter(_QWORD *a1@<X8>)
{
  sub_1AF6B36EC(&qword_1EEE4B668, &qword_1EEE4C030, a1);
}

void sub_1AF6B354C()
{
  qword_1EEE4C038 = *MEMORY[0x1E0C807E0];
}

void static XPCActivityInterval.fiveMinutes.getter(_QWORD *a1@<X8>)
{
  sub_1AF6B36EC(&qword_1EEE4B670, &qword_1EEE4C038, a1);
}

void sub_1AF6B3580()
{
  qword_1EEE4C040 = *MEMORY[0x1E0C807B0];
}

void static XPCActivityInterval.fifteenMinutes.getter(_QWORD *a1@<X8>)
{
  sub_1AF6B36EC(&qword_1EEE4B678, &qword_1EEE4C040, a1);
}

void sub_1AF6B35B4()
{
  qword_1EEE4C048 = *MEMORY[0x1E0C807D0];
}

void static XPCActivityInterval.thirtyMinutes.getter(_QWORD *a1@<X8>)
{
  sub_1AF6B36EC(&qword_1EEE4B680, &qword_1EEE4C048, a1);
}

void sub_1AF6B35E8()
{
  qword_1EEE4C050 = *MEMORY[0x1E0C807C0];
}

void static XPCActivityInterval.oneHour.getter(_QWORD *a1@<X8>)
{
  sub_1AF6B36EC(&qword_1EEE4B688, &qword_1EEE4C050, a1);
}

void sub_1AF6B361C()
{
  qword_1EEE4C058 = *MEMORY[0x1E0C807D8];
}

void static XPCActivityInterval.fourHours.getter(_QWORD *a1@<X8>)
{
  sub_1AF6B36EC(&qword_1EEE4B690, &qword_1EEE4C058, a1);
}

void sub_1AF6B3650()
{
  qword_1EEE4C060 = *MEMORY[0x1E0C807F0];
}

void static XPCActivityInterval.eightHours.getter(_QWORD *a1@<X8>)
{
  sub_1AF6B36EC(&qword_1EEE4B698, &qword_1EEE4C060, a1);
}

void sub_1AF6B3684()
{
  qword_1EEE4C068 = *MEMORY[0x1E0C807B8];
}

void static XPCActivityInterval.oneDay.getter(_QWORD *a1@<X8>)
{
  sub_1AF6B36EC(&qword_1EEE4B6A0, &qword_1EEE4C068, a1);
}

void sub_1AF6B36B8()
{
  qword_1EEE4C070 = *MEMORY[0x1E0C807E8];
}

void static XPCActivityInterval.sevenDays.getter(_QWORD *a1@<X8>)
{
  sub_1AF6B36EC(qword_1EEE4B6A8, &qword_1EEE4C070, a1);
}

void sub_1AF6B36EC(_QWORD *a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  if (*a1 != -1)
    swift_once();
  *a3 = *a2;
  OUTLINED_FUNCTION_19();
}

BOOL static XPCActivityInterval.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

void _s19VoiceShortcutClient17XPCActivityResultO9hashValueSivg_0()
{
  sub_1AF76AF18();
  OUTLINED_FUNCTION_33_1();
  sub_1AF76AF3C();
  OUTLINED_FUNCTION_26_1();
}

void sub_1AF6B3778()
{
  sub_1AF76AF18();
  OUTLINED_FUNCTION_33_1();
  sub_1AF76AF3C();
  OUTLINED_FUNCTION_26_1();
}

unint64_t sub_1AF6B37AC()
{
  unint64_t result;

  result = qword_1EEE4C078;
  if (!qword_1EEE4C078)
  {
    result = MEMORY[0x1B5DFC634](&protocol conformance descriptor for XPCActivityResult, &type metadata for XPCActivityResult);
    atomic_store(result, (unint64_t *)&qword_1EEE4C078);
  }
  return result;
}

unint64_t sub_1AF6B37EC()
{
  unint64_t result;

  result = qword_1EEE4C080;
  if (!qword_1EEE4C080)
  {
    result = MEMORY[0x1B5DFC634](&protocol conformance descriptor for XPCActivityPriority, &type metadata for XPCActivityPriority);
    atomic_store(result, (unint64_t *)&qword_1EEE4C080);
  }
  return result;
}

_QWORD *sub_1AF6B3828@<X0>(_QWORD *a1@<X8>)
{
  return sub_1AF6B2BE8((_QWORD *(*)(uint64_t *__return_ptr))XPCActivityCriteria.interval.getter, a1);
}

void sub_1AF6B384C(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_31_1(a1);
  XPCActivityCriteria.isRepeating.setter(v1);
  OUTLINED_FUNCTION_19();
}

_QWORD *sub_1AF6B3868@<X0>(_QWORD *a1@<X8>)
{
  return sub_1AF6B2BE8((_QWORD *(*)(uint64_t *__return_ptr))XPCActivityCriteria.delay.getter, a1);
}

_QWORD *sub_1AF6B3888@<X0>(_QWORD *a1@<X8>)
{
  return sub_1AF6B2BE8((_QWORD *(*)(uint64_t *__return_ptr))XPCActivityCriteria.gracePeriod.getter, a1);
}

void sub_1AF6B38B4(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_31_1(a1);
  XPCActivityCriteria.allowBattery.setter(v1);
  OUTLINED_FUNCTION_19();
}

void sub_1AF6B38D4(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_31_1(a1);
  XPCActivityCriteria.requireScreenSleep.setter(v1);
  OUTLINED_FUNCTION_19();
}

void sub_1AF6B38F4(unsigned __int8 *a1)
{
  char v1;

  v1 = OUTLINED_FUNCTION_31_1(a1);
  XPCActivityCriteria.preventDeviceSleep.setter(v1);
  OUTLINED_FUNCTION_19();
}

void type metadata accessor for XPCActivityResult()
{
  OUTLINED_FUNCTION_25();
}

uint64_t destroy for XPCActivity()
{
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s19VoiceShortcutClient11XPCActivityVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for XPCActivity(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for XPCActivity(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  swift_unknownObjectRelease();
  v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t storeEnumTagSinglePayload for XPCActivity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for XPCActivity()
{
  OUTLINED_FUNCTION_25();
}

void type metadata accessor for XPCActivityCriteria()
{
  OUTLINED_FUNCTION_25();
}

void type metadata accessor for XPCActivityInterval()
{
  OUTLINED_FUNCTION_25();
}

uint64_t _s19VoiceShortcutClient17XPCActivityResultOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AF6B3AE4 + 4 * byte_1AF779805[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AF6B3B18 + 4 * asc_1AF779800[v4]))();
}

uint64_t sub_1AF6B3B18(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AF6B3B20(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AF6B3B28);
  return result;
}

uint64_t sub_1AF6B3B34(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AF6B3B3CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AF6B3B40(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AF6B3B48(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for XPCActivityPriority()
{
  OUTLINED_FUNCTION_25();
}

uint64_t sub_1AF6B3B64()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_19_4();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_5_6(v1);
  return OUTLINED_FUNCTION_6_7(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t objectdestroy_22Tm()
{
  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_23_4();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1AF6B3BEC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_19_4();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_5_6(v1);
  return OUTLINED_FUNCTION_6_7(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1AF6B3C38()
{
  uint64_t v0;

  OUTLINED_FUNCTION_16_6();
  return OUTLINED_FUNCTION_12_6(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t OUTLINED_FUNCTION_0_10()
{
  return swift_release();
}

BOOL OUTLINED_FUNCTION_3_7(uint64_t a1)
{
  void *v1;

  return xpc_dictionary_get_BOOL(v1, (const char *)(a1 + 32));
}

uint64_t OUTLINED_FUNCTION_4_6()
{
  return sub_1AF76AD14();
}

uint64_t OUTLINED_FUNCTION_5_6(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t OUTLINED_FUNCTION_6_7(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_1AF6B28CC(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t OUTLINED_FUNCTION_7_8()
{
  return sub_1AF76A594();
}

uint64_t OUTLINED_FUNCTION_8_8()
{
  return swift_release();
}

int64_t OUTLINED_FUNCTION_10_3(uint64_t a1)
{
  void *v1;

  return xpc_dictionary_get_int64(v1, (const char *)(a1 + 32));
}

uint64_t OUTLINED_FUNCTION_12_6(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_15_5(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  *v1 = v2;
  v1[1] = a1;
  return sub_1AF76A5C4();
}

uint64_t OUTLINED_FUNCTION_16_6()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_17_4()
{
  return sub_1AF76A5B8();
}

uint64_t OUTLINED_FUNCTION_18_5()
{
  return swift_bridgeObjectRelease();
}

void *OUTLINED_FUNCTION_22_4@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  a4 = a1;
  a5 = v5;
  return _Block_copy(&a2);
}

uint64_t OUTLINED_FUNCTION_23_4()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_24_2()
{
  return sub_1AF76A594();
}

uint64_t OUTLINED_FUNCTION_25_1(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  *(_QWORD *)(v1 + 16) = a1;
  return sub_1AF76A5C4();
}

uint64_t OUTLINED_FUNCTION_28_3()
{
  return swift_unknownObjectRetain();
}

uint64_t OUTLINED_FUNCTION_30_0()
{
  return sub_1AF76A594();
}

uint64_t OUTLINED_FUNCTION_31_1(unsigned __int8 *a1)
{
  return *a1;
}

uint64_t OUTLINED_FUNCTION_32_1()
{
  return sub_1AF76A5C4();
}

uint64_t OUTLINED_FUNCTION_33_1()
{
  return sub_1AF76AF24();
}

uint64_t OUTLINED_FUNCTION_34_0()
{
  return sub_1AF76A5C4();
}

uint64_t sub_1AF6B3DFC(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  BOOL v6;
  char v7;

  v3 = a1 == 0x7254657461657263 && a2 == 0xED00007265676769;
  if (v3 || (sub_1AF76AD14() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x72546574656C6564 && a2 == 0xED00007265676769;
    if (v6 || (sub_1AF76AD14() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000019 && a2 == 0x80000001AF781A80 || (sub_1AF76AD14() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0xD000000000000015 && a2 == 0x80000001AF781AA0)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else
    {
      v7 = sub_1AF76AD14();
      swift_bridgeObjectRelease();
      if ((v7 & 1) != 0)
        return 3;
      else
        return 4;
    }
  }
}

uint64_t sub_1AF6B3FB8()
{
  return 4;
}

uint64_t sub_1AF6B3FC0(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1AF6B3FFC + 4 * byte_1AF7799F0[a1]))(0xD000000000000019, 0x80000001AF781A80);
}

uint64_t sub_1AF6B3FFC()
{
  return 0x7254657461657263;
}

uint64_t sub_1AF6B4048(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v7;

  v3 = a1 == 12383 && a2 == 0xE200000000000000;
  if (v3 || (sub_1AF76AD14() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 12639 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1AF76AD14();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1AF6B4104(char a1)
{
  if ((a1 & 1) != 0)
    return 12639;
  else
    return 12383;
}

uint64_t sub_1AF6B411C()
{
  unsigned __int8 *v0;

  return sub_1AF6B3FC0(*v0);
}

uint64_t sub_1AF6B4124@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AF6B3DFC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AF6B4148()
{
  return sub_1AF695D74();
}

uint64_t sub_1AF6B4164@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1AF6B3FB8();
  *a1 = result;
  return result;
}

uint64_t sub_1AF6B4188()
{
  sub_1AF6B47D4();
  return sub_1AF76AF90();
}

uint64_t sub_1AF6B41B0()
{
  sub_1AF6B47D4();
  return sub_1AF76AF9C();
}

uint64_t sub_1AF6B41DC()
{
  char *v0;

  return sub_1AF6B4104(*v0);
}

uint64_t sub_1AF6B41E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AF6B4048(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AF6B4208()
{
  sub_1AF6B48C4();
  return sub_1AF76AF90();
}

uint64_t sub_1AF6B4230()
{
  sub_1AF6B48C4();
  return sub_1AF76AF9C();
}

void sub_1AF6B4258()
{
  sub_1AF6B5FD0();
}

uint64_t sub_1AF6B4274()
{
  sub_1AF6B4888();
  return sub_1AF76AF90();
}

uint64_t sub_1AF6B429C()
{
  sub_1AF6B4888();
  return sub_1AF76AF9C();
}

uint64_t sub_1AF6B42C8()
{
  sub_1AF6B484C();
  return sub_1AF76AF90();
}

uint64_t sub_1AF6B42F0()
{
  sub_1AF6B484C();
  return sub_1AF76AF9C();
}

uint64_t sub_1AF6B4318()
{
  sub_1AF6B4810();
  return sub_1AF76AF90();
}

uint64_t sub_1AF6B4340()
{
  sub_1AF6B4810();
  return sub_1AF76AF9C();
}

void VoiceShortcutClientRequest.Automations.encode(to:)()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD v18[10];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  OUTLINED_FUNCTION_46();
  v1 = v0;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4C0B0);
  v18[9] = *(_QWORD *)(v20 - 8);
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_2_8();
  v18[8] = v3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4C0B8);
  v18[1] = *(_QWORD *)(v4 - 8);
  v18[2] = v4;
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_18_1();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4C0C0);
  v18[3] = *(_QWORD *)(v6 - 8);
  v18[4] = v6;
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_4_7();
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4C0C8);
  v18[7] = *(_QWORD *)(v19 - 8);
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_2_8();
  v18[6] = v9;
  type metadata accessor for TriggerType(0);
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_2_8();
  v18[5] = v11;
  OUTLINED_FUNCTION_16_3();
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4C0D0);
  v21 = *(_QWORD *)(v15 - 8);
  v22 = v15;
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v16);
  OUTLINED_FUNCTION_17_1();
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  sub_1AF6B47D4();
  sub_1AF76AF6C();
  sub_1AF6B7650(v23, (uint64_t)v14, type metadata accessor for VoiceShortcutClientRequest.Automations);
  v17 = (char *)sub_1AF6B4534 + 4 * byte_1AF7799F4[OUTLINED_FUNCTION_64_0()];
  __asm { BR              X10 }
}

void sub_1AF6B4534()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t);
  uint64_t v9;
  int v10;
  uint64_t v11;
  void (*v12)(uint64_t);

  v2 = v0 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BDB0) + 48);
  v3 = *(void **)v2;
  v4 = *(_QWORD *)(v2 + 8);
  *(_QWORD *)(v1 - 152) = *(_QWORD *)(v2 + 16);
  *(_DWORD *)(v1 - 120) = *(unsigned __int8 *)(v2 + 24);
  v5 = *(_QWORD *)(v1 - 200);
  sub_1AF6B74F0(v0, v5, type metadata accessor for TriggerType);
  *(_BYTE *)(v1 - 112) = 0;
  sub_1AF6B48C4();
  OUTLINED_FUNCTION_22_5();
  *(_BYTE *)(v1 - 112) = 0;
  sub_1AF697B8C(&qword_1EEE4C100, type metadata accessor for TriggerType, (uint64_t)&protocol conformance descriptor for TriggerType);
  v6 = *(_QWORD *)(v1 - 128);
  sub_1AF76AB64();
  if (v6)
  {
    sub_1AF6B4900(v3, v4, *(_QWORD *)(v1 - 152), *(_DWORD *)(v1 - 120));
    OUTLINED_FUNCTION_29_1();
    sub_1AF6A9084(v5, type metadata accessor for TriggerType);
    v7 = OUTLINED_FUNCTION_63_0();
    v8(v7);
  }
  else
  {
    *(_QWORD *)(v1 - 176) = v3;
    *(_QWORD *)(v1 - 168) = v4;
    *(_QWORD *)(v1 - 112) = v3;
    *(_QWORD *)(v1 - 104) = v4;
    v9 = *(_QWORD *)(v1 - 152);
    *(_QWORD *)(v1 - 96) = v9;
    v10 = *(_DWORD *)(v1 - 120);
    *(_BYTE *)(v1 - 88) = v10;
    *(_BYTE *)(v1 - 65) = 1;
    sub_1AF6B492C();
    sub_1AF76AB64();
    OUTLINED_FUNCTION_29_1();
    sub_1AF6A9084(v5, type metadata accessor for TriggerType);
    v11 = OUTLINED_FUNCTION_63_0();
    v12(v11);
    sub_1AF6B4900(*(void **)(v1 - 176), *(_QWORD *)(v1 - 168), v9, v10);
  }
  OUTLINED_FUNCTION_2_2();
}

uint64_t type metadata accessor for VoiceShortcutClientRequest.Automations(uint64_t a1)
{
  return sub_1AF6B75E4(a1, qword_1EEE4C258);
}

unint64_t sub_1AF6B47D4()
{
  unint64_t result;

  result = qword_1EEE4C0D8;
  if (!qword_1EEE4C0D8)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77AD90, &type metadata for VoiceShortcutClientRequest.Automations.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4C0D8);
  }
  return result;
}

unint64_t sub_1AF6B4810()
{
  unint64_t result;

  result = qword_1EEE4C0E0;
  if (!qword_1EEE4C0E0)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77AD40, &type metadata for VoiceShortcutClientRequest.Automations.FetchScheduledTriggerCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4C0E0);
  }
  return result;
}

unint64_t sub_1AF6B484C()
{
  unint64_t result;

  result = qword_1EEE4C0E8;
  if (!qword_1EEE4C0E8)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77ACF0, &type metadata for VoiceShortcutClientRequest.Automations.FetchAllScheduledTriggersCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4C0E8);
  }
  return result;
}

unint64_t sub_1AF6B4888()
{
  unint64_t result;

  result = qword_1EEE4C0F0;
  if (!qword_1EEE4C0F0)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77ACA0, &type metadata for VoiceShortcutClientRequest.Automations.DeleteTriggerCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4C0F0);
  }
  return result;
}

unint64_t sub_1AF6B48C4()
{
  unint64_t result;

  result = qword_1EEE4C0F8;
  if (!qword_1EEE4C0F8)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77AC50, &type metadata for VoiceShortcutClientRequest.Automations.CreateTriggerCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4C0F8);
  }
  return result;
}

uint64_t sub_1AF6B4900(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) == 0)

  return swift_bridgeObjectRelease();
}

unint64_t sub_1AF6B492C()
{
  unint64_t result;

  result = qword_1EEE4C108;
  if (!qword_1EEE4C108)
  {
    result = MEMORY[0x1B5DFC634](&protocol conformance descriptor for CodableTriggerAction, &type metadata for CodableTriggerAction);
    atomic_store(result, (unint64_t *)&qword_1EEE4C108);
  }
  return result;
}

void VoiceShortcutClientRequest.Automations.init(from:)()
{
  char *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t);
  uint64_t v44[6];
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  char *v57;

  OUTLINED_FUNCTION_46();
  v57 = v0;
  v3 = v2;
  v50 = v4;
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4C110);
  v47 = *(_QWORD *)(v49 - 8);
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_33_2(v6, v44[0]);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4C118);
  v44[4] = *(_QWORD *)(v45 - 8);
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_2_8();
  v51 = v8;
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4C120);
  v44[5] = *(_QWORD *)(v46 - 8);
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_34_1(v10, v44[0]);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4C128);
  v48 = *(_QWORD *)(v54 - 8);
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_2_8();
  v52 = v12;
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4C130);
  v53 = *(_QWORD *)(v55 - 8);
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_18_1();
  v14 = OUTLINED_FUNCTION_16_3();
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_45_0();
  v18 = v16 - v17;
  v20 = MEMORY[0x1E0C80A78](v19);
  v22 = (char *)v44 - v21;
  v23 = MEMORY[0x1E0C80A78](v20);
  v25 = (char *)v44 - v24;
  MEMORY[0x1E0C80A78](v23);
  v27 = (char *)v44 - v26;
  v28 = v3[3];
  v56 = v3;
  __swift_project_boxed_opaque_existential_1(v3, v28);
  sub_1AF6B47D4();
  v29 = v57;
  sub_1AF76AF54();
  if (!v29)
  {
    v44[1] = (uint64_t)v22;
    v44[2] = v18;
    v44[3] = (uint64_t)v25;
    v57 = v27;
    v30 = sub_1AF76AB04();
    v31 = *(_QWORD *)(v30 + 16);
    if (v31)
    {
      v44[0] = 0;
      v32 = *(unsigned __int8 *)(v30 + 32);
      sub_1AF6BB1C8(1, v31, v30, v30 + 32, 0, (2 * v31) | 1);
      v34 = v33;
      v36 = v35;
      swift_bridgeObjectRelease();
      v37 = v14;
      if (v34 == v36 >> 1)
        __asm { BR              X9 }
      v38 = v1;
    }
    else
    {
      v38 = v1;
      v37 = v14;
    }
    OUTLINED_FUNCTION_30_1();
    OUTLINED_FUNCTION_5();
    v40 = v39;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4B8C0);
    *v40 = v37;
    v41 = v55;
    sub_1AF76AAB0();
    OUTLINED_FUNCTION_10_4();
    v42 = OUTLINED_FUNCTION_60_0();
    v43(v42);
    swift_willThrow();
    OUTLINED_FUNCTION_7_2();
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v38, v41);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
  OUTLINED_FUNCTION_43_0();
  OUTLINED_FUNCTION_2_2();
}

uint64_t sub_1AF6B4F88(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x676E697865646E69 && a2 == 0xEF74736575716552)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1AF76AD14();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1AF6B5024()
{
  return 0x676E697865646E69;
}

void sub_1AF6B5048()
{
  VoiceShortcutClientRequest.Automations.init(from:)();
}

void sub_1AF6B505C()
{
  VoiceShortcutClientRequest.Automations.encode(to:)();
}

uint64_t sub_1AF6B5074@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AF6B4F88(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1AF6B509C()
{
  sub_1AF6B7558();
  return sub_1AF76AF90();
}

uint64_t sub_1AF6B50C4()
{
  sub_1AF6B7558();
  return sub_1AF76AF9C();
}

uint64_t sub_1AF6B50EC()
{
  sub_1AF6B7594();
  return sub_1AF76AF90();
}

uint64_t sub_1AF6B5114()
{
  sub_1AF6B7594();
  return sub_1AF76AF9C();
}

void VoiceShortcutClientRequest.ToolKit.encode(to:)()
{
  void **v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_46();
  v4 = v3;
  v11 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4C148) - 8);
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_17_1();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4C150);
  v10 = *(_QWORD *)(v6 - 8);
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_4_7();
  v8 = *v0;
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  sub_1AF6B7558();
  sub_1AF76AF6C();
  sub_1AF6B7594();
  v9 = v8;
  sub_1AF76AB28();
  type metadata accessor for ToolKitIndexingRequest(0);
  sub_1AF697B8C(&qword_1EEE4B398, type metadata accessor for ToolKitIndexingRequest, (uint64_t)&protocol conformance descriptor for ToolKitIndexingRequest);
  sub_1AF76AB64();
  OUTLINED_FUNCTION_9_7(v1, *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v2, v6);

  OUTLINED_FUNCTION_43_0();
  OUTLINED_FUNCTION_2_2();
}

void VoiceShortcutClientRequest.ToolKit.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  void (*v31)(uint64_t);
  uint64_t v32;
  _QWORD v33[2];
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD *v37;

  OUTLINED_FUNCTION_46();
  v37 = v10;
  v12 = v11;
  v35 = v13;
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4C168);
  v14 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  OUTLINED_FUNCTION_18_1();
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4C170);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v12, v12[3]);
  sub_1AF6B7558();
  v19 = v37;
  sub_1AF76AF54();
  if (v19)
    goto LABEL_6;
  v37 = v12;
  v33[1] = v14;
  v34 = v16;
  v20 = sub_1AF76AB04();
  v21 = *(_QWORD *)(v20 + 16);
  if (!v21
    || (sub_1AF6BB1C8(1, v21, v20, v20 + 32, 0, (2 * v21) | 1),
        v23 = v22,
        v25 = v24,
        OUTLINED_FUNCTION_55_0(),
        v23 != v25 >> 1))
  {
    v26 = v34;
    v27 = OUTLINED_FUNCTION_30_1();
    OUTLINED_FUNCTION_5();
    v29 = v28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4B8C0);
    *v29 = &type metadata for VoiceShortcutClientRequest.ToolKit;
    sub_1AF76AAB0();
    OUTLINED_FUNCTION_10_4();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v29, *MEMORY[0x1E0DEC450], v27);
    swift_willThrow();
    OUTLINED_FUNCTION_12_7();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v18, v15);
    v12 = v37;
LABEL_6:
    v32 = (uint64_t)v12;
    goto LABEL_7;
  }
  sub_1AF6B7594();
  sub_1AF76AAA4();
  type metadata accessor for ToolKitIndexingRequest(0);
  sub_1AF697B8C(&qword_1EEE4C178, type metadata accessor for ToolKitIndexingRequest, (uint64_t)&protocol conformance descriptor for ToolKitIndexingRequest);
  sub_1AF76AAF8();
  OUTLINED_FUNCTION_36_0();
  swift_unknownObjectRelease();
  v30 = OUTLINED_FUNCTION_57_0();
  v31(v30);
  *v35 = a10;
  v32 = (uint64_t)v37;
LABEL_7:
  __swift_destroy_boxed_opaque_existential_1(v32);
  OUTLINED_FUNCTION_2_2();
}

uint64_t sub_1AF6B5568(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v7;

  v3 = a1 == 0x6974616D6F747561 && a2 == 0xEB00000000736E6FLL;
  if (v3 || (sub_1AF76AD14() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74694B6C6F6F74 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1AF76AD14();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1AF6B565C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x74694B6C6F6F74;
  else
    return 0x6974616D6F747561;
}

void sub_1AF6B569C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  VoiceShortcutClientRequest.ToolKit.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_1AF6B56B0()
{
  VoiceShortcutClientRequest.ToolKit.encode(to:)();
}

uint64_t sub_1AF6B56C4()
{
  sub_1AF6B76F4();
  return sub_1AF76AF90();
}

uint64_t sub_1AF6B56EC()
{
  sub_1AF6B76F4();
  return sub_1AF76AF9C();
}

uint64_t sub_1AF6B5714()
{
  char *v0;

  return sub_1AF6B565C(*v0);
}

uint64_t sub_1AF6B571C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AF6B5568(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AF6B5740()
{
  sub_1AF6B7614();
  return sub_1AF76AF90();
}

uint64_t sub_1AF6B5768()
{
  sub_1AF6B7614();
  return sub_1AF76AF9C();
}

uint64_t sub_1AF6B5790()
{
  sub_1AF6B767C();
  return sub_1AF76AF90();
}

uint64_t sub_1AF6B57B8()
{
  sub_1AF6B767C();
  return sub_1AF76AF9C();
}

void VoiceShortcutClientRequest.encode(to:)()
{
  uint64_t v0;
  void **v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  OUTLINED_FUNCTION_46();
  v20 = v0;
  v5 = v4;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4C180);
  v17 = *(_QWORD *)(v6 - 8);
  v18 = v6;
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_33_2(v8, v14);
  v15 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4C188) - 8);
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_16_3();
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_46_0();
  type metadata accessor for VoiceShortcutClientRequest(0);
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_17_1();
  v19 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4C190) - 8);
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_4_7();
  __swift_project_boxed_opaque_existential_1(v5, v5[3]);
  sub_1AF6B7614();
  sub_1AF76AF6C();
  sub_1AF6B7650(v20, (uint64_t)v1, type metadata accessor for VoiceShortcutClientRequest);
  if (OUTLINED_FUNCTION_64_0() == 1)
  {
    v13 = *v1;
    OUTLINED_FUNCTION_65_0();
    OUTLINED_FUNCTION_41_0();
    sub_1AF6B76B8();
    sub_1AF76AB64();
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
    OUTLINED_FUNCTION_6_8(v19);

  }
  else
  {
    sub_1AF6B74F0((uint64_t)v1, v3, type metadata accessor for VoiceShortcutClientRequest.Automations);
    sub_1AF6B76F4();
    OUTLINED_FUNCTION_41_0();
    sub_1AF697B8C(&qword_1EEE4C1B8, type metadata accessor for VoiceShortcutClientRequest.Automations, (uint64_t)&protocol conformance descriptor for VoiceShortcutClientRequest.Automations);
    sub_1AF76AB64();
    OUTLINED_FUNCTION_8_9(v2, *(uint64_t (**)(uint64_t, uint64_t))(v15 + 8));
    sub_1AF6A9084(v3, type metadata accessor for VoiceShortcutClientRequest.Automations);
    OUTLINED_FUNCTION_6_8(v19);
  }
  OUTLINED_FUNCTION_43_0();
  OUTLINED_FUNCTION_2_2();
}

void VoiceShortcutClientRequest.init(from:)()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t, uint64_t);
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;

  OUTLINED_FUNCTION_46();
  v58 = v0;
  v3 = v2;
  v49 = v4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4C1C0);
  v52 = *(_QWORD *)(v5 - 8);
  v53 = v5;
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_2_8();
  v55 = v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4C1C8);
  v50 = *(_QWORD *)(v8 - 8);
  v51 = v8;
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_2_8();
  v54 = v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4C1D0);
  v56 = *(_QWORD *)(v11 - 8);
  v57 = v11;
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_17_1();
  v13 = type metadata accessor for VoiceShortcutClientRequest(0);
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_45_0();
  v17 = (_QWORD *)(v15 - v16);
  v19 = MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v44 - v20;
  MEMORY[0x1E0C80A78](v19);
  v23 = (char *)&v44 - v22;
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_1AF6B7614();
  v24 = v58;
  sub_1AF76AF54();
  if (v24)
    goto LABEL_8;
  v45 = v17;
  v46 = v23;
  v47 = v21;
  v48 = v13;
  v58 = v3;
  v25 = sub_1AF76AB04();
  v26 = *(_QWORD *)(v25 + 16);
  if (!v26 || (OUTLINED_FUNCTION_18_6(v25, v26), v28 = v27, v30 = v29, OUTLINED_FUNCTION_55_0(), v28 != v30 >> 1))
  {
    v31 = v56;
    v32 = v48;
    v33 = OUTLINED_FUNCTION_30_1();
    OUTLINED_FUNCTION_5();
    v35 = v34;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4B8C0);
    *v35 = v32;
    sub_1AF76AAB0();
    OUTLINED_FUNCTION_10_4();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v33 - 8) + 104))(v35, *MEMORY[0x1E0DEC450], v33);
    swift_willThrow();
    OUTLINED_FUNCTION_12_7();
    OUTLINED_FUNCTION_24_3(v1, *(uint64_t (**)(uint64_t, uint64_t))(v31 + 8));
    v3 = v58;
LABEL_8:
    v38 = (uint64_t)v3;
    goto LABEL_9;
  }
  if ((v1 & 1) != 0)
  {
    OUTLINED_FUNCTION_65_0();
    OUTLINED_FUNCTION_25_2();
    sub_1AF6B7730();
    OUTLINED_FUNCTION_23_5();
    v39 = OUTLINED_FUNCTION_52_0();
    OUTLINED_FUNCTION_9_7(v39, v40);
    OUTLINED_FUNCTION_12_7();
    OUTLINED_FUNCTION_21_3();
    v41 = v45;
    *v45 = v59;
    swift_storeEnumTagMultiPayload();
    v42 = (uint64_t)v41;
  }
  else
  {
    sub_1AF6B76F4();
    v36 = v54;
    OUTLINED_FUNCTION_25_2();
    OUTLINED_FUNCTION_16_3();
    sub_1AF697B8C(&qword_1EEE4C1E0, type metadata accessor for VoiceShortcutClientRequest.Automations, (uint64_t)&protocol conformance descriptor for VoiceShortcutClientRequest.Automations);
    v37 = (uint64_t)v47;
    OUTLINED_FUNCTION_23_5();
    OUTLINED_FUNCTION_9_7(v36, *(uint64_t (**)(uint64_t, uint64_t))(v50 + 8));
    OUTLINED_FUNCTION_12_7();
    OUTLINED_FUNCTION_21_3();
    OUTLINED_FUNCTION_11_3();
    v42 = v37;
  }
  v43 = (uint64_t)v46;
  sub_1AF6B74F0(v42, (uint64_t)v46, type metadata accessor for VoiceShortcutClientRequest);
  sub_1AF6B74F0(v43, v49, type metadata accessor for VoiceShortcutClientRequest);
  v38 = (uint64_t)v58;
LABEL_9:
  __swift_destroy_boxed_opaque_existential_1(v38);
  OUTLINED_FUNCTION_2_2();
}

uint64_t sub_1AF6B5E38(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v7;

  v3 = a1 == 0x73736563637573 && a2 == 0xE700000000000000;
  if (v3 || (sub_1AF76AD14() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F727265 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1AF76AD14();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1AF6B5F14()
{
  return 2;
}

void sub_1AF6B5F1C()
{
  OUTLINED_FUNCTION_28_4();
  sub_1AF76AF24();
  OUTLINED_FUNCTION_27_1();
  OUTLINED_FUNCTION_26_1();
}

uint64_t sub_1AF6B5F4C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x726F727265;
  else
    return 0x73736563637573;
}

uint64_t sub_1AF6B5F80(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    OUTLINED_FUNCTION_10();
    v4 = 0;
  }
  else
  {
    v3 = OUTLINED_FUNCTION_26_2();
    OUTLINED_FUNCTION_10();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

void sub_1AF6B5FD0()
{
  OUTLINED_FUNCTION_28_4();
  OUTLINED_FUNCTION_37_0();
  OUTLINED_FUNCTION_27_1();
  OUTLINED_FUNCTION_26_1();
}

uint64_t sub_1AF6B5FF4()
{
  return 12383;
}

uint64_t sub_1AF6B6000()
{
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_1AF6B601C()
{
  return 0;
}

void sub_1AF6B6028()
{
  VoiceShortcutClientRequest.init(from:)();
}

void sub_1AF6B603C()
{
  VoiceShortcutClientRequest.encode(to:)();
}

void sub_1AF6B6050()
{
  sub_1AF6B5F1C();
}

void sub_1AF6B6068()
{
  OUTLINED_FUNCTION_56();
  sub_1AF76AF24();
  OUTLINED_FUNCTION_27_1();
  OUTLINED_FUNCTION_26_1();
}

uint64_t sub_1AF6B6098()
{
  char *v0;

  return sub_1AF6B5F4C(*v0);
}

uint64_t sub_1AF6B60A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AF6B5E38(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AF6B60C4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1AF6B5F14();
  *a1 = result;
  return result;
}

uint64_t sub_1AF6B60E8()
{
  sub_1AF6B776C();
  return sub_1AF76AF90();
}

uint64_t sub_1AF6B6110()
{
  sub_1AF6B776C();
  return sub_1AF76AF9C();
}

void sub_1AF6B6138()
{
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_37_0();
  OUTLINED_FUNCTION_27_1();
  OUTLINED_FUNCTION_26_1();
}

uint64_t sub_1AF6B615C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AF6B5F80(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1AF6B6184()
{
  return sub_1AF695D74();
}

uint64_t sub_1AF6B619C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1AF695BB4();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1AF6B61C4()
{
  sub_1AF6B77A8();
  return sub_1AF76AF90();
}

uint64_t sub_1AF6B61EC()
{
  sub_1AF6B77A8();
  return sub_1AF76AF9C();
}

uint64_t sub_1AF6B6214@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1AF6B6000();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1AF6B623C()
{
  sub_1AF6B7820();
  return sub_1AF76AF90();
}

uint64_t sub_1AF6B6264()
{
  sub_1AF6B7820();
  return sub_1AF76AF9C();
}

void VoiceShortcutResponse.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_46();
  v5 = v4;
  v13 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4C1E8) - 8);
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_4_7();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4C1F0);
  v11 = *(_QWORD *)(v7 - 8);
  v12 = v7;
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_48();
  v14 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4C1F8) - 8);
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_47_0();
  v10 = *(_QWORD *)(v0 + 16);
  __swift_project_boxed_opaque_existential_1(v5, v5[3]);
  sub_1AF6B776C();
  sub_1AF76AF6C();
  if (v10)
  {
    sub_1AF6B77A8();
    OUTLINED_FUNCTION_42_0();
    sub_1AF6B77E4();
    sub_1AF76AB64();
    OUTLINED_FUNCTION_8_9(v2, *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8));
  }
  else
  {
    sub_1AF6B7820();
    OUTLINED_FUNCTION_42_0();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v3, v12);
  }
  OUTLINED_FUNCTION_9_7(v1, *(uint64_t (**)(uint64_t, uint64_t))(v14 + 8));
  OUTLINED_FUNCTION_43_0();
  OUTLINED_FUNCTION_2_2();
}

void VoiceShortcutResponse.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  _QWORD *v37;

  OUTLINED_FUNCTION_46();
  v4 = v3;
  v31 = v5;
  v30 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4C220) - 8);
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_34_1(v7, v28);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4C228);
  v8 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  OUTLINED_FUNCTION_47_0();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4C230);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_4_7();
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  sub_1AF6B776C();
  sub_1AF76AF54();
  if (v0)
    goto LABEL_9;
  v37 = v4;
  v11 = sub_1AF76AB04();
  v12 = *(_QWORD *)(v11 + 16);
  v13 = v9;
  if (!v12)
  {
    v18 = v2;
LABEL_8:
    v19 = OUTLINED_FUNCTION_30_1();
    OUTLINED_FUNCTION_5();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4B8C0);
    *v21 = &type metadata for VoiceShortcutResponse;
    sub_1AF76AAB0();
    OUTLINED_FUNCTION_10_4();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x1E0DEC450], v19);
    swift_willThrow();
    OUTLINED_FUNCTION_12_7();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v18, v13);
    v4 = v37;
LABEL_9:
    v22 = (uint64_t)v4;
    goto LABEL_10;
  }
  OUTLINED_FUNCTION_18_6(v11, v12);
  v15 = v14;
  v17 = v16;
  OUTLINED_FUNCTION_55_0();
  if (v15 != v17 >> 1)
  {
    v18 = v2;
    v13 = v9;
    goto LABEL_8;
  }
  if ((v4 & 1) != 0)
  {
    LOBYTE(v32) = 1;
    sub_1AF6B77A8();
    OUTLINED_FUNCTION_32_2();
    sub_1AF6B785C();
    OUTLINED_FUNCTION_23_5();
    OUTLINED_FUNCTION_20_4(v30);
    OUTLINED_FUNCTION_12_7();
    OUTLINED_FUNCTION_8_9(v2, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
    v23 = v32;
    v24 = v33;
    v25 = v34;
    v26 = v35;
    v27 = v36;
  }
  else
  {
    sub_1AF6B7820();
    OUTLINED_FUNCTION_32_2();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v1, v29);
    OUTLINED_FUNCTION_12_7();
    OUTLINED_FUNCTION_24_3(v2, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
    v24 = 0;
    v25 = 0;
    v26 = 0;
    v23 = 0uLL;
    v27 = 0uLL;
  }
  *(_OWORD *)v31 = v23;
  *(_QWORD *)(v31 + 16) = v24;
  *(_QWORD *)(v31 + 24) = v25;
  *(_QWORD *)(v31 + 32) = v26;
  *(_OWORD *)(v31 + 40) = v27;
  v22 = (uint64_t)v4;
LABEL_10:
  __swift_destroy_boxed_opaque_existential_1(v22);
  OUTLINED_FUNCTION_2_2();
}

void sub_1AF6B67DC()
{
  VoiceShortcutResponse.init(from:)();
}

void sub_1AF6B67F0()
{
  VoiceShortcutResponse.encode(to:)();
}

BOOL sub_1AF6B6804(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1AF6AF948(*a1, *a2);
}

uint64_t sub_1AF6B681C()
{
  return sub_1AF6AF97C();
}

uint64_t sub_1AF6B6830()
{
  return sub_1AF6AF958();
}

uint64_t sub_1AF6B6844()
{
  sub_1AF76AF18();
  sub_1AF6AF958();
  return sub_1AF76AF3C();
}

uint64_t sub_1AF6B688C()
{
  char *v0;

  return sub_1AF6B5F4C(*v0);
}

uint64_t sub_1AF6B68A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AF6B5E38(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AF6B68D0()
{
  return sub_1AF695D74();
}

uint64_t sub_1AF6B68F8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1AF6B5F14();
  *a1 = result;
  return result;
}

uint64_t sub_1AF6B6928(uint64_t a1)
{
  MEMORY[0x1B5DFC634](&unk_1AF77A8E0, a1);
  return sub_1AF76AF90();
}

uint64_t sub_1AF6B695C(uint64_t a1)
{
  MEMORY[0x1B5DFC634](&unk_1AF77A8E0, a1);
  return sub_1AF76AF9C();
}

uint64_t sub_1AF6B6990()
{
  return sub_1AF695BB4();
}

void sub_1AF6B699C()
{
  sub_1AF6B5FD0();
}

uint64_t sub_1AF6B69BC()
{
  return sub_1AF69C438();
}

void sub_1AF6B69CC(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  sub_1AF6B6A78(a1, a2, a3, (void (*)(_BYTE *, _QWORD, _QWORD, _QWORD))sub_1AF69C438);
}

uint64_t sub_1AF6B69D8()
{
  return sub_1AF6B5FF4();
}

uint64_t sub_1AF6B69EC(_QWORD *a1, uint64_t a2)
{
  return sub_1AF6B6AF0(a1, a2, (uint64_t (*)(_QWORD, _QWORD, _QWORD))sub_1AF695D74);
}

uint64_t sub_1AF6B69F8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, _BYTE *a3@<X8>)
{
  return sub_1AF6B6B24(a1, a2, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD))sub_1AF695BB4, a3);
}

uint64_t sub_1AF6B6A04(uint64_t a1)
{
  MEMORY[0x1B5DFC634](&unk_1AF77A980, a1);
  return sub_1AF76AF90();
}

uint64_t sub_1AF6B6A38(uint64_t a1)
{
  MEMORY[0x1B5DFC634](&unk_1AF77A980, a1);
  return sub_1AF76AF9C();
}

void sub_1AF6B6A6C(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  sub_1AF6B6A78(a1, a2, a3, (void (*)(_BYTE *, _QWORD, _QWORD, _QWORD))sub_1AF69C5DC);
}

void sub_1AF6B6A78(uint64_t a1, _QWORD *a2, uint64_t a3, void (*a4)(_BYTE *, _QWORD, _QWORD, _QWORD))
{
  _BYTE v6[72];

  OUTLINED_FUNCTION_56();
  a4(v6, a2[2], a2[3], a2[4]);
  OUTLINED_FUNCTION_27_1();
  OUTLINED_FUNCTION_26_1();
}

uint64_t sub_1AF6B6AB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AF6B5F80(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1AF6B6AE4(_QWORD *a1, uint64_t a2)
{
  return sub_1AF6B6AF0(a1, a2, (uint64_t (*)(_QWORD, _QWORD, _QWORD))sub_1AF6BB240);
}

uint64_t sub_1AF6B6AF0(_QWORD *a1, uint64_t a2, uint64_t (*a3)(_QWORD, _QWORD, _QWORD))
{
  return a3(a1[2], a1[3], a1[4]);
}

uint64_t sub_1AF6B6B18@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, _BYTE *a3@<X8>)
{
  return sub_1AF6B6B24(a1, a2, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD))sub_1AF6985C8, a3);
}

uint64_t sub_1AF6B6B24@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t (*a3)(uint64_t, _QWORD, _QWORD, _QWORD)@<X3>, _BYTE *a4@<X8>)
{
  uint64_t result;

  result = a3(a1, a2[2], a2[3], a2[4]);
  *a4 = result & 1;
  return result;
}

uint64_t sub_1AF6B6B5C(uint64_t a1)
{
  MEMORY[0x1B5DFC634](&unk_1AF77A930, a1);
  return sub_1AF76AF90();
}

uint64_t sub_1AF6B6B90(uint64_t a1)
{
  MEMORY[0x1B5DFC634](&unk_1AF77A930, a1);
  return sub_1AF76AF9C();
}

void VoiceShortcutResponseWithValue.encode(to:)()
{
  uint64_t v0;
  uint64_t *v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[3];
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  OUTLINED_FUNCTION_46();
  v53 = v0;
  v3 = v2;
  v5 = v4;
  v6 = v2[2];
  v7 = v2[3];
  v8 = v2[4];
  v9 = OUTLINED_FUNCTION_62_0();
  v13 = type metadata accessor for VoiceShortcutResponseWithValue.ErrorCodingKeys(v9, v10, v11, v12);
  v47 = MEMORY[0x1B5DFC634](&unk_1AF77A980, v13);
  v48 = v13;
  v52 = sub_1AF76AB70();
  v50 = *(_QWORD *)(v52 - 8);
  OUTLINED_FUNCTION_15_6();
  MEMORY[0x1E0C80A78](v14);
  v55 = (char *)v42 - v15;
  v16 = OUTLINED_FUNCTION_62_0();
  v20 = type metadata accessor for VoiceShortcutResponseWithValue.SuccessCodingKeys(v16, v17, v18, v19);
  v21 = MEMORY[0x1B5DFC634](&unk_1AF77A930, v20);
  v42[1] = v20;
  v42[0] = v21;
  v46 = sub_1AF76AB70();
  v44 = *(_QWORD *)(v46 - 8);
  OUTLINED_FUNCTION_15_6();
  MEMORY[0x1E0C80A78](v22);
  v42[2] = (char *)v42 - v23;
  v45 = *(_QWORD *)(v6 - 8);
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v24);
  OUTLINED_FUNCTION_2_8();
  v43 = v25;
  v26 = *(v3 - 1);
  MEMORY[0x1E0C80A78](v27);
  OUTLINED_FUNCTION_46_0();
  v49 = v6;
  v51 = v8;
  v28 = type metadata accessor for VoiceShortcutResponseWithValue.CodingKeys(255, v6, v7, v8);
  MEMORY[0x1B5DFC634](&unk_1AF77A8E0, v28);
  v56 = sub_1AF76AB70();
  v54 = *(_QWORD *)(v56 - 8);
  OUTLINED_FUNCTION_15_6();
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)v42 - v30;
  __swift_project_boxed_opaque_existential_1(v5, v5[3]);
  sub_1AF76AF6C();
  (*(void (**)(uint64_t *, uint64_t, _QWORD *))(v26 + 16))(v1, v53, v3);
  if (OUTLINED_FUNCTION_64_0() == 1)
  {
    v32 = v1[1];
    v53 = *v1;
    v34 = v1[2];
    v33 = v1[3];
    v35 = v1[4];
    v36 = v1[5];
    v37 = v1[6];
    LOBYTE(v57) = 1;
    v38 = v56;
    sub_1AF76AB28();
    v57 = v53;
    v58 = v32;
    v53 = v34;
    v59 = v34;
    v60 = v33;
    v61 = v35;
    v62 = v36;
    v63 = v37;
    sub_1AF6B77E4();
    v39 = v52;
    sub_1AF76AB64();
    (*(void (**)(char *, uint64_t))(v50 + 8))(v55, v39);
    (*(void (**)(char *, uint64_t))(v54 + 8))(v31, v38);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v40 = v45;
    v41 = v43;
    (*(void (**)(uint64_t, uint64_t *, uint64_t))(v45 + 32))(v43, v1, v49);
    LOBYTE(v57) = 0;
    sub_1AF76AB28();
    sub_1AF76AB64();
    OUTLINED_FUNCTION_20_4(v44);
    OUTLINED_FUNCTION_9_7(v41, *(uint64_t (**)(uint64_t, uint64_t))(v40 + 8));
    OUTLINED_FUNCTION_8_9((uint64_t)v31, *(uint64_t (**)(uint64_t, uint64_t))(v54 + 8));
  }
  OUTLINED_FUNCTION_43_0();
  OUTLINED_FUNCTION_2_2();
}

void VoiceShortcutResponseWithValue.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_46();
  type metadata accessor for VoiceShortcutResponseWithValue.ErrorCodingKeys(255, v0, v1, v2);
  OUTLINED_FUNCTION_53_0();
}

void sub_1AF6B6F80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *(_QWORD *)(v10 - 256) = v9;
  *(_QWORD *)(v10 - 264) = a1;
  v11 = sub_1AF76AB10();
  *(_QWORD *)(v10 - 328) = v11;
  *(_QWORD *)(v10 - 296) = *(_QWORD *)(v11 - 8);
  OUTLINED_FUNCTION_15_6();
  MEMORY[0x1E0C80A78](v12);
  *(_QWORD *)(v10 - 248) = (char *)&a9 - v13;
  v14 = OUTLINED_FUNCTION_44();
  type metadata accessor for VoiceShortcutResponseWithValue.SuccessCodingKeys(v14, v15, v16, v17);
  OUTLINED_FUNCTION_53_0();
}

void sub_1AF6B6FE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *(_QWORD *)(v10 - 280) = v9;
  *(_QWORD *)(v10 - 288) = a1;
  v11 = sub_1AF76AB10();
  *(_QWORD *)(v10 - 336) = v11;
  *(_QWORD *)(v10 - 304) = *(_QWORD *)(v11 - 8);
  OUTLINED_FUNCTION_15_6();
  MEMORY[0x1E0C80A78](v12);
  *(_QWORD *)(v10 - 272) = (char *)&a9 - v13;
  v14 = OUTLINED_FUNCTION_44();
  type metadata accessor for VoiceShortcutResponseWithValue.CodingKeys(v14, v15, v16, v17);
  OUTLINED_FUNCTION_53_0();
}

void sub_1AF6B7050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  *(_QWORD *)(v13 - 200) = a1;
  v14 = sub_1AF76AB10();
  *(_QWORD *)(v13 - 216) = v14;
  *(_QWORD *)(v13 - 232) = *(_QWORD *)(v14 - 8);
  OUTLINED_FUNCTION_15_6();
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&a9 - v16;
  *(_QWORD *)(v13 - 320) = v11;
  *(_QWORD *)(v13 - 312) = v10;
  v18 = type metadata accessor for VoiceShortcutResponseWithValue(0, v11, v10, v9);
  *(_QWORD *)(v13 - 224) = v18;
  *(_QWORD *)(v13 - 344) = *(_QWORD *)(v18 - 8);
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_45_0();
  v22 = v20 - v21;
  v24 = MEMORY[0x1E0C80A78](v23);
  v26 = (char *)&a9 - v25;
  MEMORY[0x1E0C80A78](v24);
  v28 = (char *)&a9 - v27;
  __swift_project_boxed_opaque_existential_1(v12, v12[3]);
  *(_QWORD *)(v13 - 208) = v17;
  v29 = *(_QWORD *)(v13 - 72);
  sub_1AF76AF54();
  if (!v29)
  {
    *(_QWORD *)(v13 - 200) = v26;
    *(_QWORD *)(v13 - 360) = v22;
    *(_QWORD *)(v13 - 352) = v28;
    *(_QWORD *)(v13 - 72) = v12;
    *(_QWORD *)(v13 - 192) = sub_1AF76AB04();
    v30 = sub_1AF76A630();
    MEMORY[0x1B5DFC634](MEMORY[0x1E0DEAF38], v30);
    *(_QWORD *)(v13 - 128) = sub_1AF76A8F4();
    *(_QWORD *)(v13 - 120) = v31;
    *(_QWORD *)(v13 - 112) = v32;
    *(_QWORD *)(v13 - 104) = v33;
    sub_1AF76A8E8();
    OUTLINED_FUNCTION_53_0();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  OUTLINED_FUNCTION_2_2();
}

void sub_1AF6B74BC()
{
  VoiceShortcutResponseWithValue.init(from:)();
}

void sub_1AF6B74DC()
{
  VoiceShortcutResponseWithValue.encode(to:)();
}

void sub_1AF6B74F0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_54_0(a1, a2, a3);
  OUTLINED_FUNCTION_58_0(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  OUTLINED_FUNCTION_19();
}

unint64_t sub_1AF6B751C()
{
  unint64_t result;

  result = qword_1EEE4C140;
  if (!qword_1EEE4C140)
  {
    result = MEMORY[0x1B5DFC634](&protocol conformance descriptor for CodableTriggerAction, &type metadata for CodableTriggerAction);
    atomic_store(result, (unint64_t *)&qword_1EEE4C140);
  }
  return result;
}

unint64_t sub_1AF6B7558()
{
  unint64_t result;

  result = qword_1EEE4C158;
  if (!qword_1EEE4C158)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77AC00, &type metadata for VoiceShortcutClientRequest.ToolKit.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4C158);
  }
  return result;
}

unint64_t sub_1AF6B7594()
{
  unint64_t result;

  result = qword_1EEE4C160;
  if (!qword_1EEE4C160)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77ABB0, &type metadata for VoiceShortcutClientRequest.ToolKit.IndexingRequestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4C160);
  }
  return result;
}

uint64_t type metadata accessor for VoiceShortcutClientRequest(uint64_t a1)
{
  return sub_1AF6B75E4(a1, (uint64_t *)&unk_1EEE4C248);
}

uint64_t sub_1AF6B75E4(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_1AF6B7614()
{
  unint64_t result;

  result = qword_1EEE4C198;
  if (!qword_1EEE4C198)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77AB60, &type metadata for VoiceShortcutClientRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4C198);
  }
  return result;
}

void sub_1AF6B7650(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_54_0(a1, a2, a3);
  OUTLINED_FUNCTION_58_0(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  OUTLINED_FUNCTION_19();
}

unint64_t sub_1AF6B767C()
{
  unint64_t result;

  result = qword_1EEE4C1A0;
  if (!qword_1EEE4C1A0)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77AB10, &type metadata for VoiceShortcutClientRequest.ToolKitCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4C1A0);
  }
  return result;
}

unint64_t sub_1AF6B76B8()
{
  unint64_t result;

  result = qword_1EEE4C1A8;
  if (!qword_1EEE4C1A8)
  {
    result = MEMORY[0x1B5DFC634](&protocol conformance descriptor for VoiceShortcutClientRequest.ToolKit, &type metadata for VoiceShortcutClientRequest.ToolKit);
    atomic_store(result, (unint64_t *)&qword_1EEE4C1A8);
  }
  return result;
}

unint64_t sub_1AF6B76F4()
{
  unint64_t result;

  result = qword_1EEE4C1B0;
  if (!qword_1EEE4C1B0)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77AAC0, &type metadata for VoiceShortcutClientRequest.AutomationsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4C1B0);
  }
  return result;
}

unint64_t sub_1AF6B7730()
{
  unint64_t result;

  result = qword_1EEE4C1D8;
  if (!qword_1EEE4C1D8)
  {
    result = MEMORY[0x1B5DFC634](&protocol conformance descriptor for VoiceShortcutClientRequest.ToolKit, &type metadata for VoiceShortcutClientRequest.ToolKit);
    atomic_store(result, (unint64_t *)&qword_1EEE4C1D8);
  }
  return result;
}

unint64_t sub_1AF6B776C()
{
  unint64_t result;

  result = qword_1EEE4C200;
  if (!qword_1EEE4C200)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77AA70, &type metadata for VoiceShortcutResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4C200);
  }
  return result;
}

unint64_t sub_1AF6B77A8()
{
  unint64_t result;

  result = qword_1EEE4C208;
  if (!qword_1EEE4C208)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77AA20, &type metadata for VoiceShortcutResponse.ErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4C208);
  }
  return result;
}

unint64_t sub_1AF6B77E4()
{
  unint64_t result;

  result = qword_1EEE4C210;
  if (!qword_1EEE4C210)
  {
    result = MEMORY[0x1B5DFC634](&protocol conformance descriptor for CodableError, &type metadata for CodableError);
    atomic_store(result, (unint64_t *)&qword_1EEE4C210);
  }
  return result;
}

unint64_t sub_1AF6B7820()
{
  unint64_t result;

  result = qword_1EEE4C218;
  if (!qword_1EEE4C218)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77A9D0, &type metadata for VoiceShortcutResponse.SuccessCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4C218);
  }
  return result;
}

unint64_t sub_1AF6B785C()
{
  unint64_t result;

  result = qword_1EEE4C238;
  if (!qword_1EEE4C238)
  {
    result = MEMORY[0x1B5DFC634](&protocol conformance descriptor for CodableError, &type metadata for CodableError);
    atomic_store(result, (unint64_t *)&qword_1EEE4C238);
  }
  return result;
}

uint64_t type metadata accessor for VoiceShortcutResponseWithValue.ErrorCodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for VoiceShortcutResponseWithValue.ErrorCodingKeys);
}

uint64_t type metadata accessor for VoiceShortcutResponseWithValue.SuccessCodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for VoiceShortcutResponseWithValue.SuccessCodingKeys);
}

uint64_t type metadata accessor for VoiceShortcutResponseWithValue.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for VoiceShortcutResponseWithValue.CodingKeys);
}

uint64_t type metadata accessor for VoiceShortcutResponseWithValue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for VoiceShortcutResponseWithValue);
}

char *initializeBufferWithCopyOfBuffer for VoiceShortcutClientRequest(char *a1, char **a2, uint64_t a3)
{
  int v5;
  char *v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  int v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  char v32;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = *a2;
      *(_QWORD *)a1 = *a2;
      v7 = v6;
LABEL_18:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    v9 = type metadata accessor for VoiceShortcutClientRequest.Automations(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      v19 = a2[1];
      *(_QWORD *)a1 = *a2;
      *((_QWORD *)a1 + 1) = v19;
      swift_bridgeObjectRetain();
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
        goto LABEL_18;
      }
      type metadata accessor for TriggerType(0);
      v11 = swift_getEnumCaseMultiPayload();
      *a1 = *(_BYTE *)a2;
      if (v11 == 1)
      {
        v12 = a2[1];
        *((_QWORD *)a1 + 1) = v12;
        a1[16] = *((_BYTE *)a2 + 16);
        v13 = *(int *)(type metadata accessor for LocationTrigger(0) + 28);
        v14 = &a1[v13];
        v15 = (char *)a2 + v13;
        v16 = type metadata accessor for LocationTrigger.TimeRange(0);
        v17 = v12;
        if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16))
        {
          v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4C240);
          memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
        }
        else
        {
          v24 = sub_1AF76A090();
          v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
          v25(v14, v15, v24);
          v25(&v14[*(int *)(v16 + 20)], &v15[*(int *)(v16 + 20)], v24);
          __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v16);
        }
      }
      else
      {
        v20 = *(int *)(type metadata accessor for TimeOfDayTrigger(0) + 20);
        v21 = &a1[v20];
        v22 = (uint64_t)a2 + v20;
        v23 = sub_1AF76A090();
        (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
      }
      swift_storeEnumTagMultiPayload();
      v26 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BDB0) + 48);
      v27 = &a1[v26];
      v28 = (uint64_t)a2 + v26;
      v29 = *(void **)v28;
      v30 = *(_QWORD *)(v28 + 8);
      v31 = *(_QWORD *)(v28 + 16);
      v32 = *(_BYTE *)(v28 + 24);
      sub_1AF6B7B80(*(void **)v28, v30, v31, v32);
      *(_QWORD *)v27 = v29;
      *((_QWORD *)v27 + 1) = v30;
      *((_QWORD *)v27 + 2) = v31;
      v27[24] = v32;
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_18;
  }
  v8 = *a2;
  *(_QWORD *)a1 = *a2;
  a1 = &v8[(v5 + 16) & ~(unint64_t)v5];
  swift_retain();
  return a1;
}

uint64_t sub_1AF6B7B80(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  id v4;

  if ((a4 & 1) == 0)
    v4 = a1;
  return swift_bridgeObjectRetain();
}

void destroy for VoiceShortcutClientRequest(id *a1)
{
  int EnumCaseMultiPayload;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  char *v7;
  uint64_t v8;
  char *v9;

  if (swift_getEnumCaseMultiPayload() == 1)
  {

  }
  else
  {
    type metadata accessor for VoiceShortcutClientRequest.Automations(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      swift_bridgeObjectRelease();
    }
    else if (!EnumCaseMultiPayload)
    {
      type metadata accessor for TriggerType(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {

        v3 = (uint64_t)a1 + *(int *)(type metadata accessor for LocationTrigger(0) + 28);
        v4 = type metadata accessor for LocationTrigger.TimeRange(0);
        if (!__swift_getEnumTagSinglePayload(v3, 1, v4))
        {
          v5 = sub_1AF76A090();
          v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
          v6(v3, v5);
          v6(v3 + *(int *)(v4 + 20), v5);
        }
      }
      else
      {
        v7 = (char *)a1 + *(int *)(type metadata accessor for TimeOfDayTrigger(0) + 20);
        v8 = sub_1AF76A090();
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
      }
      v9 = (char *)a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BDB0) + 48);
      sub_1AF6B4900(*(void **)v9, *((_QWORD *)v9 + 1), *((_QWORD *)v9 + 2), v9[24]);
    }
  }
}

_QWORD *initializeWithCopy for VoiceShortcutClientRequest(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  id v5;
  uint64_t v6;
  int EnumCaseMultiPayload;
  int v8;
  void *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  char *v24;
  char *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  char v29;

  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v6 = type metadata accessor for VoiceShortcutClientRequest.Automations(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      v16 = a2[1];
      *a1 = *a2;
      a1[1] = v16;
      swift_bridgeObjectRetain();
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        goto LABEL_16;
      }
      type metadata accessor for TriggerType(0);
      v8 = swift_getEnumCaseMultiPayload();
      *(_BYTE *)a1 = *(_BYTE *)a2;
      if (v8 == 1)
      {
        v9 = (void *)a2[1];
        a1[1] = v9;
        *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
        v10 = *(int *)(type metadata accessor for LocationTrigger(0) + 28);
        v11 = (char *)a1 + v10;
        v12 = (char *)a2 + v10;
        v13 = type metadata accessor for LocationTrigger.TimeRange(0);
        v14 = v9;
        if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
        {
          v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4C240);
          memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
        }
        else
        {
          v21 = sub_1AF76A090();
          v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
          v22(v11, v12, v21);
          v22(&v11[*(int *)(v13 + 20)], &v12[*(int *)(v13 + 20)], v21);
          __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
        }
      }
      else
      {
        v17 = *(int *)(type metadata accessor for TimeOfDayTrigger(0) + 20);
        v18 = (char *)a1 + v17;
        v19 = (char *)a2 + v17;
        v20 = sub_1AF76A090();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
      }
      swift_storeEnumTagMultiPayload();
      v23 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BDB0) + 48);
      v24 = (char *)a1 + v23;
      v25 = (char *)a2 + v23;
      v26 = *(void **)v25;
      v27 = *((_QWORD *)v25 + 1);
      v28 = *((_QWORD *)v25 + 2);
      v29 = v25[24];
      sub_1AF6B7B80(*(void **)v25, v27, v28, v29);
      *(_QWORD *)v24 = v26;
      *((_QWORD *)v24 + 1) = v27;
      *((_QWORD *)v24 + 2) = v28;
      v24[24] = v29;
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_16;
  }
  v4 = (void *)*a2;
  *a1 = *a2;
  v5 = v4;
LABEL_16:
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *assignWithCopy for VoiceShortcutClientRequest(_QWORD *a1, uint64_t a2)
{
  void *v4;
  id v5;
  uint64_t v6;
  int EnumCaseMultiPayload;
  int v8;
  void *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  char v28;

  if (a1 != (_QWORD *)a2)
  {
    sub_1AF6A9084((uint64_t)a1, type metadata accessor for VoiceShortcutClientRequest);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v4 = *(void **)a2;
      *a1 = *(_QWORD *)a2;
      v5 = v4;
LABEL_17:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    v6 = type metadata accessor for VoiceShortcutClientRequest.Automations(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      *a1 = *(_QWORD *)a2;
      a1[1] = *(_QWORD *)(a2 + 8);
      swift_bridgeObjectRetain();
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        goto LABEL_17;
      }
      type metadata accessor for TriggerType(0);
      v8 = swift_getEnumCaseMultiPayload();
      *(_BYTE *)a1 = *(_BYTE *)a2;
      if (v8 == 1)
      {
        v9 = *(void **)(a2 + 8);
        a1[1] = v9;
        *((_BYTE *)a1 + 16) = *(_BYTE *)(a2 + 16);
        v10 = *(int *)(type metadata accessor for LocationTrigger(0) + 28);
        v11 = (char *)a1 + v10;
        v12 = (char *)(a2 + v10);
        v13 = type metadata accessor for LocationTrigger.TimeRange(0);
        v14 = v9;
        if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
        {
          v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4C240);
          memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
        }
        else
        {
          v20 = sub_1AF76A090();
          v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
          v21(v11, v12, v20);
          v21(&v11[*(int *)(v13 + 20)], &v12[*(int *)(v13 + 20)], v20);
          __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
        }
      }
      else
      {
        v16 = *(int *)(type metadata accessor for TimeOfDayTrigger(0) + 20);
        v17 = (char *)a1 + v16;
        v18 = a2 + v16;
        v19 = sub_1AF76A090();
        (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
      }
      swift_storeEnumTagMultiPayload();
      v22 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BDB0) + 48);
      v23 = (char *)a1 + v22;
      v24 = a2 + v22;
      v25 = *(void **)v24;
      v26 = *(_QWORD *)(v24 + 8);
      v27 = *(_QWORD *)(v24 + 16);
      v28 = *(_BYTE *)(v24 + 24);
      sub_1AF6B7B80(*(void **)v24, v26, v27, v28);
      *(_QWORD *)v23 = v25;
      *((_QWORD *)v23 + 1) = v26;
      *((_QWORD *)v23 + 2) = v27;
      v23[24] = v28;
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_17;
  }
  return a1;
}

_BYTE *initializeWithTake for VoiceShortcutClientRequest(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  _OWORD *v20;
  _OWORD *v21;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = type metadata accessor for VoiceShortcutClientRequest.Automations(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    else
    {
      type metadata accessor for TriggerType(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *a1 = *a2;
      if (EnumCaseMultiPayload == 1)
      {
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        a1[16] = a2[16];
        v8 = *(int *)(type metadata accessor for LocationTrigger(0) + 28);
        v9 = &a1[v8];
        v10 = &a2[v8];
        v11 = type metadata accessor for LocationTrigger.TimeRange(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
        {
          v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4C240);
          memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        }
        else
        {
          v17 = sub_1AF76A090();
          v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32);
          v18(v9, v10, v17);
          v18(&v9[*(int *)(v11 + 20)], &v10[*(int *)(v11 + 20)], v17);
          __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
        }
      }
      else
      {
        v13 = *(int *)(type metadata accessor for TimeOfDayTrigger(0) + 20);
        v14 = &a1[v13];
        v15 = &a2[v13];
        v16 = sub_1AF76A090();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
      }
      swift_storeEnumTagMultiPayload();
      v19 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BDB0) + 48);
      v20 = &a1[v19];
      v21 = &a2[v19];
      *v20 = *v21;
      *(_OWORD *)((char *)v20 + 9) = *(_OWORD *)((char *)v21 + 9);
      swift_storeEnumTagMultiPayload();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_BYTE *assignWithTake for VoiceShortcutClientRequest(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  _OWORD *v20;
  _OWORD *v21;

  if (a1 != a2)
  {
    sub_1AF6A9084((uint64_t)a1, type metadata accessor for VoiceShortcutClientRequest);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = type metadata accessor for VoiceShortcutClientRequest.Automations(0);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      }
      else
      {
        type metadata accessor for TriggerType(0);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        *a1 = *a2;
        if (EnumCaseMultiPayload == 1)
        {
          *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
          a1[16] = a2[16];
          v8 = *(int *)(type metadata accessor for LocationTrigger(0) + 28);
          v9 = &a1[v8];
          v10 = &a2[v8];
          v11 = type metadata accessor for LocationTrigger.TimeRange(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
          {
            v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4C240);
            memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
          }
          else
          {
            v17 = sub_1AF76A090();
            v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32);
            v18(v9, v10, v17);
            v18(&v9[*(int *)(v11 + 20)], &v10[*(int *)(v11 + 20)], v17);
            __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
          }
        }
        else
        {
          v13 = *(int *)(type metadata accessor for TimeOfDayTrigger(0) + 20);
          v14 = &a1[v13];
          v15 = &a2[v13];
          v16 = sub_1AF76A090();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
        }
        swift_storeEnumTagMultiPayload();
        v19 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BDB0) + 48);
        v20 = &a1[v19];
        v21 = &a2[v19];
        *v20 = *v21;
        *(_OWORD *)((char *)v20 + 9) = *(_OWORD *)((char *)v21 + 9);
        swift_storeEnumTagMultiPayload();
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1AF6B86C0()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1AF6B86D0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for VoiceShortcutClientRequest.Automations(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for VoiceShortcutClientRequest.Automations(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  int v8;
  void *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  char *v25;
  char *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v16 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      v17 = a2[1];
      *a1 = *a2;
      a1[1] = v17;
      swift_bridgeObjectRetain();
LABEL_15:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      type metadata accessor for TriggerType(0);
      v8 = swift_getEnumCaseMultiPayload();
      *(_BYTE *)a1 = *(_BYTE *)a2;
      if (v8 == 1)
      {
        v9 = (void *)a2[1];
        a1[1] = v9;
        *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
        v10 = *(int *)(type metadata accessor for LocationTrigger(0) + 28);
        v11 = (char *)a1 + v10;
        v12 = (char *)a2 + v10;
        v13 = type metadata accessor for LocationTrigger.TimeRange(0);
        v14 = v9;
        if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
        {
          v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4C240);
          memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
        }
        else
        {
          v22 = sub_1AF76A090();
          v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
          v23(v11, v12, v22);
          v23(&v11[*(int *)(v13 + 20)], &v12[*(int *)(v13 + 20)], v22);
          __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
        }
      }
      else
      {
        v18 = *(int *)(type metadata accessor for TimeOfDayTrigger(0) + 20);
        v19 = (char *)a1 + v18;
        v20 = (char *)a2 + v18;
        v21 = sub_1AF76A090();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
      }
      swift_storeEnumTagMultiPayload();
      v24 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BDB0) + 48);
      v25 = (char *)a1 + v24;
      v26 = (char *)a2 + v24;
      v27 = *(void **)v26;
      v28 = *((_QWORD *)v26 + 1);
      v29 = *((_QWORD *)v26 + 2);
      v30 = v26[24];
      sub_1AF6B7B80(*(void **)v26, v28, v29, v30);
      *(_QWORD *)v25 = v27;
      *((_QWORD *)v25 + 1) = v28;
      *((_QWORD *)v25 + 2) = v29;
      v25[24] = v30;
      goto LABEL_15;
    }
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t destroy for VoiceShortcutClientRequest.Automations(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 2 || (_DWORD)result == 1)
    return swift_bridgeObjectRelease();
  if (!(_DWORD)result)
  {
    type metadata accessor for TriggerType(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {

      v3 = a1 + *(int *)(type metadata accessor for LocationTrigger(0) + 28);
      v4 = type metadata accessor for LocationTrigger.TimeRange(0);
      if (!__swift_getEnumTagSinglePayload(v3, 1, v4))
      {
        v5 = sub_1AF76A090();
        v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
        v6(v3, v5);
        v6(v3 + *(int *)(v4 + 20), v5);
      }
    }
    else
    {
      v7 = a1 + *(int *)(type metadata accessor for TimeOfDayTrigger(0) + 20);
      v8 = sub_1AF76A090();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
    }
    v9 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BDB0) + 48);
    return sub_1AF6B4900(*(void **)v9, *(_QWORD *)(v9 + 8), *(_QWORD *)(v9 + 16), *(_BYTE *)(v9 + 24));
  }
  return result;
}

_QWORD *initializeWithCopy for VoiceShortcutClientRequest.Automations(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  int v7;
  void *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  char *v23;
  char *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  char v28;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
  {
    v15 = a2[1];
    *a1 = *a2;
    a1[1] = v15;
    swift_bridgeObjectRetain();
LABEL_13:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  if (!EnumCaseMultiPayload)
  {
    type metadata accessor for TriggerType(0);
    v7 = swift_getEnumCaseMultiPayload();
    *(_BYTE *)a1 = *(_BYTE *)a2;
    if (v7 == 1)
    {
      v8 = (void *)a2[1];
      a1[1] = v8;
      *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
      v9 = *(int *)(type metadata accessor for LocationTrigger(0) + 28);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = type metadata accessor for LocationTrigger.TimeRange(0);
      v13 = v8;
      if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12))
      {
        v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4C240);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        v20 = sub_1AF76A090();
        v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
        v21(v10, v11, v20);
        v21(&v10[*(int *)(v12 + 20)], &v11[*(int *)(v12 + 20)], v20);
        __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
      }
    }
    else
    {
      v16 = *(int *)(type metadata accessor for TimeOfDayTrigger(0) + 20);
      v17 = (char *)a1 + v16;
      v18 = (char *)a2 + v16;
      v19 = sub_1AF76A090();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    }
    swift_storeEnumTagMultiPayload();
    v22 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BDB0) + 48);
    v23 = (char *)a1 + v22;
    v24 = (char *)a2 + v22;
    v25 = *(void **)v24;
    v26 = *((_QWORD *)v24 + 1);
    v27 = *((_QWORD *)v24 + 2);
    v28 = v24[24];
    sub_1AF6B7B80(*(void **)v24, v26, v27, v28);
    *(_QWORD *)v23 = v25;
    *((_QWORD *)v23 + 1) = v26;
    *((_QWORD *)v23 + 2) = v27;
    v23[24] = v28;
    goto LABEL_13;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_QWORD *assignWithCopy for VoiceShortcutClientRequest.Automations(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  int v7;
  void *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  char *v22;
  char *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  char v27;

  if (a1 != a2)
  {
    sub_1AF6A9084((uint64_t)a1, type metadata accessor for VoiceShortcutClientRequest.Automations);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
LABEL_14:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      type metadata accessor for TriggerType(0);
      v7 = swift_getEnumCaseMultiPayload();
      *(_BYTE *)a1 = *(_BYTE *)a2;
      if (v7 == 1)
      {
        v8 = (void *)a2[1];
        a1[1] = v8;
        *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
        v9 = *(int *)(type metadata accessor for LocationTrigger(0) + 28);
        v10 = (char *)a1 + v9;
        v11 = (char *)a2 + v9;
        v12 = type metadata accessor for LocationTrigger.TimeRange(0);
        v13 = v8;
        if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12))
        {
          v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4C240);
          memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
        }
        else
        {
          v19 = sub_1AF76A090();
          v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
          v20(v10, v11, v19);
          v20(&v10[*(int *)(v12 + 20)], &v11[*(int *)(v12 + 20)], v19);
          __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
        }
      }
      else
      {
        v15 = *(int *)(type metadata accessor for TimeOfDayTrigger(0) + 20);
        v16 = (char *)a1 + v15;
        v17 = (char *)a2 + v15;
        v18 = sub_1AF76A090();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
      }
      swift_storeEnumTagMultiPayload();
      v21 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BDB0) + 48);
      v22 = (char *)a1 + v21;
      v23 = (char *)a2 + v21;
      v24 = *(void **)v23;
      v25 = *((_QWORD *)v23 + 1);
      v26 = *((_QWORD *)v23 + 2);
      v27 = v23[24];
      sub_1AF6B7B80(*(void **)v23, v25, v26, v27);
      *(_QWORD *)v22 = v24;
      *((_QWORD *)v22 + 1) = v25;
      *((_QWORD *)v22 + 2) = v26;
      v22[24] = v27;
      goto LABEL_14;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_BYTE *initializeWithTake for VoiceShortcutClientRequest.Automations(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    type metadata accessor for TriggerType(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
      a1[16] = a2[16];
      v7 = *(int *)(type metadata accessor for LocationTrigger(0) + 28);
      v8 = &a1[v7];
      v9 = &a2[v7];
      v10 = type metadata accessor for LocationTrigger.TimeRange(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
      {
        v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4C240);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      else
      {
        v16 = sub_1AF76A090();
        v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32);
        v17(v8, v9, v16);
        v17(&v8[*(int *)(v10 + 20)], &v9[*(int *)(v10 + 20)], v16);
        __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
      }
    }
    else
    {
      v12 = *(int *)(type metadata accessor for TimeOfDayTrigger(0) + 20);
      v13 = &a1[v12];
      v14 = &a2[v12];
      v15 = sub_1AF76A090();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
    }
    swift_storeEnumTagMultiPayload();
    v18 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BDB0) + 48);
    v19 = &a1[v18];
    v20 = &a2[v18];
    *v19 = *v20;
    *(_OWORD *)((char *)v19 + 9) = *(_OWORD *)((char *)v20 + 9);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_BYTE *assignWithTake for VoiceShortcutClientRequest.Automations(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;

  if (a1 != a2)
  {
    sub_1AF6A9084((uint64_t)a1, type metadata accessor for VoiceShortcutClientRequest.Automations);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      type metadata accessor for TriggerType(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *a1 = *a2;
      if (EnumCaseMultiPayload == 1)
      {
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        a1[16] = a2[16];
        v7 = *(int *)(type metadata accessor for LocationTrigger(0) + 28);
        v8 = &a1[v7];
        v9 = &a2[v7];
        v10 = type metadata accessor for LocationTrigger.TimeRange(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
        {
          v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4C240);
          memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
        }
        else
        {
          v16 = sub_1AF76A090();
          v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32);
          v17(v8, v9, v16);
          v17(&v8[*(int *)(v10 + 20)], &v9[*(int *)(v10 + 20)], v16);
          __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
        }
      }
      else
      {
        v12 = *(int *)(type metadata accessor for TimeOfDayTrigger(0) + 20);
        v13 = &a1[v12];
        v14 = &a2[v12];
        v15 = sub_1AF76A090();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
      }
      swift_storeEnumTagMultiPayload();
      v18 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4BDB0) + 48);
      v19 = &a1[v18];
      v20 = &a2[v18];
      *v19 = *v20;
      *(_OWORD *)((char *)v19 + 9) = *(_OWORD *)((char *)v20 + 9);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1AF6B935C()
{
  uint64_t result;
  unint64_t v1;
  char v2;
  char *v3;
  void *v4;
  void *v5;

  result = type metadata accessor for TriggerType(319);
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v3 = &v2;
    v4 = &unk_1AF779C20;
    v5 = &unk_1AF779C20;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void **initializeBufferWithCopyOfBuffer for VoiceShortcutClientRequest.ToolKit(void **a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  *a1 = *a2;
  v4 = v3;
  return a1;
}

void **assignWithCopy for VoiceShortcutClientRequest.ToolKit(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *a2;
  v4 = *a1;
  *a1 = *a2;
  v5 = v3;

  return a1;
}

void **assignWithTake for VoiceShortcutClientRequest.ToolKit(void **a1, void **a2)
{
  void *v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for VoiceShortcutClientRequest.ToolKit(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 8))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for VoiceShortcutClientRequest.ToolKit(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 8) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for VoiceShortcutClientRequest.ToolKit()
{
  return &type metadata for VoiceShortcutClientRequest.ToolKit;
}

unint64_t destroy for VoiceShortcutResponse(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)(a1 + 16);
  if (result >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for VoiceShortcutResponse(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;

  v3 = *(_QWORD *)(a2 + 16);
  if (v3 < 0xFFFFFFFF)
  {
    v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v4 = *(_QWORD *)(a2 + 24);
    v5 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 16) = v3;
    *(_QWORD *)(a1 + 24) = v4;
    v6 = *(_QWORD *)(a2 + 40);
    v7 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 32) = v5;
    *(_QWORD *)(a1 + 40) = v6;
    *(_QWORD *)(a1 + 48) = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

_QWORD *assignWithCopy for VoiceShortcutResponse(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v4 = a2[2];
  if (a1[2] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      a1[4] = a2[4];
      a1[5] = a2[5];
      a1[6] = a2[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    v5 = *(_OWORD *)a2;
    v6 = *((_OWORD *)a2 + 1);
    v7 = *((_OWORD *)a2 + 2);
    a1[6] = a2[6];
    *((_OWORD *)a1 + 1) = v6;
    *((_OWORD *)a1 + 2) = v7;
    *(_OWORD *)a1 = v5;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for VoiceShortcutResponse(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  if (*(_QWORD *)(a1 + 16) < 0xFFFFFFFFuLL)
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 16);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    return a1;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for VoiceShortcutResponse(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 56))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for VoiceShortcutResponse(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 48) = 0;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 56) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

uint64_t sub_1AF6B9878(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

double sub_1AF6B9890(uint64_t a1, int a2)
{
  double result;

  if (a2 < 0)
  {
    result = 0.0;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(_QWORD *)(a1 + 16) = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for VoiceShortcutResponse()
{
  return &type metadata for VoiceShortcutResponse;
}

uint64_t sub_1AF6B98D0()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1AF6B98D8()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *sub_1AF6B9948(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 0x38uLL)
    v5 = 56;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v8 + ((unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    v9 = *((unsigned __int8 *)a2 + v5);
    if (v9 >= 2)
      v9 = *(_DWORD *)a2 + 2;
    if (v9 == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v10 = a2[3];
      a1[2] = a2[2];
      a1[3] = v10;
      v11 = a2[5];
      a1[4] = a2[4];
      a1[5] = v11;
      a1[6] = a2[6];
      *((_BYTE *)a1 + v5) = 1;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      (*(void (**)(uint64_t *))(v4 + 16))(a1);
      *((_BYTE *)v3 + v5) = 0;
    }
  }
  return v3;
}

uint64_t sub_1AF6B9A34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unsigned int v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  if (v3 <= 0x38)
    v3 = 56;
  v4 = *(unsigned __int8 *)(a1 + v3);
  if (v4 >= 2)
  {
    if (v3 <= 3)
      v5 = v3;
    else
      v5 = 4;
    __asm { BR              X14 }
  }
  if (v4 != 1)
    return (*(uint64_t (**)(uint64_t))(v2 + 8))(a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AF6B9B08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 0x38uLL)
    v5 = 56;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *(unsigned __int8 *)(a2 + v5);
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v8 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v8;
    v9 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = v9;
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10 = 1;
  }
  else
  {
    (*(void (**)(uint64_t))(v4 + 16))(a1);
    v10 = 0;
  }
  *(_BYTE *)(a1 + v5) = v10;
  return a1;
}

_QWORD *sub_1AF6B9C10(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 0x38uLL)
      v7 = 56;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *((unsigned __int8 *)a1 + v7);
    if (v8 >= 2)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
    }
    v10 = *((unsigned __int8 *)a2 + v7);
    if (v10 >= 2)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      a1[4] = a2[4];
      a1[5] = a2[5];
      a1[6] = a2[6];
      *((_BYTE *)a1 + v7) = 1;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 16))(a1, a2, v5);
      *((_BYTE *)a1 + v7) = 0;
    }
  }
  return a1;
}

uint64_t sub_1AF6B9DF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  __int128 v8;
  char v9;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 0x38uLL)
    v5 = 56;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *(unsigned __int8 *)(a2 + v5);
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 1)
  {
    v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    v9 = 1;
  }
  else
  {
    (*(void (**)(uint64_t))(v4 + 32))(a1);
    v9 = 0;
  }
  *(_BYTE *)(a1 + v5) = v9;
  return a1;
}

uint64_t sub_1AF6B9ED4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  __int128 v12;
  char v13;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 0x38uLL)
      v7 = 56;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *(unsigned __int8 *)(a1 + v7);
    if (v8 >= 2)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      (*(void (**)(uint64_t, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
    }
    v10 = *(unsigned __int8 *)(a2 + v7);
    if (v10 >= 2)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
    {
      v12 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v12;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      v13 = 1;
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(a1, a2, v5);
      v13 = 0;
    }
    *(_BYTE *)(a1 + v7) = v13;
  }
  return a1;
}

uint64_t sub_1AF6BA080(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  int v6;
  unsigned int v8;
  int v9;
  unsigned int v10;

  v3 = 56;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) > 0x38uLL)
    v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_21;
  v4 = v3 + 1;
  v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    v8 = ((a2 + ~(-1 << v5) - 254) >> v5) + 1;
    if (HIWORD(v8))
    {
      v6 = *(_DWORD *)(a1 + v4);
      if (!v6)
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 > 0xFF)
    {
      v6 = *(unsigned __int16 *)(a1 + v4);
      if (!*(_WORD *)(a1 + v4))
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 < 2)
    {
LABEL_21:
      v10 = *(unsigned __int8 *)(a1 + v3);
      if (v10 >= 2)
        return (v10 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v6 = *(unsigned __int8 *)(a1 + v4);
  if (!*(_BYTE *)(a1 + v4))
    goto LABEL_21;
LABEL_14:
  v9 = (v6 - 1) << v5;
  if (v4 > 3)
    v9 = 0;
  if (!(_DWORD)v4)
    return (v9 + 255);
  if (v4 > 3)
    LODWORD(v4) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1AF6BA144 + 4 * byte_1AF779A1F[(v4 - 1)]))();
}

void sub_1AF6BA190(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  size_t v6;
  char v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  if (v5 <= 0x38)
    v5 = 56;
  v6 = v5 + 1;
  v7 = 8 * (v5 + 1);
  if (a3 < 0xFF)
  {
    v8 = 0u;
  }
  else if (v6 <= 3)
  {
    v10 = ((a3 + ~(-1 << v7) - 254) >> v7) + 1;
    if (HIWORD(v10))
    {
      v8 = 4u;
    }
    else if (v10 >= 0x100)
    {
      v8 = 2;
    }
    else
    {
      v8 = v10 > 1;
    }
  }
  else
  {
    v8 = 1u;
  }
  if (a2 <= 0xFE)
    __asm { BR              X11 }
  v9 = a2 - 255;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      v11 = v9 & ~(-1 << v7);
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v11;
        *((_BYTE *)a1 + 2) = BYTE2(v11);
      }
      else if ((_DWORD)v6 == 2)
      {
        *a1 = v11;
      }
      else
      {
        *(_BYTE *)a1 = v11;
      }
    }
  }
  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v9;
  }
  __asm { BR              X10 }
}

uint64_t sub_1AF6BA334(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = 56;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64) > 0x38uLL)
    v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64);
  if (*(unsigned __int8 *)(a1 + v2) < 2u)
    return *(unsigned __int8 *)(a1 + v2);
  if (v2 <= 3)
    v3 = v2;
  else
    v3 = 4;
  return ((uint64_t (*)(void))((char *)&loc_1AF6BA37C + 4 * byte_1AF779A2D[v3]))();
}

void sub_1AF6BA3C4(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  size_t v4;
  unsigned int v5;
  unsigned int v6;
  int v7;

  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) <= 0x38uLL)
    v4 = 56;
  else
    v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (a2 > 1)
  {
    v5 = a2 - 2;
    if (v4 < 4)
    {
      v6 = v5 >> (8 * v4);
      v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if ((_DWORD)v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if ((_DWORD)v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

ValueMetadata *type metadata accessor for VoiceShortcutResponse.CodingKeys()
{
  return &type metadata for VoiceShortcutResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for VoiceShortcutResponse.SuccessCodingKeys()
{
  return &type metadata for VoiceShortcutResponse.SuccessCodingKeys;
}

ValueMetadata *type metadata accessor for VoiceShortcutResponse.ErrorCodingKeys()
{
  return &type metadata for VoiceShortcutResponse.ErrorCodingKeys;
}

ValueMetadata *type metadata accessor for VoiceShortcutClientRequest.CodingKeys()
{
  return &type metadata for VoiceShortcutClientRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for VoiceShortcutClientRequest.AutomationsCodingKeys()
{
  return &type metadata for VoiceShortcutClientRequest.AutomationsCodingKeys;
}

ValueMetadata *type metadata accessor for VoiceShortcutClientRequest.ToolKitCodingKeys()
{
  return &type metadata for VoiceShortcutClientRequest.ToolKitCodingKeys;
}

ValueMetadata *type metadata accessor for VoiceShortcutClientRequest.ToolKit.CodingKeys()
{
  return &type metadata for VoiceShortcutClientRequest.ToolKit.CodingKeys;
}

ValueMetadata *type metadata accessor for VoiceShortcutClientRequest.ToolKit.IndexingRequestCodingKeys()
{
  return &type metadata for VoiceShortcutClientRequest.ToolKit.IndexingRequestCodingKeys;
}

uint64_t getEnumTagSinglePayload for VoiceShortcutClientRequest.Automations.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFD)
  {
    if (a2 + 3 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 3) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 4;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v5 = v6 - 4;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for VoiceShortcutClientRequest.Automations.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1AF6BA5EC + 4 * byte_1AF779A37[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1AF6BA620 + 4 * byte_1AF779A32[v4]))();
}

uint64_t sub_1AF6BA620(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AF6BA628(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AF6BA630);
  return result;
}

uint64_t sub_1AF6BA63C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AF6BA644);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1AF6BA648(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AF6BA650(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VoiceShortcutClientRequest.Automations.CodingKeys()
{
  return &type metadata for VoiceShortcutClientRequest.Automations.CodingKeys;
}

uint64_t _s19VoiceShortcutClient21VoiceShortcutResponseO10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AF6BA6B8 + 4 * byte_1AF779A41[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AF6BA6EC + 4 * byte_1AF779A3C[v4]))();
}

uint64_t sub_1AF6BA6EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AF6BA6F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AF6BA6FCLL);
  return result;
}

uint64_t sub_1AF6BA708(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AF6BA710);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AF6BA714(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AF6BA71C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VoiceShortcutClientRequest.Automations.CreateTriggerCodingKeys()
{
  return &type metadata for VoiceShortcutClientRequest.Automations.CreateTriggerCodingKeys;
}

ValueMetadata *type metadata accessor for VoiceShortcutClientRequest.Automations.DeleteTriggerCodingKeys()
{
  return &type metadata for VoiceShortcutClientRequest.Automations.DeleteTriggerCodingKeys;
}

ValueMetadata *type metadata accessor for VoiceShortcutClientRequest.Automations.FetchAllScheduledTriggersCodingKeys()
{
  return &type metadata for VoiceShortcutClientRequest.Automations.FetchAllScheduledTriggersCodingKeys;
}

uint64_t _s19VoiceShortcutClient21VoiceShortcutResponseO15ErrorCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1AF6BA798 + 4 * byte_1AF779A46[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1AF6BA7B8 + 4 * byte_1AF779A4B[v4]))();
}

_BYTE *sub_1AF6BA798(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1AF6BA7B8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AF6BA7C0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AF6BA7C8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AF6BA7D0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AF6BA7D8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for VoiceShortcutClientRequest.Automations.FetchScheduledTriggerCodingKeys()
{
  return &type metadata for VoiceShortcutClientRequest.Automations.FetchScheduledTriggerCodingKeys;
}

unint64_t sub_1AF6BA7F8()
{
  unint64_t result;

  result = qword_1EEE4C468;
  if (!qword_1EEE4C468)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF779EC0, &type metadata for VoiceShortcutClientRequest.Automations.FetchScheduledTriggerCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4C468);
  }
  return result;
}

unint64_t sub_1AF6BA838()
{
  unint64_t result;

  result = qword_1EEE4C470;
  if (!qword_1EEE4C470)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF779FC8, &type metadata for VoiceShortcutClientRequest.Automations.DeleteTriggerCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4C470);
  }
  return result;
}

unint64_t sub_1AF6BA878()
{
  unint64_t result;

  result = qword_1EEE4C478;
  if (!qword_1EEE4C478)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77A080, &type metadata for VoiceShortcutClientRequest.Automations.CreateTriggerCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4C478);
  }
  return result;
}

unint64_t sub_1AF6BA8B8()
{
  unint64_t result;

  result = qword_1EEE4C480;
  if (!qword_1EEE4C480)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77A138, &type metadata for VoiceShortcutClientRequest.Automations.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4C480);
  }
  return result;
}

unint64_t sub_1AF6BA8F8()
{
  unint64_t result;

  result = qword_1EEE4C488;
  if (!qword_1EEE4C488)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77A1F0, &type metadata for VoiceShortcutClientRequest.ToolKit.IndexingRequestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4C488);
  }
  return result;
}

unint64_t sub_1AF6BA938()
{
  unint64_t result;

  result = qword_1EEE4C490;
  if (!qword_1EEE4C490)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77A2A8, &type metadata for VoiceShortcutClientRequest.ToolKit.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4C490);
  }
  return result;
}

unint64_t sub_1AF6BA978()
{
  unint64_t result;

  result = qword_1EEE4C498;
  if (!qword_1EEE4C498)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77A360, &type metadata for VoiceShortcutClientRequest.ToolKitCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4C498);
  }
  return result;
}

unint64_t sub_1AF6BA9B8()
{
  unint64_t result;

  result = qword_1EEE4C4A0;
  if (!qword_1EEE4C4A0)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77A418, &type metadata for VoiceShortcutClientRequest.AutomationsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4C4A0);
  }
  return result;
}

unint64_t sub_1AF6BA9F8()
{
  unint64_t result;

  result = qword_1EEE4C4A8;
  if (!qword_1EEE4C4A8)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77A4D0, &type metadata for VoiceShortcutClientRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4C4A8);
  }
  return result;
}

unint64_t sub_1AF6BAA38()
{
  unint64_t result;

  result = qword_1EEE4C4B0;
  if (!qword_1EEE4C4B0)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77A588, &type metadata for VoiceShortcutResponse.ErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4C4B0);
  }
  return result;
}

unint64_t sub_1AF6BAA78()
{
  unint64_t result;

  result = qword_1EEE4C4B8;
  if (!qword_1EEE4C4B8)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77A690, &type metadata for VoiceShortcutResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4C4B8);
  }
  return result;
}

void sub_1AF6BAAB4()
{
  JUMPOUT(0x1B5DFC634);
}

void sub_1AF6BAAC4()
{
  JUMPOUT(0x1B5DFC634);
}

void sub_1AF6BAAD4()
{
  JUMPOUT(0x1B5DFC634);
}

void sub_1AF6BAAE4()
{
  JUMPOUT(0x1B5DFC634);
}

void sub_1AF6BAAF4()
{
  JUMPOUT(0x1B5DFC634);
}

void sub_1AF6BAB04()
{
  JUMPOUT(0x1B5DFC634);
}

void sub_1AF6BAB14()
{
  JUMPOUT(0x1B5DFC634);
}

void sub_1AF6BAB24()
{
  JUMPOUT(0x1B5DFC634);
}

void sub_1AF6BAB34()
{
  JUMPOUT(0x1B5DFC634);
}

unint64_t sub_1AF6BAB48()
{
  unint64_t result;

  result = qword_1EEE4C4C0;
  if (!qword_1EEE4C4C0)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77A5B0, &type metadata for VoiceShortcutResponse.SuccessCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4C4C0);
  }
  return result;
}

unint64_t sub_1AF6BAB88()
{
  unint64_t result;

  result = qword_1EEE4C4C8;
  if (!qword_1EEE4C4C8)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77A5D8, &type metadata for VoiceShortcutResponse.SuccessCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4C4C8);
  }
  return result;
}

unint64_t sub_1AF6BABC8()
{
  unint64_t result;

  result = qword_1EEE4C4D0;
  if (!qword_1EEE4C4D0)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77A4F8, &type metadata for VoiceShortcutResponse.ErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4C4D0);
  }
  return result;
}

unint64_t sub_1AF6BAC08()
{
  unint64_t result;

  result = qword_1EEE4C4D8;
  if (!qword_1EEE4C4D8)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77A520, &type metadata for VoiceShortcutResponse.ErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4C4D8);
  }
  return result;
}

unint64_t sub_1AF6BAC48()
{
  unint64_t result;

  result = qword_1EEE4C4E0;
  if (!qword_1EEE4C4E0)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77A600, &type metadata for VoiceShortcutResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4C4E0);
  }
  return result;
}

unint64_t sub_1AF6BAC88()
{
  unint64_t result;

  result = qword_1EEE4C4E8;
  if (!qword_1EEE4C4E8)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77A628, &type metadata for VoiceShortcutResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4C4E8);
  }
  return result;
}

unint64_t sub_1AF6BACC8()
{
  unint64_t result;

  result = qword_1EEE4C4F0;
  if (!qword_1EEE4C4F0)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77A388, &type metadata for VoiceShortcutClientRequest.AutomationsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4C4F0);
  }
  return result;
}

unint64_t sub_1AF6BAD08()
{
  unint64_t result;

  result = qword_1EEE4C4F8;
  if (!qword_1EEE4C4F8)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77A3B0, &type metadata for VoiceShortcutClientRequest.AutomationsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4C4F8);
  }
  return result;
}

unint64_t sub_1AF6BAD48()
{
  unint64_t result;

  result = qword_1EEE4C500;
  if (!qword_1EEE4C500)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77A2D0, &type metadata for VoiceShortcutClientRequest.ToolKitCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4C500);
  }
  return result;
}

unint64_t sub_1AF6BAD88()
{
  unint64_t result;

  result = qword_1EEE4C508;
  if (!qword_1EEE4C508)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77A2F8, &type metadata for VoiceShortcutClientRequest.ToolKitCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4C508);
  }
  return result;
}

unint64_t sub_1AF6BADC8()
{
  unint64_t result;

  result = qword_1EEE4C510;
  if (!qword_1EEE4C510)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77A440, &type metadata for VoiceShortcutClientRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4C510);
  }
  return result;
}

unint64_t sub_1AF6BAE08()
{
  unint64_t result;

  result = qword_1EEE4C518;
  if (!qword_1EEE4C518)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77A468, &type metadata for VoiceShortcutClientRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4C518);
  }
  return result;
}

unint64_t sub_1AF6BAE48()
{
  unint64_t result;

  result = qword_1EEE4C520;
  if (!qword_1EEE4C520)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77A160, &type metadata for VoiceShortcutClientRequest.ToolKit.IndexingRequestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4C520);
  }
  return result;
}

unint64_t sub_1AF6BAE88()
{
  unint64_t result;

  result = qword_1EEE4C528;
  if (!qword_1EEE4C528)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77A188, &type metadata for VoiceShortcutClientRequest.ToolKit.IndexingRequestCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4C528);
  }
  return result;
}

unint64_t sub_1AF6BAEC8()
{
  unint64_t result;

  result = qword_1EEE4C530;
  if (!qword_1EEE4C530)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77A218, &type metadata for VoiceShortcutClientRequest.ToolKit.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4C530);
  }
  return result;
}

unint64_t sub_1AF6BAF08()
{
  unint64_t result;

  result = qword_1EEE4C538;
  if (!qword_1EEE4C538)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77A240, &type metadata for VoiceShortcutClientRequest.ToolKit.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4C538);
  }
  return result;
}

unint64_t sub_1AF6BAF48()
{
  unint64_t result;

  result = qword_1EEE4C540;
  if (!qword_1EEE4C540)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF779FF0, &type metadata for VoiceShortcutClientRequest.Automations.CreateTriggerCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4C540);
  }
  return result;
}

unint64_t sub_1AF6BAF88()
{
  unint64_t result;

  result = qword_1EEE4C548;
  if (!qword_1EEE4C548)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77A018, &type metadata for VoiceShortcutClientRequest.Automations.CreateTriggerCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4C548);
  }
  return result;
}

unint64_t sub_1AF6BAFC8()
{
  unint64_t result;

  result = qword_1EEE4C550;
  if (!qword_1EEE4C550)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF779F38, &type metadata for VoiceShortcutClientRequest.Automations.DeleteTriggerCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4C550);
  }
  return result;
}

unint64_t sub_1AF6BB008()
{
  unint64_t result;

  result = qword_1EEE4C558;
  if (!qword_1EEE4C558)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF779F60, &type metadata for VoiceShortcutClientRequest.Automations.DeleteTriggerCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4C558);
  }
  return result;
}

unint64_t sub_1AF6BB048()
{
  unint64_t result;

  result = qword_1EEE4C560;
  if (!qword_1EEE4C560)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF779EE8, &type metadata for VoiceShortcutClientRequest.Automations.FetchAllScheduledTriggersCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4C560);
  }
  return result;
}

unint64_t sub_1AF6BB088()
{
  unint64_t result;

  result = qword_1EEE4C568;
  if (!qword_1EEE4C568)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF779F10, &type metadata for VoiceShortcutClientRequest.Automations.FetchAllScheduledTriggersCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4C568);
  }
  return result;
}

unint64_t sub_1AF6BB0C8()
{
  unint64_t result;

  result = qword_1EEE4C570;
  if (!qword_1EEE4C570)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF779E30, &type metadata for VoiceShortcutClientRequest.Automations.FetchScheduledTriggerCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4C570);
  }
  return result;
}

unint64_t sub_1AF6BB108()
{
  unint64_t result;

  result = qword_1EEE4C578;
  if (!qword_1EEE4C578)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF779E58, &type metadata for VoiceShortcutClientRequest.Automations.FetchScheduledTriggerCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4C578);
  }
  return result;
}

unint64_t sub_1AF6BB148()
{
  unint64_t result;

  result = qword_1EEE4C580;
  if (!qword_1EEE4C580)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77A0A8, &type metadata for VoiceShortcutClientRequest.Automations.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4C580);
  }
  return result;
}

unint64_t sub_1AF6BB188()
{
  unint64_t result;

  result = qword_1EEE4C588;
  if (!qword_1EEE4C588)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77A0D0, &type metadata for VoiceShortcutClientRequest.Automations.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4C588);
  }
  return result;
}

uint64_t sub_1AF6BB1C8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if (result < a5)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if ((uint64_t)(a6 >> 1) < result || (uint64_t)(a6 >> 1) < a2)
    goto LABEL_10;
  if (a2 < a5)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if ((a2 & 0x8000000000000000) == 0)
    return swift_unknownObjectRetain();
LABEL_12:
  __break(1u);
  return result;
}

uint64_t OUTLINED_FUNCTION_3_8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_6_8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_7_9()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 128) + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_8_9@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_9_7@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_10_4()
{
  return sub_1AF76A990();
}

uint64_t OUTLINED_FUNCTION_11_6()
{
  return sub_1AF76AAA4();
}

uint64_t OUTLINED_FUNCTION_12_7()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_18_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1AF6BB1C8(1, a2, v2, v2 + 32, 0, (2 * a2) | 1);
}

uint64_t OUTLINED_FUNCTION_20_4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_21_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t OUTLINED_FUNCTION_22_5()
{
  return sub_1AF76AB28();
}

uint64_t OUTLINED_FUNCTION_23_5()
{
  return sub_1AF76AAF8();
}

uint64_t OUTLINED_FUNCTION_24_3@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_25_2()
{
  return sub_1AF76AAA4();
}

uint64_t OUTLINED_FUNCTION_26_2()
{
  return sub_1AF76AD14();
}

uint64_t OUTLINED_FUNCTION_27_1()
{
  return sub_1AF76AF3C();
}

uint64_t OUTLINED_FUNCTION_28_4()
{
  return sub_1AF76AF18();
}

uint64_t OUTLINED_FUNCTION_29_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 184) + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_30_1()
{
  return sub_1AF76A99C();
}

uint64_t OUTLINED_FUNCTION_31_2()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_32_2()
{
  return sub_1AF76AAA4();
}

void OUTLINED_FUNCTION_33_2(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 144) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void OUTLINED_FUNCTION_34_1(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 152) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_35_0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 352);
}

uint64_t OUTLINED_FUNCTION_36_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 120) + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_37_0()
{
  return sub_1AF76AF24();
}

uint64_t OUTLINED_FUNCTION_38()
{
  return sub_1AF76AAD4();
}

uint64_t OUTLINED_FUNCTION_41_0()
{
  return sub_1AF76AB28();
}

uint64_t OUTLINED_FUNCTION_42_0()
{
  return sub_1AF76AB28();
}

uint64_t OUTLINED_FUNCTION_44()
{
  return 255;
}

uint64_t OUTLINED_FUNCTION_49_0()
{
  return sub_1AF76AAA4();
}

uint64_t OUTLINED_FUNCTION_51()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_52_0()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_53_0()
{
  JUMPOUT(0x1B5DFC634);
}

uint64_t OUTLINED_FUNCTION_54_0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  return a3(0);
}

uint64_t OUTLINED_FUNCTION_55_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_56()
{
  return sub_1AF76AF18();
}

uint64_t OUTLINED_FUNCTION_57_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_58_0@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t OUTLINED_FUNCTION_59_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_60_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_62_0()
{
  return 255;
}

uint64_t OUTLINED_FUNCTION_63_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_64_0()
{
  return swift_getEnumCaseMultiPayload();
}

unint64_t OUTLINED_FUNCTION_65_0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 1;
  return sub_1AF6B767C();
}

uint64_t CodableError.errorCode.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

void CodableError.errorDomain.getter()
{
  OUTLINED_FUNCTION_6_2();
  OUTLINED_FUNCTION_19();
}

void CodableError.localizedDescription.getter()
{
  OUTLINED_FUNCTION_6_2();
  OUTLINED_FUNCTION_19();
}

void CodableError.localizedFailureReason.getter()
{
  OUTLINED_FUNCTION_6_2();
  OUTLINED_FUNCTION_19();
}

void CodableError.init(_:)(void *a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;

  v5 = (void *)sub_1AF76A108();
  v19 = objc_msgSend(v5, sel_code);
  v6 = OUTLINED_FUNCTION_7_10((uint64_t)v19, sel_domain);
  v7 = OUTLINED_FUNCTION_5_7();
  v9 = v8;

  v11 = OUTLINED_FUNCTION_7_10(v10, sel_localizedDescription);
  v12 = OUTLINED_FUNCTION_5_7();
  v14 = v13;

  if (OUTLINED_FUNCTION_7_10(v15, sel_localizedFailureReason))
  {
    v16 = OUTLINED_FUNCTION_5_7();
    v18 = v17;

  }
  else
  {

    v16 = 0;
    v18 = 0;
  }
  *a2 = v19;
  a2[1] = v7;
  a2[2] = v9;
  a2[3] = v12;
  a2[4] = v14;
  a2[5] = v16;
  a2[6] = v18;
}

uint64_t sub_1AF6BB768(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  BOOL v6;
  char v7;

  v3 = a1 == 0x646F43726F727265 && a2 == 0xE900000000000065;
  if (v3 || (sub_1AF76AD14() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6D6F44726F727265 && a2 == 0xEB000000006E6961;
    if (v6 || (sub_1AF76AD14() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000014 && a2 == 0x80000001AF781AC0 || (sub_1AF76AD14() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0xD000000000000016 && a2 == 0x80000001AF781AE0)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else
    {
      v7 = sub_1AF76AD14();
      swift_bridgeObjectRelease();
      if ((v7 & 1) != 0)
        return 3;
      else
        return 4;
    }
  }
}

uint64_t sub_1AF6BB918(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1AF6BB950 + 4 * byte_1AF77ADE0[a1]))(0xD000000000000014, 0x80000001AF781AC0);
}

uint64_t sub_1AF6BB950()
{
  return 0x646F43726F727265;
}

uint64_t sub_1AF6BB96C(uint64_t a1)
{
  return a1 + 2;
}

uint64_t sub_1AF6BB984()
{
  return 0x6D6F44726F727265;
}

uint64_t sub_1AF6BB9A4()
{
  unsigned __int8 *v0;

  return sub_1AF6BB918(*v0);
}

uint64_t sub_1AF6BB9AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AF6BB768(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AF6BB9D0()
{
  sub_1AF6BBB90();
  return sub_1AF76AF90();
}

uint64_t sub_1AF6BB9F8()
{
  sub_1AF6BBB90();
  return sub_1AF76AF9C();
}

void CodableError.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[6];
  char v12;
  char v13;
  char v14;
  char v15;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4C590);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v1[1];
  v11[4] = v1[2];
  v11[5] = v8;
  v9 = v1[3];
  v11[2] = v1[4];
  v11[3] = v9;
  v10 = v1[5];
  v11[0] = v1[6];
  v11[1] = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AF6BBB90();
  sub_1AF76AF6C();
  v15 = 0;
  sub_1AF76AB58();
  if (!v2)
  {
    v14 = 1;
    OUTLINED_FUNCTION_3_9();
    v13 = 2;
    OUTLINED_FUNCTION_3_9();
    v12 = 3;
    sub_1AF76AB34();
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  OUTLINED_FUNCTION_2_2();
}

unint64_t sub_1AF6BBB90()
{
  unint64_t result;

  result = qword_1EEE4C598;
  if (!qword_1EEE4C598)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77AFF4, &type metadata for CodableError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4C598);
  }
  return result;
}

void CodableError.init(from:)(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4C5A0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AF6BBB90();
  sub_1AF76AF54();
  if (v2)
  {
    OUTLINED_FUNCTION_8_10();
  }
  else
  {
    v7 = sub_1AF76AAEC();
    v8 = OUTLINED_FUNCTION_4_8();
    v10 = v9;
    v19 = v8;
    swift_bridgeObjectRetain();
    v17 = OUTLINED_FUNCTION_4_8();
    v18 = v11;
    swift_bridgeObjectRetain();
    v12 = sub_1AF76AABC();
    v14 = v13;
    v15 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    v16 = v12;
    OUTLINED_FUNCTION_0_11(v15);
    OUTLINED_FUNCTION_6_2();
    *a2 = v7;
    a2[1] = v19;
    a2[2] = v10;
    a2[3] = v17;
    a2[4] = v18;
    a2[5] = v16;
    a2[6] = v14;
    OUTLINED_FUNCTION_8_10();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_2_2();
}

uint64_t sub_1AF6BBDC4()
{
  sub_1AF6BC1EC();
  return sub_1AF76AEB8();
}

uint64_t sub_1AF6BBDEC()
{
  sub_1AF6BC1EC();
  return sub_1AF76AEAC();
}

void sub_1AF6BBE20(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  CodableError.init(from:)(a1, a2);
}

void sub_1AF6BBE34(_QWORD *a1)
{
  CodableError.encode(to:)(a1);
}

uint64_t destroy for CodableError()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CodableError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for CodableError(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for CodableError(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CodableError(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 56))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CodableError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CodableError()
{
  return &type metadata for CodableError;
}

uint64_t storeEnumTagSinglePayload for CodableError.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1AF6BC0AC + 4 * byte_1AF77ADE9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1AF6BC0E0 + 4 * byte_1AF77ADE4[v4]))();
}

uint64_t sub_1AF6BC0E0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AF6BC0E8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AF6BC0F0);
  return result;
}

uint64_t sub_1AF6BC0FC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AF6BC104);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1AF6BC108(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AF6BC110(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CodableError.CodingKeys()
{
  return &type metadata for CodableError.CodingKeys;
}

unint64_t sub_1AF6BC130()
{
  unint64_t result;

  result = qword_1EEE4C5A8;
  if (!qword_1EEE4C5A8)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77AFCC, &type metadata for CodableError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4C5A8);
  }
  return result;
}

unint64_t sub_1AF6BC170()
{
  unint64_t result;

  result = qword_1EEE4C5B0;
  if (!qword_1EEE4C5B0)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77AF3C, &type metadata for CodableError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4C5B0);
  }
  return result;
}

unint64_t sub_1AF6BC1B0()
{
  unint64_t result;

  result = qword_1EEE4C5B8;
  if (!qword_1EEE4C5B8)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77AF64, &type metadata for CodableError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4C5B8);
  }
  return result;
}

unint64_t sub_1AF6BC1EC()
{
  unint64_t result;

  result = qword_1EEE4C5C0[0];
  if (!qword_1EEE4C5C0[0])
  {
    result = MEMORY[0x1B5DFC634](&protocol conformance descriptor for CodableError, &type metadata for CodableError);
    atomic_store(result, qword_1EEE4C5C0);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_11@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_3_9()
{
  return sub_1AF76AB40();
}

uint64_t OUTLINED_FUNCTION_4_8()
{
  return sub_1AF76AAD4();
}

uint64_t OUTLINED_FUNCTION_5_7()
{
  return sub_1AF76A57C();
}

id OUTLINED_FUNCTION_7_10(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

uint64_t OUTLINED_FUNCTION_8_10()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0);
}

uint64_t sub_1AF6BC26C()
{
  uint64_t v0;

  return xpc_connection_get_pid(*(xpc_connection_t *)(v0 + 16));
}

uint64_t sub_1AF6BC274()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_0_12();
  xpc_connection_get_audit_token();
  return *(_QWORD *)v0;
}

double sub_1AF6BC2A8@<D0>(uint64_t a1@<X8>)
{
  _OWORD *v2;
  __int128 v3;
  SecTaskRef v4;
  __SecTask *v5;
  __CFString *v6;
  CFTypeRef v7;
  double result;
  audit_token_t v9;

  v2 = (_OWORD *)OUTLINED_FUNCTION_0_12();
  xpc_connection_get_audit_token();
  v3 = v2[1];
  *(_OWORD *)v9.val = *v2;
  *(_OWORD *)&v9.val[4] = v3;
  v4 = SecTaskCreateWithAuditToken(0, &v9);
  if (v4)
  {
    v5 = v4;
    v6 = (__CFString *)sub_1AF76A558();
    v7 = SecTaskCopyValueForEntitlement(v5, v6, 0);

    if (v7)
    {
      *(_QWORD *)(a1 + 24) = swift_getObjectType();

      *(_QWORD *)a1 = v7;
      return result;
    }

  }
  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t XPCIncomingConnection.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  return v0;
}

uint64_t XPCIncomingConnection.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

unint64_t XPCIncomingConnection.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1AF76A960();
  swift_bridgeObjectRelease();
  xpc_connection_get_pid(*(xpc_connection_t *)(v0 + 16));
  sub_1AF76AB94();
  sub_1AF76A5B8();
  swift_bridgeObjectRelease();
  sub_1AF76A5B8();
  v1 = swift_unknownObjectRetain();
  v2 = MEMORY[0x1B5DFC970](v1);
  sub_1AF76A5C4();
  MEMORY[0x1B5DFC6E8](v2, -1, -1);
  swift_unknownObjectRelease();
  sub_1AF76A5B8();
  swift_bridgeObjectRelease();
  sub_1AF76A5B8();
  return 0xD000000000000022;
}

unint64_t sub_1AF6BC4B4()
{
  return XPCIncomingConnection.description.getter();
}

uint64_t type metadata accessor for XPCIncomingConnection()
{
  return objc_opt_self();
}

uint64_t method lookup function for XPCIncomingConnection()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of XPCIncomingConnection.pid.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of XPCIncomingConnection.auditToken.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of XPCIncomingConnection.value(forEntitlement:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t OUTLINED_FUNCTION_0_12()
{
  return swift_slowAlloc();
}

uint64_t sub_1AF6BC530(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, a2);
  v7 = sub_1AF6BE064((uint64_t)v6, a2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, a2);
  return v7;
}

uint64_t sub_1AF6BC5C0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[6];

  v3 = v2[2];
  v6[2] = *(_QWORD *)(*v2 + 80);
  v6[3] = a2;
  v6[4] = a1;
  sub_1AF76A234();
  sub_1AF76A6E4();
  sub_1AF6BDE74();
  v4 = sub_1AF76A4F8();
  swift_retain();
  sub_1AF6BDEB4((void (*)(uint64_t))sub_1AF6BE000, (uint64_t)v6, v3, v4, MEMORY[0x1E0DEE9C0] + 8);
  return swift_release();
}

uint64_t sub_1AF6BC66C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  sub_1AF76A6E4();
  v5 = sub_1AF76A8AC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - v7;
  v9 = sub_1AF76A234();
  MEMORY[0x1E0C80A78](v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a3, v5);
  sub_1AF6BDE74();
  sub_1AF76A4F8();
  return sub_1AF76A504();
}

uint64_t sub_1AF6BC78C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[6];

  v2 = v1[2];
  v5[2] = *(_QWORD *)(*v1 + 80);
  v5[3] = a1;
  sub_1AF76A234();
  sub_1AF76A6E4();
  sub_1AF6BDE74();
  v3 = sub_1AF76A4F8();
  swift_retain();
  sub_1AF6BDEB4((void (*)(uint64_t))sub_1AF6BDFE8, (uint64_t)v5, v2, v3, MEMORY[0x1E0DEE9C0] + 8);
  return swift_release();
}

uint64_t sub_1AF6BC834(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[2];

  v3 = sub_1AF76A6E4();
  v4 = sub_1AF76A8AC();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v11 - v5;
  v7 = sub_1AF76A234();
  MEMORY[0x1E0C80A78](v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v7);
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 1, 1, v3);
  sub_1AF6BDE74();
  sub_1AF76A4F8();
  return sub_1AF76A504();
}

uint64_t sub_1AF6BC944()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[6];

  v1 = v0[2];
  v5[2] = *(_QWORD *)(*v0 + 80);
  sub_1AF76A234();
  sub_1AF76A6E4();
  sub_1AF6BDE74();
  v2 = sub_1AF76A4F8();
  v3 = sub_1AF76A4D4();
  swift_retain();
  sub_1AF6BDEB4((void (*)(uint64_t))sub_1AF6BDFD0, (uint64_t)v5, v1, v2, v3);
  swift_release();
  return v5[5];
}

uint64_t sub_1AF6BCA10@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  sub_1AF76A234();
  sub_1AF76A6E4();
  sub_1AF6BDE74();
  result = sub_1AF76A4E0();
  *a1 = result;
  return result;
}

uint64_t sub_1AF6BCA84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[16];
  uint64_t v10;
  _BYTE *v11;

  v1 = sub_1AF76A6C0();
  MEMORY[0x1E0C80A78](v1);
  v3 = &v9[-v2];
  v4 = sub_1AF76A234();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1AF76A228();
  v10 = v0;
  v11 = v7;
  sub_1AF6BCD10((uint64_t)v3);
  sub_1AF76A6F0();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1AF6BCB7C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD v18[2];
  uint64_t v19;
  uint64_t v20;

  v18[1] = a1;
  v19 = a3;
  v5 = *a2;
  v6 = sub_1AF76A234();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v20 = *(_QWORD *)(v5 + 80);
  v9 = sub_1AF76A6E4();
  v10 = sub_1AF76A8AC();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v18 - v12;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))((char *)v18 - v12, a1, v9);
  __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v9);
  v14 = v19;
  sub_1AF6BC5C0((uint64_t)v13, v19);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v14, v6);
  v15 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = v20;
  *(_QWORD *)(v16 + 24) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v16 + v15, (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  swift_retain();
  return sub_1AF76A6B4();
}

uint64_t sub_1AF6BCD10@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x1E0DF07B8];
  v3 = sub_1AF76A6C0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_1AF6BCD58()
{
  uint64_t v0;

  sub_1AF6BC944();
  sub_1AF76A234();
  sub_1AF76A6E4();
  sub_1AF6BDE74();
  v0 = sub_1AF76A4D4();
  MEMORY[0x1B5DFC634](MEMORY[0x1E0DE9F98], v0);
  sub_1AF76A5E8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AF6BCE08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD v13[2];

  v5 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1AF76A6A8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v13 - v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, a3);
  sub_1AF76A6E4();
  sub_1AF76A6CC();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1AF6BCF00()
{
  uint64_t v0;

  sub_1AF6BC944();
  sub_1AF76A234();
  sub_1AF76A6E4();
  sub_1AF6BDE74();
  v0 = sub_1AF76A4D4();
  MEMORY[0x1B5DFC634](MEMORY[0x1E0DE9F98], v0);
  sub_1AF76A5E8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AF6BCFAC()
{
  sub_1AF76A6E4();
  return sub_1AF76A6D8();
}

uint64_t sub_1AF6BCFDC()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t sub_1AF6BCFF8()
{
  sub_1AF6BCFDC();
  return swift_deallocClassInstance();
}

uint64_t sub_1AF6BD014()
{
  swift_allocObject();
  return sub_1AF6BD044();
}

uint64_t sub_1AF6BD044()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  sub_1AF76A234();
  sub_1AF76A6E4();
  sub_1AF6BDE74();
  v3 = sub_1AF76A498();
  v1 = sub_1AF76A4F8();
  *(_QWORD *)(v0 + 16) = sub_1AF6BC530((uint64_t)&v3, v1);
  return v0;
}

uint64_t ToManyStream.init()@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1AF6BDD54(a1, (void (*)(_QWORD, uint64_t))type metadata accessor for ToManyStream.Factory, sub_1AF6BD014, a2);
}

uint64_t type metadata accessor for ToManyStream.Factory(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ToManyStream.Factory);
}

void ToManyStream.wrappedValue.getter()
{
  sub_1AF6BCA84();
  OUTLINED_FUNCTION_19();
}

void ToManyStream.yield(_:)()
{
  sub_1AF6BCD58();
  OUTLINED_FUNCTION_19();
}

Swift::Void __swiftcall ToManyStream.finish()()
{
  sub_1AF6BCF00();
  OUTLINED_FUNCTION_19();
}

uint64_t sub_1AF6BD144(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[6];

  v3 = v2[2];
  v6[2] = *(_QWORD *)(*v2 + 80);
  v6[3] = a2;
  v6[4] = a1;
  sub_1AF76A234();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED01F870);
  sub_1AF76A750();
  sub_1AF6BDE74();
  v4 = sub_1AF76A4F8();
  sub_1AF6BDEB4((void (*)(uint64_t))sub_1AF6BDFB4, (uint64_t)v6, v3, v4, MEMORY[0x1E0DEE9C0] + 8);
  return swift_release();
}

uint64_t sub_1AF6BD204(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED01F870);
  v5 = sub_1AF76A750();
  v6 = sub_1AF76A8AC();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v13 - v7;
  v9 = sub_1AF76A234();
  MEMORY[0x1E0C80A78](v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v9);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v8, a3, v5);
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v5);
  sub_1AF6BDE74();
  sub_1AF76A4F8();
  return sub_1AF76A504();
}

uint64_t sub_1AF6BD34C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[6];

  v2 = v1[2];
  v5[2] = *(_QWORD *)(*v1 + 80);
  v5[3] = a1;
  sub_1AF76A234();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED01F870);
  sub_1AF76A750();
  sub_1AF6BDE74();
  v3 = sub_1AF76A4F8();
  sub_1AF6BDEB4((void (*)(uint64_t))sub_1AF6BDF9C, (uint64_t)v5, v2, v3, MEMORY[0x1E0DEE9C0] + 8);
  return swift_release();
}

uint64_t sub_1AF6BD408(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[2];

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED01F870);
  v3 = sub_1AF76A750();
  v4 = sub_1AF76A8AC();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v11 - v5;
  v7 = sub_1AF76A234();
  MEMORY[0x1E0C80A78](v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v7);
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 1, 1, v3);
  sub_1AF6BDE74();
  sub_1AF76A4F8();
  return sub_1AF76A504();
}

uint64_t sub_1AF6BD534()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[6];

  v1 = v0[2];
  v5[2] = *(_QWORD *)(*v0 + 80);
  sub_1AF76A234();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED01F870);
  sub_1AF76A750();
  sub_1AF6BDE74();
  v2 = sub_1AF76A4F8();
  v3 = sub_1AF76A630();
  sub_1AF6BDEB4((void (*)(uint64_t))sub_1AF6BDE5C, (uint64_t)v5, v1, v2, v3);
  swift_release();
  return v5[5];
}

uint64_t sub_1AF6BD600@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_1AF76A234();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED01F870);
  sub_1AF76A750();
  sub_1AF6BDE74();
  sub_1AF76A4E0();
  v2 = sub_1AF76A4D4();
  MEMORY[0x1B5DFC634](MEMORY[0x1E0DE9F98], v2);
  result = sub_1AF76A63C();
  *a1 = result;
  return result;
}

uint64_t sub_1AF6BD6D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[16];
  uint64_t v10;
  _BYTE *v11;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED01F870);
  v1 = sub_1AF76A72C();
  MEMORY[0x1E0C80A78](v1);
  v3 = &v9[-v2];
  v4 = sub_1AF76A234();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1AF76A228();
  v10 = v0;
  v11 = v7;
  sub_1AF6BD910((uint64_t)v3);
  sub_1AF76A75C();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1AF6BD7E8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v6 = *a2;
  v7 = sub_1AF76A234();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](v7);
  sub_1AF6BD144(a1, a3);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v7);
  v10 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v6 + 80);
  *(_QWORD *)(v11 + 24) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v11 + v10, (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED01F870);
  sub_1AF76A750();
  return sub_1AF76A720();
}

uint64_t sub_1AF6BD910@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x1E0DF0A50];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED01F870);
  v3 = sub_1AF76A72C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_1AF6BD97C()
{
  uint64_t v0;

  sub_1AF6BD534();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED01F870);
  sub_1AF76A750();
  v0 = sub_1AF76A630();
  MEMORY[0x1B5DFC634](MEMORY[0x1E0DEAF38], v0);
  sub_1AF76A5E8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AF6BDA28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD v13[2];

  v13[1] = a1;
  v5 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED01F870);
  v8 = sub_1AF76A714();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v13 - v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, a3);
  sub_1AF76A750();
  sub_1AF76A738();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1AF6BDB4C()
{
  uint64_t v0;

  sub_1AF6BD534();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED01F870);
  sub_1AF76A750();
  v0 = sub_1AF76A630();
  MEMORY[0x1B5DFC634](MEMORY[0x1E0DEAF38], v0);
  sub_1AF76A5E8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AF6BDBF8(int a1, id a2)
{
  id v2;

  v2 = a2;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED01F870);
  sub_1AF76A750();
  return sub_1AF76A744();
}

uint64_t sub_1AF6BDC68()
{
  swift_allocObject();
  return sub_1AF6BDC98();
}

uint64_t sub_1AF6BDC98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  sub_1AF76A234();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED01F870);
  sub_1AF76A750();
  sub_1AF6BDE74();
  v3 = sub_1AF76A498();
  v1 = sub_1AF76A4F8();
  *(_QWORD *)(v0 + 16) = sub_1AF6BC530((uint64_t)&v3, v1);
  return v0;
}

uint64_t ToManyThrowingStream.init()@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1AF6BDD54(a1, (void (*)(_QWORD, uint64_t))type metadata accessor for ToManyThrowingStream.Factory, sub_1AF6BDC68, a2);
}

uint64_t sub_1AF6BDD54@<X0>(uint64_t a1@<X0>, void (*a2)(_QWORD, uint64_t)@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result;

  a2(0, a1);
  result = a3();
  *a4 = result;
  return result;
}

uint64_t type metadata accessor for ToManyThrowingStream.Factory(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ToManyThrowingStream.Factory);
}

void ToManyThrowingStream.wrappedValue.getter()
{
  sub_1AF6BD6D8();
  OUTLINED_FUNCTION_19();
}

void ToManyThrowingStream.yield(_:)()
{
  sub_1AF6BD97C();
  OUTLINED_FUNCTION_19();
}

void ToManyThrowingStream.finish(throwing:)()
{
  sub_1AF6BDB4C();
  OUTLINED_FUNCTION_19();
}

uint64_t type metadata accessor for ToManyStream(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ToManyStream);
}

uint64_t type metadata accessor for ToManyThrowingStream(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ToManyThrowingStream);
}

uint64_t sub_1AF6BDE18()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1AF6BDE5C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1AF6BD600(a1);
}

unint64_t sub_1AF6BDE74()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED01F838;
  if (!qword_1ED01F838)
  {
    v1 = sub_1AF76A234();
    result = MEMORY[0x1B5DFC634](MEMORY[0x1E0CB09C8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED01F838);
  }
  return result;
}

void sub_1AF6BDEB4(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  sub_1AF6BDF1C(a3 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)a3 + 16), (os_unfair_lock_t)(a3 + ((*(unsigned int *)(*(_QWORD *)a3 + 48) + 3) & 0x1FFFFFFFCLL)), a1, a2, a4, a5, &v5);
}

void sub_1AF6BDF1C(uint64_t a1, os_unfair_lock_t lock, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7)
{
  uint64_t v7;

  os_unfair_lock_lock(lock);
  a3(a1);
  os_unfair_lock_unlock(lock);
  if (v7)
    *a7 = v7;
}

uint64_t sub_1AF6BDF9C(uint64_t a1)
{
  uint64_t v1;

  return sub_1AF6BD408(a1, *(_QWORD *)(v1 + 24));
}

uint64_t sub_1AF6BDFB4(uint64_t a1)
{
  uint64_t v1;

  return sub_1AF6BD204(a1, *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1AF6BDFD0@<X0>(uint64_t *a1@<X8>)
{
  return sub_1AF6BCA10(a1);
}

uint64_t sub_1AF6BDFE8(uint64_t a1)
{
  uint64_t v1;

  return sub_1AF6BC834(a1, *(_QWORD *)(v1 + 24));
}

uint64_t sub_1AF6BE000(uint64_t a1)
{
  uint64_t v1;

  return sub_1AF6BC66C(a1, *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1AF6BE01C(int a1)
{
  uint64_t v1;

  return sub_1AF6BDBF8(a1, *(id *)(v1 + 24));
}

uint64_t sub_1AF6BE034(uint64_t a1)
{
  uint64_t v1;

  return sub_1AF6BDA28(a1, *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 16));
}

uint64_t sub_1AF6BE04C(uint64_t a1)
{
  uint64_t v1;

  return sub_1AF6BD7E8(a1, *(uint64_t **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1AF6BE058(uint64_t a1)
{
  sub_1AF6BE210(a1, (void (*)(uint64_t))sub_1AF6BD34C);
}

uint64_t sub_1AF6BE064(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  type metadata accessor for os_unfair_lock_s(255);
  sub_1AF76A9B4();
  v4 = sub_1AF76A9A8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 8))(a1, a2);
  return v4;
}

uint64_t sub_1AF6BE0E8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  v2 = *a1;
  *(_DWORD *)((char *)a1 + ((*(unsigned int *)(*a1 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v2 + *MEMORY[0x1E0DEC528]) - 8) + 16))(a2);
}

uint64_t sub_1AF6BE13C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1AF6BE0E8(a1, a2);
}

uint64_t sub_1AF6BE154()
{
  return sub_1AF6BCFAC();
}

uint64_t sub_1AF6BE16C(uint64_t a1)
{
  uint64_t v1;

  return sub_1AF6BCE08(a1, *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 16));
}

uint64_t sub_1AF6BE184(uint64_t a1)
{
  uint64_t v1;

  return sub_1AF6BCB7C(a1, *(uint64_t **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t objectdestroyTm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1AF76A234();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void sub_1AF6BE204(uint64_t a1)
{
  sub_1AF6BE210(a1, (void (*)(uint64_t))sub_1AF6BC78C);
}

void sub_1AF6BE210(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_1AF76A234() - 8) + 80);
  a2(v2 + ((v4 + 32) & ~v4));
  OUTLINED_FUNCTION_19();
}

uint64_t sub_1AF6BE254(void *a1)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[32];
  _OWORD v25[2];
  __int128 v26;
  uint64_t v27;
  id v28;

  v2 = sub_1AF76A150();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFB58];
  v22 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = a1;
  sub_1AF76A7F8();

  sub_1AF697B8C(&qword_1EEE4B070, v3, MEMORY[0x1E0CAFB80]);
  v23 = v2;
  sub_1AF76A8B8();
  if (v27)
  {
    v7 = MEMORY[0x1E0DEE9D8];
    do
    {
      sub_1AF69AF78(&v26, v25);
      sub_1AF6ACA64((uint64_t)v25, (uint64_t)v24);
      sub_1AF6C70C4(0, &qword_1EEE4B430);
      swift_dynamicCast();
      v8 = v28;
      v9 = objc_msgSend(v28, sel_bundleIdentifier);
      if (v9)
      {
        v10 = v9;
        v11 = sub_1AF76A57C();
        v13 = v12;

        v14 = objc_msgSend(v8, sel_persistentIdentifier);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1AF6A68F4(0, *(_QWORD *)(v7 + 16) + 1, 1, v7);
          v7 = v18;
        }
        v16 = *(_QWORD *)(v7 + 16);
        v15 = *(_QWORD *)(v7 + 24);
        if (v16 >= v15 >> 1)
        {
          sub_1AF6A68F4(v15 > 1, v16 + 1, 1, v7);
          v7 = v19;
        }
        *(_QWORD *)(v7 + 16) = v16 + 1;
        v17 = (_QWORD *)(v7 + 24 * v16);
        v17[4] = v11;
        v17[5] = v13;
        v17[6] = v14;
      }
      else
      {

        __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
      }
      sub_1AF76A8B8();
    }
    while (v27);
  }
  else
  {
    v7 = MEMORY[0x1E0DEE9D8];
  }
  (*(void (**)(char *, uint64_t))(v22 + 8))(v5, v23);
  return v7;
}

_QWORD *sub_1AF6BE4AC(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  int64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[4];
  unint64_t v20;

  v18 = sub_1AF76A780();
  result = sub_1AF6DA4D0(v19, a1);
  v3 = v19[0];
  v4 = v19[1];
  v5 = v19[3];
  v6 = v20;
  v7 = (unint64_t)(v19[2] + 64) >> 6;
  if (!v20)
    goto LABEL_3;
LABEL_2:
  v8 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  v9 = v8 | (v5 << 6);
  while (1)
  {
    v14 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v9);
    v15 = *v14;
    v16 = v14[1];
    swift_bridgeObjectRetain();
    sub_1AF6CE698(&v17, v15, v16);
    result = (_QWORD *)swift_bridgeObjectRelease();
    if (v6)
      goto LABEL_2;
LABEL_3:
    v10 = v5 + 1;
    if (__OFADD__(v5, 1))
      break;
    if (v10 >= v7)
      goto LABEL_21;
    v11 = *(_QWORD *)(v4 + 8 * v10);
    v12 = v5 + 1;
    if (!v11)
    {
      v12 = v5 + 2;
      if (v5 + 2 >= v7)
        goto LABEL_21;
      v11 = *(_QWORD *)(v4 + 8 * v12);
      if (!v11)
      {
        v12 = v5 + 3;
        if (v5 + 3 >= v7)
          goto LABEL_21;
        v11 = *(_QWORD *)(v4 + 8 * v12);
        if (!v11)
        {
          v12 = v5 + 4;
          if (v5 + 4 >= v7)
            goto LABEL_21;
          v11 = *(_QWORD *)(v4 + 8 * v12);
          if (!v11)
          {
            v12 = v5 + 5;
            if (v5 + 5 >= v7)
              goto LABEL_21;
            v11 = *(_QWORD *)(v4 + 8 * v12);
            if (!v11)
            {
              v13 = v5 + 6;
              while (v13 < v7)
              {
                v11 = *(_QWORD *)(v4 + 8 * v13++);
                if (v11)
                {
                  v12 = v13 - 1;
                  goto LABEL_18;
                }
              }
LABEL_21:
              swift_release();
              return (_QWORD *)v18;
            }
          }
        }
      }
    }
LABEL_18:
    v6 = (v11 - 1) & v11;
    v9 = __clz(__rbit64(v11)) + (v12 << 6);
    v5 = v12;
  }
  __break(1u);
  return result;
}

uint64_t LaunchServicesSnapshot.State.bundleId.getter()
{
  OUTLINED_FUNCTION_6_2();
  return OUTLINED_FUNCTION_106();
}

id LaunchServicesSnapshot.State.persistentIdentifier.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

VoiceShortcutClient::LaunchServicesSnapshot::State __swiftcall LaunchServicesSnapshot.State.init(bundleId:persistentIdentifier:)(Swift::String bundleId, __C::LSPersistentIdentifier persistentIdentifier)
{
  uint64_t v2;
  VoiceShortcutClient::LaunchServicesSnapshot::State result;

  *(Swift::String *)v2 = bundleId;
  *(__C::LSPersistentIdentifier *)(v2 + 16) = persistentIdentifier;
  result.bundleId = bundleId;
  result.persistentIdentifier = persistentIdentifier;
  return result;
}

void LaunchServicesSnapshot.State.hash(into:)()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  swift_bridgeObjectRetain();
  sub_1AF76A5AC();
  swift_bridgeObjectRelease();
  v2 = v1;
  OUTLINED_FUNCTION_110();
  OUTLINED_FUNCTION_34_2();
  OUTLINED_FUNCTION_107();

}

uint64_t static LaunchServicesSnapshot.State.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  void *v2;
  void *v3;
  BOOL v4;
  id v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  unint64_t v14;

  v2 = (void *)a1[2];
  v3 = (void *)a2[2];
  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (sub_1AF76AD14() & 1) == 0)
    return 0;
  v5 = v2;
  v6 = v3;
  v7 = sub_1AF76A1B0();
  v9 = v8;
  v10 = sub_1AF76A1B0();
  v12 = MEMORY[0x1B5DFA984](v7, v9, v10, v11);
  v13 = OUTLINED_FUNCTION_45_1();
  sub_1AF697C78(v13, v14);
  sub_1AF697C78(v7, v9);

  return v12 & 1;
}

uint64_t sub_1AF6BE79C(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x6449656C646E7562 && a2 == 0xE800000000000000;
  if (v3 || (sub_1AF76AD14() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001AF781C30)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1AF76AD14();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1AF6BE880(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000014;
  else
    return 0x6449656C646E7562;
}

uint64_t sub_1AF6BE8C0()
{
  char *v0;

  return sub_1AF6BE880(*v0);
}

uint64_t sub_1AF6BE8C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AF6BE79C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AF6BE8EC()
{
  sub_1AF6C578C();
  return sub_1AF76AF90();
}

uint64_t sub_1AF6BE914()
{
  sub_1AF6C578C();
  return sub_1AF76AF9C();
}

void LaunchServicesSnapshot.State.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_46();
  v2 = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4C6C8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_1AF6C578C();
  sub_1AF76AF6C();
  sub_1AF76AB40();
  if (!v0)
  {
    OUTLINED_FUNCTION_74_0();
    type metadata accessor for LSPersistentIdentifier(0);
    sub_1AF697B8C(&qword_1EEE4C6D0, (uint64_t (*)(uint64_t))type metadata accessor for LSPersistentIdentifier, (uint64_t)&protocol conformance descriptor for LSPersistentIdentifier);
    sub_1AF76AB64();
  }
  OUTLINED_FUNCTION_49_1(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  OUTLINED_FUNCTION_2_2();
}

void LaunchServicesSnapshot.State.hashValue.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  OUTLINED_FUNCTION_28_4();
  OUTLINED_FUNCTION_93_0();
  sub_1AF76A5AC();
  swift_bridgeObjectRelease();
  v2 = v1;
  OUTLINED_FUNCTION_110();
  sub_1AF76A1BC();
  OUTLINED_FUNCTION_107();

  OUTLINED_FUNCTION_27_1();
  OUTLINED_FUNCTION_69_0();
}

void LaunchServicesSnapshot.State.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  id v14;
  void *v15;

  OUTLINED_FUNCTION_46();
  v2 = v1;
  v4 = v3;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEE4B520);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_4_3();
  v9 = v8 - v7;
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_1AF6C578C();
  sub_1AF76AF54();
  if (v0)
  {
    OUTLINED_FUNCTION_20_5();
  }
  else
  {
    v10 = sub_1AF76AAD4();
    v12 = v11;
    type metadata accessor for LSPersistentIdentifier(0);
    OUTLINED_FUNCTION_74_0();
    sub_1AF697B8C((unint64_t *)&unk_1EEE4B438, v13, (uint64_t)&protocol conformance descriptor for LSPersistentIdentifier);
    OUTLINED_FUNCTION_87_0();
    OUTLINED_FUNCTION_65_1();
    sub_1AF76AAF8();
    OUTLINED_FUNCTION_15_7(v9, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
    *v4 = v10;
    v4[1] = v12;
    v4[2] = (uint64_t)v15;
    v14 = v15;
    OUTLINED_FUNCTION_20_5();

    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_2_2();
}

void sub_1AF6BEC74()
{
  LaunchServicesSnapshot.State.init(from:)();
}

void sub_1AF6BEC88()
{
  LaunchServicesSnapshot.State.encode(to:)();
}

uint64_t sub_1AF6BECA4()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v1 = *(void **)(v0 + 16);
  sub_1AF76AF18();
  swift_bridgeObjectRetain();
  sub_1AF76A5AC();
  swift_bridgeObjectRelease();
  v2 = v1;
  v3 = sub_1AF76A1B0();
  v5 = v4;
  sub_1AF76A1BC();
  sub_1AF697C78(v3, v5);

  return sub_1AF76AF3C();
}

uint64_t LaunchServicesSnapshot.DatabaseVersion.uuid.getter()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);

  OUTLINED_FUNCTION_18_7();
  v0 = OUTLINED_FUNCTION_106();
  return v1(v0);
}

uint64_t LaunchServicesSnapshot.DatabaseVersion.sequenceNumber.getter()
{
  uint64_t v0;

  v0 = type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0);
  return OUTLINED_FUNCTION_58_1(v0);
}

void LaunchServicesSnapshot.DatabaseVersion.init(uuid:sequenceNumber:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;

  v6 = OUTLINED_FUNCTION_18_7();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a3, a1, v6);
  *(_QWORD *)(a3 + *(int *)(type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0) + 20)) = a2;
  OUTLINED_FUNCTION_9();
}

void LaunchServicesSnapshot.DatabaseVersion.hash(into:)()
{
  uint64_t v0;

  OUTLINED_FUNCTION_18_7();
  sub_1AF697B8C((unint64_t *)&qword_1ED01F838, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  sub_1AF76A51C();
  v0 = type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0);
  OUTLINED_FUNCTION_58_1(v0);
  sub_1AF76AF24();
  OUTLINED_FUNCTION_9();
}

BOOL static LaunchServicesSnapshot.DatabaseVersion.== infix(_:_:)()
{
  char v0;

  if ((OUTLINED_FUNCTION_81_0() & 1) == 0)
    return 0;
  type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0);
  OUTLINED_FUNCTION_84_0();
  return v0 != 0;
}

uint64_t sub_1AF6BEE78(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v7;

  v3 = a1 == 1684632949 && a2 == 0xE400000000000000;
  if (v3 || (sub_1AF76AD14() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65636E6575716573 && a2 == 0xEE007265626D754ELL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1AF76AD14();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1AF6BEF64(char a1)
{
  if ((a1 & 1) != 0)
    return 0x65636E6575716573;
  else
    return 1684632949;
}

uint64_t sub_1AF6BEFA0()
{
  char *v0;

  return sub_1AF6BEF64(*v0);
}

uint64_t sub_1AF6BEFA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AF6BEE78(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AF6BEFCC()
{
  sub_1AF6C57DC();
  return sub_1AF76AF90();
}

uint64_t sub_1AF6BEFF4()
{
  sub_1AF6C57DC();
  return sub_1AF76AF9C();
}

void LaunchServicesSnapshot.DatabaseVersion.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4C6D8);
  OUTLINED_FUNCTION_101();
  MEMORY[0x1E0C80A78](v4);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AF6C57DC();
  OUTLINED_FUNCTION_53_1();
  sub_1AF76A234();
  sub_1AF697B8C(&qword_1EEE4B090, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09B8]);
  OUTLINED_FUNCTION_14_6();
  if (!v1)
  {
    type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0);
    OUTLINED_FUNCTION_74_0();
    sub_1AF76AB58();
  }
  OUTLINED_FUNCTION_49_1(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_43_1();
}

void LaunchServicesSnapshot.DatabaseVersion.hashValue.getter()
{
  OUTLINED_FUNCTION_28_4();
  OUTLINED_FUNCTION_18_7();
  sub_1AF697B8C((unint64_t *)&qword_1ED01F838, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  sub_1AF76A51C();
  type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0);
  OUTLINED_FUNCTION_59_1();
  OUTLINED_FUNCTION_27_1();
  OUTLINED_FUNCTION_26_1();
}

void LaunchServicesSnapshot.DatabaseVersion.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(_QWORD);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_46();
  v3 = v2;
  v15 = v4;
  v18 = sub_1AF76A234();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_2_8();
  v16 = v5;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4B518);
  v6 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_4_3();
  v9 = v8 - v7;
  v10 = OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_0_7();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_47_0();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_1AF6C57DC();
  sub_1AF76AF54();
  if (v0)
  {
    OUTLINED_FUNCTION_88();
  }
  else
  {
    sub_1AF697B8C((unint64_t *)&unk_1EEE4B098, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09E0]);
    sub_1AF76AAF8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 32))(v1, v16, v18);
    OUTLINED_FUNCTION_74_0();
    v12 = sub_1AF76AAEC();
    OUTLINED_FUNCTION_15_7(v9, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
    *(_QWORD *)(v1 + *(int *)(v10 + 20)) = v12;
    sub_1AF6C5950(v1, v15, type metadata accessor for LaunchServicesSnapshot.DatabaseVersion);
    OUTLINED_FUNCTION_88();
    v13 = OUTLINED_FUNCTION_106();
    sub_1AF6C5970(v13, v14);
  }
  OUTLINED_FUNCTION_2_2();
}

void sub_1AF6BF390()
{
  LaunchServicesSnapshot.DatabaseVersion.init(from:)();
}

void sub_1AF6BF3A4(_QWORD *a1)
{
  LaunchServicesSnapshot.DatabaseVersion.encode(to:)(a1);
}

uint64_t sub_1AF6BF3C0()
{
  sub_1AF76AF18();
  sub_1AF76A234();
  sub_1AF697B8C((unint64_t *)&qword_1ED01F838, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  sub_1AF76A51C();
  sub_1AF76AF24();
  return sub_1AF76AF3C();
}

void LaunchServicesSnapshot.version.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1AF6C5950(v1, a1, type metadata accessor for LaunchServicesSnapshot.DatabaseVersion);
}

uint64_t LaunchServicesSnapshot.stateByBundleId.getter()
{
  return sub_1AF6C0AF0(type metadata accessor for LaunchServicesSnapshot);
}

uint64_t LaunchServicesSnapshot.init(version:state:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0);
  OUTLINED_FUNCTION_0_7();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_4_3();
  v9 = v8 - v7;
  v10 = OUTLINED_FUNCTION_108();
  sub_1AF6C5950(v10, v11, type metadata accessor for LaunchServicesSnapshot.DatabaseVersion);
  v12 = sub_1AF6BF514(a2);
  sub_1AF6C5970(a1, type metadata accessor for LaunchServicesSnapshot.DatabaseVersion);
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_98(v9);
  result = OUTLINED_FUNCTION_17_5();
  *(_QWORD *)(a3 + v14) = v12;
  return result;
}

uint64_t sub_1AF6BF514(uint64_t a1)
{
  uint64_t v1;
  _OWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  unint64_t v8;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  unint64_t v15;
  char v16;
  unint64_t v17;
  char v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t result;
  __int128 v28;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9E0];
  v2 = (_OWORD *)(swift_bridgeObjectRetain() + 40);
  v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  while (1)
  {
    v4 = *((_QWORD *)v2 - 1);
    v28 = *v2;
    v5 = v3[2];
    v6 = *(_QWORD *)v2;
    swift_bridgeObjectRetain();
    if (v5)
    {
      swift_bridgeObjectRetain_n();
      v7 = *((id *)&v28 + 1);
      v8 = sub_1AF6842A4(v4, v6);
      if ((v9 & 1) != 0)
      {
        v10 = (uint64_t *)(v3[7] + 24 * v8);
        v5 = *v10;
        v11 = v10[1];
        v12 = (void *)v10[2];
        swift_bridgeObjectRetain();
        v13 = v12;
        swift_bridgeObjectRelease();
        goto LABEL_9;
      }
      swift_bridgeObjectRelease();
      v5 = 0;
    }
    else
    {
      v14 = *((id *)&v28 + 1);
      swift_bridgeObjectRetain();
    }
    v11 = 0;
    v12 = 0;
LABEL_9:
    sub_1AF6C6F5C(v5, v11, v12);
    if (v11)
      break;
    swift_isUniquelyReferenced_nonNull_native();
    v15 = sub_1AF6842A4(v4, v6);
    if (__OFADD__(v3[2], (v16 & 1) == 0))
      goto LABEL_23;
    v17 = v15;
    v18 = v16;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4B470);
    if ((sub_1AF76AA14() & 1) != 0)
    {
      v19 = sub_1AF6842A4(v4, v6);
      if ((v18 & 1) != (v20 & 1))
        goto LABEL_25;
      v17 = v19;
    }
    if ((v18 & 1) != 0)
    {
      v21 = v3[7] + 24 * v17;

      swift_bridgeObjectRelease();
      *(_QWORD *)v21 = v4;
      *(_QWORD *)(v21 + 8) = v6;
      *(_QWORD *)(v21 + 16) = *((_QWORD *)&v28 + 1);
    }
    else
    {
      v3[(v17 >> 6) + 8] |= 1 << v17;
      v22 = (uint64_t *)(v3[6] + 16 * v17);
      *v22 = v4;
      v22[1] = v6;
      v23 = v3[7] + 24 * v17;
      *(_QWORD *)v23 = v4;
      *(_OWORD *)(v23 + 8) = v28;
      v24 = v3[2];
      v25 = __OFADD__(v24, 1);
      v26 = v24 + 1;
      if (v25)
        goto LABEL_24;
      v3[2] = v26;
      swift_bridgeObjectRetain();
    }
    v2 = (_OWORD *)((char *)v2 + 24);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!--v1)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v3;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  result = sub_1AF76AEA0();
  __break(1u);
  return result;
}

void LaunchServicesSnapshot.init(version:stateByBundleId:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;

  sub_1AF6C5A4C(a1, a3, type metadata accessor for LaunchServicesSnapshot.DatabaseVersion);
  OUTLINED_FUNCTION_17_5();
  *(_QWORD *)(a3 + v5) = a2;
  OUTLINED_FUNCTION_19();
}

void LaunchServicesSnapshot.subscript.getter(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  _QWORD *v11;
  uint64_t v12;
  void *v13;
  id v14;

  OUTLINED_FUNCTION_17_5();
  v8 = *(_QWORD *)(v3 + v7);
  if (*(_QWORD *)(v8 + 16))
  {
    OUTLINED_FUNCTION_27_2();
    v9 = sub_1AF6842A4(a1, a2);
    if ((v10 & 1) != 0)
    {
      v11 = (_QWORD *)(*(_QWORD *)(v8 + 56) + 24 * v9);
      v12 = v11[1];
      v13 = (void *)v11[2];
      *a3 = *v11;
      a3[1] = v12;
      a3[2] = v13;
      swift_bridgeObjectRetain();
      v14 = v13;
      OUTLINED_FUNCTION_29_2();
      return;
    }
    OUTLINED_FUNCTION_10();
  }
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  OUTLINED_FUNCTION_9();
}

uint64_t sub_1AF6BF82C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  BOOL v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  BOOL v17;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_1AF76AF18();
    sub_1AF76A5AC();
    v6 = sub_1AF76AF3C();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_1AF76AD14() & 1) != 0)
        return 1;
      v14 = ~v7;
      v15 = (v8 + 1) & v14;
      if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
      {
        while (1)
        {
          v16 = (_QWORD *)(v10 + 16 * v15);
          v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_1AF76AD14() & 1) != 0)
            break;
          result = 0;
          v15 = (v15 + 1) & v14;
          if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
            return result;
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t LaunchServicesSnapshot.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_18_7();
  sub_1AF697B8C((unint64_t *)&qword_1ED01F838, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  sub_1AF76A51C();
  v3 = type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0);
  OUTLINED_FUNCTION_58_1(v3);
  sub_1AF76AF24();
  v4 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for LaunchServicesSnapshot(0) + 20));
  OUTLINED_FUNCTION_27_2();
  sub_1AF6C55B0(a1, v4);
  return OUTLINED_FUNCTION_29_2();
}

uint64_t static LaunchServicesSnapshot.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;

  if ((OUTLINED_FUNCTION_81_0() & 1) == 0)
    return 0;
  type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0);
  OUTLINED_FUNCTION_84_0();
  if (!v2)
    return 0;
  OUTLINED_FUNCTION_17_5();
  return sub_1AF6BFA38(*(_QWORD **)(v1 + v3), *(_QWORD **)(v0 + v3));
}

uint64_t sub_1AF6BFA38(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  unint64_t v19;
  char v20;
  char v21;
  _QWORD *v22;
  void *v23;
  BOOL v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v30;
  int64_t v31;

  if (a1 == a2)
    return 1;
  if (a1[2] == a2[2])
  {
    v30 = a1 + 8;
    OUTLINED_FUNCTION_12_8();
    v31 = (unint64_t)(v5 + 63) >> 6;
    if ((v6 & v4) != 0)
    {
      v7 = __clz(__rbit64(v6 & v4));
LABEL_15:
      v11 = (uint64_t *)(a1[6] + 16 * v7);
      v12 = *v11;
      v13 = v11[1];
      v14 = (uint64_t *)(a1[7] + 24 * v7);
      v15 = *v14;
      v16 = v14[1];
      v17 = (void *)v14[2];
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_92_0();
      v18 = v17;
      v19 = sub_1AF6842A4(v12, v13);
      v21 = v20;
      swift_bridgeObjectRelease();
      if ((v21 & 1) != 0)
      {
        v22 = (_QWORD *)(a2[7] + 24 * v19);
        v23 = (void *)v22[2];
        v24 = *v22 == v15 && v22[1] == v16;
        if (v24 || (sub_1AF76AD14() & 1) != 0)
        {
          v25 = v23;
          v26 = v18;
          OUTLINED_FUNCTION_87_0();
          v25;
          OUTLINED_FUNCTION_110();
          v28 = v27;
          sub_1AF76A1B0();
          __asm { BR              X11 }
        }
      }

      OUTLINED_FUNCTION_12_0();
      return 0;
    }
    v8 = 1;
    if ((unint64_t)(v5 + 63) >> 6 > 1)
    {
      v9 = v30[1];
      if (v9)
      {
LABEL_14:
        v7 = __clz(__rbit64(v9)) + (v8 << 6);
        goto LABEL_15;
      }
      v10 = 2;
      if (v31 > 2)
      {
        v9 = v30[2];
        if (v9)
          goto LABEL_13;
        v10 = 3;
        if (v31 <= 3)
          return 1;
        v9 = v30[3];
        if (v9)
        {
LABEL_13:
          v8 = v10;
          goto LABEL_14;
        }
        v10 = 4;
        if (v31 > 4)
        {
          v9 = v30[4];
          if (v9)
            goto LABEL_13;
          while (1)
          {
            v8 = v10 + 1;
            if (__OFADD__(v10, 1))
            {
              __break(1u);
              JUMPOUT(0x1AF6C0398);
            }
            if (v8 >= v31)
              break;
            v9 = v30[v8];
            ++v10;
            if (v9)
              goto LABEL_14;
          }
        }
      }
    }
    return 1;
  }
  return 0;
}

uint64_t sub_1AF6C0414(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v7;

  v3 = a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000;
  if (v3 || (sub_1AF76AD14() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4279426574617473 && a2 == 0xEF6449656C646E75)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1AF76AD14();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1AF6C0510(char a1)
{
  if ((a1 & 1) != 0)
    return 0x4279426574617473;
  else
    return 0x6E6F6973726576;
}

void sub_1AF6C0554()
{
  sub_1AF76AF18();
  sub_1AF76AF24();
  OUTLINED_FUNCTION_27_1();
  OUTLINED_FUNCTION_26_1();
}

uint64_t sub_1AF6C0588()
{
  char *v0;

  return sub_1AF6C0510(*v0);
}

uint64_t sub_1AF6C0590@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AF6C0414(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AF6C05B4()
{
  sub_1AF6C582C();
  return sub_1AF76AF90();
}

uint64_t sub_1AF6C05DC()
{
  sub_1AF6C582C();
  return sub_1AF76AF9C();
}

void LaunchServicesSnapshot.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4C6E0);
  OUTLINED_FUNCTION_101();
  MEMORY[0x1E0C80A78](v4);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AF6C582C();
  OUTLINED_FUNCTION_53_1();
  OUTLINED_FUNCTION_73();
  sub_1AF697B8C(&qword_1EEE4C6E8, type metadata accessor for LaunchServicesSnapshot.DatabaseVersion, (uint64_t)&protocol conformance descriptor for LaunchServicesSnapshot.DatabaseVersion);
  OUTLINED_FUNCTION_14_6();
  if (!v1)
  {
    type metadata accessor for LaunchServicesSnapshot(0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4B3A0);
    sub_1AF6C58A4(&qword_1EEE4C6F0, (void (*)(void))sub_1AF6C5868);
    OUTLINED_FUNCTION_14_6();
  }
  OUTLINED_FUNCTION_49_1(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_43_1();
}

void LaunchServicesSnapshot.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v2[72];

  OUTLINED_FUNCTION_28_4();
  OUTLINED_FUNCTION_18_7();
  sub_1AF697B8C((unint64_t *)&qword_1ED01F838, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  sub_1AF76A51C();
  type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0);
  OUTLINED_FUNCTION_59_1();
  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for LaunchServicesSnapshot(0) + 20));
  OUTLINED_FUNCTION_27_2();
  sub_1AF6C55B0((uint64_t)v2, v1);
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_27_1();
  OUTLINED_FUNCTION_69_0();
}

void LaunchServicesSnapshot.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_46();
  v3 = v2;
  v13 = v4;
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_0_7();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_2_8();
  v14 = v6;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4B510);
  v7 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_4_3();
  v10 = v9 - v8;
  v11 = type metadata accessor for LaunchServicesSnapshot(0);
  OUTLINED_FUNCTION_0_7();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_47_0();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_1AF6C582C();
  sub_1AF76AF54();
  if (v0)
  {
    OUTLINED_FUNCTION_20_5();
  }
  else
  {
    sub_1AF697B8C(&qword_1EEE4B2F8, type metadata accessor for LaunchServicesSnapshot.DatabaseVersion, (uint64_t)&protocol conformance descriptor for LaunchServicesSnapshot.DatabaseVersion);
    OUTLINED_FUNCTION_96();
    sub_1AF6C5A4C(v14, v1, type metadata accessor for LaunchServicesSnapshot.DatabaseVersion);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4B3A0);
    OUTLINED_FUNCTION_74_0();
    sub_1AF6C58A4(&qword_1EEE4B3A8, (void (*)(void))sub_1AF6C5914);
    OUTLINED_FUNCTION_65_1();
    OUTLINED_FUNCTION_96();
    OUTLINED_FUNCTION_15_7(v10, *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
    *(_QWORD *)(v1 + *(int *)(v11 + 20)) = v16;
    sub_1AF6C5950(v1, v13, type metadata accessor for LaunchServicesSnapshot);
    OUTLINED_FUNCTION_20_5();
    sub_1AF6C5970(v1, type metadata accessor for LaunchServicesSnapshot);
  }
  OUTLINED_FUNCTION_2_2();
}

void sub_1AF6C09D8()
{
  LaunchServicesSnapshot.init(from:)();
}

void sub_1AF6C09EC(_QWORD *a1)
{
  LaunchServicesSnapshot.encode(to:)(a1);
}

uint64_t sub_1AF6C0A08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  _BYTE v6[72];

  sub_1AF76AF18();
  sub_1AF76A234();
  sub_1AF697B8C((unint64_t *)&qword_1ED01F838, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  sub_1AF76A51C();
  type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0);
  sub_1AF76AF24();
  v4 = *(_QWORD *)(v2 + *(int *)(a2 + 20));
  swift_bridgeObjectRetain();
  sub_1AF6C55B0((uint64_t)v6, v4);
  swift_bridgeObjectRelease();
  return sub_1AF76AF3C();
}

void LaunchServicesSnapshot.Delta.target.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1AF6C5950(v1, a1, type metadata accessor for LaunchServicesSnapshot);
}

uint64_t LaunchServicesSnapshot.Delta.added.getter()
{
  return sub_1AF6C0AF0(type metadata accessor for LaunchServicesSnapshot.Delta);
}

uint64_t sub_1AF6C0AF0(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;

  v1 = a1(0);
  OUTLINED_FUNCTION_58_1(v1);
  return swift_bridgeObjectRetain();
}

uint64_t LaunchServicesSnapshot.Delta.updated.getter()
{
  OUTLINED_FUNCTION_72_0();
  return swift_bridgeObjectRetain();
}

uint64_t LaunchServicesSnapshot.Delta.removed.getter()
{
  OUTLINED_FUNCTION_72_0();
  return swift_bridgeObjectRetain();
}

void LaunchServicesSnapshot.Delta.isEmptySet.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t (*v10)(_QWORD);
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(_QWORD);
  uint64_t v14;

  OUTLINED_FUNCTION_72_0();
  OUTLINED_FUNCTION_0_7();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_45_0();
  v4 = v2 - v3;
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v14 - v7;
  v9 = *(_QWORD *)(*(_QWORD *)(v0 + *(int *)(v6 + 20)) + 16);
  sub_1AF6C5950(v0, (uint64_t)&v14 - v7, v10);
  sub_1AF6C5970((uint64_t)v8, type metadata accessor for LaunchServicesSnapshot.Delta);
  if (v9)
  {
    sub_1AF6C5950(v0, v4, type metadata accessor for LaunchServicesSnapshot.Delta);
  }
  else
  {
    OUTLINED_FUNCTION_71();
    sub_1AF6C5950(v11, v12, v13);
  }
  sub_1AF6C5970(v4, type metadata accessor for LaunchServicesSnapshot.Delta);
  OUTLINED_FUNCTION_43();
}

void static LaunchServicesSnapshot.empty.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(_QWORD);
  uint64_t v13;

  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_0_7();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_45_0();
  v6 = v4 - v5;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v13 - v8;
  static LaunchServicesSnapshot.DatabaseVersion.current.getter((uint64_t)&v13 - v8);
  if (!v1)
  {
    sub_1AF6C5950((uint64_t)v9, v6, type metadata accessor for LaunchServicesSnapshot.DatabaseVersion);
    v10 = sub_1AF6BF514(MEMORY[0x1E0DEE9D8]);
    v11 = OUTLINED_FUNCTION_45_1();
    sub_1AF6C5970(v11, v12);
    sub_1AF6C5A4C(v6, a1, type metadata accessor for LaunchServicesSnapshot.DatabaseVersion);
    *(_QWORD *)(a1 + *(int *)(type metadata accessor for LaunchServicesSnapshot(0) + 20)) = v10;
  }
}

void static LaunchServicesSnapshot.DatabaseVersion.current.getter(uint64_t a1@<X8>)
{
  id v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  _QWORD v12[2];

  v12[1] = *MEMORY[0x1E0C80C00];
  v2 = objc_msgSend((id)objc_opt_self(), sel_defaultWorkspace);
  if (!v2)
    __break(1u);
  v3 = v2;
  v11 = 0;
  v12[0] = 0;
  objc_msgSend(v2, sel_getKnowledgeUUID_andSequenceNumber_, v12, &v11);

  v5 = v11;
  v4 = (void *)v12[0];
  if (v12[0] && v11)
  {
    v6 = v11;
    v7 = v4;
    v8 = objc_msgSend(v6, sel_integerValue);
    sub_1AF76A210();

    *(_QWORD *)(a1 + *(int *)(type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0) + 20)) = v8;
  }
  else
  {
    sub_1AF6C59AC();
    swift_allocError();
    v9 = v5;
    v10 = v4;
    swift_willThrow();

  }
}

uint64_t LaunchServicesSnapshot.diff()(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[2] = a1;
  v2[3] = v1;
  v2[4] = OUTLINED_FUNCTION_50_0();
  v2[5] = swift_task_alloc();
  OUTLINED_FUNCTION_9_4();
  return OUTLINED_FUNCTION_2_3();
}

uint64_t sub_1AF6C0EC8()
{
  uint64_t v0;
  _QWORD *v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4B3C8);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v1;
  *v1 = v0;
  v1[1] = sub_1AF6C0F38;
  OUTLINED_FUNCTION_63_1();
  OUTLINED_FUNCTION_85();
  return sub_1AF76AA98();
}

uint64_t sub_1AF6C0F38()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_61();
  *v2 = *v1;
  *(_QWORD *)(v3 + 56) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_9_4();
  return OUTLINED_FUNCTION_2_3();
}

uint64_t sub_1AF6C0F88()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  v1 = v0[5];
  LaunchServicesSnapshot.subtracting(other:)(v0[3], v0[2]);
  sub_1AF6C5970(v1, type metadata accessor for LaunchServicesSnapshot);
  OUTLINED_FUNCTION_5_3();
  v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_41_1();
  return OUTLINED_FUNCTION_12_6(v2);
}

uint64_t sub_1AF6C0FC8()
{
  uint64_t v0;

  swift_task_dealloc();
  return OUTLINED_FUNCTION_12_6(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t static LaunchServicesSnapshot.complete()(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return OUTLINED_FUNCTION_32_3();
}

uint64_t sub_1AF6C1004()
{
  uint64_t v0;
  _QWORD *v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4B3C8);
  OUTLINED_FUNCTION_50_0();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v1;
  *v1 = v0;
  v1[1] = sub_1AF6C107C;
  OUTLINED_FUNCTION_63_1();
  OUTLINED_FUNCTION_85();
  return OUTLINED_FUNCTION_48_0();
}

uint64_t sub_1AF6C107C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  OUTLINED_FUNCTION_61();
  v2 = *v1;
  *v3 = v2;
  *(_QWORD *)(v4 + 32) = v0;
  swift_task_dealloc();
  if (!v0)
    return OUTLINED_FUNCTION_12_6(*(uint64_t (**)(void))(v2 + 8));
  OUTLINED_FUNCTION_9_4();
  return OUTLINED_FUNCTION_2_3();
}

uint64_t sub_1AF6C10CC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

int *LaunchServicesSnapshot.subtracting(other:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(_QWORD);
  int *result;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45[16];
  uint64_t v46;
  uint64_t v47;

  v3 = v2;
  v44 = a2;
  v5 = OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_0_7();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_45_0();
  v43 = v7 - v8;
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v39 - v11;
  v13 = MEMORY[0x1E0C80A78](v10);
  v15 = (char *)&v39 - v14;
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v39 - v16;
  v41 = (char *)&v39 - v16;
  v18 = swift_bridgeObjectRetain();
  v19 = sub_1AF6BE4AC(v18);
  v42 = *(int *)(v5 + 20);
  v20 = a1;
  v39 = a1;
  v21 = swift_bridgeObjectRetain();
  v22 = sub_1AF6BE4AC(v21);
  OUTLINED_FUNCTION_27_2();
  v23 = sub_1AF6C1388((uint64_t)v22, (uint64_t)v19);
  OUTLINED_FUNCTION_93_0();
  v40 = sub_1AF6C1388((uint64_t)v19, (uint64_t)v22);
  v24 = sub_1AF6C48CC((uint64_t)v22, (uint64_t)v19);
  swift_bridgeObjectRelease();
  v46 = v3;
  v47 = v20;
  v25 = sub_1AF6C42B4((uint64_t)sub_1AF6C5A30, (uint64_t)v45, v24);
  sub_1AF6C5950(v3, (uint64_t)v17, type metadata accessor for LaunchServicesSnapshot);
  sub_1AF6C5950(v3, (uint64_t)v15, type metadata accessor for LaunchServicesSnapshot.DatabaseVersion);
  OUTLINED_FUNCTION_92_0();
  v26 = swift_bridgeObjectRetain();
  v27 = sub_1AF6C3614(v26, v23);
  OUTLINED_FUNCTION_12_0();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v15[*(int *)(v5 + 20)] = v27;
  OUTLINED_FUNCTION_35_1();
  sub_1AF6C5970((uint64_t)v15, type metadata accessor for LaunchServicesSnapshot);
  sub_1AF6C5950(v3, (uint64_t)v12, type metadata accessor for LaunchServicesSnapshot.DatabaseVersion);
  swift_retain();
  v28 = OUTLINED_FUNCTION_92_0();
  v29 = sub_1AF6C3614(v28, v25);
  swift_release();
  OUTLINED_FUNCTION_12_0();
  *(_QWORD *)&v12[*(int *)(v5 + 20)] = v29;
  OUTLINED_FUNCTION_6_2();
  sub_1AF6C5970((uint64_t)v12, type metadata accessor for LaunchServicesSnapshot);
  v30 = v43;
  sub_1AF6C5950(v39, v43, type metadata accessor for LaunchServicesSnapshot.DatabaseVersion);
  v31 = v40;
  OUTLINED_FUNCTION_87_0();
  v32 = OUTLINED_FUNCTION_27_2();
  v33 = sub_1AF6C3614(v32, v31);
  OUTLINED_FUNCTION_0_2();
  OUTLINED_FUNCTION_10();
  *(_QWORD *)(v30 + *(int *)(v5 + 20)) = v33;
  OUTLINED_FUNCTION_93_0();
  sub_1AF6C5970(v30, type metadata accessor for LaunchServicesSnapshot);
  v34 = v44;
  OUTLINED_FUNCTION_71();
  sub_1AF6C5A4C(v35, v36, v37);
  result = (int *)OUTLINED_FUNCTION_72_0();
  *(_QWORD *)(v34 + result[5]) = v27;
  *(_QWORD *)(v34 + result[6]) = v29;
  *(_QWORD *)(v34 + result[7]) = v33;
  return result;
}

uint64_t sub_1AF6C1388(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a1 + 16) > *(_QWORD *)(a2 + 16) >> 3)
    return sub_1AF6C3E44(a1, a2);
  sub_1AF6C3CAC(a1);
  return a2;
}

BOOL sub_1AF6C13D8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  char v24;
  BOOL v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  id v36;
  id v37;
  uint64_t v38;
  void *v39;

  v5 = *a1;
  v6 = a1[1];
  v7 = type metadata accessor for LaunchServicesSnapshot(0);
  v8 = *(_QWORD *)(a2 + *(int *)(v7 + 20));
  if (*(_QWORD *)(v8 + 16))
  {
    swift_bridgeObjectRetain();
    v9 = sub_1AF6842A4(v5, v6);
    if ((v10 & 1) != 0)
    {
      v11 = (uint64_t *)(*(_QWORD *)(v8 + 56) + 24 * v9);
      v12 = *v11;
      v13 = v11[1];
      v14 = (void *)v11[2];
      swift_bridgeObjectRetain();
      v15 = v14;
    }
    else
    {
      v12 = 0;
      v13 = 0;
      v14 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v12 = 0;
    v13 = 0;
    v14 = 0;
  }
  v16 = *(_QWORD *)(a3 + *(int *)(v7 + 20));
  if (!*(_QWORD *)(v16 + 16))
  {
    v20 = 0;
    v21 = 0;
    v22 = 0;
    if (v13)
      goto LABEL_15;
LABEL_11:
    if (!v21)
    {
      v24 = 1;
      return (v24 & 1) == 0;
    }
LABEL_22:
    sub_1AF6C6F5C(v12, v13, v14);
    sub_1AF6C6F5C(v20, v21, v22);
    v24 = 0;
    return (v24 & 1) == 0;
  }
  swift_bridgeObjectRetain();
  v17 = sub_1AF6842A4(v5, v6);
  if ((v18 & 1) != 0)
  {
    v19 = (uint64_t *)(*(_QWORD *)(v16 + 56) + 24 * v17);
    v20 = *v19;
    v21 = v19[1];
    v22 = (void *)v19[2];
    swift_bridgeObjectRetain();
    v23 = v22;
  }
  else
  {
    v20 = 0;
    v21 = 0;
    v22 = 0;
  }
  swift_bridgeObjectRelease();
  if (!v13)
    goto LABEL_11;
LABEL_15:
  if (!v21)
    goto LABEL_22;
  v25 = v12 == v20 && v13 == v21;
  if (v25 || (sub_1AF76AD14() & 1) != 0)
  {
    sub_1AF6C6F8C(v12, v13, v14);
    v37 = v14;
    v36 = v22;
    v26 = sub_1AF76A1B0();
    v28 = v27;
    v38 = v20;
    v39 = v14;
    v29 = v12;
    v30 = sub_1AF76A1B0();
    v32 = v31;
    v24 = MEMORY[0x1B5DFA984](v26, v28, v30, v31);
    v33 = v30;
    v12 = v29;
    v34 = v32;
    v20 = v38;
    v14 = v39;
    sub_1AF697C78(v33, v34);
    sub_1AF697C78(v26, v28);

  }
  else
  {
    sub_1AF6C6F8C(v12, v13, v14);
    v24 = 0;
  }
  sub_1AF6C6F5C(v20, v21, v22);

  swift_bridgeObjectRelease();
  sub_1AF6C6F5C(v12, v13, v14);
  return (v24 & 1) == 0;
}

void LaunchServicesSnapshot.adding(other:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  char v24;
  char v25;
  id v26;
  id v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  int64_t v44;
  uint64_t v45;
  int64_t v46;
  uint64_t v47;
  __int128 v48;

  v40 = OUTLINED_FUNCTION_50_0();
  v41 = v2;
  v4 = *(int *)(v40 + 20);
  v5 = *(_QWORD **)(v2 + v4);
  v6 = *(_QWORD *)(a1 + v4);
  v43 = v6 + 64;
  OUTLINED_FUNCTION_12_8();
  v9 = v8 & v7;
  v44 = (unint64_t)(v10 + 63) >> 6;
  OUTLINED_FUNCTION_6_2();
  v45 = v6;
  OUTLINED_FUNCTION_27_2();
  v11 = 0;
  if (!v9)
    goto LABEL_3;
LABEL_2:
  v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v46 = v11;
  for (i = v12 | (v11 << 6); ; i = __clz(__rbit64(v15)) + (v16 << 6))
  {
    v18 = (uint64_t *)(*(_QWORD *)(v45 + 48) + 16 * i);
    v20 = *v18;
    v19 = v18[1];
    v21 = *(_QWORD *)(v45 + 56) + 24 * i;
    v47 = *(_QWORD *)v21;
    v48 = *(_OWORD *)(v21 + 8);
    v22 = v5[2];
    OUTLINED_FUNCTION_35_1();
    if (v22)
    {
      OUTLINED_FUNCTION_35_1();
      swift_bridgeObjectRetain();
      v23 = *((id *)&v48 + 1);
      OUTLINED_FUNCTION_44_0();
      v25 = v24;
      OUTLINED_FUNCTION_1();
      if ((v25 & 1) != 0)
        goto LABEL_36;
    }
    else
    {
      swift_bridgeObjectRetain();
      v26 = *((id *)&v48 + 1);
    }
    swift_bridgeObjectRetain();
    v27 = *((id *)&v48 + 1);
    swift_isUniquelyReferenced_nonNull_native();
    v28 = OUTLINED_FUNCTION_44_0();
    if (__OFADD__(v5[2], (v29 & 1) == 0))
    {
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    v30 = v28;
    v31 = v29;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4B470);
    if ((sub_1AF76AA14() & 1) != 0)
    {
      v32 = OUTLINED_FUNCTION_44_0();
      if ((v31 & 1) != (v33 & 1))
        goto LABEL_37;
      v30 = v32;
    }
    if ((v31 & 1) != 0)
    {
      v34 = v5[7] + 24 * v30;

      OUTLINED_FUNCTION_10();
      *(_QWORD *)v34 = v47;
      *(_QWORD *)(v34 + 8) = v48;
      *(_QWORD *)(v34 + 16) = v27;
    }
    else
    {
      v5[(v30 >> 6) + 8] |= 1 << v30;
      v35 = (_QWORD *)(v5[6] + 16 * v30);
      *v35 = v20;
      v35[1] = v19;
      v36 = v5[7] + 24 * v30;
      *(_QWORD *)v36 = v47;
      *(_OWORD *)(v36 + 8) = v48;
      v37 = v5[2];
      v38 = __OFADD__(v37, 1);
      v39 = v37 + 1;
      if (v38)
        goto LABEL_33;
      v5[2] = v39;
      OUTLINED_FUNCTION_35_1();
    }

    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_1();
    swift_bridgeObjectRelease();
    v11 = v46;
    if (v9)
      goto LABEL_2;
LABEL_3:
    v14 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_34;
    if (v14 >= v44)
      goto LABEL_31;
    v15 = *(_QWORD *)(v43 + 8 * v14);
    v16 = v11 + 1;
    if (!v15)
    {
      v16 = v11 + 2;
      if (v11 + 2 >= v44)
        goto LABEL_31;
      v15 = *(_QWORD *)(v43 + 8 * v16);
      if (!v15)
      {
        v16 = v11 + 3;
        if (v11 + 3 >= v44)
          goto LABEL_31;
        v15 = *(_QWORD *)(v43 + 8 * v16);
        if (!v15)
          break;
      }
    }
LABEL_16:
    v9 = (v15 - 1) & v15;
    v46 = v16;
  }
  v17 = v11 + 4;
  if (v11 + 4 >= v44)
  {
LABEL_31:
    swift_release();
    sub_1AF6C5950(v41, a2, type metadata accessor for LaunchServicesSnapshot.DatabaseVersion);
    *(_QWORD *)(a2 + *(int *)(v40 + 20)) = v5;
    OUTLINED_FUNCTION_25_3();
    return;
  }
  v15 = *(_QWORD *)(v43 + 8 * v17);
  if (v15)
  {
    v16 = v11 + 4;
    goto LABEL_16;
  }
  while (1)
  {
    v16 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v16 >= v44)
      goto LABEL_31;
    v15 = *(_QWORD *)(v43 + 8 * v16);
    ++v17;
    if (v15)
      goto LABEL_16;
  }
LABEL_35:
  __break(1u);
LABEL_36:
  sub_1AF76AA38();
  __break(1u);
LABEL_37:
  sub_1AF76AEA0();
  __break(1u);
}

uint64_t static LaunchServicesSnapshot.partial(_:failIfBundleNotFound:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;

  *(_BYTE *)(v3 + 56) = a3;
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = a2;
  return OUTLINED_FUNCTION_32_3();
}

uint64_t sub_1AF6C19EC()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(_BYTE *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4C738);
  v3 = swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v3;
  *(_QWORD *)(v3 + 16) = v2;
  *(_BYTE *)(v3 + 24) = v1;
  OUTLINED_FUNCTION_50_0();
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v4;
  *v4 = v0;
  v4[1] = sub_1AF6C1A98;
  OUTLINED_FUNCTION_63_1();
  return OUTLINED_FUNCTION_48_0();
}

uint64_t sub_1AF6C1A98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v4;

  OUTLINED_FUNCTION_16_7();
  v3 = *v2;
  *v4 = v3;
  *(_QWORD *)(v0 + 48) = v1;
  swift_task_dealloc();
  if (v1)
  {
    OUTLINED_FUNCTION_9_4();
    return swift_task_switch();
  }
  else
  {
    swift_task_dealloc();
    return OUTLINED_FUNCTION_8_5(*(uint64_t (**)(void))(v3 + 8));
  }
}

uint64_t sub_1AF6C1AFC()
{
  uint64_t v0;

  swift_task_dealloc();
  return OUTLINED_FUNCTION_12_6(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1AF6C1B28(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v4 + 232) = a4;
  *(_QWORD *)(v4 + 104) = a2;
  *(_QWORD *)(v4 + 112) = a3;
  *(_QWORD *)(v4 + 96) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4B3E0);
  *(_QWORD *)(v4 + 120) = swift_task_alloc();
  *(_QWORD *)(v4 + 128) = swift_task_alloc();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4C7C0);
  *(_QWORD *)(v4 + 136) = v5;
  *(_QWORD *)(v4 + 144) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v4 + 152) = swift_task_alloc();
  type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0);
  *(_QWORD *)(v4 + 160) = swift_task_alloc();
  *(_QWORD *)(v4 + 168) = swift_task_alloc();
  *(_QWORD *)(v4 + 176) = swift_task_alloc();
  return swift_task_switch();
}

void sub_1AF6C1C04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  unint64_t i;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  int64_t v31;
  char v32;
  uint64_t v33;

  static LaunchServicesSnapshot.DatabaseVersion.current.getter(*(_QWORD *)(v0 + 176));
  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v1 + 56);
  v30 = v1 + 56;
  v32 = *(_BYTE *)(v0 + 232);
  v3 = -1;
  v4 = -1 << *(_BYTE *)(v1 + 32);
  if (-v4 < 64)
    v3 = ~(-1 << -(char)v4);
  v5 = v3 & v2;
  v31 = (unint64_t)(63 - v4) >> 6;
  v33 = *(_QWORD *)(v0 + 112);
  swift_bridgeObjectRetain();
  v6 = 0;
  if (!v5)
    goto LABEL_5;
LABEL_4:
  OUTLINED_FUNCTION_111();
  for (i = v7 | (v6 << 6); ; i = __clz(__rbit64(v10)) + (v6 << 6))
  {
    v13 = *(_QWORD *)(v0 + 120);
    v12 = *(_QWORD *)(v0 + 128);
    v14 = (uint64_t *)(*(_QWORD *)(v33 + 48) + 16 * i);
    v15 = *v14;
    v16 = v14[1];
    v17 = sub_1AF76A69C();
    __swift_storeEnumTagSinglePayload(v12, 1, 1, v17);
    v18 = swift_allocObject();
    *(_QWORD *)(v18 + 16) = 0;
    *(_QWORD *)(v18 + 24) = 0;
    *(_QWORD *)(v18 + 32) = v15;
    *(_QWORD *)(v18 + 40) = v16;
    *(_BYTE *)(v18 + 48) = v32;
    v19 = OUTLINED_FUNCTION_108();
    sub_1AF6C6EF8(v19, v20, &qword_1EEE4B3E0);
    LODWORD(v13) = __swift_getEnumTagSinglePayload(v13, 1, v17);
    OUTLINED_FUNCTION_35_1();
    v21 = *(_QWORD *)(v0 + 120);
    if ((_DWORD)v13 == 1)
    {
      sub_1AF6C6F24(*(_QWORD *)(v0 + 120), &qword_1EEE4B3E0);
    }
    else
    {
      sub_1AF76A690();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v21, v17);
    }
    if (*(_QWORD *)(v18 + 16))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v22 = sub_1AF76A654();
      v24 = v23;
      swift_unknownObjectRelease();
    }
    else
    {
      v22 = 0;
      v24 = 0;
    }
    v25 = **(_QWORD **)(v0 + 104);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4C738);
    v26 = v24 | v22;
    if (v24 | v22)
    {
      v26 = v0 + 16;
      *(_QWORD *)(v0 + 16) = 0;
      *(_QWORD *)(v0 + 24) = 0;
      *(_QWORD *)(v0 + 32) = v22;
      *(_QWORD *)(v0 + 40) = v24;
    }
    v27 = *(_QWORD *)(v0 + 128);
    *(_QWORD *)(v0 + 48) = 1;
    *(_QWORD *)(v0 + 56) = v26;
    *(_QWORD *)(v0 + 64) = v25;
    swift_task_create();
    swift_release();
    sub_1AF6C6F24(v27, &qword_1EEE4B3E0);
    if (v5)
      goto LABEL_4;
LABEL_5:
    v9 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v9 >= v31)
      goto LABEL_29;
    v10 = *(_QWORD *)(v30 + 8 * v9);
    ++v6;
    if (!v10)
    {
      v6 = v9 + 1;
      if (v9 + 1 >= v31)
        goto LABEL_29;
      v10 = *(_QWORD *)(v30 + 8 * v6);
      if (!v10)
      {
        v6 = v9 + 2;
        if (v9 + 2 >= v31)
          goto LABEL_29;
        v10 = *(_QWORD *)(v30 + 8 * v6);
        if (!v10)
          break;
      }
    }
LABEL_18:
    v5 = (v10 - 1) & v10;
  }
  v11 = v9 + 3;
  if (v11 >= v31)
  {
LABEL_29:
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4C738);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED01F870);
    sub_1AF76A6FC();
    sub_1AF6C7088(&qword_1EEE4C7D8, &qword_1EEE4C7C0);
    *(_QWORD *)(v0 + 184) = v28;
    v29 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 192) = v29;
    *v29 = v0;
    v29[1] = sub_1AF6C2000;
    sub_1AF76A684();
    return;
  }
  v10 = *(_QWORD *)(v30 + 8 * v11);
  if (v10)
  {
    v6 = v11;
    goto LABEL_18;
  }
  while (1)
  {
    v6 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v6 >= v31)
      goto LABEL_29;
    v10 = *(_QWORD *)(v30 + 8 * v6);
    ++v11;
    if (v10)
      goto LABEL_18;
  }
LABEL_31:
  __break(1u);
}

uint64_t sub_1AF6C2000()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_16_7();
  OUTLINED_FUNCTION_22_6(v2);
  if (v1)
  {
    *(_QWORD *)(v0 + 208) = v1;
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_11_7();
  }
  else
  {
    *(_QWORD *)(v0 + 200) = MEMORY[0x1E0DEE9D8];
  }
  OUTLINED_FUNCTION_9_4();
  return OUTLINED_FUNCTION_3_10();
}

uint64_t sub_1AF6C2070()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  void *v12;
  uint64_t v13;
  id v14;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;

  v2 = *(_QWORD *)(v0 + 72);
  v1 = *(_QWORD *)(v0 + 80);
  if (v1 == 1)
  {
    v3 = *(_QWORD *)(v0 + 200);
    v4 = *(_QWORD *)(v0 + 168);
    v5 = *(_QWORD *)(v0 + 176);
    v6 = *(_QWORD *)(v0 + 160);
    v7 = *(_QWORD *)(v0 + 96);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 144) + 8))(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 136));
    sub_1AF6C6F4C(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(void **)(v0 + 88));
    sub_1AF6C5950(v5, v4, type metadata accessor for LaunchServicesSnapshot.DatabaseVersion);
    sub_1AF6C5950(v4, v6, type metadata accessor for LaunchServicesSnapshot.DatabaseVersion);
    v8 = sub_1AF6BF514(v3);
    sub_1AF6C5970(v4, type metadata accessor for LaunchServicesSnapshot.DatabaseVersion);
    OUTLINED_FUNCTION_0_2();
    sub_1AF6C5A4C(v6, v7, type metadata accessor for LaunchServicesSnapshot.DatabaseVersion);
    OUTLINED_FUNCTION_17_5();
    *(_QWORD *)(v7 + v9) = v8;
    sub_1AF6C5970(v5, type metadata accessor for LaunchServicesSnapshot.DatabaseVersion);
    OUTLINED_FUNCTION_104();
    OUTLINED_FUNCTION_20_1();
    OUTLINED_FUNCTION_23_2();
    OUTLINED_FUNCTION_12_3();
    OUTLINED_FUNCTION_7_5();
    swift_task_dealloc();
    v10 = (uint64_t (*)(void))OUTLINED_FUNCTION_41_1();
    return v10();
  }
  else
  {
    v12 = *(void **)(v0 + 88);
    v13 = *(_QWORD *)(v0 + 200);
    if (v1)
    {
      OUTLINED_FUNCTION_27_2();
      v14 = v12;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v13 = *(_QWORD *)(v0 + 200);
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        OUTLINED_FUNCTION_103(0, *(_QWORD *)(v13 + 16) + 1);
        v13 = v23;
      }
      v17 = *(_QWORD *)(v13 + 16);
      v16 = *(_QWORD *)(v13 + 24);
      if (v17 >= v16 >> 1)
      {
        OUTLINED_FUNCTION_103(v16 > 1, v17 + 1);
        v13 = v24;
      }
      *(_QWORD *)(v13 + 16) = v17 + 1;
      v18 = (_QWORD *)(v13 + 24 * v17);
      v18[4] = v2;
      v18[5] = v1;
      v18[6] = v14;
    }
    *(_QWORD *)(v0 + 216) = v13;
    OUTLINED_FUNCTION_71();
    sub_1AF6C6F4C(v19, v20, v21);
    v22 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 224) = v22;
    *v22 = v0;
    v22[1] = sub_1AF6C22D0;
    return sub_1AF76A684();
  }
}

uint64_t sub_1AF6C2264()
{
  uint64_t v0;

  sub_1AF6C5970(*(_QWORD *)(v0 + 176), type metadata accessor for LaunchServicesSnapshot.DatabaseVersion);
  swift_task_dealloc();
  OUTLINED_FUNCTION_7_5();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_23_2();
  OUTLINED_FUNCTION_20_1();
  OUTLINED_FUNCTION_104();
  return OUTLINED_FUNCTION_8_5(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1AF6C22D0()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_16_7();
  OUTLINED_FUNCTION_22_6(v2);
  if (v1)
  {
    v0[26] = v1;
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_11_7();
  }
  else
  {
    v0[25] = v0[27];
  }
  OUTLINED_FUNCTION_9_4();
  return OUTLINED_FUNCTION_3_10();
}

uint64_t sub_1AF6C2334(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;

  *(_BYTE *)(v6 + 40) = a6;
  *(_QWORD *)(v6 + 24) = a4;
  *(_QWORD *)(v6 + 32) = a5;
  *(_QWORD *)(v6 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_1AF6C2354()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t (*v4)(void);

  sub_1AF6C70C4(0, &qword_1EEE4C7E0);
  OUTLINED_FUNCTION_6_2();
  v1 = OUTLINED_FUNCTION_106();
  v3 = sub_1AF6C23FC(v1, v2, 0);
  sub_1AF6C24E0(v3, *(uint64_t **)(v0 + 16));
  v4 = (uint64_t (*)(void))OUTLINED_FUNCTION_41_1();
  return v4();
}

id sub_1AF6C23FC(uint64_t a1, uint64_t a2, char a3)
{
  void *v4;
  id v5;
  id v6;
  id v7;
  id v9[2];

  v9[1] = *(id *)MEMORY[0x1E0C80C00];
  v4 = (void *)sub_1AF76A558();
  swift_bridgeObjectRelease();
  v9[0] = 0;
  v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_bundleRecordWithBundleIdentifier_allowPlaceholder_error_, v4, a3 & 1, v9);

  if (v5)
  {
    v6 = v9[0];
  }
  else
  {
    v7 = v9[0];
    sub_1AF76A114();

    swift_willThrow();
  }
  return v5;
}

void sub_1AF6C24E0(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = objc_msgSend(a1, sel_bundleIdentifier);
  if (v4)
  {
    v5 = sub_1AF76A57C();
    v7 = v6;

    v4 = objc_msgSend(a1, sel_persistentIdentifier);
  }
  else
  {

    v5 = 0;
    v7 = 0;
  }
  *a2 = v5;
  a2[1] = v7;
  a2[2] = (uint64_t)v4;
}

uint64_t sub_1AF6C2578(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD v17[4];
  _QWORD v18[4];

  v4 = v3;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4B3E0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AF6C6EF8(a1, (uint64_t)v9, &qword_1EEE4B3E0);
  v10 = sub_1AF76A69C();
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10) == 1)
  {
    sub_1AF6C6F24((uint64_t)v9, &qword_1EEE4B3E0);
  }
  else
  {
    sub_1AF76A690();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  }
  if (*(_QWORD *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    v11 = sub_1AF76A654();
    v13 = v12;
    swift_unknownObjectRelease();
  }
  else
  {
    v11 = 0;
    v13 = 0;
  }
  v14 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4B3C8);
  v15 = (_QWORD *)(v13 | v11);
  if (v13 | v11)
  {
    v18[0] = 0;
    v18[1] = 0;
    v15 = v18;
    v18[2] = v11;
    v18[3] = v13;
  }
  v17[1] = 1;
  v17[2] = v15;
  v17[3] = v14;
  swift_task_create();
  return swift_release();
}

uint64_t sub_1AF6C2704(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[3] = a1;
  v2[4] = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEE4B3F0);
  v2[5] = v3;
  v2[6] = *(_QWORD *)(v3 - 8);
  v2[7] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4B3E0);
  v2[8] = swift_task_alloc();
  type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0);
  v2[9] = swift_task_alloc();
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1AF6C27C8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  static LaunchServicesSnapshot.DatabaseVersion.current.getter(v0[11]);
  v1 = v0[8];
  sub_1AF76A69C();
  OUTLINED_FUNCTION_46_1();
  v2 = OUTLINED_FUNCTION_95();
  *(_QWORD *)(v2 + 16) = 0;
  *(_QWORD *)(v2 + 24) = 0;
  sub_1AF6C2578(v1, (uint64_t)&unk_1EEE4C7F0, v2);
  OUTLINED_FUNCTION_91_0();
  OUTLINED_FUNCTION_46_1();
  v3 = OUTLINED_FUNCTION_95();
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  sub_1AF6C2578(v1, (uint64_t)&unk_1EEE4C800, v3);
  OUTLINED_FUNCTION_91_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4B3C8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED01F870);
  OUTLINED_FUNCTION_108();
  sub_1AF76A6FC();
  sub_1AF6C7088(&qword_1EEE4B3E8, (uint64_t *)&unk_1EEE4B3F0);
  v0[12] = v4;
  v5 = (_QWORD *)swift_task_alloc();
  v0[13] = v5;
  *v5 = v0;
  v5[1] = sub_1AF6C295C;
  return sub_1AF76A684();
}

uint64_t sub_1AF6C295C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_16_7();
  OUTLINED_FUNCTION_22_6(v2);
  if (v1)
  {
    *(_QWORD *)(v0 + 120) = v1;
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_11_7();
  }
  else
  {
    *(_QWORD *)(v0 + 112) = MEMORY[0x1E0DEE9D8];
  }
  OUTLINED_FUNCTION_9_4();
  return OUTLINED_FUNCTION_3_10();
}

void sub_1AF6C29CC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v23;

  v1 = v0[2];
  v2 = v0[14];
  if (!v1)
  {
    v16 = v0[10];
    v17 = v0[11];
    v18 = v0[9];
    v19 = v0[3];
    (*(void (**)(_QWORD, _QWORD))(v0[6] + 8))(v0[7], v0[5]);
    swift_bridgeObjectRelease();
    sub_1AF6C5950(v17, v16, type metadata accessor for LaunchServicesSnapshot.DatabaseVersion);
    sub_1AF6C5950(v16, v18, type metadata accessor for LaunchServicesSnapshot.DatabaseVersion);
    v20 = sub_1AF6BF514(v2);
    sub_1AF6C5970(v16, type metadata accessor for LaunchServicesSnapshot.DatabaseVersion);
    OUTLINED_FUNCTION_1();
    sub_1AF6C5A4C(v18, v19, type metadata accessor for LaunchServicesSnapshot.DatabaseVersion);
    OUTLINED_FUNCTION_17_5();
    *(_QWORD *)(v19 + v21) = v20;
    sub_1AF6C5970(v17, type metadata accessor for LaunchServicesSnapshot.DatabaseVersion);
    OUTLINED_FUNCTION_20_1();
    OUTLINED_FUNCTION_23_2();
    OUTLINED_FUNCTION_12_3();
    OUTLINED_FUNCTION_7_5();
    OUTLINED_FUNCTION_5_3();
    OUTLINED_FUNCTION_41_1();
    OUTLINED_FUNCTION_54_1();
    __asm { BR              X0 }
  }
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v2 + 16);
  v5 = v4 + v3;
  if (__OFADD__(v4, v3))
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = v0[14];
  if (!isUniquelyReferenced_nonNull_native || v5 > *(_QWORD *)(v7 + 24) >> 1)
  {
    if (v4 <= v5)
      v8 = v4 + v3;
    else
      v8 = v4;
    sub_1AF6A68F4(isUniquelyReferenced_nonNull_native, v8, 1, v0[14]);
    v7 = v9;
  }
  v0[16] = v7;
  if (!*(_QWORD *)(v1 + 16))
  {
    if (!v3)
      goto LABEL_21;
    goto LABEL_23;
  }
  v10 = *(_QWORD *)(v7 + 16);
  if ((*(_QWORD *)(v7 + 24) >> 1) - v10 < v3)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v11 = v7 + 24 * v10 + 32;
  if (v1 + 32 < v11 + 24 * v3 && v11 < v1 + 32 + 24 * v3)
    goto LABEL_26;
  swift_arrayInitWithCopy();
  if (!v3)
  {
LABEL_21:
    OUTLINED_FUNCTION_10();
    v23 = (_QWORD *)swift_task_alloc();
    v0[17] = v23;
    *v23 = v0;
    v23[1] = sub_1AF6C2C90;
    OUTLINED_FUNCTION_54_1();
    sub_1AF76A684();
    return;
  }
  v13 = *(_QWORD *)(v7 + 16);
  v14 = __OFADD__(v13, v3);
  v15 = v13 + v3;
  if (!v14)
  {
    *(_QWORD *)(v7 + 16) = v15;
    goto LABEL_21;
  }
LABEL_25:
  __break(1u);
LABEL_26:
  sub_1AF76AA74();
  OUTLINED_FUNCTION_54_1();
}

uint64_t sub_1AF6C2C2C()
{
  uint64_t v0;

  sub_1AF6C5970(*(_QWORD *)(v0 + 88), type metadata accessor for LaunchServicesSnapshot.DatabaseVersion);
  swift_task_dealloc();
  OUTLINED_FUNCTION_7_5();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_23_2();
  OUTLINED_FUNCTION_20_1();
  return OUTLINED_FUNCTION_31_3(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1AF6C2C90()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_16_7();
  OUTLINED_FUNCTION_22_6(v2);
  if (v1)
  {
    v0[15] = v1;
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_11_7();
  }
  else
  {
    v0[14] = v0[16];
  }
  OUTLINED_FUNCTION_9_4();
  return OUTLINED_FUNCTION_3_10();
}

uint64_t sub_1AF6C2CF4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_1AF6C2D0C()
{
  uint64_t v0;
  uint64_t *v1;
  id v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v1 = *(uint64_t **)(v0 + 16);
  v2 = objc_msgSend((id)objc_opt_self(), sel_enumeratorWithOptions_, 0);
  v3 = sub_1AF6BE254(v2);

  *v1 = v3;
  v4 = (uint64_t (*)(void))OUTLINED_FUNCTION_41_1();
  return OUTLINED_FUNCTION_31_3(v4);
}

uint64_t sub_1AF6C2D7C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_1AF6C2D94()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t (*v2)(void);

  v1 = *(uint64_t **)(v0 + 16);
  *v1 = sub_1AF6C2DC0();
  v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_41_1();
  return OUTLINED_FUNCTION_12_6(v2);
}

uint64_t sub_1AF6C2DC0()
{
  unint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;

  sub_1AF6C70C4(0, (unint64_t *)&unk_1EEE4B450);
  v0 = sub_1AF76A888();
  v1 = v0;
  if (!(v0 >> 62))
  {
    v2 = *(_QWORD *)((v0 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v2)
      goto LABEL_3;
LABEL_18:
    v5 = MEMORY[0x1E0DEE9D8];
LABEL_19:
    swift_bridgeObjectRelease_n();
    return v5;
  }
  swift_bridgeObjectRetain();
  result = sub_1AF76AA44();
  v2 = result;
  if (!result)
    goto LABEL_18;
LABEL_3:
  if (v2 >= 1)
  {
    v4 = 0;
    v5 = MEMORY[0x1E0DEE9D8];
    do
    {
      if ((v1 & 0xC000000000000001) != 0)
        v6 = (id)MEMORY[0x1B5DFB164](v4, v1);
      else
        v6 = *(id *)(v1 + 8 * v4 + 32);
      v7 = v6;
      v8 = objc_msgSend(v6, sel_bundleIdentifier);
      if (v8)
      {
        v9 = v8;
        v10 = sub_1AF76A57C();
        v12 = v11;

        v13 = objc_msgSend(v7, sel_persistentIdentifier);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1AF6A68F4(0, *(_QWORD *)(v5 + 16) + 1, 1, v5);
          v5 = v17;
        }
        v15 = *(_QWORD *)(v5 + 16);
        v14 = *(_QWORD *)(v5 + 24);
        if (v15 >= v14 >> 1)
        {
          sub_1AF6A68F4(v14 > 1, v15 + 1, 1, v5);
          v5 = v18;
        }
        *(_QWORD *)(v5 + 16) = v15 + 1;
        v16 = (_QWORD *)(v5 + 24 * v15);
        v16[4] = v10;
        v16[5] = v12;
        v16[6] = v13;
      }
      else
      {

      }
      ++v4;
    }
    while (v2 != v4);
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

void sub_1AF6C2F88()
{
  sub_1AF76AF24();
  OUTLINED_FUNCTION_19();
}

void sub_1AF6C2FA8()
{
  OUTLINED_FUNCTION_28_4();
  sub_1AF76AF24();
  OUTLINED_FUNCTION_27_1();
  OUTLINED_FUNCTION_26_1();
}

void LaunchServicesSnapshot.DatabaseVersion.majorVersionEqual(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4B310);
  OUTLINED_FUNCTION_0_7();
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_4_3();
  v3 = v2 - v1;
  v4 = type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0);
  OUTLINED_FUNCTION_0_7();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_4_3();
  v8 = v7 - v6;
  OUTLINED_FUNCTION_71();
  sub_1AF6C6EF8(v9, v10, v11);
  if (__swift_getEnumTagSinglePayload(v3, 1, v4) == 1)
  {
    sub_1AF6C6F24(v3, &qword_1EEE4B310);
  }
  else
  {
    OUTLINED_FUNCTION_98(v3);
    sub_1AF76A204();
    sub_1AF6C5970(v8, type metadata accessor for LaunchServicesSnapshot.DatabaseVersion);
  }
  OUTLINED_FUNCTION_43();
}

uint64_t LSPersistentIdentifier.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD v9[4];

  v2 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  OUTLINED_FUNCTION_45_1();
  sub_1AF76AF48();
  if (v1)
  {
    OUTLINED_FUNCTION_20_5();
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v9, v9[3]);
    sub_1AF6C5AE8();
    v3 = sub_1AF76AD20();
    OUTLINED_FUNCTION_97(v3, v5, v6);
    v7 = OUTLINED_FUNCTION_45_1();
    sub_1AF6A794C(v7, v8);
    OUTLINED_FUNCTION_45_1();
    v2 = sub_1AF76A180();
    OUTLINED_FUNCTION_89_0();
    OUTLINED_FUNCTION_89_0();
    OUTLINED_FUNCTION_20_5();
  }
  return v2;
}

uint64_t LSPersistentIdentifier.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[24];
  uint64_t v9;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  OUTLINED_FUNCTION_45_1();
  sub_1AF76AF60();
  v1 = sub_1AF76A1B0();
  v3 = v2;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v8, v9);
  sub_1AF6C5B4C();
  sub_1AF76AD44();
  v4 = sub_1AF697C78(v1, v3);
  return OUTLINED_FUNCTION_97(v4, v5, v6);
}

uint64_t sub_1AF6C325C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = LSPersistentIdentifier.init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1AF6C3284(_QWORD *a1)
{
  return LSPersistentIdentifier.encode(to:)(a1);
}

void sub_1AF6C329C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4C7B8);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4C790);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v8 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AF6C6EF8(v0+ OBJC_IVAR____TtCV19VoiceShortcutClient22LaunchServicesSnapshotP33_2DE8BE4BDEA9300B3DAFA689E06A50638Observer_continuation, (uint64_t)v3, &qword_1EEE4C7B8);
  if (__swift_getEnumTagSinglePayload((uint64_t)v3, 1, v4) == 1)
  {
    sub_1AF6C6F24((uint64_t)v3, &qword_1EEE4C7B8);
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
    sub_1AF76A66C();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

id sub_1AF6C33E8()
{
  void *v0;
  objc_class *ObjectType;
  uint64_t v2;
  uint64_t v3;
  objc_super v5;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = (uint64_t)v0
     + OBJC_IVAR____TtCV19VoiceShortcutClient22LaunchServicesSnapshotP33_2DE8BE4BDEA9300B3DAFA689E06A50638Observer_continuation;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4C790);
  __swift_storeEnumTagSinglePayload(v2, 1, 1, v3);
  v5.receiver = v0;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, sel_init);
}

id sub_1AF6C347C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t static LaunchServicesSnapshot.isCompletedSeeding.getter()
{
  return 1;
}

uint64_t static LaunchServicesSnapshot.waitForSeedingComplete(timeout:)()
{
  uint64_t v0;

  return sub_1AF6C5B88(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1AF6C34F0()
{
  uint64_t v0;
  unint64_t v1;

  sub_1AF76A1B0();
  OUTLINED_FUNCTION_34_2();
  return sub_1AF697C78(v0, v1);
}

void sub_1AF6C3528()
{
  sub_1AF76AF24();
  OUTLINED_FUNCTION_19();
}

unint64_t sub_1AF6C3548(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1AF76AF0C();
  return sub_1AF6C3578(a1, v2);
}

unint64_t sub_1AF6C3578(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

uint64_t sub_1AF6C3614(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  char v5;
  unsigned int v6;
  unint64_t v7;
  uint64_t isStackAllocationSafe;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD v13[2];

  v4 = a1;
  v13[1] = *MEMORY[0x1E0C80C00];
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v7 = (unint64_t)((1 << v5) + 63) >> 6;
  isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    v9 = (_QWORD *)((char *)v13 - ((8 * v7 + 15) & 0x3FFFFFFFFFFFFFF0));
    sub_1AF6DA39C(0, v7, v9);
    swift_bridgeObjectRetain();
    v10 = sub_1AF6C37D0((uint64_t)v9, v7, v4, a2);
    if (v2)
      swift_willThrow();
    else
      v4 = v10;
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v11 = (_QWORD *)swift_slowAlloc();
    sub_1AF6DA39C(0, v7, v11);
    swift_bridgeObjectRetain();
    v4 = sub_1AF6C37D0((uint64_t)v11, v7, v4, a2);
    MEMORY[0x1B5DFC6E8](v11, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1AF6C37D0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v21;
  unint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;

  v23 = (unint64_t *)result;
  v24 = 0;
  v6 = 0;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 64);
  v26 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      v10 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v11 = v10 | (v6 << 6);
      goto LABEL_20;
    }
    v12 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v12 >= v26)
      goto LABEL_24;
    v13 = *(_QWORD *)(v25 + 8 * v12);
    ++v6;
    if (!v13)
    {
      v6 = v12 + 1;
      if (v12 + 1 >= v26)
        goto LABEL_24;
      v13 = *(_QWORD *)(v25 + 8 * v6);
      if (!v13)
      {
        v6 = v12 + 2;
        if (v12 + 2 >= v26)
          goto LABEL_24;
        v13 = *(_QWORD *)(v25 + 8 * v6);
        if (!v13)
          break;
      }
    }
LABEL_19:
    v9 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v6 << 6);
LABEL_20:
    v15 = (uint64_t *)(*(_QWORD *)(a3 + 48) + 16 * v11);
    v16 = *v15;
    v17 = v15[1];
    v18 = *(void **)(*(_QWORD *)(a3 + 56) + 24 * v11 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v19 = v18;
    LOBYTE(v16) = sub_1AF6BF82C(v16, v17, a4);
    swift_bridgeObjectRelease();

    result = swift_bridgeObjectRelease();
    if ((v16 & 1) != 0)
    {
      *(unint64_t *)((char *)v23 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      if (__OFADD__(v24++, 1))
      {
        __break(1u);
LABEL_24:
        v21 = sub_1AF6C39E8(v23, a2, v24, a3);
        swift_bridgeObjectRelease();
        return v21;
      }
    }
  }
  v14 = v12 + 3;
  if (v14 >= v26)
    goto LABEL_24;
  v13 = *(_QWORD *)(v25 + 8 * v14);
  if (v13)
  {
    v6 = v14;
    goto LABEL_19;
  }
  while (1)
  {
    v6 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v6 >= v26)
      goto LABEL_24;
    v13 = *(_QWORD *)(v25 + 8 * v6);
    ++v14;
    if (v13)
      goto LABEL_19;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1AF6C39E8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  unint64_t *v35;
  uint64_t v36;
  __int128 v37;

  if (!a3)
    return MEMORY[0x1E0DEE9E0];
  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEE4B498);
  result = sub_1AF76AA68();
  v9 = result;
  v35 = a1;
  v36 = a2;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
    }
    else
    {
      v15 = v11 + 1;
      if (__OFADD__(v11, 1))
        goto LABEL_40;
      if (v15 >= v36)
        return v9;
      v16 = v35[v15];
      ++v11;
      if (!v16)
      {
        v11 = v15 + 1;
        if (v15 + 1 >= v36)
          return v9;
        v16 = v35[v11];
        if (!v16)
        {
          v11 = v15 + 2;
          if (v15 + 2 >= v36)
            return v9;
          v16 = v35[v11];
          if (!v16)
          {
            v17 = v15 + 3;
            if (v17 >= v36)
              return v9;
            v16 = v35[v17];
            if (!v16)
            {
              while (1)
              {
                v11 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_41;
                if (v11 >= v36)
                  return v9;
                v16 = v35[v11];
                ++v17;
                if (v16)
                  goto LABEL_24;
              }
            }
            v11 = v17;
          }
        }
      }
LABEL_24:
      v10 = (v16 - 1) & v16;
      v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    v18 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v14);
    v20 = *v18;
    v19 = v18[1];
    v21 = *(_QWORD *)(v4 + 56) + 24 * v14;
    v22 = *(_QWORD *)v21;
    v37 = *(_OWORD *)(v21 + 8);
    sub_1AF76AF18();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v23 = *((id *)&v37 + 1);
    sub_1AF76A5AC();
    result = sub_1AF76AF3C();
    v24 = -1 << *(_BYTE *)(v9 + 32);
    v25 = result & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v12 + 8 * (v25 >> 6))) == 0)
      break;
    v27 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v12 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
LABEL_34:
    *(_QWORD *)(v12 + ((v27 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v27;
    v32 = (_QWORD *)(*(_QWORD *)(v9 + 48) + 16 * v27);
    *v32 = v20;
    v32[1] = v19;
    v33 = *(_QWORD *)(v9 + 56) + 24 * v27;
    *(_QWORD *)v33 = v22;
    *(_OWORD *)(v33 + 8) = v37;
    ++*(_QWORD *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
      goto LABEL_39;
    if (!v5)
      return v9;
  }
  v28 = 0;
  v29 = (unint64_t)(63 - v24) >> 6;
  while (++v26 != v29 || (v28 & 1) == 0)
  {
    v30 = v26 == v29;
    if (v26 == v29)
      v26 = 0;
    v28 |= v30;
    v31 = *(_QWORD *)(v12 + 8 * v26);
    if (v31 != -1)
    {
      v27 = __clz(__rbit64(~v31)) + (v26 << 6);
      goto LABEL_34;
    }
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1AF6C3CAC(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t i;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;

  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return result;
  v2 = result;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  if (!v6)
    goto LABEL_6;
LABEL_5:
  v9 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (i = v9 | (v8 << 6); ; i = __clz(__rbit64(v12)) + (v8 << 6))
  {
    v14 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * i);
    v15 = *v14;
    v16 = v14[1];
    swift_bridgeObjectRetain();
    sub_1AF6C4F94(v15, v16);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if (v6)
      goto LABEL_5;
LABEL_6:
    v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v11 >= v7)
      return swift_release();
    v12 = *(_QWORD *)(v3 + 8 * v11);
    ++v8;
    if (!v12)
    {
      v8 = v11 + 1;
      if (v11 + 1 >= v7)
        return swift_release();
      v12 = *(_QWORD *)(v3 + 8 * v8);
      if (!v12)
      {
        v8 = v11 + 2;
        if (v11 + 2 >= v7)
          return swift_release();
        v12 = *(_QWORD *)(v3 + 8 * v8);
        if (!v12)
        {
          v8 = v11 + 3;
          if (v11 + 3 >= v7)
            return swift_release();
          v12 = *(_QWORD *)(v3 + 8 * v8);
          if (!v12)
            break;
        }
      }
    }
LABEL_21:
    v6 = (v12 - 1) & v12;
  }
  v13 = v11 + 4;
  if (v13 >= v7)
    return swift_release();
  v12 = *(_QWORD *)(v3 + 8 * v13);
  if (v12)
  {
    v8 = v13;
    goto LABEL_21;
  }
  while (1)
  {
    v8 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v8 >= v7)
      return swift_release();
    v12 = *(_QWORD *)(v3 + 8 * v8);
    ++v13;
    if (v12)
      goto LABEL_21;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1AF6C3E44(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  BOOL v24;
  uint64_t v25;
  _QWORD *v26;
  BOOL v27;
  uint64_t isStackAllocationSafe;
  char v29;
  unint64_t v30;
  size_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int64_t v41;
  unint64_t v42;
  uint64_t v43;

  v2 = a2;
  v43 = *MEMORY[0x1E0C80C00];
  if (*(_QWORD *)(a2 + 16))
  {
    v4 = *(_QWORD *)(a1 + 56);
    v37 = a1 + 56;
    v5 = -1 << *(_BYTE *)(a1 + 32);
    v35 = ~v5;
    if (-v5 < 64)
      v6 = ~(-1 << -(char)v5);
    else
      v6 = -1;
    v7 = v6 & v4;
    v36 = (unint64_t)(63 - v5) >> 6;
    v8 = a2 + 56;
    swift_bridgeObjectRetain();
    v9 = 0;
    if (!v7)
      goto LABEL_7;
LABEL_6:
    v10 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v11 = v10 | (v9 << 6);
    while (1)
    {
      v16 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v11);
      v18 = *v16;
      v17 = v16[1];
      sub_1AF76AF18();
      swift_bridgeObjectRetain();
      sub_1AF76A5AC();
      v19 = sub_1AF76AF3C();
      v20 = -1 << *(_BYTE *)(v2 + 32);
      v21 = v19 & ~v20;
      if (((*(_QWORD *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) != 0)
        break;
LABEL_37:
      swift_bridgeObjectRelease();
      if (v7)
        goto LABEL_6;
LABEL_7:
      v12 = v9 + 1;
      if (__OFADD__(v9, 1))
      {
        __break(1u);
        goto LABEL_50;
      }
      if (v12 >= v36)
        goto LABEL_48;
      v13 = *(_QWORD *)(v37 + 8 * v12);
      v14 = v9 + 1;
      if (!v13)
      {
        v14 = v9 + 2;
        if (v9 + 2 >= v36)
          goto LABEL_48;
        v13 = *(_QWORD *)(v37 + 8 * v14);
        if (!v13)
        {
          v14 = v9 + 3;
          if (v9 + 3 >= v36)
            goto LABEL_48;
          v13 = *(_QWORD *)(v37 + 8 * v14);
          if (!v13)
          {
            v14 = v9 + 4;
            if (v9 + 4 >= v36)
              goto LABEL_48;
            v13 = *(_QWORD *)(v37 + 8 * v14);
            if (!v13)
            {
              v15 = v9 + 5;
              if (v9 + 5 >= v36)
              {
LABEL_48:
                sub_1AF6C6FBC();
                return v2;
              }
              v13 = *(_QWORD *)(v37 + 8 * v15);
              if (!v13)
              {
                while (1)
                {
                  v14 = v15 + 1;
                  if (__OFADD__(v15, 1))
                    break;
                  if (v14 >= v36)
                    goto LABEL_48;
                  v13 = *(_QWORD *)(v37 + 8 * v14);
                  ++v15;
                  if (v13)
                    goto LABEL_22;
                }
LABEL_50:
                __break(1u);
              }
              v14 = v9 + 5;
            }
          }
        }
      }
LABEL_22:
      v7 = (v13 - 1) & v13;
      v11 = __clz(__rbit64(v13)) + (v14 << 6);
      v9 = v14;
    }
    v22 = *(_QWORD *)(v2 + 48);
    v23 = (_QWORD *)(v22 + 16 * v21);
    v24 = *v23 == v18 && v23[1] == v17;
    if (v24 || (sub_1AF76AD14() & 1) != 0)
    {
      isStackAllocationSafe = swift_bridgeObjectRelease();
      v38 = a1;
      v39 = v37;
      v40 = v35;
      v41 = v9;
      v42 = v7;
    }
    else
    {
      v25 = ~v20;
      do
      {
        v21 = (v21 + 1) & v25;
        if (((*(_QWORD *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
          goto LABEL_37;
        v26 = (_QWORD *)(v22 + 16 * v21);
        v27 = *v26 == v18 && v26[1] == v17;
      }
      while (!v27 && (sub_1AF76AD14() & 1) == 0);
      v38 = a1;
      v39 = v37;
      v40 = v35;
      v41 = v9;
      v42 = v7;
      isStackAllocationSafe = swift_bridgeObjectRelease();
    }
    v29 = *(_BYTE *)(v2 + 32);
    v30 = (unint64_t)((1 << v29) + 63) >> 6;
    v31 = 8 * v30;
    if ((v29 & 0x3Fu) < 0xE
      || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
    {
      MEMORY[0x1E0C80A78](isStackAllocationSafe);
      memcpy((char *)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v31);
      v32 = sub_1AF6C5120((uint64_t)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), v30, v2, v21, &v38);
      swift_release();
      sub_1AF6C6FBC();
    }
    else
    {
      v33 = (void *)swift_slowAlloc();
      memcpy(v33, (const void *)(v2 + 56), v31);
      v32 = sub_1AF6C5120((uint64_t)v33, v30, v2, v21, &v38);
      swift_release();
      sub_1AF6C6FBC();
      MEMORY[0x1B5DFC6E8](v33, -1, -1);
    }
    return v32;
  }
  else
  {
    swift_release();
    return MEMORY[0x1E0DEE9E8];
  }
}

uint64_t sub_1AF6C42B4(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t (*v5)(_QWORD *);
  char v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD v12[2];

  v5 = (uint64_t (*)(_QWORD *))isStackAllocationSafe;
  v12[1] = *MEMORY[0x1E0C80C00];
  v6 = *(_BYTE *)(a3 + 32);
  v7 = (unint64_t)((1 << v6) + 63) >> 6;
  if ((v6 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    v8 = (_QWORD *)((char *)v12 - ((8 * v7 + 15) & 0x3FFFFFFFFFFFFFF0));
    sub_1AF6DA39C(0, v7, v8);
    v9 = sub_1AF6C443C((uint64_t)v8, v7, a3, v5);
    swift_release();
    if (v3)
      swift_willThrow();
  }
  else
  {
    v10 = (_QWORD *)swift_slowAlloc();
    sub_1AF6DA39C(0, v7, v10);
    v9 = sub_1AF6C443C((uint64_t)v10, v7, a3, v5);
    swift_release();
    MEMORY[0x1B5DFC6E8](v10, -1, -1);
  }
  return v9;
}

uint64_t sub_1AF6C443C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD *))
{
  uint64_t v4;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  BOOL v13;
  unint64_t v14;
  int64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char v18;
  unint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[2];
  int64_t v24;

  v20 = (unint64_t *)result;
  v7 = 0;
  v21 = 0;
  v22 = a3 + 56;
  v8 = 1 << *(_BYTE *)(a3 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(a3 + 56);
  v24 = (unint64_t)(v8 + 63) >> 6;
  while (v10)
  {
    v11 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    v12 = v11 | (v7 << 6);
LABEL_17:
    v16 = (_QWORD *)(*(_QWORD *)(a3 + 48) + 16 * v12);
    v17 = v16[1];
    v23[0] = *v16;
    v23[1] = v17;
    swift_bridgeObjectRetain();
    v18 = a4(v23);
    result = swift_bridgeObjectRelease();
    if (v4)
      return result;
    if ((v18 & 1) != 0)
    {
      *(unint64_t *)((char *)v20 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = __OFADD__(v21++, 1);
      if (v13)
        goto LABEL_30;
    }
  }
  v13 = __OFADD__(v7++, 1);
  if (v13)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v7 >= v24)
    goto LABEL_26;
  v14 = *(_QWORD *)(v22 + 8 * v7);
  if (v14)
  {
LABEL_16:
    v10 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v7 << 6);
    goto LABEL_17;
  }
  v15 = v7 + 1;
  if (v7 + 1 >= v24)
    goto LABEL_26;
  v14 = *(_QWORD *)(v22 + 8 * v15);
  if (v14)
    goto LABEL_15;
  v15 = v7 + 2;
  if (v7 + 2 >= v24)
    goto LABEL_26;
  v14 = *(_QWORD *)(v22 + 8 * v15);
  if (v14)
    goto LABEL_15;
  v15 = v7 + 3;
  if (v7 + 3 >= v24)
  {
LABEL_26:
    swift_retain();
    return sub_1AF6C4640(v20, a2, v21, a3);
  }
  v14 = *(_QWORD *)(v22 + 8 * v15);
  if (v14)
  {
LABEL_15:
    v7 = v15;
    goto LABEL_16;
  }
  while (1)
  {
    v7 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v7 >= v24)
      goto LABEL_26;
    v14 = *(_QWORD *)(v22 + 8 * v7);
    ++v15;
    if (v14)
      goto LABEL_16;
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1AF6C4640(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v30;

  v4 = a4;
  if (!a3)
  {
    v8 = MEMORY[0x1E0DEE9E8];
LABEL_35:
    swift_release();
    return v8;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEE4B460);
  result = sub_1AF76A948();
  v8 = result;
  v30 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_39;
    if (v14 >= v30)
      goto LABEL_35;
    v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      v10 = v14 + 1;
      if (v14 + 1 >= v30)
        goto LABEL_35;
      v15 = a1[v10];
      if (!v15)
      {
        v10 = v14 + 2;
        if (v14 + 2 >= v30)
          goto LABEL_35;
        v15 = a1[v10];
        if (!v15)
          break;
      }
    }
LABEL_23:
    v9 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v13);
    v18 = *v17;
    v19 = v17[1];
    sub_1AF76AF18();
    swift_bridgeObjectRetain();
    sub_1AF76A5AC();
    result = sub_1AF76AF3C();
    v20 = -1 << *(_BYTE *)(v8 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6))) == 0)
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      while (++v22 != v25 || (v24 & 1) == 0)
      {
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v11 + 8 * v22);
        if (v27 != -1)
        {
          v23 = __clz(__rbit64(~v27)) + (v22 << 6);
          goto LABEL_33;
        }
      }
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_33:
    *(_QWORD *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v28 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v23);
    *v28 = v18;
    v28[1] = v19;
    ++*(_QWORD *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
      goto LABEL_38;
    if (!v5)
      goto LABEL_35;
  }
  v16 = v14 + 3;
  if (v16 >= v30)
    goto LABEL_35;
  v15 = a1[v16];
  if (v15)
  {
    v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= v30)
      goto LABEL_35;
    v15 = a1[v10];
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1AF6C48CC(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3;
  char v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD v10[2];

  v3 = isStackAllocationSafe;
  v10[1] = *MEMORY[0x1E0C80C00];
  v4 = *(_BYTE *)(a2 + 32);
  v5 = (unint64_t)((1 << v4) + 63) >> 6;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    v6 = (_QWORD *)((char *)v10 - ((8 * v5 + 15) & 0x3FFFFFFFFFFFFFF0));
    sub_1AF6DA39C(0, v5, v6);
    v7 = sub_1AF6C4A58((uint64_t)v6, v5, a2, v3);
    swift_release();
  }
  else
  {
    v8 = (_QWORD *)swift_slowAlloc();
    sub_1AF6DA39C(0, v5, v8);
    v7 = sub_1AF6C4A58((uint64_t)v8, v5, a2, v3);
    swift_release();
    MEMORY[0x1B5DFC6E8](v8, -1, -1);
  }
  return v7;
}

uint64_t sub_1AF6C4A58(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  BOOL v27;
  uint64_t v28;
  unint64_t i;
  unint64_t v30;
  _QWORD *v31;
  BOOL v32;
  BOOL v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  int64_t v41;
  unint64_t v42;
  int64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  BOOL v52;
  uint64_t v53;
  _QWORD *v54;
  BOOL v55;
  unint64_t *v57;
  uint64_t v58;
  int64_t v59;
  uint64_t v60;
  uint64_t v61;
  int64_t v62;
  int64_t v63;

  v4 = a4;
  v5 = a3;
  v57 = (unint64_t *)result;
  if (*(_QWORD *)(a4 + 16) >= *(_QWORD *)(a3 + 16))
  {
    v34 = 0;
    v60 = a3 + 56;
    v61 = 0;
    v35 = 1 << *(_BYTE *)(a3 + 32);
    if (v35 < 64)
      v36 = ~(-1 << v35);
    else
      v36 = -1;
    v37 = v36 & *(_QWORD *)(a3 + 56);
    v63 = (unint64_t)(v35 + 63) >> 6;
    v38 = a4 + 56;
    while (1)
    {
      while (1)
      {
        if (v37)
        {
          v39 = __clz(__rbit64(v37));
          v37 &= v37 - 1;
          v40 = v39 | (v34 << 6);
        }
        else
        {
          v41 = v34 + 1;
          if (__OFADD__(v34, 1))
          {
LABEL_81:
            __break(1u);
LABEL_82:
            __break(1u);
LABEL_83:
            __break(1u);
            goto LABEL_84;
          }
          if (v41 >= v63)
            goto LABEL_79;
          v42 = *(_QWORD *)(v60 + 8 * v41);
          ++v34;
          if (!v42)
          {
            v34 = v41 + 1;
            if (v41 + 1 >= v63)
              goto LABEL_79;
            v42 = *(_QWORD *)(v60 + 8 * v34);
            if (!v42)
            {
              v34 = v41 + 2;
              if (v41 + 2 >= v63)
                goto LABEL_79;
              v42 = *(_QWORD *)(v60 + 8 * v34);
              if (!v42)
              {
                v43 = v41 + 3;
                if (v43 >= v63)
                  goto LABEL_79;
                v42 = *(_QWORD *)(v60 + 8 * v43);
                if (!v42)
                {
                  while (1)
                  {
                    v34 = v43 + 1;
                    if (__OFADD__(v43, 1))
                      goto LABEL_85;
                    if (v34 >= v63)
                      break;
                    v42 = *(_QWORD *)(v60 + 8 * v34);
                    ++v43;
                    if (v42)
                      goto LABEL_61;
                  }
LABEL_79:
                  swift_retain();
                  return sub_1AF6C4640(v57, a2, v61, v5);
                }
                v34 = v43;
              }
            }
          }
LABEL_61:
          v37 = (v42 - 1) & v42;
          v40 = __clz(__rbit64(v42)) + (v34 << 6);
        }
        v44 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v40);
        v46 = *v44;
        v45 = v44[1];
        sub_1AF76AF18();
        swift_bridgeObjectRetain();
        sub_1AF76A5AC();
        v47 = sub_1AF76AF3C();
        v48 = -1 << *(_BYTE *)(v4 + 32);
        v49 = v47 & ~v48;
        if (((*(_QWORD *)(v38 + ((v49 >> 3) & 0xFFFFFFFFFFFFF8)) >> v49) & 1) != 0)
          break;
LABEL_78:
        result = swift_bridgeObjectRelease();
        v5 = a3;
        v4 = a4;
      }
      v50 = *(_QWORD *)(a4 + 48);
      v51 = (_QWORD *)(v50 + 16 * v49);
      v52 = *v51 == v46 && v51[1] == v45;
      if (!v52 && (sub_1AF76AD14() & 1) == 0)
      {
        v53 = ~v48;
        do
        {
          v49 = (v49 + 1) & v53;
          if (((*(_QWORD *)(v38 + ((v49 >> 3) & 0xFFFFFFFFFFFFF8)) >> v49) & 1) == 0)
            goto LABEL_78;
          v54 = (_QWORD *)(v50 + 16 * v49);
          v55 = *v54 == v46 && v54[1] == v45;
        }
        while (!v55 && (sub_1AF76AD14() & 1) == 0);
      }
      result = swift_bridgeObjectRelease();
      *(unint64_t *)((char *)v57 + ((v40 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v40;
      v33 = __OFADD__(v61++, 1);
      v5 = a3;
      v4 = a4;
      if (v33)
        goto LABEL_83;
    }
  }
  v6 = 0;
  v58 = a4 + 56;
  v7 = 1 << *(_BYTE *)(a4 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  v59 = (unint64_t)(v7 + 63) >> 6;
  v61 = 0;
  v10 = a3 + 56;
  while (1)
  {
    if (v9)
    {
      v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v62 = v6;
      v12 = v11 | (v6 << 6);
      goto LABEL_22;
    }
    v13 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_81;
    }
    if (v13 >= v59)
      goto LABEL_79;
    v14 = *(_QWORD *)(v58 + 8 * v13);
    v15 = v6 + 1;
    if (!v14)
    {
      v15 = v6 + 2;
      if (v6 + 2 >= v59)
        goto LABEL_79;
      v14 = *(_QWORD *)(v58 + 8 * v15);
      if (!v14)
      {
        v15 = v6 + 3;
        if (v6 + 3 >= v59)
          goto LABEL_79;
        v14 = *(_QWORD *)(v58 + 8 * v15);
        if (!v14)
          break;
      }
    }
LABEL_21:
    v9 = (v14 - 1) & v14;
    v62 = v15;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
LABEL_22:
    v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    v19 = *v17;
    v18 = v17[1];
    sub_1AF76AF18();
    swift_bridgeObjectRetain();
    sub_1AF76A5AC();
    v20 = sub_1AF76AF3C();
    v21 = -1 << *(_BYTE *)(v5 + 32);
    v22 = v20 & ~v21;
    v23 = v22 >> 6;
    v24 = 1 << v22;
    if (((1 << v22) & *(_QWORD *)(v10 + 8 * (v22 >> 6))) == 0)
      goto LABEL_36;
    v25 = *(_QWORD *)(a3 + 48);
    v26 = (_QWORD *)(v25 + 16 * v22);
    v27 = *v26 == v19 && v26[1] == v18;
    if (v27 || (sub_1AF76AD14() & 1) != 0)
    {
      result = swift_bridgeObjectRelease();
LABEL_38:
      v6 = v62;
      v5 = a3;
      v57[v23] |= v24;
      v33 = __OFADD__(v61++, 1);
      v4 = a4;
      if (v33)
        goto LABEL_82;
    }
    else
    {
      v28 = ~v21;
      for (i = v22 + 1; ; i = v30 + 1)
      {
        v30 = i & v28;
        if (((*(_QWORD *)(v10 + (((i & v28) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v28)) & 1) == 0)
          break;
        v31 = (_QWORD *)(v25 + 16 * v30);
        v32 = *v31 == v19 && v31[1] == v18;
        if (v32 || (sub_1AF76AD14() & 1) != 0)
        {
          result = swift_bridgeObjectRelease();
          v23 = v30 >> 6;
          v24 = 1 << v30;
          goto LABEL_38;
        }
      }
LABEL_36:
      result = swift_bridgeObjectRelease();
      v6 = v62;
      v5 = a3;
      v4 = a4;
    }
  }
  v16 = v6 + 4;
  if (v6 + 4 >= v59)
    goto LABEL_79;
  v14 = *(_QWORD *)(v58 + 8 * v16);
  if (v14)
  {
    v15 = v6 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v59)
      goto LABEL_79;
    v14 = *(_QWORD *)(v58 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_21;
  }
LABEL_84:
  __break(1u);
LABEL_85:
  __break(1u);
  return result;
}

uint64_t sub_1AF6C4F94(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v19;

  v5 = *v2;
  sub_1AF76AF18();
  swift_bridgeObjectRetain();
  sub_1AF76A5AC();
  v6 = sub_1AF76AF3C();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  v9 = *(_QWORD *)(v5 + 48);
  v10 = (_QWORD *)(v9 + 16 * v8);
  v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (sub_1AF76AD14() & 1) == 0)
  {
    v15 = ~v7;
    do
    {
      v8 = (v8 + 1) & v15;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_18;
      v16 = (_QWORD *)(v9 + 16 * v8);
      v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (sub_1AF76AD14() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v13 = *v2;
  v19 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1AF6CF9A8();
    v13 = v19;
  }
  v14 = *(_QWORD *)(*(_QWORD *)(v13 + 48) + 16 * v8);
  sub_1AF6C53F8(v8);
  *v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1AF6C5120(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  BOOL v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t i;
  unint64_t v33;
  _QWORD *v34;
  BOOL v35;
  uint64_t v37;
  unint64_t *v38;
  uint64_t v39;

  v7 = *(_QWORD *)(a3 + 16);
  v38 = (unint64_t *)result;
  *(_QWORD *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v8 = v7 - 1;
  v39 = a3 + 56;
  while (2)
  {
    v37 = v8;
    do
    {
      while (1)
      {
        v9 = a5[3];
        v10 = a5[4];
        if (v10)
        {
          v11 = (v10 - 1) & v10;
          v12 = __clz(__rbit64(v10)) | (v9 << 6);
        }
        else
        {
          v13 = v9 + 1;
          if (__OFADD__(v9, 1))
          {
            __break(1u);
            goto LABEL_46;
          }
          v14 = (unint64_t)(a5[2] + 64) >> 6;
          v15 = a5[3];
          if (v13 >= v14)
            goto LABEL_44;
          v16 = a5[1];
          v17 = *(_QWORD *)(v16 + 8 * v13);
          if (!v17)
          {
            v15 = v9 + 1;
            if (v9 + 2 >= v14)
              goto LABEL_44;
            v17 = *(_QWORD *)(v16 + 8 * (v9 + 2));
            if (v17)
            {
              v13 = v9 + 2;
            }
            else
            {
              v15 = v9 + 2;
              if (v9 + 3 >= v14)
                goto LABEL_44;
              v17 = *(_QWORD *)(v16 + 8 * (v9 + 3));
              if (v17)
              {
                v13 = v9 + 3;
              }
              else
              {
                v13 = v9 + 4;
                v15 = v9 + 3;
                if (v9 + 4 >= v14)
                  goto LABEL_44;
                v17 = *(_QWORD *)(v16 + 8 * v13);
                if (!v17)
                {
                  v18 = v9 + 5;
                  while (v18 < v14)
                  {
                    v17 = *(_QWORD *)(v16 + 8 * v18++);
                    if (v17)
                    {
                      v13 = v18 - 1;
                      goto LABEL_20;
                    }
                  }
                  v15 = v14 - 1;
LABEL_44:
                  a5[3] = v15;
                  a5[4] = 0;
                  swift_retain();
                  return sub_1AF6C4640(v38, a2, v37, a3);
                }
              }
            }
          }
LABEL_20:
          v11 = (v17 - 1) & v17;
          v12 = __clz(__rbit64(v17)) + (v13 << 6);
          v9 = v13;
        }
        v19 = (uint64_t *)(*(_QWORD *)(*a5 + 48) + 16 * v12);
        v21 = *v19;
        v20 = v19[1];
        a5[3] = v9;
        a5[4] = v11;
        sub_1AF76AF18();
        swift_bridgeObjectRetain();
        sub_1AF76A5AC();
        v22 = sub_1AF76AF3C();
        v23 = -1 << *(_BYTE *)(a3 + 32);
        v24 = v22 & ~v23;
        v25 = v24 >> 6;
        v26 = 1 << v24;
        if (((1 << v24) & *(_QWORD *)(v39 + 8 * (v24 >> 6))) != 0)
          break;
LABEL_38:
        result = swift_bridgeObjectRelease();
      }
      v27 = *(_QWORD *)(a3 + 48);
      v28 = (_QWORD *)(v27 + 16 * v24);
      v29 = *v28 == v21 && v28[1] == v20;
      if (!v29 && (sub_1AF76AD14() & 1) == 0)
      {
        v31 = ~v23;
        for (i = v24 + 1; ; i = v33 + 1)
        {
          v33 = i & v31;
          if (((*(_QWORD *)(v39 + (((i & v31) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v31)) & 1) == 0)
            break;
          v34 = (_QWORD *)(v27 + 16 * v33);
          v35 = *v34 == v21 && v34[1] == v20;
          if (v35 || (sub_1AF76AD14() & 1) != 0)
          {
            result = swift_bridgeObjectRelease();
            v25 = v33 >> 6;
            v26 = 1 << v33;
            goto LABEL_28;
          }
        }
        goto LABEL_38;
      }
      result = swift_bridgeObjectRelease();
LABEL_28:
      v30 = v38[v25];
      v38[v25] = v30 & ~v26;
    }
    while ((v26 & v30) == 0);
    v8 = v37 - 1;
    if (__OFSUB__(v37, 1))
    {
LABEL_46:
      __break(1u);
      return result;
    }
    if (v37 != 1)
      continue;
    return MEMORY[0x1E0DEE9E8];
  }
}

unint64_t sub_1AF6C53F8(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  BOOL v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_1AF76A90C();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        sub_1AF76AF18();
        swift_bridgeObjectRetain();
        sub_1AF76A5AC();
        v10 = sub_1AF76AF3C();
        swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 >= v9 && v2 >= (uint64_t)v11)
          {
LABEL_15:
            v14 = *(_QWORD *)(v3 + 48);
            v15 = (_OWORD *)(v14 + 16 * v2);
            v16 = (_OWORD *)(v14 + 16 * v6);
            v17 = v2 != v6 || v15 >= v16 + 1;
            v2 = v6;
            if (v17)
            {
              *v15 = *v16;
              v2 = v6;
            }
          }
        }
        else if (v11 >= v9 || v2 >= (uint64_t)v11)
        {
          goto LABEL_15;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v18 = *(_QWORD *)(v3 + 16);
  v19 = __OFSUB__(v18, 1);
  v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

void sub_1AF6C55B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  unint64_t i;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;

  v20 = a2 + 64;
  OUTLINED_FUNCTION_12_8();
  v4 = v3 & v2;
  v19 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain();
  v6 = 0;
  v7 = 0;
  if (!v4)
    goto LABEL_3;
LABEL_2:
  OUTLINED_FUNCTION_111();
  for (i = v8 | (v7 << 6); ; i = __clz(__rbit64(v11)) + (v7 << 6))
  {
    v13 = *(void **)(*(_QWORD *)(a2 + 56) + 24 * i + 16);
    OUTLINED_FUNCTION_35_1();
    OUTLINED_FUNCTION_6_2();
    v14 = v13;
    sub_1AF76A5AC();
    OUTLINED_FUNCTION_1();
    OUTLINED_FUNCTION_6_2();
    sub_1AF76A5AC();
    swift_bridgeObjectRelease();
    v15 = v14;
    v16 = sub_1AF76A1B0();
    v18 = v17;
    sub_1AF76A1BC();
    sub_1AF697C78(v16, v18);
    swift_bridgeObjectRelease();

    v6 ^= sub_1AF76AF3C();
    if (v4)
      goto LABEL_2;
LABEL_3:
    v10 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_19;
    }
    if (v10 >= v19)
      goto LABEL_17;
    v11 = *(_QWORD *)(v20 + 8 * v10);
    ++v7;
    if (!v11)
    {
      v7 = v10 + 1;
      if (v10 + 1 >= v19)
        goto LABEL_17;
      v11 = *(_QWORD *)(v20 + 8 * v7);
      if (!v11)
        break;
    }
LABEL_14:
    v4 = (v11 - 1) & v11;
  }
  v12 = v10 + 2;
  if (v12 >= v19)
  {
LABEL_17:
    swift_release();
    sub_1AF76AF24();
    OUTLINED_FUNCTION_25_3();
    return;
  }
  v11 = *(_QWORD *)(v20 + 8 * v12);
  if (v11)
  {
    v7 = v12;
    goto LABEL_14;
  }
  while (1)
  {
    v7 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v7 >= v19)
      goto LABEL_17;
    v11 = *(_QWORD *)(v20 + 8 * v7);
    ++v12;
    if (v11)
      goto LABEL_14;
  }
LABEL_19:
  __break(1u);
}

unint64_t sub_1AF6C578C()
{
  unint64_t result;

  result = qword_1EEE4B328;
  if (!qword_1EEE4B328)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77B860, &type metadata for LaunchServicesSnapshot.State.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4B328);
  }
  return result;
}

uint64_t type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(uint64_t a1)
{
  return sub_1AF6B75E4(a1, (uint64_t *)&unk_1EEE4B300);
}

unint64_t sub_1AF6C57DC()
{
  unint64_t result;

  result = qword_1EEE4B2D8;
  if (!qword_1EEE4B2D8)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77B810, &type metadata for LaunchServicesSnapshot.DatabaseVersion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4B2D8);
  }
  return result;
}

uint64_t type metadata accessor for LaunchServicesSnapshot(uint64_t a1)
{
  return sub_1AF6B75E4(a1, (uint64_t *)&unk_1EEE4B358);
}

unint64_t sub_1AF6C582C()
{
  unint64_t result;

  result = qword_1EEE4B2C0;
  if (!qword_1EEE4B2C0)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77B7C0, &type metadata for LaunchServicesSnapshot.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4B2C0);
  }
  return result;
}

unint64_t sub_1AF6C5868()
{
  unint64_t result;

  result = qword_1EEE4C6F8;
  if (!qword_1EEE4C6F8)
  {
    result = MEMORY[0x1B5DFC634](&protocol conformance descriptor for LaunchServicesSnapshot.State, &type metadata for LaunchServicesSnapshot.State);
    atomic_store(result, (unint64_t *)&qword_1EEE4C6F8);
  }
  return result;
}

uint64_t sub_1AF6C58A4(unint64_t *a1, void (*a2)(void))
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE4B3A0);
    a2();
    v5 = OUTLINED_FUNCTION_108();
    result = MEMORY[0x1B5DFC634](v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1AF6C5914()
{
  unint64_t result;

  result = qword_1EEE4B340;
  if (!qword_1EEE4B340)
  {
    result = MEMORY[0x1B5DFC634](&protocol conformance descriptor for LaunchServicesSnapshot.State, &type metadata for LaunchServicesSnapshot.State);
    atomic_store(result, (unint64_t *)&qword_1EEE4B340);
  }
  return result;
}

void sub_1AF6C5950(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_54_0(a1, a2, a3);
  OUTLINED_FUNCTION_39(v3);
  OUTLINED_FUNCTION_19();
}

void sub_1AF6C5970(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  v2 = a2(0);
  OUTLINED_FUNCTION_51_0(v2);
  OUTLINED_FUNCTION_19();
}

uint64_t type metadata accessor for LaunchServicesSnapshot.Delta(uint64_t a1)
{
  return sub_1AF6B75E4(a1, (uint64_t *)&unk_1EEE4B318);
}

unint64_t sub_1AF6C59AC()
{
  unint64_t result;

  result = qword_1EEE4C700;
  if (!qword_1EEE4C700)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77B780, &type metadata for LaunchServicesSnapshot.DatabaseVersion.LaunchServicesError);
    atomic_store(result, (unint64_t *)&qword_1EEE4C700);
  }
  return result;
}

uint64_t sub_1AF6C59E8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = swift_task_alloc();
  v2 = (_QWORD *)OUTLINED_FUNCTION_52_1(v1);
  *v2 = v0;
  v2[1] = sub_1AF6C7198;
  OUTLINED_FUNCTION_63_1();
  return OUTLINED_FUNCTION_28_5(v3, v4);
}

BOOL sub_1AF6C5A30(uint64_t *a1)
{
  uint64_t v1;

  return sub_1AF6C13D8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1AF6C5A4C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = OUTLINED_FUNCTION_54_0(a1, a2, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v3, v4, v5);
  OUTLINED_FUNCTION_19();
}

uint64_t sub_1AF6C5A80()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_BYTE *)(v0 + 24);
  v3 = swift_task_alloc();
  v4 = (_QWORD *)OUTLINED_FUNCTION_52_1(v3);
  *v4 = v1;
  v4[1] = sub_1AF6C7198;
  OUTLINED_FUNCTION_71();
  return sub_1AF6C1B28(v5, v6, v7, v2);
}

unint64_t sub_1AF6C5AE8()
{
  unint64_t result;

  result = qword_1EEE4B078;
  if (!qword_1EEE4B078)
  {
    result = MEMORY[0x1B5DFC634](MEMORY[0x1E0CB0378], MEMORY[0x1E0CB0338]);
    atomic_store(result, (unint64_t *)&qword_1EEE4B078);
  }
  return result;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

unint64_t sub_1AF6C5B4C()
{
  unint64_t result;

  result = qword_1EEE4C750;
  if (!qword_1EEE4C750)
  {
    result = MEMORY[0x1B5DFC634](MEMORY[0x1E0CB0350], MEMORY[0x1E0CB0338]);
    atomic_store(result, (unint64_t *)&qword_1EEE4C750);
  }
  return result;
}

uint64_t sub_1AF6C5B88(uint64_t (*a1)(void))
{
  return a1();
}

unint64_t sub_1AF6C5B98()
{
  unint64_t result;

  result = qword_1EEE4C760;
  if (!qword_1EEE4C760)
  {
    result = MEMORY[0x1B5DFC634](&protocol conformance descriptor for LaunchServicesSnapshot.State, &type metadata for LaunchServicesSnapshot.State);
    atomic_store(result, (unint64_t *)&qword_1EEE4C760);
  }
  return result;
}

void sub_1AF6C5BD4()
{
  sub_1AF697B8C(&qword_1EEE4B2F0, type metadata accessor for LaunchServicesSnapshot.DatabaseVersion, (uint64_t)&protocol conformance descriptor for LaunchServicesSnapshot.DatabaseVersion);
}

void sub_1AF6C5C00()
{
  sub_1AF697B8C(&qword_1EEE4C768, type metadata accessor for LaunchServicesSnapshot, (uint64_t)&protocol conformance descriptor for LaunchServicesSnapshot);
}

uint64_t *initializeBufferWithCopyOfBuffer for LaunchServicesSnapshot(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1AF76A234();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0);
    *(uint64_t *)((char *)a1 + *(int *)(v8 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v8 + 20));
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for LaunchServicesSnapshot(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1AF76A234();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LaunchServicesSnapshot(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1AF76A234();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0);
  *(_QWORD *)(a1 + *(int *)(v7 + 20)) = *(_QWORD *)(a2 + *(int *)(v7 + 20));
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LaunchServicesSnapshot(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1AF76A234();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0);
  *(_QWORD *)(a1 + *(int *)(v7 + 20)) = *(_QWORD *)(a2 + *(int *)(v7 + 20));
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for LaunchServicesSnapshot(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1AF76A234();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0);
  *(_QWORD *)(a1 + *(int *)(v7 + 20)) = *(_QWORD *)(a2 + *(int *)(v7 + 20));
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for LaunchServicesSnapshot(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1AF76A234();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0);
  *(_QWORD *)(a1 + *(int *)(v7 + 20)) = *(_QWORD *)(a2 + *(int *)(v7 + 20));
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LaunchServicesSnapshot()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AF6C5EF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, type metadata accessor for LaunchServicesSnapshot.DatabaseVersion);
}

uint64_t storeEnumTagSinglePayload for LaunchServicesSnapshot()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1AF6C5F10(uint64_t a1, int a2, int a3, uint64_t a4)
{
  __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, type metadata accessor for LaunchServicesSnapshot.DatabaseVersion);
}

uint64_t sub_1AF6C5F1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AF6C62FC(a1, a2, a3, type metadata accessor for LaunchServicesSnapshot.DatabaseVersion);
}

void destroy for LaunchServicesSnapshot.State(uint64_t a1)
{
  swift_bridgeObjectRelease();

}

void _s19VoiceShortcutClient22LaunchServicesSnapshotV5StateVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  void *v4;
  id v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = (void *)a2[2];
  a1[2] = v4;
  swift_bridgeObjectRetain();
  v5 = v4;
  OUTLINED_FUNCTION_19();
}

_QWORD *assignWithCopy for LaunchServicesSnapshot.State(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a2[2];
  v5 = (void *)a1[2];
  a1[2] = v4;
  v6 = v4;

  return a1;
}

uint64_t assignWithTake for LaunchServicesSnapshot.State(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  return a1;
}

ValueMetadata *type metadata accessor for LaunchServicesSnapshot.State()
{
  return &type metadata for LaunchServicesSnapshot.State;
}

uint64_t *initializeBufferWithCopyOfBuffer for LaunchServicesSnapshot.DatabaseVersion(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1AF76A234();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t destroy for LaunchServicesSnapshot.DatabaseVersion(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1AF76A234();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for LaunchServicesSnapshot.DatabaseVersion(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1AF76A234();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithCopy for LaunchServicesSnapshot.DatabaseVersion(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1AF76A234();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t initializeWithTake for LaunchServicesSnapshot.DatabaseVersion(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1AF76A234();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for LaunchServicesSnapshot.DatabaseVersion(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1AF76A234();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for LaunchServicesSnapshot.DatabaseVersion()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AF6C6280(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_18_7();
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for LaunchServicesSnapshot.DatabaseVersion()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AF6C62BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_18_7();
  v0 = OUTLINED_FUNCTION_79_0();
  return __swift_storeEnumTagSinglePayload(v0, v1, v2, v3);
}

uint64_t sub_1AF6C62E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AF6C62FC(a1, a2, a3, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998]);
}

uint64_t sub_1AF6C62FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result;
  unint64_t v5;

  result = a4(319);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for LaunchServicesSnapshot.Delta(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1AF76A234();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0);
    *(uint64_t *)((char *)a1 + *(int *)(v8 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v8 + 20));
    v9 = type metadata accessor for LaunchServicesSnapshot(0);
    *(uint64_t *)((char *)a1 + *(int *)(v9 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v9 + 20));
    v10 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    *(uint64_t *)((char *)a1 + v10) = *(uint64_t *)((char *)a2 + v10);
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for LaunchServicesSnapshot.Delta(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1AF76A234();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  type metadata accessor for LaunchServicesSnapshot(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LaunchServicesSnapshot.Delta(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_1AF76A234();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0);
  *(_QWORD *)(a1 + *(int *)(v7 + 20)) = *(_QWORD *)(a2 + *(int *)(v7 + 20));
  v8 = type metadata accessor for LaunchServicesSnapshot(0);
  *(_QWORD *)(a1 + *(int *)(v8 + 20)) = *(_QWORD *)(a2 + *(int *)(v8 + 20));
  v9 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LaunchServicesSnapshot.Delta(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1AF76A234();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0);
  *(_QWORD *)(a1 + *(int *)(v7 + 20)) = *(_QWORD *)(a2 + *(int *)(v7 + 20));
  v8 = type metadata accessor for LaunchServicesSnapshot(0);
  *(_QWORD *)(a1 + *(int *)(v8 + 20)) = *(_QWORD *)(a2 + *(int *)(v8 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for LaunchServicesSnapshot.Delta(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_1AF76A234();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0);
  *(_QWORD *)(a1 + *(int *)(v7 + 20)) = *(_QWORD *)(a2 + *(int *)(v7 + 20));
  v8 = type metadata accessor for LaunchServicesSnapshot(0);
  *(_QWORD *)(a1 + *(int *)(v8 + 20)) = *(_QWORD *)(a2 + *(int *)(v8 + 20));
  v9 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithTake for LaunchServicesSnapshot.Delta(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1AF76A234();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0);
  *(_QWORD *)(a1 + *(int *)(v7 + 20)) = *(_QWORD *)(a2 + *(int *)(v7 + 20));
  v8 = type metadata accessor for LaunchServicesSnapshot(0);
  *(_QWORD *)(a1 + *(int *)(v8 + 20)) = *(_QWORD *)(a2 + *(int *)(v8 + 20));
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LaunchServicesSnapshot.Delta()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AF6C67B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, type metadata accessor for LaunchServicesSnapshot);
}

uint64_t __swift_get_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v7;
  unint64_t v9;

  v7 = a4(0);
  if (*(_DWORD *)(*(_QWORD *)(v7 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1, a2, v7);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for LaunchServicesSnapshot.Delta()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1AF6C6848(uint64_t a1, int a2, int a3, uint64_t a4)
{
  __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, type metadata accessor for LaunchServicesSnapshot);
}

void __swift_store_extra_inhabitant_indexTm(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (*(_DWORD *)(*(_QWORD *)(a5(0) - 8) + 84) == a3)
  {
    v8 = OUTLINED_FUNCTION_79_0();
    __swift_storeEnumTagSinglePayload(v8, v9, v10, v11);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
    OUTLINED_FUNCTION_9();
  }
}

uint64_t sub_1AF6C68B4()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for LaunchServicesSnapshot(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1AF6C692C()
{
  return type metadata accessor for LaunchServicesSnapshot.Observer(0);
}

uint64_t type metadata accessor for LaunchServicesSnapshot.Observer(uint64_t a1)
{
  return sub_1AF6B75E4(a1, (uint64_t *)&unk_1EEE4C778);
}

void sub_1AF6C6948()
{
  unint64_t v0;

  sub_1AF6C69B4();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_1AF6C69B4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEE4C788)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE4C790);
    v0 = sub_1AF76A8AC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEE4C788);
  }
}

uint64_t storeEnumTagSinglePayload for LaunchServicesSnapshot.DatabaseVersion.LaunchServicesError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1AF6C6A4C + 4 * byte_1AF77B1A0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1AF6C6A6C + 4 * byte_1AF77B1A5[v4]))();
}

_BYTE *sub_1AF6C6A4C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1AF6C6A6C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AF6C6A74(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AF6C6A7C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AF6C6A84(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AF6C6A8C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for LaunchServicesSnapshot.DatabaseVersion.LaunchServicesError()
{
  return &type metadata for LaunchServicesSnapshot.DatabaseVersion.LaunchServicesError;
}

ValueMetadata *type metadata accessor for LaunchServicesSnapshot.CodingKeys()
{
  return &type metadata for LaunchServicesSnapshot.CodingKeys;
}

ValueMetadata *type metadata accessor for LaunchServicesSnapshot.DatabaseVersion.CodingKeys()
{
  return &type metadata for LaunchServicesSnapshot.DatabaseVersion.CodingKeys;
}

uint64_t _s19VoiceShortcutClient22LaunchServicesSnapshotV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AF6C6B18 + 4 * byte_1AF77B1AF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AF6C6B4C + 4 * byte_1AF77B1AA[v4]))();
}

uint64_t sub_1AF6C6B4C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AF6C6B54(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AF6C6B5CLL);
  return result;
}

uint64_t sub_1AF6C6B68(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AF6C6B70);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AF6C6B74(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AF6C6B7C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LaunchServicesSnapshot.State.CodingKeys()
{
  return &type metadata for LaunchServicesSnapshot.State.CodingKeys;
}

unint64_t sub_1AF6C6B9C()
{
  unint64_t result;

  result = qword_1EEE4C798;
  if (!qword_1EEE4C798)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77B580, &type metadata for LaunchServicesSnapshot.State.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4C798);
  }
  return result;
}

unint64_t sub_1AF6C6BDC()
{
  unint64_t result;

  result = qword_1EEE4C7A0;
  if (!qword_1EEE4C7A0)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77B638, &type metadata for LaunchServicesSnapshot.DatabaseVersion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4C7A0);
  }
  return result;
}

unint64_t sub_1AF6C6C1C()
{
  unint64_t result;

  result = qword_1EEE4C7A8;
  if (!qword_1EEE4C7A8)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77B6F0, &type metadata for LaunchServicesSnapshot.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4C7A8);
  }
  return result;
}

unint64_t sub_1AF6C6C5C()
{
  unint64_t result;

  result = qword_1EEE4C7B0;
  if (!qword_1EEE4C7B0)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77B758, &type metadata for LaunchServicesSnapshot.DatabaseVersion.LaunchServicesError);
    atomic_store(result, (unint64_t *)&qword_1EEE4C7B0);
  }
  return result;
}

unint64_t sub_1AF6C6C9C()
{
  unint64_t result;

  result = qword_1EEE4B2D0;
  if (!qword_1EEE4B2D0)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77B660, &type metadata for LaunchServicesSnapshot.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4B2D0);
  }
  return result;
}

unint64_t sub_1AF6C6CDC()
{
  unint64_t result;

  result = qword_1EEE4B2C8;
  if (!qword_1EEE4B2C8)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77B688, &type metadata for LaunchServicesSnapshot.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4B2C8);
  }
  return result;
}

unint64_t sub_1AF6C6D1C()
{
  unint64_t result;

  result = qword_1EEE4B2E8;
  if (!qword_1EEE4B2E8)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77B5A8, &type metadata for LaunchServicesSnapshot.DatabaseVersion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4B2E8);
  }
  return result;
}

unint64_t sub_1AF6C6D5C()
{
  unint64_t result;

  result = qword_1EEE4B2E0;
  if (!qword_1EEE4B2E0)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77B5D0, &type metadata for LaunchServicesSnapshot.DatabaseVersion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4B2E0);
  }
  return result;
}

unint64_t sub_1AF6C6D9C()
{
  unint64_t result;

  result = qword_1EEE4B338;
  if (!qword_1EEE4B338)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77B4F0, &type metadata for LaunchServicesSnapshot.State.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4B338);
  }
  return result;
}

unint64_t sub_1AF6C6DDC()
{
  unint64_t result;

  result = qword_1EEE4B330;
  if (!qword_1EEE4B330)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77B518, &type metadata for LaunchServicesSnapshot.State.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4B330);
  }
  return result;
}

uint64_t sub_1AF6C6E18()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1AF6C6E44(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = *(_BYTE *)(v1 + 48);
  v9 = swift_task_alloc();
  v10 = (_QWORD *)OUTLINED_FUNCTION_52_1(v9);
  *v10 = v2;
  v10[1] = sub_1AF6C6EC0;
  return sub_1AF6C2334(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1AF6C6EC0()
{
  uint64_t *v0;
  uint64_t v2;

  OUTLINED_FUNCTION_61();
  v2 = *v0;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_12_6(*(uint64_t (**)(void))(v2 + 8));
}

void sub_1AF6C6EF8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a3);
  OUTLINED_FUNCTION_39(v3);
  OUTLINED_FUNCTION_19();
}

void sub_1AF6C6F24(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_51_0(v2);
  OUTLINED_FUNCTION_19();
}

void sub_1AF6C6F4C(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2 != 1)
    sub_1AF6C6F5C(a1, a2, a3);
}

void sub_1AF6C6F5C(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    swift_bridgeObjectRelease();

  }
}

id sub_1AF6C6F8C(uint64_t a1, uint64_t a2, void *a3)
{
  id result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    return a3;
  }
  return result;
}

uint64_t sub_1AF6C6FBC()
{
  return swift_release();
}

uint64_t sub_1AF6C6FC4()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1AF6C6FE8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_52_1(v0);
  v2 = OUTLINED_FUNCTION_64_1(v1);
  return sub_1AF6C2CF4(v2);
}

uint64_t sub_1AF6C7038()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_52_1(v0);
  v2 = OUTLINED_FUNCTION_64_1(v1);
  return sub_1AF6C2D7C(v2);
}

void sub_1AF6C7088(unint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  if (!*a1)
  {
    v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    atomic_store(MEMORY[0x1B5DFC634](MEMORY[0x1E0DF09A0], v3), a1);
  }
  OUTLINED_FUNCTION_19();
}

uint64_t sub_1AF6C70C4(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1AF6C70FC(uint64_t a1, uint64_t a2, uint64_t a3, const void *a4)
{
  uint64_t result;
  char *v8;
  BOOL v9;
  int64_t v10;
  size_t v11;

  result = sub_1AF76A054();
  v8 = (char *)result;
  if (result)
  {
    result = sub_1AF76A06C();
    if (__OFSUB__(a1, result))
    {
LABEL_12:
      __break(1u);
      goto LABEL_13;
    }
    v8 += a1 - result;
  }
  v9 = __OFSUB__(a2, a1);
  v10 = a2 - a1;
  if (v9)
  {
    __break(1u);
    goto LABEL_12;
  }
  result = sub_1AF76A060();
  if (!a4)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!v8)
  {
LABEL_14:
    __break(1u);
    return result;
  }
  if (result >= v10)
    v11 = v10;
  else
    v11 = result;
  return memcmp(a4, v8, v11) == 0;
}

uint64_t OUTLINED_FUNCTION_0_13()
{
  unint64_t v0;
  uint64_t v1;

  return sub_1AF697C78(v1, v0);
}

uint64_t OUTLINED_FUNCTION_2_9()
{
  unint64_t v0;
  uint64_t v1;

  return sub_1AF6A794C(v1, v0);
}

uint64_t OUTLINED_FUNCTION_3_10()
{
  return swift_task_switch();
}

uint64_t OUTLINED_FUNCTION_4_9()
{
  unint64_t v0;
  uint64_t v1;

  return sub_1AF697C78(v1, v0);
}

void OUTLINED_FUNCTION_6_9(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, int a17, char a18, int a19, char a20,int a21,char a22,int a23,char a24,int a25,char a26,int a27,char a28,int a29,char a30)
{
  char v30;
  uint64_t v31;

  *(_BYTE *)(v31 - 115) = a16;
  *(_BYTE *)(v31 - 114) = a18;
  *(_BYTE *)(v31 - 113) = a20;
  *(_BYTE *)(v31 - 112) = v30;
  *(_BYTE *)(v31 - 111) = a22;
  *(_BYTE *)(v31 - 110) = a24;
  *(_BYTE *)(v31 - 109) = a26;
  *(_BYTE *)(v31 - 108) = a28;
  *(_BYTE *)(v31 - 107) = a30;
}

uint64_t OUTLINED_FUNCTION_8_11(uint64_t a1, uint64_t a2)
{
  const void *v2;
  uint64_t v3;

  return sub_1AF6C70FC(a1, a2, v3, v2);
}

uint64_t OUTLINED_FUNCTION_11_7()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_14_6()
{
  return sub_1AF76AB64();
}

uint64_t OUTLINED_FUNCTION_15_7@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

void OUTLINED_FUNCTION_16_7()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t OUTLINED_FUNCTION_17_5()
{
  return type metadata accessor for LaunchServicesSnapshot(0);
}

uint64_t OUTLINED_FUNCTION_18_7()
{
  return sub_1AF76A234();
}

uint64_t OUTLINED_FUNCTION_20_5()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0);
}

uint64_t OUTLINED_FUNCTION_22_6@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_27_2()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_28_5(uint64_t a1, uint64_t a2)
{
  return sub_1AF6C2704(a1, a2);
}

uint64_t OUTLINED_FUNCTION_29_2()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_31_3(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_32_3()
{
  return swift_task_switch();
}

void OUTLINED_FUNCTION_33_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, int a14, char a15, int a16, char a17)
{
  char v17;
  uint64_t v18;

  *(_BYTE *)(v18 - 120) = v17;
  *(_BYTE *)(v18 - 119) = a13;
  *(_BYTE *)(v18 - 118) = a15;
  *(_BYTE *)(v18 - 117) = a17;
}

uint64_t OUTLINED_FUNCTION_34_2()
{
  return sub_1AF76A1BC();
}

uint64_t OUTLINED_FUNCTION_35_1()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_39(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v1, v2, a1);
}

uint64_t OUTLINED_FUNCTION_41_1()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

void OUTLINED_FUNCTION_42_1()
{
  uint64_t v0;

}

unint64_t OUTLINED_FUNCTION_44_0()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1AF6842A4(v1, v0);
}

uint64_t OUTLINED_FUNCTION_45_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_46_1()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v0, 1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_48_0()
{
  return sub_1AF76AA98();
}

uint64_t OUTLINED_FUNCTION_49_1@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_50_0()
{
  return type metadata accessor for LaunchServicesSnapshot(0);
}

uint64_t OUTLINED_FUNCTION_51_0(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

uint64_t OUTLINED_FUNCTION_52_1(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_53_1()
{
  return sub_1AF76AF6C();
}

uint64_t OUTLINED_FUNCTION_58_1(uint64_t a1)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + *(int *)(a1 + 20));
}

uint64_t OUTLINED_FUNCTION_59_1()
{
  return sub_1AF76AF24();
}

void OUTLINED_FUNCTION_60_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,void *a31)
{

}

void OUTLINED_FUNCTION_61()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t OUTLINED_FUNCTION_64_1(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t OUTLINED_FUNCTION_65_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_66_0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, size_t __n)
{
  const void *v12;
  uint64_t v13;

  return memcmp(v12, (const void *)(v13 - 120), __n);
}

uint64_t OUTLINED_FUNCTION_68_0()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_72_0()
{
  return type metadata accessor for LaunchServicesSnapshot.Delta(0);
}

uint64_t OUTLINED_FUNCTION_73()
{
  return type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0);
}

void OUTLINED_FUNCTION_74_0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 1;
}

uint64_t OUTLINED_FUNCTION_75_0()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_78_0()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_79_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_81_0()
{
  return sub_1AF76A204();
}

uint64_t OUTLINED_FUNCTION_82_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_83_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_87_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_88()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0);
}

uint64_t OUTLINED_FUNCTION_89_0()
{
  uint64_t v0;
  unint64_t v1;

  return sub_1AF697C78(v0, v1);
}

void OUTLINED_FUNCTION_91_0()
{
  uint64_t v0;
  uint64_t *v1;

  sub_1AF6C6F24(v0, v1);
}

uint64_t OUTLINED_FUNCTION_92_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_93_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_94()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_95()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_96()
{
  return sub_1AF76AAF8();
}

uint64_t OUTLINED_FUNCTION_97(uint64_t a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)va);
}

void OUTLINED_FUNCTION_98(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(_QWORD);

  sub_1AF6C5A4C(a1, v1, v2);
}

uint64_t OUTLINED_FUNCTION_100(uint64_t a1, uint64_t a2, size_t a3)
{
  const void *v3;
  uint64_t v4;

  return memcmp((const void *)(v4 - 120), v3, a3);
}

uint64_t OUTLINED_FUNCTION_102()
{
  return swift_release();
}

void OUTLINED_FUNCTION_103(char a1, uint64_t a2)
{
  uint64_t v2;

  sub_1AF6A68F4(a1, a2, 1, v2);
}

uint64_t OUTLINED_FUNCTION_104()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_106()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_107()
{
  uint64_t v0;
  unint64_t v1;

  return sub_1AF697C78(v0, v1);
}

uint64_t OUTLINED_FUNCTION_108()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_110()
{
  return sub_1AF76A1B0();
}

void sub_1AF6C7640()
{
  sub_1AF76AF24();
  OUTLINED_FUNCTION_19();
}

void sub_1AF6C7660()
{
  sub_1AF6C7640();
}

uint64_t XPCSecureCodedArray.wrappedValue.getter()
{
  return swift_bridgeObjectRetain();
}

void XPCSecureCodedArray.wrappedValue.setter(uint64_t a1)
{
  _QWORD *v1;

  swift_bridgeObjectRelease();
  *v1 = a1;
  OUTLINED_FUNCTION_19();
}

uint64_t (*XPCSecureCodedArray.wrappedValue.modify())()
{
  return nullsub_1;
}

uint64_t XPCSecureCodedArray.init(wrappedValue:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

void XPCSecureCodedArray.init(from:)(uint64_t a1)
{
  uint64_t v2;
  _BYTE *v3;

  sub_1AF6C7704();
  objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_classForCoder);
  sub_1AF6C7740();
  v2 = OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_3_5(v2, v3);
  __swift_destroy_boxed_opaque_existential_1(a1);
  OUTLINED_FUNCTION_19();
}

unint64_t sub_1AF6C7704()
{
  unint64_t result;

  result = qword_1EEE4C810;
  if (!qword_1EEE4C810)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EEE4C810);
  }
  return result;
}

unint64_t sub_1AF6C7740()
{
  unint64_t result;

  result = qword_1EEE4C818[0];
  if (!qword_1EEE4C818[0])
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77BA50, &type metadata for XPCSecureCodingError);
    atomic_store(result, qword_1EEE4C818);
  }
  return result;
}

void XPCSecureCodedArray.encode(to:)()
{
  void *v0;
  uint64_t v1;
  _BYTE *v2;

  v0 = (void *)sub_1AF76A5F4();
  sub_1AF6C7740();
  v1 = OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_3_5(v1, v2);

  OUTLINED_FUNCTION_19();
}

void sub_1AF6C77C4(uint64_t a1)
{
  XPCSecureCodedArray.init(from:)(a1);
}

void sub_1AF6C77D8()
{
  XPCSecureCodedArray.encode(to:)();
}

uint64_t XPCSecureCoded.wrappedValue.getter()
{
  return swift_unknownObjectRetain();
}

void XPCSecureCoded.wrappedValue.setter(uint64_t a1)
{
  _QWORD *v1;

  swift_unknownObjectRelease();
  *v1 = a1;
  OUTLINED_FUNCTION_19();
}

uint64_t (*XPCSecureCoded.wrappedValue.modify())()
{
  return nullsub_1;
}

uint64_t XPCSecureCoded.init(wrappedValue:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

void XPCSecureCoded.init(from:)(uint64_t a1)
{
  uint64_t v2;
  _BYTE *v3;

  sub_1AF6C7740();
  v2 = OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_3_5(v2, v3);
  __swift_destroy_boxed_opaque_existential_1(a1);
  OUTLINED_FUNCTION_19();
}

uint64_t XPCSecureCoded.encode(to:)()
{
  uint64_t v0;
  _BYTE *v1;

  sub_1AF6C7740();
  v0 = OUTLINED_FUNCTION_5();
  return OUTLINED_FUNCTION_3_5(v0, v1);
}

void sub_1AF6C78A8(uint64_t a1)
{
  XPCSecureCoded.init(from:)(a1);
}

uint64_t sub_1AF6C78BC()
{
  return XPCSecureCoded.encode(to:)();
}

uint64_t type metadata accessor for XPCSecureCodedArray(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for XPCSecureCodedArray);
}

uint64_t type metadata accessor for XPCSecureCoded(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for XPCSecureCoded);
}

uint64_t storeEnumTagSinglePayload for XPCSecureCodingError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AF6C7934 + 4 * byte_1AF77B8B5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AF6C7968 + 4 * byte_1AF77B8B0[v4]))();
}

uint64_t sub_1AF6C7968(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AF6C7970(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AF6C7978);
  return result;
}

uint64_t sub_1AF6C7984(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AF6C798CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AF6C7990(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AF6C7998(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for XPCSecureCodingError()
{
  return &type metadata for XPCSecureCodingError;
}

unint64_t sub_1AF6C79B8()
{
  unint64_t result;

  result = qword_1EEE4C980;
  if (!qword_1EEE4C980)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77BA28, &type metadata for XPCSecureCodingError);
    atomic_store(result, (unint64_t *)&qword_1EEE4C980);
  }
  return result;
}

uint64_t ToolKitIndexingReason.id.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_18_7();
  v0 = OUTLINED_FUNCTION_93_1();
  return OUTLINED_FUNCTION_68_1(v0, v1, v2, v3);
}

void ToolKitIndexingReason.trigger.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + *(int *)(type metadata accessor for ToolKitIndexingReason(0) + 20));
  OUTLINED_FUNCTION_19();
}

uint64_t type metadata accessor for ToolKitIndexingReason(uint64_t a1)
{
  return sub_1AF6B75E4(a1, (uint64_t *)&unk_1EEE4A2C8);
}

unint64_t ToolKitIndexingReason.changeset.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t *v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v3 = (unint64_t *)(v1 + *(int *)(OUTLINED_FUNCTION_96_0() + 24));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  return sub_1AF6C7A94(v4);
}

unint64_t sub_1AF6C7A94(unint64_t result)
{
  if (result >= 2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t ToolKitIndexingReason.Trigger.debugDescription.getter()
{
  _BYTE *v0;
  unint64_t result;

  result = 0xD000000000000010;
  switch(*v0)
  {
    case 2:
      result = 0x6E5574737269662ELL;
      break;
    case 3:
      return result;
    case 4:
    case 9:
      result = 0xD000000000000015;
      break;
    case 5:
      result = 0xD000000000000019;
      break;
    case 6:
      result = 0xD00000000000001ALL;
      break;
    case 7:
      result = 0xD00000000000001ELL;
      break;
    case 8:
      result = 0xD000000000000011;
      break;
    case 0xA:
    case 0xB:
      result = 0x657272656665642ELL;
      break;
    default:
      OUTLINED_FUNCTION_41_2();
      sub_1AF76A960();
      OUTLINED_FUNCTION_116();
      sub_1AF76A5B8();
      OUTLINED_FUNCTION_10();
      OUTLINED_FUNCTION_73_0();
      result = 0x286C61756E616D2ELL;
      break;
  }
  return result;
}

BOOL ToolKitIndexingReason.Trigger.autoScheduled.getter()
{
  unsigned __int8 *v0;

  return *v0 - 2 < 0xA;
}

void ToolKitIndexingReason.Trigger.hash(into:)()
{
  _BYTE *v0;

  switch(*v0)
  {
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 0xA:
    case 0xB:
      sub_1AF76AF24();
      break;
    default:
      sub_1AF76AF24();
      sub_1AF76AF30();
      break;
  }
  OUTLINED_FUNCTION_19();
}

uint64_t static ToolKitIndexingReason.Trigger.== infix(_:_:)(_BYTE *a1, unsigned __int8 *a2)
{
  int v2;
  char v3;

  v2 = *a2;
  switch(*a1)
  {
    case 2:
      if (v2 == 2)
        goto LABEL_23;
      goto LABEL_24;
    case 3:
      if (v2 != 3)
        goto LABEL_24;
      goto LABEL_23;
    case 4:
      if (v2 != 4)
        goto LABEL_24;
      goto LABEL_23;
    case 5:
      if (v2 != 5)
        goto LABEL_24;
      goto LABEL_23;
    case 6:
      if (v2 != 6)
        goto LABEL_24;
      goto LABEL_23;
    case 7:
      if (v2 != 7)
        goto LABEL_24;
      goto LABEL_23;
    case 8:
      if (v2 != 8)
        goto LABEL_24;
      goto LABEL_23;
    case 9:
      if (v2 != 9)
        goto LABEL_24;
      goto LABEL_23;
    case 0xA:
      if (v2 == 10)
        goto LABEL_23;
      goto LABEL_24;
    case 0xB:
      if (v2 != 11)
        goto LABEL_24;
LABEL_23:
      v3 = 1;
      break;
    default:
      if ((v2 - 2) < 0xA)
LABEL_24:
        v3 = 0;
      else
        v3 = ((*a1 & 1) == 0) ^ v2;
      break;
  }
  return v3 & 1;
}

uint64_t sub_1AF6C7E08(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  char v10;

  v3 = a1 == 0x6C61756E616DLL && a2 == 0xE600000000000000;
  if (v3 || (sub_1AF76AD14() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6C6E557473726966 && a2 == 0xEB000000006B636FLL;
    if (v6 || (sub_1AF76AD14() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x656C756465686373 && a2 == 0xEF6465746F6F4272;
      if (v7 || (sub_1AF76AD14() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000014 && a2 == 0x80000001AF781E80 || (sub_1AF76AD14() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0xD000000000000019 && a2 == 0x80000001AF781EA0 || (sub_1AF76AD14() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else if (a1 == 0xD000000000000019 && a2 == 0x80000001AF781EC0 || (sub_1AF76AD14() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 5;
      }
      else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001AF781EE0 || (sub_1AF76AD14() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 6;
      }
      else if (a1 == 0xD000000000000010 && a2 == 0x80000001AF781F00 || (sub_1AF76AD14() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 7;
      }
      else if (a1 == 0xD000000000000014 && a2 == 0x80000001AF781F20 || (sub_1AF76AD14() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 8;
      }
      else
      {
        v8 = a1 == 0x6465727265666564 && a2 == 0xEC0000006C6C7546;
        if (v8 || (sub_1AF76AD14() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 9;
        }
        else if (a1 == 0x6465727265666564 && a2 == 0xED000061746C6544)
        {
          swift_bridgeObjectRelease();
          return 10;
        }
        else
        {
          v10 = sub_1AF76AD14();
          swift_bridgeObjectRelease();
          if ((v10 & 1) != 0)
            return 10;
          else
            return 11;
        }
      }
    }
  }
}

uint64_t sub_1AF6C8238()
{
  return 11;
}

uint64_t sub_1AF6C8240(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1AF6C8278 + 4 * byte_1AF77BAAE[a1]))(0xD000000000000014, 0x80000001AF781E80);
}

uint64_t sub_1AF6C8278()
{
  return 0x6C61756E616DLL;
}

uint64_t sub_1AF6C828C()
{
  return 0x6C6E557473726966;
}

uint64_t sub_1AF6C82AC()
{
  return 0x656C756465686373;
}

uint64_t sub_1AF6C82D0(uint64_t a1)
{
  return a1 + 5;
}

uint64_t sub_1AF6C8358(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x6563726F66 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1AF76AD14();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1AF6C83D4()
{
  return 0x6563726F66;
}

uint64_t sub_1AF6C83E8()
{
  sub_1AF6C8E9C();
  return sub_1AF76AF90();
}

uint64_t sub_1AF6C8410()
{
  sub_1AF6C8E9C();
  return sub_1AF76AF9C();
}

uint64_t sub_1AF6C8438()
{
  sub_1AF6C8ED8();
  return sub_1AF76AF90();
}

uint64_t sub_1AF6C8460()
{
  sub_1AF6C8ED8();
  return sub_1AF76AF9C();
}

uint64_t sub_1AF6C848C()
{
  unsigned __int8 *v0;

  return sub_1AF6C8240(*v0);
}

uint64_t sub_1AF6C8494@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AF6C7E08(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AF6C84B8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1AF6C8238();
  *a1 = result;
  return result;
}

uint64_t sub_1AF6C84DC()
{
  sub_1AF6C8D34();
  return sub_1AF76AF90();
}

uint64_t sub_1AF6C8504()
{
  sub_1AF6C8D34();
  return sub_1AF76AF9C();
}

uint64_t sub_1AF6C852C()
{
  sub_1AF6C8D70();
  return sub_1AF76AF90();
}

uint64_t sub_1AF6C8554()
{
  sub_1AF6C8D70();
  return sub_1AF76AF9C();
}

uint64_t sub_1AF6C857C()
{
  sub_1AF6C8DAC();
  return sub_1AF76AF90();
}

uint64_t sub_1AF6C85A4()
{
  sub_1AF6C8DAC();
  return sub_1AF76AF9C();
}

uint64_t sub_1AF6C85CC()
{
  sub_1AF6C8F8C();
  return sub_1AF76AF90();
}

uint64_t sub_1AF6C85F4()
{
  sub_1AF6C8F8C();
  return sub_1AF76AF9C();
}

uint64_t sub_1AF6C861C()
{
  sub_1AF6C8E24();
  return sub_1AF76AF90();
}

uint64_t sub_1AF6C8644()
{
  sub_1AF6C8E24();
  return sub_1AF76AF9C();
}

uint64_t sub_1AF6C866C()
{
  sub_1AF6C8E60();
  return sub_1AF76AF90();
}

uint64_t sub_1AF6C8694()
{
  sub_1AF6C8E60();
  return sub_1AF76AF9C();
}

uint64_t sub_1AF6C86C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AF6C8358(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1AF6C86E8()
{
  sub_1AF6C8FC8();
  return sub_1AF76AF90();
}

uint64_t sub_1AF6C8710()
{
  sub_1AF6C8FC8();
  return sub_1AF76AF9C();
}

uint64_t sub_1AF6C8738()
{
  sub_1AF6C8F50();
  return sub_1AF76AF90();
}

uint64_t sub_1AF6C8760()
{
  sub_1AF6C8F50();
  return sub_1AF76AF9C();
}

uint64_t sub_1AF6C8788()
{
  sub_1AF6C8F14();
  return sub_1AF76AF90();
}

uint64_t sub_1AF6C87B0()
{
  sub_1AF6C8F14();
  return sub_1AF76AF9C();
}

uint64_t sub_1AF6C87D8()
{
  sub_1AF6C8DE8();
  return sub_1AF76AF90();
}

uint64_t sub_1AF6C8800()
{
  sub_1AF6C8DE8();
  return sub_1AF76AF9C();
}

void ToolKitIndexingReason.Trigger.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  _QWORD *v62;
  void (*v63)(uint64_t, uint64_t);
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  uint64_t v93;

  OUTLINED_FUNCTION_46();
  a19 = v26;
  a20 = v27;
  v91 = v21;
  v29 = v28;
  v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEE4B560);
  v86 = *(_QWORD *)(v30 - 8);
  v87 = v30;
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v31);
  OUTLINED_FUNCTION_34_1(v32, v67);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4B558);
  OUTLINED_FUNCTION_32_4(v33, (uint64_t)&v93);
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v34);
  OUTLINED_FUNCTION_2_8();
  OUTLINED_FUNCTION_114(v35);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4B590);
  v84 = *(_QWORD *)(v36 - 8);
  v85 = v36;
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v37);
  OUTLINED_FUNCTION_64_2(v38, v68);
  v39 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEE4B578);
  v82 = *(_QWORD *)(v39 - 8);
  v83 = v39;
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v40);
  OUTLINED_FUNCTION_63_2(v41, v69);
  v42 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEE4B5B0);
  v80 = *(_QWORD *)(v42 - 8);
  v81 = v42;
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v43);
  OUTLINED_FUNCTION_2_8();
  v79 = v44;
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4B598);
  v77 = *(_QWORD *)(v45 - 8);
  v78 = v45;
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v46);
  OUTLINED_FUNCTION_2_8();
  v76 = v47;
  v75 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEE4B5A0);
  v74 = *(_QWORD *)(v75 - 8);
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v48);
  OUTLINED_FUNCTION_2_8();
  OUTLINED_FUNCTION_114(v49);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4B588);
  OUTLINED_FUNCTION_32_4(v50, (uint64_t)&a16);
  v73 = v51;
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v52);
  OUTLINED_FUNCTION_2_8();
  OUTLINED_FUNCTION_114(v53);
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4B570);
  v71 = *(_QWORD *)(v72 - 8);
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v54);
  OUTLINED_FUNCTION_2_8();
  OUTLINED_FUNCTION_114(v55);
  v56 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEE4B548);
  OUTLINED_FUNCTION_32_4(v56, (uint64_t)&a10);
  v70 = v57;
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v58);
  OUTLINED_FUNCTION_25_4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4B540);
  OUTLINED_FUNCTION_40_0();
  MEMORY[0x1E0C80A78](v59);
  OUTLINED_FUNCTION_46_0();
  v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4B538);
  v88 = *(_QWORD *)(v90 - 8);
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v60);
  OUTLINED_FUNCTION_47_0();
  v61 = *v20;
  v62 = __swift_project_boxed_opaque_existential_1(v29, v29[3]);
  sub_1AF6C8D34();
  sub_1AF76AF6C();
  switch(v61)
  {
    case 2:
      OUTLINED_FUNCTION_130();
      v62 = v89;
      OUTLINED_FUNCTION_6_10();
      v63 = *(void (**)(uint64_t, uint64_t))(v70 + 8);
      v64 = v23;
      v65 = &a10;
      goto LABEL_14;
    case 3:
      OUTLINED_FUNCTION_128();
      OUTLINED_FUNCTION_5_8();
      v64 = OUTLINED_FUNCTION_27_3();
      v65 = &a13;
      goto LABEL_14;
    case 4:
      OUTLINED_FUNCTION_123();
      OUTLINED_FUNCTION_5_8();
      v64 = OUTLINED_FUNCTION_27_3();
      v65 = &a16;
      goto LABEL_14;
    case 5:
      OUTLINED_FUNCTION_121();
      OUTLINED_FUNCTION_5_8();
      v64 = OUTLINED_FUNCTION_27_3();
      v66 = v75;
      goto LABEL_15;
    case 6:
      OUTLINED_FUNCTION_118();
      OUTLINED_FUNCTION_5_8();
      goto LABEL_12;
    case 7:
      OUTLINED_FUNCTION_117();
      OUTLINED_FUNCTION_5_8();
      goto LABEL_12;
    case 8:
      OUTLINED_FUNCTION_113();
      OUTLINED_FUNCTION_5_8();
      goto LABEL_12;
    case 9:
      OUTLINED_FUNCTION_112();
      OUTLINED_FUNCTION_5_8();
      goto LABEL_12;
    case 10:
      OUTLINED_FUNCTION_106_0();
      OUTLINED_FUNCTION_5_8();
      v64 = OUTLINED_FUNCTION_27_3();
      v65 = &v93;
LABEL_14:
      v66 = *(v65 - 32);
      goto LABEL_15;
    case 11:
      OUTLINED_FUNCTION_110_0();
      OUTLINED_FUNCTION_5_8();
LABEL_12:
      v64 = OUTLINED_FUNCTION_27_3();
LABEL_15:
      v63(v64, v66);
      OUTLINED_FUNCTION_24_3((uint64_t)v62, *(uint64_t (**)(uint64_t, uint64_t))(v88 + 8));
      break;
    default:
      v92 = 0;
      sub_1AF6C8FC8();
      OUTLINED_FUNCTION_42_0();
      sub_1AF76AB4C();
      OUTLINED_FUNCTION_8_9(v25, *(uint64_t (**)(uint64_t, uint64_t))(v24 + 8));
      OUTLINED_FUNCTION_9_7(v22, *(uint64_t (**)(uint64_t, uint64_t))(v88 + 8));
      break;
  }
  OUTLINED_FUNCTION_2_2();
}

unint64_t sub_1AF6C8D34()
{
  unint64_t result;

  result = qword_1EEE4B0C0;
  if (!qword_1EEE4B0C0)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77D670, &type metadata for ToolKitIndexingReason.Trigger.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4B0C0);
  }
  return result;
}

unint64_t sub_1AF6C8D70()
{
  unint64_t result;

  result = qword_1EEE4B118;
  if (!qword_1EEE4B118)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77D620, &type metadata for ToolKitIndexingReason.Trigger.DeferredDeltaCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4B118);
  }
  return result;
}

unint64_t sub_1AF6C8DAC()
{
  unint64_t result;

  result = qword_1EEE4CA00;
  if (!qword_1EEE4CA00)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77D5D0, &type metadata for ToolKitIndexingReason.Trigger.DeferredFullCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4CA00);
  }
  return result;
}

unint64_t sub_1AF6C8DE8()
{
  unint64_t result;

  result = qword_1EEE4CA08;
  if (!qword_1EEE4CA08)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77D580, &type metadata for ToolKitIndexingReason.Trigger.SiriLanguagesChangedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4CA08);
  }
  return result;
}

unint64_t sub_1AF6C8E24()
{
  unint64_t result;

  result = qword_1EEE4CA10;
  if (!qword_1EEE4CA10)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77D530, &type metadata for ToolKitIndexingReason.Trigger.LanguagesChangedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4CA10);
  }
  return result;
}

unint64_t sub_1AF6C8E60()
{
  unint64_t result;

  result = qword_1EEE4CA18;
  if (!qword_1EEE4CA18)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77D4E0, &type metadata for ToolKitIndexingReason.Trigger.LaunchServicesDatabaseChangedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4CA18);
  }
  return result;
}

unint64_t sub_1AF6C8E9C()
{
  unint64_t result;

  result = qword_1EEE4CA20;
  if (!qword_1EEE4CA20)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77D490, &type metadata for ToolKitIndexingReason.Trigger.AppIntentsDatabaseChangedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4CA20);
  }
  return result;
}

unint64_t sub_1AF6C8ED8()
{
  unint64_t result;

  result = qword_1EEE4CA28;
  if (!qword_1EEE4CA28)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77D440, &type metadata for ToolKitIndexingReason.Trigger.AppProtectionStateChangedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4CA28);
  }
  return result;
}

unint64_t sub_1AF6C8F14()
{
  unint64_t result;

  result = qword_1EEE4CA30;
  if (!qword_1EEE4CA30)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77D3F0, &type metadata for ToolKitIndexingReason.Trigger.ShortcutsAppLaunchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4CA30);
  }
  return result;
}

unint64_t sub_1AF6C8F50()
{
  unint64_t result;

  result = qword_1EEE4CA38;
  if (!qword_1EEE4CA38)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77D3A0, &type metadata for ToolKitIndexingReason.Trigger.SchedulerBootedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4CA38);
  }
  return result;
}

unint64_t sub_1AF6C8F8C()
{
  unint64_t result;

  result = qword_1EEE4CA40;
  if (!qword_1EEE4CA40)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77D350, &type metadata for ToolKitIndexingReason.Trigger.FirstUnlockCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4CA40);
  }
  return result;
}

unint64_t sub_1AF6C8FC8()
{
  unint64_t result;

  result = qword_1EEE4CA48;
  if (!qword_1EEE4CA48)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77D300, &type metadata for ToolKitIndexingReason.Trigger.ManualCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4CA48);
  }
  return result;
}

void ToolKitIndexingReason.Trigger.hashValue.getter()
{
  sub_1AF76AF18();
  ToolKitIndexingReason.Trigger.hash(into:)();
  sub_1AF76AF3C();
  OUTLINED_FUNCTION_26_1();
}

void ToolKitIndexingReason.Trigger.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  OUTLINED_FUNCTION_46();
  a19 = v22;
  a20 = v23;
  v25 = v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4CA50);
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v26);
  OUTLINED_FUNCTION_2_8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4CA58);
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v27);
  OUTLINED_FUNCTION_12_4(v28, v59);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4CA60);
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v29);
  OUTLINED_FUNCTION_2_8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4CA68);
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v30);
  OUTLINED_FUNCTION_20_6(v31, v60);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4CA70);
  OUTLINED_FUNCTION_32_4(v32, (uint64_t)&a17);
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v33);
  OUTLINED_FUNCTION_18_8(v34, v61);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4CA78);
  OUTLINED_FUNCTION_32_4(v35, (uint64_t)&a15);
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v36);
  OUTLINED_FUNCTION_64_2(v37, v62);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4CA80);
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v38);
  OUTLINED_FUNCTION_2_8();
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4CA88);
  OUTLINED_FUNCTION_32_4(v39, (uint64_t)&a11);
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v40);
  OUTLINED_FUNCTION_2_8();
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4CA90);
  OUTLINED_FUNCTION_32_4(v41, (uint64_t)&a9);
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v42);
  OUTLINED_FUNCTION_63_2(v43, v63);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4CA98);
  OUTLINED_FUNCTION_32_4(v44, (uint64_t)&v66);
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v45);
  OUTLINED_FUNCTION_2_8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4CAA0);
  OUTLINED_FUNCTION_44_1();
  MEMORY[0x1E0C80A78](v46);
  OUTLINED_FUNCTION_18_1();
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4CAA8);
  v48 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_71_0();
  sub_1AF6C8D34();
  sub_1AF76AF54();
  if (v20)
  {
    v49 = v25;
  }
  else
  {
    v64 = v48;
    v65 = v21;
    v50 = sub_1AF76AB04();
    if (*(_QWORD *)(v50 + 16))
    {
      OUTLINED_FUNCTION_120();
      v51 = *(unsigned __int8 *)(v50 + 32);
      sub_1AF6BB1C4(1);
      v53 = v52;
      v55 = v54;
      swift_bridgeObjectRelease();
      if (v53 == v55 >> 1)
        __asm { BR              X9 }
      v49 = v25;
    }
    else
    {
      v49 = v25;
    }
    v56 = OUTLINED_FUNCTION_30_1();
    OUTLINED_FUNCTION_5();
    v58 = v57;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4B8C0);
    *v58 = &type metadata for ToolKitIndexingReason.Trigger;
    sub_1AF76AAB0();
    OUTLINED_FUNCTION_107_0();
    OUTLINED_FUNCTION_10_4();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v56 - 8) + 104))(v58, *MEMORY[0x1E0DEC450], v56);
    swift_willThrow();
    OUTLINED_FUNCTION_12_7();
    OUTLINED_FUNCTION_9_8(v65, *(uint64_t (**)(uint64_t, uint64_t))(v64 + 8));
  }
  __swift_destroy_boxed_opaque_existential_1(v49);
  OUTLINED_FUNCTION_2_2();
}

void sub_1AF6C94CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, _QWORD);

  OUTLINED_FUNCTION_130();
  OUTLINED_FUNCTION_4_10();
  if (!v0)
  {
    v1 = OUTLINED_FUNCTION_21_4();
    OUTLINED_FUNCTION_38_0(v1, v2);
    OUTLINED_FUNCTION_12_7();
    OUTLINED_FUNCTION_1_9();
    JUMPOUT(0x1AF6C97E8);
  }
  OUTLINED_FUNCTION_12_7();
  OUTLINED_FUNCTION_22_2();
  JUMPOUT(0x1AF6C9774);
}

#error "1AF6C9828: call analysis failed (funcsize=5)"

#error "1AF6C983C: call analysis failed (funcsize=5)"

uint64_t sub_1AF6C9850()
{
  sub_1AF76AF18();
  ToolKitIndexingReason.Trigger.hash(into:)();
  return sub_1AF76AF3C();
}

void ToolKitIndexingReason.Changeset.Provenance.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t (*v10)(_QWORD);
  uint64_t v11;
  uint64_t v12;

  v3 = v1;
  v5 = OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_33_4();
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AF6B7650(v3, (uint64_t)v9, v10);
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 2, v5))
  {
    OUTLINED_FUNCTION_67_0();
  }
  else
  {
    sub_1AF6B74F0((uint64_t)v9, v2, type metadata accessor for LaunchServicesSnapshot);
    OUTLINED_FUNCTION_67_0();
    OUTLINED_FUNCTION_18_7();
    sub_1AF6D0B00((uint64_t)&qword_1ED01F838);
    sub_1AF76A51C();
    type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0);
    OUTLINED_FUNCTION_67_0();
    v11 = *(_QWORD *)(v2 + *(int *)(v5 + 20));
    OUTLINED_FUNCTION_6_2();
    sub_1AF6C55B0(a1, v11);
    swift_bridgeObjectRelease();
    sub_1AF6D09EC(v2, type metadata accessor for LaunchServicesSnapshot);
  }
  OUTLINED_FUNCTION_43();
}

void static ToolKitIndexingReason.Changeset.Provenance.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int EnumTagSinglePayload;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(_QWORD);
  uint64_t v17;

  v7 = OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_33_4();
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_18_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4CAB0);
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_26_3();
  v12 = v2 + *(int *)(v11 + 48);
  sub_1AF6B7650(a1, v2, type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
  sub_1AF6B7650(a2, v12, type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v2, 2, v7);
  if (!EnumTagSinglePayload)
  {
    v14 = OUTLINED_FUNCTION_90_0();
    sub_1AF6B7650(v14, v15, v16);
    if (!OUTLINED_FUNCTION_34_3())
    {
      sub_1AF6B74F0(v12, v3, type metadata accessor for LaunchServicesSnapshot);
      if ((sub_1AF76A204() & 1) == 0
        || (v17 = type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0),
            *(_QWORD *)(v4 + *(int *)(v17 + 20)) != *(_QWORD *)(v3 + *(int *)(v17 + 20)))
        || (sub_1AF6BFA38(*(_QWORD **)(v4 + *(int *)(v7 + 20)), *(_QWORD **)(v3 + *(int *)(v7 + 20))) & 1) == 0)
      {
        OUTLINED_FUNCTION_89_1(v3);
        OUTLINED_FUNCTION_89_1(v4);
        sub_1AF6D09EC(v2, type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
        goto LABEL_10;
      }
      OUTLINED_FUNCTION_89_1(v3);
      OUTLINED_FUNCTION_89_1(v4);
      goto LABEL_8;
    }
    sub_1AF6D09EC(v4, type metadata accessor for LaunchServicesSnapshot);
    goto LABEL_9;
  }
  if (EnumTagSinglePayload != 1)
  {
    if (OUTLINED_FUNCTION_34_3() == 2)
      goto LABEL_8;
LABEL_9:
    sub_1AF6C6F24(v2, &qword_1EEE4CAB0);
    goto LABEL_10;
  }
  if (OUTLINED_FUNCTION_34_3() != 1)
    goto LABEL_9;
LABEL_8:
  sub_1AF6D09EC(v2, type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
LABEL_10:
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_1AF6C9BCC(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000016 && a2 == 0x80000001AF781F40 || (sub_1AF76AD14() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001AF781F60 || (sub_1AF76AD14() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001AF781F80)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_1AF76AD14();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

unint64_t sub_1AF6C9D08(char a1)
{
  if (!a1)
    return 0xD000000000000016;
  if (a1 == 1)
    return 0xD000000000000010;
  return 0xD000000000000013;
}

uint64_t sub_1AF6C9D64(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1AF76AD14();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1AF6C9DD0()
{
  sub_1AF6D0A88();
  return sub_1AF76AF90();
}

uint64_t sub_1AF6C9DF8()
{
  sub_1AF6D0A88();
  return sub_1AF76AF9C();
}

uint64_t sub_1AF6C9E20()
{
  sub_1AF6D0A4C();
  return sub_1AF76AF90();
}

uint64_t sub_1AF6C9E48()
{
  sub_1AF6D0A4C();
  return sub_1AF76AF9C();
}

unint64_t sub_1AF6C9E70()
{
  char *v0;

  return sub_1AF6C9D08(*v0);
}

uint64_t sub_1AF6C9E78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AF6C9BCC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AF6C9E9C()
{
  sub_1AF6D0A10();
  return sub_1AF76AF90();
}

uint64_t sub_1AF6C9EC4()
{
  sub_1AF6D0A10();
  return sub_1AF76AF9C();
}

uint64_t sub_1AF6C9EEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AF6C9D64(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1AF6C9F14()
{
  sub_1AF6D0AC4();
  return sub_1AF76AF90();
}

uint64_t sub_1AF6C9F3C()
{
  sub_1AF6D0AC4();
  return sub_1AF76AF9C();
}

void ToolKitIndexingReason.Changeset.Provenance.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int EnumTagSinglePayload;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  OUTLINED_FUNCTION_46();
  v22 = v0;
  v5 = v4;
  v21 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4CAB8) - 8);
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_20_6(v7, v17);
  v19 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4CAC0) - 8);
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_18_8(v9, v18);
  v20 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4CAC8) - 8);
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_46_0();
  v11 = OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_47_0();
  type metadata accessor for ToolKitIndexingReason.Changeset.Provenance(0);
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_4_7();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEE4CAD0);
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_17_1();
  __swift_project_boxed_opaque_existential_1(v5, v5[3]);
  sub_1AF6D0A10();
  sub_1AF76AF6C();
  sub_1AF6B7650(v22, v2, type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v2, 2, v11);
  if (EnumTagSinglePayload)
  {
    if (EnumTagSinglePayload == 1)
    {
      OUTLINED_FUNCTION_129();
      OUTLINED_FUNCTION_37_1();
      v16 = v19;
    }
    else
    {
      OUTLINED_FUNCTION_127();
      OUTLINED_FUNCTION_37_1();
      v16 = v21;
    }
    OUTLINED_FUNCTION_139(v16);
    OUTLINED_FUNCTION_46_2();
  }
  else
  {
    sub_1AF6B74F0(v2, v1, type metadata accessor for LaunchServicesSnapshot);
    sub_1AF6D0AC4();
    OUTLINED_FUNCTION_37_1();
    sub_1AF6D0B00((uint64_t)&unk_1EEE4CAF8);
    sub_1AF76AB64();
    OUTLINED_FUNCTION_88_0(v3, *(uint64_t (**)(uint64_t, uint64_t))(v20 + 8));
    sub_1AF6D09EC(v1, type metadata accessor for LaunchServicesSnapshot);
    OUTLINED_FUNCTION_46_2();
  }
  OUTLINED_FUNCTION_2_2();
}

void ToolKitIndexingReason.Changeset.Provenance.hashValue.getter()
{
  sub_1AF6CCC40((void (*)(_BYTE *))ToolKitIndexingReason.Changeset.Provenance.hash(into:));
}

void ToolKitIndexingReason.Changeset.Provenance.init(from:)()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t *v40;
  uint64_t v41;
  void (*v42)(uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;

  OUTLINED_FUNCTION_46();
  v62 = v0;
  v3 = v2;
  v58 = v4;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEE4B4D0);
  v56 = *(_QWORD *)(v5 - 8);
  v57 = v5;
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_2_8();
  v59 = v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4B4C8);
  v53 = *(_QWORD *)(v8 - 8);
  v54 = v8;
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_12_4(v10, v48);
  v55 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEE4B4E0);
  v52 = *(_QWORD *)(v55 - 8);
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_2_8();
  v61 = v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEE4B4B8);
  v60 = *(_QWORD *)(v13 - 8);
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v14);
  v15 = OUTLINED_FUNCTION_60_2();
  v16 = type metadata accessor for ToolKitIndexingReason.Changeset.Provenance(v15);
  OUTLINED_FUNCTION_27_0();
  v18 = MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v48 - v21;
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_1AF6D0A10();
  v23 = v62;
  sub_1AF76AF54();
  if (v23)
    goto LABEL_12;
  v49 = v20;
  v50 = v22;
  v24 = v61;
  v51 = 0;
  v62 = v3;
  v25 = sub_1AF76AB04();
  v26 = v13;
  if (!*(_QWORD *)(v25 + 16))
  {
    v37 = v1;
LABEL_9:
    v38 = v60;
    OUTLINED_FUNCTION_30_1();
    OUTLINED_FUNCTION_5();
    v40 = v39;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4B8C0);
    *v40 = v16;
    sub_1AF76AAB0();
    OUTLINED_FUNCTION_107_0();
    OUTLINED_FUNCTION_10_4();
    v41 = OUTLINED_FUNCTION_105();
    v42(v41);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v26);
    v3 = v62;
LABEL_12:
    v47 = (uint64_t)v3;
    goto LABEL_13;
  }
  v27 = v13;
  OUTLINED_FUNCTION_120();
  v28 = *(unsigned __int8 *)(v25 + 32);
  sub_1AF6BB1C4(1);
  v30 = v29;
  v32 = v31;
  swift_bridgeObjectRelease();
  if (v30 != v32 >> 1)
  {
    v37 = v1;
    v26 = v27;
    goto LABEL_9;
  }
  if (v28)
  {
    if (v28 == 1)
    {
      OUTLINED_FUNCTION_129();
      OUTLINED_FUNCTION_14_7();
      OUTLINED_FUNCTION_70_0(v53);
      OUTLINED_FUNCTION_4_2();
      OUTLINED_FUNCTION_15_7(v1, *(uint64_t (**)(uint64_t, uint64_t))(v60 + 8));
      v33 = OUTLINED_FUNCTION_50_0();
      v34 = (uint64_t)v50;
      v35 = (uint64_t)v50;
      v36 = 1;
    }
    else
    {
      OUTLINED_FUNCTION_127();
      OUTLINED_FUNCTION_14_7();
      OUTLINED_FUNCTION_70_0(v56);
      OUTLINED_FUNCTION_4_2();
      OUTLINED_FUNCTION_15_7(v1, *(uint64_t (**)(uint64_t, uint64_t))(v60 + 8));
      v33 = OUTLINED_FUNCTION_50_0();
      v34 = (uint64_t)v50;
      v35 = (uint64_t)v50;
      v36 = 2;
    }
    __swift_storeEnumTagSinglePayload(v35, v36, 2, v33);
  }
  else
  {
    sub_1AF6D0AC4();
    v43 = v24;
    OUTLINED_FUNCTION_14_7();
    v44 = OUTLINED_FUNCTION_50_0();
    sub_1AF6D0B00((uint64_t)&unk_1EEE4B350);
    v45 = (uint64_t)v49;
    sub_1AF76AAF8();
    v46 = v60;
    OUTLINED_FUNCTION_29_3(v43, *(uint64_t (**)(uint64_t, uint64_t))(v52 + 8));
    OUTLINED_FUNCTION_4_2();
    OUTLINED_FUNCTION_15_7(v1, *(uint64_t (**)(uint64_t, uint64_t))(v46 + 8));
    __swift_storeEnumTagSinglePayload(v45, 0, 2, v44);
    v34 = (uint64_t)v50;
    sub_1AF6B74F0(v45, (uint64_t)v50, type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
  }
  sub_1AF6B74F0(v34, v58, type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
  v47 = (uint64_t)v62;
LABEL_13:
  __swift_destroy_boxed_opaque_existential_1(v47);
  OUTLINED_FUNCTION_2_2();
}

void sub_1AF6CA660()
{
  ToolKitIndexingReason.Changeset.Provenance.init(from:)();
}

void sub_1AF6CA674()
{
  ToolKitIndexingReason.Changeset.Provenance.encode(to:)();
}

void sub_1AF6CA690(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1AF6CCEF0(a1, a2, a3, (void (*)(_BYTE *))ToolKitIndexingReason.Changeset.Provenance.hash(into:));
}

uint64_t ToolKitIndexingReason.Changeset.debugDescription.getter()
{
  _QWORD *v0;

  if (!*v0)
    return 0x6C6C75662ELL;
  if (*v0 == 1)
    return 0x656E6F6E2ELL;
  OUTLINED_FUNCTION_41_2();
  sub_1AF76A960();
  OUTLINED_FUNCTION_116();
  OUTLINED_FUNCTION_90_0();
  sub_1AF76A774();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_52_2();
  sub_1AF76A774();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_73_0();
  return 0xD000000000000012;
}

BOOL ToolKitIndexingReason.Changeset.isEmpty.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  if (!*v0)
    return 0;
  if (v1 == 1)
    return 1;
  return !*(_QWORD *)(v1 + 16) && *(_QWORD *)(v0[1] + 16) == 0;
}

uint64_t *static ToolKitIndexingReason.Changeset.+ infix(_:_:)@<X0>(uint64_t *result@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;

  v5 = *result;
  v4 = result[1];
  v6 = result[2];
  if (!*result)
  {
    *a3 = 0;
    a3[1] = v4;
    a3[2] = v6;
    return result;
  }
  v8 = *a2;
  v7 = a2[1];
  v9 = a2[2];
  if (!*a2)
  {
    *a3 = 0;
    a3[1] = v7;
    a3[2] = v9;
    return result;
  }
  if (v8 == 1)
  {
    if (v5 != 1)
    {
      *a3 = v5;
      a3[1] = v4;
      a3[2] = v6;
      v10 = OUTLINED_FUNCTION_85_0();
      return (uint64_t *)sub_1AF6C7A94(v10);
    }
LABEL_9:
    *a3 = v8;
    a3[1] = v7;
    a3[2] = v9;
    v10 = OUTLINED_FUNCTION_80();
    return (uint64_t *)sub_1AF6C7A94(v10);
  }
  if (v5 == 1)
    goto LABEL_9;
  v11 = OUTLINED_FUNCTION_85_0();
  sub_1AF6C7A94(v11);
  v12 = OUTLINED_FUNCTION_80();
  sub_1AF6C7A94(v12);
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_13();
  OUTLINED_FUNCTION_6_2();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_93_0();
  v13 = sub_1AF6C1388(v7, v5);
  v14 = swift_bridgeObjectRetain();
  v15 = sub_1AF6CA934(v14, v13);
  v16 = sub_1AF6C1388(v8, v4);
  v17 = sub_1AF6CA934(v7, v16);
  sub_1AF6CAAB4(v9, v6);
  v19 = v18;
  v20 = OUTLINED_FUNCTION_85_0();
  sub_1AF6D0B38(v20);
  v21 = OUTLINED_FUNCTION_80();
  result = (uint64_t *)sub_1AF6D0B38(v21);
  *a3 = v15;
  a3[1] = v17;
  a3[2] = v19;
  return result;
}

uint64_t sub_1AF6CA934(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t i;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = result;
  v3 = 0;
  v18 = a2;
  v4 = result + 56;
  v5 = 1 << *(_BYTE *)(result + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(result + 56);
  v8 = (unint64_t)(v5 + 63) >> 6;
  if (!v7)
    goto LABEL_5;
LABEL_4:
  v9 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (i = v9 | (v3 << 6); ; i = __clz(__rbit64(v12)) + (v3 << 6))
  {
    v14 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * i);
    v15 = *v14;
    v16 = v14[1];
    swift_bridgeObjectRetain();
    sub_1AF6CE698(&v17, v15, v16);
    result = swift_bridgeObjectRelease();
    if (v7)
      goto LABEL_4;
LABEL_5:
    v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v8)
      goto LABEL_23;
    v12 = *(_QWORD *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      v3 = v11 + 1;
      if (v11 + 1 >= v8)
        goto LABEL_23;
      v12 = *(_QWORD *)(v4 + 8 * v3);
      if (!v12)
      {
        v3 = v11 + 2;
        if (v11 + 2 >= v8)
          goto LABEL_23;
        v12 = *(_QWORD *)(v4 + 8 * v3);
        if (!v12)
        {
          v3 = v11 + 3;
          if (v11 + 3 >= v8)
            goto LABEL_23;
          v12 = *(_QWORD *)(v4 + 8 * v3);
          if (!v12)
            break;
        }
      }
    }
LABEL_20:
    v7 = (v12 - 1) & v12;
  }
  v13 = v11 + 4;
  if (v13 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  v12 = *(_QWORD *)(v4 + 8 * v13);
  if (v12)
  {
    v3 = v13;
    goto LABEL_20;
  }
  while (1)
  {
    v3 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v3 >= v8)
      goto LABEL_23;
    v12 = *(_QWORD *)(v4 + 8 * v3);
    ++v13;
    if (v12)
      goto LABEL_20;
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_1AF6CAAB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  unint64_t i;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  _QWORD v25[2];

  v4 = type metadata accessor for ToolKitIndexingReason.Changeset.Provenance(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v6);
  v11 = (char *)v25 - v10;
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v25 - v12;
  v14 = 0;
  v15 = *(_QWORD *)(a1 + 56);
  v25[0] = a1 + 56;
  v25[1] = a2;
  v16 = 1 << *(_BYTE *)(a1 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & v15;
  v19 = (unint64_t)(v16 + 63) >> 6;
  if ((v17 & v15) == 0)
    goto LABEL_5;
LABEL_4:
  v20 = __clz(__rbit64(v18));
  v18 &= v18 - 1;
  for (i = v20 | (v14 << 6); ; i = __clz(__rbit64(v23)) + (v14 << 6))
  {
    sub_1AF6B7650(*(_QWORD *)(a1 + 48) + *(_QWORD *)(v5 + 72) * i, (uint64_t)v13, type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
    sub_1AF6B74F0((uint64_t)v13, (uint64_t)v8, type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
    sub_1AF6CE808((uint64_t)v11, (uint64_t)v8);
    sub_1AF6D09EC((uint64_t)v11, type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
    if (v18)
      goto LABEL_4;
LABEL_5:
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v22 >= v19)
      goto LABEL_23;
    v23 = *(_QWORD *)(v25[0] + 8 * v22);
    ++v14;
    if (!v23)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v19)
        goto LABEL_23;
      v23 = *(_QWORD *)(v25[0] + 8 * v14);
      if (!v23)
      {
        v14 = v22 + 2;
        if (v22 + 2 >= v19)
          goto LABEL_23;
        v23 = *(_QWORD *)(v25[0] + 8 * v14);
        if (!v23)
        {
          v14 = v22 + 3;
          if (v22 + 3 >= v19)
            goto LABEL_23;
          v23 = *(_QWORD *)(v25[0] + 8 * v14);
          if (!v23)
            break;
        }
      }
    }
LABEL_20:
    v18 = (v23 - 1) & v23;
  }
  v24 = v22 + 4;
  if (v24 >= v19)
  {
LABEL_23:
    swift_release();
    return;
  }
  v23 = *(_QWORD *)(v25[0] + 8 * v24);
  if (v23)
  {
    v14 = v24;
    goto LABEL_20;
  }
  while (1)
  {
    v14 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v14 >= v19)
      goto LABEL_23;
    v23 = *(_QWORD *)(v25[0] + 8 * v14);
    ++v24;
    if (v23)
      goto LABEL_20;
  }
LABEL_25:
  __break(1u);
}

uint64_t ToolKitIndexingReason.Changeset.encoded()()
{
  sub_1AF76A024();
  OUTLINED_FUNCTION_26();
  sub_1AF76A018();
  sub_1AF6D0B74();
  sub_1AF76A00C();
  swift_release();
  return OUTLINED_FUNCTION_90_0();
}

double static ToolKitIndexingReason.Changeset.decode(from:)@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;
  __int128 v4;
  uint64_t v5;

  sub_1AF76A000();
  OUTLINED_FUNCTION_26();
  sub_1AF769FF4();
  sub_1AF6D0BB0();
  sub_1AF769FE8();
  swift_release();
  if (!v1)
  {
    result = *(double *)&v4;
    *(_OWORD *)a1 = v4;
    *(_QWORD *)(a1 + 16) = v5;
  }
  return result;
}

void ToolKitIndexingReason.Changeset.hash(into:)(__int128 *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *v1;
  if (*v1 && v3 != 1)
  {
    v5 = v1[1];
    v4 = v1[2];
    sub_1AF76AF24();
    sub_1AF6D0840((uint64_t)a1, v3);
    sub_1AF6D0840((uint64_t)a1, v5);
    sub_1AF6D04A0(a1, v4);
  }
  else
  {
    sub_1AF76AF24();
    OUTLINED_FUNCTION_43();
  }
}

void static ToolKitIndexingReason.Changeset.== infix(_:_:)(unint64_t *a1, unint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v3 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  v6 = *a2;
  v5 = a2[1];
  v7 = a2[2];
  if (!*a1)
  {
    if (!v6)
    {
      v3 = 0;
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  if (v3 == 1)
  {
    if (v6 == 1)
    {
      v3 = 1;
      goto LABEL_10;
    }
LABEL_9:
    OUTLINED_FUNCTION_86_0();
    OUTLINED_FUNCTION_84_1();
    goto LABEL_10;
  }
  if (v6 < 2)
    goto LABEL_9;
  OUTLINED_FUNCTION_86_0();
  OUTLINED_FUNCTION_84_1();
  if ((sub_1AF6CAF74(v3, v6) & 1) != 0 && (sub_1AF6CAF74(v2, v5) & 1) != 0)
    sub_1AF6CB218(v4, v7);
LABEL_10:
  sub_1AF6D0B38(v3);
  sub_1AF6D0B38(v6);
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_1AF6CAF74(uint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t i;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  BOOL v24;
  uint64_t v25;
  unint64_t j;
  uint64_t v27;
  _QWORD *v28;
  BOOL v29;
  uint64_t v30;
  int64_t v31;
  int64_t v32;

  if (result == a2)
    return 1;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v3 = 0;
  v4 = *(_QWORD *)(result + 56);
  v30 = result + 56;
  v5 = 1 << *(_BYTE *)(result + 32);
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & v4;
  v31 = (unint64_t)(v5 + 63) >> 6;
  v8 = a2 + 56;
  if ((v6 & v4) == 0)
    goto LABEL_8;
LABEL_7:
  v9 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  v32 = v3;
  for (i = v9 | (v3 << 6); ; i = __clz(__rbit64(v12)) + (v13 << 6))
  {
    v15 = result;
    v16 = (uint64_t *)(*(_QWORD *)(result + 48) + 16 * i);
    v18 = *v16;
    v17 = v16[1];
    sub_1AF76AF18();
    swift_bridgeObjectRetain();
    sub_1AF76A5AC();
    v19 = sub_1AF76AF3C();
    v20 = -1 << *(_BYTE *)(a2 + 32);
    v21 = v19 & ~v20;
    if (((*(_QWORD *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
      goto LABEL_41;
    v22 = *(_QWORD *)(a2 + 48);
    v23 = (_QWORD *)(v22 + 16 * v21);
    v24 = *v23 == v18 && v23[1] == v17;
    if (!v24 && (sub_1AF76AD14() & 1) == 0)
    {
      v25 = ~v20;
      for (j = v21 + 1; ; j = v27 + 1)
      {
        v27 = j & v25;
        if (((*(_QWORD *)(v8 + (((j & v25) >> 3) & 0xFFFFFFFFFFFFF8)) >> (j & v25)) & 1) == 0)
          break;
        v28 = (_QWORD *)(v22 + 16 * v27);
        v29 = *v28 == v18 && v28[1] == v17;
        if (v29 || (sub_1AF76AD14() & 1) != 0)
          goto LABEL_30;
      }
LABEL_41:
      swift_bridgeObjectRelease();
      return 0;
    }
LABEL_30:
    swift_bridgeObjectRelease();
    result = v15;
    v3 = v32;
    if (v7)
      goto LABEL_7;
LABEL_8:
    v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_44;
    }
    if (v11 >= v31)
      return 1;
    v12 = *(_QWORD *)(v30 + 8 * v11);
    v13 = v3 + 1;
    if (!v12)
    {
      v13 = v3 + 2;
      if (v3 + 2 >= v31)
        return 1;
      v12 = *(_QWORD *)(v30 + 8 * v13);
      if (!v12)
      {
        v13 = v3 + 3;
        if (v3 + 3 >= v31)
          return 1;
        v12 = *(_QWORD *)(v30 + 8 * v13);
        if (!v12)
        {
          v13 = v3 + 4;
          if (v3 + 4 >= v31)
            return 1;
          v12 = *(_QWORD *)(v30 + 8 * v13);
          if (!v12)
            break;
        }
      }
    }
LABEL_23:
    v7 = (v12 - 1) & v12;
    v32 = v13;
  }
  v14 = v3 + 5;
  if (v3 + 5 >= v31)
    return 1;
  v12 = *(_QWORD *)(v30 + 8 * v14);
  if (v12)
  {
    v13 = v3 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    v13 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v13 >= v31)
      return 1;
    v12 = *(_QWORD *)(v30 + 8 * v13);
    ++v14;
    if (v12)
      goto LABEL_23;
  }
LABEL_44:
  __break(1u);
  return result;
}

void sub_1AF6CB218(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  int EnumTagSinglePayload;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int64_t v48;
  uint64_t v49;
  int64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57[80];

  v4 = type metadata accessor for LaunchServicesSnapshot(0);
  MEMORY[0x1E0C80A78](v4);
  v51 = (uint64_t)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4CAB0);
  MEMORY[0x1E0C80A78](v56);
  v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ToolKitIndexingReason.Changeset.Provenance(0);
  v9 = MEMORY[0x1E0C80A78](v8);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v43 - v11;
  v13 = MEMORY[0x1E0C80A78](v10);
  v15 = (char *)&v43 - v14;
  MEMORY[0x1E0C80A78](v13);
  v19 = (char *)&v43 - v16;
  if (a1 == a2 || *(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return;
  v53 = v18;
  v20 = 0;
  v21 = *(_QWORD *)(a1 + 56);
  v46 = a1;
  v47 = a1 + 56;
  v22 = 1 << *(_BYTE *)(a1 + 32);
  if (v22 < 64)
    v23 = ~(-1 << v22);
  else
    v23 = -1;
  v24 = v23 & v21;
  v48 = (unint64_t)(v22 + 63) >> 6;
  v25 = a2 + 56;
  v45 = v17;
  v44 = (char *)&v43 - v16;
  v52 = a2 + 56;
  if (!v24)
    goto LABEL_8;
  while (2)
  {
    v49 = (v24 - 1) & v24;
    v50 = v20;
    v26 = __clz(__rbit64(v24)) | (v20 << 6);
LABEL_24:
    v31 = *(_QWORD *)(a1 + 48);
    v55 = *(_QWORD *)(v17 + 72);
    sub_1AF6B7650(v31 + v55 * v26, (uint64_t)v19, type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
    sub_1AF6B74F0((uint64_t)v19, (uint64_t)v15, type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
    sub_1AF76AF18();
    ToolKitIndexingReason.Changeset.Provenance.hash(into:)((uint64_t)v57);
    v32 = sub_1AF76AF3C();
    v33 = -1 << *(_BYTE *)(a2 + 32);
    v34 = v32 & ~v33;
    if (((*(_QWORD *)(v25 + ((v34 >> 3) & 0xFFFFFFFFFFFFF8)) >> v34) & 1) == 0)
    {
LABEL_44:
      sub_1AF6D09EC((uint64_t)v15, type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
      return;
    }
    v54 = ~v33;
    while (1)
    {
      sub_1AF6B7650(*(_QWORD *)(a2 + 48) + v34 * v55, (uint64_t)v12, type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
      v35 = (uint64_t)&v7[*(int *)(v56 + 48)];
      sub_1AF6B7650((uint64_t)v12, (uint64_t)v7, type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
      sub_1AF6B7650((uint64_t)v15, v35, type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
      EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 2, v4);
      if (EnumTagSinglePayload)
      {
        if (EnumTagSinglePayload == 1)
        {
          if (__swift_getEnumTagSinglePayload(v35, 2, v4) == 1)
            goto LABEL_41;
        }
        else if (__swift_getEnumTagSinglePayload(v35, 2, v4) == 2)
        {
          goto LABEL_41;
        }
        goto LABEL_33;
      }
      v37 = v15;
      v38 = a2;
      v39 = v53;
      sub_1AF6B7650((uint64_t)v7, v53, type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
      if (!__swift_getEnumTagSinglePayload(v35, 2, v4))
        break;
      sub_1AF6D09EC(v39, type metadata accessor for LaunchServicesSnapshot);
      a2 = v38;
      v15 = v37;
      v25 = v52;
LABEL_33:
      sub_1AF6C6F24((uint64_t)v7, &qword_1EEE4CAB0);
LABEL_34:
      sub_1AF6D09EC((uint64_t)v12, type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
      v34 = (v34 + 1) & v54;
      if (((*(_QWORD *)(v25 + ((v34 >> 3) & 0xFFFFFFFFFFFFF8)) >> v34) & 1) == 0)
        goto LABEL_44;
    }
    v40 = v35;
    v41 = v51;
    sub_1AF6B74F0(v40, v51, type metadata accessor for LaunchServicesSnapshot);
    if ((sub_1AF76A204() & 1) == 0
      || (v42 = type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0),
          *(_QWORD *)(v39 + *(int *)(v42 + 20)) != *(_QWORD *)(v41 + *(int *)(v42 + 20)))
      || (sub_1AF6BFA38(*(_QWORD **)(v39 + *(int *)(v4 + 20)), *(_QWORD **)(v41 + *(int *)(v4 + 20))) & 1) == 0)
    {
      sub_1AF6D09EC(v39, type metadata accessor for LaunchServicesSnapshot);
      sub_1AF6D09EC(v41, type metadata accessor for LaunchServicesSnapshot);
      sub_1AF6D09EC((uint64_t)v7, type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
      a2 = v38;
      v15 = v37;
      v25 = v52;
      goto LABEL_34;
    }
    sub_1AF6D09EC(v39, type metadata accessor for LaunchServicesSnapshot);
    sub_1AF6D09EC(v41, type metadata accessor for LaunchServicesSnapshot);
    a2 = v38;
    v15 = v37;
    v25 = v52;
LABEL_41:
    sub_1AF6D09EC((uint64_t)v7, type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
    sub_1AF6D09EC((uint64_t)v12, type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
    sub_1AF6D09EC((uint64_t)v15, type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
    v17 = v45;
    a1 = v46;
    v19 = v44;
    v24 = v49;
    v20 = v50;
    if (v49)
      continue;
    break;
  }
LABEL_8:
  v27 = v20 + 1;
  if (__OFADD__(v20, 1))
  {
    __break(1u);
    goto LABEL_47;
  }
  if (v27 < v48)
  {
    v28 = *(_QWORD *)(v47 + 8 * v27);
    v29 = v20 + 1;
    if (v28)
      goto LABEL_23;
    v29 = v27 + 1;
    if (v27 + 1 < v48)
    {
      v28 = *(_QWORD *)(v47 + 8 * v29);
      if (v28)
        goto LABEL_23;
      v29 = v27 + 2;
      if (v27 + 2 < v48)
      {
        v28 = *(_QWORD *)(v47 + 8 * v29);
        if (v28)
          goto LABEL_23;
        v29 = v27 + 3;
        if (v27 + 3 < v48)
        {
          v28 = *(_QWORD *)(v47 + 8 * v29);
          if (v28)
            goto LABEL_23;
          v30 = v27 + 4;
          if (v30 < v48)
          {
            v28 = *(_QWORD *)(v47 + 8 * v30);
            if (v28)
            {
              v29 = v30;
LABEL_23:
              v49 = (v28 - 1) & v28;
              v50 = v29;
              v26 = __clz(__rbit64(v28)) + (v29 << 6);
              goto LABEL_24;
            }
            while (1)
            {
              v29 = v30 + 1;
              if (__OFADD__(v30, 1))
                break;
              if (v29 >= v48)
                return;
              v28 = *(_QWORD *)(v47 + 8 * v29);
              ++v30;
              if (v28)
                goto LABEL_23;
            }
LABEL_47:
            __break(1u);
          }
        }
      }
    }
  }
}

uint64_t sub_1AF6CB7AC(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  BOOL v6;
  char v8;

  v3 = a1 == 1819047270 && a2 == 0xE400000000000000;
  if (v3 || (sub_1AF76AD14() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6C616974726170 && a2 == 0xE700000000000000;
    if (v6 || (sub_1AF76AD14() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 1701736302 && a2 == 0xE400000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_1AF76AD14();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_1AF6CB8C8(char a1)
{
  return *(_QWORD *)&aFull_0[8 * a1];
}

uint64_t sub_1AF6CB8E8(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  BOOL v6;
  char v8;

  v3 = a1 == 0x64657461647075 && a2 == 0xE700000000000000;
  if (v3 || (sub_1AF76AD14() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6465766F6D6572 && a2 == 0xE700000000000000;
    if (v6 || (sub_1AF76AD14() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6E616E65766F7270 && a2 == 0xEA00000000006563)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_1AF76AD14();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_1AF6CBA34(char a1)
{
  return *(_QWORD *)&aUpdated_4[8 * a1];
}

uint64_t sub_1AF6CBA54()
{
  char *v0;

  return sub_1AF6CB8C8(*v0);
}

uint64_t sub_1AF6CBA5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AF6CB7AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AF6CBA80()
{
  sub_1AF6D0BEC();
  return sub_1AF76AF90();
}

uint64_t sub_1AF6CBAA8()
{
  sub_1AF6D0BEC();
  return sub_1AF76AF9C();
}

uint64_t sub_1AF6CBAD0()
{
  sub_1AF6D0CA0();
  return sub_1AF76AF90();
}

uint64_t sub_1AF6CBAF8()
{
  sub_1AF6D0CA0();
  return sub_1AF76AF9C();
}

uint64_t sub_1AF6CBB20()
{
  sub_1AF6D0C28();
  return sub_1AF76AF90();
}

uint64_t sub_1AF6CBB48()
{
  sub_1AF6D0C28();
  return sub_1AF76AF9C();
}

uint64_t sub_1AF6CBB70()
{
  char *v0;

  return sub_1AF6CBA34(*v0);
}

uint64_t sub_1AF6CBB78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AF6CB8E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AF6CBB9C()
{
  sub_1AF6D0C64();
  return sub_1AF76AF90();
}

uint64_t sub_1AF6CBBC4()
{
  sub_1AF6D0C64();
  return sub_1AF76AF9C();
}

void ToolKitIndexingReason.Changeset.encode(to:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  OUTLINED_FUNCTION_46();
  v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4B5D8);
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_18_8(v7, v18);
  v21 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEE4B5E0) - 8);
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_33_2(v9, v19);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEE4B5C8);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_47_0();
  v22 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4B5C0) - 8);
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_48();
  v13 = *v0;
  __swift_project_boxed_opaque_existential_1(v5, v5[3]);
  sub_1AF6D0BEC();
  sub_1AF76AF6C();
  if (!v13)
  {
    sub_1AF6D0CA0();
    v14 = v3;
    OUTLINED_FUNCTION_6_10();
    v17 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v15 = v2;
    v16 = v10;
    goto LABEL_5;
  }
  if (v13 == 1)
  {
    OUTLINED_FUNCTION_126();
    v14 = v3;
    OUTLINED_FUNCTION_6_10();
    v15 = OUTLINED_FUNCTION_27_3();
LABEL_5:
    v17(v15, v16);
    OUTLINED_FUNCTION_24_3(v14, *(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
    goto LABEL_10;
  }
  sub_1AF6D0C64();
  sub_1AF76AB28();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEE4B410);
  sub_1AF6D0CDC((uint64_t)&unk_1EEE4CB08);
  sub_1AF76AB64();
  if (!v1)
  {
    OUTLINED_FUNCTION_109();
    OUTLINED_FUNCTION_133();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4B400);
    sub_1AF6D0D38((uint64_t)&unk_1EEE4CB18);
    OUTLINED_FUNCTION_109();
    OUTLINED_FUNCTION_133();
  }
  OUTLINED_FUNCTION_9_8(v20, *(uint64_t (**)(uint64_t, uint64_t))(v21 + 8));
  OUTLINED_FUNCTION_88_0(v3, *(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
LABEL_10:
  OUTLINED_FUNCTION_2_2();
}

uint64_t ToolKitIndexingReason.Changeset.hashValue.getter()
{
  unint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  __int128 v5[4];

  v2 = *v0;
  v1 = v0[1];
  v3 = v0[2];
  OUTLINED_FUNCTION_28_4();
  sub_1AF76AF24();
  if (v2 > 1)
  {
    sub_1AF6D0840((uint64_t)v5, v2);
    sub_1AF6D0840((uint64_t)v5, v1);
    sub_1AF6D04A0(v5, v3);
  }
  return OUTLINED_FUNCTION_27_1();
}

void ToolKitIndexingReason.Changeset.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  void (*v35)(uint64_t);
  uint64_t v36;
  void (*v37)(uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  OUTLINED_FUNCTION_46();
  v16 = v15;
  v48 = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4B500);
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v18);
  OUTLINED_FUNCTION_33_2(v19, v43);
  v47 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4B508) - 8);
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_20_6(v21, v44);
  v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEE4B4F0);
  OUTLINED_FUNCTION_40_0();
  MEMORY[0x1E0C80A78](v23);
  OUTLINED_FUNCTION_18_1();
  v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEE4B4A8);
  OUTLINED_FUNCTION_44_1();
  MEMORY[0x1E0C80A78](v25);
  OUTLINED_FUNCTION_25_4();
  v50 = v16;
  __swift_project_boxed_opaque_existential_1(v16, v16[3]);
  sub_1AF6D0BEC();
  sub_1AF76AF54();
  if (!v10)
  {
    v45 = v11;
    v51 = v12;
    v46 = v13;
    v26 = sub_1AF76AB04();
    if (*(_QWORD *)(v26 + 16))
    {
      OUTLINED_FUNCTION_120();
      v27 = *(unsigned __int8 *)(v26 + 32);
      sub_1AF6BB1C4(1);
      v29 = v28;
      v31 = v30;
      swift_bridgeObjectRelease();
      if (v29 == v31 >> 1)
      {
        if (v27)
        {
          if (v27 == 1)
          {
            LOBYTE(a10) = 1;
            sub_1AF6D0C64();
            OUTLINED_FUNCTION_55_1();
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEE4B410);
            LOBYTE(v53) = 0;
            sub_1AF6D0CDC((uint64_t)&unk_1EEE4B420);
            OUTLINED_FUNCTION_134();
            sub_1AF76AAF8();
            v38 = a10;
            LOBYTE(v52) = 1;
            OUTLINED_FUNCTION_134();
            sub_1AF76AAF8();
            v39 = v53;
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4B400);
            sub_1AF6D0D38((uint64_t)&unk_1EEE4B408);
            sub_1AF76AAF8();
            OUTLINED_FUNCTION_15_7(v49, *(uint64_t (**)(uint64_t, uint64_t))(v47 + 8));
            swift_unknownObjectRelease();
            OUTLINED_FUNCTION_9_8(v46, *(uint64_t (**)(uint64_t, uint64_t))(v51 + 8));
            v40 = v52;
            v41 = (uint64_t)v50;
            v42 = v48;
LABEL_13:
            *v42 = v38;
            v42[1] = v39;
            v42[2] = v40;
            goto LABEL_9;
          }
          OUTLINED_FUNCTION_126();
          OUTLINED_FUNCTION_55_1();
          v36 = OUTLINED_FUNCTION_27_3();
          v37(v36);
          OUTLINED_FUNCTION_69_1();
          OUTLINED_FUNCTION_9_8(v29, *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8));
          v39 = 0;
          v40 = 0;
          v38 = 1;
        }
        else
        {
          sub_1AF6D0CA0();
          sub_1AF76AAA4();
          (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v45, v22);
          OUTLINED_FUNCTION_69_1();
          OUTLINED_FUNCTION_15_7(v46, *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8));
          v38 = 0;
          v39 = 0;
          v40 = 0;
        }
        v41 = (uint64_t)v50;
        v42 = v48;
        goto LABEL_13;
      }
    }
    OUTLINED_FUNCTION_30_1();
    OUTLINED_FUNCTION_5();
    v33 = v32;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4B8C0);
    *v33 = &type metadata for ToolKitIndexingReason.Changeset;
    sub_1AF76AAB0();
    OUTLINED_FUNCTION_107_0();
    OUTLINED_FUNCTION_10_4();
    v34 = OUTLINED_FUNCTION_105();
    v35(v34);
    swift_willThrow();
    OUTLINED_FUNCTION_69_1();
    (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v46, v24);
  }
  v41 = (uint64_t)v50;
LABEL_9:
  __swift_destroy_boxed_opaque_existential_1(v41);
  OUTLINED_FUNCTION_2_2();
}

void sub_1AF6CC44C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  ToolKitIndexingReason.Changeset.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_1AF6CC460()
{
  ToolKitIndexingReason.Changeset.encode(to:)();
}

uint64_t sub_1AF6CC47C()
{
  unint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  __int128 v5[4];

  v2 = *v0;
  v1 = v0[1];
  v3 = v0[2];
  sub_1AF76AF18();
  sub_1AF76AF24();
  if (v2 > 1)
  {
    sub_1AF6D0840((uint64_t)v5, v2);
    sub_1AF6D0840((uint64_t)v5, v1);
    sub_1AF6D04A0(v5, v3);
  }
  return sub_1AF76AF3C();
}

__n128 ToolKitIndexingReason.init(trigger:changeset:)@<Q0>(char *a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X8>)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 result;
  __int128 v9;

  v4 = *a1;
  v9 = *a2;
  v5 = *((_QWORD *)a2 + 2);
  sub_1AF76A228();
  v6 = type metadata accessor for ToolKitIndexingReason(0);
  *(_BYTE *)(a3 + *(int *)(v6 + 20)) = v4;
  v7 = a3 + *(int *)(v6 + 24);
  *(_OWORD *)v7 = v9;
  *(_QWORD *)(v7 + 16) = v5;
  OUTLINED_FUNCTION_20_3();
  return result;
}

__n128 ToolKitIndexingReason.init(id:trigger:changeset:)@<Q0>(uint64_t a1@<X0>, char *a2@<X1>, __int128 *a3@<X2>, uint64_t a4@<X8>)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 result;
  __int128 v12;

  v6 = *a2;
  v12 = *a3;
  v7 = *((_QWORD *)a3 + 2);
  v8 = OUTLINED_FUNCTION_18_7();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a4, a1, v8);
  v9 = type metadata accessor for ToolKitIndexingReason(0);
  *(_BYTE *)(a4 + *(int *)(v9 + 20)) = v6;
  v10 = a4 + *(int *)(v9 + 24);
  *(_OWORD *)v10 = v12;
  *(_QWORD *)(v10 + 16) = v7;
  OUTLINED_FUNCTION_20_3();
  return result;
}

uint64_t ToolKitIndexingReason.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v2;

  OUTLINED_FUNCTION_41_2();
  sub_1AF76A960();
  sub_1AF76A5B8();
  OUTLINED_FUNCTION_18_7();
  sub_1AF6D0B00((uint64_t)&unk_1EEE4A248);
  sub_1AF76AB94();
  sub_1AF76A5B8();
  OUTLINED_FUNCTION_18_5();
  OUTLINED_FUNCTION_52_2();
  v0 = type metadata accessor for ToolKitIndexingReason(0);
  OUTLINED_FUNCTION_47_1();
  sub_1AF76A5B8();
  OUTLINED_FUNCTION_81_1(*(int *)(v0 + 24));
  OUTLINED_FUNCTION_47_1();
  OUTLINED_FUNCTION_73_0();
  return v2;
}

void ToolKitIndexingReason.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  __int128 *v7;
  uint64_t v8;

  OUTLINED_FUNCTION_18_7();
  sub_1AF6D0B00((uint64_t)&qword_1ED01F838);
  OUTLINED_FUNCTION_90_0();
  sub_1AF76A51C();
  v3 = OUTLINED_FUNCTION_96_0();
  ToolKitIndexingReason.Trigger.hash(into:)();
  v4 = (unint64_t *)(v1 + *(int *)(v3 + 24));
  v5 = *v4;
  if (*v4 && v5 != 1)
  {
    v6 = v4[1];
    OUTLINED_FUNCTION_67_0();
    OUTLINED_FUNCTION_93_0();
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_13();
    sub_1AF6D0840(a1, v5);
    sub_1AF6D0840(a1, v6);
    v7 = (__int128 *)OUTLINED_FUNCTION_90_0();
    sub_1AF6D04A0(v7, v8);
    sub_1AF6D0B38(v5);
  }
  else
  {
    OUTLINED_FUNCTION_67_0();
    OUTLINED_FUNCTION_58_2();
  }
}

uint64_t static ToolKitIndexingReason.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  unint64_t v10[4];
  __int128 v11;
  uint64_t v12;

  if ((sub_1AF76A204() & 1) != 0
    && (v4 = type metadata accessor for ToolKitIndexingReason(0),
        v5 = *(int *)(v4 + 20),
        LOBYTE(v11) = *(_BYTE *)(a1 + v5),
        LOBYTE(v10[0]) = *(_BYTE *)(a2 + v5),
        (static ToolKitIndexingReason.Trigger.== infix(_:_:)(&v11, (unsigned __int8 *)v10) & 1) != 0))
  {
    v6 = *(int *)(v4 + 24);
    v7 = *(_QWORD *)(a1 + v6 + 16);
    v11 = *(_OWORD *)(a1 + v6);
    v12 = v7;
    OUTLINED_FUNCTION_81_1(v6);
    static ToolKitIndexingReason.Changeset.== infix(_:_:)((unint64_t *)&v11, v10);
  }
  else
  {
    v8 = 0;
  }
  return v8 & 1;
}

uint64_t sub_1AF6CC8C4(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  BOOL v6;
  char v8;

  v3 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v3 || (sub_1AF76AD14() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x72656767697274 && a2 == 0xE700000000000000;
    if (v6 || (sub_1AF76AD14() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x657365676E616863 && a2 == 0xE900000000000074)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_1AF76AD14();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_1AF6CC9F0()
{
  return 3;
}

uint64_t sub_1AF6CC9F8(char a1)
{
  return qword_1AF77D728[a1];
}

void sub_1AF6CCA18()
{
  sub_1AF6CDFC8();
}

uint64_t sub_1AF6CCA30()
{
  char *v0;

  return sub_1AF6CC9F8(*v0);
}

uint64_t sub_1AF6CCA38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AF6CC8C4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AF6CCA5C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1AF6CC9F0();
  *a1 = result;
  return result;
}

uint64_t sub_1AF6CCA80()
{
  sub_1AF6D0D90();
  return sub_1AF76AF90();
}

uint64_t sub_1AF6CCAA8()
{
  sub_1AF6D0D90();
  return sub_1AF76AF9C();
}

void ToolKitIndexingReason.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4B530);
  OUTLINED_FUNCTION_40_0();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_71_0();
  sub_1AF6D0D90();
  OUTLINED_FUNCTION_53_1();
  OUTLINED_FUNCTION_18_7();
  sub_1AF6D0B00((uint64_t)&qword_1EEE4B090);
  OUTLINED_FUNCTION_13_7();
  if (!v0)
  {
    type metadata accessor for ToolKitIndexingReason(0);
    sub_1AF6D0DCC();
    OUTLINED_FUNCTION_13_7();
    sub_1AF6D0B74();
    OUTLINED_FUNCTION_13_7();
  }
  OUTLINED_FUNCTION_49_1(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_43_1();
}

void ToolKitIndexingReason.hashValue.getter()
{
  sub_1AF6CCC40((void (*)(_BYTE *))ToolKitIndexingReason.hash(into:));
}

void sub_1AF6CCC40(void (*a1)(_BYTE *))
{
  _BYTE v2[72];

  OUTLINED_FUNCTION_28_4();
  a1(v2);
  OUTLINED_FUNCTION_27_1();
  OUTLINED_FUNCTION_26_1();
}

void ToolKitIndexingReason.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;

  OUTLINED_FUNCTION_46();
  v4 = v3;
  v14 = v5;
  v15 = OUTLINED_FUNCTION_18_7();
  v6 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_33_2(v7, v13);
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEE4CB30);
  v8 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v9 = OUTLINED_FUNCTION_60_2();
  v10 = type metadata accessor for ToolKitIndexingReason(v9);
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_17_1();
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  sub_1AF6D0D90();
  sub_1AF76AF54();
  if (v0)
  {
    OUTLINED_FUNCTION_108_0();
  }
  else
  {
    LOBYTE(v18) = 0;
    sub_1AF6D0B00((uint64_t)&unk_1EEE4B098);
    sub_1AF76AAF8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v1, v16, v15);
    sub_1AF6D0E08();
    OUTLINED_FUNCTION_42_2();
    *(_BYTE *)(v1 + *(int *)(v10 + 20)) = 0;
    sub_1AF6D0BB0();
    OUTLINED_FUNCTION_42_2();
    OUTLINED_FUNCTION_8_9(v2, *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
    v12 = v1 + *(int *)(v10 + 24);
    *(_OWORD *)v12 = v18;
    *(_QWORD *)(v12 + 16) = v19;
    sub_1AF6B7650(v1, v14, type metadata accessor for ToolKitIndexingReason);
    OUTLINED_FUNCTION_108_0();
    sub_1AF6D09EC(v1, type metadata accessor for ToolKitIndexingReason);
  }
  OUTLINED_FUNCTION_2_2();
}

void sub_1AF6CCEB4()
{
  ToolKitIndexingReason.init(from:)();
}

void sub_1AF6CCEC8()
{
  ToolKitIndexingReason.encode(to:)();
}

void sub_1AF6CCEE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1AF6CCEF0(a1, a2, a3, (void (*)(_BYTE *))ToolKitIndexingReason.hash(into:));
}

void sub_1AF6CCEF0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_BYTE *))
{
  _BYTE v5[72];

  OUTLINED_FUNCTION_56();
  a4(v5);
  OUTLINED_FUNCTION_27_1();
  OUTLINED_FUNCTION_26_1();
}

BOOL static ToolKitIndexingRequest.Response.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void ToolKitIndexingRequest.Response.hash(into:)()
{
  sub_1AF76AF24();
  OUTLINED_FUNCTION_19();
}

uint64_t sub_1AF6CCF64(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000012 && a2 == 0x80000001AF781FA0 || (sub_1AF76AD14() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001AF781FC0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_1AF76AD14();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_1AF6CD04C(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000013;
  else
    return 0xD000000000000012;
}

unint64_t sub_1AF6CD088()
{
  char *v0;

  return sub_1AF6CD04C(*v0);
}

uint64_t sub_1AF6CD090@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AF6CCF64(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AF6CD0B4()
{
  sub_1AF6D0E44();
  return sub_1AF76AF90();
}

uint64_t sub_1AF6CD0DC()
{
  sub_1AF6D0E44();
  return sub_1AF76AF9C();
}

uint64_t sub_1AF6CD104()
{
  sub_1AF6D0EBC();
  return sub_1AF76AF90();
}

uint64_t sub_1AF6CD12C()
{
  sub_1AF6D0EBC();
  return sub_1AF76AF9C();
}

uint64_t sub_1AF6CD154()
{
  sub_1AF6D0E80();
  return sub_1AF76AF90();
}

uint64_t sub_1AF6CD17C()
{
  sub_1AF6D0E80();
  return sub_1AF76AF9C();
}

void ToolKitIndexingRequest.Response.encode(to:)()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_46();
  v5 = v4;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4CB48);
  v14 = *(_QWORD *)(v6 - 8);
  v15 = v6;
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_4_7();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4CB50);
  v12 = *(_QWORD *)(v8 - 8);
  v13 = v8;
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_48();
  v16 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4CB58) - 8);
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_47_0();
  v11 = *v0;
  __swift_project_boxed_opaque_existential_1(v5, v5[3]);
  sub_1AF6D0E44();
  sub_1AF76AF6C();
  if ((v11 & 1) != 0)
  {
    OUTLINED_FUNCTION_131();
    OUTLINED_FUNCTION_42_0();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v2, v15);
  }
  else
  {
    sub_1AF6D0EBC();
    OUTLINED_FUNCTION_42_0();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v3, v13);
  }
  OUTLINED_FUNCTION_9_7(v1, *(uint64_t (**)(uint64_t, uint64_t))(v16 + 8));
  OUTLINED_FUNCTION_2_2();
}

void ToolKitIndexingRequest.Response.hashValue.getter()
{
  OUTLINED_FUNCTION_28_4();
  OUTLINED_FUNCTION_33_1();
  OUTLINED_FUNCTION_27_1();
  OUTLINED_FUNCTION_26_1();
}

void ToolKitIndexingRequest.Response.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  OUTLINED_FUNCTION_46();
  v5 = v4;
  v29 = v6;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4CB78);
  v31 = *(_QWORD *)(v27 - 8);
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_2_8();
  v30 = v8;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4CB80);
  OUTLINED_FUNCTION_44_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_26_3();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4CB88);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_18_1();
  __swift_project_boxed_opaque_existential_1(v5, v5[3]);
  sub_1AF6D0E44();
  sub_1AF76AF54();
  if (v1)
    goto LABEL_9;
  v25 = v0;
  v26 = v5;
  v32 = v11;
  v12 = sub_1AF76AB04();
  v13 = v10;
  if (!*(_QWORD *)(v12 + 16))
  {
    v20 = v2;
LABEL_8:
    v21 = OUTLINED_FUNCTION_30_1();
    OUTLINED_FUNCTION_5();
    v23 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4B8C0);
    *v23 = &type metadata for ToolKitIndexingRequest.Response;
    sub_1AF76AAB0();
    OUTLINED_FUNCTION_107_0();
    OUTLINED_FUNCTION_10_4();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v23, *MEMORY[0x1E0DEC450], v21);
    swift_willThrow();
    OUTLINED_FUNCTION_12_7();
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v20, v13);
    v5 = v26;
LABEL_9:
    v24 = (uint64_t)v5;
    goto LABEL_10;
  }
  OUTLINED_FUNCTION_120();
  v14 = *(_BYTE *)(v12 + 32);
  sub_1AF6BB1C4(1);
  v16 = v15;
  v18 = v17;
  swift_bridgeObjectRelease();
  if (v16 != v18 >> 1)
  {
    v20 = v2;
    v13 = v10;
    goto LABEL_8;
  }
  if ((v14 & 1) != 0)
  {
    OUTLINED_FUNCTION_131();
    sub_1AF76AAA4();
    v19 = v29;
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v30, v27);
    OUTLINED_FUNCTION_12_7();
    OUTLINED_FUNCTION_9_7(v2, *(uint64_t (**)(uint64_t, uint64_t))(v32 + 8));
  }
  else
  {
    sub_1AF6D0EBC();
    sub_1AF76AAA4();
    v19 = v29;
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v25, v28);
    OUTLINED_FUNCTION_12_7();
    OUTLINED_FUNCTION_88_0(v2, *(uint64_t (**)(uint64_t, uint64_t))(v32 + 8));
  }
  *v19 = v14;
  v24 = (uint64_t)v26;
LABEL_10:
  __swift_destroy_boxed_opaque_existential_1(v24);
  OUTLINED_FUNCTION_2_2();
}

void sub_1AF6CD664()
{
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_33_1();
  OUTLINED_FUNCTION_27_1();
  OUTLINED_FUNCTION_26_1();
}

void sub_1AF6CD68C()
{
  ToolKitIndexingRequest.Response.init(from:)();
}

void sub_1AF6CD6A0()
{
  ToolKitIndexingRequest.Response.encode(to:)();
}

uint64_t ToolKitIndexingRequest.id.getter()
{
  return sub_1AF6CD6DC((uint64_t)&OBJC_IVAR___WFToolKitIndexingRequest_id, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0998]);
}

uint64_t ToolKitIndexingRequest.timestamp.getter()
{
  return sub_1AF6CD6DC((uint64_t)&OBJC_IVAR___WFToolKitIndexingRequest_timestamp, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0870]);
}

uint64_t sub_1AF6CD6DC(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  OUTLINED_FUNCTION_137(a1, a2);
  v2 = OUTLINED_FUNCTION_93_1();
  return OUTLINED_FUNCTION_68_1(v2, v3, v4, v5);
}

uint64_t ToolKitIndexingRequest.reasons.getter()
{
  return swift_bridgeObjectRetain();
}

void ToolKitIndexingRequest.__allocating_init(reason:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEE4CB90);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_96_0() - 8) + 80);
  v3 = (v2 + 32) & ~v2;
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1AF778CD0;
  sub_1AF6B7650(a1, v4 + v3, type metadata accessor for ToolKitIndexingReason);
  v5 = objc_allocWithZone((Class)OUTLINED_FUNCTION_45_2());
  ToolKitIndexingRequest.init(reasons:)(v4);
  v6 = OUTLINED_FUNCTION_99();
  sub_1AF6D09EC(v6, type metadata accessor for ToolKitIndexingReason);
  OUTLINED_FUNCTION_9();
}

void ToolKitIndexingRequest.__allocating_init(reasons:)()
{
  uint64_t v0;

  OUTLINED_FUNCTION_104_0();
  v0 = OUTLINED_FUNCTION_99();
  ToolKitIndexingRequest.init(reasons:)(v0);
  OUTLINED_FUNCTION_19();
}

id ToolKitIndexingRequest.init(reasons:)(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  objc_super v11;

  v5 = OUTLINED_FUNCTION_138();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_18_1();
  v7 = OUTLINED_FUNCTION_18_7();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_47_0();
  v9 = v1;
  sub_1AF76A228();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 32))(&v9[OBJC_IVAR___WFToolKitIndexingRequest_id], v3, v7);
  sub_1AF76A1EC();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(&v9[OBJC_IVAR___WFToolKitIndexingRequest_timestamp], v2, v5);
  *(_QWORD *)&v9[OBJC_IVAR___WFToolKitIndexingRequest_reasons] = a1;

  v11.receiver = v9;
  v11.super_class = (Class)OUTLINED_FUNCTION_45_2();
  return objc_msgSendSuper2(&v11, sel_init);
}

uint64_t static ToolKitIndexingRequest.supportsSecureCoding.getter()
{
  return 1;
}

void sub_1AF6CD8E8(uint64_t a1)
{
  sub_1AF6CD920(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAE1E8], MEMORY[0x1E0CAE1D8], &qword_1EEE4B380);
}

void sub_1AF6CD904(uint64_t a1)
{
  sub_1AF6CD920(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAE0B8], MEMORY[0x1E0CAE0A8], &qword_1EEE4C9F8);
}

void sub_1AF6CD920(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t (*a3)(void), _QWORD *a4)
{
  OUTLINED_FUNCTION_137(a1, a2);
  swift_allocObject();
  *a4 = a3();
  OUTLINED_FUNCTION_9();
}

void sub_1AF6CD95C(void *a1)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  void *v5;
  void *v6;

  if (qword_1EEE4B390 != -1)
    swift_once();
  OUTLINED_FUNCTION_45_2();
  sub_1AF6D0B00((uint64_t)&qword_1EEE4B398);
  v2 = sub_1AF76A00C();
  v4 = v3;
  v5 = (void *)sub_1AF76A180();
  v6 = (void *)sub_1AF76A558();
  objc_msgSend(a1, sel_encodeObject_forKey_, v5, v6);

  sub_1AF697C78(v2, v4);
  OUTLINED_FUNCTION_58_2();
}

void ToolKitIndexingRequest.__allocating_init(coder:)()
{
  void *v0;

  OUTLINED_FUNCTION_104_0();
  v0 = (void *)OUTLINED_FUNCTION_99();
  ToolKitIndexingRequest.init(coder:)(v0);
  OUTLINED_FUNCTION_19();
}

id ToolKitIndexingRequest.init(coder:)(void *a1)
{
  void *v1;
  char *v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  objc_super v12;
  char *v13;

  swift_getObjectType();
  sub_1AF6D0F0C();
  v3 = v1;
  v4 = sub_1AF76A894();
  if (v4)
  {
    v5 = (void *)v4;
    if (qword_1EEE4B6B8 != -1)
      swift_once();
    v6 = v5;
    sub_1AF76A1B0();

    sub_1AF6D0B00((uint64_t)&qword_1EEE4C178);
    sub_1AF769FE8();

    OUTLINED_FUNCTION_119();
    v7 = OUTLINED_FUNCTION_18_7();
    OUTLINED_FUNCTION_43_2(v7);
    v8 = OUTLINED_FUNCTION_138();
    OUTLINED_FUNCTION_43_2(v8);
    v9 = *(_QWORD *)&v13[OBJC_IVAR___WFToolKitIndexingRequest_reasons];
    OUTLINED_FUNCTION_6_2();

    *(_QWORD *)&v3[OBJC_IVAR___WFToolKitIndexingRequest_reasons] = v9;
    v12.receiver = v3;
    v12.super_class = (Class)OUTLINED_FUNCTION_45_2();
    v10 = objc_msgSendSuper2(&v12, sel_init);

  }
  else
  {

    OUTLINED_FUNCTION_45_2();
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v10;
}

uint64_t sub_1AF6CDD4C()
{
  uint64_t v0;
  _QWORD v2[2];

  OUTLINED_FUNCTION_41_2();
  sub_1AF76A960();
  OUTLINED_FUNCTION_116();
  v2[0] = 0xD00000000000001CLL;
  v2[1] = 0x80000001AF781D70;
  OUTLINED_FUNCTION_18_7();
  sub_1AF6D0B00((uint64_t)&unk_1EEE4A248);
  sub_1AF76AB94();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_18_5();
  OUTLINED_FUNCTION_52_2();
  OUTLINED_FUNCTION_96_0();
  OUTLINED_FUNCTION_99();
  v0 = swift_bridgeObjectRetain();
  MEMORY[0x1B5DFADEC](v0, v2);
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_18_5();
  OUTLINED_FUNCTION_73_0();
  return v2[0];
}

id ToolKitIndexingRequest.__allocating_init()()
{
  return objc_msgSend(OUTLINED_FUNCTION_104_0(), sel_init);
}

void ToolKitIndexingRequest.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1AF6CDE9C(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  BOOL v6;
  char v8;

  v3 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v3 || (sub_1AF76AD14() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070;
    if (v6 || (sub_1AF76AD14() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x736E6F73616572 && a2 == 0xE700000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_1AF76AD14();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

void sub_1AF6CDFC8()
{
  OUTLINED_FUNCTION_28_4();
  sub_1AF76AF24();
  OUTLINED_FUNCTION_27_1();
  OUTLINED_FUNCTION_26_1();
}

uint64_t sub_1AF6CDFF8(char a1)
{
  return qword_1AF77D758[a1];
}

uint64_t sub_1AF6CE018()
{
  char *v0;

  return sub_1AF6CDFF8(*v0);
}

uint64_t sub_1AF6CE020@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AF6CDE9C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AF6CE044()
{
  sub_1AF6D0F48();
  return sub_1AF76AF90();
}

uint64_t sub_1AF6CE06C()
{
  sub_1AF6D0F48();
  return sub_1AF76AF9C();
}

id ToolKitIndexingRequest.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)OUTLINED_FUNCTION_45_2();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1AF6CE114()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEE4B5F0);
  OUTLINED_FUNCTION_40_0();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_71_0();
  sub_1AF6D0F48();
  OUTLINED_FUNCTION_53_1();
  OUTLINED_FUNCTION_18_7();
  sub_1AF6D0B00((uint64_t)&qword_1EEE4B090);
  OUTLINED_FUNCTION_13_7();
  if (!v0)
  {
    sub_1AF76A1F8();
    sub_1AF6D0B00((uint64_t)&unk_1EEE4B080);
    OUTLINED_FUNCTION_13_7();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4B3B8);
    sub_1AF6D0F84((uint64_t)&unk_1EEE4B3C0);
    OUTLINED_FUNCTION_13_7();
  }
  OUTLINED_FUNCTION_49_1(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_43_1();
}

void *ToolKitIndexingRequest.__allocating_init(from:)()
{
  objc_class *v0;
  id v1;

  v1 = objc_allocWithZone(v0);
  return ToolKitIndexingRequest.init(from:)();
}

void *ToolKitIndexingRequest.init(from:)()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  char *v20;
  objc_super v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  OUTLINED_FUNCTION_46();
  v24 = v4;
  v25 = v5;
  v19 = v0;
  v7 = v6;
  v8 = sub_1AF76A1F8();
  v15 = *(_QWORD *)(v8 - 8);
  v16 = v8;
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_25_4();
  OUTLINED_FUNCTION_18_7();
  OUTLINED_FUNCTION_44_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_34_1(v11, v14);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4CBB0);
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_26_3();
  v18 = (uint64_t)v7;
  v12 = __swift_project_boxed_opaque_existential_1(v7, v7[3]);
  sub_1AF6D0F48();
  v20 = v19;
  sub_1AF76AF54();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1(v18);

    type metadata accessor for ToolKitIndexingRequest(0);
    swift_deallocPartialClassInstance();
  }
  else
  {
    LOBYTE(v23) = 0;
    sub_1AF6D0B00((uint64_t)&unk_1EEE4B098);
    sub_1AF76AAF8();
    (*(void (**)(void))(v2 + 32))();
    LOBYTE(v23) = 1;
    sub_1AF6D0B00((uint64_t)&unk_1EEE4CBB8);
    sub_1AF76AAF8();
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 32))(&v20[OBJC_IVAR___WFToolKitIndexingRequest_timestamp], v3, v16);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4B3B8);
    v22 = 2;
    sub_1AF6D0F84((uint64_t)&unk_1EEE4CBC0);
    sub_1AF76AAF8();
    *(_QWORD *)&v20[OBJC_IVAR___WFToolKitIndexingRequest_reasons] = v23;

    v21.receiver = v20;
    v21.super_class = (Class)type metadata accessor for ToolKitIndexingRequest(0);
    v12 = objc_msgSendSuper2(&v21, sel_init);
    OUTLINED_FUNCTION_23_6();
    __swift_destroy_boxed_opaque_existential_1(v18);
  }
  return v12;
}

void *sub_1AF6CE630@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void *result;

  result = ToolKitIndexingRequest.__allocating_init(from:)();
  if (!v1)
    *a1 = result;
  return result;
}

void sub_1AF6CE658()
{
  sub_1AF6CE114();
}

uint64_t sub_1AF6CE678()
{
  return ToolKitIndexingRequest.id.getter();
}

uint64_t sub_1AF6CE698(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v18;
  char v19;
  _QWORD *v20;
  BOOL v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;

  v7 = *v3;
  OUTLINED_FUNCTION_56();
  swift_bridgeObjectRetain();
  sub_1AF76A5AC();
  v8 = OUTLINED_FUNCTION_27_1();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  OUTLINED_FUNCTION_115();
  if ((v11 & 1) != 0)
  {
    v12 = *(_QWORD *)(v7 + 48);
    v13 = (_QWORD *)(v12 + 16 * v10);
    v14 = *v13 == a2 && v13[1] == a3;
    if (v14 || (OUTLINED_FUNCTION_92_1() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v15 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v16 = v15[1];
      *a1 = *v15;
      a1[1] = v16;
      swift_bridgeObjectRetain();
      return 0;
    }
    v18 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v18;
      OUTLINED_FUNCTION_115();
      if ((v19 & 1) == 0)
        break;
      v20 = (_QWORD *)(v12 + 16 * v10);
      v21 = *v20 == a2 && v20[1] == a3;
      if (v21 || (OUTLINED_FUNCTION_92_1() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v23 = *v3;
  *v3 = 0x8000000000000000;
  OUTLINED_FUNCTION_13();
  sub_1AF6CF3F8(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v23;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1AF6CE808(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  int EnumTagSinglePayload;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46[9];

  v3 = v2;
  v6 = type metadata accessor for LaunchServicesSnapshot(0);
  MEMORY[0x1E0C80A78](v6);
  v40 = (uint64_t)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4CAB0);
  MEMORY[0x1E0C80A78](v44);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ToolKitIndexingReason.Changeset.Provenance(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v42 = (uint64_t)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v37 - v15;
  MEMORY[0x1E0C80A78](v14);
  v39 = (uint64_t)&v37 - v17;
  v18 = *v3;
  sub_1AF76AF18();
  swift_bridgeObjectRetain();
  v45 = a2;
  ToolKitIndexingReason.Changeset.Provenance.hash(into:)((uint64_t)v46);
  v19 = sub_1AF76AF3C();
  v20 = -1 << *(_BYTE *)(v18 + 32);
  v21 = v19 & ~v20;
  v22 = v18 + 56;
  if (((*(_QWORD *)(v18 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_18:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v34 = v45;
    v35 = v39;
    sub_1AF6B7650(v45, v39, type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
    v46[0] = *v3;
    *v3 = 0x8000000000000000;
    sub_1AF6CF590(v35, v21, isUniquelyReferenced_nonNull_native);
    *v3 = v46[0];
    swift_bridgeObjectRelease();
    sub_1AF6B74F0(v34, a1, type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
    return 1;
  }
  v37 = v3;
  v38 = a1;
  v23 = ~v20;
  v43 = *(_QWORD *)(v11 + 72);
  v41 = v18;
  while (1)
  {
    v24 = v43 * v21;
    sub_1AF6B7650(*(_QWORD *)(v18 + 48) + v43 * v21, (uint64_t)v16, type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
    v25 = (uint64_t)&v9[*(int *)(v44 + 48)];
    sub_1AF6B7650((uint64_t)v16, (uint64_t)v9, type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
    sub_1AF6B7650(v45, v25, type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v9, 2, v6);
    if (EnumTagSinglePayload)
    {
      if (EnumTagSinglePayload == 1)
      {
        if (__swift_getEnumTagSinglePayload(v25, 2, v6) == 1)
          goto LABEL_20;
      }
      else if (__swift_getEnumTagSinglePayload(v25, 2, v6) == 2)
      {
        goto LABEL_20;
      }
      goto LABEL_10;
    }
    v27 = v23;
    v28 = v22;
    v29 = v42;
    sub_1AF6B7650((uint64_t)v9, v42, type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
    if (!__swift_getEnumTagSinglePayload(v25, 2, v6))
      break;
    sub_1AF6D09EC(v29, type metadata accessor for LaunchServicesSnapshot);
    v22 = v28;
    v23 = v27;
    v18 = v41;
LABEL_10:
    sub_1AF6C6F24((uint64_t)v9, &qword_1EEE4CAB0);
LABEL_11:
    sub_1AF6D09EC((uint64_t)v16, type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
    v21 = (v21 + 1) & v23;
    if (((*(_QWORD *)(v22 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
    {
      swift_bridgeObjectRelease();
      v3 = v37;
      a1 = v38;
      goto LABEL_18;
    }
  }
  v30 = v25;
  v31 = v40;
  sub_1AF6B74F0(v30, v40, type metadata accessor for LaunchServicesSnapshot);
  if ((sub_1AF76A204() & 1) == 0
    || (v32 = type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0),
        *(_QWORD *)(v29 + *(int *)(v32 + 20)) != *(_QWORD *)(v31 + *(int *)(v32 + 20)))
    || (sub_1AF6BFA38(*(_QWORD **)(v29 + *(int *)(v6 + 20)), *(_QWORD **)(v31 + *(int *)(v6 + 20))) & 1) == 0)
  {
    sub_1AF6D09EC(v31, type metadata accessor for LaunchServicesSnapshot);
    sub_1AF6D09EC(v29, type metadata accessor for LaunchServicesSnapshot);
    sub_1AF6D09EC((uint64_t)v9, type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
    v22 = v28;
    v23 = v27;
    v18 = v41;
    goto LABEL_11;
  }
  sub_1AF6D09EC(v31, type metadata accessor for LaunchServicesSnapshot);
  sub_1AF6D09EC(v29, type metadata accessor for LaunchServicesSnapshot);
LABEL_20:
  sub_1AF6D09EC((uint64_t)v9, type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
  sub_1AF6D09EC((uint64_t)v16, type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
  swift_bridgeObjectRelease();
  sub_1AF6D09EC(v45, type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
  sub_1AF6B7650(*(_QWORD *)(*v37 + 48) + v24, v38, type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
  return 0;
}

uint64_t sub_1AF6CEC6C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEE4B460);
  v3 = sub_1AF76A93C();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    if (!v7)
      goto LABEL_7;
LABEL_6:
    v12 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (i = v12 | (v11 << 6); ; i = __clz(__rbit64(v15)) + (v11 << 6))
    {
      v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * i);
      v18 = *v17;
      v19 = v17[1];
      sub_1AF76AF18();
      sub_1AF76A5AC();
      result = sub_1AF76AF3C();
      v20 = -1 << *(_BYTE *)(v4 + 32);
      v21 = result & ~v20;
      v22 = v21 >> 6;
      if (((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6))) == 0)
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v20) >> 6;
        while (++v22 != v25 || (v24 & 1) == 0)
        {
          v26 = v22 == v25;
          if (v22 == v25)
            v22 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v9 + 8 * v22);
          if (v27 != -1)
          {
            v23 = __clz(__rbit64(~v27)) + (v22 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(_QWORD *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
      v28 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v23);
      *v28 = v18;
      v28[1] = v19;
      ++*(_QWORD *)(v4 + 16);
      if (v7)
        goto LABEL_6;
LABEL_7:
      v14 = v11 + 1;
      if (__OFADD__(v11, 1))
        goto LABEL_38;
      if (v14 >= v8)
        goto LABEL_32;
      v15 = v30[v14];
      ++v11;
      if (!v15)
      {
        v11 = v14 + 1;
        if (v14 + 1 >= v8)
          goto LABEL_32;
        v15 = v30[v11];
        if (!v15)
        {
          v11 = v14 + 2;
          if (v14 + 2 >= v8)
            goto LABEL_32;
          v15 = v30[v11];
          if (!v15)
          {
            v16 = v14 + 3;
            if (v16 >= v8)
            {
LABEL_32:
              swift_release();
              v1 = v0;
              v29 = 1 << *(_BYTE *)(v2 + 32);
              if (v29 > 63)
                sub_1AF6DA39C(0, (unint64_t)(v29 + 63) >> 6, v30);
              else
                *v30 = -1 << v29;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v15 = v30[v16];
            if (!v15)
            {
              while (1)
              {
                v11 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_39;
                if (v11 >= v8)
                  goto LABEL_32;
                v15 = v30[v11];
                ++v16;
                if (v15)
                  goto LABEL_20;
              }
            }
            v11 = v16;
          }
        }
      }
LABEL_20:
      v7 = (v15 - 1) & v15;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

void sub_1AF6CEF44()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  int64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t i;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  char *v44;
  int64_t v45;
  _QWORD *v46;
  int64_t v47;
  uint64_t v48;
  char v49[72];

  v1 = v0;
  v2 = type metadata accessor for LaunchServicesSnapshot(0);
  MEMORY[0x1E0C80A78](v2);
  v43 = (uint64_t)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for ToolKitIndexingReason.Changeset.Provenance(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v44 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v48 = (uint64_t)&v42 - v8;
  v9 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4CC78);
  v10 = v9;
  v11 = sub_1AF76A93C();
  v12 = v11;
  if (*(_QWORD *)(v10 + 16))
  {
    v42 = v0;
    v13 = 1 << *(_BYTE *)(v10 + 32);
    v14 = *(_QWORD *)(v10 + 56);
    v46 = (_QWORD *)(v10 + 56);
    if (v13 < 64)
      v15 = ~(-1 << v13);
    else
      v15 = -1;
    v16 = v15 & v14;
    v45 = (unint64_t)(v13 + 63) >> 6;
    v17 = v11 + 56;
    swift_retain();
    v18 = 0;
    v19 = (uint64_t)v44;
    if (!v16)
      goto LABEL_7;
LABEL_6:
    v20 = __clz(__rbit64(v16));
    v16 &= v16 - 1;
    v47 = v18;
    for (i = v20 | (v18 << 6); ; i = __clz(__rbit64(v23)) + (v24 << 6))
    {
      v26 = *(_QWORD *)(v5 + 72);
      v27 = v48;
      sub_1AF6B74F0(*(_QWORD *)(v10 + 48) + v26 * i, v48, type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
      sub_1AF76AF18();
      sub_1AF6B7650(v27, v19, type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
      if (__swift_getEnumTagSinglePayload(v19, 2, v2))
      {
        sub_1AF76AF24();
      }
      else
      {
        v28 = v43;
        sub_1AF6B74F0(v19, v43, type metadata accessor for LaunchServicesSnapshot);
        sub_1AF76AF24();
        sub_1AF76A234();
        v29 = v5;
        v30 = v10;
        sub_1AF6D0B00((uint64_t)&qword_1ED01F838);
        sub_1AF76A51C();
        type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0);
        sub_1AF76AF24();
        v31 = *(_QWORD *)(v28 + *(int *)(v2 + 20));
        swift_bridgeObjectRetain();
        sub_1AF6C55B0((uint64_t)v49, v31);
        v10 = v30;
        v5 = v29;
        v19 = (uint64_t)v44;
        swift_bridgeObjectRelease();
        sub_1AF6D09EC(v28, type metadata accessor for LaunchServicesSnapshot);
      }
      v32 = sub_1AF76AF3C();
      v33 = -1 << *(_BYTE *)(v12 + 32);
      v34 = v32 & ~v33;
      v35 = v34 >> 6;
      if (((-1 << v34) & ~*(_QWORD *)(v17 + 8 * (v34 >> 6))) == 0)
      {
        v37 = 0;
        v38 = (unint64_t)(63 - v33) >> 6;
        while (++v35 != v38 || (v37 & 1) == 0)
        {
          v39 = v35 == v38;
          if (v35 == v38)
            v35 = 0;
          v37 |= v39;
          v40 = *(_QWORD *)(v17 + 8 * v35);
          if (v40 != -1)
          {
            v36 = __clz(__rbit64(~v40)) + (v35 << 6);
            goto LABEL_33;
          }
        }
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
        return;
      }
      v36 = __clz(__rbit64((-1 << v34) & ~*(_QWORD *)(v17 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
LABEL_33:
      *(_QWORD *)(v17 + ((v36 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v36;
      sub_1AF6B74F0(v48, *(_QWORD *)(v12 + 48) + v36 * v26, type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
      ++*(_QWORD *)(v12 + 16);
      v18 = v47;
      if (v16)
        goto LABEL_6;
LABEL_7:
      v22 = v18 + 1;
      if (__OFADD__(v18, 1))
        goto LABEL_41;
      if (v22 >= v45)
        goto LABEL_35;
      v23 = v46[v22];
      v24 = v18 + 1;
      if (!v23)
      {
        v24 = v18 + 2;
        if (v18 + 2 >= v45)
          goto LABEL_35;
        v23 = v46[v24];
        if (!v23)
        {
          v24 = v18 + 3;
          if (v18 + 3 >= v45)
            goto LABEL_35;
          v23 = v46[v24];
          if (!v23)
          {
            v25 = v18 + 4;
            if (v18 + 4 >= v45)
            {
LABEL_35:
              swift_release();
              v1 = v42;
              v41 = 1 << *(_BYTE *)(v10 + 32);
              if (v41 > 63)
                sub_1AF6DA39C(0, (unint64_t)(v41 + 63) >> 6, v46);
              else
                *v46 = -1 << v41;
              *(_QWORD *)(v10 + 16) = 0;
              break;
            }
            v23 = v46[v25];
            if (!v23)
            {
              while (1)
              {
                v24 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_42;
                if (v24 >= v45)
                  goto LABEL_35;
                v23 = v46[v24];
                ++v25;
                if (v23)
                  goto LABEL_20;
              }
            }
            v24 = v18 + 4;
          }
        }
      }
LABEL_20:
      v16 = (v23 - 1) & v23;
      v47 = v24;
    }
  }
  swift_release();
  *v1 = v12;
}

uint64_t sub_1AF6CF3F8(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_1AF6CEC6C();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_1AF6CF9A8();
      goto LABEL_22;
    }
    sub_1AF6CFD7C();
  }
  v11 = *v4;
  sub_1AF76AF18();
  sub_1AF76A5AC();
  result = sub_1AF76AF3C();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_1AF76AD14(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_1AF76AE94();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_1AF76AD14();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

void sub_1AF6CF590(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int EnumTagSinglePayload;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  _QWORD v36[2];
  uint64_t (*v37)(uint64_t);
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44[72];

  v43 = a1;
  v7 = type metadata accessor for LaunchServicesSnapshot(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (uint64_t (*)(uint64_t))((char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4CAB0);
  MEMORY[0x1E0C80A78](v42);
  v11 = (char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ToolKitIndexingReason.Changeset.Provenance(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)v36 - v16;
  v18 = *(_QWORD *)(*v3 + 16);
  v19 = *(_QWORD *)(*v3 + 24);
  v38 = v13;
  v39 = v3;
  if (v19 <= v18 || (a3 & 1) == 0)
  {
    v41 = v15;
    if ((a3 & 1) != 0)
    {
      sub_1AF6CEF44();
    }
    else
    {
      if (v19 > v18)
      {
        sub_1AF6CFB58();
        goto LABEL_24;
      }
      sub_1AF6D0024();
    }
    v4 = *v3;
    sub_1AF76AF18();
    ToolKitIndexingReason.Changeset.Provenance.hash(into:)((uint64_t)v44);
    v20 = sub_1AF76AF3C();
    v21 = -1 << *(_BYTE *)(v4 + 32);
    a2 = v20 & ~v21;
    v22 = v4 + 56;
    if (((*(_QWORD *)(v4 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
    {
      v36[1] = v12;
      v37 = v9;
      v23 = ~v21;
      v24 = *(_QWORD *)(v13 + 72);
      v40 = v24;
      while (1)
      {
        sub_1AF6B7650(*(_QWORD *)(v4 + 48) + v24 * a2, (uint64_t)v17, type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
        v9 = (uint64_t (*)(uint64_t))&v11[*(int *)(v42 + 48)];
        sub_1AF6B7650((uint64_t)v17, (uint64_t)v11, type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
        sub_1AF6B7650(v43, (uint64_t)v9, type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
        EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v11, 2, v7);
        if (EnumTagSinglePayload)
          break;
        v26 = v23;
        v27 = v22;
        v28 = v4;
        v4 = v41;
        sub_1AF6B7650((uint64_t)v11, v41, type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
        if (__swift_getEnumTagSinglePayload((uint64_t)v9, 2, v7))
        {
          sub_1AF6D09EC(v4, type metadata accessor for LaunchServicesSnapshot);
          v4 = v28;
          v22 = v27;
          v23 = v26;
          v24 = v40;
LABEL_17:
          sub_1AF6C6F24((uint64_t)v11, &qword_1EEE4CAB0);
          goto LABEL_18;
        }
        v29 = (uint64_t)v9;
        v9 = v37;
        sub_1AF6B74F0(v29, (uint64_t)v37, type metadata accessor for LaunchServicesSnapshot);
        if ((sub_1AF76A204() & 1) != 0)
        {
          v30 = type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0);
          if (*(_QWORD *)(v4 + *(int *)(v30 + 20)) == *(_QWORD *)((char *)v9 + *(int *)(v30 + 20))
            && (sub_1AF6BFA38(*(_QWORD **)(v4 + *(int *)(v7 + 20)), *(_QWORD **)((char *)v9 + *(int *)(v7 + 20))) & 1) != 0)
          {
            goto LABEL_27;
          }
        }
        v31 = (uint64_t)v9;
        v9 = type metadata accessor for LaunchServicesSnapshot;
        sub_1AF6D09EC(v31, type metadata accessor for LaunchServicesSnapshot);
        sub_1AF6D09EC(v4, type metadata accessor for LaunchServicesSnapshot);
        sub_1AF6D09EC((uint64_t)v11, type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
        v4 = v28;
        v22 = v27;
        v23 = v26;
        v24 = v40;
LABEL_18:
        sub_1AF6D09EC((uint64_t)v17, type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
        a2 = (a2 + 1) & v23;
        if (((*(_QWORD *)(v22 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          goto LABEL_24;
      }
      if (EnumTagSinglePayload == 1)
      {
        if (__swift_getEnumTagSinglePayload((uint64_t)v9, 2, v7) == 1)
          goto LABEL_28;
      }
      else if (__swift_getEnumTagSinglePayload((uint64_t)v9, 2, v7) == 2)
      {
        goto LABEL_28;
      }
      goto LABEL_17;
    }
  }
LABEL_24:
  v32 = *v39;
  *(_QWORD *)(*v39 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  sub_1AF6B74F0(v43, *(_QWORD *)(v32 + 48) + *(_QWORD *)(v38 + 72) * a2, type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
  v33 = *(_QWORD *)(v32 + 16);
  v34 = __OFADD__(v33, 1);
  v35 = v33 + 1;
  if (v34)
  {
    __break(1u);
LABEL_27:
    sub_1AF6D09EC((uint64_t)v9, type metadata accessor for LaunchServicesSnapshot);
    sub_1AF6D09EC(v4, type metadata accessor for LaunchServicesSnapshot);
LABEL_28:
    sub_1AF6D09EC((uint64_t)v11, type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
    sub_1AF6D09EC((uint64_t)v17, type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
    sub_1AF76AE94();
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v32 + 16) = v35;
  }
}

void *sub_1AF6CF9A8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEE4B460);
  v2 = *v0;
  v3 = sub_1AF76A930();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = *(_QWORD *)(v2 + 56);
  v12 = -1;
  if (v10 < 64)
    v12 = ~(-1 << v10);
  v13 = v12 & v11;
  v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0)
    goto LABEL_12;
LABEL_11:
  v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v15 | (v9 << 6); ; i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    v20 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * i);
    v21 = v20[1];
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * i);
    *v22 = *v20;
    v22[1] = v21;
    result = (void *)swift_bridgeObjectRetain();
    if (v13)
      goto LABEL_11;
LABEL_12:
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
      {
        v9 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v6 + 8 * v9);
        if (!v18)
          break;
      }
    }
LABEL_25:
    v13 = (v18 - 1) & v18;
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void sub_1AF6CFB58()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t i;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t *v25;

  v1 = v0;
  v2 = type metadata accessor for ToolKitIndexingReason.Changeset.Provenance(0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4CC78);
  v6 = *v0;
  v7 = sub_1AF76A930();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    swift_release();
LABEL_30:
    *v1 = v8;
    return;
  }
  v25 = v1;
  v9 = (void *)(v7 + 56);
  v10 = v6 + 56;
  v11 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)v9 >= v6 + 56 + 8 * v11)
    memmove(v9, (const void *)(v6 + 56), 8 * v11);
  v13 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v14 = 1 << *(_BYTE *)(v6 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v6 + 56);
  v17 = (unint64_t)(v14 + 63) >> 6;
  if (!v16)
    goto LABEL_12;
LABEL_11:
  v18 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  for (i = v18 | (v13 << 6); ; i = __clz(__rbit64(v21)) + (v13 << 6))
  {
    v23 = *(_QWORD *)(v3 + 72) * i;
    sub_1AF6B7650(*(_QWORD *)(v6 + 48) + v23, (uint64_t)v5, type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
    sub_1AF6B74F0((uint64_t)v5, *(_QWORD *)(v8 + 48) + v23, type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
    if (v16)
      goto LABEL_11;
LABEL_12:
    v20 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v20 >= v17)
      goto LABEL_28;
    v21 = *(_QWORD *)(v10 + 8 * v20);
    ++v13;
    if (!v21)
    {
      v13 = v20 + 1;
      if (v20 + 1 >= v17)
        goto LABEL_28;
      v21 = *(_QWORD *)(v10 + 8 * v13);
      if (!v21)
      {
        v13 = v20 + 2;
        if (v20 + 2 >= v17)
          goto LABEL_28;
        v21 = *(_QWORD *)(v10 + 8 * v13);
        if (!v21)
          break;
      }
    }
LABEL_25:
    v16 = (v21 - 1) & v21;
  }
  v22 = v20 + 3;
  if (v22 >= v17)
  {
LABEL_28:
    swift_release();
    v1 = v25;
    goto LABEL_30;
  }
  v21 = *(_QWORD *)(v10 + 8 * v22);
  if (v21)
  {
    v13 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v13 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v13 >= v17)
      goto LABEL_28;
    v21 = *(_QWORD *)(v10 + 8 * v13);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_32:
  __break(1u);
}

uint64_t sub_1AF6CFD7C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEE4B460);
  v3 = sub_1AF76A93C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_34:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  if (!v8)
    goto LABEL_7;
LABEL_6:
  v12 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v12 | (v11 << 6); ; i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * i);
    v18 = *v17;
    v19 = v17[1];
    sub_1AF76AF18();
    swift_bridgeObjectRetain();
    sub_1AF76A5AC();
    result = sub_1AF76AF3C();
    v20 = -1 << *(_BYTE *)(v4 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6))) == 0)
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      while (++v22 != v25 || (v24 & 1) == 0)
      {
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v9 + 8 * v22);
        if (v27 != -1)
        {
          v23 = __clz(__rbit64(~v27)) + (v22 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v28 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v23);
    *v28 = v18;
    v28[1] = v19;
    ++*(_QWORD *)(v4 + 16);
    if (v8)
      goto LABEL_6;
LABEL_7:
    v14 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_36;
    if (v14 >= v29)
      goto LABEL_32;
    v15 = *(_QWORD *)(v6 + 8 * v14);
    ++v11;
    if (!v15)
    {
      v11 = v14 + 1;
      if (v14 + 1 >= v29)
        goto LABEL_32;
      v15 = *(_QWORD *)(v6 + 8 * v11);
      if (!v15)
      {
        v11 = v14 + 2;
        if (v14 + 2 >= v29)
          goto LABEL_32;
        v15 = *(_QWORD *)(v6 + 8 * v11);
        if (!v15)
          break;
      }
    }
LABEL_20:
    v8 = (v15 - 1) & v15;
  }
  v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_32:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_34;
  }
  v15 = *(_QWORD *)(v6 + 8 * v16);
  if (v15)
  {
    v11 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    v11 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v11 >= v29)
      goto LABEL_32;
    v15 = *(_QWORD *)(v6 + 8 * v11);
    ++v16;
    if (v15)
      goto LABEL_20;
  }
LABEL_37:
  __break(1u);
  return result;
}

void sub_1AF6D0024()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t i;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char v36;
  unint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  int64_t v45;
  uint64_t v46;
  char v47[72];

  v1 = v0;
  v46 = type metadata accessor for LaunchServicesSnapshot(0);
  MEMORY[0x1E0C80A78](v46);
  v42 = (uint64_t)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for ToolKitIndexingReason.Changeset.Provenance(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v43 = (char *)&v40 - v8;
  v9 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4CC78);
  v10 = sub_1AF76A93C();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
  {
    swift_release();
LABEL_37:
    *v1 = v11;
    return;
  }
  v40 = v0;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 56);
  v44 = v9 + 56;
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v45 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 56;
  swift_retain();
  v17 = 0;
  v18 = (uint64_t)v43;
  v41 = v7;
  if (!v15)
    goto LABEL_7;
LABEL_6:
  v19 = __clz(__rbit64(v15));
  v15 &= v15 - 1;
  for (i = v19 | (v17 << 6); ; i = __clz(__rbit64(v22)) + (v17 << 6))
  {
    v24 = *(_QWORD *)(v4 + 72);
    sub_1AF6B7650(*(_QWORD *)(v9 + 48) + v24 * i, v18, type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
    sub_1AF76AF18();
    sub_1AF6B7650(v18, (uint64_t)v7, type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
    if (__swift_getEnumTagSinglePayload((uint64_t)v7, 2, v46))
    {
      sub_1AF76AF24();
    }
    else
    {
      v25 = (uint64_t)v7;
      v26 = v9;
      v27 = v4;
      v28 = v42;
      sub_1AF6B74F0(v25, v42, type metadata accessor for LaunchServicesSnapshot);
      sub_1AF76AF24();
      sub_1AF76A234();
      sub_1AF6D0B00((uint64_t)&qword_1ED01F838);
      sub_1AF76A51C();
      type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0);
      sub_1AF76AF24();
      v29 = *(_QWORD *)(v28 + *(int *)(v46 + 20));
      swift_bridgeObjectRetain();
      sub_1AF6C55B0((uint64_t)v47, v29);
      v18 = (uint64_t)v43;
      swift_bridgeObjectRelease();
      v30 = v28;
      v4 = v27;
      v9 = v26;
      v7 = v41;
      sub_1AF6D09EC(v30, type metadata accessor for LaunchServicesSnapshot);
    }
    v31 = sub_1AF76AF3C();
    v32 = -1 << *(_BYTE *)(v11 + 32);
    v33 = v31 & ~v32;
    v34 = v33 >> 6;
    if (((-1 << v33) & ~*(_QWORD *)(v16 + 8 * (v33 >> 6))) == 0)
    {
      v36 = 0;
      v37 = (unint64_t)(63 - v32) >> 6;
      while (++v34 != v37 || (v36 & 1) == 0)
      {
        v38 = v34 == v37;
        if (v34 == v37)
          v34 = 0;
        v36 |= v38;
        v39 = *(_QWORD *)(v16 + 8 * v34);
        if (v39 != -1)
        {
          v35 = __clz(__rbit64(~v39)) + (v34 << 6);
          goto LABEL_33;
        }
      }
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    v35 = __clz(__rbit64((-1 << v33) & ~*(_QWORD *)(v16 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
LABEL_33:
    *(_QWORD *)(v16 + ((v35 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v35;
    sub_1AF6B74F0(v18, *(_QWORD *)(v11 + 48) + v35 * v24, type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
    ++*(_QWORD *)(v11 + 16);
    if (v15)
      goto LABEL_6;
LABEL_7:
    v21 = v17 + 1;
    if (__OFADD__(v17, 1))
      goto LABEL_39;
    if (v21 >= v45)
      goto LABEL_35;
    v22 = *(_QWORD *)(v44 + 8 * v21);
    ++v17;
    if (!v22)
    {
      v17 = v21 + 1;
      if (v21 + 1 >= v45)
        goto LABEL_35;
      v22 = *(_QWORD *)(v44 + 8 * v17);
      if (!v22)
      {
        v17 = v21 + 2;
        if (v21 + 2 >= v45)
          goto LABEL_35;
        v22 = *(_QWORD *)(v44 + 8 * v17);
        if (!v22)
          break;
      }
    }
LABEL_20:
    v15 = (v22 - 1) & v22;
  }
  v23 = v21 + 3;
  if (v23 >= v45)
  {
LABEL_35:
    swift_release_n();
    v1 = v40;
    goto LABEL_37;
  }
  v22 = *(_QWORD *)(v44 + 8 * v23);
  if (v22)
  {
    v17 = v23;
    goto LABEL_20;
  }
  while (1)
  {
    v17 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v17 >= v45)
      goto LABEL_35;
    v22 = *(_QWORD *)(v44 + 8 * v17);
    ++v23;
    if (v22)
      goto LABEL_20;
  }
LABEL_40:
  __break(1u);
}

void sub_1AF6D04A0(__int128 *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  unint64_t v26;
  unint64_t i;
  unint64_t v29;
  int64_t v30;
  int EnumTagSinglePayload;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[2];
  char *v38;
  uint64_t v39;
  uint64_t v40;
  int64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45[72];
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;

  v43 = type metadata accessor for LaunchServicesSnapshot(0);
  MEMORY[0x1E0C80A78](v43);
  v40 = (uint64_t)v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ToolKitIndexingReason.Changeset.Provenance(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v7);
  v12 = (char *)v37 - v11;
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)v37 - v13;
  v15 = *((_QWORD *)a1 + 8);
  v16 = a1[1];
  v46 = *a1;
  v47 = v16;
  v17 = a1[2];
  v18 = a1[3];
  v37[1] = a1;
  v48 = v17;
  v49 = v18;
  v50 = v15;
  sub_1AF76AF3C();
  v19 = *(_QWORD *)(a2 + 56);
  v42 = a2 + 56;
  v20 = 1 << *(_BYTE *)(a2 + 32);
  v21 = -1;
  if (v20 < 64)
    v21 = ~(-1 << v20);
  v22 = v21 & v19;
  v41 = (unint64_t)(v20 + 63) >> 6;
  v23 = a2;
  swift_bridgeObjectRetain();
  v24 = 0;
  v25 = 0;
  v39 = v6;
  v38 = v12;
  if (!v22)
    goto LABEL_5;
LABEL_4:
  v26 = __clz(__rbit64(v22));
  v22 &= v22 - 1;
  for (i = v26 | (v25 << 6); ; i = __clz(__rbit64(v29)) + (v25 << 6))
  {
    sub_1AF6B7650(*(_QWORD *)(v23 + 48) + *(_QWORD *)(v6 + 72) * i, (uint64_t)v14, type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
    sub_1AF6B74F0((uint64_t)v14, (uint64_t)v12, type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
    sub_1AF76AF18();
    sub_1AF6B7650((uint64_t)v12, (uint64_t)v9, type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v9, 2, v43);
    v44 = v24;
    if (EnumTagSinglePayload)
    {
      sub_1AF76AF24();
    }
    else
    {
      v32 = v40;
      sub_1AF6B74F0((uint64_t)v9, v40, type metadata accessor for LaunchServicesSnapshot);
      sub_1AF76AF24();
      sub_1AF76A234();
      sub_1AF6D0B00((uint64_t)&qword_1ED01F838);
      v33 = v43;
      v12 = v38;
      sub_1AF76A51C();
      type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0);
      sub_1AF76AF24();
      v34 = *(_QWORD *)(v32 + *(int *)(v33 + 20));
      swift_bridgeObjectRetain();
      sub_1AF6C55B0((uint64_t)v45, v34);
      swift_bridgeObjectRelease();
      v35 = v32;
      v6 = v39;
      sub_1AF6D09EC(v35, type metadata accessor for LaunchServicesSnapshot);
    }
    v36 = sub_1AF76AF3C();
    sub_1AF6D09EC((uint64_t)v12, type metadata accessor for ToolKitIndexingReason.Changeset.Provenance);
    v24 = v36 ^ v44;
    if (v22)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v25++, 1))
      goto LABEL_22;
    if (v25 >= v41)
    {
LABEL_20:
      swift_release();
      sub_1AF76AF24();
      return;
    }
    v29 = *(_QWORD *)(v42 + 8 * v25);
    if (!v29)
      break;
LABEL_14:
    v22 = (v29 - 1) & v29;
  }
  v30 = v25 + 1;
  if (v25 + 1 >= v41)
    goto LABEL_20;
  v29 = *(_QWORD *)(v42 + 8 * v30);
  if (v29)
  {
    ++v25;
    goto LABEL_14;
  }
  while (1)
  {
    v25 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v25 >= v41)
      goto LABEL_20;
    v29 = *(_QWORD *)(v42 + 8 * v25);
    ++v30;
    if (v29)
      goto LABEL_14;
  }
  __break(1u);
LABEL_22:
  __break(1u);
}

uint64_t sub_1AF6D0840(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t result;
  uint64_t v9;
  int64_t v10;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;

  sub_1AF76AF3C();
  v3 = a2 + 56;
  v4 = 1 << *(_BYTE *)(a2 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a2 + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  v10 = 0;
  if (!v6)
    goto LABEL_5;
LABEL_4:
  for (v6 &= v6 - 1; ; v6 = (v12 - 1) & v12)
  {
    sub_1AF76AF18();
    swift_bridgeObjectRetain();
    sub_1AF76A5AC();
    v14 = sub_1AF76AF3C();
    result = swift_bridgeObjectRelease();
    v9 ^= v14;
    if (v6)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v10++, 1))
      goto LABEL_19;
    if (v10 >= v7)
    {
LABEL_17:
      swift_release();
      return sub_1AF76AF24();
    }
    v12 = *(_QWORD *)(v3 + 8 * v10);
    if (!v12)
      break;
LABEL_14:
    ;
  }
  v13 = v10 + 1;
  if (v10 + 1 >= v7)
    goto LABEL_17;
  v12 = *(_QWORD *)(v3 + 8 * v13);
  if (v12)
  {
    ++v10;
    goto LABEL_14;
  }
  while (1)
  {
    v10 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v10 >= v7)
      goto LABEL_17;
    v12 = *(_QWORD *)(v3 + 8 * v10);
    ++v13;
    if (v12)
      goto LABEL_14;
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for ToolKitIndexingReason.Changeset.Provenance(uint64_t a1)
{
  return sub_1AF6B75E4(a1, (uint64_t *)&unk_1EEE4B248);
}

void sub_1AF6D09EC(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_137(a1, a2);
  OUTLINED_FUNCTION_51_0(v2);
  OUTLINED_FUNCTION_19();
}

unint64_t sub_1AF6D0A10()
{
  unint64_t result;

  result = qword_1EEE4B1D8;
  if (!qword_1EEE4B1D8)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77D2B0, &type metadata for ToolKitIndexingReason.Changeset.Provenance.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4B1D8);
  }
  return result;
}

unint64_t sub_1AF6D0A4C()
{
  unint64_t result;

  result = qword_1EEE4CAE0;
  if (!qword_1EEE4CAE0)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77D260, &type metadata for ToolKitIndexingReason.Changeset.Provenance.AppProtectionChangeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4CAE0);
  }
  return result;
}

unint64_t sub_1AF6D0A88()
{
  unint64_t result;

  result = qword_1EEE4CAE8;
  if (!qword_1EEE4CAE8)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77D210, &type metadata for ToolKitIndexingReason.Changeset.Provenance.AppIntentsChangeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4CAE8);
  }
  return result;
}

unint64_t sub_1AF6D0AC4()
{
  unint64_t result;

  result = qword_1EEE4B210;
  if (!qword_1EEE4B210)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77D1C0, &type metadata for ToolKitIndexingReason.Changeset.Provenance.LaunchServicesSnapshotCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4B210);
  }
  return result;
}

void sub_1AF6D0B00(uint64_t a1)
{
  unint64_t *v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (!OUTLINED_FUNCTION_136(a1))
  {
    v4 = v3;
    v5 = v2(255);
    atomic_store(MEMORY[0x1B5DFC634](v4, v5), v1);
  }
  OUTLINED_FUNCTION_19();
}

unint64_t sub_1AF6D0B38(unint64_t result)
{
  if (result >= 2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1AF6D0B74()
{
  unint64_t result;

  result = qword_1EEE4B2A8;
  if (!qword_1EEE4B2A8)
  {
    result = MEMORY[0x1B5DFC634](&protocol conformance descriptor for ToolKitIndexingReason.Changeset, &type metadata for ToolKitIndexingReason.Changeset);
    atomic_store(result, (unint64_t *)&qword_1EEE4B2A8);
  }
  return result;
}

unint64_t sub_1AF6D0BB0()
{
  unint64_t result;

  result = qword_1EEE4B2B0;
  if (!qword_1EEE4B2B0)
  {
    result = MEMORY[0x1B5DFC634](&protocol conformance descriptor for ToolKitIndexingReason.Changeset, &type metadata for ToolKitIndexingReason.Changeset);
    atomic_store(result, (unint64_t *)&qword_1EEE4B2B0);
  }
  return result;
}

unint64_t sub_1AF6D0BEC()
{
  unint64_t result;

  result = qword_1EEE4B1B8;
  if (!qword_1EEE4B1B8)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77D170, &type metadata for ToolKitIndexingReason.Changeset.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4B1B8);
  }
  return result;
}

unint64_t sub_1AF6D0C28()
{
  unint64_t result;

  result = qword_1EEE4CB00;
  if (!qword_1EEE4CB00)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77D120, &type metadata for ToolKitIndexingReason.Changeset.NoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4CB00);
  }
  return result;
}

unint64_t sub_1AF6D0C64()
{
  unint64_t result;

  result = qword_1EEE4B288;
  if (!qword_1EEE4B288)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77D0D0, &type metadata for ToolKitIndexingReason.Changeset.PartialCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4B288);
  }
  return result;
}

unint64_t sub_1AF6D0CA0()
{
  unint64_t result;

  result = qword_1EEE4B258;
  if (!qword_1EEE4B258)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77D080, &type metadata for ToolKitIndexingReason.Changeset.FullCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4B258);
  }
  return result;
}

unint64_t sub_1AF6D0CDC(uint64_t a1)
{
  unint64_t *v1;
  unint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = OUTLINED_FUNCTION_136(a1);
  if (!result)
  {
    v5 = v4;
    v6 = v3;
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EEE4B410);
    v8 = v6;
    result = MEMORY[0x1B5DFC634](v5, v7, &v8);
    atomic_store(result, v1);
  }
  return result;
}

void sub_1AF6D0D38(uint64_t a1)
{
  if (!OUTLINED_FUNCTION_136(a1))
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE4B400);
    OUTLINED_FUNCTION_103_0();
    OUTLINED_FUNCTION_65_2();
  }
  OUTLINED_FUNCTION_58_2();
}

unint64_t sub_1AF6D0D90()
{
  unint64_t result;

  result = qword_1EEE4B0A8;
  if (!qword_1EEE4B0A8)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77D030, &type metadata for ToolKitIndexingReason.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4B0A8);
  }
  return result;
}

unint64_t sub_1AF6D0DCC()
{
  unint64_t result;

  result = qword_1EEE4B1A8;
  if (!qword_1EEE4B1A8)
  {
    result = MEMORY[0x1B5DFC634](&protocol conformance descriptor for ToolKitIndexingReason.Trigger, &type metadata for ToolKitIndexingReason.Trigger);
    atomic_store(result, (unint64_t *)&qword_1EEE4B1A8);
  }
  return result;
}

unint64_t sub_1AF6D0E08()
{
  unint64_t result;

  result = qword_1EEE4CB40;
  if (!qword_1EEE4CB40)
  {
    result = MEMORY[0x1B5DFC634](&protocol conformance descriptor for ToolKitIndexingReason.Trigger, &type metadata for ToolKitIndexingReason.Trigger);
    atomic_store(result, (unint64_t *)&qword_1EEE4CB40);
  }
  return result;
}

unint64_t sub_1AF6D0E44()
{
  unint64_t result;

  result = qword_1EEE4CB60;
  if (!qword_1EEE4CB60)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77CFE0, &type metadata for ToolKitIndexingRequest.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4CB60);
  }
  return result;
}

unint64_t sub_1AF6D0E80()
{
  unint64_t result;

  result = qword_1EEE4CB68;
  if (!qword_1EEE4CB68)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77CF90, &type metadata for ToolKitIndexingRequest.Response.ReindexingNotNeededCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4CB68);
  }
  return result;
}

unint64_t sub_1AF6D0EBC()
{
  unint64_t result;

  result = qword_1EEE4CB70;
  if (!qword_1EEE4CB70)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77CF40, &type metadata for ToolKitIndexingRequest.Response.ReindexingFinishedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4CB70);
  }
  return result;
}

uint64_t type metadata accessor for ToolKitIndexingRequest(uint64_t a1)
{
  return sub_1AF6B75E4(a1, (uint64_t *)&unk_1EEE4A260);
}

unint64_t sub_1AF6D0F0C()
{
  unint64_t result;

  result = qword_1EEE4CBA0;
  if (!qword_1EEE4CBA0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EEE4CBA0);
  }
  return result;
}

unint64_t sub_1AF6D0F48()
{
  unint64_t result;

  result = qword_1EEE4B368;
  if (!qword_1EEE4B368)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77CEF0, &type metadata for ToolKitIndexingRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4B368);
  }
  return result;
}

void sub_1AF6D0F84(uint64_t a1)
{
  if (!OUTLINED_FUNCTION_136(a1))
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE4B3B8);
    OUTLINED_FUNCTION_103_0();
    OUTLINED_FUNCTION_65_2();
  }
  OUTLINED_FUNCTION_58_2();
}

unint64_t sub_1AF6D0FE0()
{
  unint64_t result;

  result = qword_1EEE4CBD0;
  if (!qword_1EEE4CBD0)
  {
    result = MEMORY[0x1B5DFC634](&protocol conformance descriptor for ToolKitIndexingReason.Trigger, &type metadata for ToolKitIndexingReason.Trigger);
    atomic_store(result, (unint64_t *)&qword_1EEE4CBD0);
  }
  return result;
}

void sub_1AF6D101C()
{
  sub_1AF6D0B00((uint64_t)&unk_1EEE4B238);
}

unint64_t sub_1AF6D104C()
{
  unint64_t result;

  result = qword_1EEE4CBE0;
  if (!qword_1EEE4CBE0)
  {
    result = MEMORY[0x1B5DFC634](&protocol conformance descriptor for ToolKitIndexingReason.Changeset, &type metadata for ToolKitIndexingReason.Changeset);
    atomic_store(result, (unint64_t *)&qword_1EEE4CBE0);
  }
  return result;
}

void sub_1AF6D1088()
{
  sub_1AF6D0B00((uint64_t)&unk_1EEE4CBE8);
}

void sub_1AF6D10B4()
{
  sub_1AF6D0B00((uint64_t)&qword_1ED01F838);
}

unint64_t sub_1AF6D10E4()
{
  unint64_t result;

  result = qword_1EEE4CBF0;
  if (!qword_1EEE4CBF0)
  {
    result = MEMORY[0x1B5DFC634](&protocol conformance descriptor for ToolKitIndexingRequest.Response, &type metadata for ToolKitIndexingRequest.Response);
    atomic_store(result, (unint64_t *)&qword_1EEE4CBF0);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for ToolKitIndexingReason(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1AF76A234();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 24);
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
    v9 = (_QWORD *)((char *)a1 + v8);
    v10 = (_QWORD *)((char *)a2 + v8);
    if (*v10 >= 2uLL)
    {
      v12 = v10[1];
      v13 = v10[2];
      *v9 = *v10;
      v9[1] = v12;
      v9[2] = v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)v9 = *(_OWORD *)v10;
      v9[2] = v10[2];
    }
  }
  return a1;
}

unint64_t destroy for ToolKitIndexingReason(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;

  v4 = sub_1AF76A234();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  result = *(_QWORD *)(a1 + *(int *)(a2 + 24));
  if (result >= 2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for ToolKitIndexingReason(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_1AF76A234();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  if (*v9 >= 2uLL)
  {
    v10 = v9[1];
    v11 = v9[2];
    *v8 = *v9;
    v8[1] = v10;
    v8[2] = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v8 = *(_OWORD *)v9;
    v8[2] = v9[2];
  }
  return a1;
}

uint64_t assignWithCopy for ToolKitIndexingReason(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  __int128 *v9;
  unint64_t v10;
  __int128 v11;
  unint64_t v12;

  v6 = sub_1AF76A234();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v7 = *(int *)(a3 + 24);
  v8 = (unint64_t *)(a1 + v7);
  v9 = (__int128 *)(a2 + v7);
  v10 = *(_QWORD *)(a2 + v7);
  if (*(_QWORD *)(a1 + v7) >= 2uLL)
  {
    if (v10 >= 2)
    {
      *v8 = v10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v8[1] = *((_QWORD *)v9 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v8[2] = *((_QWORD *)v9 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AF6C6F24(a1 + v7, &qword_1EEE4CBF8);
      v12 = *((_QWORD *)v9 + 2);
      *(_OWORD *)v8 = *v9;
      v8[2] = v12;
    }
  }
  else if (v10 >= 2)
  {
    *v8 = v10;
    v8[1] = *((_QWORD *)v9 + 1);
    v8[2] = *((_QWORD *)v9 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v11 = *v9;
    v8[2] = *((_QWORD *)v9 + 2);
    *(_OWORD *)v8 = v11;
  }
  return a1;
}

uint64_t initializeWithTake for ToolKitIndexingReason(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_1AF76A234();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  return a1;
}

uint64_t assignWithTake for ToolKitIndexingReason(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_1AF76A234();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  if (*(_QWORD *)(a1 + v7) >= 2uLL)
  {
    if (*v9 >= 2uLL)
    {
      *v8 = *v9;
      swift_bridgeObjectRelease();
      v8[1] = v9[1];
      swift_bridgeObjectRelease();
      v8[2] = v9[2];
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1AF6C6F24(a1 + v7, &qword_1EEE4CBF8);
  }
  *(_OWORD *)v8 = *(_OWORD *)v9;
  v8[2] = v9[2];
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolKitIndexingReason()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AF6D1574(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;
  int v9;

  v6 = OUTLINED_FUNCTION_18_7();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  v9 = v8 - 2;
  if (v9 < 0)
    v9 = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for ToolKitIndexingReason()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1AF6D1600(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;

  v8 = OUTLINED_FUNCTION_18_7();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    OUTLINED_FUNCTION_39_0(a1, a2, a2, v8);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 + 1);
    OUTLINED_FUNCTION_9();
  }
}

uint64_t sub_1AF6D1660()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1AF76A234();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ToolKitIndexingReason.Trigger(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t result;
  unsigned int v6;
  unsigned int v7;

  if (!a2)
    return 0;
  if (a2 < 0xF5)
  {
    v6 = *a1;
    if (v6 >= 2)
    {
      v7 = (v6 + 2147483646) & 0x7FFFFFFF;
      result = v7 - 9;
      if (v7 > 9)
        return result;
    }
    return 0;
  }
  v2 = a2 + 11;
  if (a2 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if (v2 >> 8 < 0xFF)
    v3 = 1;
  if (v2 >= 0x100)
    v4 = v3;
  else
    v4 = 0;
  return ((uint64_t (*)(void))((char *)&loc_1AF6D172C + 4 * byte_1AF77BACE[v4]))();
}

uint64_t storeEnumTagSinglePayload for ToolKitIndexingReason.Trigger(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 11;
  if (a3 + 11 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xF5)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_1AF6D17D8 + 4 * byte_1AF77BAD8[v5]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_1AF6D180C + 4 * byte_1AF77BAD3[v5]))();
}

uint64_t sub_1AF6D180C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AF6D1814(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AF6D181CLL);
  return result;
}

uint64_t sub_1AF6D1828(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AF6D1830);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_1AF6D1834(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AF6D183C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AF6D1848(unsigned __int8 *a1)
{
  unsigned int v1;
  BOOL v2;
  int v3;

  v1 = *a1;
  v2 = v1 >= 2;
  v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2)
    return (v3 + 1);
  else
    return 0;
}

_BYTE *sub_1AF6D1864(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 1;
  return result;
}

void type metadata accessor for ToolKitIndexingReason.Trigger()
{
  OUTLINED_FUNCTION_25();
}

unint64_t destroy for ToolKitIndexingReason.Changeset(unint64_t *a1)
{
  unint64_t result;

  result = *a1;
  if (result >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void _s19VoiceShortcutClient21ToolKitIndexingReasonV9ChangesetOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  }
  else
  {
    v2 = *(_QWORD *)(a2 + 8);
    v3 = *(_QWORD *)(a2 + 16);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v2;
    *(_QWORD *)(a1 + 16) = v3;
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_6_2();
    OUTLINED_FUNCTION_93_0();
  }
  OUTLINED_FUNCTION_9();
}

unint64_t *assignWithCopy for ToolKitIndexingReason.Changeset(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4;
  unint64_t v5;
  __int128 v6;

  v4 = *a1;
  v5 = *a2;
  if (v4 < 0xFFFFFFFF)
  {
    if (v5 >= 0xFFFFFFFF)
    {
      *a1 = v5;
      a1[1] = a2[1];
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    v6 = *(_OWORD *)a2;
    a1[2] = a2[2];
    *(_OWORD *)a1 = v6;
    return a1;
  }
  if (v5 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ToolKitIndexingReason.Changeset(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)a1 < 0xFFFFFFFFuLL)
    goto LABEL_5;
  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolKitIndexingReason.Changeset(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *((_BYTE *)a1 + 24))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 >= 3)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ToolKitIndexingReason.Changeset(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 1;
  }
  return result;
}

_QWORD *sub_1AF6D1B60(_QWORD *result, int a2)
{
  uint64_t v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
    result[1] = 0;
    result[2] = 0;
  }
  else
  {
    if (!a2)
      return result;
    v2 = (a2 - 1);
  }
  *result = v2;
  return result;
}

void type metadata accessor for ToolKitIndexingReason.Changeset()
{
  OUTLINED_FUNCTION_25();
}

uint64_t *initializeBufferWithCopyOfBuffer for ToolKitIndexingReason.Changeset.Provenance(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for LaunchServicesSnapshot(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 2, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v9 = sub_1AF76A234();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      v10 = type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0);
      *(uint64_t *)((char *)a1 + *(int *)(v10 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v10 + 20));
      *(uint64_t *)((char *)a1 + *(int *)(v7 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v7 + 20));
      swift_bridgeObjectRetain();
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 2, v7);
    }
  }
  return a1;
}

uint64_t destroy for ToolKitIndexingReason.Changeset.Provenance(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v2 = type metadata accessor for LaunchServicesSnapshot(0);
  result = __swift_getEnumTagSinglePayload(a1, 2, v2);
  if (!(_DWORD)result)
  {
    v4 = sub_1AF76A234();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

char *initializeWithCopy for ToolKitIndexingReason.Changeset.Provenance(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for LaunchServicesSnapshot(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = sub_1AF76A234();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0);
    *(_QWORD *)&a1[*(int *)(v8 + 20)] = *(_QWORD *)&a2[*(int *)(v8 + 20)];
    *(_QWORD *)&a1[*(int *)(v6 + 20)] = *(_QWORD *)&a2[*(int *)(v6 + 20)];
    swift_bridgeObjectRetain();
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 2, v6);
  }
  return a1;
}

char *assignWithCopy for ToolKitIndexingReason.Changeset.Provenance(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v6 = type metadata accessor for LaunchServicesSnapshot(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 2, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 2, v6);
  if (!EnumTagSinglePayload)
  {
    if (!v8)
    {
      v12 = sub_1AF76A234();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(a1, a2, v12);
      v13 = type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0);
      *(_QWORD *)&a1[*(int *)(v13 + 20)] = *(_QWORD *)&a2[*(int *)(v13 + 20)];
      *(_QWORD *)&a1[*(int *)(v6 + 20)] = *(_QWORD *)&a2[*(int *)(v6 + 20)];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1AF6D09EC((uint64_t)a1, type metadata accessor for LaunchServicesSnapshot);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v9 = sub_1AF76A234();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
  v10 = type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0);
  *(_QWORD *)&a1[*(int *)(v10 + 20)] = *(_QWORD *)&a2[*(int *)(v10 + 20)];
  *(_QWORD *)&a1[*(int *)(v6 + 20)] = *(_QWORD *)&a2[*(int *)(v6 + 20)];
  swift_bridgeObjectRetain();
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 2, v6);
  return a1;
}

char *initializeWithTake for ToolKitIndexingReason.Changeset.Provenance(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for LaunchServicesSnapshot(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = sub_1AF76A234();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    v8 = type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0);
    *(_QWORD *)&a1[*(int *)(v8 + 20)] = *(_QWORD *)&a2[*(int *)(v8 + 20)];
    *(_QWORD *)&a1[*(int *)(v6 + 20)] = *(_QWORD *)&a2[*(int *)(v6 + 20)];
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 2, v6);
  }
  return a1;
}

char *assignWithTake for ToolKitIndexingReason.Changeset.Provenance(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v6 = type metadata accessor for LaunchServicesSnapshot(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 2, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 2, v6);
  if (!EnumTagSinglePayload)
  {
    if (!v8)
    {
      v12 = sub_1AF76A234();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(a1, a2, v12);
      v13 = type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0);
      *(_QWORD *)&a1[*(int *)(v13 + 20)] = *(_QWORD *)&a2[*(int *)(v13 + 20)];
      *(_QWORD *)&a1[*(int *)(v6 + 20)] = *(_QWORD *)&a2[*(int *)(v6 + 20)];
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1AF6D09EC((uint64_t)a1, type metadata accessor for LaunchServicesSnapshot);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v9 = sub_1AF76A234();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
  v10 = type metadata accessor for LaunchServicesSnapshot.DatabaseVersion(0);
  *(_QWORD *)&a1[*(int *)(v10 + 20)] = *(_QWORD *)&a2[*(int *)(v10 + 20)];
  *(_QWORD *)&a1[*(int *)(v6 + 20)] = *(_QWORD *)&a2[*(int *)(v6 + 20)];
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 2, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolKitIndexingReason.Changeset.Provenance()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AF6D20E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int EnumTagSinglePayload;

  v4 = OUTLINED_FUNCTION_50_0();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(a1, a2, v4);
  if (EnumTagSinglePayload >= 3)
    return EnumTagSinglePayload - 2;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ToolKitIndexingReason.Changeset.Provenance()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AF6D2134(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 2);
  else
    v5 = 0;
  v6 = OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_39_0(a1, v5, a3, v6);
}

uint64_t sub_1AF6D2174(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for LaunchServicesSnapshot(0);
  return __swift_getEnumTagSinglePayload(a1, 2, v2);
}

uint64_t sub_1AF6D21A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LaunchServicesSnapshot(0);
  return __swift_storeEnumTagSinglePayload(a1, a2, 2, v4);
}

uint64_t sub_1AF6D21DC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for LaunchServicesSnapshot(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_45_2()
{
  return type metadata accessor for ToolKitIndexingRequest(0);
}

uint64_t sub_1AF6D2238()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1AF76A234();
  if (v1 <= 0x3F)
  {
    result = sub_1AF76A1F8();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t method lookup function for ToolKitIndexingRequest()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ToolKitIndexingRequest.__allocating_init(reasons:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of ToolKitIndexingRequest.encode(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of ToolKitIndexingRequest.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of ToolKitIndexingRequest.encode(to:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of ToolKitIndexingRequest.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

void type metadata accessor for ToolKitIndexingRequest.Response()
{
  OUTLINED_FUNCTION_25();
}

ValueMetadata *type metadata accessor for ToolKitIndexingRequest.CodingKeys()
{
  return &type metadata for ToolKitIndexingRequest.CodingKeys;
}

uint64_t _s19VoiceShortcutClient22ToolKitIndexingRequestC8ResponseOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AF6D23BC + 4 * byte_1AF77BAE2[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AF6D23F0 + 4 * byte_1AF77BADD[v4]))();
}

uint64_t sub_1AF6D23F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AF6D23F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AF6D2400);
  return result;
}

uint64_t sub_1AF6D240C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AF6D2414);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AF6D2418(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AF6D2420(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ToolKitIndexingRequest.Response.CodingKeys()
{
  return &type metadata for ToolKitIndexingRequest.Response.CodingKeys;
}

ValueMetadata *type metadata accessor for ToolKitIndexingRequest.Response.ReindexingFinishedCodingKeys()
{
  return &type metadata for ToolKitIndexingRequest.Response.ReindexingFinishedCodingKeys;
}

ValueMetadata *type metadata accessor for ToolKitIndexingRequest.Response.ReindexingNotNeededCodingKeys()
{
  return &type metadata for ToolKitIndexingRequest.Response.ReindexingNotNeededCodingKeys;
}

ValueMetadata *type metadata accessor for ToolKitIndexingReason.CodingKeys()
{
  return &type metadata for ToolKitIndexingReason.CodingKeys;
}

ValueMetadata *type metadata accessor for ToolKitIndexingReason.Changeset.CodingKeys()
{
  return &type metadata for ToolKitIndexingReason.Changeset.CodingKeys;
}

ValueMetadata *type metadata accessor for ToolKitIndexingReason.Changeset.FullCodingKeys()
{
  return &type metadata for ToolKitIndexingReason.Changeset.FullCodingKeys;
}

ValueMetadata *type metadata accessor for ToolKitIndexingReason.Changeset.PartialCodingKeys()
{
  return &type metadata for ToolKitIndexingReason.Changeset.PartialCodingKeys;
}

ValueMetadata *type metadata accessor for ToolKitIndexingReason.Changeset.NoneCodingKeys()
{
  return &type metadata for ToolKitIndexingReason.Changeset.NoneCodingKeys;
}

uint64_t _s19VoiceShortcutClient22ToolKitIndexingRequestC10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1AF6D24F8 + 4 * byte_1AF77BAEC[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1AF6D252C + 4 * byte_1AF77BAE7[v4]))();
}

uint64_t sub_1AF6D252C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AF6D2534(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AF6D253CLL);
  return result;
}

uint64_t sub_1AF6D2548(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AF6D2550);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1AF6D2554(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AF6D255C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ToolKitIndexingReason.Changeset.Provenance.CodingKeys()
{
  return &type metadata for ToolKitIndexingReason.Changeset.Provenance.CodingKeys;
}

ValueMetadata *type metadata accessor for ToolKitIndexingReason.Changeset.Provenance.LaunchServicesSnapshotCodingKeys()
{
  return &type metadata for ToolKitIndexingReason.Changeset.Provenance.LaunchServicesSnapshotCodingKeys;
}

ValueMetadata *type metadata accessor for ToolKitIndexingReason.Changeset.Provenance.AppIntentsChangeCodingKeys()
{
  return &type metadata for ToolKitIndexingReason.Changeset.Provenance.AppIntentsChangeCodingKeys;
}

ValueMetadata *type metadata accessor for ToolKitIndexingReason.Changeset.Provenance.AppProtectionChangeCodingKeys()
{
  return &type metadata for ToolKitIndexingReason.Changeset.Provenance.AppProtectionChangeCodingKeys;
}

uint64_t getEnumTagSinglePayload for ToolKitIndexingReason.Trigger.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF6)
  {
    if (a2 + 10 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 10) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 11;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xB;
  v5 = v6 - 11;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ToolKitIndexingReason.Trigger.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_1AF6D2680 + 4 * byte_1AF77BAF6[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_1AF6D26B4 + 4 * byte_1AF77BAF1[v4]))();
}

uint64_t sub_1AF6D26B4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AF6D26BC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AF6D26C4);
  return result;
}

uint64_t sub_1AF6D26D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AF6D26D8);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_1AF6D26DC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AF6D26E4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ToolKitIndexingReason.Trigger.CodingKeys()
{
  return &type metadata for ToolKitIndexingReason.Trigger.CodingKeys;
}

uint64_t _s19VoiceShortcutClient21ToolKitIndexingReasonV9ChangesetO10ProvenanceO32LaunchServicesSnapshotCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1AF6D2740 + 4 * byte_1AF77BAFB[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1AF6D2760 + 4 * byte_1AF77BB00[v4]))();
}

_BYTE *sub_1AF6D2740(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1AF6D2760(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AF6D2768(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AF6D2770(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AF6D2778(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AF6D2780(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ToolKitIndexingReason.Trigger.ManualCodingKeys()
{
  return &type metadata for ToolKitIndexingReason.Trigger.ManualCodingKeys;
}

ValueMetadata *type metadata accessor for ToolKitIndexingReason.Trigger.FirstUnlockCodingKeys()
{
  return &type metadata for ToolKitIndexingReason.Trigger.FirstUnlockCodingKeys;
}

ValueMetadata *type metadata accessor for ToolKitIndexingReason.Trigger.SchedulerBootedCodingKeys()
{
  return &type metadata for ToolKitIndexingReason.Trigger.SchedulerBootedCodingKeys;
}

ValueMetadata *type metadata accessor for ToolKitIndexingReason.Trigger.ShortcutsAppLaunchedCodingKeys()
{
  return &type metadata for ToolKitIndexingReason.Trigger.ShortcutsAppLaunchedCodingKeys;
}

ValueMetadata *type metadata accessor for ToolKitIndexingReason.Trigger.AppProtectionStateChangedCodingKeys()
{
  return &type metadata for ToolKitIndexingReason.Trigger.AppProtectionStateChangedCodingKeys;
}

ValueMetadata *type metadata accessor for ToolKitIndexingReason.Trigger.AppIntentsDatabaseChangedCodingKeys()
{
  return &type metadata for ToolKitIndexingReason.Trigger.AppIntentsDatabaseChangedCodingKeys;
}

ValueMetadata *type metadata accessor for ToolKitIndexingReason.Trigger.LaunchServicesDatabaseChangedCodingKeys()
{
  return &type metadata for ToolKitIndexingReason.Trigger.LaunchServicesDatabaseChangedCodingKeys;
}

ValueMetadata *type metadata accessor for ToolKitIndexingReason.Trigger.LanguagesChangedCodingKeys()
{
  return &type metadata for ToolKitIndexingReason.Trigger.LanguagesChangedCodingKeys;
}

ValueMetadata *type metadata accessor for ToolKitIndexingReason.Trigger.SiriLanguagesChangedCodingKeys()
{
  return &type metadata for ToolKitIndexingReason.Trigger.SiriLanguagesChangedCodingKeys;
}

ValueMetadata *type metadata accessor for ToolKitIndexingReason.Trigger.DeferredFullCodingKeys()
{
  return &type metadata for ToolKitIndexingReason.Trigger.DeferredFullCodingKeys;
}

ValueMetadata *type metadata accessor for ToolKitIndexingReason.Trigger.DeferredDeltaCodingKeys()
{
  return &type metadata for ToolKitIndexingReason.Trigger.DeferredDeltaCodingKeys;
}

unint64_t sub_1AF6D2840()
{
  unint64_t result;

  result = qword_1EEE4CC00;
  if (!qword_1EEE4CC00)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77C728, &type metadata for ToolKitIndexingReason.Trigger.ManualCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4CC00);
  }
  return result;
}

unint64_t sub_1AF6D2880()
{
  unint64_t result;

  result = qword_1EEE4CC08;
  if (!qword_1EEE4CC08)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77C7E0, &type metadata for ToolKitIndexingReason.Trigger.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4CC08);
  }
  return result;
}

unint64_t sub_1AF6D28C0()
{
  unint64_t result;

  result = qword_1EEE4CC10;
  if (!qword_1EEE4CC10)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77C938, &type metadata for ToolKitIndexingReason.Changeset.Provenance.LaunchServicesSnapshotCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4CC10);
  }
  return result;
}

unint64_t sub_1AF6D2900()
{
  unint64_t result;

  result = qword_1EEE4CC18;
  if (!qword_1EEE4CC18)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77C9F0, &type metadata for ToolKitIndexingReason.Changeset.Provenance.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4CC18);
  }
  return result;
}

unint64_t sub_1AF6D2940()
{
  unint64_t result;

  result = qword_1EEE4CC20;
  if (!qword_1EEE4CC20)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77CAF8, &type metadata for ToolKitIndexingReason.Changeset.PartialCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4CC20);
  }
  return result;
}

unint64_t sub_1AF6D2980()
{
  unint64_t result;

  result = qword_1EEE4CC28;
  if (!qword_1EEE4CC28)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77CC00, &type metadata for ToolKitIndexingReason.Changeset.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4CC28);
  }
  return result;
}

unint64_t sub_1AF6D29C0()
{
  unint64_t result;

  result = qword_1EEE4CC30;
  if (!qword_1EEE4CC30)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77CCB8, &type metadata for ToolKitIndexingReason.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4CC30);
  }
  return result;
}

unint64_t sub_1AF6D2A00()
{
  unint64_t result;

  result = qword_1EEE4CC38;
  if (!qword_1EEE4CC38)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77CE10, &type metadata for ToolKitIndexingRequest.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4CC38);
  }
  return result;
}

unint64_t sub_1AF6D2A40()
{
  unint64_t result;

  result = qword_1EEE4CC40;
  if (!qword_1EEE4CC40)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77CEC8, &type metadata for ToolKitIndexingRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4CC40);
  }
  return result;
}

unint64_t sub_1AF6D2A80()
{
  unint64_t result;

  result = qword_1EEE4B378;
  if (!qword_1EEE4B378)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77CE38, &type metadata for ToolKitIndexingRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4B378);
  }
  return result;
}

unint64_t sub_1AF6D2AC0()
{
  unint64_t result;

  result = qword_1EEE4B370;
  if (!qword_1EEE4B370)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77CE60, &type metadata for ToolKitIndexingRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4B370);
  }
  return result;
}

unint64_t sub_1AF6D2B00()
{
  unint64_t result;

  result = qword_1EEE4CC48;
  if (!qword_1EEE4CC48)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77CD30, &type metadata for ToolKitIndexingRequest.Response.ReindexingFinishedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4CC48);
  }
  return result;
}

unint64_t sub_1AF6D2B40()
{
  unint64_t result;

  result = qword_1EEE4CC50;
  if (!qword_1EEE4CC50)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77CD58, &type metadata for ToolKitIndexingRequest.Response.ReindexingFinishedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4CC50);
  }
  return result;
}

unint64_t sub_1AF6D2B80()
{
  unint64_t result;

  result = qword_1EEE4CC58;
  if (!qword_1EEE4CC58)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77CCE0, &type metadata for ToolKitIndexingRequest.Response.ReindexingNotNeededCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4CC58);
  }
  return result;
}

unint64_t sub_1AF6D2BC0()
{
  unint64_t result;

  result = qword_1EEE4CC60;
  if (!qword_1EEE4CC60)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77CD08, &type metadata for ToolKitIndexingRequest.Response.ReindexingNotNeededCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4CC60);
  }
  return result;
}

unint64_t sub_1AF6D2C00()
{
  unint64_t result;

  result = qword_1EEE4CC68;
  if (!qword_1EEE4CC68)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77CD80, &type metadata for ToolKitIndexingRequest.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4CC68);
  }
  return result;
}

unint64_t sub_1AF6D2C40()
{
  unint64_t result;

  result = qword_1EEE4CC70;
  if (!qword_1EEE4CC70)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77CDA8, &type metadata for ToolKitIndexingRequest.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4CC70);
  }
  return result;
}

unint64_t sub_1AF6D2C80()
{
  unint64_t result;

  result = qword_1EEE4B0B8;
  if (!qword_1EEE4B0B8)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77CC28, &type metadata for ToolKitIndexingReason.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4B0B8);
  }
  return result;
}

unint64_t sub_1AF6D2CC0()
{
  unint64_t result;

  result = qword_1EEE4B0B0;
  if (!qword_1EEE4B0B0)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77CC50, &type metadata for ToolKitIndexingReason.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4B0B0);
  }
  return result;
}

unint64_t sub_1AF6D2D00()
{
  unint64_t result;

  result = qword_1EEE4B268;
  if (!qword_1EEE4B268)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77CB20, &type metadata for ToolKitIndexingReason.Changeset.FullCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4B268);
  }
  return result;
}

unint64_t sub_1AF6D2D40()
{
  unint64_t result;

  result = qword_1EEE4B260;
  if (!qword_1EEE4B260)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77CB48, &type metadata for ToolKitIndexingReason.Changeset.FullCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4B260);
  }
  return result;
}

unint64_t sub_1AF6D2D80()
{
  unint64_t result;

  result = qword_1EEE4B298;
  if (!qword_1EEE4B298)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77CA68, &type metadata for ToolKitIndexingReason.Changeset.PartialCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4B298);
  }
  return result;
}

unint64_t sub_1AF6D2DC0()
{
  unint64_t result;

  result = qword_1EEE4B290;
  if (!qword_1EEE4B290)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77CA90, &type metadata for ToolKitIndexingReason.Changeset.PartialCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4B290);
  }
  return result;
}

unint64_t sub_1AF6D2E00()
{
  unint64_t result;

  result = qword_1EEE4B278;
  if (!qword_1EEE4B278)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77CA18, &type metadata for ToolKitIndexingReason.Changeset.NoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4B278);
  }
  return result;
}

unint64_t sub_1AF6D2E40()
{
  unint64_t result;

  result = qword_1EEE4B270;
  if (!qword_1EEE4B270)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77CA40, &type metadata for ToolKitIndexingReason.Changeset.NoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4B270);
  }
  return result;
}

unint64_t sub_1AF6D2E80()
{
  unint64_t result;

  result = qword_1EEE4B1C8;
  if (!qword_1EEE4B1C8)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77CB70, &type metadata for ToolKitIndexingReason.Changeset.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4B1C8);
  }
  return result;
}

unint64_t sub_1AF6D2EC0()
{
  unint64_t result;

  result = qword_1EEE4B1C0;
  if (!qword_1EEE4B1C0)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77CB98, &type metadata for ToolKitIndexingReason.Changeset.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4B1C0);
  }
  return result;
}

unint64_t sub_1AF6D2F00()
{
  unint64_t result;

  result = qword_1EEE4B228;
  if (!qword_1EEE4B228)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77C8A8, &type metadata for ToolKitIndexingReason.Changeset.Provenance.LaunchServicesSnapshotCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4B228);
  }
  return result;
}

unint64_t sub_1AF6D2F40()
{
  unint64_t result;

  result = qword_1EEE4B220;
  if (!qword_1EEE4B220)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77C8D0, &type metadata for ToolKitIndexingReason.Changeset.Provenance.LaunchServicesSnapshotCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4B220);
  }
  return result;
}

unint64_t sub_1AF6D2F80()
{
  unint64_t result;

  result = qword_1EEE4B1F8;
  if (!qword_1EEE4B1F8)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77C858, &type metadata for ToolKitIndexingReason.Changeset.Provenance.AppIntentsChangeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4B1F8);
  }
  return result;
}

unint64_t sub_1AF6D2FC0()
{
  unint64_t result;

  result = qword_1EEE4B1F0;
  if (!qword_1EEE4B1F0)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77C880, &type metadata for ToolKitIndexingReason.Changeset.Provenance.AppIntentsChangeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4B1F0);
  }
  return result;
}

unint64_t sub_1AF6D3000()
{
  unint64_t result;

  result = qword_1EEE4B208;
  if (!qword_1EEE4B208)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77C808, &type metadata for ToolKitIndexingReason.Changeset.Provenance.AppProtectionChangeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4B208);
  }
  return result;
}

unint64_t sub_1AF6D3040()
{
  unint64_t result;

  result = qword_1EEE4B200;
  if (!qword_1EEE4B200)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77C830, &type metadata for ToolKitIndexingReason.Changeset.Provenance.AppProtectionChangeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4B200);
  }
  return result;
}

unint64_t sub_1AF6D3080()
{
  unint64_t result;

  result = qword_1EEE4B1E8;
  if (!qword_1EEE4B1E8)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77C960, &type metadata for ToolKitIndexingReason.Changeset.Provenance.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4B1E8);
  }
  return result;
}

unint64_t sub_1AF6D30C0()
{
  unint64_t result;

  result = qword_1EEE4B1E0;
  if (!qword_1EEE4B1E0)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77C988, &type metadata for ToolKitIndexingReason.Changeset.Provenance.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4B1E0);
  }
  return result;
}

unint64_t sub_1AF6D3100()
{
  unint64_t result;

  result = qword_1EEE4B0E8;
  if (!qword_1EEE4B0E8)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77C698, &type metadata for ToolKitIndexingReason.Trigger.ManualCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4B0E8);
  }
  return result;
}

unint64_t sub_1AF6D3140()
{
  unint64_t result;

  result = qword_1EEE4B0E0;
  if (!qword_1EEE4B0E0)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77C6C0, &type metadata for ToolKitIndexingReason.Trigger.ManualCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4B0E0);
  }
  return result;
}

unint64_t sub_1AF6D3180()
{
  unint64_t result;

  result = qword_1EEE4B0F8;
  if (!qword_1EEE4B0F8)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77C648, &type metadata for ToolKitIndexingReason.Trigger.FirstUnlockCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4B0F8);
  }
  return result;
}

unint64_t sub_1AF6D31C0()
{
  unint64_t result;

  result = qword_1EEE4B0F0;
  if (!qword_1EEE4B0F0)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77C670, &type metadata for ToolKitIndexingReason.Trigger.FirstUnlockCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4B0F0);
  }
  return result;
}

unint64_t sub_1AF6D3200()
{
  unint64_t result;

  result = qword_1EEE4B138;
  if (!qword_1EEE4B138)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77C5F8, &type metadata for ToolKitIndexingReason.Trigger.SchedulerBootedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4B138);
  }
  return result;
}

unint64_t sub_1AF6D3240()
{
  unint64_t result;

  result = qword_1EEE4B130;
  if (!qword_1EEE4B130)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77C620, &type metadata for ToolKitIndexingReason.Trigger.SchedulerBootedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4B130);
  }
  return result;
}

unint64_t sub_1AF6D3280()
{
  unint64_t result;

  result = qword_1EEE4B158;
  if (!qword_1EEE4B158)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77C5A8, &type metadata for ToolKitIndexingReason.Trigger.ShortcutsAppLaunchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4B158);
  }
  return result;
}

unint64_t sub_1AF6D32C0()
{
  unint64_t result;

  result = qword_1EEE4B150;
  if (!qword_1EEE4B150)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77C5D0, &type metadata for ToolKitIndexingReason.Trigger.ShortcutsAppLaunchedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4B150);
  }
  return result;
}

unint64_t sub_1AF6D3300()
{
  unint64_t result;

  result = qword_1EEE4B188;
  if (!qword_1EEE4B188)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77C558, &type metadata for ToolKitIndexingReason.Trigger.AppProtectionStateChangedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4B188);
  }
  return result;
}

unint64_t sub_1AF6D3340()
{
  unint64_t result;

  result = qword_1EEE4B180;
  if (!qword_1EEE4B180)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77C580, &type metadata for ToolKitIndexingReason.Trigger.AppProtectionStateChangedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4B180);
  }
  return result;
}

unint64_t sub_1AF6D3380()
{
  unint64_t result;

  result = qword_1EEE4B178;
  if (!qword_1EEE4B178)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77C508, &type metadata for ToolKitIndexingReason.Trigger.AppIntentsDatabaseChangedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4B178);
  }
  return result;
}

unint64_t sub_1AF6D33C0()
{
  unint64_t result;

  result = qword_1EEE4B170;
  if (!qword_1EEE4B170)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77C530, &type metadata for ToolKitIndexingReason.Trigger.AppIntentsDatabaseChangedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4B170);
  }
  return result;
}

unint64_t sub_1AF6D3400()
{
  unint64_t result;

  result = qword_1EEE4B198;
  if (!qword_1EEE4B198)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77C4B8, &type metadata for ToolKitIndexingReason.Trigger.LaunchServicesDatabaseChangedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4B198);
  }
  return result;
}

unint64_t sub_1AF6D3440()
{
  unint64_t result;

  result = qword_1EEE4B190;
  if (!qword_1EEE4B190)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77C4E0, &type metadata for ToolKitIndexingReason.Trigger.LaunchServicesDatabaseChangedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4B190);
  }
  return result;
}

unint64_t sub_1AF6D3480()
{
  unint64_t result;

  result = qword_1EEE4B148;
  if (!qword_1EEE4B148)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77C468, &type metadata for ToolKitIndexingReason.Trigger.LanguagesChangedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4B148);
  }
  return result;
}

unint64_t sub_1AF6D34C0()
{
  unint64_t result;

  result = qword_1EEE4B140;
  if (!qword_1EEE4B140)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77C490, &type metadata for ToolKitIndexingReason.Trigger.LanguagesChangedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4B140);
  }
  return result;
}

unint64_t sub_1AF6D3500()
{
  unint64_t result;

  result = qword_1EEE4B168;
  if (!qword_1EEE4B168)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77C418, &type metadata for ToolKitIndexingReason.Trigger.SiriLanguagesChangedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4B168);
  }
  return result;
}

unint64_t sub_1AF6D3540()
{
  unint64_t result;

  result = qword_1EEE4B160;
  if (!qword_1EEE4B160)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77C440, &type metadata for ToolKitIndexingReason.Trigger.SiriLanguagesChangedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4B160);
  }
  return result;
}

unint64_t sub_1AF6D3580()
{
  unint64_t result;

  result = qword_1EEE4B108;
  if (!qword_1EEE4B108)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77C3C8, &type metadata for ToolKitIndexingReason.Trigger.DeferredFullCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4B108);
  }
  return result;
}

unint64_t sub_1AF6D35C0()
{
  unint64_t result;

  result = qword_1EEE4B100;
  if (!qword_1EEE4B100)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77C3F0, &type metadata for ToolKitIndexingReason.Trigger.DeferredFullCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4B100);
  }
  return result;
}

unint64_t sub_1AF6D3600()
{
  unint64_t result;

  result = qword_1EEE4B128;
  if (!qword_1EEE4B128)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77C378, &type metadata for ToolKitIndexingReason.Trigger.DeferredDeltaCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4B128);
  }
  return result;
}

unint64_t sub_1AF6D3640()
{
  unint64_t result;

  result = qword_1EEE4B120;
  if (!qword_1EEE4B120)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77C3A0, &type metadata for ToolKitIndexingReason.Trigger.DeferredDeltaCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4B120);
  }
  return result;
}

unint64_t sub_1AF6D3680()
{
  unint64_t result;

  result = qword_1EEE4B0D8;
  if (!qword_1EEE4B0D8)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77C750, &type metadata for ToolKitIndexingReason.Trigger.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4B0D8);
  }
  return result;
}

unint64_t sub_1AF6D36C0()
{
  unint64_t result;

  result = qword_1EEE4B0D0;
  if (!qword_1EEE4B0D0)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77C778, &type metadata for ToolKitIndexingReason.Trigger.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4B0D0);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_9()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 368) + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_4_10()
{
  return sub_1AF76AAA4();
}

uint64_t OUTLINED_FUNCTION_5_8()
{
  return sub_1AF76AB28();
}

uint64_t OUTLINED_FUNCTION_6_10()
{
  return sub_1AF76AB28();
}

uint64_t OUTLINED_FUNCTION_9_8@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_13_7()
{
  return sub_1AF76AB64();
}

uint64_t OUTLINED_FUNCTION_14_7()
{
  return sub_1AF76AAA4();
}

void OUTLINED_FUNCTION_18_8(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 168) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void OUTLINED_FUNCTION_20_6(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 136) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_21_4()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_23_6()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, uint64_t))(*(_QWORD *)(v1 - 112) + 8))(*(_QWORD *)(v1 - 136), v0);
}

uint64_t OUTLINED_FUNCTION_27_3()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_29_3@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_32_4@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a2 - 256) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_33_4()
{
  return type metadata accessor for ToolKitIndexingReason.Changeset.Provenance(0);
}

uint64_t OUTLINED_FUNCTION_34_3()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(v1, 2, v0);
}

uint64_t OUTLINED_FUNCTION_37_1()
{
  return sub_1AF76AB28();
}

uint64_t OUTLINED_FUNCTION_38_0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD)@<X8>)
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 - 256));
}

uint64_t OUTLINED_FUNCTION_39_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_storeEnumTagSinglePayload(a1, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_42_2()
{
  return sub_1AF76AAF8();
}

uint64_t OUTLINED_FUNCTION_43_2(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v2, v1, a1);
}

uint64_t OUTLINED_FUNCTION_46_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 96) + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_47_1()
{
  return sub_1AF76A9FC();
}

uint64_t OUTLINED_FUNCTION_49_2(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

uint64_t OUTLINED_FUNCTION_52_2()
{
  return sub_1AF76A5B8();
}

uint64_t OUTLINED_FUNCTION_55_1()
{
  return sub_1AF76AAA4();
}

uint64_t OUTLINED_FUNCTION_60_2()
{
  return 0;
}

void OUTLINED_FUNCTION_63_2(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 200) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void OUTLINED_FUNCTION_64_2(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 176) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void OUTLINED_FUNCTION_65_2()
{
  JUMPOUT(0x1B5DFC634);
}

uint64_t OUTLINED_FUNCTION_67_0()
{
  return sub_1AF76AF24();
}

uint64_t OUTLINED_FUNCTION_68_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

uint64_t OUTLINED_FUNCTION_69_1()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_70_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

_QWORD *OUTLINED_FUNCTION_71_0()
{
  _QWORD *v0;
  uint64_t v1;

  return __swift_project_boxed_opaque_existential_1(v0, v1);
}

uint64_t OUTLINED_FUNCTION_73_0()
{
  return sub_1AF76A5B8();
}

uint64_t OUTLINED_FUNCTION_80()
{
  uint64_t v0;

  return v0;
}

__n128 OUTLINED_FUNCTION_81_1@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return *(__n128 *)(v1 + a1);
}

unint64_t OUTLINED_FUNCTION_84_1()
{
  unint64_t v0;

  return sub_1AF6C7A94(v0);
}

uint64_t OUTLINED_FUNCTION_85_0()
{
  uint64_t v0;

  return v0;
}

unint64_t OUTLINED_FUNCTION_86_0()
{
  unint64_t v0;

  return sub_1AF6C7A94(v0);
}

uint64_t OUTLINED_FUNCTION_88_0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

void OUTLINED_FUNCTION_89_1(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_1AF6D09EC(a1, v1);
}

uint64_t OUTLINED_FUNCTION_90_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_92_1()
{
  return sub_1AF76AD14();
}

uint64_t OUTLINED_FUNCTION_93_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_96_0()
{
  return type metadata accessor for ToolKitIndexingReason(0);
}

uint64_t OUTLINED_FUNCTION_99()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_103_0()
{
  uint64_t v0;

  sub_1AF6D0B00(v0);
}

id OUTLINED_FUNCTION_104_0()
{
  objc_class *v0;

  return objc_allocWithZone(v0);
}

uint64_t OUTLINED_FUNCTION_105()
{
  uint64_t v0;

  return v0;
}

unint64_t OUTLINED_FUNCTION_106_0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 9;
  return sub_1AF6C8DAC();
}

uint64_t OUTLINED_FUNCTION_108_0()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0);
}

uint64_t OUTLINED_FUNCTION_109()
{
  uint64_t v0;

  return v0 - 72;
}

unint64_t OUTLINED_FUNCTION_110_0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 10;
  return sub_1AF6C8D70();
}

unint64_t OUTLINED_FUNCTION_112()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 67) = 8;
  return sub_1AF6C8DE8();
}

unint64_t OUTLINED_FUNCTION_113()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 68) = 7;
  return sub_1AF6C8E24();
}

void OUTLINED_FUNCTION_114(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
}

uint64_t OUTLINED_FUNCTION_116()
{
  return swift_bridgeObjectRelease();
}

unint64_t OUTLINED_FUNCTION_117()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 69) = 6;
  return sub_1AF6C8E60();
}

unint64_t OUTLINED_FUNCTION_118()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 70) = 5;
  return sub_1AF6C8E9C();
}

uint64_t OUTLINED_FUNCTION_119()
{
  unint64_t v0;
  uint64_t v1;

  return sub_1AF697C78(v1, v0);
}

unint64_t OUTLINED_FUNCTION_121()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 71) = 4;
  return sub_1AF6C8ED8();
}

unint64_t OUTLINED_FUNCTION_123()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 72) = 3;
  return sub_1AF6C8F14();
}

unint64_t OUTLINED_FUNCTION_126()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 72) = 2;
  return sub_1AF6D0C28();
}

unint64_t OUTLINED_FUNCTION_127()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 2;
  return sub_1AF6D0A4C();
}

unint64_t OUTLINED_FUNCTION_128()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 89) = 2;
  return sub_1AF6C8F50();
}

unint64_t OUTLINED_FUNCTION_129()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 1;
  return sub_1AF6D0A88();
}

unint64_t OUTLINED_FUNCTION_130()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 90) = 1;
  return sub_1AF6C8F8C();
}

unint64_t OUTLINED_FUNCTION_131()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 1;
  return sub_1AF6D0E80();
}

uint64_t OUTLINED_FUNCTION_133()
{
  return sub_1AF76AB64();
}

uint64_t OUTLINED_FUNCTION_134()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_136(uint64_t a1)
{
  return *(_QWORD *)a1;
}

uint64_t OUTLINED_FUNCTION_137(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  return a2(0);
}

uint64_t OUTLINED_FUNCTION_138()
{
  return sub_1AF76A1F8();
}

uint64_t OUTLINED_FUNCTION_139@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

_QWORD *static XPCListener.anonymous(handler:)(uint64_t a1, uint64_t a2)
{
  type metadata accessor for XPCListener();
  OUTLINED_FUNCTION_0_14();
  OUTLINED_FUNCTION_1_10();
  return sub_1AF6D40DC(0, 0, a1, a2);
}

uint64_t type metadata accessor for XPCListener()
{
  return objc_opt_self();
}

_QWORD *static XPCListener.machService(_:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for XPCListener();
  OUTLINED_FUNCTION_0_14();
  OUTLINED_FUNCTION_1_10();
  swift_bridgeObjectRetain();
  return sub_1AF6D40DC(a1, a2, a3, a4);
}

uint64_t sub_1AF6D3D0C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  void *v18;
  void *v19;
  uint64_t v20;
  NSObject *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;

  v24 = a1;
  v3 = sub_1AF76A840();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1AF76A834();
  MEMORY[0x1E0C80A78](v7);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4CC98);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v22 - v12;
  v14 = sub_1AF76A48C();
  v15 = MEMORY[0x1E0C80A78](v14);
  MEMORY[0x1E0C80A78](v15);
  if (a2)
  {
    v22 = v4;
    v23 = v3;
    v25 = 0;
    v26 = 0xE000000000000000;
    sub_1AF76A960();
    swift_bridgeObjectRelease();
    v25 = 0xD00000000000001DLL;
    v26 = 0x80000001AF782090;
    sub_1AF76A5B8();
    qos_class_main();
    sub_1AF76A450();
    v16 = sub_1AF76A45C();
    result = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v16);
    if ((_DWORD)result != 1)
    {
      sub_1AF6ACB34();
      sub_1AF76A480();
      v25 = MEMORY[0x1E0DEE9D8];
      sub_1AF6ACB70();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4CCB0);
      sub_1AF6ACBB0();
      sub_1AF76A900();
      (*(void (**)(char *, _QWORD, uint64_t))(v22 + 104))(v6, *MEMORY[0x1E0DEF8D0], v23);
      v18 = (void *)sub_1AF76A84C();
      *(&v22 - 2) = MEMORY[0x1E0C80A78](v18);
      v19 = sub_1AF6D5230((_QWORD *(*)(uint64_t *__return_ptr, _QWORD *))sub_1AF6D46E8, (uint64_t)(&v22 - 4), v24, a2);

      return (uint64_t)v19;
    }
    __break(1u);
  }
  else
  {
    qos_class_main();
    sub_1AF76A450();
    v20 = sub_1AF76A45C();
    result = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v20);
    if ((_DWORD)result != 1)
    {
      sub_1AF6ACB34();
      sub_1AF76A480();
      v25 = MEMORY[0x1E0DEE9D8];
      sub_1AF6ACB70();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4CCB0);
      sub_1AF6ACBB0();
      sub_1AF76A900();
      (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DEF8D0], v3);
      v21 = sub_1AF76A84C();
      v19 = xpc_connection_create(0, v21);

      return (uint64_t)v19;
    }
  }
  __break(1u);
  return result;
}

_QWORD *sub_1AF6D40DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  _xpc_connection_s *v8;
  void *v9;
  _xpc_connection_s *v10;
  _QWORD v12[6];

  v5 = v4;
  v4[2] = a1;
  v4[3] = a2;
  v4[4] = a3;
  v4[5] = a4;
  swift_bridgeObjectRetain();
  swift_retain();
  v8 = (_xpc_connection_s *)sub_1AF6D3D0C(a1, a2);
  swift_bridgeObjectRelease();
  v5[6] = v8;
  v12[4] = sub_1AF6D46C8;
  v12[5] = v5;
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 1107296256;
  v12[2] = sub_1AF684264;
  v12[3] = &block_descriptor_4;
  v9 = _Block_copy(v12);
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  xpc_connection_set_event_handler(v8, v9);
  _Block_release(v9);
  swift_unknownObjectRelease();
  v10 = (_xpc_connection_s *)swift_unknownObjectRetain();
  xpc_connection_resume(v10);
  swift_unknownObjectRelease();
  swift_release();
  return v5;
}

void sub_1AF6D41F4(_xpc_connection_s *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;

  v4 = MEMORY[0x1B5DFCA90]();
  if (sub_1AF76A3B4() == v4)
  {
    v8 = *(uint64_t (**)(uint64_t))(a2 + 32);
    type metadata accessor for XPCIncomingConnection();
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = a1;
    swift_unknownObjectRetain();
    v10 = v8(v9);
    swift_release();
    if (v10)
    {
      swift_release();
      xpc_connection_resume(a1);
    }
    else
    {
      xpc_connection_cancel(a1);
    }
  }
  else if (sub_1AF76A390() != v4)
  {
    v5 = swift_unknownObjectRetain();
    v6 = MEMORY[0x1B5DFC970](v5);
    sub_1AF76A5C4();
    MEMORY[0x1B5DFC6E8](v6, -1, -1);
    swift_unknownObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4CC90);
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1AF778CD0;
    sub_1AF76A960();
    sub_1AF76A5B8();
    sub_1AF76A5B8();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v7 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v7 + 32) = 0;
    *(_QWORD *)(v7 + 40) = 0xE000000000000000;
    sub_1AF76AF00();
    swift_bridgeObjectRelease();
  }
}

void sub_1AF6D43B0()
{
  uint64_t v0;

  xpc_connection_cancel(*(xpc_connection_t *)(v0 + 48));
}

xpc_endpoint_t sub_1AF6D43B8@<X0>(xpc_endpoint_t *a1@<X8>)
{
  uint64_t v1;
  xpc_endpoint_t result;

  result = xpc_endpoint_create(*(xpc_connection_t *)(v1 + 48));
  *a1 = result;
  return result;
}

uint64_t XPCListener.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t XPCListener.__deallocating_deinit()
{
  XPCListener.deinit();
  return swift_deallocClassInstance();
}

void static XPCListener.serviceListener(handler:)(void *a1, uint64_t a2)
{
  void *v2;

  v2 = off_1EEE4CC80;
  off_1EEE4CC80 = a1;
  qword_1EEE4CC88 = a2;
  sub_1AF698F38((uint64_t)v2);
  OUTLINED_FUNCTION_1_10();
  xpc_main((xpc_connection_handler_t)sub_1AF6D4514);
}

uint64_t sub_1AF6D4464(uint64_t result)
{
  uint64_t (*v1)(uint64_t);
  _xpc_connection_s *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = (uint64_t (*)(uint64_t))off_1EEE4CC80;
  if (off_1EEE4CC80)
  {
    v2 = (_xpc_connection_s *)result;
    type metadata accessor for XPCIncomingConnection();
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v2;
    swift_unknownObjectRetain();
    sub_1AF698E68((uint64_t)v1);
    v4 = v1(v3);
    swift_release();
    if (v4)
    {
      swift_release();
      xpc_connection_resume(v2);
    }
    else
    {
      xpc_connection_cancel(v2);
    }
    return sub_1AF698F38((uint64_t)v1);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1AF6D4514()
{
  uint64_t v0;

  v0 = swift_unknownObjectRetain();
  sub_1AF6D4464(v0);
  return swift_unknownObjectRelease();
}

uint64_t XPCListener.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  if (*(_QWORD *)(v0 + 24))
  {
    sub_1AF76A960();
    swift_bridgeObjectRelease();
    strcpy((char *)v4, "<xpc listener ");
    HIBYTE(v4[1]) = -18;
    sub_1AF76A5B8();
    sub_1AF76A5B8();
  }
  else
  {
    sub_1AF76A960();
    swift_bridgeObjectRelease();
    v4[0] = 0xD000000000000019;
    v4[1] = 0x80000001AF781FE0;
  }
  v1 = swift_unknownObjectRetain();
  v2 = MEMORY[0x1B5DFC970](v1);
  sub_1AF76A5C4();
  MEMORY[0x1B5DFC6E8](v2, -1, -1);
  swift_unknownObjectRelease();
  sub_1AF76A5B8();
  swift_bridgeObjectRelease();
  sub_1AF76A5B8();
  return v4[0];
}

uint64_t sub_1AF6D4674()
{
  return XPCListener.description.getter();
}

uint64_t method lookup function for XPCListener()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of XPCListener.invalidate()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of XPCListener.endpoint.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

ValueMetadata *type metadata accessor for XPCListener.ListenerType()
{
  return &type metadata for XPCListener.ListenerType;
}

void sub_1AF6D46C8(_xpc_connection_s *a1)
{
  uint64_t v1;

  sub_1AF6D41F4(a1, v1);
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

xpc_connection_t sub_1AF6D46E8@<X0>(const char *a1@<X0>, xpc_connection_t *a2@<X8>)
{
  uint64_t v2;
  xpc_connection_t result;

  result = xpc_connection_create_mach_service(a1, *(dispatch_queue_t *)(v2 + 16), 1uLL);
  *a2 = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_0_14()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_1_10()
{
  return swift_retain();
}

uint64_t VCVoiceShortcutClient.reindexToolKitDatabase(request:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[9] = a1;
  v2[10] = v1;
  v2[11] = type metadata accessor for VoiceShortcutClientRequest(0);
  v2[12] = OUTLINED_FUNCTION_0_6();
  v3 = sub_1AF76A444();
  v2[13] = v3;
  v2[14] = *(_QWORD *)(v3 - 8);
  v2[15] = OUTLINED_FUNCTION_0_6();
  return swift_task_switch();
}

uint64_t sub_1AF6D479C()
{
  _QWORD *v0;
  void *v1;
  id v2;
  _QWORD *v3;

  v1 = (void *)v0[9];
  *(_QWORD *)v0[12] = v1;
  swift_storeEnumTagMultiPayload();
  v2 = v1;
  v3 = (_QWORD *)swift_task_alloc();
  v0[16] = v3;
  *v3 = v0;
  v3[1] = sub_1AF6D480C;
  return sub_1AF6A9B2C(v0[15], v0[12]);
}

uint64_t sub_1AF6D480C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 136) = v0;
  swift_task_dealloc();
  sub_1AF6D4A00(*(_QWORD *)(v2 + 96));
  return swift_task_switch();
}

uint64_t sub_1AF6D4878()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t *v12;
  uint64_t (*v13)(void);
  uint64_t v15;
  uint64_t v16;

  v1 = v0[17];
  sub_1AF6A94C4();
  sub_1AF76A438();
  if (v1)
  {
    (*(void (**)(_QWORD, _QWORD))(v0[14] + 8))(v0[15], v0[13]);
  }
  else
  {
    v2 = v0[4];
    v3 = v0[15];
    if (!v2)
    {
      (*(void (**)(_QWORD, _QWORD))(v0[14] + 8))(v0[15], v0[13]);
      swift_task_dealloc();
      swift_task_dealloc();
      v13 = (uint64_t (*)(void))v0[1];
      return v13();
    }
    v4 = v0[2];
    v5 = v0[3];
    v6 = v0[5];
    v7 = v0[6];
    v8 = v0[7];
    v9 = v0[8];
    v15 = v0[14];
    v16 = v0[13];
    sub_1AF6A9104();
    v10 = OUTLINED_FUNCTION_5();
    *v11 = v4;
    v11[1] = v5;
    v11[2] = v2;
    v11[3] = v6;
    v11[4] = v7;
    v11[5] = v8;
    v11[6] = v9;
    sub_1AF6A9140();
    OUTLINED_FUNCTION_5();
    *v12 = v10;
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v3, v16);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_1AF6D49C0()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1AF6D4A00(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for VoiceShortcutClientRequest(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t Collection<>.take(upTo:)(uint64_t a1, char a2)
{
  uint64_t result;
  uint64_t v5;

  result = sub_1AF76A7B0();
  if ((a2 & 1) != 0)
  {
    if ((result & 0x8000000000000000) == 0)
      return sub_1AF76A7E0();
  }
  else
  {
    if (result >= a1)
      v5 = a1;
    else
      v5 = result;
    if ((v5 & 0x8000000000000000) == 0)
      return sub_1AF76A7E0();
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t static XPCDarwinNotificationEventStream.name.getter()
{
  return 0xD00000000000001ALL;
}

uint64_t XPCDarwinNotificationEventStream.Event.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

BOOL sub_1AF6D4B10()
{
  uint64_t v0;

  v0 = sub_1AF76AA8C();
  swift_bridgeObjectRelease();
  return v0 != 0;
}

BOOL sub_1AF6D4B68@<W0>(_BYTE *a1@<X8>)
{
  _BOOL8 result;

  result = sub_1AF6D4B10();
  *a1 = result;
  return result;
}

uint64_t sub_1AF6D4B9C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = j__OUTLINED_FUNCTION_0_15();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1AF6D4BC4@<X0>(BOOL *a1@<X8>)
{
  uint64_t result;

  result = sub_1AF6D4B54();
  *a1 = result != 0;
  return result;
}

void sub_1AF6D4BF0(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1AF6D4BFC()
{
  sub_1AF6D4DE8();
  return sub_1AF76AF90();
}

uint64_t sub_1AF6D4C24()
{
  sub_1AF6D4DE8();
  return sub_1AF76AF9C();
}

unint64_t XPCDarwinNotificationEventStream.Event.description.getter()
{
  sub_1AF76A960();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1AF76A5B8();
  swift_bridgeObjectRelease();
  sub_1AF76A5B8();
  return 0xD000000000000016;
}

uint64_t XPCDarwinNotificationEventStream.Event.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED01F620);
  MEMORY[0x1E0C80A78](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AF6D4DE8();
  sub_1AF76AF54();
  if (!v2)
  {
    v6 = sub_1AF76AAD4();
    v8 = v7;
    OUTLINED_FUNCTION_1_11();
    *a2 = v6;
    a2[1] = v8;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1AF6D4DE8()
{
  unint64_t result;

  result = qword_1ED01F630;
  if (!qword_1ED01F630)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77D9E4, &unk_1E5FC1938);
    atomic_store(result, (unint64_t *)&qword_1ED01F630);
  }
  return result;
}

unint64_t sub_1AF6D4E24(uint64_t a1)
{
  unint64_t result;

  result = sub_1AF6D4E48();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1AF6D4E48()
{
  unint64_t result;

  result = qword_1ED01F648;
  if (!qword_1ED01F648)
  {
    result = MEMORY[0x1B5DFC634](&protocol conformance descriptor for XPCDarwinNotificationEventStream.Event, &type metadata for XPCDarwinNotificationEventStream.Event);
    atomic_store(result, (unint64_t *)&qword_1ED01F648);
  }
  return result;
}

uint64_t sub_1AF6D4E88@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return XPCDarwinNotificationEventStream.Event.init(from:)(a1, a2);
}

unint64_t sub_1AF6D4EA0()
{
  unint64_t result;

  result = qword_1ED01F650;
  if (!qword_1ED01F650)
  {
    result = MEMORY[0x1B5DFC634](&protocol conformance descriptor for XPCDarwinNotificationEventStream.Event, &type metadata for XPCDarwinNotificationEventStream.Event);
    atomic_store(result, (unint64_t *)&qword_1ED01F650);
  }
  return result;
}

unint64_t sub_1AF6D4EDC()
{
  static XPCDarwinNotificationEventStream.name.getter();
  return 0xD00000000000001ALL;
}

void type metadata accessor for XPCDarwinNotificationEventStream()
{
  OUTLINED_FUNCTION_25();
}

uint64_t getEnumTagSinglePayload for XPCDarwinNotificationEventStream.Event(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for XPCDarwinNotificationEventStream.Event(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for XPCDarwinNotificationEventStream.Event()
{
  OUTLINED_FUNCTION_25();
}

uint64_t sub_1AF6D4F8C(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1AF6D4FCC + 4 * asc_1AF77D820[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1AF6D4FEC + 4 * byte_1AF77D825[v4]))();
}

_BYTE *sub_1AF6D4FCC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1AF6D4FEC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AF6D4FF4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AF6D4FFC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AF6D5004(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AF6D500C(_DWORD *result)
{
  *result = 0;
  return result;
}

void type metadata accessor for XPCDarwinNotificationEventStream.Event.CodingKeys()
{
  OUTLINED_FUNCTION_25();
}

unint64_t sub_1AF6D5028()
{
  unint64_t result;

  result = qword_1EEE4CCC0;
  if (!qword_1EEE4CCC0)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77D9BC, &unk_1E5FC1938);
    atomic_store(result, (unint64_t *)&qword_1EEE4CCC0);
  }
  return result;
}

unint64_t sub_1AF6D5068()
{
  unint64_t result;

  result = qword_1ED01F640;
  if (!qword_1ED01F640)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77D8F4, &unk_1E5FC1938);
    atomic_store(result, (unint64_t *)&qword_1ED01F640);
  }
  return result;
}

unint64_t sub_1AF6D50A8()
{
  unint64_t result;

  result = qword_1ED01F638;
  if (!qword_1ED01F638)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77D91C, &unk_1E5FC1938);
    atomic_store(result, (unint64_t *)&qword_1ED01F638);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_15()
{
  return 0x6163696669746F4ELL;
}

uint64_t OUTLINED_FUNCTION_1_11()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

void sub_1AF6D5114(void (*a1)(void))
{
  a1();
  OUTLINED_FUNCTION_19();
}

uint64_t sub_1AF6D5130(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  _QWORD v15[5];

  v3 = type metadata accessor for XPCEncoder();
  swift_allocObject();
  sub_1AF6A1234();
  v5 = v4;
  v15[3] = v3;
  sub_1AF6DBC08(&qword_1EEE4CDA0, (void (*)(uint64_t))type metadata accessor for XPCEncoder);
  v15[4] = v6;
  v15[0] = v5;
  swift_retain();
  v7 = a1;
  sub_1AF6D8DBC(v15);
  if (v1)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
    v8 = sub_1AF6A08AC();
    v10 = v9;
    v12 = v11;
    sub_1AF69FB4C(v8, v9, v11);
    v7 = v13;
    sub_1AF6A0EC0(v8, v10, v12);
    swift_release();
  }
  return v7;
}

_QWORD *sub_1AF6D5230(_QWORD *(*a1)(uint64_t *__return_ptr, _QWORD *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  _QWORD *result;
  uint64_t v11;
  _QWORD v12[4];

  if ((a4 & 0x1000000000000000) != 0 || !(a4 & 0x2000000000000000 | a3 & 0x1000000000000000))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEE4BD70);
    OUTLINED_FUNCTION_45_1();
    result = (_QWORD *)sub_1AF76A954();
    if (!v4)
      return (_QWORD *)v12[3];
  }
  else
  {
    MEMORY[0x1E0C80A78](a1);
    if ((a4 & 0x2000000000000000) != 0)
    {
      v12[0] = a3;
      v12[1] = a4 & 0xFFFFFFFFFFFFFFLL;
      result = a1(&v11, v12);
      if (!v4)
        return (_QWORD *)v11;
    }
    else
    {
      if ((a3 & 0x1000000000000000) != 0)
      {
        v8 = (a4 & 0xFFFFFFFFFFFFFFFLL) + 32;
        v9 = a3 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        v8 = sub_1AF76A9C0();
      }
      return (_QWORD *)sub_1AF6DA3B8(v8, v9, (uint64_t (*)(void))sub_1AF6DB9B0);
    }
  }
  return result;
}

uint64_t sub_1AF6D5358(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1AF76A69C();
  if (__swift_getEnumTagSinglePayload(a1, 1, v6) == 1)
  {
    sub_1AF6A6388(a1, &qword_1EEE4B3E0);
  }
  else
  {
    sub_1AF76A690();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
  }
  if (*(_QWORD *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1AF76A654();
    swift_unknownObjectRelease();
  }
  v7 = OUTLINED_FUNCTION_16_2();
  *(_QWORD *)(v7 + 16) = a2;
  *(_QWORD *)(v7 + 24) = a3;
  return swift_task_create();
}

unint64_t XPCConnectionError.errorDescription.getter()
{
  uint64_t v0;
  unint64_t v1;

  v1 = 0xD000000000000016;
  switch(*(_QWORD *)(v0 + 8))
  {
    case 0:
    case 1:
    case 2:
      return v1;
    case 3:
      v1 = 0x206E776F6E6B6E55;
      break;
    default:
      sub_1AF76A960();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_63_3();
      v1 = 0xD000000000000018;
      break;
  }
  return v1;
}

void sub_1AF6D558C(uint64_t (**a1)()@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  sub_1AF6D5670();
  if (v2)
  {
    v4 = v2;
    v5 = v3;
    v2 = swift_allocObject();
    *(_QWORD *)(v2 + 16) = v4;
    *(_QWORD *)(v2 + 24) = v5;
    v6 = sub_1AF6DC2A4;
  }
  else
  {
    v6 = 0;
  }
  *a1 = v6;
  a1[1] = (uint64_t (*)())v2;
}

void sub_1AF6D55F0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v1 = *a1;
  v2 = a1[1];
  if (*a1)
  {
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v1;
    *(_QWORD *)(v3 + 24) = v2;
    v4 = sub_1AF6DC2A4;
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  sub_1AF698E68(v1);
  sub_1AF6D56B0((uint64_t)v4, v3);
}

void sub_1AF6D5670()
{
  uint64_t v0;

  OUTLINED_FUNCTION_0_0();
  sub_1AF698E68(*(_QWORD *)(v0 + 112));
  OUTLINED_FUNCTION_8_1();
}

void sub_1AF6D56B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  OUTLINED_FUNCTION_0_0();
  v5 = *(_QWORD *)(v2 + 112);
  *(_QWORD *)(v2 + 112) = a1;
  *(_QWORD *)(v2 + 120) = a2;
  sub_1AF698F38(v5);
  OUTLINED_FUNCTION_38_1();
}

uint64_t (*sub_1AF6D56F0())()
{
  OUTLINED_FUNCTION_0_0();
  return j__swift_endAccess;
}

void sub_1AF6D5728(void (**a1)()@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)();

  sub_1AF6D580C();
  if (v2)
  {
    v4 = v2;
    v5 = v3;
    v2 = swift_allocObject();
    *(_QWORD *)(v2 + 16) = v4;
    *(_QWORD *)(v2 + 24) = v5;
    v6 = sub_1AF6DAAC8;
  }
  else
  {
    v6 = 0;
  }
  *a1 = v6;
  a1[1] = (void (*)())v2;
}

void sub_1AF6D578C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)();

  v1 = *a1;
  v2 = a1[1];
  if (*a1)
  {
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v1;
    *(_QWORD *)(v3 + 24) = v2;
    v4 = sub_1AF6DAAC8;
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  sub_1AF698E68(v1);
  sub_1AF6D584C((uint64_t)v4, v3);
}

void sub_1AF6D580C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_0_0();
  sub_1AF698E68(*(_QWORD *)(v0 + 128));
  OUTLINED_FUNCTION_8_1();
}

void sub_1AF6D584C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  OUTLINED_FUNCTION_0_0();
  v5 = *(_QWORD *)(v2 + 128);
  *(_QWORD *)(v2 + 128) = a1;
  *(_QWORD *)(v2 + 136) = a2;
  sub_1AF698F38(v5);
  OUTLINED_FUNCTION_38_1();
}

uint64_t (*sub_1AF6D588C())()
{
  OUTLINED_FUNCTION_0_0();
  return j_j__swift_endAccess;
}

uint64_t sub_1AF6D58C4(_xpc_connection_s *a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  void *v6;
  id v7;
  _QWORD v9[6];

  *(_QWORD *)(v2 + 32) = sub_1AF76A4C8();
  *(_QWORD *)(v2 + 40) = sub_1AF76A4C8();
  *(_QWORD *)(v2 + 48) = 0xD000000000000010;
  *(_QWORD *)(v2 + 56) = 0x80000001AF782360;
  *(_QWORD *)(v2 + 64) = 0xD000000000000010;
  *(_QWORD *)(v2 + 72) = 0x80000001AF782380;
  *(_QWORD *)(v2 + 80) = 0xD000000000000017;
  *(_QWORD *)(v2 + 88) = 0x80000001AF7823A0;
  *(_QWORD *)(v2 + 96) = 0xD000000000000021;
  *(_QWORD *)(v2 + 104) = 0x80000001AF7823C0;
  *(_OWORD *)(v2 + 112) = 0u;
  *(_OWORD *)(v2 + 128) = 0u;
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v2;
  *(_QWORD *)(v5 + 24) = a1;
  v9[4] = sub_1AF6DBA18;
  v9[5] = v5;
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 1107296256;
  v9[2] = sub_1AF684264;
  v9[3] = &block_descriptor_37;
  v6 = _Block_copy(v9);
  swift_unknownObjectRetain_n();
  v7 = a2;
  swift_retain();
  swift_release();
  xpc_connection_set_event_handler(a1, v6);
  swift_unknownObjectRelease();

  _Block_release(v6);
  return v2;
}

void sub_1AF6D5A60(void *a1, uint64_t a2, _xpc_connection_s *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  xpc_object_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  xpc_object_t reply;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4B3E0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1B5DFCA90](a1);
  if (v9 == sub_1AF76A390())
  {
    v11 = sub_1AF76A3CC();
    swift_unknownObjectRelease();
    if ((void *)v11 == a1)
    {
      swift_beginAccess();
      v13 = *(void (**)(uint64_t))(a2 + 128);
      if (!v13)
        return;
    }
    else
    {
      v12 = sub_1AF76A3D8();
      swift_unknownObjectRelease();
      if ((void *)v12 != a1)
        return;
      swift_beginAccess();
      v13 = *(void (**)(uint64_t))(a2 + 112);
      if (!v13)
        return;
    }
    v28 = swift_retain();
    v13(v28);
    sub_1AF698F38((uint64_t)v13);
    return;
  }
  if (v9 != sub_1AF76A3C0())
  {
LABEL_3:
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4CC90);
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1AF778CD0;
    *(_QWORD *)(v10 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v10 + 32) = 0xD00000000000003ELL;
    *(_QWORD *)(v10 + 40) = 0x80000001AF7823F0;
    sub_1AF76AF00();
    swift_bridgeObjectRelease();
    xpc_connection_cancel(*(xpc_connection_t *)(a2 + 16));
    return;
  }
  v14 = *(_QWORD *)(a2 + 48);
  v15 = *(_QWORD *)(a2 + 56);
  swift_unknownObjectRetain();
  v16 = sub_1AF69B51C(v14, v15, a1);
  if (!v17)
  {
    swift_unknownObjectRelease();
    goto LABEL_3;
  }
  v18 = v16;
  v19 = v17;
  v20 = sub_1AF76A594();
  v21 = xpc_dictionary_get_value(a1, (const char *)(v20 + 32));
  swift_release();
  if (!v21)
  {
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_3;
  }
  swift_beginAccess();
  v22 = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v23 = sub_1AF69FA24(v18, v19, v22);
  v25 = v24;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v23)
  {
    swift_bridgeObjectRelease();
    v26 = sub_1AF76A69C();
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 1, 1, v26);
    v27 = (_QWORD *)swift_allocObject();
    v27[2] = 0;
    v27[3] = 0;
    v27[4] = v23;
    v27[5] = v25;
    v27[6] = v21;
    v27[7] = a1;
    v27[8] = a2;
    v27[9] = a3;
    swift_retain();
    swift_unknownObjectRetain();
    sub_1AF6D5358((uint64_t)v8, (uint64_t)&unk_1EEE4CD98, (uint64_t)v27);
LABEL_18:
    swift_release();
    return;
  }
  swift_beginAccess();
  v29 = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v30 = sub_1AF69FA24(v18, v19, v29);
  v32 = v31;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v30)
  {
    swift_bridgeObjectRelease();
    v33 = sub_1AF76A69C();
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 1, 1, v33);
    v34 = (_QWORD *)swift_allocObject();
    v34[2] = 0;
    v34[3] = 0;
    v34[4] = v30;
    v34[5] = v32;
    v34[6] = v21;
    sub_1AF698E68(v30);
    swift_unknownObjectRetain();
    sub_1AF6D5358((uint64_t)v8, (uint64_t)&unk_1EEE4CD88, (uint64_t)v34);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    sub_1AF698F38(v30);
    goto LABEL_18;
  }
  reply = xpc_dictionary_create_reply(a1);
  if (reply)
  {
    v36 = reply;
    swift_bridgeObjectRelease();
    v37 = sub_1AF76A594();
    xpc_dictionary_set_BOOL(v36, (const char *)(v37 + 32), 1);
    swift_release();
    swift_unknownObjectRetain();
    xpc_connection_send_message(a3, v36);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease_n();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4CC90);
    v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_1AF778CD0;
    v41 = 0;
    v42 = 0xE000000000000000;
    sub_1AF76A960();
    swift_bridgeObjectRelease();
    v41 = 0xD000000000000029;
    v42 = 0x80000001AF782430;
    sub_1AF76A5B8();
    swift_bridgeObjectRelease();
    v39 = v41;
    v40 = v42;
    *(_QWORD *)(v38 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v38 + 32) = v39;
    *(_QWORD *)(v38 + 40) = v40;
    sub_1AF76AF00();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  swift_unknownObjectRelease();
}

uint64_t sub_1AF6D5F74(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;

  v8[20] = a8;
  v8[21] = v13;
  v8[19] = a7;
  v12 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v10 = (_QWORD *)swift_task_alloc();
  v8[22] = v10;
  *v10 = v8;
  v10[1] = sub_1AF6D5FE4;
  return v12(a6);
}

uint64_t sub_1AF6D5FE4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 184) = a1;
  *(_QWORD *)(v3 + 192) = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_9_4();
  return OUTLINED_FUNCTION_2_3();
}

uint64_t sub_1AF6D6044()
{
  uint64_t v0;
  xpc_object_t reply;
  void *v2;
  void *v3;
  _xpc_connection_s *v4;
  uint64_t v5;
  uint64_t v6;

  reply = xpc_dictionary_create_reply(*(xpc_object_t *)(v0 + 152));
  v2 = *(void **)(v0 + 184);
  if (reply)
  {
    v3 = reply;
    v4 = *(_xpc_connection_s **)(v0 + 168);
    v5 = sub_1AF76A594();
    xpc_dictionary_set_value(v3, (const char *)(v5 + 32), v2);
    swift_release();
    xpc_connection_send_message(v4, v3);
    OUTLINED_FUNCTION_76();
    OUTLINED_FUNCTION_59_2();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4CC90);
    v6 = OUTLINED_FUNCTION_16_2();
    *(_OWORD *)(v6 + 16) = xmmword_1AF778CD0;
    *(_QWORD *)(v6 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v6 + 32) = 0xD000000000000039;
    *(_QWORD *)(v6 + 40) = 0x80000001AF782490;
    OUTLINED_FUNCTION_8_12();
    OUTLINED_FUNCTION_76();
    swift_bridgeObjectRelease();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1AF6D6124()
{
  uint64_t v0;
  xpc_object_t reply;
  void *v2;
  void *v3;
  id v4;
  void *v5;
  _xpc_connection_s *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  reply = xpc_dictionary_create_reply(*(xpc_object_t *)(v0 + 152));
  if (reply)
  {
    v2 = reply;
    v3 = *(void **)(v0 + 192);
    swift_bridgeObjectRetain();
    v4 = v3;
    sub_1AF6D62C8(v3, (uint64_t *)(v0 + 16));
    v5 = (void *)sub_1AF6D5130(v0 + 16);
    v6 = *(_xpc_connection_s **)(v0 + 168);
    sub_1AF6DBB80(v0 + 16);
    v7 = sub_1AF76A594();
    swift_bridgeObjectRelease();
    xpc_dictionary_set_value(v2, (const char *)(v7 + 32), v5);
    swift_unknownObjectRelease();
    swift_release();
    xpc_connection_send_message(v6, v2);
    OUTLINED_FUNCTION_76();
  }
  v8 = *(void **)(v0 + 192);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4CC90);
  v9 = OUTLINED_FUNCTION_16_2();
  *(_OWORD *)(v9 + 16) = xmmword_1AF778CD0;
  sub_1AF76A960();
  *(_QWORD *)(v0 + 128) = 0;
  *(_QWORD *)(v0 + 136) = 0xE000000000000000;
  OUTLINED_FUNCTION_28_6();
  *(_QWORD *)(v0 + 144) = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED01F870);
  OUTLINED_FUNCTION_56_0();
  v10 = *(_QWORD *)(v0 + 128);
  v11 = *(_QWORD *)(v0 + 136);
  *(_QWORD *)(v9 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v9 + 32) = v10;
  *(_QWORD *)(v9 + 40) = v11;
  OUTLINED_FUNCTION_8_12();
  OUTLINED_FUNCTION_18_5();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1AF6D62C8(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;

  swift_getErrorValue();
  v4 = sub_1AF76AEC4();
  v34 = v5;
  v35 = v4;
  v6 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED01F870);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4CDB8);
  if ((swift_dynamicCast() & 1) != 0)
  {
    __swift_project_boxed_opaque_existential_1(&v36, *((uint64_t *)&v37 + 1));
    v7 = sub_1AF76A0B4();
    v32 = v8;
    v33 = v7;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v36);
  }
  else
  {
    v38 = 0;
    v36 = 0u;
    v37 = 0u;
    sub_1AF6A6388((uint64_t)&v36, &qword_1EEE4CDC0);
    v32 = 0;
    v33 = 0;
  }
  v9 = a1;
  if ((swift_dynamicCast() & 1) != 0)
  {
    __swift_project_boxed_opaque_existential_1(&v36, *((uint64_t *)&v37 + 1));
    v10 = sub_1AF76A0A8();
    v30 = v11;
    v31 = v10;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v36);
  }
  else
  {
    v38 = 0;
    v36 = 0u;
    v37 = 0u;
    sub_1AF6A6388((uint64_t)&v36, &qword_1EEE4CDC0);
    v30 = 0;
    v31 = 0;
  }
  v12 = a1;
  if ((swift_dynamicCast() & 1) != 0)
  {
    __swift_project_boxed_opaque_existential_1(&v36, *((uint64_t *)&v37 + 1));
    v13 = sub_1AF76A0C0();
    v28 = v14;
    v29 = v13;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v36);
  }
  else
  {
    v38 = 0;
    v36 = 0u;
    v37 = 0u;
    sub_1AF6A6388((uint64_t)&v36, &qword_1EEE4CDC0);
    v28 = 0;
    v29 = 0;
  }
  v15 = a1;
  if ((swift_dynamicCast() & 1) != 0)
  {
    __swift_project_boxed_opaque_existential_1(&v36, *((uint64_t *)&v37 + 1));
    v16 = sub_1AF76A09C();
    v18 = v17;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v36);
  }
  else
  {
    v38 = 0;
    v36 = 0u;
    v37 = 0u;
    sub_1AF6A6388((uint64_t)&v36, &qword_1EEE4CDC0);
    v16 = 0;
    v18 = 0;
  }
  v19 = (void *)sub_1AF76A108();
  v20 = objc_msgSend(v19, sel_domain);
  v21 = sub_1AF76A57C();
  v23 = v22;

  v24 = objc_msgSend(v19, sel_code);
  v25 = objc_msgSend(v19, sel_userInfo);
  v26 = sub_1AF76A4B0();

  v27 = sub_1AF6D8640(v26);
  swift_bridgeObjectRelease();

  *a2 = v35;
  a2[1] = v34;
  a2[2] = v33;
  a2[3] = v32;
  a2[4] = v31;
  a2[5] = v30;
  a2[6] = v29;
  a2[7] = v28;
  a2[8] = v16;
  a2[9] = v18;
  a2[10] = v21;
  a2[11] = v23;
  a2[12] = (uint64_t)v24;
  a2[13] = v27;
}

uint64_t sub_1AF6D6620(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t);

  v10 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 40) = v8;
  *v8 = v6;
  v8[1] = sub_1AF6D6684;
  return v10(a6);
}

uint64_t sub_1AF6D6684()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  OUTLINED_FUNCTION_61();
  v2 = *v1;
  *v3 = v2;
  *(_QWORD *)(v4 + 48) = v0;
  swift_task_dealloc();
  if (!v0)
    return OUTLINED_FUNCTION_12_6(*(uint64_t (**)(void))(v2 + 8));
  OUTLINED_FUNCTION_9_4();
  return OUTLINED_FUNCTION_2_3();
}

uint64_t sub_1AF6D66D4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(void **)(v0 + 48);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4CC90);
  v2 = OUTLINED_FUNCTION_16_2();
  *(_OWORD *)(v2 + 16) = xmmword_1AF778CD0;
  sub_1AF76A960();
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0xE000000000000000;
  OUTLINED_FUNCTION_28_6();
  *(_QWORD *)(v0 + 32) = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED01F870);
  OUTLINED_FUNCTION_56_0();
  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v2 + 32) = v3;
  *(_QWORD *)(v2 + 40) = v4;
  OUTLINED_FUNCTION_8_12();
  OUTLINED_FUNCTION_18_5();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void XPCConnection.__allocating_init(incomingConnection:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  _xpc_connection_s *v10;
  void *v11;

  OUTLINED_FUNCTION_7_3();
  v1 = v0;
  v2 = OUTLINED_FUNCTION_43_3();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_4_3();
  v6 = v5 - v4;
  OUTLINED_FUNCTION_42_3();
  v7 = (void (*)(uint64_t))MEMORY[0x1E0DEF810];
  OUTLINED_FUNCTION_0_7();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_24_4();
  sub_1AF76A48C();
  OUTLINED_FUNCTION_0_7();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_4_7();
  v10 = *(_xpc_connection_s **)(v1 + 16);
  sub_1AF6ACB34();
  swift_unknownObjectRetain();
  sub_1AF76A468();
  sub_1AF6DBC08(&qword_1EEE4BE48, v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4CCB0);
  sub_1AF6DA574(&qword_1EEE4BE50, &qword_1EEE4CCB0);
  sub_1AF76A900();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v6, *MEMORY[0x1E0DEF8D0], v2);
  OUTLINED_FUNCTION_19_5();
  v11 = (void *)sub_1AF76A84C();
  type metadata accessor for XPCConnection();
  OUTLINED_FUNCTION_16_2();
  sub_1AF6D58C4(v10, v11);
  swift_release();
  OUTLINED_FUNCTION_0_3();
}

uint64_t type metadata accessor for XPCConnection()
{
  return objc_opt_self();
}

void static XPCConnection.endpoint(_:)()
{
  uint64_t v0;
  _xpc_endpoint_s **v1;
  _xpc_endpoint_s **v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  _xpc_endpoint_s *v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_7_3();
  v2 = v1;
  v3 = OUTLINED_FUNCTION_43_3();
  v13 = *(_QWORD *)(v3 - 8);
  v14 = v3;
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_4_3();
  v6 = v5 - v4;
  OUTLINED_FUNCTION_42_3();
  OUTLINED_FUNCTION_0_7();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_15_3();
  sub_1AF76A48C();
  OUTLINED_FUNCTION_0_7();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_24_4();
  v9 = sub_1AF76A45C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_4_7();
  v12 = *v2;
  sub_1AF6ACB34();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v10 + 104))(v0, *MEMORY[0x1E0DEF540], v9);
  sub_1AF76A858();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v0, v9);
  sub_1AF76A468();
  sub_1AF6DBC08(&qword_1EEE4BE48, (void (*)(uint64_t))MEMORY[0x1E0DEF810]);
  OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_58_3(&qword_1EEE4BE50);
  sub_1AF76A900();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v13 + 104))(v6, *MEMORY[0x1E0DEF8D0], v14);
  OUTLINED_FUNCTION_19_5();
  v11 = (void *)sub_1AF76A84C();
  xpc_connection_create_from_endpoint(v12);
  type metadata accessor for XPCConnection();
  OUTLINED_FUNCTION_16_2();
  OUTLINED_FUNCTION_44_2();
  OUTLINED_FUNCTION_31_4(v11);
  OUTLINED_FUNCTION_45_3();

  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_0_3();
}

void static XPCConnection.machService(_:)()
{
  sub_1AF6D6BAC();
}

xpc_connection_t sub_1AF6D6B6C@<X0>(const char *a1@<X0>, xpc_connection_t *a2@<X8>)
{
  uint64_t v2;
  xpc_connection_t result;

  result = xpc_connection_create_mach_service(a1, *(dispatch_queue_t *)(v2 + 16), 0);
  *a2 = result;
  return result;
}

void static XPCConnection.service(_:)()
{
  sub_1AF6D6BAC();
}

void sub_1AF6D6BAC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *(*v2)(uint64_t *__return_ptr, _QWORD *);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *(*v16)(uint64_t *__return_ptr, _QWORD *);
  uint64_t v17;
  _QWORD v18[6];

  OUTLINED_FUNCTION_7_3();
  v16 = v2;
  v17 = v1;
  v15 = v3;
  v4 = OUTLINED_FUNCTION_43_3();
  v13 = *(_QWORD *)(v4 - 8);
  v14 = v4;
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_4_3();
  v7 = v6 - v5;
  OUTLINED_FUNCTION_42_3();
  OUTLINED_FUNCTION_0_7();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_4_7();
  sub_1AF76A48C();
  OUTLINED_FUNCTION_0_7();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_4_3();
  v10 = sub_1AF76A45C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_15_3();
  sub_1AF6ACB34();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v11 + 104))(v0, *MEMORY[0x1E0DEF540], v10);
  sub_1AF76A858();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v0, v10);
  sub_1AF76A468();
  v18[5] = MEMORY[0x1E0DEE9D8];
  sub_1AF6DBC08(&qword_1EEE4BE48, (void (*)(uint64_t))MEMORY[0x1E0DEF810]);
  OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_58_3(&qword_1EEE4BE50);
  sub_1AF76A900();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v13 + 104))(v7, *MEMORY[0x1E0DEF8D0], v14);
  OUTLINED_FUNCTION_19_5();
  v12 = (void *)sub_1AF76A84C();
  v18[2] = v12;
  sub_1AF6D5230(v16, (uint64_t)v18, v15, v17);
  type metadata accessor for XPCConnection();
  OUTLINED_FUNCTION_16_2();
  OUTLINED_FUNCTION_44_2();
  OUTLINED_FUNCTION_31_4(v12);
  OUTLINED_FUNCTION_45_3();

  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_0_3();
}

xpc_connection_t sub_1AF6D6DB4@<X0>(const char *a1@<X0>, xpc_connection_t *a2@<X8>)
{
  uint64_t v2;
  xpc_connection_t result;

  result = xpc_connection_create(a1, *(dispatch_queue_t *)(v2 + 16));
  *a2 = result;
  return result;
}

uint64_t sub_1AF6D6DE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[7] = a4;
  v5[8] = v4;
  v5[5] = a2;
  v5[6] = a3;
  v5[4] = a1;
  OUTLINED_FUNCTION_9_4();
  return swift_task_switch();
}

uint64_t sub_1AF6D6E08()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  xpc_object_t empty;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v12;

  v1 = sub_1AF69FA78(v0[5]);
  v0[9] = v1;
  v2 = (void *)v1;
  v3 = v0[8];
  v12 = v0[7];
  v4 = v0[6];
  empty = xpc_dictionary_create_empty();
  v0[2] = empty;
  v0[3] = v4;
  swift_getMetatypeMetadata();
  swift_bridgeObjectRetain();
  sub_1AF76A588();
  v6 = sub_1AF76A594();
  swift_bridgeObjectRelease();
  v7 = sub_1AF76A594();
  swift_bridgeObjectRelease();
  xpc_dictionary_set_string(empty, (const char *)(v6 + 32), (const char *)(v7 + 32));
  OUTLINED_FUNCTION_41_3();
  swift_release();
  v8 = sub_1AF76A594();
  xpc_dictionary_set_value(empty, (const char *)(v8 + 32), v2);
  OUTLINED_FUNCTION_41_3();
  v9 = (_QWORD *)swift_task_alloc();
  v0[10] = v9;
  v9[2] = v4;
  v9[3] = v12;
  v9[4] = v3;
  v9[5] = v0 + 2;
  v10 = (_QWORD *)swift_task_alloc();
  v0[11] = v10;
  swift_getAssociatedTypeWitness();
  *v10 = v0;
  v10[1] = sub_1AF6D6FE4;
  OUTLINED_FUNCTION_9_4();
  return sub_1AF76AE7C();
}

uint64_t sub_1AF6D6FE4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  OUTLINED_FUNCTION_9_4();
  return swift_task_switch();
}

uint64_t sub_1AF6D704C()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return OUTLINED_FUNCTION_12_6(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1AF6D7080()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  OUTLINED_FUNCTION_5_3();
  swift_unknownObjectRelease();
  return OUTLINED_FUNCTION_12_6(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1AF6D70B8(uint64_t a1, uint64_t a2, void **a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  NSObject *v15;
  unint64_t v16;
  char *v17;
  void *v18;
  xpc_connection_t v20;
  dispatch_queue_t v21;
  _QWORD aBlock[6];

  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED01F870);
  v10 = sub_1AF76A678();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v20 - v12;
  v14 = *a3;
  v15 = *(NSObject **)(a2 + 24);
  v20 = *(xpc_connection_t *)(a2 + 16);
  v21 = v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
  v16 = (*(unsigned __int8 *)(v11 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v17 = (char *)swift_allocObject();
  *((_QWORD *)v17 + 2) = a4;
  *((_QWORD *)v17 + 3) = a5;
  *((_QWORD *)v17 + 4) = a2;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v17[v16], v13, v10);
  aBlock[4] = sub_1AF6DB8FC;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1AF684264;
  aBlock[3] = &block_descriptor_5;
  v18 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  xpc_connection_send_message_with_reply(v20, v14, v21, v18);
  _Block_release(v18);
  return swift_unknownObjectRelease();
}

uint64_t sub_1AF6D7268(uint64_t a1)
{
  uint64_t v1;

  return sub_1AF6D70B8(a1, *(_QWORD *)(v1 + 32), *(void ***)(v1 + 40), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1AF6D7274(void *a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v10 - v7;
  swift_getAssociatedConformanceWitness();
  sub_1AF6D786C(a1);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, AssociatedTypeWitness);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED01F870);
  sub_1AF76A678();
  sub_1AF76A66C();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, AssociatedTypeWitness);
}

uint64_t sub_1AF6D7408(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  xpc_object_t empty;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  xpc_object_t v8;
  xpc_object_t value;

  result = sub_1AF69FA78(a1);
  if (!v2)
  {
    value = (xpc_object_t)result;
    empty = xpc_dictionary_create_empty();
    swift_getMetatypeMetadata();
    swift_bridgeObjectRetain();
    sub_1AF76A588();
    v5 = sub_1AF76A594();
    swift_bridgeObjectRelease();
    v6 = sub_1AF76A594();
    swift_bridgeObjectRelease();
    xpc_dictionary_set_string(empty, (const char *)(v5 + 32), (const char *)(v6 + 32));
    swift_release();
    swift_release();
    v7 = OUTLINED_FUNCTION_49_3();
    xpc_dictionary_set_value(empty, (const char *)(v7 + 32), value);
    swift_release();
    v8 = xpc_connection_send_message_with_reply_sync(*(xpc_connection_t *)(v1 + 16), empty);
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    sub_1AF6D786C(v8);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1AF6D75A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  void *v4;
  xpc_object_t empty;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  result = sub_1AF69FA78(a1);
  if (!v2)
  {
    v4 = (void *)result;
    empty = xpc_dictionary_create_empty();
    swift_getMetatypeMetadata();
    swift_bridgeObjectRetain();
    sub_1AF76A588();
    v6 = sub_1AF76A594();
    swift_bridgeObjectRelease();
    v7 = sub_1AF76A594();
    swift_bridgeObjectRelease();
    xpc_dictionary_set_string(empty, (const char *)(v6 + 32), (const char *)(v7 + 32));
    swift_release();
    swift_release();
    v8 = OUTLINED_FUNCTION_49_3();
    xpc_dictionary_set_value(empty, (const char *)(v8 + 32), v4);
    swift_release();
    xpc_connection_send_message(*(xpc_connection_t *)(v1 + 16), empty);
    swift_unknownObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1AF6D76B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_11_8();
  OUTLINED_FUNCTION_50_1();
  OUTLINED_FUNCTION_14_8();
  sub_1AF6D7734(v0, v1, v2, v3, v4);
  OUTLINED_FUNCTION_0_0();
  swift_retain();
  OUTLINED_FUNCTION_27_4();
  swift_endAccess();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_22_7();
}

void *sub_1AF6D7734(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v9;

  v9 = (_QWORD *)swift_allocObject();
  v9[2] = a4;
  v9[3] = a5;
  v9[4] = a2;
  v9[5] = a3;
  return &unk_1EEE4CD48;
}

void sub_1AF6D778C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_11_8();
  OUTLINED_FUNCTION_50_1();
  OUTLINED_FUNCTION_14_8();
  sub_1AF6D780C(v0, v1, v2, v3, v4);
  OUTLINED_FUNCTION_0_0();
  swift_retain();
  OUTLINED_FUNCTION_27_4();
  swift_endAccess();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_22_7();
}

void *sub_1AF6D780C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v9;

  v9 = (_QWORD *)swift_allocObject();
  v9[2] = a4;
  v9[3] = a5;
  v9[4] = a2;
  v9[5] = a3;
  return &unk_1EEE4CD30;
}

void sub_1AF6D7864()
{
  uint64_t v0;

  xpc_connection_cancel(*(xpc_connection_t *)(v0 + 16));
}

uint64_t sub_1AF6D786C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  const char *v10;
  void *v11;
  xpc_object_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BOOL4 v17;
  __int128 *v18;
  __int128 v19;
  uint64_t *v20;
  uint64_t v22;
  xpc_object_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  _QWORD v27[5];
  uint64_t __src[14];

  v2 = v1;
  v4 = MEMORY[0x1B5DFCA90]();
  if (v4 == sub_1AF76A390())
  {
    v6 = sub_1AF76A3CC();
    swift_unknownObjectRelease();
    if ((void *)v6 == a1)
    {
      if (xpc_connection_copy_invalidation_reason())
      {
        v13 = sub_1AF76A5C4();
        v15 = v14;
      }
      else
      {
        v13 = 0;
        v15 = 0;
      }
      sub_1AF6DA5AC();
      OUTLINED_FUNCTION_5();
      *v20 = v13;
      v20[1] = v15;
    }
    else
    {
      v7 = sub_1AF76A3D8();
      swift_unknownObjectRelease();
      sub_1AF6DA5AC();
      OUTLINED_FUNCTION_5();
      *v8 = 0;
      if ((void *)v7 == a1)
        v9 = 1;
      else
        v9 = 3;
      v8[1] = v9;
    }
    return swift_willThrow();
  }
  if (v4 != sub_1AF76A3C0())
  {
    sub_1AF6DA5AC();
    OUTLINED_FUNCTION_5();
    *v5 = xmmword_1AF77DE50;
    return swift_willThrow();
  }
  v10 = (const char *)(OUTLINED_FUNCTION_49_3() + 32);
  v11 = (void *)OUTLINED_FUNCTION_28_3();
  v12 = xpc_dictionary_get_value(v11, v10);
  swift_release();
  if (v12)
  {
    sub_1AF69FE8C();
    swift_unknownObjectRelease();
  }
  else
  {
    v16 = sub_1AF76A594();
    v17 = xpc_dictionary_get_BOOL(a1, (const char *)(v16 + 32));
    swift_release();
    if (v17)
    {
      sub_1AF6DA5AC();
      OUTLINED_FUNCTION_5();
      v19 = xmmword_1AF77DE60;
    }
    else
    {
      v22 = sub_1AF76A594();
      v23 = xpc_dictionary_get_value(a1, (const char *)(v22 + 32));
      swift_release();
      if (v23)
      {
        sub_1AF76AA08();
        swift_unknownObjectRetain();
        v24 = MEMORY[0x1E0DEE9D8];
        v25 = sub_1AF76A4C8();
        v27[3] = &unk_1E5FBF100;
        v27[0] = v23;
        v27[1] = v24;
        v27[4] = sub_1AF6A7B58();
        v27[2] = v25;
        sub_1AF6D8FFC(v27, __src);
        if (!v2)
        {
          sub_1AF6DB7D4();
          OUTLINED_FUNCTION_5();
          memcpy(v26, __src, 0x70uLL);
          swift_willThrow();
        }
        swift_unknownObjectRelease();
        return swift_unknownObjectRelease();
      }
      sub_1AF6DA5AC();
      OUTLINED_FUNCTION_5();
      v19 = xmmword_1AF77DE50;
    }
    *v18 = v19;
    swift_willThrow();
  }
  return swift_unknownObjectRelease();
}

uint64_t XPCConnection.deinit()
{
  uint64_t v0;

  OUTLINED_FUNCTION_47_2();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1AF698F38(*(_QWORD *)(v0 + 112));
  sub_1AF698F38(*(_QWORD *)(v0 + 128));
  return v0;
}

uint64_t XPCConnection.__deallocating_deinit()
{
  XPCConnection.deinit();
  return swift_deallocClassInstance();
}

void XPCConnection.description.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_48_1();
  sub_1AF76A960();
  swift_bridgeObjectRelease();
  sub_1AF76AB94();
  OUTLINED_FUNCTION_46_3();
  OUTLINED_FUNCTION_18_5();
  OUTLINED_FUNCTION_35_2();
  v0 = OUTLINED_FUNCTION_28_3();
  MEMORY[0x1B5DFC970](v0);
  sub_1AF76A5C4();
  OUTLINED_FUNCTION_36_1();
}

uint64_t sub_1AF6D7C90()
{
  uint64_t v1;

  OUTLINED_FUNCTION_59_2();
  sub_1AF76A5B8();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_34_4();
  return v1;
}

void sub_1AF6D7CC8()
{
  XPCConnection.description.getter();
}

void XPCConnection.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  unint64_t v5;

  OUTLINED_FUNCTION_48_1();
  OUTLINED_FUNCTION_0_0();
  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain_n();
  v2 = sub_1AF6DA3F0(v1);
  swift_bridgeObjectRelease();
  v4 = v2;
  sub_1AF6DA50C((uint64_t *)&v4);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_58_3(&qword_1EEE4CCE0);
  sub_1AF76A528();
  OUTLINED_FUNCTION_41_3();
  v4 = 0;
  v5 = 0xE000000000000000;
  sub_1AF76A960();
  swift_bridgeObjectRelease();
  v4 = (_QWORD *)0xD000000000000013;
  v5 = 0x80000001AF7821D0;
  sub_1AF76AB94();
  OUTLINED_FUNCTION_46_3();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_35_2();
  v3 = OUTLINED_FUNCTION_28_3();
  MEMORY[0x1B5DFC970](v3);
  sub_1AF76A5C4();
  OUTLINED_FUNCTION_36_1();
}

void sub_1AF6D7E9C()
{
  XPCConnection.debugDescription.getter();
}

uint64_t sub_1AF6D7EBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t AssociatedTypeWitness;

  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5[7] = AssociatedTypeWitness;
  v5[8] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v5[9] = swift_task_alloc();
  v5[10] = *(_QWORD *)(a4 - 8);
  v5[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1AF6D7F60()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v4)(_QWORD, _QWORD);

  OUTLINED_FUNCTION_20_7();
  if (v0)
  {
    swift_task_dealloc();
    OUTLINED_FUNCTION_5_3();
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
  else
  {
    v3 = (_QWORD *)OUTLINED_FUNCTION_10_5();
    *(_QWORD *)(v1 + 96) = v3;
    *v3 = v1;
    v3[1] = sub_1AF6D7FF4;
    return v4(*(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 88));
  }
}

uint64_t sub_1AF6D7FF4()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_61();
  *v2 = *v1;
  *(_QWORD *)(v3 + 104) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_9_4();
  return OUTLINED_FUNCTION_2_3();
}

uint64_t sub_1AF6D8044()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t);
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 40);
  swift_getAssociatedConformanceWitness();
  v5 = OUTLINED_FUNCTION_45_1();
  v6 = sub_1AF69FA78(v5);
  v7 = OUTLINED_FUNCTION_45_1();
  v8(v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  OUTLINED_FUNCTION_62_1();
  v9 = swift_task_dealloc();
  if (!v1)
    v9 = v6;
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v9);
}

uint64_t sub_1AF6D8108()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 80) + 8))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 40));
  OUTLINED_FUNCTION_62_1();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1AF6D8150(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  v5[7] = *(_QWORD *)(a4 - 8);
  v5[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1AF6D81AC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v4)(_QWORD);

  OUTLINED_FUNCTION_20_7();
  if (v0)
  {
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
  else
  {
    v3 = (_QWORD *)OUTLINED_FUNCTION_10_5();
    *(_QWORD *)(v1 + 72) = v3;
    *v3 = v1;
    v3[1] = sub_1AF6D8234;
    return v4(*(_QWORD *)(v1 + 64));
  }
}

uint64_t sub_1AF6D8234()
{
  OUTLINED_FUNCTION_61();
  swift_task_dealloc();
  OUTLINED_FUNCTION_9_4();
  return OUTLINED_FUNCTION_2_3();
}

uint64_t sub_1AF6D8274()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 56) + 8))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 40));
  OUTLINED_FUNCTION_5_3();
  return OUTLINED_FUNCTION_12_6(*(uint64_t (**)(void))(v0 + 8));
}

unint64_t sub_1AF6D82B0()
{
  uint64_t v0;

  return sub_1AF6D82B8(*(_QWORD *)(v0 + 104));
}

unint64_t sub_1AF6D82B8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  unint64_t result;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t *v17;
  unint64_t v18;
  char v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  _OWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  _OWORD v40[2];

  v1 = a1;
  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EEE4CE20);
    v2 = (_QWORD *)sub_1AF76AA68();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  }
  v32 = v1 + 64;
  v3 = -1 << *(_BYTE *)(v1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(v1 + 64);
  v31 = (unint64_t)(63 - v3) >> 6;
  v6 = &v37;
  v7 = &v39;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  v10 = MEMORY[0x1E0DEE9B8] + 8;
  v11 = MEMORY[0x1E0DEA968];
  while (1)
  {
    while (1)
    {
      if (v5)
      {
        v34 = (v5 - 1) & v5;
        v12 = __clz(__rbit64(v5)) | (v9 << 6);
      }
      else
      {
        v13 = v9 + 1;
        if (__OFADD__(v9, 1))
          goto LABEL_34;
        if (v13 >= v31)
        {
LABEL_31:
          sub_1AF6C6FBC();
          return (unint64_t)v2;
        }
        v14 = *(_QWORD *)(v32 + 8 * v13);
        v15 = v9 + 1;
        if (!v14)
        {
          v15 = v9 + 2;
          if (v9 + 2 >= v31)
            goto LABEL_31;
          v14 = *(_QWORD *)(v32 + 8 * v15);
          if (!v14)
          {
            v15 = v9 + 3;
            if (v9 + 3 >= v31)
              goto LABEL_31;
            v14 = *(_QWORD *)(v32 + 8 * v15);
            if (!v14)
            {
              v15 = v9 + 4;
              if (v9 + 4 >= v31)
                goto LABEL_31;
              v14 = *(_QWORD *)(v32 + 8 * v15);
              if (!v14)
              {
                v16 = v9 + 5;
                if (v9 + 5 >= v31)
                  goto LABEL_31;
                v14 = *(_QWORD *)(v32 + 8 * v16);
                if (!v14)
                {
                  while (1)
                  {
                    v15 = v16 + 1;
                    if (__OFADD__(v16, 1))
                      goto LABEL_35;
                    if (v15 >= v31)
                      goto LABEL_31;
                    v14 = *(_QWORD *)(v32 + 8 * v15);
                    ++v16;
                    if (v14)
                      goto LABEL_25;
                  }
                }
                v15 = v9 + 5;
              }
            }
          }
        }
LABEL_25:
        v34 = (v14 - 1) & v14;
        v12 = __clz(__rbit64(v14)) + (v15 << 6);
        v9 = v15;
      }
      v17 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v12);
      v35 = *v17;
      v36 = v17[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_dynamicCast();
      sub_1AF69AF78(v6, v7);
      sub_1AF69AF78(v7, v40);
      sub_1AF69AF78(v40, &v38);
      result = sub_1AF6842A4(v35, v36);
      v18 = result;
      if ((v19 & 1) == 0)
        break;
      v33 = v9;
      v20 = v7;
      v21 = v6;
      v22 = v1;
      v23 = v11;
      v24 = v10;
      v25 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *v25 = v35;
      v25[1] = v36;
      v10 = v24;
      v11 = v23;
      v1 = v22;
      v6 = v21;
      v7 = v20;
      v9 = v33;
      v26 = (_OWORD *)(v2[7] + 32 * v18);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
      result = (unint64_t)sub_1AF69AF78(&v38, v26);
      v5 = v34;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v27 = (uint64_t *)(v2[6] + 16 * result);
    *v27 = v35;
    v27[1] = v36;
    result = (unint64_t)sub_1AF69AF78(&v38, (_OWORD *)(v2[7] + 32 * result));
    v28 = v2[2];
    v29 = __OFADD__(v28, 1);
    v30 = v28 + 1;
    if (v29)
      goto LABEL_33;
    v2[2] = v30;
    v5 = v34;
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1AF6D8614()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AF6D8640(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  int64_t v5;
  uint64_t result;
  unint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  int64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  _QWORD *v29;
  int64_t v30;
  uint64_t i;
  char v32[72];
  __int128 v33;
  _OWORD v34[2];
  __int128 v35;
  _OWORD v36[2];
  __int128 v37;
  _OWORD v38[2];
  uint64_t v39;
  _QWORD v40[7];
  int64_t v41;

  v1 = MEMORY[0x1E0DEE9E0];
  v39 = MEMORY[0x1E0DEE9E0];
  sub_1AF6DA4D4(a1, v40);
  v2 = v40[0];
  v3 = v40[1];
  v41 = v40[3];
  v4 = v40[4];
  v5 = (unint64_t)(v40[2] + 64) >> 6;
  result = swift_bridgeObjectRetain();
  v30 = v5;
  for (i = v3; ; v3 = i)
  {
    while (1)
    {
      if (v4)
      {
        v7 = __clz(__rbit64(v4));
        v4 &= v4 - 1;
        v8 = v7 | (v41 << 6);
      }
      else
      {
        v9 = v41 + 1;
        if (__OFADD__(v41, 1))
          goto LABEL_38;
        if (v9 >= v5)
          goto LABEL_36;
        v10 = *(_QWORD *)(v3 + 8 * v9);
        v11 = v41 + 1;
        if (!v10)
        {
          v11 = v41 + 2;
          if (v41 + 2 >= v5)
            goto LABEL_36;
          v10 = *(_QWORD *)(v3 + 8 * v11);
          if (!v10)
          {
            v11 = v41 + 3;
            if (v41 + 3 >= v5)
              goto LABEL_36;
            v10 = *(_QWORD *)(v3 + 8 * v11);
            if (!v10)
            {
              v11 = v41 + 4;
              if (v41 + 4 >= v5)
                goto LABEL_36;
              v10 = *(_QWORD *)(v3 + 8 * v11);
              if (!v10)
              {
                v11 = v41 + 5;
                if (v41 + 5 >= v5)
                  goto LABEL_36;
                v10 = *(_QWORD *)(v3 + 8 * v11);
                if (!v10)
                {
                  v12 = v41 + 6;
                  while (v12 < v5)
                  {
                    v10 = *(_QWORD *)(v3 + 8 * v12++);
                    if (v10)
                    {
                      v11 = v12 - 1;
                      goto LABEL_19;
                    }
                  }
LABEL_36:
                  sub_1AF6C6FBC();
                  return v1;
                }
              }
            }
          }
        }
LABEL_19:
        v4 = (v10 - 1) & v10;
        v8 = __clz(__rbit64(v10)) + (v11 << 6);
        v41 = v11;
      }
      v13 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v8);
      v15 = *v13;
      v14 = v13[1];
      sub_1AF6ACA64(*(_QWORD *)(v2 + 56) + 32 * v8, (uint64_t)v38);
      *(_QWORD *)&v37 = v15;
      *((_QWORD *)&v37 + 1) = v14;
      v35 = v37;
      v36[0] = v38[0];
      v36[1] = v38[1];
      sub_1AF6ACA64((uint64_t)v36, (uint64_t)v32);
      swift_bridgeObjectRetain();
      if ((swift_dynamicCast() & 1) != 0)
        break;
      v33 = 0uLL;
LABEL_27:
      sub_1AF6A6388((uint64_t)&v35, &qword_1EEE4CDC8);
      result = swift_bridgeObjectRelease();
    }
    v16 = *((_QWORD *)&v33 + 1);
    if (!*((_QWORD *)&v33 + 1))
      goto LABEL_27;
    v17 = v33;
    v18 = v35;
    v33 = v35;
    sub_1AF69AF78(v36, v34);
    v19 = *(_QWORD *)(v1 + 16);
    if (*(_QWORD *)(v1 + 24) <= v19)
    {
      sub_1AF6D9ADC(v19 + 1, 1);
      v1 = v39;
    }
    sub_1AF76AF18();
    sub_1AF76A5AC();
    result = sub_1AF76AF3C();
    v20 = v1 + 64;
    v21 = -1 << *(_BYTE *)(v1 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)(v1 + 64 + 8 * (v22 >> 6))) == 0)
      break;
    v24 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v1 + 64 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
LABEL_35:
    *(_QWORD *)(v20 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    *(_OWORD *)(*(_QWORD *)(v1 + 48) + 16 * v24) = v18;
    v29 = (_QWORD *)(*(_QWORD *)(v1 + 56) + 16 * v24);
    *v29 = v17;
    v29[1] = v16;
    ++*(_QWORD *)(v1 + 16);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
    v5 = v30;
  }
  v25 = 0;
  v26 = (unint64_t)(63 - v21) >> 6;
  while (++v23 != v26 || (v25 & 1) == 0)
  {
    v27 = v23 == v26;
    if (v23 == v26)
      v23 = 0;
    v25 |= v27;
    v28 = *(_QWORD *)(v20 + 8 * v23);
    if (v28 != -1)
    {
      v24 = __clz(__rbit64(~v28)) + (v23 << 6);
      goto LABEL_35;
    }
  }
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_1AF6D89A0(uint64_t a1, uint64_t a2)
{
  BOOL v5;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  char v10;

  if (a1 == 0xD000000000000014 && a2 == 0x80000001AF781AC0 || (sub_1AF76AD14() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001AF7824D0 || (sub_1AF76AD14() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = a1 == 0x526572756C696166 && a2 == 0xED00006E6F736165;
    if (v5 || (sub_1AF76AD14() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0xD000000000000012 && a2 == 0x80000001AF7824F0 || (sub_1AF76AD14() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else
    {
      v6 = a1 == 0x68636E41706C6568 && a2 == 0xEA0000000000726FLL;
      if (v6 || (sub_1AF76AD14() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        v7 = a1 == 0x6E69616D6F64 && a2 == 0xE600000000000000;
        if (v7 || (sub_1AF76AD14() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else
        {
          v8 = a1 == 0x646F43726F727265 && a2 == 0xE900000000000065;
          if (v8 || (sub_1AF76AD14() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 6;
          }
          else if (a1 == 0x6F666E4972657375 && a2 == 0xE800000000000000)
          {
            swift_bridgeObjectRelease();
            return 7;
          }
          else
          {
            v10 = sub_1AF76AD14();
            swift_bridgeObjectRelease();
            if ((v10 & 1) != 0)
              return 7;
            else
              return 8;
          }
        }
      }
    }
  }
}

uint64_t sub_1AF6D8CBC()
{
  return 8;
}

uint64_t sub_1AF6D8CC4(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1AF6D8D00 + 4 * byte_1AF77DA44[a1]))(0xD000000000000014, 0x80000001AF781AC0);
}

unint64_t sub_1AF6D8D00()
{
  return 0xD000000000000010;
}

uint64_t sub_1AF6D8D1C()
{
  return 0x526572756C696166;
}

uint64_t sub_1AF6D8D40()
{
  uint64_t v0;

  return v0 + 2;
}

uint64_t sub_1AF6D8D58()
{
  return 0x68636E41706C6568;
}

uint64_t sub_1AF6D8D74()
{
  return 0x6E69616D6F64;
}

uint64_t sub_1AF6D8D88()
{
  return 0x646F43726F727265;
}

uint64_t sub_1AF6D8DA4()
{
  return 0x6F666E4972657375;
}

uint64_t sub_1AF6D8DBC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[8];
  uint64_t v11;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4CDA8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AF6DB810();
  sub_1AF76AF6C();
  LOBYTE(v11) = 0;
  sub_1AF76AB40();
  if (!v2)
  {
    LOBYTE(v11) = 1;
    sub_1AF76AB34();
    LOBYTE(v11) = 2;
    sub_1AF76AB34();
    LOBYTE(v11) = 3;
    sub_1AF76AB34();
    LOBYTE(v11) = 4;
    sub_1AF76AB34();
    LOBYTE(v11) = 5;
    sub_1AF76AB40();
    LOBYTE(v11) = 6;
    sub_1AF76AB58();
    v11 = *(_QWORD *)(v3 + 104);
    v10[7] = 7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4CD70);
    sub_1AF6DBC3C(&qword_1EEE4CDB0, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEA0B8]);
    sub_1AF76AB64();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1AF6D8FFC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4CD60);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AF6DB810();
  sub_1AF76AF54();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  LOBYTE(v43) = 0;
  v9 = sub_1AF76AAD4();
  v11 = v10;
  LOBYTE(v43) = 1;
  swift_bridgeObjectRetain();
  v35 = sub_1AF76AABC();
  v36 = v9;
  LOBYTE(v43) = 2;
  v13 = v12;
  swift_bridgeObjectRetain();
  v14 = sub_1AF76AABC();
  v41 = v13;
  v34 = v14;
  LOBYTE(v43) = 3;
  v16 = v15;
  swift_bridgeObjectRetain();
  v17 = sub_1AF76AABC();
  v40 = v16;
  v33 = v17;
  LOBYTE(v43) = 4;
  v39 = v18;
  swift_bridgeObjectRetain();
  v19 = sub_1AF76AABC();
  v38 = v20;
  v32 = v19;
  LOBYTE(v43) = 5;
  swift_bridgeObjectRetain();
  v31 = sub_1AF76AAD4();
  LOBYTE(v43) = 6;
  v37 = v21;
  swift_bridgeObjectRetain();
  v30 = sub_1AF76AAEC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4CD70);
  v42 = 7;
  sub_1AF6DBC3C(&qword_1EEE4CD78, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEA0D8]);
  sub_1AF76AAF8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v22 = v43;
  swift_bridgeObjectRetain();
  v23 = v41;
  swift_bridgeObjectRetain();
  v24 = v40;
  swift_bridgeObjectRetain();
  v25 = v39;
  swift_bridgeObjectRetain();
  v26 = v38;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  v27 = v37;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a2 = v36;
  a2[1] = v11;
  a2[2] = v35;
  a2[3] = v23;
  a2[4] = v34;
  a2[5] = v24;
  a2[6] = v33;
  a2[7] = v25;
  a2[8] = v32;
  a2[9] = v26;
  a2[10] = v31;
  a2[11] = v27;
  a2[12] = v30;
  a2[13] = v22;
  return result;
}

uint64_t sub_1AF6D9580()
{
  unsigned __int8 *v0;

  return sub_1AF6D8CC4(*v0);
}

uint64_t sub_1AF6D9588@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AF6D89A0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AF6D95AC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1AF6D8CBC();
  *a1 = result;
  return result;
}

uint64_t sub_1AF6D95D0()
{
  sub_1AF6DB810();
  return sub_1AF76AF90();
}

uint64_t sub_1AF6D95F8()
{
  sub_1AF6DB810();
  return sub_1AF76AF9C();
}

uint64_t sub_1AF6D9620()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AF6D964C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AF6D9678()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AF6D96A4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AF6D96D0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 96);
}

unint64_t sub_1AF6D96D8()
{
  const void *v0;
  _BYTE v2[112];

  memcpy(v2, v0, sizeof(v2));
  return sub_1AF6D82B0();
}

void *sub_1AF6D9710@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  void *result;
  uint64_t v5[14];

  result = (void *)sub_1AF6D8FFC(a1, v5);
  if (!v2)
    return memcpy(a2, v5, 0x70uLL);
  return result;
}

uint64_t sub_1AF6D9758(_QWORD *a1)
{
  const void *v1;
  _BYTE v4[112];

  memcpy(v4, v1, sizeof(v4));
  return sub_1AF6D8DBC(a1);
}

uint64_t sub_1AF6D97A8()
{
  const void *v0;
  _BYTE v2[112];

  memcpy(v2, v0, sizeof(v2));
  return sub_1AF6D8614();
}

uint64_t sub_1AF6D97E0()
{
  sub_1AF6DC268();
  return sub_1AF76AEAC();
}

void sub_1AF6D9808(uint64_t a1)
{
  if (a1 < 0)
  {
    sub_1AF76AA2C();
    __break(1u);
  }
  else
  {
    if (a1)
      *(_QWORD *)(sub_1AF76A624() + 16) = a1;
    OUTLINED_FUNCTION_8_1();
  }
}

uint64_t sub_1AF6D9898(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1AF6D98FC;
  return v6(a1);
}

uint64_t sub_1AF6D98FC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_0_16();
  return OUTLINED_FUNCTION_12_6(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1AF6D9924()
{
  return sub_1AF6D994C();
}

uint64_t sub_1AF6D9938()
{
  return sub_1AF6D994C();
}

uint64_t sub_1AF6D994C()
{
  _QWORD *v0;
  uint64_t v2;

  OUTLINED_FUNCTION_33_5();
  OUTLINED_FUNCTION_4_11();
  sub_1AF6D9DE8();
  *v0 = v2;
  return OUTLINED_FUNCTION_3_11();
}

uint64_t sub_1AF6D99AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v8;

  OUTLINED_FUNCTION_33_5();
  OUTLINED_FUNCTION_4_11();
  sub_1AF6D9EE8(a1, a2, a3);
  *v3 = v8;
  return OUTLINED_FUNCTION_3_11();
}

uint64_t sub_1AF6D9A04(char a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v8;

  OUTLINED_FUNCTION_33_5();
  OUTLINED_FUNCTION_4_11();
  sub_1AF6DA000(a1, a2, a3);
  *v3 = v8;
  return OUTLINED_FUNCTION_3_11();
}

uint64_t sub_1AF6D9A5C()
{
  _QWORD *v0;
  uint64_t v2;

  OUTLINED_FUNCTION_33_5();
  OUTLINED_FUNCTION_4_11();
  sub_1AF6DA110();
  *v0 = v2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AF6D9ADC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t i;
  int64_t v16;
  _QWORD *v17;
  unint64_t v18;
  int64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  uint64_t v39;
  char v40;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4CDD0);
  v40 = a2;
  v6 = sub_1AF76AA5C();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_39;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v39 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v37 = v2;
  v38 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  if (!v10)
    goto LABEL_7;
LABEL_6:
  v14 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (i = v14 | (v13 << 6); ; i = __clz(__rbit64(v18)) + (v13 << 6))
  {
    v20 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * i);
    v22 = *v20;
    v21 = v20[1];
    v23 = (uint64_t *)(*(_QWORD *)(v5 + 56) + 16 * i);
    v24 = *v23;
    v25 = v23[1];
    if ((v40 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1AF76AF18();
    sub_1AF76A5AC();
    result = sub_1AF76AF3C();
    v26 = -1 << *(_BYTE *)(v7 + 32);
    v27 = result & ~v26;
    v28 = v27 >> 6;
    if (((-1 << v27) & ~*(_QWORD *)(v11 + 8 * (v27 >> 6))) == 0)
    {
      v30 = 0;
      v31 = (unint64_t)(63 - v26) >> 6;
      while (++v28 != v31 || (v30 & 1) == 0)
      {
        v32 = v28 == v31;
        if (v28 == v31)
          v28 = 0;
        v30 |= v32;
        v33 = *(_QWORD *)(v11 + 8 * v28);
        if (v33 != -1)
        {
          v29 = __clz(__rbit64(~v33)) + (v28 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    v29 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v11 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
    v34 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v29);
    *v34 = v22;
    v34[1] = v21;
    v35 = (_QWORD *)(*(_QWORD *)(v7 + 56) + 16 * v29);
    *v35 = v24;
    v35[1] = v25;
    ++*(_QWORD *)(v7 + 16);
    if (v10)
      goto LABEL_6;
LABEL_7:
    v16 = v13 + 1;
    if (__OFADD__(v13, 1))
      goto LABEL_41;
    if (v16 >= v38)
    {
      swift_release();
      v3 = v37;
      v17 = (_QWORD *)(v5 + 64);
      goto LABEL_34;
    }
    v17 = (_QWORD *)(v5 + 64);
    v18 = *(_QWORD *)(v39 + 8 * v16);
    ++v13;
    if (!v18)
    {
      v13 = v16 + 1;
      if (v16 + 1 >= v38)
        goto LABEL_32;
      v18 = *(_QWORD *)(v39 + 8 * v13);
      if (!v18)
        break;
    }
LABEL_18:
    v10 = (v18 - 1) & v18;
  }
  v19 = v16 + 2;
  if (v19 < v38)
  {
    v18 = *(_QWORD *)(v39 + 8 * v19);
    if (!v18)
    {
      while (1)
      {
        v13 = v19 + 1;
        if (__OFADD__(v19, 1))
          goto LABEL_42;
        if (v13 >= v38)
          goto LABEL_32;
        v18 = *(_QWORD *)(v39 + 8 * v13);
        ++v19;
        if (v18)
          goto LABEL_18;
      }
    }
    v13 = v19;
    goto LABEL_18;
  }
LABEL_32:
  swift_release();
  v3 = v37;
LABEL_34:
  if ((v40 & 1) != 0)
  {
    v36 = 1 << *(_BYTE *)(v5 + 32);
    if (v36 >= 64)
      sub_1AF6DA39C(0, (unint64_t)(v36 + 63) >> 6, v17);
    else
      *v17 = -1 << v36;
    *(_QWORD *)(v5 + 16) = 0;
  }
LABEL_39:
  result = swift_release();
  *v3 = v7;
  return result;
}

void sub_1AF6D9DE8()
{
  uint64_t *v0;
  uint64_t (*v1)(_QWORD);
  uint64_t (*v2)(_QWORD);
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  char v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_7_3();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  sub_1AF6C3548(v5);
  OUTLINED_FUNCTION_64_3();
  if (v11)
  {
    __break(1u);
    goto LABEL_9;
  }
  v12 = v9;
  v13 = v10;
  __swift_instantiateConcreteTypeFromMangledName(v4);
  if ((sub_1AF76AA14() & 1) == 0)
    goto LABEL_5;
  v14 = sub_1AF6C3548(v6);
  if ((v13 & 1) != (v15 & 1))
  {
LABEL_9:
    type metadata accessor for WFLogCategoryName(0);
    sub_1AF76AEA0();
    __break(1u);
    return;
  }
  v12 = v14;
LABEL_5:
  v16 = *v0;
  if ((v13 & 1) != 0)
  {
    v17 = *(_QWORD *)(v16 + 56);
    v18 = v2(0);
    (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v12, v8, v18);
  }
  else
  {
    sub_1AF6DA208(v12, v6, v8, v16);
    OUTLINED_FUNCTION_0_3();
  }
}

uint64_t sub_1AF6D9EE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  char v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t result;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v9 = sub_1AF6842A4(a2, a3);
  if (__OFADD__(v8[2], (v10 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v11 = v9;
  v12 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4CD08);
  if ((sub_1AF76AA14() & 1) == 0)
    goto LABEL_5;
  v13 = sub_1AF6842A4(a2, a3);
  if ((v12 & 1) != (v14 & 1))
  {
LABEL_9:
    result = sub_1AF76AEA0();
    __break(1u);
    return result;
  }
  v11 = v13;
LABEL_5:
  v15 = *v4;
  if ((v12 & 1) != 0)
  {
    v16 = v15[7];
    result = swift_release();
    *(_QWORD *)(v16 + 8 * v11) = a1;
  }
  else
  {
    sub_1AF6DA284(v11, a2, a3, a1, v15);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1AF6DA000(char a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  char v12;
  uint64_t result;
  char v14;
  _QWORD *v15;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v9 = sub_1AF6842A4(a2, a3);
  if (__OFADD__(v8[2], (v10 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v11 = v9;
  v12 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4B488);
  result = sub_1AF76AA14();
  if ((result & 1) == 0)
    goto LABEL_5;
  result = sub_1AF6842A4(a2, a3);
  if ((v12 & 1) != (v14 & 1))
  {
LABEL_9:
    result = sub_1AF76AEA0();
    __break(1u);
    return result;
  }
  v11 = result;
LABEL_5:
  v15 = *v4;
  if ((v12 & 1) != 0)
  {
    *(_BYTE *)(v15[7] + v11) = a1 & 1;
  }
  else
  {
    sub_1AF6DA2CC(v11, a2, a3, a1 & 1, v15);
    return swift_bridgeObjectRetain();
  }
  return result;
}

void sub_1AF6DA110()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  char v13;
  unint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  _QWORD *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_7_3();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  sub_1AF6842A4(v5, v3);
  OUTLINED_FUNCTION_64_3();
  if (v13)
  {
    __break(1u);
    goto LABEL_9;
  }
  v14 = v11;
  v15 = v12;
  __swift_instantiateConcreteTypeFromMangledName(v2);
  if ((sub_1AF76AA14() & 1) == 0)
    goto LABEL_5;
  v16 = sub_1AF6842A4(v6, v4);
  if ((v15 & 1) != (v17 & 1))
  {
LABEL_9:
    sub_1AF76AEA0();
    __break(1u);
    return;
  }
  v14 = v16;
LABEL_5:
  if ((v15 & 1) != 0)
  {
    v18 = (_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 56) + 16 * v14);
    swift_release();
    *v18 = v10;
    v18[1] = v8;
    OUTLINED_FUNCTION_0_3();
  }
  else
  {
    OUTLINED_FUNCTION_14_8();
    sub_1AF6DA358(v19, v20, v21, v22, v23, v24);
    swift_bridgeObjectRetain();
  }
}

uint64_t sub_1AF6DA208(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  v7 = OUTLINED_FUNCTION_39_1(a1, a4 + 8 * (a1 >> 6));
  *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v7) = v9;
  v10 = *(_QWORD *)(v8 + 56);
  v12 = v11(0);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10 + *(_QWORD *)(*(_QWORD *)(v12 - 8) + 72) * a1, a3, v12);
  v14 = *(_QWORD *)(a4 + 16);
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (v15)
    __break(1u);
  else
    *(_QWORD *)(a4 + 16) = v16;
  return result;
}

unint64_t sub_1AF6DA284(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  *(_QWORD *)(a5[7] + 8 * result) = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

unint64_t sub_1AF6DA2CC(unint64_t result, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  *(_BYTE *)(a5[7] + result) = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

uint64_t sub_1AF6DA318(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  result = OUTLINED_FUNCTION_39_1(a1, a5 + 8 * (a1 >> 6));
  v7 = (_QWORD *)(v6[6] + 16 * result);
  *v7 = v8;
  v7[1] = v9;
  *(_QWORD *)(v6[7] + 8 * result) = v10;
  v11 = v6[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    v6[2] = v13;
  return result;
}

uint64_t sub_1AF6DA358(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  result = OUTLINED_FUNCTION_39_1(a1, a6 + 8 * (a1 >> 6));
  v8 = (_QWORD *)(v7[6] + 16 * result);
  *v8 = v9;
  v8[1] = v10;
  v11 = (_QWORD *)(v7[7] + 16 * result);
  *v11 = v12;
  v11[1] = v13;
  v14 = v7[2];
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (v15)
    __break(1u);
  else
    v7[2] = v16;
  return result;
}

uint64_t sub_1AF6DA39C(uint64_t result, uint64_t a2, _QWORD *a3)
{
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    for (; a2; --a2)
      *a3++ = result;
  }
  return result;
}

uint64_t sub_1AF6DA3B8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  result = a3();
  if (!v3)
    return v5;
  return result;
}

_QWORD *sub_1AF6DA3F0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  uint64_t v5;
  uint64_t v7;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4CD10);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 16);
  v5 = sub_1AF6DB4B8((uint64_t)&v7, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1AF6C6FBC();
  if (v5 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

uint64_t sub_1AF6DA4D4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  v2 = -1;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  *a2 = a1;
  v6 = *(_QWORD *)(a1 + 64);
  result = a1 + 64;
  v5 = v6;
  if (-v3 < 64)
    v2 = ~(-1 << -(char)v3);
  a2[1] = result;
  a2[2] = ~v3;
  a2[3] = 0;
  a2[4] = v2 & v5;
  return result;
}

void sub_1AF6DA50C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1AF6DB6B4(v2);
    v2 = v3;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v4;
  sub_1AF6DAAE4(v5);
  *a1 = v2;
}

void sub_1AF6DA574(_QWORD *a1, uint64_t *a2)
{
  if (!*a1)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    OUTLINED_FUNCTION_51_1();
  }
  OUTLINED_FUNCTION_19();
}

unint64_t sub_1AF6DA5AC()
{
  unint64_t result;

  result = qword_1EEE4CCE8;
  if (!qword_1EEE4CCE8)
  {
    result = MEMORY[0x1B5DFC634](&protocol conformance descriptor for XPCConnectionError, &type metadata for XPCConnectionError);
    atomic_store(result, (unint64_t *)&qword_1EEE4CCE8);
  }
  return result;
}

unint64_t destroy for XPCConnectionError(uint64_t a1)
{
  unint64_t result;
  int v2;

  result = *(_QWORD *)(a1 + 8);
  v2 = -1;
  if (result < 0xFFFFFFFF)
    v2 = result;
  if (v2 - 1 < 0)
    return swift_bridgeObjectRelease();
  return result;
}

void _s19VoiceShortcutClient18XPCConnectionErrorOwCP_0(_QWORD *a1, _QWORD *a2)
{
  unint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  LODWORD(v4) = -1;
  if (v3 < 0xFFFFFFFF)
    v4 = a2[1];
  if ((int)v4 - 1 < 0)
  {
    *a1 = *a2;
    a1[1] = v3;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  OUTLINED_FUNCTION_19();
}

_QWORD *assignWithCopy for XPCConnectionError(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;

  LODWORD(v4) = -1;
  if (a1[1] >= 0xFFFFFFFFuLL)
    LODWORD(v5) = -1;
  else
    v5 = a1[1];
  v6 = v5 - 1;
  if (a2[1] < 0xFFFFFFFFuLL)
    v4 = a2[1];
  v7 = v4 - 1;
  if (v6 < 0)
  {
    if (v7 < 0)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  if ((v7 & 0x80000000) == 0)
  {
LABEL_11:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithTake for XPCConnectionError(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;
  int v5;
  unint64_t v6;
  uint64_t v7;

  v4 = a1[1];
  v5 = -1;
  if (v4 < 0xFFFFFFFF)
    v5 = v4;
  if (v5 - 1 < 0)
  {
    v6 = a2[1];
    LODWORD(v7) = -1;
    if (v6 < 0xFFFFFFFF)
      v7 = a2[1];
    if ((int)v7 - 1 < 0)
    {
      *a1 = *a2;
      a1[1] = v6;
      swift_bridgeObjectRelease();
      return a1;
    }
    swift_bridgeObjectRelease();
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  return a1;
}

uint64_t getEnumTagSinglePayload for XPCConnectionError(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;
  unsigned int v5;
  unsigned int v6;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFC && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483644);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  v5 = v4 + 1;
  v6 = v4 - 2;
  if (v5 >= 4)
    return v6;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for XPCConnectionError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFB)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483644;
    if (a3 >= 0x7FFFFFFC)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFC)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 3;
  }
  return result;
}

uint64_t sub_1AF6DA838(uint64_t a1)
{
  unint64_t v1;
  int v2;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  v2 = v1 - 1;
  if (v2 < 0)
    v2 = -1;
  return (v2 + 1);
}

_QWORD *sub_1AF6DA85C(_QWORD *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    *result = a2 - 0x7FFFFFFF;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCConnectionError()
{
  return &type metadata for XPCConnectionError;
}

uint64_t method lookup function for XPCConnection()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of XPCConnection.onConnectionInterrupted.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of XPCConnection.onConnectionInterrupted.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of XPCConnection.onConnectionInterrupted.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of XPCConnection.onConnectionInvalidated.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of XPCConnection.onConnectionInvalidated.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of XPCConnection.onConnectionInvalidated.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of XPCConnection.send<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);

  v9 = OUTLINED_FUNCTION_10_5();
  v10 = (_QWORD *)OUTLINED_FUNCTION_52_1(v9);
  *v10 = v4;
  v10[1] = sub_1AF6DA964;
  return v12(a1, a2, a3, a4);
}

uint64_t sub_1AF6DA964()
{
  uint64_t v0;

  OUTLINED_FUNCTION_0_16();
  return OUTLINED_FUNCTION_12_6(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t dispatch thunk of XPCConnection.send<A>(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of XPCConnection.handle<A>(_:handler:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t dispatch thunk of XPCConnection.invalidate()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

ValueMetadata *type metadata accessor for XPCMessageHandlerNoReply()
{
  return &type metadata for XPCMessageHandlerNoReply;
}

_QWORD *initializeBufferWithCopyOfBuffer for XPCMessageHandler(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for XPCMessageHandler()
{
  return swift_release();
}

void _s19VoiceShortcutClient17XPCMessageHandlerVwca_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  OUTLINED_FUNCTION_19();
}

_OWORD *assignWithTake for XPCMessageHandler(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for XPCMessageHandler()
{
  return &type metadata for XPCMessageHandler;
}

uint64_t sub_1AF6DAAA4()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1AF6DAAC8()
{
  uint64_t v0;

  (*(void (**)(void))(v0 + 16))();
  OUTLINED_FUNCTION_19();
}

void sub_1AF6DAAE4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  int v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char *v34;
  char *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  BOOL v47;
  unint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  BOOL v57;
  uint64_t v58;
  char v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  BOOL v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  unint64_t v80;
  _QWORD *v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  BOOL v87;
  uint64_t v88;
  unint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *__dst;
  uint64_t v101;

  v3 = a1[1];
  v4 = sub_1AF76AB88();
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3)
        sub_1AF6DB148(0, v3, 1, a1);
      return;
    }
    goto LABEL_144;
  }
  v5 = v4;
  sub_1AF6D9808(v3 / 2);
  v98 = v6;
  v99 = v3;
  __dst = v7;
  v96 = a1;
  if (v3 <= 0)
  {
    v101 = MEMORY[0x1E0DEE9D8];
    v33 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_110:
    if (v33 < 2)
    {
LABEL_121:
      swift_bridgeObjectRelease();
      if (v3 >= -1)
      {
        *(_QWORD *)(v98 + 16) = 0;
        swift_bridgeObjectRelease();
        return;
      }
      goto LABEL_149;
    }
    v88 = *v96;
    while (1)
    {
      v89 = v33 - 2;
      if (v33 < 2)
        break;
      if (!v88)
        goto LABEL_153;
      v90 = (char *)v101;
      v91 = *(_QWORD *)(v101 + 32 + 16 * v89);
      v92 = *(_QWORD *)(v101 + 32 + 16 * (v33 - 1) + 8);
      sub_1AF6DB20C((char *)(v88 + 16 * v91), (char *)(v88 + 16 * *(_QWORD *)(v101 + 32 + 16 * (v33 - 1))), v88 + 16 * v92, __dst);
      if (v1)
        goto LABEL_106;
      if (v92 < v91)
        goto LABEL_139;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v90 = sub_1AF6DB4A4(v101);
      if (v89 >= *((_QWORD *)v90 + 2))
        goto LABEL_140;
      v93 = &v90[16 * v89 + 32];
      *(_QWORD *)v93 = v91;
      *((_QWORD *)v93 + 1) = v92;
      v94 = *((_QWORD *)v90 + 2);
      if (v33 > v94)
        goto LABEL_141;
      memmove(&v90[16 * v33 + 16], &v90[16 * v33 + 32], 16 * (v94 - v33));
      v101 = (uint64_t)v90;
      *((_QWORD *)v90 + 2) = v94 - 1;
      v33 = v94 - 1;
      v3 = v99;
      if (v94 <= 2)
        goto LABEL_121;
    }
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
LABEL_153:
    __break(1u);
    return;
  }
  v97 = v5;
  v8 = 0;
  v9 = *a1;
  v95 = *a1 + 8;
  v101 = MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v10 = v8++;
    if (v8 >= v3)
      goto LABEL_32;
    v11 = (uint64_t *)(v9 + 16 * v8);
    v12 = *v11;
    v13 = v11[1];
    v14 = (_QWORD *)(v9 + 16 * v10);
    if (v12 == *v14 && v13 == v14[1])
    {
      v17 = v10 + 2;
      if (v10 + 2 >= v3)
        goto LABEL_31;
      v16 = 0;
LABEL_13:
      v18 = (_QWORD *)(v95 + 16 * v17);
      do
      {
        v19 = (_QWORD *)(v9 + 16 * v8);
        if (*(v18 - 1) == *v19 && *v18 == v19[1])
        {
          if ((v16 & 1) != 0)
            goto LABEL_24;
        }
        else if (((v16 ^ sub_1AF76AD14()) & 1) != 0)
        {
          goto LABEL_23;
        }
        v18 += 2;
        v21 = v17 + 1;
        v8 = v17;
        v17 = v21;
      }
      while (v21 < v3);
      v17 = v21;
      goto LABEL_23;
    }
    v16 = sub_1AF76AD14();
    v17 = v10 + 2;
    if (v10 + 2 < v3)
      goto LABEL_13;
LABEL_23:
    v8 = v17;
    if ((v16 & 1) == 0)
      goto LABEL_32;
LABEL_24:
    if (v17 < v10)
      goto LABEL_148;
    if (v10 < v17)
    {
      v22 = 16 * v17;
      v23 = 16 * v10;
      v24 = v17;
      v25 = v10;
      do
      {
        if (v25 != --v24)
        {
          if (!v9)
            goto LABEL_152;
          v26 = v9 + v22;
          v27 = *(_QWORD *)(v9 + v23);
          v28 = *(_QWORD *)(v9 + v23 + 8);
          *(_OWORD *)(v9 + v23) = *(_OWORD *)(v9 + v22 - 16);
          *(_QWORD *)(v26 - 16) = v27;
          *(_QWORD *)(v26 - 8) = v28;
        }
        ++v25;
        v22 -= 16;
        v23 += 16;
      }
      while (v25 < v24);
    }
LABEL_31:
    v8 = v17;
LABEL_32:
    if (v8 >= v3)
      goto LABEL_41;
    if (__OFSUB__(v8, v10))
      goto LABEL_143;
    if (v8 - v10 >= v97)
      goto LABEL_41;
    if (__OFADD__(v10, v97))
      goto LABEL_146;
    if (v10 + v97 >= v3)
      v29 = v3;
    else
      v29 = v10 + v97;
    if (v29 < v10)
      goto LABEL_147;
    if (v8 == v29)
    {
LABEL_41:
      v30 = (char *)v101;
    }
    else
    {
      v81 = (_QWORD *)(v9 + 16 * v8);
      v30 = (char *)v101;
      do
      {
        v82 = (uint64_t *)(v9 + 16 * v8);
        v83 = *v82;
        v84 = v82[1];
        v85 = v10;
        v86 = v81;
        do
        {
          v87 = v83 == *(v86 - 2) && v84 == *(v86 - 1);
          if (v87 || (sub_1AF76AD14() & 1) == 0)
            break;
          if (!v9)
            goto LABEL_150;
          v83 = *v86;
          v84 = v86[1];
          *(_OWORD *)v86 = *((_OWORD *)v86 - 1);
          *(v86 - 1) = v84;
          *(v86 - 2) = v83;
          v86 -= 2;
          ++v85;
        }
        while (v8 != v85);
        ++v8;
        v81 += 2;
      }
      while (v8 != v29);
      v8 = v29;
    }
    if (v8 < v10)
      goto LABEL_142;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v30 = sub_1AF6DB3B0(0, *((_QWORD *)v30 + 2) + 1, 1, v30);
    v32 = *((_QWORD *)v30 + 2);
    v31 = *((_QWORD *)v30 + 3);
    v33 = v32 + 1;
    if (v32 >= v31 >> 1)
      v30 = sub_1AF6DB3B0((char *)(v31 > 1), v32 + 1, 1, v30);
    *((_QWORD *)v30 + 2) = v33;
    v34 = v30 + 32;
    v35 = &v30[16 * v32 + 32];
    *(_QWORD *)v35 = v10;
    *((_QWORD *)v35 + 1) = v8;
    v101 = (uint64_t)v30;
    if (v32)
      break;
    v33 = 1;
LABEL_90:
    v3 = v99;
    if (v8 >= v99)
      goto LABEL_110;
  }
  while (1)
  {
    v36 = v33 - 1;
    if (v33 >= 4)
    {
      v41 = &v34[16 * v33];
      v42 = *((_QWORD *)v41 - 8);
      v43 = *((_QWORD *)v41 - 7);
      v47 = __OFSUB__(v43, v42);
      v44 = v43 - v42;
      if (v47)
        goto LABEL_127;
      v46 = *((_QWORD *)v41 - 6);
      v45 = *((_QWORD *)v41 - 5);
      v47 = __OFSUB__(v45, v46);
      v39 = v45 - v46;
      v40 = v47;
      if (v47)
        goto LABEL_128;
      v48 = v33 - 2;
      v49 = &v34[16 * v33 - 32];
      v51 = *(_QWORD *)v49;
      v50 = *((_QWORD *)v49 + 1);
      v47 = __OFSUB__(v50, v51);
      v52 = v50 - v51;
      if (v47)
        goto LABEL_129;
      v47 = __OFADD__(v39, v52);
      v53 = v39 + v52;
      if (v47)
        goto LABEL_131;
      if (v53 >= v44)
      {
        v71 = &v34[16 * v36];
        v73 = *(_QWORD *)v71;
        v72 = *((_QWORD *)v71 + 1);
        v47 = __OFSUB__(v72, v73);
        v74 = v72 - v73;
        if (v47)
          goto LABEL_137;
        v64 = v39 < v74;
        goto LABEL_79;
      }
    }
    else
    {
      if (v33 != 3)
      {
        v65 = *((_QWORD *)v30 + 4);
        v66 = *((_QWORD *)v30 + 5);
        v47 = __OFSUB__(v66, v65);
        v58 = v66 - v65;
        v59 = v47;
        goto LABEL_73;
      }
      v38 = *((_QWORD *)v30 + 4);
      v37 = *((_QWORD *)v30 + 5);
      v47 = __OFSUB__(v37, v38);
      v39 = v37 - v38;
      v40 = v47;
    }
    if ((v40 & 1) != 0)
      goto LABEL_130;
    v48 = v33 - 2;
    v54 = &v34[16 * v33 - 32];
    v56 = *(_QWORD *)v54;
    v55 = *((_QWORD *)v54 + 1);
    v57 = __OFSUB__(v55, v56);
    v58 = v55 - v56;
    v59 = v57;
    if (v57)
      goto LABEL_132;
    v60 = &v34[16 * v36];
    v62 = *(_QWORD *)v60;
    v61 = *((_QWORD *)v60 + 1);
    v47 = __OFSUB__(v61, v62);
    v63 = v61 - v62;
    if (v47)
      goto LABEL_134;
    if (__OFADD__(v58, v63))
      goto LABEL_136;
    if (v58 + v63 >= v39)
    {
      v64 = v39 < v63;
LABEL_79:
      if (v64)
        v36 = v48;
      goto LABEL_81;
    }
LABEL_73:
    if ((v59 & 1) != 0)
      goto LABEL_133;
    v67 = &v34[16 * v36];
    v69 = *(_QWORD *)v67;
    v68 = *((_QWORD *)v67 + 1);
    v47 = __OFSUB__(v68, v69);
    v70 = v68 - v69;
    if (v47)
      goto LABEL_135;
    if (v70 < v58)
      goto LABEL_90;
LABEL_81:
    v75 = v36 - 1;
    if (v36 - 1 >= v33)
    {
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
      goto LABEL_138;
    }
    if (!v9)
      goto LABEL_151;
    v76 = &v34[16 * v75];
    v77 = *(_QWORD *)v76;
    v78 = &v34[16 * v36];
    v79 = *((_QWORD *)v78 + 1);
    sub_1AF6DB20C((char *)(v9 + 16 * *(_QWORD *)v76), (char *)(v9 + 16 * *(_QWORD *)v78), v9 + 16 * v79, __dst);
    if (v1)
      break;
    if (v79 < v77)
      goto LABEL_124;
    if (v36 > *(_QWORD *)(v101 + 16))
      goto LABEL_125;
    *(_QWORD *)v76 = v77;
    *(_QWORD *)&v34[16 * v75 + 8] = v79;
    v80 = *(_QWORD *)(v101 + 16);
    if (v36 >= v80)
      goto LABEL_126;
    v30 = (char *)v101;
    v33 = v80 - 1;
    memmove(&v34[16 * v36], v78 + 16, 16 * (v80 - 1 - v36));
    *(_QWORD *)(v101 + 16) = v80 - 1;
    if (v80 <= 2)
      goto LABEL_90;
  }
LABEL_106:
  swift_bridgeObjectRelease();
  if (v99 < -1)
    goto LABEL_145;
  *(_QWORD *)(v98 + 16) = 0;
  swift_bridgeObjectRelease();
}

uint64_t sub_1AF6DB148(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 16 * a3;
    while (2)
    {
      v9 = (uint64_t *)(v7 + 16 * v4);
      result = *v9;
      v10 = v9[1];
      v11 = v6;
      v12 = (uint64_t *)v8;
      do
      {
        if (result == *(v12 - 2) && v10 == *(v12 - 1))
          break;
        result = sub_1AF76AD14();
        if ((result & 1) == 0)
          break;
        if (!v7)
        {
          __break(1u);
          return result;
        }
        result = *v12;
        v10 = v12[1];
        *(_OWORD *)v12 = *((_OWORD *)v12 - 1);
        *(v12 - 1) = v10;
        *(v12 - 2) = result;
        v12 -= 2;
        ++v11;
      }
      while (v4 != v11);
      ++v4;
      v8 += 16;
      if (v4 != a2)
        continue;
      break;
    }
  }
  return result;
}

uint64_t sub_1AF6DB20C(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  BOOL v14;
  char *v15;
  char *v18;
  char *v19;
  char *v20;
  BOOL v21;
  BOOL v22;
  BOOL v23;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = (a2 - __src) / 16;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 16;
  if (v9 >= v11)
  {
    sub_1AF6A6ED8(a2, (uint64_t)(a3 - (_QWORD)a2) / 16, __dst);
    v12 = &v4[16 * v11];
    if (v7 >= v6 || v10 < 16)
      goto LABEL_47;
    v18 = (char *)(a3 - 16);
    while (1)
    {
      v19 = v18 + 16;
      v20 = v12 - 16;
      v21 = *((_QWORD *)v12 - 2) == *((_QWORD *)v6 - 2) && *((_QWORD *)v12 - 1) == *((_QWORD *)v6 - 1);
      if (v21 || (sub_1AF76AD14() & 1) == 0)
      {
        v23 = v19 != v12 || v18 >= v12;
        v12 -= 16;
        if (!v23)
          goto LABEL_43;
      }
      else
      {
        v22 = v19 != v6 || v18 >= v6;
        v20 = v6 - 16;
        v6 -= 16;
        if (!v22)
          goto LABEL_43;
      }
      *(_OWORD *)v18 = *(_OWORD *)v20;
LABEL_43:
      v18 -= 16;
      if (v6 <= v7 || v12 <= v4)
        goto LABEL_47;
    }
  }
  sub_1AF6A6ED8(__src, (a2 - __src) / 16, __dst);
  v12 = &v4[16 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 16)
  {
    while (1)
    {
      v14 = *(_QWORD *)v6 == *(_QWORD *)v4 && *((_QWORD *)v6 + 1) == *((_QWORD *)v4 + 1);
      if (!v14 && (sub_1AF76AD14() & 1) != 0)
        break;
      v15 = v4;
      v14 = v7 == v4;
      v4 += 16;
      if (!v14)
        goto LABEL_15;
LABEL_16:
      v7 += 16;
      if (v4 >= v12 || (unint64_t)v6 >= a3)
        goto LABEL_21;
    }
    v15 = v6;
    v14 = v7 == v6;
    v6 += 16;
    if (v14)
      goto LABEL_16;
LABEL_15:
    *(_OWORD *)v7 = *(_OWORD *)v15;
    goto LABEL_16;
  }
LABEL_21:
  v6 = v7;
LABEL_47:
  sub_1AF6A6ED8(v4, (v12 - v4) / 16, v6);
  return 1;
}

char *sub_1AF6DB3B0(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4CD18);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 16);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || &v13[16 * v8] <= v12)
      memmove(v12, v13, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1AF6DB4A4(uint64_t a1)
{
  return sub_1AF6DB3B0(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1AF6DB4B8(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

void sub_1AF6DB6B4(uint64_t a1)
{
  sub_1AF6A75DC(0, *(_QWORD *)(a1 + 16), 0, a1);
}

uint64_t sub_1AF6DB6C8()
{
  OUTLINED_FUNCTION_23_4();
  return swift_deallocObject();
}

uint64_t sub_1AF6DB6E8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_18_9(v1, (uint64_t)sub_1AF6DC2AC);
  return sub_1AF6D8150(v2, v3, v4, v5, v6);
}

uint64_t sub_1AF6DB744()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_18_9(v1, (uint64_t)sub_1AF6DB7A0);
  return sub_1AF6D7EBC(v2, v3, v4, v5, v6);
}

uint64_t sub_1AF6DB7A0(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_0_16();
  return (*(uint64_t (**)(uint64_t))(v1 + 8))(a1);
}

unint64_t sub_1AF6DB7D4()
{
  unint64_t result;

  result = qword_1EEE4CD58;
  if (!qword_1EEE4CD58)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77DE0C, &type metadata for XPCRemoteError);
    atomic_store(result, (unint64_t *)&qword_1EEE4CD58);
  }
  return result;
}

unint64_t sub_1AF6DB810()
{
  unint64_t result;

  result = qword_1EEE4CD68;
  if (!qword_1EEE4CD68)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77DDBC, &type metadata for XPCRemoteError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4CD68);
  }
  return result;
}

uint64_t sub_1AF6DB84C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED01F870);
  v1 = sub_1AF76A678();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1AF6DB8FC(void *a1)
{
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED01F870);
  sub_1AF76A678();
  return sub_1AF6D7274(a1);
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

_QWORD *sub_1AF6DB9B0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *result;
  uint64_t v5;

  result = (*(_QWORD *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2)
    *a1 = v5;
  return result;
}

uint64_t sub_1AF6DB9EC()
{
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

void sub_1AF6DBA18(void *a1)
{
  uint64_t v1;

  sub_1AF6D5A60(a1, *(_QWORD *)(v1 + 16), *(_xpc_connection_s **)(v1 + 24));
}

uint64_t sub_1AF6DBA20()
{
  OUTLINED_FUNCTION_47_2();
  OUTLINED_FUNCTION_23_4();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1AF6DBA4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;

  v2 = *(_QWORD *)(v0 + 48);
  v3 = swift_task_alloc();
  v4 = (_QWORD *)OUTLINED_FUNCTION_52_1(v3);
  *v4 = v1;
  v4[1] = sub_1AF6DA964;
  v5 = OUTLINED_FUNCTION_26_4();
  return sub_1AF6D6620(v5, v6, v7, v8, v9, v2);
}

uint64_t sub_1AF6DBAB4()
{
  OUTLINED_FUNCTION_47_2();
  OUTLINED_FUNCTION_23_4();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1AF6DBAF8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;

  v2 = v0[6];
  v3 = v0[7];
  v4 = v0[8];
  v5 = swift_task_alloc();
  v6 = (_QWORD *)OUTLINED_FUNCTION_52_1(v5);
  *v6 = v1;
  v6[1] = sub_1AF6DC2AC;
  v7 = OUTLINED_FUNCTION_26_4();
  return sub_1AF6D5F74(v7, v8, v9, v10, v11, v2, v3, v4);
}

uint64_t sub_1AF6DBB80(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

void sub_1AF6DBC08(_QWORD *a1, void (*a2)(uint64_t))
{
  if (!*a1)
  {
    a2(255);
    OUTLINED_FUNCTION_51_1();
  }
  OUTLINED_FUNCTION_19();
}

uint64_t sub_1AF6DBC3C(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  _QWORD v8[2];

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE4CD70);
    v8[0] = a2;
    v8[1] = a2;
    result = MEMORY[0x1B5DFC634](a3, v7, v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AF6DBC9C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(int **)(v1 + 16);
  v5 = swift_task_alloc();
  v6 = (_QWORD *)OUTLINED_FUNCTION_52_1(v5);
  *v6 = v2;
  v6[1] = sub_1AF6DC2AC;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EEE4CDD8 + dword_1EEE4CDD8))(a1, v4);
}

uint64_t getEnumTagSinglePayload for XPCRemoteError.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF9)
  {
    if (a2 + 7 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 7) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 8;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v5 = v6 - 8;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for XPCRemoteError.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1AF6DBDDC + 4 * byte_1AF77DA59[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1AF6DBE10 + 4 * byte_1AF77DA54[v4]))();
}

uint64_t sub_1AF6DBE10(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AF6DBE18(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AF6DBE20);
  return result;
}

uint64_t sub_1AF6DBE2C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AF6DBE34);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1AF6DBE38(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AF6DBE40(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for XPCRemoteError.CodingKeys()
{
  return &type metadata for XPCRemoteError.CodingKeys;
}

uint64_t destroy for XPCRemoteError()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for XPCRemoteError(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  v9 = a2[13];
  a1[12] = a2[12];
  a1[13] = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for XPCRemoteError(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  a1[13] = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *__swift_memcpy112_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x70uLL);
}

_QWORD *assignWithTake for XPCRemoteError(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_bridgeObjectRelease();
  v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for XPCRemoteError(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 112))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for XPCRemoteError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 112) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 112) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCRemoteError()
{
  return &type metadata for XPCRemoteError;
}

unint64_t sub_1AF6DC1AC()
{
  unint64_t result;

  result = qword_1EEE4CE00;
  if (!qword_1EEE4CE00)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77DD94, &type metadata for XPCRemoteError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4CE00);
  }
  return result;
}

unint64_t sub_1AF6DC1EC()
{
  unint64_t result;

  result = qword_1EEE4CE08;
  if (!qword_1EEE4CE08)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77DD04, &type metadata for XPCRemoteError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4CE08);
  }
  return result;
}

unint64_t sub_1AF6DC22C()
{
  unint64_t result;

  result = qword_1EEE4CE10;
  if (!qword_1EEE4CE10)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77DD2C, &type metadata for XPCRemoteError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4CE10);
  }
  return result;
}

unint64_t sub_1AF6DC268()
{
  unint64_t result;

  result = qword_1EEE4CE18;
  if (!qword_1EEE4CE18)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77DC7C, &type metadata for XPCRemoteError);
    atomic_store(result, (unint64_t *)&qword_1EEE4CE18);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_16()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
  *(_QWORD *)(v1 - 8) = *v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_3_11()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_4_11()
{
  _QWORD *v0;

  *v0 = 0x8000000000000000;
}

uint64_t OUTLINED_FUNCTION_8_12()
{
  return sub_1AF76AF00();
}

uint64_t OUTLINED_FUNCTION_10_5()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_11_8()
{
  return swift_getMetatypeMetadata();
}

uint64_t OUTLINED_FUNCTION_18_9@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = a2;
  return v2;
}

unint64_t OUTLINED_FUNCTION_19_5()
{
  return 0xD00000000000001ELL;
}

uint64_t OUTLINED_FUNCTION_20_7()
{
  return sub_1AF69FE8C();
}

uint64_t OUTLINED_FUNCTION_24_4()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_26_4()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_27_4()
{
  return sub_1AF6D9A5C();
}

uint64_t OUTLINED_FUNCTION_28_6()
{
  return sub_1AF76A5B8();
}

uint64_t OUTLINED_FUNCTION_31_4(void *a1)
{
  _xpc_connection_s *v1;

  return sub_1AF6D58C4(v1, a1);
}

uint64_t OUTLINED_FUNCTION_33_5()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_34_4()
{
  return sub_1AF76A5B8();
}

uint64_t OUTLINED_FUNCTION_35_2()
{
  return sub_1AF76A5B8();
}

void OUTLINED_FUNCTION_36_1()
{
  JUMPOUT(0x1B5DFC6E8);
}

uint64_t OUTLINED_FUNCTION_39_1@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a2 + 64) |= 1 << result;
  return result;
}

uint64_t OUTLINED_FUNCTION_41_3()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_42_3()
{
  return sub_1AF76A834();
}

uint64_t OUTLINED_FUNCTION_43_3()
{
  return sub_1AF76A840();
}

uint64_t OUTLINED_FUNCTION_44_2()
{
  return swift_unknownObjectRetain();
}

void OUTLINED_FUNCTION_45_3()
{
  _xpc_connection_s *v0;

  xpc_connection_activate(v0);
}

uint64_t OUTLINED_FUNCTION_46_3()
{
  return sub_1AF76A5B8();
}

uint64_t OUTLINED_FUNCTION_47_2()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_48_1()
{
  uint64_t v0;

  return xpc_connection_get_pid(*(xpc_connection_t *)(v0 + 16));
}

uint64_t OUTLINED_FUNCTION_49_3()
{
  return sub_1AF76A594();
}

uint64_t OUTLINED_FUNCTION_50_1()
{
  return sub_1AF76A588();
}

void OUTLINED_FUNCTION_51_1()
{
  JUMPOUT(0x1B5DFC634);
}

uint64_t OUTLINED_FUNCTION_54_2()
{
  uint64_t *v0;

  return __swift_instantiateConcreteTypeFromMangledName(v0);
}

uint64_t OUTLINED_FUNCTION_56_0()
{
  return sub_1AF76A9FC();
}

void OUTLINED_FUNCTION_58_3(_QWORD *a1)
{
  uint64_t *v1;

  sub_1AF6DA574(a1, v1);
}

uint64_t OUTLINED_FUNCTION_59_2()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_62_1()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_63_3()
{
  return sub_1AF76A5B8();
}

void sub_1AF6DC56C()
{
  sub_1AF6DC880();
}

void sub_1AF6DC578()
{
  OUTLINED_FUNCTION_28_4();
  OUTLINED_FUNCTION_33_1();
  OUTLINED_FUNCTION_27_1();
  OUTLINED_FUNCTION_26_1();
}

void sub_1AF6DC5A0()
{
  OUTLINED_FUNCTION_57_1();
}

void sub_1AF6DC5BC()
{
  sub_1AF6DC91C();
}

void sub_1AF6DC5C8()
{
  sub_1AF6DC828();
}

void sub_1AF6DC5D4()
{
  OUTLINED_FUNCTION_57_1();
}

void sub_1AF6DC5F0()
{
  OUTLINED_FUNCTION_28_4();
  OUTLINED_FUNCTION_29_4();
  OUTLINED_FUNCTION_27_1();
  OUTLINED_FUNCTION_26_1();
}

uint64_t sub_1AF6DC624()
{
  sub_1AF76AF18();
  sub_1AF6DC764();
  return sub_1AF76AF3C();
}

uint64_t sub_1AF6DC668()
{
  OUTLINED_FUNCTION_29_4();
  return OUTLINED_FUNCTION_24_5();
}

uint64_t sub_1AF6DC6B0()
{
  return OUTLINED_FUNCTION_47_3();
}

uint64_t sub_1AF6DC6CC()
{
  OUTLINED_FUNCTION_29_4();
  return OUTLINED_FUNCTION_24_5();
}

uint64_t sub_1AF6DC704()
{
  OUTLINED_FUNCTION_29_4();
  return OUTLINED_FUNCTION_24_5();
}

uint64_t sub_1AF6DC748()
{
  return OUTLINED_FUNCTION_47_3();
}

uint64_t sub_1AF6DC764()
{
  sub_1AF76A5AC();
  return swift_bridgeObjectRelease();
}

void sub_1AF6DC7A4()
{
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_33_1();
  OUTLINED_FUNCTION_27_1();
  OUTLINED_FUNCTION_26_1();
}

uint64_t sub_1AF6DC7CC()
{
  sub_1AF76AF18();
  sub_1AF6DC764();
  return sub_1AF76AF3C();
}

void sub_1AF6DC80C()
{
  OUTLINED_FUNCTION_48_2();
}

void sub_1AF6DC828()
{
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_29_4();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_27_1();
  OUTLINED_FUNCTION_26_1();
}

void sub_1AF6DC880()
{
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_29_4();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_27_1();
  OUTLINED_FUNCTION_26_1();
}

void sub_1AF6DC8CC()
{
  OUTLINED_FUNCTION_48_2();
}

void sub_1AF6DC8E8()
{
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_29_4();
  OUTLINED_FUNCTION_27_1();
  OUTLINED_FUNCTION_26_1();
}

void sub_1AF6DC91C()
{
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_29_4();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_27_1();
  OUTLINED_FUNCTION_26_1();
}

uint64_t sub_1AF6DC978@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[4];
  __int128 v10[2];
  uint64_t v11;
  uint64_t v12;
  char v13;

  result = sub_1AF6E37E8(v1, (uint64_t)v10);
  v4 = v13;
  if ((v13 & 1) != 0)
  {
    v5 = 0;
    v7 = *((_QWORD *)&v10[0] + 1);
    v6 = *(_QWORD *)&v10[0];
  }
  else
  {
    v7 = v11;
    v5 = v12;
    sub_1AF6A8468(v10, (uint64_t)v9);
    __swift_project_boxed_opaque_existential_1(v9, v9[3]);
    sub_1AF769E80();
    sub_1AF6C70C4(0, &qword_1EEE4CF90);
    swift_dynamicCast();
    v6 = v8;
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  }
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v4;
  return result;
}

void static Recurrence.== infix(_:_:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  int v5;
  _QWORD *v6;

  v2 = *(_QWORD *)a1;
  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = *a2;
  v5 = *((unsigned __int8 *)a2 + 8);
  if (!*(_BYTE *)(a1 + 8))
  {
    v6 = *(_QWORD **)a1;
    if (!*((_BYTE *)a2 + 8))
    {
      sub_1AF6DCB9C(v6, (_QWORD *)*a2);
      sub_1AF6DCB7C(v4, 0);
      sub_1AF6DCB7C(v2, 0);
      sub_1AF6DCB8C(v2, 0);
      sub_1AF6DCB8C(v4, 0);
      goto LABEL_20;
    }
    swift_bridgeObjectRetain();
    goto LABEL_19;
  }
  if (v3 != 1)
  {
    if (v2)
    {
      if (v5 == 2 && v4 == 1)
      {
        OUTLINED_FUNCTION_42_4(1);
        OUTLINED_FUNCTION_42_4(1);
        goto LABEL_20;
      }
    }
    else if (v5 == 2 && v4 == 0)
    {
      OUTLINED_FUNCTION_42_4(0);
      OUTLINED_FUNCTION_42_4(0);
      goto LABEL_20;
    }
LABEL_19:
    sub_1AF6DCB7C(v4, v5);
    sub_1AF6DCB8C(v2, v3);
    sub_1AF6DCB8C(v4, v5);
    goto LABEL_20;
  }
  if (v5 != 1)
    goto LABEL_19;
  sub_1AF6DCB8C(*(_QWORD *)a1, 1);
  sub_1AF6DCB8C(v4, 1);
LABEL_20:
  OUTLINED_FUNCTION_9();
}

uint64_t sub_1AF6DCB7C(uint64_t a1, char a2)
{
  uint64_t result;

  if (!a2)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_1AF6DCB8C(uint64_t a1, char a2)
{
  uint64_t result;

  if (!a2)
    return swift_bridgeObjectRelease();
  return result;
}

BOOL sub_1AF6DCB9C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  _BOOL8 result;
  uint64_t v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v12;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  if (a1[4] != a2[4])
    return 0;
  if (v2 == 1)
    return 1;
  v4 = v2 - 2;
  v5 = a1 + 5;
  v6 = a2 + 5;
  do
  {
    v8 = *v5++;
    v7 = v8;
    v10 = *v6++;
    v9 = v10;
    v12 = v4-- != 0;
    result = v7 == v9;
  }
  while (v7 == v9 && v12);
  return result;
}

uint64_t TimeOfDayTrigger.isOneTime.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t TimeOfDayTrigger.components.getter()
{
  return sub_1AF6DDA64((void (*)(_QWORD))type metadata accessor for TimeOfDayTrigger);
}

uint64_t type metadata accessor for TimeOfDayTrigger(uint64_t a1)
{
  return sub_1AF6B75E4(a1, (uint64_t *)&unk_1EEE4CFD0);
}

void TimeOfDayTrigger.init(recurrence:components:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v7 = type metadata accessor for TimeOfDayTrigger(0);
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_18_1();
  v9 = *(_QWORD *)a1;
  if (*(_BYTE *)(a1 + 8))
  {
    if (*(_BYTE *)(a1 + 8) == 1)
    {
      v10 = 1;
    }
    else
    {
      if (!v9)
      {
        OUTLINED_FUNCTION_42_4(0);
        v11 = 1;
        goto LABEL_8;
      }
      v9 = 1;
      v10 = 2;
    }
  }
  else
  {
    v10 = 0;
  }
  sub_1AF6DCB8C(v9, v10);
  v11 = 0;
LABEL_8:
  OUTLINED_FUNCTION_42_4(0);
  *v3 = v11;
  sub_1AF76A078();
  if ((v12 & 1) != 0 || (sub_1AF76A084(), (v13 & 1) != 0))
  {
    v16 = OUTLINED_FUNCTION_22_8();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(a2, v16);
    v17 = OUTLINED_FUNCTION_87_1();
    __swift_storeEnumTagSinglePayload(v17, v18, v19, v20);
  }
  else
  {
    v14 = (uint64_t)&v3[*(int *)(v7 + 20)];
    v15 = OUTLINED_FUNCTION_22_8();
    OUTLINED_FUNCTION_92_2(v14, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32));
    sub_1AF6DFF34((uint64_t)v3, a3, type metadata accessor for TimeOfDayTrigger);
    OUTLINED_FUNCTION_46_4();
    sub_1AF6A9084((uint64_t)v3, type metadata accessor for TimeOfDayTrigger);
  }
}

uint64_t TimeOfDayTrigger.asTriggerType()@<X0>(uint64_t a1@<X8>)
{
  return sub_1AF6DE110(type metadata accessor for TimeOfDayTrigger, a1);
}

uint64_t type metadata accessor for TriggerType(uint64_t a1)
{
  return sub_1AF6B75E4(a1, (uint64_t *)&unk_1EEE4D008);
}

uint64_t sub_1AF6DCD98(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v7;

  v3 = a1 == 0x6D6954656E4F7369 && a2 == 0xE900000000000065;
  if (v3 || (sub_1AF76AD14() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E656E6F706D6F63 && a2 == 0xEA00000000007374)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1AF76AD14();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1AF6DCE8C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6E656E6F706D6F63;
  else
    return 0x6D6954656E4F7369;
}

uint64_t sub_1AF6DCECC()
{
  char *v0;

  return sub_1AF6DCE8C(*v0);
}

uint64_t sub_1AF6DCED4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AF6DCD98(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AF6DCEF8()
{
  sub_1AF6DD028();
  return sub_1AF76AF90();
}

uint64_t sub_1AF6DCF20()
{
  sub_1AF6DD028();
  return sub_1AF76AF9C();
}

void TimeOfDayTrigger.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  _BYTE v5[16];

  OUTLINED_FUNCTION_63_4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4CE30);
  OUTLINED_FUNCTION_101();
  MEMORY[0x1E0C80A78](v2);
  v4 = &v5[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  OUTLINED_FUNCTION_15_8();
  sub_1AF6DD028();
  OUTLINED_FUNCTION_16_8();
  v5[15] = 0;
  sub_1AF76AB4C();
  if (!v0)
  {
    OUTLINED_FUNCTION_74_1();
    OUTLINED_FUNCTION_72_1();
    sub_1AF76A090();
    sub_1AF697B8C(&qword_1EEE4CE40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAEAB0], MEMORY[0x1E0CAEAD0]);
    OUTLINED_FUNCTION_31_5();
  }
  OUTLINED_FUNCTION_24_3((uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_43_1();
}

unint64_t sub_1AF6DD028()
{
  unint64_t result;

  result = qword_1EEE4CE38;
  if (!qword_1EEE4CE38)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77EE34, &type metadata for TimeOfDayTrigger.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4CE38);
  }
  return result;
}

void TimeOfDayTrigger.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  OUTLINED_FUNCTION_46();
  v3 = v2;
  v22 = v4;
  v25 = OUTLINED_FUNCTION_22_8();
  v23 = *(_QWORD *)(v25 - 8);
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_13_4(v6, v19);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4CE48);
  v7 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v8 = OUTLINED_FUNCTION_17_6();
  v9 = type metadata accessor for TimeOfDayTrigger(v8);
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_1AF6DD028();
  sub_1AF76AF54();
  if (!v0)
  {
    v21 = v9;
    v14 = v24;
    v13 = v25;
    v15 = sub_1AF76AAE0();
    v20 = v12;
    *v12 = v15 & 1;
    sub_1AF697B8C(&qword_1EEE4CE50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAEAB0], MEMORY[0x1E0CAEAE8]);
    v16 = v13;
    sub_1AF76AAF8();
    OUTLINED_FUNCTION_15_7(v1, *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
    v17 = v22;
    v18 = (uint64_t)v20;
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v23 + 32))(&v20[*(int *)(v21 + 20)], v14, v16);
    sub_1AF6DFEC8(v18, v17, type metadata accessor for TimeOfDayTrigger);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  OUTLINED_FUNCTION_2_2();
}

void sub_1AF6DD24C()
{
  TimeOfDayTrigger.init(from:)();
}

void sub_1AF6DD260()
{
  TimeOfDayTrigger.encode(to:)();
}

BOOL static LocationTrigger.State.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void LocationTrigger.State.hash(into:)()
{
  sub_1AF76AF24();
  OUTLINED_FUNCTION_19();
}

uint64_t sub_1AF6DD2B0(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v7;

  v3 = a1 == 1952867692 && a2 == 0xE400000000000000;
  if (v3 || (sub_1AF76AD14() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64657265746E65 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1AF76AD14();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1AF6DD384(char a1)
{
  if ((a1 & 1) != 0)
    return 0x64657265746E65;
  else
    return 1952867692;
}

uint64_t sub_1AF6DD3B4()
{
  char *v0;

  return sub_1AF6DD384(*v0);
}

uint64_t sub_1AF6DD3BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AF6DD2B0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AF6DD3E0()
{
  sub_1AF6DD630();
  return sub_1AF76AF90();
}

uint64_t sub_1AF6DD408()
{
  sub_1AF6DD630();
  return sub_1AF76AF9C();
}

uint64_t sub_1AF6DD430()
{
  sub_1AF6DD66C();
  return sub_1AF76AF90();
}

uint64_t sub_1AF6DD458()
{
  sub_1AF6DD66C();
  return sub_1AF76AF9C();
}

uint64_t sub_1AF6DD480()
{
  sub_1AF6DD6A8();
  return sub_1AF76AF90();
}

uint64_t sub_1AF6DD4A8()
{
  sub_1AF6DD6A8();
  return sub_1AF76AF9C();
}

void LocationTrigger.State.encode(to:)()
{
  char *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_46();
  v3 = v2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4CE58);
  v14 = *(_QWORD *)(v4 - 8);
  v15 = v4;
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_4_7();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4CE60);
  v12 = *(_QWORD *)(v6 - 8);
  v13 = v6;
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4CE68) - 8);
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_47_0();
  v11 = *v0;
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_1AF6DD630();
  sub_1AF76AF6C();
  if ((v11 & 1) != 0)
  {
    OUTLINED_FUNCTION_95_0();
    OUTLINED_FUNCTION_42_0();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v1, v15);
  }
  else
  {
    sub_1AF6DD6A8();
    OUTLINED_FUNCTION_42_0();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v13);
  }
  OUTLINED_FUNCTION_5_9(v16);
  OUTLINED_FUNCTION_2_2();
}

unint64_t sub_1AF6DD630()
{
  unint64_t result;

  result = qword_1EEE4CE70;
  if (!qword_1EEE4CE70)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77EDE4, &type metadata for LocationTrigger.State.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4CE70);
  }
  return result;
}

unint64_t sub_1AF6DD66C()
{
  unint64_t result;

  result = qword_1EEE4CE78;
  if (!qword_1EEE4CE78)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77ED94, &type metadata for LocationTrigger.State.EnteredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4CE78);
  }
  return result;
}

unint64_t sub_1AF6DD6A8()
{
  unint64_t result;

  result = qword_1EEE4CE80;
  if (!qword_1EEE4CE80)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77ED44, &type metadata for LocationTrigger.State.LeftCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4CE80);
  }
  return result;
}

void LocationTrigger.State.hashValue.getter()
{
  OUTLINED_FUNCTION_28_4();
  OUTLINED_FUNCTION_33_1();
  OUTLINED_FUNCTION_27_1();
  OUTLINED_FUNCTION_26_1();
}

void LocationTrigger.State.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;

  OUTLINED_FUNCTION_46();
  v5 = v4;
  v28 = v6;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4CE88);
  v30 = *(_QWORD *)(v26 - 8);
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_13_4(v8, v24);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4CE90);
  v9 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  OUTLINED_FUNCTION_26_3();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4CE98);
  OUTLINED_FUNCTION_22_0();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_41_4(v5);
  sub_1AF6DD630();
  OUTLINED_FUNCTION_44_3();
  if (v1)
    goto LABEL_9;
  v25 = v0;
  v12 = v10;
  if (!*(_QWORD *)(sub_1AF76AB04() + 16))
  {
    v19 = v2;
LABEL_8:
    OUTLINED_FUNCTION_30_1();
    OUTLINED_FUNCTION_5();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4B8C0);
    *v21 = &type metadata for LocationTrigger.State;
    sub_1AF76AAB0();
    v22 = OUTLINED_FUNCTION_10_4();
    OUTLINED_FUNCTION_45_4(v22, *MEMORY[0x1E0DEC450]);
    swift_willThrow();
    OUTLINED_FUNCTION_12_7();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v19, v12);
LABEL_9:
    v23 = (uint64_t)v5;
    goto LABEL_10;
  }
  v13 = OUTLINED_FUNCTION_39_2();
  sub_1AF6BB1C4(v13);
  v15 = v14;
  v17 = v16;
  swift_bridgeObjectRelease();
  if (v15 != v17 >> 1)
  {
    v19 = v2;
    v12 = v10;
    goto LABEL_8;
  }
  if ((v5 & 1) != 0)
  {
    OUTLINED_FUNCTION_95_0();
    sub_1AF76AAA4();
    v18 = v28;
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v26);
    OUTLINED_FUNCTION_12_7();
    OUTLINED_FUNCTION_9_7(v2, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  }
  else
  {
    sub_1AF6DD6A8();
    sub_1AF76AAA4();
    v18 = v28;
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v25, v27);
    OUTLINED_FUNCTION_12_7();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v10);
  }
  *v18 = (_BYTE)v5;
  v23 = (uint64_t)v5;
LABEL_10:
  __swift_destroy_boxed_opaque_existential_1(v23);
  OUTLINED_FUNCTION_2_2();
}

void sub_1AF6DDA10()
{
  LocationTrigger.State.init(from:)();
}

void sub_1AF6DDA24()
{
  LocationTrigger.State.encode(to:)();
}

uint64_t LocationTrigger.TimeRange.start.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_22_8();
  v0 = OUTLINED_FUNCTION_93_1();
  return OUTLINED_FUNCTION_68_1(v0, v1, v2, v3);
}

uint64_t LocationTrigger.TimeRange.end.getter()
{
  return sub_1AF6DDA64((void (*)(_QWORD))type metadata accessor for LocationTrigger.TimeRange);
}

uint64_t sub_1AF6DDA64(void (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  a1(0);
  OUTLINED_FUNCTION_22_8();
  v1 = OUTLINED_FUNCTION_93_1();
  return OUTLINED_FUNCTION_68_1(v1, v2, v3, v4);
}

void LocationTrigger.TimeRange.init(start:end:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  char v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v7 = type metadata accessor for LocationTrigger.TimeRange(0);
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_47_0();
  sub_1AF76A084();
  if ((v9 & 1) != 0
    || (sub_1AF76A078(), (v10 & 1) != 0)
    || (sub_1AF76A084(), (v11 & 1) != 0)
    || (sub_1AF76A078(), (v12 & 1) != 0))
  {
    v15 = OUTLINED_FUNCTION_22_8();
    v16 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8);
    v16(a2, v15);
    v16(a1, v15);
    v17 = OUTLINED_FUNCTION_87_1();
    __swift_storeEnumTagSinglePayload(v17, v18, v19, v20);
  }
  else
  {
    v13 = OUTLINED_FUNCTION_22_8();
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32);
    v14(v3, a1, v13);
    v14(v3 + *(int *)(v7 + 20), a2, v13);
    sub_1AF6DFEC8(v3, a3, type metadata accessor for LocationTrigger.TimeRange);
    OUTLINED_FUNCTION_46_4();
    OUTLINED_FUNCTION_6_0();
  }
}

uint64_t sub_1AF6DDBB0(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v7;

  v3 = a1 == 0x7472617473 && a2 == 0xE500000000000000;
  if (v3 || (sub_1AF76AD14() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 6581861 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1AF76AD14();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1AF6DDC7C(char a1)
{
  if ((a1 & 1) != 0)
    return 6581861;
  else
    return 0x7472617473;
}

uint64_t sub_1AF6DDCA8()
{
  char *v0;

  return sub_1AF6DDC7C(*v0);
}

uint64_t sub_1AF6DDCB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AF6DDBB0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AF6DDCD4()
{
  sub_1AF6DFEF8();
  return sub_1AF76AF90();
}

uint64_t sub_1AF6DDCFC()
{
  sub_1AF6DFEF8();
  return sub_1AF76AF9C();
}

void LocationTrigger.TimeRange.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  _BYTE v5[16];

  OUTLINED_FUNCTION_63_4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4CEA0);
  OUTLINED_FUNCTION_101();
  MEMORY[0x1E0C80A78](v2);
  v4 = &v5[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  OUTLINED_FUNCTION_15_8();
  sub_1AF6DFEF8();
  OUTLINED_FUNCTION_16_8();
  v5[15] = 0;
  OUTLINED_FUNCTION_22_8();
  sub_1AF697B8C(&qword_1EEE4CE40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAEAB0], MEMORY[0x1E0CAEAD0]);
  OUTLINED_FUNCTION_13_7();
  if (!v0)
  {
    type metadata accessor for LocationTrigger.TimeRange(0);
    v5[14] = 1;
    OUTLINED_FUNCTION_13_7();
  }
  OUTLINED_FUNCTION_24_3((uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_43_1();
}

void LocationTrigger.TimeRange.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  void (*v17)(uint64_t, char *, uint64_t);
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;

  OUTLINED_FUNCTION_46();
  v3 = v2;
  v20 = v4;
  v24 = OUTLINED_FUNCTION_22_8();
  v22 = *(_QWORD *)(v24 - 8);
  OUTLINED_FUNCTION_27_0();
  v6 = MEMORY[0x1E0C80A78](v5);
  v21 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v23 = (char *)&v18 - v8;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4CEB0);
  MEMORY[0x1E0C80A78](v25);
  v9 = OUTLINED_FUNCTION_17_6();
  v10 = type metadata accessor for LocationTrigger.TimeRange(v9);
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_41_4(v3);
  sub_1AF6DFEF8();
  sub_1AF76AF54();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  }
  else
  {
    v18 = v10;
    v19 = v3;
    v12 = v1;
    v14 = v21;
    v13 = v22;
    sub_1AF697B8C(&qword_1EEE4CE50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAEAB0], MEMORY[0x1E0CAEAE8]);
    v15 = v23;
    OUTLINED_FUNCTION_69_2();
    v16 = v15;
    v17 = *(void (**)(uint64_t, char *, uint64_t))(v13 + 32);
    v17(v12, v16, v24);
    OUTLINED_FUNCTION_69_2();
    OUTLINED_FUNCTION_32_5();
    v17(v12 + *(int *)(v18 + 20), v14, v24);
    OUTLINED_FUNCTION_88_1(v12, v20);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    OUTLINED_FUNCTION_91_1(v12);
  }
  OUTLINED_FUNCTION_2_2();
}

void sub_1AF6DE048()
{
  LocationTrigger.TimeRange.init(from:)();
}

void sub_1AF6DE05C()
{
  LocationTrigger.TimeRange.encode(to:)();
}

uint64_t LocationTrigger.isOneTime.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

id LocationTrigger.region.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 8);
}

void LocationTrigger.state.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

uint64_t LocationTrigger.timeRange.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for LocationTrigger(0) + 28);
  return sub_1AF6DFF78(v3, a1);
}

uint64_t LocationTrigger.init(isOneTime:region:state:timeRange:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char v7;
  uint64_t v8;

  v7 = *a3;
  *(_BYTE *)a5 = a1;
  *(_QWORD *)(a5 + 8) = a2;
  *(_BYTE *)(a5 + 16) = v7;
  v8 = a5 + *(int *)(type metadata accessor for LocationTrigger(0) + 28);
  return sub_1AF6DFFC0(a4, v8);
}

uint64_t LocationTrigger.asTriggerType()@<X0>(uint64_t a1@<X8>)
{
  return sub_1AF6DE110(type metadata accessor for LocationTrigger, a1);
}

uint64_t sub_1AF6DE110@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_1AF6DFF34(v2, a2, a1);
  OUTLINED_FUNCTION_100_0();
  return swift_storeEnumTagMultiPayload();
}

void sub_1AF6DE150()
{
  sub_1AF76AA8C();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_19();
}

uint64_t sub_1AF6DE194(char a1)
{
  return *(_QWORD *)&aIsonetimregion_0[8 * a1];
}

void sub_1AF6DE1B4(char *a1, char *a2)
{
  sub_1AF695C30(*a1, *a2);
}

uint64_t sub_1AF6DE1C0()
{
  return sub_1AF6DC624();
}

uint64_t sub_1AF6DE1C8()
{
  return sub_1AF6DC764();
}

uint64_t sub_1AF6DE1D0()
{
  return sub_1AF6DC7CC();
}

void sub_1AF6DE1D8(_BYTE *a1@<X8>)
{
  char v2;

  sub_1AF6DE150();
  *a1 = v2;
}

void sub_1AF6DE204(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t v3;

  *a1 = sub_1AF6DE194(*v1);
  a1[1] = v3;
  OUTLINED_FUNCTION_19();
}

uint64_t sub_1AF6DE228()
{
  char *v0;

  return sub_1AF6DE194(*v0);
}

uint64_t sub_1AF6DE230@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1AF6DE190();
  *a1 = result;
  return result;
}

void sub_1AF6DE254(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_1AF6DE260()
{
  sub_1AF6E0008();
  return sub_1AF76AF90();
}

uint64_t sub_1AF6DE288()
{
  sub_1AF6E0008();
  return sub_1AF76AF9C();
}

void LocationTrigger.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_46();
  v3 = v2;
  v16 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4C240);
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_26_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4CEB8);
  OUTLINED_FUNCTION_22_0();
  MEMORY[0x1E0C80A78](v6);
  v7 = OUTLINED_FUNCTION_60_2();
  v8 = type metadata accessor for LocationTrigger(v7);
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_2_8();
  v11 = v10;
  OUTLINED_FUNCTION_41_4(v3);
  sub_1AF6E0008();
  OUTLINED_FUNCTION_97_0();
  sub_1AF76AF54();
  if (!v1)
  {
    LOBYTE(v17) = 0;
    *(_BYTE *)v11 = sub_1AF76AAE0() & 1;
    sub_1AF6C5AE8();
    OUTLINED_FUNCTION_79_1();
    v12 = OUTLINED_FUNCTION_82_1();
    v13 = OUTLINED_FUNCTION_76_0(v12, &qword_1EEE4CEC8);
    OUTLINED_FUNCTION_76_0(v13, &qword_1EEE4CED0);
    v14 = OUTLINED_FUNCTION_78_1();
    v15 = (void *)v14;
    if (v14)
    {
      *(_QWORD *)(v11 + 8) = v14;
      sub_1AF6E0044();
      v15;
      OUTLINED_FUNCTION_79_1();
      OUTLINED_FUNCTION_82_1();
      *(_BYTE *)(v11 + 16) = 0;
      type metadata accessor for LocationTrigger.TimeRange(0);
      sub_1AF697B8C(&qword_1EEE4CEE8, type metadata accessor for LocationTrigger.TimeRange, (uint64_t)&protocol conformance descriptor for LocationTrigger.TimeRange);
      sub_1AF76AAC8();
      OUTLINED_FUNCTION_4_12();
      OUTLINED_FUNCTION_55_2(v17);
      OUTLINED_FUNCTION_99_0();
      sub_1AF6DFFC0(v0, v11 + *(int *)(v8 + 28));
      OUTLINED_FUNCTION_88_1(v11, v16);
      OUTLINED_FUNCTION_81_2();
      OUTLINED_FUNCTION_91_1(v11);
      goto LABEL_4;
    }
    OUTLINED_FUNCTION_30_1();
    OUTLINED_FUNCTION_5();
    sub_1AF6E0228(&qword_1EEE4CED8, &qword_1EEE4CEB8);
    OUTLINED_FUNCTION_86_1();
    sub_1AF76A984();
    swift_willThrow();
    OUTLINED_FUNCTION_55_2(v17);
    OUTLINED_FUNCTION_4_12();
  }
  OUTLINED_FUNCTION_81_2();
LABEL_4:
  OUTLINED_FUNCTION_2_2();
}

void LocationTrigger.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  void *v12;
  _QWORD v13[3];

  OUTLINED_FUNCTION_46();
  v13[2] = *MEMORY[0x1E0C80C00];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4CEF0);
  OUTLINED_FUNCTION_101();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_15_8();
  sub_1AF6E0008();
  OUTLINED_FUNCTION_16_8();
  LOBYTE(v13[0]) = 0;
  sub_1AF76AB4C();
  if (v1)
    goto LABEL_2;
  v5 = (void *)objc_opt_self();
  v6 = *(_QWORD *)(v0 + 8);
  v13[0] = 0;
  v7 = objc_msgSend(v5, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v6, 1, v13);
  v8 = OUTLINED_FUNCTION_93_2();
  if (!v2)
  {
    v12 = v8;
    sub_1AF76A114();

    swift_willThrow();
LABEL_2:
    OUTLINED_FUNCTION_23_7(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    goto LABEL_8;
  }
  v9 = sub_1AF76A1B0();
  v11 = v10;

  v13[0] = v9;
  v13[1] = v11;
  sub_1AF6C5B4C();
  OUTLINED_FUNCTION_38_2();
  LOBYTE(v13[0]) = *(_BYTE *)(v0 + 16);
  sub_1AF6E0080();
  OUTLINED_FUNCTION_38_2();
  OUTLINED_FUNCTION_77_0();
  LOBYTE(v13[0]) = 3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4C240);
  sub_1AF6E00BC();
  sub_1AF76AB64();
  OUTLINED_FUNCTION_23_7(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  sub_1AF697C78(v9, v11);
LABEL_8:
  OUTLINED_FUNCTION_2_2();
}

uint64_t sub_1AF6DE7E4(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v7;

  v3 = a1 == 1701669236 && a2 == 0xE400000000000000;
  if (v3 || (sub_1AF76AD14() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F697461636F6CLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1AF76AD14();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1AF6DE8B8(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6E6F697461636F6CLL;
  else
    return 1701669236;
}

void sub_1AF6DE8E8(uint64_t a1, uint64_t a2)
{
  if (a1 != 12383 || a2 != 0xE200000000000000)
    OUTLINED_FUNCTION_33_6();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_19();
}

void sub_1AF6DE948()
{
  LocationTrigger.init(from:)();
}

void sub_1AF6DE95C()
{
  LocationTrigger.encode(to:)();
}

uint64_t sub_1AF6DE970()
{
  char *v0;

  return sub_1AF6DE8B8(*v0);
}

uint64_t sub_1AF6DE978@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AF6DE7E4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AF6DE99C()
{
  sub_1AF6E0138();
  return sub_1AF76AF90();
}

uint64_t sub_1AF6DE9C4()
{
  sub_1AF6E0138();
  return sub_1AF76AF9C();
}

uint64_t sub_1AF6DE9EC()
{
  sub_1AF6E0174();
  return sub_1AF76AF90();
}

uint64_t sub_1AF6DEA14()
{
  sub_1AF6E0174();
  return sub_1AF76AF9C();
}

void sub_1AF6DEA3C(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v4;

  sub_1AF6DE8E8(a1, a2);
  *a3 = v4 & 1;
}

uint64_t sub_1AF6DEA64()
{
  sub_1AF6E01B0();
  return sub_1AF76AF90();
}

uint64_t sub_1AF6DEA8C()
{
  sub_1AF6E01B0();
  return sub_1AF76AF9C();
}

void TriggerType.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  OUTLINED_FUNCTION_46();
  v20 = v1;
  v5 = v4;
  v18 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4CF10) - 8);
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_2_8();
  OUTLINED_FUNCTION_77_0();
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_2_8();
  v17 = v8;
  v16 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4CF18) - 8);
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_26_3();
  OUTLINED_FUNCTION_74_1();
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v10);
  v11 = OUTLINED_FUNCTION_17_6();
  type metadata accessor for TriggerType(v11);
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_18_1();
  v19 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4CF20) - 8);
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_4_7();
  __swift_project_boxed_opaque_existential_1(v5, v5[3]);
  sub_1AF6E0138();
  OUTLINED_FUNCTION_97_0();
  sub_1AF76AF6C();
  sub_1AF6DFF34(v20, v2, type metadata accessor for TriggerType);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1AF6DFEC8(v2, v17, type metadata accessor for LocationTrigger);
    OUTLINED_FUNCTION_96_1();
    OUTLINED_FUNCTION_65_3();
    sub_1AF697B8C(&qword_1EEE4CF38, type metadata accessor for LocationTrigger, (uint64_t)&protocol conformance descriptor for LocationTrigger);
    sub_1AF76AB64();
    OUTLINED_FUNCTION_5_9(v18);
    v14 = v17;
    v15 = type metadata accessor for LocationTrigger;
  }
  else
  {
    sub_1AF6DFEC8(v2, v3, type metadata accessor for TimeOfDayTrigger);
    sub_1AF6E01B0();
    OUTLINED_FUNCTION_65_3();
    sub_1AF697B8C(&qword_1EEE4CF48, type metadata accessor for TimeOfDayTrigger, (uint64_t)&protocol conformance descriptor for TimeOfDayTrigger);
    sub_1AF76AB64();
    OUTLINED_FUNCTION_9_7(v0, *(uint64_t (**)(uint64_t, uint64_t))(v16 + 8));
    v14 = v3;
    v15 = type metadata accessor for TimeOfDayTrigger;
  }
  sub_1AF6A9084(v14, v15);
  OUTLINED_FUNCTION_50_2(*(uint64_t (**)(uint64_t, uint64_t))(v19 + 8));
  OUTLINED_FUNCTION_2_2();
}

void TriggerType.init(from:)()
{
  _QWORD *v0;
  char v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;

  OUTLINED_FUNCTION_46();
  v50 = v0;
  v3 = v2;
  v41 = v4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4CF50);
  v44 = *(_QWORD *)(v5 - 8);
  v45 = v5;
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_2_8();
  v47 = v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4CF58);
  v42 = *(_QWORD *)(v8 - 8);
  v43 = v8;
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_2_8();
  v46 = v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4CF60);
  v48 = *(_QWORD *)(v11 - 8);
  v49 = v11;
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_47_0();
  v13 = type metadata accessor for TriggerType(0);
  OUTLINED_FUNCTION_27_0();
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v15);
  v20 = (char *)&v37 - v19;
  MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v37 - v21;
  OUTLINED_FUNCTION_41_4(v3);
  sub_1AF6E0138();
  OUTLINED_FUNCTION_44_3();
  if (v0)
    goto LABEL_8;
  v38 = v17;
  v39 = v20;
  v37 = v22;
  v40 = v13;
  v50 = v3;
  if (!*(_QWORD *)(sub_1AF76AB04() + 16)
    || (v23 = OUTLINED_FUNCTION_39_2(),
        sub_1AF6BB1C4(v23),
        v25 = v24,
        v27 = v26,
        swift_bridgeObjectRelease(),
        v25 != v27 >> 1))
  {
    v30 = v48;
    v31 = v40;
    OUTLINED_FUNCTION_30_1();
    OUTLINED_FUNCTION_5();
    v33 = v32;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4B8C0);
    *v33 = v31;
    sub_1AF76AAB0();
    v34 = OUTLINED_FUNCTION_10_4();
    OUTLINED_FUNCTION_45_4(v34, *MEMORY[0x1E0DEC450]);
    OUTLINED_FUNCTION_73_1();
    OUTLINED_FUNCTION_12_7();
    OUTLINED_FUNCTION_23_7(*(uint64_t (**)(uint64_t, uint64_t))(v30 + 8));
    v3 = v50;
LABEL_8:
    v35 = (uint64_t)v3;
    goto LABEL_9;
  }
  if ((v1 & 1) != 0)
  {
    OUTLINED_FUNCTION_96_1();
    OUTLINED_FUNCTION_43_4();
    OUTLINED_FUNCTION_77_0();
    sub_1AF697B8C(&qword_1EEE4CF68, type metadata accessor for LocationTrigger, (uint64_t)&protocol conformance descriptor for LocationTrigger);
    v28 = (uint64_t)v38;
    OUTLINED_FUNCTION_59_3();
    v29 = v48;
    OUTLINED_FUNCTION_5_9(v44);
  }
  else
  {
    sub_1AF6E01B0();
    OUTLINED_FUNCTION_43_4();
    OUTLINED_FUNCTION_74_1();
    sub_1AF697B8C(&qword_1EEE4CF70, type metadata accessor for TimeOfDayTrigger, (uint64_t)&protocol conformance descriptor for TimeOfDayTrigger);
    v28 = (uint64_t)v39;
    OUTLINED_FUNCTION_59_3();
    v29 = v48;
    OUTLINED_FUNCTION_5_9(v42);
  }
  OUTLINED_FUNCTION_12_7();
  OUTLINED_FUNCTION_23_7(*(uint64_t (**)(uint64_t, uint64_t))(v29 + 8));
  swift_storeEnumTagMultiPayload();
  v36 = (uint64_t)v37;
  sub_1AF6DFEC8(v28, (uint64_t)v37, type metadata accessor for TriggerType);
  sub_1AF6DFEC8(v36, v41, type metadata accessor for TriggerType);
  v35 = (uint64_t)v50;
LABEL_9:
  __swift_destroy_boxed_opaque_existential_1(v35);
  OUTLINED_FUNCTION_2_2();
}

void sub_1AF6DF11C()
{
  TriggerType.init(from:)();
}

void sub_1AF6DF130()
{
  TriggerType.encode(to:)();
}

void sub_1AF6DF144()
{
  sub_1AF76AF24();
  OUTLINED_FUNCTION_19();
}

void sub_1AF6DF164(uint64_t a1, uint64_t a2)
{
  BOOL v3;

  v3 = a1 == 0x746E65746E69 && a2 == 0xE600000000000000;
  if (!v3 && (OUTLINED_FUNCTION_33_6() & 1) == 0)
  {
    if (a1 == 0xD000000000000010 && a2 == 0x80000001AF782580 || (OUTLINED_FUNCTION_33_6() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
    if (a1 != 0x74756374726F6873 || a2 != 0xE800000000000000)
    {
      OUTLINED_FUNCTION_33_6();
      OUTLINED_FUNCTION_10();
      goto LABEL_7;
    }
  }
  OUTLINED_FUNCTION_10();
LABEL_7:
  OUTLINED_FUNCTION_19();
}

uint64_t sub_1AF6DF274(char a1)
{
  if (!a1)
    return 0x746E65746E69;
  if (a1 == 1)
    return 0xD000000000000010;
  return 0x74756374726F6873;
}

void sub_1AF6DF2CC()
{
  sub_1AF6CDFC8();
}

void sub_1AF6DF2D4()
{
  sub_1AF6DF144();
}

uint64_t sub_1AF6DF2DC()
{
  char *v0;

  return sub_1AF6DF274(*v0);
}

void sub_1AF6DF2E4(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v4;

  sub_1AF6DF164(a1, a2);
  *a3 = v4;
}

void sub_1AF6DF308(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1AF6DF314()
{
  sub_1AF6E01EC();
  return sub_1AF76AF90();
}

uint64_t sub_1AF6DF33C()
{
  sub_1AF6E01EC();
  return sub_1AF76AF9C();
}

void CodableTriggerAction.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_46();
  v4 = v3;
  v6 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4CF78);
  OUTLINED_FUNCTION_22_0();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_41_4(v4);
  sub_1AF6E01EC();
  sub_1AF76AF54();
  if (!v0)
  {
    sub_1AF6C5AE8();
    v8 = sub_1AF76AAF8();
    v9 = OUTLINED_FUNCTION_76_0(v8, &qword_1EEE4CEC8);
    OUTLINED_FUNCTION_76_0(v9, &qword_1EEE4CF90);
    v10 = OUTLINED_FUNCTION_78_1();
    if (v10)
    {
      v14 = v10;
      OUTLINED_FUNCTION_98_0(1);
      v11 = sub_1AF76AAD4();
      v13 = v12;
      OUTLINED_FUNCTION_85_1();
      OUTLINED_FUNCTION_9_7(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
      *(_QWORD *)v6 = v14;
      *(_QWORD *)(v6 + 8) = v11;
      *(_QWORD *)(v6 + 16) = v13;
      *(_BYTE *)(v6 + 24) = 0;
    }
    else
    {
      sub_1AF76A99C();
      OUTLINED_FUNCTION_5();
      sub_1AF6E0228(&qword_1EEE4CF88, &qword_1EEE4CF78);
      OUTLINED_FUNCTION_83_1();
      OUTLINED_FUNCTION_73_1();
      OUTLINED_FUNCTION_84_2(v15);
      OUTLINED_FUNCTION_9_7(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    }
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  OUTLINED_FUNCTION_2_2();
}

void CodableTriggerAction.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  _QWORD v20[3];

  OUTLINED_FUNCTION_46();
  v4 = v3;
  v20[2] = *MEMORY[0x1E0C80C00];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4CF98);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_4_7();
  v19 = *(void **)v0;
  v7 = *(_BYTE *)(v0 + 24);
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  sub_1AF6E01EC();
  OUTLINED_FUNCTION_97_0();
  sub_1AF76AF6C();
  if ((v7 & 1) != 0)
  {
    LOBYTE(v20[0]) = 2;
    sub_1AF76AB40();
    v8 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    v9 = v2;
LABEL_8:
    OUTLINED_FUNCTION_15_7(v9, v8);
    goto LABEL_9;
  }
  v18 = v2;
  v10 = (void *)objc_opt_self();
  v20[0] = 0;
  v11 = v19;
  v12 = objc_msgSend(v10, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v11, 1, v20);
  v13 = OUTLINED_FUNCTION_93_2();
  if (!v10)
  {
    v17 = v13;
    sub_1AF76A114();

    swift_willThrow();
    v8 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    v9 = v18;
    goto LABEL_8;
  }
  v14 = sub_1AF76A1B0();
  v16 = v15;

  v20[0] = v14;
  v20[1] = v16;
  sub_1AF6C5B4C();
  sub_1AF76AB64();
  if (!v1)
  {
    LOBYTE(v20[0]) = 1;
    sub_1AF76AB40();
  }
  OUTLINED_FUNCTION_15_7(v18, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));

  OUTLINED_FUNCTION_84_2(v14);
LABEL_9:
  OUTLINED_FUNCTION_2_2();
}

void sub_1AF6DF880()
{
  CodableTriggerAction.init(from:)();
}

void sub_1AF6DF894()
{
  CodableTriggerAction.encode(to:)();
}

uint64_t ScheduledTrigger.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void ScheduledTrigger.triggerType.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ScheduledTrigger(0);
  sub_1AF6DFF34(v1 + *(int *)(v3 + 20), a1, type metadata accessor for TriggerType);
  OUTLINED_FUNCTION_19();
}

uint64_t ScheduledTrigger.triggerType.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for ScheduledTrigger(0) + 20);
  return sub_1AF6E0278(a1, v3);
}

uint64_t (*ScheduledTrigger.triggerType.modify())()
{
  type metadata accessor for ScheduledTrigger(0);
  return nullsub_1;
}

void ScheduledTrigger.init(identifier:trigger:)(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X8>)
{
  _QWORD *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  type metadata accessor for ScheduledTrigger(0);
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_4_7();
  *v4 = a1;
  v4[1] = a2;
  v10 = a3[3];
  v11 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v10);
  (*(void (**)(uint64_t, uint64_t))(v11 + 32))(v10, v11);
  sub_1AF6DFEC8((uint64_t)v4, a4, type metadata accessor for ScheduledTrigger);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a3);
  OUTLINED_FUNCTION_6_0();
}

uint64_t sub_1AF6DFA0C(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v7;

  v3 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v3 || (sub_1AF76AD14() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x5472656767697274 && a2 == 0xEB00000000657079)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1AF76AD14();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1AF6DFB08(char a1)
{
  if ((a1 & 1) != 0)
    return 0x5472656767697274;
  else
    return 0x696669746E656469;
}

uint64_t sub_1AF6DFB4C()
{
  char *v0;

  return sub_1AF6DFB08(*v0);
}

uint64_t sub_1AF6DFB54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AF6DFA0C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AF6DFB78()
{
  sub_1AF6E02BC();
  return sub_1AF76AF90();
}

uint64_t sub_1AF6DFBA0()
{
  sub_1AF6E02BC();
  return sub_1AF76AF9C();
}

void ScheduledTrigger.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  _BYTE v6[16];

  OUTLINED_FUNCTION_63_4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4CFA0);
  OUTLINED_FUNCTION_101();
  MEMORY[0x1E0C80A78](v2);
  v4 = &v6[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  OUTLINED_FUNCTION_15_8();
  sub_1AF6E02BC();
  OUTLINED_FUNCTION_16_8();
  v6[15] = 0;
  sub_1AF76AB40();
  if (!v0)
  {
    type metadata accessor for ScheduledTrigger(0);
    v5 = OUTLINED_FUNCTION_72_1();
    type metadata accessor for TriggerType(v5);
    sub_1AF697B8C(&qword_1EEE4C100, type metadata accessor for TriggerType, (uint64_t)&protocol conformance descriptor for TriggerType);
    OUTLINED_FUNCTION_31_5();
  }
  OUTLINED_FUNCTION_24_3((uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_43_1();
}

void ScheduledTrigger.init(from:)()
{
  uint64_t v0;
  uint64_t *v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_46();
  v3 = v2;
  v13 = v4;
  type metadata accessor for TriggerType(0);
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_13_4(v6, v12);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4CFB0);
  v7 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v8 = OUTLINED_FUNCTION_60_2();
  v9 = type metadata accessor for ScheduledTrigger(v8);
  OUTLINED_FUNCTION_27_0();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_18_1();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_1AF6E02BC();
  OUTLINED_FUNCTION_97_0();
  sub_1AF76AF54();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  }
  else
  {
    *v1 = sub_1AF76AAD4();
    v1[1] = v11;
    sub_1AF697B8C(&qword_1EEE4C138, type metadata accessor for TriggerType, (uint64_t)&protocol conformance descriptor for TriggerType);
    sub_1AF76AAF8();
    OUTLINED_FUNCTION_50_2(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
    sub_1AF6DFEC8(v14, (uint64_t)v1 + *(int *)(v9 + 20), type metadata accessor for TriggerType);
    OUTLINED_FUNCTION_88_1((uint64_t)v1, v13);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
    OUTLINED_FUNCTION_91_1((uint64_t)v1);
  }
  OUTLINED_FUNCTION_2_2();
}

void sub_1AF6DFE84()
{
  ScheduledTrigger.init(from:)();
}

void sub_1AF6DFE98()
{
  ScheduledTrigger.encode(to:)();
}

uint64_t type metadata accessor for LocationTrigger.TimeRange(uint64_t a1)
{
  return sub_1AF6B75E4(a1, (uint64_t *)&unk_1EEE4CFF8);
}

void sub_1AF6DFEC8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_54_0(a1, a2, a3);
  OUTLINED_FUNCTION_92_2(v3, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32));
  OUTLINED_FUNCTION_19();
}

unint64_t sub_1AF6DFEF8()
{
  unint64_t result;

  result = qword_1EEE4CEA8;
  if (!qword_1EEE4CEA8)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77ECF4, &type metadata for LocationTrigger.TimeRange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4CEA8);
  }
  return result;
}

void sub_1AF6DFF34(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_54_0(a1, a2, a3);
  OUTLINED_FUNCTION_92_2(v3, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16));
  OUTLINED_FUNCTION_19();
}

uint64_t type metadata accessor for LocationTrigger(uint64_t a1)
{
  return sub_1AF6B75E4(a1, (uint64_t *)&unk_1EEE4CFE0);
}

uint64_t sub_1AF6DFF78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4C240);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AF6DFFC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4C240);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1AF6E0008()
{
  unint64_t result;

  result = qword_1EEE4CEC0;
  if (!qword_1EEE4CEC0)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77ECA4, &unk_1E5FBF880);
    atomic_store(result, (unint64_t *)&qword_1EEE4CEC0);
  }
  return result;
}

unint64_t sub_1AF6E0044()
{
  unint64_t result;

  result = qword_1EEE4CEE0;
  if (!qword_1EEE4CEE0)
  {
    result = MEMORY[0x1B5DFC634](&protocol conformance descriptor for LocationTrigger.State, &type metadata for LocationTrigger.State);
    atomic_store(result, (unint64_t *)&qword_1EEE4CEE0);
  }
  return result;
}

unint64_t sub_1AF6E0080()
{
  unint64_t result;

  result = qword_1EEE4CEF8;
  if (!qword_1EEE4CEF8)
  {
    result = MEMORY[0x1B5DFC634](&protocol conformance descriptor for LocationTrigger.State, &type metadata for LocationTrigger.State);
    atomic_store(result, (unint64_t *)&qword_1EEE4CEF8);
  }
  return result;
}

unint64_t sub_1AF6E00BC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1EEE4CF00;
  if (!qword_1EEE4CF00)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEE4C240);
    sub_1AF697B8C(&qword_1EEE4CF08, type metadata accessor for LocationTrigger.TimeRange, (uint64_t)&protocol conformance descriptor for LocationTrigger.TimeRange);
    v3 = v2;
    result = MEMORY[0x1B5DFC634](MEMORY[0x1E0DEE988], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_1EEE4CF00);
  }
  return result;
}

unint64_t sub_1AF6E0138()
{
  unint64_t result;

  result = qword_1EEE4CF28;
  if (!qword_1EEE4CF28)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77EC54, &type metadata for TriggerType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4CF28);
  }
  return result;
}

unint64_t sub_1AF6E0174()
{
  unint64_t result;

  result = qword_1EEE4CF30;
  if (!qword_1EEE4CF30)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77EC04, &type metadata for TriggerType.LocationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4CF30);
  }
  return result;
}

unint64_t sub_1AF6E01B0()
{
  unint64_t result;

  result = qword_1EEE4CF40;
  if (!qword_1EEE4CF40)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77EBB4, &type metadata for TriggerType.TimeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4CF40);
  }
  return result;
}

unint64_t sub_1AF6E01EC()
{
  unint64_t result;

  result = qword_1EEE4CF80;
  if (!qword_1EEE4CF80)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77EB64, &unk_1E5FC05D0);
    atomic_store(result, (unint64_t *)&qword_1EEE4CF80);
  }
  return result;
}

void sub_1AF6E0228(unint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  if (!*a1)
  {
    v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    atomic_store(MEMORY[0x1B5DFC634](MEMORY[0x1E0DED060], v3), a1);
  }
  OUTLINED_FUNCTION_19();
}

uint64_t type metadata accessor for ScheduledTrigger(uint64_t a1)
{
  return sub_1AF6B75E4(a1, (uint64_t *)&unk_1EEE4D018);
}

uint64_t sub_1AF6E0278(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TriggerType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_1AF6E02BC()
{
  unint64_t result;

  result = qword_1EEE4CFA8;
  if (!qword_1EEE4CFA8)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77EB14, &type metadata for ScheduledTrigger.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4CFA8);
  }
  return result;
}

void sub_1AF6E02F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_1AF697B8C(&qword_1EEE4CF70, type metadata accessor for TimeOfDayTrigger, (uint64_t)&protocol conformance descriptor for TimeOfDayTrigger);
  *(_QWORD *)(a1 + 8) = v2;
  sub_1AF697B8C(&qword_1EEE4CF48, type metadata accessor for TimeOfDayTrigger, (uint64_t)&protocol conformance descriptor for TimeOfDayTrigger);
  *(_QWORD *)(a1 + 16) = v3;
}

unint64_t sub_1AF6E0358()
{
  unint64_t result;

  result = qword_1EEE4CFB8;
  if (!qword_1EEE4CFB8)
  {
    result = MEMORY[0x1B5DFC634](&protocol conformance descriptor for LocationTrigger.State, &type metadata for LocationTrigger.State);
    atomic_store(result, (unint64_t *)&qword_1EEE4CFB8);
  }
  return result;
}

void sub_1AF6E0394(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_1AF697B8C(&qword_1EEE4CF68, type metadata accessor for LocationTrigger, (uint64_t)&protocol conformance descriptor for LocationTrigger);
  *(_QWORD *)(a1 + 8) = v2;
  sub_1AF697B8C(&qword_1EEE4CF38, type metadata accessor for LocationTrigger, (uint64_t)&protocol conformance descriptor for LocationTrigger);
  *(_QWORD *)(a1 + 16) = v3;
}

void sub_1AF6E03F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_1AF697B8C(&qword_1EEE4CFC0, type metadata accessor for ScheduledTrigger, (uint64_t)&protocol conformance descriptor for ScheduledTrigger);
  *(_QWORD *)(a1 + 8) = v2;
  sub_1AF697B8C(&qword_1EEE4CFC8, type metadata accessor for ScheduledTrigger, (uint64_t)&protocol conformance descriptor for ScheduledTrigger);
  *(_QWORD *)(a1 + 16) = v3;
}

uint64_t dispatch thunk of Trigger.asTriggerType()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t initializeBufferWithCopyOfBuffer for Recurrence(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1AF6DCB7C(*(_QWORD *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

uint64_t destroy for Recurrence(uint64_t a1)
{
  return sub_1AF6DCB8C(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t assignWithCopy for Recurrence(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1AF6DCB7C(*(_QWORD *)a2, v4);
  v5 = *(_QWORD *)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_1AF6DCB8C(v5, v6);
  return a1;
}

uint64_t assignWithTake for Recurrence(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  char v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_1AF6DCB8C(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for Recurrence(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFE && *(_BYTE *)(a1 + 9))
    {
      v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 2)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Recurrence(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_1AF6E05BC(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_1AF6E05D4(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

void type metadata accessor for Recurrence()
{
  OUTLINED_FUNCTION_25();
}

uint64_t *initializeBufferWithCopyOfBuffer for TimeOfDayTrigger(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  _BYTE *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v5 = *(int *)(a3 + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_1AF76A090();
    (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t destroy for TimeOfDayTrigger(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = sub_1AF76A090();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_BYTE *initializeWithCopy for TimeOfDayTrigger(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_1AF76A090();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_BYTE *assignWithCopy for TimeOfDayTrigger(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_1AF76A090();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_BYTE *initializeWithTake for TimeOfDayTrigger(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_1AF76A090();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_BYTE *assignWithTake for TimeOfDayTrigger(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_1AF76A090();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for TimeOfDayTrigger()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1AF6E0834(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (a2 == 254)
  {
    OUTLINED_FUNCTION_9();
  }
  else
  {
    OUTLINED_FUNCTION_22_8();
    v2 = OUTLINED_FUNCTION_80_0();
    OUTLINED_FUNCTION_12_9(v2, v3, v4);
  }
}

uint64_t storeEnumTagSinglePayload for TimeOfDayTrigger()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1AF6E0894(_BYTE *a1, char a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (a3 == 254)
  {
    *a1 = a2 + 1;
    OUTLINED_FUNCTION_9();
  }
  else
  {
    OUTLINED_FUNCTION_22_8();
    v3 = OUTLINED_FUNCTION_61_0();
    OUTLINED_FUNCTION_39_0(v3, v4, v5, v6);
  }
}

uint64_t sub_1AF6E08D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AF6E2C50(a1, a2, a3, (uint64_t)&unk_1AF77E258, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAEAB0]);
}

_QWORD *initializeBufferWithCopyOfBuffer for LocationTrigger(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  void *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v12 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v5 = (void *)a2[1];
    *(_QWORD *)(a1 + 8) = v5;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v6 = *(int *)(a3 + 28);
    v7 = (char *)(a1 + v6);
    v8 = (char *)a2 + v6;
    v9 = type metadata accessor for LocationTrigger.TimeRange(0);
    v10 = v5;
    if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4C240);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      v13 = sub_1AF76A090();
      v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
      v14(v7, v8, v13);
      v14(&v7[*(int *)(v9 + 20)], &v8[*(int *)(v9 + 20)], v13);
      __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
    }
  }
  return v3;
}

uint64_t destroy for LocationTrigger(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);

  v4 = a1 + *(int *)(a2 + 28);
  v5 = type metadata accessor for LocationTrigger.TimeRange(0);
  result = __swift_getEnumTagSinglePayload(v4, 1, v5);
  if (!(_DWORD)result)
  {
    v7 = sub_1AF76A090();
    v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
    v8(v4, v7);
    return ((uint64_t (*)(uint64_t, uint64_t))v8)(v4 + *(int *)(v5 + 20), v7);
  }
  return result;
}

uint64_t initializeWithCopy for LocationTrigger(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(int *)(a3 + 28);
  v6 = (char *)(a1 + v5);
  v7 = (char *)(a2 + v5);
  v8 = type metadata accessor for LocationTrigger.TimeRange(0);
  v9 = v4;
  if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4C240);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    v11 = sub_1AF76A090();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v12(v6, v7, v11);
    v12(&v6[*(int *)(v8 + 20)], &v7[*(int *)(v8 + 20)], v11);
    __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v8);
  }
  return a1;
}

uint64_t assignWithCopy for LocationTrigger(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  int EnumTagSinglePayload;
  int v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(void **)(a2 + 8);
  v7 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v6;
  v8 = v6;

  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v9 = *(int *)(a3 + 28);
  v10 = (char *)(a1 + v9);
  v11 = (char *)(a2 + v9);
  v12 = type metadata accessor for LocationTrigger.TimeRange(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v12);
  v14 = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12);
  if (!EnumTagSinglePayload)
  {
    if (!v14)
    {
      v19 = sub_1AF76A090();
      v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 24);
      v20(v10, v11, v19);
      v20(&v10[*(int *)(v12 + 20)], &v11[*(int *)(v12 + 20)], v19);
      return a1;
    }
    sub_1AF6A9084((uint64_t)v10, type metadata accessor for LocationTrigger.TimeRange);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4C240);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    return a1;
  }
  v15 = sub_1AF76A090();
  v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
  v16(v10, v11, v15);
  v16(&v10[*(int *)(v12 + 20)], &v11[*(int *)(v12 + 20)], v15);
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
  return a1;
}

uint64_t initializeWithTake for LocationTrigger(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(int *)(a3 + 28);
  v5 = (char *)(a1 + v4);
  v6 = (char *)(a2 + v4);
  v7 = type metadata accessor for LocationTrigger.TimeRange(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4C240);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = sub_1AF76A090();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
    v10(v5, v6, v9);
    v10(&v5[*(int *)(v7 + 20)], &v6[*(int *)(v7 + 20)], v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v7);
  }
  return a1;
}

uint64_t assignWithTake for LocationTrigger(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int EnumTagSinglePayload;
  int v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);

  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = *(int *)(a3 + 28);
  v8 = (char *)(a1 + v7);
  v9 = (char *)(a2 + v7);
  v10 = type metadata accessor for LocationTrigger.TimeRange(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v10);
  v12 = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10);
  if (!EnumTagSinglePayload)
  {
    if (!v12)
    {
      v17 = sub_1AF76A090();
      v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 40);
      v18(v8, v9, v17);
      v18(&v8[*(int *)(v10 + 20)], &v9[*(int *)(v10 + 20)], v17);
      return a1;
    }
    sub_1AF6A9084((uint64_t)v8, type metadata accessor for LocationTrigger.TimeRange);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4C240);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  v13 = sub_1AF76A090();
  v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32);
  v14(v8, v9, v13);
  v14(&v8[*(int *)(v10 + 20)], &v9[*(int *)(v10 + 20)], v13);
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for LocationTrigger()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1AF6E0F40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    OUTLINED_FUNCTION_64_4();
    OUTLINED_FUNCTION_9();
  }
  else
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4C240);
    OUTLINED_FUNCTION_12_9(a1 + *(int *)(a3 + 28), a2, v6);
  }
}

uint64_t storeEnumTagSinglePayload for LocationTrigger()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1AF6E0FA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_89_2();
  if (v3)
  {
    *(_QWORD *)(v1 + 8) = (v0 - 1);
    OUTLINED_FUNCTION_9();
  }
  else
  {
    v4 = v2;
    v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4C240);
    OUTLINED_FUNCTION_39_0(v1 + *(int *)(v4 + 28), v0, v0, v5);
  }
}

void sub_1AF6E0FF8()
{
  unint64_t v0;

  sub_1AF6E107C();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_1AF6E107C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEE4CFF0)
  {
    type metadata accessor for LocationTrigger.TimeRange(255);
    v0 = sub_1AF76A8AC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEE4CFF0);
  }
}

void type metadata accessor for LocationTrigger.State()
{
  OUTLINED_FUNCTION_25();
}

uint64_t *initializeBufferWithCopyOfBuffer for LocationTrigger.TimeRange(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1AF76A090();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
  }
  return a1;
}

uint64_t destroy for LocationTrigger.TimeRange(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v6)(uint64_t, uint64_t);

  v4 = sub_1AF76A090();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v6(a1, v4);
  return ((uint64_t (*)(uint64_t, uint64_t))v6)(a1 + *(int *)(a2 + 20), v4);
}

uint64_t initializeWithCopy for LocationTrigger.TimeRange(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1AF76A090();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t assignWithCopy for LocationTrigger.TimeRange(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1AF76A090();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t initializeWithTake for LocationTrigger.TimeRange(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1AF76A090();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t assignWithTake for LocationTrigger.TimeRange(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1AF76A090();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for LocationTrigger.TimeRange()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AF6E13B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_22_8();
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for LocationTrigger.TimeRange()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AF6E13EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_22_8();
  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

uint64_t sub_1AF6E1420()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1AF76A090();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t dispatch thunk of ScheduledTriggerConfiguration.triggerType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t initializeBufferWithCopyOfBuffer for TriggerType(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  void *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v14 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *(_BYTE *)a1 = *(_BYTE *)a2;
    if (EnumCaseMultiPayload == 1)
    {
      v7 = (void *)a2[1];
      *(_QWORD *)(a1 + 8) = v7;
      *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
      v8 = *(int *)(type metadata accessor for LocationTrigger(0) + 28);
      v9 = (char *)(a1 + v8);
      v10 = (char *)a2 + v8;
      v11 = type metadata accessor for LocationTrigger.TimeRange(0);
      v12 = v7;
      if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4C240);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        v19 = sub_1AF76A090();
        v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
        v20(v9, v10, v19);
        v20(&v9[*(int *)(v11 + 20)], &v10[*(int *)(v11 + 20)], v19);
        __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
      }
    }
    else
    {
      v15 = *(int *)(type metadata accessor for TimeOfDayTrigger(0) + 20);
      v16 = a1 + v15;
      v17 = (uint64_t)a2 + v15;
      v18 = sub_1AF76A090();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for TriggerType(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);

  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v5 = a1 + *(int *)(type metadata accessor for TimeOfDayTrigger(0) + 20);
    v6 = sub_1AF76A090();
    v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
    v8 = v5;
    return v7(v8, v6);
  }

  v2 = a1 + *(int *)(type metadata accessor for LocationTrigger(0) + 28);
  v3 = type metadata accessor for LocationTrigger.TimeRange(0);
  result = __swift_getEnumTagSinglePayload(v2, 1, v3);
  if (!(_DWORD)result)
  {
    v9 = sub_1AF76A090();
    v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
    v10(v2, v9);
    v8 = v2 + *(int *)(v3 + 20);
    v6 = v9;
    v7 = (uint64_t (*)(uint64_t, uint64_t))v10;
    return v7(v8, v6);
  }
  return result;
}

uint64_t initializeWithCopy for TriggerType(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  void *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *(_BYTE *)a1 = *(_BYTE *)a2;
  if (EnumCaseMultiPayload == 1)
  {
    v5 = *(void **)(a2 + 8);
    *(_QWORD *)(a1 + 8) = v5;
    *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
    v6 = *(int *)(type metadata accessor for LocationTrigger(0) + 28);
    v7 = (char *)(a1 + v6);
    v8 = (char *)(a2 + v6);
    v9 = type metadata accessor for LocationTrigger.TimeRange(0);
    v10 = v5;
    if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4C240);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      v16 = sub_1AF76A090();
      v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
      v17(v7, v8, v16);
      v17(&v7[*(int *)(v9 + 20)], &v8[*(int *)(v9 + 20)], v16);
      __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
    }
  }
  else
  {
    v12 = *(int *)(type metadata accessor for TimeOfDayTrigger(0) + 20);
    v13 = a1 + v12;
    v14 = a2 + v12;
    v15 = sub_1AF76A090();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for TriggerType(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  void *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);

  if (a1 != a2)
  {
    sub_1AF6A9084(a1, type metadata accessor for TriggerType);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *(_BYTE *)a1 = *(_BYTE *)a2;
    if (EnumCaseMultiPayload == 1)
    {
      v5 = *(void **)(a2 + 8);
      *(_QWORD *)(a1 + 8) = v5;
      *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
      v6 = *(int *)(type metadata accessor for LocationTrigger(0) + 28);
      v7 = (char *)(a1 + v6);
      v8 = (char *)(a2 + v6);
      v9 = type metadata accessor for LocationTrigger.TimeRange(0);
      v10 = v5;
      if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
      {
        v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4C240);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      else
      {
        v16 = sub_1AF76A090();
        v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
        v17(v7, v8, v16);
        v17(&v7[*(int *)(v9 + 20)], &v8[*(int *)(v9 + 20)], v16);
        __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
      }
    }
    else
    {
      v12 = *(int *)(type metadata accessor for TimeOfDayTrigger(0) + 20);
      v13 = a1 + v12;
      v14 = a2 + v12;
      v15 = sub_1AF76A090();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for TriggerType(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *(_BYTE *)a1 = *(_BYTE *)a2;
  if (EnumCaseMultiPayload == 1)
  {
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
    v5 = *(int *)(type metadata accessor for LocationTrigger(0) + 28);
    v6 = (char *)(a1 + v5);
    v7 = (char *)(a2 + v5);
    v8 = type metadata accessor for LocationTrigger.TimeRange(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4C240);
      memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v14 = sub_1AF76A090();
      v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32);
      v15(v6, v7, v14);
      v15(&v6[*(int *)(v8 + 20)], &v7[*(int *)(v8 + 20)], v14);
      __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v8);
    }
  }
  else
  {
    v10 = *(int *)(type metadata accessor for TimeOfDayTrigger(0) + 20);
    v11 = a1 + v10;
    v12 = a2 + v10;
    v13 = sub_1AF76A090();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for TriggerType(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);

  if (a1 != a2)
  {
    sub_1AF6A9084(a1, type metadata accessor for TriggerType);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *(_BYTE *)a1 = *(_BYTE *)a2;
    if (EnumCaseMultiPayload == 1)
    {
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
      v5 = *(int *)(type metadata accessor for LocationTrigger(0) + 28);
      v6 = (char *)(a1 + v5);
      v7 = (char *)(a2 + v5);
      v8 = type metadata accessor for LocationTrigger.TimeRange(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8))
      {
        v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4C240);
        memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        v14 = sub_1AF76A090();
        v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32);
        v15(v6, v7, v14);
        v15(&v6[*(int *)(v8 + 20)], &v7[*(int *)(v8 + 20)], v14);
        __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v8);
      }
    }
    else
    {
      v10 = *(int *)(type metadata accessor for TimeOfDayTrigger(0) + 20);
      v11 = a1 + v10;
      v12 = a2 + v10;
      v13 = sub_1AF76A090();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1AF6E1CD8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for TimeOfDayTrigger(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for LocationTrigger(319);
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t destroy for TriggerAction(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 56);
  if (v1 >= 2)
    v1 = *(_DWORD *)a1 + 2;
  if (v1 != 1)
    __swift_destroy_boxed_opaque_existential_1(a1);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TriggerAction(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  uint64_t v5;
  char v6;
  __int128 v7;
  uint64_t v8;

  v4 = *(unsigned __int8 *)(a2 + 56);
  if (v4 >= 2)
    v4 = *(_DWORD *)a2 + 2;
  if (v4 == 1)
  {
    v5 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v5;
    v6 = 1;
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1, a2);
    v6 = 0;
    v8 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = v8;
  }
  swift_bridgeObjectRetain();
  *(_BYTE *)(a1 + 56) = v6;
  return a1;
}

uint64_t assignWithCopy for TriggerAction(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  char v6;
  uint64_t v7;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 56);
    if (v4 >= 2)
      v4 = *(_DWORD *)a1 + 2;
    if (v4 != 1)
      __swift_destroy_boxed_opaque_existential_1(a1);
    swift_bridgeObjectRelease();
    v5 = *(unsigned __int8 *)(a2 + 56);
    if (v5 >= 2)
      v5 = *(_DWORD *)a2 + 2;
    if (v5 == 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      v6 = 1;
    }
    else
    {
      v7 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 24) = v7;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1, a2);
      v6 = 0;
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    }
    *(_BYTE *)(a1 + 56) = v6;
    swift_bridgeObjectRetain();
  }
  return a1;
}

__n128 __swift_memcpy57_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for TriggerAction(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  __int128 v6;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 56);
    if (v4 >= 2)
      v4 = *(_DWORD *)a1 + 2;
    if (v4 != 1)
      __swift_destroy_boxed_opaque_existential_1(a1);
    swift_bridgeObjectRelease();
    v5 = *(unsigned __int8 *)(a2 + 56);
    if (v5 >= 2)
      v5 = *(_DWORD *)a2 + 2;
    if (v5 == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    else
    {
      LOBYTE(v5) = 0;
      v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    }
    *(_BYTE *)(a1 + 56) = v5;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for TriggerAction(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 57))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 56);
  if (v3 >= 2)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for TriggerAction(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 41) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 57) = 0;
    if (a2)
      *(_BYTE *)(result + 56) = -(char)a2;
  }
  return result;
}

uint64_t sub_1AF6E2060(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 56);
  if (result >= 2)
    return (*(_DWORD *)a1 + 2);
  return result;
}

uint64_t sub_1AF6E207C(uint64_t result, unsigned int a2)
{
  if (a2 > 1)
  {
    *(_QWORD *)(result + 48) = 0;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 56) = a2;
  return result;
}

void type metadata accessor for TriggerAction()
{
  OUTLINED_FUNCTION_25();
}

uint64_t destroy for CodableTriggerAction(uint64_t a1)
{
  return sub_1AF6B4900(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t initializeWithCopy for CodableTriggerAction(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1AF6B7B80(*(void **)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for CodableTriggerAction(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1AF6B7B80(*(void **)a2, v4, v5, v6);
  v7 = *(void **)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  sub_1AF6B4900(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for CodableTriggerAction(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_BYTE *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
  sub_1AF6B4900(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for CodableTriggerAction(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 25))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 24);
      if (v3 <= 1)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CodableTriggerAction(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = -(char)a2;
  }
  return result;
}

uint64_t sub_1AF6E2264(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24);
}

uint64_t sub_1AF6E226C(uint64_t result, char a2)
{
  *(_BYTE *)(result + 24) = a2 & 1;
  return result;
}

void type metadata accessor for CodableTriggerAction()
{
  OUTLINED_FUNCTION_25();
}

uint64_t *initializeBufferWithCopyOfBuffer for ScheduledTrigger(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  int EnumCaseMultiPayload;
  void *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v17 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v17 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    type metadata accessor for TriggerType(0);
    swift_bridgeObjectRetain();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *v7 = *v8;
    if (EnumCaseMultiPayload == 1)
    {
      v10 = (void *)*((_QWORD *)v8 + 1);
      *((_QWORD *)v7 + 1) = v10;
      v7[16] = v8[16];
      v11 = *(int *)(type metadata accessor for LocationTrigger(0) + 28);
      v12 = &v7[v11];
      v13 = &v8[v11];
      v14 = type metadata accessor for LocationTrigger.TimeRange(0);
      v15 = v10;
      if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14))
      {
        v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4C240);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        v22 = sub_1AF76A090();
        v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
        v23(v12, v13, v22);
        v23(&v12[*(int *)(v14 + 20)], &v13[*(int *)(v14 + 20)], v22);
        __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
      }
    }
    else
    {
      v18 = *(int *)(type metadata accessor for TimeOfDayTrigger(0) + 20);
      v19 = &v7[v18];
      v20 = &v8[v18];
      v21 = sub_1AF76A090();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

uint64_t destroy for ScheduledTrigger(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  type metadata accessor for TriggerType(0);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v8 = v4 + *(int *)(type metadata accessor for TimeOfDayTrigger(0) + 20);
    v9 = sub_1AF76A090();
    v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
    v11 = v8;
    return v10(v11, v9);
  }

  v5 = v4 + *(int *)(type metadata accessor for LocationTrigger(0) + 28);
  v6 = type metadata accessor for LocationTrigger.TimeRange(0);
  result = __swift_getEnumTagSinglePayload(v5, 1, v6);
  if (!(_DWORD)result)
  {
    v12 = sub_1AF76A090();
    v13 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8);
    v13(v5, v12);
    v11 = v5 + *(int *)(v6 + 20);
    v9 = v12;
    v10 = (uint64_t (*)(uint64_t, uint64_t))v13;
    return v10(v11, v9);
  }
  return result;
}

_QWORD *initializeWithCopy for ScheduledTrigger(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  int EnumCaseMultiPayload;
  void *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  type metadata accessor for TriggerType(0);
  swift_bridgeObjectRetain();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *v6 = *v7;
  if (EnumCaseMultiPayload == 1)
  {
    v9 = (void *)*((_QWORD *)v7 + 1);
    *((_QWORD *)v6 + 1) = v9;
    v6[16] = v7[16];
    v10 = *(int *)(type metadata accessor for LocationTrigger(0) + 28);
    v11 = &v6[v10];
    v12 = &v7[v10];
    v13 = type metadata accessor for LocationTrigger.TimeRange(0);
    v14 = v9;
    if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4C240);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      v20 = sub_1AF76A090();
      v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
      v21(v11, v12, v20);
      v21(&v11[*(int *)(v13 + 20)], &v12[*(int *)(v13 + 20)], v20);
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
    }
  }
  else
  {
    v16 = *(int *)(type metadata accessor for TimeOfDayTrigger(0) + 20);
    v17 = &v6[v16];
    v18 = &v7[v16];
    v19 = sub_1AF76A090();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *assignWithCopy for ScheduledTrigger(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  int EnumCaseMultiPayload;
  void *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    sub_1AF6A9084((uint64_t)a1 + v6, type metadata accessor for TriggerType);
    type metadata accessor for TriggerType(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *v7 = *v8;
    if (EnumCaseMultiPayload == 1)
    {
      v10 = (void *)*((_QWORD *)v8 + 1);
      *((_QWORD *)v7 + 1) = v10;
      v7[16] = v8[16];
      v11 = *(int *)(type metadata accessor for LocationTrigger(0) + 28);
      v12 = &v7[v11];
      v13 = &v8[v11];
      v14 = type metadata accessor for LocationTrigger.TimeRange(0);
      v15 = v10;
      if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14))
      {
        v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4C240);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        v21 = sub_1AF76A090();
        v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
        v22(v12, v13, v21);
        v22(&v12[*(int *)(v14 + 20)], &v13[*(int *)(v14 + 20)], v21);
        __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
      }
    }
    else
    {
      v17 = *(int *)(type metadata accessor for TimeOfDayTrigger(0) + 20);
      v18 = &v7[v17];
      v19 = &v8[v17];
      v20 = sub_1AF76A090();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *initializeWithTake for ScheduledTrigger(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  type metadata accessor for TriggerType(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *v5 = *v6;
  if (EnumCaseMultiPayload == 1)
  {
    *((_QWORD *)v5 + 1) = *((_QWORD *)v6 + 1);
    v5[16] = v6[16];
    v8 = *(int *)(type metadata accessor for LocationTrigger(0) + 28);
    v9 = &v5[v8];
    v10 = &v6[v8];
    v11 = type metadata accessor for LocationTrigger.TimeRange(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4C240);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v17 = sub_1AF76A090();
      v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32);
      v18(v9, v10, v17);
      v18(&v9[*(int *)(v11 + 20)], &v10[*(int *)(v11 + 20)], v17);
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
    }
  }
  else
  {
    v13 = *(int *)(type metadata accessor for TimeOfDayTrigger(0) + 20);
    v14 = &v5[v13];
    v15 = &v6[v13];
    v16 = sub_1AF76A090();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *assignWithTake for ScheduledTrigger(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    sub_1AF6A9084((uint64_t)a1 + v7, type metadata accessor for TriggerType);
    type metadata accessor for TriggerType(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *v8 = *v9;
    if (EnumCaseMultiPayload == 1)
    {
      *((_QWORD *)v8 + 1) = *((_QWORD *)v9 + 1);
      v8[16] = v9[16];
      v11 = *(int *)(type metadata accessor for LocationTrigger(0) + 28);
      v12 = &v8[v11];
      v13 = &v9[v11];
      v14 = type metadata accessor for LocationTrigger.TimeRange(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14))
      {
        v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEE4C240);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        v20 = sub_1AF76A090();
        v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32);
        v21(v12, v13, v20);
        v21(&v12[*(int *)(v14 + 20)], &v13[*(int *)(v14 + 20)], v20);
        __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
      }
    }
    else
    {
      v16 = *(int *)(type metadata accessor for TimeOfDayTrigger(0) + 20);
      v17 = &v8[v16];
      v18 = &v9[v16];
      v19 = sub_1AF76A090();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for ScheduledTrigger()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1AF6E2BB0(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (a2 == 0x7FFFFFFF)
  {
    OUTLINED_FUNCTION_64_4();
    OUTLINED_FUNCTION_9();
  }
  else
  {
    OUTLINED_FUNCTION_100_0();
    v2 = OUTLINED_FUNCTION_80_0();
    OUTLINED_FUNCTION_12_9(v2, v3, v4);
  }
}

uint64_t storeEnumTagSinglePayload for ScheduledTrigger()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1AF6E2C00()
{
  int v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_89_2();
  if (v2)
  {
    *(_QWORD *)(v1 + 8) = (v0 - 1);
    OUTLINED_FUNCTION_9();
  }
  else
  {
    OUTLINED_FUNCTION_100_0();
    v3 = OUTLINED_FUNCTION_61_0();
    OUTLINED_FUNCTION_39_0(v3, v4, v5, v6);
  }
}

uint64_t sub_1AF6E2C3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AF6E2C50(a1, a2, a3, (uint64_t)&unk_1AF77E348, type metadata accessor for TriggerType);
}

uint64_t sub_1AF6E2C50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t result;
  unint64_t v6;

  result = a5(319);
  if (v6 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for ScheduledTrigger.CodingKeys()
{
  return &type metadata for ScheduledTrigger.CodingKeys;
}

uint64_t sub_1AF6E2CCC(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1AF6E2D18 + 4 * byte_1AF77DE75[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1AF6E2D4C + 4 * byte_1AF77DE70[v4]))();
}

uint64_t sub_1AF6E2D4C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AF6E2D54(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AF6E2D5CLL);
  return result;
}

uint64_t sub_1AF6E2D68(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AF6E2D70);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1AF6E2D74(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AF6E2D7C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for CodableTriggerAction.CodingKeys()
{
  OUTLINED_FUNCTION_25();
}

ValueMetadata *type metadata accessor for TriggerType.CodingKeys()
{
  return &type metadata for TriggerType.CodingKeys;
}

ValueMetadata *type metadata accessor for TriggerType.TimeCodingKeys()
{
  return &type metadata for TriggerType.TimeCodingKeys;
}

uint64_t _s19VoiceShortcutClient11TriggerTypeO14TimeCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1AF6E2DF8 + 4 * byte_1AF77DE7A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1AF6E2E18 + 4 * byte_1AF77DE7F[v4]))();
}

_BYTE *sub_1AF6E2DF8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1AF6E2E18(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AF6E2E20(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AF6E2E28(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AF6E2E30(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AF6E2E38(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for TriggerType.LocationCodingKeys()
{
  return &type metadata for TriggerType.LocationCodingKeys;
}

uint64_t sub_1AF6E2E54(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1AF6E2EA0 + 4 * byte_1AF77DE89[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1AF6E2ED4 + 4 * byte_1AF77DE84[v4]))();
}

uint64_t sub_1AF6E2ED4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AF6E2EDC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AF6E2EE4);
  return result;
}

uint64_t sub_1AF6E2EF0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AF6E2EF8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1AF6E2EFC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AF6E2F04(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for LocationTrigger.CodingKeys()
{
  OUTLINED_FUNCTION_25();
}

ValueMetadata *type metadata accessor for LocationTrigger.TimeRange.CodingKeys()
{
  return &type metadata for LocationTrigger.TimeRange.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationTrigger.State.CodingKeys()
{
  return &type metadata for LocationTrigger.State.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationTrigger.State.LeftCodingKeys()
{
  return &type metadata for LocationTrigger.State.LeftCodingKeys;
}

ValueMetadata *type metadata accessor for LocationTrigger.State.EnteredCodingKeys()
{
  return &type metadata for LocationTrigger.State.EnteredCodingKeys;
}

uint64_t _s19VoiceShortcutClient15LocationTriggerV5StateOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AF6E2FA8 + 4 * byte_1AF77DE93[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AF6E2FDC + 4 * byte_1AF77DE8E[v4]))();
}

uint64_t sub_1AF6E2FDC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AF6E2FE4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AF6E2FECLL);
  return result;
}

uint64_t sub_1AF6E2FF8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AF6E3000);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AF6E3004(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AF6E300C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TimeOfDayTrigger.CodingKeys()
{
  return &type metadata for TimeOfDayTrigger.CodingKeys;
}

unint64_t sub_1AF6E302C()
{
  unint64_t result;

  result = qword_1EEE4D028;
  if (!qword_1EEE4D028)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77E454, &type metadata for TimeOfDayTrigger.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4D028);
  }
  return result;
}

unint64_t sub_1AF6E306C()
{
  unint64_t result;

  result = qword_1EEE4D030;
  if (!qword_1EEE4D030)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77E5AC, &type metadata for LocationTrigger.State.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4D030);
  }
  return result;
}

unint64_t sub_1AF6E30AC()
{
  unint64_t result;

  result = qword_1EEE4D038;
  if (!qword_1EEE4D038)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77E664, &type metadata for LocationTrigger.TimeRange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4D038);
  }
  return result;
}

unint64_t sub_1AF6E30EC()
{
  unint64_t result;

  result = qword_1EEE4D040;
  if (!qword_1EEE4D040)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77E754, &unk_1E5FBF880);
    atomic_store(result, (unint64_t *)&qword_1EEE4D040);
  }
  return result;
}

unint64_t sub_1AF6E312C()
{
  unint64_t result;

  result = qword_1EEE4D048;
  if (!qword_1EEE4D048)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77E80C, &type metadata for TriggerType.LocationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4D048);
  }
  return result;
}

unint64_t sub_1AF6E316C()
{
  unint64_t result;

  result = qword_1EEE4D050;
  if (!qword_1EEE4D050)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77E8C4, &type metadata for TriggerType.TimeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4D050);
  }
  return result;
}

unint64_t sub_1AF6E31AC()
{
  unint64_t result;

  result = qword_1EEE4D058;
  if (!qword_1EEE4D058)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77E97C, &type metadata for TriggerType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4D058);
  }
  return result;
}

unint64_t sub_1AF6E31EC()
{
  unint64_t result;

  result = qword_1EEE4D060;
  if (!qword_1EEE4D060)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77EA34, &unk_1E5FC05D0);
    atomic_store(result, (unint64_t *)&qword_1EEE4D060);
  }
  return result;
}

unint64_t sub_1AF6E322C()
{
  unint64_t result;

  result = qword_1EEE4D068;
  if (!qword_1EEE4D068)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77EAEC, &type metadata for ScheduledTrigger.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4D068);
  }
  return result;
}

unint64_t sub_1AF6E326C()
{
  unint64_t result;

  result = qword_1EEE4D070;
  if (!qword_1EEE4D070)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77EA5C, &type metadata for ScheduledTrigger.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4D070);
  }
  return result;
}

unint64_t sub_1AF6E32AC()
{
  unint64_t result;

  result = qword_1EEE4D078;
  if (!qword_1EEE4D078)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77EA84, &type metadata for ScheduledTrigger.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4D078);
  }
  return result;
}

unint64_t sub_1AF6E32EC()
{
  unint64_t result;

  result = qword_1EEE4D080;
  if (!qword_1EEE4D080)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77E9A4, &unk_1E5FC05D0);
    atomic_store(result, (unint64_t *)&qword_1EEE4D080);
  }
  return result;
}

unint64_t sub_1AF6E332C()
{
  unint64_t result;

  result = qword_1EEE4D088;
  if (!qword_1EEE4D088)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77E9CC, &unk_1E5FC05D0);
    atomic_store(result, (unint64_t *)&qword_1EEE4D088);
  }
  return result;
}

unint64_t sub_1AF6E336C()
{
  unint64_t result;

  result = qword_1EEE4D090;
  if (!qword_1EEE4D090)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77E834, &type metadata for TriggerType.TimeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4D090);
  }
  return result;
}

unint64_t sub_1AF6E33AC()
{
  unint64_t result;

  result = qword_1EEE4D098;
  if (!qword_1EEE4D098)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77E85C, &type metadata for TriggerType.TimeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4D098);
  }
  return result;
}

unint64_t sub_1AF6E33EC()
{
  unint64_t result;

  result = qword_1EEE4D0A0;
  if (!qword_1EEE4D0A0)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77E77C, &type metadata for TriggerType.LocationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4D0A0);
  }
  return result;
}

unint64_t sub_1AF6E342C()
{
  unint64_t result;

  result = qword_1EEE4D0A8;
  if (!qword_1EEE4D0A8)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77E7A4, &type metadata for TriggerType.LocationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4D0A8);
  }
  return result;
}

unint64_t sub_1AF6E346C()
{
  unint64_t result;

  result = qword_1EEE4D0B0;
  if (!qword_1EEE4D0B0)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77E8EC, &type metadata for TriggerType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4D0B0);
  }
  return result;
}

unint64_t sub_1AF6E34AC()
{
  unint64_t result;

  result = qword_1EEE4D0B8;
  if (!qword_1EEE4D0B8)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77E914, &type metadata for TriggerType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4D0B8);
  }
  return result;
}

unint64_t sub_1AF6E34EC()
{
  unint64_t result;

  result = qword_1EEE4D0C0;
  if (!qword_1EEE4D0C0)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77E68C, &unk_1E5FBF880);
    atomic_store(result, (unint64_t *)&qword_1EEE4D0C0);
  }
  return result;
}

unint64_t sub_1AF6E352C()
{
  unint64_t result;

  result = qword_1EEE4D0C8;
  if (!qword_1EEE4D0C8)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77E6B4, &unk_1E5FBF880);
    atomic_store(result, (unint64_t *)&qword_1EEE4D0C8);
  }
  return result;
}

unint64_t sub_1AF6E356C()
{
  unint64_t result;

  result = qword_1EEE4D0D0;
  if (!qword_1EEE4D0D0)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77E5D4, &type metadata for LocationTrigger.TimeRange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4D0D0);
  }
  return result;
}

unint64_t sub_1AF6E35AC()
{
  unint64_t result;

  result = qword_1EEE4D0D8;
  if (!qword_1EEE4D0D8)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77E5FC, &type metadata for LocationTrigger.TimeRange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4D0D8);
  }
  return result;
}

unint64_t sub_1AF6E35EC()
{
  unint64_t result;

  result = qword_1EEE4D0E0;
  if (!qword_1EEE4D0E0)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77E4CC, &type metadata for LocationTrigger.State.LeftCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4D0E0);
  }
  return result;
}

unint64_t sub_1AF6E362C()
{
  unint64_t result;

  result = qword_1EEE4D0E8;
  if (!qword_1EEE4D0E8)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77E4F4, &type metadata for LocationTrigger.State.LeftCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4D0E8);
  }
  return result;
}

unint64_t sub_1AF6E366C()
{
  unint64_t result;

  result = qword_1EEE4D0F0;
  if (!qword_1EEE4D0F0)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77E47C, &type metadata for LocationTrigger.State.EnteredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4D0F0);
  }
  return result;
}

unint64_t sub_1AF6E36AC()
{
  unint64_t result;

  result = qword_1EEE4D0F8;
  if (!qword_1EEE4D0F8)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77E4A4, &type metadata for LocationTrigger.State.EnteredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4D0F8);
  }
  return result;
}

unint64_t sub_1AF6E36EC()
{
  unint64_t result;

  result = qword_1EEE4D100;
  if (!qword_1EEE4D100)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77E51C, &type metadata for LocationTrigger.State.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4D100);
  }
  return result;
}

unint64_t sub_1AF6E372C()
{
  unint64_t result;

  result = qword_1EEE4D108;
  if (!qword_1EEE4D108)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77E544, &type metadata for LocationTrigger.State.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4D108);
  }
  return result;
}

unint64_t sub_1AF6E376C()
{
  unint64_t result;

  result = qword_1EEE4D110;
  if (!qword_1EEE4D110)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77E3C4, &type metadata for TimeOfDayTrigger.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4D110);
  }
  return result;
}

unint64_t sub_1AF6E37AC()
{
  unint64_t result;

  result = qword_1EEE4D118;
  if (!qword_1EEE4D118)
  {
    result = MEMORY[0x1B5DFC634](&unk_1AF77E3EC, &type metadata for TimeOfDayTrigger.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEE4D118);
  }
  return result;
}

uint64_t sub_1AF6E37E8(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for TriggerAction(a2, a1);
  return a2;
}

uint64_t OUTLINED_FUNCTION_4_12()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_5_9@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_12_9(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_getEnumTagSinglePayload(a1, a2, a3);
}

_QWORD *OUTLINED_FUNCTION_15_8()
{
  _QWORD *v0;

  return __swift_project_boxed_opaque_existential_1(v0, v0[3]);
}

uint64_t OUTLINED_FUNCTION_16_8()
{
  return sub_1AF76AF6C();
}

uint64_t OUTLINED_FUNCTION_17_6()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_22_8()
{
  return sub_1AF76A090();
}

uint64_t OUTLINED_FUNCTION_23_7@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_24_5()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_29_4()
{
  return sub_1AF76A5AC();
}

uint64_t OUTLINED_FUNCTION_31_5()
{
  return sub_1AF76AB64();
}

uint64_t OUTLINED_FUNCTION_32_5()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v0 + 8))(v1, *(_QWORD *)(v2 - 88));
}

uint64_t OUTLINED_FUNCTION_33_6()
{
  return sub_1AF76AD14();
}

uint64_t OUTLINED_FUNCTION_38_2()
{
  return sub_1AF76AB64();
}

uint64_t OUTLINED_FUNCTION_39_2()
{
  return 1;
}

_QWORD *OUTLINED_FUNCTION_41_4(_QWORD *a1)
{
  uint64_t v1;

  return __swift_project_boxed_opaque_existential_1(a1, v1);
}

uint64_t OUTLINED_FUNCTION_42_4(uint64_t a1)
{
  return sub_1AF6DCB8C(a1, 2);
}

uint64_t OUTLINED_FUNCTION_43_4()
{
  return sub_1AF76AAA4();
}

uint64_t OUTLINED_FUNCTION_44_3()
{
  return sub_1AF76AF54();
}

uint64_t OUTLINED_FUNCTION_45_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(v3, a2, v2);
}

uint64_t OUTLINED_FUNCTION_46_4()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v1, 0, 1, v0);
}

uint64_t OUTLINED_FUNCTION_47_3()
{
  return sub_1AF76A5AC();
}

void OUTLINED_FUNCTION_48_2()
{
  sub_1AF6DC8E8();
}

uint64_t OUTLINED_FUNCTION_50_2@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_54_3(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t OUTLINED_FUNCTION_55_2(uint64_t a1)
{
  unint64_t v1;

  return sub_1AF697C78(a1, v1);
}

void OUTLINED_FUNCTION_57_1()
{
  sub_1AF6DC5F0();
}

uint64_t OUTLINED_FUNCTION_59_3()
{
  return sub_1AF76AAF8();
}

uint64_t OUTLINED_FUNCTION_61_0()
{
  uint64_t v0;
  uint64_t v1;

  return v0 + *(int *)(v1 + 20);
}

uint64_t OUTLINED_FUNCTION_64_4()
{
  uint64_t v0;
  unint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

uint64_t OUTLINED_FUNCTION_65_3()
{
  return sub_1AF76AB28();
}

uint64_t OUTLINED_FUNCTION_69_2()
{
  return sub_1AF76AAF8();
}

uint64_t OUTLINED_FUNCTION_72_1()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 1;
  return 0;
}

uint64_t OUTLINED_FUNCTION_73_1()
{
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_74_1()
{
  return type metadata accessor for TimeOfDayTrigger(0);
}

uint64_t OUTLINED_FUNCTION_76_0(uint64_t a1, unint64_t *a2)
{
  return sub_1AF6C70C4(0, a2);
}

uint64_t OUTLINED_FUNCTION_77_0()
{
  return type metadata accessor for LocationTrigger(0);
}

uint64_t OUTLINED_FUNCTION_78_1()
{
  return sub_1AF76A828();
}

uint64_t OUTLINED_FUNCTION_80_0()
{
  uint64_t v0;
  uint64_t v1;

  return v0 + *(int *)(v1 + 20);
}

uint64_t OUTLINED_FUNCTION_81_2()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(*(_QWORD *)(v0 - 112));
}

uint64_t OUTLINED_FUNCTION_82_1()
{
  return sub_1AF76AAF8();
}

uint64_t OUTLINED_FUNCTION_83_1()
{
  return sub_1AF76A984();
}

uint64_t OUTLINED_FUNCTION_84_2(uint64_t a1)
{
  unint64_t v1;

  return sub_1AF697C78(a1, v1);
}

uint64_t OUTLINED_FUNCTION_85_1()
{
  uint64_t v0;

  return sub_1AF697C78(*(_QWORD *)(v0 - 104), *(_QWORD *)(v0 - 120));
}

uint64_t OUTLINED_FUNCTION_86_1()
{
  uint64_t v0;

  return v0 - 96;
}

uint64_t OUTLINED_FUNCTION_87_1()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_88_1(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_1AF6DFF34(a1, a2, v2);
}

void OUTLINED_FUNCTION_91_1(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_1AF6A9084(a1, v1);
}

uint64_t OUTLINED_FUNCTION_92_2@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

id OUTLINED_FUNCTION_93_2()
{
  uint64_t v0;

  return *(id *)(v0 - 104);
}

unint64_t OUTLINED_FUNCTION_95_0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 1;
  return sub_1AF6DD66C();
}

unint64_t OUTLINED_FUNCTION_96_1()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 1;
  return sub_1AF6E0174();
}

uint64_t OUTLINED_FUNCTION_98_0@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 96) = a1;
  return v1 - 96;
}

void OUTLINED_FUNCTION_99_0()
{
  uint64_t v0;

}

uint64_t OUTLINED_FUNCTION_100_0()
{
  return type metadata accessor for TriggerType(0);
}

void sub_1AF6E6C44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *a10, id *location)
{
  id *v11;
  id *v12;
  uint64_t v13;

  objc_destroyWeak(v12);
  objc_destroyWeak(v11);
  objc_destroyWeak(location);
  objc_destroyWeak(a10);
  objc_destroyWeak((id *)(v13 - 136));
  objc_destroyWeak((id *)(v13 - 128));
  _Unwind_Resume(a1);
}

id WFNameForGlyphSection(unint64_t a1)
{
  if (a1 <= 2)
  {
    WFLocalizedString(off_1E5FC4900[a1]);
    a1 = objc_claimAutoreleasedReturnValue();
  }
  return (id)a1;
}

id WFSystemGlyphCharactersInSection(uint64_t a1)
{
  void *v1;
  id v2;
  void *v3;

  v1 = &unk_1E60040D8;
  if (a1 == 1)
    v1 = &unk_1E60040F0;
  if (a1 == 2)
    v1 = &unk_1E6004108;
  v2 = v1;
  objc_msgSend(v2, "if_objectsPassingTest:", &__block_literal_global_549);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

id WFSystemOutlineGlyphCharactersInSection(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  void (**v8)(void *, void *, void *);
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t i;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  id v20;
  void (**v21)(void *, void *, void *, void *);
  id v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  _QWORD v27[4];
  id v28;
  id v29;
  _QWORD aBlock[4];
  id v31;
  id v32;
  _BYTE v33[128];
  uint64_t v34;

  v34 = *MEMORY[0x1E0C80C00];
  v2 = (void *)objc_opt_new();
  v3 = (void *)objc_opt_new();
  WFSystemGlyphCharactersInSection(a1);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = MEMORY[0x1E0C809B0];
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 3221225472;
  aBlock[2] = __WFSystemOutlineGlyphCharactersInSection_block_invoke;
  aBlock[3] = &unk_1E5FC4870;
  v6 = v2;
  v31 = v6;
  v7 = v3;
  v32 = v7;
  v8 = (void (**)(void *, void *, void *))_Block_copy(aBlock);
  v27[0] = v5;
  v27[1] = 3221225472;
  v27[2] = __WFSystemOutlineGlyphCharactersInSection_block_invoke_2;
  v27[3] = &unk_1E5FC4898;
  v22 = v6;
  v28 = v22;
  v20 = v7;
  v29 = v20;
  v21 = (void (**)(void *, void *, void *, void *))_Block_copy(v27);
  v23 = 0u;
  v24 = 0u;
  v25 = 0u;
  v26 = 0u;
  v9 = v4;
  v10 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v23, v33, 16);
  if (v10)
  {
    v11 = v10;
    v12 = *(_QWORD *)v24;
    do
    {
      for (i = 0; i != v11; ++i)
      {
        if (*(_QWORD *)v24 != v12)
          objc_enumerationMutation(v9);
        v14 = *(void **)(*((_QWORD *)&v23 + 1) + 8 * i);
        WFSystemImageNameForGlyphCharacter((unsigned __int16)objc_msgSend(v14, "intValue"));
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        WFSystemImageNameForOutlineGlyphCharacter((unsigned __int16)objc_msgSend(v14, "intValue"));
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        if (objc_msgSend(v15, "hasSuffix:", CFSTR(".fill")))
        {
          v8[2](v8, v14, v16);
        }
        else
        {
          objc_msgSend(v22, "objectForKey:", v16);
          v17 = (void *)objc_claimAutoreleasedReturnValue();
          if (v17)
            v21[2](v21, v14, v16, v17);
          else
            v8[2](v8, v14, v16);

        }
      }
      v11 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v23, v33, 16);
    }
    while (v11);
  }

  v18 = v20;
  return v18;
}

id WFWorkflowGlyphCharactersInSection(uint64_t a1)
{
  void *v1;
  id v2;
  void *v3;

  v1 = &unk_1E60040D8;
  if (a1 == 1)
    v1 = &unk_1E60040F0;
  if (a1 == 2)
    v1 = &unk_1E6004108;
  v2 = v1;
  objc_msgSend(v2, "if_objectsPassingTest:", &__block_literal_global_16);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

id WFRepresentativeGlyphNameForSection(void *a1)
{
  if ((unint64_t)a1 <= 2)
  {
    WFSystemImageNameForOutlineGlyphCharacter((unsigned __int16)(0xF000E999E959uLL >> (16 * a1)));
    a1 = (void *)objc_claimAutoreleasedReturnValue();
  }
  return a1;
}

uint64_t WFSectionForGlyph(__int16 a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[5];
  __int16 v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v8 = 0;
  v9 = &v8;
  v10 = 0x2020000000;
  v11 = 0;
  objc_msgSend(&unk_1E6004060, "firstObject");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "unsignedIntegerValue");

  v11 = v3;
  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __WFSectionForGlyph_block_invoke;
  v6[3] = &unk_1E5FC48E0;
  v7 = a1;
  v6[4] = &v8;
  objc_msgSend(&unk_1E6004060, "enumerateObjectsUsingBlock:", v6);
  v4 = v9[3];
  _Block_object_dispose(&v8, 8);
  return v4;
}

void sub_1AF6EB018(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t VCIsShortcutsAppBundleIdentifier(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  if ((objc_msgSend(v1, "isEqualToString:", CFSTR("com.apple.shortcuts")) & 1) != 0
    || (objc_msgSend(v1, "isEqualToString:", CFSTR("com.apple.shortcuts.watch")) & 1) != 0)
  {
    v2 = 1;
  }
  else
  {
    v2 = objc_msgSend(v1, "isEqualToString:", CFSTR("com.apple.shortcuts"));
  }

  return v2;
}

uint64_t VCIsShortcutsActionsBundleIdentifier(void *a1, const char *a2)
{
  return objc_msgSend(a1, "isEqualToString:", CFSTR("com.apple.ShortcutsActions"));
}

id WFHumanReadableNameForWorkflowType(void *a1)
{
  id v1;
  __CFString *v2;
  void *v3;

  v1 = a1;
  if ((objc_msgSend(v1, "isEqualToString:", CFSTR("ActionExtension")) & 1) != 0)
  {
    v2 = CFSTR("Share Sheet");
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("Watch")) & 1) != 0)
  {
    v2 = CFSTR("Apple Watch");
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("Sleep")) & 1) != 0)
  {
    v2 = CFSTR("Sleep Focus");
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("QuickActions")) & 1) != 0)
  {
    v2 = CFSTR("Quick Actions");
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("MenuBar")) & 1) != 0)
  {
    v2 = CFSTR("Menu Bar");
  }
  else
  {
    if (!objc_msgSend(v1, "isEqualToString:", CFSTR("ReceivesOnScreenContent")))
    {
      v3 = 0;
      goto LABEL_14;
    }
    v2 = CFSTR("Receives What’s On Screen");
  }
  WFLocalizedString(v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
LABEL_14:

  return v3;
}

id WFAppIntentArchiverErrorWithLocalizedErrorDescription(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v10;
  _QWORD v11[2];

  v11[1] = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  v5 = (void *)MEMORY[0x1E0C99E08];
  v10 = *MEMORY[0x1E0CB2D50];
  v11[0] = v3;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v11, &v10, 1);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "dictionaryWithDictionary:", v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
    objc_msgSend(v7, "setObject:forKeyedSubscript:", v4, *MEMORY[0x1E0CB3388]);
  objc_msgSend(MEMORY[0x1E0CB35C8], "errorWithDomain:code:userInfo:", CFSTR("AppIntentsArchivingError"), 1000, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  return v8;
}

void sub_1AF6EE230(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getAVSystemControllerClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  void *v4;
  void *v5;

  if (!MediaExperienceLibraryCore_frameworkLibrary)
    MediaExperienceLibraryCore_frameworkLibrary = _sl_dlopen();
  if (!MediaExperienceLibraryCore_frameworkLibrary)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *MediaExperienceLibrary(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("WFAVSystemController.m"), 16, CFSTR("%s"), 0);

    goto LABEL_8;
  }
  result = objc_getClass("AVSystemController");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getAVSystemControllerClass(void)_block_invoke");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("WFAVSystemController.m"), 17, CFSTR("Unable to find class %s"), "AVSystemController");

LABEL_8:
    __break(1u);
  }
  getAVSystemControllerClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_1AF6EED90(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 144), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy_(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose_(uint64_t a1)
{

}

const __CFString *WFRunSourceForExecutionContext(unint64_t a1)
{
  if (a1 > 0xA)
    return CFSTR("unknown");
  else
    return off_1E5FC4E68[a1];
}

uint64_t WFRunSourceIsSpotlight(void *a1)
{
  uint64_t v1;
  id v2;
  uint64_t v3;

  v1 = WFRunSourceIsSpotlight_onceToken;
  v2 = a1;
  if (v1 != -1)
    dispatch_once(&WFRunSourceIsSpotlight_onceToken, &__block_literal_global_1626);
  v3 = objc_msgSend((id)WFRunSourceIsSpotlight_s_spotlightRunSources, "containsObject:", v2);

  return v3;
}

uint64_t WFRunSourceIsSuggestion(void *a1)
{
  uint64_t v1;
  id v2;
  uint64_t v3;

  v1 = WFRunSourceIsSuggestion_onceToken;
  v2 = a1;
  if (v1 != -1)
    dispatch_once(&WFRunSourceIsSuggestion_onceToken, &__block_literal_global_126);
  v3 = objc_msgSend((id)WFRunSourceIsSuggestion_s_suggestionRunSources, "containsObject:", v2);

  return v3;
}

uint64_t WFRunSourceIsExemptFromOutputApproval(void *a1)
{
  uint64_t v1;
  id v2;
  uint64_t v3;

  v1 = WFRunSourceIsExemptFromOutputApproval_onceToken;
  v2 = a1;
  if (v1 != -1)
    dispatch_once(&WFRunSourceIsExemptFromOutputApproval_onceToken, &__block_literal_global_127);
  v3 = objc_msgSend((id)WFRunSourceIsExemptFromOutputApproval_s_outputApprovalExemptRunSources, "containsObject:", v2);

  return v3;
}

void sub_1AF6F189C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  uint64_t v13;
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1AF6F1A38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  uint64_t v13;
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1AF6F1D68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a21, 8);
  _Block_object_dispose(&a27, 8);
  _Unwind_Resume(a1);
}

void sub_1AF6F1EF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  uint64_t v13;
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1AF6F208C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  uint64_t v13;
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 128), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__1651(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__1652(uint64_t a1)
{

}

id getWFActionsLogObject()
{
  if (getWFActionsLogObject_onceToken != -1)
    dispatch_once(&getWFActionsLogObject_onceToken, &__block_literal_global_6);
  return (id)getWFActionsLogObject_log;
}

void __getWFActionsLogObject_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create(WFLogSubsystem, "Actions");
  v1 = (void *)getWFActionsLogObject_log;
  getWFActionsLogObject_log = (uint64_t)v0;

}

id getWFContentGraphLogObject()
{
  if (getWFContentGraphLogObject_onceToken != -1)
    dispatch_once(&getWFContentGraphLogObject_onceToken, &__block_literal_global_8);
  return (id)getWFContentGraphLogObject_log;
}

void __getWFContentGraphLogObject_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create(WFLogSubsystem, "ContentGraph");
  v1 = (void *)getWFContentGraphLogObject_log;
  getWFContentGraphLogObject_log = (uint64_t)v0;

}

id getWFContentItemLogObject()
{
  if (getWFContentItemLogObject_onceToken != -1)
    dispatch_once(&getWFContentItemLogObject_onceToken, &__block_literal_global_10);
  return (id)getWFContentItemLogObject_log;
}

void __getWFContentItemLogObject_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create(WFLogSubsystem, "ContentItem");
  v1 = (void *)getWFContentItemLogObject_log;
  getWFContentItemLogObject_log = (uint64_t)v0;

}

id getWFInterchangeLogObject()
{
  if (getWFInterchangeLogObject_onceToken != -1)
    dispatch_once(&getWFInterchangeLogObject_onceToken, &__block_literal_global_12);
  return (id)getWFInterchangeLogObject_log;
}

void __getWFInterchangeLogObject_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create(WFLogSubsystem, "Interchange");
  v1 = (void *)getWFInterchangeLogObject_log;
  getWFInterchangeLogObject_log = (uint64_t)v0;

}

id getWFEditorLogObject()
{
  if (getWFEditorLogObject_onceToken != -1)
    dispatch_once(&getWFEditorLogObject_onceToken, &__block_literal_global_16_1860);
  return (id)getWFEditorLogObject_log;
}

void __getWFEditorLogObject_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create(WFLogSubsystem, "Editor");
  v1 = (void *)getWFEditorLogObject_log;
  getWFEditorLogObject_log = (uint64_t)v0;

}

id getWFFoldersLogObject()
{
  if (getWFFoldersLogObject_onceToken != -1)
    dispatch_once(&getWFFoldersLogObject_onceToken, &__block_literal_global_18);
  return (id)getWFFoldersLogObject_log;
}

void __getWFFoldersLogObject_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create(WFLogSubsystem, "Folders");
  v1 = (void *)getWFFoldersLogObject_log;
  getWFFoldersLogObject_log = (uint64_t)v0;

}

void __getWFWorkflowExecutionLogObject_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create(WFLogSubsystem, "WorkflowExecution");
  v1 = (void *)getWFWorkflowExecutionLogObject_log;
  getWFWorkflowExecutionLogObject_log = (uint64_t)v0;

}

id getWFRunningLifecycleLogObject()
{
  if (getWFRunningLifecycleLogObject_onceToken != -1)
    dispatch_once(&getWFRunningLifecycleLogObject_onceToken, &__block_literal_global_22);
  return (id)getWFRunningLifecycleLogObject_log;
}

void __getWFRunningLifecycleLogObject_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create(WFLogSubsystem, "RunningLifecycle");
  v1 = (void *)getWFRunningLifecycleLogObject_log;
  getWFRunningLifecycleLogObject_log = (uint64_t)v0;

}

id getWFIntentExecutionLogObject()
{
  if (getWFIntentExecutionLogObject_onceToken != -1)
    dispatch_once(&getWFIntentExecutionLogObject_onceToken, &__block_literal_global_24);
  return (id)getWFIntentExecutionLogObject_log;
}

void __getWFIntentExecutionLogObject_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create(WFLogSubsystem, "IntentExecution");
  v1 = (void *)getWFIntentExecutionLogObject_log;
  getWFIntentExecutionLogObject_log = (uint64_t)v0;

}

void __getWFCloudKitSyncLogObject_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create(WFLogSubsystem, "CloudKitSync");
  v1 = (void *)getWFCloudKitSyncLogObject_log;
  getWFCloudKitSyncLogObject_log = (uint64_t)v0;

}

id getWFWatchSyncLogObject()
{
  if (getWFWatchSyncLogObject_onceToken[0] != -1)
    dispatch_once(getWFWatchSyncLogObject_onceToken, &__block_literal_global_28);
  return (id)getWFWatchSyncLogObject_log;
}

void __getWFWatchSyncLogObject_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create(WFLogSubsystem, "WatchSync");
  v1 = (void *)getWFWatchSyncLogObject_log;
  getWFWatchSyncLogObject_log = (uint64_t)v0;

}

id getWFTriggersLogObject()
{
  if (getWFTriggersLogObject_onceToken != -1)
    dispatch_once(&getWFTriggersLogObject_onceToken, &__block_literal_global_30);
  return (id)getWFTriggersLogObject_log;
}

void __getWFTriggersLogObject_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create(WFLogSubsystem, "Triggers");
  v1 = (void *)getWFTriggersLogObject_log;
  getWFTriggersLogObject_log = (uint64_t)v0;

}

id getWFTriggerNotificationsLogObject()
{
  if (getWFTriggerNotificationsLogObject_onceToken != -1)
    dispatch_once(&getWFTriggerNotificationsLogObject_onceToken, &__block_literal_global_32);
  return (id)getWFTriggerNotificationsLogObject_log;
}

void __getWFTriggerNotificationsLogObject_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create(WFLogSubsystem, "TriggerNotifications");
  v1 = (void *)getWFTriggerNotificationsLogObject_log;
  getWFTriggerNotificationsLogObject_log = (uint64_t)v0;

}

id getWFXPCRunnerLogObject()
{
  if (getWFXPCRunnerLogObject_onceToken != -1)
    dispatch_once(&getWFXPCRunnerLogObject_onceToken, &__block_literal_global_34);
  return (id)getWFXPCRunnerLogObject_log;
}

void __getWFXPCRunnerLogObject_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create(WFLogSubsystem, "XPCRunner");
  v1 = (void *)getWFXPCRunnerLogObject_log;
  getWFXPCRunnerLogObject_log = (uint64_t)v0;

}

id getWFPeaceMigrationLogObject()
{
  if (getWFPeaceMigrationLogObject_onceToken != -1)
    dispatch_once(&getWFPeaceMigrationLogObject_onceToken, &__block_literal_global_36_1861);
  return (id)getWFPeaceMigrationLogObject_log;
}

void __getWFPeaceMigrationLogObject_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create(WFLogSubsystem, "PeaceMigration");
  v1 = (void *)getWFPeaceMigrationLogObject_log;
  getWFPeaceMigrationLogObject_log = (uint64_t)v0;

}

id getWFWorkflowMigrationLogObject()
{
  if (getWFWorkflowMigrationLogObject_onceToken != -1)
    dispatch_once(&getWFWorkflowMigrationLogObject_onceToken, &__block_literal_global_38_1862);
  return (id)getWFWorkflowMigrationLogObject_log;
}

void __getWFWorkflowMigrationLogObject_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create(WFLogSubsystem, "WorkflowMigration");
  v1 = (void *)getWFWorkflowMigrationLogObject_log;
  getWFWorkflowMigrationLogObject_log = (uint64_t)v0;

}

id getWFAutomatorMigrationLogObject()
{
  if (getWFAutomatorMigrationLogObject_onceToken != -1)
    dispatch_once(&getWFAutomatorMigrationLogObject_onceToken, &__block_literal_global_40_1863);
  return (id)getWFAutomatorMigrationLogObject_log;
}

void __getWFAutomatorMigrationLogObject_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create(WFLogSubsystem, "AutomatorMigration");
  v1 = (void *)getWFAutomatorMigrationLogObject_log;
  getWFAutomatorMigrationLogObject_log = (uint64_t)v0;

}

void __getWFSpotlightSyncLogObject_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create(WFLogSubsystem, "SpotlightSync");
  v1 = (void *)getWFSpotlightSyncLogObject_log;
  getWFSpotlightSyncLogObject_log = (uint64_t)v0;

}

id getWFEventTrackerLogObject()
{
  if (getWFEventTrackerLogObject_onceToken != -1)
    dispatch_once(&getWFEventTrackerLogObject_onceToken, &__block_literal_global_46);
  return (id)getWFEventTrackerLogObject_log;
}

void __getWFEventTrackerLogObject_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create(WFLogSubsystem, "EventTracker");
  v1 = (void *)getWFEventTrackerLogObject_log;
  getWFEventTrackerLogObject_log = (uint64_t)v0;

}

id getWFHomeLogObject()
{
  if (getWFHomeLogObject_onceToken != -1)
    dispatch_once(&getWFHomeLogObject_onceToken, &__block_literal_global_48);
  return (id)getWFHomeLogObject_log;
}

void __getWFHomeLogObject_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create(WFLogSubsystem, "Home");
  v1 = (void *)getWFHomeLogObject_log;
  getWFHomeLogObject_log = (uint64_t)v0;

}

id getWFRemoteExecutionLogObject()
{
  if (getWFRemoteExecutionLogObject_onceToken != -1)
    dispatch_once(&getWFRemoteExecutionLogObject_onceToken, &__block_literal_global_50);
  return (id)getWFRemoteExecutionLogObject_log;
}

void __getWFRemoteExecutionLogObject_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create(WFLogSubsystem, "RemoteExecution");
  v1 = (void *)getWFRemoteExecutionLogObject_log;
  getWFRemoteExecutionLogObject_log = (uint64_t)v0;

}

id getWFBundledIntentsLogObject()
{
  if (getWFBundledIntentsLogObject_onceToken != -1)
    dispatch_once(&getWFBundledIntentsLogObject_onceToken, &__block_literal_global_52);
  return (id)getWFBundledIntentsLogObject_log;
}

void __getWFBundledIntentsLogObject_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create(WFLogSubsystem, "BundledIntents");
  v1 = (void *)getWFBundledIntentsLogObject_log;
  getWFBundledIntentsLogObject_log = (uint64_t)v0;

}

id getWFDialogLogObject()
{
  if (getWFDialogLogObject_onceToken != -1)
    dispatch_once(&getWFDialogLogObject_onceToken, &__block_literal_global_54);
  return (id)getWFDialogLogObject_log;
}

void __getWFDialogLogObject_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create(WFLogSubsystem, "Dialog");
  v1 = (void *)getWFDialogLogObject_log;
  getWFDialogLogObject_log = (uint64_t)v0;

}

id getWFWidgetLogObject()
{
  if (getWFWidgetLogObject_onceToken != -1)
    dispatch_once(&getWFWidgetLogObject_onceToken, &__block_literal_global_56);
  return (id)getWFWidgetLogObject_log;
}

void __getWFWidgetLogObject_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create(WFLogSubsystem, "Widget");
  v1 = (void *)getWFWidgetLogObject_log;
  getWFWidgetLogObject_log = (uint64_t)v0;

}

id getWFSleepLogObject()
{
  if (getWFSleepLogObject_onceToken != -1)
    dispatch_once(&getWFSleepLogObject_onceToken, &__block_literal_global_58);
  return (id)getWFSleepLogObject_log;
}

void __getWFSleepLogObject_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create(WFLogSubsystem, "Sleep");
  v1 = (void *)getWFSleepLogObject_log;
  getWFSleepLogObject_log = (uint64_t)v0;

}

void __getWFSecurityLogObject_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create(WFLogSubsystem, "Security");
  v1 = (void *)getWFSecurityLogObject_log;
  getWFSecurityLogObject_log = (uint64_t)v0;

}

id getWFContextualActionsLogObject()
{
  if (getWFContextualActionsLogObject_onceToken != -1)
    dispatch_once(&getWFContextualActionsLogObject_onceToken, &__block_literal_global_68);
  return (id)getWFContextualActionsLogObject_log;
}

void __getWFContextualActionsLogObject_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create(WFLogSubsystem, "ContextualActions");
  v1 = (void *)getWFContextualActionsLogObject_log;
  getWFContextualActionsLogObject_log = (uint64_t)v0;

}

id getWFSandboxLogObject()
{
  if (getWFSandboxLogObject_onceToken != -1)
    dispatch_once(&getWFSandboxLogObject_onceToken, &__block_literal_global_70);
  return (id)getWFSandboxLogObject_log;
}

void __getWFSandboxLogObject_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create(WFLogSubsystem, "Sandbox");
  v1 = (void *)getWFSandboxLogObject_log;
  getWFSandboxLogObject_log = (uint64_t)v0;

}

void __getWFAppIntentsLogObject_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create(WFLogSubsystem, "AppIntents");
  v1 = (void *)getWFAppIntentsLogObject_log;
  getWFAppIntentsLogObject_log = (uint64_t)v0;

}

id getWFRunningStateLogObject()
{
  if (getWFRunningStateLogObject_onceToken != -1)
    dispatch_once(&getWFRunningStateLogObject_onceToken, &__block_literal_global_74);
  return (id)getWFRunningStateLogObject_log;
}

void __getWFRunningStateLogObject_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create(WFLogSubsystem, "RunningState");
  v1 = (void *)getWFRunningStateLogObject_log;
  getWFRunningStateLogObject_log = (uint64_t)v0;

}

id getWFStateMachineLogObject()
{
  if (getWFStateMachineLogObject_onceToken != -1)
    dispatch_once(&getWFStateMachineLogObject_onceToken, &__block_literal_global_76);
  return (id)getWFStateMachineLogObject_log;
}

void __getWFStateMachineLogObject_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create(WFLogSubsystem, "StateMachine");
  v1 = (void *)getWFStateMachineLogObject_log;
  getWFStateMachineLogObject_log = (uint64_t)v0;

}

id getWFSessionKitLogObject()
{
  if (getWFSessionKitLogObject_onceToken != -1)
    dispatch_once(&getWFSessionKitLogObject_onceToken, &__block_literal_global_78);
  return (id)getWFSessionKitLogObject_log;
}

void __getWFSessionKitLogObject_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create(WFLogSubsystem, "SessionKit");
  v1 = (void *)getWFSessionKitLogObject_log;
  getWFSessionKitLogObject_log = (uint64_t)v0;

}

id getWFTestHarnessLogObject()
{
  if (getWFTestHarnessLogObject_onceToken != -1)
    dispatch_once(&getWFTestHarnessLogObject_onceToken, &__block_literal_global_80);
  return (id)getWFTestHarnessLogObject_log;
}

void __getWFTestHarnessLogObject_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create(WFLogSubsystem, "TestHarness");
  v1 = (void *)getWFTestHarnessLogObject_log;
  getWFTestHarnessLogObject_log = (uint64_t)v0;

}

id getWFBiomeWritingLogObject()
{
  if (getWFBiomeWritingLogObject_onceToken != -1)
    dispatch_once(&getWFBiomeWritingLogObject_onceToken, &__block_literal_global_82);
  return (id)getWFBiomeWritingLogObject_log;
}

void __getWFBiomeWritingLogObject_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create(WFLogSubsystem, "BiomeWriting");
  v1 = (void *)getWFBiomeWritingLogObject_log;
  getWFBiomeWritingLogObject_log = (uint64_t)v0;

}

id getWFDropletLogObject()
{
  if (getWFDropletLogObject_onceToken != -1)
    dispatch_once(&getWFDropletLogObject_onceToken, &__block_literal_global_86);
  return (id)getWFDropletLogObject_log;
}

void __getWFDropletLogObject_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create(WFLogSubsystem, "Droplet");
  v1 = (void *)getWFDropletLogObject_log;
  getWFDropletLogObject_log = (uint64_t)v0;

}

id getWFWidgetConfigurationLogObject()
{
  if (getWFWidgetConfigurationLogObject_onceToken[0] != -1)
    dispatch_once(getWFWidgetConfigurationLogObject_onceToken, &__block_literal_global_88);
  return (id)getWFWidgetConfigurationLogObject_log;
}

void __getWFWidgetConfigurationLogObject_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create(WFLogSubsystem, "WidgetConfiguration");
  v1 = (void *)getWFWidgetConfigurationLogObject_log;
  getWFWidgetConfigurationLogObject_log = (uint64_t)v0;

}

id getWFSmartShortcutPickerLogObject()
{
  if (getWFSmartShortcutPickerLogObject_onceToken != -1)
    dispatch_once(&getWFSmartShortcutPickerLogObject_onceToken, &__block_literal_global_90);
  return (id)getWFSmartShortcutPickerLogObject_log;
}

void __getWFSmartShortcutPickerLogObject_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create(WFLogSubsystem, "SmartShortcutPicker");
  v1 = (void *)getWFSmartShortcutPickerLogObject_log;
  getWFSmartShortcutPickerLogObject_log = (uint64_t)v0;

}

id getWFTopHitsLogObject()
{
  if (getWFTopHitsLogObject_onceToken != -1)
    dispatch_once(&getWFTopHitsLogObject_onceToken, &__block_literal_global_92);
  return (id)getWFTopHitsLogObject_log;
}

void __getWFTopHitsLogObject_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create(WFLogSubsystem, "TopHits");
  v1 = (void *)getWFTopHitsLogObject_log;
  getWFTopHitsLogObject_log = (uint64_t)v0;

}

id getWFTestingLifecycleLogObject()
{
  if (getWFTestingLifecycleLogObject_onceToken != -1)
    dispatch_once(&getWFTestingLifecycleLogObject_onceToken, &__block_literal_global_94);
  return (id)getWFTestingLifecycleLogObject_log;
}

void __getWFTestingLifecycleLogObject_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create(WFLogSubsystem, "TestingLifecycle");
  v1 = (void *)getWFTestingLifecycleLogObject_log;
  getWFTestingLifecycleLogObject_log = (uint64_t)v0;

}

id getWFToolKitLogObject()
{
  if (getWFToolKitLogObject_onceToken != -1)
    dispatch_once(&getWFToolKitLogObject_onceToken, &__block_literal_global_96);
  return (id)getWFToolKitLogObject_log;
}

void __getWFToolKitLogObject_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create(WFLogSubsystem, "ToolKit");
  v1 = (void *)getWFToolKitLogObject_log;
  getWFToolKitLogObject_log = (uint64_t)v0;

}

id getWFToolKitSyncLogObject()
{
  if (getWFToolKitSyncLogObject_onceToken != -1)
    dispatch_once(&getWFToolKitSyncLogObject_onceToken, &__block_literal_global_98);
  return (id)getWFToolKitSyncLogObject_log;
}

void __getWFToolKitSyncLogObject_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create(WFLogSubsystem, "ToolKitSync");
  v1 = (void *)getWFToolKitSyncLogObject_log;
  getWFToolKitSyncLogObject_log = (uint64_t)v0;

}

id getWFToolKitDatabaseLogObject()
{
  if (getWFToolKitDatabaseLogObject_onceToken != -1)
    dispatch_once(&getWFToolKitDatabaseLogObject_onceToken, &__block_literal_global_100);
  return (id)getWFToolKitDatabaseLogObject_log;
}

void __getWFToolKitDatabaseLogObject_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create(WFLogSubsystem, "ToolKitDatabase");
  v1 = (void *)getWFToolKitDatabaseLogObject_log;
  getWFToolKitDatabaseLogObject_log = (uint64_t)v0;

}

id getWFToolKitIndexingLogObject()
{
  if (getWFToolKitIndexingLogObject_onceToken != -1)
    dispatch_once(&getWFToolKitIndexingLogObject_onceToken, &__block_literal_global_102);
  return (id)getWFToolKitIndexingLogObject_log;
}

void __getWFToolKitIndexingLogObject_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create(WFLogSubsystem, "ToolKitIndexing");
  v1 = (void *)getWFToolKitIndexingLogObject_log;
  getWFToolKitIndexingLogObject_log = (uint64_t)v0;

}

id getWFToolKitRepresentationLogObject()
{
  if (getWFToolKitRepresentationLogObject_onceToken != -1)
    dispatch_once(&getWFToolKitRepresentationLogObject_onceToken, &__block_literal_global_104);
  return (id)getWFToolKitRepresentationLogObject_log;
}

void __getWFToolKitRepresentationLogObject_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create(WFLogSubsystem, "ToolKitRepresentation");
  v1 = (void *)getWFToolKitRepresentationLogObject_log;
  getWFToolKitRepresentationLogObject_log = (uint64_t)v0;

}

id getWFToolKitSchedulerLogObject()
{
  if (getWFToolKitSchedulerLogObject_onceToken != -1)
    dispatch_once(&getWFToolKitSchedulerLogObject_onceToken, &__block_literal_global_106);
  return (id)getWFToolKitSchedulerLogObject_log;
}

void __getWFToolKitSchedulerLogObject_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create(WFLogSubsystem, "ToolKitScheduler");
  v1 = (void *)getWFToolKitSchedulerLogObject_log;
  getWFToolKitSchedulerLogObject_log = (uint64_t)v0;

}

id getWFToolKitExecutionLogObject()
{
  if (getWFToolKitExecutionLogObject_onceToken != -1)
    dispatch_once(&getWFToolKitExecutionLogObject_onceToken, &__block_literal_global_108);
  return (id)getWFToolKitExecutionLogObject_log;
}

void __getWFToolKitExecutionLogObject_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create(WFLogSubsystem, "ToolKitExecution");
  v1 = (void *)getWFToolKitExecutionLogObject_log;
  getWFToolKitExecutionLogObject_log = (uint64_t)v0;

}

id getWFAppShortcutInterpolationLogObject()
{
  if (getWFAppShortcutInterpolationLogObject_onceToken != -1)
    dispatch_once(&getWFAppShortcutInterpolationLogObject_onceToken, &__block_literal_global_110);
  return (id)getWFAppShortcutInterpolationLogObject_log;
}

void __getWFAppShortcutInterpolationLogObject_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create(WFLogSubsystem, "AppShortcutInterpolation");
  v1 = (void *)getWFAppShortcutInterpolationLogObject_log;
  getWFAppShortcutInterpolationLogObject_log = (uint64_t)v0;

}

id getWFActionConfirmationAlertLogObject()
{
  if (getWFActionConfirmationAlertLogObject_onceToken != -1)
    dispatch_once(&getWFActionConfirmationAlertLogObject_onceToken, &__block_literal_global_112);
  return (id)getWFActionConfirmationAlertLogObject_log;
}

void __getWFActionConfirmationAlertLogObject_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create(WFLogSubsystem, "ActionConfirmationAlert");
  v1 = (void *)getWFActionConfirmationAlertLogObject_log;
  getWFActionConfirmationAlertLogObject_log = (uint64_t)v0;

}

void __getWFStaccatoLogObject_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create(WFLogSubsystem, "Staccato");
  v1 = (void *)getWFStaccatoLogObject_log;
  getWFStaccatoLogObject_log = (uint64_t)v0;

}

uint64_t WFLogAriadneSignpostBegin()
{
  return kdebug_trace();
}

uint64_t WFLogAriadneSignpostEnd()
{
  return kdebug_trace();
}

void sub_1AF6F5CAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *__getBiomeLibrarySymbolLoc_block_invoke(_QWORD *a1)
{
  void *v2;
  void *result;
  void *v4;

  if (!BiomeLibraryLibraryCore_frameworkLibrary)
    BiomeLibraryLibraryCore_frameworkLibrary = _sl_dlopen();
  v2 = (void *)BiomeLibraryLibraryCore_frameworkLibrary;
  if (!BiomeLibraryLibraryCore_frameworkLibrary)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    a1 = (_QWORD *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *BiomeLibraryLibrary(void)");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(a1, "handleFailureInFunction:file:lineNumber:description:", v2, CFSTR("WFToggleFocusModeContextualAction.m"), 19, CFSTR("%s"), 0);

    __break(1u);
    free(v4);
  }
  result = dlsym(v2, "BiomeLibrary");
  *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 24) = result;
  getBiomeLibrarySymbolLoc_ptr = *(_UNKNOWN **)(*(_QWORD *)(a1[4] + 8) + 24);
  return result;
}

void sub_1AF6F9944(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a27, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__2540(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__2541(uint64_t a1)
{

}

id WFAppOrExtensionRecordFromBundleIdentifier(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  id v4;
  void *v5;
  id v6;

  v1 = a1;
  v2 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CA5870]), "initWithBundleIdentifier:allowPlaceholder:error:", v1, 0, 0);
  v3 = v2;
  if (v2)
  {
    v4 = v2;
  }
  else
  {
    v5 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CA5848]), "initWithBundleIdentifier:error:", v1, 0);
    v4 = v5;
    if (v5)
      v6 = v5;

  }
  return v4;
}

id WFOutOfProcessWorkflowControllerHostXPCInterface()
{
  void *v0;
  void *v1;
  void *v2;

  objc_msgSend(MEMORY[0x1E0CB3B50], "interfaceWithProtocol:", &unk_1EEE5F160);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C99E60], "setWithObject:", objc_opt_class());
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setClasses:forSelector:argumentIndex:ofReply:", v1, sel_actionWithUUID_didFinishRunningWithError_serializedVariable_executionMetadata_, 2, 0);

  objc_msgSend(MEMORY[0x1E0C99E60], "setWithObject:", objc_opt_class());
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setClasses:forSelector:argumentIndex:ofReply:", v2, sel_actionWithUUID_didFinishRunningWithError_serializedVariable_executionMetadata_, 3, 0);

  return v0;
}

uint64_t WFOutOfProcessWorkflowControllerHostBSProtocol()
{
  return objc_msgSend(MEMORY[0x1E0D017E0], "protocolForProtocol:", &unk_1EEE5F160);
}

id WFOutOfProcessWorkflowControllerVendorXPCInterface()
{
  void *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;

  objc_msgSend(MEMORY[0x1E0CB3B50], "interfaceWithProtocol:", &unk_1EEE60D00);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = (void *)MEMORY[0x1E0C99E60];
  v2 = objc_opt_class();
  objc_msgSend(v1, "setWithObjects:", v2, objc_opt_class(), 0);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setClasses:forSelector:argumentIndex:ofReply:", v3, sel_computeFinderResizedSizesForImages_inSizes_completion_, 0, 0);

  v4 = (void *)MEMORY[0x1E0C99E60];
  v5 = objc_opt_class();
  objc_msgSend(v4, "setWithObjects:", v5, objc_opt_class(), 0);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setClasses:forSelector:argumentIndex:ofReply:", v6, sel_computeFinderResizedSizesForImages_inSizes_completion_, 1, 0);

  v7 = (void *)MEMORY[0x1E0C99E60];
  v8 = objc_opt_class();
  v9 = objc_opt_class();
  v10 = objc_opt_class();
  objc_msgSend(v7, "setWithObjects:", v8, v9, v10, objc_opt_class(), 0);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setClasses:forSelector:argumentIndex:ofReply:", v11, sel_computeFinderResizedSizesForImages_inSizes_completion_, 0, 1);

  return v0;
}

uint64_t WFOutOfProcessWorkflowControllerVendorBSProtocol()
{
  return objc_msgSend(MEMORY[0x1E0D017E0], "protocolForProtocol:", &unk_1EEE60D00);
}

void WFBiomeLibrary()
{
  void (*v0)(void);
  id v1;
  void *v2;
  void *v3;
  _QWORD v4[5];
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  void *v8;

  v5 = 0;
  v6 = &v5;
  v7 = 0x2020000000;
  v0 = (void (*)(void))getBiomeLibrarySymbolLoc_ptr_3071;
  v8 = getBiomeLibrarySymbolLoc_ptr_3071;
  if (!getBiomeLibrarySymbolLoc_ptr_3071)
  {
    v4[0] = MEMORY[0x1E0C809B0];
    v4[1] = 3221225472;
    v4[2] = __getBiomeLibrarySymbolLoc_block_invoke_3072;
    v4[3] = &unk_1E5FC8858;
    v4[4] = &v5;
    __getBiomeLibrarySymbolLoc_block_invoke_3072(v4);
    v0 = (void (*)(void))v6[3];
  }
  _Block_object_dispose(&v5, 8);
  if (v0)
  {
    v0();
    v1 = (id)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "id<BMRootLibrary> WFBiomeLibrary(void)");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("WFToggleSettingContextualAction.m"), 20, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_1AF6FE184(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *__getBiomeLibrarySymbolLoc_block_invoke_3072(_QWORD *a1)
{
  void *v2;
  void *result;
  void *v4;

  if (!BiomeLibraryLibraryCore_frameworkLibrary_3074)
    BiomeLibraryLibraryCore_frameworkLibrary_3074 = _sl_dlopen();
  v2 = (void *)BiomeLibraryLibraryCore_frameworkLibrary_3074;
  if (!BiomeLibraryLibraryCore_frameworkLibrary_3074)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    a1 = (_QWORD *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *BiomeLibraryLibrary(void)");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(a1, "handleFailureInFunction:file:lineNumber:description:", v2, CFSTR("WFToggleSettingContextualAction.m"), 19, CFSTR("%s"), 0);

    __break(1u);
    free(v4);
  }
  result = dlsym(v2, "BiomeLibrary");
  *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 24) = result;
  getBiomeLibrarySymbolLoc_ptr_3071 = *(_UNKNOWN **)(*(_QWORD *)(a1[4] + 8) + 24);
  return result;
}

id WFToggleSettingContextualActions()
{
  void *v0;
  void *v1;
  void *v2;
  int v3;
  id v4;
  NSObject *v5;
  NSObject *v6;
  const char *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint32_t v10;
  _BOOL4 v11;
  void *v12;
  id v14;
  uint8_t buf[4];
  const char *v16;
  __int16 v17;
  id v18;
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v0 = (void *)objc_msgSend(&unk_1E6004090, "mutableCopy");
  +[WFDevice currentDevice](WFDevice, "currentDevice");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "addObjectsFromArray:", &unk_1E60040A8);
  objc_msgSend(v0, "addObjectsFromArray:", &unk_1E60040C0);
  if (objc_msgSend(v1, "hasCapability:", CFSTR("CellularData")))
  {
    +[WFCellularSettings defaultSettings](WFCellularSettings, "defaultSettings");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = 0;
    v3 = objc_msgSend(v2, "isCellularDataCapableWithError:", &v14);
    v4 = v14;
    getWFSpotlightSyncLogObject();
    v5 = objc_claimAutoreleasedReturnValue();
    v6 = v5;
    if (v4)
    {
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 136315394;
        v16 = "WFToggleSettingContextualActions";
        v17 = 2112;
        v18 = v4;
        v7 = "%s Unable to get cellular data capability: %@";
        v8 = v6;
        v9 = OS_LOG_TYPE_ERROR;
        v10 = 22;
LABEL_11:
        _os_log_impl(&dword_1AF681000, v8, v9, v7, buf, v10);
      }
    }
    else
    {
      v11 = os_log_type_enabled(v5, OS_LOG_TYPE_INFO);
      if (v3)
      {
        if (v11)
        {
          *(_DWORD *)buf = 136315138;
          v16 = "WFToggleSettingContextualActions";
          _os_log_impl(&dword_1AF681000, v6, OS_LOG_TYPE_INFO, "%s Device is cellular data capable, indexing toggle", buf, 0xCu);
        }

        objc_msgSend(v0, "addObject:", &unk_1E5FFEDA0);
        goto LABEL_13;
      }
      if (v11)
      {
        *(_DWORD *)buf = 136315138;
        v16 = "WFToggleSettingContextualActions";
        v7 = "%s Device is not cellular data capable, not indexing toggle";
        v8 = v6;
        v9 = OS_LOG_TYPE_INFO;
        v10 = 12;
        goto LABEL_11;
      }
    }

LABEL_13:
  }
  if (objc_msgSend(v1, "hasCapability:", CFSTR("AlwaysOnDisplay")))
    objc_msgSend(v0, "addObject:", &unk_1E5FFEDB8);
  if (objc_msgSend(v1, "hasCapability:", CFSTR("TrueTone")))
    objc_msgSend(v0, "addObject:", &unk_1E5FFEDD0);
  if (objc_msgSend(v1, "hasCapability:", CFSTR("NightShift")))
    objc_msgSend(v0, "addObject:", &unk_1E5FFEDE8);
  if ((objc_msgSend(v1, "hasCapability:", CFSTR("HardwareRingerSwitch")) & 1) == 0)
    objc_msgSend(v0, "addObject:", &unk_1E5FFEE00);
  objc_msgSend(v0, "if_compactMap:", &__block_literal_global_3204);
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  return v12;
}

void *ImageIOLibrary()
{
  void *v0;
  void *v2;
  void *v3;

  if (!ImageIOLibraryCore_frameworkLibrary)
    ImageIOLibraryCore_frameworkLibrary = _sl_dlopen();
  v0 = (void *)ImageIOLibraryCore_frameworkLibrary;
  if (!ImageIOLibraryCore_frameworkLibrary)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *ImageIOLibrary(void)");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v2, CFSTR("WFImage.m"), 39, CFSTR("%s"), 0);

    __break(1u);
    free(v3);
  }
  return v0;
}

void soft_CGImageSourceCopyProperties(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  void *v9;

  v6 = 0;
  v7 = &v6;
  v8 = 0x2020000000;
  v2 = getCGImageSourceCopyPropertiesSymbolLoc_ptr;
  v9 = getCGImageSourceCopyPropertiesSymbolLoc_ptr;
  if (!getCGImageSourceCopyPropertiesSymbolLoc_ptr)
  {
    v3 = ImageIOLibrary();
    v2 = dlsym(v3, "CGImageSourceCopyProperties");
    v7[3] = (uint64_t)v2;
    getCGImageSourceCopyPropertiesSymbolLoc_ptr = v2;
  }
  _Block_object_dispose(&v6, 8);
  if (v2)
  {
    ((void (*)(uint64_t, _QWORD))v2)(a1, 0);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "CFDictionaryRef  _Nullable soft_CGImageSourceCopyProperties(CGImageSourceRef _Nonnull, CFDictionaryRef _Nullable)");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("WFImage.m"), 43, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_1AF701E84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void getkCGImagePropertyOrientation()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (void *)getkCGImagePropertyOrientationSymbolLoc_ptr;
  v7 = getkCGImagePropertyOrientationSymbolLoc_ptr;
  if (!getkCGImagePropertyOrientationSymbolLoc_ptr)
  {
    v1 = ImageIOLibrary();
    v0 = dlsym(v1, "kCGImagePropertyOrientation");
    v5[3] = (uint64_t)v0;
    getkCGImagePropertyOrientationSymbolLoc_ptr = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "CFStringRef getkCGImagePropertyOrientation(void)");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("WFImage.m"), 47, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_1AF701F7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *WFGlyphCharactersInSection(uint64_t a1)
{
  void *v1;

  v1 = &unk_1E60040D8;
  if (a1 == 1)
    v1 = &unk_1E60040F0;
  if (a1 == 2)
    return &unk_1E6004108;
  else
    return v1;
}

id WFNameForGlyphCharacter(int a1)
{
  void *v1;
  __CFString *v2;
  void *v3;
  __CFString *v4;
  __CFString *v5;

  v1 = 0;
  switch(a1)
  {
    case 61440:
      v2 = CFSTR("Shortcuts Icon");
      goto LABEL_569;
    case 61441:
    case 61443:
    case 61445:
    case 61451:
    case 61462:
    case 61463:
    case 61469:
    case 61479:
    case 61485:
    case 61492:
    case 61493:
    case 61513:
    case 61516:
    case 61517:
    case 61526:
    case 61527:
    case 61530:
    case 61531:
    case 61570:
    case 61573:
    case 61576:
    case 61580:
    case 61582:
    case 61583:
    case 61585:
    case 61589:
    case 61594:
    case 61595:
    case 61596:
    case 61597:
    case 61598:
    case 61599:
    case 61600:
    case 61601:
    case 61602:
    case 61603:
    case 61604:
    case 61605:
    case 61606:
    case 61607:
    case 61608:
    case 61609:
    case 61610:
    case 61611:
    case 61612:
    case 61613:
    case 61614:
    case 61615:
    case 61616:
    case 61617:
    case 61618:
    case 61619:
    case 61620:
    case 61621:
    case 61622:
    case 61623:
    case 61624:
    case 61625:
    case 61626:
    case 61627:
    case 61628:
    case 61629:
    case 61630:
    case 61631:
    case 61632:
    case 61633:
    case 61634:
    case 61635:
    case 61636:
    case 61637:
    case 61638:
    case 61639:
    case 61640:
    case 61641:
    case 61642:
    case 61643:
    case 61644:
    case 61645:
    case 61646:
    case 61647:
    case 61648:
    case 61649:
    case 61650:
    case 61651:
    case 61652:
    case 61653:
    case 61654:
    case 61655:
    case 61656:
    case 61657:
    case 61658:
    case 61659:
    case 61660:
    case 61661:
    case 61662:
    case 61663:
    case 61664:
    case 61665:
    case 61666:
    case 61667:
    case 61668:
    case 61669:
    case 61670:
    case 61671:
    case 61672:
    case 61673:
    case 61674:
    case 61675:
    case 61676:
    case 61677:
    case 61678:
    case 61679:
    case 61680:
    case 61681:
    case 61682:
    case 61683:
    case 61684:
    case 61685:
    case 61686:
    case 61687:
    case 61688:
    case 61689:
    case 61690:
    case 61691:
    case 61692:
    case 61693:
    case 61694:
    case 61695:
    case 61706:
    case 61707:
    case 61708:
    case 61709:
    case 61710:
    case 61711:
    case 61722:
    case 61723:
    case 61724:
    case 61725:
    case 61726:
    case 61727:
    case 61738:
    case 61739:
    case 61740:
    case 61741:
    case 61742:
    case 61743:
    case 61754:
    case 61755:
    case 61756:
    case 61757:
    case 61758:
    case 61759:
    case 61770:
    case 61771:
    case 61772:
    case 61773:
    case 61774:
    case 61775:
    case 61786:
    case 61787:
    case 61788:
    case 61789:
    case 61790:
    case 61791:
    case 61802:
    case 61803:
    case 61804:
    case 61805:
    case 61806:
    case 61807:
    case 61818:
    case 61819:
    case 61820:
    case 61821:
    case 61822:
    case 61823:
    case 61834:
    case 61835:
    case 61836:
    case 61837:
    case 61838:
    case 61839:
    case 61850:
    case 61851:
    case 61852:
    case 61853:
    case 61854:
    case 61855:
    case 61856:
    case 61857:
    case 61858:
    case 61859:
    case 61860:
    case 61861:
    case 61862:
    case 61863:
    case 61864:
    case 61865:
    case 61866:
    case 61867:
    case 61868:
    case 61869:
    case 61870:
    case 61871:
    case 61872:
    case 61873:
    case 61874:
    case 61875:
    case 61876:
    case 61877:
    case 61878:
    case 61879:
    case 61880:
    case 61881:
    case 61882:
    case 61883:
    case 61884:
    case 61885:
    case 61886:
    case 61887:
    case 61888:
    case 61889:
    case 61890:
    case 61891:
    case 61892:
    case 61893:
    case 61894:
    case 61895:
    case 61896:
    case 61897:
    case 61898:
    case 61899:
    case 61900:
    case 61901:
    case 61902:
    case 61903:
    case 61904:
    case 61905:
    case 61906:
    case 61907:
    case 61908:
    case 61909:
    case 61910:
    case 61911:
    case 61912:
    case 61913:
    case 61914:
    case 61915:
    case 61916:
    case 61917:
    case 61918:
    case 61919:
    case 61920:
    case 61921:
    case 61922:
    case 61923:
    case 61924:
    case 61925:
    case 61926:
    case 61927:
    case 61928:
    case 61929:
    case 61930:
    case 61931:
    case 61932:
    case 61933:
    case 61934:
    case 61935:
    case 61936:
    case 61937:
    case 61938:
    case 61939:
    case 61940:
    case 61941:
    case 61942:
    case 61943:
    case 61944:
    case 61945:
    case 61946:
    case 61947:
    case 61948:
    case 61949:
    case 61950:
    case 61951:
    case 61962:
    case 61963:
    case 61964:
    case 61965:
    case 61966:
    case 61967:
    case 61978:
    case 61979:
    case 61980:
    case 61981:
    case 61982:
    case 61983:
    case 61994:
    case 61995:
    case 61996:
    case 61997:
    case 61998:
    case 61999:
    case 62010:
    case 62011:
    case 62012:
    case 62013:
    case 62014:
    case 62015:
    case 62026:
    case 62027:
    case 62028:
    case 62029:
    case 62030:
    case 62031:
    case 62032:
    case 62042:
    case 62043:
    case 62044:
    case 62045:
    case 62046:
    case 62047:
    case 62058:
    case 62059:
    case 62060:
    case 62061:
    case 62062:
    case 62063:
    case 62074:
    case 62075:
    case 62076:
    case 62077:
    case 62078:
    case 62079:
    case 62090:
    case 62091:
    case 62092:
    case 62093:
    case 62094:
    case 62095:
    case 62106:
    case 62107:
    case 62108:
    case 62109:
    case 62110:
    case 62111:
    case 62112:
    case 62113:
    case 62114:
    case 62115:
    case 62116:
    case 62117:
    case 62118:
    case 62119:
    case 62120:
    case 62121:
    case 62122:
    case 62123:
    case 62124:
    case 62125:
    case 62126:
    case 62127:
    case 62128:
    case 62129:
    case 62130:
    case 62131:
    case 62132:
    case 62133:
    case 62134:
    case 62135:
    case 62136:
    case 62137:
    case 62138:
    case 62139:
    case 62140:
    case 62141:
    case 62142:
    case 62143:
    case 62144:
    case 62145:
    case 62146:
    case 62147:
    case 62148:
    case 62149:
    case 62150:
    case 62151:
    case 62152:
    case 62153:
    case 62154:
    case 62155:
    case 62156:
    case 62157:
    case 62158:
    case 62159:
    case 62160:
    case 62161:
    case 62162:
    case 62163:
    case 62164:
    case 62165:
    case 62166:
    case 62167:
    case 62168:
    case 62169:
    case 62170:
    case 62171:
    case 62172:
    case 62173:
    case 62174:
    case 62175:
    case 62176:
    case 62177:
    case 62178:
    case 62179:
    case 62180:
    case 62181:
    case 62182:
    case 62183:
    case 62184:
    case 62185:
    case 62186:
    case 62187:
    case 62188:
    case 62189:
    case 62190:
    case 62191:
    case 62192:
    case 62193:
    case 62194:
    case 62195:
    case 62196:
    case 62197:
    case 62198:
    case 62199:
    case 62200:
    case 62201:
    case 62202:
    case 62203:
    case 62204:
    case 62205:
    case 62206:
    case 62207:
      return v1;
    case 61442:
      v2 = CFSTR("Book Closed");
      goto LABEL_569;
    case 61444:
      v2 = CFSTR("Map");
      goto LABEL_569;
    case 61446:
      v2 = CFSTR("Car Multiple");
      goto LABEL_569;
    case 61447:
      v2 = CFSTR("Bolt Car");
      goto LABEL_569;
    case 61448:
      v2 = CFSTR("Bus Double Decker");
      goto LABEL_569;
    case 61449:
      v2 = CFSTR("Tram");
      goto LABEL_569;
    case 61450:
      v2 = CFSTR("Tram Tunnel");
      goto LABEL_569;
    case 61452:
      v2 = CFSTR("Gauge");
      goto LABEL_569;
    case 61453:
      v2 = CFSTR("Speedometer");
      goto LABEL_569;
    case 61454:
      v2 = CFSTR("Barometer");
      goto LABEL_569;
    case 61455:
      v2 = CFSTR("Network");
      goto LABEL_569;
    case 61456:
      v2 = CFSTR("Rectangle Stack");
      goto LABEL_569;
    case 61457:
      v2 = CFSTR("Square Stack");
      goto LABEL_569;
    case 61458:
      v2 = CFSTR("3D Square Stack");
      goto LABEL_569;
    case 61459:
      v2 = CFSTR("Photo Stack");
      goto LABEL_569;
    case 61460:
      v2 = CFSTR("Photo Stack Angled");
      goto LABEL_569;
    case 61461:
      v2 = CFSTR("Camera Aperture");
      goto LABEL_569;
    case 61464:
      v2 = CFSTR("Note Icon");
      goto LABEL_569;
    case 61465:
      v2 = CFSTR("Note Text");
      goto LABEL_569;
    case 61466:
      v2 = CFSTR("Note Text Badge Plus");
      goto LABEL_569;
    case 61467:
      v2 = CFSTR("Send Message");
      goto LABEL_569;
    case 61468:
      v2 = CFSTR("Add Message");
      goto LABEL_569;
    case 61470:
      v2 = CFSTR("Speaker Wave2");
      goto LABEL_569;
    case 61471:
      v2 = CFSTR("Speaker Wave3");
      goto LABEL_569;
    case 61472:
      v2 = CFSTR("Speaker Slash");
      goto LABEL_569;
    case 61473:
      v2 = CFSTR("Speaker");
      goto LABEL_569;
    case 61474:
      v2 = CFSTR("TV And Hi-Fi Speaker");
      goto LABEL_569;
    case 61475:
      v2 = CFSTR("EarPods");
      goto LABEL_569;
    case 61476:
      v2 = CFSTR("AirPods");
      goto LABEL_569;
    case 61477:
      v2 = CFSTR("AirPods Pro");
      goto LABEL_569;
    case 61478:
      v2 = CFSTR("Hi-Fi Speaker");
      goto LABEL_569;
    case 61480:
      v2 = CFSTR("Radio");
      goto LABEL_569;
    case 61481:
      v2 = CFSTR("Hearing Aid");
      goto LABEL_569;
    case 61482:
      v2 = CFSTR("Apple TV");
      goto LABEL_569;
    case 61483:
      v2 = CFSTR("HomePod");
      goto LABEL_569;
    case 61484:
      v2 = CFSTR("Apple Watch Waves");
      goto LABEL_569;
    case 61486:
      v2 = CFSTR("iPhone Icon");
      goto LABEL_569;
    case 61487:
      v2 = CFSTR("iPhone Radio Waves");
      goto LABEL_569;
    case 61488:
      v2 = CFSTR("iPhone Apps");
      goto LABEL_569;
    case 61489:
      v2 = CFSTR("iPad Icon");
      goto LABEL_569;
    case 61490:
      v2 = CFSTR("iPad Landscape");
      goto LABEL_569;
    case 61491:
      v2 = CFSTR("iPod");
      goto LABEL_569;
    case 61494:
      v2 = CFSTR("Person Run Motion");
      goto LABEL_569;
    case 61495:
      v2 = CFSTR("Noise Cancellation");
      goto LABEL_569;
    case 61496:
      v2 = CFSTR("Transparency");
      goto LABEL_569;
    case 61497:
      v2 = CFSTR("Directions Arrow Diamond");
      goto LABEL_569;
    case 61498:
      v2 = CFSTR("Directions Arrow");
      goto LABEL_569;
    case 61499:
      v2 = CFSTR("AirPlay Audio");
      goto LABEL_569;
    case 61500:
      v2 = CFSTR("AirPlay Video");
      goto LABEL_569;
    case 61501:
      v2 = CFSTR("AirDrop");
      goto LABEL_569;
    case 61502:
      v2 = CFSTR("Music Note List");
      goto LABEL_569;
    case 61503:
      v2 = CFSTR("Music Note");
      goto LABEL_569;
    case 61504:
      v2 = CFSTR("Music Square Stack");
      goto LABEL_569;
    case 61505:
      v2 = CFSTR("Music Waveform Path");
      goto LABEL_569;
    case 61506:
      v2 = CFSTR("Music Live Photo Play");
      goto LABEL_569;
    case 61507:
      v2 = CFSTR("Music Live Photo");
      goto LABEL_569;
    case 61508:
      v2 = CFSTR("Slowmo");
      goto LABEL_569;
    case 61509:
      v2 = CFSTR("Timelapse");
      goto LABEL_569;
    case 61510:
      v2 = CFSTR("Calendar Badge Plus");
      goto LABEL_569;
    case 61511:
      v2 = CFSTR("Calendar Badge Exclamation");
      goto LABEL_569;
    case 61512:
      v2 = CFSTR("Timer");
      goto LABEL_569;
    case 61514:
      v2 = CFSTR("Compose");
      goto LABEL_569;
    case 61515:
      v2 = CFSTR("Duplicate");
      goto LABEL_569;
    case 61518:
      v2 = CFSTR("Night Shift");
      goto LABEL_569;
    case 61519:
      v2 = CFSTR("True Tone");
      goto LABEL_569;
    case 61520:
      v2 = CFSTR("Dial Min");
      goto LABEL_569;
    case 61521:
      v2 = CFSTR("Dial Max");
      goto LABEL_569;
    case 61522:
      v2 = CFSTR("QR Code Viewfinder");
      goto LABEL_569;
    case 61523:
      v2 = CFSTR("Camera Viewfinder");
      goto LABEL_569;
    case 61524:
      v2 = CFSTR("Wallet Pass");
      goto LABEL_569;
    case 61525:
      v2 = CFSTR("Appearance");
      goto LABEL_569;
    case 61528:
      v2 = CFSTR("No Sign");
      goto LABEL_569;
    case 61529:
      v2 = CFSTR("Command");
      goto LABEL_569;
    case 61532:
      v2 = CFSTR("Brain Head Profile");
      goto LABEL_569;
    case 61533:
      v2 = CFSTR("Brain");
      goto LABEL_569;
    case 61534:
      v2 = CFSTR("Grinning Face");
      goto LABEL_569;
    case 61535:
      v2 = CFSTR("Face Smiling With Smiling Eyes");
      goto LABEL_569;
    case 61536:
      v2 = CFSTR("Face Grinning With Squinting Eyes");
      goto LABEL_569;
    case 61537:
      v2 = CFSTR("Face With Tears Of Joy");
      goto LABEL_569;
    case 61538:
      v2 = CFSTR("Face Rolling On The Floor Laughing");
      goto LABEL_569;
    case 61539:
      v2 = CFSTR("Face Winking With Stuck Out Tongue");
      goto LABEL_569;
    case 61540:
      v2 = CFSTR("Face Grimacing");
      goto LABEL_569;
    case 61541:
      v2 = CFSTR("Face Smiling With Heart Eyes");
      goto LABEL_569;
    case 61542:
      v2 = CFSTR("Face Blowing A Kiss");
      goto LABEL_569;
    case 61543:
      v2 = CFSTR("Face Smiling With Hearts");
      goto LABEL_569;
    case 61544:
      v2 = CFSTR("Face Smiling With Sunglasses");
      goto LABEL_569;
    case 61545:
      v2 = CFSTR("Face With Starry Eyes");
      goto LABEL_569;
    case 61546:
      v2 = CFSTR("Memoji");
      goto LABEL_569;
    case 61547:
      v2 = CFSTR("Thumbs Up Emoji");
      goto LABEL_569;
    case 61548:
      v2 = CFSTR("Peace Hand Sign");
      goto LABEL_569;
    case 61549:
      v2 = CFSTR("Love You Gesture");
      goto LABEL_569;
    case 61550:
      v2 = CFSTR("Closed Fist");
      goto LABEL_569;
    case 61551:
      v2 = CFSTR("Face Mask");
      goto LABEL_569;
    case 61552:
      v2 = CFSTR("One Prong Puzzle Piece");
      goto LABEL_569;
    case 61553:
      v2 = CFSTR("Take Out Bag And Cup");
      goto LABEL_569;
    case 61554:
      v2 = CFSTR("Bear");
      goto LABEL_569;
    case 61555:
      v2 = CFSTR("Tiger");
      goto LABEL_569;
    case 61556:
      v2 = CFSTR("Monkey");
      goto LABEL_569;
    case 61557:
      v2 = CFSTR("Ram");
      goto LABEL_569;
    case 61558:
      v2 = CFSTR("Rabbit");
      goto LABEL_569;
    case 61559:
      v2 = CFSTR("Snake");
      goto LABEL_569;
    case 61560:
      v2 = CFSTR("Chicken");
      goto LABEL_569;
    case 61561:
      v2 = CFSTR("Pig");
      goto LABEL_569;
    case 61562:
      v2 = CFSTR("Mouse");
      goto LABEL_569;
    case 61563:
      v2 = CFSTR("Cow");
      goto LABEL_569;
    case 61564:
      v2 = CFSTR("Dragon");
      goto LABEL_569;
    case 61565:
      v2 = CFSTR("Alien Monster");
      goto LABEL_569;
    case 61566:
      v2 = CFSTR("Robot");
      goto LABEL_569;
    case 61567:
      v2 = CFSTR("Ghost");
      goto LABEL_569;
    case 61568:
      v2 = CFSTR("Pile Of Poop");
      goto LABEL_569;
    case 61569:
      v2 = CFSTR("Skull");
      goto LABEL_569;
    case 61571:
      v2 = CFSTR("Folder With Gear");
      goto LABEL_569;
    case 61572:
      v2 = CFSTR("2×2 Rectangle Grid");
      goto LABEL_569;
    case 61574:
      v2 = CFSTR("Rectangle Split In Two");
      goto LABEL_569;
    case 61575:
      v2 = CFSTR("Rectangle Split In Three");
      goto LABEL_569;
    case 61577:
      v2 = CFSTR("Cartoon Heart");
      goto LABEL_569;
    case 61578:
      v2 = CFSTR("Two Cartoon Hearts");
      goto LABEL_569;
    case 61579:
      v2 = CFSTR("Star Half Filled");
      goto LABEL_569;
    case 61581:
      v2 = CFSTR("Sparkles");
      goto LABEL_569;
    case 61584:
      v2 = CFSTR("Hand Raised With Slash");
      goto LABEL_569;
    case 61586:
      v2 = CFSTR("Waveform");
      goto LABEL_569;
    case 61587:
      v2 = CFSTR("Checklist");
      goto LABEL_569;
    case 61588:
      v2 = CFSTR("Text Box");
      goto LABEL_569;
    case 61590:
      v2 = CFSTR("Eraser");
      goto LABEL_569;
    case 61591:
      v2 = CFSTR("Scribble Variable");
      goto LABEL_569;
    case 61592:
      v2 = CFSTR("Pencil And Scribble");
      goto LABEL_569;
    case 61593:
      v2 = CFSTR("Clipboard Alternate");
      goto LABEL_569;
    case 61696:
      v2 = CFSTR("List Bullet Clipboard");
      goto LABEL_569;
    case 61697:
      v2 = CFSTR("Rich Text Page News Article");
      goto LABEL_569;
    case 61698:
      v2 = CFSTR("Text Page");
      goto LABEL_569;
    case 61699:
      v2 = CFSTR("Append Page");
      goto LABEL_569;
    case 61700:
      v2 = CFSTR("Apple Terminal");
      goto LABEL_569;
    case 61701:
      v2 = CFSTR("Calendar Badge Clock");
      goto LABEL_569;
    case 61702:
      v2 = CFSTR("Calendar Badge Minus");
      goto LABEL_569;
    case 61703:
      v2 = CFSTR("Calendar Badge Checkmark");
      goto LABEL_569;
    case 61704:
      v2 = CFSTR("Quicknote");
      goto LABEL_569;
    case 61705:
      v2 = CFSTR("Menucard");
      goto LABEL_569;
    case 61712:
      v2 = CFSTR("Magazine");
      goto LABEL_569;
    case 61713:
      v2 = CFSTR("Photo Artframe");
      goto LABEL_569;
    case 61714:
      v2 = CFSTR("Figure Wave");
      goto LABEL_569;
    case 61715:
      v2 = CFSTR("Dumbbell");
      goto LABEL_569;
    case 61716:
      v2 = CFSTR("Sportscourt");
      goto LABEL_569;
    case 61717:
      v2 = CFSTR("Tennis Racket");
      goto LABEL_569;
    case 61718:
      v2 = CFSTR("Skateboard");
      goto LABEL_569;
    case 61719:
      v2 = CFSTR("Duffle Bag");
      goto LABEL_569;
    case 61720:
      v2 = CFSTR("Apple Classical");
      goto LABEL_569;
    case 61721:
      v2 = CFSTR("Bluetooth");
      goto LABEL_569;
    case 61728:
      v2 = CFSTR("Flag2 Crossed");
      goto LABEL_569;
    case 61729:
      v2 = CFSTR("Flag Checkered2 Crossed");
      goto LABEL_569;
    case 61730:
      v2 = CFSTR("X Squareroot");
      goto LABEL_569;
    case 61731:
      v2 = CFSTR("Flashlight On");
      goto LABEL_569;
    case 61732:
      v2 = CFSTR("Flashlight Slash");
      goto LABEL_569;
    case 61733:
      v2 = CFSTR("Paintpalette");
      goto LABEL_569;
    case 61734:
      v2 = CFSTR("Mail Stack");
      goto LABEL_569;
    case 61735:
      v2 = CFSTR("Mail");
      goto LABEL_569;
    case 61736:
      v2 = CFSTR("Gearshape");
      goto LABEL_569;
    case 61737:
      v2 = CFSTR("Gearshape2");
      goto LABEL_569;
    case 61744:
      v2 = CFSTR("Signature");
      goto LABEL_569;
    case 61745:
      v2 = CFSTR("Wallet");
      goto LABEL_569;
    case 61746:
      v2 = CFSTR("Metronome  ");
      goto LABEL_569;
    case 61747:
      v2 = CFSTR("Numbers");
      goto LABEL_569;
    case 61748:
      v2 = CFSTR("Pianokeys Inverse");
      goto LABEL_569;
    case 61749:
      v2 = CFSTR("Paintbrush Pointed  ");
      goto LABEL_569;
    case 61750:
      v2 = CFSTR("Applescript  ");
      goto LABEL_569;
    case 61751:
      v2 = CFSTR("Scroll");
      goto LABEL_569;
    case 61752:
      v2 = CFSTR("Scanner");
      goto LABEL_569;
    case 61753:
      v2 = CFSTR("Handbag Alternate");
      goto LABEL_569;
    case 61760:
      v2 = CFSTR("Suitcase Rolling");
      goto LABEL_569;
    case 61761:
      v2 = CFSTR("Homekit");
      goto LABEL_569;
    case 61762:
      v2 = CFSTR("Building Columns");
      goto LABEL_569;
    case 61763:
      v2 = CFSTR("Lamp Desk");
      goto LABEL_569;
    case 61764:
      v2 = CFSTR("Lamp Ceiling");
      goto LABEL_569;
    case 61765:
      v2 = CFSTR("Fan Floor");
      goto LABEL_569;
    case 61766:
      v2 = CFSTR("Fan");
      goto LABEL_569;
    case 61767:
      v2 = CFSTR("Fan Ceiling");
      goto LABEL_569;
    case 61768:
      v2 = CFSTR("Lamp Floor");
      goto LABEL_569;
    case 61769:
      v2 = CFSTR("Powerplug");
      goto LABEL_569;
    case 61776:
      v2 = CFSTR("Balloon");
      goto LABEL_569;
    case 61777:
      v2 = CFSTR("Regatta Sailboat");
      goto LABEL_569;
    case 61778:
      v2 = CFSTR("Fireworks");
      goto LABEL_569;
    case 61779:
      v2 = CFSTR("Party Popper");
      goto LABEL_569;
    case 61780:
      v2 = CFSTR("Popcorn");
      goto LABEL_569;
    case 61781:
      v2 = CFSTR("Frying Pan");
      goto LABEL_569;
    case 61782:
      v2 = CFSTR("Sofa");
      goto LABEL_569;
    case 61783:
      v2 = CFSTR("Torus");
      goto LABEL_569;
    case 61784:
      v2 = CFSTR("Macintosh Classic");
      goto LABEL_569;
    case 61785:
      v2 = CFSTR("Finder");
      goto LABEL_569;
    case 61792:
      v2 = CFSTR("Watch Analog");
      goto LABEL_569;
    case 61793:
      v2 = CFSTR("Applewatch Side Right");
      goto LABEL_569;
    case 61794:
      v2 = CFSTR("Mediastick");
      goto LABEL_569;
    case 61795:
      v2 = CFSTR("Tv");
      goto LABEL_569;
    case 61796:
      v2 = CFSTR("Shazam Logo");
      goto LABEL_569;
    case 61797:
      v2 = CFSTR("Guitars");
      goto LABEL_569;
    case 61798:
      v2 = CFSTR("Moped");
      goto LABEL_569;
    case 61799:
      v2 = CFSTR("Scooter");
      goto LABEL_569;
    case 61800:
      v2 = CFSTR("Stroller");
      goto LABEL_569;
    case 61801:
      v2 = CFSTR("Comb");
      goto LABEL_569;
    case 61808:
      v2 = CFSTR("Horn");
      goto LABEL_569;
    case 61809:
      v2 = CFSTR("Tortoise");
      goto LABEL_569;
    case 61810:
      v2 = CFSTR("Hare");
      goto LABEL_569;
    case 61811:
      v2 = CFSTR("Dog Alternate");
      goto LABEL_569;
    case 61812:
      v2 = CFSTR("Cat Alternate");
      goto LABEL_569;
    case 61813:
      v2 = CFSTR("Lizard");
      goto LABEL_569;
    case 61814:
      v2 = CFSTR("Bird");
      goto LABEL_569;
    case 61815:
      v2 = CFSTR("Ant");
      goto LABEL_569;
    case 61816:
      v2 = CFSTR("Ladybug");
      goto LABEL_569;
    case 61817:
      v2 = CFSTR("Function");
      goto LABEL_569;
    case 61824:
      v2 = CFSTR("Percent");
      goto LABEL_569;
    case 61825:
      v2 = CFSTR("Teddybear");
      goto LABEL_569;
    case 61826:
      v2 = CFSTR("Leaf");
      goto LABEL_569;
    case 61827:
      v2 = CFSTR("Text Format Characters");
      goto LABEL_569;
    case 61828:
      v2 = CFSTR("Crown");
      goto LABEL_569;
    case 61829:
      v2 = CFSTR("Movieclapper");
      goto LABEL_569;
    case 61830:
      v2 = CFSTR("Text Format");
      goto LABEL_569;
    case 61831:
      v2 = CFSTR("Film Stack");
      goto LABEL_569;
    case 61832:
      v2 = CFSTR("Text Format Size");
      goto LABEL_569;
    case 61833:
      v2 = CFSTR("Text Format Superscript");
      goto LABEL_569;
    case 61840:
      v2 = CFSTR("Text Format Subscript");
      goto LABEL_569;
    case 61841:
      v2 = CFSTR("Sum");
      goto LABEL_569;
    case 61842:
      v2 = CFSTR("Compass Drawing");
      goto LABEL_569;
    case 61843:
      v2 = CFSTR("Angle");
      goto LABEL_569;
    case 61844:
      v2 = CFSTR("Bold Italic Underline");
      goto LABEL_569;
    case 61845:
      v2 = CFSTR("Characters Lowercase");
      goto LABEL_569;
    case 61846:
      v2 = CFSTR("Characters Uppercase");
      goto LABEL_569;
    case 61847:
      v2 = CFSTR("Vision Pro Headset V R");
      goto LABEL_569;
    case 61848:
      v2 = CFSTR("Low Battery");
      goto LABEL_569;
    case 61849:
      v2 = CFSTR("Charging Charge Battery");
      goto LABEL_569;
    case 61952:
      v2 = CFSTR("X");
      goto LABEL_569;
    case 61953:
      v2 = CFSTR("Left Arrow");
      goto LABEL_569;
    case 61954:
      v2 = CFSTR("Right Arrow");
      goto LABEL_569;
    case 61955:
      v2 = CFSTR("Up Arrow");
      goto LABEL_569;
    case 61956:
      v2 = CFSTR("Down Arrow");
      goto LABEL_569;
    case 61957:
      v2 = CFSTR("Medical Thermometer Temperature");
      goto LABEL_569;
    case 61958:
      v2 = CFSTR("Calendar Person");
      goto LABEL_569;
    case 61959:
      v2 = CFSTR("Calendar Chart");
      goto LABEL_569;
    case 61960:
      v2 = CFSTR("Person Contact Magnifying Glass");
      goto LABEL_569;
    case 61961:
      v2 = CFSTR("Journal");
      goto LABEL_569;
    case 61968:
      v2 = CFSTR("Figure Run Treadmill");
      goto LABEL_569;
    case 61969:
      v2 = CFSTR("Figure Walk Treadmill");
      goto LABEL_569;
    case 61970:
      v2 = CFSTR("Figure Ice Skating");
      goto LABEL_569;
    case 61971:
      v2 = CFSTR("Degrees Celsius Temperature");
      goto LABEL_569;
    case 61972:
      v2 = CFSTR("Degrees Farenheit Temperature");
      goto LABEL_569;
    case 61973:
      v2 = CFSTR("Fire Extinguisher");
      goto LABEL_569;
    case 61974:
      v2 = CFSTR("Wallet Bifold");
      goto LABEL_569;
    case 61975:
      +[WFDevice currentDevice](WFDevice, "currentDevice");
      v3 = (void *)objc_claimAutoreleasedReturnValue();
      if ((objc_msgSend(v3, "hasCapability:", CFSTR("WAPI")) & 1) != 0)
      {
        v4 = CFSTR("House WLAN (Glyph)");
        v5 = CFSTR("House WLAN");
      }
      else
      {
        v4 = CFSTR("House WiFi (Glyph)");
        v5 = CFSTR("House WiFi");
      }
LABEL_573:
      WFLocalizedStringWithKey(v4, v5);
      v1 = (void *)objc_claimAutoreleasedReturnValue();

      return v1;
    case 61976:
      v2 = CFSTR("Keys Ring");
      goto LABEL_569;
    case 61977:
      v2 = CFSTR("Wheelchair");
      goto LABEL_569;
    case 61984:
      v2 = CFSTR("Helmet");
      goto LABEL_569;
    case 61985:
      v2 = CFSTR("Coat");
      goto LABEL_569;
    case 61986:
      v2 = CFSTR("Jacket");
      goto LABEL_569;
    case 61987:
      v2 = CFSTR("Heart Clipboard Doctor");
      goto LABEL_569;
    case 61988:
      v2 = CFSTR("Humidity");
      goto LABEL_569;
    case 61989:
      v2 = CFSTR("Sparkes Stars");
      goto LABEL_569;
    case 61990:
      v2 = CFSTR("Moon Haze");
      goto LABEL_569;
    case 61991:
      v2 = CFSTR("Moon Stars");
      goto LABEL_569;
    case 61992:
      v2 = CFSTR("Cloud Hail");
      goto LABEL_569;
    case 61993:
      v2 = CFSTR("Cloud Sleet");
      goto LABEL_569;
    case 62000:
      v2 = CFSTR("Cloud Bolt");
      goto LABEL_569;
    case 62001:
      v2 = CFSTR("Cloud Bolt Rain");
      goto LABEL_569;
    case 62002:
      v2 = CFSTR("Cloud Sun");
      goto LABEL_569;
    case 62003:
      v2 = CFSTR("Cloud Sun Rain");
      goto LABEL_569;
    case 62004:
      v2 = CFSTR("Cloud Sun Bolt");
      goto LABEL_569;
    case 62005:
      v2 = CFSTR("Cloud Moon");
      goto LABEL_569;
    case 62006:
      v2 = CFSTR("Cloud Moon Rain");
      goto LABEL_569;
    case 62007:
      v2 = CFSTR("Cloud Moon Bolt");
      goto LABEL_569;
    case 62008:
      v2 = CFSTR("Wind");
      goto LABEL_569;
    case 62009:
      v2 = CFSTR("Wind Snow");
      goto LABEL_569;
    case 62016:
      v2 = CFSTR("Tornado Twister");
      goto LABEL_569;
    case 62017:
      v2 = CFSTR("Thermometer Sun");
      goto LABEL_569;
    case 62018:
      v2 = CFSTR("Thermometer Snowflake");
      goto LABEL_569;
    case 62019:
      v2 = CFSTR("Sunset");
      goto LABEL_569;
    case 62020:
      v2 = CFSTR("Sunrise");
      goto LABEL_569;
    case 62021:
      v2 = CFSTR("Airplane Departure");
      goto LABEL_569;
    case 62022:
      v2 = CFSTR("Airplane Arrival");
      goto LABEL_569;
    case 62023:
      v2 = CFSTR("Cablecar");
      goto LABEL_569;
    case 62024:
      v2 = CFSTR("Lightrail");
      goto LABEL_569;
    case 62025:
      v2 = CFSTR("Ferry Boat");
      goto LABEL_569;
    case 62033:
      v2 = CFSTR("Box Truck");
      goto LABEL_569;
    case 62034:
      v2 = CFSTR("Ev Charger");
      goto LABEL_569;
    case 62035:
      v2 = CFSTR("Road Lanes");
      goto LABEL_569;
    case 62036:
      v2 = CFSTR("Checkered Flag");
      goto LABEL_569;
    case 62037:
      v2 = CFSTR("Arcade Stick Console");
      goto LABEL_569;
    case 62038:
      v2 = CFSTR("Gearshift Manual Six Speed Transmission");
      goto LABEL_569;
    case 62039:
      v2 = CFSTR("Phone Game Controller");
      goto LABEL_569;
    case 62040:
      v2 = CFSTR("Arcade Joystick Controller");
      goto LABEL_569;
    case 62041:
      v2 = CFSTR("Personal Hotspot");
      goto LABEL_569;
    case 62048:
      v2 = CFSTR("Bolt");
      goto LABEL_569;
    case 62049:
      v2 = CFSTR("Satellite");
      goto LABEL_569;
    case 62050:
      v2 = CFSTR("Usb");
      goto LABEL_569;
    case 62051:
      v2 = CFSTR("Bonjour Networking");
      goto LABEL_569;
    case 62052:
      v2 = CFSTR("Hdmi Port");
      goto LABEL_569;
    case 62053:
      v2 = CFSTR("Thunderbolt Port");
      goto LABEL_569;
    case 62054:
      v2 = CFSTR("Usb C Port");
      goto LABEL_569;
    case 62055:
      v2 = CFSTR("Usb A Port");
      goto LABEL_569;
    case 62056:
      v2 = CFSTR("Usb B Port");
      goto LABEL_569;
    case 62057:
      v2 = CFSTR("Ethernet Port");
      goto LABEL_569;
    case 62064:
      v2 = CFSTR("Vga Port");
      goto LABEL_569;
    case 62065:
      v2 = CFSTR("Thunderbolt");
      goto LABEL_569;
    case 62066:
      v2 = CFSTR("Firewire");
      goto LABEL_569;
    case 62067:
      v2 = CFSTR("Ethernet");
      goto LABEL_569;
    case 62068:
      v2 = CFSTR("Antenna Radiowaves");
      goto LABEL_569;
    case 62069:
      v2 = CFSTR("Oven");
      goto LABEL_569;
    case 62070:
      v2 = CFSTR("Microwave");
      goto LABEL_569;
    case 62071:
      v2 = CFSTR("Refrigerator");
      goto LABEL_569;
    case 62072:
      v2 = CFSTR("Toilet");
      goto LABEL_569;
    case 62073:
      v2 = CFSTR("Light Bulb Led");
      goto LABEL_569;
    case 62080:
      v2 = CFSTR("Light Bulb Led Alternate");
      goto LABEL_569;
    case 62081:
      v2 = CFSTR("Person Archery");
      goto LABEL_569;
    case 62082:
      v2 = CFSTR("Person Basketball");
      goto LABEL_569;
    case 62083:
      v2 = CFSTR("Person Climbing");
      goto LABEL_569;
    case 62084:
      v2 = CFSTR("Person Stretch Cooldown");
      goto LABEL_569;
    case 62085:
      v2 = CFSTR("Person Core Training");
      goto LABEL_569;
    case 62086:
      v2 = CFSTR("Person Curling");
      goto LABEL_569;
    case 62087:
      v2 = CFSTR("Person Elliptical");
      goto LABEL_569;
    case 62088:
      v2 = CFSTR("Person Fencing");
      goto LABEL_569;
    case 62089:
      v2 = CFSTR("Person Gymnastics");
      goto LABEL_569;
    case 62096:
      v2 = CFSTR("Person Interval Training");
      goto LABEL_569;
    case 62097:
      v2 = CFSTR("Person Hockey");
      goto LABEL_569;
    case 62098:
      v2 = CFSTR("Person Ice Hockey");
      goto LABEL_569;
    case 62099:
      v2 = CFSTR("Person Indoor Cycle");
      goto LABEL_569;
    case 62100:
      v2 = CFSTR("Person Cycle Bike");
      goto LABEL_569;
    case 62101:
      v2 = CFSTR("Person Rowing");
      goto LABEL_569;
    case 62102:
      v2 = CFSTR("Person Skateboarding");
      goto LABEL_569;
    case 62103:
      v2 = CFSTR("Person Ice Skating");
      goto LABEL_569;
    case 62104:
      v2 = CFSTR("Person Stair Stepper");
      goto LABEL_569;
    case 62105:
      v2 = CFSTR("Medal");
      goto LABEL_569;
    case 62208:
      v2 = CFSTR("Fossil Shell");
      goto LABEL_569;
    case 62209:
      v2 = CFSTR("3D Move");
      goto LABEL_569;
    case 62210:
      v2 = CFSTR("Hat Cap");
      goto LABEL_569;
    case 62211:
      v2 = CFSTR("Book Wrench");
      goto LABEL_569;
    case 62212:
      v2 = CFSTR("Key Radiowaves");
LABEL_569:
      WFLocalizedString(v2);
      v1 = (void *)objc_claimAutoreleasedReturnValue();
      break;
    default:
      switch(a1)
      {
        case 59392:
          v2 = CFSTR("Ellipsis");
          goto LABEL_569;
        case 59395:
          v2 = CFSTR("Dollar Sign With Line");
          goto LABEL_569;
        case 59402:
          v2 = CFSTR("Movie Camera");
          goto LABEL_569;
        case 59403:
          v2 = CFSTR("Message Bubbles");
          goto LABEL_569;
        case 59405:
          v2 = CFSTR("Twelve Squares");
          goto LABEL_569;
        case 59412:
          v2 = CFSTR("Globe");
          goto LABEL_569;
        case 59414:
          v2 = CFSTR("Chat Bubble");
          goto LABEL_569;
        case 59436:
          v2 = CFSTR("Laptop");
          goto LABEL_569;
        case 59437:
          v2 = CFSTR("Person");
          goto LABEL_569;
        case 59445:
          v2 = CFSTR("List");
          goto LABEL_569;
        case 59446:
          v2 = CFSTR("Keyboard");
          goto LABEL_569;
        case 59448:
          v2 = CFSTR("Pound Sign");
          goto LABEL_569;
        case 59452:
          v2 = CFSTR("Car");
          goto LABEL_569;
        case 59454:
          v2 = CFSTR("Target");
          goto LABEL_569;
        case 59456:
          v2 = CFSTR("Football");
          goto LABEL_569;
        case 59459:
          v2 = CFSTR("Cloud Service");
          goto LABEL_569;
        case 59465:
          v2 = CFSTR("Open Book");
          goto LABEL_569;
        case 59468:
          v2 = CFSTR("Flower");
          goto LABEL_569;
        case 59489:
          v2 = CFSTR("Battery");
          goto LABEL_569;
        case 59497:
        case 59732:
          v2 = CFSTR("Feed");
          goto LABEL_569;
        case 59508:
          v2 = CFSTR("Play");
          goto LABEL_569;
        case 59511:
          v2 = CFSTR("Magic Wand With Stars");
          goto LABEL_569;
        case 59512:
          v2 = CFSTR("Euro Sign");
          goto LABEL_569;
        case 59514:
          v2 = CFSTR("Yen Sign");
          goto LABEL_569;
        case 59515:
          v2 = CFSTR("Bitcoin Symbol");
          goto LABEL_569;
        case 59516:
          v2 = CFSTR("Loading Indicator");
          goto LABEL_569;
        case 59519:
          v2 = CFSTR("Database Cylinder Stack");
          goto LABEL_569;
        case 59648:
          v2 = CFSTR("Airplane");
          goto LABEL_569;
        case 59649:
          v2 = CFSTR("Alarm Clock");
          goto LABEL_569;
        case 59650:
          v2 = CFSTR("Alert Triangle");
          goto LABEL_569;
        case 59651:
          v2 = CFSTR("Alien");
          goto LABEL_569;
        case 59652:
          v2 = CFSTR("Ambulance");
          goto LABEL_569;
        case 59653:
          v2 = CFSTR("Archive");
          goto LABEL_569;
        case 59654:
          v2 = CFSTR("Arrow Curved Left");
          goto LABEL_569;
        case 59655:
          v2 = CFSTR("Arrow Curved Right");
          goto LABEL_569;
        case 59656:
          v2 = CFSTR("Asterisk");
          goto LABEL_569;
        case 59657:
          v2 = CFSTR("Atom");
          goto LABEL_569;
        case 59658:
          v2 = CFSTR("Baby");
          goto LABEL_569;
        case 59659:
          v2 = CFSTR("Baby 2");
          goto LABEL_569;
        case 59660:
          v2 = CFSTR("Bandage");
          goto LABEL_569;
        case 59661:
          v2 = CFSTR("Barcode");
          goto LABEL_569;
        case 59662:
          v2 = CFSTR("Bar Graph");
          goto LABEL_569;
        case 59663:
          v2 = CFSTR("Baseball");
          goto LABEL_569;
        case 59664:
          v2 = CFSTR("Basketball");
          goto LABEL_569;
        case 59665:
          v2 = CFSTR("Bathtub");
          goto LABEL_569;
        case 59666:
          v2 = CFSTR("Bed");
          goto LABEL_569;
        case 59667:
          v2 = CFSTR("Bell");
          goto LABEL_569;
        case 59668:
          v2 = CFSTR("Bicycle");
          goto LABEL_569;
        case 59669:
          v2 = CFSTR("Binoculars");
          goto LABEL_569;
        case 59670:
          v2 = CFSTR("Bookmark");
          goto LABEL_569;
        case 59671:
          v2 = CFSTR("Bookshelf");
          goto LABEL_569;
        case 59672:
          v2 = CFSTR("Book With Sash");
          goto LABEL_569;
        case 59673:
          v2 = CFSTR("Box Filled");
          goto LABEL_569;
        case 59675:
          v2 = CFSTR("Braille");
          goto LABEL_569;
        case 59676:
          v2 = CFSTR("Briefcase");
          goto LABEL_569;
        case 59677:
          v2 = CFSTR("Buildings");
          goto LABEL_569;
        case 59678:
          v2 = CFSTR("Bus");
          goto LABEL_569;
        case 59679:
          v2 = CFSTR("Cake");
          goto LABEL_569;
        case 59680:
          v2 = CFSTR("Calculator");
          goto LABEL_569;
        case 59681:
          v2 = CFSTR("Calendar");
          goto LABEL_569;
        case 59682:
          v2 = CFSTR("Camera");
          goto LABEL_569;
        case 59683:
          v2 = CFSTR("Carrot");
          goto LABEL_569;
        case 59684:
          v2 = CFSTR("Cat");
          goto LABEL_569;
        case 59685:
          v2 = CFSTR("Chain Link");
          goto LABEL_569;
        case 59686:
          v2 = CFSTR("Chemical");
          goto LABEL_569;
        case 59687:
          v2 = CFSTR("Child");
          goto LABEL_569;
        case 59688:
          v2 = CFSTR("Church");
          goto LABEL_569;
        case 59690:
          v2 = CFSTR("Checkmark");
          goto LABEL_569;
        case 59692:
          v2 = CFSTR("Down Chevron Arrow");
          goto LABEL_569;
        case 59693:
          v2 = CFSTR("Download Arrow");
          goto LABEL_569;
        case 59695:
          v2 = CFSTR("Fast Forward");
          goto LABEL_569;
        case 59696:
          v2 = CFSTR("Left Chevron Arrow");
          goto LABEL_569;
        case 59697:
          v2 = CFSTR("Info");
          goto LABEL_569;
        case 59698:
          v2 = CFSTR("Circled Pi Symbol");
          goto LABEL_569;
        case 59700:
          v2 = CFSTR("Plus");
          goto LABEL_569;
        case 59702:
          v2 = CFSTR("Power");
          goto LABEL_569;
        case 59703:
          v2 = CFSTR("Question Mark");
          goto LABEL_569;
        case 59704:
          v2 = CFSTR("Rewind");
          goto LABEL_569;
        case 59705:
          v2 = CFSTR("Right Chevron Arrow");
          goto LABEL_569;
        case 59706:
          v2 = CFSTR("Stop");
          goto LABEL_569;
        case 59707:
          v2 = CFSTR("Up Chevron Arrow");
          goto LABEL_569;
        case 59708:
          v2 = CFSTR("Upload Arrow");
          goto LABEL_569;
        case 59711:
          v2 = CFSTR("Clipboard glyph");
          goto LABEL_569;
        case 59712:
          v2 = CFSTR("Clock");
          goto LABEL_569;
        case 59713:
          v2 = CFSTR("Clothes Hanger");
          goto LABEL_569;
        case 59714:
          v2 = CFSTR("Cloud");
          goto LABEL_569;
        case 59715:
          v2 = CFSTR("Cloud Raining");
          goto LABEL_569;
        case 59716:
          v2 = CFSTR("Color Dropper");
          goto LABEL_569;
        case 59717:
          v2 = CFSTR("Web Compass");
          goto LABEL_569;
        case 59718:
          v2 = CFSTR("Connected Share Dots");
          goto LABEL_569;
        case 59719:
          v2 = CFSTR("Credit Card");
          goto LABEL_569;
        case 59720:
          v2 = CFSTR("Crop");
          goto LABEL_569;
        case 59721:
          v2 = CFSTR("Cube");
          goto LABEL_569;
        case 59722:
          v2 = CFSTR("Server");
          goto LABEL_569;
        case 59723:
          v2 = CFSTR("Dice");
          goto LABEL_569;
        case 59724:
          v2 = CFSTR("Directions Signs");
          goto LABEL_569;
        case 59725:
          v2 = CFSTR("Document");
          goto LABEL_569;
        case 59726:
          v2 = CFSTR("Document Filled");
          goto LABEL_569;
        case 59728:
          v2 = CFSTR("Dog");
          goto LABEL_569;
        case 59729:
          v2 = CFSTR("Quote Bubble");
          goto LABEL_569;
        case 59730:
          v2 = CFSTR("Drama Masks");
          goto LABEL_569;
        case 59731:
          v2 = CFSTR("Evergreen Tree");
          goto LABEL_569;
        case 59733:
          v2 = CFSTR("Filmstrip");
          goto LABEL_569;
        case 59734:
          v2 = CFSTR("Fire");
          goto LABEL_569;
        case 59735:
          v2 = CFSTR("Fish");
          goto LABEL_569;
        case 59736:
          v2 = CFSTR("Flag");
          goto LABEL_569;
        case 59737:
          v2 = CFSTR("Folder");
          goto LABEL_569;
        case 59738:
          v2 = CFSTR("Footprints");
          goto LABEL_569;
        case 59739:
          v2 = CFSTR("Four Squares");
          goto LABEL_569;
        case 59740:
          v2 = CFSTR("Fruit");
          goto LABEL_569;
        case 59741:
          v2 = CFSTR("Fuel Station");
          goto LABEL_569;
        case 59742:
          v2 = CFSTR("Game Controller");
          goto LABEL_569;
        case 59743:
          v2 = CFSTR("Gears");
          goto LABEL_569;
        case 59744:
          v2 = CFSTR("Gift");
          goto LABEL_569;
        case 59745:
          v2 = CFSTR("Glasses");
          goto LABEL_569;
        case 59746:
          v2 = CFSTR("Graduate Cap");
          goto LABEL_569;
        case 59747:
          v2 = CFSTR("Grocery Store");
          goto LABEL_569;
        case 59748:
          v2 = CFSTR("Hammer");
          goto LABEL_569;
        case 59749:
          v2 = CFSTR("Hammer And Wrench");
          goto LABEL_569;
        case 59750:
          v2 = CFSTR("Handbag");
          goto LABEL_569;
        case 59751:
          v2 = CFSTR("Hand With Spread Fingers");
          goto LABEL_569;
        case 59752:
          v2 = CFSTR("Hard Drive");
          goto LABEL_569;
        case 59753:
          v2 = CFSTR("Headphones");
          goto LABEL_569;
        case 59754:
          v2 = CFSTR("Heart");
          goto LABEL_569;
        case 59755:
          v2 = CFSTR("Home");
          goto LABEL_569;
        case 59756:
          v2 = CFSTR("Horse");
          goto LABEL_569;
        case 59757:
          v2 = CFSTR("Hourglass");
          goto LABEL_569;
        case 59758:
          v2 = CFSTR("Infinity");
          goto LABEL_569;
        case 59759:
          v2 = CFSTR("Inhaler");
          goto LABEL_569;
        case 59760:
          v2 = CFSTR("Key");
          goto LABEL_569;
        case 59761:
          v2 = CFSTR("Laundry Machine");
          goto LABEL_569;
        case 59762:
          v2 = CFSTR("Life Preserver");
          goto LABEL_569;
        case 59763:
          v2 = CFSTR("Light Bulb");
          goto LABEL_569;
        case 59764:
          v2 = CFSTR("Lightning Bolt");
          goto LABEL_569;
        case 59767:
          v2 = CFSTR("Loading Indicator");
          goto LABEL_569;
        case 59768:
          v2 = CFSTR("Location Arrow");
          goto LABEL_569;
        case 59769:
          v2 = CFSTR("Location Pin");
          goto LABEL_569;
        case 59770:
          v2 = CFSTR("Lock");
          goto LABEL_569;
        case 59771:
          v2 = CFSTR("Magic Wand");
          goto LABEL_569;
        case 59772:
          v2 = CFSTR("Magnifying Glass");
          goto LABEL_569;
        case 59773:
          v2 = CFSTR("Mail Envelope");
          goto LABEL_569;
        case 59774:
          v2 = CFSTR("Mail Envelope Open");
          goto LABEL_569;
        case 59775:
          v2 = CFSTR("Man");
          goto LABEL_569;
        case 59776:
          v2 = CFSTR("Martini Glass");
          goto LABEL_569;
        case 59777:
          v2 = CFSTR("Masquerade Mask");
          goto LABEL_569;
        case 59778:
          v2 = CFSTR("Medicine Bottle");
          goto LABEL_569;
        case 59779:
          v2 = CFSTR("Message Bubble");
          goto LABEL_569;
        case 59780:
          v2 = CFSTR("Microphone");
          goto LABEL_569;
        case 59781:
          v2 = CFSTR("Microscope");
          goto LABEL_569;
        case 59782:
          v2 = CFSTR("Moon");
          goto LABEL_569;
        case 59783:
          v2 = CFSTR("Motorcycle");
          goto LABEL_569;
        case 59784:
          v2 = CFSTR("Mountain Picture");
          goto LABEL_569;
        case 59785:
          v2 = CFSTR("Mountains");
          goto LABEL_569;
        case 59786:
          v2 = CFSTR("Move Arrows");
          goto LABEL_569;
        case 59788:
          v2 = CFSTR("Movie Ticket");
          goto LABEL_569;
        case 59789:
          v2 = CFSTR("Mug");
          goto LABEL_569;
        case 59790:
          v2 = CFSTR("Music Beamed Eighth Notes");
          goto LABEL_569;
        case 59792:
          v2 = CFSTR("Stove");
          goto LABEL_569;
        case 59793:
          v2 = CFSTR("Paintbrush");
          goto LABEL_569;
        case 59794:
          v2 = CFSTR("Paper Clip");
          goto LABEL_569;
        case 59795:
          v2 = CFSTR("Parking Symbol");
          goto LABEL_569;
        case 59796:
          v2 = CFSTR("Pawprint");
          goto LABEL_569;
        case 59797:
          v2 = CFSTR("Peace Sign");
          goto LABEL_569;
        case 59798:
          v2 = CFSTR("Pencil");
          goto LABEL_569;
        case 59799:
          v2 = CFSTR("People Three Overlapping");
          goto LABEL_569;
        case 59800:
          v2 = CFSTR("People Two Overlapping");
          goto LABEL_569;
        case 59801:
          v2 = CFSTR("Person");
          goto LABEL_569;
        case 59802:
          v2 = CFSTR("Person At Podium");
          goto LABEL_569;
        case 59803:
          v2 = CFSTR("Person Dancing");
          goto LABEL_569;
        case 59804:
          v2 = CFSTR("Person Giving Speech");
          goto LABEL_569;
        case 59805:
          v2 = CFSTR("Person Hiking");
          goto LABEL_569;
        case 59806:
          v2 = CFSTR("Person In Wheelchair");
          goto LABEL_569;
        case 59807:
          v2 = CFSTR("Person Lifting Weight");
          goto LABEL_569;
        case 59808:
          v2 = CFSTR("Person Running");
          goto LABEL_569;
        case 59809:
          v2 = CFSTR("Person Skiing");
          goto LABEL_569;
        case 59810:
          v2 = CFSTR("Person Snowboarding");
          goto LABEL_569;
        case 59811:
          v2 = CFSTR("Person Swimming");
          goto LABEL_569;
        case 59812:
          v2 = CFSTR("Person Walking");
          goto LABEL_569;
        case 59813:
          v2 = CFSTR("Person Walking With Cane");
          goto LABEL_569;
        case 59814:
          v2 = CFSTR("Phone");
          goto LABEL_569;
        case 59815:
          v2 = CFSTR("Pills");
          goto LABEL_569;
        case 59816:
          v2 = CFSTR("Podcasts");
          goto LABEL_569;
        case 59817:
          v2 = CFSTR("Printer");
          goto LABEL_569;
        case 59818:
          v2 = CFSTR("Two Prong Puzzle Piece");
          goto LABEL_569;
        case 59819:
          v2 = CFSTR("QR Code");
          goto LABEL_569;
        case 59820:
          v2 = CFSTR("Recycle");
          goto LABEL_569;
        case 59821:
          v2 = CFSTR("Repost Arrows");
          goto LABEL_569;
        case 59822:
          v2 = CFSTR("Rocket");
          goto LABEL_569;
        case 59823:
          v2 = CFSTR("Sailboat");
          goto LABEL_569;
        case 59824:
          v2 = CFSTR("Scissors");
          goto LABEL_569;
        case 59825:
          v2 = CFSTR("Screwdriver");
          goto LABEL_569;
        case 59826:
          v2 = CFSTR("Network Storage");
          goto LABEL_569;
        case 59827:
          v2 = CFSTR("Shirt");
          goto LABEL_569;
        case 59828:
          v2 = CFSTR("Shopping Cart");
          goto LABEL_569;
        case 59829:
          v2 = CFSTR("Shower");
          goto LABEL_569;
        case 59830:
          v2 = CFSTR("Shrink Arrows");
          goto LABEL_569;
        case 59832:
          v2 = CFSTR("Shuffle Arrows");
          goto LABEL_569;
        case 59833:
          v2 = CFSTR("Sliders");
          goto LABEL_569;
        case 59834:
          v2 = CFSTR("Smiley Face");
          goto LABEL_569;
        case 59835:
          v2 = CFSTR("Snowflake");
          goto LABEL_569;
        case 59836:
          v2 = CFSTR("Soaring Paper Airplane");
          goto LABEL_569;
        case 59837:
          v2 = CFSTR("Soccer Ball");
          goto LABEL_569;
        case 59838:
          v2 = CFSTR("Sparkling Bell");
          goto LABEL_569;
        case 59839:
          v2 = CFSTR("Speaker Wave1");
          goto LABEL_569;
        case 59840:
          v2 = CFSTR("Staircase");
          goto LABEL_569;
        case 59841:
          v2 = CFSTR("Star");
          goto LABEL_569;
        case 59842:
          v2 = CFSTR("Steaming Bowl");
          goto LABEL_569;
        case 59843:
          v2 = CFSTR("Stethoscope");
          goto LABEL_569;
        case 59844:
          v2 = CFSTR("Stopwatch");
          goto LABEL_569;
        case 59845:
          v2 = CFSTR("Sun");
          goto LABEL_569;
        case 59846:
          v2 = CFSTR("Sync Arrows");
          goto LABEL_569;
        case 59847:
          v2 = CFSTR("Syringe");
          goto LABEL_569;
        case 59848:
          v2 = CFSTR("Tag");
          goto LABEL_569;
        case 59849:
          v2 = CFSTR("Target");
          goto LABEL_569;
        case 59850:
          v2 = CFSTR("Telescope");
          goto LABEL_569;
        case 59851:
          v2 = CFSTR("Television");
          goto LABEL_569;
        case 59852:
          v2 = CFSTR("Tennis Ball");
          goto LABEL_569;
        case 59853:
          v2 = CFSTR("Text Symbol");
          goto LABEL_569;
        case 59854:
          v2 = CFSTR("Thermometer");
          goto LABEL_569;
        case 59856:
          v2 = CFSTR("Three Overlapping Circles");
          goto LABEL_569;
        case 59857:
          v2 = CFSTR("Thumbs Up");
          goto LABEL_569;
        case 59859:
          v2 = CFSTR("Trash");
          goto LABEL_569;
        case 59860:
          v2 = CFSTR("Trophy");
          goto LABEL_569;
        case 59861:
          v2 = CFSTR("Umbrella");
          goto LABEL_569;
        case 59862:
          v2 = CFSTR("Unlock");
          goto LABEL_569;
        case 59863:
          v2 = CFSTR("Utensils");
          goto LABEL_569;
        case 59864:
          v2 = CFSTR("Video Symbol");
          goto LABEL_569;
        case 59865:
          v2 = CFSTR("Watch");
          goto LABEL_569;
        case 59866:
          v2 = CFSTR("Water Drop");
          goto LABEL_569;
        case 59867:
          +[WFDevice currentDevice](WFDevice, "currentDevice");
          v3 = (void *)objc_claimAutoreleasedReturnValue();
          if ((objc_msgSend(v3, "hasCapability:", CFSTR("WAPI")) & 1) != 0)
          {
            v4 = CFSTR("WLAN (Glyph)");
            v5 = CFSTR("WLAN");
          }
          else
          {
            v4 = CFSTR("Wi-Fi (Glyph)");
            v5 = CFSTR("Wi-Fi");
          }
          goto LABEL_573;
        case 59868:
          v2 = CFSTR("Wine Bottle");
          goto LABEL_569;
        case 59870:
          v2 = CFSTR("Wrench");
          goto LABEL_569;
        default:
          return v1;
      }
  }
  return v1;
}

void sub_1AF704E88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  _Block_object_dispose(&a31, 8);
  _Unwind_Resume(a1);
}

void __getWFFileTypeClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  ContentKitLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("WFFileType");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getWFFileTypeClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class  _Nonnull getWFFileTypeClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("WFContextualActionRunRequest.m"), 24, CFSTR("Unable to find class %s"), "WFFileType");

    __break(1u);
  }
}

void __getWFFileRepresentationClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  ContentKitLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("WFFileRepresentation");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getWFFileRepresentationClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class  _Nonnull getWFFileRepresentationClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("WFContextualActionRunRequest.m"), 45, CFSTR("Unable to find class %s"), "WFFileRepresentation");

    __break(1u);
  }
}

void __getWFContentCollectionClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  ContentKitLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("WFContentCollection");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getWFContentCollectionClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class  _Nonnull getWFContentCollectionClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("WFContextualActionRunRequest.m"), 56, CFSTR("Unable to find class %s"), "WFContentCollection");

    __break(1u);
  }
}

void __getWFContentLocationClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  ContentKitLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("WFContentLocation");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getWFContentLocationClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class  _Nonnull getWFContentLocationClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("WFContextualActionRunRequest.m"), 50, CFSTR("Unable to find class %s"), "WFContentLocation");

    __break(1u);
  }
}

void ContentKitLibrary()
{
  void *v0;
  void *v1;
  void *v2;

  if (!ContentKitLibraryCore_frameworkLibrary)
    ContentKitLibraryCore_frameworkLibrary = _sl_dlopen();
  if (!ContentKitLibraryCore_frameworkLibrary)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *ContentKitLibrary(void)");
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("WFContextualActionRunRequest.m"), 16, CFSTR("%s"), 0);

    __break(1u);
    free(v2);
  }
}

void sub_1AF70757C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __getLNAutoShortcutClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  LinkServicesLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("LNAutoShortcut");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getLNAutoShortcutClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getLNAutoShortcutClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("WFAutoShortcutContextualAction.m"), 27, CFSTR("Unable to find class %s"), "LNAutoShortcut");

    __break(1u);
  }
}

void __getLNAutoShortcutLocalizedPhraseClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  LinkServicesLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("LNAutoShortcutLocalizedPhrase");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getLNAutoShortcutLocalizedPhraseClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getLNAutoShortcutLocalizedPhraseClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("WFAutoShortcutContextualAction.m"), 28, CFSTR("Unable to find class %s"), "LNAutoShortcutLocalizedPhrase");

    __break(1u);
  }
}

void LinkServicesLibrary()
{
  void *v0;
  void *v1;
  void *v2;

  if (!LinkServicesLibraryCore_frameworkLibrary)
    LinkServicesLibraryCore_frameworkLibrary = _sl_dlopen();
  if (!LinkServicesLibraryCore_frameworkLibrary)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *LinkServicesLibrary(void)");
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("WFAutoShortcutContextualAction.m"), 26, CFSTR("%s"), 0);

    __break(1u);
    free(v2);
  }
}

BOOL WFContextualActionIconDisplayStyleForLNImageDisplayStyle(uint64_t a1)
{
  return a1 != 0;
}

void sub_1AF708FEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getPDCPreflightManagerClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  void *v4;
  void *v5;

  if (!PrivacyDisclosureCoreLibraryCore_frameworkLibrary)
    PrivacyDisclosureCoreLibraryCore_frameworkLibrary = _sl_dlopen();
  if (!PrivacyDisclosureCoreLibraryCore_frameworkLibrary)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *PrivacyDisclosureCoreLibrary(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("WFSystemActionRunnerClient.m"), 42, CFSTR("%s"), 0);

    goto LABEL_8;
  }
  result = objc_getClass("PDCPreflightManager");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getPDCPreflightManagerClass(void)_block_invoke");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("WFSystemActionRunnerClient.m"), 43, CFSTR("Unable to find class %s"), "PDCPreflightManager");

LABEL_8:
    __break(1u);
  }
  getPDCPreflightManagerClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void __getFBSOpenApplicationServiceClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  FrontBoardServicesLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("FBSOpenApplicationService");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getFBSOpenApplicationServiceClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getFBSOpenApplicationServiceClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("WFSystemActionRunnerClient.m"), 27, CFSTR("Unable to find class %s"), "FBSOpenApplicationService");

    __break(1u);
  }
}

void *__getSBSOpenApplicationLaunchOriginActionButtonSymbolLoc_block_invoke(_QWORD *a1)
{
  void *v2;
  void *result;
  void *v4;

  if (!SpringBoardServicesLibraryCore_frameworkLibrary)
    SpringBoardServicesLibraryCore_frameworkLibrary = _sl_dlopen();
  v2 = (void *)SpringBoardServicesLibraryCore_frameworkLibrary;
  if (!SpringBoardServicesLibraryCore_frameworkLibrary)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    a1 = (_QWORD *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *SpringBoardServicesLibrary(void)");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(a1, "handleFailureInFunction:file:lineNumber:description:", v2, CFSTR("WFSystemActionRunnerClient.m"), 31, CFSTR("%s"), 0);

    __break(1u);
    free(v4);
  }
  result = dlsym(v2, "SBSOpenApplicationLaunchOriginActionButton");
  *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 24) = result;
  getSBSOpenApplicationLaunchOriginActionButtonSymbolLoc_ptr = *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 24);
  return result;
}

void *FrontBoardServicesLibrary()
{
  void *v0;
  void *v2;
  void *v3;

  if (!FrontBoardServicesLibraryCore_frameworkLibrary)
    FrontBoardServicesLibraryCore_frameworkLibrary = _sl_dlopen();
  v0 = (void *)FrontBoardServicesLibraryCore_frameworkLibrary;
  if (!FrontBoardServicesLibraryCore_frameworkLibrary)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *FrontBoardServicesLibrary(void)");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v2, CFSTR("WFSystemActionRunnerClient.m"), 26, CFSTR("%s"), 0);

    __break(1u);
    free(v3);
  }
  return v0;
}

void __getFBSOpenApplicationOptionsClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  FrontBoardServicesLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("FBSOpenApplicationOptions");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getFBSOpenApplicationOptionsClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getFBSOpenApplicationOptionsClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("WFSystemActionRunnerClient.m"), 28, CFSTR("Unable to find class %s"), "FBSOpenApplicationOptions");

    __break(1u);
  }
}

id UIImageSymbolConfigurationFunction()
{
  return (id)classUIImageSymbolConfiguration;
}

Class initUIImageSymbolConfiguration()
{
  Class result;

  if (UIKitLibrary_sOnce_4408 != -1)
    dispatch_once(&UIKitLibrary_sOnce_4408, &__block_literal_global_70_4409);
  result = objc_getClass("UIImageSymbolConfiguration");
  classUIImageSymbolConfiguration = (uint64_t)result;
  getUIImageSymbolConfigurationClass = (uint64_t (*)())UIImageSymbolConfigurationFunction;
  return result;
}

uint64_t WFWorkflowPaletteColorForLNShortcutTileColor(uint64_t result)
{
  if ((unint64_t)(result - 1) >= 0xE)
    return 0;
  return result;
}

void sub_1AF70ABF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __getWFContentCollectionClass_block_invoke_4736(uint64_t a1)
{
  void *v2;
  void *v3;

  ContentKitLibrary_4737();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("WFContentCollection");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getWFContentCollectionClass_softClass_4735 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class  _Nonnull getWFContentCollectionClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("WFConfiguratorRunRequest.m"), 27, CFSTR("Unable to find class %s"), "WFContentCollection");

    __break(1u);
  }
}

void ContentKitLibrary_4737()
{
  void *v0;
  void *v1;
  void *v2;

  if (!ContentKitLibraryCore_frameworkLibrary_4746)
    ContentKitLibraryCore_frameworkLibrary_4746 = _sl_dlopen();
  if (!ContentKitLibraryCore_frameworkLibrary_4746)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void * _Nonnull ContentKitLibrary(void)");
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("WFConfiguratorRunRequest.m"), 26, CFSTR("%s"), 0);

    __break(1u);
    free(v2);
  }
}

void sub_1AF70AE94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __getWFContentItemClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  ContentKitLibrary_4737();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("WFContentItem");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getWFContentItemClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class  _Nonnull getWFContentItemClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("WFConfiguratorRunRequest.m"), 28, CFSTR("Unable to find class %s"), "WFContentItem");

    __break(1u);
  }
}

void sub_1AF70B840(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void WFStringFromCGRect(double a1, double a2, double a3, double a4)
{
  void *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  void *v16;

  v13 = 0;
  v14 = &v13;
  v15 = 0x2020000000;
  v8 = getNSStringFromCGRectSymbolLoc_ptr;
  v16 = getNSStringFromCGRectSymbolLoc_ptr;
  if (!getNSStringFromCGRectSymbolLoc_ptr)
  {
    v9 = UIKitCoreLibrary();
    v8 = dlsym(v9, "NSStringFromCGRect");
    v14[3] = (uint64_t)v8;
    getNSStringFromCGRectSymbolLoc_ptr = v8;
  }
  _Block_object_dispose(&v13, 8);
  if (v8)
  {
    ((void (*)(double, double, double, double))v8)(a1, a2, a3, a4);
    v10 = (id)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "NSString *WFStringFromCGRect(CGRect)");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "handleFailureInFunction:file:lineNumber:description:", v12, CFSTR("WFWorkflowRunViewSource.m"), 22, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_1AF70BC44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *UIKitCoreLibrary()
{
  void *v0;
  void *v2;
  void *v3;

  if (!UIKitCoreLibraryCore_frameworkLibrary)
    UIKitCoreLibraryCore_frameworkLibrary = _sl_dlopen();
  v0 = (void *)UIKitCoreLibraryCore_frameworkLibrary;
  if (!UIKitCoreLibraryCore_frameworkLibrary)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *UIKitCoreLibrary(void)");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v2, CFSTR("WFWorkflowRunViewSource.m"), 20, CFSTR("%s"), 0);

    __break(1u);
    free(v3);
  }
  return v0;
}

void sub_1AF70C1C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__4956(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__4957(uint64_t a1)
{

}

void *ImageIOLibrary_5016()
{
  void *v0;
  void *v2;
  void *v3;

  if (!ImageIOLibraryCore_frameworkLibrary_5032)
    ImageIOLibraryCore_frameworkLibrary_5032 = _sl_dlopen();
  v0 = (void *)ImageIOLibraryCore_frameworkLibrary_5032;
  if (!ImageIOLibraryCore_frameworkLibrary_5032)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *ImageIOLibrary(void)");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v2, CFSTR("WFImage+Representations.m"), 18, CFSTR("%s"), 0);

    __break(1u);
    free(v3);
  }
  return v0;
}

void sub_1AF70FDE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,char a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,char a57)
{
  _Block_object_dispose(&a51, 8);
  _Block_object_dispose(&a57, 8);
  _Unwind_Resume(a1);
}

void sub_1AF710CC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__5118(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__5119(uint64_t a1)
{

}

void sub_1AF710F38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id ATXClientFunction()
{
  return (id)classATXClient;
}

Class initATXClient()
{
  Class result;

  if (AppPredictionClientLibrary_sOnce != -1)
    dispatch_once(&AppPredictionClientLibrary_sOnce, &__block_literal_global_99);
  result = objc_getClass("ATXClient");
  classATXClient = (uint64_t)result;
  getATXClientClass[0] = (uint64_t (*)())ATXClientFunction;
  return result;
}

void sub_1AF712354(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __getISImageClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  IconServicesLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("ISImage");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getISImageClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getISImageClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("WFImage+Icons.m"), 24, CFSTR("Unable to find class %s"), "ISImage");

    __break(1u);
  }
}

id getISIconClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getISIconClass_softClass;
  v7 = getISIconClass_softClass;
  if (!getISIconClass_softClass)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getISIconClass_block_invoke;
    v3[3] = &unk_1E5FC8858;
    v3[4] = &v4;
    __getISIconClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1AF7125C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id WFImageForIconAndFormat(void *a1, uint64_t a2)
{
  id v2;
  id v4;
  id *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];

  v26[1] = *MEMORY[0x1E0C80C00];
  v4 = a1;
  if (a2 == 2)
  {
    v22 = 0;
    v23 = &v22;
    v24 = 0x2020000000;
    v5 = (id *)getkISImageDescriptorHomeScreenSymbolLoc_ptr;
    v25 = getkISImageDescriptorHomeScreenSymbolLoc_ptr;
    if (!getkISImageDescriptorHomeScreenSymbolLoc_ptr)
    {
      v9 = IconServicesLibrary();
      v5 = (id *)dlsym(v9, "kISImageDescriptorHomeScreen");
      v23[3] = (uint64_t)v5;
      getkISImageDescriptorHomeScreenSymbolLoc_ptr = (uint64_t)v5;
    }
    _Block_object_dispose(&v22, 8);
    if (v5)
      goto LABEL_15;
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "ISImageDescriptorName getkISImageDescriptorHomeScreen(void)");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "handleFailureInFunction:file:lineNumber:description:", v11, CFSTR("WFImage+Icons.m"), 28, CFSTR("%s"), dlerror());

    goto LABEL_18;
  }
  if (a2 == 1)
  {
    v22 = 0;
    v23 = &v22;
    v24 = 0x2020000000;
    v5 = (id *)getkISImageDescriptorNotificationSymbolLoc_ptr;
    v25 = getkISImageDescriptorNotificationSymbolLoc_ptr;
    if (!getkISImageDescriptorNotificationSymbolLoc_ptr)
    {
      v12 = IconServicesLibrary();
      v5 = (id *)dlsym(v12, "kISImageDescriptorNotification");
      v23[3] = (uint64_t)v5;
      getkISImageDescriptorNotificationSymbolLoc_ptr = (uint64_t)v5;
    }
    _Block_object_dispose(&v22, 8);
    if (v5)
    {
LABEL_15:
      v2 = *v5;
      goto LABEL_16;
    }
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "ISImageDescriptorName getkISImageDescriptorNotification(void)");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v20, "handleFailureInFunction:file:lineNumber:description:", v21, CFSTR("WFImage+Icons.m"), 27, CFSTR("%s"), dlerror());

LABEL_18:
    __break(1u);
  }
  if (!a2)
  {
    v22 = 0;
    v23 = &v22;
    v24 = 0x2020000000;
    v5 = (id *)getkISImageDescriptorTableUINameSymbolLoc_ptr;
    v25 = getkISImageDescriptorTableUINameSymbolLoc_ptr;
    if (!getkISImageDescriptorTableUINameSymbolLoc_ptr)
    {
      v6 = IconServicesLibrary();
      v5 = (id *)dlsym(v6, "kISImageDescriptorTableUIName");
      v23[3] = (uint64_t)v5;
      getkISImageDescriptorTableUINameSymbolLoc_ptr = (uint64_t)v5;
    }
    _Block_object_dispose(&v22, 8);
    if (!v5)
    {
      objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "ISImageDescriptorName getkISImageDescriptorTableUIName(void)");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "handleFailureInFunction:file:lineNumber:description:", v8, CFSTR("WFImage+Icons.m"), 26, CFSTR("%s"), dlerror());

      goto LABEL_18;
    }
    goto LABEL_15;
  }
LABEL_16:
  v26[0] = v2;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v26, 1);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  WFISImagesForIconAndDescriptorNames(v4, v13);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "firstObject");
  v15 = (void *)objc_claimAutoreleasedReturnValue();

  v16 = objc_msgSend(v15, "CGImage");
  objc_msgSend(v15, "scale");
  +[WFImage imageWithCGImage:scale:orientation:](WFImage, "imageWithCGImage:scale:orientation:", v16, 1);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v17, "imageWithRenderingMode:", 1);
  v18 = (void *)objc_claimAutoreleasedReturnValue();

  return v18;
}

void sub_1AF712934(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *IconServicesLibrary()
{
  void *v0;
  void *v2;
  void *v3;

  if (!IconServicesLibraryCore_frameworkLibrary)
    IconServicesLibraryCore_frameworkLibrary = _sl_dlopen();
  v0 = (void *)IconServicesLibraryCore_frameworkLibrary;
  if (!IconServicesLibraryCore_frameworkLibrary)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *IconServicesLibrary(void)");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v2, CFSTR("WFImage+Icons.m"), 22, CFSTR("%s"), 0);

    __break(1u);
    free(v3);
  }
  return v0;
}

id WFISImagesForIconAndDescriptorNames(void *a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  void *v6;
  _QWORD v8[4];
  id v9;

  v3 = a1;
  objc_msgSend(a2, "if_map:", &__block_literal_global_85);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "prepareImagesForImageDescriptors:", v4);
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 3221225472;
  v8[2] = __WFISImagesForIconAndDescriptorNames_block_invoke_2;
  v8[3] = &unk_1E5FC6168;
  v9 = v3;
  v5 = v3;
  objc_msgSend(v4, "if_compactMap:", v8);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

void sub_1AF712BE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __getISImageDescriptorClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  IconServicesLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("ISImageDescriptor");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getISImageDescriptorClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getISImageDescriptorClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("WFImage+Icons.m"), 25, CFSTR("Unable to find class %s"), "ISImageDescriptor");

    __break(1u);
  }
}

void __getISIconClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  IconServicesLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("ISIcon");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getISIconClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getISIconClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("WFImage+Icons.m"), 23, CFSTR("Unable to find class %s"), "ISIcon");

    __break(1u);
  }
}

void sub_1AF7136D8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1AF713978(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 96), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__5364(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__5365(uint64_t a1)
{

}

id WFImageApplicationIconCache()
{
  if (WFImageApplicationIconCache_onceToken != -1)
    dispatch_once(&WFImageApplicationIconCache_onceToken, &__block_literal_global_64_5379);
  return (id)WFImageApplicationIconCache_cache;
}

id WFStaccatoTintColorForSectionIdentifier(void *a1)
{
  WFColor *v1;
  WFColor *v2;
  WFColor *v3;
  WFColor *v4;
  WFColor *v5;
  void *v6;
  WFColor *v7;
  WFColor *v8;
  WFColor *v9;
  void *v10;
  void *v11;
  void *v13;
  WFColor *v14;
  WFColor *v15;
  id v16;
  _QWORD v17[12];
  _QWORD v18[14];

  v18[12] = *MEMORY[0x1E0C80C00];
  v17[0] = CFSTR("SilentMode");
  v16 = a1;
  v15 = -[WFColor initWithSystemColor:]([WFColor alloc], "initWithSystemColor:", 5);
  v18[0] = v15;
  v17[1] = CFSTR("Focus");
  v14 = -[WFColor initWithSystemColor:]([WFColor alloc], "initWithSystemColor:", 10);
  v18[1] = v14;
  v17[2] = CFSTR("Flashlight");
  +[WFColor colorWithRGBAValue:](WFColor, "colorWithRGBAValue:", 1937084671);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v18[2] = v13;
  v17[3] = CFSTR("Camera");
  v1 = -[WFColor initWithSystemColor:]([WFColor alloc], "initWithSystemColor:", 6);
  v18[3] = v1;
  v17[4] = CFSTR("Translate");
  v2 = -[WFColor initWithSystemColor:]([WFColor alloc], "initWithSystemColor:", 816760831);
  v18[4] = v2;
  v17[5] = CFSTR("VoiceMemos");
  v3 = -[WFColor initWithSystemColor:]([WFColor alloc], "initWithSystemColor:", 2);
  v18[5] = v3;
  v17[6] = CFSTR("Magnifier");
  v4 = -[WFColor initWithSystemColor:]([WFColor alloc], "initWithSystemColor:", 14);
  v18[6] = v4;
  v17[7] = CFSTR("MusicRecognition");
  v5 = -[WFColor initWithSystemColor:]([WFColor alloc], "initWithSystemColor:", 4);
  v18[7] = v5;
  v17[8] = CFSTR("Shortcuts");
  +[WFColor colorWithRGBAValue:](WFColor, "colorWithRGBAValue:", 994537727);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v18[8] = v6;
  v17[9] = CFSTR("Accessibility");
  v7 = -[WFColor initWithSystemColor:]([WFColor alloc], "initWithSystemColor:", 4);
  v18[9] = v7;
  v17[10] = CFSTR("Nothing");
  v8 = -[WFColor initWithWhite:alpha:]([WFColor alloc], "initWithWhite:alpha:", 0.0, 0.0);
  v18[10] = v8;
  v17[11] = CFSTR("Controls");
  v9 = -[WFColor initWithRed:green:blue:alpha:]([WFColor alloc], "initWithRed:green:blue:alpha:", 0.5018, 0.5292, 0.5813, 1.0);
  v18[11] = v9;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v18, v17, 12);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v10, "objectForKeyedSubscript:", v16);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  return v11;
}

id WFAllowedClassesForDecodingNSError()
{
  id v0;
  uint64_t v1;
  uint64_t v2;

  v0 = objc_alloc(MEMORY[0x1E0C99E60]);
  v1 = objc_opt_class();
  v2 = objc_opt_class();
  return (id)objc_msgSend(v0, "initWithObjects:", v1, v2, objc_opt_class(), 0);
}

id WFEncodableError(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;

  v1 = a1;
  v2 = v1;
  if (v1)
  {
    objc_msgSend(v1, "userInfo");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v3, "count"))
    {
      objc_msgSend(v2, "userInfo");
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      WFEncodableErrorDictionary(v4);
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      v6 = (void *)objc_msgSend(v5, "mutableCopy");

    }
    else
    {
      v6 = (void *)objc_msgSend(MEMORY[0x1E0C9AA70], "mutableCopy");
    }

    objc_msgSend(v2, "localizedFailureReason");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "setObject:forKeyedSubscript:", v8, *MEMORY[0x1E0CB2D68]);

    objc_msgSend(v2, "localizedDescription");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "setObject:forKeyedSubscript:", v9, *MEMORY[0x1E0CB2D50]);

    v10 = (void *)MEMORY[0x1E0CB35C8];
    objc_msgSend(v2, "domain");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = objc_msgSend(v2, "code");
    objc_msgSend(v6, "allKeys");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v13, "count"))
      v14 = v6;
    else
      v14 = 0;
    objc_msgSend(v10, "errorWithDomain:code:userInfo:", v11, v12, v14);
    v7 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v7 = 0;
  }

  return v7;
}

id WFEncodableErrorDictionary(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  BOOL v12;
  void *v13;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _BYTE v19[128];
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  v2 = (void *)objc_opt_new();
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  objc_msgSend(v1, "allKeys", 0);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v16;
    do
    {
      for (i = 0; i != v5; ++i)
      {
        if (*(_QWORD *)v16 != v6)
          objc_enumerationMutation(v3);
        v8 = *(void **)(*((_QWORD *)&v15 + 1) + 8 * i);
        WFEncodableErrorObject(v8);
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v1, "objectForKeyedSubscript:", v8);
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        WFEncodableErrorObject(v10);
        v11 = (void *)objc_claimAutoreleasedReturnValue();

        if (v9)
          v12 = v11 == 0;
        else
          v12 = 1;
        if (!v12)
          objc_msgSend(v2, "setObject:forKeyedSubscript:", v11, v9);

      }
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
    }
    while (v5);
  }

  v13 = (void *)objc_msgSend(v2, "copy");
  return v13;
}

id WFEncodableErrorObject(void *a1)
{
  id v1;
  uint64_t v2;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;
  uint64_t v10;
  void *v11;
  id v12;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t j;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  _BYTE v27[128];
  _BYTE v28[128];
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  if (WFEncodableErrorObject_onceToken != -1)
    dispatch_once(&WFEncodableErrorObject_onceToken, &__block_literal_global_5498);
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    WFEncodableError(v1);
    v2 = objc_claimAutoreleasedReturnValue();
LABEL_18:
    v12 = (id)v2;
    goto LABEL_19;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v3 = v1;
    v4 = (void *)objc_opt_new();
    v23 = 0u;
    v24 = 0u;
    v25 = 0u;
    v26 = 0u;
    v5 = v3;
    v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v23, v28, 16);
    if (v6)
    {
      v7 = v6;
      v8 = *(_QWORD *)v24;
      do
      {
        for (i = 0; i != v7; ++i)
        {
          if (*(_QWORD *)v24 != v8)
            objc_enumerationMutation(v5);
          v10 = *(_QWORD *)(*((_QWORD *)&v23 + 1) + 8 * i);
          WFEncodableErrorObject(v10);
          v11 = (void *)objc_claimAutoreleasedReturnValue();
          if (v11)
            objc_msgSend(v4, "addObject:", v10);

        }
        v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v23, v28, 16);
      }
      while (v7);
    }

    v12 = (id)objc_msgSend(v4, "copy");
  }
  else
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      WFEncodableErrorDictionary(v1);
      v2 = objc_claimAutoreleasedReturnValue();
      goto LABEL_18;
    }
    v21 = 0u;
    v22 = 0u;
    v19 = 0u;
    v20 = 0u;
    v14 = (id)WFEncodableErrorObject_encodableClasses;
    v15 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v19, v27, 16);
    if (v15)
    {
      v16 = v15;
      v17 = *(_QWORD *)v20;
      while (2)
      {
        for (j = 0; j != v16; ++j)
        {
          if (*(_QWORD *)v20 != v17)
            objc_enumerationMutation(v14);
          if ((objc_opt_isKindOfClass() & 1) != 0)
          {
            v12 = v1;

            goto LABEL_19;
          }
        }
        v16 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v19, v27, 16);
        if (v16)
          continue;
        break;
      }
    }

    v12 = 0;
  }
LABEL_19:

  return v12;
}

id getLPLinkMetadataClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getLPLinkMetadataClass_softClass;
  v7 = getLPLinkMetadataClass_softClass;
  if (!getLPLinkMetadataClass_softClass)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getLPLinkMetadataClass_block_invoke;
    v3[3] = &unk_1E5FC8858;
    v3[4] = &v4;
    __getLPLinkMetadataClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1AF715BAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1AF715DAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __getLPImageClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  LinkPresentationLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("LPImage");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getLPImageClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getLPImageClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("WFItemProviderRequestMetadata.m"), 23, CFSTR("Unable to find class %s"), "LPImage");

    __break(1u);
  }
}

void LinkPresentationLibrary()
{
  void *v0;
  void *v1;
  void *v2;

  if (!LinkPresentationLibraryCore_frameworkLibrary)
    LinkPresentationLibraryCore_frameworkLibrary = _sl_dlopen();
  if (!LinkPresentationLibraryCore_frameworkLibrary)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *LinkPresentationLibrary(void)");
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("WFItemProviderRequestMetadata.m"), 20, CFSTR("%s"), 0);

    __break(1u);
    free(v2);
  }
}

Class __getUIImageClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  void *v4;
  void *v5;

  if (!UIKitLibraryCore_frameworkLibrary)
    UIKitLibraryCore_frameworkLibrary = _sl_dlopen();
  if (!UIKitLibraryCore_frameworkLibrary)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *UIKitLibrary(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("WFItemProviderRequestMetadata.m"), 19, CFSTR("%s"), 0);

    goto LABEL_8;
  }
  result = objc_getClass("UIImage");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getUIImageClass(void)_block_invoke");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("WFItemProviderRequestMetadata.m"), 21, CFSTR("Unable to find class %s"), "UIImage");

LABEL_8:
    __break(1u);
  }
  getUIImageClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void __getLPLinkMetadataClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  LinkPresentationLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("LPLinkMetadata");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getLPLinkMetadataClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getLPLinkMetadataClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("WFItemProviderRequestMetadata.m"), 22, CFSTR("Unable to find class %s"), "LPLinkMetadata");

    __break(1u);
  }
}

void sub_1AF7173A8(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, __int128 buf)
{
  uint64_t v15;
  void *v16;
  id v17;
  NSObject *v18;
  void *v19;

  if (a2 == 1)
  {
    v17 = objc_begin_catch(a1);
    getWFVoiceShortcutClientLogObject();
    v18 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_FAULT))
    {
      LODWORD(buf) = 136315394;
      *(_QWORD *)((char *)&buf + 4) = "-[WFWorkflowOutputRunResult getOutputWithCompletionHandler:]";
      WORD6(buf) = 2112;
      *(_QWORD *)((char *)&buf + 14) = v17;
      _os_log_impl(&dword_1AF681000, v18, OS_LOG_TYPE_FAULT, "%s Exception thrown when decoding output: %@", (uint8_t *)&buf, 0x16u);
    }

    objc_msgSend(v16, "unableToDecodeError");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, _QWORD, void *))(v15 + 16))(v15, 0, v19);

    objc_end_catch();
    JUMPOUT(0x1AF717374);
  }
  _Unwind_Resume(a1);
}

void sub_1AF719454(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __getLNFullyQualifiedActionIdentifierClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  LinkServicesLibrary_6114();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("LNFullyQualifiedActionIdentifier");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getLNFullyQualifiedActionIdentifierClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getLNFullyQualifiedActionIdentifierClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("WFWorkflowRunDescriptors.m"), 27, CFSTR("Unable to find class %s"), "LNFullyQualifiedActionIdentifier");

    __break(1u);
  }
}

void __getLNActionClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  LinkServicesLibrary_6114();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("LNAction");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getLNActionClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getLNActionClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("WFWorkflowRunDescriptors.m"), 26, CFSTR("Unable to find class %s"), "LNAction");

    __break(1u);
  }
}

void __getLNActionMetadataClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  LinkServicesLibrary_6114();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("LNActionMetadata");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getLNActionMetadataClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getLNActionMetadataClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("WFWorkflowRunDescriptors.m"), 28, CFSTR("Unable to find class %s"), "LNActionMetadata");

    __break(1u);
  }
}

void LinkServicesLibrary_6114()
{
  void *v0;
  void *v1;
  void *v2;

  if (!LinkServicesLibraryCore_frameworkLibrary_6116)
    LinkServicesLibraryCore_frameworkLibrary_6116 = _sl_dlopen();
  if (!LinkServicesLibraryCore_frameworkLibrary_6116)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *LinkServicesLibrary(void)");
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("WFWorkflowRunDescriptors.m"), 25, CFSTR("%s"), 0);

    __break(1u);
    free(v2);
  }
}

void sub_1AF71A2FC(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

void *__getAnalyticsSendEventLazySymbolLoc_block_invoke(_QWORD *a1)
{
  void *v2;
  void *result;
  void *v4;

  if (!CoreAnalyticsLibraryCore_frameworkLibrary)
    CoreAnalyticsLibraryCore_frameworkLibrary = _sl_dlopen();
  v2 = (void *)CoreAnalyticsLibraryCore_frameworkLibrary;
  if (!CoreAnalyticsLibraryCore_frameworkLibrary)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    a1 = (_QWORD *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *CoreAnalyticsLibrary(void)");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(a1, "handleFailureInFunction:file:lineNumber:description:", v2, CFSTR("WFLinkActionWorkflowRunnerClient.m"), 21, CFSTR("%s"), 0);

    __break(1u);
    free(v4);
  }
  result = dlsym(v2, "AnalyticsSendEventLazy");
  *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 24) = result;
  getAnalyticsSendEventLazySymbolLoc_ptr = *(_UNKNOWN **)(*(_QWORD *)(a1[4] + 8) + 24);
  return result;
}

void sub_1AF71BB40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getCLLocationClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  void *v4;
  void *v5;

  if (!CoreLocationLibraryCore_frameworkLibrary)
    CoreLocationLibraryCore_frameworkLibrary = _sl_dlopen();
  if (!CoreLocationLibraryCore_frameworkLibrary)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *CoreLocationLibrary(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("WFGetDirectionsContextualAction.m"), 17, CFSTR("%s"), 0);

    goto LABEL_8;
  }
  result = objc_getClass("CLLocation");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getCLLocationClass(void)_block_invoke");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("WFGetDirectionsContextualAction.m"), 18, CFSTR("Unable to find class %s"), "CLLocation");

LABEL_8:
    __break(1u);
  }
  getCLLocationClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_1AF71C508(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(v1 + 16))(v1);
  _Unwind_Resume(a1);
}

void sub_1AF71C64C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1AF71C8D8(_Unwind_Exception *exception_object)
{
  _Unwind_Resume(exception_object);
}

void sub_1AF71EDAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  (*(void (**)(void))(a16 + 16))();
  (*(void (**)(void))(a18 + 16))();
  (*(void (**)(void))(a26 + 16))();
  (*(void (**)(void))(a15 + 16))();
  _Unwind_Resume(a1);
}

void sub_1AF71F4CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;

  (*(void (**)(void))(a10 + 16))();
  (*(void (**)(uint64_t))(v11 + 16))(v11);
  (*(void (**)(uint64_t))(v10 + 16))(v10);
  _Unwind_Resume(a1);
}

double WFWorkflowIconDrawerScaledSizeWithTargetSize(double result, double a2, double a3, double a4, double a5)
{
  if (result == 0.0)
  {
    result = a2 * (a3 / a4);
    if (a5 > 0.0)
      return round(result * a5) / a5;
  }
  return result;
}

void WFCTFontCopyCharacterSet(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  void *v9;

  v6 = 0;
  v7 = &v6;
  v8 = 0x2020000000;
  v2 = getCTFontCopyCharacterSetSymbolLoc_ptr;
  v9 = getCTFontCopyCharacterSetSymbolLoc_ptr;
  if (!getCTFontCopyCharacterSetSymbolLoc_ptr)
  {
    v3 = CoreTextLibrary();
    v2 = dlsym(v3, "CTFontCopyCharacterSet");
    v7[3] = (uint64_t)v2;
    getCTFontCopyCharacterSetSymbolLoc_ptr = v2;
  }
  _Block_object_dispose(&v6, 8);
  if (v2)
  {
    ((void (*)(uint64_t))v2)(a1);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "CFCharacterSetRef WFCTFontCopyCharacterSet(CTFontRef)");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("WFWorkflowIconDrawer.m"), 30, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_1AF71F8C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void getkCTFontAttributeName()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = (void *)getkCTFontAttributeNameSymbolLoc_ptr;
  v7 = getkCTFontAttributeNameSymbolLoc_ptr;
  if (!getkCTFontAttributeNameSymbolLoc_ptr)
  {
    v1 = CoreTextLibrary();
    v0 = dlsym(v1, "kCTFontAttributeName");
    v5[3] = (uint64_t)v0;
    getkCTFontAttributeNameSymbolLoc_ptr = (uint64_t)v0;
  }
  _Block_object_dispose(&v4, 8);
  if (!v0)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "CFStringRef getkCTFontAttributeName(void)");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("WFWorkflowIconDrawer.m"), 35, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_1AF71F9C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void WFCTFramesetterCreateWithAttributedString(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  void *v9;

  v6 = 0;
  v7 = &v6;
  v8 = 0x2020000000;
  v2 = getCTFramesetterCreateWithAttributedStringSymbolLoc_ptr;
  v9 = getCTFramesetterCreateWithAttributedStringSymbolLoc_ptr;
  if (!getCTFramesetterCreateWithAttributedStringSymbolLoc_ptr)
  {
    v3 = CoreTextLibrary();
    v2 = dlsym(v3, "CTFramesetterCreateWithAttributedString");
    v7[3] = (uint64_t)v2;
    getCTFramesetterCreateWithAttributedStringSymbolLoc_ptr = v2;
  }
  _Block_object_dispose(&v6, 8);
  if (v2)
  {
    ((void (*)(uint64_t))v2)(a1);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "CTFramesetterRef WFCTFramesetterCreateWithAttributedString(CFAttributedStringRef)");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("WFWorkflowIconDrawer.m"), 33, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_1AF71FAD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void WFCTFramesetterSuggestFrameSizeWithConstraints(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  void *v13;

  v10 = 0;
  v11 = &v10;
  v12 = 0x2020000000;
  v6 = getCTFramesetterSuggestFrameSizeWithConstraintsSymbolLoc_ptr;
  v13 = getCTFramesetterSuggestFrameSizeWithConstraintsSymbolLoc_ptr;
  if (!getCTFramesetterSuggestFrameSizeWithConstraintsSymbolLoc_ptr)
  {
    v7 = CoreTextLibrary();
    v6 = dlsym(v7, "CTFramesetterSuggestFrameSizeWithConstraints");
    v11[3] = (uint64_t)v6;
    getCTFramesetterSuggestFrameSizeWithConstraintsSymbolLoc_ptr = v6;
  }
  _Block_object_dispose(&v10, 8);
  if (v6)
  {
    ((void (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, double, double))v6)(a1, a2, a3, 0, 0, 1.79769313e308, 1.79769313e308);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "CGSize WFCTFramesetterSuggestFrameSizeWithConstraints(CTFramesetterRef, CFRange, CFDictionaryRef, CGSize, CFRange * _Nullable)");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "handleFailureInFunction:file:lineNumber:description:", v9, CFSTR("WFWorkflowIconDrawer.m"), 34, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_1AF71FC0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *CoreTextLibrary()
{
  void *v0;
  void *v2;
  void *v3;

  if (!CoreTextLibraryCore_frameworkLibrary)
    CoreTextLibraryCore_frameworkLibrary = _sl_dlopen();
  v0 = (void *)CoreTextLibraryCore_frameworkLibrary;
  if (!CoreTextLibraryCore_frameworkLibrary)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *CoreTextLibrary(void)");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v2, CFSTR("WFWorkflowIconDrawer.m"), 28, CFSTR("%s"), 0);

    __break(1u);
    free(v3);
  }
  return v0;
}

void WFDrawGlyphForVectorIdentifier(void *a1, void *a2, void *a3, void *a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8)
{
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  double v20;
  void *v21;
  void *v22;
  NSObject *v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double MidX;
  CGFloat MidY;
  double v31;
  CGAffineTransform v32;
  uint8_t buf[4];
  const char *v34;
  __int16 v35;
  id v36;
  uint64_t v37;
  CGRect v38;
  CGRect v39;

  v37 = *MEMORY[0x1E0C80C00];
  v15 = a2;
  v16 = a3;
  v17 = a4;
  memset(&v32, 0, sizeof(v32));
  v18 = objc_retainAutorelease(v15);
  v19 = a1;
  CGContextGetCTM(&v32, (CGContextRef)objc_msgSend(v18, "CGContext"));
  v20 = floor(sqrt(v32.c * v32.c + v32.a * v32.a));
  objc_msgSend(v19, "coreGlyphsCatalogs");
  v21 = (void *)objc_claimAutoreleasedReturnValue();

  +[WFImage glyphNamed:pointSize:symbolWeight:scaleFactor:inCatalogs:](WFImage, "glyphNamed:pointSize:symbolWeight:scaleFactor:inCatalogs:", v16, 6, v21, a8, v20);
  v22 = (void *)objc_claimAutoreleasedReturnValue();

  if (v22)
  {
    objc_msgSend(v22, "tintedImageWithColor:", v17);
    v23 = objc_claimAutoreleasedReturnValue();

    -[NSObject sizeInPoints](v23, "sizeInPoints");
    v26 = a7 / v24;
    if (a7 / v24 >= a8 / v25)
      v26 = a8 / v25;
    v27 = v24 * v26;
    v28 = v25 * v26;
    v38.origin.x = a5;
    v38.origin.y = a6;
    v38.size.width = a7;
    v38.size.height = a8;
    MidX = CGRectGetMidX(v38);
    v39.origin.x = a5;
    v39.origin.y = a6;
    v39.size.width = a7;
    v39.size.height = a8;
    MidY = CGRectGetMidY(v39);
    v31 = (double)(unint64_t)v20;
    -[NSObject drawInContext:inRect:](v23, "drawInContext:inRect:", v18, round((MidX - v27 * 0.5) * v31) / v31, round((MidY - v28 * 0.5) * v31) / v31, round(v27 * v31) / v31, round(v28 * v31) / v31);
  }
  else
  {
    getWFVoiceShortcutClientLogObject();
    v23 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v23, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)buf = 136315394;
      v34 = "WFDrawGlyphForVectorIdentifier";
      v35 = 2114;
      v36 = v16;
      _os_log_impl(&dword_1AF681000, v23, OS_LOG_TYPE_FAULT, "%s vector glyph was unexpectedly nil with identifier: %{public}@", buf, 0x16u);
    }
  }

}

void WFCTFramesetterCreateFrame(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  void *v15;

  v12 = 0;
  v13 = &v12;
  v14 = 0x2020000000;
  v8 = getCTFramesetterCreateFrameSymbolLoc_ptr;
  v15 = getCTFramesetterCreateFrameSymbolLoc_ptr;
  if (!getCTFramesetterCreateFrameSymbolLoc_ptr)
  {
    v9 = CoreTextLibrary();
    v8 = dlsym(v9, "CTFramesetterCreateFrame");
    v13[3] = (uint64_t)v8;
    getCTFramesetterCreateFrameSymbolLoc_ptr = v8;
  }
  _Block_object_dispose(&v12, 8);
  if (v8)
  {
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))v8)(a1, a2, a3, a4, 0);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "CTFrameRef WFCTFramesetterCreateFrame(CTFramesetterRef, CFRange, CGPathRef, CFDictionaryRef)");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "handleFailureInFunction:file:lineNumber:description:", v11, CFSTR("WFWorkflowIconDrawer.m"), 32, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_1AF7200E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void WFCTFrameDraw(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  void *v11;

  v8 = 0;
  v9 = &v8;
  v10 = 0x2020000000;
  v4 = getCTFrameDrawSymbolLoc_ptr;
  v11 = getCTFrameDrawSymbolLoc_ptr;
  if (!getCTFrameDrawSymbolLoc_ptr)
  {
    v5 = CoreTextLibrary();
    v4 = dlsym(v5, "CTFrameDraw");
    v9[3] = (uint64_t)v4;
    getCTFrameDrawSymbolLoc_ptr = v4;
  }
  _Block_object_dispose(&v8, 8);
  if (v4)
  {
    ((void (*)(uint64_t, uint64_t))v4)(a1, a2);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void WFCTFrameDraw(CTFrameRef, CGContextRef)");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "handleFailureInFunction:file:lineNumber:description:", v7, CFSTR("WFWorkflowIconDrawer.m"), 31, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_1AF7201F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void WFDrawGlyphFreeCallback(int a1, void *a2)
{
  free(a2);
}

id WFStaticContextualActionDefinitionsForSurface(unint64_t a1)
{
  WFTakeScreenshotContextualAction *v2;
  uint64_t v3;
  char v5;
  __CFString *v6;
  __CFString *v7;
  void *v8;
  void *v9;
  void *v10;
  const __CFString *v11;
  const __CFString *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  WFContextualAction *v21;
  void *v22;
  WFContextualAction *v23;
  WFFinderConvertImageContextualAction *v24;
  int v25;
  void *v26;
  id v27;
  void *v28;
  WFContextualAction *v29;
  void *v30;
  void *v31;
  void *v32;
  WFContextualAction *v33;
  void *v34;
  void *v35;
  WFContextualAction *v36;
  void *v37;
  void *v38;
  WFContextualAction *v39;
  WFContextualAction *v40;
  void *v41;
  void *v42;
  WFContextualAction *v43;
  WFContextualAction *v44;
  WFToggleSettingContextualAction *v45;
  WFToggleSettingContextualAction *v46;
  void *v47;
  void *v48;
  WFToggleSettingContextualAction *v49;
  WFToggleSettingContextualAction *v50;
  void *v51;
  void *v52;
  void *v53;
  WFContextualAction *v54;
  void *v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD v65[2];
  WFTakeScreenshotContextualAction *v66;
  WFToggleSettingContextualAction *v67;
  uint64_t v68;
  Class (*v69)(uint64_t);
  void *v70;
  uint64_t *v71;
  uint64_t v72;

  v72 = *MEMORY[0x1E0C80C00];
  if (a1 == 2)
    return 0;
  if (a1 != 3)
  {
    v2 = (WFTakeScreenshotContextualAction *)objc_opt_new();
    if (a1 > 1)
    {
      if (a1 != 9)
      {
LABEL_32:
        v3 = -[WFTakeScreenshotContextualAction copy](v2, "copy");
        goto LABEL_33;
      }
      v45 = -[WFToggleSettingContextualAction initWithSetting:operation:]([WFToggleSettingContextualAction alloc], "initWithSetting:operation:", 1, 0);
      v46 = -[WFToggleSettingContextualAction initWithSetting:operation:]([WFToggleSettingContextualAction alloc], "initWithSetting:operation:", 2, 0);
      v44 = (WFContextualAction *)objc_opt_new();
      v67 = v45;
      v68 = (uint64_t)v46;
      objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v67, 2);
      v47 = (void *)objc_claimAutoreleasedReturnValue();
      -[WFContextualAction addObjectsFromArray:](v44, "addObjectsFromArray:", v47);

      +[WFDevice currentDevice](WFDevice, "currentDevice");
      v48 = (void *)objc_claimAutoreleasedReturnValue();
      if (objc_msgSend(v48, "hasCapability:", CFSTR("AlwaysOnDisplay")))
      {
        v49 = -[WFToggleSettingContextualAction initWithSetting:operation:unconfigured:]([WFToggleSettingContextualAction alloc], "initWithSetting:operation:unconfigured:", 3, 0, 1);
        -[WFContextualAction addObject:](v44, "addObject:", v49);

      }
      if ((objc_msgSend(v48, "hasCapability:", CFSTR("HardwareRingerSwitch")) & 1) == 0)
      {
        v50 = -[WFToggleSettingContextualAction initWithSetting:operation:]([WFToggleSettingContextualAction alloc], "initWithSetting:operation:", 9, 0);
        -[WFContextualAction addObject:](v44, "addObject:", v50);

      }
      -[WFTakeScreenshotContextualAction addObjectsFromArray:](v2, "addObjectsFromArray:", v44);
    }
    else
    {
      v5 = a1 != 1;
      if (a1 == 1)
        v6 = CFSTR("is.workflow.actions.image.rotate.left");
      else
        v6 = CFSTR("APPEXTENSION-com.apple.finder.RotateQuickAction");
      if (a1 == 1)
        v7 = CFSTR("is.workflow.actions.image.rotate.right");
      else
        v7 = CFSTR("APPEXTENSION-com.apple.finder.RotateQuickAction");
      WFRotateImageContextualAction(v6, 1, v5);
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v65[0] = v8;
      WFRotateImageContextualAction(v7, 0, v5);
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      v65[1] = v9;
      objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v65, 2);
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      -[WFTakeScreenshotContextualAction addObjectsFromArray:](v2, "addObjectsFromArray:", v10);

      if (a1 == 1)
        v11 = CFSTR("pdf.doc");
      else
        v11 = CFSTR("doc");
      if (a1 == 1)
        v12 = CFSTR("is.workflow.actions.makepdf");
      else
        v12 = CFSTR("APPEXTENSION-com.apple.finder.CreatePDFQuickAction");
      v13 = (void *)*MEMORY[0x1E0CEC520];
      v60 = (void *)*MEMORY[0x1E0CEC570];
      objc_msgSend(MEMORY[0x1E0C99E60], "setWithObjects:", *MEMORY[0x1E0CEC520], 0);
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      v15 = (void *)MEMORY[0x1E0CB3880];
      objc_msgSend(v60, "identifier");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v13, "identifier");
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v15, "predicateWithFormat:", CFSTR("SUBQUERY (SELF, $file, $file.type.identifier UTI-CONFORMS-TO %@).@count > 1 OR SUBQUERY (SELF, $file, $file.type.identifier UTI-CONFORMS-TO %@).@count >= 1"), v16, v17);
      v18 = (void *)objc_claimAutoreleasedReturnValue();

      +[WFContextualActionFilteringBehavior filteringWithMatchingTypes:predicate:](WFContextualActionFilteringBehavior, "filteringWithMatchingTypes:predicate:", v14, v18);
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      WFLocalizedString(CFSTR("Create PDF"));
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      v21 = [WFContextualAction alloc];
      +[WFContextualActionIcon iconWithSystemName:](WFContextualActionIcon, "iconWithSystemName:", v11);
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      LOBYTE(v57) = 0;
      v23 = -[WFContextualAction initWithIdentifier:wfActionIdentifier:type:correspondingSystemActionType:associatedAppBundleIdentifier:resultFileOperation:alternate:filteringBehavior:parameters:displayFormatString:title:subtitleFormatString:icon:](v21, "initWithIdentifier:wfActionIdentifier:type:correspondingSystemActionType:associatedAppBundleIdentifier:resultFileOperation:alternate:filteringBehavior:parameters:displayFormatString:title:subtitleFormatString:icon:", v12, CFSTR("is.workflow.actions.makepdf"), 0, 5, CFSTR("com.apple.DocumentsApp"), 1, v57, v19, MEMORY[0x1E0C9AA60], v20, v20, 0, v22);

      -[WFTakeScreenshotContextualAction addObject:](v2, "addObject:", v23);
      v24 = objc_alloc_init(WFFinderConvertImageContextualAction);
      -[WFTakeScreenshotContextualAction addObject:](v2, "addObject:", v24);

      v25 = _os_feature_enabled_impl();
      v61 = 0;
      v62 = &v61;
      v63 = 0x2050000000;
      v26 = (void *)getVKCRemoveBackgroundRequestHandlerClass_softClass;
      v64 = getVKCRemoveBackgroundRequestHandlerClass_softClass;
      if (!getVKCRemoveBackgroundRequestHandlerClass_softClass)
      {
        v67 = (WFToggleSettingContextualAction *)MEMORY[0x1E0C809B0];
        v68 = 3221225472;
        v69 = __getVKCRemoveBackgroundRequestHandlerClass_block_invoke;
        v70 = &unk_1E5FC8858;
        v71 = &v61;
        __getVKCRemoveBackgroundRequestHandlerClass_block_invoke((uint64_t)&v67);
        v26 = (void *)v62[3];
      }
      v27 = objc_retainAutorelease(v26);
      _Block_object_dispose(&v61, 8);
      if ((v25 & objc_msgSend(v27, "isSupported")) == 1)
      {
        WFLocalizedString(CFSTR("Remove Background"));
        v28 = (void *)objc_claimAutoreleasedReturnValue();
        v29 = [WFContextualAction alloc];
        objc_msgSend(MEMORY[0x1E0C99E60], "setWithObject:", v13);
        v30 = (void *)objc_claimAutoreleasedReturnValue();
        +[WFContextualActionFilteringBehavior filteringWithMatchingTypes:predicate:](WFContextualActionFilteringBehavior, "filteringWithMatchingTypes:predicate:", v30, 0);
        v31 = (void *)objc_claimAutoreleasedReturnValue();
        +[WFContextualActionIcon iconWithSystemName:](WFContextualActionIcon, "iconWithSystemName:", CFSTR("circle.rectangle.filled.pattern.diagonalline"));
        v32 = (void *)objc_claimAutoreleasedReturnValue();
        LOBYTE(v58) = 0;
        v33 = -[WFContextualAction initWithIdentifier:wfActionIdentifier:type:correspondingSystemActionType:associatedAppBundleIdentifier:resultFileOperation:alternate:filteringBehavior:parameters:displayFormatString:title:subtitleFormatString:icon:](v29, "initWithIdentifier:wfActionIdentifier:type:correspondingSystemActionType:associatedAppBundleIdentifier:resultFileOperation:alternate:filteringBehavior:parameters:displayFormatString:title:subtitleFormatString:icon:", CFSTR("is.workflow.actions.image.removebackground"), CFSTR("is.workflow.actions.image.removebackground"), 0, 9, CFSTR("com.apple.mobileslideshow"), 1, v58, v31, 0, v28, v28, 0, v32);

        -[WFTakeScreenshotContextualAction addObject:](v2, "addObject:", v33);
      }
      if (a1 == 1)
      {
        objc_msgSend(MEMORY[0x1E0C99E60], "setWithObject:", v60);
        v51 = (void *)objc_claimAutoreleasedReturnValue();
        +[WFContextualActionFilteringBehavior filteringWithMatchingTypes:predicate:](WFContextualActionFilteringBehavior, "filteringWithMatchingTypes:predicate:", v51, 0);
        v52 = (void *)objc_claimAutoreleasedReturnValue();

        WFLocalizedString(CFSTR("Optimize File Size"));
        v53 = (void *)objc_claimAutoreleasedReturnValue();
        v54 = [WFContextualAction alloc];
        +[WFContextualActionIcon iconWithSystemName:](WFContextualActionIcon, "iconWithSystemName:", CFSTR("doc.richtext"));
        v55 = (void *)objc_claimAutoreleasedReturnValue();
        LOBYTE(v58) = 0;
        v44 = -[WFContextualAction initWithIdentifier:wfActionIdentifier:type:correspondingSystemActionType:associatedAppBundleIdentifier:resultFileOperation:alternate:filteringBehavior:parameters:displayFormatString:title:subtitleFormatString:icon:](v54, "initWithIdentifier:wfActionIdentifier:type:correspondingSystemActionType:associatedAppBundleIdentifier:resultFileOperation:alternate:filteringBehavior:parameters:displayFormatString:title:subtitleFormatString:icon:", CFSTR("is.workflow.actions.compresspdf"), CFSTR("is.workflow.actions.compresspdf"), 0, 0, CFSTR("com.apple.DocumentsApp"), 1, v58, v52, 0, v53, v53, 0, v55);

        -[WFTakeScreenshotContextualAction addObject:](v2, "addObject:", v44);
      }
      else
      {
        WFLocalizedString(CFSTR("Trim"));
        v34 = (void *)objc_claimAutoreleasedReturnValue();
        WFLocalizedString(CFSTR("Markup"));
        v35 = (void *)objc_claimAutoreleasedReturnValue();
        v36 = [WFContextualAction alloc];
        +[WFContextualActionFilteringBehavior matchAllFiles](WFContextualActionFilteringBehavior, "matchAllFiles");
        v37 = (void *)objc_claimAutoreleasedReturnValue();
        +[WFContextualActionIcon iconWithSystemName:](WFContextualActionIcon, "iconWithSystemName:", CFSTR("timeline.selection"));
        v38 = (void *)objc_claimAutoreleasedReturnValue();
        LOBYTE(v58) = 0;
        v39 = -[WFContextualAction initWithIdentifier:wfActionIdentifier:type:correspondingSystemActionType:associatedAppBundleIdentifier:resultFileOperation:alternate:filteringBehavior:parameters:displayFormatString:title:subtitleFormatString:icon:](v36, "initWithIdentifier:wfActionIdentifier:type:correspondingSystemActionType:associatedAppBundleIdentifier:resultFileOperation:alternate:filteringBehavior:parameters:displayFormatString:title:subtitleFormatString:icon:", CFSTR("APPEXTENSION-com.apple.finder.TrimQuickAction"), 0, 0, 4, CFSTR("com.apple.finder"), 0, v58, v37, 0, v34, v34, 0, v38);

        v40 = [WFContextualAction alloc];
        +[WFContextualActionFilteringBehavior matchAllFiles](WFContextualActionFilteringBehavior, "matchAllFiles");
        v41 = (void *)objc_claimAutoreleasedReturnValue();
        +[WFContextualActionIcon iconWithSystemName:](WFContextualActionIcon, "iconWithSystemName:", CFSTR("pencil.tip.crop.circle"));
        v42 = (void *)objc_claimAutoreleasedReturnValue();
        LOBYTE(v59) = 0;
        v43 = -[WFContextualAction initWithIdentifier:wfActionIdentifier:type:correspondingSystemActionType:associatedAppBundleIdentifier:resultFileOperation:alternate:filteringBehavior:parameters:displayFormatString:title:subtitleFormatString:icon:](v40, "initWithIdentifier:wfActionIdentifier:type:correspondingSystemActionType:associatedAppBundleIdentifier:resultFileOperation:alternate:filteringBehavior:parameters:displayFormatString:title:subtitleFormatString:icon:", CFSTR("APPEXTENSION-com.apple.finder.MarkupQuickAction"), 0, 0, 3, CFSTR("com.apple.finder"), 0, v59, v41, 0, v35, v35, 0, v42);

        v67 = (WFToggleSettingContextualAction *)v39;
        v68 = (uint64_t)v43;
        objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v67, 2);
        v44 = (WFContextualAction *)objc_claimAutoreleasedReturnValue();

        -[WFTakeScreenshotContextualAction addObjectsFromArray:](v2, "addObjectsFromArray:", v44);
      }
    }

    goto LABEL_32;
  }
  v2 = objc_alloc_init(WFTakeScreenshotContextualAction);
  v66 = v2;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v66, 1);
  v3 = objc_claimAutoreleasedReturnValue();
LABEL_33:
  v56 = (void *)v3;

  return v56;
}

void sub_1AF7212D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

WFContextualAction *WFRotateImageContextualAction(void *a1, int a2, char a3)
{
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  __CFString *v14;
  uint64_t v15;
  const __CFString *v16;
  uint64_t v17;
  void *v18;
  char v19;
  void *v20;
  void *v21;
  WFContextualAction *v22;
  WFContextualActionParameter *v23;
  void *v24;
  WFContextualActionParameter *v25;
  void *v26;
  void *v27;
  void *v28;
  WFContextualAction *v29;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  id v36;
  WFContextualActionParameter *v37;
  _QWORD v38[11];

  v38[9] = *MEMORY[0x1E0C80C00];
  v36 = a1;
  if (!v36)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v31 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "WFContextualAction * _Nonnull WFRotateImageContextualAction(NSString * _Nonnull __strong, BOOL, BOOL)");
    v32 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v31, "handleFailureInFunction:file:lineNumber:description:", v32, CFSTR("WFStaticContextualActionDefinitions.m"), 48, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("identifier"));

  }
  v5 = (void *)MEMORY[0x1E0C99E60];
  v6 = *MEMORY[0x1E0CEC530];
  v38[0] = *MEMORY[0x1E0CEC580];
  v38[1] = v6;
  v38[2] = *MEMORY[0x1E0CEC600];
  objc_msgSend(MEMORY[0x1E0CEC3F8], "typeWithIdentifier:", CFSTR("com.adobe.photoshop-image"));
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = *MEMORY[0x1E0CEC508];
  v38[3] = v7;
  v38[4] = v8;
  v9 = *MEMORY[0x1E0CEC558];
  v38[5] = *MEMORY[0x1E0CEC5B0];
  v38[6] = v9;
  objc_msgSend(MEMORY[0x1E0CEC3F8], "typeWithIdentifier:", CFSTR("com.apple.m4v-video"));
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v38[7] = v10;
  objc_msgSend(MEMORY[0x1E0CEC3F8], "typeWithIdentifier:", CFSTR("public.3gpp"));
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v38[8] = v11;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v38, 9);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setWithArray:", v12);
  v13 = objc_claimAutoreleasedReturnValue();
  v35 = (void *)v13;

  if (a2)
    v14 = CFSTR("Left");
  else
    v14 = CFSTR("Right");
  v15 = 1;
  if (!a2)
    v15 = 2;
  v34 = v15;
  if (a2)
    v16 = CFSTR("rotate.left");
  else
    v16 = CFSTR("rotate.right");
  if (a2)
    v17 = 270;
  else
    v17 = 90;
  WFLocalizedString(v14);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v19 = a3 & ~(_BYTE)a2;
  WFLocalizedString(CFSTR("Rotate %@"));
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  +[WFContextualActionFilteringBehavior filteringWithMatchingTypes:predicate:](WFContextualActionFilteringBehavior, "filteringWithMatchingTypes:predicate:", v13, 0);
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  v22 = [WFContextualAction alloc];
  v23 = [WFContextualActionParameter alloc];
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", v17);
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  v25 = -[WFContextualActionParameter initWithType:displayString:wfParameterKey:wfSerializedRepresentation:](v23, "initWithType:displayString:wfParameterKey:wfSerializedRepresentation:", CFSTR("WFNumberContentItem"), v18, CFSTR("WFImageRotateAmount"), v24);
  v37 = v25;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v37, 1);
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  WFLocalizedStringWithKey(CFSTR("Rotate Image (Contextual Action)"), CFSTR("Rotate Image"));
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  +[WFContextualActionIcon iconWithSystemName:](WFContextualActionIcon, "iconWithSystemName:", v16);
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  LOBYTE(v33) = v19;
  v29 = -[WFContextualAction initWithIdentifier:wfActionIdentifier:type:correspondingSystemActionType:associatedAppBundleIdentifier:resultFileOperation:alternate:filteringBehavior:parameters:displayFormatString:title:subtitleFormatString:icon:](v22, "initWithIdentifier:wfActionIdentifier:type:correspondingSystemActionType:associatedAppBundleIdentifier:resultFileOperation:alternate:filteringBehavior:parameters:displayFormatString:title:subtitleFormatString:icon:", v36, CFSTR("is.workflow.actions.image.rotate"), 0, v34, CFSTR("com.apple.mobileslideshow"), 0, v33, v21, v26, v20, v27, v20, v28);

  return v29;
}

Class __getVKCRemoveBackgroundRequestHandlerClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  void *v4;
  void *v5;

  if (!VisionKitCoreLibraryCore_frameworkLibrary)
    VisionKitCoreLibraryCore_frameworkLibrary = _sl_dlopen();
  if (!VisionKitCoreLibraryCore_frameworkLibrary)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *VisionKitCoreLibrary(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("WFStaticContextualActionDefinitions.m"), 24, CFSTR("%s"), 0);

    goto LABEL_8;
  }
  result = objc_getClass("VKCRemoveBackgroundRequestHandler");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getVKCRemoveBackgroundRequestHandlerClass(void)_block_invoke");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("WFStaticContextualActionDefinitions.m"), 25, CFSTR("Unable to find class %s"), "VKCRemoveBackgroundRequestHandler");

LABEL_8:
    __break(1u);
  }
  getVKCRemoveBackgroundRequestHandlerClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

id getFPSandboxingURLWrapperClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getFPSandboxingURLWrapperClass_softClass;
  v7 = getFPSandboxingURLWrapperClass_softClass;
  if (!getFPSandboxingURLWrapperClass_softClass)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getFPSandboxingURLWrapperClass_block_invoke;
    v3[3] = &unk_1E5FC8858;
    v3[4] = &v4;
    __getFPSandboxingURLWrapperClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1AF723FC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getFPSandboxingURLWrapperClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  void *v4;
  void *v5;

  if (!FileProviderLibraryCore_frameworkLibrary)
    FileProviderLibraryCore_frameworkLibrary = _sl_dlopen();
  if (!FileProviderLibraryCore_frameworkLibrary)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *FileProviderLibrary(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("WFSageWorkflowRunnerClient.m"), 22, CFSTR("%s"), 0);

    goto LABEL_8;
  }
  result = objc_getClass("FPSandboxingURLWrapper");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getFPSandboxingURLWrapperClass(void)_block_invoke");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("WFSageWorkflowRunnerClient.m"), 23, CFSTR("Unable to find class %s"), "FPSandboxingURLWrapper");

LABEL_8:
    __break(1u);
  }
  getFPSandboxingURLWrapperClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void WFBiomeLibrary_7599()
{
  void (*v0)(void);
  id v1;
  void *v2;
  void *v3;
  _QWORD v4[5];
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  void *v8;

  v5 = 0;
  v6 = &v5;
  v7 = 0x2020000000;
  v0 = (void (*)(void))getBiomeLibrarySymbolLoc_ptr_7600;
  v8 = getBiomeLibrarySymbolLoc_ptr_7600;
  if (!getBiomeLibrarySymbolLoc_ptr_7600)
  {
    v4[0] = MEMORY[0x1E0C809B0];
    v4[1] = 3221225472;
    v4[2] = __getBiomeLibrarySymbolLoc_block_invoke_7601;
    v4[3] = &unk_1E5FC8858;
    v4[4] = &v5;
    __getBiomeLibrarySymbolLoc_block_invoke_7601(v4);
    v0 = (void (*)(void))v6[3];
  }
  _Block_object_dispose(&v5, 8);
  if (v0)
  {
    v0();
    v1 = (id)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "id<BMRootLibrary> WFBiomeLibrary(void)");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("WFToggleAccessibilityContextualAction.m"), 16, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_1AF725D58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *__getBiomeLibrarySymbolLoc_block_invoke_7601(_QWORD *a1)
{
  void *v2;
  void *result;
  void *v4;

  if (!BiomeLibraryLibraryCore_frameworkLibrary_7605)
    BiomeLibraryLibraryCore_frameworkLibrary_7605 = _sl_dlopen();
  v2 = (void *)BiomeLibraryLibraryCore_frameworkLibrary_7605;
  if (!BiomeLibraryLibraryCore_frameworkLibrary_7605)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    a1 = (_QWORD *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *BiomeLibraryLibrary(void)");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(a1, "handleFailureInFunction:file:lineNumber:description:", v2, CFSTR("WFToggleAccessibilityContextualAction.m"), 15, CFSTR("%s"), 0);

    __break(1u);
    free(v4);
  }
  result = dlsym(v2, "BiomeLibrary");
  *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 24) = result;
  getBiomeLibrarySymbolLoc_ptr_7600 = *(_UNKNOWN **)(*(_QWORD *)(a1[4] + 8) + 24);
  return result;
}

uint64_t WFToggleAccessibilityContextualActions()
{
  return objc_msgSend(&unk_1E6004138, "if_compactMap:", &__block_literal_global_7750);
}

void sub_1AF7263A4(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1AF7280C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getCLLocationClass_block_invoke_7961(uint64_t a1)
{
  Class result;
  void *v3;
  void *v4;
  void *v5;

  if (!CoreLocationLibraryCore_frameworkLibrary_7962)
    CoreLocationLibraryCore_frameworkLibrary_7962 = _sl_dlopen();
  if (!CoreLocationLibraryCore_frameworkLibrary_7962)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *CoreLocationLibrary(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("WFRequestRideContextualAction.m"), 17, CFSTR("%s"), 0);

    goto LABEL_8;
  }
  result = objc_getClass("CLLocation");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getCLLocationClass(void)_block_invoke");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("WFRequestRideContextualAction.m"), 18, CFSTR("Unable to find class %s"), "CLLocation");

LABEL_8:
    __break(1u);
  }
  getCLLocationClass_softClass_7960 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_1AF7297B0(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(v1 + 16))(v1);
  _Unwind_Resume(a1);
}

id getFPSandboxingURLWrapperClass_8422()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getFPSandboxingURLWrapperClass_softClass_8427;
  v7 = getFPSandboxingURLWrapperClass_softClass_8427;
  if (!getFPSandboxingURLWrapperClass_softClass_8427)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getFPSandboxingURLWrapperClass_block_invoke_8428;
    v3[3] = &unk_1E5FC8858;
    v3[4] = &v4;
    __getFPSandboxingURLWrapperClass_block_invoke_8428((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1AF729FA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getFPSandboxingURLWrapperClass_block_invoke_8428(uint64_t a1)
{
  Class result;
  void *v3;
  void *v4;
  void *v5;

  if (!FileProviderLibraryCore_frameworkLibrary_8429)
    FileProviderLibraryCore_frameworkLibrary_8429 = _sl_dlopen();
  if (!FileProviderLibraryCore_frameworkLibrary_8429)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *FileProviderLibrary(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("WFContextualActionFile.m"), 19, CFSTR("%s"), 0);

    goto LABEL_8;
  }
  result = objc_getClass("FPSandboxingURLWrapper");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getFPSandboxingURLWrapperClass(void)_block_invoke");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("WFContextualActionFile.m"), 20, CFSTR("Unable to find class %s"), "FPSandboxingURLWrapper");

LABEL_8:
    __break(1u);
  }
  getFPSandboxingURLWrapperClass_softClass_8427 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

id WFUIImageWithAnimatedGIFDataAndOptions(void *a1, double a2)
{
  id v3;
  void *v4;
  _QWORD *v5;
  void *v6;
  void *v7;
  _QWORD *v8;
  void *v9;
  void *v10;
  void *v11;
  const void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  double v18;
  void *v19;
  void *v20;
  CGImage *v21;
  void *v22;
  void *v23;
  void *v24;
  _QWORD *v25;
  void *v26;
  void *v27;
  _QWORD *v28;
  void *v29;
  void *v30;
  double v31;
  double v32;
  _QWORD *v33;
  void *v34;
  void *v35;
  void *v36;
  int v37;
  id v38;
  uint64_t v39;
  void *v40;
  void *v41;
  uint64_t v42;
  void *v44;
  void *v45;
  id v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  void *v50;

  v3 = a1;
  if (!v3)
  {
    v41 = 0;
    goto LABEL_49;
  }
  objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v47 = 0;
  v48 = &v47;
  v49 = 0x2020000000;
  v5 = (_QWORD *)getkCGImageSourceShouldCacheSymbolLoc_ptr;
  v50 = (void *)getkCGImageSourceShouldCacheSymbolLoc_ptr;
  if (!getkCGImageSourceShouldCacheSymbolLoc_ptr)
  {
    v6 = ImageIOLibrary_8494();
    v5 = dlsym(v6, "kCGImageSourceShouldCache");
    v48[3] = (uint64_t)v5;
    getkCGImageSourceShouldCacheSymbolLoc_ptr = (uint64_t)v5;
  }
  _Block_object_dispose(&v47, 8);
  if (!v5)
    goto LABEL_56;
  objc_msgSend(v4, "setObject:forKey:", MEMORY[0x1E0C9AAB0], *v5);
  objc_msgSend((id)*MEMORY[0x1E0CEC4F8], "identifier");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v47 = 0;
  v48 = &v47;
  v49 = 0x2020000000;
  v8 = (_QWORD *)getkCGImageSourceTypeIdentifierHintSymbolLoc_ptr;
  v50 = (void *)getkCGImageSourceTypeIdentifierHintSymbolLoc_ptr;
  if (!getkCGImageSourceTypeIdentifierHintSymbolLoc_ptr)
  {
    v9 = ImageIOLibrary_8494();
    v8 = dlsym(v9, "kCGImageSourceTypeIdentifierHint");
    v48[3] = (uint64_t)v8;
    getkCGImageSourceTypeIdentifierHintSymbolLoc_ptr = (uint64_t)v8;
  }
  _Block_object_dispose(&v47, 8);
  if (!v8)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v44 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "CFStringRef getkCGImageSourceTypeIdentifierHint(void)");
    v45 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v44, "handleFailureInFunction:file:lineNumber:description:", v45, CFSTR("WFImageHelpers.m"), 38, CFSTR("%s"), dlerror());
    goto LABEL_55;
  }
  objc_msgSend(v4, "setObject:forKey:", v7, *v8);

  v47 = 0;
  v48 = &v47;
  v49 = 0x2020000000;
  v10 = getCGImageSourceCreateWithDataSymbolLoc_ptr_8499;
  v50 = getCGImageSourceCreateWithDataSymbolLoc_ptr_8499;
  if (!getCGImageSourceCreateWithDataSymbolLoc_ptr_8499)
  {
    v11 = ImageIOLibrary_8494();
    v10 = dlsym(v11, "CGImageSourceCreateWithData");
    v48[3] = (uint64_t)v10;
    getCGImageSourceCreateWithDataSymbolLoc_ptr_8499 = v10;
  }
  _Block_object_dispose(&v47, 8);
  if (!v10)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v44 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "CGImageSourceRef  _Nullable soft_CGImageSourceCreateWithData(CFDataRef _Nonnull, CFDictionaryRef _Nullable)");
    v45 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v44, "handleFailureInFunction:file:lineNumber:description:", v45, CFSTR("WFImageHelpers.m"), 27, CFSTR("%s"), dlerror());
    goto LABEL_55;
  }
  v12 = (const void *)((uint64_t (*)(id, void *))v10)(v3, v4);
  v47 = 0;
  v48 = &v47;
  v49 = 0x2020000000;
  v13 = getCGImageSourceGetCountSymbolLoc_ptr_8502;
  v50 = getCGImageSourceGetCountSymbolLoc_ptr_8502;
  if (!getCGImageSourceGetCountSymbolLoc_ptr_8502)
  {
    v14 = ImageIOLibrary_8494();
    v13 = dlsym(v14, "CGImageSourceGetCount");
    v48[3] = (uint64_t)v13;
    getCGImageSourceGetCountSymbolLoc_ptr_8502 = v13;
  }
  _Block_object_dispose(&v47, 8);
  if (!v13)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v44 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "size_t soft_CGImageSourceGetCount(CGImageSourceRef _Nonnull)");
    v45 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v44, "handleFailureInFunction:file:lineNumber:description:", v45, CFSTR("WFImageHelpers.m"), 31, CFSTR("%s"), dlerror());
    while (1)
    {
LABEL_55:

      __break(1u);
LABEL_56:
      objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
      v44 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "CFStringRef getkCGImageSourceShouldCache(void)");
      v45 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v44, "handleFailureInFunction:file:lineNumber:description:", v45, CFSTR("WFImageHelpers.m"), 37, CFSTR("%s"), dlerror());
    }
  }
  v15 = ((uint64_t (*)(const void *))v13)(v12);
  objc_msgSend(MEMORY[0x1E0C99DE8], "arrayWithCapacity:", v15);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v15)
  {
    CFRelease(v12);
    v18 = 0.0;
    goto LABEL_47;
  }
  v46 = v3;
  v17 = 0;
  v18 = 0.0;
  do
  {
    v47 = 0;
    v48 = &v47;
    v49 = 0x2020000000;
    v19 = getCGImageSourceCreateImageAtIndexSymbolLoc_ptr_8505;
    v50 = getCGImageSourceCreateImageAtIndexSymbolLoc_ptr_8505;
    if (!getCGImageSourceCreateImageAtIndexSymbolLoc_ptr_8505)
    {
      v20 = ImageIOLibrary_8494();
      v19 = dlsym(v20, "CGImageSourceCreateImageAtIndex");
      v48[3] = (uint64_t)v19;
      getCGImageSourceCreateImageAtIndexSymbolLoc_ptr_8505 = v19;
    }
    _Block_object_dispose(&v47, 8);
    if (!v19)
    {
      objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
      v44 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "CGImageRef  _Nullable soft_CGImageSourceCreateImageAtIndex(CGImageSourceRef _Nonnull, size_t, CFDictionaryRef _Nullable)");
      v45 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v44, "handleFailureInFunction:file:lineNumber:description:", v45, CFSTR("WFImageHelpers.m"), 28, CFSTR("%s"), dlerror());
      goto LABEL_55;
    }
    v21 = (CGImage *)((uint64_t (*)(const void *, uint64_t, void *))v19)(v12, v17, v4);
    v47 = 0;
    v48 = &v47;
    v49 = 0x2020000000;
    v22 = getCGImageSourceCopyPropertiesAtIndexSymbolLoc_ptr_8508;
    v50 = getCGImageSourceCopyPropertiesAtIndexSymbolLoc_ptr_8508;
    if (!getCGImageSourceCopyPropertiesAtIndexSymbolLoc_ptr_8508)
    {
      v23 = ImageIOLibrary_8494();
      v22 = dlsym(v23, "CGImageSourceCopyPropertiesAtIndex");
      v48[3] = (uint64_t)v22;
      getCGImageSourceCopyPropertiesAtIndexSymbolLoc_ptr_8508 = v22;
    }
    _Block_object_dispose(&v47, 8);
    if (!v22)
    {
      objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
      v44 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "CFDictionaryRef  _Nullable soft_CGImageSourceCopyPropertiesAtIndex(CGImageSourceRef _Nonnull, size_t, CFDictionaryRef _Nullable)");
      v45 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v44, "handleFailureInFunction:file:lineNumber:description:", v45, CFSTR("WFImageHelpers.m"), 30, CFSTR("%s"), dlerror());
      goto LABEL_55;
    }
    v24 = (void *)((uint64_t (*)(const void *, uint64_t, _QWORD))v22)(v12, v17, 0);
    v47 = 0;
    v48 = &v47;
    v49 = 0x2020000000;
    v25 = (_QWORD *)getkCGImagePropertyGIFDictionarySymbolLoc_ptr;
    v50 = (void *)getkCGImagePropertyGIFDictionarySymbolLoc_ptr;
    if (!getkCGImagePropertyGIFDictionarySymbolLoc_ptr)
    {
      v26 = ImageIOLibrary_8494();
      v25 = dlsym(v26, "kCGImagePropertyGIFDictionary");
      v48[3] = (uint64_t)v25;
      getkCGImagePropertyGIFDictionarySymbolLoc_ptr = (uint64_t)v25;
    }
    _Block_object_dispose(&v47, 8);
    if (!v25)
    {
      objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
      v44 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "CFStringRef getkCGImagePropertyGIFDictionary(void)");
      v45 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v44, "handleFailureInFunction:file:lineNumber:description:", v45, CFSTR("WFImageHelpers.m"), 36, CFSTR("%s"), dlerror());
      goto LABEL_55;
    }
    objc_msgSend(v24, "objectForKey:", *v25);
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    v47 = 0;
    v48 = &v47;
    v49 = 0x2020000000;
    v28 = (_QWORD *)getkCGImagePropertyGIFDelayTimeSymbolLoc_ptr;
    v50 = (void *)getkCGImagePropertyGIFDelayTimeSymbolLoc_ptr;
    if (!getkCGImagePropertyGIFDelayTimeSymbolLoc_ptr)
    {
      v29 = ImageIOLibrary_8494();
      v28 = dlsym(v29, "kCGImagePropertyGIFDelayTime");
      v48[3] = (uint64_t)v28;
      getkCGImagePropertyGIFDelayTimeSymbolLoc_ptr = (uint64_t)v28;
    }
    _Block_object_dispose(&v47, 8);
    if (!v28)
    {
      objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
      v44 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "CFStringRef getkCGImagePropertyGIFDelayTime(void)");
      v45 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v44, "handleFailureInFunction:file:lineNumber:description:", v45, CFSTR("WFImageHelpers.m"), 35, CFSTR("%s"), dlerror());
      goto LABEL_55;
    }
    objc_msgSend(v27, "objectForKey:", *v28);
    v30 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v30, "doubleValue");
    v32 = v31;

    v47 = 0;
    v48 = &v47;
    v49 = 0x2020000000;
    v33 = (_QWORD *)getkCGImagePropertyOrientationSymbolLoc_ptr_8513;
    v50 = (void *)getkCGImagePropertyOrientationSymbolLoc_ptr_8513;
    if (!getkCGImagePropertyOrientationSymbolLoc_ptr_8513)
    {
      v34 = ImageIOLibrary_8494();
      v33 = dlsym(v34, "kCGImagePropertyOrientation");
      v48[3] = (uint64_t)v33;
      getkCGImagePropertyOrientationSymbolLoc_ptr_8513 = (uint64_t)v33;
    }
    _Block_object_dispose(&v47, 8);
    if (!v33)
    {
      objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
      v44 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "CFStringRef getkCGImagePropertyOrientation(void)");
      v45 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v44, "handleFailureInFunction:file:lineNumber:description:", v45, CFSTR("WFImageHelpers.m"), 32, CFSTR("%s"), dlerror());
      goto LABEL_55;
    }
    objc_msgSend(v24, "objectForKeyedSubscript:", *v33);
    v35 = (void *)objc_claimAutoreleasedReturnValue();
    v36 = v35;
    if (v35)
    {
      v37 = objc_msgSend(v35, "integerValue");
      v38 = objc_alloc(getUIImageClass_8516());
      v39 = 4;
      switch(v37)
      {
        case 2:
          break;
        case 3:
          v39 = 1;
          break;
        case 4:
          v39 = 5;
          break;
        case 5:
          v39 = 6;
          break;
        case 6:
          v39 = 3;
          break;
        case 7:
          v39 = 7;
          break;
        case 8:
          v39 = 2;
          break;
        default:
          goto LABEL_35;
      }
    }
    else
    {
      v38 = objc_alloc(getUIImageClass_8516());
LABEL_35:
      v39 = 0;
    }
    v18 = v18 + v32;
    v40 = (void *)objc_msgSend(v38, "initWithCGImage:scale:orientation:", v21, v39, a2);
    objc_msgSend(v16, "addObject:", v40);

    CGImageRelease(v21);
    ++v17;
  }
  while (v15 != v17);
  CFRelease(v12);
  v3 = v46;
  if (v15 == 1)
  {
    objc_msgSend(v16, "firstObject");
    v42 = objc_claimAutoreleasedReturnValue();
    goto LABEL_48;
  }
LABEL_47:
  -[objc_class animatedImageWithImages:duration:](getUIImageClass_8516(), "animatedImageWithImages:duration:", v16, v18);
  v42 = objc_claimAutoreleasedReturnValue();
LABEL_48:
  v41 = (void *)v42;

LABEL_49:
  return v41;
}

void sub_1AF72AA08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *ImageIOLibrary_8494()
{
  void *v0;
  void *v2;
  void *v3;

  if (!ImageIOLibraryCore_frameworkLibrary_8527)
    ImageIOLibraryCore_frameworkLibrary_8527 = _sl_dlopen();
  v0 = (void *)ImageIOLibraryCore_frameworkLibrary_8527;
  if (!ImageIOLibraryCore_frameworkLibrary_8527)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *ImageIOLibrary(void)");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v2, CFSTR("WFImageHelpers.m"), 24, CFSTR("%s"), 0);

    __break(1u);
    free(v3);
  }
  return v0;
}

id UIImageFunction_8517()
{
  return (id)classUIImage_8521;
}

Class initUIImage_8518()
{
  Class result;

  if (UIKitLibrary_sOnce_8519 != -1)
    dispatch_once(&UIKitLibrary_sOnce_8519, &__block_literal_global_8520);
  result = objc_getClass("UIImage");
  classUIImage_8521 = (uint64_t)result;
  getUIImageClass_8516 = (uint64_t (*)())UIImageFunction_8517;
  return result;
}

void sub_1AF72AF68(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_1AF72B0E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1AF72B224(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *CoreTelephonyLibrary()
{
  void *v0;
  void *v2;
  void *v3;

  if (!CoreTelephonyLibraryCore_frameworkLibrary)
    CoreTelephonyLibraryCore_frameworkLibrary = _sl_dlopen();
  v0 = (void *)CoreTelephonyLibraryCore_frameworkLibrary;
  if (!CoreTelephonyLibraryCore_frameworkLibrary)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *CoreTelephonyLibrary(void)");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v2, CFSTR("WFCellularSettings.m"), 15, CFSTR("%s"), 0);

    __break(1u);
    free(v3);
  }
  return v0;
}

id WFNSErrorFromCTError(uint64_t a1)
{
  void *v2;
  _QWORD *v3;
  unint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  _QWORD v11[2];
  _QWORD v12[3];

  v12[2] = *MEMORY[0x1E0C80C00];
  switch((_DWORD)a1)
  {
    case 0:
      return 0;
    case 2:
      v2 = (void *)MEMORY[0x1E0CB35C8];
      v3 = (_QWORD *)MEMORY[0x1E0CB2D98];
      goto LABEL_7;
    case 1:
      v2 = (void *)MEMORY[0x1E0CB35C8];
      v3 = (_QWORD *)MEMORY[0x1E0CB2FE0];
LABEL_7:
      objc_msgSend(v2, "errorWithDomain:code:userInfo:", *v3, a1 >> 32, 0);
      return (id)objc_claimAutoreleasedReturnValue();
  }
  v5 = HIDWORD(a1);
  v6 = (void *)MEMORY[0x1E0CB35C8];
  v11[0] = CFSTR("CTErrorDomain");
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", a1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v11[1] = CFSTR("CTError");
  v12[0] = v7;
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", v5);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v12[1] = v8;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v12, v11, 2);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "errorWithDomain:code:userInfo:", CFSTR("WFCellularSettingsErrorDomain"), 0, v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  return v10;
}

double CGFloatCeilWithScale(double result, double a2)
{
  if (a2 > 0.0)
    return ceil(result * a2) / a2;
  return result;
}

double CGFloatRoundWithScale(double result, double a2)
{
  if (a2 > 0.0)
    return round(result * a2) / a2;
  return result;
}

double CGFloatFloorWithScale(double result, double a2)
{
  if (a2 > 0.0)
    return floor(result * a2) / a2;
  return result;
}

void sub_1AF72C638(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id WFExternalUIPresenterXPCInterface()
{
  void *v0;
  void *v1;
  void *v2;

  objc_msgSend(MEMORY[0x1E0CB3B50], "interfaceWithProtocol:", &unk_1EEE64EE8);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C99E60], "setWithObject:", objc_opt_class());
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setClasses:forSelector:argumentIndex:ofReply:", v1, sel_performSiriRequest_completionHandler_, 0, 1);

  objc_msgSend(MEMORY[0x1E0C99E60], "setWithObject:", objc_opt_class());
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setClasses:forSelector:argumentIndex:ofReply:", v2, sel_performDialogRequest_completionHandler_, 0, 1);

  return v0;
}

void sub_1AF72EDE0(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(v1 + 16))(v1);
  _Unwind_Resume(a1);
}

void sub_1AF72F204(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  uint64_t v29;

  _Block_object_dispose(&a23, 8);
  _Block_object_dispose(&a29, 8);
  _Block_object_dispose((const void *)(v29 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_1AF72F750(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(v1 + 16))(v1);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__9232(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__9233(uint64_t a1)
{

}

void *WFSandboxExtensionManagerExtensionsList()
{
  return &unk_1E60041C0;
}

__CFString *WFContextualActionDescribeSurface(unint64_t a1)
{
  if (a1 > 0x12)
    return 0;
  else
    return off_1E5FC6A50[a1];
}

uint64_t WFContextualActionSurfaceSupportsOutput(unint64_t a1)
{
  return (a1 < 4) & (0xBu >> (a1 & 0xF));
}

BOOL WFCanAccessUserDefaultsDomain(_QWORD *a1)
{
  int v2;
  int v3;
  uint64_t v5;

  getpid();
  v5 = objc_msgSend(CFSTR("com.apple.siri.shortcuts"), "UTF8String");
  v2 = sandbox_check();
  v3 = v2;
  if (a1 && v2 == -1)
  {
    objc_msgSend(MEMORY[0x1E0CB35C8], "errorWithDomain:code:userInfo:", *MEMORY[0x1E0CB2FE0], *__error(), 0, v5);
    *a1 = (id)objc_claimAutoreleasedReturnValue();
  }
  return v3 == 0;
}

void sub_1AF735288(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(v1 + 16))(v1);
  _Unwind_Resume(a1);
}

void sub_1AF735410(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *__getCTFontCreateWithGraphicsFontSymbolLoc_block_invoke(_QWORD *a1)
{
  void *v2;
  void *result;
  void *v4;

  if (!CoreTextLibraryCore_frameworkLibrary_10624)
    CoreTextLibraryCore_frameworkLibrary_10624 = _sl_dlopen();
  v2 = (void *)CoreTextLibraryCore_frameworkLibrary_10624;
  if (!CoreTextLibraryCore_frameworkLibrary_10624)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    a1 = (_QWORD *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *CoreTextLibrary(void)");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(a1, "handleFailureInFunction:file:lineNumber:description:", v2, CFSTR("WFWorkflowIconDrawerContext.m"), 18, CFSTR("%s"), 0);

    __break(1u);
    free(v4);
  }
  result = dlsym(v2, "CTFontCreateWithGraphicsFont");
  *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 24) = result;
  getCTFontCreateWithGraphicsFontSymbolLoc_ptr = *(_UNKNOWN **)(*(_QWORD *)(a1[4] + 8) + 24);
  return result;
}

void sub_1AF7355C8(_Unwind_Exception *a1)
{
  os_unfair_lock_unlock((os_unfair_lock_t)&contextLock);
  _Unwind_Resume(a1);
}

void sub_1AF7366BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  (*(void (**)(void))(a10 + 16))();
  _Unwind_Resume(a1);
}

void sub_1AF73A03C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, os_activity_scope_state_s state)
{
  os_activity_scope_leave(&state);
  _Unwind_Resume(a1);
}

void sub_1AF73A114(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(v1 + 16))(v1);
  _Unwind_Resume(a1);
}

void sub_1AF73A7F4(_Unwind_Exception *a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t))(v1 + 16))(v1);
  _Unwind_Resume(a1);
}

void sub_1AF73AA18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  uint64_t v13;
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1AF73AB48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__11402(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__11403(uint64_t a1)
{

}

void sub_1AF73B524(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1AF73B9A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __getWFContentItemClass_block_invoke_11537(uint64_t a1)
{
  void *v2;
  void *v3;

  ContentKitLibrary_11553();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("WFContentItem");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getWFContentItemClass_softClass_11536 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getWFContentItemClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("WFOnScreenContentNode.m"), 57, CFSTR("Unable to find class %s"), "WFContentItem");

    __break(1u);
  }
}

Class __getLPLinkMetadataClass_block_invoke_11540(uint64_t a1)
{
  Class result;
  void *v3;
  void *v4;
  void *v5;

  if (!LinkPresentationLibraryCore_frameworkLibrary_11543)
    LinkPresentationLibraryCore_frameworkLibrary_11543 = _sl_dlopen();
  if (!LinkPresentationLibraryCore_frameworkLibrary_11543)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *LinkPresentationLibrary(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("WFOnScreenContentNode.m"), 21, CFSTR("%s"), 0);

    goto LABEL_8;
  }
  result = objc_getClass("LPLinkMetadata");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getLPLinkMetadataClass(void)_block_invoke");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("WFOnScreenContentNode.m"), 22, CFSTR("Unable to find class %s"), "LPLinkMetadata");

LABEL_8:
    __break(1u);
  }
  getLPLinkMetadataClass_softClass_11539 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void ContentKitLibrary_11553()
{
  void *v0;
  void *v1;
  void *v2;

  if (!ContentKitLibraryCore_frameworkLibrary_11556)
    ContentKitLibraryCore_frameworkLibrary_11556 = _sl_dlopen();
  if (!ContentKitLibraryCore_frameworkLibrary_11556)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *ContentKitLibrary(void)");
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("WFOnScreenContentNode.m"), 25, CFSTR("%s"), 0);

    __break(1u);
    free(v2);
  }
}

void __getWFStringContentItemClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  ContentKitLibrary_11553();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("WFStringContentItem");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getWFStringContentItemClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getWFStringContentItemClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("WFOnScreenContentNode.m"), 58, CFSTR("Unable to find class %s"), "WFStringContentItem");

    __break(1u);
  }
}

void __getWFURLContentItemClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  ContentKitLibrary_11553();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("WFURLContentItem");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getWFURLContentItemClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getWFURLContentItemClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("WFOnScreenContentNode.m"), 59, CFSTR("Unable to find class %s"), "WFURLContentItem");

    __break(1u);
  }
}

void __getWFContactContentItemClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  ContentKitLibrary_11553();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("WFContactContentItem");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getWFContactContentItemClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getWFContactContentItemClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("WFOnScreenContentNode.m"), 60, CFSTR("Unable to find class %s"), "WFContactContentItem");

    __break(1u);
  }
}

void __getWFCNContactClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  ContentKitLibrary_11553();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("WFCNContact");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getWFCNContactClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getWFCNContactClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("WFOnScreenContentNode.m"), 62, CFSTR("Unable to find class %s"), "WFCNContact");

    __break(1u);
  }
}

void __getWFPhotoMediaContentItemClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  ContentKitLibrary_11553();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("WFPhotoMediaContentItem");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getWFPhotoMediaContentItemClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getWFPhotoMediaContentItemClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("WFOnScreenContentNode.m"), 61, CFSTR("Unable to find class %s"), "WFPhotoMediaContentItem");

    __break(1u);
  }
}

void sub_1AF740210(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __getRBSAssertionClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  RunningBoardServicesLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("RBSAssertion");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getRBSAssertionClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getRBSAssertionClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("WFDispatchSourceTimer.m"), 15, CFSTR("Unable to find class %s"), "RBSAssertion");

    __break(1u);
  }
}

void __getRBSTargetClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  RunningBoardServicesLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("RBSTarget");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getRBSTargetClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getRBSTargetClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("WFDispatchSourceTimer.m"), 17, CFSTR("Unable to find class %s"), "RBSTarget");

    __break(1u);
  }
}

void __getRBSDomainAttributeClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  RunningBoardServicesLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("RBSDomainAttribute");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getRBSDomainAttributeClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getRBSDomainAttributeClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("WFDispatchSourceTimer.m"), 16, CFSTR("Unable to find class %s"), "RBSDomainAttribute");

    __break(1u);
  }
}

void RunningBoardServicesLibrary()
{
  void *v0;
  void *v1;
  void *v2;

  if (!RunningBoardServicesLibraryCore_frameworkLibrary)
    RunningBoardServicesLibraryCore_frameworkLibrary = _sl_dlopen();
  if (!RunningBoardServicesLibraryCore_frameworkLibrary)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *RunningBoardServicesLibrary(void)");
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("WFDispatchSourceTimer.m"), 14, CFSTR("%s"), 0);

    __break(1u);
    free(v2);
  }
}

id WFSafeApplyFormatString(void *a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;

  v3 = a2;
  if (a1)
  {
    v4 = (void *)MEMORY[0x1E0CB3940];
    v5 = a1;
    if (objc_msgSend(v3, "count"))
    {
      objc_msgSend(v3, "objectAtIndexedSubscript:", 0);
      v6 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v6 = 0;
    }
    v8 = v3;
    if ((unint64_t)objc_msgSend(v8, "count") < 2)
    {
      v25 = 0;
    }
    else
    {
      objc_msgSend(v8, "objectAtIndexedSubscript:", 1);
      v25 = (void *)objc_claimAutoreleasedReturnValue();
    }

    v9 = v8;
    if ((unint64_t)objc_msgSend(v9, "count") < 3)
    {
      v24 = 0;
    }
    else
    {
      objc_msgSend(v9, "objectAtIndexedSubscript:", 2);
      v24 = (void *)objc_claimAutoreleasedReturnValue();
    }

    v10 = v9;
    if ((unint64_t)objc_msgSend(v10, "count") < 4)
    {
      v27 = 0;
    }
    else
    {
      objc_msgSend(v10, "objectAtIndexedSubscript:", 3);
      v27 = (void *)objc_claimAutoreleasedReturnValue();
    }

    v11 = v10;
    if ((unint64_t)objc_msgSend(v11, "count") < 5)
    {
      v12 = 0;
    }
    else
    {
      objc_msgSend(v11, "objectAtIndexedSubscript:", 4);
      v12 = objc_claimAutoreleasedReturnValue();
    }

    v13 = v11;
    if ((unint64_t)objc_msgSend(v13, "count") < 6)
    {
      v23 = 0;
    }
    else
    {
      objc_msgSend(v13, "objectAtIndexedSubscript:", 5);
      v23 = (void *)objc_claimAutoreleasedReturnValue();
    }

    v14 = v13;
    if ((unint64_t)objc_msgSend(v14, "count") < 7)
    {
      v15 = 0;
    }
    else
    {
      objc_msgSend(v14, "objectAtIndexedSubscript:", 6);
      v15 = (void *)objc_claimAutoreleasedReturnValue();
    }

    v16 = v14;
    if ((unint64_t)objc_msgSend(v16, "count") < 8)
    {
      v17 = 0;
    }
    else
    {
      objc_msgSend(v16, "objectAtIndexedSubscript:", 7);
      v17 = (void *)objc_claimAutoreleasedReturnValue();
    }

    v18 = v16;
    if ((unint64_t)objc_msgSend(v18, "count") < 9)
    {
      v19 = 0;
    }
    else
    {
      objc_msgSend(v18, "objectAtIndexedSubscript:", 8);
      v19 = (void *)objc_claimAutoreleasedReturnValue();
    }

    v20 = v18;
    if ((unint64_t)objc_msgSend(v20, "count") < 0xA)
    {
      v21 = 0;
    }
    else
    {
      objc_msgSend(v20, "objectAtIndexedSubscript:", 9);
      v21 = (void *)objc_claimAutoreleasedReturnValue();
    }

    v26 = (void *)v12;
    objc_msgSend(v4, "stringWithFormat:", v5, v6, v25, v24, v27, v12, v23, v15, v17, v19, v21);
    v7 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v7 = 0;
  }

  return v7;
}

id WFSanitizeFormatString(void *a1, BOOL *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  void *v6;

  v3 = a1;
  if (v3)
  {
    if (WFSanitizeFormatString_onceToken != -1)
      dispatch_once(&WFSanitizeFormatString_onceToken, &__block_literal_global_219);
    v4 = (void *)objc_msgSend(v3, "mutableCopy");
    v5 = objc_msgSend((id)WFSanitizeFormatString_expression, "replaceMatchesInString:options:range:withTemplate:", v4, 0, 0, objc_msgSend(v3, "length"), CFSTR(" "));
    if (a2)
      *a2 = v5 != 0;
    v6 = (void *)objc_msgSend(v4, "copy");

  }
  else
  {
    v6 = 0;
  }

  return v6;
}

uint64_t WFMatchActionTypesWithFileTypes(void *a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v18;
  void *v19;
  id v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _BYTE v29[128];
  _BYTE v30[128];
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  if (!v3)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "BOOL WFMatchActionTypesWithFileTypes(NSSet<UTType *> * _Nonnull __strong, NSArray<UTType *> * _Nullable __strong)");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "handleFailureInFunction:file:lineNumber:description:", v19, CFSTR("WFContextualAction.m"), 313, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("actionTypes"));

  }
  if (objc_msgSend(v3, "count") && !objc_msgSend(v4, "count"))
  {
    v16 = 0;
  }
  else
  {
    v27 = 0u;
    v28 = 0u;
    v25 = 0u;
    v26 = 0u;
    v5 = v4;
    v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v25, v30, 16);
    if (v6)
    {
      v7 = v6;
      v8 = *(_QWORD *)v26;
      v20 = v4;
      while (1)
      {
        v9 = 0;
LABEL_8:
        if (*(_QWORD *)v26 != v8)
          objc_enumerationMutation(v5);
        v10 = *(void **)(*((_QWORD *)&v25 + 1) + 8 * v9);
        v21 = 0u;
        v22 = 0u;
        v23 = 0u;
        v24 = 0u;
        v11 = v3;
        v12 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v21, v29, 16);
        if (!v12)
          break;
        v13 = v12;
        v14 = *(_QWORD *)v22;
LABEL_12:
        v15 = 0;
        while (1)
        {
          if (*(_QWORD *)v22 != v14)
            objc_enumerationMutation(v11);
          if ((objc_msgSend(v10, "conformsToType:", *(_QWORD *)(*((_QWORD *)&v21 + 1) + 8 * v15)) & 1) != 0)
            break;
          if (v13 == ++v15)
          {
            v13 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v21, v29, 16);
            if (v13)
              goto LABEL_12;
            goto LABEL_22;
          }
        }

        if (++v9 != v7)
          goto LABEL_8;
        v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v25, v30, 16);
        v16 = 1;
        v4 = v20;
        if (!v7)
          goto LABEL_24;
      }
LABEL_22:

      v16 = 0;
      v4 = v20;
    }
    else
    {
      v16 = 1;
    }
LABEL_24:

  }
  return v16;
}

void sub_1AF743658(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1AF743970(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getNRPairedDeviceRegistryClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  void *v4;
  void *v5;

  if (!NanoRegistryLibraryCore_frameworkLibrary)
    NanoRegistryLibraryCore_frameworkLibrary = _sl_dlopen();
  if (!NanoRegistryLibraryCore_frameworkLibrary)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *NanoRegistryLibrary(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("WFDevice.m"), 24, CFSTR("%s"), 0);

    goto LABEL_8;
  }
  result = objc_getClass("NRPairedDeviceRegistry");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getNRPairedDeviceRegistryClass(void)_block_invoke");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("WFDevice.m"), 25, CFSTR("Unable to find class %s"), "NRPairedDeviceRegistry");

LABEL_8:
    __break(1u);
  }
  getNRPairedDeviceRegistryClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

Class __getMCProfileConnectionClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  void *v4;
  void *v5;

  if (!ManagedConfigurationLibraryCore_frameworkLibrary)
    ManagedConfigurationLibraryCore_frameworkLibrary = _sl_dlopen();
  if (!ManagedConfigurationLibraryCore_frameworkLibrary)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *ManagedConfigurationLibrary(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("WFDevice.m"), 45, CFSTR("%s"), 0);

    goto LABEL_8;
  }
  result = objc_getClass("MCProfileConnection");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getMCProfileConnectionClass(void)_block_invoke");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("WFDevice.m"), 46, CFSTR("Unable to find class %s"), "MCProfileConnection");

LABEL_8:
    __break(1u);
  }
  getMCProfileConnectionClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

Class __getVKCRemoveBackgroundRequestHandlerClass_block_invoke_12817(uint64_t a1)
{
  Class result;
  void *v3;
  void *v4;
  void *v5;

  if (!VisionKitCoreLibraryCore_frameworkLibrary_12822)
    VisionKitCoreLibraryCore_frameworkLibrary_12822 = _sl_dlopen();
  if (!VisionKitCoreLibraryCore_frameworkLibrary_12822)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *VisionKitCoreLibrary(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("WFDevice.m"), 52, CFSTR("%s"), 0);

    goto LABEL_8;
  }
  result = objc_getClass("VKCRemoveBackgroundRequestHandler");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getVKCRemoveBackgroundRequestHandlerClass(void)_block_invoke");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("WFDevice.m"), 53, CFSTR("Unable to find class %s"), "VKCRemoveBackgroundRequestHandler");

LABEL_8:
    __break(1u);
  }
  getVKCRemoveBackgroundRequestHandlerClass_softClass_12816 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

id getCBClientClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getCBClientClass_softClass;
  v7 = getCBClientClass_softClass;
  if (!getCBClientClass_softClass)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getCBClientClass_block_invoke;
    v3[3] = &unk_1E5FC8858;
    v3[4] = &v4;
    __getCBClientClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1AF744184(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getCBClientClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  void *v4;
  void *v5;

  if (!CoreBrightnessLibraryCore_frameworkLibrary)
    CoreBrightnessLibraryCore_frameworkLibrary = _sl_dlopen();
  if (!CoreBrightnessLibraryCore_frameworkLibrary)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *CoreBrightnessLibrary(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("WFDevice.m"), 60, CFSTR("%s"), 0);

    goto LABEL_8;
  }
  result = objc_getClass("CBClient");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getCBClientClass(void)_block_invoke");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("WFDevice.m"), 61, CFSTR("Unable to find class %s"), "CBClient");

LABEL_8:
    __break(1u);
  }
  getCBClientClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_1AF745338(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1AF745700(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__13017(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__13018(uint64_t a1)
{

}

id WFEvaluateMathematicalFunction(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  _QWORD v16[2];

  v16[1] = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  v5 = v4;
  if (!v3)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "NSNumber * _Nonnull WFEvaluateMathematicalFunction(NSString * _Nonnull __strong, NSArray<NSNumber *> * _Nonnull __strong)");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "handleFailureInFunction:file:lineNumber:description:", v13, CFSTR("VCVoiceShortcutClient_ContextualActions.m"), 186, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("function"));

    if (v5)
      goto LABEL_3;
LABEL_5:
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "NSNumber * _Nonnull WFEvaluateMathematicalFunction(NSString * _Nonnull __strong, NSArray<NSNumber *> * _Nonnull __strong)");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "handleFailureInFunction:file:lineNumber:description:", v15, CFSTR("VCVoiceShortcutClient_ContextualActions.m"), 187, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("numbers"));

    goto LABEL_3;
  }
  if (!v4)
    goto LABEL_5;
LABEL_3:
  v6 = (void *)MEMORY[0x1E0CB35D0];
  objc_msgSend(MEMORY[0x1E0CB35D0], "expressionForConstantValue:", v5);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v16[0] = v7;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v16, 1);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "expressionForFunction:arguments:", v3, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v9, "expressionValueWithObject:context:", 0, 0);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  return v10;
}

id getBMContextualActionParameterClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getBMContextualActionParameterClass_softClass;
  v7 = getBMContextualActionParameterClass_softClass;
  if (!getBMContextualActionParameterClass_softClass)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getBMContextualActionParameterClass_block_invoke;
    v3[3] = &unk_1E5FC8858;
    v3[4] = &v4;
    __getBMContextualActionParameterClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1AF745AEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __getBMContextualActionEventClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  BiomeStreamsLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("BMContextualActionEvent");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getBMContextualActionEventClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getBMContextualActionEventClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("VCVoiceShortcutClient_ContextualActions.m"), 26, CFSTR("Unable to find class %s"), "BMContextualActionEvent");

    __break(1u);
  }
}

void __getBMStreamsClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  BiomeStreamsLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("BMStreams");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getBMStreamsClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getBMStreamsClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("VCVoiceShortcutClient_ContextualActions.m"), 29, CFSTR("Unable to find class %s"), "BMStreams");

    __break(1u);
  }
}

void BiomeStreamsLibrary()
{
  void *v0;
  void *v1;
  void *v2;

  if (!BiomeStreamsLibraryCore_frameworkLibrary)
    BiomeStreamsLibraryCore_frameworkLibrary = _sl_dlopen();
  if (!BiomeStreamsLibraryCore_frameworkLibrary)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *BiomeStreamsLibrary(void)");
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("VCVoiceShortcutClient_ContextualActions.m"), 24, CFSTR("%s"), 0);

    __break(1u);
    free(v2);
  }
}

void __getBMContextualActionParameterClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  BiomeStreamsLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("BMContextualActionParameter");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getBMContextualActionParameterClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getBMContextualActionParameterClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("VCVoiceShortcutClient_ContextualActions.m"), 28, CFSTR("Unable to find class %s"), "BMContextualActionParameter");

    __break(1u);
  }
}

void sub_1AF745F3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __getBMContextualActionContentClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  BiomeStreamsLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("BMContextualActionContent");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getBMContextualActionContentClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getBMContextualActionContentClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("VCVoiceShortcutClient_ContextualActions.m"), 27, CFSTR("Unable to find class %s"), "BMContextualActionContent");

    __break(1u);
  }
}

id WFLocallyFilterActions(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  _QWORD v13[4];
  id v14;
  _QWORD v15[4];
  id v16;

  v3 = a1;
  v4 = a2;
  objc_msgSend(v3, "files");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "if_map:", &__block_literal_global_75);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v7 = MEMORY[0x1E0C809B0];
  v15[0] = MEMORY[0x1E0C809B0];
  v15[1] = 3221225472;
  v15[2] = __WFLocallyFilterActions_block_invoke_2;
  v15[3] = &unk_1E5FC77F8;
  v16 = v6;
  v8 = v6;
  objc_msgSend(v4, "if_objectsPassingTest:", v15);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  v13[0] = v7;
  v13[1] = 3221225472;
  v13[2] = __WFLocallyFilterActions_block_invoke_3;
  v13[3] = &unk_1E5FC77F8;
  v14 = v3;
  v10 = v3;
  objc_msgSend(v9, "if_objectsPassingTest:", v13);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  return v11;
}

id WFArrayFromChanges(void *a1)
{
  void *v1;
  void *v2;

  objc_msgSend(a1, "if_map:", &__block_literal_global_64_13326);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "allObjects");
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  return v2;
}

id WFChangesFromArray(void *a1)
{
  void *v1;
  void *v2;
  void *v3;

  v1 = (void *)MEMORY[0x1E0C99E60];
  objc_msgSend(a1, "if_map:", &__block_literal_global_13332);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "setWithArray:", v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

WFINShortcutRunDescriptor *WFWorkflowRunDescriptorForINShortcut(void *a1)
{
  id v1;
  void *v2;
  WFWorkflowDatabaseRunDescriptor *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  WFINShortcutRunDescriptor *v8;
  void *v10;
  void *v11;

  v1 = a1;
  if (!v1)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "WFWorkflowRunDescriptor * _Nonnull WFWorkflowRunDescriptorForINShortcut(INShortcut * _Nonnull __strong)");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "handleFailureInFunction:file:lineNumber:description:", v11, CFSTR("WFSpotlightResultWorkflowRunnerClient.m"), 144, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("shortcut"));

  }
  objc_msgSend(v1, "intent");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if (v2 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
  {
    v3 = [WFWorkflowDatabaseRunDescriptor alloc];
    objc_msgSend(v2, "workflow");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "vocabularyIdentifier");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "workflow");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "spokenPhrase");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = -[WFWorkflowDatabaseRunDescriptor initWithIdentifier:name:](v3, "initWithIdentifier:name:", v5, v7);

  }
  else
  {

    v8 = -[WFINShortcutRunDescriptor initWithShortcut:]([WFINShortcutRunDescriptor alloc], "initWithShortcut:", v1);
  }

  return v8;
}

__CFString *WFRunSourceForSpotlightExecutionContext(unint64_t a1)
{
  __CFString *v1;
  __CFString *v2;
  __CFString *v3;
  __CFString *v4;

  v1 = CFSTR("unknown");
  if (a1 <= 0xA)
    v1 = off_1E5FC4E68[a1];
  v2 = v1;
  v3 = v2;
  if (v2 == CFSTR("unknown"))
    v2 = CFSTR("contextual-action-spotlight-unknown");
  v4 = v2;

  return v4;
}

id WFSpotlightResultRunnableAttributeKey()
{
  return (id)objc_msgSend(objc_alloc(MEMORY[0x1E0CA6AC0]), "initWithKeyName:searchable:searchableByDefault:unique:multiValued:", CFSTR("com_apple_shortcuts_runnable"), 0, 0, 0, 0);
}

id WFSpotlightResultRunnableFromData(void *a1)
{
  void *v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  NSObject *v7;
  id v9;
  uint8_t buf[4];
  const char *v11;
  __int16 v12;
  id v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  if (a1)
  {
    v1 = (void *)MEMORY[0x1E0CB3710];
    v2 = (void *)MEMORY[0x1E0C99E60];
    v3 = a1;
    objc_msgSend(v2, "setWithObjects:", objc_opt_class(), 0);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = 0;
    objc_msgSend(v1, "unarchivedObjectOfClasses:fromData:error:", v4, v3, &v9);
    v5 = (void *)objc_claimAutoreleasedReturnValue();

    v6 = v9;
    if (!v5)
    {
      getWFVoiceShortcutClientLogObject();
      v7 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 136315394;
        v11 = "WFSpotlightResultRunnableFromData";
        v12 = 2112;
        v13 = v6;
        _os_log_impl(&dword_1AF681000, v7, OS_LOG_TYPE_ERROR, "%s Cannot unpack data into runnable: %@", buf, 0x16u);
      }

    }
  }
  else
  {
    v5 = 0;
  }
  return v5;
}

id WFDataFromSpotlightResultRunnable(void *a1, uint64_t a2)
{
  id v3;
  void *v4;
  void *v6;
  void *v7;

  v3 = a1;
  if (!v3)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "NSData * _Nullable WFDataFromSpotlightResultRunnable(id<WFSpotlightResultRunnable>  _Nonnull __strong, NSError *__autoreleasing  _Nullable * _Nullable)");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "handleFailureInFunction:file:lineNumber:description:", v7, CFSTR("WFSpotlightResultWorkflowRunnerClient.m"), 48, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("runnable"));

  }
  objc_msgSend(MEMORY[0x1E0CB36F8], "archivedDataWithRootObject:requiringSecureCoding:error:", v3, 1, a2);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

id WFSpotlightResultRunnableDisplayOrderKey()
{
  return (id)objc_msgSend(objc_alloc(MEMORY[0x1E0CA6AC0]), "initWithKeyName:searchable:searchableByDefault:unique:multiValued:", CFSTR("com_apple_shortcuts_runnable_display_order"), 0, 0, 0, 0);
}

id WFSpotlightResultRunnableAccessorySystemImageNameKey()
{
  return (id)objc_msgSend(objc_alloc(MEMORY[0x1E0CA6AC0]), "initWithKeyName:searchable:searchableByDefault:unique:multiValued:", CFSTR("com_apple_shortcuts_runnable_accessory_system_image_name"), 0, 0, 0, 0);
}

id WFSpotlightResultRunnableIneligibleForTopHit()
{
  return (id)objc_msgSend(objc_alloc(MEMORY[0x1E0CA6AC0]), "initWithKeyName:searchable:searchableByDefault:unique:multiValued:", CFSTR("com_apple_shortcuts_runnable_ineligible_for_top_hit"), 0, 0, 0, 0);
}

id WFSpotlightResultRunnableAssociatedSettingsPreferenceKey()
{
  return (id)objc_msgSend(objc_alloc(MEMORY[0x1E0CA6AC0]), "initWithKeyName:searchable:searchableByDefault:unique:multiValued:", CFSTR("com_apple_shortcuts_runnable_associated_settings_preference"), 0, 0, 0, 0);
}

id WFSpotlightResultRunnableIsAppShortcutTopHit()
{
  return (id)objc_msgSend(objc_alloc(MEMORY[0x1E0CA6AC0]), "initWithKeyName:searchable:searchableByDefault:unique:multiValued:", CFSTR("com_apple_shortcuts_runnable_is_app_shortcut_top_hit"), 0, 0, 0, 0);
}

id WFSpotlightResultRunnableIsAppTopHitExclusive()
{
  return (id)objc_msgSend(objc_alloc(MEMORY[0x1E0CA6AC0]), "initWithKeyName:searchable:searchableByDefault:unique:multiValued:", CFSTR("com_apple_shortcuts_runnable_is_app_top_hit_exclusive"), 0, 0, 0, 0);
}

id WFSpotlightResultRunnableTopHitBadge()
{
  return (id)objc_msgSend(objc_alloc(MEMORY[0x1E0CA6AC0]), "initWithKeyName:searchable:searchableByDefault:unique:multiValued:", CFSTR("com_apple_shortcuts_runnable_top_hit_badge"), 0, 0, 0, 0);
}

id WFSpotlightResultRunnableSubtitle()
{
  return (id)objc_msgSend(objc_alloc(MEMORY[0x1E0CA6AC0]), "initWithKeyName:searchable:searchableByDefault:unique:multiValued:", CFSTR("com_apple_shortcuts_runnable_subtitle"), 0, 0, 0, 0);
}

id WFSpotlightResultRunnableImageDisplayStyle()
{
  return (id)objc_msgSend(objc_alloc(MEMORY[0x1E0CA6AC0]), "initWithKeyName:searchable:searchableByDefault:unique:multiValued:", CFSTR("com_apple_shortcuts_runnable_image_display_style"), 0, 0, 0, 0);
}

id WFSpotlightResultRunnablePrimaryPhrase()
{
  return (id)objc_msgSend(objc_alloc(MEMORY[0x1E0CA6AC0]), "initWithKeyName:searchable:searchableByDefault:unique:multiValued:", CFSTR("com_apple_shortcuts_runnable_primary_phrase"), 0, 0, 0, 0);
}

id WFSpotlightResultRunnableActionIdentifier()
{
  return (id)objc_msgSend(objc_alloc(MEMORY[0x1E0CA6AC0]), "initWithKeyName:searchable:searchableByDefault:unique:multiValued:", CFSTR("com_apple_shortcuts_runnable_action_identifier"), 0, 0, 0, 0);
}

id WFSpotlightResultRunnableLNPropertyIdentifier()
{
  return (id)objc_msgSend(objc_alloc(MEMORY[0x1E0CA6AC0]), "initWithKeyName:searchable:searchableByDefault:unique:multiValued:", CFSTR("com_apple_shortcuts_runnable_lnproperty_identifier"), 0, 0, 0, 0);
}

id WFSpotlightResultRunnableTintColorNameIdentifier()
{
  return (id)objc_msgSend(objc_alloc(MEMORY[0x1E0CA6AC0]), "initWithKeyName:searchable:searchableByDefault:unique:multiValued:", CFSTR("com_apple_shortcuts_runnable_tint_color_name"), 0, 0, 0, 0);
}

id WFSpotlightResultRunnableSettingBiomeStreamIdentifier()
{
  return (id)objc_msgSend(objc_alloc(MEMORY[0x1E0CA6AC0]), "initWithKeyName:searchable:searchableByDefault:unique:multiValued:", CFSTR("com_apple_shortcuts_runnable_setting_biome_stream_identifier"), 0, 0, 0, 0);
}

uint64_t WFTopHitContextualActionTypeForBundleIdentifier(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = a1;
  v2 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CA5870]), "initWithBundleIdentifier:allowPlaceholder:error:", v1, 0, 0);
  if (v2)
    v3 = objc_msgSend(v1, "isEqualToString:", CFSTR("com.apple.shortcuts"));
  else
    v3 = 0;

  return v3;
}

uint64_t WFTopHitLimitForType(unint64_t a1)
{
  if (a1 > 6)
    return 5;
  else
    return qword_1AF7809F8[a1];
}

id WFDisambiguableContextualActionClassForType(uint64_t a1)
{
  if (a1 != 1 && a1 != 4 && a1 != 5)
    return 0;
  objc_opt_class();
  return (id)objc_claimAutoreleasedReturnValue();
}

void sub_1AF74CE6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  uint64_t v31;
  uint64_t v32;

  (*(void (**)(uint64_t))(v31 + 16))(v31);
  _Block_object_dispose(&a31, 8);
  _Block_object_dispose((const void *)(v32 - 192), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__14021(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__14022(uint64_t a1)
{

}

double WFContentItemListThumbnailCornerRadiusForRoundingStyle(uint64_t a1, double a2, double a3)
{
  double v3;

  v3 = 0.0;
  if ((unint64_t)(a1 - 1) <= 2)
    v3 = dbl_1AF780A30[a1 - 1];
  if (a2 >= a3)
    a2 = a3;
  return a2 * v3;
}

void sub_1AF74F1D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __getISImageDescriptorClass_block_invoke_14457(uint64_t a1)
{
  void *v2;
  void *v3;

  IconServicesLibrary_14459();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("ISImageDescriptor");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getISImageDescriptorClass_softClass_14456 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getISImageDescriptorClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("VCConfiguredSleepWorkflow.m"), 18, CFSTR("Unable to find class %s"), "ISImageDescriptor");

    __break(1u);
  }
}

void *IconServicesLibrary_14459()
{
  void *v0;
  void *v2;
  void *v3;

  if (!IconServicesLibraryCore_frameworkLibrary_14467)
    IconServicesLibraryCore_frameworkLibrary_14467 = _sl_dlopen();
  v0 = (void *)IconServicesLibraryCore_frameworkLibrary_14467;
  if (!IconServicesLibraryCore_frameworkLibrary_14467)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *IconServicesLibrary(void)");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v2, CFSTR("VCConfiguredSleepWorkflow.m"), 17, CFSTR("%s"), 0);

    __break(1u);
    free(v3);
  }
  return v0;
}

id WFShojiSystemActionsContextualActionFromData(void *a1)
{
  id v1;
  void *v2;
  id v3;
  NSObject *v4;
  void *v6;
  void *v7;
  id v8;
  uint8_t buf[4];
  const char *v10;
  __int16 v11;
  id v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  if (!v1)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "WFContextualAction * _Nullable WFShojiSystemActionsContextualActionFromData(NSData * _Nonnull __strong)");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "handleFailureInFunction:file:lineNumber:description:", v7, CFSTR("WFShojiSystemActionsRunnerClient.m"), 21, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("data"));

  }
  v8 = 0;
  objc_msgSend(MEMORY[0x1E0CB3710], "unarchivedObjectOfClass:fromData:error:", objc_opt_class(), v1, &v8);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = v8;
  if (!v2)
  {
    getWFVoiceShortcutClientLogObject();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136315394;
      v10 = "WFShojiSystemActionsContextualActionFromData";
      v11 = 2112;
      v12 = v3;
      _os_log_impl(&dword_1AF681000, v4, OS_LOG_TYPE_ERROR, "%s Cannot unpack data into contextual action: %@", buf, 0x16u);
    }

  }
  return v2;
}

id WFShojiSystemActionsDataFromContextualAction(void *a1, uint64_t a2)
{
  id v3;
  void *v4;
  void *v6;
  void *v7;

  v3 = a1;
  if (!v3)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "NSData * _Nullable WFShojiSystemActionsDataFromContextualAction(WFContextualAction * _Nonnull __strong, NSError *__autoreleasing  _Nullable * _Nullable)");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "handleFailureInFunction:file:lineNumber:description:", v7, CFSTR("WFShojiSystemActionsRunnerClient.m"), 31, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("action"));

  }
  objc_msgSend(MEMORY[0x1E0CB36F8], "archivedDataWithRootObject:requiringSecureCoding:error:", v3, 1, a2);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

uint64_t WFAutomationDaemonXPCInterface()
{
  return objc_msgSend(MEMORY[0x1E0CB3B50], "interfaceWithProtocol:", &unk_1EEE82F78);
}

void sub_1AF750F78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;
  id *v20;

  objc_destroyWeak(v20);
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id WFAbbreviatedNameFromText(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  objc_msgSend(MEMORY[0x1E0CB3500], "newlineCharacterSet", 0);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "componentsSeparatedByCharactersInSet:", v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v13;
LABEL_3:
    v7 = 0;
    while (1)
    {
      if (*(_QWORD *)v13 != v6)
        objc_enumerationMutation(v3);
      v8 = *(void **)(*((_QWORD *)&v12 + 1) + 8 * v7);
      objc_msgSend(MEMORY[0x1E0CB3500], "whitespaceCharacterSet");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "stringByTrimmingCharactersInSet:", v9);
      v10 = (void *)objc_claimAutoreleasedReturnValue();

      if (objc_msgSend(v10, "length"))
        break;

      if (v5 == ++v7)
      {
        v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
        if (v5)
          goto LABEL_3;
        goto LABEL_9;
      }
    }

    if (v10 && (unint64_t)objc_msgSend(v10, "length") >= 0x65)
    {
      objc_msgSend(v10, "substringToIndex:", objc_msgSend(v10, "rangeOfComposedCharacterSequenceAtIndex:", 100));
      v3 = v10;
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      goto LABEL_13;
    }
  }
  else
  {
LABEL_9:
    v10 = 0;
LABEL_13:

  }
  return v10;
}

void sub_1AF753038(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id WFExclusivelyForTestingGetResidentCoreGlyphsCatalogs()
{
  id v0;

  os_unfair_lock_lock((os_unfair_lock_t)&WFImageResidentCoreGlyphsCatalogsLock);
  v0 = (id)WFImageLockedResidentCoreGlyphsCatalogs;
  os_unfair_lock_unlock((os_unfair_lock_t)&WFImageResidentCoreGlyphsCatalogsLock);
  return v0;
}

BOOL VCDeviceHasBeenUnlocked()
{
  return MKBDeviceUnlockedSinceBoot() != 0;
}

uint64_t VCPerformOnFirstUnlock(void *a1, void *a2)
{
  NSObject *v3;
  id v4;
  id v5;
  uint64_t v6;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  _QWORD handler[4];
  id v13;
  int out_token;

  v3 = a1;
  v4 = a2;
  if (!v4)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "int VCPerformOnFirstUnlock(dispatch_queue_t  _Nonnull __strong, void (^ _Nonnull __strong)(void))");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "handleFailureInFunction:file:lineNumber:description:", v9, CFSTR("VCUtilities.m"), 35, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("block"));

    if (v3)
      goto LABEL_3;
LABEL_5:
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "int VCPerformOnFirstUnlock(dispatch_queue_t  _Nonnull __strong, void (^ _Nonnull __strong)(void))");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "handleFailureInFunction:file:lineNumber:description:", v11, CFSTR("VCUtilities.m"), 36, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("queue"));

    goto LABEL_3;
  }
  if (!v3)
    goto LABEL_5;
LABEL_3:
  out_token = -1;
  handler[0] = MEMORY[0x1E0C809B0];
  handler[1] = 3221225472;
  handler[2] = __VCPerformOnFirstUnlock_block_invoke;
  handler[3] = &unk_1E5FC7E00;
  v13 = v4;
  v5 = v4;
  notify_register_dispatch("com.apple.mobile.keybagd.first_unlock", &out_token, v3, handler);
  v6 = out_token;

  return v6;
}

BOOL VCIsDeviceLocked()
{
  return MKBGetDeviceLockState() - 1 < 2;
}

id VCInactiveAppsFromList(void *a1)
{
  id v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  char v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _BYTE v17[128];
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  if (objc_msgSend(v1, "count"))
  {
    v2 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
    v13 = 0u;
    v14 = 0u;
    v15 = 0u;
    v16 = 0u;
    v3 = v1;
    v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
    if (v4)
    {
      v5 = v4;
      v6 = *(_QWORD *)v14;
      do
      {
        v7 = 0;
        do
        {
          if (*(_QWORD *)v14 != v6)
            objc_enumerationMutation(v3);
          v8 = (void *)MEMORY[0x1E0CA5878];
          v9 = *(id *)(*((_QWORD *)&v13 + 1) + 8 * v7);
          objc_msgSend(v8, "defaultWorkspace", (_QWORD)v13);
          v10 = (void *)objc_claimAutoreleasedReturnValue();
          v11 = objc_msgSend(v10, "applicationIsInstalled:", v9);

          if ((v11 & 1) == 0)
            objc_msgSend(v2, "addObject:", v9);
          ++v7;
        }
        while (v5 != v7);
        v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
      }
      while (v5);
    }

  }
  else
  {
    v2 = 0;
  }

  return v2;
}

const __CFString *WFBannerRequesterIdentifier()
{
  __CFString *v0;

  v0 = CFSTR("com.apple.ShortcutsUI");
  return CFSTR("com.apple.ShortcutsUI");
}

id WFApertureStatusViewControllerIdentityFromRunningContext(void *a1)
{
  void *v1;
  void *v2;

  objc_msgSend(a1, "identifier");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "stringByAppendingString:", CFSTR(".WFApertureStatusViewController"));
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  return v2;
}

void sub_1AF757DC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  _Block_object_dispose(&a35, 8);
  _Unwind_Resume(a1);
}

void sub_1AF758014(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id getWFStringContentItemClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getWFStringContentItemClass_softClass_16397;
  v7 = getWFStringContentItemClass_softClass_16397;
  if (!getWFStringContentItemClass_softClass_16397)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getWFStringContentItemClass_block_invoke_16398;
    v3[3] = &unk_1E5FC8858;
    v3[4] = &v4;
    __getWFStringContentItemClass_block_invoke_16398((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1AF7585CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __getWFStringContentItemClass_block_invoke_16398(uint64_t a1)
{
  void *v2;
  void *v3;

  ContentKitLibrary_16399();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("WFStringContentItem");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getWFStringContentItemClass_softClass_16397 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getWFStringContentItemClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("WFOnScreenContentExtractor.m"), 55, CFSTR("Unable to find class %s"), "WFStringContentItem");

    __break(1u);
  }
}

void ContentKitLibrary_16399()
{
  void *v0;
  void *v1;
  void *v2;

  if (!ContentKitLibraryCore_frameworkLibrary_16408)
    ContentKitLibraryCore_frameworkLibrary_16408 = _sl_dlopen();
  if (!ContentKitLibraryCore_frameworkLibrary_16408)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *ContentKitLibrary(void)");
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("WFOnScreenContentExtractor.m"), 52, CFSTR("%s"), 0);

    __break(1u);
    free(v2);
  }
}

uint64_t __Block_byref_object_copy__16414(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__16415(uint64_t a1)
{

}

void sub_1AF758ABC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  _Block_object_dispose(&a34, 8);
  _Unwind_Resume(a1);
}

void __getWFContentItemClass_block_invoke_16418(uint64_t a1)
{
  void *v2;
  void *v3;

  ContentKitLibrary_16399();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("WFContentItem");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getWFContentItemClass_softClass_16417 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getWFContentItemClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("WFOnScreenContentExtractor.m"), 53, CFSTR("Unable to find class %s"), "WFContentItem");

    __break(1u);
  }
}

id getWFCoercionRequestClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getWFCoercionRequestClass_softClass;
  v7 = getWFCoercionRequestClass_softClass;
  if (!getWFCoercionRequestClass_softClass)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getWFCoercionRequestClass_block_invoke;
    v3[3] = &unk_1E5FC8858;
    v3[4] = &v4;
    __getWFCoercionRequestClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1AF758D3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1AF7591BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *UIKitLibrary()
{
  void *v0;
  void *v2;
  void *v3;

  if (!UIKitLibraryCore_frameworkLibrary_16431)
    UIKitLibraryCore_frameworkLibrary_16431 = _sl_dlopen();
  v0 = (void *)UIKitLibraryCore_frameworkLibrary_16431;
  if (!UIKitLibraryCore_frameworkLibrary_16431)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *UIKitLibrary(void)");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v2, CFSTR("WFOnScreenContentExtractor.m"), 34, CFSTR("%s"), 0);

    __break(1u);
    free(v3);
  }
  return v0;
}

void __getWFCoercionRequestClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  ContentKitLibrary_16399();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("WFCoercionRequest");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getWFCoercionRequestClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getWFCoercionRequestClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("WFOnScreenContentExtractor.m"), 54, CFSTR("Unable to find class %s"), "WFCoercionRequest");

    __break(1u);
  }
}

void __getUIApplicationClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  UIKitLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("UIApplication");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getUIApplicationClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getUIApplicationClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("WFOnScreenContentExtractor.m"), 35, CFSTR("Unable to find class %s"), "UIApplication");

    __break(1u);
  }
}

void __getUIWindowSceneClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  UIKitLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("UIWindowScene");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getUIWindowSceneClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getUIWindowSceneClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("WFOnScreenContentExtractor.m"), 36, CFSTR("Unable to find class %s"), "UIWindowScene");

    __break(1u);
  }
}

void sub_1AF75C100(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1AF75C1F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *UIKitLibrary_16836()
{
  void *v0;
  void *v2;
  void *v3;

  if (!UIKitLibraryCore_frameworkLibrary_16844)
    UIKitLibraryCore_frameworkLibrary_16844 = _sl_dlopen();
  v0 = (void *)UIKitLibraryCore_frameworkLibrary_16844;
  if (!UIKitLibraryCore_frameworkLibrary_16844)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *UIKitLibrary(void)");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v2, CFSTR("WFBitmapContext.m"), 21, CFSTR("%s"), 0);

    __break(1u);
    free(v3);
  }
  return v0;
}

double WFEffectiveScaleForScale(double result)
{
  void *v1;
  double v2;
  double v3;

  if (result <= 0.0)
  {
    +[WFDevice currentDevice](WFDevice, "currentDevice");
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v1, "screenScale");
    v3 = v2;

    return v3;
  }
  return result;
}

void sub_1AF75C5F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

const __CFString *WFDescriptionForDatabaseObjectType(unint64_t a1)
{
  if (a1 > 0xB)
    return CFSTR("Unknown");
  else
    return off_1E5FC8100[a1];
}

const __CFString *WFDescribeWorkflowOutputBehavior(unint64_t a1)
{
  if (a1 > 3)
    return CFSTR("Unknown");
  else
    return off_1E5FC8160[a1];
}

id WFLocalizedStringWithKey(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;

  v3 = a2;
  v4 = a1;
  WFCurrentBundle();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "localizedStringForKey:value:table:", v4, v3, 0);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

id WFUUIDv4FromInteger(uint64_t a1)
{
  __int16 v2;
  char v3;
  char v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v2 = a1;
  v3 = BYTE2(a1);
  v4 = BYTE3(a1);
  v5 = BYTE4(a1);
  v6 = BYTE5(a1);
  v8 = HIBYTE(a1);
  v10 = BYTE1(a1);
  v11 = BYTE2(a1);
  v12 = BYTE3(a1);
  v13 = BYTE4(a1);
  v14 = BYTE5(a1);
  v15 = BYTE6(a1);
  v16 = HIBYTE(a1);
  v7 = BYTE6(a1) & 0xF | 0x40;
  v9 = a1 & 0x3F | 0x80;
  return (id)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3A28]), "initWithUUIDBytes:", &v2);
}

void sub_1AF75F844(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *__getBiomeLibrarySymbolLoc_block_invoke_17582(_QWORD *a1)
{
  void *v2;
  void *result;
  void *v4;

  if (!BiomeLibraryLibraryCore_frameworkLibrary_17589)
    BiomeLibraryLibraryCore_frameworkLibrary_17589 = _sl_dlopen();
  v2 = (void *)BiomeLibraryLibraryCore_frameworkLibrary_17589;
  if (!BiomeLibraryLibraryCore_frameworkLibrary_17589)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    a1 = (_QWORD *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *BiomeLibraryLibrary(void)");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(a1, "handleFailureInFunction:file:lineNumber:description:", v2, CFSTR("WFToggleAlarmContextualAction.m"), 18, CFSTR("%s"), 0);

    __break(1u);
    free(v4);
  }
  result = dlsym(v2, "BiomeLibrary");
  *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 24) = result;
  getBiomeLibrarySymbolLoc_ptr_17581 = *(_UNKNOWN **)(*(_QWORD *)(a1[4] + 8) + 24);
  return result;
}

void sub_1AF7619C8(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, __int128 buf)
{
  uint64_t v15;
  void *v16;
  id v17;
  NSObject *v18;
  void *v19;

  if (a2 == 1)
  {
    v17 = objc_begin_catch(a1);
    getWFVoiceShortcutClientLogObject();
    v18 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_FAULT))
    {
      LODWORD(buf) = 136315394;
      *(_QWORD *)((char *)&buf + 4) = "-[WFAllActionOutputsRunResult getActionOutputsWithCompletionHandler:]";
      WORD6(buf) = 2112;
      *(_QWORD *)((char *)&buf + 14) = v17;
      _os_log_impl(&dword_1AF681000, v18, OS_LOG_TYPE_FAULT, "%s Exception thrown when decoding action outputs: %@", (uint8_t *)&buf, 0x16u);
    }

    objc_msgSend(v16, "unableToDecodeError");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, _QWORD, void *))(v15 + 16))(v15, 0, v19);

    objc_end_catch();
    JUMPOUT(0x1AF761994);
  }
  _Unwind_Resume(a1);
}

void sub_1AF762B4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  uint64_t v13;
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_1AF763EFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1AF764494(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1AF764D58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  uint64_t v27;

  _Block_object_dispose(&a21, 8);
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose((const void *)(v27 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_1AF765038(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  uint64_t v27;

  _Block_object_dispose(&a21, 8);
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose((const void *)(v27 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1AF7652BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  uint64_t v13;
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1AF7654BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1AF7656D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_list va;

  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1AF76589C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_list va;

  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1AF765BB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1AF765DF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  uint64_t v13;
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1AF765FBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  uint64_t v27;

  _Block_object_dispose(&a21, 8);
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose((const void *)(v27 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_1AF766144(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  uint64_t v13;
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1AF7662D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  uint64_t v13;
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1AF766480(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a21, 8);
  _Block_object_dispose(&a27, 8);
  _Unwind_Resume(a1);
}

void sub_1AF7665FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  uint64_t v13;
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 128), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__18050(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__18051(uint64_t a1)
{

}

void __getWFGallerySessionManagerClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  WorkflowKitLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("WFGallerySessionManager");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getWFGallerySessionManagerClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getWFGallerySessionManagerClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("VCVoiceShortcutClient.m"), 42, CFSTR("Unable to find class %s"), "WFGallerySessionManager");

    __break(1u);
  }
}

void sub_1AF7679C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __getWFSharedShortcutClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  WorkflowKitLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("WFSharedShortcut");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getWFSharedShortcutClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getWFSharedShortcutClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("VCVoiceShortcutClient.m"), 44, CFSTR("Unable to find class %s"), "WFSharedShortcut");

    __break(1u);
  }
}

void __getWFGalleryWorkflowClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  WorkflowKitLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("WFGalleryWorkflow");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getWFGalleryWorkflowClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getWFGalleryWorkflowClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("VCVoiceShortcutClient.m"), 43, CFSTR("Unable to find class %s"), "WFGalleryWorkflow");

    __break(1u);
  }
}

void WorkflowKitLibrary()
{
  void *v0;
  void *v1;
  void *v2;

  if (!WorkflowKitLibraryCore_frameworkLibrary)
    WorkflowKitLibraryCore_frameworkLibrary = _sl_dlopen();
  if (!WorkflowKitLibraryCore_frameworkLibrary)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *WorkflowKitLibrary(void)");
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("VCVoiceShortcutClient.m"), 39, CFSTR("%s"), 0);

    __break(1u);
    free(v2);
  }
}

void VCVoiceShortcutDataDidUpdateNotificationHandler(uint64_t a1, void *a2, void *a3)
{
  char v4;
  NSObject *v5;
  NSObject *v6;
  void *v7;
  id v8;
  int v9;
  const char *v10;
  __int16 v11;
  const __CFString *v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v4 = objc_msgSend(a3, "isEqualToString:", CFSTR("com.apple.siri.VoiceShortcuts.DataDidUpdateNotification"));
  getWFVoiceShortcutClientLogObject();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = v5;
  if ((v4 & 1) != 0)
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG))
    {
      v9 = 136315394;
      v10 = "VCVoiceShortcutDataDidUpdateNotificationHandler";
      v11 = 2112;
      v12 = CFSTR("com.apple.siri.VoiceShortcuts.DataDidUpdateNotification");
      _os_log_impl(&dword_1AF681000, v6, OS_LOG_TYPE_DEBUG, "%s Received notification: (%@)", (uint8_t *)&v9, 0x16u);
    }

    v7 = (void *)MEMORY[0x1E0CB37D0];
    v8 = a2;
    objc_msgSend(v7, "defaultCenter");
    v6 = objc_claimAutoreleasedReturnValue();
    -[NSObject postNotificationName:object:](v6, "postNotificationName:object:", CFSTR("VCVoiceShortcutClientDataDidUpdateNotification"), v8);

  }
  else if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
  {
    v9 = 136315394;
    v10 = "VCVoiceShortcutDataDidUpdateNotificationHandler";
    v11 = 2112;
    v12 = CFSTR("com.apple.siri.VoiceShortcuts.DataDidUpdateNotification");
    _os_log_impl(&dword_1AF681000, v6, OS_LOG_TYPE_ERROR, "%s Cannot handle unrecognized notification: (%@)", (uint8_t *)&v9, 0x16u);
  }

}

const __CFString *WFDescribeFinderImageResizeSize(unint64_t a1)
{
  if (a1 > 2)
    return CFSTR("Small");
  else
    return *(&off_1E5FC88C0 + a1);
}

id WFLocalizedDescribeFinderImageResizeSize(void *a1)
{
  if ((unint64_t)a1 <= 3)
  {
    WFLocalizedString(*(&off_1E5FC88D8 + (_QWORD)a1));
    a1 = (void *)objc_claimAutoreleasedReturnValue();
  }
  return a1;
}

uint64_t WFFinderImageResizeSizeFromDescription(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  if ((objc_msgSend(v1, "isEqualToString:", CFSTR("Small")) & 1) != 0)
  {
    v2 = 3;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("Medium")) & 1) != 0)
  {
    v2 = 2;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("Large")) & 1) != 0)
  {
    v2 = 1;
  }
  else
  {
    objc_msgSend(v1, "isEqualToString:", CFSTR("Original"));
    v2 = 0;
  }

  return v2;
}

const __CFString *WFDescribeFinderImageResizeFormat(uint64_t a1)
{
  const __CFString *v1;

  v1 = CFSTR("JPEG");
  if (a1 == 1)
    v1 = CFSTR("PNG");
  if (a1 == 2)
    return CFSTR("HEIF");
  else
    return v1;
}

uint64_t WFFinderImageResizeFormatFromDescription(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  if ((objc_msgSend(v1, "isEqualToString:", CFSTR("JPEG")) & 1) != 0)
  {
    v2 = 0;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("PNG")) & 1) != 0)
  {
    v2 = 1;
  }
  else if (objc_msgSend(v1, "isEqualToString:", CFSTR("HEIF")))
  {
    v2 = 2;
  }
  else
  {
    v2 = 0;
  }

  return v2;
}

uint64_t sub_1AF769E44()
{
  return MEMORY[0x1E0C904D8]();
}

uint64_t sub_1AF769E50()
{
  return MEMORY[0x1E0C905A0]();
}

uint64_t sub_1AF769E5C()
{
  return MEMORY[0x1E0C905D0]();
}

uint64_t sub_1AF769E68()
{
  return MEMORY[0x1E0C90640]();
}

uint64_t sub_1AF769E74()
{
  return MEMORY[0x1E0C90650]();
}

uint64_t sub_1AF769E80()
{
  return MEMORY[0x1E0C90680]();
}

uint64_t sub_1AF769E8C()
{
  return MEMORY[0x1E0C907D0]();
}

uint64_t sub_1AF769E98()
{
  return MEMORY[0x1E0C90A08]();
}

uint64_t sub_1AF769EA4()
{
  return MEMORY[0x1E0C90D00]();
}

uint64_t sub_1AF769EB0()
{
  return MEMORY[0x1E0C90D20]();
}

uint64_t sub_1AF769EBC()
{
  return MEMORY[0x1E0C90D98]();
}

uint64_t sub_1AF769EC8()
{
  return MEMORY[0x1E0C90E60]();
}

uint64_t sub_1AF769ED4()
{
  return MEMORY[0x1E0C91128]();
}

uint64_t sub_1AF769EE0()
{
  return MEMORY[0x1E0C91148]();
}

uint64_t sub_1AF769EEC()
{
  return MEMORY[0x1E0C91480]();
}

uint64_t sub_1AF769EF8()
{
  return MEMORY[0x1E0C914B0]();
}

uint64_t sub_1AF769F04()
{
  return MEMORY[0x1E0C914D0]();
}

uint64_t sub_1AF769F10()
{
  return MEMORY[0x1E0C91690]();
}

uint64_t sub_1AF769F1C()
{
  return MEMORY[0x1E0C916C0]();
}

uint64_t sub_1AF769F28()
{
  return MEMORY[0x1E0C916C8]();
}

uint64_t sub_1AF769F34()
{
  return MEMORY[0x1E0C916D0]();
}

uint64_t sub_1AF769F40()
{
  return MEMORY[0x1E0C916F8]();
}

uint64_t sub_1AF769F4C()
{
  return MEMORY[0x1E0C91750]();
}

uint64_t sub_1AF769F58()
{
  return MEMORY[0x1E0C91768]();
}

uint64_t sub_1AF769F64()
{
  return MEMORY[0x1E0C91780]();
}

uint64_t sub_1AF769F70()
{
  return MEMORY[0x1E0C917F8]();
}

uint64_t sub_1AF769F7C()
{
  return MEMORY[0x1E0C91820]();
}

uint64_t sub_1AF769F88()
{
  return MEMORY[0x1E0C91920]();
}

uint64_t sub_1AF769F94()
{
  return MEMORY[0x1E0C919F0]();
}

uint64_t sub_1AF769FA0()
{
  return MEMORY[0x1E0C91A10]();
}

uint64_t sub_1AF769FAC()
{
  return MEMORY[0x1E0C91B20]();
}

uint64_t sub_1AF769FB8()
{
  return MEMORY[0x1E0C91BA0]();
}

uint64_t sub_1AF769FC4()
{
  return MEMORY[0x1E0C91C08]();
}

uint64_t sub_1AF769FD0()
{
  return MEMORY[0x1E0CADE70]();
}

uint64_t sub_1AF769FDC()
{
  return MEMORY[0x1E0CADE90]();
}

uint64_t sub_1AF769FE8()
{
  return MEMORY[0x1E0CAE070]();
}

uint64_t sub_1AF769FF4()
{
  return MEMORY[0x1E0CAE0A8]();
}

uint64_t sub_1AF76A000()
{
  return MEMORY[0x1E0CAE0B8]();
}

uint64_t sub_1AF76A00C()
{
  return MEMORY[0x1E0CAE1A0]();
}

uint64_t sub_1AF76A018()
{
  return MEMORY[0x1E0CAE1D8]();
}

uint64_t sub_1AF76A024()
{
  return MEMORY[0x1E0CAE1E8]();
}

uint64_t sub_1AF76A030()
{
  return MEMORY[0x1E0CAE620]();
}

uint64_t sub_1AF76A03C()
{
  return MEMORY[0x1E0CAE6D0]();
}

uint64_t sub_1AF76A048()
{
  return MEMORY[0x1E0CAE6E0]();
}

uint64_t sub_1AF76A054()
{
  return MEMORY[0x1E0CAE8D0]();
}

uint64_t sub_1AF76A060()
{
  return MEMORY[0x1E0CAE8F0]();
}

uint64_t sub_1AF76A06C()
{
  return MEMORY[0x1E0CAE8F8]();
}

uint64_t sub_1AF76A078()
{
  return MEMORY[0x1E0CAE9F8]();
}

uint64_t sub_1AF76A084()
{
  return MEMORY[0x1E0CAEA38]();
}

uint64_t sub_1AF76A090()
{
  return MEMORY[0x1E0CAEAB0]();
}

uint64_t sub_1AF76A09C()
{
  return MEMORY[0x1E0CAEB00]();
}

uint64_t sub_1AF76A0A8()
{
  return MEMORY[0x1E0CAEB08]();
}

uint64_t sub_1AF76A0B4()
{
  return MEMORY[0x1E0CAEB10]();
}

uint64_t sub_1AF76A0C0()
{
  return MEMORY[0x1E0CAEB18]();
}

uint64_t sub_1AF76A0CC()
{
  return MEMORY[0x1E0CAEB20]();
}

uint64_t sub_1AF76A0D8()
{
  return MEMORY[0x1E0CAEB38]();
}

uint64_t sub_1AF76A0E4()
{
  return MEMORY[0x1E0CAEB40]();
}

uint64_t sub_1AF76A0F0()
{
  return MEMORY[0x1E0CAEB50]();
}

uint64_t sub_1AF76A0FC()
{
  return MEMORY[0x1E0CAF940]();
}

uint64_t sub_1AF76A108()
{
  return MEMORY[0x1E0CAF980]();
}

uint64_t sub_1AF76A114()
{
  return MEMORY[0x1E0CAF990]();
}

uint64_t sub_1AF76A120()
{
  return MEMORY[0x1E0CAF9B0]();
}

uint64_t sub_1AF76A12C()
{
  return MEMORY[0x1E0CAF9D0]();
}

uint64_t sub_1AF76A138()
{
  return MEMORY[0x1E0CAF9F8]();
}

uint64_t sub_1AF76A144()
{
  return MEMORY[0x1E0CAFA28]();
}

uint64_t sub_1AF76A150()
{
  return MEMORY[0x1E0CAFB58]();
}

uint64_t sub_1AF76A15C()
{
  return MEMORY[0x1E0CAFDA0]();
}

uint64_t sub_1AF76A168()
{
  return MEMORY[0x1E0CAFF90]();
}

uint64_t sub_1AF76A174()
{
  return MEMORY[0x1E0CAFFF8]();
}

uint64_t sub_1AF76A180()
{
  return MEMORY[0x1E0CB01F0]();
}

uint64_t sub_1AF76A18C()
{
  return MEMORY[0x1E0CB0210]();
}

uint64_t sub_1AF76A198()
{
  return MEMORY[0x1E0CB0218]();
}

uint64_t sub_1AF76A1A4()
{
  return MEMORY[0x1E0CB0220]();
}

uint64_t sub_1AF76A1B0()
{
  return MEMORY[0x1E0CB0228]();
}

uint64_t sub_1AF76A1BC()
{
  return MEMORY[0x1E0CB0240]();
}

uint64_t sub_1AF76A1C8()
{
  return MEMORY[0x1E0CB0248]();
}

uint64_t sub_1AF76A1D4()
{
  return MEMORY[0x1E0CB07B0]();
}

uint64_t sub_1AF76A1E0()
{
  return MEMORY[0x1E0CB07C0]();
}

uint64_t sub_1AF76A1EC()
{
  return MEMORY[0x1E0CB07F8]();
}

uint64_t sub_1AF76A1F8()
{
  return MEMORY[0x1E0CB0870]();
}

uint64_t sub_1AF76A204()
{
  return MEMORY[0x1E0CB0948]();
}

uint64_t sub_1AF76A210()
{
  return MEMORY[0x1E0CB0958]();
}

uint64_t sub_1AF76A21C()
{
  return MEMORY[0x1E0CB0978]();
}

uint64_t sub_1AF76A228()
{
  return MEMORY[0x1E0CB0988]();
}

uint64_t sub_1AF76A234()
{
  return MEMORY[0x1E0CB0998]();
}

uint64_t sub_1AF76A240()
{
  return MEMORY[0x1E0CB0CC8]();
}

uint64_t sub_1AF76A24C()
{
  return MEMORY[0x1E0CB0E38]();
}

uint64_t sub_1AF76A258()
{
  return MEMORY[0x1E0D20EF8]();
}

uint64_t sub_1AF76A264()
{
  return MEMORY[0x1E0D3EA60]();
}

uint64_t sub_1AF76A270()
{
  return MEMORY[0x1E0D3EA68]();
}

uint64_t sub_1AF76A27C()
{
  return MEMORY[0x1E0D3EC50]();
}

uint64_t sub_1AF76A288()
{
  return MEMORY[0x1E0D3EC58]();
}

uint64_t sub_1AF76A294()
{
  return MEMORY[0x1E0DF2098]();
}

uint64_t sub_1AF76A2A0()
{
  return MEMORY[0x1E0DF2100]();
}

uint64_t sub_1AF76A2AC()
{
  return MEMORY[0x1E0DF2108]();
}

uint64_t sub_1AF76A2B8()
{
  return MEMORY[0x1E0DF2110]();
}

uint64_t sub_1AF76A2C4()
{
  return MEMORY[0x1E0DF2118]();
}

uint64_t sub_1AF76A2D0()
{
  return MEMORY[0x1E0DF2128]();
}

uint64_t sub_1AF76A2DC()
{
  return MEMORY[0x1E0DF2130]();
}

uint64_t sub_1AF76A2E8()
{
  return MEMORY[0x1E0DF2150]();
}

uint64_t sub_1AF76A2F4()
{
  return MEMORY[0x1E0DF2170]();
}

uint64_t sub_1AF76A300()
{
  return MEMORY[0x1E0DF2198]();
}

uint64_t sub_1AF76A30C()
{
  return MEMORY[0x1E0DF2218]();
}

uint64_t sub_1AF76A318()
{
  return MEMORY[0x1E0DF2220]();
}

uint64_t sub_1AF76A324()
{
  return MEMORY[0x1E0DF2228]();
}

uint64_t sub_1AF76A330()
{
  return MEMORY[0x1E0DF2238]();
}

uint64_t sub_1AF76A33C()
{
  return MEMORY[0x1E0DF2240]();
}

uint64_t sub_1AF76A348()
{
  return MEMORY[0x1E0DF2248]();
}

uint64_t sub_1AF76A354()
{
  return MEMORY[0x1E0DF2258]();
}

uint64_t sub_1AF76A360()
{
  return MEMORY[0x1E0DF03A0]();
}

uint64_t sub_1AF76A36C()
{
  return MEMORY[0x1E0DF03B0]();
}

uint64_t sub_1AF76A378()
{
  return MEMORY[0x1E0DF03B8]();
}

uint64_t sub_1AF76A384()
{
  return MEMORY[0x1E0DF03C0]();
}

uint64_t sub_1AF76A390()
{
  return MEMORY[0x1E0DF03C8]();
}

uint64_t sub_1AF76A39C()
{
  return MEMORY[0x1E0DF03F8]();
}

uint64_t sub_1AF76A3A8()
{
  return MEMORY[0x1E0DF0400]();
}

uint64_t sub_1AF76A3B4()
{
  return MEMORY[0x1E0DF0408]();
}

uint64_t sub_1AF76A3C0()
{
  return MEMORY[0x1E0DF0410]();
}

uint64_t sub_1AF76A3CC()
{
  return MEMORY[0x1E0DF0418]();
}

uint64_t sub_1AF76A3D8()
{
  return MEMORY[0x1E0DF0420]();
}

uint64_t sub_1AF76A3E4()
{
  return MEMORY[0x1E0DF0430]();
}

uint64_t sub_1AF76A3F0()
{
  return MEMORY[0x1E0DF0438]();
}

uint64_t sub_1AF76A3FC()
{
  return MEMORY[0x1E0DF0448]();
}

uint64_t sub_1AF76A408()
{
  return MEMORY[0x1E0DF0470]();
}

uint64_t sub_1AF76A414()
{
  return MEMORY[0x1E0DF0488]();
}

uint64_t sub_1AF76A420()
{
  return MEMORY[0x1E0DF0498]();
}

uint64_t sub_1AF76A42C()
{
  return MEMORY[0x1E0DF04E8]();
}

uint64_t sub_1AF76A438()
{
  return MEMORY[0x1E0DF0558]();
}

uint64_t sub_1AF76A444()
{
  return MEMORY[0x1E0DF0568]();
}

uint64_t sub_1AF76A450()
{
  return MEMORY[0x1E0DEF550]();
}

uint64_t sub_1AF76A45C()
{
  return MEMORY[0x1E0DEF560]();
}

uint64_t sub_1AF76A468()
{
  return MEMORY[0x1E0DEF578]();
}

uint64_t sub_1AF76A474()
{
  return MEMORY[0x1E0DEF590]();
}

uint64_t sub_1AF76A480()
{
  return MEMORY[0x1E0DEF5A0]();
}

uint64_t sub_1AF76A48C()
{
  return MEMORY[0x1E0DEF5B0]();
}

uint64_t sub_1AF76A498()
{
  return MEMORY[0x1E0DE9D60]();
}

uint64_t sub_1AF76A4A4()
{
  return MEMORY[0x1E0CB17F8]();
}

uint64_t sub_1AF76A4B0()
{
  return MEMORY[0x1E0CB1808]();
}

uint64_t sub_1AF76A4BC()
{
  return MEMORY[0x1E0DE9E38]();
}

uint64_t sub_1AF76A4C8()
{
  return MEMORY[0x1E0DE9E78]();
}

uint64_t sub_1AF76A4D4()
{
  return MEMORY[0x1E0DE9F78]();
}

uint64_t sub_1AF76A4E0()
{
  return MEMORY[0x1E0DE9FC0]();
}

uint64_t sub_1AF76A4EC()
{
  return MEMORY[0x1E0DEA038]();
}

uint64_t sub_1AF76A4F8()
{
  return MEMORY[0x1E0DEA048]();
}

uint64_t sub_1AF76A504()
{
  return MEMORY[0x1E0DEA0A8]();
}

uint64_t sub_1AF76A510()
{
  return MEMORY[0x1E0DEA0F0]();
}

uint64_t sub_1AF76A51C()
{
  return MEMORY[0x1E0DEA1C0]();
}

uint64_t sub_1AF76A528()
{
  return MEMORY[0x1E0DEA3B0]();
}

uint64_t sub_1AF76A534()
{
  return MEMORY[0x1E0DEA540]();
}

uint64_t sub_1AF76A540()
{
  return MEMORY[0x1E0CB18A0]();
}

uint64_t sub_1AF76A54C()
{
  return MEMORY[0x1E0CB18F8]();
}

uint64_t sub_1AF76A558()
{
  return MEMORY[0x1E0CB1940]();
}

uint64_t sub_1AF76A564()
{
  return MEMORY[0x1E0CB1960]();
}

uint64_t sub_1AF76A570()
{
  return MEMORY[0x1E0CB1970]();
}

uint64_t sub_1AF76A57C()
{
  return MEMORY[0x1E0CB1980]();
}

uint64_t sub_1AF76A588()
{
  return MEMORY[0x1E0DEA5F8]();
}

uint64_t sub_1AF76A594()
{
  return MEMORY[0x1E0DEA630]();
}

uint64_t sub_1AF76A5A0()
{
  return MEMORY[0x1E0DEA6F0]();
}

uint64_t sub_1AF76A5AC()
{
  return MEMORY[0x1E0DEA758]();
}

uint64_t sub_1AF76A5B8()
{
  return MEMORY[0x1E0DEA800]();
}

uint64_t sub_1AF76A5C4()
{
  return MEMORY[0x1E0DEA828]();
}

uint64_t sub_1AF76A5D0()
{
  return MEMORY[0x1E0DEA850]();
}

uint64_t sub_1AF76A5DC()
{
  return MEMORY[0x1E0DEAAA8]();
}

uint64_t sub_1AF76A5E8()
{
  return MEMORY[0x1E0DEAB40]();
}

uint64_t sub_1AF76A5F4()
{
  return MEMORY[0x1E0CB1AC0]();
}

uint64_t sub_1AF76A600()
{
  return MEMORY[0x1E0DEADB0]();
}

uint64_t sub_1AF76A60C()
{
  return MEMORY[0x1E0DEADB8]();
}

uint64_t sub_1AF76A618()
{
  return MEMORY[0x1E0DEAE10]();
}

uint64_t sub_1AF76A624()
{
  return MEMORY[0x1E0DEAE28]();
}

uint64_t sub_1AF76A630()
{
  return MEMORY[0x1E0DEAEC8]();
}

uint64_t sub_1AF76A63C()
{
  return MEMORY[0x1E0DEAF00]();
}

uint64_t sub_1AF76A648()
{
  return MEMORY[0x1E0C91CF8]();
}

uint64_t sub_1AF76A654()
{
  return MEMORY[0x1E0DF05B8]();
}

uint64_t sub_1AF76A660()
{
  return MEMORY[0x1E0DF05C8]();
}

uint64_t sub_1AF76A66C()
{
  return MEMORY[0x1E0DF05D0]();
}

uint64_t sub_1AF76A678()
{
  return MEMORY[0x1E0DF05D8]();
}

uint64_t sub_1AF76A684()
{
  return MEMORY[0x1E0DF0688]();
}

uint64_t sub_1AF76A690()
{
  return MEMORY[0x1E0DF0748]();
}

uint64_t sub_1AF76A69C()
{
  return MEMORY[0x1E0DF0750]();
}

uint64_t sub_1AF76A6A8()
{
  return MEMORY[0x1E0DF0790]();
}

uint64_t sub_1AF76A6B4()
{
  return MEMORY[0x1E0DF07A0]();
}

uint64_t sub_1AF76A6C0()
{
  return MEMORY[0x1E0DF07C0]();
}

uint64_t sub_1AF76A6CC()
{
  return MEMORY[0x1E0DF07D8]();
}

uint64_t sub_1AF76A6D8()
{
  return MEMORY[0x1E0DF07E0]();
}

uint64_t sub_1AF76A6E4()
{
  return MEMORY[0x1E0DF07E8]();
}

uint64_t sub_1AF76A6F0()
{
  return MEMORY[0x1E0DF0840]();
}

uint64_t sub_1AF76A6FC()
{
  return MEMORY[0x1E0DF0950]();
}

uint64_t sub_1AF76A708()
{
  return MEMORY[0x1E0DF09D0]();
}

uint64_t sub_1AF76A714()
{
  return MEMORY[0x1E0DF0A30]();
}

uint64_t sub_1AF76A720()
{
  return MEMORY[0x1E0DF0A40]();
}

uint64_t sub_1AF76A72C()
{
  return MEMORY[0x1E0DF0A58]();
}

uint64_t sub_1AF76A738()
{
  return MEMORY[0x1E0DF0A68]();
}

uint64_t sub_1AF76A744()
{
  return MEMORY[0x1E0DF0A70]();
}

uint64_t sub_1AF76A750()
{
  return MEMORY[0x1E0DF0A78]();
}

uint64_t sub_1AF76A75C()
{
  return MEMORY[0x1E0DF0AD8]();
}

uint64_t sub_1AF76A768()
{
  return MEMORY[0x1E0DEB120]();
}

uint64_t sub_1AF76A774()
{
  return MEMORY[0x1E0DEB220]();
}

uint64_t sub_1AF76A780()
{
  return MEMORY[0x1E0DEB258]();
}

uint64_t sub_1AF76A78C()
{
  return MEMORY[0x1E0DEB388]();
}

uint64_t sub_1AF76A798()
{
  return MEMORY[0x1E0DEB3B0]();
}

uint64_t sub_1AF76A7A4()
{
  return MEMORY[0x1E0DEB528]();
}

uint64_t sub_1AF76A7B0()
{
  return MEMORY[0x1E0DEB560]();
}

uint64_t sub_1AF76A7BC()
{
  return MEMORY[0x1E0DEB5B0]();
}

uint64_t sub_1AF76A7C8()
{
  return MEMORY[0x1E0DEB5C8]();
}

uint64_t sub_1AF76A7D4()
{
  return MEMORY[0x1E0DEB660]();
}

uint64_t sub_1AF76A7E0()
{
  return MEMORY[0x1E0DEB6C8]();
}

uint64_t sub_1AF76A7EC()
{
  return MEMORY[0x1E0DEB6D0]();
}

uint64_t sub_1AF76A7F8()
{
  return MEMORY[0x1E0CB1CD0]();
}

uint64_t sub_1AF76A804()
{
  return MEMORY[0x1E0DF2278]();
}

uint64_t sub_1AF76A810()
{
  return MEMORY[0x1E0DF2280]();
}

uint64_t sub_1AF76A81C()
{
  return MEMORY[0x1E0DF2290]();
}

uint64_t sub_1AF76A828()
{
  return MEMORY[0x1E0CB1E68]();
}

uint64_t sub_1AF76A834()
{
  return MEMORY[0x1E0DEF810]();
}

uint64_t sub_1AF76A840()
{
  return MEMORY[0x1E0DEF8E0]();
}

uint64_t sub_1AF76A84C()
{
  return MEMORY[0x1E0DEF910]();
}

uint64_t sub_1AF76A858()
{
  return MEMORY[0x1E0DEF920]();
}

uint64_t sub_1AF76A864()
{
  return MEMORY[0x1E0DF2298]();
}

uint64_t sub_1AF76A870()
{
  return MEMORY[0x1E0DF22A0]();
}

uint64_t sub_1AF76A87C()
{
  return MEMORY[0x1E0DF22A8]();
}

uint64_t sub_1AF76A888()
{
  return MEMORY[0x1E0D43910]();
}

uint64_t sub_1AF76A894()
{
  return MEMORY[0x1E0CB2020]();
}

uint64_t sub_1AF76A8A0()
{
  return MEMORY[0x1E0DF22B0]();
}

uint64_t sub_1AF76A8AC()
{
  return MEMORY[0x1E0DEB940]();
}

uint64_t sub_1AF76A8B8()
{
  return MEMORY[0x1E0DEBB68]();
}

uint64_t sub_1AF76A8C4()
{
  return MEMORY[0x1E0DEBC20]();
}

uint64_t sub_1AF76A8D0()
{
  return MEMORY[0x1E0DEBC90]();
}

uint64_t sub_1AF76A8DC()
{
  return MEMORY[0x1E0DEBE50]();
}

uint64_t sub_1AF76A8E8()
{
  return MEMORY[0x1E0DEBF30]();
}

uint64_t sub_1AF76A8F4()
{
  return MEMORY[0x1E0DEBF58]();
}

uint64_t sub_1AF76A900()
{
  return MEMORY[0x1E0DEC060]();
}

uint64_t sub_1AF76A90C()
{
  return MEMORY[0x1E0DEC068]();
}

uint64_t sub_1AF76A918()
{
  return MEMORY[0x1E0DEC130]();
}

uint64_t sub_1AF76A924()
{
  return MEMORY[0x1E0DEC1B0]();
}

uint64_t sub_1AF76A930()
{
  return MEMORY[0x1E0DEC248]();
}

uint64_t sub_1AF76A93C()
{
  return MEMORY[0x1E0DEC250]();
}

uint64_t sub_1AF76A948()
{
  return MEMORY[0x1E0DEC260]();
}

uint64_t sub_1AF76A954()
{
  return MEMORY[0x1E0DEC280]();
}

uint64_t sub_1AF76A960()
{
  return MEMORY[0x1E0DEC2A8]();
}

uint64_t sub_1AF76A96C()
{
  return MEMORY[0x1E0DEC2B0]();
}

uint64_t sub_1AF76A978()
{
  return MEMORY[0x1E0DEC3E0]();
}

uint64_t sub_1AF76A984()
{
  return MEMORY[0x1E0DEC440]();
}

uint64_t sub_1AF76A990()
{
  return MEMORY[0x1E0DEC470]();
}

uint64_t sub_1AF76A99C()
{
  return MEMORY[0x1E0DEC498]();
}

uint64_t sub_1AF76A9A8()
{
  return MEMORY[0x1E0DEC508]();
}

uint64_t sub_1AF76A9B4()
{
  return MEMORY[0x1E0DEC518]();
}

uint64_t sub_1AF76A9C0()
{
  return MEMORY[0x1E0DEC588]();
}

uint64_t sub_1AF76A9CC()
{
  return MEMORY[0x1E0DEC680]();
}

uint64_t sub_1AF76A9D8()
{
  return MEMORY[0x1E0DEC6E0]();
}

uint64_t sub_1AF76A9E4()
{
  return MEMORY[0x1E0DEC700]();
}

uint64_t sub_1AF76A9F0()
{
  return MEMORY[0x1E0DEC708]();
}

uint64_t sub_1AF76A9FC()
{
  return MEMORY[0x1E0DEC8E0]();
}

uint64_t sub_1AF76AA08()
{
  return MEMORY[0x1E0DEC990]();
}

uint64_t sub_1AF76AA14()
{
  return MEMORY[0x1E0DECAE0]();
}

uint64_t sub_1AF76AA20()
{
  return MEMORY[0x1E0DECB00]();
}

uint64_t sub_1AF76AA2C()
{
  return MEMORY[0x1E0DECBE0]();
}

uint64_t sub_1AF76AA38()
{
  return MEMORY[0x1E0DECBE8]();
}

uint64_t sub_1AF76AA44()
{
  return MEMORY[0x1E0DECD18]();
}

uint64_t sub_1AF76AA50()
{
  return MEMORY[0x1E0DECD38]();
}

uint64_t sub_1AF76AA5C()
{
  return MEMORY[0x1E0DECD40]();
}

uint64_t sub_1AF76AA68()
{
  return MEMORY[0x1E0DECD50]();
}

uint64_t sub_1AF76AA74()
{
  return MEMORY[0x1E0DECD70]();
}

uint64_t sub_1AF76AA80()
{
  return MEMORY[0x1E0DECE70]();
}

uint64_t sub_1AF76AA8C()
{
  return MEMORY[0x1E0DECF28]();
}

uint64_t sub_1AF76AA98()
{
  return MEMORY[0x1E0DF0D38]();
}

uint64_t sub_1AF76AAA4()
{
  return MEMORY[0x1E0DECF38]();
}

uint64_t sub_1AF76AAB0()
{
  return MEMORY[0x1E0DECF40]();
}

uint64_t sub_1AF76AABC()
{
  return MEMORY[0x1E0DECF58]();
}

uint64_t sub_1AF76AAC8()
{
  return MEMORY[0x1E0DECF88]();
}

uint64_t sub_1AF76AAD4()
{
  return MEMORY[0x1E0DECFC0]();
}

uint64_t sub_1AF76AAE0()
{
  return MEMORY[0x1E0DECFC8]();
}

uint64_t sub_1AF76AAEC()
{
  return MEMORY[0x1E0DECFE0]();
}

uint64_t sub_1AF76AAF8()
{
  return MEMORY[0x1E0DECFF0]();
}

uint64_t sub_1AF76AB04()
{
  return MEMORY[0x1E0DED038]();
}

uint64_t sub_1AF76AB10()
{
  return MEMORY[0x1E0DED048]();
}

uint64_t sub_1AF76AB1C()
{
  return MEMORY[0x1E0DED058]();
}

uint64_t sub_1AF76AB28()
{
  return MEMORY[0x1E0DED070]();
}

uint64_t sub_1AF76AB34()
{
  return MEMORY[0x1E0DED090]();
}

uint64_t sub_1AF76AB40()
{
  return MEMORY[0x1E0DED0F0]();
}

uint64_t sub_1AF76AB4C()
{
  return MEMORY[0x1E0DED0F8]();
}

uint64_t sub_1AF76AB58()
{
  return MEMORY[0x1E0DED110]();
}

uint64_t sub_1AF76AB64()
{
  return MEMORY[0x1E0DED120]();
}

uint64_t sub_1AF76AB70()
{
  return MEMORY[0x1E0DED170]();
}

uint64_t sub_1AF76AB7C()
{
  return MEMORY[0x1E0DED180]();
}

uint64_t sub_1AF76AB88()
{
  return MEMORY[0x1E0DED1B0]();
}

uint64_t sub_1AF76AB94()
{
  return MEMORY[0x1E0DED1D0]();
}

uint64_t sub_1AF76ABA0()
{
  return MEMORY[0x1E0DED2C8]();
}

uint64_t sub_1AF76ABAC()
{
  return MEMORY[0x1E0DED2D0]();
}

uint64_t sub_1AF76ABB8()
{
  return MEMORY[0x1E0DED2D8]();
}

uint64_t sub_1AF76ABC4()
{
  return MEMORY[0x1E0DED2E8]();
}

uint64_t sub_1AF76ABD0()
{
  return MEMORY[0x1E0DED2F0]();
}

uint64_t sub_1AF76ABDC()
{
  return MEMORY[0x1E0DED2F8]();
}

uint64_t sub_1AF76ABE8()
{
  return MEMORY[0x1E0DED318]();
}

uint64_t sub_1AF76ABF4()
{
  return MEMORY[0x1E0DED340]();
}

uint64_t sub_1AF76AC00()
{
  return MEMORY[0x1E0DED350]();
}

uint64_t sub_1AF76AC0C()
{
  return MEMORY[0x1E0DED358]();
}

uint64_t sub_1AF76AC18()
{
  return MEMORY[0x1E0DED400]();
}

uint64_t sub_1AF76AC24()
{
  return MEMORY[0x1E0DED408]();
}

uint64_t sub_1AF76AC30()
{
  return MEMORY[0x1E0DED410]();
}

uint64_t sub_1AF76AC3C()
{
  return MEMORY[0x1E0DED418]();
}

uint64_t sub_1AF76AC48()
{
  return MEMORY[0x1E0DED420]();
}

uint64_t sub_1AF76AC54()
{
  return MEMORY[0x1E0DED428]();
}

uint64_t sub_1AF76AC60()
{
  return MEMORY[0x1E0DED430]();
}

uint64_t sub_1AF76AC6C()
{
  return MEMORY[0x1E0DED438]();
}

uint64_t sub_1AF76AC78()
{
  return MEMORY[0x1E0DED440]();
}

uint64_t sub_1AF76AC84()
{
  return MEMORY[0x1E0DED448]();
}

uint64_t sub_1AF76AC90()
{
  return MEMORY[0x1E0DED450]();
}

uint64_t sub_1AF76AC9C()
{
  return MEMORY[0x1E0DED458]();
}

uint64_t sub_1AF76ACA8()
{
  return MEMORY[0x1E0DED460]();
}

uint64_t sub_1AF76ACB4()
{
  return MEMORY[0x1E0DED468]();
}

uint64_t sub_1AF76ACC0()
{
  return MEMORY[0x1E0DED470]();
}

uint64_t sub_1AF76ACCC()
{
  return MEMORY[0x1E0DED478]();
}

uint64_t sub_1AF76ACD8()
{
  return MEMORY[0x1E0DED480]();
}

uint64_t sub_1AF76ACE4()
{
  return MEMORY[0x1E0DED488]();
}

uint64_t sub_1AF76ACF0()
{
  return MEMORY[0x1E0DED490]();
}

uint64_t sub_1AF76ACFC()
{
  return MEMORY[0x1E0DED498]();
}

uint64_t sub_1AF76AD08()
{
  return MEMORY[0x1E0DED550]();
}

uint64_t sub_1AF76AD14()
{
  return MEMORY[0x1E0DED600]();
}

uint64_t sub_1AF76AD20()
{
  return MEMORY[0x1E0DED658]();
}

uint64_t sub_1AF76AD2C()
{
  return MEMORY[0x1E0DED698]();
}

uint64_t sub_1AF76AD38()
{
  return MEMORY[0x1E0DED6A0]();
}

uint64_t sub_1AF76AD44()
{
  return MEMORY[0x1E0DED6F8]();
}

uint64_t sub_1AF76AD50()
{
  return MEMORY[0x1E0DED748]();
}

uint64_t sub_1AF76AD5C()
{
  return MEMORY[0x1E0DED750]();
}

uint64_t sub_1AF76AD68()
{
  return MEMORY[0x1E0DED7D0]();
}

uint64_t sub_1AF76AD74()
{
  return MEMORY[0x1E0DED7D8]();
}

uint64_t sub_1AF76AD80()
{
  return MEMORY[0x1E0DED7E0]();
}

uint64_t sub_1AF76AD8C()
{
  return MEMORY[0x1E0DED7F0]();
}

uint64_t sub_1AF76AD98()
{
  return MEMORY[0x1E0DED7F8]();
}

uint64_t sub_1AF76ADA4()
{
  return MEMORY[0x1E0DED800]();
}

uint64_t sub_1AF76ADB0()
{
  return MEMORY[0x1E0DED820]();
}

uint64_t sub_1AF76ADBC()
{
  return MEMORY[0x1E0DED848]();
}

uint64_t sub_1AF76ADC8()
{
  return MEMORY[0x1E0DED858]();
}

uint64_t sub_1AF76ADD4()
{
  return MEMORY[0x1E0DED860]();
}

uint64_t sub_1AF76ADE0()
{
  return MEMORY[0x1E0DED8D0]();
}

uint64_t sub_1AF76ADEC()
{
  return MEMORY[0x1E0DED8D8]();
}

uint64_t sub_1AF76ADF8()
{
  return MEMORY[0x1E0DED8E0]();
}

uint64_t sub_1AF76AE04()
{
  return MEMORY[0x1E0DED8F0]();
}

uint64_t sub_1AF76AE10()
{
  return MEMORY[0x1E0DED8F8]();
}

uint64_t sub_1AF76AE1C()
{
  return MEMORY[0x1E0DED900]();
}

uint64_t sub_1AF76AE28()
{
  return MEMORY[0x1E0DED920]();
}

uint64_t sub_1AF76AE34()
{
  return MEMORY[0x1E0DED930]();
}

uint64_t sub_1AF76AE40()
{
  return MEMORY[0x1E0DED948]();
}

uint64_t sub_1AF76AE4C()
{
  return MEMORY[0x1E0DED950]();
}

uint64_t sub_1AF76AE58()
{
  return MEMORY[0x1E0DED958]();
}

uint64_t sub_1AF76AE64()
{
  return MEMORY[0x1E0DED960]();
}

uint64_t sub_1AF76AE70()
{
  return MEMORY[0x1E0DED968]();
}

uint64_t sub_1AF76AE7C()
{
  return MEMORY[0x1E0DF0EC0]();
}

uint64_t sub_1AF76AE88()
{
  return MEMORY[0x1E0DED9C8]();
}

uint64_t sub_1AF76AE94()
{
  return MEMORY[0x1E0DEDAE0]();
}

uint64_t sub_1AF76AEA0()
{
  return MEMORY[0x1E0DEDAE8]();
}

uint64_t sub_1AF76AEAC()
{
  return MEMORY[0x1E0CB2628]();
}

uint64_t sub_1AF76AEB8()
{
  return MEMORY[0x1E0CB2640]();
}

uint64_t sub_1AF76AEC4()
{
  return MEMORY[0x1E0CB2650]();
}

uint64_t sub_1AF76AED0()
{
  return MEMORY[0x1E0DEDB10]();
}

uint64_t sub_1AF76AEDC()
{
  return MEMORY[0x1E0DEDB18]();
}

uint64_t sub_1AF76AEE8()
{
  return MEMORY[0x1E0DEDB20]();
}

uint64_t sub_1AF76AEF4()
{
  return MEMORY[0x1E0DEDB28]();
}

uint64_t sub_1AF76AF00()
{
  return MEMORY[0x1E0DEDED8]();
}

uint64_t sub_1AF76AF0C()
{
  return MEMORY[0x1E0DEDEE8]();
}

uint64_t sub_1AF76AF18()
{
  return MEMORY[0x1E0DEDEF8]();
}

uint64_t sub_1AF76AF24()
{
  return MEMORY[0x1E0DEDF10]();
}

uint64_t sub_1AF76AF30()
{
  return MEMORY[0x1E0DEDF18]();
}

uint64_t sub_1AF76AF3C()
{
  return MEMORY[0x1E0DEDF40]();
}

uint64_t sub_1AF76AF48()
{
  return MEMORY[0x1E0DEE230]();
}

uint64_t sub_1AF76AF54()
{
  return MEMORY[0x1E0DEE240]();
}

uint64_t sub_1AF76AF60()
{
  return MEMORY[0x1E0DEE260]();
}

uint64_t sub_1AF76AF6C()
{
  return MEMORY[0x1E0DEE270]();
}

uint64_t sub_1AF76AF78()
{
  return MEMORY[0x1E0DEE8B8]();
}

uint64_t sub_1AF76AF84()
{
  return MEMORY[0x1E0DEE8C8]();
}

uint64_t sub_1AF76AF90()
{
  return MEMORY[0x1E0DEE8E0]();
}

uint64_t sub_1AF76AF9C()
{
  return MEMORY[0x1E0DEE8E8]();
}

CFTimeInterval CACurrentMediaTime(void)
{
  CFTimeInterval result;

  MEMORY[0x1E0CD2388]();
  return result;
}

uint64_t CALayerGetContext()
{
  return MEMORY[0x1E0CD24E8]();
}

uint64_t CALayerGetRenderId()
{
  return MEMORY[0x1E0CD24F8]();
}

CFTypeRef CFAutorelease(CFTypeRef arg)
{
  return (CFTypeRef)MEMORY[0x1E0C97E90](arg);
}

CFMutableBitVectorRef CFBitVectorCreateMutable(CFAllocatorRef allocator, CFIndex capacity)
{
  return (CFMutableBitVectorRef)MEMORY[0x1E0C97F68](allocator, capacity);
}

CFIndex CFBitVectorGetFirstIndexOfBit(CFBitVectorRef bv, CFRange range, CFBit value)
{
  return MEMORY[0x1E0C97F98](bv, range.location, range.length, *(_QWORD *)&value);
}

CFIndex CFBitVectorGetLastIndexOfBit(CFBitVectorRef bv, CFRange range, CFBit value)
{
  return MEMORY[0x1E0C97FA0](bv, range.location, range.length, *(_QWORD *)&value);
}

void CFBitVectorSetAllBits(CFMutableBitVectorRef bv, CFBit value)
{
  MEMORY[0x1E0C97FA8](bv, *(_QWORD *)&value);
}

void CFBitVectorSetBitAtIndex(CFMutableBitVectorRef bv, CFIndex idx, CFBit value)
{
  MEMORY[0x1E0C97FB0](bv, idx, *(_QWORD *)&value);
}

void CFBitVectorSetCount(CFMutableBitVectorRef bv, CFIndex count)
{
  MEMORY[0x1E0C97FC0](bv, count);
}

Boolean CFCharacterSetIsCharacterMember(CFCharacterSetRef theSet, UniChar theChar)
{
  return MEMORY[0x1E0C98320](theSet, theChar);
}

CFHashCode CFHash(CFTypeRef cf)
{
  return MEMORY[0x1E0C98758](cf);
}

void CFNotificationCenterAddObserver(CFNotificationCenterRef center, const void *observer, CFNotificationCallback callBack, CFStringRef name, const void *object, CFNotificationSuspensionBehavior suspensionBehavior)
{
  MEMORY[0x1E0C988B0](center, observer, callBack, name, object, suspensionBehavior);
}

CFNotificationCenterRef CFNotificationCenterGetDarwinNotifyCenter(void)
{
  return (CFNotificationCenterRef)MEMORY[0x1E0C988B8]();
}

void CFNotificationCenterRemoveObserver(CFNotificationCenterRef center, const void *observer, CFNotificationName name, const void *object)
{
  MEMORY[0x1E0C98900](center, observer, name, object);
}

void CFRelease(CFTypeRef cf)
{
  MEMORY[0x1E0C98BC0](cf);
}

CFTypeRef CFRetain(CFTypeRef cf)
{
  return (CFTypeRef)MEMORY[0x1E0C98BD0](cf);
}

CGAffineTransform *__cdecl CGAffineTransformConcat(CGAffineTransform *__return_ptr retstr, CGAffineTransform *t1, CGAffineTransform *t2)
{
  return (CGAffineTransform *)MEMORY[0x1E0C9BA90](retstr, t1, t2);
}

CGAffineTransform *__cdecl CGAffineTransformInvert(CGAffineTransform *__return_ptr retstr, CGAffineTransform *t)
{
  return (CGAffineTransform *)MEMORY[0x1E0C9BAB0](retstr, t);
}

CGAffineTransform *__cdecl CGAffineTransformMakeScale(CGAffineTransform *__return_ptr retstr, CGFloat sx, CGFloat sy)
{
  return (CGAffineTransform *)MEMORY[0x1E0C9BAD8](retstr, sx, sy);
}

CGAffineTransform *__cdecl CGAffineTransformMakeTranslation(CGAffineTransform *__return_ptr retstr, CGFloat tx, CGFloat ty)
{
  return (CGAffineTransform *)MEMORY[0x1E0C9BAE0](retstr, tx, ty);
}

CGContextRef CGBitmapContextCreate(void *data, size_t width, size_t height, size_t bitsPerComponent, size_t bytesPerRow, CGColorSpaceRef space, uint32_t bitmapInfo)
{
  return (CGContextRef)MEMORY[0x1E0C9BB10](data, width, height, bitsPerComponent, bytesPerRow, space, *(_QWORD *)&bitmapInfo);
}

CGImageRef CGBitmapContextCreateImage(CGContextRef context)
{
  return (CGImageRef)MEMORY[0x1E0C9BB20](context);
}

uint64_t CGBitmapContextCreateWithCallbacks()
{
  return MEMORY[0x1E0C9BB30]();
}

CGColorRef CGColorCreate(CGColorSpaceRef space, const CGFloat *components)
{
  return (CGColorRef)MEMORY[0x1E0C9BC78](space, components);
}

CGColorRef CGColorCreateCopyWithAlpha(CGColorRef color, CGFloat alpha)
{
  return (CGColorRef)MEMORY[0x1E0C9BC90](color, alpha);
}

BOOL CGColorEqualToColor(CGColorRef color1, CGColorRef color2)
{
  return MEMORY[0x1E0C9BCD8](color1, color2);
}

CGFloat CGColorGetAlpha(CGColorRef color)
{
  CGFloat result;

  MEMORY[0x1E0C9BCF8](color);
  return result;
}

CGColorSpaceRef CGColorGetColorSpace(CGColorRef color)
{
  return (CGColorSpaceRef)MEMORY[0x1E0C9BD00](color);
}

const CGFloat *__cdecl CGColorGetComponents(CGColorRef color)
{
  return (const CGFloat *)MEMORY[0x1E0C9BD08](color);
}

void CGColorRelease(CGColorRef color)
{
  MEMORY[0x1E0C9BD60](color);
}

CGColorRef CGColorRetain(CGColorRef color)
{
  return (CGColorRef)MEMORY[0x1E0C9BD68](color);
}

CGColorSpaceRef CGColorSpaceCreateDeviceRGB(void)
{
  return (CGColorSpaceRef)MEMORY[0x1E0C9BDF0]();
}

CGColorSpaceRef CGColorSpaceCreateWithName(CFStringRef name)
{
  return (CGColorSpaceRef)MEMORY[0x1E0C9BE50](name);
}

uint64_t CGColorSpaceEqualToColorSpace()
{
  return MEMORY[0x1E0C9BE68]();
}

CFStringRef CGColorSpaceGetName(CGColorSpaceRef space)
{
  return (CFStringRef)MEMORY[0x1E0C9BED0](space);
}

size_t CGColorSpaceGetNumberOfComponents(CGColorSpaceRef space)
{
  return MEMORY[0x1E0C9BED8](space);
}

void CGColorSpaceRelease(CGColorSpaceRef space)
{
  MEMORY[0x1E0C9BF30](space);
}

CGColorSpaceRef CGColorSpaceRetain(CGColorSpaceRef space)
{
  return (CGColorSpaceRef)MEMORY[0x1E0C9BF38](space);
}

uint64_t CGColorTransformConvertColor()
{
  return MEMORY[0x1E0C9BF78]();
}

uint64_t CGColorTransformConvertColorComponents()
{
  return MEMORY[0x1E0C9BF80]();
}

uint64_t CGColorTransformCreate()
{
  return MEMORY[0x1E0C9BF90]();
}

uint64_t CGColorTransformRelease()
{
  return MEMORY[0x1E0C9BFA0]();
}

void CGContextAddPath(CGContextRef c, CGPathRef path)
{
  MEMORY[0x1E0C9BFD8](c, path);
}

void CGContextClearRect(CGContextRef c, CGRect rect)
{
  MEMORY[0x1E0C9C020](c, (__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

void CGContextClip(CGContextRef c)
{
  MEMORY[0x1E0C9C028](c);
}

void CGContextConcatCTM(CGContextRef c, CGAffineTransform *transform)
{
  MEMORY[0x1E0C9C050](c, transform);
}

void CGContextDrawImage(CGContextRef c, CGRect rect, CGImageRef image)
{
  MEMORY[0x1E0C9C170](c, image, (__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

void CGContextDrawLinearGradient(CGContextRef c, CGGradientRef gradient, CGPoint startPoint, CGPoint endPoint, CGGradientDrawingOptions options)
{
  MEMORY[0x1E0C9C198](c, gradient, *(_QWORD *)&options, (__n128)startPoint, *(__n128 *)&startPoint.y, (__n128)endPoint, *(__n128 *)&endPoint.y);
}

void CGContextFillRect(CGContextRef c, CGRect rect)
{
  MEMORY[0x1E0C9C220](c, (__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

CGAffineTransform *__cdecl CGContextGetCTM(CGAffineTransform *__return_ptr retstr, CGContextRef c)
{
  return (CGAffineTransform *)MEMORY[0x1E0C9C250](retstr, c);
}

void CGContextRelease(CGContextRef c)
{
  MEMORY[0x1E0C9C340](c);
}

void CGContextRestoreGState(CGContextRef c)
{
  MEMORY[0x1E0C9C370](c);
}

CGContextRef CGContextRetain(CGContextRef c)
{
  return (CGContextRef)MEMORY[0x1E0C9C378](c);
}

void CGContextSaveGState(CGContextRef c)
{
  MEMORY[0x1E0C9C388](c);
}

void CGContextScaleCTM(CGContextRef c, CGFloat sx, CGFloat sy)
{
  MEMORY[0x1E0C9C390](c, sx, sy);
}

void CGContextSetAlpha(CGContextRef c, CGFloat alpha)
{
  MEMORY[0x1E0C9C3B8](c, alpha);
}

uint64_t CGContextSetBaseCTM()
{
  return MEMORY[0x1E0C9C3C0]();
}

void CGContextSetBlendMode(CGContextRef c, CGBlendMode mode)
{
  MEMORY[0x1E0C9C3C8](c, *(_QWORD *)&mode);
}

void CGContextSetFillColorWithColor(CGContextRef c, CGColorRef color)
{
  MEMORY[0x1E0C9C408](c, color);
}

void CGContextSetShadowWithColor(CGContextRef c, CGSize offset, CGFloat blur, CGColorRef color)
{
  MEMORY[0x1E0C9C4C0](c, color, (__n128)offset, *(__n128 *)&offset.height, blur);
}

void CGContextTranslateCTM(CGContextRef c, CGFloat tx, CGFloat ty)
{
  MEMORY[0x1E0C9C588](c, tx, ty);
}

CGDataProviderRef CGDataProviderCreateWithData(void *info, const void *data, size_t size, CGDataProviderReleaseDataCallback releaseData)
{
  return (CGDataProviderRef)MEMORY[0x1E0C9C600](info, data, size, releaseData);
}

CGDataProviderRef CGDataProviderCreateWithURL(CFURLRef url)
{
  return (CGDataProviderRef)MEMORY[0x1E0C9C610](url);
}

void CGDataProviderRelease(CGDataProviderRef provider)
{
  MEMORY[0x1E0C9C638](provider);
}

CGFontRef CGFontCreateWithDataProvider(CGDataProviderRef provider)
{
  return (CGFontRef)MEMORY[0x1E0C9C748](provider);
}

void CGFontRelease(CGFontRef font)
{
  MEMORY[0x1E0C9C8E0](font);
}

CGGradientRef CGGradientCreateWithColors(CGColorSpaceRef space, CFArrayRef colors, const CGFloat *locations)
{
  return (CGGradientRef)MEMORY[0x1E0C9CA90](space, colors, locations);
}

void CGGradientRelease(CGGradientRef gradient)
{
  MEMORY[0x1E0C9CAC0](gradient);
}

CGImageRef CGImageCreate(size_t width, size_t height, size_t bitsPerComponent, size_t bitsPerPixel, size_t bytesPerRow, CGColorSpaceRef space, CGBitmapInfo bitmapInfo, CGDataProviderRef provider, const CGFloat *decode, BOOL shouldInterpolate, CGColorRenderingIntent intent)
{
  return (CGImageRef)MEMORY[0x1E0C9CB80](width, height, bitsPerComponent, bitsPerPixel, bytesPerRow, space, *(_QWORD *)&bitmapInfo, provider);
}

CGImageRef CGImageCreateWithImageInRect(CGImageRef image, CGRect rect)
{
  return (CGImageRef)MEMORY[0x1E0C9CBA8](image, (__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

CGBitmapInfo CGImageGetBitmapInfo(CGImageRef image)
{
  return MEMORY[0x1E0C9CBF0](image);
}

size_t CGImageGetBitsPerComponent(CGImageRef image)
{
  return MEMORY[0x1E0C9CBF8](image);
}

size_t CGImageGetBytesPerRow(CGImageRef image)
{
  return MEMORY[0x1E0C9CC08](image);
}

CGColorSpaceRef CGImageGetColorSpace(CGImageRef image)
{
  return (CGColorSpaceRef)MEMORY[0x1E0C9CC20](image);
}

size_t CGImageGetHeight(CGImageRef image)
{
  return MEMORY[0x1E0C9CC60](image);
}

size_t CGImageGetWidth(CGImageRef image)
{
  return MEMORY[0x1E0C9CCD0](image);
}

void CGImageRelease(CGImageRef image)
{
  MEMORY[0x1E0C9CDA0](image);
}

CGImageRef CGImageRetain(CGImageRef image)
{
  return (CGImageRef)MEMORY[0x1E0C9CDA8](image);
}

void CGPathAddCurveToPoint(CGMutablePathRef path, const CGAffineTransform *m, CGFloat cp1x, CGFloat cp1y, CGFloat cp2x, CGFloat cp2y, CGFloat x, CGFloat y)
{
  MEMORY[0x1E0C9D298](path, m, cp1x, cp1y, cp2x, cp2y, x, y);
}

void CGPathAddLineToPoint(CGMutablePathRef path, const CGAffineTransform *m, CGFloat x, CGFloat y)
{
  MEMORY[0x1E0C9D2A8](path, m, x, y);
}

void CGPathCloseSubpath(CGMutablePathRef path)
{
  MEMORY[0x1E0C9D310](path);
}

CGMutablePathRef CGPathCreateMutable(void)
{
  return (CGMutablePathRef)MEMORY[0x1E0C9D388]();
}

CGPathRef CGPathCreateWithRect(CGRect rect, const CGAffineTransform *transform)
{
  return (CGPathRef)MEMORY[0x1E0C9D3C8](transform, (__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

CGPathRef CGPathCreateWithRoundedRect(CGRect rect, CGFloat cornerWidth, CGFloat cornerHeight, const CGAffineTransform *transform)
{
  return (CGPathRef)MEMORY[0x1E0C9D3D0](transform, (__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height, cornerWidth, cornerHeight);
}

void CGPathMoveToPoint(CGMutablePathRef path, const CGAffineTransform *m, CGFloat x, CGFloat y)
{
  MEMORY[0x1E0C9D490](path, m, x, y);
}

void CGPathRelease(CGPathRef path)
{
  MEMORY[0x1E0C9D498](path);
}

CGPathRef CGPathRetain(CGPathRef path)
{
  return (CGPathRef)MEMORY[0x1E0C9D4A0](path);
}

CGRect CGRectApplyAffineTransform(CGRect rect, CGAffineTransform *t)
{
  double v2;
  double v3;
  double v4;
  double v5;
  CGRect result;

  MEMORY[0x1E0C9D548](t, (__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  result.size.height = v5;
  result.size.width = v4;
  result.origin.y = v3;
  result.origin.x = v2;
  return result;
}

BOOL CGRectEqualToRect(CGRect rect1, CGRect rect2)
{
  return MEMORY[0x1E0C9D570]((__n128)rect1.origin, *(__n128 *)&rect1.origin.y, (__n128)rect1.size, *(__n128 *)&rect1.size.height, (__n128)rect2.origin, *(__n128 *)&rect2.origin.y, (__n128)rect2.size, *(__n128 *)&rect2.size.height);
}

CGFloat CGRectGetHeight(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D580]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMaxY(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D5A0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMidX(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D5A8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMidY(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D5B0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMinX(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D5C0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMinY(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D5C8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetWidth(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D5D0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGRect CGRectInset(CGRect rect, CGFloat dx, CGFloat dy)
{
  double v3;
  double v4;
  double v5;
  double v6;
  CGRect result;

  MEMORY[0x1E0C9D5E8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height, dx, dy);
  result.size.height = v6;
  result.size.width = v5;
  result.origin.y = v4;
  result.origin.x = v3;
  return result;
}

BOOL CGRectIsEmpty(CGRect rect)
{
  return MEMORY[0x1E0C9D608]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

uint64_t CPCopyBundleIdentifierAndTeamFromApplicationIdentifier()
{
  return MEMORY[0x1E0CFA228]();
}

uint64_t INDisplayableOrLaunchableBundleIdForBundleIdFromUserActivity()
{
  return MEMORY[0x1E0CBD3E8]();
}

uint64_t INIsHomepod()
{
  return MEMORY[0x1E0CBD500]();
}

uint64_t MGCopyAnswer()
{
  return MEMORY[0x1E0DE2B20]();
}

uint64_t MGGetBoolAnswer()
{
  return MEMORY[0x1E0DE2B50]();
}

uint64_t MGGetSInt32Answer()
{
  return MEMORY[0x1E0DE2B70]();
}

uint64_t MKBDeviceUnlockedSinceBoot()
{
  return MEMORY[0x1E0D4E4A0]();
}

uint64_t MKBGetDeviceLockState()
{
  return MEMORY[0x1E0D4E4D0]();
}

Class NSClassFromString(NSString *aClassName)
{
  return (Class)MEMORY[0x1E0CB28A0](aClassName);
}

const char *__cdecl NSGetSizeAndAlignment(const char *typePtr, NSUInteger *sizep, NSUInteger *alignp)
{
  return (const char *)MEMORY[0x1E0C99758](typePtr, sizep, alignp);
}

void NSLog(NSString *format, ...)
{
  MEMORY[0x1E0CB2D88](format);
}

NSArray *__cdecl NSSearchPathForDirectoriesInDomains(NSSearchPathDirectory directory, NSSearchPathDomainMask domainMask, BOOL expandTilde)
{
  return (NSArray *)MEMORY[0x1E0CB3178](directory, domainMask, expandTilde);
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return (NSString *)MEMORY[0x1E0CB3200](aClass);
}

NSString *__cdecl NSStringFromSelector(SEL aSelector)
{
  return (NSString *)MEMORY[0x1E0CB3230](aSelector);
}

uint64_t SBSIsSystemApertureAvailable()
{
  return MEMORY[0x1E0DAB778]();
}

CFTypeRef SecTaskCopyValueForEntitlement(SecTaskRef task, CFStringRef entitlement, CFErrorRef *error)
{
  return (CFTypeRef)MEMORY[0x1E0CD65F0](task, entitlement, error);
}

CFDictionaryRef SecTaskCopyValuesForEntitlements(SecTaskRef task, CFArrayRef entitlements, CFErrorRef *error)
{
  return (CFDictionaryRef)MEMORY[0x1E0CD6600](task, entitlements, error);
}

SecTaskRef SecTaskCreateFromSelf(CFAllocatorRef allocator)
{
  return (SecTaskRef)MEMORY[0x1E0CD6610](allocator);
}

SecTaskRef SecTaskCreateWithAuditToken(CFAllocatorRef allocator, audit_token_t *token)
{
  return (SecTaskRef)MEMORY[0x1E0CD6620](allocator, token);
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x1E0C80928](aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
  MEMORY[0x1E0C80948](a1, *(_QWORD *)&a2);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x1E0C80958](aBlock);
}

uint64_t _CFBundleCopyBundleURLForExecutableURL()
{
  return MEMORY[0x1E0C99F70]();
}

uint64_t _CFURLAttachSecurityScopeToFileURL()
{
  return MEMORY[0x1E0C9A5B0]();
}

uint64_t _CFXPCCreateCFObjectFromXPCObject()
{
  return MEMORY[0x1E0C9A800]();
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
  MEMORY[0x1E0C80A20](exception_object);
}

void __assert_rtn(const char *a1, const char *a2, int a3, const char *a4)
{
  MEMORY[0x1E0C80A58](a1, a2, *(_QWORD *)&a3, a4);
}

int *__error(void)
{
  return (int *)MEMORY[0x1E0C80AC0]();
}

double __exp10(double a1)
{
  double result;

  MEMORY[0x1E0C80AC8](a1);
  return result;
}

os_activity_t _os_activity_create(void *dso, const char *description, os_activity_t activity, os_activity_flag_t flags)
{
  return (os_activity_t)MEMORY[0x1E0C80FC0](dso, description, activity, *(_QWORD *)&flags);
}

uint64_t _os_feature_enabled_impl()
{
  return MEMORY[0x1E0C81010]();
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81038](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_fault_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81040](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81048](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C810D0](dso, log, type, spid, name, format, buf, *(_QWORD *)&size);
}

uint64_t _sl_dlopen()
{
  return MEMORY[0x1E0DA88F0]();
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x1E0DEEA28]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x1E0DEEA40]();
}

uint32_t arc4random_uniform(uint32_t __upper_bound)
{
  return MEMORY[0x1E0C81588](*(_QWORD *)&__upper_bound);
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x1E0C81758](a1, a2);
}

void dispatch_assert_queue_V2(dispatch_queue_t queue)
{
  MEMORY[0x1E0C82BE8](queue);
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82C00](queue, block);
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return (dispatch_queue_global_t)MEMORY[0x1E0C82D00](identifier, flags);
}

dispatch_group_t dispatch_group_create(void)
{
  return (dispatch_group_t)MEMORY[0x1E0C82D20]();
}

void dispatch_group_enter(dispatch_group_t group)
{
  MEMORY[0x1E0C82D28](group);
}

void dispatch_group_leave(dispatch_group_t group)
{
  MEMORY[0x1E0C82D30](group);
}

void dispatch_group_notify(dispatch_group_t group, dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82D38](group, queue, block);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
  MEMORY[0x1E0C82E08](predicate, block);
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_autorelease_frequency(dispatch_queue_attr_t attr, dispatch_autorelease_frequency_t frequency)
{
  return (dispatch_queue_attr_t)MEMORY[0x1E0C82E28](attr, frequency);
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_qos_class(dispatch_queue_attr_t attr, dispatch_qos_class_t qos_class, int relative_priority)
{
  return (dispatch_queue_attr_t)MEMORY[0x1E0C82E38](attr, *(_QWORD *)&qos_class, *(_QWORD *)&relative_priority);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return (dispatch_queue_t)MEMORY[0x1E0C82E48](label, attr);
}

void dispatch_resume(dispatch_object_t object)
{
  MEMORY[0x1E0C82EA0](object);
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return (dispatch_semaphore_t)MEMORY[0x1E0C82EB8](value);
}

intptr_t dispatch_semaphore_signal(dispatch_semaphore_t dsema)
{
  return MEMORY[0x1E0C82EC8](dsema);
}

intptr_t dispatch_semaphore_wait(dispatch_semaphore_t dsema, dispatch_time_t timeout)
{
  return MEMORY[0x1E0C82ED8](dsema, timeout);
}

void dispatch_source_cancel(dispatch_source_t source)
{
  MEMORY[0x1E0C82F10](source);
}

dispatch_source_t dispatch_source_create(dispatch_source_type_t type, uintptr_t handle, uintptr_t mask, dispatch_queue_t queue)
{
  return (dispatch_source_t)MEMORY[0x1E0C82F20](type, handle, mask, queue);
}

void dispatch_source_set_event_handler(dispatch_source_t source, dispatch_block_t handler)
{
  MEMORY[0x1E0C82F58](source, handler);
}

void dispatch_source_set_timer(dispatch_source_t source, dispatch_time_t start, uint64_t interval, uint64_t leeway)
{
  MEMORY[0x1E0C82F78](source, start, interval, leeway);
}

intptr_t dispatch_source_testcancel(dispatch_source_t source)
{
  return MEMORY[0x1E0C82F80](source);
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82F90](queue, block);
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return MEMORY[0x1E0C82FB8](when, delta);
}

int dladdr(const void *a1, Dl_info *a2)
{
  return MEMORY[0x1E0C83028](a1, a2);
}

char *dlerror(void)
{
  return (char *)MEMORY[0x1E0C83038]();
}

void *__cdecl dlopen(const char *__path, int __mode)
{
  return (void *)MEMORY[0x1E0C83040](__path, *(_QWORD *)&__mode);
}

void *__cdecl dlsym(void *__handle, const char *__symbol)
{
  return (void *)MEMORY[0x1E0C83050](__handle, __symbol);
}

void free(void *a1)
{
  MEMORY[0x1E0C834A8](a1);
}

int gethostname(char *a1, size_t a2)
{
  return MEMORY[0x1E0C836B8](a1, a2);
}

pid_t getpid(void)
{
  return MEMORY[0x1E0C83760]();
}

uint64_t kdebug_trace()
{
  return MEMORY[0x1E0C83A20]();
}

long double log10(long double __x)
{
  long double result;

  MEMORY[0x1E0C83BC0](__x);
  return result;
}

kern_return_t mach_make_memory_entry_64(vm_map_t target_task, memory_object_size_t *size, memory_object_offset_t offset, vm_prot_t permission, mach_port_t *object_handle, mem_entry_name_port_t parent_entry)
{
  return MEMORY[0x1E0C83C98](*(_QWORD *)&target_task, size, offset, *(_QWORD *)&permission, object_handle, *(_QWORD *)&parent_entry);
}

kern_return_t mach_memory_entry_ownership(mem_entry_name_port_t mem_entry, task_t owner, int ledger_tag, int ledger_flags)
{
  return MEMORY[0x1E0C83CA0](*(_QWORD *)&mem_entry, *(_QWORD *)&owner, *(_QWORD *)&ledger_tag, *(_QWORD *)&ledger_flags);
}

kern_return_t mach_port_deallocate(ipc_space_t task, mach_port_name_t name)
{
  return MEMORY[0x1E0C83CF8](*(_QWORD *)&task, *(_QWORD *)&name);
}

kern_return_t mach_vm_map(vm_map_t target_task, mach_vm_address_t *address, mach_vm_size_t size, mach_vm_offset_t mask, int flags, mem_entry_name_port_t object, memory_object_offset_t offset, BOOLean_t copy, vm_prot_t cur_protection, vm_prot_t max_protection, vm_inherit_t inheritance)
{
  return MEMORY[0x1E0C83DD8](*(_QWORD *)&target_task, address, size, mask, *(_QWORD *)&flags, *(_QWORD *)&object, offset, *(_QWORD *)&copy);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x1E0C83EE0](ptr);
}

void *__cdecl malloc_type_calloc(size_t count, size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x1E0C83EF8](count, size, type_id);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x1E0C84078](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x1E0C84088](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x1E0C84098](__dst, __src, __len);
}

int munmap(void *a1, size_t a2)
{
  return MEMORY[0x1E0C84220](a1, a2);
}

uint32_t notify_cancel(int token)
{
  return MEMORY[0x1E0C843D8](*(_QWORD *)&token);
}

uint32_t notify_register_dispatch(const char *name, int *out_token, dispatch_queue_t queue, notify_handler_t handler)
{
  return MEMORY[0x1E0C84408](name, out_token, queue, handler);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x1E0DE7BA8](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x1E0DE7BB0](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x1E0DE7BB8]();
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x1E0DE7BD0](a1);
}

void objc_autoreleasePoolPop(void *context)
{
  MEMORY[0x1E0DE7BD8](context);
}

void *objc_autoreleasePoolPush(void)
{
  return (void *)MEMORY[0x1E0DE7BE0]();
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7BE8](a1);
}

id objc_begin_catch(void *exc_buf)
{
  return (id)MEMORY[0x1E0DE7BF0](exc_buf);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x1E0DE7BF8]();
}

void objc_copyWeak(id *to, id *from)
{
  MEMORY[0x1E0DE7C38](to, from);
}

void objc_destroyWeak(id *location)
{
  MEMORY[0x1E0DE7C60](location);
}

void objc_end_catch(void)
{
  MEMORY[0x1E0DE7C80]();
}

void objc_enumerationMutation(id obj)
{
  MEMORY[0x1E0DE7C90](obj);
}

id objc_getAssociatedObject(id object, const void *key)
{
  return (id)MEMORY[0x1E0DE7CA8](object, key);
}

Class objc_getClass(const char *name)
{
  return (Class)MEMORY[0x1E0DE7CB0](name);
}

id objc_getProperty(id self, SEL _cmd, ptrdiff_t offset, BOOL atomic)
{
  return (id)MEMORY[0x1E0DE7CD0](self, _cmd, offset, atomic);
}

id objc_initWeak(id *location, id val)
{
  return (id)MEMORY[0x1E0DE7CE0](location, val);
}

id objc_loadWeakRetained(id *location)
{
  return (id)MEMORY[0x1E0DE7D08](location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D20](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D30](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x1E0DE7D38]();
}

uint64_t objc_opt_isKindOfClass()
{
  return MEMORY[0x1E0DE7D40]();
}

uint64_t objc_opt_new()
{
  return MEMORY[0x1E0DE7D48]();
}

uint64_t objc_opt_respondsToSelector()
{
  return MEMORY[0x1E0DE7D50]();
}

uint64_t objc_opt_self()
{
  return MEMORY[0x1E0DE7D58]();
}

void objc_release(id a1)
{
  MEMORY[0x1E0DE7D78](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x1E0DE7E50](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x1E0DE7E58](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7E60](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7E68](a1);
}

id objc_retainBlock(id a1)
{
  return (id)MEMORY[0x1E0DE7E70](a1);
}

void objc_setAssociatedObject(id object, const void *key, id value, void *policy)
{
  MEMORY[0x1E0DE7F40](object, key, value, policy);
}

void objc_setProperty_atomic(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
  MEMORY[0x1E0DE7F88](self, _cmd, newValue, offset);
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
  MEMORY[0x1E0DE7FA0](self, _cmd, newValue, offset);
}

void objc_storeStrong(id *location, id obj)
{
  MEMORY[0x1E0DE7FB0](location, obj);
}

id objc_storeWeak(id *location, id obj)
{
  return (id)MEMORY[0x1E0DE7FB8](location, obj);
}

void objc_terminate(void)
{
  MEMORY[0x1E0DE7FD8]();
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7FE0](a1);
}

void os_activity_scope_enter(os_activity_t activity, os_activity_scope_state_t state)
{
  MEMORY[0x1E0C84510](activity, state);
}

void os_activity_scope_leave(os_activity_scope_state_t state)
{
  MEMORY[0x1E0C84518](state);
}

uint64_t os_eligibility_get_domain_answer()
{
  return MEMORY[0x1E0C84678]();
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return (os_log_t)MEMORY[0x1E0C84728](subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x1E0C84780](oslog, type);
}

BOOL os_signpost_enabled(os_log_t log)
{
  return MEMORY[0x1E0C84920](log);
}

os_signpost_id_t os_signpost_id_generate(os_log_t log)
{
  return MEMORY[0x1E0C84928](log);
}

void os_unfair_lock_assert_not_owner(const os_unfair_lock *lock)
{
  MEMORY[0x1E0C84988](lock);
}

void os_unfair_lock_assert_owner(const os_unfair_lock *lock)
{
  MEMORY[0x1E0C84990](lock);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
  MEMORY[0x1E0C84998](lock);
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
  MEMORY[0x1E0C849B0](lock);
}

uint64_t os_variant_has_internal_diagnostics()
{
  return MEMORY[0x1E0C849F8]();
}

qos_class_t qos_class_main(void)
{
  return MEMORY[0x1E0C84F78]();
}

uint64_t sandbox_check()
{
  return MEMORY[0x1E0C85178]();
}

uint64_t sandbox_extension_consume()
{
  return MEMORY[0x1E0C851A0]();
}

uint64_t sandbox_extension_issue_file()
{
  return MEMORY[0x1E0C851A8]();
}

uint64_t sandbox_extension_issue_generic_to_process()
{
  return MEMORY[0x1E0C851D0]();
}

uint64_t sandbox_extension_release()
{
  return MEMORY[0x1E0C851F8]();
}

size_t strlen(const char *__s)
{
  return MEMORY[0x1E0C85578](__s);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x1E0DEEA98]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x1E0DEEAA8]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x1E0DEEAB0]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x1E0DEEAB8]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x1E0DEEAC0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x1E0DEEAD8]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x1E0DEEAE0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x1E0DEEAF8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x1E0DEEB08]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x1E0DEEB10]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x1E0DEEB18]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x1E0DEEB20]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x1E0DEEB28]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x1E0DEEB50]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x1E0DEEB60]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x1E0DEEB68]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x1E0DEEB80]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x1E0DEEBA8]();
}

uint64_t swift_dynamicCastObjCProtocolConditional()
{
  return MEMORY[0x1E0DEEBB8]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x1E0DEEBE0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x1E0DEEBF0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x1E0DEEBF8]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x1E0DEEC00]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x1E0DEEC08]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x1E0DEEC40]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x1E0DEEC48]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x1E0DEEC50]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x1E0DEEC78]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x1E0DEECB0]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x1E0DEECB8]();
}

uint64_t swift_getMetatypeMetadata()
{
  return MEMORY[0x1E0DEECC0]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x1E0DEECC8]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x1E0DEECD8]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x1E0DEECE0]();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return MEMORY[0x1E0DEECE8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x1E0DEECF8]();
}

uint64_t swift_getTupleTypeLayout2()
{
  return MEMORY[0x1E0DEED08]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x1E0DEED38]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x1E0DEED40]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x1E0DEED50]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x1E0DEED58]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x1E0DEED60]();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return MEMORY[0x1E0DEED70]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x1E0DEED78]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x1E0DEED88]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x1E0DEED98]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x1E0DEEDD0]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x1E0DEEDE0]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x1E0DEEDE8]();
}

uint64_t swift_once()
{
  return MEMORY[0x1E0DEEE00]();
}

uint64_t swift_release()
{
  return MEMORY[0x1E0DEEE30]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x1E0DEEE38]();
}

uint64_t swift_retain()
{
  return MEMORY[0x1E0DEEE48]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x1E0DEEE78]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x1E0DEEE80]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x1E0DEEE88]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x1E0DEEE98]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x1E0DEEEA0]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x1E0DF1000]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x1E0DF1008]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x1E0DF1010]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x1E0DF1050]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x1E0DEEEC0]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x1E0DEEEC8]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x1E0DEEED0]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x1E0DEEED8]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x1E0DEEF20]();
}

uint64_t swift_unknownObjectWeakCopyAssign()
{
  return MEMORY[0x1E0DEEF28]();
}

uint64_t swift_unknownObjectWeakCopyInit()
{
  return MEMORY[0x1E0DEEF30]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x1E0DEEF38]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x1E0DEEF40]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x1E0DEEF48]();
}

uint64_t swift_unknownObjectWeakTakeAssign()
{
  return MEMORY[0x1E0DEEF50]();
}

uint64_t swift_unknownObjectWeakTakeInit()
{
  return MEMORY[0x1E0DEEF58]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x1E0DEEF78]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x1E0DEEFC0]();
}

xpc_object_t xpc_activity_copy_criteria(xpc_activity_t activity)
{
  return (xpc_object_t)MEMORY[0x1E0C85D80](activity);
}

xpc_activity_state_t xpc_activity_get_state(xpc_activity_t activity)
{
  return MEMORY[0x1E0C85D90](activity);
}

void xpc_activity_register(const char *identifier, xpc_object_t criteria, xpc_activity_handler_t handler)
{
  MEMORY[0x1E0C85D98](identifier, criteria, handler);
}

void xpc_activity_set_criteria(xpc_activity_t activity, xpc_object_t criteria)
{
  MEMORY[0x1E0C85DB0](activity, criteria);
}

BOOL xpc_activity_set_state(xpc_activity_t activity, xpc_activity_state_t state)
{
  return MEMORY[0x1E0C85DB8](activity, state);
}

BOOL xpc_activity_should_defer(xpc_activity_t activity)
{
  return MEMORY[0x1E0C85DC8](activity);
}

void xpc_activity_unregister(const char *identifier)
{
  MEMORY[0x1E0C85DD0](identifier);
}

void xpc_array_append_value(xpc_object_t xarray, xpc_object_t value)
{
  MEMORY[0x1E0C85DE0](xarray, value);
}

xpc_object_t xpc_array_create_empty(void)
{
  return (xpc_object_t)MEMORY[0x1E0C85E10]();
}

BOOL xpc_array_get_BOOL(xpc_object_t xarray, size_t index)
{
  return MEMORY[0x1E0C85E28](xarray, index);
}

size_t xpc_array_get_count(xpc_object_t xarray)
{
  return MEMORY[0x1E0C85E30](xarray);
}

double xpc_array_get_double(xpc_object_t xarray, size_t index)
{
  double result;

  MEMORY[0x1E0C85E58](xarray, index);
  return result;
}

int64_t xpc_array_get_int64(xpc_object_t xarray, size_t index)
{
  return MEMORY[0x1E0C85E60](xarray, index);
}

const char *__cdecl xpc_array_get_string(xpc_object_t xarray, size_t index)
{
  return (const char *)MEMORY[0x1E0C85E70](xarray, index);
}

uint64_t xpc_array_get_uint64(xpc_object_t xarray, size_t index)
{
  return MEMORY[0x1E0C85E78](xarray, index);
}

xpc_object_t xpc_array_get_value(xpc_object_t xarray, size_t index)
{
  return (xpc_object_t)MEMORY[0x1E0C85E90](xarray, index);
}

xpc_object_t xpc_BOOL_create(BOOL value)
{
  return (xpc_object_t)MEMORY[0x1E0C85EF0](value);
}

void xpc_connection_activate(xpc_connection_t connection)
{
  MEMORY[0x1E0C85F50](connection);
}

void xpc_connection_cancel(xpc_connection_t connection)
{
  MEMORY[0x1E0C85F68](connection);
}

uint64_t xpc_connection_copy_invalidation_reason()
{
  return MEMORY[0x1E0C85F80]();
}

xpc_connection_t xpc_connection_create(const char *name, dispatch_queue_t targetq)
{
  return (xpc_connection_t)MEMORY[0x1E0C85F90](name, targetq);
}

xpc_connection_t xpc_connection_create_from_endpoint(xpc_endpoint_t endpoint)
{
  return (xpc_connection_t)MEMORY[0x1E0C85FA0](endpoint);
}

xpc_connection_t xpc_connection_create_mach_service(const char *name, dispatch_queue_t targetq, uint64_t flags)
{
  return (xpc_connection_t)MEMORY[0x1E0C85FB0](name, targetq, flags);
}

uint64_t xpc_connection_get_audit_token()
{
  return MEMORY[0x1E0C85FD0]();
}

pid_t xpc_connection_get_pid(xpc_connection_t connection)
{
  return MEMORY[0x1E0C86008](connection);
}

void xpc_connection_resume(xpc_connection_t connection)
{
  MEMORY[0x1E0C86018](connection);
}

void xpc_connection_send_message(xpc_connection_t connection, xpc_object_t message)
{
  MEMORY[0x1E0C86030](connection, message);
}

void xpc_connection_send_message_with_reply(xpc_connection_t connection, xpc_object_t message, dispatch_queue_t replyq, xpc_handler_t handler)
{
  MEMORY[0x1E0C86038](connection, message, replyq, handler);
}

xpc_object_t xpc_connection_send_message_with_reply_sync(xpc_connection_t connection, xpc_object_t message)
{
  return (xpc_object_t)MEMORY[0x1E0C86048](connection, message);
}

void xpc_connection_set_event_handler(xpc_connection_t connection, xpc_handler_t handler)
{
  MEMORY[0x1E0C86080](connection, handler);
}

uint64_t xpc_connection_set_oneshot_instance()
{
  return MEMORY[0x1E0C860A8]();
}

uint64_t xpc_connection_set_qos_class_floor()
{
  return MEMORY[0x1E0C860B8]();
}

char *__cdecl xpc_copy_description(xpc_object_t object)
{
  return (char *)MEMORY[0x1E0C86108](object);
}

xpc_object_t xpc_data_create(const void *bytes, size_t length)
{
  return (xpc_object_t)MEMORY[0x1E0C86178](bytes, length);
}

const void *__cdecl xpc_data_get_bytes_ptr(xpc_object_t xdata)
{
  return (const void *)MEMORY[0x1E0C86198](xdata);
}

size_t xpc_data_get_length(xpc_object_t xdata)
{
  return MEMORY[0x1E0C861A8](xdata);
}

xpc_object_t xpc_date_create(int64_t interval)
{
  return (xpc_object_t)MEMORY[0x1E0C861B8](interval);
}

int64_t xpc_date_get_value(xpc_object_t xdate)
{
  return MEMORY[0x1E0C861D0](xdate);
}

BOOL xpc_dictionary_apply(xpc_object_t xdict, xpc_dictionary_applier_t applier)
{
  return MEMORY[0x1E0C861F0](xdict, applier);
}

xpc_object_t xpc_dictionary_create_empty(void)
{
  return (xpc_object_t)MEMORY[0x1E0C86218]();
}

xpc_object_t xpc_dictionary_create_reply(xpc_object_t original)
{
  return (xpc_object_t)MEMORY[0x1E0C86228](original);
}

BOOL xpc_dictionary_get_BOOL(xpc_object_t xdict, const char *key)
{
  return MEMORY[0x1E0C86260](xdict, key);
}

const void *__cdecl xpc_dictionary_get_data(xpc_object_t xdict, const char *key, size_t *length)
{
  return (const void *)MEMORY[0x1E0C86278](xdict, key, length);
}

double xpc_dictionary_get_double(xpc_object_t xdict, const char *key)
{
  double result;

  MEMORY[0x1E0C86298](xdict, key);
  return result;
}

int64_t xpc_dictionary_get_int64(xpc_object_t xdict, const char *key)
{
  return MEMORY[0x1E0C862A0](xdict, key);
}

const char *__cdecl xpc_dictionary_get_string(xpc_object_t xdict, const char *key)
{
  return (const char *)MEMORY[0x1E0C862C8](xdict, key);
}

xpc_object_t xpc_dictionary_get_value(xpc_object_t xdict, const char *key)
{
  return (xpc_object_t)MEMORY[0x1E0C862E0](xdict, key);
}

void xpc_dictionary_set_BOOL(xpc_object_t xdict, const char *key, BOOL value)
{
  MEMORY[0x1E0C86310](xdict, key, value);
}

void xpc_dictionary_set_data(xpc_object_t xdict, const char *key, const void *bytes, size_t length)
{
  MEMORY[0x1E0C86330](xdict, key, bytes, length);
}

void xpc_dictionary_set_int64(xpc_object_t xdict, const char *key, int64_t value)
{
  MEMORY[0x1E0C86360](xdict, key, value);
}

void xpc_dictionary_set_string(xpc_object_t xdict, const char *key, const char *string)
{
  MEMORY[0x1E0C86390](xdict, key, string);
}

void xpc_dictionary_set_value(xpc_object_t xdict, const char *key, xpc_object_t value)
{
  MEMORY[0x1E0C863B8](xdict, key, value);
}

xpc_object_t xpc_double_create(double value)
{
  return (xpc_object_t)MEMORY[0x1E0C863D0](value);
}

double xpc_double_get_value(xpc_object_t xdouble)
{
  double result;

  MEMORY[0x1E0C863E0](xdouble);
  return result;
}

xpc_endpoint_t xpc_endpoint_create(xpc_connection_t connection)
{
  return (xpc_endpoint_t)MEMORY[0x1E0C863F0](connection);
}

BOOL xpc_equal(xpc_object_t object1, xpc_object_t object2)
{
  return MEMORY[0x1E0C86420](object1, object2);
}

xpc_type_t xpc_get_type(xpc_object_t object)
{
  return (xpc_type_t)MEMORY[0x1E0C86520](object);
}

xpc_object_t xpc_int64_create(int64_t value)
{
  return (xpc_object_t)MEMORY[0x1E0C86568](value);
}

int64_t xpc_int64_get_value(xpc_object_t xint)
{
  return MEMORY[0x1E0C86570](xint);
}

void xpc_main(xpc_connection_handler_t handler)
{
  MEMORY[0x1E0C86608](handler);
}

xpc_object_t xpc_null_create(void)
{
  return (xpc_object_t)MEMORY[0x1E0C86628]();
}

void xpc_set_event_stream_handler(const char *stream, dispatch_queue_t targetq, xpc_handler_t handler)
{
  MEMORY[0x1E0C866E8](stream, targetq, handler);
}

xpc_object_t xpc_shmem_create(void *region, size_t length)
{
  return (xpc_object_t)MEMORY[0x1E0C866F0](region, length);
}

size_t xpc_shmem_map(xpc_object_t xshmem, void **region)
{
  return MEMORY[0x1E0C86700](xshmem, region);
}

xpc_object_t xpc_string_create(const char *string)
{
  return (xpc_object_t)MEMORY[0x1E0C86720](string);
}

const char *__cdecl xpc_string_get_string_ptr(xpc_object_t xstring)
{
  return (const char *)MEMORY[0x1E0C86758](xstring);
}

const char *__cdecl xpc_type_get_name(xpc_type_t type)
{
  return (const char *)MEMORY[0x1E0C867A0](type);
}

xpc_object_t xpc_uint64_create(uint64_t value)
{
  return (xpc_object_t)MEMORY[0x1E0C867B0](value);
}

uint64_t xpc_uint64_get_value(xpc_object_t xuint)
{
  return MEMORY[0x1E0C867B8](xuint);
}

