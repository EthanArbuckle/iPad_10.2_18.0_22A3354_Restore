uint64_t View.appMetrics(pipeline:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t, uint64_t, double);
  uint64_t *v20;
  uint64_t *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v27 = a3;
  v25 = a4;
  v26 = a2;
  v5 = sub_20E4A4F70();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v25 - v10;
  v12 = type metadata accessor for AppMetricsViewModifier();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v25 - v17;
  v19 = *(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16);
  v19(v11, a1, v5, v16);
  *((_QWORD *)v14 + 3) = 0;
  v20 = (uint64_t *)&v14[*(int *)(v12 + 24)];
  *v20 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED23A0);
  swift_storeEnumTagMultiPayload();
  v21 = (uint64_t *)&v14[*(int *)(v12 + 28)];
  *v21 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
  swift_storeEnumTagMultiPayload();
  ((void (*)(char *, char *, uint64_t))v19)(v8, v11, v5);
  v22 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v23 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v23 + v22, v8, v5);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  *(_QWORD *)v14 = sub_20E42A050;
  *((_QWORD *)v14 + 1) = v23;
  v14[16] = 0;
  sub_20E42A054((uint64_t)v14, (uint64_t)v18);
  MEMORY[0x212BBBA70](v18, v26, v12, v27);
  return sub_20E42A098((uint64_t)v18);
}

uint64_t type metadata accessor for AppMetricsViewModifier()
{
  uint64_t result;

  result = qword_254A1AA00;
  if (!qword_254A1AA00)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t View.appMetrics(pipeline:scene:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t, double);
  uint64_t *v22;
  uint64_t *v23;
  unint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  id v27;
  id v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  void (*v34)(char *, uint64_t);
  char *v36;
  uint64_t v37;
  _QWORD *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD v43[2];

  v41 = a4;
  v37 = a3;
  v39 = a2;
  v42 = a5;
  v6 = sub_20E4A4F70();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v36 - v11;
  v13 = type metadata accessor for AppMetricsViewModifier();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_20E4A39D4();
  v40 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v36 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v38 = (char **)((char *)&v36 - v20);
  v21 = *(void (**)(char *, uint64_t, uint64_t, double))(v7 + 16);
  v21(v12, a1, v6, v19);
  *((_QWORD *)v15 + 3) = 0;
  v22 = (uint64_t *)&v15[*(int *)(v13 + 24)];
  *v22 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED23A0);
  swift_storeEnumTagMultiPayload();
  v23 = (uint64_t *)&v15[*(int *)(v13 + 28)];
  *v23 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
  swift_storeEnumTagMultiPayload();
  ((void (*)(char *, char *, uint64_t))v21)(v9, v12, v6);
  v24 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v25 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v25 + v24, v9, v6);
  v26 = *(void (**)(char *, uint64_t))(v7 + 8);
  v27 = v39;
  v28 = v39;
  v26(v12, v6);
  *(_QWORD *)v15 = sub_20E42A050;
  *((_QWORD *)v15 + 1) = v25;
  v15[16] = 0;

  *((_QWORD *)v15 + 3) = v27;
  v29 = v36;
  v30 = v41;
  MEMORY[0x212BBBA70](v15, v37, v13, v41);
  sub_20E42A098((uint64_t)v15);
  v31 = sub_20E39F334(&qword_254A19190, (uint64_t (*)(uint64_t))type metadata accessor for AppMetricsViewModifier, (uint64_t)&unk_20E4AC838);
  v43[0] = v30;
  v43[1] = v31;
  v32 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v16, v43);
  v33 = v38;
  sub_20E39D614(v38, v29, v16, v32);
  v34 = *(void (**)(char *, uint64_t))(v40 + 8);
  v34(v29, v16);
  sub_20E39D618((uint64_t)v33, v16, v42);
  return ((uint64_t (*)(_QWORD *, uint64_t))v34)(v33, v16);
}

uint64_t View.appMetricsPresenter(_:)()
{
  swift_getKeyPath();
  swift_retain();
  sub_20E4A4250();
  swift_release();
  return swift_release();
}

uint64_t sub_20E42A054(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AppMetricsViewModifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20E42A098(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AppMetricsViewModifier();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20E42A0D4(uint64_t a1)
{
  uint64_t v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v2 = sub_20E4A4F70();
  v3 = MEMORY[0x24BDAC7A8](v2);
  (*(void (**)(char *, uint64_t, double))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  sub_20E4A5258();
  swift_allocObject();
  return sub_20E4A524C();
}

uint64_t objectdestroyTm_3()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_20E4A4F70();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_20E42A1C4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_20E4A4F70() - 8) + 80);
  return sub_20E42A0D4(v0 + ((v1 + 16) & ~v1));
}

uint64_t sub_20E42A1FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  type metadata accessor for AppMetricsViewModifier();
  v2 = sub_20E4A39D4();
  v4[0] = v1;
  v4[1] = sub_20E39F334(&qword_254A19190, (uint64_t (*)(uint64_t))type metadata accessor for AppMetricsViewModifier, (uint64_t)&unk_20E4AC838);
  return MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v2, v4);
}

uint64_t sub_20E42A27C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A18468);
  v2 = sub_20E4A39D4();
  v4[0] = v1;
  v4[1] = sub_20E39D010(&qword_254A18460, &qword_254A18468, MEMORY[0x24BDF1028]);
  return MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v2, v4);
}

uint64_t sub_20E42A2FC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char v9;
  void *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v16 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = *a2;
    v8 = a2[1];
    v9 = *((_BYTE *)a2 + 16);
    sub_20E39CFB8();
    *(_QWORD *)a1 = v7;
    *(_QWORD *)(a1 + 8) = v8;
    *(_BYTE *)(a1 + 16) = v9;
    v10 = (void *)a2[3];
    *(_QWORD *)(a1 + 24) = v10;
    v11 = *(int *)(a3 + 24);
    v12 = (_QWORD *)(a1 + v11);
    v13 = (uint64_t *)((char *)a2 + v11);
    v14 = v10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED23A0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v15 = sub_20E4A3668();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v12, v13, v15);
    }
    else
    {
      *v12 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v17 = *(int *)(a3 + 28);
    v18 = (_QWORD *)(a1 + v17);
    v19 = (uint64_t *)((char *)a2 + v17);
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v20 = sub_20E4A5384();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
    }
    else
    {
      *v18 = *v19;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_20E42A47C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_20E39CED0();

  v4 = a1 + *(int *)(a2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED23A0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_20E4A3668();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  v6 = a1 + *(int *)(a2 + 28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v7 = sub_20E4A5384();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

uint64_t sub_20E42A560(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  void *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;

  v6 = *a2;
  v7 = a2[1];
  v8 = *((_BYTE *)a2 + 16);
  sub_20E39CFB8();
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8;
  v9 = (void *)a2[3];
  *(_QWORD *)(a1 + 24) = v9;
  v10 = *(int *)(a3 + 24);
  v11 = (_QWORD *)(a1 + v10);
  v12 = (uint64_t *)((char *)a2 + v10);
  v13 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED23A0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v14 = sub_20E4A3668();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v11, v12, v14);
  }
  else
  {
    *v11 = *v12;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v15 = *(int *)(a3 + 28);
  v16 = (_QWORD *)(a1 + v15);
  v17 = (uint64_t *)((char *)a2 + v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v18 = sub_20E4A5384();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  }
  else
  {
    *v16 = *v17;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_20E42A6AC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;

  v6 = *a2;
  v7 = a2[1];
  v8 = *((_BYTE *)a2 + 16);
  sub_20E39CFB8();
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8;
  sub_20E39CED0();
  v9 = *(void **)(a1 + 24);
  v10 = (void *)a2[3];
  *(_QWORD *)(a1 + 24) = v10;
  v11 = v10;

  if ((uint64_t *)a1 != a2)
  {
    v12 = *(int *)(a3 + 24);
    v13 = (_QWORD *)(a1 + v12);
    v14 = (uint64_t *)((char *)a2 + v12);
    sub_20E39D1F8(a1 + v12, &qword_253ED23A0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED23A0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v15 = sub_20E4A3668();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    }
    else
    {
      *v13 = *v14;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v16 = *(int *)(a3 + 28);
    v17 = (_QWORD *)(a1 + v16);
    v18 = (uint64_t *)((char *)a2 + v16);
    sub_20E39D1F8(a1 + v16, &qword_253ED0A28);
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v19 = sub_20E4A5384();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    }
    else
    {
      *v17 = *v18;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_20E42A834(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v6 = *(int *)(a3 + 24);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED23A0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_20E4A3668();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v11 = *(int *)(a3 + 28);
  v12 = (void *)(a1 + v11);
  v13 = (const void *)(a2 + v11);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v15 = sub_20E4A5384();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v12, v13, v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  return a1;
}

uint64_t sub_20E42A974(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;
  void *v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;

  v6 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v6;
  sub_20E39CED0();
  v7 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);

  if (a1 != a2)
  {
    v8 = *(int *)(a3 + 24);
    v9 = (void *)(a1 + v8);
    v10 = (const void *)(a2 + v8);
    sub_20E39D1F8(a1 + v8, &qword_253ED23A0);
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED23A0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_20E4A3668();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, v10, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    v13 = *(int *)(a3 + 28);
    v14 = (void *)(a1 + v13);
    v15 = (const void *)(a2 + v13);
    sub_20E39D1F8(a1 + v13, &qword_253ED0A28);
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v17 = sub_20E4A5384();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v14, v15, v17);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_20E42AAF4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_20E42AB00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A0D8);
    v10 = *(_QWORD *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
    {
      v11 = v9;
      v12 = *(int *)(a3 + 24);
    }
    else
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A182F8);
      v10 = *(_QWORD *)(v11 - 8);
      v12 = *(int *)(a3 + 28);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1 + v12, a2, v11);
  }
}

uint64_t sub_20E42ABB4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_20E42ABC0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 24) = a2;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A0D8);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 24);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A182F8);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 28);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_20E42AC64()
{
  unint64_t v0;
  unint64_t v1;

  sub_20E42AD1C(319, &qword_253ED23A8, (void (*)(uint64_t))MEMORY[0x24BDEB1F0]);
  if (v0 <= 0x3F)
  {
    sub_20E42AD1C(319, (unint64_t *)&qword_253ED2448, (void (*)(uint64_t))MEMORY[0x24BE5D6D0]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_20E42AD1C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_20E4A36BC();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_20E42AD68()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E42AD78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v19;
  uint64_t KeyPath;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v24 = a1;
  v26 = a2;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18448);
  MEMORY[0x24BDAC7A8](v23);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18428);
  MEMORY[0x24BDAC7A8](v25);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for AppMetricsViewModifier();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20E42B434(v2, (uint64_t)v10);
  v11 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v21 = v11 + v9;
  v22 = swift_allocObject();
  sub_20E42A054((uint64_t)v10, v22 + v11);
  KeyPath = swift_getKeyPath();
  sub_20E4A5258();
  sub_20E39F334(&qword_254A1AA10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5D478], (uint64_t)&protocol conformance descriptor for AppMetricsPresenter);
  v12 = sub_20E4A36EC();
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18458);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v4, v24, v13);
  v14 = (uint64_t *)&v4[*(int *)(v23 + 36)];
  *v14 = KeyPath;
  v14[1] = v12;
  sub_20E42B434(v2, (uint64_t)v10);
  v15 = swift_allocObject();
  sub_20E42A054((uint64_t)v10, v15 + v11);
  v16 = swift_getKeyPath();
  sub_20E42B614((uint64_t)v4, (uint64_t)v6);
  v17 = &v6[*(int *)(v25 + 36)];
  *(_QWORD *)v17 = sub_20E42B5D0;
  *((_QWORD *)v17 + 1) = v15;
  *((_QWORD *)v17 + 2) = v16;
  *((_QWORD *)v17 + 3) = 0;
  *((_WORD *)v17 + 16) = 0;
  sub_20E39D1F8((uint64_t)v4, &qword_254A18448);
  sub_20E3A2AE8(*(void **)(v2 + 24), (uint64_t)sub_20E42B47C, v22, v26);
  swift_release();
  return sub_20E39D1F8((uint64_t)v6, &qword_254A18428);
}

uint64_t sub_20E42AFF8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  int v11;
  uint64_t v13;

  v2 = sub_20E4A5384();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_20E4A3668();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v7 + 16))(v10, a1, v6, v8);
  v11 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v10, v6);
  if (v11 == *MEMORY[0x24BDEB1D0])
  {
    sub_20E4A5258();
    sub_20E39F334(&qword_254A1AA10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5D478], (uint64_t)&protocol conformance descriptor for AppMetricsPresenter);
    sub_20E4A36EC();
    type metadata accessor for AppMetricsViewModifier();
    sub_20E45C27C((uint64_t)v5);
    sub_20E4A5240();
LABEL_5:
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  if (v11 == *MEMORY[0x24BDEB1E0])
  {
    sub_20E4A5258();
    sub_20E39F334(&qword_254A1AA10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5D478], (uint64_t)&protocol conformance descriptor for AppMetricsPresenter);
    sub_20E4A36EC();
    type metadata accessor for AppMetricsViewModifier();
    sub_20E45C27C((uint64_t)v5);
    sub_20E4A5234();
    goto LABEL_5;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t sub_20E42B1FC(char a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  id v18;
  uint64_t result;
  char v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;

  v23 = sub_20E4A5384();
  v4 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_20E4A3668();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v22 - v12;
  v14 = type metadata accessor for AppMetricsViewModifier();
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20E42B434(a2, (uint64_t)v16);
  if ((a1 & 1) == 0)
    return sub_20E42A098((uint64_t)v16);
  v17 = (void *)*((_QWORD *)v16 + 3);
  if (v17)
  {
    v18 = objc_msgSend(v17, sel_activationState);
    result = sub_20E42A098((uint64_t)v16);
    if (v18)
      return result;
  }
  else
  {
    sub_20E45D10C((uint64_t)v13);
    (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x24BDEB1E0], v7);
    v20 = sub_20E4A365C();
    v21 = *(void (**)(char *, uint64_t))(v8 + 8);
    v21(v10, v7);
    v21(v13, v7);
    result = sub_20E42A098((uint64_t)v16);
    if ((v20 & 1) == 0)
      return result;
  }
  sub_20E4A5258();
  sub_20E39F334(&qword_254A1AA10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5D478], (uint64_t)&protocol conformance descriptor for AppMetricsPresenter);
  sub_20E4A36EC();
  sub_20E45C27C((uint64_t)v6);
  sub_20E4A5234();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v23);
}

uint64_t sub_20E42B434(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AppMetricsViewModifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20E42B47C(uint64_t a1)
{
  type metadata accessor for AppMetricsViewModifier();
  return sub_20E42AFF8(a1);
}

uint64_t objectdestroy_15Tm_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = type metadata accessor for AppMetricsViewModifier();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  sub_20E39CED0();

  v4 = v3 + *(int *)(v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED23A0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_20E4A3668();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  v6 = v3 + *(int *)(v1 + 28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_20E4A5384();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_20E42B5D0(char a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AppMetricsViewModifier() - 8) + 80);
  return sub_20E42B1FC(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t sub_20E42B614(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18448);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for AppMetricsEnvironmentKey()
{
  return &type metadata for AppMetricsEnvironmentKey;
}

unint64_t sub_20E42B670()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254A1AA20;
  if (!qword_254A1AA20)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1AA28);
    v2[0] = sub_20E41A6D4((unint64_t *)&qword_254A18430, &qword_254A18420, (uint64_t (*)(void))sub_20E3A5950, (uint64_t (*)(void))sub_20E3A50B4);
    v2[1] = sub_20E3A5A58();
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254A1AA20);
  }
  return result;
}

uint64_t View.flowSheetDoneButtonLabelStyle(_:)()
{
  sub_20E42B760();
  return sub_20E4A4214();
}

unint64_t sub_20E42B760()
{
  unint64_t result;

  result = qword_254A1AA30;
  if (!qword_254A1AA30)
  {
    result = MEMORY[0x212BBDF90](&unk_20E4ACA94, &type metadata for _FlowSheetDoneButtonLabelStyleKey);
    atomic_store(result, (unint64_t *)&qword_254A1AA30);
  }
  return result;
}

uint64_t View.flowSheetDoneButtonHidden(_:)()
{
  sub_20E42B804();
  return sub_20E4A4214();
}

unint64_t sub_20E42B804()
{
  unint64_t result;

  result = qword_254A1AA38;
  if (!qword_254A1AA38)
  {
    result = MEMORY[0x212BBDF90](&unk_20E4ACA4C, &type metadata for _FlowSheetHidesDoneButtonKey);
    atomic_store(result, (unint64_t *)&qword_254A1AA38);
  }
  return result;
}

void sub_20E42B848(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[9];
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;

  v35 = a2;
  v29 = a1;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1AA68);
  MEMORY[0x24BDAC7A8](v25);
  v27 = (char *)v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1AA70);
  MEMORY[0x24BDAC7A8](v34);
  v28 = (char *)v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_20E4A3EE4();
  v18[6] = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v18[5] = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1AA78);
  v18[8] = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v18[4] = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v18[7] = (char *)v18 - v7;
  v21 = sub_20E4A3C98();
  v18[1] = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1AA80);
  v18[3] = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v18[0] = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v18[2] = (char *)v18 - v10;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1AA88);
  MEMORY[0x24BDAC7A8](v31);
  v33 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1AA90);
  MEMORY[0x24BDAC7A8](v19);
  v20 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1AA98);
  MEMORY[0x24BDAC7A8](v32);
  v22 = (char *)v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_20E4A3D40();
  MEMORY[0x24BDAC7A8](v30);
  v14 = sub_20E4A3F14();
  MEMORY[0x24BDAC7A8](v14);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1AAA0);
  MEMORY[0x24BDAC7A8](v15);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1AAA8);
  MEMORY[0x24BDAC7A8](v16);
  MEMORY[0x24BDAC7A8](v17);
  __asm { BR              X10 }
}

uint64_t sub_20E42BC40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
  *(_QWORD *)(v12 - 128) = v0;
  v14 = *(_QWORD *)(v12 - 184);
  v15 = v1;
  *(_QWORD *)(v12 - 184) = v2;
  v13(v6, v14, v7);
  sub_20E4A4628();
  sub_20E4A3D34();
  v16 = sub_20E39D010(&qword_254A1AAB0, &qword_254A1AAA0, MEMORY[0x24BDF41A8]);
  v17 = sub_20E39F334(&qword_254A1AAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEF120], MEMORY[0x24BDEF108]);
  v18 = *(_QWORD *)(v12 - 176);
  sub_20E4A4208();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v3, v18);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v4, v5);
  v19 = *(_QWORD *)(v12 - 184);
  v20 = *(_QWORD *)(v12 - 128);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 32))(v20, v8, v15);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v19 + 16))(*(_QWORD *)(v12 - 256), v20, v15);
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)(v12 - 120) = v5;
  *(_QWORD *)(v12 - 112) = v18;
  *(_QWORD *)(v12 - 104) = v16;
  *(_QWORD *)(v12 - 96) = v17;
  swift_getOpaqueTypeConformance2();
  v21 = sub_20E39F334(&qword_254A1AAD0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEE988], MEMORY[0x24BDEE978]);
  v22 = *(_QWORD *)(v12 - 248);
  *(_QWORD *)(v12 - 120) = v5;
  *(_QWORD *)(v12 - 112) = v22;
  *(_QWORD *)(v12 - 104) = v16;
  *(_QWORD *)(v12 - 96) = v21;
  swift_getOpaqueTypeConformance2();
  v23 = *(_QWORD *)(v12 - 240);
  sub_20E4A3DF4();
  sub_20E3A5E20(v23, *(_QWORD *)(v12 - 152), &qword_254A1AA98);
  swift_storeEnumTagMultiPayload();
  sub_20E42C65C();
  sub_20E42C78C();
  sub_20E4A3DF4();
  sub_20E39D1F8(v23, &qword_254A1AA98);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 8))(v20, v15);
}

BOOL static FlowSheetDoneButtonLabelStyle.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t FlowSheetDoneButtonLabelStyle.hash(into:)()
{
  return sub_20E4A641C();
}

uint64_t FlowSheetDoneButtonLabelStyle.hashValue.getter()
{
  sub_20E4A6410();
  sub_20E4A641C();
  return sub_20E4A6428();
}

unint64_t sub_20E42C458()
{
  unint64_t result;

  result = qword_254A1AA40;
  if (!qword_254A1AA40)
  {
    result = MEMORY[0x212BBDF90](&protocol conformance descriptor for FlowSheetDoneButtonLabelStyle, &type metadata for FlowSheetDoneButtonLabelStyle);
    atomic_store(result, (unint64_t *)&qword_254A1AA40);
  }
  return result;
}

ValueMetadata *type metadata accessor for FlowSheetDoneButtonLabelStyle()
{
  return &type metadata for FlowSheetDoneButtonLabelStyle;
}

uint64_t sub_20E42C4B4(uint64_t a1)
{
  return get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyxAA26_PreferenceWritingModifierVy011_JetEngine_aB033_FlowSheetDoneButtonLabelStyleKeyOGGAaBHPxAaBHD1__AjA0cH0HPyHCHCTm(a1, &qword_254A1AA48, &qword_254A1AA50);
}

uint64_t sub_20E42C4C8(uint64_t a1)
{
  return get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyxAA26_PreferenceWritingModifierVy011_JetEngine_aB033_FlowSheetDoneButtonLabelStyleKeyOGGAaBHPxAaBHD1__AjA0cH0HPyHCHCTm(a1, &qword_254A1AA58, &qword_254A1AA60);
}

uint64_t get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyxAA26_PreferenceWritingModifierVy011_JetEngine_aB033_FlowSheetDoneButtonLabelStyleKeyOGGAaBHPxAaBHD1__AjA0cH0HPyHCHCTm(uint64_t a1, uint64_t *a2, unint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[2];

  v5 = *(_QWORD *)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
  v6 = sub_20E4A39D4();
  v8[0] = v5;
  v8[1] = sub_20E39D010(a3, a2, MEMORY[0x24BDF0B90]);
  return MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v6, v8);
}

uint64_t _s18_JetEngine_SwiftUI29FlowSheetDoneButtonLabelStyleOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_20E42C5A4 + 4 * byte_20E4AC91D[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_20E42C5D8 + 4 * byte_20E4AC918[v4]))();
}

uint64_t sub_20E42C5D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20E42C5E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20E42C5E8);
  return result;
}

uint64_t sub_20E42C5F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20E42C5FCLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_20E42C600(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20E42C608(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FlowSheetDoneButtonLabelStyle._LabelStyle()
{
  return &type metadata for FlowSheetDoneButtonLabelStyle._LabelStyle;
}

ValueMetadata *type metadata accessor for _FlowSheetHidesDoneButtonKey()
{
  return &type metadata for _FlowSheetHidesDoneButtonKey;
}

ValueMetadata *type metadata accessor for _FlowSheetDoneButtonLabelStyleKey()
{
  return &type metadata for _FlowSheetDoneButtonLabelStyleKey;
}

uint64_t sub_20E42C644()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_20E42C65C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t OpaqueTypeConformance2;
  _QWORD v6[6];

  result = qword_254A1AAC8;
  if (!qword_254A1AAC8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1AA98);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1AAA0);
    sub_20E4A3D40();
    v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEF120];
    v4 = sub_20E39D010(&qword_254A1AAB0, &qword_254A1AAA0, MEMORY[0x24BDF41A8]);
    sub_20E39F334(&qword_254A1AAB8, v3, MEMORY[0x24BDEF108]);
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    v6[2] = v2;
    v6[3] = sub_20E4A3C98();
    v6[4] = v4;
    v6[5] = sub_20E39F334(&qword_254A1AAD0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEE988], MEMORY[0x24BDEE978]);
    v6[0] = OpaqueTypeConformance2;
    v6[1] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v1, v6);
    atomic_store(result, (unint64_t *)&qword_254A1AAC8);
  }
  return result;
}

unint64_t sub_20E42C78C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t OpaqueTypeConformance2;
  _QWORD v6[6];

  result = qword_254A1AAD8;
  if (!qword_254A1AAD8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1AA70);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1AAA0);
    sub_20E4A3EE4();
    v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEFE38];
    v4 = sub_20E39D010(&qword_254A1AAB0, &qword_254A1AAA0, MEMORY[0x24BDF41A8]);
    sub_20E39F334((unint64_t *)&qword_254A1AAC0, v3, MEMORY[0x24BDEFE28]);
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    v6[2] = v2;
    v6[3] = sub_20E4A3D40();
    v6[4] = v4;
    v6[5] = sub_20E39F334(&qword_254A1AAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEF120], MEMORY[0x24BDEF108]);
    v6[0] = OpaqueTypeConformance2;
    v6[1] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v1, v6);
    atomic_store(result, (unint64_t *)&qword_254A1AAD8);
  }
  return result;
}

unint64_t sub_20E42C8C0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254A1AAE0;
  if (!qword_254A1AAE0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1AAE8);
    v2[0] = sub_20E42C65C();
    v2[1] = sub_20E42C78C();
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254A1AAE0);
  }
  return result;
}

uint64_t sub_20E42C92C()
{
  return 0;
}

uint64_t static MediaArtworkProtocol.supportsPrefetching.getter()
{
  return 0;
}

uint64_t MediaArtworkProtocol<>.match(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a2, a1, AssociatedTypeWitness);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(a2, 0, 1, AssociatedTypeWitness);
}

uint64_t dispatch thunk of static MediaArtworkProtocol.allowsDuplicateRegistration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of static MediaArtworkProtocol.supportsPrefetching.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of MediaArtworkProtocol.match(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of MediaArtworkProtocol.fetch(contentsOf:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

void sub_20E42C9D8(uint64_t a1@<X8>)
{
  uint64_t v2;

  *(double *)a1 = EnvironmentValues.shelfContainerSize.getter();
  *(_QWORD *)(a1 + 8) = v2;
}

uint64_t sub_20E42CA00()
{
  return sub_20E3A91AC();
}

void ShelfGrid.init(_:layout:padding:spacing:shelfPosition:itemContent:itemDivider:)()
{
  type metadata accessor for ShelfGrid();
}

__n128 sub_20E42CAD4(int *a1)
{
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int8 v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 *v15;
  __n128 result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  __n128 v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v10 = v2 + a1[23];
  *(_QWORD *)v10 = swift_getKeyPath();
  *(_BYTE *)(v10 + 8) = 0;
  v11 = v2 + a1[24];
  *(_QWORD *)v11 = swift_getKeyPath();
  *(_QWORD *)(v11 + 8) = 0;
  *(_BYTE *)(v11 + 16) = 0;
  v12 = v2 + a1[25];
  *(_QWORD *)v12 = swift_getKeyPath();
  *(_WORD *)(v12 + 8) = 0;
  v13 = v2 + a1[26];
  *(_QWORD *)v13 = swift_getKeyPath();
  *(_BYTE *)(v13 + 8) = 0;
  v14 = v2 + a1[27];
  *(_QWORD *)v14 = swift_getKeyPath();
  *(_BYTE *)(v14 + 32) = 0;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v2, v5, v6);
  v15 = (__n128 *)(v2 + a1[17]);
  result = v22;
  *v15 = v22;
  v15[1].n128_u64[0] = v7;
  v15[1].n128_u8[8] = v8;
  v17 = v2 + a1[18];
  *(_QWORD *)v17 = v3;
  *(_BYTE *)(v17 + 8) = v4;
  *(_QWORD *)(v17 + 16) = v23;
  *(_BYTE *)(v17 + 24) = v1;
  v18 = v2 + a1[19];
  *(_QWORD *)v18 = v27;
  *(_BYTE *)(v18 + 8) = v26;
  *(_QWORD *)(v18 + 16) = v25;
  *(_BYTE *)(v18 + 24) = v24;
  v19 = v2 + a1[20];
  *(_QWORD *)v19 = v28;
  *(_BYTE *)(v19 + 8) = v30 & 1;
  v20 = (_QWORD *)(v2 + a1[21]);
  *v20 = v32;
  v20[1] = v33;
  v21 = (_QWORD *)(v2 + a1[22]);
  *v21 = v29;
  v21[1] = v31;
  return result;
}

void type metadata accessor for ShelfGrid()
{
  JUMPOUT(0x212BBDEE8);
}

void ShelfGrid.init<>(_:layout:padding:spacing:shelfPosition:itemContent:)()
{
  sub_20E4A479C();
  sub_20E39F334((unint64_t *)&qword_254A1A330, (uint64_t (*)(uint64_t))MEMORY[0x24BDF4918], MEMORY[0x24BDF4900]);
  ShelfGrid.init(_:layout:padding:spacing:shelfPosition:itemContent:itemDivider:)();
}

uint64_t sub_20E42CD0C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;

  v2 = v1 + *(int *)(a1 + 92);
  v3 = *(_QWORD *)v2;
  v4 = *(_BYTE *)(v2 + 8);
  sub_20E39CFAC(*(_QWORD *)v2, v4);
  v5 = sub_20E45CF28(v3, v4);
  sub_20E39CED8(v3, v4);
  return v5 & 1;
}

double sub_20E42CD68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  double v6;

  v2 = v1 + *(int *)(a1 + 96);
  v3 = *(_QWORD *)v2;
  v4 = *(_QWORD *)(v2 + 8);
  v5 = *(_BYTE *)(v2 + 16);
  sub_20E4337FC(*(_QWORD *)v2, v4, v5);
  v6 = sub_20E45D990(v3, v4, v5);
  sub_20E43392C(v3, v4, v5);
  return v6;
}

uint64_t sub_20E42CDE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  v2 = v1 + *(int *)(a1 + 100);
  v3 = *(_QWORD *)v2;
  v4 = *(unsigned __int8 *)(v2 + 8);
  v5 = *(unsigned __int8 *)(v2 + 9);
  sub_20E4337FC(*(_QWORD *)v2, v4, *(_BYTE *)(v2 + 9));
  v6 = sub_20E45DB60(v3, v4 | (v5 << 8));
  sub_20E43392C(v3, v4, v5);
  return v6;
}

uint64_t sub_20E42CE60@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v4 = v2 + *(int *)(a1 + 104);
  v5 = *(_QWORD *)v4;
  v6 = *(_BYTE *)(v4 + 8);
  sub_20E39CFAC(*(_QWORD *)v4, v6);
  sub_20E45DD34(v5, v6, a2);
  return sub_20E39CED8(v5, v6);
}

uint64_t sub_20E42CEB8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.shelfContentPrefersCompactLayouts.getter();
  *a1 = result & 1;
  return result;
}

void sub_20E42CEE4(uint64_t a1@<X8>)
{
  uint64_t v2;

  *(double *)a1 = EnvironmentValues.shelfContainerSize.getter();
  *(_QWORD *)(a1 + 8) = v2;
}

uint64_t sub_20E42CF0C()
{
  return sub_20E3A91AC();
}

uint64_t sub_20E42CF40()
{
  sub_20E4354EC();
  return sub_20E4A3C08();
}

uint64_t sub_20E42CF74()
{
  sub_20E4354EC();
  return sub_20E4A3C08();
}

uint64_t sub_20E42CFB0(uint64_t a1)
{
  uint64_t v2;
  _BYTE v3[32];

  sub_20E3BB3A0(a1, (uint64_t)v3);
  sub_20E3BB3A0((uint64_t)v3, (uint64_t)&v2);
  sub_20E4354EC();
  sub_20E4A3C14();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
}

uint64_t sub_20E42D010(uint64_t a1)
{
  sub_20E42CD68(a1);
  return sub_20E42CDE0(a1);
}

uint64_t sub_20E42D060()
{
  uint64_t v0;

  v0 = *(_QWORD *)(sub_20E4A4AE4() + 16);
  swift_bridgeObjectRelease();
  return sub_20E435360(v0, (void (*)(_QWORD *, uint64_t *))sub_20E4354B0);
}

uint64_t sub_20E42D0FC(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *(_QWORD *)(sub_20E4A4AE4() + 16);
  swift_bridgeObjectRelease();
  if (v2)
    type metadata accessor for ShelfGrid();
  v3 = *(_QWORD *)(sub_20E4A4AE4() + 16);
  result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t sub_20E42D334@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  ValueMetadata *v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  ValueMetadata *v59;
  ValueMetadata *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t);
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  void (*v78)(char *, uint64_t);
  char *v80;
  uint64_t v81;
  uint64_t AssociatedTypeWitness;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  _QWORD *v93;
  _QWORD *v94;
  char *v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  uint64_t v119;
  _QWORD v120[2];
  _QWORD v121[2];
  uint64_t v122;
  unint64_t v123;
  _QWORD v124[2];
  uint64_t v125;
  ValueMetadata *v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  _QWORD v130[2];

  v94 = a1;
  v107 = a3;
  v97 = (char *)a2[5];
  v4 = *((_QWORD *)v97 + 2);
  v108 = a2[2];
  v83 = v4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v81 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v80 = (char *)&v80 - v5;
  v104 = *(a2 - 1);
  MEMORY[0x24BDAC7A8](v6);
  v105 = (char *)&v80 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = sub_20E4A4DCC();
  v96 = *(_QWORD *)(v110 - 8);
  MEMORY[0x24BDAC7A8](v110);
  v95 = (char *)&v80 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v111 = (char *)&v80 - v10;
  MEMORY[0x24BDAC7A8](v11);
  v106 = (char *)&v80 - v12;
  v13 = a2[3];
  v91 = (_QWORD *)a2[4];
  v14 = a2;
  v85 = v13;
  swift_getTupleTypeMetadata2();
  v15 = sub_20E4A491C();
  MEMORY[0x212BBDF90](MEMORY[0x24BDF5428], v15);
  v16 = sub_20E4A470C();
  v17 = sub_20E4A3E00();
  v18 = sub_20E4A4574();
  v92 = *(_QWORD *)(v18 - 8);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v88 = (char *)&v80 - v20;
  v21 = MEMORY[0x212BBDF90](MEMORY[0x24BDF4700], v16, v19);
  v22 = v14[6];
  v23 = v14;
  v93 = v14;
  v130[0] = v21;
  v130[1] = v22;
  v84 = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v17, v130);
  v129 = v84;
  v24 = MEMORY[0x212BBDF90](MEMORY[0x24BDF3F50], v18, &v129);
  v87 = v24;
  v86 = sub_20E42F020();
  v125 = v18;
  v126 = &type metadata for ComponentModelViewID;
  v127 = v24;
  v128 = v86;
  v25 = sub_20E4A46DC();
  v89 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v27 = (char *)&v80 - v26;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A18588);
  v28 = sub_20E4A39D4();
  v90 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v30 = (char *)&v80 - v29;
  v31 = sub_20E4A39D4();
  v99 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v33 = (char *)&v80 - v32;
  sub_20E4A4004();
  v101 = v31;
  v103 = sub_20E4A39D4();
  v102 = *(_QWORD *)(v103 - 8);
  MEMORY[0x24BDAC7A8](v103);
  v98 = (char *)&v80 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v35);
  v100 = (char **)((char *)&v80 - v36);
  v112 = v108;
  v113 = v85;
  v114 = (uint64_t)v91;
  v115 = v97;
  v37 = v23[7];
  v116 = v22;
  v117 = v37;
  v38 = v94;
  v118 = v94;
  v119 = v109;
  v39 = v88;
  sub_20E4A4568();
  v91 = v38 + 1;
  __swift_project_boxed_opaque_existential_1(v38 + 1, v38[4]);
  ComponentModel.viewID.getter();
  sub_20E4A43DC();
  sub_20E413908((uint64_t)&v125);
  (*(void (**)(char *, uint64_t))(v92 + 8))(v39, v18);
  v40 = MEMORY[0x212BBDF90](MEMORY[0x24BDF44C8], v25);
  View._shelfGridPrefersEagerLayout(_:)();
  (*(void (**)(char *, uint64_t))(v89 + 8))(v27, v25);
  v41 = v38[6];
  v42 = sub_20E3FD4F8((unint64_t *)&qword_254A18590, &qword_254A18588);
  v124[0] = v40;
  v124[1] = v42;
  v43 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v28, v124);
  v97 = v33;
  v44 = v91;
  v92 = v43;
  View.unifiedImpressionableLayoutItem(_:position:)((uint64_t)v91, v41, 0, v28, v43);
  (*(void (**)(char *, uint64_t))(v90 + 8))(v30, v28);
  v45 = v95;
  sub_20E4A4DC0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0D70);
  v46 = swift_allocObject();
  *(_OWORD *)(v46 + 16) = xmmword_20E4A72D0;
  v47 = v38[4];
  __swift_project_boxed_opaque_existential_1(v44, v47);
  v48 = sub_20E42E3CC(v47);
  v49 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v46 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v46 + 32) = v48;
  *(_QWORD *)(v46 + 40) = v50;
  sub_20E4A4DB4();
  swift_bridgeObjectRelease();
  v96 = *(_QWORD *)(v96 + 8);
  ((void (*)(char *, uint64_t))v96)(v45, v110);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1ABE0);
  sub_20E4A5270();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_20E4A8070;
  v51 = v38[4];
  v52 = v38[5];
  __swift_project_boxed_opaque_existential_1(v44, v51);
  v53 = sub_20E42E5EC(v51, v52);
  v128 = v49;
  v125 = v53;
  v126 = v54;
  sub_20E4A5264();
  v55 = v104;
  v56 = v44;
  v57 = v93;
  __swift_project_boxed_opaque_existential_1(v56, v38[4]);
  v58 = sub_20E42E7D0();
  v60 = v59;
  v61 = v105;
  (*(void (**)(void))(v55 + 16))();
  v128 = v49;
  if (!v60)
  {
    v122 = 0;
    v123 = 0xE000000000000000;
    v62 = v80;
    sub_20E4A61B8();
    v63 = AssociatedTypeWitness;
    sub_20E4A6344();
    (*(void (**)(char *, uint64_t))(v81 + 8))(v62, v63);
    v58 = v122;
    v60 = (ValueMetadata *)v123;
  }
  v125 = v58;
  v126 = v60;
  (*(void (**)(char *, _QWORD *))(v55 + 8))(v61, v57);
  sub_20E4A5264();
  v64 = v106;
  v65 = v111;
  sub_20E4A4DA8();
  swift_bridgeObjectRelease();
  v66 = v110;
  v67 = (void (*)(char *, uint64_t))v96;
  ((void (*)(char *, uint64_t))v96)(v65, v110);
  v68 = sub_20E41240C();
  v121[0] = v92;
  v121[1] = v68;
  v69 = MEMORY[0x24BDED308];
  v70 = v101;
  v71 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v101, v121);
  v72 = v98;
  v73 = v97;
  View._automationIdentifier(_:)();
  v67(v64, v66);
  (*(void (**)(char *, uint64_t))(v99 + 8))(v73, v70);
  v74 = sub_20E39F334(qword_253ED27F8, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
  v120[0] = v71;
  v120[1] = v74;
  v75 = v103;
  v76 = MEMORY[0x212BBDF90](v69, v103, v120);
  v77 = v100;
  sub_20E39D614(v100, v72, v75, v76);
  v78 = *(void (**)(char *, uint64_t))(v102 + 8);
  v78(v72, v75);
  sub_20E39D618((uint64_t)v77, v75, v107);
  return ((uint64_t (*)(_QWORD *, uint64_t))v78)(v77, v75);
}

void sub_20E42DCD8(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int8 v26;
  uint64_t v27;
  _QWORD v28[18];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned __int8 v41;

  v30 = a7;
  v31 = a6;
  v28[17] = a8;
  v29 = a4;
  v28[5] = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v28[9] = (char *)v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v28[8] = (char *)v28 - v14;
  swift_getTupleTypeMetadata2();
  v15 = sub_20E4A491C();
  v16 = MEMORY[0x212BBDF90](MEMORY[0x24BDF5428], v15);
  v28[1] = v15;
  v28[0] = v16;
  v17 = sub_20E4A470C();
  v28[2] = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v28[4] = (char *)v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v28[3] = (char *)v28 - v20;
  v28[11] = v21;
  v22 = sub_20E4A3E00();
  v28[14] = *(_QWORD *)(v22 - 8);
  v28[15] = v22;
  MEMORY[0x24BDAC7A8](v22);
  v28[13] = (char *)v28 - v23;
  v25 = *(_QWORD *)(a1 + 64);
  v24 = *(_QWORD *)(a1 + 72);
  v26 = *(_BYTE *)(a1 + 80);
  v27 = *(_QWORD *)(a1 + 56);
  v28[10] = *(_QWORD *)(a1 + 48);
  v38 = v27;
  v39 = v25;
  v40 = v24;
  v41 = v26;
  sub_20E4337BC(v27, v25, v24, v26);
  sub_20E4A4AE4();
  swift_bridgeObjectRelease();
  v28[6] = a2;
  v32 = a2;
  v33 = a3;
  v28[16] = a3;
  v34 = v29;
  v35 = a5;
  v28[7] = a5;
  v36 = v31;
  v37 = v30;
  type metadata accessor for ShelfGrid();
}

uint64_t sub_20E42DEF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;

  *(_QWORD *)(v7 - 256) = v2;
  sub_20E42CE60(a1, (_BYTE *)(v7 - 168));
  v9 = sub_20E45641C();
  sub_20E4338EC(v5, v4, v1, v3);
  if ((v9 & 1) != 0)
  {
    v10 = sub_20E4A3CD4();
    MEMORY[0x24BDAC7A8](v10);
    v11 = *(_QWORD *)(v7 - 192);
    v12 = *(_QWORD *)(v7 - 320);
    sub_20E4A4700();
    v13 = *(_QWORD *)(v7 - 264);
    v14 = MEMORY[0x212BBDF90](MEMORY[0x24BDF4700], v13);
    v15 = *(_QWORD **)(v7 - 328);
    sub_20E39D614(v15, v12, v13, v14);
    v16 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 336) + 8);
    v16(v12, v13);
    sub_20E39D618((uint64_t)v15, v13, v12);
    v17 = *(_QWORD *)(v7 - 248);
    sub_20E3DC6B0(v12, v13);
    v16(v12, v13);
    v16((uint64_t)v15, v13);
  }
  else
  {
    v18 = *(_QWORD *)(v7 - 280);
    (*(void (**)(uint64_t))(*(_QWORD *)(v7 - 256) + *(int *)(a1 + 84)))(v6);
    v19 = *(_QWORD **)(v7 - 288);
    v20 = *(_QWORD *)(v7 - 224);
    v11 = *(_QWORD *)(v7 - 192);
    sub_20E39D614(v19, v18, v20, v11);
    v21 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 312) + 8);
    v21(v18, v20);
    sub_20E39D618((uint64_t)v19, v20, v18);
    v13 = *(_QWORD *)(v7 - 264);
    MEMORY[0x212BBDF90](MEMORY[0x24BDF4700], v13);
    v17 = *(_QWORD *)(v7 - 248);
    sub_20E39CBE0(v18, v13, v20);
    v21(v18, v20);
    v21((uint64_t)v19, v20);
  }
  *(_QWORD *)(v7 - 184) = MEMORY[0x212BBDF90](MEMORY[0x24BDF4700], v13);
  *(_QWORD *)(v7 - 176) = v11;
  v22 = *(_QWORD *)(v7 - 232);
  MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v22, v7 - 184);
  sub_20E39D618(v17, v22, *(_QWORD *)(v7 - 216));
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 240) + 8))(v17, v22);
}

void sub_20E42E198(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X7>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[18];

  v16[1] = a3;
  v16[7] = a4;
  v16[6] = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  MEMORY[0x24BDAC7A8](v4);
  v16[5] = (char *)v16 - v5;
  v16[2] = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v7);
  MEMORY[0x24BDAC7A8](v8);
  v16[0] = (char *)v16 - v9;
  v16[12] = v10;
  v16[13] = v11;
  v16[14] = v12;
  v16[15] = v13;
  v16[16] = v14;
  v16[17] = v15;
  v16[3] = v14;
  type metadata accessor for ShelfGrid();
}

uint64_t sub_20E42E290(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(_QWORD *, uint64_t);
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);

  (*(void (**)(uint64_t))(v7 + *(int *)(a1 + 84)))(v5);
  sub_20E39D614(v8, v6, v1, v4);
  v11 = *(_QWORD *)(v9 - 208);
  v12 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  *(_QWORD *)(v9 - 192) = v12;
  v12(v6, v1);
  (*(void (**)(uint64_t))(v7 + *(int *)(a1 + 88)))(v5);
  v13 = *(_QWORD **)(v9 - 184);
  v14 = *(_QWORD *)(v9 - 216);
  sub_20E39D614(v13, v3, v2, v14);
  v15 = *(_QWORD *)(v9 - 176);
  v16 = *(void (**)(_QWORD *, uint64_t))(v15 + 8);
  v16(v3, v2);
  v17 = *(_QWORD *)(v9 - 224);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v6, v17, v1);
  *(_QWORD *)(v9 - 128) = v6;
  (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v15 + 16))(v3, v13, v2);
  *(_QWORD *)(v9 - 120) = v3;
  *(_QWORD *)(v9 - 144) = v1;
  *(_QWORD *)(v9 - 136) = v2;
  *(_QWORD *)(v9 - 160) = *(_QWORD *)(v9 - 200);
  *(_QWORD *)(v9 - 152) = v14;
  sub_20E39C54C((uint64_t *)(v9 - 128), 2uLL, v9 - 144);
  v16(v13, v2);
  v18 = *(void (**)(uint64_t, uint64_t))(v9 - 192);
  v18(v17, v1);
  v16(v3, v2);
  return ((uint64_t (*)(uint64_t, uint64_t))v18)(v6, v1);
}

uint64_t sub_20E42E3CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[2];
  __int128 v19;
  __int128 v20;

  v2 = v1;
  v4 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CC8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20E4A5B40();
  v10 = sub_20E4A5174();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_20E39D1F8((uint64_t)v9, &qword_253ED0CC8);
    v19 = 0u;
    v20 = 0u;
LABEL_11:
    sub_20E39D1F8((uint64_t)&v19, &qword_253ED2A38);
    goto LABEL_12;
  }
  v12 = sub_20E4A5168();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
  if (*(_QWORD *)(v12 + 16) && (v13 = sub_20E3BB33C(0x6973736572706D69, 0xEE00657079546E6FLL), (v14 & 1) != 0))
  {
    sub_20E3BB3A0(*(_QWORD *)(v12 + 56) + 32 * v13, (uint64_t)&v19);
  }
  else
  {
    v19 = 0u;
    v20 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v20 + 1))
    goto LABEL_11;
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_12:
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v2, a1);
LABEL_13:
    swift_getDynamicType();
    v15 = sub_20E4A6458();
    goto LABEL_14;
  }
  v15 = v18[0];
  v16 = v18[1];
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v2, a1);
  if (!v16)
    goto LABEL_13;
LABEL_14:
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, a1);
  return v15;
}

uint64_t sub_20E42E5EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[2];
  uint64_t v22;
  _BYTE v23[40];

  v5 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_20E4A5144();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CC8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[1] = a2;
  v22 = v2;
  sub_20E4A5B40();
  v15 = sub_20E4A5174();
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_20E39D1F8((uint64_t)v14, &qword_253ED0CC8);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v22, a1);
LABEL_4:
    _s9JetEngine14ComponentModelP01_aB8_SwiftUIE6viewIDAD0cd4ViewH0Vvg_0();
    v17 = _s9JetEngine12MediaArtworkV01_aB8_SwiftUIE8CacheKeyV16debugDescriptionSSvg_0();
    sub_20E3B8008((uint64_t)v23);
    goto LABEL_5;
  }
  sub_20E4A515C();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v14, v15);
  v17 = sub_20E4A5138();
  v19 = v18;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v22, a1);
  if (!v19)
    goto LABEL_4;
LABEL_5:
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, a1);
  return v17;
}

uint64_t sub_20E42E7D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v0 = sub_20E4A5144();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CC8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20E4A5B40();
  v7 = sub_20E4A5174();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_20E39D1F8((uint64_t)v6, &qword_253ED0CC8);
    return 0;
  }
  else
  {
    sub_20E4A515C();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
    v9 = sub_20E4A512C();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  return v9;
}

uint64_t ShelfGrid.body.getter@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD v64[2];
  _QWORD v65[2];
  _QWORD v66[2];
  _QWORD v67[2];
  _QWORD v68[2];
  _QWORD v69[2];
  _QWORD v70[2];
  _QWORD v71[2];
  _QWORD v72[6];
  uint64_t v73;
  _QWORD v74[2];
  _QWORD v75[3];

  v56 = a2;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1AAF0);
  v3 = a1[5];
  v53 = a1[2];
  v54 = v3;
  v5 = type metadata accessor for UnifiedImpressionableLayoutViewModifier(255, v53, v3, v4);
  v6 = sub_20E4A39D4();
  v7 = sub_20E42EECC();
  v49 = MEMORY[0x212BBDF90](&unk_20E4AB96C, v5);
  v75[0] = v7;
  v75[1] = v49;
  MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v6, v75);
  v8 = sub_20E4A3A94();
  v9 = a1[4];
  v51 = a1[3];
  v52 = v9;
  swift_getTupleTypeMetadata2();
  v10 = sub_20E4A491C();
  MEMORY[0x212BBDF90](MEMORY[0x24BDF5428], v10);
  v11 = sub_20E4A470C();
  v12 = sub_20E4A3E00();
  v13 = sub_20E4A4574();
  v14 = MEMORY[0x212BBDF90](MEMORY[0x24BDF4700], v11);
  v50 = a1[6];
  v74[0] = v14;
  v74[1] = v50;
  v73 = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v12, v74);
  v72[2] = v13;
  v72[3] = &type metadata for ComponentModelViewID;
  v72[4] = MEMORY[0x212BBDF90](MEMORY[0x24BDF3F50], v13, &v73);
  v72[5] = sub_20E42F020();
  v15 = sub_20E4A46DC();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A18588);
  v16 = sub_20E4A39D4();
  v17 = sub_20E4A39D4();
  sub_20E4A4004();
  v18 = (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088];
  v19 = sub_20E4A39D4();
  v72[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDF44C8], v15);
  v72[1] = sub_20E3FD4F8((unint64_t *)&qword_254A18590, &qword_254A18588);
  v20 = MEMORY[0x24BDED308];
  v71[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v16, v72);
  v71[1] = sub_20E41240C();
  v70[0] = MEMORY[0x212BBDF90](v20, v17, v71);
  v70[1] = sub_20E39F334(qword_253ED27F8, v18, MEMORY[0x24BDF1078]);
  v21 = MEMORY[0x212BBDF90](v20, v19, v70);
  v23 = type metadata accessor for _ResolvedVerticalShelfLayout(255, v19, v21, v22);
  v24 = sub_20E4A39D4();
  v25 = sub_20E4A39D4();
  v26 = sub_20E4A39D4();
  v27 = sub_20E4A39D4();
  v28 = sub_20E4A3E00();
  v29 = MEMORY[0x212BBDF90](MEMORY[0x24BDEDA10], v8);
  v30 = MEMORY[0x212BBDF90](&unk_20E4A9FF8, v23);
  v31 = MEMORY[0x24BDECC60];
  v69[0] = v30;
  v69[1] = MEMORY[0x24BDECC60];
  v32 = MEMORY[0x24BDED308];
  v68[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v24, v69);
  v68[1] = v31;
  v67[0] = MEMORY[0x212BBDF90](v32, v25, v68);
  v67[1] = MEMORY[0x24BDEDBB8];
  v66[0] = MEMORY[0x212BBDF90](v32, v26, v67);
  v66[1] = v49;
  v65[0] = v29;
  v65[1] = MEMORY[0x212BBDF90](v32, v27, v66);
  MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v28, v65);
  v33 = sub_20E4A470C();
  v48 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v35 = (char *)&v47 - v34;
  v36 = sub_20E4A39D4();
  v49 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v38 = (char *)&v47 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v39);
  v41 = (uint64_t *)((char *)&v47 - v40);
  sub_20E4A3CC8();
  v57 = v53;
  v58 = v51;
  v59 = v52;
  v60 = v54;
  v42 = a1[7];
  v61 = v50;
  v62 = v42;
  v63 = v55;
  sub_20E4A4700();
  sub_20E4A48A4();
  v46 = MEMORY[0x212BBDF90](MEMORY[0x24BDF4700], v33);
  sub_20E4A443C();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v35, v33);
  v64[0] = v46;
  v64[1] = MEMORY[0x24BDEDBB8];
  v43 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v36, v64);
  sub_20E39D614(v41, v38, v36, v43);
  v44 = *(void (**)(char *, uint64_t))(v49 + 8);
  v44(v38, v36);
  sub_20E39D618((uint64_t)v41, v36, v56);
  return ((uint64_t (*)(_QWORD *, uint64_t))v44)(v41, v36);
}

unint64_t sub_20E42EECC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_254A1AAF8;
  if (!qword_254A1AAF8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1AAF0);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1AB00);
    v2[3] = sub_20E42EF60();
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254A1AAF8);
  }
  return result;
}

unint64_t sub_20E42EF60()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_254A1AB08;
  if (!qword_254A1AB08)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1AB00);
    v2 = sub_20E42EFC4();
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDF5578], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_254A1AB08);
  }
  return result;
}

unint64_t sub_20E42EFC4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254A1AB10;
  if (!qword_254A1AB10)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1AB18);
    v2[0] = MEMORY[0x24BDF4760];
    v2[1] = MEMORY[0x24BDF4760];
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254A1AB10);
  }
  return result;
}

unint64_t sub_20E42F020()
{
  unint64_t result;

  result = qword_254A1AB20;
  if (!qword_254A1AB20)
  {
    result = MEMORY[0x212BBDF90](&protocol conformance descriptor for ComponentModelViewID, &type metadata for ComponentModelViewID);
    atomic_store(result, (unint64_t *)&qword_254A1AB20);
  }
  return result;
}

void sub_20E42F064(uint64_t a1@<X0>, uint64_t a2@<X1>, ValueMetadata *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[16];
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE *v36;
  _BYTE *v37;
  ValueMetadata *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  ValueMetadata *v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD v56[2];
  _QWORD v57[2];
  _QWORD v58[2];
  uint64_t v59;
  _QWORD v60[4];

  v44 = a6;
  v45 = a7;
  v49 = a1;
  v41 = a8;
  swift_getTupleTypeMetadata2();
  v13 = sub_20E4A491C();
  MEMORY[0x212BBDF90](MEMORY[0x24BDF5428], v13);
  v14 = sub_20E4A470C();
  v15 = sub_20E4A3E00();
  v16 = sub_20E4A4574();
  v60[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDF4700], v14);
  v60[1] = a6;
  v59 = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v15, v60);
  v50 = v16;
  v51 = &type metadata for ComponentModelViewID;
  v52 = MEMORY[0x212BBDF90](MEMORY[0x24BDF3F50], v16, &v59);
  v53 = sub_20E42F020();
  v17 = sub_20E4A46DC();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A18588);
  v18 = sub_20E4A39D4();
  v19 = sub_20E4A39D4();
  sub_20E4A4004();
  v20 = sub_20E4A39D4();
  v58[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDF44C8], v17);
  v58[1] = sub_20E3FD4F8((unint64_t *)&qword_254A18590, &qword_254A18588);
  v21 = MEMORY[0x24BDED308];
  v57[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v18, v58);
  v57[1] = sub_20E41240C();
  v56[0] = MEMORY[0x212BBDF90](v21, v19, v57);
  v56[1] = sub_20E39F334(qword_253ED27F8, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
  v32 = MEMORY[0x212BBDF90](v21, v20, v56);
  v33 = v20;
  v46 = type metadata accessor for _ResolvedVerticalShelfLayout(255, v20, v32, v22);
  v47 = sub_20E4A39D4();
  v48 = sub_20E4A39D4();
  v23 = sub_20E4A39D4();
  type metadata accessor for UnifiedImpressionableLayoutViewModifier(255, a2, a5, v24);
  v40 = v23;
  v25 = sub_20E4A39D4();
  v35 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v37 = &v31[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v27);
  v34 = &v31[-v28];
  MEMORY[0x24BDAC7A8](v29);
  v36 = &v31[-v30];
  v42 = a2;
  v43 = a5;
  v50 = a2;
  v38 = a3;
  v39 = a4;
  v51 = a3;
  v52 = a4;
  v53 = a5;
  v54 = v44;
  v55 = v45;
  type metadata accessor for ShelfGrid();
}

uint64_t sub_20E42F3A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  unint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, _BYTE *, uint64_t);
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  char v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  void (*v87)(uint64_t, uint64_t);
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v100;
  _BYTE v101[32];

  v7 = *(_QWORD *)(a1 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](a1);
  v10 = &v101[-v9];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1AAF0);
  v11 = sub_20E4A39D4();
  v12 = sub_20E42EECC();
  v13 = MEMORY[0x212BBDF90](&unk_20E4AB96C, v4);
  *(_QWORD *)(v5 - 184) = v12;
  *(_QWORD *)(v5 - 176) = v13;
  *(_QWORD *)(v1 + 104) = v13;
  *(_QWORD *)v1 = MEMORY[0x212BBDF90](v2, v11, v5 - 184);
  *(_QWORD *)(v1 + 80) = sub_20E4A3A94();
  *(_QWORD *)(v1 + 120) = v3;
  v14 = *(_QWORD *)(v1 + 216);
  v15 = sub_20E4A3E00();
  *(_QWORD *)(v1 + 112) = v15;
  *(_QWORD *)(v1 + 96) = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  *(_QWORD *)(v1 + 88) = &v101[-v16];
  v17 = v14 + *(int *)(a1 + 68);
  v18 = *(_QWORD *)v17;
  v19 = *(_QWORD *)(v17 + 8);
  v20 = *(_QWORD *)(v17 + 16);
  v21 = *(unsigned __int8 *)(v17 + 24);
  *(_QWORD *)(v1 + 224) = v19;
  *(_QWORD *)(v1 + 232) = v18;
  sub_20E4337BC(v18, v19, v20, v21);
  v22 = a1;
  v23 = sub_20E42CD0C(a1);
  if ((v21 & 0xC0) != 0x40 || (v23 & 1) == 0)
    __asm { BR              X10 }
  *(_QWORD *)(v1 + 224) = 0;
  *(_QWORD *)(v1 + 232) = 1;
  *(_QWORD *)(v1 + 152) = 0;
  v24 = *(_QWORD *)(v1 + 168);
  v25 = *(_QWORD *)(v1 + 160);
  *(_QWORD *)v1 = sub_20E4A4AE4();
  v26 = (uint64_t *)(v14 + *(int *)(v22 + 76));
  v27 = *v26;
  v28 = *((_BYTE *)v26 + 8);
  v29 = v26[2];
  LOBYTE(v26) = *((_BYTE *)v26 + 24);
  *(_QWORD *)(v1 + 1928) = v27;
  *(_BYTE *)(v1 + 1936) = v28;
  *(_QWORD *)(v1 + 1944) = v29;
  *(_BYTE *)(v1 + 1952) = (_BYTE)v26;
  sub_20E42CE60(v22, (_BYTE *)(v1 + 912));
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(v10, v14, v22);
  v30 = (*(unsigned __int8 *)(v7 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v31 = (char *)swift_allocObject();
  v32 = *(_QWORD *)(v1 + 64);
  *((_QWORD *)v31 + 2) = v25;
  *((_QWORD *)v31 + 3) = v32;
  *((_QWORD *)v31 + 4) = *(_QWORD *)(v1 + 72);
  *((_QWORD *)v31 + 5) = v24;
  v33 = *(_QWORD *)(v1 + 184);
  *((_QWORD *)v31 + 6) = *(_QWORD *)(v1 + 176);
  *((_QWORD *)v31 + 7) = v33;
  v34 = *(void (**)(char *, _BYTE *, uint64_t))(v7 + 32);
  *(_QWORD *)(v1 + 8) = v22;
  v34(&v31[v30], v10, v22);
  v35 = &v31[(v8 + v30 + 7) & 0xFFFFFFFFFFFFFFF8];
  v36 = *(_QWORD *)(v1 + 224);
  v37 = *(_QWORD *)(v1 + 232);
  *(_QWORD *)v35 = v37;
  *((_QWORD *)v35 + 1) = v36;
  v38 = *(_QWORD *)(v1 + 152);
  *((_QWORD *)v35 + 2) = v38;
  *(_DWORD *)(v1 + 148) = 64;
  v35[24] = 64;
  v39 = *(_QWORD *)v1;
  *(_QWORD *)(v1 + 232) = v37;
  sub_20E3EA920(v39, v37, (uint64_t *)(v1 + 1928), (char *)(v1 + 912), (uint64_t)sub_20E434CB8, (uint64_t)v31, v1 + 1544);
  v40 = *(_QWORD *)(v1 + 1544);
  *(_QWORD *)(v1 + 184) = v40;
  v41 = *(_BYTE *)(v1 + 1568);
  v42 = *(_QWORD *)(v1 + 1576);
  v43 = *(_BYTE *)(v1 + 1584);
  v44 = *(_BYTE *)(v1 + 1585);
  v45 = *(_QWORD *)(v1 + 1592);
  v46 = *(_QWORD *)(v1 + 1600);
  v47 = *(_QWORD *)(v1 + 1608);
  LOBYTE(v24) = *(_BYTE *)(v1 + 1616);
  *(_QWORD *)(v1 + 1464) = v40;
  *(_OWORD *)(v1 + 1472) = *(_OWORD *)(v1 + 1552);
  *(_BYTE *)(v1 + 1488) = v41;
  *(_QWORD *)(v1 + 1496) = v42;
  *(_BYTE *)(v1 + 1504) = v43;
  *(_BYTE *)(v1 + 1505) = v44;
  *(_QWORD *)(v1 + 1512) = v45;
  *(_QWORD *)(v1 + 1520) = v46;
  *(_QWORD *)(v1 + 1528) = v47;
  *(_BYTE *)(v1 + 1536) = v24;
  sub_20E4337BC(v37, v36, v38, 0x40u);
  sub_20E4A40AC();
  v48 = MEMORY[0x212BBDF90](&unk_20E4A9FF8, *(_QWORD *)(v1 + 192));
  sub_20E4A4478();
  swift_release();
  swift_bridgeObjectRelease();
  sub_20E39CED8(v47, v24);
  v49 = *(_OWORD *)(v1 + 1688);
  v50 = *(_OWORD *)(v1 + 1704);
  *(_OWORD *)(v1 + 1392) = v49;
  *(_OWORD *)(v1 + 1408) = v50;
  v51 = *(_OWORD *)(v1 + 1720);
  *(_OWORD *)(v1 + 1424) = v51;
  v52 = *(_OWORD *)(v1 + 1729);
  *(_OWORD *)(v1 + 1433) = v52;
  v53 = *(_OWORD *)(v1 + 1624);
  v54 = *(_OWORD *)(v1 + 1640);
  *(_OWORD *)(v1 + 1328) = v53;
  *(_OWORD *)(v1 + 1344) = v54;
  v55 = *(_OWORD *)(v1 + 1656);
  v56 = *(_OWORD *)(v1 + 1672);
  *(_OWORD *)(v1 + 1360) = v55;
  *(_OWORD *)(v1 + 1376) = v56;
  *(_OWORD *)(v1 + 1264) = v49;
  *(_OWORD *)(v1 + 1280) = v50;
  *(_OWORD *)(v1 + 1296) = v51;
  *(_OWORD *)(v1 + 1305) = v52;
  *(_OWORD *)(v1 + 1200) = v53;
  *(_OWORD *)(v1 + 1216) = v54;
  *(_OWORD *)(v1 + 1232) = v55;
  *(_OWORD *)(v1 + 1248) = v56;
  sub_20E4A40C4();
  *(_QWORD *)(v1 + 720) = v48;
  v57 = MEMORY[0x24BDECC60];
  *(_QWORD *)(v1 + 728) = MEMORY[0x24BDECC60];
  v58 = v57;
  v59 = MEMORY[0x24BDED308];
  v60 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], *(_QWORD *)(v1 + 200), v1 + 720);
  sub_20E4A4478();
  sub_20E434D7C(v1 + 1328);
  v61 = *(_OWORD *)(v1 + 1864);
  v62 = *(_OWORD *)(v1 + 1896);
  *(_OWORD *)(v1 + 864) = *(_OWORD *)(v1 + 1880);
  *(_OWORD *)(v1 + 880) = v62;
  *(_OWORD *)(v1 + 889) = *(_OWORD *)(v1 + 1905);
  v63 = *(_OWORD *)(v1 + 1800);
  v65 = *(_OWORD *)(v1 + 1816);
  v64 = *(_OWORD *)(v1 + 1832);
  *(_OWORD *)(v1 + 800) = v65;
  *(_OWORD *)(v1 + 816) = v64;
  v66 = *(_OWORD *)(v1 + 1832);
  *(_OWORD *)(v1 + 832) = *(_OWORD *)(v1 + 1848);
  *(_OWORD *)(v1 + 848) = v61;
  v67 = *(_OWORD *)(v1 + 1768);
  *(_OWORD *)(v1 + 736) = *(_OWORD *)(v1 + 1752);
  *(_OWORD *)(v1 + 752) = v67;
  v68 = *(_OWORD *)(v1 + 1800);
  v70 = *(_OWORD *)(v1 + 1752);
  v69 = *(_OWORD *)(v1 + 1768);
  v71 = *(_OWORD *)(v1 + 1784);
  *(_OWORD *)(v1 + 768) = v71;
  *(_OWORD *)(v1 + 784) = v68;
  v72 = *(_OWORD *)(v1 + 1896);
  *(_OWORD *)(v1 + 1040) = *(_OWORD *)(v1 + 1880);
  *(_OWORD *)(v1 + 1056) = v72;
  *(_OWORD *)(v1 + 1065) = *(_OWORD *)(v1 + 1905);
  *(_OWORD *)(v1 + 976) = v65;
  *(_OWORD *)(v1 + 992) = v66;
  v73 = *(_OWORD *)(v1 + 1864);
  *(_OWORD *)(v1 + 1008) = *(_OWORD *)(v1 + 1848);
  *(_OWORD *)(v1 + 1024) = v73;
  *(_OWORD *)(v1 + 912) = v70;
  *(_OWORD *)(v1 + 928) = v69;
  *(_OWORD *)(v1 + 944) = v71;
  *(_OWORD *)(v1 + 960) = v63;
  v74 = *(_QWORD *)(v1 + 8);
  v75 = *(_QWORD *)(v1 + 216);
  sub_20E42CDE0(v74);
  sub_20E4A48A4();
  *(_QWORD *)(v1 + 704) = v60;
  *(_QWORD *)(v1 + 712) = v58;
  v100 = MEMORY[0x212BBDF90](v59, *(_QWORD *)(v1 + 208), v1 + 704);
  sub_20E4A443C();
  sub_20E434D7C(v1 + 736);
  memcpy((void *)(v1 + 912), (const void *)(v1 + 1928), 0x120uLL);
  memcpy((void *)(v1 + 416), (const void *)(v1 + 1928), 0x120uLL);
  v76 = v75 + *(int *)(v74 + 80);
  v77 = v75;
  v78 = *(_QWORD *)v76;
  v79 = *(_BYTE *)(v76 + 8);
  *(_QWORD *)(v1 + 400) = v100;
  *(_QWORD *)(v1 + 408) = MEMORY[0x24BDEDBB8];
  v80 = *(_QWORD *)(v1 + 128);
  v81 = MEMORY[0x212BBDF90](v59, v80, v1 + 400);
  v82 = *(_QWORD *)(v1 + 32);
  View.unifiedImpressionableLayout<A>(_:position:definesParentContext:)(v77, v78, v79, 1u, v80, *(_QWORD *)(v1 + 160), v81, *(_QWORD *)(v1 + 168), v82);
  sub_20E434D7C(v1 + 912);
  *(_QWORD *)(v1 + 384) = v81;
  v83 = *(_QWORD *)(v1 + 104);
  *(_QWORD *)(v1 + 392) = v83;
  v84 = *(_QWORD *)(v1 + 120);
  v85 = MEMORY[0x212BBDF90](v59, v84, v1 + 384);
  v86 = *(_QWORD **)(v1 + 48);
  sub_20E39D614(v86, v82, v84, v85);
  v87 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 40) + 8);
  v87(v82, v84);
  v88 = *(_QWORD *)(v1 + 56);
  sub_20E39D618((uint64_t)v86, v84, v88);
  v89 = *(_QWORD *)(v1 + 80);
  MEMORY[0x212BBDF90](MEMORY[0x24BDEDA10], v89);
  v90 = *(_QWORD *)(v1 + 88);
  sub_20E39CBE0(v88, v89, v84);
  sub_20E4338EC(*(_QWORD *)(v1 + 232), *(_QWORD *)(v1 + 224), *(_QWORD *)(v1 + 152), *(_DWORD *)(v1 + 148));
  v91 = v88;
  v92 = MEMORY[0x24BDECC60];
  v87(v91, v84);
  v93 = v86;
  v94 = MEMORY[0x24BDEDBB8];
  v87((uint64_t)v93, v84);
  v95 = MEMORY[0x212BBDF90](MEMORY[0x24BDEDA10], v89);
  *(_QWORD *)(v1 + 368) = MEMORY[0x212BBDF90](&unk_20E4A9FF8, *(_QWORD *)(v1 + 192));
  *(_QWORD *)(v1 + 376) = v92;
  v96 = MEMORY[0x24BDED308];
  *(_QWORD *)(v1 + 352) = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], *(_QWORD *)(v1 + 200), v1 + 368);
  *(_QWORD *)(v1 + 360) = v92;
  *(_QWORD *)(v1 + 336) = MEMORY[0x212BBDF90](v96, *(_QWORD *)(v1 + 208), v1 + 352);
  *(_QWORD *)(v1 + 344) = v94;
  *(_QWORD *)(v1 + 320) = MEMORY[0x212BBDF90](v96, v80, v1 + 336);
  *(_QWORD *)(v1 + 328) = v83;
  v97 = MEMORY[0x212BBDF90](v96, v84, v1 + 320);
  *(_QWORD *)(v1 + 304) = v95;
  *(_QWORD *)(v1 + 312) = v97;
  v98 = *(_QWORD *)(v1 + 112);
  MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v98, v1 + 304);
  sub_20E39D618(v90, v98, *(_QWORD *)(v1 + 136));
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 96) + 8))(v90, v98);
}

void sub_20E42FD80(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_20E42F064(*(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 16), *(ValueMetadata **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), a1);
}

void sub_20E42FD94(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, int a6@<W6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, ValueMetadata *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  double v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  ValueMetadata *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t OpaqueTypeConformance2;
  uint64_t v48;
  ValueMetadata *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  ValueMetadata *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  _QWORD v75[10];
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  int v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  ValueMetadata *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char v125;
  uint64_t v126;
  uint64_t v127;
  ValueMetadata *v128;
  uint64_t v129;
  unint64_t v130;
  uint64_t v131;
  uint64_t v132;
  _QWORD v133[2];
  _QWORD v134[2];
  _QWORD v135[2];
  _QWORD v136[2];
  uint64_t v137;
  _QWORD v138[3];

  v111 = a7;
  v105 = a6;
  v104 = a5;
  v101 = a3;
  v102 = a4;
  v98 = a1;
  v99 = a2;
  v109 = a8;
  v97 = a14;
  v85 = a13;
  v113 = a9;
  v110 = a11;
  v14 = sub_20E4A3F8C();
  v107 = *(_QWORD *)(v14 - 8);
  v108 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v106 = (char *)v75 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = sub_20E4A3E18();
  v100 = *(_QWORD *)(v103 - 8);
  MEMORY[0x24BDAC7A8](v103);
  v96 = (char *)v75 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getTupleTypeMetadata2();
  v17 = sub_20E4A491C();
  MEMORY[0x212BBDF90](MEMORY[0x24BDF5428], v17);
  v18 = sub_20E4A470C();
  v19 = sub_20E4A3E00();
  v20 = sub_20E4A4574();
  v138[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDF4700], v18);
  v138[1] = a13;
  v137 = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v19, v138);
  v21 = MEMORY[0x212BBDF90](MEMORY[0x24BDF3F50], v20, &v137);
  v22 = sub_20E42F020();
  v127 = v20;
  v128 = &type metadata for ComponentModelViewID;
  v129 = v21;
  v130 = v22;
  v23 = sub_20E4A46DC();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A18588);
  v24 = sub_20E4A39D4();
  v25 = sub_20E4A39D4();
  sub_20E4A4004();
  v26 = (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088];
  v27 = sub_20E4A39D4();
  v28 = sub_20E4A39D4();
  v29 = MEMORY[0x212BBDF90](MEMORY[0x24BDF44C8], v23);
  v30 = sub_20E3FD4F8((unint64_t *)&qword_254A18590, &qword_254A18588);
  v136[0] = v29;
  v136[1] = v30;
  v31 = MEMORY[0x24BDED308];
  v32 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v24, v136);
  v33 = sub_20E41240C();
  v135[0] = v32;
  v135[1] = v33;
  v34 = MEMORY[0x212BBDF90](v31, v25, v135);
  v35 = sub_20E39F334(qword_253ED27F8, v26, MEMORY[0x24BDF1078]);
  v134[0] = v34;
  v134[1] = v35;
  v133[0] = MEMORY[0x212BBDF90](v31, v27, v134);
  v133[1] = MEMORY[0x24BDEBEE0];
  v36 = MEMORY[0x212BBDF90](v31, v28, v133);
  v78 = type metadata accessor for _ResolvedHorizontalShelfLayout(255, v28, v36, v37);
  v77 = MEMORY[0x212BBDF90](&unk_20E4B0308, v78);
  v38 = sub_20E4A3674();
  v82 = *(_QWORD *)(v38 - 8);
  v39 = MEMORY[0x24BDAC7A8](v38);
  v41 = (char *)v75 - v40;
  v42 = MEMORY[0x212BBDF90](MEMORY[0x24BDEB238], v38, v39);
  v127 = v38;
  v128 = (ValueMetadata *)v42;
  v43 = (ValueMetadata *)v42;
  v75[5] = v42;
  v44 = MEMORY[0x212BBDF30](0, &v127, MEMORY[0x24BDF2FE0], 0);
  v84 = *(_QWORD *)(v44 - 8);
  v45 = v44;
  MEMORY[0x24BDAC7A8](v44);
  v75[4] = (char *)v75 - v46;
  v127 = v38;
  v128 = v43;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v127 = v45;
  v128 = (ValueMetadata *)OpaqueTypeConformance2;
  v48 = v45;
  v75[6] = v45;
  v49 = (ValueMetadata *)OpaqueTypeConformance2;
  v75[8] = OpaqueTypeConformance2;
  v50 = MEMORY[0x212BBDF30](0, &v127, MEMORY[0x24BDF2D38], 0);
  v81 = *(_QWORD *)(v50 - 8);
  v51 = v50;
  MEMORY[0x24BDAC7A8](v50);
  v75[7] = (char *)v75 - v52;
  v127 = v48;
  v128 = v49;
  v53 = swift_getOpaqueTypeConformance2();
  v127 = v51;
  v128 = (ValueMetadata *)v53;
  v54 = v51;
  v75[2] = v51;
  v75[3] = v53;
  v55 = (ValueMetadata *)v53;
  v56 = MEMORY[0x24BDF2FF0];
  v57 = MEMORY[0x212BBDF30](0, &v127, MEMORY[0x24BDF2FF0], 0);
  v58 = *(_QWORD *)(v57 - 8);
  v59 = v57;
  v75[9] = v57;
  v79 = v58;
  MEMORY[0x24BDAC7A8](v57);
  v75[1] = (char *)v75 - v60;
  v127 = v54;
  v128 = v55;
  v76 = swift_getOpaqueTypeConformance2();
  v127 = v59;
  v128 = (ValueMetadata *)v76;
  v80 = MEMORY[0x212BBDF30](0, &v127, v56, 0);
  v83 = *(_QWORD *)(v80 - 8);
  MEMORY[0x24BDAC7A8](v80);
  v75[0] = (char *)v75 - v61;
  v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1ABD0);
  v87 = *(_QWORD *)(v91 - 8);
  MEMORY[0x24BDAC7A8](v91);
  v86 = (char *)v75 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1AAF0);
  MEMORY[0x24BDAC7A8](v63);
  v89 = (char *)v75 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = v113;
  v112 = a12;
  v67 = type metadata accessor for UnifiedImpressionableLayoutViewModifier(255, v113, a12, v66);
  v90 = v63;
  v88 = v67;
  v68 = sub_20E4A39D4();
  v94 = *(_QWORD *)(v68 - 8);
  v95 = v68;
  MEMORY[0x24BDAC7A8](v68);
  v92 = (char *)v75 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v70);
  v93 = (char *)v75 - v71;
  sub_20E4A4064();
  v114 = v65;
  v115 = a10;
  v116 = v110;
  v117 = a12;
  v72 = v85;
  v73 = v97;
  v118 = v85;
  v119 = v97;
  v120 = v98;
  v121 = v99;
  v122 = v101;
  v123 = v102;
  v124 = v104;
  v125 = v105;
  v126 = v111;
  sub_20E448A88();
  v74 = v96;
  sub_20E4A3E0C();
  sub_20E4A4064();
  sub_20E4A4364();
  (*(void (**)(char *, uint64_t))(v100 + 8))(v74, v103);
  (*(void (**)(char *, uint64_t))(v82 + 8))(v41, v38);
  v127 = v113;
  v128 = a10;
  v129 = v110;
  v130 = v112;
  v131 = v72;
  v132 = v73;
  type metadata accessor for ShelfGrid();
}

uint64_t sub_20E430478(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t OpaqueTypeConformance2;
  uint64_t v20;
  char v21;
  unsigned __int8 v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  void (*v38)(uint64_t, uint64_t);

  sub_20E42CDE0(a1);
  v6 = v1[6];
  v7 = v1[7];
  sub_20E4A431C();
  v8 = v2;
  (*(void (**)(uint64_t, uint64_t))(v1[18] + 8))(v3, v6);
  sub_20E4A40AC();
  v10 = v1[1];
  v9 = v1[2];
  sub_20E4A4370();
  v11 = v1[40];
  (*(void (**)(uint64_t, uint64_t))(v1[15] + 8))(v7, v9);
  sub_20E4A40C4();
  v12 = *v1;
  v13 = v1[9];
  v14 = v1[10];
  sub_20E4A4370();
  (*(void (**)(uint64_t, uint64_t))(v1[13] + 8))(v10, v13);
  sub_20E45DD60((_OWORD *)(v4 - 240));
  v15 = v8 + *(int *)(a1 + 76);
  v16 = *(_QWORD *)v15;
  v17 = *(_BYTE *)(v15 + 8);
  v18 = *(_QWORD *)(v15 + 16);
  LOBYTE(v15) = *(_BYTE *)(v15 + 24);
  v1[68] = v16;
  *((_BYTE *)v1 + 552) = v17;
  v1[70] = v18;
  *((_BYTE *)v1 + 568) = v15;
  v1[66] = v13;
  v1[67] = v14;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v20 = v1[14];
  sub_20E4311E0(v4 - 240, v1[45], v1 + 68, v20, OpaqueTypeConformance2, (uint64_t)(v1 + 66));
  __swift_destroy_boxed_opaque_existential_1(v4 - 240);
  (*(void (**)(uint64_t, uint64_t))(v1[17] + 8))(v12, v20);
  v21 = *((_BYTE *)v1 + 536);
  *(_QWORD *)(v4 - 240) = v1[66];
  *(_BYTE *)(v4 - 232) = v21;
  sub_20E4A3F74();
  LOBYTE(v12) = sub_20E4A407C();
  v22 = sub_20E4A4064();
  sub_20E4A4070();
  sub_20E4A4070();
  if (sub_20E4A4070() != v12)
    sub_20E4A4070();
  sub_20E4A4070();
  if (sub_20E4A4070() != v22)
    sub_20E4A4070();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1AB00);
  sub_20E42EF60();
  v23 = v1[20];
  sub_20E4A42EC();
  (*(void (**)(uint64_t, uint64_t))(v1[41] + 8))(v11, v1[42]);
  sub_20E43505C(*(_QWORD *)(v4 - 240), *(_BYTE *)(v4 - 232));
  v24 = sub_20E42CDE0(a1);
  v26 = v25 & 1;
  sub_20E4A48A4();
  v27 = v1[23];
  v28 = sub_20E431CB8(0.0, 1, 0.0, 1, *(double *)&v24, v26, 0.0, 1, v27, 0.0, 1, 0.0, 1);
  (*(void (**)(uint64_t, uint64_t, __n128))(v1[21] + 8))(v23, v1[25], v28);
  v29 = v8 + *(int *)(a1 + 80);
  v30 = *(_QWORD *)v29;
  v31 = *(_BYTE *)(v29 + 8);
  v32 = sub_20E42EECC();
  v33 = v1[26];
  View.unifiedImpressionableLayout<A>(_:position:definesParentContext:)(v8, v30, v31, 1u, v1[24], v1[47], v32, v1[46], v33);
  sub_20E39D1F8(v27, &qword_254A1AAF0);
  v34 = MEMORY[0x212BBDF90](&unk_20E4AB96C, v1[22]);
  v1[64] = v32;
  v1[65] = v34;
  v35 = v1[29];
  v36 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v35, v1 + 64);
  v37 = (_QWORD *)v1[27];
  sub_20E39D614(v37, v33, v35, v36);
  v38 = *(void (**)(uint64_t, uint64_t))(v1[28] + 8);
  v38(v33, v35);
  sub_20E39D618((uint64_t)v37, v35, v1[43]);
  return ((uint64_t (*)(_QWORD *, uint64_t))v38)(v37, v35);
}

void sub_20E430824()
{
  type metadata accessor for ShelfGrid();
}

uint64_t sub_20E43089C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t *v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v60;

  v7 = *(_QWORD *)(a1 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](a1);
  v10 = (char *)&v60 - v9;
  *(_QWORD *)(v1 + 40) = sub_20E4A4AE4();
  v11 = (uint64_t *)(v4 + *(int *)(a1 + 76));
  v12 = *v11;
  v13 = *((_BYTE *)v11 + 8);
  v14 = v11[2];
  LOBYTE(v11) = *((_BYTE *)v11 + 24);
  *(_QWORD *)(v1 + 112) = v12;
  *(_BYTE *)(v1 + 120) = v13;
  *(_QWORD *)(v1 + 128) = v14;
  *(_BYTE *)(v1 + 136) = (_BYTE)v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v4, a1);
  v15 = (*(unsigned __int8 *)(v7 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  *(_QWORD *)(v1 + 8) = (v15 + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v16 = (v15 + v8 + 39) & 0xFFFFFFFFFFFFFFF8;
  v17 = (char *)swift_allocObject();
  *((_QWORD *)v17 + 2) = v2;
  v18 = *(_QWORD *)(v1 + 16);
  *((_QWORD *)v17 + 3) = *(_QWORD *)(v1 + 24);
  *((_QWORD *)v17 + 4) = v18;
  v19 = *(_QWORD *)(v1 + 64);
  *((_QWORD *)v17 + 5) = v3;
  *((_QWORD *)v17 + 6) = v19;
  *((_QWORD *)v17 + 7) = *(_QWORD *)(v1 + 32);
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v17[v15], v10, a1);
  v20 = &v17[*(_QWORD *)(v1 + 8)];
  v21 = *(_QWORD *)(v1 + 80);
  *(_QWORD *)v20 = *(_QWORD *)(v1 + 72);
  *((_QWORD *)v20 + 1) = v21;
  *((_QWORD *)v20 + 2) = *(_QWORD *)(v1 + 88);
  v20[24] = *(_DWORD *)(v1 + 100);
  *(_QWORD *)&v17[v16] = *(_QWORD *)(v1 + 104);
  swift_getTupleTypeMetadata2();
  v22 = sub_20E4A491C();
  MEMORY[0x212BBDF90](MEMORY[0x24BDF5428], v22);
  v23 = sub_20E4A470C();
  v24 = sub_20E4A3E00();
  v25 = sub_20E4A4574();
  v26 = MEMORY[0x212BBDF90](MEMORY[0x24BDF4700], v23);
  v27 = *(_QWORD *)(v1 + 64);
  *(_QWORD *)(v5 - 232) = v26;
  *(_QWORD *)(v5 - 224) = v27;
  *(_QWORD *)(v1 + 240) = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v24, v5 - 232);
  v28 = MEMORY[0x212BBDF90](MEMORY[0x24BDF3F50], v25, v1 + 240);
  v29 = sub_20E42F020();
  *(_QWORD *)(v5 - 152) = v25;
  *(_QWORD *)(v5 - 144) = &type metadata for ComponentModelViewID;
  *(_QWORD *)(v5 - 136) = v28;
  *(_QWORD *)(v5 - 128) = v29;
  v30 = sub_20E4A46DC();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A18588);
  v31 = sub_20E4A39D4();
  v32 = sub_20E4A39D4();
  sub_20E4A4004();
  v33 = (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088];
  v34 = sub_20E4A39D4();
  v35 = sub_20E4A39D4();
  v36 = MEMORY[0x212BBDF90](MEMORY[0x24BDF44C8], v30);
  v37 = sub_20E3FD4F8((unint64_t *)&qword_254A18590, &qword_254A18588);
  *(_QWORD *)(v1 + 224) = v36;
  *(_QWORD *)(v1 + 232) = v37;
  v38 = MEMORY[0x24BDED308];
  v39 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v31, v1 + 224);
  v40 = sub_20E41240C();
  *(_QWORD *)(v1 + 208) = v39;
  *(_QWORD *)(v1 + 216) = v40;
  v41 = MEMORY[0x212BBDF90](v38, v32, v1 + 208);
  v42 = sub_20E39F334(qword_253ED27F8, v33, MEMORY[0x24BDF1078]);
  *(_QWORD *)(v1 + 192) = v41;
  *(_QWORD *)(v1 + 200) = v42;
  v43 = MEMORY[0x212BBDF90](v38, v34, v1 + 192);
  v44 = MEMORY[0x24BDEBEE0];
  *(_QWORD *)(v1 + 176) = v43;
  *(_QWORD *)(v1 + 184) = v44;
  v45 = MEMORY[0x212BBDF90](v38, v35, v1 + 176);
  sub_20E477FA0(*(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), (uint64_t *)(v1 + 112), (uint64_t)sub_20E43524C, (uint64_t)v17, v5 - 216);
  v46 = *(_BYTE *)(v5 - 192);
  v47 = *(_QWORD *)(v5 - 184);
  v48 = *(_BYTE *)(v5 - 176);
  v49 = *(_QWORD *)(v5 - 168);
  v50 = *(_QWORD *)(v5 - 160);
  *(_QWORD *)(v1 + 112) = *(_QWORD *)(v5 - 216);
  *(_OWORD *)(v1 + 120) = *(_OWORD *)(v5 - 208);
  *(_BYTE *)(v1 + 136) = v46;
  *(_QWORD *)(v1 + 144) = v47;
  *(_BYTE *)(v1 + 152) = v48;
  *(_QWORD *)(v1 + 160) = v49;
  *(_QWORD *)(v1 + 168) = v50;
  v52 = type metadata accessor for _ResolvedHorizontalShelfLayout(0, v35, v45, v51);
  v53 = MEMORY[0x212BBDF90](&unk_20E4B0308, v52);
  sub_20E39D614((_QWORD *)(v5 - 152), v1 + 112, v52, v53);
  sub_20E4337BC(*(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88), *(_DWORD *)(v1 + 100));
  swift_bridgeObjectRetain();
  swift_release();
  swift_bridgeObjectRelease();
  v54 = *(_BYTE *)(v5 - 128);
  v55 = *(_QWORD *)(v5 - 120);
  v56 = *(_BYTE *)(v5 - 112);
  v57 = *(_QWORD *)(v5 - 104);
  v58 = *(_QWORD *)(v5 - 96);
  *(_QWORD *)(v5 - 216) = *(_QWORD *)(v5 - 152);
  *(_OWORD *)(v5 - 208) = *(_OWORD *)(v5 - 144);
  *(_BYTE *)(v5 - 192) = v54;
  *(_QWORD *)(v5 - 184) = v55;
  *(_BYTE *)(v5 - 176) = v56;
  *(_QWORD *)(v5 - 168) = v57;
  *(_QWORD *)(v5 - 160) = v58;
  sub_20E39D618(v5 - 216, v52, *(_QWORD *)(v1 + 56));
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_20E430CEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned __int8 a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v26[9];
  unsigned __int8 v27;
  char v28;
  uint64_t v29;
  _QWORD v30[2];

  swift_getTupleTypeMetadata2();
  v14 = sub_20E4A491C();
  MEMORY[0x212BBDF90](MEMORY[0x24BDF5428], v14);
  v15 = sub_20E4A470C();
  v16 = sub_20E4A3E00();
  v17 = sub_20E4A4574();
  v30[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDF4700], v15);
  v30[1] = a13;
  v29 = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v16, v30);
  v26[0] = &type metadata for ComponentModelViewID;
  v26[1] = MEMORY[0x212BBDF90](MEMORY[0x24BDF3F50], v17, &v29);
  v26[2] = sub_20E42F020();
  sub_20E4A46DC();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A18588);
  sub_20E4A39D4();
  sub_20E4A39D4();
  sub_20E4A4004();
  v18 = sub_20E4A39D4();
  MEMORY[0x24BDAC7A8](v18);
  v19 = sub_20E4A39D4();
  MEMORY[0x24BDAC7A8](v19);
  MEMORY[0x24BDAC7A8](v20);
  sub_20E3C39FC(a2, (uint64_t)v26);
  sub_20E4A4AE4();
  swift_bridgeObjectRelease();
  v26[5] = a1;
  v26[6] = a4;
  v26[7] = a5;
  v26[8] = a6;
  v27 = a7;
  v28 = 2;
  sub_20E4337BC(a4, a5, a6, a7);
  type metadata accessor for ShelfGrid();
}

uint64_t sub_20E430FF0(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(_QWORD *, uint64_t);

  sub_20E42D334((_QWORD *)(v7 - 200), a1, v2);
  result = sub_20E435318(v7 - 200);
  if ((v3 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)(*(_QWORD *)(v7 - 392) + 16) > v3)
  {
    sub_20E4A48B0();
    v9 = MEMORY[0x212BBDF90](MEMORY[0x24BDF44C8], *(_QWORD *)(v7 - 440));
    v10 = sub_20E3FD4F8((unint64_t *)&qword_254A18590, &qword_254A18588);
    *(_QWORD *)(v7 - 264) = v9;
    *(_QWORD *)(v7 - 256) = v10;
    v11 = MEMORY[0x24BDED308];
    v12 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], *(_QWORD *)(v7 - 432), v7 - 264);
    v13 = sub_20E41240C();
    *(_QWORD *)(v7 - 280) = v12;
    *(_QWORD *)(v7 - 272) = v13;
    v14 = MEMORY[0x212BBDF90](v11, *(_QWORD *)(v7 - 424), v7 - 280);
    v15 = sub_20E39F334(qword_253ED27F8, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    *(_QWORD *)(v7 - 296) = v14;
    *(_QWORD *)(v7 - 288) = v15;
    v16 = MEMORY[0x212BBDF90](v11, v5, v7 - 296);
    sub_20E4A4430();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 416) + 8))(v2, v5);
    v17 = MEMORY[0x24BDEBEE0];
    *(_QWORD *)(v7 - 312) = v16;
    *(_QWORD *)(v7 - 304) = v17;
    v18 = MEMORY[0x212BBDF90](v11, v4, v7 - 312);
    sub_20E39D614(v6, v1, v4, v18);
    v19 = *(uint64_t (**)(_QWORD *, uint64_t))(*(_QWORD *)(v7 - 408) + 8);
    v19(v1, v4);
    sub_20E39D618((uint64_t)v6, v4, *(_QWORD *)(v7 - 400));
    return v19(v6, v4);
  }
  __break(1u);
  return result;
}

uint64_t sub_20E4311E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t OpaqueTypeConformance2;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  int v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  _QWORD *v48;
  _BYTE *v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE *v54;
  _BYTE *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  void (*v63)(_BYTE *, uint64_t);
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t result;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  void (*v71)(uint64_t, _QWORD *);
  uint64_t v72;
  uint64_t v73;
  _BYTE *v74;
  _BYTE *v75;
  uint64_t v76;
  uint64_t v77;
  _BYTE *v78;
  _BYTE *v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  _BYTE *v83;
  void (*v84)(_BYTE *, _BYTE *);
  _BYTE *v85;
  _BYTE *v86;
  uint64_t v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  void (*v91)(uint64_t, uint64_t);
  _BYTE v92[12];
  int v93;
  uint64_t v94;
  int v95;
  _QWORD *v96;
  uint64_t v97;
  _QWORD *v98;
  _BYTE *v99;
  _BYTE *v100;
  uint64_t v101;
  uint64_t v102;
  _BYTE *v103;
  _BYTE *v104;
  _BYTE *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  _BYTE *v111;
  _QWORD *v112;
  uint64_t v113;
  uint64_t v114;
  _BYTE *v115;
  _BYTE *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t *v121;
  _BYTE *v122;
  __int128 v123;
  __int128 v124;
  unint64_t v125;
  uint64_t v126;
  char v127;
  _QWORD v128[2];
  __int128 v129;
  __int128 v130;
  unint64_t v131;
  __int128 v132;
  __int128 v133;
  unint64_t v134;

  v121 = a3;
  v101 = a2;
  v122 = (_BYTE *)a1;
  v119 = a6;
  *(_QWORD *)&v132 = a4;
  *((_QWORD *)&v132 + 1) = sub_20E4A4040();
  v8 = MEMORY[0x24BDF10F0];
  *(_QWORD *)&v133 = a5;
  *((_QWORD *)&v133 + 1) = MEMORY[0x24BDF10F0];
  v9 = MEMORY[0x24BDF3000];
  v113 = MEMORY[0x212BBDF30](0, &v132, MEMORY[0x24BDF3000], 0);
  v110 = *(_QWORD *)(v113 - 8);
  MEMORY[0x24BDAC7A8](v113);
  v111 = &v92[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v11);
  v112 = &v92[-v12];
  v107 = sub_20E4A4028();
  v106 = *(_QWORD *)(v107 - 8);
  MEMORY[0x24BDAC7A8](v107);
  v105 = &v92[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v14);
  v115 = &v92[-v15];
  v16 = swift_checkMetadataState();
  v114 = *(_QWORD *)(v16 - 8);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v116 = &v92[-v18];
  *(_QWORD *)&v132 = a4;
  *((_QWORD *)&v132 + 1) = MEMORY[0x24BDF0100];
  v19 = MEMORY[0x24BDF0100];
  v20 = MEMORY[0x24BDF00F0];
  *(_QWORD *)&v133 = a5;
  *((_QWORD *)&v133 + 1) = MEMORY[0x24BDF00F0];
  v21 = (_QWORD *)MEMORY[0x212BBDF30](0, &v132, v9, 0, v17);
  v108 = *(v21 - 1);
  MEMORY[0x24BDAC7A8](v21);
  v99 = &v92[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v23);
  v98 = &v92[-v24];
  MEMORY[0x24BDAC7A8](v25);
  v103 = &v92[-v26];
  v118 = a4;
  *(_QWORD *)&v132 = a4;
  *((_QWORD *)&v132 + 1) = v19;
  v120 = a5;
  *(_QWORD *)&v133 = a5;
  *((_QWORD *)&v133 + 1) = v20;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  *(_QWORD *)&v132 = v21;
  *((_QWORD *)&v132 + 1) = v16;
  v117 = v16;
  v109 = OpaqueTypeConformance2;
  *(_QWORD *)&v133 = OpaqueTypeConformance2;
  *((_QWORD *)&v133 + 1) = v8;
  v28 = (_BYTE *)MEMORY[0x212BBDF30](0, &v132, v9, 0);
  v102 = *((_QWORD *)v28 - 1);
  MEMORY[0x24BDAC7A8](v28);
  v104 = &v92[-((v29 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v30);
  v100 = &v92[-v31];
  MEMORY[0x24BDAC7A8](v32);
  v34 = &v92[-v33];
  v35 = sub_20E4A3E00();
  v36 = *(uint64_t **)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v38 = &v92[-((v37 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v39);
  v41 = &v92[-v40];
  v97 = *v121;
  v42 = *((unsigned __int8 *)v121 + 8);
  v43 = v121[2];
  v44 = *((unsigned __int8 *)v121 + 24);
  sub_20E3BB3A0((uint64_t)v122, (uint64_t)&v126);
  if (swift_dynamicCast())
  {
    v93 = v44;
    v94 = v43;
    v95 = v42;
    v96 = v34;
    v111 = v28;
    v112 = v21;
    v113 = (uint64_t)v38;
    v121 = v36;
    v122 = v41;
    v45 = v109;
    v110 = v35;
    v132 = v129;
    v133 = v130;
    v134 = v131;
    sub_20E432788((uint64_t)&v129);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254A1AB28);
    if (swift_dynamicCast())
    {
      swift_bridgeObjectRelease();
      sub_20E432668(v101, &v126);
      sub_20E432788((uint64_t)&v129);
      v46 = swift_dynamicCast();
      v47 = v119;
      v48 = v112;
      v49 = v103;
      if (v46)
      {
        v50 = v123;
        v51 = BYTE1(v125);
        *((_QWORD *)&v124 + 1) = &type metadata for _CenterAlignedShelfGridScrollTargetBehavior;
        v125 = sub_20E435070();
        v52 = swift_allocObject();
        *(_QWORD *)&v123 = v52;
        v53 = v97;
        *(_QWORD *)(v52 + 16) = v50;
        *(_QWORD *)(v52 + 24) = v53;
        *(_BYTE *)(v52 + 32) = v95;
        *(_QWORD *)(v52 + 40) = v94;
        *(_BYTE *)(v52 + 48) = v93;
        *(_BYTE *)(v52 + 49) = v51;
      }
      else
      {
        sub_20E432A50((uint64_t)&v126, (uint64_t)&v123);
      }
      v74 = v116;
      v75 = v115;
      v129 = v123;
      v130 = v124;
      v131 = v125;
      sub_20E432A8C((uint64_t)&v126);
      sub_20E4A437C();
      sub_20E432A8C((uint64_t)&v129);
      sub_20E4A4010();
      v76 = v106;
      v77 = v107;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v106 + 16))(v105, v75, v107);
      sub_20E4A4034();
      (*(void (**)(_BYTE *, uint64_t))(v76 + 8))(v75, v77);
      v78 = v100;
      v79 = v74;
      v72 = v117;
      v80 = MEMORY[0x24BDF10F0];
      sub_20E4A437C();
      (*(void (**)(_BYTE *, uint64_t))(v114 + 8))(v79, v72);
      (*(void (**)(_BYTE *, _QWORD *))(v108 + 8))(v49, v48);
      *(_QWORD *)&v129 = v48;
      *((_QWORD *)&v129 + 1) = v72;
      *(_QWORD *)&v130 = v45;
      *((_QWORD *)&v130 + 1) = v80;
      v81 = swift_getOpaqueTypeConformance2();
      v82 = v96;
      v83 = v111;
      sub_20E39D614(v96, v78, v111, v81);
      v84 = *(void (**)(_BYTE *, _BYTE *))(v102 + 8);
      v85 = v78;
      v68 = v47;
      v84(v85, v83);
      v86 = v104;
      sub_20E39D618((uint64_t)v82, (uint64_t)v83, (uint64_t)v104);
      v73 = (uint64_t)v122;
      sub_20E3DC6B0((uint64_t)v86, (uint64_t)v83);
      v84(v86, v83);
      v84(v82, v83);
    }
    else
    {
      v69 = (uint64_t)v99;
      sub_20E4A437C();
      v70 = v98;
      v48 = v112;
      sub_20E39D614(v98, v69, v112, v45);
      v71 = *(void (**)(uint64_t, _QWORD *))(v108 + 8);
      v71(v69, v48);
      sub_20E39D618((uint64_t)v70, (uint64_t)v48, v69);
      v72 = v117;
      *(_QWORD *)&v129 = v48;
      *((_QWORD *)&v129 + 1) = v117;
      *(_QWORD *)&v130 = v45;
      *((_QWORD *)&v130 + 1) = MEMORY[0x24BDF10F0];
      swift_getOpaqueTypeConformance2();
      v73 = (uint64_t)v122;
      sub_20E39CBE0(v69, (uint64_t)v111, (uint64_t)v48);
      v71(v69, v48);
      v71((uint64_t)v70, v48);
      v68 = v119;
    }
    v87 = v110;
    v88 = v121;
    v89 = v113;
    *(_QWORD *)&v129 = v48;
    *((_QWORD *)&v129 + 1) = v72;
    *(_QWORD *)&v130 = v45;
    *((_QWORD *)&v130 + 1) = MEMORY[0x24BDF10F0];
    v128[0] = swift_getOpaqueTypeConformance2();
    v128[1] = v45;
    MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v87, v128);
    sub_20E39D618(v73, v87, v89);
    v90 = sub_20E3C3B10(v89);
    v91 = (void (*)(uint64_t, uint64_t))v88[1];
    v91(v89, v87);
    v126 = v90;
    v127 = 0;
    sub_20E4A3DF4();
    v65 = v129;
    v66 = BYTE8(v129);
    v91(v73, v87);
    result = sub_20E432A8C((uint64_t)&v132);
  }
  else
  {
    v131 = 0;
    v129 = 0u;
    v130 = 0u;
    sub_20E39D1F8((uint64_t)&v129, &qword_254A1AB30);
    sub_20E4A401C();
    v54 = v116;
    sub_20E4A4034();
    v55 = v111;
    v56 = v118;
    v57 = v117;
    v58 = v120;
    v59 = MEMORY[0x24BDF10F0];
    sub_20E4A437C();
    (*(void (**)(_BYTE *, uint64_t))(v114 + 8))(v54, v57);
    *(_QWORD *)&v132 = v56;
    *((_QWORD *)&v132 + 1) = v57;
    *(_QWORD *)&v133 = v58;
    *((_QWORD *)&v133 + 1) = v59;
    v60 = swift_getOpaqueTypeConformance2();
    v61 = v112;
    v62 = v113;
    sub_20E39D614(v112, v55, v113, v60);
    v63 = *(void (**)(_BYTE *, uint64_t))(v110 + 8);
    v63(v55, v62);
    sub_20E39D618((uint64_t)v61, v62, (uint64_t)v55);
    v64 = sub_20E3C3B10((uint64_t)v55);
    v63(v55, v62);
    *(_QWORD *)&v129 = v64;
    BYTE8(v129) = 1;
    sub_20E4A3DF4();
    v65 = v132;
    v66 = BYTE8(v132);
    result = ((uint64_t (*)(_QWORD *, uint64_t))v63)(v61, v62);
    v68 = v119;
  }
  *(_QWORD *)v68 = v65;
  *(_BYTE *)(v68 + 8) = v66;
  return result;
}

__n128 sub_20E431CB8@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  uint64_t v13;
  void *v23;
  uint64_t v24;
  _OWORD *v25;
  __n128 result;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __n128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;

  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_20E4A5FE4();
    v23 = (void *)sub_20E4A4058();
    sub_20E4A3464();

  }
  sub_20E4A3AD0();
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1ABD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(a9, v13, v24);
  v25 = (_OWORD *)(a9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254A1AAF0) + 36));
  v25[4] = v31;
  v25[5] = v32;
  v25[6] = v33;
  *v25 = v27;
  v25[1] = v28;
  result = v30;
  v25[2] = v29;
  v25[3] = v30;
  return result;
}

double sub_20E431E84@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_20E431F34(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_254A1ABF0, &qword_254A1ABF8).n128_u64[0];
  return result;
}

double sub_20E431EDC@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_20E431F34(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_254A1AC00, &qword_254A1AC08).n128_u64[0];
  return result;
}

__n128 sub_20E431F34@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t *a16, uint64_t *a17)
{
  uint64_t v17;
  uint64_t *v19;
  void *v28;
  _OWORD *v29;
  __n128 result;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __n128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;

  v19 = a17;
  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_20E4A5FE4();
    v28 = (void *)sub_20E4A4058();
    sub_20E4A3464();

    v19 = a17;
  }
  sub_20E4A3AD0();
  sub_20E3A5E20(v17, a9, a16);
  v29 = (_OWORD *)(a9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(v19) + 36));
  v29[4] = v35;
  v29[5] = v36;
  v29[6] = v37;
  *v29 = v31;
  v29[1] = v32;
  result = v34;
  v29[2] = v33;
  v29[3] = v34;
  return result;
}

void sub_20E432100(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, int a6@<W6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[6];
  uint64_t v45;
  _QWORD v46[2];

  v33 = a6;
  v32 = a5;
  v35 = a1;
  v36 = a8;
  v34 = a13;
  v25 = a12;
  v31 = a10;
  v29 = a9;
  swift_getTupleTypeMetadata2();
  v17 = sub_20E4A491C();
  MEMORY[0x212BBDF90](MEMORY[0x24BDF5428], v17);
  v18 = sub_20E4A470C();
  v19 = sub_20E4A3E00();
  v20 = sub_20E4A4574();
  v46[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDF4700], v18);
  v46[1] = a12;
  v45 = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v19, v46);
  v43 = v20;
  v44[0] = &type metadata for ComponentModelViewID;
  v44[1] = MEMORY[0x212BBDF90](MEMORY[0x24BDF3F50], v20, &v45);
  v44[2] = sub_20E42F020();
  v24 = sub_20E4A46DC();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A18588);
  v26 = sub_20E4A39D4();
  v27 = sub_20E4A39D4();
  sub_20E4A4004();
  v21 = sub_20E4A39D4();
  v30 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  MEMORY[0x24BDAC7A8](v22);
  v28 = (char *)&v24 - v23;
  sub_20E3C39FC(a2, (uint64_t)v44);
  sub_20E4A4AE4();
  swift_bridgeObjectRelease();
  sub_20E4337BC(a3, a4, v32, v33);
  v37 = a7;
  v38 = v29;
  v39 = v31;
  v40 = a11;
  v41 = v25;
  v42 = v34;
  type metadata accessor for ShelfGrid();
}

uint64_t sub_20E43239C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  void (*v20)(uint64_t, uint64_t);

  sub_20E42CE60((uint64_t)a1, (_BYTE *)(v8 - 248));
  v10 = *(_BYTE *)(v8 - 248);
  *(_QWORD *)(v8 - 152) = *(_QWORD *)(v8 - 312);
  *(_QWORD *)(v8 - 144) = v1;
  *(_QWORD *)(v8 - 200) = v6;
  *(_QWORD *)(v8 - 136) = v7;
  *(_QWORD *)(v8 - 128) = v4;
  *(_BYTE *)(v8 - 120) = v3;
  *(_BYTE *)(v8 - 119) = v10;
  sub_20E42D334((_QWORD *)(v8 - 200), a1, v2);
  sub_20E435318(v8 - 200);
  v11 = MEMORY[0x212BBDF90](MEMORY[0x24BDF44C8], *(_QWORD *)(v8 - 400));
  v12 = sub_20E3FD4F8((unint64_t *)&qword_254A18590, &qword_254A18588);
  *(_QWORD *)(v8 - 264) = v11;
  *(_QWORD *)(v8 - 256) = v12;
  v13 = MEMORY[0x24BDED308];
  v14 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], *(_QWORD *)(v8 - 384), v8 - 264);
  v15 = sub_20E41240C();
  *(_QWORD *)(v8 - 280) = v14;
  *(_QWORD *)(v8 - 272) = v15;
  v16 = MEMORY[0x212BBDF90](v13, *(_QWORD *)(v8 - 376), v8 - 280);
  v17 = sub_20E39F334(qword_253ED27F8, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
  *(_QWORD *)(v8 - 296) = v16;
  *(_QWORD *)(v8 - 288) = v17;
  v18 = MEMORY[0x212BBDF90](v13, v5, v8 - 296);
  v19 = *(_QWORD **)(v8 - 368);
  sub_20E39D614(v19, v2, v5, v18);
  v20 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 352) + 8);
  v20(v2, v5);
  sub_20E39D618((uint64_t)v19, v5, *(_QWORD *)(v8 - 304));
  return ((uint64_t (*)(_QWORD *, uint64_t))v20)(v19, v5);
}

uint64_t sub_20E432520@<X0>(uint64_t **a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t *boxed_opaque_existential_1Tm;
  uint64_t v17;

  v2 = sub_20E4A4028();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v17 - v7;
  v9 = sub_20E4A4040();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20E4A4010();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v8, v2);
  sub_20E4A4034();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  a1[3] = (uint64_t *)MEMORY[0x24BDF0100];
  v13 = (uint64_t *)swift_allocObject();
  *a1 = v13;
  v14 = MEMORY[0x24BDF10F0];
  v13[5] = v9;
  v13[6] = v14;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v13 + 2);
  return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v10 + 32))(boxed_opaque_existential_1Tm, v12, v9);
}

uint64_t sub_20E432668@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  double *v6;
  double v7;
  uint64_t v8;
  double v9;
  double v10;
  BOOL v12;
  BOOL v13;
  uint64_t result;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  _BYTE v19[40];

  sub_20E432788((uint64_t)v19);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1AB28);
  if (!swift_dynamicCast())
    return sub_20E432A50(v2, (uint64_t)a2);
  v5 = *(_QWORD *)(a1 + 16);
  if (v5)
  {
    v6 = (double *)(a1 + 32);
    v7 = *(double *)(a1 + 32);
    v8 = v5 - 1;
    do
    {
      v9 = *v6++;
      v10 = v9;
      v12 = v8-- != 0;
      v13 = v10 == v7;
    }
    while (v10 == v7 && v12);
  }
  else
  {
    v13 = 1;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a2[3] = (uint64_t)&type metadata for _CenterAlignedShelfGridScrollTargetBehavior;
  a2[4] = sub_20E435070();
  result = swift_allocObject();
  *a2 = result;
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = v15;
  *(_BYTE *)(result + 32) = v16;
  *(_QWORD *)(result + 40) = v17;
  *(_BYTE *)(result + 48) = v18;
  *(_BYTE *)(result + 49) = v13;
  return result;
}

uint64_t sub_20E432788@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  _BYTE v7[40];
  _OWORD v8[2];
  uint64_t v9;

  sub_20E3C39FC(v1, (uint64_t)v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1AB28);
  if (swift_dynamicCast())
  {
    v8[0] = v4;
    v8[1] = v5;
    v9 = v6;
    sub_20E432788();
    return sub_20E432A8C((uint64_t)v8);
  }
  else
  {
    v6 = 0;
    v4 = 0u;
    v5 = 0u;
    sub_20E39D1F8((uint64_t)&v4, &qword_254A1AB30);
    return sub_20E3C39FC(v1, a1);
  }
}

uint64_t ShelfGrid.horizontalScrollTargetBehavior(_:)(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  __int128 *v5;
  _QWORD *v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  _QWORD v14[5];
  __int128 v15;
  __int128 v16;
  uint64_t v17;

  sub_20E3C39FC((uint64_t)a1, (uint64_t)v14);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1AB28);
  v4 = MEMORY[0x24BDF0100];
  if (swift_dynamicCast())
  {
    v15 = v11;
    v16 = v12;
    v17 = v13;
    swift_getKeyPath();
    v14[3] = v4;
    v14[0] = swift_allocObject();
    sub_20E432A50((uint64_t)&v15, v14[0] + 16);
    MEMORY[0x212BBDF90](&protocol conformance descriptor for ShelfGrid<A, B, C>, a2);
    sub_20E4A4250();
    swift_release();
    sub_20E432A8C((uint64_t)&v15);
    v5 = (__int128 *)v14;
  }
  else
  {
    v13 = 0;
    v11 = 0u;
    v12 = 0u;
    sub_20E39D1F8((uint64_t)&v11, &qword_254A1AB30);
    swift_getKeyPath();
    v6 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    v7 = MEMORY[0x24BDAC7A8](v6);
    (*(void (**)(char *, double))(v9 + 16))((char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
    *((_QWORD *)&v16 + 1) = v4;
    *(_QWORD *)&v15 = swift_allocObject();
    sub_20E4A3EFC();
    MEMORY[0x212BBDF90](&protocol conformance descriptor for ShelfGrid<A, B, C>, a2);
    sub_20E4A4250();
    swift_release();
    v5 = &v15;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
}

uint64_t sub_20E432A2C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_20E432A50(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x24BDF0100] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t sub_20E432A8C(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BDF0100] - 8) + 8))();
  return a1;
}

void _CenterAlignedShelfGridScrollTargetBehavior.updateTarget(_:context:)(uint64_t a1)
{
  double *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  double v21;
  int v22;
  unsigned __int8 v23;
  char *v24;
  double v25;
  CGFloat v26;
  double v27;
  CGFloat v28;
  double v29;
  CGFloat v30;
  double v31;
  CGFloat v32;
  void (*v33)(char *, uint64_t);
  double MinX;
  double v35;
  uint64_t v36;
  uint64_t v37;
  double v38;
  void (*v39)(char *, uint64_t);
  char *v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  uint64_t v46;
  double v47;
  double v48;
  double v49;
  double v50;
  uint64_t v51;
  uint64_t v52;
  double v53;
  double v54;
  double v55;
  double v56;
  double v57;
  double v58;
  uint64_t v59;
  double v60;
  double v61;
  double v62;
  unint64_t v63;
  uint64_t v64;
  double v65;
  double v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  double v70;
  uint64_t v71;
  double v72;
  double v73;
  BOOL v78;
  unint64_t v79;
  uint64_t v80;
  double v81;
  double *v82;
  uint64_t v83;
  unint64_t v84;
  double *v85;
  double v86;
  double v87;
  double v88;
  void (*v89)(char *, _QWORD);
  double *v90;
  uint64_t v91;
  unint64_t v92;
  int v93;
  int v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100[32];
  CGRect v101;
  CGRect v102;
  CGRect v103;
  CGRect v104;
  CGRect v105;
  CGRect v106;

  v3 = sub_20E4A5A8C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v91 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_20E4A3740();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v91 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v91 - v12;
  v14 = sub_20E4A3794();
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v91 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(_QWORD *)v1;
  v20 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  if (v20 >= 2)
  {
    v95 = v16;
    v96 = v18;
    v97 = v19;
    v98 = v15;
    v92 = v20;
    v99 = a1;
    v21 = v1[3];
    v22 = *((unsigned __int8 *)v1 + 33);
    v93 = *((unsigned __int8 *)v1 + 32);
    v94 = v22;
    sub_20E4A3FEC();
    v23 = sub_20E4A4064();
    sub_20E4A4070();
    if (sub_20E4A4070() != v23)
    {
      sub_20E4A5A44();
      __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0D58);
      sub_20E4A4ACC();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_20E4A72D0;
      sub_20E4A4A30();
      sub_20E4A5768();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      return;
    }
    v24 = v96;
    sub_20E4A3FD4();
    sub_20E4A3788();
    v26 = v25;
    v28 = v27;
    v30 = v29;
    v32 = v31;
    v33 = *(void (**)(char *, uint64_t))(v95 + 8);
    v33(v24, v98);
    v101.origin.x = v26;
    v101.origin.y = v28;
    v101.size.width = v30;
    v101.size.height = v32;
    MinX = CGRectGetMinX(v101);
    sub_20E4A3788();
    v35 = CGRectGetMinX(v102);
    v36 = v97;
    if (MinX != v35)
    {
      if (MinX < v35)
        v37 = 1;
      else
        v37 = -1;
      if (v93)
      {
        sub_20E4A3734();
        sub_20E4A3734();
        sub_20E4A3728();
        v21 = v38;
        v39 = *(void (**)(char *, uint64_t))(v8 + 8);
        v39(v10, v7);
        v39(v13, v7);
        v36 = v97;
      }
      v40 = v96;
      if (v94 && *(_QWORD *)(v36 + 16))
      {
        v41 = *(double *)(v36 + 32);
        sub_20E4A3FD4();
        sub_20E4A3788();
        v42 = CGRectGetMinX(v103);
        sub_20E4A3FE0();
        v44 = v42 + v43 * 0.5;
        v33(v40, v98);
        v45 = trunc(v44 / (v21 + v41));
        if ((~*(_QWORD *)&v45 & 0x7FF0000000000000) != 0)
        {
          if (v45 > -9.22337204e18)
          {
            if (v45 < 9.22337204e18)
            {
              v46 = v98;
              (*(void (**)(char *, uint64_t, uint64_t))(v95 + 16))(v40, v99, v98);
              sub_20E4A3788();
              v47 = CGRectGetMinX(v104);
              sub_20E4A3FE0();
              v49 = v47 + v48 * 0.5;
              v33(v40, v46);
              v50 = trunc(v49 / (v21 + v41));
              if ((~*(_QWORD *)&v50 & 0x7FF0000000000000) != 0)
              {
                if (v50 > -9.22337204e18)
                {
                  if (v50 < 9.22337204e18)
                  {
                    v51 = (uint64_t)v45;
                    v52 = (uint64_t)v50;
                    if (*(uint64_t *)&v45 != *(uint64_t *)&v50 || (v52 = v51 + v37, !__OFADD__(v51, v37)))
                    {
                      if (v52 >= (uint64_t)(v92 - 1))
                        v52 = v92 - 1;
                      v53 = v41 * 0.5 + v41 * (double)(v52 & ~(v52 >> 63)) + v21 * (double)(v52 & ~(v52 >> 63));
                      sub_20E4A3FE0();
                      v55 = v53 - v54 * 0.5;
                      goto LABEL_68;
                    }
LABEL_79:
                    __break(1u);
                    return;
                  }
LABEL_78:
                  __break(1u);
                  goto LABEL_79;
                }
LABEL_77:
                __break(1u);
                goto LABEL_78;
              }
LABEL_76:
              __break(1u);
              goto LABEL_77;
            }
LABEL_75:
            __break(1u);
            goto LABEL_76;
          }
LABEL_74:
          __break(1u);
          goto LABEL_75;
        }
LABEL_73:
        __break(1u);
        goto LABEL_74;
      }
      sub_20E4A3FD4();
      sub_20E4A3788();
      v56 = CGRectGetMinX(v105);
      sub_20E4A3FE0();
      v58 = v57;
      v59 = v98;
      v33(v40, v98);
      (*(void (**)(char *, uint64_t, uint64_t))(v95 + 16))(v40, v99, v59);
      sub_20E4A3788();
      v60 = CGRectGetMinX(v106);
      sub_20E4A3FE0();
      v62 = v61;
      v33(v40, v59);
      v63 = *(_QWORD *)(v97 + 16);
      if (v63)
      {
        v64 = 0;
        v65 = v56 + v58 * 0.5;
        v66 = v60 + v62 * 0.5;
        v67 = v92;
        v68 = v92 - 1;
        v69 = -1;
        v70 = 0.0;
        v71 = -1;
        do
        {
          v72 = *(double *)(v97 + 32 + 8 * v64);
          if ((v71 & 0x8000000000000000) == 0 && (v69 & 0x8000000000000000) == 0)
            break;
          if (v68 == v64)
          {
            if (v69 < 0)
              v69 = v92 - 1;
            if (v71 < 0)
              v71 = v92 - 1;
            break;
          }
          v73 = v21 + v70 + v72;
          if (v65 < v73 && v70 < v65 && v71 < 0)
            v71 = v64;
          if (v66 < v73 && v70 < v66 && v69 < 0)
            v69 = v64;
          v70 = v70 + v21 + v72;
          ++v64;
        }
        while (v63 != v64);
        if (v71 != v69)
          goto LABEL_54;
      }
      else
      {
        v69 = -1;
        v67 = v92;
      }
      v78 = __OFADD__(v69, v37);
      v69 += v37;
      if (v78)
      {
LABEL_72:
        __break(1u);
        goto LABEL_73;
      }
      v68 = v67 - 1;
LABEL_54:
      if (v69 < v68)
        v68 = v69;
      v79 = v68 & ~(v68 >> 63);
      if (v63 < v79)
      {
        __break(1u);
LABEL_71:
        __break(1u);
        goto LABEL_72;
      }
      if (v68 < 1)
      {
        v81 = 0.0;
        goto LABEL_66;
      }
      if (v79 >= 2)
      {
        v80 = v79 & 0x7FFFFFFFFFFFFFFELL;
        v82 = (double *)(v97 + 40);
        v81 = 0.0;
        v83 = v79 & 0x7FFFFFFFFFFFFFFELL;
        do
        {
          v81 = v81 + *(v82 - 1) + *v82;
          v82 += 2;
          v83 -= 2;
        }
        while (v83);
        if (v79 == v80)
        {
LABEL_66:
          if (v79 < v63)
          {
            v87 = v21 * (double)(uint64_t)v79 + v81 + *(double *)(v97 + 32 + 8 * v79) * 0.5;
            sub_20E4A3FE0();
            v55 = v87 - v88 * 0.5;
LABEL_68:
            v89 = (void (*)(char *, _QWORD))sub_20E4A377C();
            *v90 = v55;
            v89(v100, 0);
            return;
          }
          goto LABEL_71;
        }
      }
      else
      {
        v80 = 0;
        v81 = 0.0;
      }
      v84 = v79 - v80;
      v85 = (double *)(v97 + 8 * v80 + 32);
      do
      {
        v86 = *v85++;
        v81 = v81 + v86;
        --v84;
      }
      while (v84);
      goto LABEL_66;
    }
  }
}

void static ScrollTargetBehavior<>.centerAligned.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_WORD *)(a1 + 32) = 256;
}

void ShelfGrid.init(_:layout:padding:spacing:itemContent:itemDivider:)()
{
  ShelfGrid.init(_:layout:padding:spacing:shelfPosition:itemContent:itemDivider:)();
}

void ShelfGrid.init<>(_:layout:padding:spacing:itemContent:)()
{
  sub_20E4A479C();
  sub_20E39F334((unint64_t *)&qword_254A1A330, (uint64_t (*)(uint64_t))MEMORY[0x24BDF4918], MEMORY[0x24BDF4900]);
  ShelfGrid.init(_:layout:padding:spacing:shelfPosition:itemContent:itemDivider:)();
}

void ShelfGrid.init(_:layout:spacing:itemContent:itemDivider:)()
{
  ShelfGrid.init(_:layout:padding:spacing:shelfPosition:itemContent:itemDivider:)();
}

void ShelfGrid.init<>(_:layout:spacing:itemContent:)()
{
  ShelfGrid.init<>(_:layout:padding:spacing:shelfPosition:itemContent:)();
}

uint64_t sub_20E433414()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E433450()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_20E433458()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_20E43351C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  char *v10;
  char *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  _OWORD *v18;
  __int128 *v19;
  __int128 v20;
  _OWORD *v21;
  __int128 *v22;
  __int128 v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  char v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0
    || ((((((((v6 + 119) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 63) & 0xFFFFFFFFFFFFFFF8) + 33) & 0xFFFFFFFFFFFFFFF8)
     + 33 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
LABEL_10:
    swift_retain();
    return v4;
  }
  (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
  v10 = (char *)v4 + v6;
  v11 = (char *)a2 + v6;
  v12 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v13 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v14 = *(_QWORD *)v13;
  v15 = *(_QWORD *)(v13 + 8);
  v16 = *(_QWORD *)(v13 + 16);
  v17 = *(_BYTE *)(v13 + 24);
  sub_20E4337BC(*(_QWORD *)v13, v15, v16, v17);
  *(_QWORD *)v12 = v14;
  *(_QWORD *)(v12 + 8) = v15;
  *(_QWORD *)(v12 + 16) = v16;
  *(_BYTE *)(v12 + 24) = v17;
  v18 = (_OWORD *)((unint64_t)(v10 + 39) & 0xFFFFFFFFFFFFFFF8);
  v19 = (__int128 *)((unint64_t)(v11 + 39) & 0xFFFFFFFFFFFFFFF8);
  v20 = *v19;
  *(_OWORD *)((char *)v18 + 9) = *(__int128 *)((char *)v19 + 9);
  *v18 = v20;
  v21 = (_OWORD *)((unint64_t)(v10 + 71) & 0xFFFFFFFFFFFFFFF8);
  v22 = (__int128 *)((unint64_t)(v11 + 71) & 0xFFFFFFFFFFFFFFF8);
  v23 = *v22;
  *(_OWORD *)((char *)v21 + 9) = *(__int128 *)((char *)v22 + 9);
  *v21 = v23;
  v24 = (unint64_t)(v10 + 103) & 0xFFFFFFFFFFFFFFF8;
  v25 = (unint64_t)(v11 + 103) & 0xFFFFFFFFFFFFFFF8;
  v26 = *(_QWORD *)v25;
  *(_BYTE *)(v24 + 8) = *(_BYTE *)(v25 + 8);
  *(_QWORD *)v24 = v26;
  v27 = (_QWORD *)((unint64_t)(v10 + 119) & 0xFFFFFFFFFFFFFFF8);
  v28 = (_QWORD *)((unint64_t)(v11 + 119) & 0xFFFFFFFFFFFFFFF8);
  v29 = v28[1];
  *v27 = *v28;
  v27[1] = v29;
  v30 = (_QWORD *)(((unint64_t)v27 + 23) & 0xFFFFFFFFFFFFFFF8);
  v31 = (_QWORD *)(((unint64_t)v28 + 23) & 0xFFFFFFFFFFFFFFF8);
  v32 = v31[1];
  *v30 = *v31;
  v30[1] = v32;
  v33 = ((unint64_t)v30 + 23) & 0xFFFFFFFFFFFFFFF8;
  v34 = ((unint64_t)v31 + 23) & 0xFFFFFFFFFFFFFFF8;
  v35 = *(_QWORD *)v34;
  LOBYTE(v16) = *(_BYTE *)(v34 + 8);
  swift_retain();
  swift_retain();
  sub_20E39CFAC(v35, v16);
  *(_QWORD *)v33 = v35;
  *(_BYTE *)(v33 + 8) = v16;
  v36 = ((unint64_t)v30 + 39) & 0xFFFFFFFFFFFFFFF8;
  v37 = ((unint64_t)v31 + 39) & 0xFFFFFFFFFFFFFFF8;
  v38 = *(_QWORD *)v37;
  v39 = *(_QWORD *)(v37 + 8);
  LOBYTE(v16) = *(_BYTE *)(v37 + 16);
  sub_20E4337FC(*(_QWORD *)v37, v39, v16);
  *(_QWORD *)v36 = v38;
  *(_QWORD *)(v36 + 8) = v39;
  *(_BYTE *)(v36 + 16) = v16;
  v40 = ((unint64_t)v30 + 63) & 0xFFFFFFFFFFFFFFF8;
  v41 = ((unint64_t)v31 + 63) & 0xFFFFFFFFFFFFFFF8;
  v42 = *(_QWORD *)v41;
  LOBYTE(v39) = *(_BYTE *)(v41 + 9);
  LOBYTE(v16) = *(_BYTE *)(v41 + 8);
  sub_20E4337FC(*(_QWORD *)v41, v16, v39);
  *(_QWORD *)v40 = v42;
  *(_BYTE *)(v40 + 8) = v16;
  *(_BYTE *)(v40 + 9) = v39;
  v43 = (v40 + 17) & 0xFFFFFFFFFFFFFFF8;
  v44 = (v41 + 17) & 0xFFFFFFFFFFFFFFF8;
  v45 = *(_QWORD *)v44;
  v46 = *(_BYTE *)(v44 + 8);
  sub_20E39CFAC(*(_QWORD *)v44, v46);
  *(_QWORD *)v43 = v45;
  *(_BYTE *)(v43 + 8) = v46;
  v47 = (v40 + 33) & 0xFFFFFFFFFFFFFFF8;
  v48 = (v41 + 33) & 0xFFFFFFFFFFFFFFF8;
  if ((*(_BYTE *)(v48 + 32) & 1) == 0)
  {
    *(_QWORD *)v47 = *(_QWORD *)v48;
    *(_BYTE *)(v47 + 32) = 0;
    goto LABEL_10;
  }
  v49 = *(_QWORD *)(v48 + 24);
  *(_QWORD *)(v47 + 24) = v49;
  (**(void (***)(unint64_t))(v49 - 8))((v40 + 33) & 0xFFFFFFFFFFFFFFF8);
  *(_BYTE *)(v47 + 32) = 1;
  return v4;
}

uint64_t sub_20E4337BC(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  uint64_t result;

  if (a4 >> 6)
  {
    if (a4 >> 6 != 2)
      return result;
    a4 &= 0x3Fu;
  }
  return sub_20E4337E4(a2, a3, a4);
}

uint64_t sub_20E4337E4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (a3 == 3)
    return swift_retain();
  return result;
}

uint64_t sub_20E4337FC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) == 0)
    return swift_retain();
  return result;
}

uint64_t sub_20E433808(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = *(_QWORD *)(v3 + 64) + a1;
  sub_20E4338EC(*(_QWORD *)((v4 + 7) & 0xFFFFFFFFFFFFFFF8), *(_QWORD *)(((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8), *(_QWORD *)(((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16), *(_BYTE *)(((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 24));
  swift_release();
  v5 = (((v4 + 119) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  sub_20E39CED8(*(_QWORD *)((v5 + 23) & 0xFFFFFFFFFFFFFFF8), *(_BYTE *)(((v5 + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
  sub_20E43392C(*(_QWORD *)((v5 + 39) & 0xFFFFFFFFFFFFFFF8), *(_QWORD *)(((v5 + 39) & 0xFFFFFFFFFFFFFFF8) + 8), *(_BYTE *)(((v5 + 39) & 0xFFFFFFFFFFFFFFF8) + 16));
  v6 = (v5 + 63) & 0xFFFFFFFFFFFFFFF8;
  sub_20E43392C(*(_QWORD *)v6, *(unsigned __int8 *)(v6 + 8), *(_BYTE *)(v6 + 9));
  sub_20E39CED8(*(_QWORD *)((v6 + 17) & 0xFFFFFFFFFFFFFFF8), *(_BYTE *)(((v6 + 17) & 0xFFFFFFFFFFFFFFF8) + 8));
  v7 = (v6 + 33) & 0xFFFFFFFFFFFFFFF8;
  if ((*(_BYTE *)(v7 + 32) & 1) != 0)
    return __swift_destroy_boxed_opaque_existential_1(v7);
  else
    return swift_release();
}

uint64_t sub_20E4338EC(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  uint64_t result;

  if (a4 >> 6)
  {
    if (a4 >> 6 != 2)
      return result;
    a4 &= 0x3Fu;
  }
  return sub_20E433914(a2, a3, a4);
}

uint64_t sub_20E433914(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (a3 == 3)
    return swift_release();
  return result;
}

uint64_t sub_20E43392C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) == 0)
    return swift_release();
  return result;
}

uint64_t sub_20E433938(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  _OWORD *v15;
  __int128 *v16;
  __int128 v17;
  _OWORD *v18;
  __int128 *v19;
  __int128 v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  char v45;
  uint64_t v46;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  v9 = (v6 + a1 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v6 + a2 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_QWORD *)v10;
  v12 = *(_QWORD *)(v10 + 8);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = *(_BYTE *)(v10 + 24);
  sub_20E4337BC(*(_QWORD *)v10, v12, v13, v14);
  *(_QWORD *)v9 = v11;
  *(_QWORD *)(v9 + 8) = v12;
  *(_QWORD *)(v9 + 16) = v13;
  *(_BYTE *)(v9 + 24) = v14;
  v15 = (_OWORD *)((v7 + 39) & 0xFFFFFFFFFFFFFFF8);
  v16 = (__int128 *)((v8 + 39) & 0xFFFFFFFFFFFFFFF8);
  v17 = *v16;
  *(_OWORD *)((char *)v15 + 9) = *(__int128 *)((char *)v16 + 9);
  *v15 = v17;
  v18 = (_OWORD *)((v7 + 71) & 0xFFFFFFFFFFFFFFF8);
  v19 = (__int128 *)((v8 + 71) & 0xFFFFFFFFFFFFFFF8);
  v20 = *v19;
  *(_OWORD *)((char *)v18 + 9) = *(__int128 *)((char *)v19 + 9);
  *v18 = v20;
  v21 = (v7 + 103) & 0xFFFFFFFFFFFFFFF8;
  v22 = (v8 + 103) & 0xFFFFFFFFFFFFFFF8;
  v23 = *(_QWORD *)v22;
  *(_BYTE *)(v21 + 8) = *(_BYTE *)(v22 + 8);
  *(_QWORD *)v21 = v23;
  v24 = (_QWORD *)((v7 + 119) & 0xFFFFFFFFFFFFFFF8);
  v25 = (_QWORD *)((v8 + 119) & 0xFFFFFFFFFFFFFFF8);
  v26 = v25[1];
  *v24 = *v25;
  v24[1] = v26;
  v27 = (_QWORD *)(((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFFFF8);
  v28 = (_QWORD *)(((unint64_t)v25 + 23) & 0xFFFFFFFFFFFFFFF8);
  v29 = v28[1];
  *v27 = *v28;
  v27[1] = v29;
  v30 = ((unint64_t)v27 + 23) & 0xFFFFFFFFFFFFFFF8;
  v31 = ((unint64_t)v28 + 23) & 0xFFFFFFFFFFFFFFF8;
  v32 = *(_QWORD *)v31;
  LOBYTE(v13) = *(_BYTE *)(v31 + 8);
  swift_retain();
  swift_retain();
  sub_20E39CFAC(v32, v13);
  *(_QWORD *)v30 = v32;
  *(_BYTE *)(v30 + 8) = v13;
  v33 = ((unint64_t)v27 + 39) & 0xFFFFFFFFFFFFFFF8;
  v34 = ((unint64_t)v28 + 39) & 0xFFFFFFFFFFFFFFF8;
  v35 = *(_QWORD *)v34;
  v36 = *(_QWORD *)(v34 + 8);
  LOBYTE(v13) = *(_BYTE *)(v34 + 16);
  sub_20E4337FC(*(_QWORD *)v34, v36, v13);
  *(_QWORD *)v33 = v35;
  *(_QWORD *)(v33 + 8) = v36;
  *(_BYTE *)(v33 + 16) = v13;
  v37 = ((unint64_t)v27 + 63) & 0xFFFFFFFFFFFFFFF8;
  v38 = ((unint64_t)v28 + 63) & 0xFFFFFFFFFFFFFFF8;
  v39 = *(_QWORD *)v38;
  LOBYTE(v36) = *(_BYTE *)(v38 + 9);
  LOBYTE(v13) = *(_BYTE *)(v38 + 8);
  sub_20E4337FC(*(_QWORD *)v38, v13, v36);
  *(_QWORD *)v37 = v39;
  *(_BYTE *)(v37 + 8) = v13;
  *(_BYTE *)(v37 + 9) = v36;
  v40 = (v37 + 17) & 0xFFFFFFFFFFFFFFF8;
  v41 = (v38 + 17) & 0xFFFFFFFFFFFFFFF8;
  v42 = *(_QWORD *)v41;
  LOBYTE(v36) = *(_BYTE *)(v41 + 8);
  sub_20E39CFAC(*(_QWORD *)v41, v36);
  *(_QWORD *)v40 = v42;
  *(_BYTE *)(v40 + 8) = v36;
  v43 = (v37 + 33) & 0xFFFFFFFFFFFFFFF8;
  v44 = (v38 + 33) & 0xFFFFFFFFFFFFFFF8;
  v45 = *(_BYTE *)(v44 + 32);
  if ((v45 & 1) != 0)
  {
    v46 = *(_QWORD *)(v44 + 24);
    *(_QWORD *)(v43 + 24) = v46;
    (**(void (***)(unint64_t))(v46 - 8))((v37 + 33) & 0xFFFFFFFFFFFFFFF8);
  }
  else
  {
    *(_QWORD *)v43 = *(_QWORD *)v44;
    swift_retain();
  }
  *(_BYTE *)(v43 + 32) = v45;
  return a1;
}

uint64_t sub_20E433B6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  v9 = (v6 + a1 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v6 + a2 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_QWORD *)v10;
  v12 = *(_QWORD *)(v10 + 8);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = *(_BYTE *)(v10 + 24);
  sub_20E4337BC(*(_QWORD *)v10, v12, v13, v14);
  v15 = *(_QWORD *)v9;
  v16 = *(_QWORD *)(v9 + 8);
  v17 = *(_QWORD *)(v9 + 16);
  *(_QWORD *)v9 = v11;
  *(_QWORD *)(v9 + 8) = v12;
  *(_QWORD *)(v9 + 16) = v13;
  v18 = *(_BYTE *)(v9 + 24);
  *(_BYTE *)(v9 + 24) = v14;
  sub_20E4338EC(v15, v16, v17, v18);
  v19 = (v7 + 39) & 0xFFFFFFFFFFFFFFF8;
  v20 = (v8 + 39) & 0xFFFFFFFFFFFFFFF8;
  v21 = *(_QWORD *)v20;
  *(_BYTE *)(v19 + 8) = *(_BYTE *)(v20 + 8);
  *(_QWORD *)v19 = v21;
  v22 = *(_QWORD *)(v20 + 16);
  *(_BYTE *)(v19 + 24) = *(_BYTE *)(v20 + 24);
  *(_QWORD *)(v19 + 16) = v22;
  v23 = (v7 + 71) & 0xFFFFFFFFFFFFFFF8;
  v24 = (v8 + 71) & 0xFFFFFFFFFFFFFFF8;
  v25 = *(_QWORD *)v24;
  *(_BYTE *)(v23 + 8) = *(_BYTE *)(v24 + 8);
  *(_QWORD *)v23 = v25;
  v26 = *(_QWORD *)(v24 + 16);
  *(_BYTE *)(v23 + 24) = *(_BYTE *)(v24 + 24);
  *(_QWORD *)(v23 + 16) = v26;
  v27 = (v7 + 103) & 0xFFFFFFFFFFFFFFF8;
  v28 = (v8 + 103) & 0xFFFFFFFFFFFFFFF8;
  v29 = *(_QWORD *)v28;
  *(_BYTE *)(v27 + 8) = *(_BYTE *)(v28 + 8);
  *(_QWORD *)v27 = v29;
  v30 = (_QWORD *)((v7 + 119) & 0xFFFFFFFFFFFFFFF8);
  v31 = (_QWORD *)((v8 + 119) & 0xFFFFFFFFFFFFFFF8);
  v32 = v31[1];
  *v30 = *v31;
  v30[1] = v32;
  swift_retain();
  swift_release();
  v33 = (_QWORD *)(((unint64_t)v30 + 23) & 0xFFFFFFFFFFFFFFF8);
  v34 = (_QWORD *)(((unint64_t)v31 + 23) & 0xFFFFFFFFFFFFFFF8);
  v35 = v34[1];
  *v33 = *v34;
  v33[1] = v35;
  swift_retain();
  swift_release();
  v36 = ((unint64_t)v33 + 23) & 0xFFFFFFFFFFFFFFF8;
  v37 = ((unint64_t)v34 + 23) & 0xFFFFFFFFFFFFFFF8;
  v38 = *(_QWORD *)v37;
  LOBYTE(v30) = *(_BYTE *)(v37 + 8);
  sub_20E39CFAC(*(_QWORD *)v37, (char)v30);
  v39 = *(_QWORD *)v36;
  v40 = *(_BYTE *)(v36 + 8);
  *(_QWORD *)v36 = v38;
  *(_BYTE *)(v36 + 8) = (_BYTE)v30;
  sub_20E39CED8(v39, v40);
  v41 = ((unint64_t)v33 + 39) & 0xFFFFFFFFFFFFFFF8;
  v42 = ((unint64_t)v34 + 39) & 0xFFFFFFFFFFFFFFF8;
  v43 = *(_QWORD *)v42;
  v44 = *(_QWORD *)(v42 + 8);
  LOBYTE(v36) = *(_BYTE *)(v42 + 16);
  sub_20E4337FC(*(_QWORD *)v42, v44, v36);
  v45 = *(_QWORD *)v41;
  v46 = *(_QWORD *)(v41 + 8);
  v47 = *(_BYTE *)(v41 + 16);
  *(_QWORD *)v41 = v43;
  *(_QWORD *)(v41 + 8) = v44;
  *(_BYTE *)(v41 + 16) = v36;
  sub_20E43392C(v45, v46, v47);
  v48 = ((unint64_t)v33 + 63) & 0xFFFFFFFFFFFFFFF8;
  v49 = ((unint64_t)v34 + 63) & 0xFFFFFFFFFFFFFFF8;
  v50 = *(_QWORD *)v49;
  LOBYTE(v44) = *(_BYTE *)(v49 + 9);
  LOBYTE(v36) = *(_BYTE *)(v49 + 8);
  sub_20E4337FC(*(_QWORD *)v49, v36, v44);
  v51 = *(_QWORD *)v48;
  v52 = *(_BYTE *)(v48 + 9);
  *(_QWORD *)v48 = v50;
  v53 = *(unsigned __int8 *)(v48 + 8);
  *(_BYTE *)(v48 + 8) = v36;
  *(_BYTE *)(v48 + 9) = v44;
  sub_20E43392C(v51, v53, v52);
  v54 = (v48 + 17) & 0xFFFFFFFFFFFFFFF8;
  v55 = (v49 + 17) & 0xFFFFFFFFFFFFFFF8;
  v56 = *(_QWORD *)v55;
  LOBYTE(v44) = *(_BYTE *)(v55 + 8);
  sub_20E39CFAC(*(_QWORD *)v55, v44);
  v57 = *(_QWORD *)v54;
  v58 = *(_BYTE *)(v54 + 8);
  *(_QWORD *)v54 = v56;
  *(_BYTE *)(v54 + 8) = v44;
  sub_20E39CED8(v57, v58);
  v59 = (v48 + 33) & 0xFFFFFFFFFFFFFFF8;
  v60 = (v49 + 33) & 0xFFFFFFFFFFFFFFF8;
  if (v59 != v60)
  {
    sub_20E39D1F8((v48 + 33) & 0xFFFFFFFFFFFFFFF8, qword_254A1AB38);
    if ((*(_BYTE *)(v60 + 32) & 1) != 0)
    {
      v61 = *(_QWORD *)(v60 + 24);
      *(_QWORD *)(v59 + 24) = v61;
      (**(void (***)(unint64_t, unint64_t))(v61 - 8))((v48 + 33) & 0xFFFFFFFFFFFFFFF8, (v49 + 33) & 0xFFFFFFFFFFFFFFF8);
      *(_BYTE *)(v59 + 32) = 1;
    }
    else
    {
      *(_QWORD *)v59 = *(_QWORD *)v60;
      *(_BYTE *)(v59 + 32) = 0;
      swift_retain();
    }
  }
  return a1;
}

uint64_t sub_20E433E3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  __int128 *v10;
  __int128 v11;
  _OWORD *v12;
  __int128 *v13;
  __int128 v14;
  _OWORD *v15;
  _OWORD *v16;
  __int128 v17;
  unint64_t v18;
  unint64_t v19;
  char v20;
  _OWORD *v21;
  _OWORD *v22;
  _OWORD *v23;
  _OWORD *v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  __int128 v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  __int128 v39;
  __int128 v40;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  v9 = (_OWORD *)((v7 + 7) & 0xFFFFFFFFFFFFFFF8);
  v10 = (__int128 *)((v8 + 7) & 0xFFFFFFFFFFFFFFF8);
  v11 = *v10;
  *(_OWORD *)((char *)v9 + 9) = *(__int128 *)((char *)v10 + 9);
  *v9 = v11;
  v12 = (_OWORD *)((v7 + 39) & 0xFFFFFFFFFFFFFFF8);
  v13 = (__int128 *)((v8 + 39) & 0xFFFFFFFFFFFFFFF8);
  v14 = *v13;
  *(_OWORD *)((char *)v12 + 9) = *(__int128 *)((char *)v13 + 9);
  *v12 = v14;
  v15 = (_OWORD *)((v7 + 71) & 0xFFFFFFFFFFFFFFF8);
  v16 = (_OWORD *)((v8 + 71) & 0xFFFFFFFFFFFFFFF8);
  v17 = *(_OWORD *)((char *)v16 + 9);
  *v15 = *v16;
  *(_OWORD *)((char *)v15 + 9) = v17;
  v18 = (v7 + 103) & 0xFFFFFFFFFFFFFFF8;
  v19 = (v8 + 103) & 0xFFFFFFFFFFFFFFF8;
  v20 = *(_BYTE *)(v19 + 8);
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *(_BYTE *)(v18 + 8) = v20;
  v21 = (_OWORD *)((v7 + 119) & 0xFFFFFFFFFFFFF8);
  v22 = (_OWORD *)((v8 + 119) & 0xFFFFFFFFFFFFF8);
  *v21 = *v22;
  v23 = (_OWORD *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
  v24 = (_OWORD *)(((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v23 = *v24;
  v25 = ((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8;
  v26 = ((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFFFF8;
  v27 = *(_QWORD *)v26;
  *(_BYTE *)(v25 + 8) = *(_BYTE *)(v26 + 8);
  *(_QWORD *)v25 = v27;
  v28 = ((unint64_t)v23 + 39) & 0xFFFFFFFFFFFFFFF8;
  v29 = ((unint64_t)v24 + 39) & 0xFFFFFFFFFFFFFFF8;
  v30 = *(_OWORD *)v29;
  *(_BYTE *)(v28 + 16) = *(_BYTE *)(v29 + 16);
  *(_OWORD *)v28 = v30;
  v31 = ((unint64_t)v23 + 63) & 0xFFFFFFFFFFFFFFF8;
  v32 = ((unint64_t)v24 + 63) & 0xFFFFFFFFFFFFFFF8;
  v33 = *(_QWORD *)v32;
  *(_WORD *)(v31 + 8) = *(_WORD *)(v32 + 8);
  *(_QWORD *)v31 = v33;
  v34 = (v31 + 17) & 0xFFFFFFFFFFFFFFF8;
  v35 = (v32 + 17) & 0xFFFFFFFFFFFFFFF8;
  v36 = *(_QWORD *)v35;
  *(_BYTE *)(v34 + 8) = *(_BYTE *)(v35 + 8);
  *(_QWORD *)v34 = v36;
  v37 = (v31 + 33) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v32 + 33) & 0xFFFFFFFFFFFFFFF8;
  v39 = *(_OWORD *)v38;
  v40 = *(_OWORD *)(v38 + 16);
  *(_BYTE *)(v37 + 32) = *(_BYTE *)(v38 + 32);
  *(_OWORD *)v37 = v39;
  *(_OWORD *)(v37 + 16) = v40;
  return a1;
}

uint64_t sub_20E433FC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _OWORD *v28;
  _OWORD *v29;
  _OWORD *v30;
  _OWORD *v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  unint64_t v38;
  unint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  unint64_t v44;
  char v45;
  char v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  unint64_t v55;
  unint64_t v56;
  char v57;
  __int128 v58;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  v9 = (v6 + a1 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_QWORD *)(v10 + 16);
  v12 = *(_BYTE *)(v10 + 24);
  v13 = *(_QWORD *)v9;
  v14 = *(_QWORD *)(v9 + 8);
  v15 = *(_QWORD *)(v9 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_QWORD *)(v9 + 16) = v11;
  v16 = *(_BYTE *)(v9 + 24);
  *(_BYTE *)(v9 + 24) = v12;
  sub_20E4338EC(v13, v14, v15, v16);
  v17 = (v7 + 39) & 0xFFFFFFFFFFFFFFF8;
  v18 = (v8 + 39) & 0xFFFFFFFFFFFFFFF8;
  v19 = *(_QWORD *)v18;
  *(_BYTE *)(v17 + 8) = *(_BYTE *)(v18 + 8);
  *(_QWORD *)v17 = v19;
  v20 = *(_QWORD *)(v18 + 16);
  *(_BYTE *)(v17 + 24) = *(_BYTE *)(v18 + 24);
  *(_QWORD *)(v17 + 16) = v20;
  v21 = (v7 + 71) & 0xFFFFFFFFFFFFFFF8;
  v22 = (v8 + 71) & 0xFFFFFFFFFFFFFFF8;
  v23 = *(_QWORD *)v22;
  *(_BYTE *)(v21 + 8) = *(_BYTE *)(v22 + 8);
  *(_QWORD *)v21 = v23;
  v24 = *(_QWORD *)(v22 + 16);
  *(_BYTE *)(v21 + 24) = *(_BYTE *)(v22 + 24);
  *(_QWORD *)(v21 + 16) = v24;
  v25 = (v7 + 103) & 0xFFFFFFFFFFFFFFF8;
  v26 = (v8 + 103) & 0xFFFFFFFFFFFFFFF8;
  v27 = *(_QWORD *)v26;
  *(_BYTE *)(v25 + 8) = *(_BYTE *)(v26 + 8);
  *(_QWORD *)v25 = v27;
  v28 = (_OWORD *)((v7 + 119) & 0xFFFFFFFFFFFFFFF8);
  v29 = (_OWORD *)((v8 + 119) & 0xFFFFFFFFFFFFF8);
  *v28 = *v29;
  swift_release();
  v30 = (_OWORD *)(((unint64_t)v28 + 23) & 0xFFFFFFFFFFFFFFF8);
  v31 = (_OWORD *)(((unint64_t)v29 + 23) & 0xFFFFFFFFFFFFFFF8);
  v32 = (unint64_t)v31 + 63;
  *v30 = *v31;
  swift_release();
  v33 = ((unint64_t)v30 + 23) & 0xFFFFFFFFFFFFFFF8;
  v34 = ((unint64_t)v31 + 23) & 0xFFFFFFFFFFFFFFF8;
  v35 = *(_QWORD *)v34;
  LOBYTE(v34) = *(_BYTE *)(v34 + 8);
  v36 = *(_QWORD *)v33;
  v37 = *(_BYTE *)(v33 + 8);
  *(_QWORD *)v33 = v35;
  *(_BYTE *)(v33 + 8) = v34;
  sub_20E39CED8(v36, v37);
  v38 = ((unint64_t)v30 + 39) & 0xFFFFFFFFFFFFFFF8;
  v39 = ((unint64_t)v31 + 39) & 0xFFFFFFFFFFFFFFF8;
  v40 = *(_BYTE *)(v39 + 16);
  v41 = *(_QWORD *)v38;
  v42 = *(_QWORD *)(v38 + 8);
  v43 = *(_BYTE *)(v38 + 16);
  *(_OWORD *)v38 = *(_OWORD *)v39;
  *(_BYTE *)(v38 + 16) = v40;
  sub_20E43392C(v41, v42, v43);
  v44 = ((unint64_t)v30 + 63) & 0xFFFFFFFFFFFFFFF8;
  v45 = *(_BYTE *)((v32 & 0xFFFFFFFFFFFFFFF8) + 8);
  v46 = *(_BYTE *)((v32 & 0xFFFFFFFFFFFFFFF8) + 9);
  v47 = *(_QWORD *)v44;
  v48 = *(_BYTE *)(v44 + 9);
  *(_QWORD *)v44 = *(_QWORD *)(v32 & 0xFFFFFFFFFFFFFFF8);
  v49 = *(unsigned __int8 *)(v44 + 8);
  *(_BYTE *)(v44 + 8) = v45;
  *(_BYTE *)(v44 + 9) = v46;
  sub_20E43392C(v47, v49, v48);
  v50 = (v44 + 17) & 0xFFFFFFFFFFFFFFF8;
  v51 = ((v32 & 0xFFFFFFFFFFFFFFF8) + 17) & 0xFFFFFFFFFFFFFFF8;
  v52 = *(_QWORD *)v51;
  LOBYTE(v51) = *(_BYTE *)(v51 + 8);
  v53 = *(_QWORD *)v50;
  v54 = *(_BYTE *)(v50 + 8);
  *(_QWORD *)v50 = v52;
  *(_BYTE *)(v50 + 8) = v51;
  sub_20E39CED8(v53, v54);
  v55 = (v44 + 33) & 0xFFFFFFFFFFFFFFF8;
  v56 = ((v32 & 0xFFFFFFFFFFFFFFF8) + 33) & 0xFFFFFFFFFFFFFFF8;
  if (v55 != v56)
  {
    sub_20E39D1F8(v55, qword_254A1AB38);
    v57 = *(_BYTE *)(v56 + 32);
    v58 = *(_OWORD *)(v56 + 16);
    *(_OWORD *)v55 = *(_OWORD *)v56;
    *(_OWORD *)(v55 + 16) = v58;
    *(_BYTE *)(v55 + 32) = v57;
  }
  return a1;
}

uint64_t sub_20E4341F4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  unint64_t v14;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v14 = *(_QWORD *)((a1 + v7 + 119) & 0xFFFFFFFFFFFFF8);
      if (v14 >= 0xFFFFFFFF)
        LODWORD(v14) = -1;
      return (v14 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    v8 = ((((((((v7 + 119) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 63) & 0xFFFFFFF8) + 33) & 0xFFFFFFF8) + 33;
    v9 = (a2 - v6 + 255) >> (8 * v8);
    if (v8 < 4)
      v10 = v9 + 1;
    else
      v10 = 2;
    if (v10 >= 0x10000)
      v11 = 4;
    else
      v11 = 2;
    if (v10 < 0x100)
      v11 = 1;
    if (v10 >= 2)
      v12 = v11;
    else
      v12 = 0;
    return ((uint64_t (*)(void))((char *)&loc_20E434294 + 4 * byte_20E4ACB38[v12]))();
  }
}

void sub_20E434328(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((((((((*(_QWORD *)(v5 + 64) + 119) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 63) & 0xFFFFFFFFFFFFFFF8)
       + 33) & 0xFFFFFFFFFFFFFFF8)
     + 33;
  if (v6 >= a3)
  {
    v10 = 0;
    if (v6 >= a2)
      goto LABEL_17;
  }
  else
  {
    if (v7 <= 3)
      v8 = ((a3 - v6 + 255) >> (8 * v7)) + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    if (v6 >= a2)
LABEL_17:
      __asm { BR              X12 }
  }
  if (v7 >= 4)
    v11 = ~v6 + a2;
  else
    v11 = (~(_BYTE)v6 + a2);
  bzero(a1, v7);
  if ((_DWORD)v7 == 1)
    *a1 = v11;
  else
    *(_DWORD *)a1 = v11;
  __asm { BR              X10 }
}

void sub_20E43445C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x20E4344D4);
}

void sub_20E434464(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x20E43446CLL);
  JUMPOUT(0x20E4344D4);
}

void sub_20E4344AC()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x20E4344D4);
}

void sub_20E4344B4()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x20E4344D4);
}

uint64_t sub_20E4344BC(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v5 + v6) = 0;
  if (!a2)
    JUMPOUT(0x20E4344D4);
  if (a3 < 0x7FFFFFFF)
  {
    if ((a2 & 0x80000000) == 0)
      JUMPOUT(0x20E4344D0);
    JUMPOUT(0x20E4344C8);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v5);
}

uint64_t destroy for _CenterAlignedShelfGridScrollTargetBehavior()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for _CenterAlignedShelfGridScrollTargetBehavior(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 17) = *(_OWORD *)(a2 + 17);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for _CenterAlignedShelfGridScrollTargetBehavior(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  return a1;
}

__n128 __swift_memcpy34_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for _CenterAlignedShelfGridScrollTargetBehavior(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  return a1;
}

uint64_t getEnumTagSinglePayload for _CenterAlignedShelfGridScrollTargetBehavior(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 34))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for _CenterAlignedShelfGridScrollTargetBehavior(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_WORD *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 34) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 34) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for _CenterAlignedShelfGridScrollTargetBehavior()
{
  return &type metadata for _CenterAlignedShelfGridScrollTargetBehavior;
}

uint64_t sub_20E4346B0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v36[2];
  _QWORD v37[2];
  _QWORD v38[2];
  _QWORD v39[2];
  _QWORD v40[2];
  _QWORD v41[2];
  _QWORD v42[2];
  _QWORD v43[2];
  _QWORD v44[6];
  uint64_t v45;
  _QWORD v46[2];
  _QWORD v47[3];

  v1 = *a1;
  v2 = a1[3];
  v3 = a1[4];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1AAF0);
  v5 = type metadata accessor for UnifiedImpressionableLayoutViewModifier(255, v1, v2, v4);
  v6 = sub_20E4A39D4();
  v7 = sub_20E42EECC();
  v8 = MEMORY[0x212BBDF90](&unk_20E4AB96C, v5);
  v47[0] = v7;
  v47[1] = v8;
  v9 = MEMORY[0x24BDED308];
  MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v6, v47);
  v10 = sub_20E4A3A94();
  swift_getTupleTypeMetadata2();
  v11 = sub_20E4A491C();
  MEMORY[0x212BBDF90](MEMORY[0x24BDF5428], v11);
  v12 = sub_20E4A470C();
  v13 = sub_20E4A3E00();
  v14 = sub_20E4A4574();
  v46[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDF4700], v12);
  v46[1] = v3;
  v45 = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v13, v46);
  v44[2] = v14;
  v44[3] = &type metadata for ComponentModelViewID;
  v44[4] = MEMORY[0x212BBDF90](MEMORY[0x24BDF3F50], v14, &v45);
  v44[5] = sub_20E42F020();
  v15 = sub_20E4A46DC();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A18588);
  v16 = sub_20E4A39D4();
  v17 = sub_20E4A39D4();
  sub_20E4A4004();
  v18 = (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088];
  v19 = sub_20E4A39D4();
  v44[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDF44C8], v15);
  v44[1] = sub_20E3FD4F8((unint64_t *)&qword_254A18590, &qword_254A18588);
  v43[0] = MEMORY[0x212BBDF90](v9, v16, v44);
  v43[1] = sub_20E41240C();
  v42[0] = MEMORY[0x212BBDF90](v9, v17, v43);
  v42[1] = sub_20E39F334(qword_253ED27F8, v18, MEMORY[0x24BDF1078]);
  v20 = MEMORY[0x212BBDF90](v9, v19, v42);
  v22 = type metadata accessor for _ResolvedVerticalShelfLayout(255, v19, v20, v21);
  v23 = sub_20E4A39D4();
  v24 = sub_20E4A39D4();
  v25 = sub_20E4A39D4();
  v26 = sub_20E4A39D4();
  v27 = sub_20E4A3E00();
  v28 = MEMORY[0x212BBDF90](MEMORY[0x24BDEDA10], v10);
  v29 = MEMORY[0x212BBDF90](&unk_20E4A9FF8, v22);
  v30 = MEMORY[0x24BDECC60];
  v41[0] = v29;
  v41[1] = MEMORY[0x24BDECC60];
  v40[0] = MEMORY[0x212BBDF90](v9, v23, v41);
  v40[1] = v30;
  v31 = MEMORY[0x212BBDF90](v9, v24, v40);
  v32 = MEMORY[0x24BDEDBB8];
  v39[0] = v31;
  v39[1] = MEMORY[0x24BDEDBB8];
  v38[0] = MEMORY[0x212BBDF90](v9, v25, v39);
  v38[1] = v8;
  v37[0] = v28;
  v37[1] = MEMORY[0x212BBDF90](v9, v26, v38);
  MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v27, v37);
  v33 = sub_20E4A470C();
  v34 = sub_20E4A39D4();
  v36[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDF4700], v33);
  v36[1] = v32;
  return MEMORY[0x212BBDF90](v9, v34, v36);
}

void sub_20E434AAC()
{
  type metadata accessor for ShelfGrid();
}

uint64_t sub_20E434ADC(uint64_t a1)
{
  uint64_t v2;
  _QWORD v4[14];

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1ABC0);
  v2 = sub_20E4A39D4();
  v4[0] = MEMORY[0x212BBDF90](&protocol conformance descriptor for ShelfGrid<A, B, C>, a1);
  v4[1] = sub_20E3FD4F8(&qword_254A1ABC8, &qword_254A1ABC0);
  return MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v2, v4);
}

void sub_20E434B54()
{
  type metadata accessor for ShelfGrid();
}

uint64_t sub_20E434B88(int *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = *((_QWORD *)a1 - 1);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = v1 + v4;
  (*(void (**)(unint64_t))(*(_QWORD *)(v9 - 8) + 8))(v1 + v4);
  sub_20E4338EC(*(_QWORD *)(v6 + a1[17]), *(_QWORD *)(v6 + a1[17] + 8), *(_QWORD *)(v6 + a1[17] + 16), *(_BYTE *)(v6 + a1[17] + 24));
  swift_release();
  swift_release();
  sub_20E39CED8(*(_QWORD *)(v6 + a1[23]), *(_BYTE *)(v6 + a1[23] + 8));
  sub_20E43392C(*(_QWORD *)(v6 + a1[24]), *(_QWORD *)(v6 + a1[24] + 8), *(_BYTE *)(v6 + a1[24] + 16));
  sub_20E43392C(*(_QWORD *)(v6 + a1[25]), *(unsigned __int8 *)(v6 + a1[25] + 8), *(_BYTE *)(v6 + a1[25] + 9));
  sub_20E39CED8(*(_QWORD *)(v6 + a1[26]), *(_BYTE *)(v6 + a1[26] + 8));
  v7 = v1 + v4 + a1[27];
  if ((*(_BYTE *)(v7 + 32) & 1) != 0)
    __swift_destroy_boxed_opaque_existential_1(v7);
  else
    swift_release();
  sub_20E4338EC(*(_QWORD *)(v1 + ((v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8), *(_QWORD *)(v1 + ((v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16), *(_BYTE *)(v1 + ((v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 24));
  return swift_deallocObject();
}

void sub_20E434CB8()
{
  type metadata accessor for ShelfGrid();
}

#error "20E434D58: call analysis failed (funcsize=21)"

uint64_t sub_20E434D7C(uint64_t a1)
{
  uint64_t v2;
  char v3;

  v2 = *(_QWORD *)(a1 + 64);
  v3 = *(_BYTE *)(a1 + 72);
  swift_release();
  swift_bridgeObjectRelease();
  sub_20E39CED8(v2, v3);
  return a1;
}

void sub_20E434DCC()
{
  type metadata accessor for ShelfGrid();
}

uint64_t sub_20E434E00(int *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = *((_QWORD *)a1 - 1);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = v1 + v4;
  (*(void (**)(unint64_t))(*(_QWORD *)(v9 - 8) + 8))(v1 + v4);
  sub_20E4338EC(*(_QWORD *)(v6 + a1[17]), *(_QWORD *)(v6 + a1[17] + 8), *(_QWORD *)(v6 + a1[17] + 16), *(_BYTE *)(v6 + a1[17] + 24));
  swift_release();
  swift_release();
  sub_20E39CED8(*(_QWORD *)(v6 + a1[23]), *(_BYTE *)(v6 + a1[23] + 8));
  sub_20E43392C(*(_QWORD *)(v6 + a1[24]), *(_QWORD *)(v6 + a1[24] + 8), *(_BYTE *)(v6 + a1[24] + 16));
  sub_20E43392C(*(_QWORD *)(v6 + a1[25]), *(unsigned __int8 *)(v6 + a1[25] + 8), *(_BYTE *)(v6 + a1[25] + 9));
  sub_20E39CED8(*(_QWORD *)(v6 + a1[26]), *(_BYTE *)(v6 + a1[26] + 8));
  v7 = v1 + v4 + a1[27];
  if ((*(_BYTE *)(v7 + 32) & 1) != 0)
    __swift_destroy_boxed_opaque_existential_1(v7);
  else
    swift_release();
  sub_20E4338EC(*(_QWORD *)(v1 + ((((v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((((v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(_QWORD *)(v1 + ((((v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16), *(_BYTE *)(v1 + ((((v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 24));
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_20E434F48()
{
  type metadata accessor for ShelfGrid();
}

#error "20E434FF4: call analysis failed (funcsize=25)"

void sub_20E435018()
{
  sub_20E430824();
}

uint64_t sub_20E43505C(uint64_t a1, char a2)
{
  uint64_t result;

  if (a2 != -1)
    return swift_release();
  return result;
}

unint64_t sub_20E435070()
{
  unint64_t result;

  result = qword_254A1ABD8;
  if (!qword_254A1ABD8)
  {
    result = MEMORY[0x212BBDF90](&protocol conformance descriptor for _CenterAlignedShelfGridScrollTargetBehavior, &type metadata for _CenterAlignedShelfGridScrollTargetBehavior);
    atomic_store(result, (unint64_t *)&qword_254A1ABD8);
  }
  return result;
}

uint64_t sub_20E4350B4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_20E4350D8()
{
  type metadata accessor for ShelfGrid();
}

uint64_t sub_20E43510C(int *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = *((_QWORD *)a1 - 1);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = v1 + v4;
  (*(void (**)(unint64_t))(*(_QWORD *)(v9 - 8) + 8))(v1 + v4);
  sub_20E4338EC(*(_QWORD *)(v6 + a1[17]), *(_QWORD *)(v6 + a1[17] + 8), *(_QWORD *)(v6 + a1[17] + 16), *(_BYTE *)(v6 + a1[17] + 24));
  swift_release();
  swift_release();
  sub_20E39CED8(*(_QWORD *)(v6 + a1[23]), *(_BYTE *)(v6 + a1[23] + 8));
  sub_20E43392C(*(_QWORD *)(v6 + a1[24]), *(_QWORD *)(v6 + a1[24] + 8), *(_BYTE *)(v6 + a1[24] + 16));
  sub_20E43392C(*(_QWORD *)(v6 + a1[25]), *(unsigned __int8 *)(v6 + a1[25] + 8), *(_BYTE *)(v6 + a1[25] + 9));
  sub_20E39CED8(*(_QWORD *)(v6 + a1[26]), *(_BYTE *)(v6 + a1[26] + 8));
  v7 = v1 + v4 + a1[27];
  if ((*(_BYTE *)(v7 + 32) & 1) != 0)
    __swift_destroy_boxed_opaque_existential_1(v7);
  else
    swift_release();
  sub_20E4338EC(*(_QWORD *)(v1 + ((v4 + v5 + 7) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v1 + ((v4 + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8), *(_QWORD *)(v1 + ((v4 + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 16), *(_BYTE *)(v1 + ((v4 + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 24));
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_20E43524C()
{
  type metadata accessor for ShelfGrid();
}

#error "20E4352F4: call analysis failed (funcsize=23)"

uint64_t sub_20E435318(uint64_t a1)
{
  destroy for ShelfGridItem(a1);
  return a1;
}

void sub_20E43534C(uint64_t a1@<X8>)
{
  uint64_t *v1;

  sub_20E42DCD8(v1[8], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], a1);
}

uint64_t sub_20E435360(uint64_t a1, void (*a2)(_QWORD *, uint64_t *))
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  _QWORD v8[2];
  uint64_t v9;

  if (a1 < 0)
    goto LABEL_21;
  if (a1)
  {
    v5 = sub_20E4A5D74();
    *(_QWORD *)(v5 + 16) = a1;
  }
  else
  {
    v5 = MEMORY[0x24BEE4AF8];
  }
  v6 = v5 + 32;
  v8[1] = a1;
  v9 = 0;
  v8[0] = v5 + 32;
  a2(v8, &v9);
  if (v2)
  {
    if (v9 > a1)
    {
      __break(1u);
LABEL_16:
      __break(1u);
      goto LABEL_17;
    }
    if (!v8[0])
    {
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }
    if (v6 != v8[0])
      goto LABEL_16;
    *(_QWORD *)(v5 + 16) = v9;
    swift_bridgeObjectRelease();
    return v5;
  }
  if (v9 > a1)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v8[0])
  {
    if (v6 != v8[0])
    {
LABEL_18:
      __break(1u);
      goto LABEL_19;
    }
    *(_QWORD *)(v5 + 16) = v9;
    return v5;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  result = sub_20E4A6284();
  __break(1u);
  return result;
}

void sub_20E43549C(uint64_t a1@<X8>)
{
  uint64_t *v1;

  sub_20E42E198(v1[8], v1[4], v1[7], a1);
}

uint64_t sub_20E4354B0(uint64_t a1, _QWORD *a2)
{
  return sub_20E42D0FC(a1, a2);
}

unint64_t sub_20E4354EC()
{
  unint64_t result;

  result = qword_254A1ABE8;
  if (!qword_254A1ABE8)
  {
    result = MEMORY[0x212BBDF90](&unk_20E4ACDC4, &type metadata for ShelfGridScrollTargetBehaviorKey);
    atomic_store(result, (unint64_t *)&qword_254A1ABE8);
  }
  return result;
}

ValueMetadata *type metadata accessor for ShelfGridScrollTargetBehaviorKey()
{
  return &type metadata for ShelfGridScrollTargetBehaviorKey;
}

void sub_20E435544(uint64_t *a1)
{
  uint64_t v1;
  void (*v2)(id *__return_ptr, id *);
  unint64_t v3;
  uint64_t (*v4)(_QWORD *);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  unint64_t v20;
  unint64_t v21;
  id v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  int64_t v26;
  int64_t v27;
  void *v28;
  void *v29;
  unint64_t v30;
  uint64_t v31;
  void (*v32)(_QWORD *__return_ptr, id *);
  uint64_t v33;
  void (*v34)(_QWORD *__return_ptr, id *);
  uint64_t v35;
  void (*v36)(id *__return_ptr, id *);
  uint64_t v37;
  uint64_t (*v38)(_QWORD *);
  uint64_t v39;
  int64_t v40;
  uint64_t v41;
  uint64_t (*v42)(_QWORD);
  id v43;
  uint64_t v44;
  uint64_t v45;
  int64_t v46;
  unint64_t v47;
  uint64_t (*v48)(_QWORD);
  unint64_t v49;
  void (*v50)(id *__return_ptr, id *);
  uint64_t v51;
  uint64_t (*v52)(_QWORD);
  uint64_t v53;
  void (*v54)(_QWORD *__return_ptr, _QWORD);
  uint64_t v55;
  void (*v56)(_QWORD *__return_ptr, _QWORD);
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  id v60;
  _QWORD v61[7];
  uint64_t v62;

  v1 = *a1;
  v42 = (uint64_t (*)(_QWORD))a1[1];
  v3 = a1[2];
  v2 = (void (*)(id *__return_ptr, id *))a1[3];
  v5 = a1[4];
  v4 = (uint64_t (*)(_QWORD *))a1[5];
  v6 = a1[6];
  v32 = (void (*)(_QWORD *__return_ptr, id *))a1[7];
  v33 = a1[8];
  v34 = (void (*)(_QWORD *__return_ptr, id *))a1[9];
  v7 = a1[10];
  v62 = v1;
  v35 = v7;
  v36 = v2;
  v38 = v4;
  v39 = v6;
  v37 = v5;
  if ((v1 & 0xC000000000000001) != 0)
  {
    sub_20E40D49C((uint64_t)&v62);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_20E4A6140();
    sub_20E4366D8(0, (unint64_t *)&qword_253ED0D48);
    sub_20E436574();
    sub_20E4A5F00();
    v1 = v61[1];
    v41 = v61[2];
    v9 = v61[3];
    v8 = v61[4];
    v10 = v61[5];
  }
  else
  {
    v11 = -1 << *(_BYTE *)(v1 + 32);
    v41 = v1 + 56;
    v9 = ~v11;
    v12 = -v11;
    if (v12 < 64)
      v13 = ~(-1 << v12);
    else
      v13 = -1;
    v10 = v13 & *(_QWORD *)(v1 + 56);
    sub_20E40D49C((uint64_t)&v62);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v8 = 0;
  }
  v14 = 0;
  v40 = (unint64_t)(v9 + 64) >> 6;
  v15 = v3;
  v31 = v9;
  v16 = 0;
  while (1)
  {
    if (v1 < 0)
    {
      if (!sub_20E4A614C())
        goto LABEL_62;
      sub_20E4366D8(0, (unint64_t *)&qword_253ED0D48);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v22 = v43;
      swift_unknownObjectRelease();
      if (!v22)
        goto LABEL_62;
      goto LABEL_38;
    }
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v8 << 6);
      goto LABEL_37;
    }
    v23 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      return;
    }
    if (v23 >= v40)
    {
      v10 = 0;
      goto LABEL_62;
    }
    v24 = *(_QWORD *)(v41 + 8 * v23);
    if (!v24)
      break;
LABEL_36:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v23 << 6);
    v8 = v23;
LABEL_37:
    v22 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v21);
    if (!v22)
      goto LABEL_62;
LABEL_38:
    v60 = v22;
    if ((v42(&v60) & 1) != 0)
    {
      v43 = v22;
      v36(&v60, &v43);

      v28 = v60;
      v61[0] = v60;
      if ((v38(v61) & 1) == 0)
      {

        goto LABEL_20;
      }
      v43 = v28;
      v32(v61, &v43);

      v29 = (void *)v61[0];
      v43 = (id)v61[0];
      v34(v61, &v43);

      v30 = v61[0];
      swift_bridgeObjectRelease();
      v14 = v30;
      v15 = v3;
      v16 = 0;
      if (v30)
      {
        v15 = v30 & 0xC000000000000001;
        if (!(v30 >> 62))
        {
LABEL_11:
          if (v16 == *(_QWORD *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_20;
          goto LABEL_12;
        }
        while (1)
        {
          swift_bridgeObjectRetain();
          v17 = sub_20E4A62A8();
          swift_bridgeObjectRelease();
          if (v16 == v17)
            break;
LABEL_12:
          if (v15)
          {
            v18 = (id)MEMORY[0x212BBD78C](v16, v30);
          }
          else
          {
            if (v16 >= *(_QWORD *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
LABEL_60:
              __break(1u);
LABEL_61:
              v10 = 0;
              v8 = v40 - 1;
              goto LABEL_62;
            }
            v18 = *(id *)(v30 + 8 * v16 + 32);
          }
          v19 = v18;
          if (__OFADD__(v16, 1))
            goto LABEL_60;
          if (objc_msgSend(v18, sel_isKeyWindow))
          {
            v43 = (id)v1;
            v44 = v41;
            v45 = v31;
            v46 = v8;
            v47 = v10;
            v48 = v42;
            v49 = v3;
            v50 = v36;
            v51 = v37;
            v52 = (uint64_t (*)(_QWORD))v38;
            v53 = v39;
            v54 = (void (*)(_QWORD *__return_ptr, _QWORD))v32;
            v55 = v33;
            v56 = (void (*)(_QWORD *__return_ptr, _QWORD))v34;
            v57 = v35;
            v58 = v30;
            v59 = v16 + 1;
            sub_20E43664C((uint64_t)&v43);
            return;
          }

          ++v16;
          if (!(v30 >> 62))
            goto LABEL_11;
        }
LABEL_20:
        v15 = v3;
      }
    }
    else
    {

    }
  }
  v25 = v8 + 2;
  if (v8 + 2 >= v40)
  {
    v10 = 0;
    ++v8;
    goto LABEL_62;
  }
  v24 = *(_QWORD *)(v41 + 8 * v25);
  if (v24)
    goto LABEL_32;
  v26 = v8 + 3;
  if (v8 + 3 >= v40)
    goto LABEL_57;
  v24 = *(_QWORD *)(v41 + 8 * v26);
  if (v24)
    goto LABEL_35;
  v25 = v8 + 4;
  if (v8 + 4 >= v40)
    goto LABEL_58;
  v24 = *(_QWORD *)(v41 + 8 * v25);
  if (v24)
  {
LABEL_32:
    v23 = v25;
    goto LABEL_36;
  }
  v26 = v8 + 5;
  if (v8 + 5 >= v40)
  {
LABEL_57:
    v10 = 0;
    v8 = v25;
    goto LABEL_62;
  }
  v24 = *(_QWORD *)(v41 + 8 * v26);
  if (v24)
  {
LABEL_35:
    v23 = v26;
    goto LABEL_36;
  }
  v23 = v8 + 6;
  if (v8 + 6 < v40)
  {
    v24 = *(_QWORD *)(v41 + 8 * v23);
    if (!v24)
    {
      v27 = v8 + 7;
      do
      {
        if (v40 == v27)
          goto LABEL_61;
        v24 = *(_QWORD *)(v41 + 8 * v27++);
      }
      while (!v24);
      v23 = v27 - 1;
    }
    goto LABEL_36;
  }
LABEL_58:
  v10 = 0;
  v8 = v26;
LABEL_62:
  v43 = (id)v1;
  v44 = v41;
  v45 = v31;
  v46 = v8;
  v47 = v10;
  v48 = v42;
  v49 = v15;
  v50 = v36;
  v51 = v37;
  v52 = (uint64_t (*)(_QWORD))v38;
  v53 = v39;
  v54 = (void (*)(_QWORD *__return_ptr, _QWORD))v32;
  v55 = v33;
  v56 = (void (*)(_QWORD *__return_ptr, _QWORD))v34;
  v57 = v35;
  v58 = v14;
  v59 = v16;
  sub_20E43664C((uint64_t)&v43);
}

uint64_t sub_20E435AE8(uint64_t a1)
{
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  ObjectType = swift_getObjectType();
  v3 = sub_20E4A4E44();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A190F8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_20E4A5E58();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  sub_20E4A5DF8();
  v11 = sub_20E4A5DEC();
  v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v13 = (v5 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  v14 = swift_allocObject();
  v15 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v14 + 16) = v11;
  *(_QWORD *)(v14 + 24) = v15;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v14 + v12, v6, v3);
  *(_QWORD *)(v14 + v13) = ObjectType;
  sub_20E3D1A10((uint64_t)v9, (uint64_t)&unk_254A1AC20, v14);
  return swift_release();
}

uint64_t sub_20E435C5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  sub_20E4A5DF8();
  *(_QWORD *)(v4 + 24) = sub_20E4A5DEC();
  sub_20E4A5DBC();
  return swift_task_switch();
}

uint64_t sub_20E435CC8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_release();
  sub_20E436314(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void *sub_20E435D00()
{
  void *result;

  result = (void *)sub_20E3B7E64(MEMORY[0x24BEE4AF8]);
  off_254A1AC10 = result;
  return result;
}

BOOL sub_20E435D24(id *a1)
{
  return objc_msgSend(*a1, sel_activationState) == 0;
}

id sub_20E435D4C@<X0>(void **a1@<X0>, _QWORD *a2@<X8>)
{
  void *v3;
  id result;
  id v5;

  v3 = *a1;
  objc_opt_self();
  result = (id)swift_dynamicCastObjCClass();
  v5 = result;
  if (result)
    result = v3;
  *a2 = v5;
  return result;
}

void sub_20E435D9C(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  uint64_t v4;

  v3 = objc_msgSend(*a1, sel_windows);
  sub_20E4366D8(0, &qword_253ED2A28);
  v4 = sub_20E4A5D2C();

  *a2 = v4;
}

uint64_t sub_20E435E38(uint64_t a1)
{
  return sub_20E435AE8(a1);
}

uint64_t sub_20E435E58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_20E4A4E44();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_20E435ED8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(_QWORD *)(sub_20E4A4E44() - 8);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_20E3B4E08;
  return sub_20E435C5C(a1, v5, v6, v7);
}

BOOL sub_20E435F7C(_QWORD *a1)
{
  return *a1 != 0;
}

id sub_20E435F8C@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = *a1;
  if (result)
  {
    *a2 = result;
    return result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_20E435FA0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  _QWORD *v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  objc_class *v17;
  id v18;
  id v19;
  id v20;
  id result;
  void *v22;
  id v23;
  char isUniquelyReferenced_nonNull_native;
  void *v25;
  objc_super v26;
  uint64_t v27;
  unint64_t v28;

  v2 = sub_20E4A4D00();
  MEMORY[0x24BDAC7A8](v2);
  v3 = sub_20E4A338C();
  MEMORY[0x24BDAC7A8](v3);
  v4 = _s21PopupHUDConfigurationVMa(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (uint64_t *)((char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_254A18100 != -1)
    swift_once();
  swift_beginAccess();
  v7 = off_254A1AC10;
  if (*((_QWORD *)off_254A1AC10 + 2))
  {
    v8 = sub_20E3BCDCC(a1);
    if ((v9 & 1) != 0)
    {
      v10 = v7[7] + 16 * v8;
      v11 = *(void **)v10;
      v12 = *(void **)(v10 + 8);
      swift_endAccess();
      v13 = v11;
      v12;
      return v13;
    }
  }
  swift_endAccess();
  *v6 = sub_20E4A4B44();
  v6[1] = v14;
  _s13PopupHUDModelCMa(0);
  v15 = swift_allocObject();
  v27 = 0;
  v28 = 0xE000000000000000;
  sub_20E4A359C();
  v16 = MEMORY[0x24BEE4AF8];
  v27 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1AC30);
  sub_20E4A359C();
  v6[2] = v15;
  v6[3] = v16;
  sub_20E4A3380();
  sub_20E4A4CF4();
  sub_20E4A54E0();
  v17 = (objc_class *)_s22PopupHUDViewControllerCMa(0);
  v18 = objc_allocWithZone(v17);
  sub_20E4365CC((uint64_t)v6, (uint64_t)v18 + OBJC_IVAR____TtCC18_JetEngine_SwiftUI28_PageRenderMetricsVisualizer22PopupHUDViewController_config);
  v26.receiver = v18;
  v26.super_class = v17;
  v19 = objc_msgSendSuper2(&v26, sel_initWithNibName_bundle_, 0, 0);
  sub_20E436610((uint64_t)v6);
  v20 = objc_msgSend(objc_allocWithZone((Class)_s25MetricsVisualizerUIWindowCMa()), sel_initWithWindowScene_, a1);
  objc_msgSend(v20, sel_setHidden_, 0);
  objc_msgSend(v20, sel_setRootViewController_, v19);
  result = objc_msgSend(v19, sel_view);
  if (result)
  {
    v22 = result;
    objc_msgSend(v20, sel_addSubview_, result);

    swift_beginAccess();
    v13 = v20;
    v23 = v19;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = off_254A1AC10;
    off_254A1AC10 = (_UNKNOWN *)0x8000000000000000;
    sub_20E3CA6B0((uint64_t)v13, (uint64_t)v23, a1, isUniquelyReferenced_nonNull_native);
    off_254A1AC10 = v25;
    swift_bridgeObjectRelease();
    swift_endAccess();
    return v13;
  }
  __break(1u);
  return result;
}

void sub_20E436314(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  void *v15;
  uint64_t v17[11];

  v2 = sub_20E4A5A8C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0) + 24;
  v6 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
  v7 = objc_msgSend(v6, sel_connectedScenes);

  sub_20E4366D8(0, (unint64_t *)&qword_253ED0D48);
  sub_20E436574();
  v8 = sub_20E4A5EDC();

  v17[0] = v8;
  v17[1] = (uint64_t)sub_20E435D24;
  v17[2] = 0;
  v17[3] = (uint64_t)sub_20E435D4C;
  v17[4] = 0;
  v17[5] = (uint64_t)sub_20E435F7C;
  v17[6] = 0;
  v17[7] = (uint64_t)sub_20E435F8C;
  v17[8] = 0;
  v17[9] = (uint64_t)sub_20E435D9C;
  v17[10] = 0;
  sub_20E435544(v17);
  v10 = v9;
  swift_bridgeObjectRelease();
  if (v10 && (v11 = objc_msgSend(v10, sel_windowScene), v10, v11))
  {
    v12 = v11;
    v13 = sub_20E435FA0((uint64_t)v12);
    v15 = v14;

    swift_beginAccess();
    sub_20E46BAD0(a1);
    swift_endAccess();

  }
  else
  {
    sub_20E4A5A5C();
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0D58);
    sub_20E4A4ACC();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_20E4A72D0;
    sub_20E4A4A30();
    sub_20E4A5768();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

unint64_t sub_20E436574()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254A1AC28;
  if (!qword_254A1AC28)
  {
    v1 = sub_20E4366D8(255, (unint64_t *)&qword_253ED0D48);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BEE5BD8], v1);
    atomic_store(result, (unint64_t *)&qword_254A1AC28);
  }
  return result;
}

uint64_t sub_20E4365CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s21PopupHUDConfigurationVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20E436610(uint64_t a1)
{
  uint64_t v2;

  v2 = _s21PopupHUDConfigurationVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20E43664C(uint64_t a1)
{
  sub_20E3C3C60();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_20E4366D8(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t *sub_20E436710(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char v23;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_20E4A5948();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A196D8);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = a3[5];
    v12 = *(_OWORD *)((char *)a2 + v11 + 24);
    *(_OWORD *)((char *)a1 + v11 + 24) = v12;
    (**(void (***)(void))(v12 - 8))();
    v13 = a3[6];
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    if ((*((_BYTE *)a2 + v13 + 40) & 1) != 0)
    {
      v16 = *((_QWORD *)v15 + 3);
      if (v16)
      {
        v17 = *((_QWORD *)v15 + 4);
        *((_QWORD *)v14 + 3) = v16;
        *((_QWORD *)v14 + 4) = v17;
        (**(void (***)(char *))(v16 - 8))(v14);
      }
      else
      {
        v18 = *((_OWORD *)v15 + 1);
        *(_OWORD *)v14 = *(_OWORD *)v15;
        *((_OWORD *)v14 + 1) = v18;
        *((_QWORD *)v14 + 4) = *((_QWORD *)v15 + 4);
      }
      v14[40] = 1;
    }
    else
    {
      *(_QWORD *)v14 = *(_QWORD *)v15;
      v14[40] = 0;
      swift_retain();
    }
    v19 = a3[7];
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    v22 = *(_QWORD *)v21;
    v23 = v21[8];
    sub_20E3CBD0C(*(_QWORD *)v21, v23);
    *(_QWORD *)v20 = v22;
    v20[8] = v23;
  }
  return a1;
}

uint64_t sub_20E43689C(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_20E4A5948();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  __swift_destroy_boxed_opaque_existential_1(a1 + a2[5]);
  v6 = a1 + a2[6];
  if ((*(_BYTE *)(v6 + 40) & 1) != 0)
  {
    if (*(_QWORD *)(v6 + 24))
      __swift_destroy_boxed_opaque_existential_1(v6);
  }
  else
  {
    swift_release();
  }
  return sub_20E3CBDA8(*(_QWORD *)(a1 + a2[7]), *(_BYTE *)(a1 + a2[7] + 8));
}

char *sub_20E436940(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char v21;

  v6 = sub_20E4A5948();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A196D8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[5];
  v10 = *(_OWORD *)&a2[v9 + 24];
  *(_OWORD *)&a1[v9 + 24] = v10;
  (**(void (***)(void))(v10 - 8))();
  v11 = a3[6];
  v12 = &a1[v11];
  v13 = &a2[v11];
  if ((a2[v11 + 40] & 1) != 0)
  {
    v14 = *((_QWORD *)v13 + 3);
    if (v14)
    {
      v15 = *((_QWORD *)v13 + 4);
      *((_QWORD *)v12 + 3) = v14;
      *((_QWORD *)v12 + 4) = v15;
      (**(void (***)(char *))(v14 - 8))(v12);
    }
    else
    {
      v16 = *((_OWORD *)v13 + 1);
      *(_OWORD *)v12 = *(_OWORD *)v13;
      *((_OWORD *)v12 + 1) = v16;
      *((_QWORD *)v12 + 4) = *((_QWORD *)v13 + 4);
    }
    v12[40] = 1;
  }
  else
  {
    *(_QWORD *)v12 = *(_QWORD *)v13;
    v12[40] = 0;
    swift_retain();
  }
  v17 = a3[7];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = *(_QWORD *)v19;
  v21 = v19[8];
  sub_20E3CBD0C(*(_QWORD *)v19, v21);
  *(_QWORD *)v18 = v20;
  v18[8] = v21;
  return a1;
}

char *sub_20E436AA0(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;

  v6 = sub_20E4A5948();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A196D8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  __swift_assign_boxed_opaque_existential_1((uint64_t *)&a1[a3[5]], (uint64_t *)&a2[a3[5]]);
  if (a1 != a2)
  {
    v12 = a3[6];
    v13 = &a1[v12];
    v14 = &a2[v12];
    sub_20E39D1F8((uint64_t)&a1[v12], &qword_253ED0A18);
    if ((v14[40] & 1) != 0)
    {
      v15 = *((_QWORD *)v14 + 3);
      if (v15)
      {
        *((_QWORD *)v13 + 3) = v15;
        *((_QWORD *)v13 + 4) = *((_QWORD *)v14 + 4);
        (**(void (***)(char *, char *))(v15 - 8))(v13, v14);
      }
      else
      {
        v16 = *(_OWORD *)v14;
        v17 = *((_OWORD *)v14 + 1);
        *((_QWORD *)v13 + 4) = *((_QWORD *)v14 + 4);
        *(_OWORD *)v13 = v16;
        *((_OWORD *)v13 + 1) = v17;
      }
      v13[40] = 1;
    }
    else
    {
      *(_QWORD *)v13 = *(_QWORD *)v14;
      v13[40] = 0;
      swift_retain();
    }
  }
  v18 = a3[7];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = *(_QWORD *)v20;
  v22 = v20[8];
  sub_20E3CBD0C(*(_QWORD *)v20, v22);
  v23 = *(_QWORD *)v19;
  v24 = v19[8];
  *(_QWORD *)v19 = v21;
  v19[8] = v22;
  sub_20E3CBDA8(v23, v24);
  return a1;
}

char *sub_20E436C64(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  __int128 v13;
  char *v14;
  char *v15;
  __int128 v16;
  uint64_t v17;
  char *v18;
  char *v19;

  v6 = sub_20E4A5948();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A196D8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[5];
  v10 = a3[6];
  v11 = &a1[v9];
  v12 = &a2[v9];
  *((_QWORD *)v11 + 4) = *((_QWORD *)v12 + 4);
  v13 = *((_OWORD *)v12 + 1);
  *(_OWORD *)v11 = *(_OWORD *)v12;
  *((_OWORD *)v11 + 1) = v13;
  v14 = &a1[v10];
  v15 = &a2[v10];
  *(_OWORD *)(v14 + 25) = *(_OWORD *)(v15 + 25);
  v16 = *((_OWORD *)v15 + 1);
  *(_OWORD *)v14 = *(_OWORD *)v15;
  *((_OWORD *)v14 + 1) = v16;
  v17 = a3[7];
  v18 = &a1[v17];
  v19 = &a2[v17];
  *(_QWORD *)v18 = *(_QWORD *)v19;
  v18[8] = v19[8];
  return a1;
}

char *sub_20E436D64(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  __int128 v15;
  uint64_t v16;
  char *v17;
  char *v18;
  __int128 v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;

  v6 = sub_20E4A5948();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A196D8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&a1[v12]);
  v15 = *((_OWORD *)v14 + 1);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = v15;
  *((_QWORD *)v13 + 4) = *((_QWORD *)v14 + 4);
  if (a1 != a2)
  {
    v16 = a3[6];
    v17 = &a2[v16];
    v18 = &a1[v16];
    sub_20E39D1F8((uint64_t)&a1[v16], &qword_253ED0A18);
    v19 = *((_OWORD *)v17 + 1);
    *(_OWORD *)v18 = *(_OWORD *)v17;
    *((_OWORD *)v18 + 1) = v19;
    *(_OWORD *)(v18 + 25) = *(_OWORD *)(v17 + 25);
  }
  v20 = a3[7];
  v21 = &a1[v20];
  v22 = &a2[v20];
  v23 = *(_QWORD *)v22;
  LOBYTE(v22) = v22[8];
  v24 = *(_QWORD *)v21;
  v25 = v21[8];
  *(_QWORD *)v21 = v23;
  v21[8] = (char)v22;
  sub_20E3CBDA8(v24, v25);
  return a1;
}

uint64_t sub_20E436EE0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_20E436EEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A196D8);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 24);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_20E436F70()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_20E436F7C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_254A196D8);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for ComponentMenuContent()
{
  uint64_t result;

  result = qword_254A1AC38;
  if (!qword_254A1AC38)
    return swift_getSingletonMetadata();
  return result;
}

void sub_20E437038()
{
  unint64_t v0;

  sub_20E4370BC();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_20E4370BC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254A1AC48)
  {
    sub_20E4A5948();
    v0 = sub_20E4A60E0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254A1AC48);
  }
}

uint64_t sub_20E437110()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E437120(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr, uint64_t, uint64_t *))
{
  uint64_t v4;
  uint64_t v5;

  v5 = a2;
  a3(&v4, a1, &v5);
  return v4;
}

uint64_t sub_20E437158@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = v1;
  v20 = a1;
  v3 = type metadata accessor for ComponentMenuContent();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](v3);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A196D8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1AC50);
  v9 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20E3A5E20(v2, (uint64_t)v8, &qword_254A196D8);
  v12 = sub_20E4A5948();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v12) == 1)
  {
    sub_20E39D1F8((uint64_t)v8, &qword_254A196D8);
    v14 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v14 = sub_20E4A593C();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v12);
  }
  v21 = v14;
  sub_20E438614(v2, (uint64_t)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v16 = swift_allocObject();
  sub_20E438740((uint64_t)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1AC58);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1AC60);
  sub_20E39D010(&qword_254A1AC68, &qword_254A1AC58, MEMORY[0x24BEE12D8]);
  sub_20E4387D0();
  sub_20E39F334(&qword_254A1ACE8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5E0A0], MEMORY[0x24BE5E0B0]);
  sub_20E4A47B4();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(v20, v11, v19);
}

uint64_t sub_20E4373A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  uint64_t v34;
  uint64_t *v35;
  int v36;
  void (*v37)(char *, uint64_t *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t result;
  uint64_t v60;
  void (*v61)(char *, char *, uint64_t);
  char *v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  unint64_t v75;
  char v76;
  void (*v77)(__int128 *__return_ptr, uint64_t, __int128 *);
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int *v85;
  char *v86;
  uint64_t *v87;
  char *v88;
  uint64_t (**v89)();
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  char v101;
  _OWORD *v102;
  __int128 v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  __int128 v107;
  uint64_t v108;
  char v109;
  _OWORD *v110;
  char v111;
  uint64_t v112;
  char *v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  _OWORD *v138;
  uint64_t v139;
  __int128 v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  __int128 v144;
  uint64_t v145;
  __int16 v146;

  v122 = a2;
  v135 = a1;
  v139 = a3;
  v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1ACF0);
  v116 = *(_QWORD *)(v117 - 8);
  MEMORY[0x24BDAC7A8](v117);
  v115 = (char *)&v112 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1ACA0);
  MEMORY[0x24BDAC7A8](v134);
  v114 = (char *)&v112 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v121 = (uint64_t)&v112 - v6;
  v120 = sub_20E4A5948();
  v119 = *(_QWORD *)(v120 - 8);
  MEMORY[0x24BDAC7A8](v120);
  v118 = (char *)&v112 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v136 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1ACF8);
  MEMORY[0x24BDAC7A8](v136);
  v138 = (_OWORD *)((char *)&v112 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1AD00);
  MEMORY[0x24BDAC7A8](v131);
  v132 = (uint64_t)&v112 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v137 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1AC80);
  MEMORY[0x24BDAC7A8](v137);
  v133 = (char *)&v112 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_20E4A5930();
  v123 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v113 = (char *)&v112 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1AD08);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v112 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19628);
  MEMORY[0x24BDAC7A8](v16);
  v125 = (char *)&v112 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1AD10);
  MEMORY[0x24BDAC7A8](v126);
  v19 = (char *)&v112 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v128 = (uint64_t)&v112 - v21;
  v130 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1AC90);
  MEMORY[0x24BDAC7A8](v130);
  v127 = (uint64_t)&v112 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v129 = (uint64_t)&v112 - v24;
  v25 = sub_20E4A590C();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(_QWORD *)(v26 + 64);
  MEMORY[0x24BDAC7A8](v25);
  v124 = (char *)&v112 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28);
  v30 = (char *)&v112 - v29;
  v31 = sub_20E4A5924();
  v32 = *(_QWORD *)(v31 - 8);
  v33 = MEMORY[0x24BDAC7A8](v31);
  v35 = (uint64_t *)((char *)&v112 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, uint64_t, uint64_t, double))(v32 + 16))(v35, v135, v31, v33);
  v36 = (*(uint64_t (**)(uint64_t *, uint64_t))(v32 + 88))(v35, v31);
  if (v36 != *MEMORY[0x24BE5E088])
  {
    if (v36 == *MEMORY[0x24BE5E090])
    {
      (*(void (**)(uint64_t *, uint64_t))(v32 + 96))(v35, v31);
      v42 = v119;
      v43 = v118;
      v44 = v120;
      v45 = (*(uint64_t (**)(char *, uint64_t *, uint64_t))(v119 + 32))(v118, v35, v120);
      MEMORY[0x24BDAC7A8](v45);
      MEMORY[0x24BDAC7A8](v46);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254A1AD18);
      type metadata accessor for ComponentMenuContent();
      sub_20E39D010(&qword_254A1AD20, &qword_254A1AD18, MEMORY[0x24BDF41A8]);
      sub_20E39F334(&qword_254A19620, (uint64_t (*)(uint64_t))type metadata accessor for ComponentMenuContent, (uint64_t)&unk_20E4ACEC0);
      v47 = v115;
      sub_20E4A4190();
      v48 = sub_20E4A58D0();
      v50 = v49;
      v51 = v116;
      v52 = v114;
      v53 = v117;
      (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v114, v47, v117);
      v54 = (uint64_t *)&v52[*(int *)(v134 + 52)];
      *v54 = v48;
      v54[1] = v50;
      (*(void (**)(char *, uint64_t))(v51 + 8))(v47, v53);
      v55 = (uint64_t)v52;
      v56 = v121;
      sub_20E3BB440(v55, v121, &qword_254A1ACA0);
      sub_20E3A5E20(v56, v132, &qword_254A1ACA0);
      swift_storeEnumTagMultiPayload();
      v57 = MEMORY[0x24BDF44C8];
      sub_20E39D010(&qword_254A1AC88, &qword_254A1AC90, MEMORY[0x24BDF44C8]);
      sub_20E39D010(&qword_254A1AC98, &qword_254A1ACA0, v57);
      v58 = (uint64_t)v133;
      sub_20E4A3DF4();
      sub_20E3A5E20(v58, (uint64_t)v138, &qword_254A1AC80);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_254A1ACB0);
      sub_20E43883C();
      sub_20E4388E0();
      sub_20E4A3DF4();
      sub_20E39D1F8(v58, &qword_254A1AC80);
      sub_20E39D1F8(v56, &qword_254A1ACA0);
      return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v43, v44);
    }
    if (v36 != *MEMORY[0x24BE5E098])
    {
      v144 = 0uLL;
      v145 = 0;
      v146 = 256;
      __swift_instantiateConcreteTypeFromMangledName(&qword_254A1ACC0);
      sub_20E43894C();
      sub_20E4A3DF4();
      v99 = v141;
      v100 = v142;
      v101 = BYTE1(v142);
      v102 = v138;
      *v138 = v140;
      *((_QWORD *)v102 + 2) = v99;
      *((_BYTE *)v102 + 24) = v100;
      *((_BYTE *)v102 + 25) = v101;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_254A1ACB0);
      sub_20E43883C();
      sub_20E4388E0();
      sub_20E4A3DF4();
      return (*(uint64_t (**)(uint64_t *, uint64_t))(v32 + 8))(v35, v31);
    }
    (*(void (**)(uint64_t *, uint64_t))(v32 + 96))(v35, v31);
    v65 = *v35;
    v64 = v35[1];
    v66 = type metadata accessor for ComponentMenuContent();
    v67 = v122;
    sub_20E45D570((uint64_t)&v140);
    v68 = v142;
    if (v142)
    {
      v69 = v143;
      __swift_project_boxed_opaque_existential_1(&v140, v142);
      v70 = (*(uint64_t (**)(uint64_t, uint64_t))(v69 + 16))(v68, v69);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v140);
      v71 = v67 + *(int *)(v66 + 28);
      v72 = *(_QWORD *)v71;
      v73 = *(_BYTE *)(v71 + 8);
      sub_20E3CBD0C(*(_QWORD *)v71, v73);
      v74 = sub_20E45DF38(v72, v73);
      sub_20E3CBDA8(v72, v73);
      if (*(_QWORD *)(v74 + 16))
      {
        swift_bridgeObjectRetain();
        v75 = sub_20E3BCD58(v65, v64);
        if ((v76 & 1) != 0)
        {
          v77 = *(void (**)(__int128 *__return_ptr, uint64_t, __int128 *))(*(_QWORD *)(v74 + 56) + 16 * v75);
          swift_retain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v78 = v67 + *(int *)(v66 + 20);
          *(_QWORD *)&v140 = v70;
          v77(&v144, v78, &v140);
          swift_release();
          *((_QWORD *)&v144 + 1) = v65;
          v145 = v64;
          LOBYTE(v146) = 0;
          swift_bridgeObjectRetain_n();
          swift_retain_n();
          __swift_instantiateConcreteTypeFromMangledName(&qword_254A1ACD0);
          __swift_instantiateConcreteTypeFromMangledName(&qword_254A1ACE0);
          sub_20E39D010(&qword_254A1ACC8, &qword_254A1ACD0, MEMORY[0x24BDF44C8]);
          sub_20E39D010(&qword_254A1ACD8, &qword_254A1ACE0, (uint64_t)&protocol conformance descriptor for _RequirementFailureView<A, B>);
          sub_20E4A3DF4();
          swift_bridgeObjectRelease_n();
          swift_release_n();
          swift_release();
LABEL_23:
          v105 = v141;
          v106 = v142;
          v144 = v140;
          v145 = v141;
          v146 = v142;
          v134 = *((_QWORD *)&v140 + 1);
          v135 = v140;
          sub_20E438A0C(v140, *((uint64_t *)&v140 + 1), v141, v142);
          __swift_instantiateConcreteTypeFromMangledName(&qword_254A1ACC0);
          sub_20E43894C();
          sub_20E4A3DF4();
          v107 = v140;
          v108 = v141;
          v109 = BYTE1(v142);
          v110 = v138;
          *v138 = v140;
          *((_QWORD *)v110 + 2) = v108;
          v111 = v142;
          *((_BYTE *)v110 + 24) = v142;
          *((_BYTE *)v110 + 25) = v109;
          swift_storeEnumTagMultiPayload();
          sub_20E438A3C(v107, *((uint64_t *)&v107 + 1), v108, v111, v109);
          __swift_instantiateConcreteTypeFromMangledName(&qword_254A1ACB0);
          sub_20E43883C();
          sub_20E4388E0();
          sub_20E4A3DF4();
          sub_20E438A4C(v135, v134, v105, v106);
          return sub_20E438A7C(v107, *((uint64_t *)&v107 + 1), v108, v111, v109);
        }
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_release();
    }
    else
    {
      sub_20E39D1F8((uint64_t)&v140, &qword_253ED0658);
    }
    *(_QWORD *)&v140 = 0;
    *((_QWORD *)&v140 + 1) = 0xE000000000000000;
    sub_20E4A61A0();
    sub_20E4A5C6C();
    sub_20E4A5C6C();
    swift_bridgeObjectRelease();
    sub_20E4A5C6C();
    v103 = v140;
    v104 = swift_allocObject();
    *(_OWORD *)(v104 + 16) = v103;
    *(_QWORD *)&v144 = sub_20E3A5260;
    *((_QWORD *)&v144 + 1) = v104;
    v145 = 0;
    LOBYTE(v146) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254A1ACD0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254A1ACE0);
    sub_20E39D010(&qword_254A1ACC8, &qword_254A1ACD0, MEMORY[0x24BDF44C8]);
    sub_20E39D010(&qword_254A1ACD8, &qword_254A1ACE0, (uint64_t)&protocol conformance descriptor for _RequirementFailureView<A, B>);
    sub_20E4A3DF4();
    goto LABEL_23;
  }
  (*(void (**)(uint64_t *, uint64_t))(v32 + 96))(v35, v31);
  v37 = *(void (**)(char *, uint64_t *, uint64_t))(v26 + 32);
  v37(v30, v35, v25);
  sub_20E4A58F4();
  v38 = v123;
  v39 = v26;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v123 + 48))(v15, 1, v11) == 1)
  {
    sub_20E39D1F8((uint64_t)v15, &qword_254A1AD08);
    v40 = sub_20E4A3620();
    v41 = (uint64_t)v125;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v125, 1, 1, v40);
  }
  else
  {
    v60 = v38;
    v135 = v25;
    v61 = *(void (**)(char *, char *, uint64_t))(v38 + 16);
    v62 = v113;
    v61(v113, v15, v11);
    v63 = (*(uint64_t (**)(char *, uint64_t))(v60 + 88))(v62, v11);
    v41 = (uint64_t)v125;
    if (v63 == *MEMORY[0x24BE5E0C8])
    {
      sub_20E4A3614();
    }
    else
    {
      if (v63 != *MEMORY[0x24BE5E0C0])
      {
        result = sub_20E4A6290();
        __break(1u);
        return result;
      }
      sub_20E4A3608();
    }
    v79 = sub_20E4A3620();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 56))(v41, 0, 1, v79);
    (*(void (**)(char *, uint64_t))(v60 + 8))(v15, v11);
    v25 = v135;
  }
  sub_20E4A5900();
  v80 = v124;
  (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v124, v30, v25);
  v81 = v25;
  v82 = (*(unsigned __int8 *)(v39 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
  v83 = swift_allocObject();
  v135 = v39;
  v84 = v83;
  v37((char *)(v83 + v82), (uint64_t *)v80, v81);
  v85 = (int *)v126;
  v86 = &v19[*(int *)(v126 + 44)];
  *(_QWORD *)v86 = swift_getKeyPath();
  v86[40] = 0;
  v87 = (uint64_t *)&v19[v85[12]];
  *v87 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
  swift_storeEnumTagMultiPayload();
  v88 = &v19[v85[13]];
  *(_QWORD *)v88 = swift_getKeyPath();
  *((_QWORD *)v88 + 1) = 0;
  v88[16] = 0;
  sub_20E3BB440(v41, (uint64_t)v19, &qword_254A19628);
  sub_20E3BB440((uint64_t)&v140, (uint64_t)&v19[v85[9]], &qword_254A19630);
  v89 = (uint64_t (**)())&v19[v85[10]];
  *v89 = sub_20E438B1C;
  v89[1] = (uint64_t (*)())v84;
  v90 = v128;
  sub_20E3BB440((uint64_t)v19, v128, &qword_254A1AD10);
  v91 = sub_20E4A58DC();
  v93 = v92;
  v94 = v127;
  sub_20E3A5E20(v90, v127, &qword_254A1AD10);
  v95 = (uint64_t *)(v94 + *(int *)(v130 + 52));
  *v95 = v91;
  v95[1] = v93;
  sub_20E39D1F8(v90, &qword_254A1AD10);
  v96 = v129;
  sub_20E3BB440(v94, v129, &qword_254A1AC90);
  sub_20E3A5E20(v96, v132, &qword_254A1AC90);
  swift_storeEnumTagMultiPayload();
  v97 = MEMORY[0x24BDF44C8];
  sub_20E39D010(&qword_254A1AC88, &qword_254A1AC90, MEMORY[0x24BDF44C8]);
  sub_20E39D010(&qword_254A1AC98, &qword_254A1ACA0, v97);
  v98 = (uint64_t)v133;
  sub_20E4A3DF4();
  sub_20E3A5E20(v98, (uint64_t)v138, &qword_254A1AC80);
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1ACB0);
  sub_20E43883C();
  sub_20E4388E0();
  sub_20E4A3DF4();
  sub_20E39D1F8(v98, &qword_254A1AC80);
  sub_20E39D1F8(v96, &qword_254A1AC90);
  return (*(uint64_t (**)(char *, uint64_t))(v135 + 8))(v30, v81);
}

uint64_t sub_20E4383F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  __int128 v16[2];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A196D8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_20E4A5948();
  v10 = *(_QWORD *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v8, a1, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  v11 = (int *)type metadata accessor for ComponentMenuContent();
  sub_20E3C39FC(a2 + v11[5], (uint64_t)v16);
  v12 = a3 + v11[6];
  *(_QWORD *)v12 = swift_getKeyPath();
  *(_BYTE *)(v12 + 40) = 0;
  v13 = a3 + v11[7];
  *(_QWORD *)v13 = swift_getKeyPath();
  *(_BYTE *)(v13 + 8) = 0;
  sub_20E3BB440((uint64_t)v8, a3, &qword_254A196D8);
  return sub_20E3B1AB4(v16, a3 + v11[5]);
}

uint64_t sub_20E438524()
{
  sub_20E4A4C70();
  sub_20E39F334(&qword_254A1AD28, (uint64_t (*)(uint64_t))MEMORY[0x24BE5CB70], (uint64_t)&protocol conformance descriptor for MediaArtwork);
  return sub_20E4A461C();
}

uint64_t sub_20E4385B8@<X0>(void (*a1)(void)@<X1>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  char v5;
  uint64_t v6;

  a1();
  sub_20E3C3948();
  result = sub_20E4A41C0();
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = v4;
  *(_BYTE *)(a2 + 16) = v5 & 1;
  *(_QWORD *)(a2 + 24) = v6;
  return result;
}

uint64_t sub_20E438614(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ComponentMenuContent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20E438658()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = (int *)type metadata accessor for ComponentMenuContent();
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = v0 + v3;
  v5 = sub_20E4A5948();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  __swift_destroy_boxed_opaque_existential_1(v4 + v1[5]);
  v7 = v4 + v1[6];
  if ((*(_BYTE *)(v7 + 40) & 1) != 0)
  {
    if (*(_QWORD *)(v7 + 24))
      __swift_destroy_boxed_opaque_existential_1(v7);
  }
  else
  {
    swift_release();
  }
  sub_20E3CBDA8(*(_QWORD *)(v4 + v1[7]), *(_BYTE *)(v4 + v1[7] + 8));
  return swift_deallocObject();
}

uint64_t sub_20E438740(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ComponentMenuContent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20E438784@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ComponentMenuContent() - 8) + 80);
  return sub_20E4373A8(a1, v2 + ((v5 + 16) & ~v5), a2);
}

unint64_t sub_20E4387D0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254A1AC70;
  if (!qword_254A1AC70)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1AC60);
    v2[0] = sub_20E43883C();
    v2[1] = sub_20E4388E0();
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254A1AC70);
  }
  return result;
}

unint64_t sub_20E43883C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_254A1AC78;
  if (!qword_254A1AC78)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1AC80);
    v2 = MEMORY[0x24BDF44C8];
    v3[0] = sub_20E39D010(&qword_254A1AC88, &qword_254A1AC90, MEMORY[0x24BDF44C8]);
    v3[1] = sub_20E39D010(&qword_254A1AC98, &qword_254A1ACA0, v2);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_254A1AC78);
  }
  return result;
}

unint64_t sub_20E4388E0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254A1ACA8;
  if (!qword_254A1ACA8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1ACB0);
    v2[0] = sub_20E43894C();
    v2[1] = MEMORY[0x24BDF5138];
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254A1ACA8);
  }
  return result;
}

unint64_t sub_20E43894C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254A1ACB8;
  if (!qword_254A1ACB8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1ACC0);
    v2[0] = sub_20E39D010(&qword_254A1ACC8, &qword_254A1ACD0, MEMORY[0x24BDF44C8]);
    v2[1] = sub_20E39D010(&qword_254A1ACD8, &qword_254A1ACE0, (uint64_t)&protocol conformance descriptor for _RequirementFailureView<A, B>);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254A1ACB8);
  }
  return result;
}

uint64_t sub_20E4389E8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_20E438A0C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) != 0)
    return swift_retain();
  swift_retain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_20E438A3C(uint64_t result, uint64_t a2, uint64_t a3, char a4, char a5)
{
  if ((a5 & 1) == 0)
    return sub_20E438A0C(result, a2, a3, a4 & 1);
  return result;
}

uint64_t sub_20E438A4C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) != 0)
    return swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_20E438A7C(uint64_t result, uint64_t a2, uint64_t a3, char a4, char a5)
{
  if ((a5 & 1) == 0)
    return sub_20E438A4C(result, a2, a3, a4 & 1);
  return result;
}

uint64_t sub_20E438A8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_20E4383F4(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_20E438A94()
{
  return sub_20E438524();
}

uint64_t sub_20E438ABC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_20E4A590C();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_20E438B1C()
{
  sub_20E4A590C();
  return sub_20E438524();
}

uint64_t sub_20E438B80@<X0>(uint64_t a1@<X8>)
{
  return sub_20E4385B8(MEMORY[0x24BE5E060], a1);
}

uint64_t sub_20E438BA0()
{
  return sub_20E4A58E8();
}

uint64_t sub_20E438BC0@<X0>(uint64_t a1@<X8>)
{
  return sub_20E4385B8(MEMORY[0x24BE5E0B8], a1);
}

uint64_t sub_20E438BE0()
{
  return sub_20E4A5918();
}

unint64_t sub_20E438C0C()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_254A1AD30;
  if (!qword_254A1AD30)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1AC50);
    v2 = sub_20E4387D0();
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDF4A08], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_254A1AD30);
  }
  return result;
}

void sub_20E438CF0()
{
  char *v0;
  id v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  double v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  void *v26;
  id v27;
  void *v28;
  uint64_t v29;
  void *v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  void *v37;
  id v38;
  id v39;
  void *v40;
  id v41;
  id v42;
  id v43;
  void *v44;
  id v45;
  id v46;
  void *v47;
  id v48;
  id v49;
  id v50;
  void *v51;
  id v52;
  id v53;
  void *v54;
  id v55;
  id v56;
  id v57;
  void *v58;
  id v59;
  id v60;
  void *v61;
  id v62;
  id v63;
  id v64;
  void *v65;
  id v66;
  id v67;
  void *v68;
  id v69;
  id v70;
  id v71;
  void *v72;
  id v73;
  id v74;
  void *v75;
  void *v76;
  id v77;
  id v78;
  id v79;
  void *v80;
  objc_super v81;

  v81.receiver = v0;
  v81.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v81, sel_viewDidLoad);
  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDB00]), sel_init);
  v2 = OBJC_IVAR____TtCC18_JetEngine_SwiftUI28_PageRenderMetricsVisualizer31MetricsVisualizerViewController_borderView;
  v3 = *(void **)&v0[OBJC_IVAR____TtCC18_JetEngine_SwiftUI28_PageRenderMetricsVisualizer31MetricsVisualizerViewController_borderView];
  *(_QWORD *)&v0[OBJC_IVAR____TtCC18_JetEngine_SwiftUI28_PageRenderMetricsVisualizer31MetricsVisualizerViewController_borderView] = v1;

  v4 = *(void **)&v0[v2];
  if (!v4)
  {
    __break(1u);
    goto LABEL_28;
  }
  v5 = objc_msgSend(v4, sel_layer);
  v6 = *(double *)&v0[OBJC_IVAR____TtCC18_JetEngine_SwiftUI28_PageRenderMetricsVisualizer31MetricsVisualizerViewController_borderSize];
  objc_msgSend(v5, sel_setBorderWidth_, v6);

  v7 = *(void **)&v0[v2];
  if (!v7)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  objc_msgSend(v7, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v8 = objc_msgSend(v0, sel_view);
  if (!v8)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (!*(_QWORD *)&v0[v2])
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v9 = v8;
  objc_msgSend(v8, sel_addSubview_);

  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD708]), sel_init);
  v11 = OBJC_IVAR____TtCC18_JetEngine_SwiftUI28_PageRenderMetricsVisualizer31MetricsVisualizerViewController_eventLabel;
  v12 = *(void **)&v0[OBJC_IVAR____TtCC18_JetEngine_SwiftUI28_PageRenderMetricsVisualizer31MetricsVisualizerViewController_eventLabel];
  *(_QWORD *)&v0[OBJC_IVAR____TtCC18_JetEngine_SwiftUI28_PageRenderMetricsVisualizer31MetricsVisualizerViewController_eventLabel] = v10;

  v13 = *(void **)&v0[v11];
  if (!v13)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v14 = (void *)objc_opt_self();
  v15 = *MEMORY[0x24BEBE1D0];
  v16 = v13;
  v17 = objc_msgSend(v14, sel_preferredFontForTextStyle_, v15);
  objc_msgSend(v16, sel_setFont_, v17);

  v18 = *(void **)&v0[v11];
  if (!v18)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v19 = (void *)objc_opt_self();
  v20 = v18;
  v21 = objc_msgSend(v19, sel_blackColor);
  objc_msgSend(v20, sel_setTextColor_, v21);

  v22 = *(void **)&v0[v11];
  if (!v22)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v23 = v22;
  v24 = objc_msgSend(v19, sel_whiteColor);
  objc_msgSend(v23, sel_setBackgroundColor_, v24);

  v25 = *(void **)&v0[v11];
  if (!v25)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  objc_msgSend(v25, sel_setUserInteractionEnabled_, 0);
  v26 = *(void **)&v0[v11];
  if (!v26)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  objc_msgSend(v26, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v27 = objc_msgSend(v0, sel_view);
  if (!v27)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  if (!*(_QWORD *)&v0[v11])
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v28 = v27;
  objc_msgSend(v27, sel_addSubview_);

  __swift_instantiateConcreteTypeFromMangledName(&qword_254A18A98);
  v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_20E4ACFB0;
  v30 = *(void **)&v0[v11];
  if (!v30)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v31 = objc_msgSend(v30, sel_topAnchor);
  v32 = objc_msgSend(v0, sel_view);
  if (!v32)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v33 = v32;
  v34 = objc_msgSend(v32, sel_layoutMarginsGuide);

  v35 = objc_msgSend(v34, sel_topAnchor);
  v36 = objc_msgSend(v31, sel_constraintEqualToAnchor_constant_, v35, v6);

  *(_QWORD *)(v29 + 32) = v36;
  v37 = *(void **)&v0[v11];
  if (!v37)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v38 = objc_msgSend(v37, sel_leftAnchor);
  v39 = objc_msgSend(v0, sel_view);
  if (!v39)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  v40 = v39;
  v41 = objc_msgSend(v39, sel_safeAreaLayoutGuide);

  v42 = objc_msgSend(v41, sel_leftAnchor);
  v43 = objc_msgSend(v38, sel_constraintEqualToAnchor_constant_, v42, v6);

  *(_QWORD *)(v29 + 40) = v43;
  v44 = *(void **)&v0[v11];
  if (!v44)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  v45 = objc_msgSend(v44, sel_rightAnchor);
  v46 = objc_msgSend(v0, sel_view);
  if (!v46)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  v47 = v46;
  v48 = objc_msgSend(v46, sel_safeAreaLayoutGuide);

  v49 = objc_msgSend(v48, sel_rightAnchor);
  v50 = objc_msgSend(v45, sel_constraintEqualToAnchor_constant_, v49, -v6);

  *(_QWORD *)(v29 + 48) = v50;
  v51 = *(void **)&v0[v2];
  if (!v51)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  v52 = objc_msgSend(v51, sel_topAnchor);
  v53 = objc_msgSend(v0, sel_view);
  if (!v53)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  v54 = v53;
  v55 = objc_msgSend(v53, sel_safeAreaLayoutGuide);

  v56 = objc_msgSend(v55, sel_topAnchor);
  v57 = objc_msgSend(v52, sel_constraintEqualToAnchor_, v56);

  *(_QWORD *)(v29 + 56) = v57;
  v58 = *(void **)&v0[v2];
  if (!v58)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  v59 = objc_msgSend(v58, sel_leftAnchor);
  v60 = objc_msgSend(v0, sel_view);
  if (!v60)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  v61 = v60;
  v62 = objc_msgSend(v60, sel_safeAreaLayoutGuide);

  v63 = objc_msgSend(v62, sel_leftAnchor);
  v64 = objc_msgSend(v59, sel_constraintEqualToAnchor_, v63);

  *(_QWORD *)(v29 + 64) = v64;
  v65 = *(void **)&v0[v2];
  if (!v65)
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  v66 = objc_msgSend(v65, sel_rightAnchor);
  v67 = objc_msgSend(v0, sel_view);
  if (!v67)
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  v68 = v67;
  v69 = objc_msgSend(v67, sel_safeAreaLayoutGuide);

  v70 = objc_msgSend(v69, sel_rightAnchor);
  v71 = objc_msgSend(v66, sel_constraintEqualToAnchor_, v70);

  *(_QWORD *)(v29 + 72) = v71;
  v72 = *(void **)&v0[v2];
  if (!v72)
  {
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  v73 = objc_msgSend(v72, sel_bottomAnchor);
  v74 = objc_msgSend(v0, sel_view);
  if (v74)
  {
    v75 = v74;
    v76 = (void *)objc_opt_self();
    v77 = objc_msgSend(v75, sel_safeAreaLayoutGuide);

    v78 = objc_msgSend(v77, sel_bottomAnchor);
    v79 = objc_msgSend(v73, sel_constraintEqualToAnchor_, v78);

    *(_QWORD *)(v29 + 80) = v79;
    sub_20E4A5D38();
    sub_20E4396F8();
    v80 = (void *)sub_20E4A5D20();
    swift_bridgeObjectRelease();
    objc_msgSend(v76, sel_activateConstraints_, v80);

    return;
  }
LABEL_51:
  __break(1u);
}

uint64_t _s31MetricsVisualizerViewControllerCMa()
{
  return objc_opt_self();
}

uint64_t _s25MetricsVisualizerUIWindowCMa()
{
  return objc_opt_self();
}

unint64_t sub_20E4396F8()
{
  unint64_t result;

  result = qword_254A1AD50;
  if (!qword_254A1AD50)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, &qword_254A1AD50);
  }
  return result;
}

BOOL sub_20E439734(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_20E439744()
{
  return sub_20E4A641C();
}

uint64_t sub_20E439768()
{
  sub_20E4A6410();
  sub_20E4A641C();
  return sub_20E4A6428();
}

BOOL sub_20E4397AC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_20E439734(*a1, *a2);
}

uint64_t sub_20E4397B8()
{
  return sub_20E439768();
}

uint64_t sub_20E4397C0()
{
  return sub_20E439744();
}

uint64_t sub_20E4397C8()
{
  sub_20E4A6410();
  sub_20E439744();
  return sub_20E4A6428();
}

__n128 ToastActionImplementation.init<A>(following:)@<Q0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  __n128 result;

  v12 = *a1;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a2;
  *(_QWORD *)(v13 + 24) = a3;
  *(_QWORD *)(v13 + 32) = a4;
  *(_QWORD *)(v13 + 40) = a5;
  *(_QWORD *)(v13 + 48) = v12;
  result = *(__n128 *)(a1 + 1);
  *(__n128 *)(v13 + 56) = result;
  *a6 = &unk_254A1AD60;
  a6[1] = v13;
  return result;
}

uint64_t sub_20E439884(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8[12] = a7;
  v8[13] = a8;
  v8[10] = a5;
  v8[11] = a6;
  v8[8] = a3;
  v8[9] = a4;
  v8[6] = a1;
  v8[7] = a2;
  v9 = sub_20E4A6248();
  v8[14] = v9;
  v8[15] = *(_QWORD *)(v9 - 8);
  v8[16] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED2428);
  v8[17] = swift_task_alloc();
  v10 = sub_20E4A33B0();
  v8[18] = v10;
  v8[19] = *(_QWORD *)(v10 - 8);
  v8[20] = swift_task_alloc();
  sub_20E4A5DF8();
  v8[21] = sub_20E4A5DEC();
  v8[22] = sub_20E4A5DBC();
  v8[23] = v11;
  return swift_task_switch();
}

uint64_t sub_20E439970()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t (*v21)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 56);
  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 136);
  v4 = *(_QWORD *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 104);
  v6 = *(_QWORD *)(v0 + 88);
  v7 = *(_QWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 24) = *(_OWORD *)(v0 + 64);
  v8 = type metadata accessor for FlowAuthority(255, v6, v4, v5);
  v9 = sub_20E4A4778();
  MEMORY[0x212BBBCE0](v9);
  *(_QWORD *)(v0 + 192) = sub_20E4412A4(v8);
  swift_release();
  sub_20E4060F8(v7, v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    v10 = *(_QWORD *)(v0 + 136);
    v11 = *(_QWORD *)(v0 + 80);
    swift_release();
    sub_20E43A2FC(v10);
    v14 = type metadata accessor for ToastActionImplementation.PresentationError(0, v11, v12, v13);
    MEMORY[0x212BBDF90](&unk_20E4AD120, v14);
    swift_allocError();
    *v15 = 0;
    swift_willThrow();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 152) + 32))(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144));
    sub_20E4A5834();
    v17 = sub_20E4A6440();
    v19 = v18;
    sub_20E4A623C();
    v21 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_254A1B710 + dword_254A1B710);
    v20 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 200) = v20;
    *v20 = v0;
    v20[1] = sub_20E439B74;
    return v21(v17, v19, 0, 0, 1);
  }
}

uint64_t sub_20E439B74()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 208) = v0;
  swift_task_dealloc();
  (*(void (**)(_QWORD, _QWORD))(v2[15] + 8))(v2[16], v2[14]);
  return swift_task_switch();
}

uint64_t sub_20E439BE4()
{
  uint64_t v0;
  uint64_t v1;
  BOOL v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;

  v1 = *(_QWORD *)(v0 + 160);
  swift_release();
  v2 = sub_20E405A7C(v1);
  v6 = *(_QWORD *)(v0 + 152);
  v5 = *(_QWORD *)(v0 + 160);
  v7 = *(_QWORD *)(v0 + 144);
  if (v2)
  {
    (*(void (**)(_QWORD, _QWORD))(v6 + 8))(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 144));
    swift_release();
  }
  else
  {
    v8 = type metadata accessor for ToastActionImplementation.PresentationError(0, *(_QWORD *)(v0 + 80), v3, v4);
    MEMORY[0x212BBDF90](&unk_20E4AD120, v8);
    swift_allocError();
    *v9 = 1;
    swift_willThrow();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20E439D08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 152);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20E439D80()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E439DB4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_20E3B50B0;
  return sub_20E439884(a1, v8, v9, v10, v4, v5, v6, v7);
}

uint64_t ToastActionImplementation.perform(_:asPartOf:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20E43A000(a1, a3);
}

uint64_t sub_20E439E4C(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t);

  v4[2] = a1;
  v4[3] = sub_20E4A5DF8();
  v4[4] = sub_20E4A5DEC();
  v9 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v7 = (_QWORD *)swift_task_alloc();
  v4[5] = v7;
  *v7 = v4;
  v7[1] = sub_20E439ED8;
  return v9(a4);
}

uint64_t sub_20E439ED8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc();
  sub_20E4A5DBC();
  return swift_task_switch();
}

uint64_t sub_20E439F60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  swift_release();
  v2 = *MEMORY[0x24BE5CBF0];
  v3 = sub_20E4A4CB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(v1, v2, v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20E439FC4()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20E439FF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20E43A000(a1, a3);
}

uint64_t sub_20E43A000(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A190F8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_20E4A5840();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = *v2;
  v12 = v2[1];
  (*(void (**)(char *, uint64_t, uint64_t, double))(v9 + 16))((char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8, v11);
  v14 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v15 = (char *)swift_allocObject();
  *((_QWORD *)v15 + 2) = *(_QWORD *)(a2 + 16);
  *((_QWORD *)v15 + 3) = v13;
  *((_QWORD *)v15 + 4) = v12;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v15[v14], (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A19610);
  swift_retain();
  v16 = sub_20E4A59A8();
  v17 = sub_20E4A5E58();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v7, 1, 1, v17);
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = 0;
  v18[3] = 0;
  v18[4] = &unk_254A1ADF0;
  v18[5] = v15;
  v18[6] = v16;
  swift_retain();
  sub_20E474E94((uint64_t)v7, (uint64_t)&unk_254A19618, (uint64_t)v18);
  swift_release();
  return v16;
}

uint64_t sub_20E43A1A8()
{
  return MEMORY[0x24BE5DF80];
}

uint64_t type metadata accessor for ToastActionImplementation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ToastActionImplementation);
}

uint64_t sub_20E43A1C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_20E4A5840();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_20E43A234(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_20E4A5840() - 8) + 80);
  v5 = *(int **)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = v1 + ((v4 + 40) & ~v4);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_20E3B4E08;
  return sub_20E439E4C(a1, v5, v6, v7);
}

uint64_t sub_20E43A2C8()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E43A2FC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED2428);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for ToastActionImplementation.PresentationError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ToastActionImplementation.PresentationError);
}

uint64_t sub_20E43A348()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_20E43A350(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_20E43A39C + 4 * byte_20E4AD005[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_20E43A3D0 + 4 * asc_20E4AD000[v4]))();
}

uint64_t sub_20E43A3D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20E43A3D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20E43A3E0);
  return result;
}

uint64_t sub_20E43A3EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20E43A3F4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_20E43A3F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20E43A400(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_20E43A40C()
{
  JUMPOUT(0x212BBDF90);
}

uint64_t View.shelfGridPagingDecoration<A, B, C>(transaction:backward:forward:mask:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  __int128 v23;
  uint64_t v24;

  swift_getKeyPath();
  sub_20E43A6CC(a1, a2, a3, a4, a5, a6, a7, a9, &v23, a10, a11, a13, a14, a15);
  v24 = v23;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_20E4A4250();
  swift_release();
  sub_20E43A7E4((uint64_t)&v24);
  swift_release();
  swift_release();
  return swift_release();
}

__n128 sub_20E43A574@<Q0>(uint64_t a1@<X8>)
{
  __n128 result;
  uint64_t v3;
  __n128 v4;
  __int128 v5;
  __int128 v6;

  sub_20E43B11C();
  sub_20E4A3C08();
  result = v4;
  *(_QWORD *)a1 = v3;
  *(__n128 *)(a1 + 8) = v4;
  *(_OWORD *)(a1 + 24) = v5;
  *(_OWORD *)(a1 + 40) = v6;
  return result;
}

__n128 sub_20E43A5D0@<Q0>(uint64_t a1@<X8>)
{
  __n128 result;
  uint64_t v3;
  __n128 v4;
  __int128 v5;
  __int128 v6;

  sub_20E43B11C();
  sub_20E4A3C08();
  result = v4;
  *(_QWORD *)a1 = v3;
  *(__n128 *)(a1 + 8) = v4;
  *(_OWORD *)(a1 + 24) = v5;
  *(_OWORD *)(a1 + 40) = v6;
  return result;
}

uint64_t sub_20E43A634()
{
  sub_20E43B11C();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return sub_20E4A3C14();
}

_QWORD *sub_20E43A6CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *result;

  v18 = (_QWORD *)swift_allocObject();
  v18[2] = a8;
  v18[3] = a10;
  v18[4] = a11;
  v18[5] = a12;
  v18[6] = a13;
  v18[7] = a14;
  v18[8] = a2;
  v18[9] = a3;
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = a8;
  v19[3] = a10;
  v19[4] = a11;
  v19[5] = a12;
  v19[6] = a13;
  v19[7] = a14;
  v19[8] = a4;
  v19[9] = a5;
  result = (_QWORD *)swift_allocObject();
  result[2] = a8;
  result[3] = a10;
  result[4] = a11;
  result[5] = a12;
  result[6] = a13;
  result[7] = a14;
  result[8] = a6;
  result[9] = a7;
  *a9 = a1;
  a9[1] = sub_20E43B098;
  a9[2] = v18;
  a9[3] = sub_20E43B0A4;
  a9[4] = v19;
  a9[5] = sub_20E43B108;
  a9[6] = result;
  return result;
}

uint64_t sub_20E43A7E4(uint64_t a1)
{
  swift_release();
  return a1;
}

uint64_t sub_20E43A80C()
{
  return sub_20E43A8B8();
}

uint64_t sub_20E43A818(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  void (*v10)(double);
  uint64_t v11;
  uint64_t v13;

  v6 = *(_QWORD *)(a5 - 8);
  v7 = MEMORY[0x24BDAC7A8](a1);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10(v7);
  v11 = sub_20E3C3B10((uint64_t)v9);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, a5);
  return v11;
}

uint64_t sub_20E43A8AC()
{
  return sub_20E43A8B8();
}

uint64_t sub_20E43A8B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1AE90);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v9 - v5;
  swift_retain();
  sub_20E4A4694();
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v3, v6, v0);
  sub_20E39D010(qword_254A1AE98, &qword_254A1AE90, MEMORY[0x24BDF43B0]);
  v7 = sub_20E4A4718();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
  return v7;
}

uint64_t sub_20E43A9D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  void (*v11)(double);
  uint64_t v12;
  uint64_t v14;

  v7 = *(_QWORD *)(a6 - 8);
  v8 = MEMORY[0x24BDAC7A8](a1);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11(v8);
  v12 = sub_20E3C3B10((uint64_t)v10);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, a6);
  return v12;
}

uint64_t sub_20E43AA6C()
{
  sub_20E4A4538();
  return sub_20E4A4718();
}

uint64_t sub_20E43AAA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  void (*v10)(double);
  uint64_t v11;
  uint64_t v13;

  v6 = *(_QWORD *)(a5 - 8);
  v7 = MEMORY[0x24BDAC7A8](a1);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10(v7);
  v11 = sub_20E3C3B10((uint64_t)v9);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, a5);
  return v11;
}

uint64_t sub_20E43AB38@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_20E4A4598();
  *a1 = result;
  return result;
}

uint64_t sub_20E43AB78@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_20E4A4598();
  *a1 = result;
  return result;
}

uint64_t sub_20E43ABBC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  sub_20E4A48D4();
  result = sub_20E4A371C();
  *a1 = result;
  a1[1] = (uint64_t)sub_20E43A80C;
  a1[2] = 0;
  a1[3] = (uint64_t)sub_20E43A8AC;
  a1[4] = 0;
  a1[5] = (uint64_t)sub_20E43AA6C;
  a1[6] = 0;
  return result;
}

uint64_t View.shelfGridPagingDecoration<A, B, C, D>(transaction:backward:forward:leadingMask:trailingMask:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v21;

  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = sub_20E43A41C;
  *(_QWORD *)(v21 + 24) = 0;
  View.shelfGridPagingDecoration<A, B, C>(transaction:backward:forward:mask:)(a1, a2, a3, a4, a5, (uint64_t)sub_20E43AD10, v21, a10, a11, a12, MEMORY[0x24BDF3E48], a15, a16, a17, MEMORY[0x24BDF3E20]);
  return swift_release();
}

uint64_t sub_20E43ACEC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E43AD10@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  return result;
}

uint64_t sub_20E43AD38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 32);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1AE78);
  v2 = sub_20E4A39D4();
  v4[0] = v1;
  v4[1] = sub_20E39D010(&qword_254A1AE80, &qword_254A1AE78, MEMORY[0x24BDF1028]);
  return MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v2, v4);
}

uint64_t sub_20E43ADBC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 40);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1AE78);
  v2 = sub_20E4A39D4();
  v4[0] = v1;
  v4[1] = sub_20E39D010(&qword_254A1AE80, &qword_254A1AE78, MEMORY[0x24BDF1028]);
  return MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v2, v4);
}

uint64_t destroy for _ShelfGridPagingDecoration()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for _ShelfGridPagingDecoration(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  uint64_t v4;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = v4;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for _ShelfGridPagingDecoration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *a1 = *a2;
  swift_retain();
  swift_release();
  v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_retain();
  swift_release();
  v5 = a2[4];
  a1[3] = a2[3];
  a1[4] = v5;
  swift_retain();
  swift_release();
  v6 = a2[6];
  a1[5] = a2[5];
  a1[6] = v6;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for _ShelfGridPagingDecoration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  v4 = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = v4;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for _ShelfGridPagingDecoration(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for _ShelfGridPagingDecoration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for _ShelfGridPagingDecoration()
{
  return &type metadata for _ShelfGridPagingDecoration;
}

uint64_t sub_20E43B098(uint64_t a1, uint64_t a2)
{
  return sub_20E43B0B0(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_20E43A818);
}

uint64_t sub_20E43B0A4(uint64_t a1, uint64_t a2)
{
  return sub_20E43B0B0(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_20E43A9D8);
}

uint64_t sub_20E43B0B0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v3;

  return a3(a1, a2, v3[8], v3[9], v3[2], v3[3], v3[4], v3[5], v3[6], v3[7]);
}

uint64_t sub_20E43B0E4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E43B108()
{
  uint64_t *v0;

  return sub_20E43AAA4(v0[8], v0[9], v0[2], v0[3], v0[4]);
}

unint64_t sub_20E43B11C()
{
  unint64_t result;

  result = qword_254A1AE88;
  if (!qword_254A1AE88)
  {
    result = MEMORY[0x212BBDF90](&unk_20E4AD1D0, &type metadata for _ShelfGridPagingDecorationsKey);
    atomic_store(result, (unint64_t *)&qword_254A1AE88);
  }
  return result;
}

ValueMetadata *type metadata accessor for _ShelfGridPagingDecorationsKey()
{
  return &type metadata for _ShelfGridPagingDecorationsKey;
}

_QWORD *initializeBufferWithCopyOfBuffer for _MediaArtworkFetchProgress(_QWORD *a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF)
    v4 = v3;
  *a1 = v3;
  return a1;
}

void destroy for _MediaArtworkFetchProgress(void **a1)
{
  void *v1;

  v1 = *a1;
  if ((unint64_t)v1 >= 0xFFFFFFFF)

}

void **assignWithCopy for _MediaArtworkFetchProgress(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;
  void *v6;
  id v7;

  v3 = *a1;
  v4 = *a2;
  if ((unint64_t)v3 < 0xFFFFFFFF)
  {
    if ((unint64_t)v4 >= 0xFFFFFFFF)
      v7 = v4;
    *a1 = v4;
  }
  else if ((unint64_t)v4 < 0xFFFFFFFF)
  {

    *a1 = *a2;
  }
  else
  {
    v5 = v4;
    v6 = *a1;
    *a1 = v4;

  }
  return a1;
}

void **assignWithTake for _MediaArtworkFetchProgress(void **a1, unint64_t *a2)
{
  void *v3;
  unint64_t v4;

  v3 = *a1;
  v4 = *a2;
  if ((unint64_t)v3 < 0xFFFFFFFF)
    goto LABEL_6;
  if (v4 < 0xFFFFFFFF)
  {

LABEL_6:
    *a1 = (void *)v4;
    return a1;
  }
  *a1 = (void *)v4;

  return a1;
}

uint64_t getEnumTagSinglePayload for _MediaArtworkFetchProgress(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFD && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483645);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 2;
  if (v4 >= 4)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for _MediaArtworkFetchProgress(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for _MediaArtworkFetchProgress()
{
  return &type metadata for _MediaArtworkFetchProgress;
}

uint64_t sub_20E43B374(uint64_t a1)
{
  void *v2;

  if (*(_QWORD *)(a1 + 24))
    __swift_destroy_boxed_opaque_existential_1(a1);
  swift_release();
  swift_release();
  swift_release();
  sub_20E3CBDA8(*(_QWORD *)(a1 + 88), *(_BYTE *)(a1 + 96));
  sub_20E3CBDA8(*(_QWORD *)(a1 + 104), *(_BYTE *)(a1 + 112));
  v2 = *(void **)(a1 + 120);
  if ((unint64_t)v2 >= 4)

  return swift_release();
}

uint64_t sub_20E43B3E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  void *v11;
  id v12;

  v4 = *(_QWORD *)(a2 + 24);
  if (v4)
  {
    v5 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v4;
    *(_QWORD *)(a1 + 32) = v5;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
  }
  else
  {
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  }
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v7;
  v8 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  v9 = *(_BYTE *)(a2 + 96);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_20E3CBD0C(v8, v9);
  *(_QWORD *)(a1 + 88) = v8;
  *(_BYTE *)(a1 + 96) = v9;
  v10 = *(_QWORD *)(a2 + 104);
  LOBYTE(v8) = *(_BYTE *)(a2 + 112);
  sub_20E3CBD0C(v10, v8);
  *(_QWORD *)(a1 + 104) = v10;
  *(_BYTE *)(a1 + 112) = v8;
  v11 = *(void **)(a2 + 120);
  if ((unint64_t)v11 < 3)
    goto LABEL_8;
  if (v11 != (void *)3)
  {
    v12 = v11;
LABEL_8:
    *(_QWORD *)(a1 + 120) = v11;
    goto LABEL_9;
  }
  *(_QWORD *)(a1 + 120) = 3;
LABEL_9:
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_retain();
  return a1;
}

uint64_t sub_20E43B4F8(uint64_t a1, __int128 *a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  void *v17;
  uint64_t *v18;
  void *v19;
  uint64_t v20;
  id v21;
  id v23;
  void *v24;

  v4 = *((_QWORD *)a2 + 3);
  if (*(_QWORD *)(a1 + 24))
  {
    if (v4)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
      goto LABEL_8;
    }
    __swift_destroy_boxed_opaque_existential_1(a1);
  }
  else if (v4)
  {
    *(_QWORD *)(a1 + 24) = v4;
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    (**(void (***)(uint64_t, __int128 *))(v4 - 8))(a1, a2);
    goto LABEL_8;
  }
  v5 = *a2;
  v6 = a2[1];
  *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
  *(_OWORD *)a1 = v5;
  *(_OWORD *)(a1 + 16) = v6;
LABEL_8:
  *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
  *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
  swift_retain();
  swift_release();
  v7 = *((_QWORD *)a2 + 8);
  *(_QWORD *)(a1 + 56) = *((_QWORD *)a2 + 7);
  *(_QWORD *)(a1 + 64) = v7;
  swift_retain();
  swift_release();
  v8 = *((_QWORD *)a2 + 10);
  *(_QWORD *)(a1 + 72) = *((_QWORD *)a2 + 9);
  *(_QWORD *)(a1 + 80) = v8;
  swift_retain();
  swift_release();
  v9 = *((_QWORD *)a2 + 11);
  v10 = *((_BYTE *)a2 + 96);
  sub_20E3CBD0C(v9, v10);
  v11 = *(_QWORD *)(a1 + 88);
  v12 = *(_BYTE *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = v9;
  *(_BYTE *)(a1 + 96) = v10;
  sub_20E3CBDA8(v11, v12);
  v13 = *((_QWORD *)a2 + 13);
  v14 = *((_BYTE *)a2 + 112);
  sub_20E3CBD0C(v13, v14);
  v15 = *(_QWORD *)(a1 + 104);
  v16 = *(_BYTE *)(a1 + 112);
  *(_QWORD *)(a1 + 104) = v13;
  *(_BYTE *)(a1 + 112) = v14;
  sub_20E3CBDA8(v15, v16);
  v18 = (uint64_t *)(a1 + 120);
  v17 = *(void **)(a1 + 120);
  v19 = (void *)*((_QWORD *)a2 + 15);
  if (v17 == (void *)3)
  {
    if ((unint64_t)v19 >= 3)
    {
      if (v19 == (void *)3)
      {
        v20 = 3;
LABEL_21:
        *v18 = v20;
        goto LABEL_22;
      }
      goto LABEL_16;
    }
    goto LABEL_17;
  }
  if (v19 == (void *)3)
  {
    sub_20E43B6C0((void **)(a1 + 120));
LABEL_20:
    v20 = *((_QWORD *)a2 + 15);
    goto LABEL_21;
  }
  if ((unint64_t)v17 >= 3)
  {
    if ((unint64_t)v19 >= 3)
    {
      v23 = v19;
      v24 = (void *)*v18;
      *v18 = (uint64_t)v19;

      goto LABEL_22;
    }

    goto LABEL_20;
  }
  if ((unint64_t)v19 >= 3)
LABEL_16:
    v21 = v19;
LABEL_17:
  *v18 = (uint64_t)v19;
LABEL_22:
  *(_QWORD *)(a1 + 128) = *((_QWORD *)a2 + 16);
  swift_retain();
  swift_release();
  return a1;
}

void **sub_20E43B6C0(void **a1)
{
  void *v2;

  v2 = *a1;
  if ((unint64_t)v2 >= 0xFFFFFFFF)

  return a1;
}

__n128 __swift_memcpy136_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  result = *(__n128 *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t sub_20E43B728(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  char v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  char v10;
  void *v11;
  unint64_t *v12;
  unint64_t v13;

  if (*(_QWORD *)(a1 + 24))
    __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_release();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_release();
  v5 = *(_BYTE *)(a2 + 96);
  v6 = *(_QWORD *)(a1 + 88);
  v7 = *(_BYTE *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 96) = v5;
  sub_20E3CBDA8(v6, v7);
  v8 = *(_BYTE *)(a2 + 112);
  v9 = *(_QWORD *)(a1 + 104);
  v10 = *(_BYTE *)(a1 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = v8;
  sub_20E3CBDA8(v9, v10);
  v12 = (unint64_t *)(a1 + 120);
  v11 = *(void **)(a1 + 120);
  v13 = *(_QWORD *)(a2 + 120);
  if (v11 == (void *)3)
  {
    if (v13 != 3)
    {
      *v12 = v13;
      goto LABEL_14;
    }
LABEL_8:
    *v12 = 3;
    goto LABEL_14;
  }
  if (v13 == 3)
  {
    sub_20E43B6C0((void **)(a1 + 120));
    goto LABEL_8;
  }
  if ((unint64_t)v11 >= 3)
  {
    if (v13 >= 3)
    {
      *v12 = v13;

    }
    else
    {

      *v12 = v13;
    }
  }
  else
  {
    *v12 = v13;
  }
LABEL_14:
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_release();
  return a1;
}

uint64_t sub_20E43B868(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 136))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_20E43B8B0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 136) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 56) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 136) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for _MediaArtworkImage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _MediaArtworkImage);
}

uint64_t sub_20E43B91C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E43B950@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  char v9;
  uint64_t result;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  _BYTE v16[32];
  _OWORD v17[2];

  v4 = sub_20E4A4E68();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20E4A4E74();
  if (*(_QWORD *)(a1 + 16) && (v8 = sub_20E3BCCAC((uint64_t)v7), (v9 & 1) != 0))
  {
    sub_20E3BB3A0(*(_QWORD *)(a1 + 56) + 32 * v8, (uint64_t)&v13);
  }
  else
  {
    v13 = 0u;
    v14 = 0u;
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (*((_QWORD *)&v14 + 1))
  {
    sub_20E3B8B34(&v13, v17);
    sub_20E3BB3A0((uint64_t)v17, (uint64_t)v16);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A300);
    if ((swift_dynamicCast() & 1) != 0)
    {
      result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
      v11 = v14;
      *(_OWORD *)a2 = v13;
      *(_OWORD *)(a2 + 16) = v11;
      *(_QWORD *)(a2 + 32) = v15;
    }
    else
    {
      v15 = 0;
      v13 = 0u;
      v14 = 0u;
      v12 = sub_20E39D1F8((uint64_t)&v13, &qword_254A1AF68);
      MEMORY[0x24BDAC7A8](v12);
      *((_QWORD *)&v13 - 2) = v17;
      sub_20E4A5228();
      sub_20E4A4C10();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
    }
  }
  else
  {
    sub_20E39D1F8((uint64_t)&v13, &qword_254A1A2F8);
    return sub_20E4A4C10();
  }
  return result;
}

uint64_t sub_20E43BB0C()
{
  sub_20E4A61A0();
  sub_20E4A5C6C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A300);
  sub_20E4A626C();
  sub_20E4A5C6C();
  sub_20E4A5C6C();
  sub_20E4A5C6C();
  sub_20E4A5C6C();
  sub_20E4A5C6C();
  return 0;
}

void sub_20E43BC28()
{
  uint64_t v0;
  void *v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1AF70);
  sub_20E4A464C();
  if (v1 != (void *)3)
  {
    (*(void (**)())(v0 + 56))();
    sub_20E43F184(v1);
  }
}

uint64_t sub_20E43BC94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t OpaqueTypeConformance2;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  double v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  void (*v60)(char *, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  uint64_t v82;
  _QWORD *v83;
  void (*v84)(uint64_t, uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD v109[2];
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  uint64_t v118;
  __int128 v119;
  uint64_t v120;
  _QWORD v121[2];
  _QWORD v122[2];

  v3 = v2;
  v107 = a2;
  v108 = *(_QWORD *)(a1 + 16);
  v5 = sub_20E4A39D4();
  v6 = sub_20E4A39D4();
  v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1AF20);
  v93 = a1;
  v9 = MEMORY[0x24BDF0910];
  v122[0] = *(_QWORD *)(a1 + 24);
  v8 = v122[0];
  v122[1] = MEMORY[0x24BDF0910];
  v10 = MEMORY[0x24BDED308];
  v121[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v5, v122);
  v121[1] = v9;
  v11 = MEMORY[0x212BBDF90](v10, v6, v121);
  v12 = sub_20E3B2920(&qword_254A1AF28, &qword_254A1AF20, (uint64_t (*)(void))sub_20E43EB68);
  *(_QWORD *)&v110 = v6;
  *((_QWORD *)&v110 + 1) = v7;
  *(_QWORD *)&v111 = v11;
  *((_QWORD *)&v111 + 1) = v12;
  v13 = MEMORY[0x24BDF38E8];
  v14 = MEMORY[0x212BBDF30](255, &v110, MEMORY[0x24BDF38E8], 0);
  v15 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1AF38);
  *(_QWORD *)&v110 = v6;
  *((_QWORD *)&v110 + 1) = v7;
  *(_QWORD *)&v111 = v11;
  *((_QWORD *)&v111 + 1) = v12;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v17 = sub_20E3B2920(&qword_254A1AF40, &qword_254A1AF38, (uint64_t (*)(void))sub_20E43EBAC);
  *(_QWORD *)&v110 = v14;
  *((_QWORD *)&v110 + 1) = v15;
  *(_QWORD *)&v111 = OpaqueTypeConformance2;
  *((_QWORD *)&v111 + 1) = v17;
  v18 = MEMORY[0x212BBDF30](255, &v110, v13, 0);
  *(_QWORD *)&v110 = v14;
  *((_QWORD *)&v110 + 1) = v15;
  *(_QWORD *)&v111 = OpaqueTypeConformance2;
  *((_QWORD *)&v111 + 1) = v17;
  v99 = v18;
  v97 = swift_getOpaqueTypeConformance2();
  v19 = sub_20E4A35FC();
  v98 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v92 = (char *)&v88 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v100 = (uint64_t *)((char *)&v88 - v22);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A0C8);
  v94 = *(_QWORD *)(v23 - 8);
  v24 = *(_QWORD *)(v94 + 64);
  MEMORY[0x24BDAC7A8](v23);
  v95 = (uint64_t)&v88 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25);
  v96 = (uint64_t)&v88 - v26;
  MEMORY[0x24BDAC7A8](v27);
  v91 = (char *)&v88 - v28;
  v105 = v8;
  v30 = type metadata accessor for _AsyncTaskImage(0, v108, v8, v29);
  v89 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v32 = (char *)&v88 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v33);
  v90 = (char *)&v88 - v34;
  v35 = sub_20E4A5E58();
  v36 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v38 = (char *)&v88 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = v30;
  v101 = v19;
  v104 = sub_20E4A3E00();
  v103 = *(_QWORD *)(v104 - 8);
  MEMORY[0x24BDAC7A8](v104);
  v102 = (char *)&v88 - v39;
  v40 = *(_QWORD *)(v3 + 88);
  LOBYTE(v30) = *(_BYTE *)(v3 + 96);
  sub_20E3CBD0C(v40, v30);
  v41 = sub_20E45CB5C(v40, v30);
  sub_20E3CBDA8(v40, v30);
  v42 = *(_QWORD *)(v3 + 104);
  LOBYTE(v18) = *(_BYTE *)(v3 + 112);
  sub_20E3CBD0C(v42, v18);
  v43 = sub_20E45C988(v42, v18);
  sub_20E3CBDA8(v42, v18);
  v44 = *(double *)(v3 + 40);
  sub_20E4A5E10();
  sub_20E3A5E20(v3, (uint64_t)&v119, &qword_254A19100);
  if (v120)
  {
    sub_20E3B1AB4(&v119, (uint64_t)&v110);
    v45 = *((_QWORD *)&v111 + 1);
    v46 = v112;
    v47 = __swift_project_boxed_opaque_existential_1(&v110, *((uint64_t *)&v111 + 1));
    v48 = sub_20E49B64C((uint64_t)v47, v41, v43, 1, (uint64_t)v38, v45, v46, v44);
    v50 = v49;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v110);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v38, v35);
    if (v48)
    {
      v51 = v50;
      v52 = *(_QWORD *)(v3 + 48);
      v53 = *(_QWORD *)(v3 + 56);
      v54 = *(_QWORD *)(v3 + 64);
      v55 = *(_QWORD *)(v3 + 72);
      v56 = *(_QWORD *)(v3 + 80);
      sub_20E3E592C(v48);
      swift_retain();
      swift_retain();
      swift_retain();
      sub_20E43C684(v48, v51, v52, v53, v54, v55, v56, v108, (uint64_t)v32, v105);
      v57 = v106;
      v58 = MEMORY[0x212BBDF90](&unk_20E4AD380, v106);
      v59 = v90;
      sub_20E39D614(v90, v32, v57, v58);
      v60 = *(void (**)(char *, uint64_t))(v89 + 8);
      v60(v32, v57);
      sub_20E39D618((uint64_t)v59, v57, (uint64_t)v32);
      v61 = v101;
      MEMORY[0x212BBDF90](MEMORY[0x24BDEAF78], v101);
      v62 = (uint64_t)v102;
      sub_20E3DC6B0((uint64_t)v32, v57);
      sub_20E3CF5C0(v48);
      v60(v32, v57);
      v60(v59, v57);
      v63 = v107;
      v64 = v104;
      v65 = v103;
      goto LABEL_9;
    }
  }
  else
  {
    sub_20E39D1F8((uint64_t)&v119, &qword_254A19100);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v38, v35);
  }
  sub_20E3A5E20(v3, (uint64_t)&v110, &qword_254A19100);
  if (*((_QWORD *)&v111 + 1))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254A1AF58);
    v66 = sub_20E4A3344();
    v67 = (uint64_t)v91;
    v68 = swift_dynamicCast();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 56))(v67, v68 ^ 1u, 1, v66);
  }
  else
  {
    sub_20E39D1F8((uint64_t)&v110, &qword_254A19100);
    v69 = sub_20E4A3344();
    v67 = (uint64_t)v91;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 56))(v91, 1, 1, v69);
  }
  v61 = v101;
  v70 = v108;
  v71 = v93;
  v72 = (uint64_t)v92;
  sub_20E3A5E20(v67, v96, &qword_254A1A0C8);
  (*(void (**)(__int128 *, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 16))(&v110, v3, v71);
  v73 = v95;
  sub_20E3A5E20(v67, v95, &qword_254A1A0C8);
  v74 = (*(unsigned __int8 *)(v94 + 80) + 168) & ~(unint64_t)*(unsigned __int8 *)(v94 + 80);
  v75 = swift_allocObject();
  v76 = v67;
  v77 = v105;
  *(_QWORD *)(v75 + 16) = v70;
  *(_QWORD *)(v75 + 24) = v77;
  v78 = v117;
  *(_OWORD *)(v75 + 128) = v116;
  *(_OWORD *)(v75 + 144) = v78;
  *(_QWORD *)(v75 + 160) = v118;
  v79 = v113;
  *(_OWORD *)(v75 + 64) = v112;
  *(_OWORD *)(v75 + 80) = v79;
  v80 = v115;
  *(_OWORD *)(v75 + 96) = v114;
  *(_OWORD *)(v75 + 112) = v80;
  v81 = v111;
  *(_OWORD *)(v75 + 32) = v110;
  *(_OWORD *)(v75 + 48) = v81;
  sub_20E43ED2C(v73, v75 + v74);
  swift_retain();
  sub_20E4A35F0();
  v82 = MEMORY[0x212BBDF90](MEMORY[0x24BDEAF78], v61);
  v83 = v100;
  sub_20E39D614(v100, v72, v61, v82);
  v84 = *(void (**)(uint64_t, uint64_t))(v98 + 8);
  v84(v72, v61);
  sub_20E39D618((uint64_t)v83, v61, v72);
  v57 = v106;
  MEMORY[0x212BBDF90](&unk_20E4AD380, v106);
  v62 = (uint64_t)v102;
  sub_20E39CBE0(v72, v57, v61);
  v84(v72, v61);
  v84((uint64_t)v83, v61);
  sub_20E39D1F8(v76, &qword_254A1A0C8);
  v64 = v104;
  v65 = v103;
  v63 = v107;
LABEL_9:
  v85 = MEMORY[0x212BBDF90](&unk_20E4AD380, v57);
  v86 = MEMORY[0x212BBDF90](MEMORY[0x24BDEAF78], v61);
  v109[0] = v85;
  v109[1] = v86;
  MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v64, v109);
  sub_20E39D618(v62, v64, v63);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v65 + 8))(v62, v64);
}

uint64_t sub_20E43C684@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _OWORD v33[2];
  uint64_t v34;
  uint64_t v35;

  v31 = a6;
  v32 = a7;
  v29 = a4;
  v30 = a5;
  v15 = sub_20E4A398C();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = (int *)type metadata accessor for _AsyncTaskImage(0, a8, a10, v19);
  v34 = 0;
  memset(v33, 0, sizeof(v33));
  sub_20E43D4EC((uint64_t)v33);
  v21 = v20[10];
  v35 = 3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1AF60);
  sub_20E4A4640();
  *(_OWORD *)(a9 + v21) = v33[0];
  v22 = a9 + v20[15];
  *(_QWORD *)v22 = swift_getKeyPath();
  *(_BYTE *)(v22 + 8) = 0;
  (*(void (**)(char *, _QWORD, uint64_t))(v16 + 104))(v18, *MEMORY[0x24BDECD10], v15);
  result = sub_20E4A4640();
  v24 = (_QWORD *)(a9 + v20[11]);
  *v24 = a1;
  v24[1] = a2;
  *(_QWORD *)(a9 + v20[12]) = a3;
  v25 = (_QWORD *)(a9 + v20[13]);
  v26 = v30;
  *v25 = v29;
  v25[1] = v26;
  v27 = (_QWORD *)(a9 + v20[14]);
  v28 = v32;
  *v27 = v31;
  v27[1] = v28;
  return result;
}

uint64_t sub_20E43C808@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t OpaqueTypeConformance2;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  unint64_t v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  unint64_t v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  void *v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t v103;
  void (*v104)(char *, uint64_t);
  uint64_t v106;
  uint64_t v107;
  char *v108;
  void (*v109)(char *, uint64_t, uint64_t);
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  _QWORD *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  void (*v145)(__int128 *, uint64_t, uint64_t);
  uint64_t v146;
  id v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  uint64_t v156;
  _QWORD v157[2];
  _QWORD v158[2];

  v136 = a5;
  v141 = a4;
  v144 = a3;
  v146 = a2;
  v137 = a1;
  v134 = a6;
  v114 = sub_20E4A398C();
  v113 = *(_QWORD *)(v114 - 8);
  v115 = *(_QWORD *)(v113 + 64);
  MEMORY[0x24BDAC7A8](v114);
  v112 = (char *)&v106 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A0C8);
  v143 = *(_QWORD *)(v9 - 8);
  v10 = *(_QWORD *)(v143 + 64);
  MEMORY[0x24BDAC7A8](v9);
  v111 = (uint64_t)&v106 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = *(_QWORD *)(a4 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v108 = (char *)&v106 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_20E4A39D4();
  v123 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v140 = (char *)&v106 - v14;
  v118 = v13;
  v15 = sub_20E4A39D4();
  v124 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v139 = (char *)&v106 - v16;
  v17 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1AF20);
  v18 = MEMORY[0x24BDF0910];
  v158[0] = a5;
  v158[1] = MEMORY[0x24BDF0910];
  v19 = MEMORY[0x24BDED308];
  v117 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v13, v158);
  v157[0] = v117;
  v157[1] = v18;
  v20 = MEMORY[0x212BBDF90](v19, v15, v157);
  v21 = sub_20E3B2920(&qword_254A1AF28, &qword_254A1AF20, (uint64_t (*)(void))sub_20E43EB68);
  *(_QWORD *)&v148 = v15;
  *((_QWORD *)&v148 + 1) = v17;
  v119 = v15;
  v122 = v17;
  *(_QWORD *)&v149 = v20;
  *((_QWORD *)&v149 + 1) = v21;
  v121 = v20;
  v120 = v21;
  v22 = MEMORY[0x24BDF38E8];
  v23 = MEMORY[0x212BBDF30](0, &v148, MEMORY[0x24BDF38E8], 0);
  v132 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v142 = (char *)&v106 - v24;
  v25 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1AF38);
  *(_QWORD *)&v148 = v15;
  *((_QWORD *)&v148 + 1) = v17;
  *(_QWORD *)&v149 = v20;
  *((_QWORD *)&v149 + 1) = v21;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v27 = sub_20E3B2920(&qword_254A1AF40, &qword_254A1AF38, (uint64_t (*)(void))sub_20E43EBAC);
  v133 = v23;
  *(_QWORD *)&v148 = v23;
  *((_QWORD *)&v148 + 1) = v25;
  v131 = v25;
  v129 = OpaqueTypeConformance2;
  *(_QWORD *)&v149 = OpaqueTypeConformance2;
  *((_QWORD *)&v149 + 1) = v27;
  v127 = v27;
  v130 = MEMORY[0x212BBDF30](0, &v148, v22, 0);
  v128 = *(_QWORD *)(v130 - 8);
  MEMORY[0x24BDAC7A8](v130);
  v125 = (char *)&v106 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = MEMORY[0x24BDAC7A8](v29);
  v126 = (uint64_t *)((char *)&v106 - v31);
  v32 = v146;
  v33 = v137;
  (*(void (**)(uint64_t, double))(v146 + 72))(v137, v30);
  v34 = v111;
  sub_20E3A5E20(v144, v111, &qword_254A1A0C8);
  v35 = v113;
  v109 = *(void (**)(char *, uint64_t, uint64_t))(v113 + 16);
  v36 = v112;
  v37 = v114;
  v109(v112, v33, v114);
  v38 = v141;
  v39 = v136;
  v135 = type metadata accessor for _MediaArtworkImage(0, v141, v136, v40);
  v145 = *(void (**)(__int128 *, uint64_t, uint64_t))(*(_QWORD *)(v135 - 8) + 16);
  v145(&v148, v32, v135);
  v41 = *(unsigned __int8 *)(v143 + 80);
  v42 = (v41 + 32) & ~v41;
  v43 = v42 + v10;
  v110 = v42 + v10;
  v143 = v42;
  v44 = v41 | 7;
  v138 = v41 | 7;
  v45 = *(unsigned __int8 *)(v35 + 80);
  v46 = v35;
  v47 = (v43 + v45) & ~v45;
  v106 = v44 | v45;
  v107 = v47;
  v48 = (v115 + v47 + 7) & 0xFFFFFFFFFFFFFFF8;
  v115 = v48 + 136;
  v49 = swift_allocObject();
  *(_QWORD *)(v49 + 16) = v38;
  *(_QWORD *)(v49 + 24) = v39;
  v50 = v49 + v42;
  v51 = v34;
  sub_20E43ED2C(v34, v50);
  v113 = *(_QWORD *)(v46 + 32);
  v52 = v36;
  ((void (*)(uint64_t, char *, uint64_t))v113)(v49 + v47, v36, v37);
  v53 = v49 + v48;
  v54 = v155;
  *(_OWORD *)(v53 + 96) = v154;
  *(_OWORD *)(v53 + 112) = v54;
  *(_QWORD *)(v53 + 128) = v156;
  v55 = v151;
  *(_OWORD *)(v53 + 32) = v150;
  *(_OWORD *)(v53 + 48) = v55;
  v56 = v153;
  *(_OWORD *)(v53 + 64) = v152;
  *(_OWORD *)(v53 + 80) = v56;
  v57 = v149;
  *(_OWORD *)v53 = v148;
  *(_OWORD *)(v53 + 16) = v57;
  v58 = v38;
  v59 = v108;
  sub_20E4A44C0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v116 + 8))(v59, v58);
  v60 = v144;
  v61 = v51;
  sub_20E3A5E20(v144, v51, &qword_254A1A0C8);
  v62 = v37;
  v109(v52, v137, v37);
  v63 = v146;
  v145(&v148, v146, v135);
  v64 = v61;
  v65 = swift_allocObject();
  *(_QWORD *)(v65 + 16) = v58;
  *(_QWORD *)(v65 + 24) = v39;
  sub_20E43ED2C(v64, v65 + v143);
  ((void (*)(uint64_t, char *, uint64_t))v113)(v65 + v107, v52, v62);
  v66 = v65 + v48;
  v67 = v60;
  v68 = v155;
  *(_OWORD *)(v66 + 96) = v154;
  *(_OWORD *)(v66 + 112) = v68;
  *(_QWORD *)(v66 + 128) = v156;
  v69 = v151;
  *(_OWORD *)(v66 + 32) = v150;
  *(_OWORD *)(v66 + 48) = v69;
  v70 = v153;
  *(_OWORD *)(v66 + 64) = v152;
  *(_OWORD *)(v66 + 80) = v70;
  v71 = v149;
  *(_OWORD *)v66 = v148;
  *(_OWORD *)(v66 + 16) = v71;
  v72 = v118;
  v73 = v140;
  sub_20E4A425C();
  swift_release();
  v74 = v72;
  v75 = v135;
  (*(void (**)(char *, uint64_t))(v123 + 8))(v73, v74);
  v147 = (id)sub_20E4A3980();
  sub_20E3A5E20(v67, v64, &qword_254A1A0C8);
  v145(&v148, v63, v75);
  v76 = (v110 + 7) & 0xFFFFFFFFFFFFFFF8;
  v77 = swift_allocObject();
  *(_QWORD *)(v77 + 16) = v58;
  *(_QWORD *)(v77 + 24) = v39;
  sub_20E43ED2C(v64, v77 + v143);
  v78 = v77 + v76;
  v79 = v155;
  *(_OWORD *)(v78 + 96) = v154;
  *(_OWORD *)(v78 + 112) = v79;
  *(_QWORD *)(v78 + 128) = v156;
  v80 = v151;
  *(_OWORD *)(v78 + 32) = v150;
  *(_OWORD *)(v78 + 48) = v80;
  v81 = v153;
  *(_OWORD *)(v78 + 64) = v152;
  *(_OWORD *)(v78 + 80) = v81;
  v82 = v149;
  *(_OWORD *)v78 = v148;
  *(_OWORD *)(v78 + 16) = v82;
  v83 = v119;
  v84 = v139;
  sub_20E4A44CC();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v124 + 8))(v84, v83);
  v85 = sub_20E4A3974();
  if (v85)
  {
    v86 = (void *)v85;
    v87 = (void *)sub_20E4A32D8();

  }
  else
  {
    v87 = 0;
  }
  v147 = v87;
  sub_20E3A5E20(v144, v64, &qword_254A1A0C8);
  v145(&v148, v146, v75);
  v88 = swift_allocObject();
  v89 = v136;
  *(_QWORD *)(v88 + 16) = v141;
  *(_QWORD *)(v88 + 24) = v89;
  sub_20E43ED2C(v64, v88 + v143);
  v90 = v88 + v76;
  v91 = v155;
  *(_OWORD *)(v90 + 96) = v154;
  *(_OWORD *)(v90 + 112) = v91;
  *(_QWORD *)(v90 + 128) = v156;
  v92 = v151;
  *(_OWORD *)(v90 + 32) = v150;
  *(_OWORD *)(v90 + 48) = v92;
  v93 = v153;
  *(_OWORD *)(v90 + 64) = v152;
  *(_OWORD *)(v90 + 80) = v93;
  v94 = v149;
  *(_OWORD *)v90 = v148;
  *(_OWORD *)(v90 + 16) = v94;
  v95 = v125;
  v96 = v133;
  v97 = v131;
  v98 = v129;
  v99 = v127;
  v100 = v142;
  sub_20E4A44CC();
  swift_release();

  (*(void (**)(char *, uint64_t))(v132 + 8))(v100, v96);
  *(_QWORD *)&v148 = v96;
  *((_QWORD *)&v148 + 1) = v97;
  *(_QWORD *)&v149 = v98;
  *((_QWORD *)&v149 + 1) = v99;
  v101 = swift_getOpaqueTypeConformance2();
  v102 = v126;
  v103 = v130;
  sub_20E39D614(v126, v95, v130, v101);
  v104 = *(void (**)(char *, uint64_t))(v128 + 8);
  v104(v95, v103);
  sub_20E39D618((uint64_t)v102, v103, v134);
  return ((uint64_t (*)(_QWORD *, uint64_t))v104)(v102, v103);
}

void sub_20E43D22C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;

  v11 = sub_20E4A398C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_20E4A3344();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(a1, 1, v15) != 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a2, v11);
    v16 = (*(uint64_t (**)(char *, uint64_t))(v12 + 88))(v14, v11);
    v17 = *MEMORY[0x24BDECD10];
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    if (v16 == v17)
    {
      type metadata accessor for _MediaArtworkImage(0, a4, a5, v18);
      sub_20E43F1A4(a6);
    }
  }
}

void sub_20E43D348(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  void *v13;

  v9 = *a2;
  v10 = sub_20E4A3344();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(a3, 1, v10) != 1
    && v9 != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254A1AF70);
    sub_20E4A464C();
    if (v13)
    {
      if (v13 != (void *)3)
        sub_20E43F184(v13);
    }
    else
    {
      type metadata accessor for _MediaArtworkImage(0, a5, a6, v12);
      sub_20E43F1A4((void *)1);
    }
  }
}

void sub_20E43D40C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v9;
  uint64_t v10;
  id v12;
  uint64_t v13;
  void *v14;

  v9 = *a2;
  v10 = sub_20E4A3344();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(a3, 1, v10) != 1
    && v9 != 0)
  {
    v12 = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254A1AF70);
    sub_20E4A464C();
    if (v14)
    {
      if (v14 != (void *)3)
        sub_20E43F184(v14);
    }
    else
    {
      type metadata accessor for _MediaArtworkImage(0, a5, a6, v13);
      sub_20E43F1A4(v9);
    }

  }
}

uint64_t sub_20E43D4E0(uint64_t *a1, unint64_t *a2)
{
  return sub_20E43EA64(*a1, *a2);
}

uint64_t sub_20E43D4EC(uint64_t a1)
{
  _BYTE v3[40];

  sub_20E3A5E20(a1, (uint64_t)v3, &qword_254A1AF68);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1AF68);
  sub_20E4A4640();
  return sub_20E39D1F8(a1, &qword_254A1AF68);
}

void sub_20E43D554(uint64_t a1)
{
  uint64_t v1;
  void *v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1AF70);
  sub_20E4A464C();
  if (v3 != (void *)3)
  {
    (*(void (**)())(v1 + *(int *)(a1 + 52)))();
    sub_20E43F184(v3);
  }
}

uint64_t sub_20E43D5D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  void (*v31)(char *, uint64_t);
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD v48[2];
  uint64_t v49;
  _BYTE v50[48];

  v44 = a2;
  v4 = sub_20E4A5E58();
  v42 = *(_QWORD *)(v4 - 8);
  v43 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = *(_QWORD *)(a1 - 8);
  v37 = *(_QWORD *)(v6 + 64);
  v38 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v35 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = sub_20E4A4574();
  v40 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v34 = (char *)&v33 - v11;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1B008);
  v12 = sub_20E4A39D4();
  v41 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v36 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v39 = (uint64_t *)((char *)&v33 - v15);
  v16 = *(_QWORD *)(a1 + 24);
  v45 = v9;
  v46 = v16;
  v47 = v2;
  sub_20E4A4568();
  v17 = v2 + *(int *)(a1 + 60);
  v18 = *(_QWORD *)v17;
  v19 = *(_BYTE *)(v17 + 8);
  sub_20E3CBD0C(*(_QWORD *)v17, v19);
  v20 = sub_20E45C988(v18, v19);
  sub_20E3CBDA8(v18, v19);
  sub_20E43B950(v20, (uint64_t)v50);
  swift_bridgeObjectRelease();
  v21 = v35;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v35, v2, a1);
  v22 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = v9;
  *(_QWORD *)(v23 + 24) = v16;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v23 + v22, v21, a1);
  v49 = v16;
  v24 = MEMORY[0x212BBDF90](MEMORY[0x24BDF3F50], v10, &v49);
  v25 = v38;
  sub_20E478AE8();
  v26 = v36;
  v27 = v34;
  sub_20E4A4400();
  swift_release();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v25, v43);
  sub_20E3B8008((uint64_t)v50);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v27, v10);
  v28 = sub_20E39D010(&qword_254A1B020, &qword_254A1B008, MEMORY[0x24BDEECB8]);
  v48[0] = v24;
  v48[1] = v28;
  v29 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v12, v48);
  v30 = v39;
  sub_20E39D614(v39, v26, v12, v29);
  v31 = *(void (**)(char *, uint64_t))(v41 + 8);
  v31(v26, v12);
  sub_20E39D618((uint64_t)v30, v12, v44);
  return ((uint64_t (*)(_QWORD *, uint64_t))v31)(v30, v12);
}

uint64_t sub_20E43D954@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  void (*v19)(char *);
  void (*v20)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;

  v22 = a3;
  v23 = a4;
  v7 = sub_20E4A398C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (uint64_t *)((char *)&v22 - v16);
  v19 = *(void (**)(char *))(a1 + *(int *)(type metadata accessor for _AsyncTaskImage(0, a2, a3, v18) + 56));
  __swift_instantiateConcreteTypeFromMangledName(qword_254A1AF78);
  sub_20E4A464C();
  v19(v10);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_20E39D614(v17, v14, a2, v22);
  v20 = *(void (**)(char *, uint64_t))(v11 + 8);
  v20(v14, a2);
  sub_20E39D618((uint64_t)v17, a2, v23);
  return ((uint64_t (*)(_QWORD *, uint64_t))v20)(v17, a2);
}

uint64_t sub_20E43DABC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[41] = a2;
  v4[42] = a3;
  v4[40] = a1;
  v5 = type metadata accessor for _AsyncTaskImage(0, a2, a3, a4);
  v4[43] = v5;
  v4[44] = *(_QWORD *)(v5 - 8);
  v4[45] = swift_task_alloc();
  v4[46] = sub_20E4A5DF8();
  v4[47] = sub_20E4A5DEC();
  v4[48] = sub_20E4A5DBC();
  v4[49] = v6;
  return swift_task_switch();
}

uint64_t sub_20E43DB58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;

  v1 = *(_QWORD *)(v0 + 320) + *(int *)(*(_QWORD *)(v0 + 344) + 60);
  v2 = *(_QWORD *)v1;
  v3 = *(_BYTE *)(v1 + 8);
  sub_20E3CBD0C(*(_QWORD *)v1, v3);
  v4 = sub_20E45C988(v2, v3);
  sub_20E3CBDA8(v2, v3);
  sub_20E43B950(v4, v0 + 176);
  swift_bridgeObjectRelease();
  sub_20E3B7F84(v0 + 176, v0 + 96);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1B028);
  sub_20E4A464C();
  sub_20E3A5E20(v0 + 96, v0 + 16, &qword_254A1AF68);
  sub_20E3A5E20(v0 + 136, v0 + 56, &qword_254A1AF68);
  if (!*(_QWORD *)(v0 + 40))
  {
    sub_20E39D1F8(v0 + 136, &qword_254A1AF68);
    sub_20E39D1F8(v0 + 96, &qword_254A1AF68);
    if (!*(_QWORD *)(v0 + 80))
    {
      v10 = *(_QWORD *)(v0 + 352);
      v9 = *(_QWORD *)(v0 + 360);
      v11 = *(_QWORD *)(v0 + 344);
      v12 = *(_QWORD *)(v0 + 320);
      sub_20E39D1F8(v0 + 16, &qword_254A1AF68);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v9, v12, v11);
      goto LABEL_7;
    }
LABEL_11:
    v19 = *(_QWORD *)(v0 + 352);
    v18 = *(_QWORD *)(v0 + 360);
    v20 = *(_QWORD *)(v0 + 344);
    v21 = *(_QWORD *)(v0 + 320);
    sub_20E39D1F8(v0 + 16, &qword_254A1B030);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v18, v21, v20);
LABEL_12:
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 352) + 8))(*(_QWORD *)(v0 + 360), *(_QWORD *)(v0 + 344));
    goto LABEL_13;
  }
  sub_20E3A5E20(v0 + 16, v0 + 256, &qword_254A1AF68);
  if (!*(_QWORD *)(v0 + 80))
  {
    sub_20E39D1F8(v0 + 136, &qword_254A1AF68);
    sub_20E39D1F8(v0 + 96, &qword_254A1AF68);
    sub_20E3B8008(v0 + 256);
    goto LABEL_11;
  }
  v5 = *(_QWORD *)(v0 + 352);
  v28 = *(_QWORD *)(v0 + 344);
  v29 = *(_QWORD *)(v0 + 360);
  v6 = *(_QWORD *)(v0 + 320);
  v7 = *(_OWORD *)(v0 + 72);
  *(_OWORD *)(v0 + 216) = *(_OWORD *)(v0 + 56);
  *(_OWORD *)(v0 + 232) = v7;
  *(_QWORD *)(v0 + 248) = *(_QWORD *)(v0 + 88);
  v8 = MEMORY[0x212BBD72C](v0 + 256, v0 + 216);
  sub_20E3B8008(v0 + 216);
  sub_20E39D1F8(v0 + 136, &qword_254A1AF68);
  sub_20E39D1F8(v0 + 96, &qword_254A1AF68);
  sub_20E3B8008(v0 + 256);
  sub_20E39D1F8(v0 + 16, &qword_254A1AF68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v29, v6, v28);
  if ((v8 & 1) == 0)
    goto LABEL_12;
LABEL_7:
  v14 = *(_QWORD *)(v0 + 352);
  v13 = *(_QWORD *)(v0 + 360);
  v15 = *(_QWORD *)(v0 + 344);
  *(_OWORD *)(v0 + 296) = *(_OWORD *)(v13 + *(int *)(v15 + 40));
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1AF70);
  sub_20E4A464C();
  v16 = *(void **)(v0 + 312);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  if (v16 != (void *)3)
  {
    sub_20E43F184(v16);
    if (v16 == (void *)1)
    {
      swift_release();
      sub_20E3B8008(v0 + 176);
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
  }
LABEL_13:
  v23 = *(_QWORD *)(v0 + 328);
  v22 = *(_QWORD *)(v0 + 336);
  v24 = *(_QWORD *)(v0 + 320);
  v25 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 400) = v25;
  v25[2] = v23;
  v25[3] = v22;
  v25[4] = v24;
  v25[5] = v0 + 176;
  v26 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 408) = v26;
  v26[2] = v23;
  v26[3] = v22;
  v26[4] = v24;
  *(_QWORD *)(v0 + 416) = sub_20E4A5DEC();
  v27 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 424) = v27;
  *v27 = v0;
  v27[1] = sub_20E43DEF4;
  return sub_20E4A6368();
}

uint64_t sub_20E43DEF4()
{
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20E43DF64()
{
  uint64_t v0;

  swift_release();
  sub_20E3B8008(v0 + 176);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20E43DFAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[16] = a4;
  v5[17] = a5;
  v5[14] = a2;
  v5[15] = a3;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18AC8);
  v5[18] = v6;
  v5[19] = *(_QWORD *)(v6 - 8);
  v5[20] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19128);
  v5[21] = v7;
  v5[22] = *(_QWORD *)(v7 - 8);
  v5[23] = swift_task_alloc();
  v5[24] = sub_20E4A5DF8();
  v5[25] = sub_20E4A5DEC();
  v5[26] = sub_20E4A5DBC();
  v5[27] = v8;
  return swift_task_switch();
}

uint64_t sub_20E43E078()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v10;

  v1 = v0[20];
  v10 = v0[19];
  v3 = v0[17];
  v2 = v0[18];
  v4 = v0[16];
  v5 = v0[14];
  sub_20E3B7F84(v0[15], (uint64_t)(v0 + 2));
  v7 = type metadata accessor for _AsyncTaskImage(0, v4, v3, v6);
  v0[28] = v7;
  sub_20E3A5E20((uint64_t)(v0 + 2), (uint64_t)(v0 + 7), &qword_254A1AF68);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1B028);
  sub_20E4A4658();
  sub_20E39D1F8((uint64_t)(v0 + 2), &qword_254A1AF68);
  sub_20E4403DC(0, v7);
  (*(void (**)(void))(v5 + *(int *)(v7 + 44)))();
  sub_20E4A49AC();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v1, v2);
  v0[29] = sub_20E4A5DEC();
  sub_20E39D010((unint64_t *)&qword_254A19130, &qword_254A19128, MEMORY[0x24BE5C5E0]);
  v8 = (_QWORD *)swift_task_alloc();
  v0[30] = v8;
  *v8 = v0;
  v8[1] = sub_20E43E1F0;
  return sub_20E4A5DD4();
}

uint64_t sub_20E43E1F0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  *(_QWORD *)(*v1 + 248) = v0;
  swift_task_dealloc();
  v3 = *(_QWORD *)(v2 + 232);
  if (v0)
  {
    if (v3)
      goto LABEL_5;
  }
  else if (v3)
  {
LABEL_5:
    swift_getObjectType();
    sub_20E4A5DBC();
  }
  return swift_task_switch();
}

uint64_t sub_20E43E2B4()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 256) = *(_QWORD *)(v0 + 96);
  return swift_task_switch();
}

uint64_t sub_20E43E2F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 256);
  if (!v1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 176) + 8))(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 168));
    swift_release();
    if ((sub_20E4A5E70() & 1) == 0)
      sub_20E4403DC((void *)1, *(_QWORD *)(v0 + 224));
    goto LABEL_6;
  }
  if ((sub_20E4A5E70() & 1) != 0)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 176) + 8))(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 168));
    swift_release();
    swift_release();
LABEL_6:
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v3 = *(_QWORD *)(v0 + 112);
  v4 = swift_task_alloc();
  *(_OWORD *)(v4 + 16) = *(_OWORD *)(v0 + 128);
  *(_QWORD *)(v4 + 32) = v3;
  *(_QWORD *)(v4 + 40) = v1;
  sub_20E4A3A28();
  swift_release();
  swift_task_dealloc();
  *(_QWORD *)(v0 + 232) = sub_20E4A5DEC();
  sub_20E39D010((unint64_t *)&qword_254A19130, &qword_254A19128, MEMORY[0x24BE5C5E0]);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 240) = v5;
  *v5 = v0;
  v5[1] = sub_20E43E1F0;
  return sub_20E4A5DD4();
}

uint64_t sub_20E43E498()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 104) = *(_QWORD *)(v0 + 248);
  __swift_instantiateConcreteTypeFromMangledName(qword_253ED2880);
  swift_willThrowTypedImpl();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_20E43E500()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v9;

  v1 = *(void **)(v0 + 248);
  v2 = *(_QWORD *)(v0 + 224);
  v4 = *(_QWORD *)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 184);
  v5 = *(_QWORD *)(v0 + 168);
  v6 = *(_QWORD *)(v0 + 112);
  v9 = *(_OWORD *)(v0 + 128);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  v7 = swift_task_alloc();
  *(_OWORD *)(v7 + 16) = v9;
  *(_QWORD *)(v7 + 32) = v6;
  *(_QWORD *)(v7 + 40) = v1;
  sub_20E4A3A28();
  swift_task_dealloc();
  sub_20E4403DC(v1, v2);

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20E43E5EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  _QWORD v12[2];

  v3 = sub_20E4A398C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v12 - v9;
  *(_QWORD *)((char *)v12 - v9) = a2;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v4 + 104))((char *)v12 - v9, *MEMORY[0x24BDECD30], v3, v8);
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v10, v3);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(qword_254A1AF78);
  sub_20E4A4658();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v10, v3);
}

uint64_t sub_20E43E6EC(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  id v11;
  _QWORD v13[2];

  v3 = sub_20E4A398C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v13 - v9;
  *(_QWORD *)((char *)v13 - v9) = a2;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v4 + 104))((char *)v13 - v9, *MEMORY[0x24BDECD28], v3, v8);
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v10, v3);
  v11 = a2;
  __swift_instantiateConcreteTypeFromMangledName(qword_254A1AF78);
  sub_20E4A4658();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v10, v3);
}

uint64_t sub_20E43E7EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v20;

  v7 = type metadata accessor for _AsyncTaskImage(0, a2, a3, a4);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v20 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A190F8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_20E4A5E58();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  sub_20E4A5DF8();
  v15 = sub_20E4A5DEC();
  v16 = (*(unsigned __int8 *)(v8 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v17 = (char *)swift_allocObject();
  v18 = MEMORY[0x24BEE6930];
  *((_QWORD *)v17 + 2) = v15;
  *((_QWORD *)v17 + 3) = v18;
  *((_QWORD *)v17 + 4) = a2;
  *((_QWORD *)v17 + 5) = a3;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v17[v16], v10, v7);
  sub_20E3D1A10((uint64_t)v13, (uint64_t)&unk_254A1B050, (uint64_t)v17);
  return swift_release();
}

uint64_t sub_20E43E950(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[6] = a5;
  v6[7] = a6;
  v6[5] = a4;
  sub_20E4A5DF8();
  v6[8] = sub_20E4A5DEC();
  sub_20E4A5DBC();
  return swift_task_switch();
}

uint64_t sub_20E43E9C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48);
  swift_release();
  v5 = type metadata accessor for _AsyncTaskImage(0, v2, v1, v4);
  *(_OWORD *)(v0 + 16) = *(_OWORD *)(v3 + *(int *)(v5 + 40));
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1AF70);
  sub_20E4A464C();
  v6 = *(_QWORD *)(v0 + 32);
  if (v6 != 3)
  {
    sub_20E43F184(*(id *)(v0 + 32));
    if (!v6)
      sub_20E4403DC((void *)2, v5);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20E43EA64(uint64_t a1, unint64_t a2)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *boxed_opaque_existential_1Tm;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v10[5];
  uint64_t v11;
  uint64_t v12[5];
  uint64_t v13;

  v2 = a2;
  if (a1)
  {
    if (a1 == 1)
    {
      if (a2 == 1)
        return v2 & 1;
      goto LABEL_11;
    }
    if (a1 != 2)
    {
      if (a2 >= 3)
      {
        swift_getErrorValue();
        v3 = v12[4];
        v4 = v13;
        v12[3] = v13;
        boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v12);
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(boxed_opaque_existential_1Tm, v3, v4);
        swift_getErrorValue();
        v6 = v10[4];
        v7 = v11;
        v10[3] = v11;
        v8 = __swift_allocate_boxed_opaque_existential_1Tm(v10);
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v8, v6, v7);
        v2 = sub_20E4A53FC();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
        return v2 & 1;
      }
      goto LABEL_11;
    }
    if (a2 != 2)
    {
LABEL_11:
      v2 = 0;
      return v2 & 1;
    }
  }
  else if (a2)
  {
    goto LABEL_11;
  }
  v2 = 1;
  return v2 & 1;
}

unint64_t sub_20E43EB68()
{
  unint64_t result;

  result = qword_254A1AF30;
  if (!qword_254A1AF30)
  {
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDF4118], MEMORY[0x24BDF4108]);
    atomic_store(result, (unint64_t *)&qword_254A1AF30);
  }
  return result;
}

unint64_t sub_20E43EBAC()
{
  unint64_t result;
  unint64_t v1;

  result = qword_254A1AF48;
  if (!qword_254A1AF48)
  {
    v1 = sub_20E43EBF4();
    result = MEMORY[0x212BBDF90](MEMORY[0x24BEE5BE0], v1);
    atomic_store(result, (unint64_t *)&qword_254A1AF48);
  }
  return result;
}

unint64_t sub_20E43EBF4()
{
  unint64_t result;

  result = qword_254A1AF50;
  if (!qword_254A1AF50)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_254A1AF50);
  }
  return result;
}

uint64_t type metadata accessor for _AsyncTaskImage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _AsyncTaskImage);
}

uint64_t sub_20E43EC3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254A1A0C8) - 8) + 80);
  if (*(_QWORD *)(v0 + 56))
    __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  v2 = (v1 + 168) & ~v1;
  swift_release();
  swift_release();
  swift_release();
  sub_20E3CBDA8(*(_QWORD *)(v0 + 120), *(_BYTE *)(v0 + 128));
  sub_20E3CBDA8(*(_QWORD *)(v0 + 136), *(_BYTE *)(v0 + 144));
  v3 = *(void **)(v0 + 152);
  if ((unint64_t)v3 >= 4)

  swift_release();
  v4 = sub_20E4A3344();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v0 + v2, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v2, v4);
  return swift_deallocObject();
}

uint64_t sub_20E43ED2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A0C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20E43ED74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254A1A0C8) - 8) + 80);
  return sub_20E43C808(a1, v2 + 32, v2 + ((v7 + 168) & ~v7), v5, v6, a2);
}

void sub_20E43EDE8()
{
  sub_20E43EF44(0);
}

uint64_t objectdestroy_2Tm_1()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254A1A0C8) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = sub_20E4A398C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (v2 + v3 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = v0 + v2;
  v9 = sub_20E4A3344();
  v10 = *(_QWORD *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v6, v4);
  v11 = v0 + v7;
  if (*(_QWORD *)(v0 + v7 + 24))
    __swift_destroy_boxed_opaque_existential_1(v0 + v7);
  swift_release();
  swift_release();
  swift_release();
  sub_20E3CBDA8(*(_QWORD *)(v11 + 88), *(_BYTE *)(v11 + 96));
  sub_20E3CBDA8(*(_QWORD *)(v11 + 104), *(_BYTE *)(v11 + 112));
  v12 = *(void **)(v11 + 120);
  if ((unint64_t)v12 >= 4)

  swift_release();
  return swift_deallocObject();
}

void sub_20E43EF3C()
{
  sub_20E43EF44((void *)2);
}

void sub_20E43EF44(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v5 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254A1A0C8) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(_QWORD *)(sub_20E4A398C() - 8);
  v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  sub_20E43D22C(v1 + v6, v1 + v9, v1 + ((*(_QWORD *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8), v3, v4, a1);
}

uint64_t sub_20E43EFE0(uint64_t a1, uint64_t a2)
{
  return sub_20E43F0FC(a1, a2, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t, uint64_t, uint64_t))sub_20E43D348);
}

uint64_t objectdestroy_8Tm()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254A1A0C8) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  v4 = v0 + v2;
  v5 = sub_20E4A3344();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v7 = v0 + v3;
  if (*(_QWORD *)(v0 + v3 + 24))
    __swift_destroy_boxed_opaque_existential_1(v0 + v3);
  swift_release();
  swift_release();
  swift_release();
  sub_20E3CBDA8(*(_QWORD *)(v7 + 88), *(_BYTE *)(v7 + 96));
  sub_20E3CBDA8(*(_QWORD *)(v7 + 104), *(_BYTE *)(v7 + 112));
  v8 = *(void **)(v7 + 120);
  if ((unint64_t)v8 >= 4)

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E43F0F0(uint64_t a1, uint64_t a2)
{
  return sub_20E43F0FC(a1, a2, (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t, uint64_t, uint64_t))sub_20E43D40C);
}

uint64_t sub_20E43F0FC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, unint64_t, uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254A1A0C8) - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  return a3(a1, a2, v3 + v9, v3 + ((*(_QWORD *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8), v6, v7);
}

void sub_20E43F184(id a1)
{
  if (a1 != (id)3)
    sub_20E43F194(a1);
}

void sub_20E43F194(id a1)
{
  if ((unint64_t)a1 >= 3)

}

void sub_20E43F1A4(void *a1)
{
  sub_20E43F20C(a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1AF70);
  sub_20E4A4658();
  sub_20E43BC28();
}

id sub_20E43F20C(id result)
{
  if (result != (id)3)
    return sub_20E43F21C(result);
  return result;
}

id sub_20E43F21C(id result)
{
  if ((unint64_t)result >= 3)
    return result;
  return result;
}

void sub_20E43F22C()
{
  unint64_t v0;

  sub_20E43FD38();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t *sub_20E43F2CC(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  _QWORD *v17;
  char *v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char v38;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) == 0)
  {
    v7 = sub_20E4A398C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = __swift_instantiateConcreteTypeFromMangledName(qword_254A1AF78);
    *(uint64_t *)((char *)a1 + *(int *)(v8 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(v8 + 28));
    v9 = a3[9];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = *(uint64_t *)((char *)a2 + v9 + 24);
    swift_retain();
    if (v12)
    {
      v13 = *((_QWORD *)v11 + 4);
      *((_QWORD *)v10 + 3) = v12;
      *((_QWORD *)v10 + 4) = v13;
      (**(void (***)(char *, char *, uint64_t))(v12 - 8))(v10, v11, v12);
    }
    else
    {
      v15 = *((_OWORD *)v11 + 1);
      *(_OWORD *)v10 = *(_OWORD *)v11;
      *((_OWORD *)v10 + 1) = v15;
      *((_QWORD *)v10 + 4) = *((_QWORD *)v11 + 4);
    }
    *((_QWORD *)v10 + 5) = *((_QWORD *)v11 + 5);
    v16 = a3[10];
    v17 = (uint64_t *)((char *)a1 + v16);
    v18 = (char *)a2 + v16;
    v19 = *(void **)((char *)a2 + v16);
    swift_retain();
    if ((unint64_t)v19 >= 3)
    {
      if (v19 == (void *)3)
      {
        *v17 = 3;
LABEL_11:
        v17[1] = *((_QWORD *)v18 + 1);
        v21 = a3[11];
        v22 = a3[12];
        v23 = (uint64_t *)((char *)a1 + v21);
        v24 = (uint64_t *)((char *)a2 + v21);
        v25 = v24[1];
        *v23 = *v24;
        v23[1] = v25;
        *(uint64_t *)((char *)a1 + v22) = *(uint64_t *)((char *)a2 + v22);
        v26 = a3[13];
        v27 = a3[14];
        v28 = (uint64_t *)((char *)a1 + v26);
        v29 = (uint64_t *)((char *)a2 + v26);
        v30 = v29[1];
        *v28 = *v29;
        v28[1] = v30;
        v31 = (uint64_t *)((char *)a1 + v27);
        v32 = (uint64_t *)((char *)a2 + v27);
        v33 = v32[1];
        *v31 = *v32;
        v31[1] = v33;
        v34 = a3[15];
        v35 = (char *)a1 + v34;
        v36 = (char *)a2 + v34;
        v37 = *(_QWORD *)v36;
        v38 = v36[8];
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        sub_20E3CBD0C(v37, v38);
        *(_QWORD *)v35 = v37;
        v35[8] = v38;
        return a1;
      }
      v20 = v19;
    }
    *v17 = v19;
    goto LABEL_11;
  }
  v14 = *a2;
  *a1 = *a2;
  a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t sub_20E43F490(uint64_t a1, int *a2)
{
  uint64_t v4;
  void *v5;

  v4 = sub_20E4A398C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  __swift_instantiateConcreteTypeFromMangledName(qword_254A1AF78);
  swift_release();
  if (*(_QWORD *)(a1 + a2[9] + 24))
    __swift_destroy_boxed_opaque_existential_1(a1 + a2[9]);
  swift_release();
  v5 = *(void **)(a1 + a2[10]);
  if ((unint64_t)v5 >= 4)

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return sub_20E3CBDA8(*(_QWORD *)(a1 + a2[15]), *(_BYTE *)(a1 + a2[15] + 8));
}

uint64_t sub_20E43F57C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;

  v6 = sub_20E4A398C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName(qword_254A1AF78);
  *(_QWORD *)(a1 + *(int *)(v7 + 28)) = *(_QWORD *)(a2 + *(int *)(v7 + 28));
  v8 = a3[9];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = *(_QWORD *)(a2 + v8 + 24);
  swift_retain();
  if (v11)
  {
    v12 = *(_QWORD *)(v10 + 32);
    *(_QWORD *)(v9 + 24) = v11;
    *(_QWORD *)(v9 + 32) = v12;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v11 - 8))(v9, v10, v11);
  }
  else
  {
    v13 = *(_OWORD *)(v10 + 16);
    *(_OWORD *)v9 = *(_OWORD *)v10;
    *(_OWORD *)(v9 + 16) = v13;
    *(_QWORD *)(v9 + 32) = *(_QWORD *)(v10 + 32);
  }
  *(_QWORD *)(v9 + 40) = *(_QWORD *)(v10 + 40);
  v14 = a3[10];
  v15 = (_QWORD *)(a1 + v14);
  v16 = a2 + v14;
  v17 = *(void **)(a2 + v14);
  swift_retain();
  if ((unint64_t)v17 < 3)
    goto LABEL_8;
  if (v17 != (void *)3)
  {
    v18 = v17;
LABEL_8:
    *v15 = v17;
    goto LABEL_9;
  }
  *v15 = 3;
LABEL_9:
  v15[1] = *(_QWORD *)(v16 + 8);
  v19 = a3[11];
  v20 = a3[12];
  v21 = (_QWORD *)(a1 + v19);
  v22 = (_QWORD *)(a2 + v19);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  *(_QWORD *)(a1 + v20) = *(_QWORD *)(a2 + v20);
  v24 = a3[13];
  v25 = a3[14];
  v26 = (_QWORD *)(a1 + v24);
  v27 = (_QWORD *)(a2 + v24);
  v28 = v27[1];
  *v26 = *v27;
  v26[1] = v28;
  v29 = (_QWORD *)(a1 + v25);
  v30 = (_QWORD *)(a2 + v25);
  v31 = v30[1];
  *v29 = *v30;
  v29[1] = v31;
  v32 = a3[15];
  v33 = a1 + v32;
  v34 = a2 + v32;
  v35 = *(_QWORD *)v34;
  v36 = *(_BYTE *)(v34 + 8);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_20E3CBD0C(v35, v36);
  *(_QWORD *)v33 = v35;
  *(_BYTE *)(v33 + 8) = v36;
  return a1;
}

uint64_t sub_20E43F714(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  char v41;
  id v43;
  void *v44;

  v6 = sub_20E4A398C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName(qword_254A1AF78);
  *(_QWORD *)(a1 + *(int *)(v7 + 28)) = *(_QWORD *)(a2 + *(int *)(v7 + 28));
  swift_retain();
  swift_release();
  v8 = a3[9];
  v9 = a1 + v8;
  v10 = (uint64_t *)(a2 + v8);
  v11 = *(_QWORD *)(a2 + v8 + 24);
  if (*(_QWORD *)(a1 + v8 + 24))
  {
    if (v11)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)v9, v10);
    }
    else
    {
      sub_20E3B8008(v9);
      v12 = v10[4];
      v13 = *((_OWORD *)v10 + 1);
      *(_OWORD *)v9 = *(_OWORD *)v10;
      *(_OWORD *)(v9 + 16) = v13;
      *(_QWORD *)(v9 + 32) = v12;
    }
  }
  else if (v11)
  {
    *(_QWORD *)(v9 + 24) = v11;
    *(_QWORD *)(v9 + 32) = v10[4];
    (**(void (***)(uint64_t, __int128 *))(v11 - 8))(v9, (__int128 *)v10);
  }
  else
  {
    v14 = *(_OWORD *)v10;
    v15 = *((_OWORD *)v10 + 1);
    *(_QWORD *)(v9 + 32) = v10[4];
    *(_OWORD *)v9 = v14;
    *(_OWORD *)(v9 + 16) = v15;
  }
  *(_QWORD *)(v9 + 40) = v10[5];
  swift_retain();
  swift_release();
  v16 = a3[10];
  v17 = (uint64_t *)(a1 + v16);
  v18 = (uint64_t *)(a2 + v16);
  v19 = *(void **)(a1 + v16);
  v20 = *(void **)(a2 + v16);
  if (v19 == (void *)3)
  {
    if ((unint64_t)v20 >= 3)
    {
      if (v20 == (void *)3)
      {
        v21 = 3;
LABEL_21:
        *v17 = v21;
        goto LABEL_22;
      }
      goto LABEL_16;
    }
    goto LABEL_17;
  }
  if (v20 == (void *)3)
  {
    sub_20E43B6C0((void **)(a1 + v16));
LABEL_20:
    v21 = *v18;
    goto LABEL_21;
  }
  if ((unint64_t)v19 >= 3)
  {
    if ((unint64_t)v20 >= 3)
    {
      v43 = v20;
      v44 = (void *)*v17;
      *v17 = (uint64_t)v20;

      goto LABEL_22;
    }

    goto LABEL_20;
  }
  if ((unint64_t)v20 >= 3)
LABEL_16:
    v22 = v20;
LABEL_17:
  *v17 = (uint64_t)v20;
LABEL_22:
  v17[1] = v18[1];
  swift_retain();
  swift_release();
  v23 = a3[11];
  v24 = (_QWORD *)(a1 + v23);
  v25 = (_QWORD *)(a2 + v23);
  v26 = v25[1];
  *v24 = *v25;
  v24[1] = v26;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  swift_retain();
  swift_release();
  v27 = a3[13];
  v28 = (_QWORD *)(a1 + v27);
  v29 = (_QWORD *)(a2 + v27);
  v30 = v29[1];
  *v28 = *v29;
  v28[1] = v30;
  swift_retain();
  swift_release();
  v31 = a3[14];
  v32 = (_QWORD *)(a1 + v31);
  v33 = (_QWORD *)(a2 + v31);
  v34 = v33[1];
  *v32 = *v33;
  v32[1] = v34;
  swift_retain();
  swift_release();
  v35 = a3[15];
  v36 = a1 + v35;
  v37 = a2 + v35;
  v38 = *(_QWORD *)v37;
  v39 = *(_BYTE *)(v37 + 8);
  sub_20E3CBD0C(*(_QWORD *)v37, v39);
  v40 = *(_QWORD *)v36;
  v41 = *(_BYTE *)(v36 + 8);
  *(_QWORD *)v36 = v38;
  *(_BYTE *)(v36 + 8) = v39;
  sub_20E3CBDA8(v40, v41);
  return a1;
}

uint64_t sub_20E43F98C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  __int128 *v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = sub_20E4A398C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName(qword_254A1AF78);
  *(_QWORD *)(a1 + *(int *)(v7 + 28)) = *(_QWORD *)(a2 + *(int *)(v7 + 28));
  v8 = a3[9];
  v9 = a3[10];
  v10 = (_OWORD *)(a1 + v8);
  v11 = (__int128 *)(a2 + v8);
  v12 = v11[2];
  v13 = *v11;
  v10[1] = v11[1];
  v10[2] = v12;
  *v10 = v13;
  *(_OWORD *)(a1 + v9) = *(_OWORD *)(a2 + v9);
  v14 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  *(_QWORD *)(a1 + v14) = *(_QWORD *)(a2 + v14);
  v15 = a3[14];
  *(_OWORD *)(a1 + a3[13]) = *(_OWORD *)(a2 + a3[13]);
  *(_OWORD *)(a1 + v15) = *(_OWORD *)(a2 + v15);
  v16 = a3[15];
  v17 = a1 + v16;
  v18 = a2 + v16;
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *(_BYTE *)(v17 + 8) = *(_BYTE *)(v18 + 8);
  return a1;
}

uint64_t sub_20E43FA5C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  void *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v6 = sub_20E4A398C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName(qword_254A1AF78);
  *(_QWORD *)(a1 + *(int *)(v7 + 28)) = *(_QWORD *)(a2 + *(int *)(v7 + 28));
  swift_release();
  v8 = a3[9];
  v9 = a1 + v8;
  v10 = a2 + v8;
  if (*(_QWORD *)(a1 + v8 + 24))
  {
    if (*(_QWORD *)(v10 + 24))
      __swift_destroy_boxed_opaque_existential_1(v9);
    else
      sub_20E3B8008(v9);
  }
  v11 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v11;
  v12 = *(_QWORD *)(v10 + 40);
  *(_QWORD *)(v9 + 32) = *(_QWORD *)(v10 + 32);
  *(_QWORD *)(v9 + 40) = v12;
  swift_release();
  v13 = a3[10];
  v14 = a1 + v13;
  v15 = (unint64_t *)(a2 + v13);
  v16 = *(void **)(a1 + v13);
  v17 = *(_QWORD *)(a2 + v13);
  if (v16 == (void *)3)
  {
    if (v17 == 3)
      v17 = 3;
    goto LABEL_14;
  }
  if (v17 == 3)
  {
    sub_20E43B6C0((void **)v14);
LABEL_13:
    v17 = *v15;
    goto LABEL_14;
  }
  if ((unint64_t)v16 >= 3)
  {
    if (v17 >= 3)
    {
      *(_QWORD *)v14 = v17;

      goto LABEL_15;
    }

    goto LABEL_13;
  }
LABEL_14:
  *(_QWORD *)v14 = v17;
LABEL_15:
  *(_QWORD *)(v14 + 8) = v15[1];
  swift_release();
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  swift_release();
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  swift_release();
  *(_OWORD *)(a1 + a3[13]) = *(_OWORD *)(a2 + a3[13]);
  swift_release();
  *(_OWORD *)(a1 + a3[14]) = *(_OWORD *)(a2 + a3[14]);
  swift_release();
  v18 = a3[15];
  v19 = a1 + v18;
  v20 = (uint64_t *)(a2 + v18);
  v21 = *v20;
  LOBYTE(v20) = *((_BYTE *)v20 + 8);
  v22 = *(_QWORD *)v19;
  v23 = *(_BYTE *)(v19 + 8);
  *(_QWORD *)v19 = v21;
  *(_BYTE *)(v19 + 8) = (_BYTE)v20;
  sub_20E3CBDA8(v22, v23);
  return a1;
}

uint64_t sub_20E43FC24()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_20E43FC30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_254A1AF78);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 44));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_20E43FCB0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_20E43FCBC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(qword_254A1AF78);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 44)) = (a2 - 1);
  return result;
}

void sub_20E43FD38()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254A1B000)
  {
    sub_20E4A398C();
    v0 = sub_20E4A4670();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254A1B000);
  }
}

uint64_t sub_20E43FD8C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t OpaqueTypeConformance2;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  _QWORD v27[2];

  v4 = a1[1];
  v5 = type metadata accessor for _AsyncTaskImage(255, *a1, v4, a4);
  v6 = sub_20E4A39D4();
  v7 = sub_20E4A39D4();
  v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1AF20);
  v9 = MEMORY[0x24BDF0910];
  v27[0] = v4;
  v27[1] = MEMORY[0x24BDF0910];
  v10 = MEMORY[0x24BDED308];
  v26[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v6, v27);
  v26[1] = v9;
  v11 = MEMORY[0x212BBDF90](v10, v7, v26);
  v12 = sub_20E3B2920(&qword_254A1AF28, &qword_254A1AF20, (uint64_t (*)(void))sub_20E43EB68);
  v22 = v7;
  v23 = v8;
  v24 = v11;
  v25 = v12;
  v13 = MEMORY[0x24BDF38E8];
  v14 = MEMORY[0x212BBDF30](255, &v22, MEMORY[0x24BDF38E8], 0);
  v15 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1AF38);
  v22 = v7;
  v23 = v8;
  v24 = v11;
  v25 = v12;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v17 = sub_20E3B2920(&qword_254A1AF40, &qword_254A1AF38, (uint64_t (*)(void))sub_20E43EBAC);
  v22 = v14;
  v23 = v15;
  v24 = OpaqueTypeConformance2;
  v25 = v17;
  MEMORY[0x212BBDF30](255, &v22, v13, 0);
  v22 = v14;
  v23 = v15;
  v24 = OpaqueTypeConformance2;
  v25 = v17;
  swift_getOpaqueTypeConformance2();
  v18 = sub_20E4A35FC();
  v19 = sub_20E4A3E00();
  v21[0] = MEMORY[0x212BBDF90](&unk_20E4AD380, v5);
  v21[1] = MEMORY[0x212BBDF90](MEMORY[0x24BDEAF78], v18);
  return MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v19, v21);
}

uint64_t sub_20E43FF90()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E43FFC4@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_20E43D954(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_20E43FFD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v5 = (int *)type metadata accessor for _AsyncTaskImage(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
  v6 = *(unsigned __int8 *)(*((_QWORD *)v5 - 1) + 80);
  v7 = v4 + ((v6 + 32) & ~v6);
  v8 = sub_20E4A398C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  __swift_instantiateConcreteTypeFromMangledName(qword_254A1AF78);
  swift_release();
  if (*(_QWORD *)(v7 + v5[9] + 24))
    __swift_destroy_boxed_opaque_existential_1(v7 + v5[9]);
  swift_release();
  v9 = *(void **)(v7 + v5[10]);
  if ((unint64_t)v9 >= 4)

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_20E3CBDA8(*(_QWORD *)(v7 + v5[15]), *(_BYTE *)(v7 + v5[15] + 8));
  return swift_deallocObject();
}

uint64_t sub_20E440100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;

  v6 = *(_QWORD *)(v4 + 16);
  v7 = *(_QWORD *)(v4 + 24);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for _AsyncTaskImage(0, v6, v7, a4) - 8) + 80);
  v9 = v4 + ((v8 + 32) & ~v8);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v10;
  *v10 = v5;
  v10[1] = sub_20E3B4E08;
  return sub_20E43DABC(v9, v6, v7, v11);
}

uint64_t sub_20E440180(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_20E3B4E08;
  return sub_20E43DFAC(a1, v7, v6, v4, v5);
}

uint64_t sub_20E4401F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;

  return sub_20E43E7EC(v4[4], v4[2], v4[3], a4);
}

uint64_t sub_20E440204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v5 = (int *)type metadata accessor for _AsyncTaskImage(0, *(_QWORD *)(v4 + 32), *(_QWORD *)(v4 + 40), a4);
  v6 = *(unsigned __int8 *)(*((_QWORD *)v5 - 1) + 80);
  swift_unknownObjectRelease();
  v7 = v4 + ((v6 + 48) & ~v6);
  v8 = sub_20E4A398C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  __swift_instantiateConcreteTypeFromMangledName(qword_254A1AF78);
  swift_release();
  if (*(_QWORD *)(v7 + v5[9] + 24))
    __swift_destroy_boxed_opaque_existential_1(v7 + v5[9]);
  swift_release();
  v9 = *(void **)(v7 + v5[10]);
  if ((unint64_t)v9 >= 4)

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_20E3CBDA8(*(_QWORD *)(v7 + v5[15]), *(_BYTE *)(v7 + v5[15] + 8));
  return swift_deallocObject();
}

uint64_t sub_20E44033C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v7 = v4[4];
  v8 = v4[5];
  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for _AsyncTaskImage(0, v7, v8, a4) - 8) + 80);
  v10 = v4[2];
  v11 = v4[3];
  v12 = (uint64_t)v4 + ((v9 + 48) & ~v9);
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v13;
  *v13 = v5;
  v13[1] = sub_20E3B50B0;
  return sub_20E43E950(a1, v10, v11, v12, v7, v8);
}

void sub_20E4403DC(void *a1, uint64_t a2)
{
  sub_20E43F20C(a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1AF70);
  sub_20E4A4658();
  sub_20E43D554(a2);
}

uint64_t sub_20E440448()
{
  uint64_t v0;

  return sub_20E43E6EC(*(_QWORD *)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t sub_20E440464()
{
  uint64_t v0;

  return sub_20E43E5EC(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_20E440480()
{
  return sub_20E43BB0C();
}

uint64_t sub_20E440488(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[2];
  uint64_t v6;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = sub_20E4A4574();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1B008);
  v3 = sub_20E4A39D4();
  v6 = v1;
  v5[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDF3F50], v2, &v6);
  v5[1] = sub_20E39D010(&qword_254A1B020, &qword_254A1B008, MEMORY[0x24BDEECB8]);
  return MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v3, v5);
}

uint64_t sub_20E440534(uint64_t *a1)
{
  uint64_t result;
  unint64_t v2;
  unint64_t v3;

  type metadata accessor for FlowStackAuthority(255, a1[10], a1[11], a1[12]);
  result = sub_20E4A35E4();
  if (v2 <= 0x3F)
  {
    sub_20E4A60E0();
    result = sub_20E4A35E4();
    if (v3 <= 0x3F)
    {
      result = swift_initClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t sub_20E4405E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 - 8);
  v5 = MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v4 + 16))((char *)&v8 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a2, v5);
  sub_20E4A359C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, a2);
}

uint64_t sub_20E44067C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[4];

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  v11 = sub_20E4A60E0();
  v2 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v4 = (char *)&v10 - v3;
  v5 = sub_20E4A4F64();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0D58);
  sub_20E4A4ACC();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_20E4A72D0;
  sub_20E4A4A30();
  sub_20E4A5A14();
  __swift_project_boxed_opaque_existential_1(v12, v12[3]);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x24BE5CFE0], v5);
  sub_20E4A5738();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 56))(v4, 1, 1, v1);
  sub_20E4410E4((uint64_t)v4);
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v11);
}

uint64_t sub_20E440848(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[3];
  uint64_t v20;

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 80);
  v5 = sub_20E4A60E0();
  v17 = *(_QWORD *)(v5 - 8);
  v18 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v17 - v6;
  v8 = sub_20E4A4F64();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_20E4A4A90();
  MEMORY[0x24BDAC7A8](v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0D58);
  sub_20E4A4ACC();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_20E4A72D0;
  sub_20E4A4A84();
  sub_20E4A4A78();
  v13 = sub_20E499774(a1, v4, *(_QWORD *)(v3 + 88), *(_QWORD *)(v3 + 96));
  v20 = MEMORY[0x24BEE0D00];
  v19[0] = v13;
  v19[1] = v14;
  sub_20E4A4A48();
  sub_20E402348((uint64_t)v19);
  sub_20E4A4A78();
  sub_20E4A4A9C();
  sub_20E4A5A14();
  __swift_project_boxed_opaque_existential_1(v19, v20);
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x24BE5CFE0], v8);
  sub_20E4A5738();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v7, a1, v4);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v7, 0, 1, v4);
  sub_20E4410E4((uint64_t)v7);
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v7, v18);
}

BOOL sub_20E440AB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  _BOOL8 v6;
  uint64_t v8;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  v2 = sub_20E4A60E0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v8 - v4;
  sub_20E440C38();
  v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 48))(v5, 1, v1) != 1;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v6;
}

uint64_t sub_20E440B60()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_20E4A35CC();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_20E440BFC()
{
  uint64_t v0;

  v0 = swift_allocObject();
  sub_20E440D14();
  return v0;
}

uint64_t sub_20E440C38()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_20E4A35CC();
  swift_release();
  return swift_release();
}

uint64_t sub_20E440CD4()
{
  return sub_20E440C38();
}

uint64_t sub_20E440CF4(uint64_t a1)
{
  return sub_20E4410E4(a1);
}

uint64_t sub_20E440D14()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  _BYTE v18[24];
  uint64_t *v19;

  v1 = v0;
  v2 = *(_QWORD **)v0;
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  sub_20E4A60E0();
  v4 = sub_20E4A35E4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = &v18[-v6];
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = &v18[-v10];
  v12 = v0 + v2[14];
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t, double))(*(_QWORD *)(v3 - 8) + 56))(&v18[-v10], 1, 1, v3, v9);
  v13 = v2[11];
  v14 = v2[12];
  sub_20E440E88((uint64_t)v11);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v5 + 32))(v12, v7, v4);
  type metadata accessor for FlowStackAuthority(0, v3, v13, v14);
  v15 = (uint64_t *)sub_20E4989B0();
  swift_beginAccess();
  v16 = *v15;
  v19 = v15;
  sub_20E4405E4((uint64_t)&v19, v16);
  swift_endAccess();
  return v1;
}

uint64_t sub_20E440E88(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v2 = sub_20E4A60E0();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v8 - v5;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16))((char *)&v8 - v5, a1, v2, v4);
  sub_20E4405E4((uint64_t)v6, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

uint64_t sub_20E440F24()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_20E4A35D8();
}

uint64_t sub_20E440FBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 104);
  type metadata accessor for FlowStackAuthority(255, *(_QWORD *)(*(_QWORD *)v0 + 80), *(_QWORD *)(*(_QWORD *)v0 + 88), *(_QWORD *)(*(_QWORD *)v0 + 96));
  v2 = sub_20E4A35E4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 112);
  sub_20E4A60E0();
  v4 = sub_20E4A35E4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t sub_20E441054()
{
  sub_20E440FBC();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FlowStackSheetAuthority(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FlowStackSheetAuthority);
}

uint64_t sub_20E441084()
{
  return sub_20E440C38();
}

uint64_t sub_20E4410A4(uint64_t a1)
{
  return sub_20E4410E4(a1);
}

uint64_t sub_20E4410C4()
{
  return 24;
}

__n128 sub_20E4410D0(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_20E4410E4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[8];

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 80);
  v5 = sub_20E4A60E0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v12 - v7;
  v9 = *(_QWORD *)(v3 + 88);
  v10 = *(_QWORD *)(v3 + 96);
  v12[4] = v4;
  v12[5] = v9;
  v12[6] = v10;
  swift_getKeyPath();
  v12[0] = v4;
  v12[1] = v9;
  v12[2] = v10;
  swift_getKeyPath();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  swift_retain();
  sub_20E4A35D8();
  sub_20E440B60();
  sub_20E4982E0();
  return swift_release();
}

uint64_t sub_20E4411E8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_20E440B60();
  *a1 = result;
  return result;
}

uint64_t sub_20E441210()
{
  swift_retain();
  return sub_20E440F24();
}

uint64_t sub_20E441238()
{
  return 24;
}

__n128 sub_20E441244(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_20E441258(uint64_t a1)
{
  sub_20E4A5D98();
  return a1;
}

uint64_t sub_20E441280(uint64_t a1)
{
  return sub_20E4412B0(a1, sub_20E4989E4);
}

uint64_t sub_20E44128C(uint64_t a1)
{
  return sub_20E4412B0(a1, sub_20E498AA4);
}

uint64_t sub_20E441298(uint64_t a1)
{
  return sub_20E4412B0(a1, sub_20E498A30);
}

uint64_t sub_20E4412A4(uint64_t a1)
{
  return sub_20E4412B0(a1, sub_20E498B6C);
}

uint64_t sub_20E4412B0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3;

  sub_20E49DC38();
  v3 = a2();
  swift_release();
  return v3;
}

uint64_t FlowAuthority.init(tabSelection:tabContent:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;

  swift_getAssociatedTypeWitness();
  v12 = sub_20E4A4778();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v18 - v14;
  type metadata accessor for FlowStackTabsAuthority(0, a3, a4, a5);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1, v12);
  v16 = sub_20E49DBEC((uint64_t)v15, a2);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(a1, v12);
  *a6 = v16;
  return result;
}

uint64_t FlowAuthority.init(initialTabSelection:tabContent:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t AssociatedConformanceWitness;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;

  v22 = a1;
  v23 = a2;
  v24 = a6;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = sub_20E4A4778();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v22 - v11;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for _TransientSelection(0, AssociatedTypeWitness, AssociatedConformanceWitness, v14);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_20E441848();
  sub_20E4A5DF8();
  swift_retain();
  v16 = sub_20E4A5DEC();
  v17 = (_QWORD *)swift_allocObject();
  v18 = MEMORY[0x24BEE6930];
  v17[2] = v16;
  v17[3] = v18;
  v17[4] = a3;
  v17[5] = a4;
  v17[6] = a5;
  v17[7] = v15;
  swift_retain();
  v19 = sub_20E4A5DEC();
  v20 = (_QWORD *)swift_allocObject();
  v20[2] = v19;
  v20[3] = v18;
  v20[4] = a3;
  v20[5] = a4;
  v20[6] = a5;
  v20[7] = v15;
  sub_20E4A4754();
  FlowAuthority.init(tabSelection:tabContent:)((uint64_t)v12, v23, a3, a4, a5, &v25);
  swift_release();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v22, AssociatedTypeWitness);
  *v24 = v25;
  return result;
}

uint64_t type metadata accessor for _TransientSelection(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _TransientSelection);
}

uint64_t sub_20E4415CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  os_unfair_lock_s *v7;

  v3 = *v1;
  v4 = v1[2];
  v5 = *(_QWORD *)(v3 + 80);
  v6 = v4 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v4 + 16);
  v7 = (os_unfair_lock_s *)(v4 + ((*(unsigned int *)(*(_QWORD *)v4 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, v6, v5);
  os_unfair_lock_unlock(v7);
  return swift_release();
}

uint64_t FlowAuthority.init(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v13 = (char *)&v21 - v12;
  v14 = sub_20E4A4778();
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v21 - v15;
  sub_20E4A61B8();
  sub_20E4A4760();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, AssociatedTypeWitness);
  sub_20E4417FC(a2, a2);
  v17 = *(_QWORD *)(a2 - 8);
  swift_allocObject();
  v18 = sub_20E4A5D44();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v19, a1, a2);
  sub_20E4A5D98();
  FlowAuthority.init(tabSelection:tabContent:)((uint64_t)v16, v18, a2, a3, a4, &v22);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(a1, a2);
  *a5 = v22;
  return result;
}

uint64_t sub_20E4417FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  if (swift_isClassType())
    v3 = a2;
  else
    v3 = 0;
  if (v3)
    return __swift_instantiateConcreteTypeFromMangledName(&qword_254A18A98);
  else
    return sub_20E4A6320();
}

uint64_t sub_20E441848()
{
  type metadata accessor for os_unfair_lock_s(255);
  sub_20E4A61E8();
  return sub_20E4A61DC();
}

uint64_t sub_20E4418B8@<X0>(uint64_t a1@<X8>)
{
  return sub_20E4415CC(a1);
}

uint64_t objectdestroyTm_4()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E441908(uint64_t a1)
{
  return sub_20E441978(a1);
}

uint64_t type metadata accessor for FlowAuthority(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FlowAuthority);
}

uint64_t sub_20E441934()
{
  return swift_initClassMetadata2();
}

uint64_t sub_20E441978(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  os_unfair_lock_s *v7;
  uint64_t v8;

  v3 = *v1;
  v4 = v1[2];
  v5 = *(_QWORD *)(v3 + 80);
  v6 = v4 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v4 + 16);
  v7 = (os_unfair_lock_s *)(v4 + ((*(unsigned int *)(*(_QWORD *)v4 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v7);
  v8 = *(_QWORD *)(v5 - 8);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v6, a1, v5);
  os_unfair_lock_unlock(v7);
  return swift_release();
}

uint64_t sub_20E441A20@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v2 + 16);
  v4 = *a1;
  *(_DWORD *)((char *)a1 + ((*(unsigned int *)(*a1 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v4 + *MEMORY[0x24BEE27A8]) - 8) + 16))(a2, v3);
}

uint64_t sub_20E441A78(uint64_t a1, id a2)
{
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  v4 = sub_20E4A3344();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))((char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4, v6);
  sub_20E4A59F0();
  if (!a2)
  {
    sub_20E4A59D8();
    v15 = 0u;
    v16 = 0u;
    sub_20E4A59C0();
    v15 = 0u;
    v16 = 0u;
LABEL_13:
    sub_20E39D1F8((uint64_t)&v15, &qword_253ED2A38);
    goto LABEL_14;
  }
  v8 = objc_msgSend(a2, sel_sourceApplication);
  if (v8)
  {
    v9 = v8;
    sub_20E4A5C3C();

  }
  sub_20E4A59D8();
  if (objc_msgSend(a2, sel_annotation))
  {
    sub_20E4A6110();
    swift_unknownObjectRelease();
  }
  else
  {
    v13 = 0u;
    v14 = 0u;
  }
  sub_20E4423BC((uint64_t)&v13, (uint64_t)&v15);
  sub_20E4A59C0();
  a2 = a2;
  v10 = (void *)sub_20E4A5C18();
  v11 = objc_msgSend(a2, sel_valueForKeyPath_, v10);

  if (v11)
  {
    sub_20E4A6110();
    swift_unknownObjectRelease();
  }
  else
  {
    v13 = 0u;
    v14 = 0u;
  }
  sub_20E4423BC((uint64_t)&v13, (uint64_t)&v15);
  if (!*((_QWORD *)&v16 + 1))
    goto LABEL_13;
  swift_dynamicCast();
LABEL_14:
  sub_20E4A59CC();

  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
}

void DeepLink.init(sceneContext:)(void *a1)
{
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;

  v2 = sub_20E4A3344();
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(a1, sel_URL, v3);
  sub_20E4A3320();

  sub_20E441A78((uint64_t)v5, objc_msgSend(a1, sel_options));
}

uint64_t DeepLink.init(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  id v26;
  void *v27;
  void (*v28)(char *, char *, uint64_t);
  void (*v29)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t (*v30)(uint64_t, uint64_t, uint64_t);
  char *v31;
  void (*v32)(char *, char *, uint64_t);
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  uint64_t (*v40)(uint64_t, uint64_t, uint64_t);
  id v41;
  void *v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  unint64_t v54;
  void (*v55)(char *, uint64_t);
  void (*v57)(char *, char *, uint64_t);
  uint64_t (*v58)(uint64_t, uint64_t, uint64_t);
  void (*v59)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  __int128 v66;
  _QWORD v67[3];
  uint64_t v68;

  v63 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A0C8);
  MEMORY[0x24BDAC7A8](v3);
  v61 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v57 - v6;
  v8 = sub_20E4A3344();
  v9 = *(_QWORD **)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v60 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v57 - v12;
  MEMORY[0x24BDAC7A8](v14);
  v62 = (char *)&v57 - v15;
  v64 = sub_20E4A59FC();
  v16 = *(_QWORD *)(v64 - 8);
  v17 = MEMORY[0x24BDAC7A8](v64);
  v19 = (char *)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = objc_msgSend(a1, sel_activityType, v17);
  v21 = sub_20E4A5C3C();
  v23 = v22;

  if (v21 == sub_20E4A5C3C() && v23 == v24)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v25 = sub_20E4A635C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v25 & 1) == 0)
    {

      goto LABEL_12;
    }
  }
  v26 = objc_msgSend(a1, sel_webpageURL);
  if (v26)
  {
    v27 = v26;
    sub_20E4A3320();

    v28 = (void (*)(char *, char *, uint64_t))v9[4];
    v28(v7, v13, v8);
    v29 = (void (*)(char *, _QWORD, uint64_t, uint64_t))v9[7];
    v29(v7, 0, 1, v8);
    v30 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v9[6];
    if (v30((uint64_t)v7, 1, v8) != 1)
    {
      v58 = v30;
      v59 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v29;
      v31 = v62;
      v28(v62, v7, v8);
      v32 = (void (*)(char *, char *, uint64_t))v9[2];
      v32(v13, v31, v8);
      sub_20E4A59F0();
      v33 = (void *)sub_20E4A5C18();
      v34 = objc_msgSend(a1, sel_valueForKey_, v33);

      v57 = v32;
      if (v34)
      {
        sub_20E4A6110();
        swift_unknownObjectRelease();
      }
      else
      {
        v65 = 0u;
        v66 = 0u;
      }
      sub_20E4423BC((uint64_t)&v65, (uint64_t)v67);
      if (v68)
        swift_dynamicCast();
      else
        sub_20E39D1F8((uint64_t)v67, &qword_253ED2A38);
      sub_20E4A59D8();
      v38 = (void *)sub_20E4A5C18();
      v39 = objc_msgSend(a1, sel_valueForKeyPath_, v38);

      if (v39)
      {
        sub_20E4A6110();
        swift_unknownObjectRelease();
      }
      else
      {
        v65 = 0u;
        v66 = 0u;
      }
      v40 = v58;
      sub_20E4423BC((uint64_t)&v65, (uint64_t)v67);
      if (v68)
        swift_dynamicCast();
      else
        sub_20E39D1F8((uint64_t)v67, &qword_253ED2A38);
      v37 = v64;
      sub_20E4A59CC();
      v41 = objc_msgSend(a1, sel_referrerURL);
      if (v41)
      {
        v42 = v41;
        sub_20E4A3320();

        v43 = (uint64_t)v61;
        v28(v61, v13, v8);
        v59(v43, 0, 1, v8);
        v44 = v40(v43, 1, v8);
        v36 = v63;
        if (v44 != 1)
        {
          v28(v60, (char *)v43, v8);
          __swift_instantiateConcreteTypeFromMangledName(&qword_254A1B1D8);
          v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18B28);
          v46 = *(unsigned __int8 *)(*(_QWORD *)(v45 - 8) + 80);
          v47 = (v46 + 32) & ~v46;
          v48 = swift_allocObject();
          *(_OWORD *)(v48 + 16) = xmmword_20E4A72D0;
          v49 = (uint64_t *)(v48 + v47);
          v50 = (char *)v49 + *(int *)(v45 + 48);
          *v49 = sub_20E4A5C3C();
          v49[1] = v51;
          v52 = v50;
          v53 = v60;
          v57(v52, v60, v8);
          v54 = sub_20E3B5728(v48);
          v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1B1E0);
          v67[0] = v54;
          sub_20E4A59C0();

          v55 = (void (*)(char *, uint64_t))v9[1];
          v55(v53, v8);
          v55(v62, v8);
LABEL_28:
          (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(v36, v19, v37);
          v35 = 0;
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(v36, v35, 1, v37);
        }
      }
      else
      {
        v43 = (uint64_t)v61;
        v59((uint64_t)v61, 1, 1, v8);
        v36 = v63;
      }

      ((void (*)(char *, uint64_t))v9[1])(v62, v8);
      sub_20E39D1F8(v43, &qword_254A1A0C8);
      goto LABEL_28;
    }
  }
  else
  {
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v9[7])(v7, 1, 1, v8);
  }

  sub_20E39D1F8((uint64_t)v7, &qword_254A1A0C8);
LABEL_12:
  v35 = 1;
  v36 = v63;
  v37 = v64;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(v36, v35, 1, v37);
}

uint64_t sub_20E4423BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED2A38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

double sub_20E442404@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  double result;
  __int128 v9;
  _OWORD v10[2];
  uint64_t v11;

  v7 = type metadata accessor for MediaArtwork.ProtocolRequest(0, a2, a3, a4);
  MediaArtwork.ProtocolRequest.cachedImagesKey.getter((uint64_t)v10);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a1, v7);
  result = *(double *)v10;
  v9 = v10[1];
  *(_OWORD *)a5 = v10[0];
  *(_OWORD *)(a5 + 16) = v9;
  *(_QWORD *)(a5 + 32) = v11;
  return result;
}

uint64_t MediaArtwork.CacheKey.hashValue.getter()
{
  sub_20E4A6410();
  _s9JetEngine12MediaArtworkV01_aB8_SwiftUIE8CacheKeyV4hash4intoys6HasherVz_tF_0();
  return sub_20E4A6428();
}

uint64_t sub_20E4424B8()
{
  sub_20E4A6410();
  _s9JetEngine12MediaArtworkV01_aB8_SwiftUIE8CacheKeyV4hash4intoys6HasherVz_tF_0();
  return sub_20E4A6428();
}

uint64_t sub_20E4424F8()
{
  sub_20E4A6410();
  _s9JetEngine12MediaArtworkV01_aB8_SwiftUIE8CacheKeyV4hash4intoys6HasherVz_tF_0();
  return sub_20E4A6428();
}

uint64_t sub_20E442538@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, double *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;

  sub_20E4A59B4();
  v8 = type metadata accessor for MediaArtwork.ProtocolRequest(0, a2, v6, v7);
  v9 = MediaArtwork.ProtocolRequest.size.getter();
  v11 = v10;
  v12 = *(_QWORD *)(a1 + *(int *)(v8 + 40));
  sub_20E4A5630();
  swift_retain();
  v13 = sub_20E4A5624();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(a1, v8);
  *a3 = v9;
  *((_QWORD *)a3 + 1) = v11;
  *((_QWORD *)a3 + 2) = v12;
  *((_QWORD *)a3 + 3) = v13;
  return result;
}

unint64_t sub_20E442618()
{
  return 0xD00000000000004DLL;
}

uint64_t MediaArtwork.CacheValue.debugDescription.getter()
{
  sub_20E4A5630();
  sub_20E4A6344();
  sub_20E4A5C6C();
  sub_20E4A5EC4();
  sub_20E4A5C6C();
  swift_bridgeObjectRelease();
  sub_20E4A5C6C();
  sub_20E4A5EC4();
  sub_20E4A5C6C();
  swift_bridgeObjectRelease();
  return 0;
}

unint64_t sub_20E4426EC()
{
  unint64_t result;

  result = qword_254A1B1E8[0];
  if (!qword_254A1B1E8[0])
  {
    result = MEMORY[0x212BBDF90](&protocol conformance descriptor for MediaArtwork.CacheKey, &type metadata for MediaArtwork.CacheKey);
    atomic_store(result, qword_254A1B1E8);
  }
  return result;
}

uint64_t sub_20E442734(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7)
{
  uint64_t v14;
  double v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v23[16];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  _BYTE v31[40];
  uint64_t v32;

  v14 = type metadata accessor for MediaArtwork.ProtocolRequest(0, a4, a3, a4);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = &v23[-v16];
  (*(void (**)(_BYTE *, uint64_t, double))(v18 + 16))(&v23[-v16], a1, v15);
  sub_20E442404((uint64_t)v17, a4, v19, v20, (uint64_t)v31);
  v24 = a2;
  v25 = a3;
  v26 = a4;
  v27 = a5;
  v28 = a6;
  v29 = a1;
  v30 = a7;
  type metadata accessor for _MultiCacheImageMatch(0, a3, a6, v21);
  sub_20E4A4AD8();
  sub_20E443784((uint64_t)v31);
  return v32;
}

uint64_t sub_20E44283C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X6>, uint64_t *a8@<X8>, double a9@<D0>)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t AssociatedTypeWitness;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t KeyPath;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  uint64_t v32;
  double v33;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  uint64_t result;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t AssociatedConformanceWitness;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;

  v58 = a7;
  v55 = a5;
  v57 = a4;
  v61 = a1;
  v60 = a8;
  v13 = type metadata accessor for MediaArtwork.ProtocolRequest(0, a5, a3, a4);
  v50 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v49 - v14;
  v51 = a6;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v56 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v54 = (char *)&v49 - v17;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v53 = *(_QWORD *)(*(_QWORD *)(AssociatedConformanceWitness + 8) + 8);
  v76 = swift_getAssociatedTypeWitness();
  v59 = *(_QWORD *)(v76 - 8);
  MEMORY[0x24BDAC7A8](v76);
  v19 = (char *)&v49 - v18;
  v67 = a3;
  v68 = v57;
  v20 = v55;
  v21 = v51;
  v69 = v55;
  v70 = v51;
  v71 = v58;
  KeyPath = swift_getKeyPath();
  v63 = a3;
  v64 = v20;
  v65 = v21;
  v66 = KeyPath;
  v23 = v61;
  v24 = v62;
  sub_20E4A55E8();
  v58 = v24;
  swift_release();
  (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v54, v23, AssociatedTypeWitness);
  sub_20E4A5C84();
  v25 = swift_getAssociatedConformanceWitness();
  v62 = v19;
  v61 = v25;
  sub_20E4A60EC();
  v26 = v74;
  if (v74)
  {
    v28 = v72;
    v27 = v73;
    v29 = v75;
    v30 = 0x8000000000000000;
    v31 = 1.79769313e308;
    v32 = v50;
    while (1)
    {
      v57 = v30;
      while (1)
      {
        if (MediaArtwork.ProtocolRequest.size.getter() == *(double *)&v28 && v33 == *(double *)&v27)
        {
          (*(void (**)(char *, uint64_t))(v59 + 8))(v62, v76);
          swift_release();
          swift_retain();
          result = sub_20E44392C(v28, v27, v26);
          v30 = v29 | 0x4000000000000000;
          goto LABEL_27;
        }
        (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v15, a2, v13);
        if (*(double *)&v28 > 0.0 && *(double *)&v27 > 0.0)
          break;
        sub_20E44392C(v28, v27, v26);
        (*(void (**)(char *, uint64_t))(v32 + 8))(v15, v13);
LABEL_5:
        sub_20E4A60EC();
        v28 = v72;
        v27 = v73;
        v26 = v74;
        v29 = v75;
        if (!v74)
        {
          v30 = v57;
          goto LABEL_26;
        }
      }
      v35 = MediaArtwork.ProtocolRequest.size.getter();
      v37 = v36;
      (*(void (**)(char *, uint64_t))(v32 + 8))(v15, v13);
      if (v35 <= 0.0)
        break;
      if (v37 <= 0.0)
        break;
      v38 = MediaArtwork.ProtocolRequest.size.getter();
      if (vabdd_f64(*(double *)&v28 / *(double *)&v27, v38 / v39) >= a9 || (sub_20E4A560C() & 1) == 0)
        break;
      v40 = MediaArtwork.ProtocolRequest.size.getter();
      MediaArtwork.ProtocolRequest.size.getter();
      v42 = v41;
      v43 = MediaArtwork.ProtocolRequest.size.getter();
      v45 = *(double *)&v27 - v44;
      v46 = *(double *)&v28 - v43;
      if (v42 >= v40)
        v46 = v45;
      v47 = fabs(v46);
      v30 = v57;
      if (v47 < v31)
      {
        swift_release();
        swift_retain();
        v30 = v29;
        v31 = v47;
      }
      sub_20E44392C(v28, v27, v26);
      sub_20E4A60EC();
      v28 = v72;
      v27 = v73;
      v26 = v74;
      v29 = v75;
      if (!v74)
        goto LABEL_26;
    }
    sub_20E44392C(v28, v27, v26);
    goto LABEL_5;
  }
  v30 = 0x8000000000000000;
LABEL_26:
  result = (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v62, v76);
LABEL_27:
  *v60 = v30;
  return result;
}

uint64_t sub_20E442D7C()
{
  unsigned __int8 v1;

  swift_retain();
  swift_retain();
  swift_getAtKeyPath();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_20E442DF4(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  _BYTE v36[40];
  uint64_t v37;
  char v38;

  v26 = a3;
  v27 = a4;
  v16 = type metadata accessor for MediaArtwork.ProtocolRequest(0, a7, a3, a4);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v26 - v18;
  (*(void (**)(char *, uint64_t, double))(v20 + 16))((char *)&v26 - v18, a1, v17);
  sub_20E442404((uint64_t)v19, a7, v21, v22, (uint64_t)v36);
  v28 = a5;
  v29 = a6;
  v30 = a7;
  v31 = a8;
  v32 = a9;
  v33 = a10;
  v34 = a1;
  v35 = a2;
  swift_getAssociatedTypeWitness();
  sub_20E4A5630();
  swift_getTupleTypeMetadata2();
  sub_20E4A4AD8();
  sub_20E443784((uint64_t)v36);
  v23 = v37;
  if (v38 == 1)
  {
    v24 = (_QWORD *)swift_allocObject();
    v24[2] = a5;
    v24[3] = a6;
    v24[4] = a7;
    v24[5] = a8;
    v24[6] = a9;
    v24[7] = a10;
    v24[8] = v26;
    v24[9] = v27;
    swift_retain();
    sub_20E4A5618();
    swift_release();
  }
  return v23;
}

void sub_20E442FA4(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, double *a9@<X8>, uint64_t a10)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t AssociatedTypeWitness;
  uint64_t v24;
  char *v25;
  uint64_t KeyPath;
  uint64_t AssociatedConformanceWitness;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  os_unfair_lock_s *v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  char *v42;
  NSObject *v43;
  int v44;
  void (*v45)(char *, char *, uint64_t);
  char *v46;
  char *v47;
  uint64_t v48;
  uint8_t *v49;
  uint8_t *v50;
  os_signpost_id_t v51;
  void (*v52)(char *, uint64_t);
  uint64_t v53;
  double v54;
  double *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  int v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  double *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  double v95[7];
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;

  v61 = a3;
  v71 = a2;
  v72 = a9;
  v74 = a1;
  v67 = a10;
  v58 = sub_20E4A3494();
  v63 = *(_QWORD *)(v58 - 8);
  MEMORY[0x24BDAC7A8](v58);
  v57 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v62 = (char *)&v56 - v17;
  v18 = sub_20E4A5E58();
  v64 = *(_QWORD *)(v18 - 8);
  v65 = v18;
  MEMORY[0x24BDAC7A8](v18);
  v73 = (uint64_t)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = type metadata accessor for MediaArtwork.ProtocolRequest(0, a6, v20, v21);
  v59 = *(_QWORD *)(v70 - 8);
  MEMORY[0x24BDAC7A8](v70);
  v60 = (char *)&v56 - v22;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v68 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v25 = (char *)&v56 - v24;
  v89 = a4;
  v90 = a5;
  v98 = a5;
  v66 = a6;
  v91 = a6;
  v92 = a7;
  v75 = a8;
  v93 = a8;
  v94 = a10;
  KeyPath = swift_getKeyPath();
  v83 = a4;
  v84 = a5;
  v85 = a6;
  v86 = a7;
  v87 = a8;
  v88 = KeyPath;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v28 = v74;
  v29 = v69;
  sub_20E4A55E8();
  swift_release();
  v30 = v68;
  (*(void (**)(char *, uint64_t, uint64_t))(v68 + 16))(v25, v28, AssociatedTypeWitness);
  v76 = a4;
  v31 = v66;
  v77 = v98;
  v78 = v66;
  v79 = a7;
  v80 = v75;
  v32 = v71;
  v81 = v67;
  v82 = v71;
  v69 = AssociatedConformanceWitness;
  sub_20E4A5CD8();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v25, AssociatedTypeWitness);
  v33 = v96;
  if (v96)
  {
    v34 = v72;
    v98 = *(_QWORD *)&v95[5];
    v75 = *(_QWORD *)&v95[6];
    v35 = v97;
    v36 = *(_QWORD *)(*(_QWORD *)(v32 + *(int *)(v70 + 40)) + 16);
    v37 = v36 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v36 + 16);
    v38 = (os_unfair_lock_s *)(v36 + ((*(unsigned int *)(*(_QWORD *)v36 + 48) + 3) & 0x1FFFFFFFCLL));
    swift_retain();
    os_unfair_lock_lock(v38);
    sub_20E41E34C(v37, v73);
    if (v29)
    {
      os_unfair_lock_unlock(v38);
      __break(1u);
    }
    else
    {
      os_unfair_lock_unlock(v38);
      swift_release();
      v39 = v73;
      v40 = MediaArtwork.ProtocolRequestPriorityCoordinator.increasePriority(to:)(v73);
      (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v39, v65);
      if ((v40 & 1) != 0)
      {
        if (qword_254A18110 != -1)
          swift_once();
        v41 = sub_20E4A34B8();
        __swift_project_value_buffer(v41, (uint64_t)qword_254A24688);
        v42 = v62;
        sub_20E4A3488();
        v43 = sub_20E4A34AC();
        v44 = sub_20E4A6050();
        if ((sub_20E4A60D4() & 1) != 0)
        {
          v45 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
          v46 = v42;
          v47 = v57;
          LODWORD(v73) = v44;
          v48 = v58;
          v45(v57, v46, v58);
          v49 = (uint8_t *)swift_slowAlloc();
          v74 = 0;
          v50 = v49;
          *(_WORD *)v49 = 0;
          v51 = sub_20E4A347C();
          _os_signpost_emit_with_name_impl(&dword_20E399000, v43, (os_signpost_type_t)v73, v51, "Image.CacheIncreasedRequestPriority", "", v50, 2u);
          MEMORY[0x212BBE068](v50, -1, -1);

          v52 = *(void (**)(char *, uint64_t))(v63 + 8);
          v52(v62, v48);
          v52(v47, v48);
        }
        else
        {

          (*(void (**)(char *, uint64_t))(v63 + 8))(v42, v58);
        }
      }
      swift_retain();
      sub_20E44392C(v98, v75, v33);
      *(_QWORD *)v34 = v35;
      *((_BYTE *)v34 + 8) = 0;
    }
  }
  else
  {
    v53 = (uint64_t)v60;
    (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v60, v32, v70);
    swift_getAssociatedTypeWitness();
    sub_20E442538(v53, v31, v95);
    v54 = v95[3];
    sub_20E4A55DC();
    swift_release();
    v55 = v72;
    *v72 = v54;
    *((_BYTE *)v55 + 8) = 1;
  }
}

uint64_t _s8CacheKeyVwcp(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t *_s8CacheKeyVwca(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  return a1;
}

uint64_t _s8CacheKeyVwta(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for MediaArtwork.CacheKey()
{
  return &type metadata for MediaArtwork.CacheKey;
}

uint64_t sub_20E4435A8()
{
  swift_release();
  return swift_release();
}

uint64_t sub_20E4435D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *sub_20E44360C(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_20E443678(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  return a1;
}

uint64_t sub_20E4436BC(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_20E443704(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for MediaArtwork.CacheValue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MediaArtwork.CacheValue);
}

void sub_20E443750(uint64_t a1@<X0>, double *a2@<X8>)
{
  uint64_t v2;

  sub_20E442FA4(a1, *(_QWORD *)(v2 + 64), *(unsigned __int8 *)(v2 + 72), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), a2, *(_QWORD *)(v2 + 56));
}

uint64_t sub_20E443784(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  return a1;
}

uint64_t sub_20E4437A8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E4437CC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 64))();
}

uint64_t sub_20E4437EC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_20E4A5600();
  *a1 = result & 1;
  return result;
}

uint64_t sub_20E443818()
{
  return 48;
}

__n128 sub_20E443824(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 32) = v3;
  *(__n128 *)a2 = result;
  return result;
}

uint64_t sub_20E443838()
{
  return sub_20E442D7C() & 1;
}

BOOL sub_20E44385C(double *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  double v5;
  double v6;
  _BOOL4 v7;
  double v8;

  v5 = *a1;
  v6 = a1[1];
  type metadata accessor for MediaArtwork.ProtocolRequest(0, *(_QWORD *)(v4 + 32), a3, a4);
  v7 = v5 == MediaArtwork.ProtocolRequest.size.getter();
  return v6 == v8 && v7;
}

BOOL sub_20E4438AC()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + 16) & 1) == 0;
}

uint64_t sub_20E4438BC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_20E44283C(a1, *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(char **)(v2 + 48), a2, *(double *)(v2 + 64));
}

uint64_t type metadata accessor for _MultiCacheImageMatch(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _MultiCacheImageMatch);
}

uint64_t sub_20E4438EC()
{
  return 40;
}

__n128 sub_20E4438F8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_20E44390C()
{
  return sub_20E442D7C() & 1;
}

uint64_t sub_20E44392C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

_QWORD *sub_20E44395C(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t sub_20E44398C()
{
  return swift_release();
}

_QWORD *sub_20E443998(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *sub_20E4439D8(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t sub_20E443A0C(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7E && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 126);
  v3 = (((*(_QWORD *)a1 >> 57) >> 5) | (4 * ((*(_QWORD *)a1 >> 57) & 0x18 | *(_QWORD *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7D)
    v3 = -1;
  return v3 + 1;
}

uint64_t sub_20E443A68(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7D)
  {
    *(_QWORD *)result = a2 - 126;
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_20E443AB8(_QWORD *a1)
{
  uint64_t v1;

  v1 = *a1 >> 62;
  if (v1 <= 1)
    return v1;
  else
    return (*a1 >> 3) + 2;
}

_QWORD *sub_20E443AD4(_QWORD *result)
{
  *result &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

unint64_t *sub_20E443AE4(unint64_t *result, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  if (a2 < 2)
  {
    v2 = *result & 0xFFFFFFFFFFFFFF8;
    v3 = a2 << 62;
  }
  else
  {
    v2 = 8 * (a2 - 2);
    v3 = 0x8000000000000000;
  }
  *result = v2 | v3;
  return result;
}

uint64_t sub_20E443B18(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  _OWORD v9[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_20E3B8B34((_OWORD *)a1, v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v8 = *v2;
    *v2 = 0x8000000000000000;
    sub_20E3CA3C0(v9, a2, isUniquelyReferenced_nonNull_native);
    *v2 = v8;
    swift_bridgeObjectRelease();
    v5 = sub_20E4A4E68();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a2, v5);
  }
  else
  {
    sub_20E39D1F8(a1, &qword_254A1A2F8);
    sub_20E3C8CBC(a2, v9);
    v7 = sub_20E4A4E68();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a2, v7);
    return sub_20E39D1F8((uint64_t)v9, &qword_254A1A2F8);
  }
}

uint64_t sub_20E443BFC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_20E4A3B3C();
  *a1 = v3;
  return result;
}

uint64_t sub_20E443C24()
{
  return sub_20E4A3B48();
}

uint64_t sub_20E443C48(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  _QWORD v8[4];
  _BYTE v9[40];

  v3 = sub_20E4A4E68();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v8[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20E3B7F84(a2, (uint64_t)v9);
  sub_20E4A4E74();
  v8[3] = MEMORY[0x24BEE23D0];
  v8[0] = swift_allocObject();
  sub_20E3B7F84((uint64_t)v9, v8[0] + 16);
  sub_20E443B18((uint64_t)v8, (uint64_t)v5);
  return sub_20E3B8008((uint64_t)v9);
}

uint64_t sub_20E443D0C()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_20E4A5A74();
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_20E4A5A8C();
  __swift_allocate_value_buffer(v1, qword_254A24670);
  __swift_project_value_buffer(v1, (uint64_t)qword_254A24670);
  sub_20E4A5A68();
  return sub_20E4A5A80();
}

uint64_t sub_20E443DC0()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_20E4A34B8();
  __swift_allocate_value_buffer(v0, qword_254A24688);
  __swift_project_value_buffer(v0, (uint64_t)qword_254A24688);
  if (qword_254A18108 != -1)
    swift_once();
  v1 = sub_20E4A5A8C();
  __swift_project_value_buffer(v1, (uint64_t)qword_254A24670);
  sub_20E4A5A50();
  return sub_20E4A34A0();
}

uint64_t MediaArtwork.pageRenderMetrics(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;

  KeyPath = swift_getKeyPath();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  v7 = sub_20E4A4C70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a2, v2, v7);
  v8 = (uint64_t *)(a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254A1B2F0) + 36));
  *v8 = KeyPath;
  v8[1] = (uint64_t)sub_20E443F9C;
  v8[2] = v6;
  return swift_retain();
}

uint64_t sub_20E443EFC(_QWORD *a1, uint64_t a2)
{
  uint64_t result;

  sub_20E4A59B4();
  swift_retain();
  result = swift_release();
  *a1 = a2;
  return result;
}

uint64_t sub_20E443F78()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E443F9C(_QWORD *a1)
{
  uint64_t v1;

  return sub_20E443EFC(a1, *(_QWORD *)(v1 + 16));
}

unint64_t sub_20E443FA4()
{
  return 0xD00000000000003DLL;
}

uint64_t MediaArtwork.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v2 = v1;
  v4 = sub_20E4A4C70();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))(v8, v2, v4, v6);
  v9 = (int *)type metadata accessor for _MediaArtworkBody();
  v10 = a1 + v9[5];
  *(_QWORD *)v10 = swift_getKeyPath();
  *(_BYTE *)(v10 + 8) = 0;
  v11 = a1 + v9[6];
  *(_QWORD *)v11 = swift_getKeyPath();
  *(_BYTE *)(v11 + 40) = 0;
  v12 = a1 + v9[7];
  *(_QWORD *)v12 = swift_getKeyPath();
  *(_BYTE *)(v12 + 8) = 0;
  v13 = a1 + v9[8];
  *(_QWORD *)v13 = swift_getKeyPath();
  *(_BYTE *)(v13 + 8) = 0;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(a1, v8, v4);
}

uint64_t type metadata accessor for _MediaArtworkBody()
{
  uint64_t result;

  result = qword_254A1B310;
  if (!qword_254A1B310)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_20E44410C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_20E4A3B3C();
  *a1 = v3;
  return result;
}

uint64_t sub_20E444134()
{
  return sub_20E4A3B48();
}

uint64_t sub_20E444168()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E444178@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v4 = *(_QWORD *)(a1 - 8);
  v5 = MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v4 + 16))(v7, v5);
  v8 = (int *)type metadata accessor for _MediaArtworkBody();
  v9 = a2 + v8[5];
  *(_QWORD *)v9 = swift_getKeyPath();
  *(_BYTE *)(v9 + 8) = 0;
  v10 = a2 + v8[6];
  *(_QWORD *)v10 = swift_getKeyPath();
  *(_BYTE *)(v10 + 40) = 0;
  v11 = a2 + v8[7];
  *(_QWORD *)v11 = swift_getKeyPath();
  *(_BYTE *)(v11 + 8) = 0;
  v12 = a2 + v8[8];
  *(_QWORD *)v12 = swift_getKeyPath();
  *(_BYTE *)(v12 + 8) = 0;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(a2, v7, a1);
}

unint64_t sub_20E444280()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254A1B2F8;
  if (!qword_254A1B2F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1B2F0);
    v2[0] = sub_20E39F334(&qword_254A1AD28, (uint64_t (*)(uint64_t))MEMORY[0x24BE5CB70], (uint64_t)&protocol conformance descriptor for MediaArtwork);
    v2[1] = sub_20E39D010(&qword_253ED2488, qword_253ED2490, MEMORY[0x24BDF1248]);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254A1B2F8);
  }
  return result;
}

uint64_t sub_20E44431C()
{
  return sub_20E39F334(&qword_254A1B300, (uint64_t (*)(uint64_t))type metadata accessor for _MediaArtworkBody, (uint64_t)&unk_20E4AD8D8);
}

_QWORD *sub_20E444348(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char v28;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_20E4A4C70();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = *(_QWORD *)v10;
    v12 = v10[8];
    sub_20E39CFAC(*(_QWORD *)v10, v12);
    *(_QWORD *)v9 = v11;
    v9[8] = v12;
    v13 = a3[6];
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = *((_BYTE *)a2 + v13 + 40);
    if ((v16 & 1) != 0)
    {
      v17 = *(_OWORD *)(v15 + 24);
      *(_OWORD *)(v14 + 24) = v17;
      (**(void (***)(char *))(v17 - 8))(v14);
    }
    else
    {
      *(_QWORD *)v14 = *(_QWORD *)v15;
      swift_retain();
    }
    v14[40] = v16;
    v19 = a3[7];
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    v22 = *(_QWORD *)v21;
    v23 = v21[8];
    sub_20E3CBD0C(*(_QWORD *)v21, v23);
    *(_QWORD *)v20 = v22;
    v20[8] = v23;
    v24 = a3[8];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    v27 = *(_QWORD *)v26;
    v28 = v26[8];
    j__swift_retain(*(_QWORD *)v26);
    *(_QWORD *)v25 = v27;
    v25[8] = v28;
  }
  return a1;
}

uint64_t sub_20E444488(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_20E4A4C70();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  sub_20E39CED8(*(_QWORD *)(a1 + a2[5]), *(_BYTE *)(a1 + a2[5] + 8));
  v5 = a1 + a2[6];
  if ((*(_BYTE *)(v5 + 40) & 1) != 0)
    __swift_destroy_boxed_opaque_existential_1(v5);
  else
    swift_release();
  sub_20E3CBDA8(*(_QWORD *)(a1 + a2[7]), *(_BYTE *)(a1 + a2[7] + 8));
  return j__swift_release(*(_QWORD *)(a1 + a2[8]), *(unsigned __int8 *)(a1 + a2[8] + 8));
}

uint64_t sub_20E44451C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  char v26;

  v6 = sub_20E4A4C70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)v9;
  v11 = *(_BYTE *)(v9 + 8);
  sub_20E39CFAC(*(_QWORD *)v9, v11);
  *(_QWORD *)v8 = v10;
  *(_BYTE *)(v8 + 8) = v11;
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = *(_BYTE *)(a2 + v12 + 40);
  if ((v15 & 1) != 0)
  {
    v16 = *(_OWORD *)(v14 + 24);
    *(_OWORD *)(v13 + 24) = v16;
    (**(void (***)(uint64_t))(v16 - 8))(v13);
  }
  else
  {
    *(_QWORD *)v13 = *(_QWORD *)v14;
    swift_retain();
  }
  *(_BYTE *)(v13 + 40) = v15;
  v17 = a3[7];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = *(_QWORD *)v19;
  v21 = *(_BYTE *)(v19 + 8);
  sub_20E3CBD0C(*(_QWORD *)v19, v21);
  *(_QWORD *)v18 = v20;
  *(_BYTE *)(v18 + 8) = v21;
  v22 = a3[8];
  v23 = a1 + v22;
  v24 = (uint64_t *)(a2 + v22);
  v25 = *v24;
  v26 = *((_BYTE *)v24 + 8);
  j__swift_retain(*v24);
  *(_QWORD *)v23 = v25;
  *(_BYTE *)(v23 + 8) = v26;
  return a1;
}

uint64_t sub_20E444630(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t *v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;

  v6 = sub_20E4A4C70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)v9;
  v11 = *(_BYTE *)(v9 + 8);
  sub_20E39CFAC(*(_QWORD *)v9, v11);
  v12 = *(_QWORD *)v8;
  v13 = *(_BYTE *)(v8 + 8);
  *(_QWORD *)v8 = v10;
  *(_BYTE *)(v8 + 8) = v11;
  sub_20E39CED8(v12, v13);
  if (a1 != a2)
  {
    v14 = a3[6];
    v15 = a1 + v14;
    v16 = a2 + v14;
    sub_20E39D1F8(a1 + v14, &qword_254A1B308);
    if ((*(_BYTE *)(v16 + 40) & 1) != 0)
    {
      v17 = *(_QWORD *)(v16 + 24);
      *(_QWORD *)(v15 + 24) = v17;
      *(_QWORD *)(v15 + 32) = *(_QWORD *)(v16 + 32);
      (**(void (***)(uint64_t, uint64_t))(v17 - 8))(v15, v16);
      *(_BYTE *)(v15 + 40) = 1;
    }
    else
    {
      *(_QWORD *)v15 = *(_QWORD *)v16;
      *(_BYTE *)(v15 + 40) = 0;
      swift_retain();
    }
  }
  v18 = a3[7];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = *(_QWORD *)v20;
  v22 = *(_BYTE *)(v20 + 8);
  sub_20E3CBD0C(*(_QWORD *)v20, v22);
  v23 = *(_QWORD *)v19;
  v24 = *(_BYTE *)(v19 + 8);
  *(_QWORD *)v19 = v21;
  *(_BYTE *)(v19 + 8) = v22;
  sub_20E3CBDA8(v23, v24);
  v25 = a3[8];
  v26 = (uint64_t *)(a1 + v25);
  v27 = (uint64_t *)(a2 + v25);
  v28 = *v27;
  v29 = *((_BYTE *)v27 + 8);
  j__swift_retain(*v27);
  v30 = *v26;
  v31 = *((unsigned __int8 *)v26 + 8);
  *v26 = v28;
  *((_BYTE *)v26 + 8) = v29;
  j__swift_release(v30, v31);
  return a1;
}

uint64_t sub_20E444790(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  _OWORD *v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_20E4A4C70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = (_OWORD *)(a1 + v8);
  v12 = (_OWORD *)(a2 + v8);
  v13 = v12[1];
  *v11 = *v12;
  v11[1] = v13;
  *(_OWORD *)((char *)v11 + 25) = *(_OWORD *)((char *)v12 + 25);
  v14 = a3[7];
  v15 = a3[8];
  v16 = a1 + v14;
  v17 = a2 + v14;
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *(_BYTE *)(v16 + 8) = *(_BYTE *)(v17 + 8);
  v18 = a1 + v15;
  v19 = a2 + v15;
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *(_BYTE *)(v18 + 8) = *(_BYTE *)(v19 + 8);
  return a1;
}

uint64_t sub_20E444848(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v6 = sub_20E4A4C70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = (uint64_t *)(a2 + v7);
  v10 = *v9;
  LOBYTE(v9) = *((_BYTE *)v9 + 8);
  v11 = *(_QWORD *)v8;
  v12 = *(_BYTE *)(v8 + 8);
  *(_QWORD *)v8 = v10;
  *(_BYTE *)(v8 + 8) = (_BYTE)v9;
  sub_20E39CED8(v11, v12);
  if (a1 != a2)
  {
    v13 = a3[6];
    v14 = (_OWORD *)(a2 + v13);
    v15 = (_OWORD *)(a1 + v13);
    sub_20E39D1F8(a1 + v13, &qword_254A1B308);
    v16 = v14[1];
    *v15 = *v14;
    v15[1] = v16;
    *(_OWORD *)((char *)v15 + 25) = *(_OWORD *)((char *)v14 + 25);
  }
  v17 = a3[7];
  v18 = a1 + v17;
  v19 = (uint64_t *)(a2 + v17);
  v20 = *v19;
  LOBYTE(v19) = *((_BYTE *)v19 + 8);
  v21 = *(_QWORD *)v18;
  v22 = *(_BYTE *)(v18 + 8);
  *(_QWORD *)v18 = v20;
  *(_BYTE *)(v18 + 8) = (_BYTE)v19;
  sub_20E3CBDA8(v21, v22);
  v23 = a3[8];
  v24 = (uint64_t *)(a1 + v23);
  v25 = (uint64_t *)(a2 + v23);
  v26 = *v25;
  LOBYTE(v25) = *((_BYTE *)v25 + 8);
  v27 = *v24;
  v28 = *((unsigned __int8 *)v24 + 8);
  *v24 = v26;
  *((_BYTE *)v24 + 8) = (_BYTE)v25;
  j__swift_release(v27, v28);
  return a1;
}

uint64_t sub_20E44494C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_20E444958(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = sub_20E4A4C70();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 > 1)
    return (v9 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t sub_20E4449D4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_20E4449E0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_20E4A4C70();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20) + 8) = -(char)a2;
  return result;
}

uint64_t sub_20E444A5C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_20E4A4C70();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_20E444ADC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E444AEC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  _QWORD *v30;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  _QWORD v40[12];
  char v41;
  uint64_t KeyPath;
  char v43;
  __int128 v44;
  _QWORD v45[21];

  v2 = v1;
  v34 = (_QWORD *)a1;
  v3 = type metadata accessor for _MediaArtworkBody();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v32 - v8;
  v33 = v1 + *(int *)(v10 + 20);
  v11 = *(_QWORD *)v33;
  v12 = *(_BYTE *)(v33 + 8);
  sub_20E39CFAC(*(_QWORD *)v33, v12);
  sub_20E45C99C(v11, v12);
  sub_20E39CED8(v11, v12);
  _s9JetEngine12MediaArtworkV01_aB8_SwiftUIE5SizedV9_resource9withScaleAA0cD8Resource_pSg12CoreGraphics7CGFloatV_tF_0();
  sub_20E39CFAC(v11, v12);
  v13 = sub_20E45C99C(v11, v12);
  sub_20E39CED8(v11, v12);
  sub_20E45E100((uint64_t)&v37);
  v14 = *((_QWORD *)&v38 + 1);
  v15 = v39;
  __swift_project_boxed_opaque_existential_1(&v37, *((uint64_t *)&v38 + 1));
  v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 24))(v14, v15);
  sub_20E4452D0(v2, (uint64_t)v9);
  v17 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v18 = swift_allocObject();
  sub_20E445318((uint64_t)v9, v18 + v17);
  sub_20E4452D0(v2, (uint64_t)v6);
  v19 = swift_allocObject();
  sub_20E445318((uint64_t)v6, v19 + v17);
  v40[11] = swift_getKeyPath();
  v41 = 0;
  KeyPath = swift_getKeyPath();
  v43 = 0;
  v35 = 3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1AF60);
  sub_20E4A4640();
  v44 = v36;
  sub_20E4453F0((uint64_t)v45, (uint64_t)v40);
  *(double *)&v40[5] = v13;
  v40[6] = v16;
  v40[7] = sub_20E44535C;
  v40[8] = v18;
  v40[9] = sub_20E44539C;
  v40[10] = v19;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v37);
  _s18_JetEngine_SwiftUI30MediaArtworkStyleConfigurationV4sizeSo6CGSizeVvg_0();
  v21 = v20;
  v23 = v22;
  v24 = swift_getKeyPath();
  v25 = swift_allocObject();
  *(_QWORD *)(v25 + 16) = v21;
  *(_QWORD *)(v25 + 24) = v23;
  sub_20E3A5E20((uint64_t)v40, (uint64_t)v45, &qword_254A1B320);
  v45[17] = v24;
  v45[18] = sub_20E4454E4;
  v45[19] = v25;
  sub_20E39D1F8((uint64_t)v40, &qword_254A1B320);
  v26 = *(_QWORD *)v33;
  LOBYTE(v25) = *(_BYTE *)(v33 + 8);
  sub_20E39CFAC(*(_QWORD *)v33, v25);
  sub_20E45C99C(v26, v25);
  sub_20E39CED8(v26, v25);
  sub_20E4A4C04();
  v27 = swift_getKeyPath();
  sub_20E3B7F84((uint64_t)v40, (uint64_t)&v37);
  v28 = swift_allocObject();
  v29 = v38;
  *(_OWORD *)(v28 + 16) = v37;
  *(_OWORD *)(v28 + 32) = v29;
  *(_QWORD *)(v28 + 48) = v39;
  v30 = v34;
  sub_20E3A5E20((uint64_t)v45, (uint64_t)v34, &qword_254A1B328);
  v30[20] = v27;
  v30[21] = sub_20E445510;
  v30[22] = v28;
  sub_20E3B8008((uint64_t)v40);
  return sub_20E39D1F8((uint64_t)v45, &qword_254A1B328);
}

void sub_20E444E70(char *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;

  v4 = sub_20E4A563C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_20E4A5648();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((unint64_t)(a1 - 1) < 2)
  {
    v12 = (uint64_t *)(a2 + *(int *)(type metadata accessor for _MediaArtworkBody() + 32));
    v13 = *v12;
    v14 = *((unsigned __int8 *)v12 + 8);
    j__swift_retain(*v12);
    v15 = sub_20E39DC80(v13, v14);
    j__swift_release(v13, v14);
    if (!v15)
      return;
    *v7 = 1;
    (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BE5DB40], v4);
    sub_20E4A566C();
    swift_release();
    goto LABEL_9;
  }
  if (a1)
  {
    v20 = a2 + *(int *)(type metadata accessor for _MediaArtworkBody() + 32);
    v21 = *(_QWORD *)v20;
    v22 = *(unsigned __int8 *)(v20 + 8);
    sub_20E43F21C(a1);
    j__swift_retain(v21);
    v23 = sub_20E39DC80(v21, v22);
    j__swift_release(v21, v22);
    if (!v23)
    {
      sub_20E43F194(a1);
      return;
    }
    *(_QWORD *)v7 = a1;
    v7[8] = 1;
    (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BE5DB30], v4);
    v24 = a1;
    sub_20E4A566C();
    swift_release();
    sub_20E43F194(a1);
LABEL_9:
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return;
  }
  v16 = (uint64_t *)(a2 + *(int *)(type metadata accessor for _MediaArtworkBody() + 32));
  v17 = *v16;
  v18 = *((unsigned __int8 *)v16 + 8);
  j__swift_retain(*v16);
  v19 = sub_20E39DC80(v17, v18);
  j__swift_release(v17, v18);
  if (v19)
  {
    *v11 = 1;
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x24BE5DB58], v8);
    sub_20E4A5684();
    swift_release();
    (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v11, v8);
  }
}

uint64_t sub_20E4450F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  _QWORD v25[3];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v6 = type metadata accessor for MediaArtworkStyleConfiguration(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v25[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for _MediaArtworkBody();
  sub_20E45E100((uint64_t)v25);
  v10 = v26;
  v11 = v27;
  __swift_project_boxed_opaque_existential_1(v25, v26);
  v12 = sub_20E4A4C70();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v8, a2, v12);
  v13 = &v8[*(int *)(v6 + 20)];
  v14 = sub_20E4A398C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v13, a1, v14);
  v15 = a2 + *(int *)(v9 + 28);
  v16 = *(_QWORD *)v15;
  LOBYTE(v9) = *(_BYTE *)(v15 + 8);
  sub_20E3CBD0C(*(_QWORD *)v15, v9);
  v17 = sub_20E45C988(v16, v9);
  sub_20E3CBDA8(v16, v9);
  *(_QWORD *)&v8[*(int *)(v6 + 24)] = v17;
  v18 = MediaArtworkStyle._body(configuration:)((uint64_t)v8, v10, v11);
  sub_20E445518((uint64_t)v8);
  _s18_JetEngine_SwiftUI30MediaArtworkStyleConfigurationV4sizeSo6CGSizeVvg_0();
  _s18_JetEngine_SwiftUI30MediaArtworkStyleConfigurationV4sizeSo6CGSizeVvg_0();
  sub_20E4A48A4();
  sub_20E4A37C4();
  v19 = v28;
  LOBYTE(a2) = v29;
  v20 = v30;
  LOBYTE(v16) = v31;
  v21 = v32;
  v22 = v33;
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  *(_QWORD *)a3 = v18;
  *(_QWORD *)(a3 + 8) = v19;
  *(_BYTE *)(a3 + 16) = a2;
  *(_QWORD *)(a3 + 24) = v20;
  *(_BYTE *)(a3 + 32) = v16;
  *(_QWORD *)(a3 + 40) = v21;
  *(_QWORD *)(a3 + 48) = v22;
  return result;
}

uint64_t sub_20E4452D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for _MediaArtworkBody();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20E445318(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for _MediaArtworkBody();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_20E44535C(char *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for _MediaArtworkBody() - 8) + 80);
  sub_20E444E70(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t sub_20E44539C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for _MediaArtworkBody() - 8) + 80);
  return sub_20E4450F0(a1, v2 + ((v5 + 16) & ~v5), a2);
}

uint64_t sub_20E4453F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19100);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20E445438(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[4];

  v3 = sub_20E4A4E68();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *a2;
  v7 = a2[1];
  sub_20E4A4E74();
  type metadata accessor for CGSize(0);
  v10[3] = v8;
  v10[0] = v6;
  v10[1] = v7;
  return sub_20E443B18((uint64_t)v10, (uint64_t)v5);
}

uint64_t sub_20E4454D4()
{
  return swift_deallocObject();
}

uint64_t sub_20E4454E4(uint64_t a1)
{
  uint64_t v1;

  return sub_20E445438(a1, (uint64_t *)(v1 + 16));
}

uint64_t sub_20E4454EC()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_20E445510(uint64_t a1)
{
  uint64_t v1;

  return sub_20E443C48(a1, v1 + 16);
}

uint64_t sub_20E445518(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MediaArtworkStyleConfiguration(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_20E445558()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254A1B330;
  if (!qword_254A1B330)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1B338);
    v2[0] = sub_20E4455DC();
    v2[1] = sub_20E39D010((unint64_t *)&qword_254A1A2E8, &qword_254A1A2E0, MEMORY[0x24BDF1248]);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254A1B330);
  }
  return result;
}

unint64_t sub_20E4455DC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254A1B340;
  if (!qword_254A1B340)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1B328);
    v2[0] = sub_20E39D010(&qword_254A1B348, &qword_254A1B320, (uint64_t)&unk_20E4AD260);
    v2[1] = sub_20E39D010((unint64_t *)&qword_254A1A2E8, &qword_254A1A2E0, MEMORY[0x24BDF1248]);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254A1B340);
  }
  return result;
}

uint64_t EnvironmentValues.metricsContext.getter()
{
  sub_20E3DC550();
  return sub_20E4A3C08();
}

uint64_t EnvironmentValues.metricsContext.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  uint64_t v7;

  v2 = sub_20E4A5384();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16))((char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2, v4);
  sub_20E3DC550();
  sub_20E4A3C14();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

uint64_t View.metricsContext(_:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, uint64_t);
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v27 = a2;
  v25 = a3;
  v26 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0D18);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CE8);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v22 - v11;
  v13 = sub_20E4A56E4();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_20E4A5384();
  v23 = *(_QWORD *)(v17 - 8);
  v24 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)v22 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22[1] = swift_getKeyPath();
  sub_20E4A5324();
  MEMORY[0x212BBC958](v12, v13);
  v20 = *(void (**)(char *, uint64_t))(v7 + 8);
  v20(v12, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v5, 1, v13) == 1)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v16, *MEMORY[0x24BE5DCD8], v13);
    sub_20E39D1F8((uint64_t)v5, &qword_253ED0D18);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v5, v13);
  }
  sub_20E4A5324();
  sub_20E4A530C();
  v20(v9, v6);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  sub_20E4A4250();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v19, v24);
}

uint64_t View.transformMetricsContext(transform:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_getKeyPath();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  swift_retain();
  sub_20E4A4388();
  swift_release();
  return swift_release();
}

uint64_t sub_20E445A50(uint64_t a1, void (*a2)(uint64_t, double))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, uint64_t);
  int v19;
  uint64_t result;
  uint64_t v21;
  void (*v22)(uint64_t, double);

  v22 = a2;
  v3 = sub_20E4A56E4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0D18);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CE8);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v21 - v16;
  v22(a1, v15);
  sub_20E4A5324();
  MEMORY[0x212BBC958](v17, v3);
  v18 = *(void (**)(char *, uint64_t))(v11 + 8);
  v18(v17, v10);
  v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3);
  result = sub_20E39D1F8((uint64_t)v9, &qword_253ED0D18);
  if (v19 == 1)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BE5DCD8], v3);
    sub_20E4A5324();
    sub_20E4A536C();
    v18(v13, v10);
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return result;
}

uint64_t sub_20E445C20()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E445C44(uint64_t a1)
{
  uint64_t v1;

  return sub_20E445A50(a1, *(void (**)(uint64_t, double))(v1 + 16));
}

uint64_t View.optOutFromMetricsValidations()()
{
  return View.transformMetricsContext(transform:)((uint64_t)sub_20E445C64, 0);
}

uint64_t sub_20E445C64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CE8);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_20E4A56E4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, double))(v5 + 104))(v8, *MEMORY[0x24BE5DCE0], v4, v6);
  sub_20E4A5324();
  sub_20E4A536C();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_20E445D64()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_20E4A5384();
  __swift_allocate_value_buffer(v0, qword_253ED0670);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_253ED0670);
  return sub_20E445DAC(v1);
}

uint64_t sub_20E445DAC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v30 = a1;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CE0);
  v29 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v2 = (char *)&v24 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_20E4A33B0();
  v4 = *(_QWORD *)(v3 - 8);
  v27 = v3;
  v28 = v4;
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CE8);
  v25 = *(_QWORD *)(v7 - 8);
  v26 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_20E4A56E4();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_20E4A5384();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v24 - v19;
  sub_20E4A5378();
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x24BE5DCD8], v10);
  sub_20E4A5324();
  sub_20E4A530C();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v26);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v21 = *(void (**)(char *, uint64_t))(v15 + 8);
  v21(v17, v14);
  sub_20E4A33A4();
  sub_20E4A5348();
  v22 = v27;
  sub_20E4A530C();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v2, v31);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v22);
  return ((uint64_t (*)(char *, uint64_t))v21)(v20, v14);
}

uint64_t sub_20E446000@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_253ED0688 != -1)
    swift_once();
  v2 = sub_20E4A5384();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_253ED0670);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_20E446070()
{
  sub_20E446A90();
  return sub_20E4A389C();
}

void (*EnvironmentValues.metricsContext.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = sub_20E4A5384();
  v3[1] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[2] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[3] = malloc(v6);
  v3[4] = malloc(v6);
  v3[5] = malloc(v6);
  v3[6] = sub_20E3DC550();
  sub_20E4A3C08();
  return sub_20E446164;
}

void sub_20E446164(uint64_t a1, char a2)
{
  _QWORD *v3;
  void (*v4)(_QWORD, _QWORD, _QWORD);
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void *, uint64_t);

  v3 = *(_QWORD **)a1;
  v4 = *(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(*(_QWORD *)a1 + 16) + 16);
  v4(*(_QWORD *)(*(_QWORD *)a1 + 32), v3[5], v3[1]);
  v5 = (void *)v3[5];
  v6 = (void *)v3[3];
  v7 = (void *)v3[4];
  v8 = v3[1];
  v9 = v3[2];
  if ((a2 & 1) != 0)
  {
    v4(v3[3], v3[4], v3[1]);
    sub_20E4A3C14();
    v10 = *(void (**)(void *, uint64_t))(v9 + 8);
    v10(v7, v8);
  }
  else
  {
    sub_20E4A3C14();
    v10 = *(void (**)(void *, uint64_t))(v9 + 8);
  }
  v10(v5, v8);
  free(v5);
  free(v7);
  free(v6);
  free(v3);
}

uint64_t _s7SwiftUI17EnvironmentValuesV011_JetEngine_aB0E20metricsFieldsContextAD013OpaqueMetricshI0Vvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD v16[2];

  v16[1] = a1;
  v16[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CE0);
  v1 = *(_QWORD *)(v16[0] - 8);
  MEMORY[0x24BDAC7A8](v16[0]);
  v3 = (char *)v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_20E4A5384();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED2428);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_20E4A33B0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20E3DC50C();
  sub_20E4A3C08();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_20E39D1F8((uint64_t)v10, &qword_253ED2428);
    sub_20E3DC550();
    return sub_20E4A3C08();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
    sub_20E3DC550();
    sub_20E4A3C08();
    sub_20E4A5354();
    sub_20E4A530C();
    (*(void (**)(char *, _QWORD))(v1 + 8))(v3, v16[0]);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

uint64_t OpaqueMetricsFieldsContext.description.getter()
{
  sub_20E4A5384();
  sub_20E4A626C();
  return 0;
}

uint64_t sub_20E4464AC()
{
  sub_20E4A5384();
  sub_20E4A626C();
  return 0;
}

uint64_t ActionDispatcher.perform(_:withOpaqueMetrics:asPartOf:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[2];
  uint64_t v19;

  v19 = a2;
  v18[0] = a1;
  v18[1] = a4;
  v4 = sub_20E4A5000();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v18 - v6;
  v8 = type metadata accessor for OpaqueMetricsFieldsContext();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_20E4A4A24();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_20E4A4EBC() & 1) != 0)
  {
    swift_retain();
  }
  else
  {
    sub_20E4466FC(v19, (uint64_t)v10);
    sub_20E4A4A00();
    sub_20E4A4F10();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  v15 = sub_20E4A5384();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v7, v19, v15);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BE5D098], v4);
  v16 = sub_20E4A5054();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v16;
}

uint64_t type metadata accessor for OpaqueMetricsFieldsContext()
{
  uint64_t result;

  result = qword_253ED0830;
  if (!qword_253ED0830)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_20E4466FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for OpaqueMetricsFieldsContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t initializeBufferWithCopyOfBuffer for OpaqueMetricsFieldsContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_20E4A5384();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for OpaqueMetricsFieldsContext(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_20E4A5384();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for OpaqueMetricsFieldsContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_20E4A5384();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for OpaqueMetricsFieldsContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_20E4A5384();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for OpaqueMetricsFieldsContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_20E4A5384();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for OpaqueMetricsFieldsContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_20E4A5384();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for OpaqueMetricsFieldsContext()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_20E4468D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_20E4A5384();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for OpaqueMetricsFieldsContext()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_20E44691C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_20E4A5384();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_20E44695C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_20E4A5384();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_20E4469C4(uint64_t a1)
{
  return get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyxAA30_EnvironmentKeyWritingModifierVy9JetEngine20MetricsFieldsContextVGGAaBHPxAaBHD1__AjA0cI0HPyHCHCTm(a1, &qword_253ED0C30, &qword_253ED0C28, MEMORY[0x24BDF1028]);
}

uint64_t sub_20E4469E0(uint64_t a1)
{
  return get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyxAA30_EnvironmentKeyWritingModifierVy9JetEngine20MetricsFieldsContextVGGAaBHPxAaBHD1__AjA0cI0HPyHCHCTm(a1, &qword_253ED0C60, &qword_253ED0C58, MEMORY[0x24BDF1248]);
}

uint64_t get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyxAA30_EnvironmentKeyWritingModifierVy9JetEngine20MetricsFieldsContextVGGAaBHPxAaBHD1__AjA0cI0HPyHCHCTm(uint64_t a1, uint64_t *a2, unint64_t *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[2];

  v7 = *(_QWORD *)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
  v8 = sub_20E4A39D4();
  v10[0] = v7;
  v10[1] = sub_20E39D010(a3, a2, a4);
  return MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v8, v10);
}

ValueMetadata *type metadata accessor for MetricsContextKey()
{
  return &type metadata for MetricsContextKey;
}

unint64_t sub_20E446A90()
{
  unint64_t result;
  uint64_t v1;

  result = qword_253ED0D08;
  if (!qword_253ED0D08)
  {
    v1 = sub_20E4A5384();
    result = MEMORY[0x212BBDF90](MEMORY[0x24BE5D6E0], v1);
    atomic_store(result, (unint64_t *)&qword_253ED0D08);
  }
  return result;
}

uint64_t sub_20E446AD8()
{
  sub_20E447DEC();
  return sub_20E4A3C08();
}

uint64_t sub_20E446B0C()
{
  sub_20E447DEC();
  return sub_20E4A3C08();
}

uint64_t sub_20E446B48(uint64_t a1)
{
  uint64_t v2;
  _BYTE v3[40];

  sub_20E3C39FC(a1, (uint64_t)v3);
  sub_20E3C39FC((uint64_t)v3, (uint64_t)&v2);
  sub_20E447DEC();
  sub_20E4A3C14();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
}

uint64_t sub_20E446BA4@<X0>(uint64_t a1@<X0>, char a2@<W1>, char *a3@<X2>, char a4@<W3>, char *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  char v16;
  char v17;
  uint64_t v18;
  uint64_t result;

  v16 = *a3;
  v17 = *a5;
  v18 = sub_20E3C3B10(a1);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a8 - 8) + 8))(a1, a8);
  *(_QWORD *)a9 = v18;
  *(_BYTE *)(a9 + 8) = a2;
  *(_BYTE *)(a9 + 9) = v16;
  *(_BYTE *)(a9 + 10) = a4;
  *(_BYTE *)(a9 + 11) = v17;
  *(_QWORD *)(a9 + 16) = a6;
  *(_QWORD *)(a9 + 24) = a7;
  return result;
}

uint64_t sub_20E446C40(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  char v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  char v20;
  __int128 v21;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v9 = (char *)&v16 - v8;
  v10 = *((_BYTE *)a1 + 8);
  v11 = *((_BYTE *)a1 + 9);
  v12 = *((_BYTE *)a1 + 10);
  v13 = *((_BYTE *)a1 + 11);
  v16 = *a1;
  v17 = v10;
  v18 = v11;
  v19 = v12;
  v20 = v13;
  v21 = *((_OWORD *)a1 + 1);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(a3 + 24))(&v16, a2, a3);
  swift_getAssociatedConformanceWitness();
  v14 = sub_20E3C3B10((uint64_t)v9);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, AssociatedTypeWitness);
  return v14;
}

uint64_t FlowSheetContentStyleConfiguration.PresentationStyle.hash(into:)()
{
  return sub_20E4A641C();
}

BOOL static FlowSheetContentStyleConfiguration.PresentationStyle.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t FlowSheetContentStyleConfiguration.PresentationStyle.hashValue.getter()
{
  sub_20E4A6410();
  sub_20E4A641C();
  return sub_20E4A6428();
}

uint64_t FlowSheetContentStyleConfiguration.content.getter()
{
  return swift_retain();
}

uint64_t FlowSheetContentStyleConfiguration.isRoot.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 8);
}

void FlowSheetContentStyleConfiguration.presentationStyle.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 9);
}

uint64_t FlowSheetContentStyleConfiguration.hidesDoneButton.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 10);
}

void FlowSheetContentStyleConfiguration.doneButtonLabelStyle.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 11);
}

uint64_t FlowSheetContentStyleConfiguration.dismissAction.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_retain();
  return v1;
}

uint64_t sub_20E446E48()
{
  return sub_20E4A461C();
}

uint64_t sub_20E446EC4@<X0>(unsigned int a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  char v5;
  uint64_t v6;

  if (HIBYTE(a1) == 1)
  {
    if (qword_253ED2A20 == -1)
      goto LABEL_5;
    goto LABEL_6;
  }
  if (qword_253ED2A20 != -1)
LABEL_6:
    swift_once();
LABEL_5:
  sub_20E4A32A8();
  sub_20E3C3948();
  result = sub_20E4A41C0();
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = v4;
  *(_BYTE *)(a2 + 16) = v5 & 1;
  *(_QWORD *)(a2 + 24) = v6;
  return result;
}

uint64_t sub_20E446FDC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_20E4A4598();
  *a1 = result;
  return result;
}

uint64_t DefaultFlowSheetContentStyle.makeBody(configuration:)()
{
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1B350);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1B358);
  sub_20E447488();
  swift_getOpaqueTypeConformance2();
  sub_20E4A449C();
  return swift_release();
}

uint64_t sub_20E4470EC@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t OpaqueTypeConformance2;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  _QWORD v34[2];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  ValueMetadata *v40;
  uint64_t v41;
  unint64_t v42;

  v37 = a4;
  v9 = sub_20E4A3E48();
  MEMORY[0x24BDAC7A8](v9);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1B368);
  v38 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1B358);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)v34 - v17;
  if ((a2 & 0x10101) == 1)
  {
    v35 = v13;
    v19 = sub_20E4A3E3C();
    v34[1] = v34;
    MEMORY[0x24BDAC7A8](v19);
    v36 = a5;
    v34[-4] = a1;
    LOBYTE(v34[-3]) = a2 & 1;
    *(_WORD *)((char *)&v34[-3] + 1) = 0;
    BYTE3(v34[-3]) = HIBYTE(a2);
    v20 = v37;
    v34[-2] = a3;
    v34[-1] = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254A1B3A0);
    v21 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1B3A8);
    v22 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1B3B0);
    v23 = sub_20E39D010(&qword_254A1B3B8, &qword_254A1B3B0, MEMORY[0x24BDF43B0]);
    v24 = sub_20E447E7C();
    v39 = v22;
    v40 = &type metadata for FlowSheetDoneButtonLabelStyle._LabelStyle;
    v41 = v23;
    v42 = v24;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    v39 = v21;
    v40 = (ValueMetadata *)OpaqueTypeConformance2;
    v13 = v35;
    swift_getOpaqueTypeConformance2();
    sub_20E4A3704();
    v26 = sub_20E39D010(&qword_254A1B370, &qword_254A1B368, MEMORY[0x24BDEB848]);
    MEMORY[0x212BBB440](v12, v10, v26);
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1B398);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v15, 0, 1, v27);
    v39 = v10;
    v40 = (ValueMetadata *)v26;
    v28 = swift_getOpaqueTypeConformance2();
    MEMORY[0x212BBB44C](v15, v27, v28);
    sub_20E447E30((uint64_t)v15);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v12, v10);
  }
  else
  {
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1B398);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v15, 1, 1, v29);
    v30 = sub_20E39D010(&qword_254A1B370, &qword_254A1B368, MEMORY[0x24BDEB848]);
    v39 = v10;
    v40 = (ValueMetadata *)v30;
    v31 = swift_getOpaqueTypeConformance2();
    MEMORY[0x212BBB44C](v15, v29, v31);
    sub_20E447E30((uint64_t)v15);
  }
  v32 = sub_20E447488();
  MEMORY[0x212BBB440](v18, v13, v32);
  return sub_20E447E30((uint64_t)v18);
}

uint64_t sub_20E44747C()
{
  return sub_20E447ECC((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_20E4470EC);
}

unint64_t sub_20E447488()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[3];

  result = qword_254A1B360;
  if (!qword_254A1B360)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1B358);
    v2[1] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1B368);
    v2[2] = sub_20E39D010(&qword_254A1B370, &qword_254A1B368, MEMORY[0x24BDEB848]);
    v2[0] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDF5568], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254A1B360);
  }
  return result;
}

uint64_t sub_20E447534@<X0>(uint64_t a1@<X0>, unsigned int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  unsigned int v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int16 v34;
  char v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  ValueMetadata *v40;
  uint64_t v41;
  unint64_t v42;

  v31 = a5;
  v9 = HIBYTE(a2);
  v32 = sub_20E4A3A40();
  v30 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19628);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1B3B0);
  v27 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1B3A8);
  v19 = *(_QWORD *)(v18 - 8);
  v28 = v18;
  v29 = v19;
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v27 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20E4A3614();
  v22 = sub_20E4A3620();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v14, 0, 1, v22);
  v33 = a1;
  v34 = a2 & 0x101;
  v35 = BYTE2(a2) & 1;
  v36 = v9;
  v37 = a3;
  v38 = a4;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1B3C8);
  sub_20E39D010(&qword_254A1B3D0, &qword_254A1B3C8, MEMORY[0x24BDF41A8]);
  sub_20E4A4688();
  LOBYTE(v39) = v9;
  v23 = sub_20E39D010(&qword_254A1B3B8, &qword_254A1B3B0, MEMORY[0x24BDF43B0]);
  v24 = sub_20E447E7C();
  sub_20E4A4208();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v17, v15);
  sub_20E4A3A34();
  v39 = v15;
  v40 = &type metadata for FlowSheetDoneButtonLabelStyle._LabelStyle;
  v41 = v23;
  v42 = v24;
  swift_getOpaqueTypeConformance2();
  v25 = v28;
  sub_20E4A42D4();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v32);
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v21, v25);
}

uint64_t sub_20E4477F8()
{
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1B350);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1B358);
  sub_20E447488();
  swift_getOpaqueTypeConformance2();
  sub_20E4A449C();
  return swift_release();
}

uint64_t PlainFlowSheetContentStyle.makeBody(configuration:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_20E4478E8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t View.flowSheetContentStyle<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *boxed_opaque_existential_1Tm;
  uint64_t v10[5];

  swift_getKeyPath();
  v10[3] = a3;
  v10[4] = a5;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v10);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(boxed_opaque_existential_1Tm, a1, a3);
  sub_20E4A4250();
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
}

uint64_t sub_20E44799C()
{
  sub_20E447DEC();
  return sub_20E4A3C08();
}

unint64_t sub_20E4479E0()
{
  unint64_t result;

  result = qword_254A1B378;
  if (!qword_254A1B378)
  {
    result = MEMORY[0x212BBDF90](&protocol conformance descriptor for FlowSheetContentStyleConfiguration.PresentationStyle, &type metadata for FlowSheetContentStyleConfiguration.PresentationStyle);
    atomic_store(result, (unint64_t *)&qword_254A1B378);
  }
  return result;
}

uint64_t sub_20E447A24()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E447A34()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t dispatch thunk of FlowSheetContentStyle.makeBody(configuration:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t destroy for FlowSheetContentStyleConfiguration()
{
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for FlowSheetContentStyleConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_WORD *)(a1 + 10) = *(_WORD *)(a2 + 10);
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for FlowSheetContentStyleConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_BYTE *)(a1 + 10) = *(_BYTE *)(a2 + 10);
  *(_BYTE *)(a1 + 11) = *(_BYTE *)(a2 + 11);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for FlowSheetContentStyleConfiguration(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_BYTE *)(a1 + 10) = *(_BYTE *)(a2 + 10);
  *(_BYTE *)(a1 + 11) = *(_BYTE *)(a2 + 11);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for FlowSheetContentStyleConfiguration()
{
  return &type metadata for FlowSheetContentStyleConfiguration;
}

uint64_t storeEnumTagSinglePayload for FlowSheetContentStyleConfiguration.PresentationStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_20E447C04 + 4 * byte_20E4ADA45[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_20E447C38 + 4 * byte_20E4ADA40[v4]))();
}

uint64_t sub_20E447C38(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20E447C40(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20E447C48);
  return result;
}

uint64_t sub_20E447C54(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20E447C5CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_20E447C60(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20E447C68(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FlowSheetContentStyleConfiguration.PresentationStyle()
{
  return &type metadata for FlowSheetContentStyleConfiguration.PresentationStyle;
}

ValueMetadata *type metadata accessor for DefaultFlowSheetContentStyle()
{
  return &type metadata for DefaultFlowSheetContentStyle;
}

ValueMetadata *type metadata accessor for PlainFlowSheetContentStyle()
{
  return &type metadata for PlainFlowSheetContentStyle;
}

uint64_t sub_20E447CA4()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1B350);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1B358);
  sub_20E447488();
  swift_getOpaqueTypeConformance2();
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E447D2C()
{
  return MEMORY[0x24BDF4760];
}

uint64_t sub_20E447D38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 16);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1B380);
  v2 = sub_20E4A39D4();
  v4[0] = v1;
  v4[1] = sub_20E39D010(&qword_254A1B388, &qword_254A1B380, MEMORY[0x24BDF1028]);
  return MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v2, v4);
}

unint64_t sub_20E447DBC@<X0>(uint64_t a1@<X8>)
{
  unint64_t result;

  *(_QWORD *)(a1 + 24) = &type metadata for DefaultFlowSheetContentStyle;
  result = sub_20E447F60();
  *(_QWORD *)(a1 + 32) = result;
  return result;
}

unint64_t sub_20E447DEC()
{
  unint64_t result;

  result = qword_254A1B390;
  if (!qword_254A1B390)
  {
    result = MEMORY[0x212BBDF90](&unk_20E4ADBFC, &type metadata for FlowSheetContentStyleKey);
    atomic_store(result, (unint64_t *)&qword_254A1B390);
  }
  return result;
}

uint64_t sub_20E447E30(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1B358);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20E447E70()
{
  return sub_20E447ECC((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_20E447534);
}

unint64_t sub_20E447E7C()
{
  unint64_t result;

  result = qword_254A1B3C0;
  if (!qword_254A1B3C0)
  {
    result = MEMORY[0x212BBDF90](&unk_20E4ACA14, &type metadata for FlowSheetDoneButtonLabelStyle._LabelStyle);
    atomic_store(result, (unint64_t *)&qword_254A1B3C0);
  }
  return result;
}

uint64_t sub_20E447EC0()
{
  return sub_20E447ECC((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_20E446E48);
}

uint64_t sub_20E447ECC(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;

  if (*(_BYTE *)(v1 + 25))
    v2 = 256;
  else
    v2 = 0;
  v3 = v2 | *(unsigned __int8 *)(v1 + 24);
  if (*(_BYTE *)(v1 + 26))
    v4 = 0x10000;
  else
    v4 = 0;
  return a1(*(_QWORD *)(v1 + 16), v3 | v4 | (*(unsigned __int8 *)(v1 + 27) << 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_20E447F10@<X0>(uint64_t a1@<X8>)
{
  unsigned __int8 *v1;
  int v2;
  int v3;
  int v4;

  if (v1[25])
    v2 = 256;
  else
    v2 = 0;
  v3 = v2 | v1[24];
  if (v1[26])
    v4 = 0x10000;
  else
    v4 = 0;
  return sub_20E446EC4(v3 | v4 | (v1[27] << 24), a1);
}

ValueMetadata *type metadata accessor for FlowSheetContentStyleKey()
{
  return &type metadata for FlowSheetContentStyleKey;
}

unint64_t sub_20E447F60()
{
  unint64_t result;

  result = qword_254A1B3D8;
  if (!qword_254A1B3D8)
  {
    result = MEMORY[0x212BBDF90](&protocol conformance descriptor for DefaultFlowSheetContentStyle, &type metadata for DefaultFlowSheetContentStyle);
    atomic_store(result, (unint64_t *)&qword_254A1B3D8);
  }
  return result;
}

uint64_t sub_20E447FA4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_20E4048CC();
  result = sub_20E4A3C08();
  *a1 = v3;
  return result;
}

uint64_t sub_20E447FF0()
{
  sub_20E4048CC();
  swift_retain();
  return sub_20E4A3C14();
}

uint64_t ContentUnavailableView.init<>(error:retry:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  id v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t result;
  uint64_t v38;

  type metadata accessor for ContentUnavailableTextLogBuilder();
  v8 = swift_allocObject();
  *(_WORD *)(v8 + 24) = 514;
  *(_QWORD *)(v8 + 16) = a1;
  swift_getErrorValue();
  v9 = a1;
  if ((sub_20E449678(v38) & 1) != 0
    && (v10 = (void *)objc_opt_self(),
        v11 = (void *)sub_20E4A5C18(),
        LODWORD(v10) = objc_msgSend(v10, sel_BOOLForEntitlement_, v11),
        v11,
        (_DWORD)v10))
  {
    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = a1;
    v13 = swift_allocObject();
    *(_QWORD *)(v13 + 16) = a1;
    *(_QWORD *)(v13 + 24) = v8;
    *(_OWORD *)(a4 + 56) = 0u;
    *(_OWORD *)(a4 + 72) = 0u;
    *(_QWORD *)(a4 + 88) = 0;
    *(_QWORD *)(a4 + 96) = swift_getKeyPath();
    *(_BYTE *)(a4 + 104) = 0;
    v14 = (int *)__swift_instantiateConcreteTypeFromMangledName(qword_253ED1E68);
    v15 = (uint64_t *)(a4 + v14[21]);
    *v15 = swift_getKeyPath();
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED23A0);
    swift_storeEnumTagMultiPayload();
    v16 = a4 + v14[22];
    *(_QWORD *)v16 = swift_getKeyPath();
    *(_BYTE *)(v16 + 8) = 0;
    v17 = a4 + v14[23];
    *(_QWORD *)v17 = swift_getKeyPath();
    *(_BYTE *)(v17 + 8) = 0;
    *(_QWORD *)a4 = sub_20E449FF4;
    *(_QWORD *)(a4 + 8) = v12;
    *(_QWORD *)(a4 + 16) = sub_20E44A010;
    *(_QWORD *)(a4 + 24) = v13;
    *(_QWORD *)(a4 + 32) = sub_20E4497CC;
    *(_QWORD *)(a4 + 40) = 0;
    *(_BYTE *)(a4 + 48) = 1;
    v18 = a1;
    v19 = a1;
    v20 = qword_253ED21B8;
    swift_retain();
    if (v20 != -1)
      swift_once();
    v21 = *(_QWORD *)(a4 + 56);
    swift_retain();
    sub_20E3CF5C0(v21);
    *(_QWORD *)(a4 + 56) = a2;
    *(_QWORD *)(a4 + 64) = a3;
  }
  else
  {
    v22 = swift_allocObject();
    *(_QWORD *)(v22 + 16) = a1;
    v23 = swift_allocObject();
    *(_QWORD *)(v23 + 16) = a1;
    *(_QWORD *)(v23 + 24) = v8;
    v24 = swift_allocObject();
    *(_QWORD *)(v24 + 16) = a2;
    *(_QWORD *)(v24 + 24) = a3;
    *(_OWORD *)(a4 + 56) = 0u;
    *(_OWORD *)(a4 + 72) = 0u;
    *(_QWORD *)(a4 + 88) = 0;
    *(_QWORD *)(a4 + 96) = swift_getKeyPath();
    *(_BYTE *)(a4 + 104) = 0;
    v25 = (int *)__swift_instantiateConcreteTypeFromMangledName(qword_253ED1E68);
    v26 = (uint64_t *)(a4 + v25[21]);
    *v26 = swift_getKeyPath();
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED23A0);
    swift_storeEnumTagMultiPayload();
    v27 = a4 + v25[22];
    *(_QWORD *)v27 = swift_getKeyPath();
    *(_BYTE *)(v27 + 8) = 0;
    v28 = a4 + v25[23];
    *(_QWORD *)v28 = swift_getKeyPath();
    *(_BYTE *)(v28 + 8) = 0;
    *(_QWORD *)a4 = sub_20E4537A4;
    *(_QWORD *)(a4 + 8) = v22;
    *(_QWORD *)(a4 + 16) = sub_20E453778;
    *(_QWORD *)(a4 + 24) = v23;
    *(_QWORD *)(a4 + 32) = sub_20E449B84;
    *(_QWORD *)(a4 + 40) = v24;
    *(_BYTE *)(a4 + 48) = 1;
    v29 = a1;
    v30 = a1;
    v31 = qword_253ED21B8;
    swift_retain();
    swift_retain();
    if (v31 != -1)
      swift_once();
  }
  v32 = (void *)sub_20E4A32D8();
  v33 = (id)AMSLogableError();

  v34 = sub_20E4A5C3C();
  v36 = v35;
  swift_release();

  swift_bridgeObjectRelease();
  *(_QWORD *)(a4 + 72) = v34;
  *(_QWORD *)(a4 + 80) = v36;
  result = swift_release();
  *(_QWORD *)(a4 + 88) = v8;
  return result;
}

{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t result;

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  type metadata accessor for ContentUnavailableTextLogBuilder();
  v9 = swift_allocObject();
  *(_WORD *)(v9 + 24) = 514;
  *(_QWORD *)(v9 + 16) = a1;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v9;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = sub_20E44F67C;
  *(_QWORD *)(v12 + 24) = v8;
  sub_20E44F074((uint64_t)sub_20E44F684, v10, (uint64_t)sub_20E44F690, v11, (uint64_t)sub_20E44F698, v12, a4);
  v13 = a1;
  v14 = a1;
  swift_retain();
  result = swift_release();
  *(_QWORD *)(a4 + 88) = v9;
  return result;
}

uint64_t type metadata accessor for ContentUnavailableTextLogBuilder()
{
  return objc_opt_self();
}

uint64_t View.contentUnavailableViewPresentationContext(_:)()
{
  swift_getKeyPath();
  sub_20E4A4250();
  return swift_release();
}

uint64_t sub_20E448614(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  _QWORD v21[6];

  v4 = sub_20E4A5720();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getErrorValue();
  if ((sub_20E449678(v21[5]) & 1) != 0)
  {
    *(_BYTE *)(a2 + 24) = 0;
    sub_20E4A5714();
    v8 = sub_20E4A5708();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    if (qword_253ED21B8 != -1)
      swift_once();
    if (*((_BYTE *)off_253ED21B0 + 16) == 1)
    {
      *(_BYTE *)(a2 + 25) = 0;
      if ((v8 & 1) != 0)
      {
        if (qword_253ED2A20 != -1)
          swift_once();
      }
      else if (qword_253ED2A20 != -1)
      {
        swift_once();
      }
      sub_20E4A32A8();
      __swift_instantiateConcreteTypeFromMangledName(&qword_254A1B518);
      v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_20E4A72D0;
      v10 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
      v11 = NSBundle.displayName.getter();
      v13 = v12;

      *(_QWORD *)(v9 + 56) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v9 + 64) = sub_20E453298();
      *(_QWORD *)(v9 + 32) = v11;
      *(_QWORD *)(v9 + 40) = v13;
      v14 = sub_20E4A5C48();
      v16 = v15;
      swift_bridgeObjectRelease();
      v21[0] = v14;
      v21[1] = v16;
      sub_20E3C3948();
      v17 = sub_20E4A41C0();
      goto LABEL_17;
    }
    *(_BYTE *)(a2 + 25) = 1;
  }
  else
  {
    *(_BYTE *)(a2 + 24) = 1;
  }
  sub_20E4A3CA4();
  if (qword_253ED2A20 != -1)
    swift_once();
  v18 = (id)qword_253ED2A18;
  v17 = sub_20E4A41B4();
LABEL_17:
  v19 = v17;
  swift_release();

  return v19;
}

uint64_t sub_20E4489EC()
{
  return sub_20E4A3B0C();
}

uint64_t sub_20E448A0C(uint64_t a1)
{
  uint64_t v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v2 = sub_20E4A3668();
  v3 = MEMORY[0x24BDAC7A8](v2);
  (*(void (**)(char *, uint64_t, double))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  return sub_20E4A3B18();
}

uint64_t sub_20E448A88()
{
  return sub_20E4A3680();
}

void *sub_20E448AA0()
{
  void *result;

  type metadata accessor for JetCellularDataInquiry();
  swift_allocObject();
  result = (void *)sub_20E448ADC();
  off_253ED21B0 = result;
  return result;
}

uint64_t sub_20E448ADC()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  void *v3;
  id v4;
  _QWORD v6[6];

  *(_BYTE *)(v0 + 16) = 0;
  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDC2708]), sel_init);
  *(_QWORD *)(v0 + 24) = v1;
  v2 = swift_allocObject();
  swift_weakInit();
  v6[4] = sub_20E453300;
  v6[5] = v2;
  v6[0] = MEMORY[0x24BDAC760];
  v6[1] = 1107296256;
  v6[2] = sub_20E448C20;
  v6[3] = &block_descriptor_3;
  v3 = _Block_copy(v6);
  v4 = v1;
  swift_release();
  objc_msgSend(v4, sel_setCellularDataRestrictionDidUpdateNotifier_, v3);
  _Block_release(v3);

  return v0;
}

uint64_t sub_20E448BC8(uint64_t a1)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    *(_BYTE *)(result + 16) = a1 == 1;
    return swift_release();
  }
  return result;
}

uint64_t sub_20E448C20(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

uint64_t sub_20E448C5C()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

void sub_20E448C80(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[28];

  v11[15] = a2;
  v3 = sub_20E4A4124();
  v11[6] = *(_QWORD *)(v3 - 8);
  v11[7] = v3;
  MEMORY[0x24BDAC7A8](v3);
  v11[8] = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED2378);
  MEMORY[0x24BDAC7A8](v5);
  v6 = a1[3];
  v8 = a1[4];
  v7 = a1[5];
  v9 = a1[6];
  v10 = a1[7];
  v11[20] = a1[2];
  v11[21] = v6;
  v11[22] = v8;
  v11[23] = v7;
  v11[3] = v7;
  v11[2] = v9;
  v11[24] = v9;
  v11[25] = v10;
  v11[1] = v10;
  type metadata accessor for _CompatibilityContentUnavailableViewContent();
}

uint64_t sub_20E448D60(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (**v13)();
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  void (**v37)();
  void (*v38)(void (**)(), uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v43[96];

  v9 = MEMORY[0x212BBDF90](&unk_20E4AE2F8, a1);
  *(_QWORD *)(v7 - 272) = v9;
  v11 = type metadata accessor for _ContentUnavailableScrollView(0, a1, v9, v10);
  *(_QWORD *)(v7 - 264) = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (void (**)())&v43[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v14);
  v16 = &v43[-v15];
  *(_QWORD *)(v7 - 176) = v2;
  v17 = sub_20E4A3E00();
  *(_QWORD *)(v7 - 200) = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(v7 - 192) = v17;
  v18 = MEMORY[0x24BDAC7A8](v17);
  *(_QWORD *)(v7 - 208) = &v43[-v19];
  (*(void (**)(uint64_t, _QWORD, uint64_t, double))(*(_QWORD *)(v4 - 8) + 32))(v7 - 144, *(_QWORD *)(v7 - 216), v4, v18);
  v21 = *(_QWORD *)(v7 - 144);
  v20 = *(_QWORD *)(v7 - 136);
  if ((*(_BYTE *)(v7 - 96) & 1) != 0)
  {
    v23 = *(_QWORD *)(v7 - 128);
    v22 = *(_QWORD *)(v7 - 120);
    v24 = *(_QWORD *)(v7 - 112);
    v25 = *(_QWORD *)(v7 - 104);
    v26 = (_QWORD *)swift_allocObject();
    v26[2] = v21;
    v26[3] = v20;
    v26[4] = v23;
    v26[5] = v22;
    v26[6] = v24;
    v26[7] = v25;
    *(_QWORD *)(v7 - 152) = 0x4076800000000000;
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v7 - 256) + 104))(*(_QWORD *)(v7 - 240), *MEMORY[0x24BDF1880], *(_QWORD *)(v7 - 248));
    swift_retain();
    swift_retain();
    sub_20E3E592C(v24);
    swift_retain();
    swift_retain();
    sub_20E3E592C(v24);
    sub_20E45228C();
    sub_20E4A3758();
    *v5 = sub_20E4530B8;
    v5[1] = v26;
    MEMORY[0x212BBDF90](&unk_20E4AE2A8, v11);
    sub_20E39D010(&qword_253ED2370, &qword_253ED2378, (uint64_t)&unk_20E4AE2A8);
    v27 = *(_QWORD *)(v7 - 208);
    sub_20E39CBE0((uint64_t)v5, v11, *(_QWORD *)(v7 - 176));
    sub_20E3CF5C0(v24);
    swift_release();
    swift_release();
    sub_20E39D1F8((uint64_t)v5, &qword_253ED2378);
  }
  else
  {
    v28 = *(_QWORD *)(v7 - 128);
    *(_QWORD *)(v7 - 216) = v16;
    v29 = *(_QWORD *)(v7 - 104);
    v30 = swift_allocObject();
    v31 = v20;
    v32 = v30;
    *(_QWORD *)(v30 + 16) = v3;
    *(_QWORD *)(v30 + 24) = v6;
    v33 = *(_QWORD *)(v7 - 280);
    *(_QWORD *)(v30 + 32) = v1;
    *(_QWORD *)(v30 + 40) = v33;
    v34 = *(_QWORD *)(v7 - 296);
    *(_QWORD *)(v30 + 48) = *(_QWORD *)(v7 - 288);
    *(_QWORD *)(v30 + 56) = v34;
    *(_QWORD *)(v30 + 64) = v21;
    *(_QWORD *)(v30 + 72) = v31;
    *(_QWORD *)(v30 + 80) = v28;
    v35 = *(_OWORD *)(v7 - 120);
    *(_OWORD *)(v7 - 240) = v35;
    *(_OWORD *)(v30 + 88) = v35;
    *(_QWORD *)(v30 + 104) = v29;
    swift_retain_n();
    swift_retain_n();
    swift_retain_n();
    sub_20E44CAA0(360.0);
    *v13 = sub_20E4530FC;
    v13[1] = (void (*)())v32;
    v36 = MEMORY[0x212BBDF90](&unk_20E4AE2A8, v11);
    v37 = *(void (***)())(v7 - 216);
    sub_20E39D614(v37, v13, v11, v36);
    v38 = *(void (**)(void (**)(), uint64_t))(*(_QWORD *)(v7 - 264) + 8);
    v38(v13, v11);
    sub_20E39D618((uint64_t)v37, v11, (uint64_t)v13);
    sub_20E39D010(&qword_253ED2370, &qword_253ED2378, (uint64_t)&unk_20E4AE2A8);
    v27 = *(_QWORD *)(v7 - 208);
    sub_20E3DC6B0((uint64_t)v13, v11);
    swift_release();
    swift_release();
    swift_release();
    v38(v13, v11);
    v38(v37, v11);
  }
  v39 = MEMORY[0x212BBDF90](&unk_20E4AE2A8, v11);
  v40 = sub_20E39D010(&qword_253ED2370, &qword_253ED2378, (uint64_t)&unk_20E4AE2A8);
  *(_QWORD *)(v7 - 168) = v39;
  *(_QWORD *)(v7 - 160) = v40;
  v41 = *(_QWORD *)(v7 - 192);
  MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v41, v7 - 168);
  sub_20E39D618(v27, v41, *(_QWORD *)(v7 - 184));
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 200) + 8))(v27, v41);
}

void sub_20E4491B8()
{
  type metadata accessor for _CompatibilityContentUnavailableViewContent();
}

uint64_t sub_20E4491FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;

  v3 = MEMORY[0x212BBDF90](&unk_20E4AE2F8, a1);
  sub_20E39D614(&v9, &v5, a1, v3);
  v5 = v9;
  v6 = v10;
  v7 = v11;
  v8 = v12;
  sub_20E39D618((uint64_t)&v5, a1, v1);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_20E449298@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  *a7 = a1;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  a7[4] = a5;
  a7[5] = a6;
  swift_retain();
  swift_retain();
  return sub_20E3E592C(a5);
}

uint64_t ContentUnavailableView.init<>(title:message:action:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  int *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;

  *(_QWORD *)(a7 + 88) = 0;
  *(_OWORD *)(a7 + 72) = 0u;
  *(_OWORD *)(a7 + 56) = 0u;
  *(_QWORD *)(a7 + 96) = swift_getKeyPath();
  *(_BYTE *)(a7 + 104) = 0;
  v14 = (int *)__swift_instantiateConcreteTypeFromMangledName(qword_253ED1E68);
  v15 = (uint64_t *)(a7 + v14[21]);
  *v15 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED23A0);
  swift_storeEnumTagMultiPayload();
  v16 = a7 + v14[22];
  *(_QWORD *)v16 = swift_getKeyPath();
  *(_BYTE *)(v16 + 8) = 0;
  v17 = a7 + v14[23];
  result = swift_getKeyPath();
  *(_QWORD *)v17 = result;
  *(_BYTE *)(v17 + 8) = 0;
  *(_QWORD *)a7 = a1;
  *(_QWORD *)(a7 + 8) = a2;
  *(_QWORD *)(a7 + 16) = a3;
  *(_QWORD *)(a7 + 24) = a4;
  *(_QWORD *)(a7 + 32) = a5;
  *(_QWORD *)(a7 + 40) = a6;
  *(_BYTE *)(a7 + 48) = 1;
  if (qword_253ED21B8 != -1)
    return swift_once();
  return result;
}

uint64_t ContentUnavailableView.init<>(title:message:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  int *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;

  *(_QWORD *)(a5 + 88) = 0;
  *(_OWORD *)(a5 + 72) = 0u;
  *(_OWORD *)(a5 + 56) = 0u;
  *(_QWORD *)(a5 + 96) = swift_getKeyPath();
  *(_BYTE *)(a5 + 104) = 0;
  v10 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_254A1B3E0);
  v11 = (uint64_t *)(a5 + v10[21]);
  *v11 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED23A0);
  swift_storeEnumTagMultiPayload();
  v12 = a5 + v10[22];
  *(_QWORD *)v12 = swift_getKeyPath();
  *(_BYTE *)(v12 + 8) = 0;
  v13 = a5 + v10[23];
  result = swift_getKeyPath();
  *(_QWORD *)v13 = result;
  *(_BYTE *)(v13 + 8) = 0;
  *(_QWORD *)a5 = a1;
  *(_QWORD *)(a5 + 8) = a2;
  *(_QWORD *)(a5 + 16) = a3;
  *(_QWORD *)(a5 + 24) = a4;
  *(_QWORD *)(a5 + 32) = 0;
  *(_QWORD *)(a5 + 40) = 0;
  *(_BYTE *)(a5 + 48) = 1;
  if (qword_253ED21B8 != -1)
    return swift_once();
  return result;
}

uint64_t ContentUnavailableView.init<>(error:)@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;

  type metadata accessor for ContentUnavailableTextLogBuilder();
  v4 = swift_allocObject();
  *(_WORD *)(v4 + 24) = 514;
  *(_QWORD *)(v4 + 16) = a1;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a1;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = v4;
  v7 = a1;
  v8 = a1;
  v9 = a1;
  swift_retain();
  ContentUnavailableView.init<>(title:message:)((uint64_t)sub_20E4537A4, v5, (uint64_t)sub_20E453778, v6, (uint64_t)a2);
  v10 = (void *)sub_20E4A32D8();
  v11 = (id)AMSLogableError();

  v12 = sub_20E4A5C3C();
  v14 = v13;

  swift_bridgeObjectRelease();
  a2[9] = v12;
  a2[10] = v14;
  result = swift_release();
  a2[11] = v4;
  return result;
}

uint64_t sub_20E449678(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  char v15;
  _QWORD v17[2];

  v2 = sub_20E4A4FD0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_20E4A4FF4();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v17 - v13;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v6 + 16))(v9, v17[1], a1, v12);
  sub_20E4A4FDC();
  sub_20E4A4FC4();
  v15 = sub_20E4A4FE8();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  return v15 & 1;
}

uint64_t sub_20E4497CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t (**v10)@<X0>(uint64_t@<X8>);
  uint64_t v11;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A0C8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20E4A332C();
  v5 = sub_20E4A3344();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v8 = sub_20E4A3620();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a1, 1, 1, v8);
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED2368);
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(a1 + *(int *)(v9 + 36), v4, v5);
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED2360);
    result = swift_storeEnumTagMultiPayload();
    v10 = (uint64_t (**)@<X0>(uint64_t@<X8>))(a1 + *(int *)(v9 + 40));
    *v10 = sub_20E44990C;
    v10[1] = 0;
  }
  return result;
}

uint64_t sub_20E44990C@<X0>(uint64_t a1@<X8>)
{
  return sub_20E452DE8(a1);
}

uint64_t ContentUnavailableButton.init(role:sensitiveURL:label:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  _QWORD *v20;

  sub_20E39D1F8(a1, &qword_254A19628);
  v13 = sub_20E4A3620();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a7, 1, 1, v13);
  v15 = type metadata accessor for ContentUnavailableButton(0, a5, a6, v14);
  v16 = a7 + *(int *)(v15 + 36);
  v17 = sub_20E4A3344();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v16, a2, v17);
  type metadata accessor for ContentUnavailableButton.Action(0, a5, a6, v18);
  result = swift_storeEnumTagMultiPayload();
  v20 = (_QWORD *)(a7 + *(int *)(v15 + 40));
  *v20 = a3;
  v20[1] = a4;
  return result;
}

uint64_t sub_20E449A08(void *a1)
{
  id v2;
  uint64_t v3;

  v2 = a1;
  v3 = sub_20E453138();

  return v3;
}

uint64_t sub_20E449A70()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_20E449A94(void *a1, uint64_t a2)
{
  id v4;

  v4 = a1;
  swift_retain();
  return sub_20E448614(a1, a2);
}

uint64_t sub_20E449ADC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (**v9)@<X0>(uint64_t@<X8>);

  v6 = sub_20E4A3620();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a3, 1, 1, v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED2368);
  v8 = (_QWORD *)(a3 + *(int *)(v7 + 36));
  *v8 = a1;
  v8[1] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED2360);
  swift_storeEnumTagMultiPayload();
  v9 = (uint64_t (**)@<X0>(uint64_t@<X8>))(a3 + *(int *)(v7 + 40));
  *v9 = sub_20E449B8C;
  v9[1] = 0;
  return swift_retain();
}

uint64_t sub_20E449B84@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_20E449ADC(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_20E449B8C@<X0>(uint64_t a1@<X8>)
{
  id v2;
  uint64_t result;
  uint64_t v4;
  char v5;
  uint64_t v6;

  sub_20E4A3CA4();
  if (qword_253ED2A20 != -1)
    swift_once();
  v2 = (id)qword_253ED2A18;
  result = sub_20E4A41B4();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5 & 1;
  *(_QWORD *)(a1 + 24) = v6;
  return result;
}

uint64_t ContentUnavailableButton.init(role:action:label:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t result;
  _QWORD *v20;

  sub_20E3BB440(a1, a8, &qword_254A19628);
  v16 = type metadata accessor for ContentUnavailableButton(0, a6, a7, v15);
  v17 = (_QWORD *)(a8 + *(int *)(v16 + 36));
  *v17 = a2;
  v17[1] = a3;
  type metadata accessor for ContentUnavailableButton.Action(0, a6, a7, v18);
  result = swift_storeEnumTagMultiPayload();
  v20 = (_QWORD *)(a8 + *(int *)(v16 + 40));
  *v20 = a4;
  v20[1] = a5;
  return result;
}

uint64_t sub_20E449D14@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char v4;

  v3 = *(_QWORD *)(v1 + 96);
  v4 = *(_BYTE *)(v1 + 104);
  sub_20E39CFAC(v3, v4);
  sub_20E45E314(v3, v4, a1);
  return sub_20E39CED8(v3, v4);
}

uint64_t sub_20E449D64()
{
  sub_20E453320();
  return sub_20E4A3C08();
}

uint64_t sub_20E449D98@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_20E453320();
  result = sub_20E4A3C08();
  *a1 = v3;
  return result;
}

uint64_t sub_20E449DE4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_20E453320();
  result = sub_20E4A3C08();
  *a1 = v3;
  return result;
}

uint64_t sub_20E449E30()
{
  sub_20E453320();
  return sub_20E4A3C14();
}

uint64_t sub_20E449E78()
{
  sub_20E453320();
  return sub_20E4A3C14();
}

uint64_t sub_20E449EC0()
{
  return sub_20E4A3B0C();
}

uint64_t sub_20E449EE4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_20E4048CC();
  result = sub_20E4A3C08();
  *a1 = v3;
  return result;
}

uint64_t sub_20E449F34(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (uint64_t *)(v1 + *(int *)(a1 + 88));
  v3 = *v2;
  v4 = *((unsigned __int8 *)v2 + 8);
  j__swift_retain(*v2);
  v5 = sub_20E45C2DC(v3, v4);
  j__swift_release(v3, v4);
  return v5;
}

uint64_t sub_20E449F90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  char v4;
  uint64_t v5;

  v2 = v1 + *(int *)(a1 + 92);
  v3 = *(id *)v2;
  v4 = *(_BYTE *)(v2 + 8);
  sub_20E39CFA0(*(id *)v2, v4);
  v5 = sub_20E39D710(v3, v4);
  sub_20E39CE70(v3, v4);
  return v5;
}

uint64_t sub_20E449FF4()
{
  uint64_t v0;

  return sub_20E449A08(*(void **)(v0 + 16));
}

uint64_t sub_20E44A010()
{
  uint64_t v0;

  return sub_20E449A94(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void ContentUnavailableView.body.getter(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[42];
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v18 = a2;
  v17 = sub_20E4A5E58();
  v16 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v15 = (char *)v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_20E4A52B8();
  v13 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v12 = (char *)v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_20E4A3FB0();
  v10 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v9 = (char *)v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_20E4A3C38();
  v7[41] = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v7[40] = (char *)v7 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = a1[2];
  v24 = a1[3];
  v22 = a1[4];
  v21 = a1[5];
  v23 = a1[6];
  v20 = a1[7];
  v25 = v19;
  v26 = v24;
  v27 = v22;
  v28 = v21;
  v29 = v23;
  v30 = v20;
  type metadata accessor for _CompatibilityContentUnavailableViewContent();
}

void sub_20E44A1F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t OpaqueTypeConformance2;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  double v57;
  uint64_t v58;
  char *v59;
  void (*v60)(char *, uint64_t, uint64_t, double);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(char *, char *, uint64_t);

  v12 = MEMORY[0x212BBDF90](&unk_20E4AE2F8, a1);
  v14 = type metadata accessor for _ContentUnavailableScrollView(255, a1, v12, v13);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253ED2378);
  v15 = sub_20E4A3E00();
  *(_QWORD *)(v10 - 480) = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  *(_QWORD *)(v10 - 640) = (char *)&a9 - v16;
  v17 = sub_20E4A39D4();
  type metadata accessor for _OnScenePhaseChange(255);
  v18 = sub_20E4A39D4();
  v19 = sub_20E4A3E00();
  *(_QWORD *)(v10 - 496) = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  *(_QWORD *)(v10 - 504) = (char *)&a9 - v20;
  v21 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253ED2408);
  v22 = MEMORY[0x212BBDF90](&unk_20E4AE2A8, v14);
  v23 = sub_20E39D010(&qword_253ED2370, &qword_253ED2378, (uint64_t)&unk_20E4AE2A8);
  *(_QWORD *)(v10 - 160) = v22;
  *(_QWORD *)(v10 - 152) = v23;
  v24 = MEMORY[0x24BDEF3E0];
  v25 = MEMORY[0x24BDEF3E0];
  *(_QWORD *)(v10 - 472) = v15;
  v26 = MEMORY[0x212BBDF90](v25, v15, v10 - 160);
  v27 = sub_20E3A50B4();
  *(_QWORD *)(v10 - 176) = v26;
  *(_QWORD *)(v10 - 168) = v27;
  v28 = MEMORY[0x24BDED308];
  v29 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v17, v10 - 176);
  v30 = sub_20E39F334(&qword_253ED21C0, type metadata accessor for _OnScenePhaseChange, (uint64_t)&unk_20E4AAC48);
  *(_QWORD *)(v10 - 608) = v26;
  *(_QWORD *)(v10 - 192) = v26;
  *(_QWORD *)(v10 - 184) = v30;
  v31 = MEMORY[0x212BBDF90](v28, v18, v10 - 192);
  *(_QWORD *)(v10 - 208) = v29;
  *(_QWORD *)(v10 - 200) = v31;
  v32 = MEMORY[0x212BBDF90](v24, v19, v10 - 208);
  v33 = sub_20E453714(&qword_253ED2410, &qword_253ED2408, (uint64_t (*)(void))sub_20E44F6EC, MEMORY[0x24BDF5578]);
  *(_QWORD *)(v10 - 144) = v19;
  *(_QWORD *)(v10 - 136) = v21;
  *(_QWORD *)(v10 - 128) = v32;
  *(_QWORD *)(v10 - 120) = v33;
  v34 = MEMORY[0x212BBDF30](0, v10 - 144, MEMORY[0x24BDF2338], 0);
  *(_QWORD *)(v10 - 600) = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  *(_QWORD *)(v10 - 624) = (char *)&a9 - v35;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253ED29F8);
  *(_QWORD *)(v10 - 584) = v34;
  v36 = sub_20E4A39D4();
  *(_QWORD *)(v10 - 592) = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  *(_QWORD *)(v10 - 616) = (char *)&a9 - v37;
  *(_QWORD *)(v10 - 488) = v19;
  *(_QWORD *)(v10 - 144) = v19;
  *(_QWORD *)(v10 - 136) = v21;
  *(_QWORD *)(v10 - 520) = v21;
  *(_QWORD *)(v10 - 648) = v32;
  *(_QWORD *)(v10 - 128) = v32;
  *(_QWORD *)(v10 - 120) = v33;
  *(_QWORD *)(v10 - 664) = v33;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v39 = sub_20E39D010(&qword_253ED29F0, &qword_253ED29F8, MEMORY[0x24BDEF370]);
  *(_QWORD *)(v10 - 720) = OpaqueTypeConformance2;
  *(_QWORD *)(v10 - 224) = OpaqueTypeConformance2;
  *(_QWORD *)(v10 - 216) = v39;
  v40 = MEMORY[0x212BBDF90](v28, v36, v10 - 224);
  *(_QWORD *)(v10 - 144) = v36;
  *(_QWORD *)(v10 - 136) = v40;
  v41 = MEMORY[0x212BBDF30](0, v10 - 144, MEMORY[0x24BDF33A8], 0);
  *(_QWORD *)(v10 - 696) = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  *(_QWORD *)(v10 - 704) = (char *)&a9 - v42;
  *(_QWORD *)(v10 - 576) = v36;
  *(_QWORD *)(v10 - 144) = v36;
  *(_QWORD *)(v10 - 136) = v40;
  *(_QWORD *)(v10 - 712) = v40;
  v43 = swift_getOpaqueTypeConformance2();
  *(_QWORD *)(v10 - 632) = v41;
  *(_QWORD *)(v10 - 144) = v41;
  *(_QWORD *)(v10 - 136) = v43;
  *(_QWORD *)(v10 - 688) = v43;
  v44 = MEMORY[0x212BBDF30](0, v10 - 144, MEMORY[0x24BDF2F10], 0);
  *(_QWORD *)(v10 - 672) = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  *(_QWORD *)(v10 - 680) = (char *)&a9 - v45;
  sub_20E4A4004();
  *(_QWORD *)(v10 - 656) = v44;
  v46 = sub_20E4A39D4();
  *(_QWORD *)(v10 - 552) = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46);
  *(_QWORD *)(v10 - 568) = (char *)&a9 - v47;
  sub_20E4A3854();
  *(_QWORD *)(v10 - 536) = v46;
  v48 = sub_20E4A39D4();
  *(_QWORD *)(v10 - 512) = v48;
  *(_QWORD *)(v10 - 528) = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  *(_QWORD *)(v10 - 560) = (char *)&a9 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v50);
  *(_QWORD *)(v10 - 544) = (char *)&a9 - v51;
  v52 = v9;
  v53 = *(_QWORD *)(v9 - 8);
  v54 = *(_QWORD *)(v53 + 64);
  MEMORY[0x24BDAC7A8](v55);
  *(_QWORD *)(v10 - 776) = (char *)&a9 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = MEMORY[0x24BDAC7A8](v56);
  v59 = (char *)&a9 - v58;
  v60 = *(void (**)(char *, uint64_t, uint64_t, double))(v53 + 16);
  v61 = *(_QWORD *)(v10 - 344);
  *(_QWORD *)(v10 - 360) = v60;
  v60((char *)&a9 - v58, v61, v9, v57);
  v62 = *(unsigned __int8 *)(v53 + 80);
  v63 = (v62 + 64) & ~v62;
  *(_QWORD *)(v10 - 744) = v63 + v54;
  *(_QWORD *)(v10 - 752) = v62 | 7;
  v64 = (char *)swift_allocObject();
  v65 = *(_QWORD *)(v10 - 336);
  v66 = *(_QWORD *)(v10 - 296);
  *((_QWORD *)v64 + 2) = v65;
  *((_QWORD *)v64 + 3) = v66;
  v67 = *(_QWORD *)(v10 - 312);
  v68 = *(_QWORD *)(v10 - 320);
  *((_QWORD *)v64 + 4) = v67;
  *((_QWORD *)v64 + 5) = v68;
  v69 = *(_QWORD *)(v10 - 304);
  v70 = *(_QWORD *)(v10 - 328);
  *((_QWORD *)v64 + 6) = v69;
  *((_QWORD *)v64 + 7) = v70;
  *(_QWORD *)(v10 - 352) = v64;
  *(_QWORD *)(v10 - 736) = v63;
  *(_QWORD *)(v10 - 768) = v53;
  v71 = *(void (**)(char *, char *, uint64_t))(v53 + 32);
  *(_QWORD *)(v10 - 728) = v59;
  *(_QWORD *)(v10 - 760) = v71;
  v71(&v64[v63], v59, v52);
  sub_20E449D14((_BYTE *)(v10 - 144));
  *(_QWORD *)(v10 - 144) = v65;
  *(_QWORD *)(v10 - 136) = v66;
  *(_QWORD *)(v10 - 128) = v67;
  *(_QWORD *)(v10 - 120) = v68;
  *(_QWORD *)(v10 - 112) = v69;
  *(_QWORD *)(v10 - 104) = v70;
  type metadata accessor for ContentUnavailableView.Implementation();
}

void sub_20E44A850(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t, _QWORD *))(*(a1 - 1) + 32))(v2 - 144, v1, a1);
  sub_20E448C80(a1, *(_QWORD *)(v2 - 640));
}

uint64_t sub_20E44A884()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t OpaqueTypeConformance2;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  void (*v49)(uint64_t, uint64_t);

  v6 = sub_20E449F34(v0);
  if (!v6)
  {
    v8 = *(_QWORD *)(v5 - 776);
    v9 = v3;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 - 360))(v8, v3, v2);
LABEL_5:
    v10 = (void *)sub_20E449F90(v2);
    v7 = objc_msgSend(v10, sel_scene);

    goto LABEL_6;
  }
  v7 = (id)MEMORY[0x212BBE110](v6 + 16);
  swift_release();
  v8 = *(_QWORD *)(v5 - 776);
  v9 = v3;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 - 360))(v8, v3, v2);
  if (!v7)
    goto LABEL_5;
LABEL_6:
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 768) + 8))(v8, v2);
  v11 = *(_QWORD *)(v5 - 504);
  v12 = *(_QWORD *)(v5 - 472);
  sub_20E4023C8(v7, (uint64_t)sub_20E44F7EC, *(_QWORD *)(v5 - 352), v12, *(_QWORD *)(v5 - 608), v11);

  v13 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 480) + 8))(v1, v12);
  MEMORY[0x24BDAC7A8](v13);
  v14 = *(_QWORD *)(v5 - 336);
  v15 = v9;
  v16 = *(_QWORD *)(v5 - 624);
  v17 = *(_QWORD *)(v5 - 488);
  sub_20E4A4244();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 496) + 8))(v11, v17);
  *(_BYTE *)(v5 - 256) = v4 == 2;
  sub_20E4A48A4();
  sub_20E39D234();
  v18 = *(_QWORD *)(v5 - 616);
  v19 = *(_QWORD *)(v5 - 584);
  sub_20E4A41F0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 600) + 8))(v16, v19);
  v20 = *(_QWORD *)(v5 - 456);
  v21 = *(_QWORD *)(v5 - 464);
  v22 = *(_QWORD *)(v5 - 448);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v20 + 104))(v21, *MEMORY[0x24BDEE5F0], v22);
  v23 = *(_QWORD *)(v5 - 704);
  v24 = *(_QWORD *)(v5 - 576);
  sub_20E4A43D0();
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v21, v22);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 592) + 8))(v18, v24);
  v25 = *(_QWORD *)(v5 - 440);
  sub_20E4A3FA4();
  v26 = *(_QWORD *)(v5 - 680);
  v27 = *(_QWORD *)(v5 - 632);
  v28 = *(_QWORD *)(v5 - 688);
  sub_20E4A4358();
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v5 - 432) + 8))(v25, *(_QWORD *)(v5 - 424));
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 696) + 8))(v23, v27);
  *(_OWORD *)(v5 - 256) = 0u;
  *(_OWORD *)(v5 - 240) = 0u;
  v29 = *(_QWORD *)(v5 - 416);
  sub_20E4A5294();
  sub_20E39D1F8(v5 - 256, &qword_253ED2A38);
  *(_QWORD *)(v5 - 256) = v27;
  *(_QWORD *)(v5 - 248) = v28;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v31 = *(_QWORD *)(v5 - 568);
  v32 = *(_QWORD *)(v5 - 656);
  View.automationSemantics(_:)();
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v5 - 408) + 8))(v29, *(_QWORD *)(v5 - 400));
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 672) + 8))(v26, v32);
  v33 = *(_QWORD *)(v5 - 728);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 - 360))(v33, v15, v2);
  v34 = (_QWORD *)swift_allocObject();
  v35 = *(_QWORD *)(v5 - 296);
  v34[2] = v14;
  v34[3] = v35;
  v36 = *(_QWORD *)(v5 - 320);
  v34[4] = *(_QWORD *)(v5 - 312);
  v34[5] = v36;
  v37 = (char *)v34 + *(_QWORD *)(v5 - 736);
  v38 = *(_QWORD *)(v5 - 328);
  v34[6] = *(_QWORD *)(v5 - 304);
  v34[7] = v38;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 - 760))(v37, v33, v2);
  v39 = sub_20E39F334(qword_253ED27F8, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
  *(_QWORD *)(v5 - 272) = OpaqueTypeConformance2;
  *(_QWORD *)(v5 - 264) = v39;
  v40 = MEMORY[0x24BDED308];
  v41 = *(_QWORD *)(v5 - 536);
  v42 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v41, v5 - 272);
  v43 = *(_QWORD *)(v5 - 392);
  sub_20E39D0E8();
  v44 = *(_QWORD *)(v5 - 560);
  sub_20E4A440C();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v5 - 384) + 8))(v43, *(_QWORD *)(v5 - 376));
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 552) + 8))(v31, v41);
  v45 = sub_20E39F334(qword_253ED2910, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC4E0], MEMORY[0x24BDEC4C8]);
  *(_QWORD *)(v5 - 288) = v42;
  *(_QWORD *)(v5 - 280) = v45;
  v46 = *(_QWORD *)(v5 - 512);
  v47 = MEMORY[0x212BBDF90](v40, v46, v5 - 288);
  v48 = *(_QWORD **)(v5 - 544);
  sub_20E39D614(v48, v44, v46, v47);
  v49 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 528) + 8);
  v49(v44, v46);
  sub_20E39D618((uint64_t)v48, v46, *(_QWORD *)(v5 - 368));
  return ((uint64_t (*)(_QWORD *, uint64_t))v49)(v48, v46);
}

uint64_t sub_20E44AEAC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t result;
  uint64_t (*v14)(uint64_t);
  uint64_t v15;

  v3 = sub_20E4A5A8C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_20E4A3668();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, double))(v8 + 104))(v11, *MEMORY[0x24BDEB1E0], v7, v9);
  v12 = sub_20E4A365C();
  result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  if ((v12 & 1) != 0)
  {
    sub_20E4A5A2C();
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0D58);
    sub_20E4A4ACC();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_20E4A72D0;
    sub_20E4A4A30();
    sub_20E4A5744();
    swift_bridgeObjectRelease();
    result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v14 = *(uint64_t (**)(uint64_t))(a2 + 56);
    if (v14)
      return v14(result);
  }
  return result;
}

uint64_t sub_20E44B048@<X0>(uint64_t a1@<X8>)
{
  id v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  if ((sub_20E4A56FC() & 1) != 0)
  {
    sub_20E4A3CA4();
    if (qword_253ED2A20 != -1)
      swift_once();
    v2 = (id)qword_253ED2A18;
    v6 = sub_20E4A41B4();
    MEMORY[0x24BDAC7A8](v6);
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED23F0);
    sub_20E39D010(&qword_253ED23E8, &qword_253ED23F0, MEMORY[0x24BDF43B0]);
    sub_20E4A4808();
    v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED2400);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(a1, 0, 1, v3);
  }
  else
  {
    v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED2400);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(a1, 1, 1, v5);
  }
}

void sub_20E44B284()
{
  type metadata accessor for ContentUnavailableView();
}

uint64_t sub_20E44B2D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  double v9;
  uint64_t v10;
  _BYTE *v11;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  _BYTE v16[96];

  v8 = *(_QWORD *)(a1 - 8);
  v9 = MEMORY[0x24BDAC7A8](a1);
  v11 = &v16[-v10];
  (*(void (**)(_BYTE *, uint64_t, uint64_t, double))(v8 + 16))(&v16[-v10], v5, a1, v9);
  v12 = (*(unsigned __int8 *)(v8 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v13 = (char *)swift_allocObject();
  *((_QWORD *)v13 + 2) = v4;
  *((_QWORD *)v13 + 3) = v3;
  *((_QWORD *)v13 + 4) = v2;
  *((_QWORD *)v13 + 5) = v1;
  v14 = *(_QWORD *)(v6 - 144);
  *((_QWORD *)v13 + 6) = *(_QWORD *)(v6 - 152);
  *((_QWORD *)v13 + 7) = v14;
  (*(void (**)(char *, _BYTE *, uint64_t))(v8 + 32))(&v13[v12], v11, a1);
  return sub_20E4A4694();
}

void sub_20E44B3B8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  id v8;

  v2 = sub_20E4A5A8C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a1 + 80))
  {
    v6 = objc_msgSend((id)objc_opt_self(), sel_generalPasteboard);
    v8 = (id)sub_20E4A5C18();
    objc_msgSend(v6, sel_setString_, v8);

  }
  else
  {
    sub_20E4A5A2C();
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0D58);
    sub_20E4A4ACC();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_20E4A72D0;
    sub_20E4A4A30();
    sub_20E4A5768();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

uint64_t sub_20E44B538@<X0>(uint64_t a1@<X8>)
{
  return sub_20E452DE8(a1);
}

BOOL static ContentUnavailableViewPresentationContext.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_20E44B568(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1[6] = a1;
  sub_20E4A4A90();
  v1[7] = swift_task_alloc();
  v2 = sub_20E4A5A8C();
  v1[8] = v2;
  v1[9] = *(_QWORD *)(v2 - 8);
  v1[10] = swift_task_alloc();
  sub_20E4A5DF8();
  v1[11] = sub_20E4A5DEC();
  sub_20E4A5DBC();
  return swift_task_switch();
}

uint64_t sub_20E44B61C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 48);
  swift_release();
  if (*(_QWORD *)(v1 + 88))
  {
    v3 = *(_QWORD *)(v0 + 72);
    v2 = *(_QWORD *)(v0 + 80);
    v4 = *(_QWORD *)(v0 + 64);
    swift_retain();
    sub_20E4A5A2C();
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0D58);
    sub_20E4A4ACC();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_20E4A72D0;
    sub_20E4A4A84();
    sub_20E4A4A78();
    swift_retain();
    sub_20E4A4A60();
    swift_release();
    sub_20E4A4A78();
    v5 = sub_20E44EEF8();
    v6 = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v0 + 16) = v5;
    *(_QWORD *)(v0 + 40) = v6;
    *(_QWORD *)(v0 + 24) = v7;
    sub_20E4A4A54();
    sub_20E39D1F8(v0 + 16, &qword_253ED2A38);
    sub_20E4A4A78();
    sub_20E4A4A9C();
    sub_20E4A5744();
    swift_bridgeObjectRelease();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  }
  else
  {
    v9 = *(_QWORD *)(v0 + 72);
    v8 = *(_QWORD *)(v0 + 80);
    v10 = *(_QWORD *)(v0 + 64);
    sub_20E4A5A2C();
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0D58);
    sub_20E4A4ACC();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_20E4A72D0;
    sub_20E4A4A30();
    sub_20E4A5744();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ContentUnavailableViewPresentationContext.hash(into:)()
{
  return sub_20E4A641C();
}

uint64_t ContentUnavailableViewPresentationContext.hashValue.getter()
{
  sub_20E4A6410();
  sub_20E4A641C();
  return sub_20E4A6428();
}

uint64_t sub_20E44B8F0()
{
  sub_20E453714(&qword_253ED05D8, &qword_253ED05D0, (uint64_t (*)(void))sub_20E44FA18, MEMORY[0x24BEE4AB8]);
  return sub_20E4A389C();
}

void sub_20E44B960(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;

  v20 = a1;
  v19 = sub_20E4A3830();
  v16 = *(_QWORD *)(v19 - 8);
  v2 = *(_QWORD *)(v16 + 64);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v18 = sub_20E4A3344();
  v15 = *(_QWORD *)(v18 - 8);
  v4 = *(_QWORD *)(v15 + 64);
  MEMORY[0x24BDAC7A8](v18);
  v17 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v14 = sub_20E4A5384();
  v12 = *(_QWORD *)(v14 - 8);
  v6 = *(_QWORD *)(v12 + 64);
  MEMORY[0x24BDAC7A8](v14);
  v13 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED2360);
  MEMORY[0x24BDAC7A8](v8);
  sub_20E3A5E20(v1, (uint64_t)&v11 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_253ED2360);
  v10 = (char *)sub_20E44BB34 + 4 * byte_20E4ADC40[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t (*sub_20E44BB34())()
{
  _OWORD *v0;

  *(_OWORD *)(swift_allocObject() + 16) = *v0;
  return sub_20E3ADC14;
}

uint64_t sub_20E44BE20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  __int128 v8;
  uint64_t v9;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;

  sub_20E3A5E20(a1, (uint64_t)&v8, &qword_253ED0658);
  if (v9)
  {
    sub_20E3B1AB4(&v8, (uint64_t)v10);
    v5 = v11;
    v6 = v12;
    __swift_project_boxed_opaque_existential_1(v10, v11);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 24))(a2, a3, v5, v6);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  }
  else
  {
    sub_20E39D1F8((uint64_t)&v8, &qword_253ED0658);
    return sub_20E4A5228();
  }
}

unint64_t sub_20E44BEE4()
{
  return 0xD00000000000002ALL;
}

uint64_t ContentUnavailableButton.init(role:action:label:)@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  _QWORD *v17;

  sub_20E3BB440(a1, a7, &qword_254A19628);
  v14 = type metadata accessor for ContentUnavailableButton(0, a5, a6, v13);
  sub_20E3B1AB4(a2, a7 + *(int *)(v14 + 36));
  type metadata accessor for ContentUnavailableButton.Action(0, a5, a6, v15);
  result = swift_storeEnumTagMultiPayload();
  v17 = (_QWORD *)(a7 + *(int *)(v14 + 40));
  *v17 = a3;
  v17[1] = a4;
  return result;
}

uint64_t ContentUnavailableButton.init(role:url:label:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  _QWORD *v19;

  sub_20E3BB440(a1, a7, &qword_254A19628);
  v14 = type metadata accessor for ContentUnavailableButton(0, a5, a6, v13);
  v15 = a7 + *(int *)(v14 + 36);
  v16 = sub_20E4A3344();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v15, a2, v16);
  type metadata accessor for ContentUnavailableButton.Action(0, a5, a6, v17);
  result = swift_storeEnumTagMultiPayload();
  v19 = (_QWORD *)(a7 + *(int *)(v14 + 40));
  *v19 = a3;
  v19[1] = a4;
  return result;
}

void ContentUnavailableButton.body.getter(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  double v33;
  uint64_t v34;
  char *v35;
  _QWORD v36[15];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;

  v43 = a2;
  v4 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v5 = sub_20E4A4160();
  v6 = sub_20E4A3E00();
  v36[12] = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v36[11] = (char *)v36 - v7;
  v41 = v5;
  v36[9] = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v36[10] = (char *)v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v47 = (char *)v36 - v11;
  v48 = sub_20E4A3344();
  v46 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v36[8] = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v45 = (char *)v36 - v14;
  v16 = type metadata accessor for ActionButton(0, v4, v3, v15);
  v36[2] = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v36[3] = (char *)v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v36[5] = (char *)v36 - v19;
  v20 = sub_20E4A46B8();
  v40 = v16;
  v21 = sub_20E4A3E00();
  v36[7] = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v36[6] = (char *)v36 - v22;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19628);
  MEMORY[0x24BDAC7A8](v23);
  v38 = v20;
  v36[1] = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v24);
  MEMORY[0x24BDAC7A8](v25);
  v36[4] = (char *)v36 - v26;
  v36[13] = v4;
  v36[14] = v3;
  v28 = type metadata accessor for ContentUnavailableButton.Action(0, v4, v3, v27);
  v29 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v31 = (char *)v36 - v30;
  v39 = v21;
  v42 = v6;
  v37 = sub_20E4A3E00();
  v32 = *(_QWORD *)(v37 - 8);
  v33 = MEMORY[0x24BDAC7A8](v37);
  v50 = (char *)v36 - v34;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v29 + 16))(v31, v44 + *(int *)(a1 + 36), v28, v33);
  v35 = (char *)sub_20E44C3D4 + 4 * word_20E4ADC44[swift_getEnumCaseMultiPayload()];
  v49 = v32;
  __asm { BR              X10 }
}

uint64_t sub_20E44C3D4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void (*v10)(uint64_t, uint64_t);
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v6 = *(_QWORD *)(v3 + 8);
  sub_20E3A5E20(v4, v1, &qword_254A19628);
  v0[26] = v6;
  swift_retain();
  sub_20E4A4688();
  v7 = v0[16];
  v8 = MEMORY[0x212BBDF90](MEMORY[0x24BDF43B0], v7);
  v9 = (_QWORD *)v0[4];
  sub_20E39D614(v9, v2, v7, v8);
  v10 = *(void (**)(uint64_t, uint64_t))(v0[1] + 8);
  v10(v2, v7);
  v11 = v10;
  v0[25] = v10;
  sub_20E39D618((uint64_t)v9, v7, v2);
  v12 = v0[18];
  v13 = MEMORY[0x212BBDF90](&protocol conformance descriptor for ActionButton<A>, v12);
  v14 = v0[6];
  sub_20E3DC6B0(v2, v7);
  v11(v2, v7);
  v0[31] = v8;
  v0[32] = v13;
  v15 = MEMORY[0x24BDEF3E0];
  v16 = v0[17];
  MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v16, v0 + 31);
  v17 = v0[19];
  v18 = MEMORY[0x212BBDF90](MEMORY[0x24BDF19E0], v17);
  v0[29] = v18;
  v0[30] = v18;
  v19 = v0[20];
  MEMORY[0x212BBDF90](v15, v19, v0 + 29);
  sub_20E3DC6B0(v14, v16);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v0[7] + 8))(v14, v16);
  ((void (*)(_QWORD, uint64_t))v0[25])(v0[4], v7);
  v20 = v0[21];
  v21 = v0[15];
  v22 = MEMORY[0x212BBDF90](MEMORY[0x24BDF43B0], v7);
  v23 = MEMORY[0x212BBDF90](&protocol conformance descriptor for ActionButton<A>, v12);
  *(_QWORD *)(v5 - 136) = v22;
  *(_QWORD *)(v5 - 128) = v23;
  v24 = MEMORY[0x24BDEF3E0];
  v25 = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v16, v5 - 136);
  v26 = MEMORY[0x212BBDF90](MEMORY[0x24BDF19E0], v17);
  *(_QWORD *)(v5 - 152) = v26;
  *(_QWORD *)(v5 - 144) = v26;
  v27 = MEMORY[0x212BBDF90](v24, v19, v5 - 152);
  *(_QWORD *)(v5 - 168) = v25;
  *(_QWORD *)(v5 - 160) = v27;
  MEMORY[0x212BBDF90](v24, v21, v5 - 168);
  v28 = v0[28];
  sub_20E39D618(v28, v21, v20);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0[27] + 8))(v28, v21);
}

uint64_t sub_20E44CAA0(double a1)
{
  uint64_t v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[2];

  v2 = sub_20E4A4124();
  v3 = MEMORY[0x24BDAC7A8](v2);
  *(double *)&v7[1] = a1;
  (*(void (**)(char *, _QWORD, double))(v5 + 104))((char *)v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x24BDF1880], v3);
  sub_20E45228C();
  return sub_20E4A3758();
}

uint64_t sub_20E44CB44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  double v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t OpaqueTypeConformance2;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[2];
  _QWORD v26[2];
  _QWORD v27[2];
  uint64_t v28;
  uint64_t v29;

  v4 = *(_QWORD *)(a1 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *, double))(v4 + 16))((char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  v7 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v8 = swift_allocObject();
  v9 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(v8 + 24) = v9;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v8 + v7, (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  v10 = sub_20E4A39D4();
  v11 = sub_20E4A39D4();
  v27[0] = v9;
  v27[1] = MEMORY[0x24BDECC60];
  v12 = MEMORY[0x24BDED308];
  v26[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v10, v27);
  v26[1] = MEMORY[0x24BDEBEE0];
  MEMORY[0x212BBDF90](v12, v11, v26);
  v13 = sub_20E4A470C();
  v14 = sub_20E4A39D4();
  v25[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDF4700], v13);
  v25[1] = MEMORY[0x24BDEDBB8];
  MEMORY[0x212BBDF90](v12, v14, v25);
  v15 = sub_20E4A3674();
  v16 = MEMORY[0x212BBDF90](MEMORY[0x24BDEB238], v15);
  v28 = v15;
  v29 = v16;
  v17 = MEMORY[0x212BBDF30](255, &v28, MEMORY[0x24BDF2FE0], 0);
  v28 = v15;
  v29 = v16;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v28 = v17;
  v29 = OpaqueTypeConformance2;
  MEMORY[0x212BBDF30](0, &v28, MEMORY[0x24BDF29F8], 0);
  v28 = v17;
  v29 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  v23 = sub_20E4A38A8();
  v24 = v19;
  v20 = sub_20E4A38B4();
  v21 = MEMORY[0x212BBDF90](MEMORY[0x24BDEC6F8], v20);
  sub_20E39D614(&v28, &v23, v20, v21);
  swift_release();
  v23 = v28;
  v24 = v29;
  sub_20E39D618((uint64_t)&v23, v20, a2);
  return swift_release();
}

uint64_t sub_20E44CDF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t OpaqueTypeConformance2;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  unsigned __int8 v29;
  char *v30;
  unsigned __int8 v31;
  unsigned __int8 v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD v60[2];
  _QWORD v61[2];
  _QWORD v62[3];

  v39 = a4;
  v41 = a3;
  v43 = a2;
  v42 = a1;
  v52 = a5;
  v6 = sub_20E4A3F8C();
  v50 = *(_QWORD *)(v6 - 8);
  v51 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v49 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = sub_20E4A3E18();
  v47 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_20E4A39D4();
  v11 = sub_20E4A39D4();
  v62[0] = a4;
  v62[1] = MEMORY[0x24BDECC60];
  v12 = MEMORY[0x24BDED308];
  v61[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v10, v62);
  v61[1] = MEMORY[0x24BDEBEE0];
  MEMORY[0x212BBDF90](v12, v11, v61);
  v13 = sub_20E4A470C();
  v14 = sub_20E4A39D4();
  v60[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDF4700], v13);
  v60[1] = MEMORY[0x24BDEDBB8];
  MEMORY[0x212BBDF90](v12, v14, v60);
  v15 = sub_20E4A3674();
  v40 = *(_QWORD *)(v15 - 8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v38 - v17;
  v19 = MEMORY[0x212BBDF90](MEMORY[0x24BDEB238], v15, v16);
  v58 = v15;
  v59 = v19;
  v20 = MEMORY[0x212BBDF30](0, &v58, MEMORY[0x24BDF2FE0], 0);
  v46 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v53 = (char *)&v38 - v21;
  v58 = v15;
  v59 = v19;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v58 = v20;
  v59 = OpaqueTypeConformance2;
  v44 = OpaqueTypeConformance2;
  v23 = MEMORY[0x212BBDF30](0, &v58, MEMORY[0x24BDF29F8], 0);
  v45 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)&v38 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  v28 = (uint64_t *)((char *)&v38 - v27);
  sub_20E4A407C();
  v54 = v41;
  v55 = v39;
  v56 = v42;
  v57 = v43;
  sub_20E4A3680();
  sub_20E4A3E0C();
  v29 = sub_20E4A407C();
  sub_20E4A4070();
  sub_20E4A4070();
  if (sub_20E4A4070() != v29)
    sub_20E4A4070();
  sub_20E4A4364();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v9, v48);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v18, v15);
  v30 = v49;
  sub_20E4A3E0C();
  v31 = sub_20E4A407C();
  v32 = sub_20E4A4064();
  sub_20E4A4070();
  sub_20E4A4070();
  if (sub_20E4A4070() != v31)
    sub_20E4A4070();
  sub_20E4A4070();
  if (sub_20E4A4070() != v32)
    sub_20E4A4070();
  v33 = v44;
  v34 = v53;
  sub_20E4A42EC();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v30, v51);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v34, v20);
  v58 = v20;
  v59 = v33;
  v35 = swift_getOpaqueTypeConformance2();
  sub_20E39D614(v28, v25, v23, v35);
  v36 = *(void (**)(char *, uint64_t))(v45 + 8);
  v36(v25, v23);
  sub_20E39D618((uint64_t)v28, v23, v52);
  return ((uint64_t (*)(_QWORD *, uint64_t))v36)(v28, v23);
}

uint64_t sub_20E44D2E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[2];
  _QWORD v34[2];
  _QWORD v35[2];

  v25 = a2;
  v28 = a5;
  v8 = sub_20E4A39D4();
  v9 = sub_20E4A39D4();
  v35[0] = a4;
  v35[1] = MEMORY[0x24BDECC60];
  v10 = MEMORY[0x24BDED308];
  v34[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v8, v35);
  v34[1] = MEMORY[0x24BDEBEE0];
  MEMORY[0x212BBDF90](v10, v9, v34);
  v11 = sub_20E4A470C();
  v26 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v25 - v12;
  v14 = sub_20E4A39D4();
  v27 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (uint64_t *)((char *)&v25 - v18);
  sub_20E4A37F4();
  sub_20E4A3CC8();
  v29 = a3;
  v30 = a4;
  v31 = v25;
  v32 = a1;
  sub_20E4A4700();
  sub_20E4A37F4();
  v25 = v20;
  sub_20E4A37F4();
  sub_20E4A48A4();
  v24 = MEMORY[0x212BBDF90](MEMORY[0x24BDF4700], v11);
  sub_20E4A443C();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v13, v11);
  v33[0] = v24;
  v33[1] = MEMORY[0x24BDEDBB8];
  v21 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v14, v33);
  sub_20E39D614(v19, v16, v14, v21);
  v22 = *(void (**)(char *, uint64_t))(v27 + 8);
  v22(v16, v14);
  sub_20E39D618((uint64_t)v19, v14, v28);
  return ((uint64_t (*)(_QWORD *, uint64_t))v22)(v19, v14);
}

uint64_t sub_20E44D594@<X0>(void (**a1)(double)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  double v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  void (*v27)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[2];
  _QWORD v37[3];

  v35 = a5;
  v30 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_20E4A39D4();
  v33 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v29 - v12;
  v14 = sub_20E4A39D4();
  v34 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v32 = (uint64_t *)((char *)&v29 - v19);
  (*a1)(v18);
  v31 = a2;
  sub_20E4A37F4();
  v21 = v20;
  type metadata accessor for _ContentUnavailableScrollView(0, a3, a4, v22);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED23B0);
  sub_20E4A3764();
  if (v21 >= *(double *)&v37[2])
    sub_20E4A40D0();
  else
    sub_20E4A4088();
  sub_20E4A4478();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v10, a3);
  sub_20E4A37F4();
  sub_20E4A3764();
  sub_20E4A48A4();
  v37[0] = a4;
  v37[1] = MEMORY[0x24BDECC60];
  v23 = MEMORY[0x24BDED308];
  v24 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v11, v37);
  sub_20E4A4430();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v13, v11);
  v36[0] = v24;
  v36[1] = MEMORY[0x24BDEBEE0];
  v25 = MEMORY[0x212BBDF90](v23, v14, v36);
  v26 = v32;
  sub_20E39D614(v32, v16, v14, v25);
  v27 = *(void (**)(char *, uint64_t))(v34 + 8);
  v27(v16, v14);
  sub_20E39D618((uint64_t)v26, v14, v35);
  return ((uint64_t (*)(_QWORD *, uint64_t))v27)(v26, v14);
}

uint64_t sub_20E44D878@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[2];
  _QWORD v33[5];

  v25 = a2;
  v23 = *(_QWORD *)(a1 + 16);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1A230);
  sub_20E4A39D4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1B4F0);
  sub_20E4A39D4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1B4F8);
  sub_20E4A39D4();
  v22 = *(_QWORD *)(a1 + 24);
  sub_20E4A39D4();
  sub_20E4A39D4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A199F8);
  sub_20E4A39D4();
  sub_20E4A39D4();
  v21 = *(_QWORD *)(a1 + 32);
  v3 = sub_20E4A3C80();
  v4 = *(_QWORD *)(a1 + 56);
  v33[0] = v21;
  v33[1] = v3;
  v33[2] = v4;
  v33[3] = sub_20E39F334(&qword_254A1B500, (uint64_t (*)(uint64_t))MEMORY[0x24BDEE8E8], MEMORY[0x24BDEE8D8]);
  MEMORY[0x212BBDF30](255, v33, MEMORY[0x24BDF22B8], 0);
  sub_20E4A39D4();
  swift_getTupleTypeMetadata3();
  v5 = sub_20E4A491C();
  MEMORY[0x212BBDF90](MEMORY[0x24BDF5428], v5);
  v6 = sub_20E4A470C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v20 - v8;
  v10 = sub_20E4A39D4();
  v20 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (uint64_t *)((char *)&v20 - v14);
  sub_20E4A3CC8();
  v26 = v23;
  v27 = v22;
  v28 = v21;
  v29 = *(_OWORD *)(a1 + 40);
  v30 = v4;
  v31 = v24;
  sub_20E4A4700();
  sub_20E4A4088();
  v16 = MEMORY[0x212BBDF90](MEMORY[0x24BDF4700], v6);
  sub_20E4A4478();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v32[0] = v16;
  v32[1] = MEMORY[0x24BDECC60];
  v17 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v10, v32);
  sub_20E39D614(v15, v12, v10, v17);
  v18 = *(void (**)(char *, uint64_t))(v20 + 8);
  v18(v12, v10);
  sub_20E39D618((uint64_t)v15, v10, v25);
  return ((uint64_t (*)(_QWORD *, uint64_t))v18)(v15, v10);
}

uint64_t sub_20E44DBD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void (*a6)(_QWORD, _QWORD)@<X5>, char *a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  void (*v65)(_QWORD, _QWORD);
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t OpaqueTypeConformance2;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  void (*v94)(char *, uint64_t);
  uint64_t v95;
  uint64_t v96;
  char *v97;
  _QWORD *v98;
  void (*v99)(char *, uint64_t);
  uint64_t (*v100)(char *, uint64_t);
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  char *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  void (*v118)(_QWORD, _QWORD);
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  _QWORD *v141;
  _QWORD *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  _QWORD v146[3];
  _QWORD v147[2];
  _QWORD v148[2];
  _QWORD v149[2];
  _QWORD v150[2];
  _QWORD v151[2];
  _QWORD v152[2];
  _QWORD v153[2];
  _QWORD v154[2];
  uint64_t v155;
  char *v156;
  char *v157;
  uint64_t v158;

  v125 = a7;
  v118 = a6;
  v137 = a1;
  v134 = a8;
  v13 = sub_20E4A3C80();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = v13;
  v124 = v13;
  v133 = v14;
  MEMORY[0x24BDAC7A8](v13);
  v126 = (char *)&v102 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = *(_QWORD *)(a4 - 8);
  v121 = a4;
  MEMORY[0x24BDAC7A8](v17);
  v123 = (char *)&v102 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = sub_20E39F334(&qword_254A1B500, v19, MEMORY[0x24BDEE8D8]);
  v155 = a4;
  v156 = (char *)v15;
  v157 = a7;
  v158 = v122;
  v20 = MEMORY[0x212BBDF30](0, &v155, MEMORY[0x24BDF22B8], 0);
  v130 = *(_QWORD *)(v20 - 8);
  v127 = v20;
  MEMORY[0x24BDAC7A8](v20);
  v119 = (char *)&v102 - v21;
  v129 = sub_20E4A39D4();
  v132 = *(_QWORD *)(v129 - 8);
  MEMORY[0x24BDAC7A8](v129);
  v120 = (char *)&v102 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v128 = (char *)&v102 - v24;
  v110 = a3;
  v114 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v109 = (char *)&v102 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1A230);
  v27 = sub_20E4A39D4();
  v28 = *(_QWORD *)(v27 - 8);
  v108 = v27;
  v113 = v28;
  MEMORY[0x24BDAC7A8](v27);
  v105 = (char *)&v102 - v29;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1B4F0);
  v30 = sub_20E4A39D4();
  v115 = *(_QWORD *)(v30 - 8);
  v111 = v30;
  MEMORY[0x24BDAC7A8](v30);
  v106 = (char *)&v102 - v31;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A199F8);
  v32 = sub_20E4A39D4();
  v117 = *(_QWORD *)(v32 - 8);
  v112 = v32;
  MEMORY[0x24BDAC7A8](v32);
  v107 = (char *)&v102 - v33;
  v116 = sub_20E4A39D4();
  v140 = *(_QWORD *)(v116 - 8);
  MEMORY[0x24BDAC7A8](v116);
  v138 = (char *)&v102 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v35);
  v141 = (uint64_t *)((char *)&v102 - v36);
  v102 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v39 = (char *)&v102 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_20E4A39D4();
  v103 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v42 = (char *)&v102 - v41;
  v43 = sub_20E4A39D4();
  v104 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v45 = (char *)&v102 - v44;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1B4F8);
  v136 = sub_20E4A39D4();
  v139 = *(_QWORD *)(v136 - 8);
  MEMORY[0x24BDAC7A8](v136);
  v47 = (char *)&v102 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = MEMORY[0x24BDAC7A8](v48);
  v142 = (uint64_t *)((char *)&v102 - v50);
  (*(void (**)(double))v137)(v49);
  sub_20E4A4118();
  sub_20E4A40E8();
  swift_release();
  sub_20E4A43F4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v102 + 8))(v39, a2);
  v51 = MEMORY[0x24BDF1028];
  v52 = sub_20E39D010(&qword_254A1A2D0, &qword_254A1A230, MEMORY[0x24BDF1028]);
  v154[0] = a5;
  v154[1] = v52;
  v53 = MEMORY[0x24BDED308];
  v54 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v40, v154);
  sub_20E4A43A0();
  (*(void (**)(char *, uint64_t))(v103 + 8))(v42, v40);
  v155 = sub_20E4A452C();
  v55 = sub_20E39D010(&qword_254A1B508, &qword_254A1B4F0, v51);
  v153[0] = v54;
  v153[1] = v55;
  v56 = MEMORY[0x212BBDF90](v53, v43, v153);
  sub_20E4A42A4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v104 + 8))(v45, v43);
  v57 = sub_20E39D010(&qword_254A1B510, &qword_254A1B4F8, MEMORY[0x24BDF0710]);
  v152[0] = v56;
  v152[1] = v57;
  v58 = v53;
  v59 = v136;
  v103 = MEMORY[0x212BBDF90](v53, v136, v152);
  v135 = v47;
  sub_20E39D614(v142, v47, v59, v103);
  v104 = *(_QWORD *)(v139 + 8);
  v60 = ((uint64_t (*)(char *, uint64_t))v104)(v47, v59);
  v61 = v137;
  v62 = v109;
  (*(void (**)(uint64_t))(v137 + 16))(v60);
  sub_20E4A40DC();
  v63 = v105;
  v64 = v110;
  v65 = v118;
  sub_20E4A43F4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v114 + 8))(v62, v64);
  v151[0] = v65;
  v151[1] = v52;
  v66 = v108;
  v67 = MEMORY[0x212BBDF90](v58, v108, v151);
  v68 = v106;
  sub_20E4A43A0();
  (*(void (**)(char *, uint64_t))(v113 + 8))(v63, v66);
  LODWORD(v155) = sub_20E4A3ECC();
  v150[0] = v67;
  v150[1] = v55;
  v69 = v111;
  v70 = MEMORY[0x212BBDF90](v58, v111, v150);
  v71 = v107;
  sub_20E4A42A4();
  (*(void (**)(char *, uint64_t))(v115 + 8))(v68, v69);
  sub_20E4A4094();
  v72 = sub_20E39D010(&qword_254A199F0, &qword_254A199F8, MEMORY[0x24BDF0710]);
  v149[0] = v70;
  v149[1] = v72;
  v73 = v112;
  v74 = MEMORY[0x212BBDF90](v58, v112, v149);
  v75 = v138;
  sub_20E4A4478();
  (*(void (**)(char *, uint64_t))(v117 + 8))(v71, v73);
  v148[0] = v74;
  v148[1] = MEMORY[0x24BDECC60];
  v76 = v116;
  v117 = MEMORY[0x212BBDF90](v58, v116, v148);
  sub_20E39D614(v141, v75, v76, v117);
  v118 = *(void (**)(_QWORD, _QWORD))(v140 + 8);
  v77 = v75;
  v78 = v76;
  v79 = ((uint64_t (*)(char *, uint64_t))v118)(v77, v76);
  v80 = v123;
  (*(void (**)(uint64_t))(v61 + 32))(v79);
  v81 = v126;
  sub_20E4A3C74();
  v82 = v119;
  v83 = v121;
  v84 = v124;
  v85 = v125;
  v86 = v122;
  sub_20E4A422C();
  (*(void (**)(char *, uint64_t))(v133 + 8))(v81, v84);
  (*(void (**)(char *, uint64_t))(v131 + 8))(v80, v83);
  sub_20E4A4094();
  v155 = v83;
  v156 = (char *)v84;
  v157 = v85;
  v158 = v86;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v88 = v120;
  v89 = v127;
  sub_20E4A4478();
  (*(void (**)(char *, uint64_t))(v130 + 8))(v82, v89);
  v147[0] = OpaqueTypeConformance2;
  v147[1] = MEMORY[0x24BDECC60];
  v90 = v129;
  v91 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v129, v147);
  v92 = v128;
  sub_20E39D614(v128, v88, v90, v91);
  v93 = v132;
  v94 = *(void (**)(char *, uint64_t))(v132 + 8);
  v94(v88, v90);
  v95 = (uint64_t)v135;
  v96 = v136;
  (*(void (**)(char *, _QWORD *, uint64_t))(v139 + 16))(v135, v142, v136);
  v155 = v95;
  v97 = v138;
  v98 = v141;
  (*(void (**)(char *, _QWORD *, uint64_t))(v140 + 16))(v138, v141, v78);
  v156 = v97;
  (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v88, v92, v90);
  v157 = v88;
  v146[0] = v96;
  v146[1] = v78;
  v146[2] = v90;
  v143 = v103;
  v144 = v117;
  v145 = v91;
  sub_20E39C54C(&v155, 3uLL, (uint64_t)v146);
  v94(v92, v90);
  v99 = (void (*)(char *, uint64_t))v118;
  v118(v98, v78);
  v100 = (uint64_t (*)(char *, uint64_t))v104;
  ((void (*)(_QWORD *, uint64_t))v104)(v142, v96);
  v94(v88, v90);
  v99(v97, v78);
  return v100(v135, v96);
}

uint64_t sub_20E44E7A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20E44D878(a1, a2);
}

uint64_t sub_20E44E7DC(uint64_t a1, uint64_t a2)
{
  uint64_t (**v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;
  char *v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t);
  char *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t *__return_ptr, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t);
  void (*v41)(uint64_t *, _QWORD);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t *, _QWORD);
  void (*v49)(uint64_t *, _QWORD);
  void (*v50)(uint64_t *, _QWORD);
  uint64_t v51;
  uint64_t *boxed_opaque_existential_1Tm;
  uint64_t v53;
  void (*v55)(char *, uint64_t);
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t (**v64)(uint64_t);
  uint64_t v65;
  uint64_t v66[2];
  char v67;
  uint64_t v68;
  uint64_t v69;

  v63 = a2;
  v59 = a1;
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED2368);
  MEMORY[0x24BDAC7A8](v61);
  v56 = (char *)&v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v62 = (uint64_t)&v55 - v5;
  v65 = sub_20E4A3BFC();
  v6 = *(_QWORD *)(v65 - 8);
  MEMORY[0x24BDAC7A8](v65);
  v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_20E4A350C();
  MEMORY[0x24BDAC7A8](v9);
  v10 = sub_20E4A3578();
  v57 = *(_QWORD *)(v10 - 8);
  v58 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20E4A3554();
  sub_20E4A3500();
  v13 = sub_20E4A3518();
  v64 = v2;
  v14 = (*v2)(v13);
  v16 = v15;
  v18 = v17 & 1;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED23E0);
  sub_20E4A3FBC();
  sub_20E4A419C();
  sub_20E39D0D8(v14, v16, v18);
  swift_bridgeObjectRelease();
  v20 = *(void (**)(char *, uint64_t))(v6 + 8);
  v20(v8, v65);
  v21 = sub_20E4A3548();
  v22 = v64[2](v21);
  v24 = v23;
  v26 = v25 & 1;
  v60 = v19;
  sub_20E4A3FBC();
  sub_20E4A419C();
  v27 = v26;
  v28 = v12;
  sub_20E39D0D8(v22, v24, v27);
  swift_bridgeObjectRelease();
  v55 = v20;
  v20(v8, v65);
  v29 = sub_20E4A3524();
  v30 = v64[4];
  if (v30)
  {
    v31 = v56;
    v30(v29);
    v32 = (uint64_t)v31;
    v33 = v62;
    sub_20E3BB440(v32, v62, &qword_253ED2368);
    v34 = *(void (**)(uint64_t *__return_ptr, uint64_t))(v33 + *(int *)(v61 + 40));
    v35 = swift_retain();
    v34(v66, v35);
    swift_release();
    v36 = v66[0];
    v37 = v66[1];
    v38 = v67;
    sub_20E4A3FBC();
    sub_20E4A419C();
    sub_20E39D0D8(v36, v37, v38);
    v28 = v12;
    swift_bridgeObjectRelease();
    v39 = v65;
    v40 = v55;
    v55(v8, v65);
    v41 = (void (*)(uint64_t *, _QWORD))sub_20E4A3560();
    sub_20E4A60C8();
    v41(v66, 0);
    v42 = v62;
    sub_20E4A3FBC();
    sub_20E44B960((uint64_t)v8);
    v44 = v43;
    v46 = v45;
    v40(v8, v39);
    sub_20E4366D8(0, &qword_253ED2420);
    v47 = swift_allocObject();
    *(_QWORD *)(v47 + 16) = v44;
    *(_QWORD *)(v47 + 24) = v46;
    swift_retain();
    sub_20E4A60BC();
    v48 = (void (*)(uint64_t *, _QWORD))sub_20E4A353C();
    sub_20E4A3530();
    v48(v66, 0);
    swift_release();
    sub_20E39D1F8(v42, &qword_253ED2368);
  }
  else
  {
    v49 = (void (*)(uint64_t *, _QWORD))sub_20E4A3560();
    sub_20E4A60C8();
    v49(v66, 0);
    v50 = (void (*)(uint64_t *, _QWORD))sub_20E4A353C();
    sub_20E4A3530();
    v50(v66, 0);
  }
  v51 = v58;
  v68 = v58;
  v69 = MEMORY[0x24BEBC990];
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v66);
  v53 = v57;
  (*(void (**)(uint64_t *, char *, uint64_t))(v57 + 16))(boxed_opaque_existential_1Tm, v28, v51);
  sub_20E4A6074();
  return (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v28, v51);
}

void *sub_20E44ED04()
{
  uint64_t v0;
  void *v1;
  double v2;

  v0 = sub_20E4A3578();
  MEMORY[0x24BDAC7A8](v0);
  sub_20E4366D8(0, &qword_253ED2418);
  sub_20E4A3554();
  v1 = (void *)sub_20E4A6080();
  objc_msgSend(v1, sel_setScrollEnabled_, 0);
  LODWORD(v2) = 1132068864;
  objc_msgSend(v1, sel_setContentCompressionResistancePriority_forAxis_, 0, v2);
  return v1;
}

uint64_t sub_20E44EDB4(uint64_t a1, uint64_t a2)
{
  return sub_20E44E7DC(a1, a2);
}

uint64_t sub_20E44EDF4()
{
  return sub_20E4A3D70();
}

uint64_t sub_20E44EE2C()
{
  sub_20E452D84();
  return sub_20E4A3DD0();
}

uint64_t sub_20E44EE7C()
{
  sub_20E452D84();
  return sub_20E4A3D7C();
}

void sub_20E44EECC()
{
  sub_20E452D84();
  sub_20E4A3DC4();
  __break(1u);
}

uint64_t sub_20E44EEF8()
{
  uint64_t v0;
  int v1;
  void *v2;
  id v3;

  v1 = *(unsigned __int8 *)(v0 + 24);
  if (v1 == 2 || (v1 & 1) != 0 || (sub_20E4A5C6C(), *(_BYTE *)(v0 + 25) != 2))
    sub_20E4A5C6C();
  v2 = (void *)sub_20E4A32D8();
  v3 = (id)AMSLogableError();

  sub_20E4A5C3C();
  sub_20E4A5C6C();
  swift_bridgeObjectRelease();
  sub_20E4A5C6C();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_20E44F050()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t sub_20E44F074@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  int *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;

  *(_QWORD *)(a7 + 88) = 0;
  *(_OWORD *)(a7 + 72) = 0u;
  *(_OWORD *)(a7 + 56) = 0u;
  *(_QWORD *)(a7 + 96) = swift_getKeyPath();
  *(_BYTE *)(a7 + 104) = 0;
  v14 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_254A19210);
  v15 = (uint64_t *)(a7 + v14[21]);
  *v15 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED23A0);
  swift_storeEnumTagMultiPayload();
  v16 = a7 + v14[22];
  *(_QWORD *)v16 = swift_getKeyPath();
  *(_BYTE *)(v16 + 8) = 0;
  v17 = a7 + v14[23];
  result = swift_getKeyPath();
  *(_QWORD *)v17 = result;
  *(_BYTE *)(v17 + 8) = 0;
  *(_QWORD *)a7 = a1;
  *(_QWORD *)(a7 + 8) = a2;
  *(_QWORD *)(a7 + 16) = a3;
  *(_QWORD *)(a7 + 24) = a4;
  *(_QWORD *)(a7 + 32) = a5;
  *(_QWORD *)(a7 + 40) = a6;
  *(_BYTE *)(a7 + 48) = 0;
  return result;
}

void ContentUnavailableView.init(title:message:action:)(uint64_t a1@<X8>)
{
  *(_QWORD *)(a1 + 88) = 0;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_QWORD *)(a1 + 96) = swift_getKeyPath();
  *(_BYTE *)(a1 + 104) = 0;
  type metadata accessor for ContentUnavailableView();
}

uint64_t sub_20E44F208(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v8 = (uint64_t *)(v3 + a1[21]);
  *v8 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED23A0);
  swift_storeEnumTagMultiPayload();
  v9 = v3 + a1[22];
  *(_QWORD *)v9 = swift_getKeyPath();
  *(_BYTE *)(v9 + 8) = 0;
  v10 = v3 + a1[23];
  result = swift_getKeyPath();
  *(_QWORD *)v10 = result;
  *(_BYTE *)(v10 + 8) = 0;
  *(_QWORD *)v3 = v6;
  *(_QWORD *)(v3 + 8) = v5;
  *(_QWORD *)(v3 + 16) = v4;
  *(_QWORD *)(v3 + 24) = v2;
  *(_QWORD *)(v3 + 32) = v1;
  *(_QWORD *)(v3 + 40) = v12;
  *(_BYTE *)(v3 + 48) = 0;
  return result;
}

void ContentUnavailableView.init<>(title:message:)(uint64_t a1@<X8>)
{
  ContentUnavailableView.init(title:message:action:)(a1);
}

void ContentUnavailableView.init<>(title:)(uint64_t a1@<X8>)
{
  ContentUnavailableView.init(title:message:action:)(a1);
}

void ContentUnavailableView.init<>(title:action:)(uint64_t a1@<X8>)
{
  ContentUnavailableView.init(title:message:action:)(a1);
}

void ContentUnavailableView.init<>(error:action:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  type metadata accessor for ContentUnavailableTextLogBuilder();
  v12 = swift_allocObject();
  *(_WORD *)(v12 + 24) = 514;
  *(_QWORD *)(v12 + 16) = a1;
  *(_QWORD *)(swift_allocObject() + 16) = a1;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v12;
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = a4;
  v14[3] = a5;
  v14[4] = a2;
  v14[5] = a3;
  ContentUnavailableView.init(title:message:action:)(a6);
}

uint64_t sub_20E44F494(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  void *v25;
  uint64_t v26;
  id v27;
  id v28;
  uint64_t result;

  v27 = v25;
  v28 = v25;
  swift_retain();
  result = swift_release();
  *(_QWORD *)(v24 + 88) = v26;
  return result;
}

void sub_20E44F4DC(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;

  v4 = a1;
  v5 = sub_20E453138();
  v7 = v6;
  v9 = v8;
  v11 = v10;

  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v7;
  *(_BYTE *)(a2 + 16) = v9 & 1;
  *(_QWORD *)(a2 + 24) = v11;
}

uint64_t sub_20E44F540@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  id v6;
  uint64_t result;
  uint64_t v8;
  char v9;
  uint64_t v10;

  v6 = a1;
  swift_retain();
  result = sub_20E448614(a1, a2);
  *(_QWORD *)a3 = result;
  *(_QWORD *)(a3 + 8) = v8;
  *(_BYTE *)(a3 + 16) = v9 & 1;
  *(_QWORD *)(a3 + 24) = v10;
  return result;
}

uint64_t sub_20E44F594()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v5;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19628);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_20E4A3620();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  swift_retain();
  return sub_20E4A4688();
}

uint64_t sub_20E44F658()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E44F67C()
{
  return sub_20E44F594();
}

void sub_20E44F684(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_20E44F4DC(*(void **)(v1 + 16), a1);
}

uint64_t sub_20E44F690@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_20E44F540(*(void **)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_20E44F698()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t type metadata accessor for ContentUnavailableButton(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ContentUnavailableButton);
}

uint64_t type metadata accessor for ContentUnavailableButton.Action(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ContentUnavailableButton.Action);
}

void type metadata accessor for _CompatibilityContentUnavailableViewContent()
{
  JUMPOUT(0x212BBDEE8);
}

uint64_t type metadata accessor for _ContentUnavailableScrollView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _ContentUnavailableScrollView);
}

unint64_t sub_20E44F6EC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[3];

  result = qword_253ED23F8;
  if (!qword_253ED23F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253ED2400);
    v2 = sub_20E39D010(&qword_253ED23E8, &qword_253ED23F0, MEMORY[0x24BDF43B0]);
    v3[0] = MEMORY[0x24BDF1F80];
    v3[1] = v2;
    v3[2] = MEMORY[0x24BDF5138];
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDF4AF8], v1, v3);
    atomic_store(result, (unint64_t *)&qword_253ED23F8);
  }
  return result;
}

void type metadata accessor for ContentUnavailableView()
{
  JUMPOUT(0x212BBDEE8);
}

uint64_t sub_20E44F78C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  swift_release();
  swift_release();
  if ((a7 & 1) != 0)
    return sub_20E3CF5C0(a5);
  else
    return swift_release();
}

void sub_20E44F7EC()
{
  type metadata accessor for ContentUnavailableView();
}

uint64_t sub_20E44F830(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  return sub_20E44AEAC(v1, v2 + ((v3 + 64) & ~v3));
}

void type metadata accessor for ContentUnavailableView.Implementation()
{
  JUMPOUT(0x212BBDEE8);
}

uint64_t sub_20E44F888()
{
  return sub_20E40971C((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_20E44B048);
}

void sub_20E44F898()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = v0[3];
  v3 = v0[4];
  v4 = v0[5];
  v5 = v0[6];
  v6 = v0[7];
  v1[2] = v0[2];
  v1[3] = v2;
  v1[4] = v3;
  v1[5] = v4;
  v1[6] = v5;
  v1[7] = v6;
  type metadata accessor for ContentUnavailableView();
}

uint64_t sub_20E44F8E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  v4 = v1 + ((v3 + 64) & ~v3);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 64) = v5;
  *v5 = v2;
  v5[1] = sub_20E44F94C;
  return sub_20E44B568(v4);
}

uint64_t sub_20E44F94C()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t objectdestroy_2Tm_2()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E44F9C4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E44F9E8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 32))();
}

uint64_t sub_20E44FA08()
{
  return sub_20E4529F8();
}

unint64_t sub_20E44FA18()
{
  unint64_t result;

  result = qword_253ED05C8;
  if (!qword_253ED05C8)
  {
    result = MEMORY[0x212BBDF90](&protocol conformance descriptor for ContentUnavailableViewPresentationContext, &type metadata for ContentUnavailableViewPresentationContext);
    atomic_store(result, (unint64_t *)&qword_253ED05C8);
  }
  return result;
}

uint64_t sub_20E44FA5C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for JetCellularDataInquiry()
{
  return objc_opt_self();
}

void sub_20E44FAB0()
{
  unint64_t v0;

  sub_20E3A4C54(319, &qword_253ED23A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB1F0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

unint64_t sub_20E44FB60(unint64_t a1, uint64_t a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  char v33;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v16 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = *(_QWORD *)a2;
    v8 = *(_QWORD *)(a2 + 8);
    v9 = *(_QWORD *)(a2 + 16);
    v10 = *(_QWORD *)(a2 + 24);
    v11 = *(_QWORD *)(a2 + 32);
    v12 = *(_QWORD *)(a2 + 40);
    v13 = *(_BYTE *)(a2 + 48);
    sub_20E44FD34(*(_QWORD *)a2, v8, v9, v10, v11, v12, v13);
    *(_QWORD *)a1 = v7;
    *(_QWORD *)(a1 + 8) = v8;
    *(_QWORD *)(a1 + 16) = v9;
    *(_QWORD *)(a1 + 24) = v10;
    *(_QWORD *)(a1 + 32) = v11;
    *(_QWORD *)(a1 + 40) = v12;
    *(_BYTE *)(a1 + 48) = v13;
    v14 = *(_QWORD *)(a2 + 56);
    if (v14)
    {
      v15 = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 56) = v14;
      *(_QWORD *)(a1 + 64) = v15;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    }
    v17 = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = v17;
    v18 = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    v19 = *(_BYTE *)(a2 + 104);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_20E39CFAC(v18, v19);
    *(_QWORD *)(a1 + 96) = v18;
    *(_BYTE *)(a1 + 104) = v19;
    v20 = a3[21];
    v21 = (_QWORD *)(a1 + v20);
    v22 = (_QWORD *)(a2 + v20);
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED23A0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v23 = sub_20E4A3668();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    }
    else
    {
      *v21 = *v22;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v24 = a3[22];
    v25 = a1 + v24;
    v26 = (uint64_t *)(a2 + v24);
    v27 = *v26;
    v28 = *((_BYTE *)v26 + 8);
    j__swift_retain(*v26);
    *(_QWORD *)v25 = v27;
    *(_BYTE *)(v25 + 8) = v28;
    v29 = a3[23];
    v30 = a1 + v29;
    v31 = a2 + v29;
    v32 = *(id *)v31;
    v33 = *(_BYTE *)(v31 + 8);
    sub_20E39CFA0(*(id *)v31, v33);
    *(_QWORD *)v30 = v32;
    *(_BYTE *)(v30 + 8) = v33;
  }
  return a1;
}

uint64_t sub_20E44FD34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if ((a7 & 1) != 0)
  {
    swift_retain();
    swift_retain();
    return sub_20E3E592C(a5);
  }
  else
  {
    swift_retain();
    swift_retain();
    return swift_retain();
  }
}

void sub_20E44FD9C(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;

  sub_20E44F78C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
  if (*(_QWORD *)(a1 + 56))
    swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_20E39CED8(*(_QWORD *)(a1 + 96), *(_BYTE *)(a1 + 104));
  v4 = a1 + a2[21];
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED23A0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_20E4A3668();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  j__swift_release(*(_QWORD *)(a1 + a2[22]), *(unsigned __int8 *)(a1 + a2[22] + 8));
  sub_20E39CE70(*(id *)(a1 + a2[23]), *(_BYTE *)(a1 + a2[23] + 8));
}

uint64_t sub_20E44FE7C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  char v31;

  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(a2 + 32);
  v11 = *(_QWORD *)(a2 + 40);
  v12 = *(_BYTE *)(a2 + 48);
  sub_20E44FD34(*(_QWORD *)a2, v7, v8, v9, v10, v11, v12);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_QWORD *)(a1 + 16) = v8;
  *(_QWORD *)(a1 + 24) = v9;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v11;
  *(_BYTE *)(a1 + 48) = v12;
  v13 = *(_QWORD *)(a2 + 56);
  if (v13)
  {
    v14 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 56) = v13;
    *(_QWORD *)(a1 + 64) = v14;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  }
  v15 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v15;
  v16 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v17 = *(_BYTE *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_20E39CFAC(v16, v17);
  *(_QWORD *)(a1 + 96) = v16;
  *(_BYTE *)(a1 + 104) = v17;
  v18 = a3[21];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (_QWORD *)(a2 + v18);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED23A0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v21 = sub_20E4A3668();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
  }
  else
  {
    *v19 = *v20;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v22 = a3[22];
  v23 = a1 + v22;
  v24 = (uint64_t *)(a2 + v22);
  v25 = *v24;
  v26 = *((_BYTE *)v24 + 8);
  j__swift_retain(*v24);
  *(_QWORD *)v23 = v25;
  *(_BYTE *)(v23 + 8) = v26;
  v27 = a3[23];
  v28 = a1 + v27;
  v29 = a2 + v27;
  v30 = *(id *)v29;
  v31 = *(_BYTE *)(v29 + 8);
  sub_20E39CFA0(*(id *)v29, v31);
  *(_QWORD *)v28 = v30;
  *(_BYTE *)(v28 + 8) = v31;
  return a1;
}

uint64_t sub_20E450024(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t *v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  char v42;
  void *v43;
  char v44;

  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(a2 + 32);
  v11 = *(_QWORD *)(a2 + 40);
  v12 = *(_BYTE *)(a2 + 48);
  sub_20E44FD34(*(_QWORD *)a2, v7, v8, v9, v10, v11, v12);
  v13 = *(_QWORD *)a1;
  v14 = *(_QWORD *)(a1 + 8);
  v15 = *(_QWORD *)(a1 + 16);
  v16 = *(_QWORD *)(a1 + 24);
  v17 = *(_QWORD *)(a1 + 32);
  v18 = *(_QWORD *)(a1 + 40);
  v19 = *(_BYTE *)(a1 + 48);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_QWORD *)(a1 + 16) = v8;
  *(_QWORD *)(a1 + 24) = v9;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v11;
  *(_BYTE *)(a1 + 48) = v12;
  sub_20E44F78C(v13, v14, v15, v16, v17, v18, v19);
  v20 = *(_QWORD *)(a2 + 56);
  if (*(_QWORD *)(a1 + 56))
  {
    if (v20)
    {
      v21 = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 56) = v20;
      *(_QWORD *)(a1 + 64) = v21;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v20)
  {
    v22 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 56) = v20;
    *(_QWORD *)(a1 + 64) = v22;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
LABEL_8:
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_retain();
  swift_release();
  v23 = *(_QWORD *)(a2 + 96);
  v24 = *(_BYTE *)(a2 + 104);
  sub_20E39CFAC(v23, v24);
  v25 = *(_QWORD *)(a1 + 96);
  v26 = *(_BYTE *)(a1 + 104);
  *(_QWORD *)(a1 + 96) = v23;
  *(_BYTE *)(a1 + 104) = v24;
  sub_20E39CED8(v25, v26);
  if (a1 != a2)
  {
    v27 = a3[21];
    v28 = (_QWORD *)(a1 + v27);
    v29 = (_QWORD *)(a2 + v27);
    sub_20E39D1F8(a1 + v27, &qword_253ED23A0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED23A0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v30 = sub_20E4A3668();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
    }
    else
    {
      *v28 = *v29;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v31 = a3[22];
  v32 = (uint64_t *)(a1 + v31);
  v33 = (uint64_t *)(a2 + v31);
  v34 = *v33;
  v35 = *((_BYTE *)v33 + 8);
  j__swift_retain(*v33);
  v36 = *v32;
  v37 = *((unsigned __int8 *)v32 + 8);
  *v32 = v34;
  *((_BYTE *)v32 + 8) = v35;
  j__swift_release(v36, v37);
  v38 = a3[23];
  v39 = a1 + v38;
  v40 = a2 + v38;
  v41 = *(id *)v40;
  v42 = *(_BYTE *)(v40 + 8);
  sub_20E39CFA0(*(id *)v40, v42);
  v43 = *(void **)v39;
  v44 = *(_BYTE *)(v39 + 8);
  *(_QWORD *)v39 = v41;
  *(_BYTE *)(v39 + 8) = v42;
  sub_20E39CE70(v43, v44);
  return a1;
}

uint64_t sub_20E45026C(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v7 = *(_QWORD *)(a2 + 56);
  if (v7)
  {
    v8 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 56) = v7;
    *(_QWORD *)(a1 + 64) = v8;
  }
  else
  {
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  }
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  v9 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v9;
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  v10 = a3[21];
  v11 = (void *)(a1 + v10);
  v12 = (const void *)(a2 + v10);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED23A0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v14 = sub_20E4A3668();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v11, v12, v14);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  v15 = a3[22];
  v16 = a3[23];
  v17 = a1 + v15;
  v18 = a2 + v15;
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *(_BYTE *)(v17 + 8) = *(_BYTE *)(v18 + 8);
  v19 = a1 + v16;
  v20 = a2 + v16;
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *(_BYTE *)(v19 + 8) = *(_BYTE *)(v20 + 8);
  return a1;
}

uint64_t sub_20E4503A4(uint64_t a1, uint64_t a2, int *a3)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  void *v23;
  const void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  void *v37;
  char v38;

  v6 = *(_BYTE *)(a2 + 48);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  v11 = *(_QWORD *)(a1 + 32);
  v12 = *(_QWORD *)(a1 + 40);
  v13 = *(_BYTE *)(a1 + 48);
  v14 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v14;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = v6;
  sub_20E44F78C(v7, v8, v9, v10, v11, v12, v13);
  v15 = *(_QWORD *)(a2 + 56);
  if (*(_QWORD *)(a1 + 56))
  {
    if (v15)
    {
      v16 = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 56) = v15;
      *(_QWORD *)(a1 + 64) = v16;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v15)
  {
    v17 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 56) = v15;
    *(_QWORD *)(a1 + 64) = v17;
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
LABEL_8:
  v18 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v18;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_release();
  v19 = *(_BYTE *)(a2 + 104);
  v20 = *(_QWORD *)(a1 + 96);
  v21 = *(_BYTE *)(a1 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = v19;
  sub_20E39CED8(v20, v21);
  if (a1 != a2)
  {
    v22 = a3[21];
    v23 = (void *)(a1 + v22);
    v24 = (const void *)(a2 + v22);
    sub_20E39D1F8(a1 + v22, &qword_253ED23A0);
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED23A0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v26 = sub_20E4A3668();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v23, v24, v26);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
  }
  v27 = a3[22];
  v28 = (uint64_t *)(a1 + v27);
  v29 = (uint64_t *)(a2 + v27);
  v30 = *v29;
  LOBYTE(v29) = *((_BYTE *)v29 + 8);
  v31 = *v28;
  v32 = *((unsigned __int8 *)v28 + 8);
  *v28 = v30;
  *((_BYTE *)v28 + 8) = (_BYTE)v29;
  j__swift_release(v31, v32);
  v33 = a3[23];
  v34 = a1 + v33;
  v35 = (uint64_t *)(a2 + v33);
  v36 = *v35;
  LOBYTE(v35) = *((_BYTE *)v35 + 8);
  v37 = *(void **)v34;
  v38 = *(_BYTE *)(v34 + 8);
  *(_QWORD *)v34 = v36;
  *(_BYTE *)(v34 + 8) = (_BYTE)v35;
  sub_20E39CE70(v37, v38);
  return a1;
}

uint64_t sub_20E450574()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_20E450580(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 56);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A0D8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 84), a2, v9);
  }
}

uint64_t sub_20E45060C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_20E450618(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 56) = a2;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A0D8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 84), a2, a2, v7);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ContentUnavailableViewPresentationContext(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_20E4506DC + 4 * byte_20E4ADC51[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_20E450710 + 4 * byte_20E4ADC4C[v4]))();
}

uint64_t sub_20E450710(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20E450718(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20E450720);
  return result;
}

uint64_t sub_20E45072C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20E450734);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_20E450738(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20E450740(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ContentUnavailableViewPresentationContext()
{
  return &type metadata for ContentUnavailableViewPresentationContext;
}

void sub_20E45075C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  sub_20E3A4C54(319, &qword_253ED2390, (uint64_t (*)(uint64_t))MEMORY[0x24BDEAFA8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v3 <= 0x3F)
  {
    type metadata accessor for ContentUnavailableButton.Action(319, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), v2);
    if (v4 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_20E450808(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    v7 = sub_20E4A3620();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19628);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    type metadata accessor for ContentUnavailableButton.Action(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), v10);
    v13 = (char *)&loc_20E45090C + 4 * byte_20E4ADC56[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v11 = *a2;
  *a1 = *a2;
  v12 = v11 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return v12;
}

uint64_t sub_20E4509E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = sub_20E4A3620();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v7 = a1 + *(int *)(a2 + 36);
  type metadata accessor for ContentUnavailableButton.Action(0, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), v6);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_release();
      break;
    case 1u:
      __swift_destroy_boxed_opaque_existential_1(v7);
      break;
    case 2u:
    case 3u:
      v8 = sub_20E4A3344();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
      break;
    default:
      return swift_release();
  }
  return swift_release();
}

void sub_20E450ACC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;

  v6 = sub_20E4A3620();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19628);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  type metadata accessor for ContentUnavailableButton.Action(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), v9);
  v10 = (char *)sub_20E450BA8 + 4 * byte_20E4ADC5E[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_20E450BA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;

  v5 = v4[1];
  *v3 = *v4;
  v3[1] = v5;
  swift_retain();
  swift_storeEnumTagMultiPayload();
  v6 = *(int *)(v2 + 40);
  v7 = (_QWORD *)(v0 + v6);
  v8 = (_QWORD *)(v1 + v6);
  v9 = v8[1];
  *v7 = *v8;
  v7[1] = v9;
  swift_retain();
  return v0;
}

char *sub_20E450C84(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v6 = sub_20E4A3620();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      if (a1 == a2)
        goto LABEL_10;
LABEL_8:
      v13 = &a1[*(int *)(a3 + 36)];
      v14 = type metadata accessor for ContentUnavailableButton.Action(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), v11);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
      v15 = (char *)&loc_20E450DB4 + 4 * byte_20E4ADC62[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    goto LABEL_7;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_7:
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19628);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    if (a1 != a2)
      goto LABEL_8;
    goto LABEL_10;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
  if (a1 != a2)
    goto LABEL_8;
LABEL_10:
  v16 = *(int *)(a3 + 40);
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = *((_QWORD *)v18 + 1);
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *((_QWORD *)v17 + 1) = v19;
  swift_retain();
  swift_release();
  return a1;
}

char *sub_20E450EC4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  int EnumCaseMultiPayload;
  uint64_t v15;

  v6 = sub_20E4A3620();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19628);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v10 = *(int *)(a3 + 36);
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = type metadata accessor for ContentUnavailableButton.Action(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), v9);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3 || EnumCaseMultiPayload == 2)
  {
    v15 = sub_20E4A3344();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v11, v12, v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  *(_OWORD *)&a1[*(int *)(a3 + 40)] = *(_OWORD *)&a2[*(int *)(a3 + 40)];
  return a1;
}

char *sub_20E451034(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  int EnumCaseMultiPayload;
  uint64_t v19;

  v6 = sub_20E4A3620();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      if (a1 == a2)
        goto LABEL_14;
      goto LABEL_8;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_7:
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19628);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    if (a1 == a2)
      goto LABEL_14;
    goto LABEL_8;
  }
  if (v10)
    goto LABEL_7;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  if (a1 == a2)
    goto LABEL_14;
LABEL_8:
  v13 = *(int *)(a3 + 36);
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = type metadata accessor for ContentUnavailableButton.Action(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), v11);
  v17 = *(_QWORD *)(v16 - 8);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v14, v16);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3 || EnumCaseMultiPayload == 2)
  {
    v19 = sub_20E4A3344();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v14, v15, v19);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v14, v15, *(_QWORD *)(v17 + 64));
  }
LABEL_14:
  *(_OWORD *)&a1[*(int *)(a3 + 40)] = *(_OWORD *)&a2[*(int *)(a3 + 40)];
  swift_release();
  return a1;
}

uint64_t sub_20E451224()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_20E451230(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v15;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19628);
  v8 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v8 + 84) == (_DWORD)a2)
  {
    v9 = v6;
    v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    v11 = a1;
    return v10(v11, a2, v9);
  }
  v12 = type metadata accessor for ContentUnavailableButton.Action(0, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24), v7);
  v13 = *(_QWORD *)(v12 - 8);
  if (*(_DWORD *)(v13 + 84) == (_DWORD)a2)
  {
    v9 = v12;
    v11 = a1 + *(int *)(a3 + 36);
    v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
    return v10(v11, a2, v9);
  }
  v15 = *(_QWORD *)(a1 + *(int *)(a3 + 40));
  if (v15 >= 0xFFFFFFFF)
    LODWORD(v15) = -1;
  return (v15 + 1);
}

uint64_t sub_20E4512E0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_20E4512EC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t result;
  uint64_t v15;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19628);
  v10 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v10 + 84) == a3)
  {
    v11 = v8;
    v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    v13 = a1;
    return v12(v13, a2, a2, v11);
  }
  result = type metadata accessor for ContentUnavailableButton.Action(0, *(_QWORD *)(a4 + 16), *(_QWORD *)(a4 + 24), v9);
  v15 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v15 + 84) == a3)
  {
    v11 = result;
    v13 = a1 + *(int *)(a4 + 36);
    v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56);
    return v12(v13, a2, a2, v11);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 40)) = (a2 - 1);
  return result;
}

void sub_20E451398()
{
  type metadata accessor for _CompatibilityContentUnavailableViewContent();
}

uint64_t sub_20E4513D4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t OpaqueTypeConformance2;
  uint64_t (*v20)(uint64_t);
  uint64_t v21;
  uint64_t (*v22)(uint64_t);
  uint64_t v23;
  _QWORD v25[2];
  _QWORD v26[2];
  _QWORD v27[2];
  _QWORD v28[2];
  _QWORD v29[2];
  _QWORD v30[2];
  _QWORD v31[2];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v2 = MEMORY[0x212BBDF90](&unk_20E4AE2F8, a1);
  v4 = type metadata accessor for _ContentUnavailableScrollView(255, a1, v2, v3);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253ED2378);
  v5 = sub_20E4A3E00();
  v6 = sub_20E4A39D4();
  type metadata accessor for _OnScenePhaseChange(255);
  v7 = sub_20E4A39D4();
  v8 = sub_20E4A3E00();
  v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253ED2408);
  v31[0] = MEMORY[0x212BBDF90](&unk_20E4AE2A8, v4);
  v31[1] = sub_20E39D010(&qword_253ED2370, &qword_253ED2378, (uint64_t)&unk_20E4AE2A8);
  v10 = MEMORY[0x24BDEF3E0];
  v11 = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v5, v31);
  v30[0] = v11;
  v30[1] = sub_20E3A50B4();
  v12 = MEMORY[0x24BDED308];
  v13 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v6, v30);
  v29[0] = v11;
  v29[1] = sub_20E39F334(&qword_253ED21C0, type metadata accessor for _OnScenePhaseChange, (uint64_t)&unk_20E4AAC48);
  v28[0] = v13;
  v28[1] = MEMORY[0x212BBDF90](v12, v7, v29);
  v14 = MEMORY[0x212BBDF90](v10, v8, v28);
  v15 = sub_20E453714(&qword_253ED2410, &qword_253ED2408, (uint64_t (*)(void))sub_20E44F6EC, MEMORY[0x24BDF5578]);
  v32 = v8;
  v33 = v9;
  v34 = v14;
  v35 = v15;
  MEMORY[0x212BBDF30](255, &v32, MEMORY[0x24BDF2338], 0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253ED29F8);
  v16 = sub_20E4A39D4();
  v32 = v8;
  v33 = v9;
  v34 = v14;
  v35 = v15;
  v27[0] = swift_getOpaqueTypeConformance2();
  v27[1] = sub_20E39D010(&qword_253ED29F0, &qword_253ED29F8, MEMORY[0x24BDEF370]);
  v17 = MEMORY[0x212BBDF90](v12, v16, v27);
  v32 = v16;
  v33 = v17;
  v18 = MEMORY[0x212BBDF30](255, &v32, MEMORY[0x24BDF33A8], 0);
  v32 = v16;
  v33 = v17;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v32 = v18;
  v33 = OpaqueTypeConformance2;
  MEMORY[0x212BBDF30](255, &v32, MEMORY[0x24BDF2F10], 0);
  sub_20E4A4004();
  v20 = (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088];
  v21 = sub_20E4A39D4();
  sub_20E4A3854();
  v22 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEC4E0];
  v23 = sub_20E4A39D4();
  v32 = v18;
  v33 = OpaqueTypeConformance2;
  v26[0] = swift_getOpaqueTypeConformance2();
  v26[1] = sub_20E39F334(qword_253ED27F8, v20, MEMORY[0x24BDF1078]);
  v25[0] = MEMORY[0x212BBDF90](v12, v21, v26);
  v25[1] = sub_20E39F334(qword_253ED2910, v22, MEMORY[0x24BDEC4C8]);
  return MEMORY[0x212BBDF90](v12, v23, v25);
}

uint64_t sub_20E451730(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253ED05F8);
  v2 = sub_20E4A39D4();
  v4[0] = v1;
  v4[1] = sub_20E39D010(&qword_253ED05F0, &qword_253ED05F8, MEMORY[0x24BDF1028]);
  return MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v2, v4);
}

uint64_t sub_20E4517B0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[2];
  _QWORD v14[2];
  _QWORD v15[2];

  v1 = *a1;
  v2 = a1[1];
  v3 = sub_20E4A46B8();
  v5 = type metadata accessor for ActionButton(255, v1, v2, v4);
  v6 = sub_20E4A3E00();
  v7 = sub_20E4A4160();
  v8 = sub_20E4A3E00();
  v9 = sub_20E4A3E00();
  v15[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDF43B0], v3);
  v15[1] = MEMORY[0x212BBDF90](&protocol conformance descriptor for ActionButton<A>, v5);
  v10 = MEMORY[0x24BDEF3E0];
  v11 = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v6, v15);
  v14[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDF19E0], v7);
  v14[1] = v14[0];
  v13[0] = v11;
  v13[1] = MEMORY[0x212BBDF90](v10, v8, v14);
  return MEMORY[0x212BBDF90](v10, v9, v13);
}

ValueMetadata *type metadata accessor for ContentUnavailableTextLogBuilder.ConnectivityMessageType()
{
  return &type metadata for ContentUnavailableTextLogBuilder.ConnectivityMessageType;
}

uint64_t _s18_JetEngine_SwiftUI32ContentUnavailableTextLogBuilderC11MessageTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_20E451938 + 4 * byte_20E4ADC6B[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_20E45196C + 4 * byte_20E4ADC66[v4]))();
}

uint64_t sub_20E45196C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20E451974(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20E45197CLL);
  return result;
}

uint64_t sub_20E451988(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20E451990);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_20E451994(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20E45199C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ContentUnavailableTextLogBuilder.MessageType()
{
  return &type metadata for ContentUnavailableTextLogBuilder.MessageType;
}

uint64_t sub_20E4519B8(uint64_t a1)
{
  return sub_20E44F78C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
}

uint64_t sub_20E4519D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_BYTE *)(a2 + 48);
  sub_20E44FD34(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_BYTE *)(a1 + 48) = v9;
  return a1;
}

uint64_t sub_20E451A48(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_BYTE *)(a2 + 48);
  sub_20E44FD34(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9);
  v10 = *(_QWORD *)a1;
  v11 = *(_QWORD *)(a1 + 8);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 32);
  v15 = *(_QWORD *)(a1 + 40);
  v16 = *(_BYTE *)(a1 + 48);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_BYTE *)(a1 + 48) = v9;
  sub_20E44F78C(v10, v11, v12, v13, v14, v15, v16);
  return a1;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_20E451AF0(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  __int128 v11;

  v3 = *(_BYTE *)(a2 + 48);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_BYTE *)(a1 + 48);
  v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v11;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = v3;
  sub_20E44F78C(v4, v6, v5, v7, v8, v9, v10);
  return a1;
}

uint64_t sub_20E451B44(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 49))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 48);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t sub_20E451B8C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 49) = 0;
    if (a2)
      *(_BYTE *)(result + 48) = -(char)a2;
  }
  return result;
}

uint64_t sub_20E451BE0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 48);
}

uint64_t sub_20E451BE8(uint64_t result, char a2)
{
  *(_BYTE *)(result + 48) = a2 & 1;
  return result;
}

uint64_t destroy for _PlatformContentUnavailableViewContent(uint64_t a1)
{
  uint64_t result;

  swift_release();
  result = swift_release();
  if (*(_QWORD *)(a1 + 32))
    return swift_release();
  return result;
}

uint64_t initializeWithCopy for _PlatformContentUnavailableViewContent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = v4;
  v6 = (_OWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_retain();
  if (v5)
  {
    v7 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = v5;
    *(_QWORD *)(a1 + 40) = v7;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 32) = *v6;
  }
  return a1;
}

_QWORD *assignWithCopy for _PlatformContentUnavailableViewContent(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  v6 = a2[4];
  if (!a1[4])
  {
    if (v6)
    {
      v8 = a2[5];
      a1[4] = v6;
      a1[5] = v8;
      swift_retain();
      return a1;
    }
LABEL_7:
    *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
    return a1;
  }
  if (!v6)
  {
    swift_release();
    goto LABEL_7;
  }
  v7 = a2[5];
  a1[4] = v6;
  a1[5] = v7;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for _PlatformContentUnavailableViewContent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  v4 = *(_QWORD *)(a2 + 32);
  if (!*(_QWORD *)(a1 + 32))
  {
    if (v4)
    {
      v6 = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 32) = v4;
      *(_QWORD *)(a1 + 40) = v6;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v5;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for _PlatformContentUnavailableViewContent()
{
  return &type metadata for _PlatformContentUnavailableViewContent;
}

void sub_20E451E20()
{
  unint64_t v0;

  sub_20E452234();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

_QWORD *sub_20E451E98(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *a1 = v5;
    a1 = (_QWORD *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v6 = a2[1];
    *a1 = v5;
    a1[1] = v6;
    v7 = *(int *)(a3 + 36);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    swift_retain();
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED23B0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  }
  return a1;
}

uint64_t sub_20E451F2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release();
  v4 = a1 + *(int *)(a2 + 36);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED23B0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_20E451F78(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 36);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  swift_retain();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED23B0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  return a1;
}

_QWORD *sub_20E451FDC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_release();
  v7 = *(int *)(a3 + 36);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED23B0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

_OWORD *sub_20E452054(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 36);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED23B0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_OWORD *sub_20E4520B4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_release();
  v6 = *(int *)(a3 + 36);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED23B0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_20E452124()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_20E452130(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED23B0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 36)], a2, v8);
  }
}

uint64_t sub_20E4521B0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_20E4521BC(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED23B0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 36)], a2, a2, v7);
  }
  return result;
}

void sub_20E452234()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_253ED23B8)
  {
    sub_20E45228C();
    v0 = sub_20E4A3770();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_253ED23B8);
  }
}

unint64_t sub_20E45228C()
{
  unint64_t result;

  result = qword_253ED2108;
  if (!qword_253ED2108)
  {
    result = MEMORY[0x212BBDF90](MEMORY[0x24BEE50B8], MEMORY[0x24BEE50B0]);
    atomic_store(result, (unint64_t *)&qword_253ED2108);
  }
  return result;
}

uint64_t sub_20E4522D0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_20E4A3344();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_20E45234C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_20E45239C + 4 * byte_20E4ADC70[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t sub_20E45247C(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      result = swift_release();
      break;
    case 1:
      result = __swift_destroy_boxed_opaque_existential_1(a1);
      break;
    case 2:
    case 3:
      v3 = sub_20E4A3344();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      break;
    default:
      return result;
  }
  return result;
}

void sub_20E452504()
{
  char *v0;

  v0 = (char *)sub_20E452548 + 4 * byte_20E4ADC78[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_QWORD *sub_20E452548()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *v0 = *v1;
  v0[1] = v2;
  swift_retain();
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t sub_20E452608(uint64_t result, uint64_t a2, uint64_t a3)
{
  char *v3;

  if (result != a2)
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 8))(result, a3);
    v3 = (char *)&loc_20E452668 + 4 * byte_20E4ADC7C[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

void *sub_20E45272C(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3 || EnumCaseMultiPayload == 2)
  {
    v7 = sub_20E4A3344();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_20E4527F4(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  int EnumCaseMultiPayload;
  uint64_t v7;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 - 8);
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, a3);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3 || EnumCaseMultiPayload == 2)
    {
      v7 = sub_20E4A3344();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
  }
  return a1;
}

unint64_t sub_20E4528D8()
{
  unint64_t result;

  result = qword_254A1B4E0;
  if (!qword_254A1B4E0)
  {
    result = MEMORY[0x212BBDF90](&unk_20E4AE138, &type metadata for ContentUnavailableTextLogBuilder.MessageType);
    atomic_store(result, (unint64_t *)&qword_254A1B4E0);
  }
  return result;
}

unint64_t sub_20E452920()
{
  unint64_t result;

  result = qword_254A1B4E8;
  if (!qword_254A1B4E8)
  {
    result = MEMORY[0x212BBDF90](&unk_20E4AE1A0, &type metadata for ContentUnavailableTextLogBuilder.ConnectivityMessageType);
    atomic_store(result, (unint64_t *)&qword_254A1B4E8);
  }
  return result;
}

uint64_t sub_20E452964()
{
  return MEMORY[0x24BDF5560];
}

unint64_t sub_20E452974()
{
  unint64_t result;

  result = qword_253ED2110;
  if (!qword_253ED2110)
  {
    result = MEMORY[0x212BBDF90](&unk_20E4AE1C8, &type metadata for _PlatformContentUnavailableViewContent);
    atomic_store(result, (unint64_t *)&qword_253ED2110);
  }
  return result;
}

uint64_t sub_20E4529B8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E4529EC()
{
  return sub_20E4529F8();
}

uint64_t sub_20E4529F8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E452A30@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_20E44DBD4(*(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(void (**)(_QWORD, _QWORD))(v1 + 48), *(char **)(v1 + 56), a1);
}

uint64_t sub_20E452A44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = type metadata accessor for _ContentUnavailableScrollView(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  v7 = v4 + ((v6 + 32) & ~v6);
  swift_release();
  v8 = v7 + *(int *)(v5 + 36);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED23B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  return swift_deallocObject();
}

uint64_t sub_20E452AD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for _ContentUnavailableScrollView(0, v6, v7, a2) - 8)
                          + 80);
  return sub_20E44CDF4(a1, v3 + ((v8 + 32) & ~v8), v6, v7, a3);
}

uint64_t sub_20E452B40@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_20E44D2E0(v1[4], v1[5], v1[2], v1[3], a1);
}

uint64_t sub_20E452B4C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_20E44D594(*(void (***)(double))(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t objectdestroy_76Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = sub_20E4A3830();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = sub_20E4A3344();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject();
}

uint64_t sub_20E452C18()
{
  sub_20E4A3830();
  sub_20E4A3344();
  return sub_20E4A3824();
}

unint64_t sub_20E452C80()
{
  unint64_t result;

  result = qword_253ED0668;
  if (!qword_253ED0668)
  {
    result = MEMORY[0x212BBDF90](&unk_20E4AF800, &type metadata for PerformActionKey);
    atomic_store(result, (unint64_t *)&qword_253ED0668);
  }
  return result;
}

uint64_t sub_20E452CC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_20E4A5384();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  if (*(_QWORD *)(v0 + 40))
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + ((v3 + 96) & ~v3), v1);
  return swift_deallocObject();
}

uint64_t sub_20E452D50()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_20E4A5384() - 8) + 80);
  return sub_20E44BE20(v0 + 16, v0 + 56, v0 + ((v1 + 96) & ~v1));
}

unint64_t sub_20E452D84()
{
  unint64_t result;

  result = qword_253ED2118[0];
  if (!qword_253ED2118[0])
  {
    result = MEMORY[0x212BBDF90](&unk_20E4AE218, &type metadata for _PlatformContentUnavailableViewContent);
    atomic_store(result, qword_253ED2118);
  }
  return result;
}

uint64_t sub_20E452DC8@<X0>(uint64_t a1@<X8>)
{
  return sub_20E452DE8(a1);
}

uint64_t sub_20E452DE8@<X0>(uint64_t a1@<X8>)
{
  id v2;
  uint64_t result;
  uint64_t v4;
  char v5;
  uint64_t v6;

  sub_20E4A3CA4();
  if (qword_253ED2A20 != -1)
    swift_once();
  v2 = (id)qword_253ED2A18;
  result = sub_20E4A41B4();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5 & 1;
  *(_QWORD *)(a1 + 24) = v6;
  return result;
}

uint64_t sub_20E452EA4()
{
  return sub_20E40971C((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_20E44B284);
}

void objectdestroy_44Tm()
{
  type metadata accessor for ContentUnavailableView();
}

uint64_t sub_20E452EEC(int *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(unsigned __int8 *)(*((_QWORD *)a1 - 1) + 80);
  v4 = v1 + ((v3 + 64) & ~v3);
  sub_20E44F78C(*(_QWORD *)v4, *(_QWORD *)(v4 + 8), *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32), *(_QWORD *)(v4 + 40), *(_BYTE *)(v4 + 48));
  if (*(_QWORD *)(v4 + 56))
    swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_20E39CED8(*(_QWORD *)(v4 + 96), *(_BYTE *)(v4 + 104));
  v5 = v4 + a1[21];
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED23A0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_20E4A3668();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  j__swift_release(*(_QWORD *)(v4 + a1[22]), *(unsigned __int8 *)(v4 + a1[22] + 8));
  sub_20E39CE70(*(id *)(v4 + a1[23]), *(_BYTE *)(v4 + a1[23] + 8));
  return swift_deallocObject();
}

void sub_20E452FF4()
{
  type metadata accessor for ContentUnavailableView();
}

void sub_20E453034(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  sub_20E44B3B8(v1 + ((v2 + 64) & ~v2));
}

uint64_t sub_20E45307C()
{
  uint64_t v0;

  swift_release();
  swift_release();
  if (*(_QWORD *)(v0 + 48))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E4530B8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;

  return sub_20E449298(v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], a1);
}

uint64_t sub_20E4530C8()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_20E4530FC()
{
  sub_20E4491B8();
}

uint64_t sub_20E453138()
{
  id v0;
  uint64_t v2;

  swift_getErrorValue();
  if ((sub_20E449678(v2) & 1) != 0 && qword_253ED21B8 != -1)
    swift_once();
  sub_20E4A3CA4();
  if (qword_253ED2A20 != -1)
    swift_once();
  v0 = (id)qword_253ED2A18;
  return sub_20E4A41B4();
}

unint64_t sub_20E453298()
{
  unint64_t result;

  result = qword_254A1B520;
  if (!qword_254A1B520)
  {
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDCFB50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_254A1B520);
  }
  return result;
}

uint64_t sub_20E4532DC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_20E453300(uint64_t a1)
{
  return sub_20E448BC8(a1);
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

unint64_t sub_20E453320()
{
  unint64_t result;

  result = qword_253ED2380;
  if (!qword_253ED2380)
  {
    result = MEMORY[0x212BBDF90](&unk_20E4AE380, &type metadata for ContentUnavailableViewPresentationContextKey);
    atomic_store(result, (unint64_t *)&qword_253ED2380);
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentUnavailableViewPresentationContextKey()
{
  return &type metadata for ContentUnavailableViewPresentationContextKey;
}

uint64_t sub_20E453374(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[2];
  _QWORD v8[4];

  v1 = *(_QWORD *)(a1 + 16);
  v2 = *(_QWORD *)(a1 + 40);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1A230);
  sub_20E4A39D4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1B4F0);
  sub_20E4A39D4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1B4F8);
  sub_20E4A39D4();
  sub_20E4A39D4();
  sub_20E4A39D4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A199F8);
  sub_20E4A39D4();
  sub_20E4A39D4();
  v8[0] = v1;
  v8[1] = sub_20E4A3C80();
  v8[2] = v2;
  v8[3] = sub_20E39F334(&qword_254A1B500, (uint64_t (*)(uint64_t))MEMORY[0x24BDEE8E8], MEMORY[0x24BDEE8D8]);
  MEMORY[0x212BBDF30](255, v8, MEMORY[0x24BDF22B8], 0);
  sub_20E4A39D4();
  swift_getTupleTypeMetadata3();
  v3 = sub_20E4A491C();
  MEMORY[0x212BBDF90](MEMORY[0x24BDF5428], v3);
  v4 = sub_20E4A470C();
  v5 = sub_20E4A39D4();
  v7[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDF4700], v4);
  v7[1] = MEMORY[0x24BDECC60];
  return MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v5, v7);
}

uint64_t sub_20E453568(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t OpaqueTypeConformance2;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[2];
  _QWORD v16[2];
  _QWORD v17[2];

  v1 = *(_QWORD *)(a1 + 8);
  v2 = sub_20E4A39D4();
  v3 = sub_20E4A39D4();
  v17[0] = v1;
  v17[1] = MEMORY[0x24BDECC60];
  v4 = MEMORY[0x24BDED308];
  v16[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v2, v17);
  v16[1] = MEMORY[0x24BDEBEE0];
  MEMORY[0x212BBDF90](v4, v3, v16);
  v5 = sub_20E4A470C();
  v6 = sub_20E4A39D4();
  v15[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDF4700], v5);
  v15[1] = MEMORY[0x24BDEDBB8];
  MEMORY[0x212BBDF90](v4, v6, v15);
  v7 = sub_20E4A3674();
  v8 = MEMORY[0x212BBDF90](MEMORY[0x24BDEB238], v7);
  v13 = v7;
  v14 = v8;
  v9 = MEMORY[0x212BBDF30](255, &v13, MEMORY[0x24BDF2FE0], 0);
  v13 = v7;
  v14 = v8;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v13 = v9;
  v14 = OpaqueTypeConformance2;
  MEMORY[0x212BBDF30](255, &v13, MEMORY[0x24BDF29F8], 0);
  v13 = v9;
  v14 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  v11 = sub_20E4A38B4();
  return MEMORY[0x212BBDF90](MEMORY[0x24BDEC6F8], v11);
}

uint64_t sub_20E453714(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9 = a3();
    result = MEMORY[0x212BBDF90](a4, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

double ShelfScrollGeometryProxy.containerInsets.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

double ShelfScrollGeometryProxy.containerSize.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

double ShelfScrollGeometryProxy.contentOffset.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 48);
}

double ShelfScrollGeometryProxy.contentSize.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 64);
}

BOOL _s18_JetEngine_SwiftUI24ShelfScrollGeometryProxyV2eeoiySbAC_ACtFZ_0(float64x2_t *a1, float64x2_t *a2)
{
  double v4;
  double v5;
  double v6;
  double v7;
  char v8;
  _BOOL8 result;

  v5 = a1[4].f64[0];
  v4 = a1[4].f64[1];
  v7 = a2[4].f64[0];
  v6 = a2[4].f64[1];
  v8 = sub_20E4A362C();
  result = 0;
  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(a1[2], a2[2]), (int32x4_t)vceqq_f64(a1[3], a2[3]))), 0xFuLL))) & 1) != 0&& (v8 & 1) != 0)
  {
    return v4 == v6 && v5 == v7;
  }
  return result;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for ShelfScrollGeometryProxy(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 80))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ShelfScrollGeometryProxy(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 80) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ShelfScrollGeometryProxy()
{
  return &type metadata for ShelfScrollGeometryProxy;
}

uint64_t EnvironmentValues.presentedBy.getter()
{
  sub_20E453938();
  return sub_20E4A3C08();
}

unint64_t sub_20E453938()
{
  unint64_t result;

  result = qword_253ED0660;
  if (!qword_253ED0660)
  {
    result = MEMORY[0x212BBDF90](&unk_20E4AE504, &type metadata for PresentedByKey);
    atomic_store(result, (unint64_t *)&qword_253ED0660);
  }
  return result;
}

uint64_t sub_20E45397C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_20E453938();
  result = sub_20E4A3C08();
  *a1 = v3;
  return result;
}

uint64_t sub_20E4539C8()
{
  sub_20E453938();
  return sub_20E4A3C14();
}

uint64_t View.presentedBy(_:)()
{
  swift_getKeyPath();
  sub_20E4A4250();
  return swift_release();
}

uint64_t sub_20E453A80@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_20E453938();
  result = sub_20E4A3C08();
  *a1 = v3;
  return result;
}

uint64_t sub_20E453ACC()
{
  sub_20E453938();
  return sub_20E4A3C14();
}

BOOL static PresentationSource.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t PresentationSource.hash(into:)()
{
  return sub_20E4A641C();
}

uint64_t PresentationSource.hashValue.getter()
{
  sub_20E4A6410();
  sub_20E4A641C();
  return sub_20E4A6428();
}

unint64_t sub_20E453B98()
{
  unint64_t result;

  result = qword_254A1B528;
  if (!qword_254A1B528)
  {
    result = MEMORY[0x212BBDF90](&protocol conformance descriptor for PresentationSource, &type metadata for PresentationSource);
    atomic_store(result, (unint64_t *)&qword_254A1B528);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for PresentationSource(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_20E453C28 + 4 * byte_20E4AE425[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_20E453C5C + 4 * asc_20E4AE420[v4]))();
}

uint64_t sub_20E453C5C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20E453C64(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20E453C6CLL);
  return result;
}

uint64_t sub_20E453C78(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20E453C80);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_20E453C84(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20E453C8C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PresentationSource()
{
  return &type metadata for PresentationSource;
}

uint64_t sub_20E453CA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1A700);
  v2 = sub_20E4A39D4();
  v4[0] = v1;
  v4[1] = sub_20E453D08();
  return MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v2, v4);
}

unint64_t sub_20E453D08()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254A1A6F8;
  if (!qword_254A1A6F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1A700);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDF1028], v1);
    atomic_store(result, (unint64_t *)&qword_254A1A6F8);
  }
  return result;
}

ValueMetadata *type metadata accessor for PresentedByKey()
{
  return &type metadata for PresentedByKey;
}

void sub_20E453D64(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_20E453D70()
{
  sub_20E453DC0();
  return sub_20E4A389C();
}

unint64_t sub_20E453DC0()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_254A1B530;
  if (!qword_254A1B530)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1B538);
    v2 = sub_20E453B98();
    result = MEMORY[0x212BBDF90](MEMORY[0x24BEE4AB8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_254A1B530);
  }
  return result;
}

uint64_t sub_20E453E24()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_20E4A35CC();
  swift_release();
  return swift_release();
}

uint64_t sub_20E453E8C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v2 = type metadata accessor for FlowAlertAuthority.Presented(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v9 - v6;
  sub_20E3F8C2C(a1, (uint64_t)&v9 - v6);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_20E3F8C2C((uint64_t)v7, (uint64_t)v4);
  swift_retain();
  sub_20E4A35D8();
  return sub_20E3F8C70((uint64_t)v7);
}

__n128 AlertActionImplementation.init<A>(following:)@<Q0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t (**a6)(uint64_t a1, uint64_t a2)@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  __n128 result;

  v12 = *a1;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a2;
  *(_QWORD *)(v13 + 24) = a3;
  *(_QWORD *)(v13 + 32) = a4;
  *(_QWORD *)(v13 + 40) = a5;
  *(_QWORD *)(v13 + 48) = v12;
  result = *(__n128 *)(a1 + 1);
  *(__n128 *)(v13 + 56) = result;
  *a6 = sub_20E454360;
  a6[1] = (uint64_t (*)(uint64_t, uint64_t))v13;
  return result;
}

uint64_t sub_20E453FF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  _OWORD v44[2];
  uint64_t v45;

  v37 = a7;
  v38 = a8;
  v34 = a4;
  v35 = a5;
  v39 = a1;
  v36 = a9;
  v11 = type metadata accessor for FlowAlertAuthority.Presented(0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v33 - v15;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1B5D0);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1B5D8);
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v33 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v26 = (char *)&v33 - v25;
  sub_20E4A4E8C();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
  {
    sub_20E39D1F8((uint64_t)v19, &qword_254A1B5D0);
    v41 = 0u;
    v42 = 0u;
    v43 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v26, v19, v20);
    (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v23, v26, v20);
    v45 = 0;
    memset(v44, 0, sizeof(v44));
    swift_retain();
    v27 = sub_20E454600((uint64_t)v23, a2, (uint64_t)v44);
    swift_release();
    *((_QWORD *)&v42 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1B5E0);
    v43 = sub_20E39D010(&qword_254A1B5E8, &qword_254A1B5E0, (uint64_t)&unk_20E4AF8E0);
    *(_QWORD *)&v41 = v27;
    (*(void (**)(char *, uint64_t))(v21 + 8))(v26, v20);
  }
  sub_20E454568((uint64_t)&v41, (uint64_t)v44);
  *(_QWORD *)&v41 = a3;
  *((_QWORD *)&v41 + 1) = v34;
  *(_QWORD *)&v42 = v35;
  v28 = type metadata accessor for FlowAuthority(255, v37, v38, v36);
  v29 = sub_20E4A4778();
  MEMORY[0x212BBBCE0](&v40, v29);
  *(_QWORD *)&v41 = v40;
  sub_20E4412A4(v28);
  swift_release();
  v30 = (uint64_t)&v16[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254A19DF0) + 48)];
  v31 = sub_20E4A581C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v16, v39, v31);
  sub_20E4545B0((uint64_t)v44, v30);
  swift_storeEnumTagMultiPayload();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_20E3F8C2C((uint64_t)v16, (uint64_t)v13);
  swift_retain();
  sub_20E4A35D8();
  sub_20E3F8C70((uint64_t)v16);
  swift_release();
  return sub_20E39D1F8((uint64_t)v44, &qword_253ED0658);
}

uint64_t sub_20E45432C()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E454360(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_20E453FF0(a1, a2, v2[6], v2[7], v2[8], v2[2], v2[3], v2[4], v2[5]);
}

uint64_t AlertActionImplementation.perform(_:asPartOf:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _OWORD *v3;
  uint64_t v4;

  *(_QWORD *)(v4 + 24) = a2;
  *(_QWORD *)(v4 + 32) = a3;
  *(_QWORD *)(v4 + 16) = a1;
  *(_OWORD *)(v4 + 40) = *v3;
  sub_20E4A5DF8();
  *(_QWORD *)(v4 + 56) = sub_20E4A5DEC();
  sub_20E4A5DBC();
  return swift_task_switch();
}

uint64_t sub_20E454408()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(void (**)(uint64_t, uint64_t))(v0 + 40);
  v4 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  swift_release();
  v2(v3, v1);
  v5 = *MEMORY[0x24BE5CBF0];
  v6 = sub_20E4A4CB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v4, v5, v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_20E45448C()
{
  JUMPOUT(0x212BBDF90);
}

uint64_t sub_20E45449C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_20E3B4E08;
  return AlertActionImplementation.perform(_:asPartOf:)(a1, a2, a3);
}

uint64_t sub_20E454504()
{
  return MEMORY[0x24BE5DF40];
}

uint64_t sub_20E454510(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x212BBDF90](&protocol conformance descriptor for AlertActionImplementation<A>, a3);
  return sub_20E4A55B8();
}

uint64_t type metadata accessor for AlertActionImplementation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AlertActionImplementation);
}

uint64_t sub_20E454568(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0658);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20E4545B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0658);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20E454600(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t);
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t, uint64_t, double);
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54[3];
  uint64_t v55;
  uint64_t v56;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1B5F0);
  v47 = *(_QWORD *)(v5 - 8);
  v48 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v46 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1B5F8);
  v44 = *(_QWORD *)(v7 - 8);
  v45 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v43 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1B600);
  v41 = *(_QWORD *)(v9 - 8);
  v42 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v40 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_20E4A4A24();
  v53 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1B5D0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1B5D8);
  MEMORY[0x24BDAC7A8](v17);
  v51 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v39 - v21;
  v52 = v23;
  v24 = a1;
  v50 = *(void (**)(char *, uint64_t, uint64_t, double))(v23 + 16);
  v50((char *)&v39 - v21, a1, v17, v20);
  v25 = a3;
  sub_20E4545B0(a3, (uint64_t)v54);
  v49 = v11;
  if (v55)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0650);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254A1B5E0);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v39 = a3;
      swift_retain();
      sub_20E4A4EA4();
      swift_release();
      v26 = v52;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v16, 0, 1, v17);
      sub_20E4A5030();
      v25 = v39;
      swift_release();
      v27 = v53;
      if (*(_QWORD *)(v25 + 24))
        goto LABEL_15;
      goto LABEL_7;
    }
  }
  else
  {
    sub_20E39D1F8((uint64_t)v54, &qword_253ED0658);
  }
  v26 = v52;
  v27 = v53;
  if (*(_QWORD *)(v25 + 24))
    goto LABEL_15;
LABEL_7:
  sub_20E4A4CD0();
  if ((sub_20E4A5018() & 1) == 0)
  {
    v55 = sub_20E4A51A4();
    v56 = MEMORY[0x24BE5D370];
    __swift_allocate_boxed_opaque_existential_1Tm(v54);
    sub_20E4A5198();
    sub_20E4A4F40();
    v28 = v46;
    sub_20E4A56A8();
    sub_20E39D010(&qword_254A1B608, &qword_254A1B5F0, MEMORY[0x24BE5DBC8]);
    v29 = v48;
    sub_20E4A5024();
    v30 = v28;
    v27 = v53;
    v31 = v29;
    v24 = a1;
    (*(void (**)(char *, uint64_t))(v47 + 8))(v30, v31);
  }
  if (!*(_QWORD *)(v25 + 24))
  {
    sub_20E4A4DFC();
    if ((sub_20E4A5018() & 1) == 0)
    {
      sub_20E4A4F40();
      v32 = v43;
      sub_20E4A56CC();
      sub_20E39D010(&qword_254A1B610, &qword_254A1B5F8, MEMORY[0x24BE5DC60]);
      sub_20E4A5024();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v45);
    }
    if (!*(_QWORD *)(v25 + 24))
    {
      sub_20E4A4B08();
      if ((sub_20E4A5018() & 1) == 0)
      {
        sub_20E4A4F40();
        v33 = v40;
        sub_20E4A55C4();
        sub_20E39D010(&qword_254A1B618, &qword_254A1B600, MEMORY[0x24BE5DAB8]);
        v34 = v42;
        sub_20E4A5024();
        v35 = v34;
        v26 = v52;
        (*(void (**)(char *, uint64_t))(v41 + 8))(v33, v35);
      }
    }
  }
LABEL_15:
  ((void (*)(char *, char *, uint64_t))v50)(v51, v22, v17);
  swift_retain();
  sub_20E4A4A00();
  v36 = sub_20E4A4F10();
  swift_release();
  v37 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
  v37(v24, v17);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v13, v49);
  v37((uint64_t)v22, v17);
  sub_20E39D1F8(v25, &qword_253ED0658);
  return v36;
}

__n128 FlowView.init(following:tabLabels:destinations:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  __n128 result;

  *(_QWORD *)a6 = *(_QWORD *)a1;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a6 + 8) = result;
  *(_QWORD *)(a6 + 24) = a2;
  *(_QWORD *)(a6 + 32) = a3;
  *(_QWORD *)(a6 + 40) = a4;
  *(_QWORD *)(a6 + 48) = a5;
  return result;
}

_QWORD *FlowView.init<>(following:destinations:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *result;

  v16 = *a1;
  v17 = a1[1];
  v18 = a1[2];
  sub_20E4A59B4();
  result = (_QWORD *)swift_allocObject();
  result[2] = a4;
  result[3] = a5;
  result[4] = a6;
  result[5] = a7;
  result[6] = a8;
  *a9 = v16;
  a9[1] = v17;
  a9[2] = v18;
  a9[3] = nullsub_1;
  a9[4] = result;
  a9[5] = a2;
  a9[6] = a3;
  return result;
}

BOOL sub_20E454C3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  type metadata accessor for FlowAuthority(255, a4, a6, a7);
  v10 = sub_20E4A4778();
  MEMORY[0x212BBBCE0](&v15, v10);
  v11 = sub_20E49DB50();
  swift_release();
  v12 = type metadata accessor for FlowStackTabsAuthority.Tab(0, a4, a6, a7);
  v13 = MEMORY[0x212BBD348](v11, v12);
  swift_bridgeObjectRelease();
  return v13 == 1;
}

BOOL sub_20E454CF4()
{
  uint64_t *v0;

  return sub_20E454C3C(v0[7], v0[8], v0[9], v0[2], v0[3], v0[4], v0[5]);
}

unint64_t sub_20E454D08()
{
  return 0xD00000000000005DLL;
}

uint64_t sub_20E454D24()
{
  return swift_deallocObject();
}

uint64_t sub_20E454D34(uint64_t *a1)
{
  uint64_t v1;

  type metadata accessor for FlowAuthority(255, a1[2], a1[5], a1[6]);
  v1 = sub_20E4A4778();
  return MEMORY[0x212BBBCE0](v1);
}

uint64_t FlowView.customPresentation<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  void (*v13)(void);
  uint64_t v14;
  _QWORD v16[2];
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;

  v7 = *(_QWORD *)(a4 - 8);
  MEMORY[0x24BDAC7A8]();
  v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v4 + 40);
  v11 = *(_QWORD *)(v4 + 48);
  v16[1] = *(_QWORD *)v4;
  v12 = *(_OWORD *)(v4 + 24);
  v17 = *(_OWORD *)(v4 + 8);
  v18 = v12;
  v19 = v10;
  v20 = v11;
  v13();
  v14 = MEMORY[0x212BBDF90](&protocol conformance descriptor for FlowView<A, B, C>, a3);
  MEMORY[0x212BBBA70](v9, a3, a4, v14);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, a4);
}

void FlowView.body.getter()
{
  type metadata accessor for FlowStack();
}

void sub_20E454ED4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v6 - 256) = a1;
  v8 = *(_QWORD *)(v4 + 56);
  v9 = MEMORY[0x212BBDF90](&unk_20E4AEF28, a1);
  *(_QWORD *)(v6 - 296) = v9;
  *(_QWORD *)(v6 - 144) = v2;
  *(_QWORD *)(v6 - 136) = v5;
  *(_QWORD *)(v6 - 288) = v2;
  *(_QWORD *)(v6 - 128) = a1;
  *(_QWORD *)(v6 - 120) = v1;
  *(_QWORD *)(v6 - 264) = v1;
  *(_QWORD *)(v6 - 112) = v3;
  *(_QWORD *)(v6 - 104) = v8;
  *(_QWORD *)(v6 - 96) = v9;
  type metadata accessor for FlowStackTabView();
}

void sub_20E454F24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  __int128 *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t FunctionTypeMetadata1;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;

  v15 = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v14 - 328) = a1;
  *(_QWORD *)(v14 - 240) = v15;
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v14 - 312) = (char *)&a9 - v16;
  swift_getAssociatedTypeWitness();
  FunctionTypeMetadata1 = swift_getFunctionTypeMetadata1();
  type metadata accessor for DataObjectBox(255, FunctionTypeMetadata1, v18, v19);
  sub_20E4A60E0();
  *(_QWORD *)(v14 - 304) = sub_20E4A3FF8();
  v20 = sub_20E4A39D4();
  *(_QWORD *)(v14 - 280) = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  *(_QWORD *)(v14 - 336) = (char *)&a9 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  *(_QWORD *)(v14 - 320) = (char *)&a9 - v23;
  v24 = v9[1];
  *(_OWORD *)(v14 - 144) = *v9;
  *(_OWORD *)(v14 - 128) = v24;
  v26 = *v9;
  v25 = v9[1];
  *(_OWORD *)(v14 - 112) = v9[2];
  *(_QWORD *)(v14 - 96) = *((_QWORD *)v9 + 6);
  *(_OWORD *)(v14 - 208) = v26;
  *(_OWORD *)(v14 - 192) = v25;
  *(_OWORD *)(v14 - 176) = v9[2];
  *(_QWORD *)(v14 - 160) = *((_QWORD *)v9 + 6);
  sub_20E454D34(v11);
  v27 = swift_allocObject();
  *(_QWORD *)(v27 + 16) = v13;
  *(_QWORD *)(v27 + 24) = v12;
  v28 = *(_QWORD *)(v14 - 272);
  *(_QWORD *)(v27 + 32) = v10;
  *(_QWORD *)(v27 + 40) = v28;
  v29 = *(_OWORD *)(v14 - 128);
  *(_OWORD *)(v27 + 48) = *(_OWORD *)(v14 - 144);
  *(_OWORD *)(v27 + 64) = v29;
  *(_OWORD *)(v27 + 80) = *(_OWORD *)(v14 - 112);
  *(_QWORD *)(v27 + 96) = *(_QWORD *)(v14 - 96);
  sub_20E455404(v14 - 144);
  swift_retain();
  sub_20E421850();
}

uint64_t sub_20E455118()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t (*v13)(_QWORD *, uint64_t);

  v6 = *(_QWORD *)(v4 - 104);
  v5 = *(_QWORD *)(v4 - 96);
  v7 = *(_QWORD *)(v4 - 328);
  v8 = MEMORY[0x212BBDF90](&unk_20E4AC588, v7);
  v9 = *(_QWORD **)(v4 - 336);
  sub_20E41B39C(*(_QWORD *)(v4 - 288), v6, v5, v7, *(_QWORD *)(v4 - 288), v2, v8, *(_QWORD *)(v4 - 264), *(_QWORD *)(v4 - 248), v3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 240) + 8))(v1, v7);
  v10 = MEMORY[0x212BBDF90](MEMORY[0x24BDF1028], *(_QWORD *)(v4 - 304));
  *(_QWORD *)(v4 - 224) = v8;
  *(_QWORD *)(v4 - 216) = v10;
  v11 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v0, v4 - 224);
  v12 = *(_QWORD **)(v4 - 320);
  sub_20E39D614(v12, v9, v0, v11);
  v13 = *(uint64_t (**)(_QWORD *, uint64_t))(*(_QWORD *)(v4 - 280) + 8);
  v13(v9, v0);
  sub_20E39D618((uint64_t)v12, v0, *(_QWORD *)(v4 - 232));
  return v13(v12, v0);
}

void sub_20E455240(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  _OWORD v13[4];

  v11 = *(_QWORD *)(a3 + 40);
  v12 = *(_QWORD *)(a3 + 48);
  swift_retain();
  swift_retain();
  sub_20E45BCA4(a2, a1, v11, v12, a5, a7, v13);
  v13[3] = v13[0];
  type metadata accessor for FlowStack();
}

uint64_t sub_20E4552F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;

  v4 = MEMORY[0x212BBDF90](&unk_20E4AEF28, a1);
  sub_20E39D614(&v6, &v10, a1, v4);
  sub_20E41CCF4(v2 - 96);
  swift_release();
  swift_release();
  v10 = v6;
  v11 = v7;
  v12 = v8;
  v13 = v9;
  sub_20E39D618((uint64_t)&v10, a1, v1);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_20E4553B0()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_20E4553F4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_20E455240(a1, a2, (uint64_t)(v2 + 6), v2[2], v2[3], v2[4], v2[5]);
}

uint64_t sub_20E455404(uint64_t a1)
{
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t static FlowOcclusion.none.getter()
{
  return 0;
}

uint64_t static FlowOcclusion.sheet.getter()
{
  return 1;
}

uint64_t FlowOcclusion.debugDescription.getter(char a1)
{
  _QWORD *v1;
  unint64_t v2;
  unint64_t v3;
  _QWORD *v4;

  if ((a1 & 1) != 0)
  {
    v1 = sub_20E3AD8FC(0, 1, 1, MEMORY[0x24BEE4AF8]);
    v3 = v1[2];
    v2 = v1[3];
    if (v3 >= v2 >> 1)
      v1 = sub_20E3AD8FC((_QWORD *)(v2 > 1), v3 + 1, 1, v1);
    v1[2] = v3 + 1;
    v4 = &v1[2 * v3];
    v4[4] = 0x74656568732ELL;
    v4[5] = 0xE600000000000000;
  }
  sub_20E4A61A0();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1B620);
  sub_20E4555D8();
  sub_20E4A5BDC();
  swift_bridgeObjectRelease();
  sub_20E4A5C6C();
  swift_bridgeObjectRelease();
  sub_20E4A5C6C();
  return 0x6C63634F776F6C46;
}

uint64_t sub_20E4555D0()
{
  _QWORD *v0;

  return FlowOcclusion.debugDescription.getter(*v0);
}

unint64_t sub_20E4555D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254A1B628;
  if (!qword_254A1B628)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1B620);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BEE12B0], v1);
    atomic_store(result, (unint64_t *)&qword_254A1B628);
  }
  return result;
}

uint64_t sub_20E455624@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = sub_20E455D40(a1);
  result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t sub_20E455660()
{
  sub_20E4558D8();
  return sub_20E4A389C();
}

uint64_t EnvironmentValues.flowOcclusion.getter()
{
  uint64_t v1;

  sub_20E4557BC();
  sub_20E4A3C08();
  return v1;
}

uint64_t sub_20E4556E8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_20E4557BC();
  result = sub_20E4A3C08();
  *a1 = v3;
  return result;
}

uint64_t sub_20E455734()
{
  sub_20E4557BC();
  return sub_20E4A3C14();
}

BOOL EnvironmentValues.isAtFlowTabRoot.getter()
{
  char v1;

  sub_20E453938();
  sub_20E4A3C08();
  return v1 == 3;
}

unint64_t sub_20E4557BC()
{
  unint64_t result;

  result = qword_254A1B630;
  if (!qword_254A1B630)
  {
    result = MEMORY[0x212BBDF90](&unk_20E4AE894, &type metadata for FlowOcclusionKey);
    atomic_store(result, (unint64_t *)&qword_254A1B630);
  }
  return result;
}

uint64_t sub_20E455800()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_20E455848()
{
  unint64_t result;

  result = qword_254A1B638;
  if (!qword_254A1B638)
  {
    result = MEMORY[0x212BBDF90](&protocol conformance descriptor for FlowOcclusion, &type metadata for FlowOcclusion);
    atomic_store(result, (unint64_t *)&qword_254A1B638);
  }
  return result;
}

unint64_t sub_20E455890()
{
  unint64_t result;

  result = qword_254A1B640;
  if (!qword_254A1B640)
  {
    result = MEMORY[0x212BBDF90](&protocol conformance descriptor for FlowOcclusion, &type metadata for FlowOcclusion);
    atomic_store(result, (unint64_t *)&qword_254A1B640);
  }
  return result;
}

unint64_t sub_20E4558D8()
{
  unint64_t result;

  result = qword_254A1B648;
  if (!qword_254A1B648)
  {
    result = MEMORY[0x212BBDF90](&protocol conformance descriptor for FlowOcclusion, &type metadata for FlowOcclusion);
    atomic_store(result, (unint64_t *)&qword_254A1B648);
  }
  return result;
}

unint64_t sub_20E455920()
{
  unint64_t result;

  result = qword_254A1B650[0];
  if (!qword_254A1B650[0])
  {
    result = MEMORY[0x212BBDF90](&protocol conformance descriptor for FlowOcclusion, &type metadata for FlowOcclusion);
    atomic_store(result, qword_254A1B650);
  }
  return result;
}

uint64_t sub_20E455964@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_20E4557BC();
  result = sub_20E4A3C08();
  *a1 = v3;
  return result;
}

uint64_t sub_20E4559B0()
{
  sub_20E4557BC();
  return sub_20E4A3C14();
}

uint64_t sub_20E4559F8()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_20E455A38(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 48);
  v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 48) = v4;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *sub_20E455AB0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  v4 = a2[4];
  a1[3] = a2[3];
  a1[4] = v4;
  swift_retain();
  swift_release();
  v5 = a2[6];
  a1[5] = a2[5];
  a1[6] = v5;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_20E455B54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  v4 = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = v4;
  swift_release();
  return a1;
}

void type metadata accessor for FlowView()
{
  JUMPOUT(0x212BBDEE8);
}

ValueMetadata *type metadata accessor for FlowOcclusion()
{
  return &type metadata for FlowOcclusion;
}

void sub_20E455BDC()
{
  type metadata accessor for FlowStack();
}

void sub_20E455C2C(uint64_t a1)
{
  MEMORY[0x212BBDF90](&unk_20E4AEF28, a1);
  type metadata accessor for FlowStackTabView();
}

uint64_t sub_20E455C64(uint64_t a1)
{
  uint64_t FunctionTypeMetadata1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[16];

  swift_getAssociatedTypeWitness();
  FunctionTypeMetadata1 = swift_getFunctionTypeMetadata1();
  type metadata accessor for DataObjectBox(255, FunctionTypeMetadata1, v3, v4);
  sub_20E4A60E0();
  v5 = sub_20E4A3FF8();
  v6 = sub_20E4A39D4();
  v8[0] = MEMORY[0x212BBDF90](&unk_20E4AC588, a1);
  v8[1] = MEMORY[0x212BBDF90](MEMORY[0x24BDF1028], v5);
  return MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v6, v8);
}

ValueMetadata *type metadata accessor for FlowOcclusionKey()
{
  return &type metadata for FlowOcclusionKey;
}

uint64_t sub_20E455D40(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  result = 0;
  v4 = (uint64_t *)(a1 + 32);
  do
  {
    v6 = *v4++;
    v5 = v6;
    if ((v6 & ~result) == 0)
      v5 = 0;
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t NSBundle.displayName.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  _BYTE v21[24];
  uint64_t v22;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A0C8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v18 - v6;
  v8 = (void *)sub_20E4A5C18();
  v9 = objc_msgSend(v1, sel_objectForInfoDictionaryKey_, v8);

  if (v9)
  {
    sub_20E4A6110();
    swift_unknownObjectRelease();
  }
  else
  {
    v19 = 0u;
    v20 = 0u;
  }
  sub_20E3BB440((uint64_t)&v19, (uint64_t)v21, &qword_253ED2A38);
  if (v22)
  {
    if ((swift_dynamicCast() & 1) != 0)
      return v18;
  }
  else
  {
    sub_20E39D1F8((uint64_t)v21, &qword_253ED2A38);
  }
  v10 = (void *)sub_20E4A5C18();
  v11 = objc_msgSend(v1, sel_objectForInfoDictionaryKey_, v10);

  if (v11)
  {
    sub_20E4A6110();
    swift_unknownObjectRelease();
  }
  else
  {
    v19 = 0u;
    v20 = 0u;
  }
  sub_20E3BB440((uint64_t)&v19, (uint64_t)v21, &qword_253ED2A38);
  if (v22)
  {
    if ((swift_dynamicCast() & 1) != 0)
      return v18;
  }
  else
  {
    sub_20E39D1F8((uint64_t)v21, &qword_253ED2A38);
  }
  v13 = objc_msgSend(v1, sel_executableURL);
  if (v13)
  {
    v14 = v13;
    sub_20E4A3320();

    v15 = sub_20E4A3344();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v4, 0, 1, v15);
  }
  else
  {
    v15 = sub_20E4A3344();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v4, 1, 1, v15);
  }
  sub_20E3BB440((uint64_t)v4, (uint64_t)v7, &qword_254A1A0C8);
  sub_20E4A3344();
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v7, 1, v15) == 1)
  {
    sub_20E39D1F8((uint64_t)v7, &qword_254A1A0C8);
    return 0;
  }
  else
  {
    v12 = sub_20E4A3308();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v15);
  }
  return v12;
}

id static NSBundle.jetResources.getter()
{
  if (qword_253ED2A20 != -1)
    swift_once();
  return (id)qword_253ED2A18;
}

void ShelfGridItemWidth.resolve(using:)()
{
  uint64_t v1;
  uint64_t v2;

  v1 = sub_20E4A3740();
  MEMORY[0x24BDAC7A8](v1);
  MEMORY[0x24BDAC7A8](v2);
  __asm { BR              X10 }
}

double sub_20E4561A4()
{
  double v0;

  return v0;
}

uint64_t sub_20E45641C()
{
  uint64_t v0;

  return ((uint64_t (*)(void))((char *)&loc_20E456434 + dword_20E45658C[*(unsigned __int8 *)(v0 + 24) >> 6]))();
}

uint64_t ShelfGridLayout.frozen.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t result;

  v4 = *(_QWORD *)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(unsigned __int8 *)(v1 + 24);
  if ((v6 >> 6) - 2 >= 2)
  {
    if (v6 >> 6)
    {
      v3 = 0;
      v5 = 0;
      LOBYTE(v6) = -64;
    }
    else
    {
      result = sub_20E4337E4(*(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24));
      LOBYTE(v6) = v6 | 0x80;
    }
  }
  else
  {
    result = sub_20E4337BC(*(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24));
  }
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return result;
}

uint64_t sub_20E456634()
{
  uint64_t v0;
  uint64_t v2;

  if (*(_BYTE *)(v0 + 24) != 1)
    return sub_20E4A6314();
  v2 = sub_20E4A6314();
  sub_20E4A5C6C();
  return v2;
}

uint64_t sub_20E4566BC()
{
  return swift_deallocClassInstance();
}

uint64_t sub_20E4566CC()
{
  return sub_20E456634();
}

double ShelfGridItemWidth.Context.containerSize.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

void ShelfGridItemWidth.Context.padding.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;

  v2 = *(_BYTE *)(v1 + 32);
  v3 = *(_QWORD *)(v1 + 40);
  v4 = *(_BYTE *)(v1 + 48);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 24);
  *(_BYTE *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
}

void ShelfGridItemWidth.Context.spacing.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;

  v2 = *(_BYTE *)(v1 + 64);
  v3 = *(_QWORD *)(v1 + 72);
  v4 = *(_BYTE *)(v1 + 80);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 56);
  *(_BYTE *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
}

uint64_t ShelfGridItemWidth.Context.offset.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  *(_BYTE *)(v1 + 24) = 1;
  return *(_QWORD *)(v1 + 16);
}

uint64_t static ShelfGridItemWidth.custom(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  *(_QWORD *)a3 = sub_20E4567D0;
  *(_QWORD *)(a3 + 8) = v6;
  *(_BYTE *)(a3 + 16) = 3;
  return swift_retain();
}

uint64_t sub_20E4567AC()
{
  swift_release();
  return swift_deallocObject();
}

void sub_20E4567D0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(double *)a2 = (*(double (**)(double, double))(v2 + 16))(*(double *)(a1 + 8), *(double *)(a1 + 16));
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 0;
}

uint64_t destroy for ShelfGridLayout(uint64_t a1)
{
  return sub_20E4338EC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t initializeWithCopy for ShelfGridLayout(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_20E4337BC(*(_QWORD *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for ShelfGridLayout(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_20E4337BC(*(_QWORD *)a2, v4, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v10 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v6;
  sub_20E4338EC(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for ShelfGridLayout(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  v8 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v4;
  sub_20E4338EC(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for ShelfGridLayout(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x3D && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 61);
  v3 = (*(_BYTE *)(a1 + 24) & 0x3C | (*(unsigned __int8 *)(a1 + 24) >> 6)) ^ 0x3F;
  if (v3 >= 0x3C)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for ShelfGridLayout(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3C)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 61;
    if (a3 >= 0x3D)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0x3D)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = 0;
      *(_BYTE *)(result + 24) = 4 * (((-a2 >> 2) & 0xF) - 16 * a2);
    }
  }
  return result;
}

uint64_t sub_20E4569D8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24) >> 6;
}

uint64_t sub_20E4569E4(uint64_t result)
{
  *(_BYTE *)(result + 24) &= 0x3Fu;
  return result;
}

uint64_t sub_20E4569F4(uint64_t result, char a2)
{
  *(_BYTE *)(result + 24) = *(_BYTE *)(result + 24) & 3 | (a2 << 6);
  return result;
}

ValueMetadata *type metadata accessor for ShelfGridLayout()
{
  return &type metadata for ShelfGridLayout;
}

uint64_t destroy for ShelfGridItemWidth(uint64_t a1)
{
  return sub_20E433914(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s18_JetEngine_SwiftUI18ShelfGridItemWidthOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_20E4337E4(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for ShelfGridItemWidth(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_20E4337E4(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_20E433914(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for ShelfGridItemWidth(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_20E433914(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ShelfGridItemWidth(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ShelfGridItemWidth(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 253;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_20E456B98(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ShelfGridItemWidth()
{
  return &type metadata for ShelfGridItemWidth;
}

uint64_t initializeWithCopy for ShelfGridItemWidth.Context(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 33) = *(_OWORD *)(a2 + 33);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 65) = *(_OWORD *)(a2 + 65);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ShelfGridItemWidth.Context(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v6;
  v7 = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v7;
  return a1;
}

uint64_t assignWithTake for ShelfGridItemWidth.Context(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  return a1;
}

ValueMetadata *type metadata accessor for ShelfGridItemWidth.Context()
{
  return &type metadata for ShelfGridItemWidth.Context;
}

uint64_t type metadata accessor for ShelfGridItemWidth.Context._OffsetStorage()
{
  return objc_opt_self();
}

uint64_t sub_20E456D48@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_20E39D050();
  result = sub_20E4A3C08();
  *a1 = v3;
  return result;
}

uint64_t sub_20E456D94@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_20E4A3B54();
  *a1 = result;
  return result;
}

uint64_t sub_20E456DBC(id *a1)
{
  id v1;

  v1 = *a1;
  return sub_20E4A3B60();
}

uint64_t LoadingView.init<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  char v15;
  uint64_t v16;

  sub_20E4A4640();
  KeyPath = swift_getKeyPath();
  v7 = swift_getKeyPath();
  v8 = swift_getKeyPath();
  v9 = *(_QWORD *)(a2 - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a2;
  *(_QWORD *)(v11 + 24) = a3;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v9 + 32))(v11 + v10, a1, a2);
  *(_QWORD *)a4 = sub_20E4572C8;
  *(_QWORD *)(a4 + 8) = v11;
  *(_BYTE *)(a4 + 16) = 1;
  *(_BYTE *)(a4 + 24) = v15;
  *(_QWORD *)(a4 + 32) = v16;
  *(_QWORD *)(a4 + 40) = KeyPath;
  *(_BYTE *)(a4 + 48) = 0;
  *(_QWORD *)(a4 + 56) = v7;
  *(_BYTE *)(a4 + 64) = 0;
  *(_QWORD *)(a4 + 72) = v8;
  *(_BYTE *)(a4 + 80) = 0;
  return result;
}

uint64_t sub_20E456EF8(uint64_t a1)
{
  double v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v1 = MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *, double))(v3 + 16))((char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v1);
  return sub_20E4A41C0();
}

uint64_t LoadingView.init<>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  char v14;
  uint64_t v15;

  sub_20E4A4640();
  KeyPath = swift_getKeyPath();
  v11 = swift_getKeyPath();
  v12 = swift_getKeyPath();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  *(_BYTE *)(result + 32) = a3;
  *(_QWORD *)(result + 40) = a4;
  *(_QWORD *)a5 = sub_20E405344;
  *(_QWORD *)(a5 + 8) = result;
  *(_BYTE *)(a5 + 16) = 1;
  *(_BYTE *)(a5 + 24) = v14;
  *(_QWORD *)(a5 + 32) = v15;
  *(_QWORD *)(a5 + 40) = KeyPath;
  *(_BYTE *)(a5 + 48) = 0;
  *(_QWORD *)(a5 + 56) = v11;
  *(_BYTE *)(a5 + 64) = 0;
  *(_QWORD *)(a5 + 72) = v12;
  *(_BYTE *)(a5 + 80) = 0;
  return result;
}

uint64_t sub_20E457070()
{
  sub_20E39D094();
  return sub_20E4A3C08();
}

uint64_t sub_20E4570A4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_20E39D094();
  result = sub_20E4A3C08();
  *a1 = v3;
  return result;
}

uint64_t sub_20E4570F0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_20E39D094();
  result = sub_20E4A3C08();
  *a1 = v3;
  return result;
}

uint64_t sub_20E45713C()
{
  sub_20E39D094();
  return sub_20E4A3C14();
}

uint64_t sub_20E457184()
{
  sub_20E39D094();
  return sub_20E4A3C14();
}

uint64_t sub_20E4571CC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_20E39D050();
  result = sub_20E4A3C08();
  *a1 = v3;
  return result;
}

uint64_t sub_20E45721C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_20E4A3B54();
  *a1 = result;
  return result;
}

uint64_t sub_20E457244(id *a1)
{
  id v1;

  v1 = *a1;
  return sub_20E4A3B60();
}

uint64_t sub_20E457270()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_20E4572C8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80);
  return sub_20E456EF8(v0 + ((v1 + 32) & ~v1));
}

uint64_t sub_20E4572E4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_20E457310()
{
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_20E457334()
{
  return 0xD00000000000003CLL;
}

uint64_t sub_20E457350@<X0>(uint64_t a1@<X1>, int a2@<W2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  void (*v60)(char *, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  int v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD v89[2];
  _QWORD v90[3];
  _QWORD v91[3];
  _QWORD v92[2];
  _BYTE v93[304];
  _QWORD v94[2];
  _QWORD v95[2];
  _BYTE v96[280];
  _OWORD v97[19];
  _BYTE v98[264];
  _BYTE v99[264];
  _BYTE v100[273];
  _OWORD v101[19];
  _OWORD v102[9];
  char v103;
  _BYTE v104[272];

  v85 = a2;
  v83 = a5;
  v8 = sub_20E4A5E58();
  v81 = *(_QWORD *)(v8 - 8);
  v82 = v8;
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  v80 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_20E4A52B8();
  v69 = *(_QWORD *)(v10 - 8);
  v70 = v10;
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  v66 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253ED2A40);
  v13 = MEMORY[0x24BDF4638];
  *(_QWORD *)&v101[0] = v12;
  *((_QWORD *)&v101[0] + 1) = MEMORY[0x24BDF4638];
  type metadata accessor for _CompatibilityLoadingViewContent(255, a3, a4, v14);
  sub_20E4A3E00();
  *(_QWORD *)&v101[1] = sub_20E4A39D4();
  *((_QWORD *)&v101[1] + 1) = v13;
  swift_getTupleTypeMetadata();
  v15 = sub_20E4A491C();
  MEMORY[0x212BBDF90](MEMORY[0x24BDF5428], v15);
  v16 = sub_20E4A470C();
  v62 = sub_20E4A39D4();
  v17 = sub_20E4A39D4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253ED29F8);
  v63 = v17;
  v18 = sub_20E4A39D4();
  sub_20E4A4004();
  v64 = v18;
  v65 = *(_QWORD *)(sub_20E4A39D4() - 8);
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  v84 = (char *)&v62 - v19;
  v68 = v20;
  v21 = sub_20E4A39D4();
  v72 = *(_QWORD *)(v21 - 8);
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  v71 = (char *)&v62 - v22;
  sub_20E4A3854();
  v74 = v21;
  v23 = sub_20E4A39D4();
  v76 = *(_QWORD *)(v23 - 8);
  v77 = v23;
  v24 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v73 = (char *)&v62 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v75 = (uint64_t *)((char *)&v62 - v26);
  sub_20E4A3CC8();
  v78 = a3;
  v79 = a4;
  v86 = a3;
  v87 = a4;
  v67 = a1;
  v88 = a1;
  sub_20E4A4700();
  v102[6] = v101[6];
  v102[7] = v101[7];
  v102[8] = v101[8];
  v102[2] = v101[2];
  v102[3] = v101[3];
  v102[4] = v101[4];
  v102[5] = v101[5];
  v102[0] = v101[0];
  v102[1] = v101[1];
  v97[5] = v101[5];
  v97[6] = v101[6];
  v97[7] = v101[7];
  v97[8] = v101[8];
  v97[2] = v101[2];
  v97[3] = v101[3];
  v97[4] = v101[4];
  v103 = v101[9];
  LOBYTE(v97[9]) = v101[9];
  v97[0] = v101[0];
  v97[1] = v101[1];
  sub_20E4A37F4();
  sub_20E4A37F4();
  sub_20E4A48A4();
  v27 = MEMORY[0x212BBDF90](MEMORY[0x24BDF4700], v16);
  sub_20E4A443C();
  sub_20E459FF4((uint64_t)v102);
  memcpy(v104, v99, 0x108uLL);
  memcpy(v98, v99, sizeof(v98));
  sub_20E4A3A04();
  v28 = sub_20E4A4094();
  sub_20E4A40B8();
  sub_20E4A40B8();
  if (sub_20E4A40B8() != v28)
    sub_20E4A40B8();
  v95[0] = v27;
  v95[1] = MEMORY[0x24BDEDBB8];
  v29 = MEMORY[0x24BDED308];
  v30 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v62, v95);
  sub_20E4A42BC();
  sub_20E459FF4((uint64_t)v104);
  memcpy(v96, v100, 0x111uLL);
  memcpy(v97, v100, 0x111uLL);
  v93[0] = v85 == 2;
  sub_20E4A48A4();
  v94[0] = v30;
  v94[1] = MEMORY[0x24BDF1050];
  v31 = MEMORY[0x212BBDF90](v29, v63, v94);
  sub_20E39D234();
  sub_20E4A41F0();
  sub_20E459FF4((uint64_t)v96);
  memcpy(v93, v101, sizeof(v93));
  memset(v97, 0, 32);
  v32 = v66;
  sub_20E4A5294();
  sub_20E39D1F8((uint64_t)v97, &qword_253ED2A38);
  v33 = sub_20E39D010(&qword_253ED29F0, &qword_253ED29F8, MEMORY[0x24BDEF370]);
  v92[0] = v31;
  v92[1] = v33;
  v34 = MEMORY[0x212BBDF90](v29, v64, v92);
  View.automationSemantics(_:)();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v32, v70);
  memcpy(v97, v93, sizeof(v97));
  sub_20E459FF4((uint64_t)v97);
  sub_20E4A3CA4();
  if (qword_253ED2A20 != -1)
    swift_once();
  v35 = (id)qword_253ED2A18;
  v36 = sub_20E4A41B4();
  v38 = v37;
  v40 = v39 & 1;
  v41 = sub_20E39F334(qword_253ED27F8, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
  v91[0] = v34;
  v91[1] = v41;
  v42 = v68;
  v43 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v68, v91);
  v44 = v71;
  v45 = v84;
  sub_20E4A4304();
  sub_20E39D0D8(v36, v38, v40);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v65 + 8))(v45, v42);
  v46 = swift_allocObject();
  v47 = v79;
  *(_QWORD *)(v46 + 16) = v78;
  *(_QWORD *)(v46 + 24) = v47;
  v48 = v67;
  v49 = *(_OWORD *)(v67 + 48);
  *(_OWORD *)(v46 + 64) = *(_OWORD *)(v67 + 32);
  *(_OWORD *)(v46 + 80) = v49;
  *(_OWORD *)(v46 + 96) = *(_OWORD *)(v48 + 64);
  *(_BYTE *)(v46 + 112) = *(_BYTE *)(v48 + 80);
  v50 = *(_OWORD *)(v48 + 16);
  *(_OWORD *)(v46 + 32) = *(_OWORD *)v48;
  *(_OWORD *)(v46 + 48) = v50;
  *(_BYTE *)(v46 + 113) = v85;
  sub_20E39D630(v48);
  v90[0] = v43;
  v90[1] = v41;
  v51 = MEMORY[0x24BDED308];
  v52 = v74;
  v53 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v74, v90);
  v54 = v80;
  sub_20E39D0E8();
  v55 = v73;
  sub_20E4A440C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v81 + 8))(v54, v82);
  (*(void (**)(char *, uint64_t))(v72 + 8))(v44, v52);
  v56 = sub_20E39F334(qword_253ED2910, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC4E0], MEMORY[0x24BDEC4C8]);
  v89[0] = v53;
  v89[1] = v56;
  v57 = v77;
  v58 = MEMORY[0x212BBDF90](v51, v77, v89);
  v59 = v75;
  sub_20E39D614(v75, v55, v57, v58);
  v60 = *(void (**)(char *, uint64_t))(v76 + 8);
  v60(v55, v57);
  sub_20E39D618((uint64_t)v59, v57, v83);
  return ((uint64_t (*)(_QWORD *, uint64_t))v60)(v59, v57);
}

uint64_t sub_20E457C4C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_20E457350(v1 + 32, *(unsigned __int8 *)(v1 + 113), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_20E457C5C(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  char v22;
  _QWORD v23[4];
  uint64_t v24;
  char v25;
  __int128 v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  _QWORD v31[2];
  __int128 v32;
  __int128 *v33;
  uint64_t *v34;
  _QWORD v35[2];
  __int128 v36;
  char v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  char v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;

  v7 = a1[3];
  v41 = a1[2];
  v42 = v7;
  v43 = a1[4];
  v44 = *((_BYTE *)a1 + 80);
  v8 = a1[1];
  v39 = *a1;
  v40 = v8;
  type metadata accessor for LoadingView(0, a2, a3, a4);
  sub_20E39C700();
  sub_20E4A48A4();
  sub_20E4A37C4();
  v9 = v45;
  v10 = v46;
  v11 = v47;
  v22 = v48;
  v20 = v50;
  v21 = v49;
  sub_20E39C9A4(*(_QWORD *)a1, *((_QWORD *)a1 + 1), *((_BYTE *)a1 + 16), a2, a3, (uint64_t)&v36);
  v32 = v36;
  LOBYTE(v33) = v37;
  v12 = *((_QWORD *)a1 + 4);
  LOBYTE(v39) = *((_BYTE *)a1 + 24) & 1;
  *((_QWORD *)&v39 + 1) = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED2A08);
  sub_20E4A464C();
  v14 = type metadata accessor for _CompatibilityLoadingViewContent(255, a2, a3, v13);
  v15 = sub_20E4A3E00();
  v35[0] = MEMORY[0x212BBDF90](&unk_20E4AEC30, v14);
  v35[1] = sub_20E39CB9C();
  v16 = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v15, v35);
  sub_20E4A4460();
  sub_20E39CED0();
  v32 = v39;
  LOBYTE(v33) = v40;
  v34 = (uint64_t *)*((_QWORD *)&v40 + 1);
  v17 = sub_20E4A39D4();
  v31[0] = v16;
  v31[1] = MEMORY[0x24BDECC38];
  v18 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v17, v31);
  sub_20E39D614(&v36, &v32, v17, v18);
  sub_20E39CED0();
  *(_QWORD *)&v39 = 0;
  BYTE8(v39) = 1;
  *(_QWORD *)&v40 = v9;
  BYTE8(v40) = v10;
  *(_QWORD *)&v41 = v11;
  BYTE8(v41) = v22;
  *(_QWORD *)&v42 = v21;
  *((_QWORD *)&v42 + 1) = v20;
  v29 = 0;
  v30 = 1;
  *(_QWORD *)&v32 = &v39;
  *((_QWORD *)&v32 + 1) = &v29;
  v26 = v36;
  v27 = v37;
  v28 = v38;
  v24 = 0;
  v25 = 1;
  v33 = &v26;
  v34 = &v24;
  sub_20E39CFB8();
  v23[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED2A40);
  v23[1] = MEMORY[0x24BDF4638];
  v23[2] = v17;
  v23[3] = MEMORY[0x24BDF4638];
  sub_20E45A0F4();
  sub_20E39C54C((uint64_t *)&v32, 4uLL, (uint64_t)v23);
  sub_20E39CED0();
  return sub_20E39CED0();
}

BOOL static LoadingViewPresentationContext.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_20E457F7C(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)(v4 + 112) = a3;
  *(_QWORD *)(v4 + 120) = a4;
  *(_BYTE *)(v4 + 329) = a2;
  *(_QWORD *)(v4 + 104) = a1;
  sub_20E4A4A90();
  *(_QWORD *)(v4 + 128) = swift_task_alloc();
  v5 = sub_20E4A5A8C();
  *(_QWORD *)(v4 + 136) = v5;
  *(_QWORD *)(v4 + 144) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v4 + 152) = swift_task_alloc();
  v6 = sub_20E4A4D00();
  *(_QWORD *)(v4 + 160) = v6;
  *(_QWORD *)(v4 + 168) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v4 + 176) = swift_task_alloc();
  v7 = sub_20E4A4F88();
  *(_QWORD *)(v4 + 184) = v7;
  *(_QWORD *)(v4 + 192) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 200) = swift_task_alloc();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED2A10);
  *(_QWORD *)(v4 + 208) = v8;
  *(_QWORD *)(v4 + 216) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v4 + 224) = swift_task_alloc();
  v9 = sub_20E4A5DC8();
  *(_QWORD *)(v4 + 232) = v9;
  *(_QWORD *)(v4 + 240) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v4 + 248) = swift_task_alloc();
  v10 = sub_20E4A6248();
  *(_QWORD *)(v4 + 256) = v10;
  *(_QWORD *)(v4 + 264) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v4 + 272) = swift_task_alloc();
  sub_20E4A5DF8();
  *(_QWORD *)(v4 + 280) = sub_20E4A5DEC();
  *(_QWORD *)(v4 + 288) = sub_20E4A5DBC();
  *(_QWORD *)(v4 + 296) = v11;
  return swift_task_switch();
}

uint64_t sub_20E458104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  char *v14;

  v5 = *(_QWORD *)(v4 + 104);
  v6 = *(_BYTE *)(v5 + 24);
  v7 = *(_QWORD *)(v5 + 32);
  v8 = type metadata accessor for LoadingView(0, *(_QWORD *)(v4 + 112), *(_QWORD *)(v4 + 120), a4);
  *(_BYTE *)(v4 + 72) = v6 & 1;
  *(_QWORD *)(v4 + 304) = v8;
  *(_QWORD *)(v4 + 80) = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED2A08);
  sub_20E4A464C();
  if ((*(_BYTE *)(v4 + 328) & 1) != 0)
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v4 + 8))();
  }
  else
  {
    if (*(unsigned __int8 *)(v4 + 329) >= 2u)
    {
      v11 = sub_20E4A6434();
      v10 = v12;
    }
    else
    {
      v10 = 0;
      v11 = 2000000000000000000;
    }
    sub_20E4A623C();
    v14 = (char *)&dword_254A1B710 + dword_254A1B710;
    v13 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v4 + 312) = v13;
    *v13 = v4;
    v13[1] = sub_20E458280;
    return ((uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t))v14)(v11, v10, 0, 0, 1);
  }
}

uint64_t sub_20E458280()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 320) = v0;
  swift_task_dealloc();
  (*(void (**)(_QWORD, _QWORD))(v2[33] + 8))(v2[34], v2[32]);
  return swift_task_switch();
}

uint64_t sub_20E4582F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;

  swift_release();
  v1 = *(_QWORD *)(v0 + 104);
  v12 = *(_OWORD *)(v0 + 112);
  sub_20E4A48BC();
  sub_20E4A371C();
  v2 = swift_task_alloc();
  *(_OWORD *)(v2 + 16) = v12;
  *(_QWORD *)(v2 + 32) = v1;
  sub_20E4A3A28();
  swift_release();
  swift_task_dealloc();
  if (sub_20E39BB00())
  {
    v3 = *(_QWORD *)(v0 + 224);
    v4 = *(_QWORD *)(v0 + 200);
    v11 = *(_QWORD *)(v0 + 216);
    v13 = *(_QWORD *)(v0 + 208);
    v6 = *(_QWORD *)(v0 + 184);
    v5 = *(_QWORD *)(v0 + 192);
    v8 = *(_QWORD *)(v0 + 168);
    v7 = *(_QWORD *)(v0 + 176);
    v10 = *(_QWORD *)(v0 + 160);
    sub_20E4A4F94();
    sub_20E4A5678();
    sub_20E4A4F7C();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    sub_20E4A4CF4();
    sub_20E4A4FA0();
    swift_bridgeObjectRelease();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v10);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v3, v13);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20E4584E8()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *boxed_opaque_existential_1Tm;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;

  v1 = *(void **)(v0 + 320);
  swift_release();
  *(_QWORD *)(v0 + 88) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(qword_253ED2880);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v4 = *(_QWORD *)(v0 + 240);
    v3 = *(_QWORD *)(v0 + 248);
    v5 = *(_QWORD *)(v0 + 232);

    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  }
  else
  {
    v6 = *(void **)(v0 + 320);
    v7 = *(_QWORD *)(v0 + 152);
    v23 = *(_QWORD *)(v0 + 144);
    v8 = *(_QWORD *)(v0 + 136);

    sub_20E4A5A44();
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0D58);
    sub_20E4A4ACC();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_20E4A72D0;
    sub_20E4A4A84();
    sub_20E4A4A78();
    swift_getErrorValue();
    v9 = *(_QWORD *)(v0 + 48);
    v10 = *(_QWORD *)(v0 + 56);
    *(_QWORD *)(v0 + 40) = v10;
    boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)(v0 + 16));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(boxed_opaque_existential_1Tm, v9, v10);
    sub_20E4A4A54();
    sub_20E39D1F8(v0 + 16, &qword_253ED2A38);
    sub_20E4A4A78();
    sub_20E4A4A9C();
    sub_20E4A5768();
    swift_bridgeObjectRelease();

    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v7, v8);
    v12 = *(_QWORD *)(v0 + 104);
    v24 = *(_OWORD *)(v0 + 112);
    sub_20E4A48BC();
    sub_20E4A371C();
    v13 = swift_task_alloc();
    *(_OWORD *)(v13 + 16) = v24;
    *(_QWORD *)(v13 + 32) = v12;
    sub_20E4A3A28();
    swift_release();
    swift_task_dealloc();
    if (sub_20E39BB00())
    {
      v14 = *(_QWORD *)(v0 + 224);
      v15 = *(_QWORD *)(v0 + 200);
      v22 = *(_QWORD *)(v0 + 216);
      v25 = *(_QWORD *)(v0 + 208);
      v17 = *(_QWORD *)(v0 + 184);
      v16 = *(_QWORD *)(v0 + 192);
      v19 = *(_QWORD *)(v0 + 168);
      v18 = *(_QWORD *)(v0 + 176);
      v21 = *(_QWORD *)(v0 + 160);
      sub_20E4A4F94();
      sub_20E4A5678();
      sub_20E4A4F7C();
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
      sub_20E4A4CF4();
      sub_20E4A4FA0();
      swift_bridgeObjectRelease();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v21);
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v14, v25);
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t LoadingViewPresentationContext.hash(into:)()
{
  return sub_20E4A641C();
}

uint64_t LoadingViewPresentationContext.hashValue.getter()
{
  sub_20E4A6410();
  sub_20E4A641C();
  return sub_20E4A6428();
}

uint64_t sub_20E458904()
{
  sub_20E45A214();
  return sub_20E4A389C();
}

uint64_t sub_20E458954@<X0>(void (*a1)(uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t KeyPath;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  void (*v55)(uint64_t, uint64_t);
  void (*v56)(uint64_t, char *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t);
  char *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(uint64_t);
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t OpaqueTypeConformance2;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  _QWORD v92[2];
  uint64_t v93[2];
  _QWORD v94[2];
  _QWORD v95[2];
  _QWORD v96[2];

  v76 = a4;
  v74 = a2;
  v75 = a1;
  v85 = a5;
  v78 = *(_QWORD *)(a3 - 8);
  v70 = a3;
  MEMORY[0x24BDAC7A8](a1);
  v71 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1A230);
  v6 = sub_20E4A39D4();
  v80 = *(_QWORD *)(v6 - 8);
  v73 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v69 = (char *)&v61 - v7;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A199F8);
  v8 = sub_20E4A39D4();
  v83 = *(_QWORD *)(v8 - 8);
  v79 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v72 = (char *)&v61 - v9;
  v82 = sub_20E4A39D4();
  v84 = *(_QWORD *)(v82 - 8);
  MEMORY[0x24BDAC7A8](v82);
  v77 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v81 = (char **)((char *)&v61 - v12);
  v86 = sub_20E4A3F68();
  v65 = *(_QWORD *)(v86 - 8);
  MEMORY[0x24BDAC7A8](v86);
  v64 = (char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_20E4A36A4();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0D80);
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v61 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1B6E0);
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v61 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1B6E8);
  v63 = *(_QWORD *)(v87 - 8);
  MEMORY[0x24BDAC7A8](v87);
  v61 = (char *)&v61 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  v62 = (char *)&v61 - v27;
  sub_20E4A374C();
  (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v17, *MEMORY[0x24BDEB488], v14);
  KeyPath = swift_getKeyPath();
  v29 = *(int *)(v22 + 36);
  v68 = v22;
  v30 = (uint64_t *)&v24[v29];
  v31 = __swift_instantiateConcreteTypeFromMangledName(qword_253ED0D98);
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))((char *)v30 + *(int *)(v31 + 28), v17, v14);
  *v30 = KeyPath;
  (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v24, v21, v18);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  v32 = v64;
  sub_20E4A3F5C();
  v67 = sub_20E459F44();
  v66 = sub_20E39F334(&qword_253ED0D88, (uint64_t (*)(uint64_t))MEMORY[0x24BDF07C8], MEMORY[0x24BDF07A8]);
  v33 = (uint64_t)v61;
  v34 = v86;
  sub_20E4A41E4();
  (*(void (**)(char *, uint64_t))(v65 + 8))(v32, v34);
  sub_20E39D1F8((uint64_t)v24, &qword_254A1B6E0);
  v35 = v63;
  v36 = v62;
  v37 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v63 + 32))(v62, v33, v87);
  v38 = v71;
  v75(v37);
  sub_20E4A40DC();
  v39 = v69;
  v40 = v70;
  v41 = v76;
  sub_20E4A43F4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v78 + 8))(v38, v40);
  LODWORD(OpaqueTypeConformance2) = sub_20E4A3ECC();
  v42 = sub_20E39D010(&qword_254A1A2D0, &qword_254A1A230, MEMORY[0x24BDF1028]);
  v96[0] = v41;
  v96[1] = v42;
  v43 = MEMORY[0x24BDED308];
  v44 = v73;
  v45 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v73, v96);
  v46 = v72;
  sub_20E4A42A4();
  (*(void (**)(char *, uint64_t))(v80 + 8))(v39, v44);
  sub_20E4A4094();
  v47 = sub_20E39D010(&qword_254A199F0, &qword_254A199F8, MEMORY[0x24BDF0710]);
  v95[0] = v45;
  v95[1] = v47;
  v48 = v79;
  v49 = MEMORY[0x212BBDF90](v43, v79, v95);
  v50 = (uint64_t)v77;
  sub_20E4A4478();
  (*(void (**)(char *, uint64_t))(v83 + 8))(v46, v48);
  v94[0] = v49;
  v94[1] = MEMORY[0x24BDECC60];
  v51 = v82;
  v52 = MEMORY[0x212BBDF90](v43, v82, v94);
  v53 = v81;
  sub_20E39D614(v81, v50, v51, v52);
  v54 = v84;
  v55 = *(void (**)(uint64_t, uint64_t))(v84 + 8);
  v55(v50, v51);
  v56 = *(void (**)(uint64_t, char *, uint64_t))(v35 + 16);
  v57 = v35;
  v58 = v87;
  v56(v33, v36, v87);
  v93[0] = v33;
  (*(void (**)(uint64_t, _QWORD *, uint64_t))(v54 + 16))(v50, v53, v51);
  v93[1] = v50;
  v92[0] = v58;
  v92[1] = v51;
  OpaqueTypeConformance2 = v68;
  v89 = v86;
  v90 = v67;
  v91 = v66;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v89 = v52;
  sub_20E39C54C(v93, 2uLL, (uint64_t)v92);
  v55((uint64_t)v53, v51);
  v59 = *(void (**)(char *, uint64_t))(v57 + 8);
  v59(v36, v58);
  v55(v50, v51);
  return ((uint64_t (*)(uint64_t, uint64_t))v59)(v33, v58);
}

uint64_t sub_20E45907C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_20E458954(*(void (**)(uint64_t))v2, *(_QWORD *)(v2 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a2);
}

void sub_20E45908C()
{
  id v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  v0 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    v2 = sub_20E4A5C3C();
    v4 = v3;

    if (v2 == 0xD000000000000017 && v4 == 0x800000020E4CCE00)
    {
      swift_bridgeObjectRelease();
      v5 = 1;
    }
    else
    {
      v5 = sub_20E4A635C();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    v5 = 0;
  }
  byte_254A1B6D8 = v5 & 1;
}

void sub_20E459178()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  char v11;
  objc_super v12;

  v12.receiver = v0;
  v12.super_class = (Class)type metadata accessor for _PlatformLoadingViewContent._JEContentUnavailableView();
  objc_msgSendSuper2(&v12, sel_layoutSubviews);
  v1 = objc_msgSend(v0, sel_superview);
  if (v1)
  {
    v2 = v1;
    do
    {
      v5 = v2;
      v6 = objc_msgSend(v5, sel_backgroundColor);

      v4 = v5;
      if (!v6)
        goto LABEL_6;
      v7 = objc_msgSend(v5, sel_backgroundColor);
      v8 = (void *)objc_opt_self();
      v9 = objc_msgSend(v8, sel_clearColor);
      v3 = v9;
      if (v7)
      {
        if (v9)
        {
          sub_20E4366D8(0, &qword_254A1B6F8);
          v10 = v7;
          v11 = sub_20E4A60B0();

          v4 = v5;
          if ((v11 & 1) != 0)
            goto LABEL_6;
          goto LABEL_5;
        }
        v3 = v7;
      }
      else
      {
        v4 = v5;
        if (!v9)
          goto LABEL_6;
      }

LABEL_5:
      v4 = objc_msgSend(v8, sel_clearColor);
      objc_msgSend(v5, sel_setBackgroundColor_, v4);

LABEL_6:
      v2 = objc_msgSend(v5, sel_superview);

    }
    while (v2);
  }
}

id sub_20E45936C(void *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  objc_super v7;

  v7.receiver = a1;
  v7.super_class = (Class)type metadata accessor for _PlatformLoadingViewContent._JEContentUnavailableView();
  return objc_msgSendSuper2(&v7, *a4, a3);
}

id sub_20E4593BC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for _PlatformLoadingViewContent._JEContentUnavailableView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_20E4593F0()
{
  sub_20E39B880();
  sub_20E4A3DC4();
  __break(1u);
}

uint64_t sub_20E459414@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t result;
  char v9;
  uint64_t v10;

  sub_20E4A4640();
  KeyPath = swift_getKeyPath();
  v7 = swift_getKeyPath();
  result = swift_getKeyPath();
  *(_QWORD *)a3 = a1;
  *(_QWORD *)(a3 + 8) = a2;
  *(_BYTE *)(a3 + 16) = 0;
  *(_BYTE *)(a3 + 24) = v9;
  *(_QWORD *)(a3 + 32) = v10;
  *(_QWORD *)(a3 + 40) = KeyPath;
  *(_BYTE *)(a3 + 48) = 0;
  *(_QWORD *)(a3 + 56) = v7;
  *(_BYTE *)(a3 + 64) = 0;
  *(_QWORD *)(a3 + 72) = result;
  *(_BYTE *)(a3 + 80) = 0;
  return result;
}

uint64_t LoadingView.init(what:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t result;
  char v9;
  uint64_t v10;

  sub_20E4A4640();
  KeyPath = swift_getKeyPath();
  v7 = swift_getKeyPath();
  result = swift_getKeyPath();
  *(_QWORD *)a3 = a1;
  *(_QWORD *)(a3 + 8) = a2;
  *(_BYTE *)(a3 + 16) = 0;
  *(_BYTE *)(a3 + 24) = v9;
  *(_QWORD *)(a3 + 32) = v10;
  *(_QWORD *)(a3 + 40) = KeyPath;
  *(_BYTE *)(a3 + 48) = 0;
  *(_QWORD *)(a3 + 56) = v7;
  *(_BYTE *)(a3 + 64) = 0;
  *(_QWORD *)(a3 + 72) = result;
  *(_BYTE *)(a3 + 80) = 0;
  return result;
}

uint64_t LoadingView.init<>(_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = v4;
  v6[3] = v3;
  v6[4] = v5;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_20E459414((uint64_t)sub_20E4596D0, (uint64_t)v6, a2);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_20E459600@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  type metadata accessor for _LocalizerOwner();
  sub_20E39F334((unint64_t *)&qword_254A1A338, (uint64_t (*)(uint64_t))type metadata accessor for _LocalizerOwner, (uint64_t)&unk_20E4AB4F0);
  swift_retain();
  swift_bridgeObjectRetain();
  v6 = sub_20E4A3B00();
  v8 = v7;
  result = swift_getKeyPath();
  *(_QWORD *)a2 = v6;
  *(_QWORD *)(a2 + 8) = v8;
  *(_QWORD *)(a2 + 16) = result;
  *(_BYTE *)(a2 + 24) = 0;
  *(_QWORD *)(a2 + 32) = v4;
  *(_QWORD *)(a2 + 40) = v3;
  *(_QWORD *)(a2 + 48) = v5;
  return result;
}

uint64_t sub_20E4596A4()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_20E4596D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_20E459600((uint64_t *)(v1 + 16), a1);
}

unint64_t sub_20E459788()
{
  unint64_t result;

  result = qword_253ED2460;
  if (!qword_253ED2460)
  {
    result = MEMORY[0x212BBDF90](&protocol conformance descriptor for LoadingViewPresentationContext, &type metadata for LoadingViewPresentationContext);
    atomic_store(result, (unint64_t *)&qword_253ED2460);
  }
  return result;
}

uint64_t sub_20E4597CC(uint64_t a1, uint64_t a2)
{
  char v4;
  char v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  void *v12;
  char v13;

  v4 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v4;
  sub_20E39CED0();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release();
  v5 = *(_BYTE *)(a2 + 48);
  v6 = *(_QWORD *)(a1 + 40);
  v7 = *(_BYTE *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = v5;
  sub_20E39CED8(v6, v7);
  v8 = *(_BYTE *)(a2 + 64);
  v9 = *(_QWORD *)(a1 + 56);
  v10 = *(unsigned __int8 *)(a1 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = v8;
  j__swift_release(v9, v10);
  v11 = *(_BYTE *)(a2 + 80);
  v12 = *(void **)(a1 + 72);
  v13 = *(_BYTE *)(a1 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = v11;
  sub_20E39CE70(v12, v13);
  return a1;
}

uint64_t sub_20E45987C(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 81))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 32);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t sub_20E4598D8(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 80) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 81) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 81) = 0;
    if (a2)
      *(_QWORD *)(result + 32) = a2;
  }
  return result;
}

uint64_t type metadata accessor for _PlatformLoadingViewContent._JEContentUnavailableView()
{
  return objc_opt_self();
}

uint64_t sub_20E459964(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[2];

  v4 = type metadata accessor for LoadingView(255, *a1, a1[1], a4);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_253ED2490);
  v5 = sub_20E4A39D4();
  v7[0] = MEMORY[0x212BBDF90](&protocol conformance descriptor for LoadingView<A>, v4);
  v7[1] = sub_20E39D010(&qword_253ED2488, qword_253ED2490, MEMORY[0x24BDF1248]);
  return MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v5, v7);
}

uint64_t sub_20E459A04(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[2];
  _QWORD v22[2];
  _QWORD v23[2];
  _QWORD v24[2];
  _QWORD v25[2];
  _QWORD v26[6];

  v1 = *a1;
  v2 = a1[1];
  v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253ED2A40);
  v4 = MEMORY[0x24BDF4638];
  v26[2] = v3;
  v26[3] = MEMORY[0x24BDF4638];
  type metadata accessor for _CompatibilityLoadingViewContent(255, v1, v2, v5);
  sub_20E4A3E00();
  v26[4] = sub_20E4A39D4();
  v26[5] = v4;
  swift_getTupleTypeMetadata();
  v6 = sub_20E4A491C();
  MEMORY[0x212BBDF90](MEMORY[0x24BDF5428], v6);
  v7 = sub_20E4A470C();
  v8 = sub_20E4A39D4();
  v9 = sub_20E4A39D4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253ED29F8);
  v10 = sub_20E4A39D4();
  sub_20E4A4004();
  v11 = (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088];
  v12 = sub_20E4A39D4();
  v13 = sub_20E4A39D4();
  sub_20E4A3854();
  v14 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEC4E0];
  v15 = sub_20E4A39D4();
  v26[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDF4700], v7);
  v26[1] = MEMORY[0x24BDEDBB8];
  v16 = MEMORY[0x24BDED308];
  v25[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v8, v26);
  v25[1] = MEMORY[0x24BDF1050];
  v24[0] = MEMORY[0x212BBDF90](v16, v9, v25);
  v24[1] = sub_20E39D010(&qword_253ED29F0, &qword_253ED29F8, MEMORY[0x24BDEF370]);
  v17 = MEMORY[0x212BBDF90](v16, v10, v24);
  v18 = sub_20E39F334(qword_253ED27F8, v11, MEMORY[0x24BDF1078]);
  v23[0] = v17;
  v23[1] = v18;
  v22[0] = MEMORY[0x212BBDF90](v16, v12, v23);
  v22[1] = v18;
  v21[0] = MEMORY[0x212BBDF90](v16, v13, v22);
  v21[1] = sub_20E39F334(qword_253ED2910, v14, MEMORY[0x24BDEC4C8]);
  MEMORY[0x212BBDF90](v16, v15, v21);
  v19 = sub_20E4A38B4();
  return MEMORY[0x212BBDF90](MEMORY[0x24BDEC6F8], v19);
}

uint64_t sub_20E459CB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253ED2480);
  v2 = sub_20E4A39D4();
  v4[0] = v1;
  v4[1] = sub_20E39D010(&qword_253ED2478, &qword_253ED2480, MEMORY[0x24BDF1028]);
  return MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v2, v4);
}

uint64_t sub_20E459D40()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_20E459D74(unint64_t result, uint64_t a2)
{
  if ((a2 & 0xC000000000000001) != 0)
    return MEMORY[0x212BBD78C]();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10) > result)
  {
    return (unint64_t)*(id *)(a2 + 8 * result + 32);
  }
  __break(1u);
  return result;
}

uint64_t sub_20E459DCC(uint64_t a1)
{
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v2 = sub_20E4A36A4();
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, double))(v6 + 16))(v5, a1, v3);
  return MEMORY[0x212BBB0EC](v5);
}

id sub_20E459E48()
{
  int v0;
  id v1;
  objc_class *v2;
  id v3;
  double v4;

  if (qword_253ED27F0 != -1)
    swift_once();
  v0 = byte_254A1B6D8;
  v1 = objc_msgSend((id)objc_opt_self(), sel_emptyConfiguration);
  if (v0 == 1)
    v2 = (objc_class *)type metadata accessor for _PlatformLoadingViewContent._JEContentUnavailableView();
  else
    v2 = (objc_class *)MEMORY[0x24BEBD4F0];
  v3 = objc_msgSend(objc_allocWithZone(v2), sel_initWithConfiguration_, v1);

  objc_msgSend(v3, sel_setScrollEnabled_, 0);
  LODWORD(v4) = 1132068864;
  objc_msgSend(v3, sel_setContentCompressionResistancePriority_forAxis_, 0, v4);
  return v3;
}

uint64_t sub_20E459F20()
{
  return sub_20E4A3B24();
}

unint64_t sub_20E459F44()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254A1B6F0;
  if (!qword_254A1B6F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1B6E0);
    v2[0] = sub_20E39D010(&qword_253ED0D78, &qword_253ED0D80, MEMORY[0x24BDEBC00]);
    v2[1] = sub_20E39D010(&qword_253ED0D90, qword_253ED0D98, MEMORY[0x24BDF1028]);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254A1B6F0);
  }
  return result;
}

uint64_t sub_20E459FE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_20E457C5C(*(__int128 **)(v4 + 32), *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
}

uint64_t sub_20E459FF4(uint64_t a1)
{
  sub_20E39CED0();
  return a1;
}

uint64_t sub_20E45A028()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  _QWORD *v6;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = v0 + 32;
  v5 = *(_BYTE *)(v0 + 113);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_20E3B4E08;
  return sub_20E457F7C(v4, v5, v2, v3);
}

uint64_t sub_20E45A090()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED2A08);
  return sub_20E4A4658();
}

unint64_t sub_20E45A0F4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_253ED2A50;
  if (!qword_253ED2A50)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253ED2A40);
    v2[0] = MEMORY[0x24BDF4610];
    v2[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_253ED2A50);
  }
  return result;
}

ValueMetadata *type metadata accessor for LoadingViewPresentationContextKey()
{
  return &type metadata for LoadingViewPresentationContextKey;
}

void sub_20E45A168()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1B6E8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1A230);
  sub_20E4A39D4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A199F8);
  sub_20E4A39D4();
  sub_20E4A39D4();
  swift_getTupleTypeMetadata2();
  sub_20E4A491C();
  JUMPOUT(0x212BBDF90);
}

unint64_t sub_20E45A214()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_253ED2470;
  if (!qword_253ED2470)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253ED2468);
    v2 = sub_20E459788();
    result = MEMORY[0x212BBDF90](MEMORY[0x24BEE4AB8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_253ED2470);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for _ContentUnavailableBackgroundView(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for _ContentUnavailableBackgroundView(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_20E45A36C + 4 * byte_20E4AEE25[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_20E45A3A0 + 4 * byte_20E4AEE20[v4]))();
}

uint64_t sub_20E45A3A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20E45A3A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20E45A3B0);
  return result;
}

uint64_t sub_20E45A3BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20E45A3C4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_20E45A3C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20E45A3D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20E45A3E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v11;
  uint64_t result;
  uint64_t v13;

  v11 = type metadata accessor for FlowStackAuthority(0, *(_QWORD *)(*(_QWORD *)a1 + 80), *(_QWORD *)(*(_QWORD *)a1 + 88), *(_QWORD *)(*(_QWORD *)a1 + 96));
  MEMORY[0x212BBDF90](&unk_20E4B1618, v11);
  result = sub_20E4A3938();
  *a6 = result;
  a6[1] = v13;
  a6[2] = a2;
  a6[3] = a3;
  a6[4] = a4;
  a6[5] = a5;
  return result;
}

uint64_t sub_20E45A46C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X7>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  void (*v15)(uint64_t, double);
  void (*v16)(char *, uint64_t);
  uint64_t v18;

  v7 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (uint64_t *)((char *)&v18 - v12);
  v15(v14, v11);
  sub_20E39D614(v13, v9, a2, a3);
  v16 = *(void (**)(char *, uint64_t))(v7 + 8);
  v16(v9, a2);
  sub_20E39D618((uint64_t)v13, a2, a4);
  return ((uint64_t (*)(_QWORD *, uint64_t))v16)(v13, a2);
}

void sub_20E45A54C(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[29];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v47[2];
  _QWORD v48[3];

  v34[24] = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C88);
  MEMORY[0x24BDAC7A8](v3);
  v34[21] = (char *)v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C80);
  v34[22] = *(_QWORD *)(v5 - 8);
  v34[23] = v5;
  MEMORY[0x24BDAC7A8](v5);
  v34[16] = (char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_20E4A392C();
  v40 = a1[3];
  v8 = a1[7];
  v34[27] = v7;
  v34[28] = v8;
  v41 = v40;
  v42 = MEMORY[0x24BEE0940];
  v43 = v8;
  v44 = MEMORY[0x24BEE0948];
  v9 = sub_20E4A46DC();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A18588);
  v10 = sub_20E4A39D4();
  v11 = a1[2];
  v12 = a1[6];
  v38 = a1[5];
  v39 = v11;
  v37 = v12;
  v13 = type metadata accessor for FlowStackAuthority.PathComponent(255, v11, v38, v12);
  v15 = a1[8];
  v35 = a1[4];
  v14 = v35;
  v36 = v15;
  v16 = MEMORY[0x212BBDF90](&unk_20E4B16C0, v13);
  v41 = v14;
  v42 = v13;
  v43 = v15;
  v44 = v16;
  v17 = sub_20E4A46DC();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1A700);
  v18 = sub_20E4A39D4();
  v19 = MEMORY[0x24BDF44C8];
  v20 = MEMORY[0x212BBDF90](MEMORY[0x24BDF44C8], v9);
  v21 = MEMORY[0x24BDF1028];
  v22 = sub_20E39D010((unint64_t *)&qword_254A18590, &qword_254A18588, MEMORY[0x24BDF1028]);
  v48[0] = v20;
  v48[1] = v22;
  v23 = MEMORY[0x24BDED308];
  v24 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v10, v48);
  v25 = MEMORY[0x212BBDF90](v19, v17);
  v26 = sub_20E39D010((unint64_t *)&qword_254A1A6F8, &qword_254A1A700, v21);
  v47[0] = v25;
  v47[1] = v26;
  v27 = MEMORY[0x212BBDF90](v23, v18, v47);
  v41 = v10;
  v42 = v13;
  v43 = v18;
  v44 = v24;
  v45 = v16;
  v46 = v27;
  v34[4] = MEMORY[0x212BBDF30](255, &v41, MEMORY[0x24BDF3068], 0);
  v41 = v10;
  v42 = v13;
  v43 = v18;
  v44 = v24;
  v45 = v16;
  v46 = v27;
  v34[3] = swift_getOpaqueTypeConformance2();
  v28 = sub_20E4A39EC();
  v29 = *(_QWORD *)(v28 - 8);
  v34[2] = v28;
  v34[7] = v29;
  MEMORY[0x24BDAC7A8](v28);
  v34[1] = (char *)v34 - v30;
  v31 = sub_20E4A39D4();
  v32 = *(_QWORD *)(v31 - 8);
  v34[5] = v31;
  v34[10] = v32;
  MEMORY[0x24BDAC7A8](v31);
  v34[0] = (char *)v34 - v33;
  v41 = v39;
  v42 = v35;
  v43 = v38;
  v44 = v37;
  v45 = v36;
  type metadata accessor for FlowStackSheetViewModifier();
}

void sub_20E45A86C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t **v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;

  v9[12] = a1;
  v16 = sub_20E4A39D4();
  v9[13] = *(_QWORD *)(v16 - 8);
  v9[11] = v16;
  MEMORY[0x24BDAC7A8](v16);
  v9[26] = (char *)&a9 - v17;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1B7A0);
  v18 = sub_20E4A39D4();
  v19 = *(_QWORD *)(v18 - 8);
  v9[15] = v18;
  v9[19] = v19;
  MEMORY[0x24BDAC7A8](v18);
  v9[27] = (char *)&a9 - v20;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1B7A8);
  v21 = sub_20E4A39D4();
  v9[18] = v21;
  v9[20] = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v9[14] = (char *)&a9 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v9[17] = (char *)&a9 - v24;
  v25 = (_QWORD *)v9[29];
  v26 = v25[1];
  v9[9] = *v25;
  v9[25] = v26;
  v27 = type metadata accessor for FlowStackAuthority(0, v14, v10, v11);
  v9[8] = v27;
  v9[6] = MEMORY[0x212BBDF90](&unk_20E4B1618, v27);
  sub_20E4A3944();
  v28 = v9[35];
  v9[54] = v14;
  v9[55] = v28;
  v9[56] = v12;
  v9[57] = v10;
  v29 = v9[28];
  v9[58] = v11;
  v9[59] = v29;
  v9[60] = v13;
  swift_getKeyPath();
  sub_20E4A3950();
  swift_release();
  swift_release();
  v9[46] = v14;
  v9[47] = v28;
  v30 = v9[33];
  v9[48] = v12;
  v9[49] = v30;
  v9[50] = v9[32];
  v9[51] = v29;
  v31 = v9[29];
  v9[52] = v13;
  v9[53] = v31;
  v32 = v9[1];
  sub_20E4A39E0();
  v33 = sub_20E498888();
  v34 = v9[2];
  v35 = MEMORY[0x212BBDF90](MEMORY[0x24BDED358], v34);
  sub_20E4922A8(v33, v34, v35);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v9[7] + 8))(v32, v34);
  v36 = (uint64_t **)sub_20E498CA4();
  v37 = *(_QWORD *)(v31 + 32);
  v38 = *(_QWORD *)(v31 + 40);
  v39 = sub_20E45BB44();
  *(_QWORD *)(v15 - 184) = v35;
  *(_QWORD *)(v15 - 176) = v39;
  MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v9[5], v15 - 184);
  sub_20E4701F0(v36, v37, v38);
}

uint64_t sub_20E45AB30()
{
  _QWORD *v0;
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  void (*v32)(uint64_t, uint64_t);

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v0[10] + 8))(v4, v2);
  swift_getKeyPath();
  v8 = swift_allocObject();
  v9 = v1;
  v10 = v1[1];
  *(_OWORD *)(v8 + 72) = *v1;
  v11 = v0[33];
  v12 = v0[35];
  *(_QWORD *)(v8 + 16) = v0[34];
  *(_QWORD *)(v8 + 24) = v12;
  *(_QWORD *)(v8 + 32) = v5;
  *(_QWORD *)(v8 + 40) = v11;
  v13 = v0[32];
  v14 = v0[28];
  *(_QWORD *)(v8 + 48) = v13;
  *(_QWORD *)(v8 + 56) = v14;
  *(_QWORD *)(v8 + 64) = v3;
  *(_OWORD *)(v8 + 88) = v10;
  *(_OWORD *)(v8 + 104) = v9[2];
  swift_retain();
  swift_retain();
  swift_retain();
  v15 = MEMORY[0x212BBDF90](&unk_20E4AFC68, v0[12]);
  *(_QWORD *)(v7 - 200) = v6;
  *(_QWORD *)(v7 - 192) = v15;
  v16 = v0[11];
  v17 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v16, v7 - 200);
  v18 = v0[26];
  sub_20E4A4388();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v0[13] + 8))(v18, v16);
  swift_getKeyPath();
  sub_20E4A3944();
  v19 = v0[35];
  v0[36] = v0[34];
  v0[37] = v19;
  v0[38] = v0[30];
  v0[39] = v11;
  v0[40] = v13;
  v0[41] = v14;
  v0[42] = v0[31];
  swift_getKeyPath();
  v20 = v0[21];
  sub_20E4A3950();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, _QWORD, uint64_t, _QWORD))(v0[22] + 56))(v20, 0, 1, v0[23]);
  v21 = sub_20E39D010(&qword_254A1B7B8, &qword_254A1B7A0, MEMORY[0x24BDF1248]);
  *(_QWORD *)(v7 - 216) = v17;
  *(_QWORD *)(v7 - 208) = v21;
  v22 = MEMORY[0x24BDED308];
  v23 = v0[15];
  v24 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v23, v7 - 216);
  v25 = v0[14];
  v26 = v0[27];
  sub_20E4A4250();
  swift_release();
  sub_20E45BBD0(v20);
  (*(void (**)(uint64_t, uint64_t))(v0[19] + 8))(v26, v23);
  v27 = sub_20E39D010(&qword_254A1B7C0, &qword_254A1B7A8, MEMORY[0x24BDF1028]);
  *(_QWORD *)(v7 - 232) = v24;
  *(_QWORD *)(v7 - 224) = v27;
  v28 = v22;
  v29 = v0[18];
  v30 = MEMORY[0x212BBDF90](v28, v29, v7 - 232);
  v31 = (_QWORD *)v0[17];
  sub_20E39D614(v31, v25, v29, v30);
  v32 = *(void (**)(uint64_t, uint64_t))(v0[20] + 8);
  v32(v25, v29);
  sub_20E39D618((uint64_t)v31, v29, v0[24]);
  return ((uint64_t (*)(_QWORD *, uint64_t))v32)(v31, v29);
}

uint64_t sub_20E45AE00@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1 + qword_254A246A0;
  swift_beginAccess();
  v4 = sub_20E4A392C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, v3, v4);
}

uint64_t sub_20E45AE6C(uint64_t a1)
{
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v2 = sub_20E4A392C();
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, double))(v6 + 16))(v5, a1, v3);
  return sub_20E498C34((uint64_t)v5);
}

uint64_t sub_20E45AEEC@<X0>(void (**a1)(double)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  double v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t OpaqueTypeConformance2;
  _QWORD *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD v96[2];
  _QWORD v97[2];
  __int128 v98;

  v80 = a8;
  v89 = a7;
  v83 = a5;
  v84 = a6;
  v79 = a4;
  v82 = a2;
  v88 = a9;
  v85 = *(_QWORD *)(a3 - 8);
  v81 = a3;
  MEMORY[0x24BDAC7A8](a1);
  v78 = (char *)&v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = v16;
  v91 = MEMORY[0x24BEE0940];
  v92 = v17;
  v93 = MEMORY[0x24BEE0948];
  v18 = sub_20E4A46DC();
  v86 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v75 = (char *)&v64 - v19;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A18588);
  v68 = v18;
  v20 = sub_20E4A39D4();
  v87 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v76 = (char *)&v64 - v21;
  v22 = type metadata accessor for FlowStackAuthority.PathComponent(255, a2, a5, a6);
  v65 = v22;
  v23 = MEMORY[0x212BBDF90](&unk_20E4B16C0, v22);
  v90 = a4;
  v91 = v22;
  v92 = a8;
  v93 = v23;
  v24 = v23;
  v71 = v23;
  v25 = sub_20E4A46DC();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1A700);
  v26 = sub_20E4A39D4();
  v27 = MEMORY[0x24BDF44C8];
  v28 = MEMORY[0x212BBDF90](MEMORY[0x24BDF44C8], v18);
  v66 = v28;
  v29 = MEMORY[0x24BDF1028];
  v30 = sub_20E39D010((unint64_t *)&qword_254A18590, &qword_254A18588, MEMORY[0x24BDF1028]);
  v97[0] = v28;
  v97[1] = v30;
  v31 = MEMORY[0x24BDED308];
  v72 = v20;
  v32 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v20, v97);
  v70 = v32;
  v33 = MEMORY[0x212BBDF90](v27, v25);
  v34 = sub_20E39D010((unint64_t *)&qword_254A1A6F8, &qword_254A1A700, v29);
  v96[0] = v33;
  v96[1] = v34;
  v69 = v26;
  v35 = MEMORY[0x212BBDF90](v31, v26, v96);
  v90 = v20;
  v91 = v65;
  v92 = v26;
  v93 = v32;
  v94 = v24;
  v95 = v35;
  v36 = v35;
  v74 = MEMORY[0x212BBDF30](0, &v90, MEMORY[0x24BDF3068], 0);
  v77 = *(_QWORD *)(v74 - 8);
  MEMORY[0x24BDAC7A8](v74);
  v67 = (char *)&v64 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = MEMORY[0x24BDAC7A8](v38);
  v73 = (uint64_t *)((char *)&v64 - v40);
  v41 = v78;
  a1[2](v39);
  v98 = *(_OWORD *)a1;
  v90 = *((_QWORD *)&v98 + 1);
  v42 = v75;
  v43 = v81;
  sub_20E4A43DC();
  (*(void (**)(char *, uint64_t))(v85 + 8))(v41, v43);
  swift_getKeyPath();
  LOBYTE(v90) = 1;
  v44 = v76;
  v45 = v68;
  sub_20E4A4250();
  swift_release();
  (*(void (**)(char *, uint64_t))(v86 + 8))(v42, v45);
  v46 = swift_checkMetadataState();
  v47 = swift_allocObject();
  *(_QWORD *)(v47 + 16) = v82;
  *(_QWORD *)(v47 + 24) = v43;
  v48 = v83;
  *(_QWORD *)(v47 + 32) = v79;
  *(_QWORD *)(v47 + 40) = v48;
  v49 = v89;
  *(_QWORD *)(v47 + 48) = v84;
  *(_QWORD *)(v47 + 56) = v49;
  *(_QWORD *)(v47 + 64) = v80;
  v50 = *((_OWORD *)a1 + 1);
  *(_OWORD *)(v47 + 72) = *(_OWORD *)a1;
  *(_OWORD *)(v47 + 88) = v50;
  *(_OWORD *)(v47 + 104) = *((_OWORD *)a1 + 2);
  sub_20E45BC7C((uint64_t)&v98);
  swift_retain();
  swift_retain();
  v51 = swift_checkMetadataState();
  v52 = v36;
  v53 = v67;
  v54 = v72;
  v55 = v70;
  v56 = v71;
  sub_20E4A4394();
  swift_release();
  (*(void (**)(char *, uint64_t))(v87 + 8))(v44, v54);
  v90 = v54;
  v91 = v46;
  v92 = v51;
  v93 = v55;
  v94 = v56;
  v95 = v52;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v58 = v73;
  v59 = v53;
  v60 = v53;
  v61 = v74;
  sub_20E39D614(v73, v60, v74, OpaqueTypeConformance2);
  v62 = *(void (**)(char *, uint64_t))(v77 + 8);
  v62(v59, v61);
  sub_20E39D618((uint64_t)v58, v61, v88);
  return ((uint64_t (*)(_QWORD *, uint64_t))v62)(v58, v61);
}

uint64_t EnvironmentValues.isAtFlowStackRoot.getter()
{
  unsigned __int8 v1;

  sub_20E45B4C0();
  sub_20E4A3C08();
  return v1;
}

unint64_t sub_20E45B4C0()
{
  unint64_t result;

  result = qword_254A1B718[0];
  if (!qword_254A1B718[0])
  {
    result = MEMORY[0x212BBDF90](&unk_20E4AEEF0, &type metadata for FlowStackRootKey);
    atomic_store(result, qword_254A1B718);
  }
  return result;
}

uint64_t sub_20E45B504@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_20E45B4C0();
  result = sub_20E4A3C08();
  *a1 = v3;
  return result;
}

uint64_t sub_20E45B550@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_20E45B4C0();
  result = sub_20E4A3C08();
  *a1 = v3;
  return result;
}

uint64_t sub_20E45B59C()
{
  sub_20E45B4C0();
  return sub_20E4A3C14();
}

uint64_t sub_20E45B5E4()
{
  sub_20E45B4C0();
  return sub_20E4A3C14();
}

ValueMetadata *type metadata accessor for FlowStackRootKey()
{
  return &type metadata for FlowStackRootKey;
}

_QWORD *sub_20E45B63C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_release();
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_20E45B6B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  v4 = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = v4;
  swift_release();
  return a1;
}

uint64_t sub_20E45B714(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_20E45B75C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for FlowStack()
{
  JUMPOUT(0x212BBDEE8);
}

uint64_t sub_20E45B7B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X4>, uint64_t a4@<X8>, uint64_t a5)
{
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  _QWORD v29[2];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[2];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v33 = a4;
  v29[1] = a5;
  v32 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v9 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for FlowStackAuthority.PathComponent(255, v10, v12, v11);
  v29[0] = MEMORY[0x212BBDF90](&unk_20E4B16C0, v13);
  v35 = a3;
  v36 = v13;
  v37 = a5;
  v38 = v29[0];
  v14 = sub_20E4A46DC();
  v30 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v29 - v15;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1A700);
  v17 = sub_20E4A39D4();
  v31 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v23 = (_QWORD *)((char *)v29 - v22);
  (*(void (**)(uint64_t, double))(a2 + 32))(a1 + *(int *)(v13 + 44), v21);
  sub_20E4A43DC();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v9, a3);
  LOBYTE(v35) = 1;
  v24 = MEMORY[0x212BBDF90](MEMORY[0x24BDF44C8], v14);
  View.presentedBy(_:)();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v16, v14);
  v25 = sub_20E39D010((unint64_t *)&qword_254A1A6F8, &qword_254A1A700, MEMORY[0x24BDF1028]);
  v34[0] = v24;
  v34[1] = v25;
  v26 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v17, v34);
  sub_20E39D614(v23, v19, v17, v26);
  v27 = *(void (**)(char *, uint64_t))(v31 + 8);
  v27(v19, v17);
  sub_20E39D618((uint64_t)v23, v17, v33);
  return ((uint64_t (*)(_QWORD *, uint64_t))v27)(v23, v17);
}

uint64_t sub_20E45BA24(unint64_t *a1)
{
  BOOL v2;
  uint64_t result;
  unint64_t v4;
  unint64_t v5;

  sub_20E498CA4();
  v2 = sub_20E440AB8();
  result = swift_release();
  v4 = *a1;
  if (v2)
  {
    if ((v4 & 1) != 0)
      return result;
    v5 = v4 | 1;
  }
  else
  {
    if ((v4 & 1) == 0)
      return result;
    v5 = v4 & 0xFFFFFFFFFFFFFFFELL;
  }
  *a1 = v5;
  return result;
}

void sub_20E45BA84(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_20E45A54C(a1, a2);
}

uint64_t sub_20E45BABC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E45BB08()
{
  return 56;
}

__n128 sub_20E45BB14(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  v4 = *(_OWORD *)(a1 + 32);
  *(_QWORD *)(a2 + 48) = *(_QWORD *)(a1 + 48);
  *(_OWORD *)(a2 + 16) = v3;
  *(_OWORD *)(a2 + 32) = v4;
  *(__n128 *)a2 = result;
  return result;
}

uint64_t sub_20E45BB30@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_20E45AEEC(*(void (***)(double))(v1 + 72), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), a1);
}

unint64_t sub_20E45BB44()
{
  unint64_t result;

  result = qword_254A1B7B0;
  if (!qword_254A1B7B0)
  {
    result = MEMORY[0x212BBDF90](&unk_20E4B12C0, &type metadata for FlowAlertViewModifier);
    atomic_store(result, (unint64_t *)&qword_254A1B7B0);
  }
  return result;
}

uint64_t sub_20E45BB94(unint64_t *a1)
{
  return sub_20E45BA24(a1);
}

uint64_t sub_20E45BBD0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C88);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t objectdestroyTm_5()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E45BC48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_20E45B7B4(a1, v2 + 72, *(_QWORD *)(v2 + 32), a2, *(_QWORD *)(v2 + 64));
}

uint64_t sub_20E45BC7C(uint64_t a1)
{
  swift_retain();
  return a1;
}

double sub_20E45BCA4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _OWORD *a7@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t AssociatedTypeWitness;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  double result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _OWORD v30[2];
  __int128 v31;

  v27 = a3;
  v28 = a6;
  v26 = a5;
  v29 = a1;
  v10 = *(_QWORD *)a1;
  v12 = *(_QWORD *)(*(_QWORD *)a1 + 80);
  v11 = *(_QWORD *)(*(_QWORD *)a1 + 88);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v14 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v15 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v17 = (char *)&v26 - v16;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v14 + 16))((char *)&v26 - v16, a2, AssociatedTypeWitness, v15);
  v18 = (*(unsigned __int8 *)(v14 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v19 = (char *)swift_allocObject();
  v20 = v26;
  *((_QWORD *)v19 + 2) = v12;
  *((_QWORD *)v19 + 3) = v20;
  *((_QWORD *)v19 + 4) = v11;
  v21 = *(_QWORD *)(v10 + 96);
  v23 = v27;
  v22 = v28;
  *((_QWORD *)v19 + 5) = v21;
  *((_QWORD *)v19 + 6) = v22;
  *((_QWORD *)v19 + 7) = v23;
  *((_QWORD *)v19 + 8) = a4;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v19[v18], v17, AssociatedTypeWitness);
  swift_retain();
  sub_20E45A3E0(v29, (uint64_t)sub_20E45BE88, (uint64_t)v19, v23, a4, (uint64_t *)v30);
  v24 = v30[1];
  *a7 = v30[0];
  a7[1] = v24;
  result = *(double *)&v31;
  a7[2] = v31;
  return result;
}

uint64_t sub_20E45BDFC()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  unint64_t v3;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);
  return swift_deallocObject();
}

uint64_t sub_20E45BE88@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1[3];
  v4 = v1[6];
  swift_getAssociatedTypeWitness();
  return sub_20E45A46C(v1[7], v3, v4, a1);
}

void sub_20E45BF18(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  _QWORD v28[3];

  v1 = *a1;
  v2 = a1[3];
  v20 = v2;
  v3 = a1[4];
  v18 = *a1;
  v19 = v3;
  v16 = a1[2];
  v17 = a1[6];
  sub_20E4A392C();
  v4 = sub_20E4A46DC();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A18588);
  v5 = sub_20E4A39D4();
  v6 = type metadata accessor for FlowStackAuthority.PathComponent(255, v1, v2, v3);
  v7 = MEMORY[0x212BBDF90](&unk_20E4B16C0, v6);
  v8 = sub_20E4A46DC();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1A700);
  v9 = sub_20E4A39D4();
  v10 = MEMORY[0x24BDF44C8];
  v11 = MEMORY[0x212BBDF90](MEMORY[0x24BDF44C8], v4);
  v12 = MEMORY[0x24BDF1028];
  v28[0] = v11;
  v28[1] = sub_20E39D010((unint64_t *)&qword_254A18590, &qword_254A18588, MEMORY[0x24BDF1028]);
  v13 = MEMORY[0x24BDED308];
  v14 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v5, v28);
  v27[0] = MEMORY[0x212BBDF90](v10, v8);
  v27[1] = sub_20E39D010((unint64_t *)&qword_254A1A6F8, &qword_254A1A700, v12);
  v15 = MEMORY[0x212BBDF90](v13, v9, v27);
  v21 = v5;
  v22 = v6;
  v23 = v9;
  v24 = v14;
  v25 = v7;
  v26 = v15;
  MEMORY[0x212BBDF30](255, &v21, MEMORY[0x24BDF3068], 0);
  v21 = v5;
  v22 = v6;
  v23 = v9;
  v24 = v14;
  v25 = v7;
  v26 = v15;
  swift_getOpaqueTypeConformance2();
  sub_20E4A39EC();
  sub_20E4A39D4();
  v21 = v18;
  v22 = v16;
  v23 = v20;
  v24 = v19;
  v25 = v17;
  type metadata accessor for FlowStackSheetViewModifier();
}

uint64_t sub_20E45C148(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[2];
  _QWORD v10[2];
  _QWORD v11[2];
  _QWORD v12[25];

  v5 = sub_20E4A39D4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1B7A0);
  v6 = sub_20E4A39D4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1B7A8);
  v7 = sub_20E4A39D4();
  v12[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDED358], v2);
  v12[1] = sub_20E45BB44();
  v11[0] = MEMORY[0x212BBDF90](v1, v3, v12);
  v11[1] = MEMORY[0x212BBDF90](&unk_20E4AFC68, a1);
  v10[0] = MEMORY[0x212BBDF90](v1, v5, v11);
  v10[1] = sub_20E39D010(&qword_254A1B7B8, &qword_254A1B7A0, MEMORY[0x24BDF1248]);
  v9[0] = MEMORY[0x212BBDF90](v1, v6, v10);
  v9[1] = sub_20E39D010(&qword_254A1B7C0, &qword_254A1B7A8, MEMORY[0x24BDF1028]);
  return MEMORY[0x212BBDF90](v1, v7, v9);
}

uint64_t sub_20E45C27C@<X0>(uint64_t a1@<X8>)
{
  return sub_20E45D138(&qword_253ED0A28, (uint64_t (*)(_QWORD))MEMORY[0x24BE5D6D0], 0xD000000000000014, 0x800000020E4CD0F0, a1);
}

uint64_t sub_20E45C2A8@<X0>(uint64_t a1@<X8>)
{
  return sub_20E45C51C(&qword_253ED0A20, &qword_253ED2428, 0x6C616E6F6974704FLL, 0xEE003E444955553CLL, a1);
}

uint64_t sub_20E45C2DC(uint64_t a1, char a2)
{
  return sub_20E45CD30(a1, a2, 0xD000000000000019, 0x800000020E4CCED0, (void (*)(_QWORD, _QWORD))j__swift_release);
}

uint64_t sub_20E45C300(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  os_log_type_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_20E4A3BFC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 0x100) != 0)
  {
    sub_20E3A3B08(a1, a2);
  }
  else
  {
    swift_retain();
    v10 = sub_20E4A5FE4();
    v11 = sub_20E4A4058();
    v12 = v10;
    if (os_log_type_enabled(v11, v10))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      v17 = swift_slowAlloc();
      v19 = v17;
      *(_DWORD *)v13 = 136315138;
      v16 = v13 + 4;
      v18 = sub_20E45F228(0xD000000000000017, 0x800000020E4CD0D0, &v19);
      sub_20E4A60F8();
      _os_log_impl(&dword_20E399000, v11, v12, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v13, 0xCu);
      v14 = v17;
      swift_arrayDestroy();
      MEMORY[0x212BBE068](v14, -1, -1);
      MEMORY[0x212BBE068](v13, -1, -1);
    }

    sub_20E4A3BF0();
    swift_getAtKeyPath();
    sub_20E3A3D14(a1, a2, a3, 0);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return v19;
  }
  return a1;
}

uint64_t sub_20E45C4F0@<X0>(uint64_t a1@<X8>)
{
  return sub_20E45C51C(&qword_254A183F0, &qword_254A18228, 0xD000000000000017, 0x800000020E4CD340, a1);
}

uint64_t sub_20E45C51C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  os_log_type_t v19;
  NSObject *v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v27 = a3;
  v9 = v5;
  v11 = sub_20E4A3BFC();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(a1);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20E3A5E20(v9, (uint64_t)v17, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
    return sub_20E3BB440((uint64_t)v17, a5, a2);
  v19 = sub_20E4A5FE4();
  v20 = sub_20E4A4058();
  if (os_log_type_enabled(v20, v19))
  {
    v25 = a4;
    v21 = swift_slowAlloc();
    v26 = a5;
    v22 = (uint8_t *)v21;
    v23 = swift_slowAlloc();
    v29 = v23;
    *(_DWORD *)v22 = 136315138;
    v28 = sub_20E45F228(v27, v25, &v29);
    sub_20E4A60F8();
    _os_log_impl(&dword_20E399000, v20, v19, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x212BBE068](v23, -1, -1);
    MEMORY[0x212BBE068](v22, -1, -1);
  }

  sub_20E4A3BF0();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_20E45C744@<X0>(uint64_t a1@<X8>)
{
  return sub_20E45C51C(&qword_253ED0A30, &qword_253ED0C88, 0xD000000000000021, 0x800000020E4CD2B0, a1);
}

uint64_t sub_20E45C770@<X0>(uint64_t a1@<X0>, char a2@<W1>, _BYTE *a3@<X8>)
{
  return sub_20E39D960(a1, a2, (void (*)(uint64_t, _QWORD))sub_20E39CFAC, 0xD00000000000001CLL, 0x800000020E4CD480, (void (*)(_QWORD, _QWORD))sub_20E39CED8, a3);
}

uint64_t sub_20E45C79C(uint64_t a1, char a2)
{
  return sub_20E45CD30(a1, a2, 0xD00000000000001DLL, 0x800000020E4CD1A0, (void (*)(_QWORD, _QWORD))j__swift_release);
}

uint64_t sub_20E45C7C0(void *a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  os_log_type_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  id v13;
  uint64_t v15;
  uint64_t v16;

  v4 = sub_20E4A3BFC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    v13 = a1;
  }
  else
  {
    swift_retain();
    v8 = sub_20E4A5FE4();
    v9 = sub_20E4A4058();
    v10 = v8;
    if (os_log_type_enabled(v9, v8))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = swift_slowAlloc();
      v16 = v12;
      *(_DWORD *)v11 = 136315138;
      v15 = sub_20E45F228(0xD000000000000040, 0x800000020E4CD240, &v16);
      sub_20E4A60F8();
      _os_log_impl(&dword_20E399000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x212BBE068](v12, -1, -1);
      MEMORY[0x212BBE068](v11, -1, -1);
    }

    sub_20E4A3BF0();
    swift_getAtKeyPath();
    sub_20E39CE70(a1, 0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v16;
  }
  return (uint64_t)a1;
}

uint64_t sub_20E45C988(uint64_t a1, char a2)
{
  return sub_20E45CB70(a1, a2, 0x800000020E4CD180);
}

double sub_20E45C99C(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  os_log_type_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v14;
  double v15;

  v4 = sub_20E4A3BFC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
    return *(double *)&a1;
  swift_retain();
  v8 = sub_20E4A5FE4();
  v9 = sub_20E4A4058();
  v10 = v8;
  if (os_log_type_enabled(v9, v8))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v15 = *(double *)&v12;
    *(_DWORD *)v11 = 136315138;
    v14 = sub_20E45F228(0x74616F6C464743, 0xE700000000000000, (uint64_t *)&v15);
    sub_20E4A60F8();
    _os_log_impl(&dword_20E399000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x212BBE068](v12, -1, -1);
    MEMORY[0x212BBE068](v11, -1, -1);
  }

  sub_20E4A3BF0();
  swift_getAtKeyPath();
  sub_20E39CED8(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v15;
}

uint64_t sub_20E45CB5C(uint64_t a1, char a2)
{
  return sub_20E45CB70(a1, a2, 0x800000020E4CD160);
}

uint64_t sub_20E45CB70(uint64_t a1, char a2, unint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  os_log_type_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_20E4A3BFC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_retain();
    v10 = sub_20E4A5FE4();
    v11 = sub_20E4A4058();
    v12 = v10;
    if (os_log_type_enabled(v11, v10))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      v14 = swift_slowAlloc();
      v15 = a3;
      v16 = v14;
      v19 = v14;
      *(_DWORD *)v13 = 136315138;
      v18 = sub_20E45F228(0xD000000000000013, v15, &v19);
      sub_20E4A60F8();
      _os_log_impl(&dword_20E399000, v11, v12, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x212BBE068](v16, -1, -1);
      MEMORY[0x212BBE068](v13, -1, -1);
    }

    sub_20E4A3BF0();
    swift_getAtKeyPath();
    sub_20E3CBDA8(a1, 0);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return v19;
  }
  return a1;
}

uint64_t sub_20E45CD30(uint64_t a1, char a2, uint64_t a3, unint64_t a4, void (*a5)(_QWORD, _QWORD))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  os_log_type_t v14;
  NSObject *v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint8_t *v21;
  unint64_t v23;
  void (*v24)(_QWORD, _QWORD);
  uint64_t v25;
  uint64_t v26;

  v10 = sub_20E4A3BFC();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  if ((a2 & 1) == 0)
  {
    v14 = sub_20E4A5FE4();
    v15 = sub_20E4A4058();
    if (os_log_type_enabled(v15, v14))
    {
      v23 = a4;
      v16 = swift_slowAlloc();
      v24 = a5;
      v17 = (uint8_t *)v16;
      v18 = swift_slowAlloc();
      v19 = a3;
      v20 = v18;
      v26 = v18;
      *(_DWORD *)v17 = 136315138;
      v25 = sub_20E45F228(v19, v23, &v26);
      sub_20E4A60F8();
      _os_log_impl(&dword_20E399000, v15, v14, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x212BBE068](v20, -1, -1);
      v21 = v17;
      a5 = v24;
      MEMORY[0x212BBE068](v21, -1, -1);
    }

    sub_20E4A3BF0();
    swift_getAtKeyPath();
    a5(a1, 0);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    return v26;
  }
  return a1;
}

uint64_t sub_20E45CEFC@<X0>(uint64_t a1@<X0>, char a2@<W1>, _BYTE *a3@<X8>)
{
  return sub_20E39D960(a1, a2, (void (*)(uint64_t, _QWORD))sub_20E39CFAC, 0xD000000000000014, 0x800000020E4CD290, (void (*)(_QWORD, _QWORD))sub_20E39CED8, a3);
}

uint64_t sub_20E45CF28(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  os_log_type_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v4 = sub_20E4A3BFC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
    return a1 & 1;
  swift_retain();
  v8 = sub_20E4A5FE4();
  v9 = sub_20E4A4058();
  v10 = v8;
  if (os_log_type_enabled(v9, v8))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v15 = v12;
    *(_DWORD *)v11 = 136315138;
    v14 = sub_20E45F228(1819242306, 0xE400000000000000, &v15);
    sub_20E4A60F8();
    _os_log_impl(&dword_20E399000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x212BBE068](v12, -1, -1);
    MEMORY[0x212BBE068](v11, -1, -1);
  }

  sub_20E4A3BF0();
  swift_getAtKeyPath();
  sub_20E39CED8(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v15;
}

uint64_t sub_20E45D0E0@<X0>(uint64_t a1@<X0>, char a2@<W1>, _QWORD *a3@<X8>)
{
  return sub_20E45E548(a1, a2, (uint64_t (*)(uint64_t, uint64_t, double))j__swift_retain, 0xD00000000000001ELL, 0x800000020E4CD110, (uint64_t (*)(uint64_t, uint64_t, double))j__swift_release, a3);
}

uint64_t sub_20E45D10C@<X0>(uint64_t a1@<X8>)
{
  return sub_20E45D138(&qword_253ED23A0, (uint64_t (*)(_QWORD))MEMORY[0x24BDEB1F0], 0x616850656E656353, 0xEA00000000006573, a1);
}

uint64_t sub_20E45D138@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  os_log_type_t v20;
  NSObject *v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v28 = a3;
  v9 = v5;
  v11 = sub_20E4A3BFC();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(a1);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20E3A5E20(v9, (uint64_t)v17, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v18 = a2(0);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a5, v17, v18);
  }
  else
  {
    v20 = sub_20E4A5FE4();
    v21 = sub_20E4A4058();
    if (os_log_type_enabled(v21, v20))
    {
      v26 = a4;
      v22 = swift_slowAlloc();
      v27 = a5;
      v23 = (uint8_t *)v22;
      v24 = swift_slowAlloc();
      v30 = v24;
      *(_DWORD *)v23 = 136315138;
      v29 = sub_20E45F228(v28, v26, &v30);
      sub_20E4A60F8();
      _os_log_impl(&dword_20E399000, v21, v20, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x212BBE068](v24, -1, -1);
      MEMORY[0x212BBE068](v23, -1, -1);
    }

    sub_20E4A3BF0();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

double sub_20E45D370()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  os_log_type_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  _QWORD v11[2];
  double v12;

  v1 = sub_20E4A3BFC();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v0[32] == 1)
    return *(double *)v0;
  swift_retain();
  v6 = sub_20E4A5FE4();
  v7 = sub_20E4A4058();
  v8 = v6;
  if (os_log_type_enabled(v7, v6))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v12 = *(double *)&v10;
    *(_DWORD *)v9 = 136315138;
    v11[0] = v9 + 4;
    v11[1] = sub_20E45F228(0x65736E4965676445, 0xEA00000000007374, (uint64_t *)&v12);
    sub_20E4A60F8();
    _os_log_impl(&dword_20E399000, v7, v8, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x212BBE068](v10, -1, -1);
    MEMORY[0x212BBE068](v9, -1, -1);
  }

  sub_20E4A3BF0();
  swift_getAtKeyPath();
  sub_20E45F8D4((uint64_t)v0);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v12;
}

uint64_t sub_20E45D544@<X0>(uint64_t a1@<X0>, char a2@<W1>, _BYTE *a3@<X8>)
{
  return sub_20E39D960(a1, a2, (void (*)(uint64_t, _QWORD))sub_20E39CFAC, 0xD000000000000019, 0x800000020E4CD220, (void (*)(_QWORD, _QWORD))sub_20E39CED8, a3);
}

uint64_t sub_20E45D570@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  os_log_type_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[3];
  uint64_t v16;
  _QWORD v17[5];
  char v18;

  v2 = v1;
  v4 = sub_20E4A3BFC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20E3A5E20(v2, (uint64_t)v17, &qword_253ED0A18);
  if (v18 == 1)
    return sub_20E3BB440((uint64_t)v17, a1, &qword_253ED0658);
  v9 = sub_20E4A5FE4();
  v10 = sub_20E4A4058();
  v11 = v9;
  if (os_log_type_enabled(v10, v9))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    v15[1] = a1;
    v14 = v13;
    v16 = v13;
    *(_DWORD *)v12 = 136315138;
    v15[2] = sub_20E45F228(0xD000000000000017, 0x800000020E4CD1C0, &v16);
    sub_20E4A60F8();
    _os_log_impl(&dword_20E399000, v10, v11, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x212BBE068](v14, -1, -1);
    MEMORY[0x212BBE068](v12, -1, -1);
  }

  sub_20E4A3BF0();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_20E45D75C@<X0>(uint64_t a1@<X8>)
{
  return sub_20E45E12C(qword_254A1A660, (uint64_t (*)(_QWORD *, uint64_t))sub_20E3B1AB4, 0xD000000000000015, 0x800000020E4CD2E0, a1);
}

uint64_t sub_20E45D788@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  os_log_type_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22[6];

  v3 = sub_20E4A3BFC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)v1;
  if (*(_BYTE *)(v1 + 48) == 1)
  {
    v9 = *(_QWORD *)(v1 + 32);
    v8 = *(_QWORD *)(v1 + 40);
    v11 = *(_QWORD *)(v1 + 16);
    v10 = *(_QWORD *)(v1 + 24);
    v12 = *(_QWORD *)(v1 + 8);
    result = sub_20E405808(v7);
  }
  else
  {
    swift_retain();
    v14 = sub_20E4A5FE4();
    v15 = sub_20E4A4058();
    v16 = v14;
    if (os_log_type_enabled(v15, v14))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      v20 = swift_slowAlloc();
      v22[0] = v20;
      *(_DWORD *)v17 = 136315138;
      v19[1] = v17 + 4;
      v21 = sub_20E45F228(0xD000000000000022, 0x800000020E4CD450, v22);
      sub_20E4A60F8();
      _os_log_impl(&dword_20E399000, v15, v16, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v17, 0xCu);
      v18 = v20;
      swift_arrayDestroy();
      MEMORY[0x212BBE068](v18, -1, -1);
      MEMORY[0x212BBE068](v17, -1, -1);
    }

    sub_20E4A3BF0();
    swift_getAtKeyPath();
    sub_20E45F908(v1);
    result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v7 = v22[0];
    v12 = v22[1];
    v11 = v22[2];
    v10 = v22[3];
    v9 = v22[4];
    v8 = v22[5];
  }
  *a1 = v7;
  a1[1] = v12;
  a1[2] = v11;
  a1[3] = v10;
  a1[4] = v9;
  a1[5] = v8;
  return result;
}

double sub_20E45D990(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  os_log_type_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[2];
  double v19;

  v6 = sub_20E4A3BFC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 1) != 0)
    return *(double *)&a1;
  swift_retain();
  v10 = sub_20E4A5FE4();
  v11 = sub_20E4A4058();
  v12 = v10;
  if (os_log_type_enabled(v11, v10))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    v18[0] = a2;
    v15 = v14;
    v19 = *(double *)&v14;
    *(_DWORD *)v13 = 136315138;
    v18[1] = sub_20E45F228(0x657A69534743, 0xE600000000000000, (uint64_t *)&v19);
    sub_20E4A60F8();
    _os_log_impl(&dword_20E399000, v11, v12, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v13, 0xCu);
    swift_arrayDestroy();
    v16 = v15;
    a2 = v18[0];
    MEMORY[0x212BBE068](v16, -1, -1);
    MEMORY[0x212BBE068](v13, -1, -1);
  }

  sub_20E4A3BF0();
  swift_getAtKeyPath();
  sub_20E43392C(a1, a2, 0);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v19;
}

uint64_t sub_20E45DB60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  os_log_type_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  _QWORD v14[2];
  uint64_t v15;

  v4 = sub_20E4A3BFC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 0x100) == 0)
  {
    swift_retain();
    v8 = sub_20E4A5FE4();
    v9 = sub_20E4A4058();
    v10 = v8;
    if (os_log_type_enabled(v9, v8))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = swift_slowAlloc();
      v15 = v12;
      *(_DWORD *)v11 = 136315138;
      v14[0] = v11 + 4;
      v14[1] = sub_20E45F228(0xD000000000000011, 0x800000020E4CD400, &v15);
      sub_20E4A60F8();
      _os_log_impl(&dword_20E399000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x212BBE068](v12, -1, -1);
      MEMORY[0x212BBE068](v11, -1, -1);
    }

    sub_20E4A3BF0();
    swift_getAtKeyPath();
    sub_20E43392C(a1, a2, 0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v15;
  }
  return a1;
}

uint64_t sub_20E45DD34@<X0>(uint64_t a1@<X0>, char a2@<W1>, _BYTE *a3@<X8>)
{
  return sub_20E39D960(a1, a2, (void (*)(uint64_t, _QWORD))sub_20E39CFAC, 0xD00000000000002FLL, 0x800000020E4CD420, (void (*)(_QWORD, _QWORD))sub_20E39CED8, a3);
}

_OWORD *sub_20E45DD60@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  os_log_type_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[2];
  uint64_t v16;
  _OWORD v17[2];
  char v18;

  v2 = v1;
  v4 = sub_20E4A3BFC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20E3A5E20(v2, (uint64_t)v17, qword_254A1AB38);
  if (v18 == 1)
    return sub_20E3B8B34(v17, a1);
  v9 = sub_20E4A5FE4();
  v10 = sub_20E4A4058();
  v11 = v9;
  if (os_log_type_enabled(v10, v9))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    v15[0] = a1;
    v14 = v13;
    v16 = v13;
    *(_DWORD *)v12 = 136315138;
    v15[1] = sub_20E45F228(7958081, 0xE300000000000000, &v16);
    sub_20E4A60F8();
    _os_log_impl(&dword_20E399000, v10, v11, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x212BBE068](v14, -1, -1);
    MEMORY[0x212BBE068](v12, -1, -1);
  }

  sub_20E4A3BF0();
  swift_getAtKeyPath();
  swift_release();
  return (_OWORD *)(*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_20E45DF38(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  os_log_type_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v4 = sub_20E4A3BFC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_retain();
    v8 = sub_20E4A5FE4();
    v9 = sub_20E4A4058();
    v10 = v8;
    if (os_log_type_enabled(v9, v8))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = swift_slowAlloc();
      v15 = v12;
      *(_DWORD *)v11 = 136315138;
      v14 = sub_20E45F228(0xD00000000000003CLL, 0x800000020E4CD1E0, &v15);
      sub_20E4A60F8();
      _os_log_impl(&dword_20E399000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x212BBE068](v12, -1, -1);
      MEMORY[0x212BBE068](v11, -1, -1);
    }

    sub_20E4A3BF0();
    swift_getAtKeyPath();
    sub_20E3CBDA8(a1, 0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v15;
  }
  return a1;
}

uint64_t sub_20E45E100@<X0>(uint64_t a1@<X8>)
{
  return sub_20E45E12C(&qword_254A1B308, (uint64_t (*)(_QWORD *, uint64_t))sub_20E3B1AB4, 0xD000000000000011, 0x800000020E4CD300, a1);
}

uint64_t sub_20E45E12C@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(_QWORD *, uint64_t)@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v17;
  os_log_type_t v18;
  NSObject *v19;
  uint64_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25[3];
  uint64_t v26;
  _QWORD v27[5];
  char v28;

  v10 = v5;
  v12 = sub_20E4A3BFC();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20E3A5E20(v10, (uint64_t)v27, a1);
  if (v28 == 1)
    return a2(v27, a5);
  v17 = v27[0];
  v18 = sub_20E4A5FE4();
  v19 = sub_20E4A4058();
  if (os_log_type_enabled(v19, v18))
  {
    v25[0] = a4;
    v20 = swift_slowAlloc();
    v25[1] = v17;
    v21 = (uint8_t *)v20;
    v22 = swift_slowAlloc();
    v23 = a3;
    v24 = v22;
    v26 = v22;
    *(_DWORD *)v21 = 136315138;
    v25[2] = sub_20E45F228(v23, v25[0], &v26);
    sub_20E4A60F8();
    _os_log_impl(&dword_20E399000, v19, v18, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v21, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x212BBE068](v24, -1, -1);
    MEMORY[0x212BBE068](v21, -1, -1);
  }

  sub_20E4A3BF0();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t sub_20E45E314@<X0>(uint64_t a1@<X0>, char a2@<W1>, _BYTE *a3@<X8>)
{
  return sub_20E39D960(a1, a2, (void (*)(uint64_t, _QWORD))sub_20E39CFAC, 0xD000000000000033, 0x800000020E4CD3C0, (void (*)(_QWORD, _QWORD))sub_20E39CED8, a3);
}

uint64_t sub_20E45E340(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  os_log_type_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  _QWORD v16[2];
  uint64_t v17;

  v6 = sub_20E4A3BFC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 1) != 0)
  {
    sub_20E3E592C(a1);
  }
  else
  {
    swift_retain();
    v10 = sub_20E4A5FE4();
    v11 = sub_20E4A4058();
    v12 = v10;
    if (os_log_type_enabled(v11, v10))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      v14 = swift_slowAlloc();
      v17 = v14;
      *(_DWORD *)v13 = 136315138;
      v16[0] = v13 + 4;
      v16[1] = sub_20E45F228(0xD000000000000028, 0x800000020E4CD360, &v17);
      sub_20E4A60F8();
      _os_log_impl(&dword_20E399000, v11, v12, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x212BBE068](v14, -1, -1);
      MEMORY[0x212BBE068](v13, -1, -1);
    }

    sub_20E4A3BF0();
    swift_getAtKeyPath();
    sub_20E3E2B4C(a1, a2, 0);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return v17;
  }
  return a1;
}

uint64_t sub_20E45E51C@<X0>(uint64_t a1@<X0>, char a2@<W1>, _QWORD *a3@<X8>)
{
  return sub_20E45E548(a1, a2, (uint64_t (*)(uint64_t, uint64_t, double))j__swift_retain, 0xD00000000000001CLL, 0x800000020E4CD320, (uint64_t (*)(uint64_t, uint64_t, double))j_j__swift_release, a3);
}

uint64_t sub_20E45E548@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t (*a3)(uint64_t, uint64_t, double)@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t (*a6)(uint64_t, uint64_t, double)@<X5>, _QWORD *a7@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  os_log_type_t v18;
  NSObject *v19;
  uint64_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v26[2];
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t, double);
  uint64_t v29;
  uint64_t v30;

  v28 = a3;
  v13 = sub_20E4A3BFC();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    *a7 = a1;
    return v28(a1, 1, v15);
  }
  else
  {
    v27 = a4;
    v28(a1, 0, v15);
    v18 = sub_20E4A5FE4();
    v19 = sub_20E4A4058();
    if (os_log_type_enabled(v19, v18))
    {
      v26[0] = a5;
      v20 = swift_slowAlloc();
      v26[1] = (unint64_t)a7;
      v21 = (uint8_t *)v20;
      v22 = swift_slowAlloc();
      v28 = a6;
      v23 = v22;
      v30 = v22;
      *(_DWORD *)v21 = 136315138;
      v29 = sub_20E45F228(v27, v26[0], &v30);
      sub_20E4A60F8();
      _os_log_impl(&dword_20E399000, v19, v18, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v21, 0xCu);
      swift_arrayDestroy();
      v24 = v23;
      a6 = v28;
      MEMORY[0x212BBE068](v24, -1, -1);
      MEMORY[0x212BBE068](v21, -1, -1);
    }

    sub_20E4A3BF0();
    swift_getAtKeyPath();
    ((void (*)(uint64_t, _QWORD))a6)(a1, 0);
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  }
}

uint64_t sub_20E45E754()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_20E4A35CC();
  swift_release();
  return swift_release();
}

uint64_t sub_20E45E7BC(uint64_t a1)
{
  uint64_t v2;
  _BYTE v3[48];

  sub_20E3A5E20(a1, (uint64_t)v3, &qword_254A1A3D8);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_20E3A5E20((uint64_t)v3, (uint64_t)&v2, &qword_254A1A3D8);
  swift_retain();
  sub_20E4A35D8();
  return sub_20E39D1F8((uint64_t)v3, &qword_254A1A3D8);
}

__n128 LocalizedText.init(_:)@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t KeyPath;
  __n128 result;
  __n128 v10;

  v4 = a1[1].n128_u64[0];
  type metadata accessor for _LocalizerOwner();
  sub_20E40B978();
  v10 = *a1;
  v5 = sub_20E4A3B00();
  v7 = v6;
  KeyPath = swift_getKeyPath();
  a2->n128_u64[0] = v5;
  a2->n128_u64[1] = v7;
  a2[1].n128_u64[0] = KeyPath;
  a2[1].n128_u8[8] = 0;
  result = v10;
  a2[2] = v10;
  a2[3].n128_u64[0] = v4;
  return result;
}

uint64_t LocalizedText.body.getter()
{
  __int128 *v0;
  __int128 v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  uint64_t v9;
  _OWORD v10[2];
  _OWORD v11[2];
  uint64_t (*v12)(_QWORD);
  uint64_t v13;
  uint64_t (*(*v14)@<X0>(void *@<X0>, _QWORD *@<X8>))();
  uint64_t v15;
  uint64_t (*v16)@<X0>(_QWORD *@<X0>, uint64_t@<X8>);
  uint64_t v17;
  _OWORD v18[2];
  _BYTE v19[25];
  char v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;

  v1 = v0[1];
  v21 = *v0;
  v22 = v1;
  v23 = v0[2];
  v24 = *((_QWORD *)v0 + 6);
  v2 = v1;
  v3 = BYTE8(v1);
  sub_20E45EBF4((uint64_t)&v21);
  sub_20E39CFAC(v2, v3);
  v4 = sub_20E45CF28(v2, v3);
  sub_20E39CED8(v2, v3);
  sub_20E45EC54((uint64_t)&v21);
  if ((v4 & 1) != 0)
  {
    sub_20E45EBF4((uint64_t)&v21);
    type metadata accessor for _LocalizerOwner();
    sub_20E40B978();
    sub_20E4A3ADC();
    sub_20E45EC54((uint64_t)&v21);
    swift_getKeyPath();
    sub_20E4A3AF4();
    swift_release();
    swift_release();
    v5 = swift_allocObject();
    v6 = v22;
    *(_OWORD *)(v5 + 16) = v21;
    *(_OWORD *)(v5 + 32) = v6;
    *(_OWORD *)(v5 + 48) = v23;
    v7 = *(_OWORD *)v19;
    v10[0] = v18[0];
    v10[1] = v18[1];
    *(_QWORD *)(v5 + 64) = v24;
    v11[0] = v7;
    *(_OWORD *)((char *)v11 + 9) = *(_OWORD *)&v19[9];
    v12 = nullsub_1;
    v13 = 0;
    v14 = sub_20E45ECB4;
    v15 = 0;
    v16 = sub_20E45EF0C;
    v17 = v5;
    sub_20E3A5E20((uint64_t)v10, (uint64_t)v18, &qword_254A1B7C8);
    v20 = 0;
    sub_20E45EBF4((uint64_t)&v21);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254A1B7C8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254A18D00);
    sub_20E39D010(&qword_254A1B7D0, &qword_254A1B7C8, (uint64_t)&unk_20E4AF6E0);
    sub_20E39D010((unint64_t *)&qword_254A18D08, &qword_254A18D00, (uint64_t)&protocol conformance descriptor for _RequirementFailureView<A, B>);
    sub_20E4A3DF4();
    return sub_20E39D1F8((uint64_t)v10, &qword_254A1B7C8);
  }
  else
  {
    sub_20E3C3948();
    sub_20E4A41C0();
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = 0xD000000000000022;
    *(_QWORD *)(v9 + 24) = 0x800000020E4CBA20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254A1B7C8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254A18D00);
    sub_20E39D010(&qword_254A1B7D0, &qword_254A1B7C8, (uint64_t)&unk_20E4AF6E0);
    sub_20E39D010((unint64_t *)&qword_254A18D08, &qword_254A18D00, (uint64_t)&protocol conformance descriptor for _RequirementFailureView<A, B>);
    return sub_20E4A3DF4();
  }
}

uint64_t sub_20E45EBF4(uint64_t a1)
{
  uint64_t v2;
  char v3;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_BYTE *)(a1 + 24);
  swift_retain();
  sub_20E39CFAC(v2, v3);
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_20E45EC54(uint64_t a1)
{
  uint64_t v2;
  char v3;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_BYTE *)(a1 + 24);
  swift_release();
  sub_20E39CED8(v2, v3);
  swift_bridgeObjectRelease();
  swift_release();
  return a1;
}

uint64_t (*sub_20E45ECB4@<X0>(void *a1@<X0>, _QWORD *a2@<X8>))()
{
  id v4;
  uint64_t (*result)();
  uint64_t v6;

  v4 = a1;
  result = _taskRetry(for:)(a1);
  *a2 = a1;
  a2[1] = result;
  a2[2] = v6;
  return result;
}

uint64_t sub_20E45ECE8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(_QWORD *);
  uint64_t v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;

  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A3E0);
  MEMORY[0x24BDAC7A8](v21);
  v7 = (uint64_t *)((char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = sub_20E4A33BC();
  v8 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *(_OWORD *)(a2 + 32);
  v23 = *(_QWORD *)(a2 + 48);
  v11 = (uint64_t (*)(_QWORD *))v22;
  sub_20E45F868((uint64_t)&v22);
  v19 = v11(a1);
  v13 = v12;
  sub_20E45F89C((uint64_t)&v22);
  KeyPath = swift_getKeyPath();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20E4A5AC8();
  v15 = v20;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))((char *)v7 + *(int *)(v21 + 28), v10, v20);
  *v7 = KeyPath;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1B7F0);
  sub_20E3A5E20((uint64_t)v7, a3 + *(int *)(v16 + 36), &qword_254A1A3E0);
  *(_QWORD *)a3 = v19;
  *(_QWORD *)(a3 + 8) = v13;
  *(_BYTE *)(a3 + 16) = 0;
  *(_QWORD *)(a3 + 24) = MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRetain();
  sub_20E39D1F8((uint64_t)v7, &qword_254A1A3E0);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v15);
  return swift_bridgeObjectRelease();
}

uint64_t sub_20E45EEA0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_20E45EECC()
{
  uint64_t v0;

  swift_release();
  sub_20E39CED8(*(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_20E45EF0C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_20E45ECE8(a1, v2 + 16, a2);
}

uint64_t sub_20E45EF14()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for LocalizedText(uint64_t a1)
{
  swift_release();
  sub_20E39CED8(*(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LocalizedText(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  swift_retain();
  sub_20E39CFAC(v5, v6);
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LocalizedText(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 24);
  sub_20E39CFAC(v4, v5);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = v5;
  sub_20E39CED8(v6, v7);
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for LocalizedText(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  char v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_BYTE *)(a1 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = v4;
  sub_20E39CED8(v5, v6);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LocalizedText(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LocalizedText(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for LocalizedText()
{
  return &type metadata for LocalizedText;
}

unint64_t sub_20E45F18C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254A1B7D8;
  if (!qword_254A1B7D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1B7E0);
    v2[0] = sub_20E39D010(&qword_254A1B7D0, &qword_254A1B7C8, (uint64_t)&unk_20E4AF6E0);
    v2[1] = sub_20E39D010((unint64_t *)&qword_254A18D08, &qword_254A18D00, (uint64_t)&protocol conformance descriptor for _RequirementFailureView<A, B>);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254A1B7D8);
  }
  return result;
}

uint64_t sub_20E45F228(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_20E45F2F8(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_20E3BB3A0((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_20E3BB3A0((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_20E45F2F8(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_20E4A6104();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_20E45F4B0(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_20E4A61F4();
  if (!v8)
  {
    sub_20E4A6284();
    __break(1u);
LABEL_17:
    result = sub_20E4A62D8();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_20E45F4B0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_20E45F544(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_20E45F71C(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_20E45F71C(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_20E45F544(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_20E45F6B8(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_20E4A61AC();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_20E4A6284();
      __break(1u);
LABEL_10:
      v2 = sub_20E4A5C78();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    sub_20E4A62D8();
    __break(1u);
LABEL_14:
    result = sub_20E4A6284();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

_QWORD *sub_20E45F6B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1B7E8);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_20E45F71C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254A1B7E8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_20E4A62D8();
  __break(1u);
  return result;
}

uint64_t sub_20E45F868(uint64_t a1)
{
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_20E45F89C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_release();
  return a1;
}

uint64_t sub_20E45F8D4(uint64_t a1)
{
  sub_20E409200(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  return a1;
}

uint64_t sub_20E45F908(uint64_t a1)
{
  sub_20E427CBC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
  return a1;
}

uint64_t IntentView<>.pageResourceMetrics()(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v10[8];
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 48);
  KeyPath = swift_getKeyPath();
  v5 = swift_getKeyPath();
  v10[0] = 0;
  v11 = KeyPath;
  v12 = 0;
  v13 = v5;
  v14 = 0;
  v7 = type metadata accessor for PageResourceMetricsViewModifier(0, v2, v3, v6);
  v8 = MEMORY[0x212BBDF90](&protocol conformance descriptor for IntentView<A, B, C, D>, a1);
  MEMORY[0x212BBBA70](v10, a1, v7, v8);
  j__swift_release(KeyPath, 0);
  return j__swift_release(v5, 0);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v10[8];
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 48);
  KeyPath = swift_getKeyPath();
  v5 = swift_getKeyPath();
  v10[0] = 0;
  v11 = KeyPath;
  v12 = 0;
  v13 = v5;
  v14 = 0;
  v7 = type metadata accessor for PageResourceMetricsViewModifier(0, v2, v3, v6);
  v8 = MEMORY[0x212BBDF90](&protocol conformance descriptor for IntentView<A, B, C, D>, a1);
  MEMORY[0x212BBBA70](v10, a1, v7, v8);
  j__swift_release(KeyPath, 0);
  return j__swift_release(v5, 0);
}

uint64_t type metadata accessor for PageResourceMetricsViewModifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PageResourceMetricsViewModifier);
}

uint64_t sub_20E45FA28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[2];
  char v16[8];
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  KeyPath = swift_getKeyPath();
  v9 = swift_getKeyPath();
  v16[0] = 1;
  v17 = KeyPath;
  v18 = 0;
  v19 = v9;
  v20 = 0;
  v11 = type metadata accessor for PageResourceMetricsViewModifier(0, AssociatedTypeWitness, AssociatedConformanceWitness, v10);
  v12 = *(_QWORD *)(a3 + 8);
  v15[0] = a2;
  v15[1] = v12;
  v13 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], a1, v15);
  MEMORY[0x212BBBA70](v16, a1, v11, v13);
  j__swift_release(KeyPath, 0);
  return j__swift_release(v9, 0);
}

uint64_t ModifiedContent<>.pageResourceMetrics()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[2];
  char v16[8];
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  KeyPath = swift_getKeyPath();
  v9 = swift_getKeyPath();
  v16[0] = 1;
  v17 = KeyPath;
  v18 = 0;
  v19 = v9;
  v20 = 0;
  v11 = type metadata accessor for PageResourceMetricsViewModifier(0, AssociatedTypeWitness, AssociatedConformanceWitness, v10);
  v12 = *(_QWORD *)(a3 + 8);
  v15[0] = a2;
  v15[1] = v12;
  v13 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], a1, v15);
  MEMORY[0x212BBBA70](v16, a1, v11, v13);
  j__swift_release(KeyPath, 0);
  return j__swift_release(v9, 0);
}

void get_witness_table_9JetEngine11IntentModelRz7SwiftUI4ViewR_AcDR0_AcDR1_AA05ShelfD010ReturnTypeRpzr2_lAC15ModifiedContentVy01_ab1_eF00cG0Vyxq_q0_q1_GAJ019PageResourceMetricsG8Modifier33_2290306F402D82832DE0DC1062434EFALLVyxGGAcDHPAmcDHPyHC_AqC0gP0HPyHCHCTm()
{
  type metadata accessor for IntentView();
}

uint64_t sub_20E45FDA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[16];

  v5 = type metadata accessor for PageResourceMetricsViewModifier(255, v9, v8, a4);
  v6 = sub_20E4A39D4();
  v10[0] = MEMORY[0x212BBDF90](&protocol conformance descriptor for IntentView<A, B, C, D>, a1);
  v10[1] = MEMORY[0x212BBDF90](&unk_20E4AF188, v5);
  return MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v6, v10);
}

uint64_t get_witness_table_7SwiftUI4ViewRz011_JetEngine_aB0018_IntentDispatchingC8ModifierR_0dE010ShelfModel5_What_10ReturnTypeRP_r0_lAA15ModifiedContentVyAKyxq_GAC019PageResourceMetricscH033_2290306F402D82832DE0DC1062434EFALLVyAGQy_GGAaBHPAlaBHPxAaBHD1__q_AcDHD2_AA0cH0HI1_HC_AqaSHPyHCHCTm(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[2];
  _QWORD v13[2];

  v2 = *(_QWORD *)(a1 + 16);
  v1 = *(_QWORD *)(a1 + 24);
  v3 = sub_20E4A39D4();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v7 = type metadata accessor for PageResourceMetricsViewModifier(255, AssociatedTypeWitness, AssociatedConformanceWitness, v6);
  v8 = sub_20E4A39D4();
  v9 = *(_QWORD *)(v1 + 8);
  v13[0] = v2;
  v13[1] = v9;
  v10 = MEMORY[0x24BDED308];
  v12[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v3, v13);
  v12[1] = MEMORY[0x212BBDF90](&unk_20E4AF188, v7);
  return MEMORY[0x212BBDF90](v10, v8, v12);
}

uint64_t sub_20E45FF28(uint64_t a1)
{
  j__swift_release(*(_QWORD *)(a1 + 8), *(unsigned __int8 *)(a1 + 16));
  return j__swift_release(*(_QWORD *)(a1 + 24), *(unsigned __int8 *)(a1 + 32));
}

uint64_t sub_20E45FF58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  char v5;
  uint64_t v6;

  v2 = a2;
  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  j__swift_retain(v4);
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  v6 = *(_QWORD *)(v2 + 24);
  LOBYTE(v2) = *(_BYTE *)(v2 + 32);
  j__swift_retain(v6);
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v2;
  return a1;
}

uint64_t sub_20E45FFC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = a2;
  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  j__swift_retain(v4);
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(unsigned __int8 *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  j__swift_release(v6, v7);
  v8 = *(_QWORD *)(v2 + 24);
  LOBYTE(v2) = *(_BYTE *)(v2 + 32);
  j__swift_retain(v8);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(unsigned __int8 *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = v8;
  *(_BYTE *)(a1 + 32) = v2;
  j__swift_release(v9, v10);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_20E46005C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(unsigned __int8 *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  j__swift_release(v6, v7);
  v8 = *(_BYTE *)(a2 + 32);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(unsigned __int8 *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = v8;
  j__swift_release(v9, v10);
  return a1;
}

uint64_t sub_20E4600C0(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[33])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t sub_20E460114(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

uint64_t sub_20E46015C()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_20E460190()
{
  uint64_t v0;

  MEMORY[0x212BBDF90](&unk_20E4AF188);
  v0 = sub_20E4A3EA8();
  MEMORY[0x212BBDF90](MEMORY[0x24BDEFB78], v0);
  type metadata accessor for _RequirementFailureView();
}

uint64_t sub_20E460220(uint64_t a1)
{
  uint64_t v1;
  unsigned __int8 *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  void (*v84)(uint64_t, uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _BYTE v100[96];

  *(_QWORD *)(v4 - 576) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v4 - 552) = &v100[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  *(_QWORD *)(v4 - 520) = &v100[-v8];
  *(_QWORD *)(v4 - 560) = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v9);
  *(_QWORD *)(v4 - 568) = &v100[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v11);
  *(_QWORD *)(v4 - 512) = &v100[-v12];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19EC0);
  v13 = sub_20E4A39D4();
  v14 = *(_QWORD *)(v1 + 16);
  v15 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)(v4 - 504) = v14;
  *(_QWORD *)(v4 - 496) = v15;
  type metadata accessor for _IntentProgress(255, v14, v15, v16);
  swift_getFunctionTypeMetadata1();
  sub_20E4A60E0();
  *(_QWORD *)(v4 - 352) = sub_20E4A3FF8();
  v17 = sub_20E4A39D4();
  *(_QWORD *)(v4 - 360) = v3;
  v18 = sub_20E4A3E00();
  *(_QWORD *)(v4 - 432) = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  *(_QWORD *)(v4 - 440) = &v100[-v19];
  v20 = sub_20E4A4A24();
  *(_QWORD *)(v4 - 528) = v20;
  *(_QWORD *)(v4 - 536) = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v22 = &v100[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v23 = sub_20E4A55F4();
  *(_QWORD *)(v4 - 544) = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v25 = &v100[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v26);
  v28 = &v100[-v27];
  *(_QWORD *)(v4 - 416) = v13;
  *(_QWORD *)(v4 - 480) = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v29);
  *(_QWORD *)(v4 - 488) = &v100[-v30];
  *(_QWORD *)(v4 - 376) = v17;
  *(_QWORD *)(v4 - 464) = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v31);
  *(_QWORD *)(v4 - 456) = &v100[-((v32 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v33);
  *(_QWORD *)(v4 - 472) = &v100[-v34];
  MEMORY[0x24BDAC7A8](v35);
  *(_QWORD *)(v4 - 448) = &v100[-v36];
  *(_QWORD *)(v4 - 344) = v18;
  *(_QWORD *)(v4 - 408) = a1;
  v37 = sub_20E4A3E00();
  *(_QWORD *)(v4 - 392) = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  *(_QWORD *)(v4 - 400) = &v100[-v38];
  v39 = *v2;
  v40 = *((_QWORD *)v2 + 1);
  v41 = v2[16];
  v42 = *((_QWORD *)v2 + 3);
  v43 = v2[32];
  j__swift_retain(v40);
  v44 = sub_20E39DC80(v40, v41);
  v45 = v41;
  v46 = v44;
  j__swift_release(v40, v45);
  *(_QWORD *)(v4 - 384) = v37;
  if (v46)
  {
    swift_getKeyPath();
    j__swift_retain(v42);
    sub_20E45D0E0(v42, v43, (_QWORD *)(v4 - 120));
    j__swift_release(v42, v43);
    if (*(_QWORD *)(v4 - 120))
    {
      sub_20E4A5678();
      v47 = *(_QWORD *)(v4 - 544);
      (*(void (**)(_BYTE *, _QWORD, uint64_t))(v47 + 104))(v28, *MEMORY[0x24BE5DAD8], v23);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v47 + 16))(v25, v28, v23);
      swift_retain();
      sub_20E4A4A00();
      v48 = sub_20E4A4F10();
      (*(void (**)(_BYTE *, _QWORD))(*(_QWORD *)(v4 - 536) + 8))(v22, *(_QWORD *)(v4 - 528));
      swift_release();
      (*(void (**)(_BYTE *, uint64_t))(v47 + 8))(v28, v23);
      swift_release();
    }
    else
    {
      v48 = 0;
    }
    v70 = *(_QWORD *)(v4 - 336);
    v71 = *(_QWORD *)(v4 - 496);
    v72 = *(_QWORD *)(v4 - 504);
    *(_QWORD *)(v4 - 120) = v48;
    v73 = *(_QWORD *)(v4 - 488);
    sub_20E4A4250();
    swift_release();
    swift_release();
    v74 = (_QWORD *)swift_allocObject();
    v74[2] = v72;
    v74[3] = v71;
    v74[4] = v46;
    v75 = sub_20E460FA8();
    *(_QWORD *)(v4 - 296) = v70;
    *(_QWORD *)(v4 - 288) = v75;
    swift_retain_n();
    v76 = MEMORY[0x24BDED308];
    v77 = *(_QWORD *)(v4 - 416);
    v78 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v77, v4 - 296);
    v79 = *(_QWORD *)(v4 - 472);
    sub_20E3FE6FC(v72, (uint64_t)&unk_254A1B888, (uint64_t)v74, v77, v72, v78, v71);
    swift_release();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 480) + 8))(v73, v77);
    v80 = MEMORY[0x212BBDF90](MEMORY[0x24BDF1028], *(_QWORD *)(v4 - 352));
    *(_QWORD *)(v4 - 312) = v78;
    *(_QWORD *)(v4 - 304) = v80;
    v81 = v76;
    v62 = *(_QWORD *)(v4 - 376);
    v82 = MEMORY[0x212BBDF90](v81, v62, v4 - 312);
    v83 = *(_QWORD **)(v4 - 448);
    sub_20E39D614(v83, v79, v62, v82);
    v84 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 464) + 8);
    v84(v79, v62);
    v85 = *(_QWORD *)(v4 - 456);
    sub_20E39D618((uint64_t)v83, v62, v85);
    v86 = *(_QWORD *)(v4 - 440);
    sub_20E3DC6B0(v85, v62);
    v84(v85, v62);
    *(_QWORD *)(v4 - 328) = v82;
    *(_QWORD *)(v4 - 320) = *(_QWORD *)(v4 - 336);
    v87 = *(_QWORD *)(v4 - 344);
    MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v87, v4 - 328);
    v52 = *(_QWORD *)(v4 - 408);
    MEMORY[0x212BBDF90](&protocol conformance descriptor for _RequirementFailureView<A, B>, v52);
    v67 = *(_QWORD *)(v4 - 400);
    sub_20E3DC6B0(v86, v87);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 432) + 8))(v86, v87);
    v88 = v83;
    v53 = v77;
    v51 = *(_QWORD *)(v4 - 336);
    v84((uint64_t)v88, v62);
    v89 = *(_QWORD *)(v4 - 392);
    v69 = *(_QWORD *)(v4 - 368);
  }
  else
  {
    v49 = *(_QWORD *)(v4 - 568);
    v50 = *(_QWORD *)(v4 - 552);
    v51 = *(_QWORD *)(v4 - 336);
    v52 = *(_QWORD *)(v4 - 408);
    v53 = *(_QWORD *)(v4 - 416);
    v54 = *(_QWORD *)(v4 - 360);
    v55 = *(_QWORD *)(v4 - 512);
    v56 = *(_QWORD *)(v4 - 560);
    if (!v39)
    {
      (*(void (**)(_QWORD, _QWORD, _QWORD))(v56 + 16))(*(_QWORD *)(v4 - 512), *(_QWORD *)(v4 - 424), *(_QWORD *)(v4 - 360));
      _RequirementFailureView.init<>(_:_:)(v55, 0xD000000000000022, 0x800000020E4CD4A0, v54, v50);
    }
    sub_20E39D614(*(_QWORD **)(v4 - 512), *(_QWORD *)(v4 - 424), *(_QWORD *)(v4 - 360), *(_QWORD *)(v4 - 336));
    v57 = v49;
    sub_20E39D618(v55, v54, v49);
    v58 = sub_20E460FA8();
    *(_QWORD *)(v4 - 248) = v51;
    *(_QWORD *)(v4 - 240) = v58;
    v59 = MEMORY[0x24BDED308];
    v60 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v53, v4 - 248);
    v61 = MEMORY[0x212BBDF90](MEMORY[0x24BDF1028], *(_QWORD *)(v4 - 352));
    *(_QWORD *)(v4 - 264) = v60;
    *(_QWORD *)(v4 - 256) = v61;
    v62 = *(_QWORD *)(v4 - 376);
    v63 = MEMORY[0x212BBDF90](v59, v62, v4 - 264);
    v64 = *(_QWORD *)(v4 - 440);
    sub_20E39CBE0(v57, v62, v54);
    v65 = *(void (**)(uint64_t, uint64_t))(v56 + 8);
    v65(v57, v54);
    *(_QWORD *)(v4 - 280) = v63;
    *(_QWORD *)(v4 - 272) = v51;
    v66 = *(_QWORD *)(v4 - 344);
    MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v66, v4 - 280);
    MEMORY[0x212BBDF90](&protocol conformance descriptor for _RequirementFailureView<A, B>, v52);
    v67 = *(_QWORD *)(v4 - 400);
    sub_20E3DC6B0(v64, v66);
    v68 = v64;
    v69 = *(_QWORD *)(v4 - 368);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 432) + 8))(v68, v66);
    v65(*(_QWORD *)(v4 - 512), v54);
    v89 = *(_QWORD *)(v4 - 392);
  }
  v90 = sub_20E460FA8();
  *(_QWORD *)(v4 - 184) = v51;
  *(_QWORD *)(v4 - 176) = v90;
  v91 = MEMORY[0x24BDED308];
  v92 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v53, v4 - 184);
  v93 = MEMORY[0x212BBDF90](MEMORY[0x24BDF1028], *(_QWORD *)(v4 - 352));
  *(_QWORD *)(v4 - 200) = v92;
  *(_QWORD *)(v4 - 192) = v93;
  *(_QWORD *)(v4 - 216) = MEMORY[0x212BBDF90](v91, v62, v4 - 200);
  *(_QWORD *)(v4 - 208) = v51;
  v94 = MEMORY[0x24BDEF3E0];
  v95 = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], *(_QWORD *)(v4 - 344), v4 - 216);
  v96 = MEMORY[0x212BBDF90](&protocol conformance descriptor for _RequirementFailureView<A, B>, v52);
  *(_QWORD *)(v4 - 232) = v95;
  *(_QWORD *)(v4 - 224) = v96;
  v97 = v94;
  v98 = *(_QWORD *)(v4 - 384);
  MEMORY[0x212BBDF90](v97, v98, v4 - 232);
  sub_20E39D618(v67, v98, v69);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v89 + 8))(v67, v98);
}

uint64_t sub_20E460D5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4[2] = a1;
  v4[3] = a2;
  v7 = sub_20E4A563C();
  v4[4] = v7;
  v4[5] = *(_QWORD *)(v7 - 8);
  v4[6] = swift_task_alloc();
  v8 = sub_20E4A5648();
  v4[7] = v8;
  v4[8] = *(_QWORD *)(v8 - 8);
  v4[9] = swift_task_alloc();
  v10 = type metadata accessor for _IntentProgress(0, a3, a4, v9);
  v4[10] = v10;
  v4[11] = *(_QWORD *)(v10 - 8);
  v4[12] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20E460E1C()
{
  uint64_t v0;
  int EnumCaseMultiPayload;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 16))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 80));
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v3 = *(_QWORD *)(v0 + 40);
      v2 = *(_QWORD *)(v0 + 48);
      v4 = *(_QWORD *)(v0 + 32);
      v5 = **(void ***)(v0 + 96);
      *(_QWORD *)v2 = v5;
      *(_BYTE *)(v2 + 8) = 1;
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v2, *MEMORY[0x24BE5DB30], v4);
      v6 = v5;
      sub_20E4A566C();

      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
    }
    else
    {
      v14 = *(_QWORD *)(v0 + 64);
      v13 = *(_BYTE **)(v0 + 72);
      v15 = *(_QWORD *)(v0 + 56);
      *v13 = 1;
      (*(void (**)(_BYTE *, _QWORD, uint64_t))(v14 + 104))(v13, *MEMORY[0x24BE5DB58], v15);
      sub_20E4A5684();
      (*(void (**)(_BYTE *, uint64_t))(v14 + 8))(v13, v15);
    }
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 88);
    v7 = *(_QWORD *)(v0 + 96);
    v9 = *(_QWORD *)(v0 + 80);
    v11 = *(_QWORD *)(v0 + 40);
    v10 = *(_BYTE **)(v0 + 48);
    v12 = *(_QWORD *)(v0 + 32);
    *v10 = 1;
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v11 + 104))(v10, *MEMORY[0x24BE5DB40], v12);
    sub_20E4A566C();
    (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v10, v12);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_20E460FA8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254A19ED8;
  if (!qword_254A19ED8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19EC0);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDF1028], v1);
    atomic_store(result, &qword_254A19ED8);
  }
  return result;
}

uint64_t sub_20E460FFC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E461020(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_20E3B4E08;
  return sub_20E460D5C(a1, v6, v4, v5);
}

void sub_20E461090(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *a1;
  v5 = a1[1];
  v6 = type metadata accessor for PageResourceMetricsViewModifier(255, *a1, v5, a4);
  MEMORY[0x212BBDF90](&unk_20E4AF188, v6);
  v7 = sub_20E4A3EA8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19EC0);
  sub_20E4A39D4();
  type metadata accessor for _IntentProgress(255, v4, v5, v8);
  swift_getFunctionTypeMetadata1();
  sub_20E4A60E0();
  sub_20E4A3FF8();
  sub_20E4A39D4();
  sub_20E4A3E00();
  MEMORY[0x212BBDF90](MEMORY[0x24BDEFB78], v7);
  type metadata accessor for _RequirementFailureView();
}

uint64_t sub_20E4611B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[2];
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[2];
  _QWORD v15[16];

  v7 = sub_20E4A3E00();
  v15[0] = v5;
  v15[1] = sub_20E460FA8();
  v8 = MEMORY[0x24BDED308];
  v14[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v1, v15);
  v14[1] = MEMORY[0x212BBDF90](MEMORY[0x24BDF1028], v4);
  v12 = MEMORY[0x212BBDF90](v8, v3, v14);
  v13 = v5;
  v9 = MEMORY[0x24BDEF3E0];
  v11[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v2, &v12);
  v11[1] = MEMORY[0x212BBDF90](&protocol conformance descriptor for _RequirementFailureView<A, B>, a1);
  return MEMORY[0x212BBDF90](v9, v7, v11);
}

uint64_t sub_20E461270(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;

  v7 = *(_QWORD *)(a3 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](a1);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 24))(v11, v10);
  MEMORY[0x24BDAC7A8](v12);
  v13 = (uint64_t *)((char *)&v15 - ((v8 + 39) & 0xFFFFFFFFFFFFFFF0));
  *v13 = a2;
  v13[1] = a3;
  v13[2] = a4;
  (*(void (**)(_QWORD *, char *, uint64_t))(v7 + 32))(v13 + 3, v9, a3);
  swift_getKeyPath();
  return sub_20E4A36D4();
}

uint64_t sub_20E46134C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  double v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  _QWORD *v18;
  uint64_t v20;

  v10 = *(_QWORD *)(a4 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  v12 = MEMORY[0x24BDAC7A8](a1);
  v13 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (*(uint64_t (**)(uint64_t, uint64_t, double))(v14 + 24))(v15, v14, v12);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v18 = (uint64_t *)((char *)&v20 - ((v11 + 47) & 0xFFFFFFFFFFFFFFF0));
  *v18 = a3;
  v18[1] = a4;
  v18[2] = a5;
  v18[3] = a6;
  (*(void (**)(_QWORD *, char *, uint64_t, double))(v10 + 32))(v18 + 4, v13, a4, v17);
  swift_getKeyPath();
  sub_20E4A4250();
  return swift_release();
}

uint64_t sub_20E461458()
{
  return sub_20E4A3C08();
}

uint64_t sub_20E461464()
{
  return sub_20E4A641C();
}

uint64_t sub_20E461488()
{
  return sub_20E461458();
}

uint64_t sub_20E4614BC(uint64_t a1)
{
  return sub_20E461660(a1);
}

unint64_t sub_20E4614E8(uint64_t a1)
{
  return ((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
}

uint64_t sub_20E461510(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + a1 - 24) - 8) + 8))();
}

__n128 sub_20E461524(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 result;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + a1 - 24) - 8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  v6 = (*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = a1 + v6;
  v8 = a2 + v6;
  result = *(__n128 *)(v7 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v7;
  *(__n128 *)(v8 + 16) = result;
  return result;
}

uint64_t sub_20E461584()
{
  return sub_20E4A5C0C() & 1;
}

uint64_t sub_20E4615C8()
{
  return sub_20E4A5BB8();
}

__n128 sub_20E4615FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 result;

  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 8) - 8);
  v5 = *(_QWORD *)(v4 + 64);
  (*(void (**)(uint64_t, unint64_t))(v4 + 32))(a2, a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)));
  v6 = a2 + ((v5 + 7) & 0xFFFFFFFFFFFFFFF8);
  result = *(__n128 *)(a1 + 16);
  *(_OWORD *)v6 = *(_OWORD *)a1;
  *(__n128 *)(v6 + 16) = result;
  return result;
}

uint64_t sub_20E461660(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  double v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, double))(v4 + 16))((char *)&v7 - v5, a1, v3);
  return sub_20E4A3C14();
}

uint64_t sub_20E461708()
{
  return sub_20E461458();
}

uint64_t sub_20E461738(uint64_t a1)
{
  return sub_20E461660(a1);
}

unint64_t sub_20E461760(uint64_t a1)
{
  return ((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 24;
}

uint64_t sub_20E461788(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + a1 - 16) - 8) + 8))();
}

__n128 sub_20E46179C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  __n128 *v7;
  __n128 *v8;
  unint64_t v9;
  __n128 result;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + a1 - 16) - 8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  v6 = (*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (__n128 *)(a1 + v6);
  v8 = (__n128 *)(a2 + v6);
  v9 = v7[1].n128_u64[0];
  result = *v7;
  *v8 = *v7;
  v8[1].n128_u64[0] = v9;
  return result;
}

uint64_t sub_20E461804()
{
  return sub_20E4A5C0C() & 1;
}

uint64_t sub_20E461844()
{
  return sub_20E4A5BB8();
}

__n128 sub_20E461874(__n128 *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __n128 *v6;
  unint64_t v7;
  __n128 result;

  v4 = *(_QWORD *)(a1->n128_u64[1] - 8);
  v5 = *(_QWORD *)(v4 + 64);
  (*(void (**)(uint64_t, unint64_t))(v4 + 32))(a2, (unint64_t)a1->n128_u64+ ((*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)));
  v6 = (__n128 *)(a2 + ((v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  v7 = a1[1].n128_u64[0];
  result = *a1;
  *v6 = *a1;
  v6[1].n128_u64[0] = v7;
  return result;
}

void IntentResultView.init(_:empty:success:failure:)(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X7>, uint64_t a5@<X8>)
{
  uint64_t v7;

  type metadata accessor for IntentResult(255, a4, a2, a3);
  v7 = sub_20E4A4778();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a5, a1, v7);
  type metadata accessor for IntentResultView();
}

int *sub_20E461988(int *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v7 = (_QWORD *)(v6 + result[19]);
  *v7 = v5;
  v7[1] = v4;
  v8 = (_QWORD *)(v6 + result[20]);
  *v8 = v3;
  v8[1] = v2;
  v9 = (_QWORD *)(v6 + result[21]);
  *v9 = v1;
  v9[1] = v10;
  return result;
}

void type metadata accessor for IntentResultView()
{
  JUMPOUT(0x212BBDEE8);
}

uint64_t _IntentResultViewDefaultFailure.init(error:retry:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

void sub_20E4619EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for IntentResult(255, *(_QWORD *)(a1 + 16), a3, a4);
  sub_20E4A4778();
  JUMPOUT(0x212BBBCE0);
}

void IntentResultView.body.getter(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[13];
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v47 = a2;
  v3 = *(_QWORD *)(a1 + 24);
  v34[3] = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v34[5] = (char *)v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v34[4] = (char *)v34 - v6;
  v34[8] = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v34[6] = v8;
  v34[7] = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34[9] = *(_QWORD *)(*(_QWORD *)(v9 + 40) - 8);
  MEMORY[0x24BDAC7A8](v9);
  v34[10] = (char *)v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v34[11] = (char *)v34 - v12;
  v14 = *(_QWORD *)(v13 + 32);
  v40 = v15;
  v16 = sub_20E4A3E00();
  v42 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v41 = (char *)v34 - v17;
  v48 = v14;
  v38 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v37 = (char *)v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v39 = (char *)v34 - v21;
  v22 = *(_QWORD *)(a1 + 16);
  v35 = sub_20E4A60E0();
  v34[12] = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v25 = type metadata accessor for IntentResult(0, v22, v23, v24);
  MEMORY[0x24BDAC7A8](v25);
  MEMORY[0x24BDAC7A8](v26);
  MEMORY[0x24BDAC7A8](v27);
  v36 = (char *)v34 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = v16;
  v49 = v3;
  v29 = sub_20E4A3E00();
  v44 = *(_QWORD *)(v29 - 8);
  v45 = v29;
  MEMORY[0x24BDAC7A8](v29);
  v43 = (char *)v34 - v30;
  sub_20E4619EC(a1, v31, v32, v33);
}

uint64_t sub_20E461D38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  IntentResult.data.getter(v9, a3, a4, v6);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v11, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v7) == 1)
  {
    (*(void (**)(char *, _QWORD))(*(_QWORD *)(v12 - 304) + 8))(v6, *(_QWORD *)(v12 - 296));
    sub_20E4619EC(v8, v13, v14, v15);
  }
  *(_QWORD *)(v12 - 384) = v10;
  v16 = *(void (**)(uint64_t, char *, uint64_t))(v10 + 32);
  v17 = *(_QWORD *)(v12 - 288);
  *(_QWORD *)(v12 - 392) = v7;
  v16(v17, v6, v7);
  v18 = *(_QWORD *)(v12 - 280);
  (*(void (**)(uint64_t))(v5 + *(int *)(v8 + 80)))(v17);
  v19 = *(_QWORD *)(v8 + 56);
  v20 = *(_QWORD **)(v12 - 264);
  v21 = *(_QWORD *)(v12 - 184);
  sub_20E39D614(v20, v18, v21, v19);
  v22 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 272) + 8);
  v22(v18, v21);
  sub_20E39D618((uint64_t)v20, v21, v18);
  v23 = *(_QWORD *)(v8 + 64);
  v24 = *(_QWORD *)(v12 - 248);
  sub_20E3DC6B0(v18, v21);
  v22(v18, v21);
  *(_QWORD *)(v12 - 168) = v19;
  *(_QWORD *)(v12 - 160) = v23;
  v25 = *(_QWORD *)(v12 - 200);
  MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v25, v12 - 168);
  v26 = *(_QWORD *)(v8 + 48);
  v27 = *(_QWORD *)(v12 - 224);
  sub_20E3DC6B0(v24, v25);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 240) + 8))(v24, v25);
  v22((uint64_t)v20, v21);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v12 - 384) + 8))(v17, *(_QWORD *)(v12 - 392));
  *(_QWORD *)(v12 - 120) = v19;
  *(_QWORD *)(v12 - 112) = v23;
  v28 = MEMORY[0x24BDEF3E0];
  *(_QWORD *)(v12 - 136) = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v25, v12 - 120);
  *(_QWORD *)(v12 - 128) = v26;
  v29 = v28;
  v30 = *(_QWORD *)(v12 - 208);
  MEMORY[0x212BBDF90](v29, v30, v12 - 136);
  sub_20E39D618(v27, v30, *(_QWORD *)(v12 - 192));
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 216) + 8))(v27, v30);
}

uint64_t sub_20E462218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  v4 = type metadata accessor for IntentResult(0, a2, a3, a4);
  MEMORY[0x24BDAC7A8](v4);
  sub_20E4A4778();
  MEMORY[0x212BBBCE0]();
  IntentResult.invalidate(clearing:)(1);
  return sub_20E4A4730();
}

void sub_20E4622B8()
{
  type metadata accessor for IntentResultView();
}

uint64_t sub_20E4622F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id *v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int EnumCaseMultiPayload;
  uint64_t v10;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  swift_release();
  swift_release();
  type metadata accessor for IntentResult(255, v10, v3, v4);
  v5 = (id *)(v1 + ((v2 + 72) & ~v2) + *(int *)(sub_20E4A4778() + 32));
  type metadata accessor for IntentResult._State(0, v10, v6, v7);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {

  }
  else if (EnumCaseMultiPayload <= 1)
  {
    (*(void (**)(id *))(*(_QWORD *)(v10 - 8) + 8))(v5);
  }
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_20E4623FC()
{
  type metadata accessor for IntentResultView();
}

uint64_t sub_20E462444(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  return sub_20E462218(v2 + ((v5 + 72) & ~v5), v1, v3, v4);
}

uint64_t _IntentResultViewDefaultEmpty.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t KeyPath;
  unint64_t v21;
  int v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  unint64_t v26;

  v2 = sub_20E4A3C50();
  v23 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A191F8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v17 - v10;
  v24 = 0;
  sub_20E4A4640();
  v22 = v25;
  v21 = v26;
  KeyPath = swift_getKeyPath();
  v19 = swift_getKeyPath();
  v18 = swift_getKeyPath();
  v17 = swift_getKeyPath();
  sub_20E4A3C44();
  sub_20E4A48BC();
  sub_20E4A371C();
  if (sub_20E4A3710())
  {
    sub_20E4A48C8();
    swift_release();
  }
  swift_release();
  v12 = sub_20E462748();
  sub_20E4A3698();
  swift_release();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v4, v2);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v11, v5);
  v25 = v2;
  v26 = v12;
  swift_getOpaqueTypeConformance2();
  v13 = sub_20E4A37D0();
  result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  *(_QWORD *)a1 = sub_20E39C368;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  *(_BYTE *)(a1 + 24) = v22;
  v15 = KeyPath;
  *(_QWORD *)(a1 + 32) = v21;
  *(_QWORD *)(a1 + 40) = v15;
  *(_BYTE *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = v19;
  *(_BYTE *)(a1 + 64) = 0;
  v16 = v17;
  *(_QWORD *)(a1 + 72) = v18;
  *(_BYTE *)(a1 + 80) = 0;
  *(_QWORD *)(a1 + 88) = v16;
  *(_QWORD *)(a1 + 96) = sub_20E462734;
  *(_QWORD *)(a1 + 104) = 0;
  *(_QWORD *)(a1 + 112) = v13;
  return result;
}

_BYTE *sub_20E462734(_BYTE *result)
{
  if (*result == 3)
    *result = 0;
  return result;
}

unint64_t sub_20E462748()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254A19200;
  if (!qword_254A19200)
  {
    v1 = sub_20E4A3C50();
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDEE620], v1);
    atomic_store(result, (unint64_t *)&qword_254A19200);
  }
  return result;
}

uint64_t sub_20E462790@<X0>(uint64_t a1@<X8>)
{
  return _IntentResultViewDefaultEmpty.body.getter(a1);
}

uint64_t _IntentResultViewDefaultFailure.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t KeyPath;
  uint64_t *v11;
  uint64_t v13;

  v3 = __swift_instantiateConcreteTypeFromMangledName(qword_253ED1E68);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void **)v1;
  v7 = *(_QWORD *)(v1 + 8);
  v8 = *(_QWORD *)(v1 + 16);
  v9 = v6;
  swift_retain();
  ContentUnavailableView.init<>(error:retry:)(v6, v7, v8, (uint64_t)v5);
  KeyPath = swift_getKeyPath();
  sub_20E3D5E78((uint64_t)v5, a1);
  v11 = (uint64_t *)(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_254A1B890) + 36));
  *v11 = KeyPath;
  v11[1] = (uint64_t)sub_20E462888;
  v11[2] = 0;
  return sub_20E4628A0((uint64_t)v5);
}

_BYTE *sub_20E462888(_BYTE *result)
{
  if (*result == 3)
    *result = 2;
  return result;
}

uint64_t sub_20E4628A0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_253ED1E68);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20E4628E0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E462924()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E462934()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E462944@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t KeyPath;
  uint64_t *v11;
  uint64_t v13;

  v3 = __swift_instantiateConcreteTypeFromMangledName(qword_253ED1E68);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void **)v1;
  v7 = *(_QWORD *)(v1 + 8);
  v8 = *(_QWORD *)(v1 + 16);
  v9 = v6;
  swift_retain();
  ContentUnavailableView.init<>(error:retry:)(v6, v7, v8, (uint64_t)v5);
  KeyPath = swift_getKeyPath();
  sub_20E3D5E78((uint64_t)v5, a1);
  v11 = (uint64_t *)(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_254A1B890) + 36));
  *v11 = KeyPath;
  v11[1] = (uint64_t)sub_20E462888;
  v11[2] = 0;
  return sub_20E4628A0((uint64_t)v5);
}

uint64_t sub_20E462A20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v5;

  type metadata accessor for IntentResult(255, *(_QWORD *)(a1 + 16), a3, a4);
  result = sub_20E4A4778();
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_20E462AA8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t *v13;
  _QWORD *v14;
  _QWORD *v15;
  id *v16;
  unsigned int v17;
  uint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  id v21;
  id v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *__dst;

  v3 = *(_QWORD *)(a3 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_DWORD *)(v4 + 80);
  v6 = ~(unint64_t)(v5 & 0xF8) & 0xFFFFFFFFFFFFFFF8;
  v7 = ((v5 & 0xF8) + 23) & v6;
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v8 = 8;
  else
    v8 = *(_QWORD *)(v4 + 64);
  v9 = (v8 & 0xFFFFFFFFFFFFFFF8) + v7;
  v10 = *a2;
  *a1 = *a2;
  if ((v5 & 0x1000F8) != 0 || ((((v9 + 39) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v13 = (uint64_t *)(v10 + v7);
  }
  else
  {
    v13 = a1;
    v14 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFF8);
    v15 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v14 = *v15;
    __dst = (_QWORD *)(((unint64_t)v14 + 15) & v6);
    v16 = (id *)(((unint64_t)v15 + 15) & v6);
    v17 = *((unsigned __int8 *)v16 + v8);
    swift_retain();
    swift_retain();
    if (v17 >= 3)
    {
      if (v8 <= 3)
        v18 = v8;
      else
        v18 = 4;
      __asm { BR              X11 }
    }
    v19 = v9 + 16;
    if (v17 == 2)
    {
      v21 = *v16;
      v22 = *v16;
      v20 = __dst;
      *__dst = v21;
      *((_BYTE *)__dst + v8) = 2;
    }
    else if (v17 == 1)
    {
      v20 = __dst;
      (*(void (**)(_QWORD *, id *, uint64_t))(v4 + 16))(__dst, v16, v3);
      *((_BYTE *)__dst + v8) = 1;
    }
    else
    {
      v20 = __dst;
      (*(void (**)(_QWORD *, id *, uint64_t))(v4 + 16))(__dst, v16, v3);
      *((_BYTE *)__dst + v8) = 0;
    }
    *(_QWORD *)(((unint64_t)v20 + v8 + 8) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v16 + v8 + 8) & 0xFFFFFFFFFFFFF8);
    v23 = (_QWORD *)(((unint64_t)v13 + v19 + 7) & 0xFFFFFFFFFFFFFFF8);
    v24 = (_QWORD *)(((unint64_t)a2 + v19 + 7) & 0xFFFFFFFFFFFFFFF8);
    v25 = v24[1];
    *v23 = *v24;
    v23[1] = v25;
    v26 = (_QWORD *)(((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8);
    v27 = (_QWORD *)(((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFFFF8);
    v28 = v27[1];
    *v26 = *v27;
    v26[1] = v28;
    v29 = (_QWORD *)(((unint64_t)v26 + 23) & 0xFFFFFFFFFFFFFFF8);
    v30 = (_QWORD *)(((unint64_t)v27 + 23) & 0xFFFFFFFFFFFFFFF8);
    v31 = v30[1];
    *v29 = *v30;
    v29[1] = v31;
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v13;
}

uint64_t sub_20E462D18(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id *v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;

  v3 = a1 + 15;
  swift_release();
  swift_release();
  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 80) & 0xF8 | 7;
  v6 = (id *)(((v3 & 0xFFFFFFFFFFFFFFF8) + v5 + 8) & ~v5);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v7 = 8;
  else
    v7 = *(_QWORD *)(v4 + 64);
  v8 = *((unsigned __int8 *)v6 + v7);
  if (v8 >= 3)
  {
    if (v7 <= 3)
      v9 = v7;
    else
      v9 = 4;
    __asm { BR              X13 }
  }
  if (v8 == 2)

  else
    (*(void (**)(void))(v4 + 8))();
  swift_release();
  swift_release();
  return swift_release();
}

_QWORD *sub_20E462E64(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  id *v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  id v16;
  id v17;
  unint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;

  *a1 = *a2;
  v5 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v6 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v5 = *v6;
  v7 = *(_QWORD *)(a3 + 16);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_DWORD *)(v8 + 80) & 0xF8;
  v10 = v9 | 7;
  v9 += 15;
  v11 = (_QWORD *)(((unint64_t)v5 + v9) & ~v10);
  v12 = (id *)(((unint64_t)v6 + v9) & ~v10);
  if (*(_QWORD *)(v8 + 64) <= 8uLL)
    v13 = 8;
  else
    v13 = *(_QWORD *)(v8 + 64);
  v14 = *((unsigned __int8 *)v12 + v13);
  swift_retain();
  swift_retain();
  if (v14 >= 3)
  {
    if (v13 <= 3)
      v15 = v13;
    else
      v15 = 4;
    __asm { BR              X11 }
  }
  if (v14 == 2)
  {
    v16 = *v12;
    v17 = *v12;
    *v11 = v16;
    *((_BYTE *)v11 + v13) = 2;
  }
  else
  {
    (*(void (**)(_QWORD *, id *, uint64_t))(v8 + 16))(v11, v12, v7);
    *((_BYTE *)v11 + v13) = v14 == 1;
  }
  *(_QWORD *)(((unint64_t)v11 + v13 + 8) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v12 + v13 + 8) & 0xFFFFFFFFFFFFF8);
  v18 = (v13 & 0xFFFFFFFFFFFFFFF8) + ((v10 + 16) & ~v10) + 16;
  v19 = (_QWORD *)(((unint64_t)a1 + v18 + 7) & 0xFFFFFFFFFFFFFFF8);
  v20 = (_QWORD *)(((unint64_t)a2 + v18 + 7) & 0xFFFFFFFFFFFFFFF8);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  v22 = (_QWORD *)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8);
  v23 = (_QWORD *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  v25 = (uint64_t *)(((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8);
  v26 = *v25;
  v27 = v25[1];
  v28 = (_QWORD *)(((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v28 = v26;
  v28[1] = v27;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *sub_20E463090(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id *v14;
  id *v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  id v21;
  id v22;
  unint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;

  v6 = (unint64_t)a2 + 15;
  *a1 = *a2;
  v7 = (unint64_t)a1 + 15;
  swift_retain();
  swift_release();
  v8 = v7 & 0xFFFFFFFFFFFFFFF8;
  v9 = v6 & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v7 & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(v6 & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  v10 = *(_QWORD *)(a3 + 16);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_DWORD *)(v11 + 80) & 0xF8;
  v13 = v12 | 7;
  v12 += 15;
  v14 = (id *)((v12 + v8) & ~v13);
  v15 = (id *)((v12 + v9) & ~v13);
  if (*(_QWORD *)(v11 + 64) <= 8uLL)
    v16 = 8;
  else
    v16 = *(_QWORD *)(v11 + 64);
  if (v14 != v15)
  {
    v17 = *((unsigned __int8 *)v14 + v16);
    if (v17 >= 3)
    {
      if (v16 <= 3)
        v18 = v16;
      else
        v18 = 4;
      __asm { BR              X12 }
    }
    if (v17 == 2)

    else
      (*(void (**)(id *, uint64_t))(v11 + 8))(v14, v10);
    v19 = *((unsigned __int8 *)v15 + v16);
    if (v19 >= 3)
    {
      if (v16 <= 3)
        v20 = v16;
      else
        v20 = 4;
      __asm { BR              X12 }
    }
    if (v19 == 2)
    {
      v21 = *v15;
      v22 = *v15;
      *v14 = v21;
      *((_BYTE *)v14 + v16) = 2;
    }
    else if (v19 == 1)
    {
      (*(void (**)(id *, id *, uint64_t))(v11 + 16))(v14, v15, v10);
      *((_BYTE *)v14 + v16) = 1;
    }
    else
    {
      (*(void (**)(id *, id *, uint64_t))(v11 + 16))(v14, v15, v10);
      *((_BYTE *)v14 + v16) = 0;
    }
  }
  *(_QWORD *)((((unint64_t)v14 | 7) + v16 + 1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((((unint64_t)v15 | 7)
                                                                                         + v16
                                                                                         + 1) & 0xFFFFFFFFFFFFF8);
  v23 = ((v13 + 16) & ~v13) + (v16 & 0xFFFFFFFFFFFFFFF8) + 16;
  v24 = (_QWORD *)(((unint64_t)a1 + v23 + 7) & 0xFFFFFFFFFFFFFFF8);
  v25 = (_QWORD *)(((unint64_t)a2 + v23 + 7) & 0xFFFFFFFFFFFFFFF8);
  v26 = v25[1];
  *v24 = *v25;
  v24[1] = v26;
  swift_retain();
  swift_release();
  v27 = (_QWORD *)(((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFFFF8);
  v28 = (_QWORD *)(((unint64_t)v25 + 23) & 0xFFFFFFFFFFFFFFF8);
  v29 = v28[1];
  *v27 = *v28;
  v27[1] = v29;
  swift_retain();
  swift_release();
  v30 = (_QWORD *)(((unint64_t)v27 + 23) & 0xFFFFFFFFFFFFFFF8);
  v31 = (_QWORD *)(((unint64_t)v28 + 23) & 0xFFFFFFFFFFFFFFF8);
  v32 = v31[1];
  *v30 = *v31;
  v30[1] = v32;
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *sub_20E4633A0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  unint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  _OWORD *v18;
  _OWORD *v19;

  *a1 = *a2;
  v5 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v6 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v5 = *v6;
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 80) & 0xF8;
  v9 = v8 | 7;
  v8 += 15;
  v10 = (_QWORD *)(((unint64_t)v5 + v8) & ~v9);
  v11 = (_QWORD *)(((unint64_t)v6 + v8) & ~v9);
  if (*(_QWORD *)(v7 + 64) <= 8uLL)
    v12 = 8;
  else
    v12 = *(_QWORD *)(v7 + 64);
  v13 = *((unsigned __int8 *)v11 + v12);
  if (v13 >= 3)
  {
    if (v12 <= 3)
      v14 = v12;
    else
      v14 = 4;
    __asm { BR              X13 }
  }
  if (v13 == 2)
  {
    *v10 = *v11;
    *((_BYTE *)v10 + v12) = 2;
  }
  else if (v13 == 1)
  {
    (*(void (**)(_QWORD *, _QWORD *))(v7 + 32))(v10, v11);
    *((_BYTE *)v10 + v12) = 1;
  }
  else
  {
    (*(void (**)(_QWORD *, _QWORD *))(v7 + 32))(v10, v11);
    *((_BYTE *)v10 + v12) = 0;
  }
  *(_QWORD *)(((unint64_t)v10 + v12 + 8) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v11 + v12 + 8) & 0xFFFFFFFFFFFFF8);
  v15 = (v12 & 0xFFFFFFFFFFFFFFF8) + ((v9 + 16) & ~v9) + 16;
  v16 = (_OWORD *)(((unint64_t)a1 + v15 + 7) & 0xFFFFFFFFFFFFFFF8);
  v17 = (_OWORD *)(((unint64_t)a2 + v15 + 7) & 0xFFFFFFFFFFFFFFF8);
  *v16 = *v17;
  v18 = (_OWORD *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8);
  v19 = (_OWORD *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v18 = *v19;
  *(_OWORD *)(((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFF8);
  return a1;
}

_QWORD *sub_20E463584(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id *v14;
  unint64_t v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  unint64_t v21;
  _OWORD *v22;
  uint64_t v23;
  unint64_t v24;
  _OWORD *v25;

  v6 = (unint64_t)a2 + 15;
  *a1 = *a2;
  v7 = (unint64_t)a1 + 15;
  swift_release();
  v8 = v7 & 0xFFFFFFFFFFFFFFF8;
  v9 = v6 & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v7 & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(v6 & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  v10 = *(_QWORD *)(a3 + 16);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_DWORD *)(v11 + 80) & 0xF8;
  v13 = v12 | 7;
  v12 += 15;
  v14 = (id *)((v12 + v8) & ~v13);
  v15 = (v12 + v9) & ~v13;
  if (*(_QWORD *)(v11 + 64) <= 8uLL)
    v16 = 8;
  else
    v16 = *(_QWORD *)(v11 + 64);
  if (v14 != (id *)v15)
  {
    v17 = *((unsigned __int8 *)v14 + v16);
    if (v17 >= 3)
    {
      if (v16 <= 3)
        v18 = v16;
      else
        v18 = 4;
      __asm { BR              X12 }
    }
    if (v17 == 2)

    else
      (*(void (**)(id *, uint64_t))(v11 + 8))(v14, v10);
    v19 = *(unsigned __int8 *)(v15 + v16);
    if (v19 >= 3)
    {
      if (v16 <= 3)
        v20 = v16;
      else
        v20 = 4;
      __asm { BR              X12 }
    }
    if (v19 == 2)
    {
      *v14 = *(id *)v15;
      *((_BYTE *)v14 + v16) = 2;
    }
    else if (v19 == 1)
    {
      (*(void (**)(id *, unint64_t, uint64_t))(v11 + 32))(v14, v15, v10);
      *((_BYTE *)v14 + v16) = 1;
    }
    else
    {
      (*(void (**)(id *, unint64_t, uint64_t))(v11 + 32))(v14, v15, v10);
      *((_BYTE *)v14 + v16) = 0;
    }
  }
  *(_QWORD *)((((unint64_t)v14 | 7) + v16 + 1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((v15 | 7) + v16 + 1) & 0xFFFFFFFFFFFFF8);
  v21 = ((v13 + 16) & ~v13) + (v16 & 0xFFFFFFFFFFFFFFF8) + 16;
  v22 = (_OWORD *)(((unint64_t)a1 + v21 + 7) & 0xFFFFFFFFFFFFFFF8);
  v23 = (uint64_t)a2 + v21 + 7;
  v24 = (v23 & 0xFFFFFFFFFFFFFFF8) + 23;
  *v22 = *(_OWORD *)(v23 & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  v25 = (_OWORD *)(((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFFFF8);
  v24 &= 0xFFFFFFFFFFFFF8uLL;
  *v25 = *(_OWORD *)v24;
  swift_release();
  *(_OWORD *)(((unint64_t)v25 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v24 + 23) & 0xFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_20E46385C(_DWORD *a1, int a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  __int16 v7;
  unint64_t v8;
  uint64_t v9;
  unsigned int v10;
  int v11;
  int v12;
  int v13;
  int v14;

  v3 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v4 = *(_QWORD *)(v3 + 64);
  if (v4 <= 8)
    v4 = 8;
  if (!a2)
    return 0;
  if ((a2 & 0x80000000) == 0)
    goto LABEL_5;
  v7 = *(_DWORD *)(v3 + 80) & 0xF8;
  v8 = (((((v4 & 0xFFFFFFFFFFFFFFF8) + ((unsigned __int16)(v7 + 23) & (unsigned __int16)~v7 & 0x1F8) + 39) & 0xFFFFFFFFFFFFFFF8)
       + 23) & 0xFFFFFFFFFFFFFFF8)
     + 16;
  v9 = v8 & 0xFFFFFFF8;
  v10 = a2 - 2147483646;
  if ((v8 & 0xFFFFFFF8) != 0)
    v10 = 2;
  if (v10 >= 0x10000)
    v11 = 4;
  else
    v11 = 2;
  if (v10 < 0x100)
    v12 = 1;
  else
    v12 = v11;
  if (v12 == 4)
  {
    v13 = *(_DWORD *)((char *)a1 + v8);
    if (!v13)
      goto LABEL_5;
  }
  else if (v12 == 2)
  {
    v13 = *(unsigned __int16 *)((char *)a1 + v8);
    if (!v13)
      goto LABEL_5;
  }
  else
  {
    v13 = *((unsigned __int8 *)a1 + v8);
    if (!v13)
    {
LABEL_5:
      v5 = *(_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFF8);
      if (v5 >= 0xFFFFFFFF)
        LODWORD(v5) = -1;
      return (v5 + 1);
    }
  }
  v14 = v13 - 1;
  if (v9)
  {
    v14 = 0;
    LODWORD(v9) = *a1;
  }
  return (v9 | v14) ^ 0x80000000;
}

void sub_20E463950(unsigned int *a1, int a2, int a3, uint64_t a4)
{
  uint64_t v5;
  unint64_t v6;
  size_t v7;
  int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  if (v6 <= 8)
    v6 = 8;
  v7 = (((((v6 & 0xFFFFFFFFFFFFFFF8)
         + ((unsigned __int16)((*(_WORD *)(v5 + 80) & 0xF8) + 23) & (unsigned __int16)~(*(_WORD *)(v5 + 80) & 0xF8) & 0x1F8)
         + 39) & 0xFFFFFFFFFFFFFFF8)
       + 23) & 0xFFFFFFFFFFFFFFF8)
     + 16;
  if (a3 < 0)
  {
    v9 = a3 - 2147483646;
    if ((_DWORD)v7)
      v9 = 2;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v8 = 1;
    else
      v8 = v10;
    if ((a2 & 0x80000000) == 0)
LABEL_5:
      __asm { BR              X10 }
  }
  else
  {
    v8 = 0;
    if ((a2 & 0x80000000) == 0)
      goto LABEL_5;
  }
  if ((_DWORD)v7)
  {
    v11 = a2 ^ 0x80000000;
    bzero(a1, v7);
    *a1 = v11;
  }
  __asm { BR              X10 }
}

void sub_20E463A8C(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (!a2)
    JUMPOUT(0x20E463A78);
  JUMPOUT(0x20E463A68);
}

void sub_20E463A98()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x20E463A78);
}

void sub_20E463AA0()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x20E463A78);
}

ValueMetadata *type metadata accessor for _IntentResultViewDefaultEmpty()
{
  return &type metadata for _IntentResultViewDefaultEmpty;
}

ValueMetadata *type metadata accessor for _IntentResultViewDefaultFailure()
{
  return &type metadata for _IntentResultViewDefaultFailure;
}

uint64_t sub_20E463ACC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[2];
  __int128 v8;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = sub_20E4A3E00();
  v4 = sub_20E4A3E00();
  v8 = *(_OWORD *)(a1 + 40);
  v5 = MEMORY[0x24BDEF3E0];
  v7[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v3, &v8);
  v7[1] = v2;
  return MEMORY[0x212BBDF90](v5, v4, v7);
}

unint64_t sub_20E463B58()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254A1B918;
  if (!qword_254A1B918)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1B920);
    v2[0] = sub_20E463BDC();
    v2[1] = sub_20E39D010(&qword_254A192E8, &qword_254A192F0, MEMORY[0x24BDEFB48]);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254A1B918);
  }
  return result;
}

unint64_t sub_20E463BDC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254A1B928;
  if (!qword_254A1B928)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1B930);
    v2[0] = sub_20E39D010(&qword_254A19218, &qword_254A19208, (uint64_t)&protocol conformance descriptor for LoadingView<A>);
    v2[1] = sub_20E39D010(&qword_254A1B938, &qword_254A1B940, MEMORY[0x24BDF1248]);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254A1B928);
  }
  return result;
}

unint64_t sub_20E463C7C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254A1B948;
  if (!qword_254A1B948)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_254A1B890);
    v2[0] = sub_20E39D010(&qword_254A19560, qword_253ED1E68, (uint64_t)&protocol conformance descriptor for ContentUnavailableView<A, B, C>);
    v2[1] = sub_20E39D010(&qword_254A1B950, &qword_254A1B958, MEMORY[0x24BDF1248]);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254A1B948);
  }
  return result;
}

void sub_20E463D18(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  void (*v21)(uint64_t, uint64_t, uint64_t, double);
  uint64_t AssociatedConformanceWitness;
  void (*v23)(char *, uint64_t);
  void (*v24)(uint64_t *, _QWORD);
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  void (*v28)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t AssociatedTypeWitness;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v37 = a6;
  v38 = a7;
  v35 = a4;
  v36 = a5;
  v31 = *(_QWORD *)(a5 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v12 = sub_20E4A60E0();
  v29 = *(_QWORD *)(v12 - 8);
  v30 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v27 - v13;
  v15 = swift_getAssociatedTypeWitness();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)v27 - v19;
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t, double))(v16 + 16);
  v39 = a8;
  v21(a8, a1, v15, v18);
  v33 = a2;
  sub_20E4A5F3C();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v32 = a1;
  v27[1] = AssociatedConformanceWitness;
  LOBYTE(a2) = sub_20E4A5BE8();
  v23 = *(void (**)(char *, uint64_t))(v16 + 8);
  v23(v20, v15);
  v27[0] = v14;
  if ((a2 & 1) != 0)
  {
    sub_20E4A5BC4();
    v24 = (void (*)(uint64_t *, _QWORD))sub_20E4A5FC0();
    v25 = AssociatedTypeWitness;
    v26 = *(_QWORD *)(AssociatedTypeWitness - 8);
    (*(void (**)(char *))(v26 + 16))(v14);
    v24(&v40, 0);
    v23(v20, v15);
    v28 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56);
    v28(v14, 0, 1, v25);
    v40 = a3;
    v41 = v35;
    v42 = v36;
    v43 = v37;
    v44 = v38;
    type metadata accessor for ShelfCollection.Context();
  }
  v40 = a3;
  v41 = v35;
  v42 = v36;
  v43 = v37;
  v44 = v38;
  type metadata accessor for ShelfCollection.Context();
}

void sub_20E463F90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, uint64_t);

  v2 = *(_QWORD *)(v1 - 136) + *(int *)(a1 + 60);
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 - 176) - 8) + 56);
  *(_QWORD *)(v1 - 224) = v3;
  v3(v2, 1, 1);
  JUMPOUT(0x20E463FB8);
}

uint64_t sub_20E4640E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v2 - 216) + 32))(*(_QWORD *)(v2 - 136) + *(int *)(a1 + 64), v1, *(_QWORD *)(v2 - 208));
}

void sub_20E464148(uint64_t a1)
{
  uint64_t v1;

  (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v1 - 224))(*(_QWORD *)(v1 - 136) + *(int *)(a1 + 64), 1, 1, *(_QWORD *)(v1 - 176));
  JUMPOUT(0x20E464168);
}

uint64_t ShelfCollection.Context.shelfOffset.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a1, v1, AssociatedTypeWitness);
}

uint64_t ShelfCollection.Context.previousShelf.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 60);
  swift_getAssociatedTypeWitness();
  v5 = sub_20E4A60E0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t ShelfCollection.Context.nextShelf.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 64);
  swift_getAssociatedTypeWitness();
  v5 = sub_20E4A60E0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

void ShelfCollection.init(_:spacing:content:)(uint64_t a1@<X0>, uint64_t a2@<X5>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(a3, a1, a2);
  type metadata accessor for ShelfCollection();
}

uint64_t sub_20E464334(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  _QWORD *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;

  v8 = v6 + a1[15];
  *(_QWORD *)v8 = v4;
  *(_BYTE *)(v8 + 8) = v3 & 1;
  v9 = (_QWORD *)(v6 + a1[16]);
  *v9 = v11;
  v9[1] = v12;
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v5, v1);
  *(_QWORD *)(v6 + a1[17]) = MEMORY[0x24BEE4AF8];
  return result;
}

void type metadata accessor for ShelfCollection()
{
  JUMPOUT(0x212BBDEE8);
}

void ShelfCollection.init<A>(_:spacing:shelfContent:)(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t AssociatedTypeWitness;
  uint64_t v27;
  uint64_t AssociatedConformanceWitness;
  uint64_t v29;
  _QWORD v30[4];
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v32 = a9;
  v33 = a2;
  v16 = a10;
  v17 = a11;
  v30[0] = a7;
  v30[1] = a11;
  v31 = a3 & 1;
  v18 = *(_QWORD *)(a6 - 8);
  v30[2] = a1;
  v30[3] = v18;
  v19 = MEMORY[0x24BDAC7A8](a1);
  v21 = (char *)v30 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v22 + 16))(v21, v19);
  v23 = (_QWORD *)swift_allocObject();
  v23[2] = a6;
  v23[3] = a7;
  v23[4] = a8;
  v23[5] = v16;
  v23[6] = v17;
  v23[7] = a4;
  v23[8] = a5;
  v25 = type metadata accessor for IndexedRandomAccessCollection(255, a6, a8, v24);
  swift_getAssociatedTypeWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v27 = MEMORY[0x212BBDF90](&protocol conformance descriptor for IndexedRandomAccessCollection<A>, v25);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v34 = v25;
  v35 = AssociatedTypeWitness;
  v36 = v30[0];
  v37 = v27;
  v38 = AssociatedConformanceWitness;
  v29 = sub_20E4A47C0();
  MEMORY[0x212BBDF90](MEMORY[0x24BDF4A08], v29, &a10);
  ShelfCollection.init(_:spacing:content:)((uint64_t)v21, a6, v32);
}

uint64_t sub_20E464564()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, uint64_t))(*(_QWORD *)(v1 - 152) + 8))(*(_QWORD *)(v1 - 160), v0);
}

uint64_t sub_20E464598@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t AssociatedTypeWitness;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  unint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  _QWORD *v41;
  void (*v42)(char *, uint64_t);
  _QWORD v44[3];
  uint64_t v45;
  char *v46;
  _QWORD *v47;
  uint64_t v48;
  char *v49;
  uint64_t AssociatedConformanceWitness;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD v65[7];

  v45 = a8;
  v53 = a7;
  v57 = a2;
  v58 = a3;
  v48 = a1;
  v59 = a9;
  v54 = *(_QWORD *)(a4 - 8);
  v56 = *(_QWORD *)(v54 + 64);
  MEMORY[0x24BDAC7A8](a1);
  v49 = (char *)v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for IndexedRandomAccessCollection(0, v13, v14, v13);
  v52 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)v44 - v16;
  v44[2] = (char *)v44 - v16;
  swift_getAssociatedTypeWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v19 = MEMORY[0x212BBDF90](&protocol conformance descriptor for IndexedRandomAccessCollection<A>, v15);
  v51 = v19;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v65[1] = v15;
  v65[2] = AssociatedTypeWitness;
  v20 = a5;
  v65[3] = a5;
  v65[4] = v19;
  v65[5] = AssociatedConformanceWitness;
  v21 = sub_20E4A47C0();
  v55 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v46 = (char *)v44 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v47 = (_QWORD *)((char *)v44 - v24);
  v25 = v48;
  RandomAccessCollection.indexed.getter(a4, (uint64_t)v17);
  v60 = a4;
  v61 = a5;
  v26 = a6;
  v44[0] = a6;
  v27 = v53;
  v62 = a6;
  v63 = v53;
  v28 = v45;
  v64 = v45;
  v44[1] = swift_getKeyPath();
  v29 = v54;
  v30 = v49;
  (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v49, v25, a4);
  v31 = v29;
  v32 = (*(unsigned __int8 *)(v29 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  v33 = (char *)swift_allocObject();
  *((_QWORD *)v33 + 2) = a4;
  *((_QWORD *)v33 + 3) = v20;
  *((_QWORD *)v33 + 4) = v26;
  *((_QWORD *)v33 + 5) = v27;
  v34 = v27;
  v35 = v57;
  v36 = v58;
  *((_QWORD *)v33 + 6) = v28;
  *((_QWORD *)v33 + 7) = v35;
  *((_QWORD *)v33 + 8) = v36;
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))(&v33[v32], v30, a4);
  v37 = (_QWORD *)swift_allocObject();
  v37[2] = a4;
  v37[3] = v20;
  v37[4] = v44[0];
  v37[5] = v34;
  v37[6] = v28;
  v37[7] = sub_20E466CA4;
  v37[8] = v33;
  swift_retain();
  v38 = v34;
  v39 = v46;
  sub_20E4A47A8();
  v65[0] = v38;
  v40 = MEMORY[0x212BBDF90](MEMORY[0x24BDF4A08], v21, v65);
  v41 = v47;
  sub_20E39D614(v47, v39, v21, v40);
  v42 = *(void (**)(char *, uint64_t))(v55 + 8);
  v42(v39, v21);
  sub_20E39D618((uint64_t)v41, v21, v59);
  return ((uint64_t (*)(_QWORD *, uint64_t))v42)(v41, v21);
}

uint64_t sub_20E464954()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E464978(uint64_t a1)
{
  return sub_20E3ADF08(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_20E464598);
}

uint64_t sub_20E464984()
{
  swift_getAssociatedTypeWitness();
  return sub_20E4A61B8();
}

void sub_20E4649EC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t AssociatedTypeWitness;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t AssociatedConformanceWitness;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[16];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v26[10] = a5;
  v26[11] = a2;
  v26[12] = a4;
  v26[13] = a3;
  v26[15] = a9;
  v14 = a11;
  v26[14] = a10;
  v26[8] = *(_QWORD *)(a6 - 8);
  v26[9] = a1;
  MEMORY[0x24BDAC7A8](a1);
  v26[7] = (char *)v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v26[5] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v26[6] = AssociatedTypeWitness;
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v26[4] = (char *)v26 - v17;
  v18 = a8;
  v26[2] = a8;
  v20 = type metadata accessor for IndexedRandomAccessCollection(255, a6, a8, v19);
  v26[1] = v14;
  swift_getAssociatedTypeWitness();
  v21 = swift_getAssociatedTypeWitness();
  v22 = MEMORY[0x212BBDF90](&protocol conformance descriptor for IndexedRandomAccessCollection<A>, v20);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v27 = v20;
  v28 = v21;
  v26[0] = a7;
  v29 = a7;
  v30 = v22;
  v31 = AssociatedConformanceWitness;
  v24 = sub_20E4A47C0();
  v25 = MEMORY[0x212BBDF90](MEMORY[0x24BDF4A08], v24, &a10);
  v27 = a6;
  v28 = v24;
  v29 = v18;
  v30 = v25;
  v31 = v14;
  type metadata accessor for ShelfCollection.Context();
}

void sub_20E464BA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)(v3 - 232) = a1;
  MEMORY[0x24BDAC7A8](a1);
  v5 = (char *)&v12 - v4;
  MEMORY[0x24BDAC7A8](v6);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v9 = *(_QWORD *)(v3 - 224);
  (*(void (**)(uint64_t, _QWORD, _QWORD, double))(*(_QWORD *)(v3 - 216) + 16))(v9, *(_QWORD *)(v3 - 184), *(_QWORD *)(v3 - 208), v8);
  v10 = *(_QWORD *)(v3 - 200);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v3 - 192) + 16))(v10, *(_QWORD *)(v3 - 176), v2);
  v11 = swift_checkMetadataState();
  sub_20E463D18(v9, v10, v2, v11, *(_QWORD *)(v3 - 240), v1, *(_QWORD *)(v3 - 248), (uint64_t)v5);
}

uint64_t ShelfCollection.onScroll(perform:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t result;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(a4, v4);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a1;
  *(_QWORD *)(v9 + 24) = a2;
  v10 = *(int *)(a3 + 68);
  v11 = *(_QWORD **)(a4 + v10);
  swift_retain();
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_20E3AD284(0, v11[2] + 1, 1, v11);
    v11 = (_QWORD *)result;
  }
  v14 = v11[2];
  v13 = v11[3];
  if (v14 >= v13 >> 1)
  {
    result = (uint64_t)sub_20E3AD284((_QWORD *)(v13 > 1), v14 + 1, 1, v11);
    v11 = (_QWORD *)result;
  }
  v11[2] = v14 + 1;
  v15 = &v11[2 * v14];
  v15[4] = sub_20E464E18;
  v15[5] = v9;
  *(_QWORD *)(a4 + v10) = v11;
  return result;
}

uint64_t sub_20E464DF4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E464E18(uint64_t a1)
{
  uint64_t v1;

  return sub_20E3A7D68(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t ShelfCollection.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v35 = a2;
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = v7;
  v9 = *(_QWORD *)(v8 + 24);
  v32 = *(_QWORD *)(v8 + 40);
  v33 = v9;
  v10 = type metadata accessor for ShelfPage(0, v4, v9, v32);
  v34 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v30 - v14;
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char **)((char *)&v30 - v18);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))(v7, v2, v4, v17);
  v20 = *(int *)(a1 + 60);
  v21 = *(int *)(a1 + 64);
  v31 = v2;
  v22 = v2 + v20;
  v23 = *(_QWORD *)v22;
  LOBYTE(v5) = *(_BYTE *)(v22 + 8);
  v24 = v2 + v21;
  v25 = *(_QWORD *)(v2 + v21);
  v26 = *(_QWORD *)(v24 + 8);
  swift_retain();
  ShelfPage.init(_:spacing:configuration:content:)((uint64_t)v30, v23, v5, 1, v25, v26, v4, v33, (uint64_t)v12, v32);
  sub_20E3A7C1C(*(_QWORD *)(v31 + *(int *)(a1 + 68)), v10, (uint64_t)v15);
  v27 = *(void (**)(char *, uint64_t))(v34 + 8);
  v27(v12, v10);
  v28 = MEMORY[0x212BBDF90](&protocol conformance descriptor for ShelfPage<A, B>, v10);
  sub_20E39D614(v19, v15, v10, v28);
  v27(v15, v10);
  sub_20E39D618((uint64_t)v19, v10, v35);
  return ((uint64_t (*)(_QWORD *, uint64_t))v27)(v19, v10);
}

uint64_t sub_20E465014()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_20E4A39A4();
  __swift_allocate_value_buffer(v0, qword_254A1B960);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_254A1B960);
  if (qword_254A180C0 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_254A184D0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t static CoordinateSpace.shelfCollectionScrollView.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_254A18118 != -1)
    swift_once();
  v2 = sub_20E4A39A4();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_254A1B960);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

double EnvironmentValues.shelfCollectionSize.getter()
{
  uint64_t v0;
  uint64_t v1;
  double v2;

  type metadata accessor for ShelfContainerEnviromentValues();
  sub_20E465244();
  v0 = sub_20E4A3C20();
  if (!v0)
    return 0.0;
  v1 = v0;
  swift_getKeyPath();
  sub_20E4A341C();
  swift_release();
  v2 = *(double *)(v1 + 16);
  swift_release();
  return v2;
}

uint64_t View.shelfCollectionSize(_:)()
{
  swift_getKeyPath();
  sub_20E4A4250();
  return swift_release();
}

unint64_t sub_20E465244()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254A18540;
  if (!qword_254A18540)
  {
    v1 = type metadata accessor for ShelfContainerEnviromentValues();
    result = MEMORY[0x212BBDF90](&unk_20E4A7ED8, v1);
    atomic_store(result, (unint64_t *)&qword_254A18540);
  }
  return result;
}

uint64_t sub_20E46529C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E4652D8()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_20E465368(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((((v6 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v11 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v12 = *(_QWORD *)v11;
    *(_BYTE *)(v10 + 8) = *(_BYTE *)(v11 + 8);
    *(_QWORD *)v10 = v12;
    v13 = (_QWORD *)(((unint64_t)v4 + v6 + 23) & 0xFFFFFFFFFFFFFFF8);
    v14 = (_QWORD *)(((unint64_t)a2 + v6 + 23) & 0xFFFFFFFFFFFFFFF8);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    *(_QWORD *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFF8);
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_20E465464(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_20E4654B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  v9 = (v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  *(_QWORD *)v9 = v11;
  v12 = (_QWORD *)((v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v13 = (_QWORD *)((v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  *(_QWORD *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFF8);
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_20E465558(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  v9 = (v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  *(_QWORD *)v9 = v11;
  v12 = (_QWORD *)((v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v13 = (_QWORD *)((v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  swift_retain();
  swift_release();
  *(_QWORD *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_20E465610(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char v11;
  _OWORD *v12;
  _OWORD *v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  v9 = (v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_BYTE *)(v10 + 8);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = v11;
  v12 = (_OWORD *)((v7 + 23) & 0xFFFFFFFFFFFFF8);
  v13 = (_OWORD *)((v8 + 23) & 0xFFFFFFFFFFFFF8);
  *v12 = *v13;
  *(_QWORD *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_20E4656A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  uint64_t v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  v9 = (v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  *(_QWORD *)v9 = v11;
  v12 = (_OWORD *)((v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  v8 += 23;
  v13 = (v8 & 0xFFFFFFFFFFFFF8) + 23;
  *v12 = *(_OWORD *)(v8 & 0xFFFFFFFFFFFFF8);
  swift_release();
  *(_QWORD *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(v13 & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_20E465744(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v12 = *(_QWORD *)((a1 + v7 + 23) & 0xFFFFFFFFFFFFF8);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((((v7 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_20E4657C8 + 4 * byte_20E4AF510[v10]))();
  }
}

void sub_20E46584C(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((((*(_DWORD *)(v5 + 64) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((((*(_DWORD *)(v5 + 64) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((((*(_QWORD *)(v5 + 64) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_20E465948()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x20E4659C0);
}

void sub_20E465950(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x20E465958);
  JUMPOUT(0x20E4659C0);
}

void sub_20E465998()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x20E4659C0);
}

void sub_20E4659A0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x20E4659C0);
}

uint64_t sub_20E4659A8(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v5 + v6) = 0;
  if (!a2)
    JUMPOUT(0x20E4659C0);
  if (a3 < 0x7FFFFFFF)
  {
    if ((a2 & 0x80000000) == 0)
      JUMPOUT(0x20E4659BCLL);
    JUMPOUT(0x20E4659B4);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v5);
}

uint64_t sub_20E4659D8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    result = sub_20E4A60E0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_20E465AB0(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  size_t v12;
  int v13;
  uint64_t v14;
  int v15;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  void *v22;
  unint64_t v23;
  unsigned int (*v25)(unint64_t, uint64_t, uint64_t);

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v10 = v9;
  v11 = v6 + v9;
  if (*(_DWORD *)(v8 + 84))
    v12 = *(_QWORD *)(v8 + 64);
  else
    v12 = *(_QWORD *)(v8 + 64) + 1;
  v13 = *(_DWORD *)(v5 + 80) | v9;
  v14 = (*(_BYTE *)(v5 + 80) | v9);
  v15 = v13 & 0x100000;
  if (v14 > 7 || v15 != 0 || ((v12 + v10 + ((v6 + v10) & ~v10)) & ~v10) + v12 > 0x18)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v14 + 16) & ~v14));
    swift_retain();
  }
  else
  {
    v19 = v7;
    v20 = ~v10;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    v21 = (unint64_t)a1 + v11;
    v22 = (void *)(((unint64_t)a1 + v11) & ~v10);
    v23 = (unint64_t)a2 + v11;
    v25 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v8 + 48);
    if (v25(v23 & ~v10, 1, v19))
    {
      memcpy(v22, (const void *)(v23 & v20), v12);
    }
    else
    {
      (*(void (**)(void *, unint64_t, uint64_t))(v8 + 16))(v22, v23 & v20, v19);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v22, 0, 1, v19);
    }
    if (v25(((v23 | v10) + v12) & v20, 1, v19))
    {
      memcpy((void *)(((v21 | v10) + v12) & v20), (const void *)(((v23 | v10) + v12) & v20), v12);
    }
    else
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(((v21 | v10) + v12) & v20, ((v23 | v10) + v12) & v20, v19);
      (*(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(((v21 | v10) + v12) & v20, 0, 1, v19);
    }
  }
  return a1;
}

uint64_t sub_20E465CBC(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t result;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, AssociatedTypeWitness);
  v4 = *(_QWORD *)(v3 + 64) + a1;
  v5 = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = v4 + v7;
  v9 = ~v7;
  v10 = (v4 + v7) & ~v7;
  v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v11(v10, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v10, v5);
  v12 = (v8 | v7) + *(_QWORD *)(v6 + 64);
  if (!*(_DWORD *)(v6 + 84))
    ++v12;
  v13 = v12 & v9;
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v11)(v12 & v9, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v13, v5);
  return result;
}

uint64_t sub_20E465DF0(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  size_t v14;
  size_t v15;
  size_t v16;
  void *v17;
  const void *v18;
  unsigned int (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v6 + v9 + a1;
  v11 = ~v9;
  v12 = v6 + v9 + a2;
  v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  v21 = a1;
  if (v20(v12 & ~v9, 1, v7))
  {
    v13 = *(_DWORD *)(v8 + 84);
    v14 = *(_QWORD *)(v8 + 64);
    if (v13)
      v15 = *(_QWORD *)(v8 + 64);
    else
      v15 = v14 + 1;
    memcpy((void *)(v10 & ~v9), (const void *)(v12 & ~v9), v15);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v10 & ~v9, v12 & ~v9, v7);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v10 & ~v9, 0, 1, v7);
    v13 = *(_DWORD *)(v8 + 84);
    v14 = *(_QWORD *)(v8 + 64);
  }
  if (v13)
    v16 = v14;
  else
    v16 = v14 + 1;
  v17 = (void *)(((v10 | v9) + v16) & v11);
  v18 = (const void *)(((v12 | v9) + v16) & v11);
  if (v20((uint64_t)v18, 1, v7))
  {
    memcpy(v17, v18, v16);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v17, v18, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v17, 0, 1, v7);
  }
  return v21;
}

uint64_t sub_20E465FB4(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  size_t v15;
  size_t v16;
  void *v17;
  void *v18;
  int v19;
  int v20;
  uint64_t v22;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v22 = a1;
  v10 = v6 + v9 + a1;
  v11 = ~v9;
  v12 = v6 + v9 + a2;
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  LODWORD(a1) = v13((void *)(v10 & ~v9), 1, v7);
  v14 = v13((void *)(v12 & ~v9), 1, v7);
  if ((_DWORD)a1)
  {
    if (!v14)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v10 & ~v9, v12 & ~v9, v7);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v10 & ~v9, 0, 1, v7);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v14)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 24))(v10 & ~v9, v12 & ~v9, v7);
      goto LABEL_10;
    }
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v10 & ~v9, v7);
  }
  if (*(_DWORD *)(v8 + 84))
    v15 = *(_QWORD *)(v8 + 64);
  else
    v15 = *(_QWORD *)(v8 + 64) + 1;
  memcpy((void *)(v10 & ~v9), (const void *)(v12 & ~v9), v15);
LABEL_10:
  if (*(_DWORD *)(v8 + 84))
    v16 = *(_QWORD *)(v8 + 64);
  else
    v16 = *(_QWORD *)(v8 + 64) + 1;
  v17 = (void *)(((v10 | v9) + v16) & v11);
  v18 = (void *)(((v12 | v9) + v16) & v11);
  v19 = v13(v17, 1, v7);
  v20 = v13(v18, 1, v7);
  if (!v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 24))(v17, v18, v7);
      return v22;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v17, v7);
    goto LABEL_18;
  }
  if (v20)
  {
LABEL_18:
    memcpy(v17, v18, v16);
    return v22;
  }
  (*(void (**)(void *, void *, uint64_t))(v8 + 16))(v17, v18, v7);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v17, 0, 1, v7);
  return v22;
}

uint64_t sub_20E4661FC(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  size_t v14;
  size_t v15;
  size_t v16;
  void *v17;
  const void *v18;
  unsigned int (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v6 + v9 + a1;
  v11 = ~v9;
  v12 = v6 + v9 + a2;
  v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  v21 = a1;
  if (v20(v12 & ~v9, 1, v7))
  {
    v13 = *(_DWORD *)(v8 + 84);
    v14 = *(_QWORD *)(v8 + 64);
    if (v13)
      v15 = *(_QWORD *)(v8 + 64);
    else
      v15 = v14 + 1;
    memcpy((void *)(v10 & ~v9), (const void *)(v12 & ~v9), v15);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v10 & ~v9, v12 & ~v9, v7);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v10 & ~v9, 0, 1, v7);
    v13 = *(_DWORD *)(v8 + 84);
    v14 = *(_QWORD *)(v8 + 64);
  }
  if (v13)
    v16 = v14;
  else
    v16 = v14 + 1;
  v17 = (void *)(((v10 | v9) + v16) & v11);
  v18 = (const void *)(((v12 | v9) + v16) & v11);
  if (v20((uint64_t)v18, 1, v7))
  {
    memcpy(v17, v18, v16);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v17, v18, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v17, 0, 1, v7);
  }
  return v21;
}

uint64_t sub_20E4663C0(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  size_t v15;
  size_t v16;
  void *v17;
  void *v18;
  int v19;
  int v20;
  uint64_t v22;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 40))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v22 = a1;
  v10 = v6 + v9 + a1;
  v11 = ~v9;
  v12 = v6 + v9 + a2;
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  LODWORD(a1) = v13((void *)(v10 & ~v9), 1, v7);
  v14 = v13((void *)(v12 & ~v9), 1, v7);
  if ((_DWORD)a1)
  {
    if (!v14)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v10 & ~v9, v12 & ~v9, v7);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v10 & ~v9, 0, 1, v7);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v14)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 40))(v10 & ~v9, v12 & ~v9, v7);
      goto LABEL_10;
    }
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v10 & ~v9, v7);
  }
  if (*(_DWORD *)(v8 + 84))
    v15 = *(_QWORD *)(v8 + 64);
  else
    v15 = *(_QWORD *)(v8 + 64) + 1;
  memcpy((void *)(v10 & ~v9), (const void *)(v12 & ~v9), v15);
LABEL_10:
  if (*(_DWORD *)(v8 + 84))
    v16 = *(_QWORD *)(v8 + 64);
  else
    v16 = *(_QWORD *)(v8 + 64) + 1;
  v17 = (void *)(((v10 | v9) + v16) & v11);
  v18 = (void *)(((v12 | v9) + v16) & v11);
  v19 = v13(v17, 1, v7);
  v20 = v13(v18, 1, v7);
  if (!v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 40))(v17, v18, v7);
      return v22;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v17, v7);
    goto LABEL_18;
  }
  if (v20)
  {
LABEL_18:
    memcpy(v17, v18, v16);
    return v22;
  }
  (*(void (**)(void *, void *, uint64_t))(v8 + 32))(v17, v18, v7);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v17, 0, 1, v7);
  return v22;
}

uint64_t sub_20E466608(uint64_t a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  int v16;
  unsigned int v17;
  int v18;
  int v19;
  unsigned int v20;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8)
    v9 = v8 - 1;
  else
    v9 = 0;
  if (v9 <= v6)
    v10 = v6;
  else
    v10 = v9;
  if (v8)
    v11 = *(_QWORD *)(v7 + 64);
  else
    v11 = *(_QWORD *)(v7 + 64) + 1;
  if (!a2)
    return 0;
  v12 = *(unsigned __int8 *)(v7 + 80);
  v13 = *(_QWORD *)(v5 + 64) + v12;
  if (a2 <= v10)
    goto LABEL_29;
  v14 = ((v11 + v12 + (v13 & ~v12)) & ~v12) + v11;
  v15 = 8 * v14;
  if (v14 <= 3)
  {
    v17 = ((a2 - v10 + ~(-1 << v15)) >> v15) + 1;
    if (HIWORD(v17))
    {
      v16 = *(_DWORD *)(a1 + v14);
      if (!v16)
        goto LABEL_29;
      goto LABEL_20;
    }
    if (v17 > 0xFF)
    {
      v16 = *(unsigned __int16 *)(a1 + v14);
      if (!*(_WORD *)(a1 + v14))
        goto LABEL_29;
      goto LABEL_20;
    }
    if (v17 < 2)
    {
LABEL_29:
      if (v10)
      {
        if (v6 >= v9)
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, v6, AssociatedTypeWitness);
        v20 = (*(uint64_t (**)(uint64_t))(v7 + 48))((v13 + a1) & ~v12);
        if (v20 >= 2)
          return v20 - 1;
        else
          return 0;
      }
      return 0;
    }
  }
  v16 = *(unsigned __int8 *)(a1 + v14);
  if (!*(_BYTE *)(a1 + v14))
    goto LABEL_29;
LABEL_20:
  v18 = (v16 - 1) << v15;
  if (v14 > 3)
    v18 = 0;
  if ((_DWORD)v14)
  {
    if (v14 <= 3)
      v19 = v14;
    else
      v19 = 4;
    __asm { BR              X12 }
  }
  return v10 + v18 + 1;
}

void sub_20E466820(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  int v19;

  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = 0;
  v9 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v10 = *(_DWORD *)(v9 + 84);
  v11 = v10 - 1;
  if (!v10)
    v11 = 0;
  if (v11 <= v7)
    v12 = v7;
  else
    v12 = v11;
  v13 = *(unsigned __int8 *)(v9 + 80);
  if (v10)
    v15 = *(_QWORD *)(v9 + 64);
  else
    v15 = *(_QWORD *)(v9 + 64) + 1;
  v14 = *(_QWORD *)(v6 + 64) + v13;
  v16 = ((v15 + v13 + (v14 & ~(_DWORD)v13)) & ~(_DWORD)v13) + v15;
  if (a3 > v12)
  {
    if (v16 > 3)
    {
      v8 = 1u;
      if (v12 >= a2)
LABEL_25:
        __asm { BR              X14 }
LABEL_18:
      v18 = ~v12 + a2;
      if (v16 < 4)
      {
        if (v16)
        {
          v19 = v18 & ~(-1 << (8 * v16));
          bzero(a1, ((v15 + v13 + (v14 & ~v13)) & ~v13) + v15);
          if (v16 == 3)
          {
            *(_WORD *)a1 = v19;
            a1[2] = BYTE2(v19);
          }
          else if (v16 == 2)
          {
            *(_WORD *)a1 = v19;
          }
          else
          {
            *a1 = v19;
          }
        }
      }
      else
      {
        bzero(a1, ((v15 + v13 + (v14 & ~v13)) & ~v13) + v15);
        *(_DWORD *)a1 = v18;
      }
      __asm { BR              X10 }
    }
    v17 = ((a3 - v12 + ~(-1 << (8 * v16))) >> (8 * v16)) + 1;
    if (HIWORD(v17))
    {
      v8 = 4u;
      if (v12 >= a2)
        goto LABEL_25;
      goto LABEL_18;
    }
    if (v17 >= 0x100)
      v8 = 2;
    else
      v8 = v17 > 1;
  }
  if (v12 >= a2)
    goto LABEL_25;
  goto LABEL_18;
}

void sub_20E466AE0()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  *(_BYTE *)(v0 + v2) = v1;
}

void sub_20E466AE8()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;

  *(_WORD *)(v0 + v2) = v1;
}

void sub_20E466B0C()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
}

void sub_20E466B1C()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
}

void sub_20E466B24()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

void type metadata accessor for ShelfCollection.Context()
{
  JUMPOUT(0x212BBDEE8);
}

void sub_20E466B3C(uint64_t *a1)
{
  type metadata accessor for ShelfPage(255, *a1, a1[1], a1[3]);
  JUMPOUT(0x212BBDF90);
}

uint64_t sub_20E466B68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A18530);
  v2 = sub_20E4A39D4();
  v4[0] = v1;
  v4[1] = sub_20E466BC8();
  return MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v2, v4);
}

unint64_t sub_20E466BC8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254A18538;
  if (!qword_254A18538)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A18530);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDF1028], v1);
    atomic_store(result, (unint64_t *)&qword_254A18538);
  }
  return result;
}

uint64_t sub_20E466C18()
{
  return 40;
}

__n128 sub_20E466C24(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_20E466C38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void sub_20E466CA4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v4 = v3[2];
  v5 = *(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80);
  sub_20E4649EC(a1, a2, v3[7], v3[8], (uint64_t)v3 + ((v5 + 72) & ~v5), v4, v3[3], v3[4], a3, v3[5], v3[6]);
}

uint64_t sub_20E466CEC()
{
  uint64_t result;
  unint64_t v1;

  sub_20E4A596C();
  sub_20E4A60E0();
  result = sub_20E4A4778();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_20E466D80(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v13;
  _QWORD *v14;
  _QWORD *v15;
  id *v16;
  unsigned int v17;
  id v18;
  id v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v30;
  _QWORD *__dst;

  v3 = *(_QWORD *)(a3 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_DWORD *)(v4 + 80);
  v6 = ~(unint64_t)(v5 & 0xF8) & 0xFFFFFFFFFFFFFFF8;
  v7 = ((v5 & 0xF8) + 23) & v6;
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v8 = 8;
  else
    v8 = *(_QWORD *)(v4 + 64);
  v9 = v7 + v8 + 1;
  v10 = *a2;
  *a1 = *a2;
  if ((v5 & 0x1000F8) != 0
    || ((((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v13 = (uint64_t *)(v10 + v7);
  }
  else
  {
    v13 = a1;
    v14 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFF8);
    v15 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v14 = *v15;
    v30 = v3;
    __dst = (_QWORD *)(((unint64_t)v14 + 15) & v6);
    v16 = (id *)(((unint64_t)v15 + 15) & v6);
    v17 = *((unsigned __int8 *)v16 + v8);
    swift_retain();
    swift_retain();
    if (v17 > 1)
    {
      memcpy(__dst, v16, v8 + 1);
    }
    else if (v17 == 1)
    {
      v18 = *v16;
      v19 = *v16;
      *__dst = v18;
      *((_BYTE *)__dst + v8) = 1;
    }
    else
    {
      (*(void (**)(_QWORD *, id *, uint64_t))(v4 + 16))(__dst, v16, v30);
      *((_BYTE *)__dst + v8) = 0;
    }
    v20 = (_QWORD *)(((unint64_t)v13 + v9 + 7) & 0xFFFFFFFFFFFFFFF8);
    v21 = (_QWORD *)(((unint64_t)a2 + v9 + 7) & 0xFFFFFFFFFFFFFFF8);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    v23 = (_QWORD *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
    v24 = (_QWORD *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
    v25 = v24[1];
    *v23 = *v24;
    v23[1] = v25;
    v26 = (_QWORD *)(((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8);
    v27 = (_QWORD *)(((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFFFF8);
    v28 = v27[1];
    *v26 = *v27;
    v26[1] = v28;
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v13;
}

uint64_t sub_20E466F38(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id *v6;
  uint64_t v7;
  unsigned int v8;

  v3 = a1 + 15;
  swift_release();
  swift_release();
  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 80) & 0xF8 | 7;
  v6 = (id *)(((v3 & 0xFFFFFFFFFFFFFFF8) + v5 + 8) & ~v5);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v7 = 8;
  else
    v7 = *(_QWORD *)(v4 + 64);
  v8 = *((unsigned __int8 *)v6 + v7);
  if (v8 <= 1)
  {
    if (v8 == 1)

    else
      (*(void (**)(void))(v4 + 8))();
  }
  swift_release();
  swift_release();
  return swift_release();
}

_QWORD *sub_20E46700C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  id *v10;
  uint64_t v11;
  unsigned int v12;
  BOOL v13;
  _QWORD *v14;
  _QWORD *v15;
  id v16;
  id v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;

  *a1 = *a2;
  v3 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v4 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v3 = *v4;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80) & 0xF8;
  v8 = v7 | 7;
  v7 += 15;
  v9 = (_QWORD *)(((unint64_t)v3 + v7) & ~v8);
  v10 = (id *)(((unint64_t)v4 + v7) & ~v8);
  if (*(_QWORD *)(v6 + 64) <= 8uLL)
    v11 = 8;
  else
    v11 = *(_QWORD *)(v6 + 64);
  v12 = *((unsigned __int8 *)v10 + v11);
  swift_retain();
  swift_retain();
  v13 = v12 == 1;
  if (v12 > 1)
  {
    memcpy(v9, v10, v11 + 1);
    v15 = a1;
    v14 = a2;
  }
  else
  {
    v15 = a1;
    v14 = a2;
    if (v13)
    {
      v16 = *v10;
      v17 = *v10;
      *v9 = v16;
      *((_BYTE *)v9 + v11) = 1;
    }
    else
    {
      (*(void (**)(_QWORD *, id *, uint64_t))(v6 + 16))(v9, v10, v5);
      *((_BYTE *)v9 + v11) = 0;
    }
  }
  v18 = ((v8 + 16) & ~v8) + v11 + 1;
  v19 = (_QWORD *)(((unint64_t)v15 + v18 + 7) & 0xFFFFFFFFFFFFFFF8);
  v20 = (_QWORD *)(((unint64_t)v14 + v18 + 7) & 0xFFFFFFFFFFFFFFF8);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  v22 = (_QWORD *)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8);
  v23 = (_QWORD *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  v25 = (_QWORD *)(((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFFFF8);
  v26 = (_QWORD *)(((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8);
  v27 = v26[1];
  *v25 = *v26;
  v25[1] = v27;
  swift_retain();
  swift_retain();
  swift_retain();
  return v15;
}

_QWORD *sub_20E467190(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id *v13;
  void **v14;
  uint64_t v15;
  unsigned int v16;
  unsigned int v17;
  void *v18;
  id v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;

  v6 = (unint64_t)a2 + 15;
  *a1 = *a2;
  v7 = (unint64_t)a1 + 15;
  swift_retain();
  swift_release();
  v8 = v7 & 0xFFFFFFFFFFFFFFF8;
  v6 &= 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v7 & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)v6;
  swift_retain();
  swift_release();
  v9 = *(_QWORD *)(a3 + 16);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_DWORD *)(v10 + 80) & 0xF8;
  v12 = v11 | 7;
  v11 += 15;
  v13 = (id *)((v11 + v8) & ~v12);
  v14 = (void **)((v11 + v6) & ~v12);
  if (*(_QWORD *)(v10 + 64) <= 8uLL)
    v15 = 8;
  else
    v15 = *(_QWORD *)(v10 + 64);
  v16 = *((unsigned __int8 *)v13 + v15);
  v17 = *((unsigned __int8 *)v14 + v15);
  if (v16 > 1)
  {
    if (v17 <= 1)
    {
      if (v17 != 1)
      {
LABEL_23:
        (*(void (**)(id *, void **, uint64_t))(v10 + 16))(v13, v14, v9);
        *((_BYTE *)v13 + v15) = 0;
        goto LABEL_24;
      }
      goto LABEL_11;
    }
LABEL_15:
    memcpy(v13, v14, v15 + 1);
    goto LABEL_24;
  }
  if (v17 > 1)
  {
    if (v16 == 1)

    else
      (*(void (**)(id *, uint64_t))(v10 + 8))(v13, v9);
    goto LABEL_15;
  }
  if (v13 != v14)
  {
    if (v16 == 1)

    else
      (*(void (**)(id *, uint64_t))(v10 + 8))(v13, v9);
    v20 = *((unsigned __int8 *)v14 + v15);
    if (v20 >= 2)
    {
      if (v15 <= 3)
        v21 = v15;
      else
        v21 = 4;
      __asm { BR              X12 }
    }
    if (v20 != 1)
      goto LABEL_23;
LABEL_11:
    v18 = *v14;
    v19 = v18;
    *v13 = v18;
    *((_BYTE *)v13 + v15) = 1;
  }
LABEL_24:
  v22 = ((v12 + 16) & ~v12) + v15 + 1;
  v23 = (_QWORD *)(((unint64_t)a1 + v22 + 7) & 0xFFFFFFFFFFFFFFF8);
  v24 = (_QWORD *)(((unint64_t)a2 + v22 + 7) & 0xFFFFFFFFFFFFFFF8);
  v25 = v24[1];
  *v23 = *v24;
  v23[1] = v25;
  swift_retain();
  swift_release();
  v26 = (_QWORD *)(((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8);
  v27 = (_QWORD *)(((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFFFF8);
  v28 = v27[1];
  *v26 = *v27;
  v26[1] = v28;
  swift_retain();
  swift_release();
  v29 = (_QWORD *)(((unint64_t)v26 + 23) & 0xFFFFFFFFFFFFFFF8);
  v30 = (_QWORD *)(((unint64_t)v27 + 23) & 0xFFFFFFFFFFFFFFF8);
  v31 = v30[1];
  *v29 = *v30;
  v29[1] = v31;
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *sub_20E467418(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  _OWORD *v17;
  _OWORD *v18;

  *a1 = *a2;
  v5 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v6 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v5 = *v6;
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 80) & 0xF8;
  v9 = v8 | 7;
  v8 += 15;
  v10 = (_QWORD *)(((unint64_t)v5 + v8) & ~v9);
  v11 = (_QWORD *)(((unint64_t)v6 + v8) & ~v9);
  if (*(_QWORD *)(v7 + 64) <= 8uLL)
    v12 = 8;
  else
    v12 = *(_QWORD *)(v7 + 64);
  v13 = *((unsigned __int8 *)v11 + v12);
  if (v13 > 1)
  {
    memcpy(v10, v11, v12 + 1);
  }
  else if (v13 == 1)
  {
    *v10 = *v11;
    *((_BYTE *)v10 + v12) = 1;
  }
  else
  {
    (*(void (**)(_QWORD *))(v7 + 32))(v10);
    *((_BYTE *)v10 + v12) = 0;
  }
  v14 = ((v9 + 16) & ~v9) + v12 + 1;
  v15 = (_OWORD *)(((unint64_t)a1 + v14 + 7) & 0xFFFFFFFFFFFFFFF8);
  v16 = (_OWORD *)(((unint64_t)a2 + v14 + 7) & 0xFFFFFFFFFFFFFFF8);
  *v15 = *v16;
  v17 = (_OWORD *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFF8);
  v18 = (_OWORD *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v17 = *v18;
  *(_OWORD *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFF8);
  return a1;
}

_QWORD *sub_20E467544(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id *v13;
  id *v14;
  uint64_t v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD *v21;
  uint64_t v22;
  unint64_t v23;
  _OWORD *v24;

  v6 = (unint64_t)a2 + 15;
  *a1 = *a2;
  swift_release();
  v7 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v8 = v6 & 0xFFFFFFFFFFFFFFF8;
  *v7 = *(_QWORD *)(v6 & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  v9 = *(_QWORD *)(a3 + 16);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_DWORD *)(v10 + 80) & 0xF8;
  v12 = v11 | 7;
  v11 += 15;
  v13 = (id *)(((unint64_t)v7 + v11) & ~v12);
  v14 = (id *)((v11 + v8) & ~v12);
  if (*(_QWORD *)(v10 + 64) <= 8uLL)
    v15 = 8;
  else
    v15 = *(_QWORD *)(v10 + 64);
  v16 = *((unsigned __int8 *)v13 + v15);
  v17 = *((unsigned __int8 *)v14 + v15);
  if (v16 > 1)
  {
    if (v17 <= 1)
    {
      if (v17 != 1)
      {
LABEL_23:
        (*(void (**)(id *, id *, uint64_t))(v10 + 32))(v13, v14, v9);
        *((_BYTE *)v13 + v15) = 0;
        goto LABEL_24;
      }
      goto LABEL_11;
    }
LABEL_15:
    memcpy(v13, v14, v15 + 1);
    goto LABEL_24;
  }
  if (v17 > 1)
  {
    if (v16 == 1)

    else
      (*(void (**)(id *, _QWORD))(v10 + 8))(v13, *(_QWORD *)(a3 + 16));
    goto LABEL_15;
  }
  if (v13 != v14)
  {
    if (v16 == 1)

    else
      (*(void (**)(id *, _QWORD))(v10 + 8))(v13, *(_QWORD *)(a3 + 16));
    v18 = *((unsigned __int8 *)v14 + v15);
    if (v18 >= 2)
    {
      if (v15 <= 3)
        v19 = v15;
      else
        v19 = 4;
      __asm { BR              X12 }
    }
    if (v18 != 1)
      goto LABEL_23;
LABEL_11:
    *v13 = *v14;
    *((_BYTE *)v13 + v15) = 1;
  }
LABEL_24:
  v20 = ((v12 + 16) & ~v12) + v15 + 1;
  v21 = (_OWORD *)(((unint64_t)a1 + v20 + 7) & 0xFFFFFFFFFFFFFFF8);
  v22 = (uint64_t)a2 + v20 + 7;
  v23 = (v22 & 0xFFFFFFFFFFFFFFF8) + 23;
  *v21 = *(_OWORD *)(v22 & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  v24 = (_OWORD *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
  v23 &= 0xFFFFFFFFFFFFF8uLL;
  *v24 = *(_OWORD *)v23;
  swift_release();
  *(_OWORD *)(((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v23 + 23) & 0xFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_20E467794(_DWORD *a1, int a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  __int16 v7;
  unint64_t v8;
  uint64_t v9;
  unsigned int v10;
  int v11;
  int v12;
  int v13;
  int v14;

  v3 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v4 = *(_QWORD *)(v3 + 64);
  if (v4 <= 8)
    v4 = 8;
  if (!a2)
    return 0;
  if ((a2 & 0x80000000) == 0)
    goto LABEL_5;
  v7 = *(_DWORD *)(v3 + 80) & 0xF8;
  v8 = ((((((v4 + ((unsigned __int16)(v7 + 23) & (unsigned __int16)~v7 & 0x1F8) + 8) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
       + 23) & 0xFFFFFFFFFFFFFFF8)
     + 16;
  v9 = v8 & 0xFFFFFFF8;
  v10 = a2 - 2147483646;
  if ((v8 & 0xFFFFFFF8) != 0)
    v10 = 2;
  if (v10 >= 0x10000)
    v11 = 4;
  else
    v11 = 2;
  if (v10 < 0x100)
    v12 = 1;
  else
    v12 = v11;
  if (v12 == 4)
  {
    v13 = *(_DWORD *)((char *)a1 + v8);
    if (!v13)
      goto LABEL_5;
  }
  else if (v12 == 2)
  {
    v13 = *(unsigned __int16 *)((char *)a1 + v8);
    if (!v13)
      goto LABEL_5;
  }
  else
  {
    v13 = *((unsigned __int8 *)a1 + v8);
    if (!v13)
    {
LABEL_5:
      v5 = *(_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFF8);
      if (v5 >= 0xFFFFFFFF)
        LODWORD(v5) = -1;
      return (v5 + 1);
    }
  }
  v14 = v13 - 1;
  if (v9)
  {
    v14 = 0;
    LODWORD(v9) = *a1;
  }
  return (v9 | v14) ^ 0x80000000;
}

void sub_20E46788C(unsigned int *a1, int a2, int a3, uint64_t a4)
{
  uint64_t v5;
  unint64_t v6;
  size_t v7;
  int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  if (v6 <= 8)
    v6 = 8;
  v7 = ((((((v6
           + ((unsigned __int16)((*(_WORD *)(v5 + 80) & 0xF8) + 23) & (unsigned __int16)~(*(_WORD *)(v5 + 80) & 0xF8) & 0x1F8)
           + 8) & 0xFFFFFFFFFFFFFFF8)
         + 23) & 0xFFFFFFFFFFFFFFF8)
       + 23) & 0xFFFFFFFFFFFFFFF8)
     + 16;
  if (a3 < 0)
  {
    v9 = a3 - 2147483646;
    if ((_DWORD)v7)
      v9 = 2;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v8 = 1;
    else
      v8 = v10;
    if ((a2 & 0x80000000) == 0)
LABEL_5:
      __asm { BR              X10 }
  }
  else
  {
    v8 = 0;
    if ((a2 & 0x80000000) == 0)
      goto LABEL_5;
  }
  if ((_DWORD)v7)
  {
    v11 = a2 ^ 0x80000000;
    bzero(a1, v7);
    *a1 = v11;
  }
  __asm { BR              X10 }
}

void sub_20E4679CC(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (!a2)
    JUMPOUT(0x20E4679B8);
  JUMPOUT(0x20E4679A8);
}

void sub_20E4679D8()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x20E4679B8);
}

void sub_20E4679E0()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x20E4679B8);
}

void type metadata accessor for _ResultView()
{
  JUMPOUT(0x212BBDEE8);
}

uint64_t sub_20E4679F8()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_20E467A3C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  sub_20E4A596C();
  sub_20E4A60E0();
  v4 = sub_20E4A4778();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  type metadata accessor for _ResultView();
}

int *sub_20E467AF0(int *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v7 = (_QWORD *)(v6 + result[19]);
  *v7 = v5;
  v7[1] = v4;
  v8 = (_QWORD *)(v6 + result[20]);
  *v8 = v3;
  v8[1] = v2;
  v9 = (_QWORD *)(v6 + result[21]);
  *v9 = v1;
  v9[1] = v10;
  return result;
}

uint64_t sub_20E467B38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  void (*v46)(uint64_t, _QWORD *);
  char *v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  _QWORD *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  _QWORD *v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD v73[2];
  _QWORD v74[2];
  _QWORD v75[2];
  _QWORD v76[2];
  _QWORD v77[3];

  v72 = a2;
  v4 = *(_QWORD *)(a1 + 24);
  v58 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v61 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v60 = (uint64_t *)((char *)&v56 - v7);
  v9 = *(_QWORD **)(v8 + 16);
  v65 = *(v9 - 1);
  MEMORY[0x24BDAC7A8](v8);
  v59 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD **)(v11 + 40);
  v56 = *(v12 - 1);
  MEMORY[0x24BDAC7A8](v11);
  v57 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v64 = (uint64_t *)((char *)&v56 - v15);
  v17 = *(_QWORD *)(v16 + 32);
  v18 = sub_20E4A3E00();
  v67 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v68 = (char *)&v56 - v19;
  v62 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v63 = (char *)&v56 - v24;
  v66 = v9;
  v25 = sub_20E4A596C();
  v26 = sub_20E4A60E0();
  MEMORY[0x24BDAC7A8](v26);
  v28 = (id *)((char *)&v56 - v27);
  v69 = v4;
  v29 = sub_20E4A3E00();
  v70 = *(_QWORD *)(v29 - 8);
  v71 = v29;
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&v56 - v30;
  v32 = sub_20E4A4778();
  MEMORY[0x212BBBCE0](v32);
  if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(v28, 1, v25) == 1)
  {
    (*(void (**)(void))(v2 + *(int *)(a1 + 76)))();
    v33 = *(_QWORD *)(a1 + 56);
    v66 = v12;
    v34 = v63;
    sub_20E39D614(v63, v22, v17, v33);
    v35 = *(void (**)(char *, uint64_t))(v62 + 8);
    v35(v22, v17);
    sub_20E39D618((uint64_t)v34, v17, (uint64_t)v22);
    v36 = *(_QWORD *)(a1 + 64);
    v37 = (uint64_t)v68;
    sub_20E3DC6B0((uint64_t)v22, v17);
    v35(v22, v17);
    v73[0] = v33;
    v73[1] = v36;
    MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v18, v73);
    v38 = *(_QWORD *)(a1 + 48);
    sub_20E3DC6B0(v37, v18);
    (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v37, v18);
    v39 = v34;
    v40 = v38;
    v35(v39, v17);
    v41 = v31;
  }
  else
  {
    v42 = (uint64_t)v68;
    v63 = v31;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v66 = *v28;
      v43 = (uint64_t)v57;
      (*(void (**)(void))(v2 + *(int *)(a1 + 80)))();
      v36 = *(_QWORD *)(a1 + 64);
      v44 = v64;
      v45 = v12;
      sub_20E39D614(v64, v43, v12, v36);
      v46 = *(void (**)(uint64_t, _QWORD *))(v56 + 8);
      v46(v43, v12);
      sub_20E39D618((uint64_t)v44, (uint64_t)v12, v43);
      v33 = *(_QWORD *)(a1 + 56);
      sub_20E39CBE0(v43, v17, (uint64_t)v12);
      v46(v43, v12);
      v74[0] = v33;
      v74[1] = v36;
      MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v18, v74);
      v40 = *(_QWORD *)(a1 + 48);
      v41 = v63;
      sub_20E3DC6B0(v42, v18);

      (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v42, v18);
      v46((uint64_t)v64, v45);
    }
    else
    {
      v47 = v59;
      (*(void (**)(char *, id *, id))(v65 + 32))(v59, v28, v66);
      v48 = (uint64_t)v61;
      (*(void (**)(char *))(v2 + *(int *)(a1 + 84)))(v47);
      v40 = *(_QWORD *)(a1 + 48);
      v49 = v60;
      v50 = v69;
      sub_20E39D614(v60, v48, v69, v40);
      v51 = *(void (**)(uint64_t, uint64_t))(v58 + 8);
      v51(v48, v50);
      sub_20E39D618((uint64_t)v49, v50, v48);
      v33 = *(_QWORD *)(a1 + 56);
      v36 = *(_QWORD *)(a1 + 64);
      v77[0] = v33;
      v77[1] = v36;
      MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v18, v77);
      v41 = v63;
      sub_20E39CBE0(v48, v18, v50);
      v51(v48, v50);
      v51((uint64_t)v49, v50);
      (*(void (**)(char *, id))(v65 + 8))(v47, v66);
    }
  }
  v76[0] = v33;
  v76[1] = v36;
  v52 = MEMORY[0x24BDEF3E0];
  v75[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v18, v76);
  v75[1] = v40;
  v53 = v52;
  v54 = v71;
  MEMORY[0x212BBDF90](v53, v71, v75);
  sub_20E39D618((uint64_t)v41, v54, v72);
  return (*(uint64_t (**)(char *, uint64_t))(v70 + 8))(v41, v54);
}

uint64_t sub_20E468138(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[2];
  __int128 v8;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = sub_20E4A3E00();
  v4 = sub_20E4A3E00();
  v8 = *(_OWORD *)(a1 + 40);
  v5 = MEMORY[0x24BDEF3E0];
  v7[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v3, &v8);
  v7[1] = v2;
  return MEMORY[0x212BBDF90](v5, v4, v7);
}

uint64_t sub_20E4681C0@<X0>(uint64_t (*a1)@<X0>(uint64_t a1@<X8>)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (**v16)@<X0>(uint64_t@<X8>);
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t (*v21)@<X0>(uint64_t@<X8>);
  uint64_t (*v22)@<X0>(uint64_t@<X8>);
  uint64_t (*v23)@<X0>(uint64_t@<X8>);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)@<X0>(uint64_t@<X8>);
  uint64_t v35;
  uint64_t v36;

  v34 = a1;
  v36 = a5;
  v8 = type metadata accessor for DispatcherPerformActionViewModifier(0, a3, a3, a4);
  v35 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v33 = (uint64_t)&v30 - v9;
  v12 = type metadata accessor for DispatcherPerformActionViewModifier.DispatcherStorage(0, a3, v10, v11);
  v32 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v31 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (uint64_t (**)@<X0>(uint64_t@<X8>))((char *)&v30 - v15);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v30 - v18;
  sub_20E3A5200();
  if ((sub_20E4A60A4() & 1) != 0)
  {
    sub_20E4A5060();
    sub_20E4A60E0();
    v20 = *(int *)(swift_getTupleTypeMetadata2() + 48);
    v21 = v34;
    sub_20E4A4E8C();
    *(uint64_t (**)@<X0>(uint64_t@<X8>))((char *)v16 + v20) = v21;
  }
  else
  {
    v22 = (uint64_t (*)@<X0>(uint64_t@<X8>))swift_allocObject();
    *((_QWORD *)v22 + 2) = a2;
    *((_QWORD *)v22 + 3) = a3;
    v23 = v34;
    *((_QWORD *)v22 + 4) = a4;
    *((_QWORD *)v22 + 5) = v23;
    *v16 = sub_20E46B460;
    v16[1] = v22;
  }
  swift_storeEnumTagMultiPayload();
  v24 = v32;
  (*(void (**)(char *, uint64_t (**)@<X0>(uint64_t@<X8>), uint64_t))(v32 + 32))(v19, v16, v12);
  v25 = (uint64_t)v31;
  (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v31, v19, v12);
  v26 = v33;
  sub_20E4688D8(v25, a3, v27, v28, v33);
  swift_retain();
  MEMORY[0x212BBBA70](v26, a2, v8, a4);
  (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v26, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v19, v12);
}

uint64_t EnvironmentValues.performAction.getter()
{
  sub_20E452C80();
  return sub_20E4A3C08();
}

uint64_t View.actionDispatcher<A>(_:with:)@<X0>(uint64_t a1@<X0>, uint64_t (*a2)@<X0>(uint64_t a1@<X8>)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (**v21)@<X0>(uint64_t@<X8>);
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)@<X0>(uint64_t@<X8>);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v7 = v6;
  v44 = a3;
  v45 = a5;
  v40 = a2;
  v36 = a1;
  v42 = a6;
  v43 = type metadata accessor for DispatcherPerformActionViewModifier(0, a4, a3, a4);
  v41 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v39 = (uint64_t)&v36 - v9;
  v10 = sub_20E4A5060();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v36 - v13;
  v17 = type metadata accessor for DispatcherPerformActionViewModifier.DispatcherStorage(0, a4, v15, v16);
  v38 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v37 = (char *)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (uint64_t (**)@<X0>(uint64_t@<X8>))((char *)&v36 - v20);
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v36 - v23;
  sub_20E3A5200();
  if ((sub_20E4A60A4() & 1) != 0)
  {
    sub_20E4A60E0();
    v25 = *(int *)(swift_getTupleTypeMetadata2() + 48);
    (*(void (**)(uint64_t (**)@<X0>(uint64_t@<X8>), uint64_t, uint64_t))(v11 + 16))(v21, v36, v10);
    (*(void (**)(uint64_t (**)@<X0>(uint64_t@<X8>), _QWORD, uint64_t, uint64_t))(v11 + 56))(v21, 0, 1, v10);
    *(uint64_t (**)@<X0>(uint64_t@<X8>))((char *)v21 + v25) = v40;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, v36, v10);
    v26 = (*(unsigned __int8 *)(v11 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    v36 = v7;
    v27 = (v12 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
    v28 = (char *)swift_allocObject();
    *((_QWORD *)v28 + 2) = v44;
    *((_QWORD *)v28 + 3) = a4;
    *((_QWORD *)v28 + 4) = v45;
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v28[v26], v14, v10);
    *(_QWORD *)&v28[v27] = v40;
    *v21 = sub_20E468860;
    v21[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v28;
  }
  swift_storeEnumTagMultiPayload();
  v29 = v38;
  (*(void (**)(char *, uint64_t (**)@<X0>(uint64_t@<X8>), uint64_t))(v38 + 32))(v24, v21, v17);
  v30 = (uint64_t)v37;
  (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v37, v24, v17);
  v31 = v39;
  sub_20E4688D8(v30, a4, v32, v33, v39);
  swift_retain();
  v34 = v43;
  MEMORY[0x212BBBA70](v31, v44, v43, v45);
  (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v31, v34);
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v24, v17);
}

uint64_t type metadata accessor for DispatcherPerformActionViewModifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DispatcherPerformActionViewModifier);
}

uint64_t type metadata accessor for DispatcherPerformActionViewModifier.DispatcherStorage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DispatcherPerformActionViewModifier.DispatcherStorage);
}

uint64_t sub_20E468744@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t TupleTypeMetadata2;
  uint64_t v8;

  v6 = sub_20E4A5060();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v8 = *(int *)(TupleTypeMetadata2 + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a3, a1, v6);
  *(_QWORD *)(a3 + v8) = a2;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 56))(a3, 0, 1, TupleTypeMetadata2);
  return swift_retain();
}

uint64_t sub_20E4687E8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_20E4A5060();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E468860@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(sub_20E4A5060() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_20E468744(v1 + v4, *(_QWORD *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)), a1);
}

uint64_t sub_20E4688D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = a5 + *(int *)(type metadata accessor for DispatcherPerformActionViewModifier(0, a2, a3, a4) + 28);
  *(_QWORD *)v8 = swift_getKeyPath();
  *(_BYTE *)(v8 + 40) = 0;
  v11 = type metadata accessor for DispatcherPerformActionViewModifier.DispatcherStorage(0, a2, v9, v10);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a5, a1, v11);
}

uint64_t View.actionDispatcher<A>(from:)@<X0>(uint64_t (*a1)@<X0>(uint64_t a1@<X8>)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v15;

  v10 = sub_20E4A5060();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v15 - v12;
  sub_20E4A4EA4();
  View.actionDispatcher<A>(_:with:)((uint64_t)v13, a1, a2, a3, a4, a5);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_20E468A10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v4;
  uint64_t TupleTypeMetadata2;
  uint64_t v6;
  uint64_t v7;

  sub_20E4A5060();
  v4 = sub_20E4A4EBC();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v6 = TupleTypeMetadata2;
  if ((v4 & 1) == 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 56))(a2, 1, 1, TupleTypeMetadata2);
  v7 = *(int *)(TupleTypeMetadata2 + 48);
  sub_20E4A4EA4();
  *(_QWORD *)(a2 + v7) = a1;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a2, 0, 1, v6);
  return swift_retain();
}

uint64_t View.actionDispatcher<A>(with:implementations:)@<X0>(uint64_t (*a1)@<X0>(uint64_t a1@<X8>)@<X0>, void (*a2)(double)@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  uint64_t v18;

  v12 = sub_20E4A5060();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v18 - v15;
  a2(v14);
  View.actionDispatcher<A>(_:with:)((uint64_t)v16, a1, a3, a4, a5, a6);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v16, v12);
}

uint64_t PerformAction.callAsFunction(_:withMetrics:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of PerformAction._objectGraph.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of PerformAction.callAsFunction(_:withMetrics:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t sub_20E468BD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[2];

  v4 = *(_QWORD *)(a1 + 16);
  v5 = type metadata accessor for DispatcherPerformActionViewModifier(255, *(_QWORD *)(a1 + 8), a3, a4);
  v6 = sub_20E4A39D4();
  v8[0] = v4;
  v8[1] = MEMORY[0x212BBDF90](&unk_20E4AF838, v5);
  return MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v6, v8);
}

uint64_t sub_20E468C4C()
{
  uint64_t result;
  unint64_t v1;
  _QWORD v2[6];

  v2[4] = MEMORY[0x24BEE4AF0] + 64;
  sub_20E4A5060();
  result = sub_20E4A60E0();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v2[5] = v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *sub_20E468CE4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t TupleTypeMetadata2;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_20E4A5060();
      v7 = *(_QWORD *)(v6 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
      {
        v8 = sub_20E4A60E0();
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      sub_20E4A60E0();
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      *(uint64_t *)((char *)a1 + *(int *)(TupleTypeMetadata2 + 48)) = *(uint64_t *)((char *)a2
                                                                                + *(int *)(TupleTypeMetadata2 + 48));
      swift_retain();
    }
    else
    {
      v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_20E468E40(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v2 = sub_20E4A5060();
    v3 = *(_QWORD *)(v2 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2))
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
    sub_20E4A60E0();
    swift_getTupleTypeMetadata2();
  }
  return swift_release();
}

_QWORD *sub_20E468EF0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t TupleTypeMetadata2;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_20E4A5060();
    v5 = *(_QWORD *)(v4 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
    {
      v6 = sub_20E4A60E0();
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v5 + 16))(a1, a2, v4);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
    }
    sub_20E4A60E0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    *(_QWORD *)((char *)a1 + *(int *)(TupleTypeMetadata2 + 48)) = *(_QWORD *)((char *)a2
                                                                            + *(int *)(TupleTypeMetadata2 + 48));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_20E469020(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t TupleTypeMetadata2;

  if (a1 != a2)
  {
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(a3 - 8) + 8))(a1, a3);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v5 = sub_20E4A5060();
      v6 = *(_QWORD *)(v5 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
      {
        v7 = sub_20E4A60E0();
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 16))(a1, a2, v5);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      }
      sub_20E4A60E0();
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      *(_QWORD *)((char *)a1 + *(int *)(TupleTypeMetadata2 + 48)) = *(_QWORD *)((char *)a2
                                                                              + *(int *)(TupleTypeMetadata2 + 48));
      swift_retain();
    }
    else
    {
      v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_20E46916C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t TupleTypeMetadata2;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_20E4A5060();
    v7 = *(_QWORD *)(v6 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      v8 = sub_20E4A60E0();
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    sub_20E4A60E0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    *(_QWORD *)&a1[*(int *)(TupleTypeMetadata2 + 48)] = *(_QWORD *)&a2[*(int *)(TupleTypeMetadata2 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

char *sub_20E469294(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t TupleTypeMetadata2;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 - 8);
    (*(void (**)(char *, uint64_t))(v5 + 8))(a1, a3);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_20E4A5060();
      v7 = *(_QWORD *)(v6 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
      {
        v8 = sub_20E4A60E0();
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      sub_20E4A60E0();
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      *(_QWORD *)&a1[*(int *)(TupleTypeMetadata2 + 48)] = *(_QWORD *)&a2[*(int *)(TupleTypeMetadata2 + 48)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
  }
  return a1;
}

ValueMetadata *type metadata accessor for PerformActionKey()
{
  return &type metadata for PerformActionKey;
}

uint64_t sub_20E4693E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v5;

  result = type metadata accessor for DispatcherPerformActionViewModifier.DispatcherStorage(319, *(_QWORD *)(a1 + 16), a3, a4);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_20E469458(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  int v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t TupleTypeMetadata2;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;

  v6 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v6 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    type metadata accessor for DispatcherPerformActionViewModifier.DispatcherStorage(0, *(_QWORD *)(a3 + 16), a3, a4);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v8 = sub_20E4A5060();
      v9 = *(_QWORD *)(v8 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
      {
        v10 = sub_20E4A60E0();
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 16))(a1, a2, v8);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
      }
      sub_20E4A60E0();
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      *(uint64_t *)((char *)a1 + *(int *)(TupleTypeMetadata2 + 48)) = *(uint64_t *)((char *)a2
                                                                                + *(int *)(TupleTypeMetadata2 + 48));
      swift_retain();
    }
    else
    {
      v12 = a2[1];
      *a1 = *a2;
      a1[1] = v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v14 = *(int *)(a3 + 28);
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    if ((*((_BYTE *)a2 + v14 + 40) & 1) != 0)
    {
      v17 = *((_QWORD *)v16 + 3);
      if (v17)
      {
        v18 = *((_QWORD *)v16 + 4);
        *((_QWORD *)v15 + 3) = v17;
        *((_QWORD *)v15 + 4) = v18;
        (**(void (***)(char *))(v17 - 8))(v15);
      }
      else
      {
        v19 = *((_OWORD *)v16 + 1);
        *(_OWORD *)v15 = *(_OWORD *)v16;
        *((_OWORD *)v15 + 1) = v19;
        *((_QWORD *)v15 + 4) = *((_QWORD *)v16 + 4);
      }
      v15[40] = 1;
    }
    else
    {
      *(_QWORD *)v15 = *(_QWORD *)v16;
      v15[40] = 0;
      swift_retain();
    }
  }
  return a1;
}

uint64_t sub_20E469630(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  type metadata accessor for DispatcherPerformActionViewModifier.DispatcherStorage(0, *(_QWORD *)(a2 + 16), a3, a4);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_20E4A5060();
    v7 = *(_QWORD *)(v6 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    sub_20E4A60E0();
    swift_getTupleTypeMetadata2();
  }
  swift_release();
  result = a1 + *(int *)(a2 + 28);
  if ((*(_BYTE *)(result + 40) & 1) == 0)
    return swift_release();
  if (*(_QWORD *)(result + 24))
    return __swift_destroy_boxed_opaque_existential_1(result);
  return result;
}

_QWORD *sub_20E469744(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t TupleTypeMetadata2;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  type metadata accessor for DispatcherPerformActionViewModifier.DispatcherStorage(0, *(_QWORD *)(a3 + 16), a3, a4);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_20E4A5060();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = sub_20E4A60E0();
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    sub_20E4A60E0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    *(_QWORD *)((char *)a1 + *(int *)(TupleTypeMetadata2 + 48)) = *(_QWORD *)((char *)a2
                                                                            + *(int *)(TupleTypeMetadata2 + 48));
    swift_retain();
  }
  else
  {
    v10 = a2[1];
    *a1 = *a2;
    a1[1] = v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v12 = *(int *)(a3 + 28);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  if ((*((_BYTE *)a2 + v12 + 40) & 1) != 0)
  {
    v15 = *((_QWORD *)v14 + 3);
    if (v15)
    {
      v16 = *((_QWORD *)v14 + 4);
      *((_QWORD *)v13 + 3) = v15;
      *((_QWORD *)v13 + 4) = v16;
      (**(void (***)(char *))(v15 - 8))(v13);
    }
    else
    {
      v17 = *((_OWORD *)v14 + 1);
      *(_OWORD *)v13 = *(_OWORD *)v14;
      *((_OWORD *)v13 + 1) = v17;
      *((_QWORD *)v13 + 4) = *((_QWORD *)v14 + 4);
    }
    v13[40] = 1;
  }
  else
  {
    *(_QWORD *)v13 = *(_QWORD *)v14;
    v13[40] = 0;
    swift_retain();
  }
  return a1;
}

_QWORD *sub_20E4698F0(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t TupleTypeMetadata2;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;

  if (a1 != a2)
  {
    v7 = type metadata accessor for DispatcherPerformActionViewModifier.DispatcherStorage(0, *(_QWORD *)(a3 + 16), a3, a4);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a1, v7);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v8 = sub_20E4A5060();
      v9 = *(_QWORD *)(v8 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
      {
        v10 = sub_20E4A60E0();
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v9 + 16))(a1, a2, v8);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
      }
      sub_20E4A60E0();
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      *(_QWORD *)((char *)a1 + *(int *)(TupleTypeMetadata2 + 48)) = *(_QWORD *)((char *)a2
                                                                              + *(int *)(TupleTypeMetadata2 + 48));
      swift_retain();
    }
    else
    {
      v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v13 = *(int *)(a3 + 28);
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    sub_20E39D1F8((uint64_t)a1 + v13, &qword_253ED0A18);
    if ((v15[40] & 1) != 0)
    {
      v16 = *((_QWORD *)v15 + 3);
      if (v16)
      {
        *((_QWORD *)v14 + 3) = v16;
        *((_QWORD *)v14 + 4) = *((_QWORD *)v15 + 4);
        (**(void (***)(char *, char *))(v16 - 8))(v14, v15);
      }
      else
      {
        v17 = *(_OWORD *)v15;
        v18 = *((_OWORD *)v15 + 1);
        *((_QWORD *)v14 + 4) = *((_QWORD *)v15 + 4);
        *(_OWORD *)v14 = v17;
        *((_OWORD *)v14 + 1) = v18;
      }
      v14[40] = 1;
    }
    else
    {
      *(_QWORD *)v14 = *(_QWORD *)v15;
      v14[40] = 0;
      swift_retain();
    }
  }
  return a1;
}

char *sub_20E469AD0(char *a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t TupleTypeMetadata2;
  uint64_t v12;
  char *v13;
  char *v14;
  __int128 v15;

  v7 = type metadata accessor for DispatcherPerformActionViewModifier.DispatcherStorage(0, *(_QWORD *)(a3 + 16), a3, a4);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_20E4A5060();
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
    {
      v10 = sub_20E4A60E0();
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(a1, a2, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    sub_20E4A60E0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    *(_QWORD *)&a1[*(int *)(TupleTypeMetadata2 + 48)] = *(_QWORD *)&a2[*(int *)(TupleTypeMetadata2 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  v12 = *(int *)(a3 + 28);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = *((_OWORD *)v14 + 1);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = v15;
  *(_OWORD *)(v13 + 25) = *(_OWORD *)(v14 + 25);
  return a1;
}

char *sub_20E469C2C(char *a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t TupleTypeMetadata2;
  uint64_t v13;
  char *v14;
  char *v15;
  __int128 v16;

  if (a1 != a2)
  {
    v7 = type metadata accessor for DispatcherPerformActionViewModifier.DispatcherStorage(0, *(_QWORD *)(a3 + 16), a3, a4);
    v8 = *(_QWORD *)(v7 - 8);
    (*(void (**)(char *, uint64_t))(v8 + 8))(a1, v7);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = sub_20E4A5060();
      v10 = *(_QWORD *)(v9 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(a2, 1, v9))
      {
        v11 = sub_20E4A60E0();
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v10 + 32))(a1, a2, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
      }
      sub_20E4A60E0();
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      *(_QWORD *)&a1[*(int *)(TupleTypeMetadata2 + 48)] = *(_QWORD *)&a2[*(int *)(TupleTypeMetadata2 + 48)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(v8 + 64));
    }
    v13 = *(int *)(a3 + 28);
    v14 = &a2[v13];
    v15 = &a1[v13];
    sub_20E39D1F8((uint64_t)&a1[v13], &qword_253ED0A18);
    v16 = *((_OWORD *)v14 + 1);
    *(_OWORD *)v15 = *(_OWORD *)v14;
    *((_OWORD *)v15 + 1) = v16;
    *(_OWORD *)(v15 + 25) = *(_OWORD *)(v14 + 25);
  }
  return a1;
}

uint64_t sub_20E469DB0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_20E469DBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  unsigned int v10;

  v7 = type metadata accessor for DispatcherPerformActionViewModifier.DispatcherStorage(0, *(_QWORD *)(a3 + 16), a3, a4);
  v8 = *(_QWORD *)(v7 - 8);
  if (*(_DWORD *)(v8 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(a1, a2, v7);
  v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 28) + 40);
  if (v10 > 1)
    return (v10 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t sub_20E469E3C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_20E469E48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v5;
  uint64_t result;
  uint64_t v9;

  v5 = a3;
  result = type metadata accessor for DispatcherPerformActionViewModifier.DispatcherStorage(0, *(_QWORD *)(a4 + 16), a3, a4);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == v5)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 28) + 40) = -(char)a2;
  return result;
}

double sub_20E469EC8@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)(a1 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t sub_20E469ED8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E469F0C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_20E4A51A4();
  v3 = MEMORY[0x24BE5D370];
  a1[3] = v2;
  a1[4] = v3;
  __swift_allocate_boxed_opaque_existential_1Tm(a1);
  return sub_20E4A5198();
}

uint64_t sub_20E469F4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unsigned int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17[5];
  __int128 v18[2];

  v4 = sub_20E4A5000();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v17 - v6;
  v8 = sub_20E4A5060();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v17 - v10;
  sub_20E4A4EA4();
  sub_20E4A4F70();
  if ((sub_20E4A4EBC() & 1) != 0)
  {
    v12 = sub_20E4A5384();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v7, a2, v12);
    v13 = (unsigned int *)MEMORY[0x24BE5D098];
  }
  else
  {
    v13 = (unsigned int *)MEMORY[0x24BE5D0A0];
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *v13, v4);
  sub_20E4A5054();
  sub_20E3C39FC(a1, (uint64_t)v18);
  v14 = swift_allocObject();
  sub_20E3B1AB4(v18, v14 + 16);
  sub_20E3C39FC(a1, (uint64_t)v18);
  v15 = swift_allocObject();
  sub_20E3B1AB4(v18, v15 + 16);
  v17[3] = sub_20E4A51A4();
  v17[4] = MEMORY[0x24BE5D370];
  __swift_allocate_boxed_opaque_existential_1Tm(v17);
  sub_20E4A5198();
  sub_20E4A5984();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
}

uint64_t sub_20E46A174(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  char v13;
  uint64_t result;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *boxed_opaque_existential_1Tm;
  uint64_t v18[4];

  v3 = sub_20E4A4A90();
  MEMORY[0x24BDAC7A8](v3);
  v4 = sub_20E4A5A8C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_20E4A4CB8();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, double))(v9 + 104))(v12, *MEMORY[0x24BE5CBE0], v8, v10);
  v13 = sub_20E4A4CAC();
  result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  if ((v13 & 1) != 0)
  {
    sub_20E4A5A08();
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0D58);
    sub_20E4A4ACC();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_20E4A8070;
    sub_20E4A4A84();
    sub_20E4A4A78();
    v15 = a2[3];
    v16 = __swift_project_boxed_opaque_existential_1(a2, v15);
    v18[3] = v15;
    boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v18);
    (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(boxed_opaque_existential_1Tm, v16, v15);
    sub_20E4A4A6C();
    sub_20E39D1F8((uint64_t)v18, &qword_253ED2A38);
    sub_20E4A4A78();
    sub_20E4A4A9C();
    sub_20E4A4A30();
    sub_20E4A575C();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return result;
}

uint64_t sub_20E46A3E8(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t *boxed_opaque_existential_1Tm;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17[3];
  uint64_t v18;

  v3 = sub_20E4A4A90();
  MEMORY[0x24BDAC7A8](v3);
  v4 = sub_20E4A5A8C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20E4A5A08();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0D58);
  sub_20E4A4ACC();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_20E4A72D0;
  sub_20E4A4A84();
  sub_20E4A4A78();
  v8 = a2[3];
  v9 = __swift_project_boxed_opaque_existential_1(a2, v8);
  v18 = v8;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v17);
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(boxed_opaque_existential_1Tm, v9, v8);
  sub_20E4A4A6C();
  sub_20E39D1F8((uint64_t)v17, &qword_253ED2A38);
  sub_20E4A4A78();
  swift_getErrorValue();
  v11 = v15;
  v12 = v16;
  v18 = v16;
  v13 = __swift_allocate_boxed_opaque_existential_1Tm(v17);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v13, v11, v12);
  sub_20E4A4A54();
  sub_20E39D1F8((uint64_t)v17, &qword_253ED2A38);
  sub_20E4A4A78();
  sub_20E4A4A9C();
  sub_20E4A575C();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_20E46A61C()
{
  return swift_retain();
}

uint64_t sub_20E46A624(uint64_t a1, uint64_t a2)
{
  return sub_20E469F4C(a1, a2);
}

uint64_t sub_20E46A634@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  char *v57;
  void (*v58)(char *, uint64_t);
  uint64_t v59;
  unint64_t v60;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD v80[2];
  _BYTE v81[40];
  _QWORD v82[2];
  _QWORD v83[2];
  _QWORD v84[3];

  v77 = a3;
  v74 = a1;
  v4 = *(_QWORD *)(a2 + 16);
  v5 = sub_20E4A5060();
  v69 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v67 = (char *)&v62 - v6;
  v70 = v7;
  v8 = sub_20E4A60E0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v68 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v62 - v13;
  MEMORY[0x212BBDF90](&unk_20E4AF838, a2, v12);
  v15 = sub_20E4A3EA8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253ED0C50);
  v72 = v15;
  v16 = sub_20E4A39D4();
  v73 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v62 - v20;
  v79 = v4;
  v24 = type metadata accessor for DispatcherPerformActionViewModifier.DispatcherStorage(0, v4, v22, v23);
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v27 = (uint64_t *)((char *)&v62 - v26);
  v28 = sub_20E4A3E00();
  v75 = *(_QWORD *)(v28 - 8);
  v76 = v28;
  v29 = MEMORY[0x24BDAC7A8](v28);
  v71 = (char *)&v62 - v30;
  (*(void (**)(uint64_t *, uint64_t, uint64_t, double))(v25 + 16))(v27, v78, v24, v29);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v31 = (uint64_t)v67;
    v65 = v21;
    v66 = *(uint64_t *)((char *)v27 + *(int *)(swift_getTupleTypeMetadata2() + 48));
    (*(void (**)(char *, uint64_t *, uint64_t))(v9 + 32))(v14, v27, v8);
    v32 = v68;
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v68, v14, v8);
    v33 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v69 + 48))(v32, 1, v70);
    v34 = v72;
    v35 = (uint64_t)v71;
    v64 = v14;
    v63 = v8;
    if (v33 == 1)
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v32, v8);
      v36 = 0;
      v37 = v79;
    }
    else
    {
      v62 = v9;
      v49 = v69;
      v50 = v70;
      (*(void (**)(uint64_t, char *, uint64_t))(v69 + 32))(v31, v32, v70);
      v51 = v66;
      swift_retain();
      sub_20E45D570((uint64_t)v81);
      v37 = v79;
      v36 = sub_20E46AF64(v31, v51, (uint64_t)v81, v79);
      swift_release();
      v52 = *(void (**)(uint64_t, uint64_t))(v49 + 8);
      v9 = v62;
      v52(v31, v50);
    }
    swift_getKeyPath();
    v53 = swift_allocObject();
    *(_QWORD *)(v53 + 16) = v37;
    *(_QWORD *)(v53 + 24) = v36;
    swift_retain();
    v54 = MEMORY[0x212BBDF90](MEMORY[0x24BDEFB78], v34);
    sub_20E4A4388();
    swift_release();
    swift_release();
    v55 = sub_20E46AF18();
    v84[0] = v54;
    v84[1] = v55;
    v56 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v16, v84);
    v57 = v65;
    sub_20E39D614(v65, v18, v16, v56);
    v58 = *(void (**)(char *, uint64_t))(v73 + 8);
    v58(v18, v16);
    sub_20E39D618((uint64_t)v57, v16, (uint64_t)v18);
    sub_20E39CBE0((uint64_t)v18, v16, v16);
    swift_release();
    swift_release();
    v58(v18, v16);
    v58(v57, v16);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v64, v63);
    v47 = v76;
    v46 = v77;
    v48 = v75;
  }
  else
  {
    v39 = *v27;
    v38 = v27[1];
    swift_getKeyPath();
    v40 = (_QWORD *)swift_allocObject();
    v40[2] = v79;
    v40[3] = v39;
    v40[4] = v38;
    swift_retain();
    v34 = v72;
    v41 = MEMORY[0x212BBDF90](MEMORY[0x24BDEFB78], v72);
    sub_20E4A4388();
    swift_release();
    swift_release();
    v42 = sub_20E46AF18();
    v80[0] = v41;
    v80[1] = v42;
    v43 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v16, v80);
    sub_20E39D614(v21, v18, v16, v43);
    v44 = *(void (**)(char *, uint64_t))(v73 + 8);
    v44(v18, v16);
    sub_20E39D618((uint64_t)v21, v16, (uint64_t)v18);
    v45 = v71;
    sub_20E3DC6B0((uint64_t)v18, v16);
    swift_release();
    v44(v18, v16);
    v44(v21, v16);
    v47 = v76;
    v46 = v77;
    v48 = v75;
    v35 = (uint64_t)v45;
  }
  v59 = MEMORY[0x212BBDF90](MEMORY[0x24BDEFB78], v34);
  v60 = sub_20E46AF18();
  v83[0] = v59;
  v83[1] = v60;
  v82[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v16, v83);
  v82[1] = v82[0];
  MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v47, v82);
  sub_20E39D618(v35, v47, v46);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v48 + 8))(v35, v47);
}

uint64_t sub_20E46ACB8(uint64_t a1, void (*a2)(double), uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t TupleTypeMetadata2;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[3];
  uint64_t v25;
  uint64_t v26;

  v23 = a1;
  v6 = sub_20E4A5060();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v8 = sub_20E4A60E0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v24[-1] - v10;
  v12 = *(_QWORD *)(v6 - 8);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v24[-1] - v15;
  a2(v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 48))(v11, 1, TupleTypeMetadata2) == 1)return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v18 = *(_QWORD *)&v11[*(int *)(TupleTypeMetadata2 + 48)];
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v16, v11, v6);
  v19 = v23;
  sub_20E454568(v23, (uint64_t)v24);
  swift_retain();
  v20 = sub_20E46AF64((uint64_t)v16, v18, (uint64_t)v24, a4);
  swift_release();
  v25 = type metadata accessor for DispatcherPerformAction(0, a4, v21, v22);
  v26 = MEMORY[0x212BBDF90](&unk_20E4AF8E0, v25);
  swift_release();
  v24[0] = v20;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v16, v6);
  return sub_20E454568((uint64_t)v24, v19);
}

uint64_t sub_20E46AE70(uint64_t result, uint64_t a2, uint64_t a3)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (a2)
  {
    v5 = (_QWORD *)result;
    swift_retain();
    sub_20E39D1F8((uint64_t)v5, &qword_253ED0658);
    v8 = type metadata accessor for DispatcherPerformAction(0, a3, v6, v7);
    v5[3] = v8;
    result = MEMORY[0x212BBDF90](&unk_20E4AF8E0, v8);
    v5[4] = result;
    *v5 = a2;
  }
  return result;
}

uint64_t sub_20E46AEEC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E46AF10(uint64_t a1)
{
  uint64_t v1;

  return sub_20E46AE70(a1, *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 16));
}

unint64_t sub_20E46AF18()
{
  unint64_t result;
  uint64_t v1;

  result = qword_253ED0C48;
  if (!qword_253ED0C48)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253ED0C50);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDF1248], v1);
    atomic_store(result, (unint64_t *)&qword_253ED0C48);
  }
  return result;
}

uint64_t sub_20E46AF64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  void (*v49)(char *, uint64_t, uint64_t, double);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52[6];

  v47 = a2;
  v7 = sub_20E4A4A24();
  v50 = *(_QWORD *)(v7 - 8);
  v51 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v48 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_20E4A55D0();
  v40 = *(_QWORD *)(v9 - 8);
  v41 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v39 = (char *)&v39 - v10;
  v11 = sub_20E4A56D8();
  v43 = *(_QWORD *)(v11 - 8);
  v44 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v42 = (char *)&v39 - v12;
  v13 = sub_20E4A56B4();
  v45 = *(_QWORD *)(v13 - 8);
  v46 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v39 - v14;
  v16 = sub_20E4A5060();
  v17 = sub_20E4A60E0();
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v39 - v18;
  v20 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v39 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)&v39 - v26;
  v49 = *(void (**)(char *, uint64_t, uint64_t, double))(v20 + 16);
  v49((char *)&v39 - v26, a1, v16, v25);
  v28 = a3;
  sub_20E4545B0(a3, (uint64_t)v52);
  if (v52[3])
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0650);
    type metadata accessor for DispatcherPerformAction(0, a4, v29, v30);
    if ((swift_dynamicCast() & 1) != 0)
    {
      swift_retain();
      sub_20E4A4EA4();
      swift_release();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v19, 0, 1, v16);
      sub_20E4A5030();
      swift_release();
    }
  }
  else
  {
    sub_20E39D1F8((uint64_t)v52, &qword_253ED0658);
  }
  if (!*(_QWORD *)(a3 + 24))
  {
    sub_20E4A4CD0();
    if ((sub_20E4A5018() & 1) == 0)
    {
      sub_20E469F0C(v52);
      sub_20E4A56A8();
      v31 = v46;
      MEMORY[0x212BBDF90](MEMORY[0x24BE5DBC8], v46);
      sub_20E4A5024();
      (*(void (**)(char *, uint64_t))(v45 + 8))(v15, v31);
    }
    if (!*(_QWORD *)(v28 + 24))
    {
      sub_20E4A4DFC();
      if ((sub_20E4A5018() & 1) == 0)
      {
        v32 = v42;
        sub_20E4A56CC();
        v33 = v44;
        MEMORY[0x212BBDF90](MEMORY[0x24BE5DC60], v44);
        sub_20E4A5024();
        (*(void (**)(char *, uint64_t))(v43 + 8))(v32, v33);
      }
      if (!*(_QWORD *)(v28 + 24))
      {
        sub_20E4A4B08();
        if ((sub_20E4A5018() & 1) == 0)
        {
          v34 = v39;
          sub_20E4A55C4();
          v35 = v41;
          MEMORY[0x212BBDF90](MEMORY[0x24BE5DAB8], v41);
          sub_20E4A5024();
          (*(void (**)(char *, uint64_t))(v40 + 8))(v34, v35);
        }
      }
    }
  }
  ((void (*)(char *, char *, uint64_t))v49)(v23, v27, v16);
  swift_retain();
  v36 = v48;
  sub_20E4A4A00();
  v37 = sub_20E4A4F10();
  swift_release();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v36, v51);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v27, v16);
  sub_20E39D1F8(v28, &qword_253ED0658);
  return v37;
}

uint64_t sub_20E46B400()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E46B424(uint64_t a1)
{
  uint64_t v1;

  return sub_20E46ACB8(a1, *(void (**)(double))(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 16));
}

uint64_t type metadata accessor for DispatcherPerformAction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DispatcherPerformAction);
}

uint64_t sub_20E46B43C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E46B460@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_20E468A10(*(_QWORD *)(v1 + 40), a1);
}

uint64_t sub_20E46B46C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[2];
  _QWORD v10[2];

  v4 = type metadata accessor for DispatcherPerformActionViewModifier(255, *a1, a3, a4);
  MEMORY[0x212BBDF90](&unk_20E4AF838, v4);
  v5 = sub_20E4A3EA8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253ED0C50);
  v6 = sub_20E4A39D4();
  v7 = sub_20E4A3E00();
  v10[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDEFB78], v5);
  v10[1] = sub_20E46AF18();
  v9[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v6, v10);
  v9[1] = v9[0];
  return MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v7, v9);
}

uint64_t sub_20E46B544()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_20E46B568(uint64_t a1)
{
  uint64_t v1;

  return sub_20E46A174(a1, (_QWORD *)(v1 + 16));
}

uint64_t sub_20E46B570(uint64_t a1)
{
  uint64_t v1;

  return sub_20E46A3E8(a1, (_QWORD *)(v1 + 16));
}

uint64_t sub_20E46B57C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1BB58);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1BB80);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_20E4A8040;
  v5 = v0[1];
  v14 = *v0;
  v15 = v5;
  swift_bridgeObjectRetain();
  sub_20E4A6188();
  v6 = v0[3];
  v14 = v0[2];
  v15 = v6;
  swift_bridgeObjectRetain();
  sub_20E4A6188();
  v7 = _s13PopupHUDModelC8RowModelVMa(0);
  sub_20E3A5E20((uint64_t)v0 + *(int *)(v7 + 24), (uint64_t)v3, &qword_254A1BB58);
  v8 = sub_20E4A4D00();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v3, 1, v8);
  if (v10 == 1)
  {
    sub_20E39D1F8((uint64_t)v3, &qword_254A1BB58);
    v11 = 0;
  }
  else
  {
    sub_20E4A4CDC();
    v11 = v12;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v3, v8);
  }
  v14 = v11;
  LOBYTE(v15) = v10 == 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1BB88);
  sub_20E3B1B30(&qword_254A1BB90, &qword_254A1BB88, MEMORY[0x24BEE13E8], MEMORY[0x24BEE4AB0]);
  sub_20E4A6188();
  v14 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A18550);
  sub_20E3B1B30(&qword_254A18558, &qword_254A18550, MEMORY[0x24BEE23D8], MEMORY[0x24BEE12A8]);
  return sub_20E4A6188();
}

uint64_t sub_20E46B7A4()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_20E4A35CC();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_20E46B818()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_20E4A35CC();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_20E46B888()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0
     + OBJC_IVAR____TtCC18_JetEngine_SwiftUI28_PageRenderMetricsVisualizerP33_71C7C2830233A285322DF4F35DFC4EC113PopupHUDModel__title;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1BBA8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0
     + OBJC_IVAR____TtCC18_JetEngine_SwiftUI28_PageRenderMetricsVisualizerP33_71C7C2830233A285322DF4F35DFC4EC113PopupHUDModel__rows;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1BBB0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return swift_deallocClassInstance();
}

uint64_t sub_20E46B908()
{
  return _s13PopupHUDModelCMa(0);
}

uint64_t _s13PopupHUDModelCMa(uint64_t a1)
{
  return sub_20E3A4CD0(a1, (uint64_t *)&unk_254A1BB10);
}

void sub_20E46B924()
{
  unint64_t v0;
  unint64_t v1;

  sub_20E46B9AC();
  if (v0 <= 0x3F)
  {
    sub_20E46BA00();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

void sub_20E46B9AC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254A1BB20)
  {
    v0 = sub_20E4A35E4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254A1BB20);
  }
}

void sub_20E46BA00()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254A1BB28)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1AC30);
    v0 = sub_20E4A35E4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254A1BB28);
  }
}

void sub_20E46BA58()
{
  id v0;
  void *v1;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1500]), sel_init);
  v1 = (void *)sub_20E4A5C18();
  objc_msgSend(v0, sel_setDateFormat_, v1);

  qword_254A1BAF8 = (uint64_t)v0;
}

uint64_t sub_20E46BAD0(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD **v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t result;
  int v38;
  void (*v39)(_QWORD);
  uint64_t v40;
  uint64_t v41;
  int v42;
  _QWORD *v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  BOOL v50;
  char v51;
  uint64_t KeyPath;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(uint64_t *, _QWORD);
  uint64_t v58;
  uint64_t *v59;
  void *v60;
  char *v61;
  void *v62;
  char *v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(uint64_t *, _QWORD);
  unint64_t *v70;
  unint64_t *v71;
  unint64_t v72;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t (*v77)(char *, uint64_t);
  char *v78;
  void (*v79)(char *, uint64_t);
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  char v85;
  unint64_t *v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t *v92;
  _QWORD *v93;
  unint64_t v94;
  char v95;
  char *v96;
  void *v97;
  char *v98;
  void *v99;
  id v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t *v103;
  char v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t *v110;
  uint64_t v111;
  double v112;
  char **v113;
  char **v114;
  char v115;
  char *v116;
  uint64_t v117;
  char *v118;
  void (*v119)(uint64_t *, _QWORD);
  void (*v120)(_QWORD);
  uint64_t *v121;
  char *v122;
  uint64_t v123;
  void (*v124)(_QWORD);
  unint64_t v125;
  _QWORD *v126;
  char *v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  char *v135;
  uint64_t v136;
  void (*v137)(char *, void (*)(_QWORD));
  char *v138;
  char *v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  unint64_t v147;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1BB58);
  MEMORY[0x24BDAC7A8](v4);
  v133 = (uint64_t)&v123 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v134 = (char *)&v123 - v7;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v123 - v9;
  v11 = sub_20E4A338C();
  v136 = *(_QWORD *)(v11 - 8);
  v137 = (void (*)(char *, void (*)(_QWORD)))v11;
  MEMORY[0x24BDAC7A8](v11);
  v135 = (char *)&v123 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_20E4A4D00();
  v143 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v131 = (char *)&v123 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v141 = (char *)&v123 - v16;
  MEMORY[0x24BDAC7A8](v17);
  v139 = (char *)&v123 - v18;
  MEMORY[0x24BDAC7A8](v19);
  v138 = (char *)&v123 - v20;
  v144 = _s13PopupHUDModelC8RowModelVMa(0);
  v142 = *(_QWORD *)(v144 - 8);
  MEMORY[0x24BDAC7A8](v144);
  v132 = (uint64_t)&v123 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v140 = (uint64_t)&v123 - v23;
  MEMORY[0x24BDAC7A8](v24);
  v26 = (uint64_t)&v123 - v25;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1BB78);
  MEMORY[0x24BDAC7A8](v27);
  v29 = (char *)&v123 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_20E4A4E08();
  v31 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v33 = (_QWORD **)((char *)&v123 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v34);
  v36 = (char *)&v123 - v35;
  sub_20E4A4E14();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30) == 1)
    return sub_20E39D1F8((uint64_t)v29, &qword_254A1BB78);
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v36, v29, v30);
  v145 = a1;
  v38 = sub_20E46CC08(a1);
  v39 = (void (*)(_QWORD))v13;
  if (v38)
  {
    if (v38 != 1)
      return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v36, v30);
    v40 = sub_20E4A4E20();
    sub_20E46CE30((uint64_t)v36, v40, v41);
    v39 = (void (*)(_QWORD))v13;
    swift_bridgeObjectRelease();
  }
  (*(void (**)(_QWORD **, char *, uint64_t))(v31 + 16))(v33, v36, v30);
  v42 = (*(uint64_t (**)(_QWORD **, uint64_t))(v31 + 88))(v33, v30);
  if (v42 != *MEMORY[0x24BE5CE20])
  {
    v130 = v30;
    if (v42 != *MEMORY[0x24BE5CE18])
    {
      v79 = *(void (**)(char *, uint64_t))(v31 + 8);
      v80 = v130;
      v79(v36, v130);
      return ((uint64_t (*)(_QWORD **, uint64_t))v79)(v33, v80);
    }
    v128 = v31;
    swift_getKeyPath();
    KeyPath = swift_getKeyPath();
    sub_20E4A35CC();
    swift_release();
    swift_release();
    v53 = *(_QWORD *)(v146 + 16);
    swift_bridgeObjectRelease();
    v50 = v53 == 4;
    v46 = (_QWORD *)v145;
    if (v50)
    {
      v54 = swift_getKeyPath();
      v10 = (char *)swift_getKeyPath();
      v55 = sub_20E4A35C0();
      if (!*(_QWORD *)(*(_QWORD *)v56 + 16))
        goto LABEL_71;
      v57 = (void (*)(uint64_t *, _QWORD))v55;
      sub_20E3DF2A8(0, 1);
      v57(&v146, 0);
      swift_release();
      swift_release();
    }
    v129 = v36;
    v58 = sub_20E4A4E38();
    v13 = (uint64_t)v59;
    v36 = v138;
    sub_20E4A4E2C();
    if (qword_254A18120 != -1)
LABEL_69:
      swift_once();
    v60 = (void *)qword_254A1BAF8;
    _s21PopupHUDConfigurationVMa(0);
    v61 = v135;
    sub_20E4A54D4();
    v62 = (void *)sub_20E4A3368();
    (*(void (**)(char *, _QWORD))(v136 + 8))(v61, v137);
    v63 = v36;
    v64 = objc_msgSend(v60, sel_stringFromDate_, v62);

    v65 = sub_20E4A5C3C();
    v67 = v66;

    v68 = v143;
    (*(void (**)(char *, void (*)(_QWORD)))(v143 + 8))(v63, v39);
    (*(void (**)(uint64_t, uint64_t, uint64_t, void (*)(_QWORD)))(v68 + 56))(v26 + *(int *)(v144 + 24), 1, 1, v39);
    *(_QWORD *)v26 = v58;
    *(_QWORD *)(v26 + 8) = v13;
    *(_QWORD *)(v26 + 16) = v65;
    *(_QWORD *)(v26 + 24) = v67;
    swift_getKeyPath();
    swift_getKeyPath();
    v69 = (void (*)(uint64_t *, _QWORD))sub_20E4A35C0();
    v71 = v70;
    v72 = *v70;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v71 = v72;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v72 = sub_20E3AD6DC(0, *(_QWORD *)(v72 + 16) + 1, 1, v72);
      *v71 = v72;
    }
    v74 = v142;
    v76 = *(_QWORD *)(v72 + 16);
    v75 = *(_QWORD *)(v72 + 24);
    if (v76 >= v75 >> 1)
    {
      v72 = sub_20E3AD6DC(v75 > 1, v76 + 1, 1, v72);
      *v71 = v72;
    }
    *(_QWORD *)(v72 + 16) = v76 + 1;
    sub_20E46F660(v26, v72+ ((*(unsigned __int8 *)(v74 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80))+ *(_QWORD *)(v74 + 72) * v76);
LABEL_28:
    v69(&v146, 0);
    swift_release();
    swift_release();
LABEL_29:
    v77 = *(uint64_t (**)(char *, uint64_t))(v128 + 8);
    v78 = v129;
    return v77(v78, v130);
  }
  v129 = v36;
  v128 = v31;
  (*(void (**)(_QWORD **, uint64_t))(v31 + 96))(v33, v30);
  v43 = *v33;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_20E4A35CC();
  swift_release();
  swift_release();
  v44 = v146;
  v45 = *(_QWORD **)(v146 + 16);
  if (!v45)
  {
    swift_bridgeObjectRelease();
    goto LABEL_32;
  }
  v126 = v43;
  v127 = v2;
  v130 = v30;
  v46 = 0;
  v13 = *(_QWORD *)(v142 + 72);
  v125 = (*(unsigned __int8 *)(v142 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v142 + 80);
  v2 = (char *)(v125 + 24);
  while (1)
  {
    v47 = *(_QWORD *)&v2[v44 - 24];
    v48 = *(_QWORD *)&v2[v44 - 16];
    v50 = v47 == sub_20E4A4E38() && v48 == v49;
    if (v50)
      break;
    v51 = sub_20E4A635C();
    swift_bridgeObjectRelease();
    if ((v51 & 1) != 0)
      goto LABEL_34;
    v46 = (_QWORD *)((char *)v46 + 1);
    v2 += v13;
    if (v45 == v46)
    {
      swift_bridgeObjectRelease();
      v30 = v130;
LABEL_32:
      (*(void (**)(char *, uint64_t))(v128 + 8))(v129, v30);
      return swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
LABEL_34:
  swift_bridgeObjectRelease();
  v81 = v129;
  v82 = sub_20E4A4E38();
  v142 = sub_20E46D174(v82, v83, v126);
  v85 = v84;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v85 & 1) != 0)
  {
    v77 = *(uint64_t (**)(char *, uint64_t))(v128 + 8);
    v78 = v81;
    return v77(v78, v130);
  }
  sub_20E4A4E2C();
  (*(void (**)(char *, _QWORD, uint64_t, void (*)(_QWORD)))(v143 + 56))(v10, 0, 1, v39);
  v36 = (char *)swift_getKeyPath();
  v26 = swift_getKeyPath();
  v126 = (_QWORD *)sub_20E4A35C0();
  KeyPath = (uint64_t)v86;
  v54 = *v86;
  v87 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)KeyPath = v54;
  if ((v87 & 1) == 0)
    goto LABEL_72;
  while (1)
  {
    if ((unint64_t)v46 >= *(_QWORD *)(v54 + 16))
    {
      __break(1u);
      goto LABEL_74;
    }
    sub_20E46F618((uint64_t)v10, (uint64_t)&v2[*(int *)(v144 + 24) - 24 + v54]);
    ((void (*)(uint64_t *, _QWORD))v126)(&v146, 0);
    swift_release();
    swift_release();
    if (v142)
      break;
    v142 = v13;
    v36 = v138;
    sub_20E4A4E2C();
    if (qword_254A18120 != -1)
      goto LABEL_75;
LABEL_46:
    v97 = (void *)qword_254A1BAF8;
    _s21PopupHUDConfigurationVMa(0);
    v98 = v135;
    sub_20E4A54D4();
    v99 = (void *)sub_20E4A3368();
    (*(void (**)(char *, _QWORD))(v136 + 8))(v98, v137);
    v100 = objc_msgSend(v97, sel_stringFromDate_, v99);

    v101 = sub_20E4A5C3C();
    v136 = v102;

    v137 = *(void (**)(char *, void (*)(_QWORD)))(v143 + 8);
    v137(v36, v39);
    v69 = (void (*)(uint64_t *, _QWORD))swift_getKeyPath();
    v94 = swift_getKeyPath();
    v93 = (_QWORD *)sub_20E4A35C0();
    v13 = (uint64_t)v103;
    v26 = *v103;
    v104 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)v13 = v26;
    v91 = v101;
    if ((v104 & 1) == 0)
    {
      v26 = sub_20E46F4F0(v26);
      *(_QWORD *)v13 = v26;
    }
    v105 = v143;
    if ((unint64_t)v46 >= *(_QWORD *)(v26 + 16))
    {
      __break(1u);
LABEL_77:
      v94 = sub_20E46F4F0(v94);
      *v93 = v94;
LABEL_41:
      if ((unint64_t)v46 < *(_QWORD *)(v94 + 16))
      {
        v96 = &v2[v94];
        *((_QWORD *)v96 - 1) = 0x8FB8EFA09AE2;
        *(_QWORD *)v96 = 0xA600000000000000;
        swift_bridgeObjectRelease();
        goto LABEL_28;
      }
      __break(1u);
      goto LABEL_79;
    }
    v106 = &v2[v26];
    v107 = v136;
    *((_QWORD *)v106 - 1) = v91;
    *(_QWORD *)v106 = v107;
    swift_bridgeObjectRelease();
    ((void (*)(uint64_t *, _QWORD))v93)(&v146, 0);
    swift_release();
    swift_release();
    v36 = (char *)swift_getKeyPath();
    swift_getKeyPath();
    sub_20E4A35CC();
    swift_release();
    swift_release();
    v108 = *(char **)(v146 + 16);
    swift_bridgeObjectRelease();
    v109 = (uint64_t)v134;
    v26 = v125;
    v138 = v108;
    if (!v108)
      goto LABEL_29;
    v2 = 0;
    v110 = &qword_254A1BB58;
    v124 = v39;
    while (1)
    {
      if (!v2)
        goto LABEL_52;
      v13 = (uint64_t)v110;
      v46 = (_QWORD *)v26;
      swift_getKeyPath();
      v26 = swift_getKeyPath();
      sub_20E4A35CC();
      swift_release();
      swift_release();
      v58 = v146;
      if ((unint64_t)v2 >= *(_QWORD *)(v146 + 16))
      {
        __break(1u);
        goto LABEL_69;
      }
      v26 = (uint64_t)v46;
      v111 = v140;
      v36 = (char *)_s13PopupHUDModelC8RowModelVMa;
      sub_20E3A6A14((uint64_t)v46 + v146, v140, _s13PopupHUDModelC8RowModelVMa);
      swift_bridgeObjectRelease();
      v110 = (uint64_t *)v13;
      sub_20E3A5E20(v111 + *(int *)(v144 + 24), v109, (uint64_t *)v13);
      sub_20E3BB484(v111, _s13PopupHUDModelC8RowModelVMa);
      if ((*(unsigned int (**)(uint64_t, uint64_t, void (*)(_QWORD)))(v105 + 48))(v109, 1, v39) != 1)
        break;
      sub_20E39D1F8(v109, (uint64_t *)v13);
LABEL_52:
      ++v2;
      v26 += v142;
      if (v138 == v2)
        goto LABEL_29;
    }
    (*(void (**)(char *, uint64_t, void (*)(_QWORD)))(v105 + 32))(v139, v109, v39);
    sub_20E4A4E2C();
    sub_20E4A4CE8();
    if (v112 >= 1.0)
      goto LABEL_59;
    v54 = 0xA300000000000000;
    if (v112 < 0.0)
    {
      KeyPath = 9215458;
    }
    else
    {
      KeyPath = 9215458;
      if (v112 <= 1.0)
      {
LABEL_59:
        v146 = 0;
        v147 = 0xE000000000000000;
        sub_20E4A5C6C();
        sub_20E4A5ED0();
        sub_20E4A5C6C();
        KeyPath = v146;
        v54 = v147;
      }
    }
    v137(v141, v39);
    swift_getKeyPath();
    v39 = (void (*)(_QWORD))swift_getKeyPath();
    v36 = (char *)sub_20E4A35C0();
    v114 = v113;
    v10 = *v113;
    v115 = swift_isUniquelyReferenced_nonNull_native();
    *v114 = v10;
    if ((v115 & 1) == 0)
    {
      v10 = (char *)sub_20E46F4F0((unint64_t)v10);
      *v114 = v10;
    }
    v26 = (uint64_t)v46;
    if ((unint64_t)v2 < *((_QWORD *)v10 + 2))
    {
      v116 = (char *)v46 + (_QWORD)v10;
      *((_QWORD *)v116 + 2) = KeyPath;
      *((_QWORD *)v116 + 3) = v54;
      swift_bridgeObjectRelease();
      ((void (*)(uint64_t *, _QWORD))v36)(&v146, 0);
      swift_release();
      swift_release();
      v39 = v124;
      v137(v139, v124);
      v105 = v143;
      v109 = (uint64_t)v134;
      v110 = (uint64_t *)v13;
      goto LABEL_52;
    }
    __break(1u);
LABEL_71:
    __break(1u);
LABEL_72:
    v54 = sub_20E46F4F0(v54);
    *(_QWORD *)KeyPath = v54;
  }
  swift_getKeyPath();
  v36 = (char *)swift_getKeyPath();
  sub_20E4A35CC();
  swift_release();
  swift_release();
  if (!*(_QWORD *)(v146 + 16))
  {
LABEL_74:
    __break(1u);
LABEL_75:
    swift_once();
    goto LABEL_46;
  }
  v88 = v132;
  sub_20E3A6A14(v146 + v125, v132, _s13PopupHUDModelC8RowModelVMa);
  swift_bridgeObjectRelease();
  v89 = v133;
  sub_20E3A5E20(v88 + *(int *)(v144 + 24), v133, &qword_254A1BB58);
  sub_20E3BB484(v88, _s13PopupHUDModelC8RowModelVMa);
  v90 = v143;
  if ((*(unsigned int (**)(uint64_t, uint64_t, void (*)(_QWORD)))(v143 + 48))(v89, 1, v39) == 1)
  {
    sub_20E39D1F8(v89, &qword_254A1BB58);
    swift_getKeyPath();
    v91 = swift_getKeyPath();
    v69 = (void (*)(uint64_t *, _QWORD))sub_20E4A35C0();
    v93 = v92;
    v94 = *v92;
    v95 = swift_isUniquelyReferenced_nonNull_native();
    *v93 = v94;
    if ((v95 & 1) == 0)
      goto LABEL_77;
    goto LABEL_41;
  }
  v117 = v90;
  (*(void (**)(char *, uint64_t, void (*)(_QWORD)))(v90 + 32))(v131, v89, v39);
  v118 = v138;
  sub_20E4A4E2C();
  v91 = sub_20E46F504();
  v69 = v119;
  v120 = v39;
  v39 = *(void (**)(_QWORD))(v117 + 8);
  v124 = v120;
  v39(v118);
  swift_getKeyPath();
  swift_getKeyPath();
  v93 = (_QWORD *)sub_20E4A35C0();
  v13 = (uint64_t)v121;
  v26 = *v121;
  result = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)v13 = v26;
  if ((result & 1) != 0)
    goto LABEL_66;
LABEL_79:
  result = sub_20E46F4F0(v26);
  v26 = result;
  *(_QWORD *)v13 = result;
LABEL_66:
  if ((unint64_t)v46 < *(_QWORD *)(v26 + 16))
  {
    v122 = &v2[v26];
    *((_QWORD *)v122 - 1) = v91;
    *(_QWORD *)v122 = v69;
    swift_bridgeObjectRelease();
    ((void (*)(uint64_t *, _QWORD))v93)(&v146, 0);
    swift_release();
    swift_release();
    ((void (*)(char *, void (*)(_QWORD)))v39)(v131, v124);
    goto LABEL_29;
  }
  __break(1u);
  return result;
}

uint64_t sub_20E46CC08(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD **v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t v29;

  v3 = sub_20E4A4E44();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v7 = v1[1];
  if (v8 == sub_20E4A4E20() && v7 == v9)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
    goto LABEL_9;
  }
  v11 = sub_20E4A635C();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  if ((v11 & 1) != 0)
  {
LABEL_9:
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    goto LABEL_10;
  }
  v12 = (_QWORD *)v1[3];
  swift_bridgeObjectRetain();
  v13 = sub_20E4A4E20();
  v15 = sub_20E46D258(v13, v14, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  if ((v15 & 1) != 0)
    return 2;
LABEL_10:
  v17 = (_QWORD **)(v1 + 3);
  v18 = (_QWORD *)v1[3];
  swift_bridgeObjectRetain();
  v19 = sub_20E4A4E20();
  v21 = sub_20E46D258(v19, v20, v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v21 & 1) != 0)
    return 0;
  if (v18[2] == 4)
    sub_20E3DF140(0, 1);
  v22 = sub_20E4A4E20();
  v24 = v23;
  v25 = *v17;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v25 = sub_20E3AD5D0(0, v25[2] + 1, 1, v25);
  v27 = v25[2];
  v26 = v25[3];
  if (v27 >= v26 >> 1)
    v25 = sub_20E3AD5D0((_QWORD *)(v26 > 1), v27 + 1, 1, v25);
  v25[2] = v27 + 1;
  v28 = &v25[2 * v27];
  v28[4] = v22;
  v28[5] = v24;
  *v17 = v25;
  return 1;
}

uint64_t sub_20E46CE30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v4 = v3;
  v28 = a1;
  v7 = _s13PopupHUDModelC8RowModelVMa(0);
  v29 = *(_QWORD *)(v7 - 8);
  v30 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_20E4A4E08();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *v4 = a2;
  v4[1] = a3;
  swift_getKeyPath();
  swift_getKeyPath();
  v31 = a2;
  v32 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_20E4A35D8();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v28, v10);
  v14 = (*(uint64_t (**)(char *, uint64_t))(v11 + 88))(v13, v10);
  if (v14 == *MEMORY[0x24BE5CE20])
  {
    (*(void (**)(char *, uint64_t))(v11 + 96))(v13, v10);
    v15 = *(_QWORD *)v13;
    v16 = v4[2];
    v17 = *(_QWORD *)(*(_QWORD *)v13 + 16);
    if (v17)
    {
      v28 = v16;
      v31 = MEMORY[0x24BEE4AF8];
      sub_20E3ECEE8(0, v17, 0);
      v18 = v31;
      v19 = sub_20E4A4D00();
      v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56);
      v27 = v15;
      v21 = (uint64_t *)(v15 + 40);
      do
      {
        v22 = *(v21 - 1);
        v23 = *v21;
        v20(&v9[*(int *)(v30 + 24)], 1, 1, v19);
        *(_QWORD *)v9 = v22;
        *((_QWORD *)v9 + 1) = v23;
        *((_QWORD *)v9 + 2) = 0x8FB8EFB18FE2;
        *((_QWORD *)v9 + 3) = 0xA600000000000000;
        v31 = v18;
        v24 = *(_QWORD *)(v18 + 16);
        v25 = *(_QWORD *)(v18 + 24);
        swift_bridgeObjectRetain();
        if (v24 >= v25 >> 1)
        {
          sub_20E3ECEE8(v25 > 1, v24 + 1, 1);
          v18 = v31;
        }
        v21 += 2;
        *(_QWORD *)(v18 + 16) = v24 + 1;
        sub_20E46F660((uint64_t)v9, v18+ ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80))+ *(_QWORD *)(v29 + 72) * v24);
        --v17;
      }
      while (v17);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v18 = MEMORY[0x24BEE4AF8];
    }
    swift_getKeyPath();
    swift_getKeyPath();
    v31 = v18;
    swift_retain();
  }
  else
  {
    if (v14 != *MEMORY[0x24BE5CE18])
      return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    swift_getKeyPath();
    swift_getKeyPath();
    v31 = MEMORY[0x24BEE4AF8];
    swift_retain();
  }
  return sub_20E4A35D8();
}

uint64_t sub_20E46D174(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  BOOL v7;
  uint64_t result;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  char v13;

  v3 = a3[2];
  if (!v3)
    return 0;
  v7 = a3[4] == a1 && a3[5] == a2;
  if (v7 || (sub_20E4A635C() & 1) != 0)
    return 0;
  v9 = 0;
  v10 = a3 + 7;
  v11 = 1;
  while (1)
  {
    if (v3 == v11)
      return 0;
    ++v9;
    if (*(v10 - 1) == a1 && *v10 == a2)
      break;
    v13 = sub_20E4A635C();
    result = v11++;
    v10 += 2;
    if ((v13 & 1) != 0)
      return result;
  }
  return v9;
}

uint64_t sub_20E46D258(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t result;
  _QWORD *v9;
  uint64_t i;
  uint64_t v11;
  BOOL v12;

  v3 = a3[2];
  if (!v3)
    return 0;
  if (a3[4] == a1 && a3[5] == a2)
    return 1;
  result = sub_20E4A635C();
  if ((result & 1) != 0)
    return 1;
  if (v3 == 1)
    return 0;
  v9 = a3 + 7;
  for (i = 1; ; ++i)
  {
    v11 = i + 1;
    if (__OFADD__(i, 1))
      break;
    v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_20E4A635C() & 1) != 0)
      return 1;
    result = 0;
    v9 += 2;
    if (v11 == v3)
      return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_20E46D31C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;

  sub_20E3C3948();
  swift_bridgeObjectRetain();
  v2 = sub_20E4A41C0();
  v4 = v3;
  v6 = v5;
  v8 = v7 & 1;
  swift_bridgeObjectRetain();
  v9 = sub_20E4A41C0();
  v11 = v10;
  v13 = v12 & 1;
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v8;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = 0;
  *(_WORD *)(a1 + 40) = 1;
  *(_QWORD *)(a1 + 48) = 0;
  *(_BYTE *)(a1 + 56) = 1;
  *(_QWORD *)(a1 + 64) = v9;
  *(_QWORD *)(a1 + 72) = v10;
  *(_BYTE *)(a1 + 80) = v12 & 1;
  *(_QWORD *)(a1 + 88) = v14;
  sub_20E3FAA14(v2, v4, v8);
  swift_bridgeObjectRetain();
  sub_20E3FAA14(v9, v11, v13);
  swift_bridgeObjectRetain();
  sub_20E39D0D8(v9, v11, v13);
  swift_bridgeObjectRelease();
  sub_20E39D0D8(v2, v4, v8);
  return swift_bridgeObjectRelease();
}

uint64_t sub_20E46D45C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char v6;
  char v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  unsigned __int8 v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  _BYTE v39[7];
  char v40;
  _BYTE v41[7];
  char v42;
  int v43;
  __int16 v44;
  char v45;
  _BYTE v46[7];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1BC00);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_20E4A3C68();
  sub_20E46D31C((uint64_t)v27);
  v19 = v27[0];
  v18 = v27[1];
  v6 = v28;
  v21 = v29;
  v20 = v30;
  v7 = v31;
  v22 = v32;
  v23 = v33;
  v8 = v34;
  v24 = v36;
  v25 = v35;
  v9 = v37;
  v26 = v38;
  v10 = *MEMORY[0x24BDF1650];
  v11 = sub_20E4A40F4();
  v12 = *(_QWORD *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 104))(v4, v10, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v4, 0, 1, v11);
  v13 = sub_20E4A410C();
  sub_20E39D1F8((uint64_t)v4, &qword_254A1BC00);
  result = swift_getKeyPath();
  v45 = v7;
  v42 = v8;
  v40 = v9;
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  *(_DWORD *)(a1 + 17) = v27[0];
  *(_DWORD *)(a1 + 20) = *(_DWORD *)((char *)v27 + 3);
  v15 = v18;
  *(_QWORD *)(a1 + 24) = v19;
  *(_QWORD *)(a1 + 32) = v15;
  *(_BYTE *)(a1 + 40) = v6;
  LODWORD(v15) = *(_DWORD *)v46;
  *(_DWORD *)(a1 + 44) = *(_DWORD *)&v46[3];
  *(_DWORD *)(a1 + 41) = v15;
  v16 = v20;
  *(_QWORD *)(a1 + 48) = v21;
  *(_QWORD *)(a1 + 56) = v16;
  *(_BYTE *)(a1 + 64) = v45;
  *(_BYTE *)(a1 + 65) = v22;
  *(_DWORD *)(a1 + 66) = v43;
  *(_WORD *)(a1 + 70) = v44;
  *(_QWORD *)(a1 + 72) = v23;
  *(_BYTE *)(a1 + 80) = v42;
  *(_DWORD *)(a1 + 84) = *(_DWORD *)&v41[3];
  *(_DWORD *)(a1 + 81) = *(_DWORD *)v41;
  v17 = v24;
  *(_QWORD *)(a1 + 88) = v25;
  *(_QWORD *)(a1 + 96) = v17;
  *(_BYTE *)(a1 + 104) = v40;
  *(_DWORD *)(a1 + 105) = *(_DWORD *)v39;
  *(_DWORD *)(a1 + 108) = *(_DWORD *)&v39[3];
  *(_QWORD *)(a1 + 112) = v26;
  *(_QWORD *)(a1 + 120) = result;
  *(_QWORD *)(a1 + 128) = v13;
  return result;
}

uint64_t sub_20E46D6B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(void);
  _QWORD v49[3];
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v49[1] = a1;
  v49[2] = a2;
  v52 = a3;
  v51 = sub_20E4A3A7C();
  MEMORY[0x24BDAC7A8](v51);
  v4 = (_OWORD *)((char *)v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v50 = sub_20E4A4874();
  v5 = *(_QWORD *)(v50 - 8);
  MEMORY[0x24BDAC7A8](v50);
  v7 = (char *)v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1AC00);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1AC08);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1BBC8);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1BBD0);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v10 = sub_20E4A3CC8();
  *((_QWORD *)v10 + 1) = 0;
  v10[16] = 1;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1BBD8);
  sub_20E46DA80((uint64_t *)&v10[*(int *)(v20 + 44)]);
  v21 = sub_20E4A4898();
  sub_20E431EDC(0.0, 1, 0.0, 1, 200.0, 0, 0.0, 1, (uint64_t)v13, 0.0, 1, 65.0, 0, v21, v22);
  sub_20E39D1F8((uint64_t)v10, &qword_254A1AC00);
  v23 = sub_20E4A4088();
  sub_20E4A3638();
  v25 = v24;
  v27 = v26;
  v29 = v28;
  v31 = v30;
  sub_20E3A5E20((uint64_t)v13, (uint64_t)v16, &qword_254A1AC08);
  v32 = &v16[*(int *)(v14 + 36)];
  *v32 = v23;
  *((_QWORD *)v32 + 1) = v25;
  *((_QWORD *)v32 + 2) = v27;
  *((_QWORD *)v32 + 3) = v29;
  *((_QWORD *)v32 + 4) = v31;
  v32[40] = 0;
  sub_20E39D1F8((uint64_t)v13, &qword_254A1AC08);
  sub_20E4A4868();
  v33 = sub_20E4A4088();
  v34 = &v19[*(int *)(v17 + 36)];
  v35 = v50;
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v34, v7, v50);
  v34[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254A1BBE0) + 36)] = v33;
  sub_20E3A5E20((uint64_t)v16, (uint64_t)v19, &qword_254A1BBC8);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v35);
  sub_20E39D1F8((uint64_t)v16, &qword_254A1BBC8);
  v36 = (char *)v4 + *(int *)(v51 + 20);
  v37 = *MEMORY[0x24BDEEB68];
  v38 = sub_20E4A3CB0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 104))(v36, v37, v38);
  __asm { FMOV            V0.2D, #5.0 }
  *v4 = _Q0;
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1BBE8);
  v45 = v52;
  v46 = v52 + *(int *)(v44 + 36);
  v47 = MEMORY[0x24BDED998];
  sub_20E3A6A14((uint64_t)v4, v46, (uint64_t (*)(_QWORD))MEMORY[0x24BDED998]);
  *(_WORD *)(v46 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254A1BBF0) + 36)) = 256;
  sub_20E3A5E20((uint64_t)v19, v45, &qword_254A1BBD0);
  sub_20E3BB484((uint64_t)v4, (uint64_t (*)(_QWORD))v47);
  return sub_20E39D1F8((uint64_t)v19, &qword_254A1BBD0);
}

uint64_t sub_20E46DA80@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  uint64_t *v27;
  uint64_t *v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;

  v36 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1BBF8);
  v34 = *(_QWORD *)(v1 - 8);
  v35 = v1;
  MEMORY[0x24BDAC7A8](v1);
  v33 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v32 = (char *)&v32 - v4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1BC00);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_20E4A35CC();
  swift_release();
  swift_release();
  swift_release();
  sub_20E3C3948();
  v8 = sub_20E4A41C0();
  v10 = v9;
  v12 = v11 & 1;
  v13 = sub_20E4A40F4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v7, 1, 1, v13);
  sub_20E4A410C();
  sub_20E39D1F8((uint64_t)v7, &qword_254A1BC00);
  v14 = sub_20E4A41A8();
  v16 = v15;
  v18 = v17;
  v20 = v19;
  swift_release();
  v21 = v18 & 1;
  sub_20E39D0D8(v8, v10, v12);
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_20E4A35CC();
  swift_release();
  swift_release();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1AC30);
  _s20PopupHUDListItemViewVMa(0);
  sub_20E39D010(&qword_254A1BC08, &qword_254A1AC30, MEMORY[0x24BEE12D8]);
  sub_20E39F334(&qword_254A1BC10, _s20PopupHUDListItemViewVMa, (uint64_t)&unk_20E4AFB04);
  sub_20E39F334(&qword_254A1BC18, _s13PopupHUDModelC8RowModelVMa, (uint64_t)&unk_20E4AF97C);
  v22 = v32;
  sub_20E4A47B4();
  v23 = v33;
  v24 = v34;
  v25 = *(void (**)(char *, char *, uint64_t))(v34 + 16);
  v26 = v35;
  v25(v33, v22, v35);
  v27 = v36;
  *v36 = v14;
  v27[1] = v16;
  *((_BYTE *)v27 + 16) = v21;
  v27[3] = v20;
  v28 = v27;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1BC20);
  v25((char *)v28 + *(int *)(v29 + 48), v23, v26);
  sub_20E3FAA14(v14, v16, v21);
  v30 = *(void (**)(char *, uint64_t))(v24 + 8);
  swift_bridgeObjectRetain();
  v30(v22, v26);
  v30(v23, v26);
  sub_20E39D0D8(v14, v16, v21);
  return swift_bridgeObjectRelease();
}

uint64_t sub_20E46DE24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20E3A6A14(a1, a2, _s13PopupHUDModelC8RowModelVMa);
}

uint64_t sub_20E46DE44@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1ABF0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (uint64_t *)((char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1ABF8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v1;
  v9 = v1[1];
  *v5 = sub_20E4A48A4();
  v5[1] = v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1BBB8);
  sub_20E46D6B8(v10, v9, (uint64_t)v5 + *(int *)(v12 + 44));
  v13 = sub_20E4A488C();
  sub_20E431E84(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v8, 0.0, 1, INFINITY, 0, v13, v14);
  sub_20E39D1F8((uint64_t)v5, &qword_254A1ABF0);
  sub_20E3A5E20((uint64_t)v8, a1, &qword_254A1ABF8);
  *(_QWORD *)(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254A1BBC0) + 36)) = 0x3FE8000000000000;
  return sub_20E39D1F8((uint64_t)v8, &qword_254A1ABF8);
}

void sub_20E46E064()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  void *v36;
  id v37;
  id v38;
  void *v39;
  void *v40;
  id v41;
  id v42;
  void *v43;
  objc_super v44;

  v1 = v0;
  v44.receiver = v0;
  v44.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v44, sel_viewDidLoad);
  swift_beginAccess();
  _s13PopupHUDModelCMa(0);
  sub_20E39F334(&qword_254A1BB98, _s13PopupHUDModelCMa, (uint64_t)&unk_20E4AF9B4);
  swift_retain();
  sub_20E4A3938();
  v2 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_254A1BBA0));
  v3 = (void *)sub_20E4A3D4C();
  v4 = objc_msgSend(v3, sel_view);
  if (!v4)
  {
    __break(1u);
    goto LABEL_15;
  }
  v5 = v4;
  v6 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
  objc_msgSend(v5, sel_setBackgroundColor_, v6);

  objc_msgSend(v1, sel_addChildViewController_, v3);
  v7 = objc_msgSend(v3, sel_view);
  if (!v7)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v8 = v7;
  objc_msgSend(v7, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);

  v9 = objc_msgSend(v1, sel_view);
  if (!v9)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v10 = v9;
  v11 = objc_msgSend(v3, sel_view);
  if (!v11)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v12 = v11;
  objc_msgSend(v10, sel_addSubview_, v11);

  __swift_instantiateConcreteTypeFromMangledName(&qword_254A18A98);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_20E4AF900;
  v14 = objc_msgSend(v3, sel_view);
  if (!v14)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v15 = v14;
  v16 = objc_msgSend(v14, sel_topAnchor);

  v17 = objc_msgSend(v1, sel_view);
  if (!v17)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v18 = v17;
  v19 = objc_msgSend(v17, sel_topAnchor);

  v20 = objc_msgSend(v16, sel_constraintEqualToAnchor_, v19);
  *(_QWORD *)(v13 + 32) = v20;
  v21 = objc_msgSend(v3, sel_view);
  if (!v21)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v22 = v21;
  v23 = objc_msgSend(v21, sel_leadingAnchor);

  v24 = objc_msgSend(v1, sel_view);
  if (!v24)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v25 = v24;
  v26 = objc_msgSend(v24, sel_leadingAnchor);

  v27 = objc_msgSend(v23, sel_constraintEqualToAnchor_, v26);
  *(_QWORD *)(v13 + 40) = v27;
  v28 = objc_msgSend(v3, sel_view);
  if (!v28)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v29 = v28;
  v30 = objc_msgSend(v28, sel_bottomAnchor);

  v31 = objc_msgSend(v1, sel_view);
  if (!v31)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v32 = v31;
  v33 = objc_msgSend(v31, sel_bottomAnchor);

  v34 = objc_msgSend(v30, sel_constraintEqualToAnchor_, v33);
  *(_QWORD *)(v13 + 48) = v34;
  v35 = objc_msgSend(v3, sel_view);
  if (!v35)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v36 = v35;
  v37 = objc_msgSend(v35, sel_trailingAnchor);

  v38 = objc_msgSend(v1, sel_view);
  if (v38)
  {
    v39 = v38;
    v40 = (void *)objc_opt_self();
    v41 = objc_msgSend(v39, sel_trailingAnchor);

    v42 = objc_msgSend(v37, sel_constraintEqualToAnchor_, v41);
    *(_QWORD *)(v13 + 56) = v42;
    sub_20E4A5D38();
    sub_20E4396F8();
    v43 = (void *)sub_20E4A5D20();
    swift_bridgeObjectRelease();
    objc_msgSend(v40, sel_activateConstraints_, v43);

    objc_msgSend(v3, sel_didMoveToParentViewController_, v1);
    return;
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_20E46E5EC()
{
  return _s22PopupHUDViewControllerCMa(0);
}

uint64_t _s22PopupHUDViewControllerCMa(uint64_t a1)
{
  return sub_20E3A4CD0(a1, (uint64_t *)&unk_254A1BB38);
}

uint64_t sub_20E46E608()
{
  uint64_t result;
  unint64_t v1;

  result = _s21PopupHUDConfigurationVMa(319);
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t _s21PopupHUDConfigurationVMa(uint64_t a1)
{
  return sub_20E3A4CD0(a1, (uint64_t *)&unk_254A1BB48);
}

uint64_t *sub_20E46E688(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v12 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    v7 = *(int *)(a3 + 28);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_20E4A54EC();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v3;
}

uint64_t sub_20E46E744(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_20E4A54EC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_20E46E79C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = *(int *)(a3 + 28);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_20E4A54EC();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  return a1;
}

_QWORD *sub_20E46E82C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 28);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_20E4A54EC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_20E46E8D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(int *)(a3 + 28);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_20E4A54EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

_QWORD *sub_20E46E93C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_release();
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 28);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_20E4A54EC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_20E46E9C8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_20E46E9D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_20E4A54EC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t sub_20E46EA50()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_20E46EA5C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_20E4A54EC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

uint64_t sub_20E46EAD0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_20E4A54EC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_20E46EB60(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v14 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    v7 = *(int *)(a3 + 24);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_20E4A4D00();
    v11 = *(_QWORD *)(v10 - 8);
    v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v12(v9, 1, v10))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1BB58);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
  }
  return v3;
}

uint64_t sub_20E46EC68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_20E4A4D00();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

_QWORD *sub_20E46ECEC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_20E4A4D00();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11(v8, 1, v9))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1BB58);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  return a1;
}

_QWORD *sub_20E46EDC8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_20E4A4D00();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1BB58);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

_OWORD *sub_20E46EF10(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 24);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_20E4A4D00();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1BB58);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

_QWORD *sub_20E46EFCC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_20E4A4D00();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1BB58);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  return a1;
}

uint64_t sub_20E46F0F4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_20E46F100(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1BB58);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_20E46F180()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_20E46F18C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1BB58);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t _s13PopupHUDModelC8RowModelVMa(uint64_t a1)
{
  return sub_20E3A4CD0(a1, (uint64_t *)&unk_254A1BB60);
}

void sub_20E46F218()
{
  unint64_t v0;

  sub_20E46F28C();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_20E46F28C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254A1BB70)
  {
    sub_20E4A4D00();
    v0 = sub_20E4A60E0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254A1BB70);
  }
}

uint64_t sub_20E46F2E0()
{
  return MEMORY[0x24BEE23D8];
}

uint64_t sub_20E46F2EC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_20E4A35CC();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_20E46F368()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_20E4A35D8();
}

uint64_t sub_20E46F3E0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_20E4A35CC();
  swift_release();
  result = swift_release();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_20E46F45C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_20E4A35D8();
}

_QWORD *sub_20E46F4DC(_QWORD *a1)
{
  return sub_20E3AD3A4(0, a1[2], 0, a1);
}

uint64_t sub_20E46F4F0(unint64_t a1)
{
  return sub_20E3AD6DC(0, *(_QWORD *)(a1 + 16), 0, a1);
}

uint64_t sub_20E46F504()
{
  double v0;

  sub_20E4A4CE8();
  if (v0 < 1.0 && (v0 < 0.0 || v0 > 1.0))
    return 9215458;
  sub_20E4A5C6C();
  sub_20E4A5ED0();
  sub_20E4A5C6C();
  return 0;
}

uint64_t sub_20E46F618(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1BB58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_20E46F660(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s13PopupHUDModelC8RowModelVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_QWORD *_s12PopupHUDViewVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *_s12PopupHUDViewVwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_release();
  return a1;
}

uint64_t _s12PopupHUDViewVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s12PopupHUDViewVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s12PopupHUDViewVMa()
{
  return &_s12PopupHUDViewVN;
}

uint64_t sub_20E46F7B0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t _s20PopupHUDListItemViewVMa(uint64_t a1)
{
  return sub_20E3A4CD0(a1, (uint64_t *)&unk_254A1BC28);
}

uint64_t *sub_20E46F7D4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;

  v4 = _s13PopupHUDModelC8RowModelVMa(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    v8 = *(int *)(v4 + 24);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_20E4A4D00();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1BB58);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
  }
  return a1;
}

uint64_t sub_20E46F8E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = a1 + *(int *)(_s13PopupHUDModelC8RowModelVMa(0) + 24);
  v3 = sub_20E4A4D00();
  v4 = *(_QWORD *)(v3 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  return result;
}

_QWORD *sub_20E46F970(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = *(int *)(_s13PopupHUDModelC8RowModelVMa(0) + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_20E4A4D00();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11(v8, 1, v9))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1BB58);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  return a1;
}

_QWORD *sub_20E46FA58(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(char *, uint64_t, uint64_t);
  int v10;
  int v11;
  uint64_t v12;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(int *)(_s13PopupHUDModelC8RowModelVMa(0) + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_20E4A4D00();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  v10 = v9(v5, 1, v7);
  v11 = v9(v6, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 24))(v5, v6, v7);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v5, v7);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1BB58);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v5, v6, v7);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  return a1;
}

_OWORD *sub_20E46FBA4(_OWORD *a1, _OWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(_s13PopupHUDModelC8RowModelVMa(0) + 24);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_20E4A4D00();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1BB58);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

_QWORD *sub_20E46FC6C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = *(int *)(_s13PopupHUDModelC8RowModelVMa(0) + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_20E4A4D00();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1BB58);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t sub_20E46FD98()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_20E46FDA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s13PopupHUDModelC8RowModelVMa(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_20E46FDE0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_20E46FDEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s13PopupHUDModelC8RowModelVMa(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_20E46FE2C()
{
  uint64_t result;
  unint64_t v1;

  result = _s13PopupHUDModelC8RowModelVMa(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_20E46FE98()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254A1BC38;
  if (!qword_254A1BC38)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1BBC0);
    v2[0] = sub_20E46FF04();
    v2[1] = MEMORY[0x24BDECC38];
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254A1BC38);
  }
  return result;
}

unint64_t sub_20E46FF04()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254A1BC40;
  if (!qword_254A1BC40)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1ABF8);
    v2[0] = sub_20E39D010(&qword_254A1BC48, &qword_254A1ABF0, MEMORY[0x24BDF4750]);
    v2[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254A1BC40);
  }
  return result;
}

uint64_t sub_20E46FF88()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E46FF98@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_20E4A3B9C();
  *a1 = result;
  return result;
}

uint64_t sub_20E46FFC0()
{
  swift_retain();
  return sub_20E4A3BA8();
}

unint64_t sub_20E46FFEC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254A1BC50;
  if (!qword_254A1BC50)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1BC58);
    v2[0] = sub_20E39D010(&qword_254A1BC60, qword_254A1BC68, MEMORY[0x24BDF4498]);
    v2[1] = sub_20E39D010(&qword_254A1A2D0, &qword_254A1A230, MEMORY[0x24BDF1028]);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254A1BC50);
  }
  return result;
}

uint64_t EnvironmentValues.isFlowStackSheetPresented.getter()
{
  uint64_t v1;

  sub_20E4700C4();
  sub_20E4A3C08();
  return v1;
}

unint64_t sub_20E4700C4()
{
  unint64_t result;

  result = qword_253ED0868[0];
  if (!qword_253ED0868[0])
  {
    result = MEMORY[0x212BBDF90](&unk_20E4AFBB0, &type metadata for FlowStackSheetIsPresentedKey);
    atomic_store(result, qword_253ED0868);
  }
  return result;
}

double sub_20E470108@<D0>(uint64_t a1@<X8>)
{
  double result;
  __int128 v3;
  char v4;

  sub_20E4700C4();
  sub_20E4A3C08();
  result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_BYTE *)(a1 + 16) = v4;
  return result;
}

uint64_t sub_20E47015C(uint64_t *a1)
{
  sub_20E3A3B08(*a1, a1[1]);
  sub_20E4700C4();
  return sub_20E4A3C14();
}

uint64_t EnvironmentValues.isFlowStackSheetPresented.setter()
{
  sub_20E4700C4();
  return sub_20E4A3C14();
}

void sub_20E4701F0(uint64_t **a1, uint64_t a2, uint64_t a3)
{
  _BYTE v6[120];

  swift_retain();
  swift_retain();
  sub_20E4702CC(a1, a2, a3, (uint64_t)v6);
  type metadata accessor for FlowStackSheetViewModifier();
}

uint64_t sub_20E47027C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v5[216];

  MEMORY[0x212BBBA70](v5, v2, a1, v1);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v5, a1);
}

uint64_t sub_20E4702CC@<X0>(uint64_t **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  char v11;
  uint64_t v12;

  v7 = *a1;
  *(_QWORD *)(a4 + 64) = swift_getKeyPath();
  *(_BYTE *)(a4 + 104) = 0;
  v8 = type metadata accessor for FlowStackSheetAuthority(0, v7[10], v7[11], v7[12]);
  swift_retain();
  MEMORY[0x212BBDF90](&unk_20E4AD410, v8);
  *(_QWORD *)a4 = sub_20E4A3938();
  *(_QWORD *)(a4 + 8) = v9;
  *(_QWORD *)(a4 + 16) = a2;
  *(_QWORD *)(a4 + 24) = a3;
  swift_retain();
  sub_20E4A4640();
  *(_BYTE *)(a4 + 32) = v11;
  *(_QWORD *)(a4 + 40) = v12;
  sub_20E4A4640();
  swift_release();
  result = swift_release();
  *(_BYTE *)(a4 + 48) = v11;
  *(_QWORD *)(a4 + 56) = v12;
  return result;
}

void sub_20E4703D0(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;

  v18 = a1;
  v19 = a3;
  v4 = a2[2];
  sub_20E4A60E0();
  v17 = sub_20E4A4778();
  v16 = *(_QWORD *)(v17 - 8);
  v5 = MEMORY[0x24BDAC7A8](v17);
  v15 = (char *)&v13 - v6;
  MEMORY[0x212BBDF90](&unk_20E4AFC68, a2, v5);
  sub_20E4A3EA8();
  v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1BCF0);
  v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1A6E8);
  v9 = a2[5];
  v14 = a2[4];
  v10 = v14;
  v11 = sub_20E471EC0();
  v12 = sub_20E41C908();
  v20 = v4;
  v21 = v7;
  v22 = v8;
  v23 = v10;
  v24 = v9;
  v25 = v11;
  v26 = v12;
  type metadata accessor for FlowStack();
}

uint64_t sub_20E4704E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t OpaqueTypeConformance2;
  _QWORD *v40;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t);
  _BYTE v44[64];

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1A700);
  v7 = sub_20E4A39D4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253ED0C40);
  v8 = sub_20E4A39D4();
  v9 = MEMORY[0x24BDEFB78];
  *(_QWORD *)(v5 - 376) = v4;
  v10 = MEMORY[0x212BBDF90](v9, v4);
  *(_QWORD *)(v5 - 352) = v10;
  v11 = MEMORY[0x212BBDF90](&unk_20E4AEF28, a1);
  v12 = MEMORY[0x24BDF1028];
  v13 = sub_20E39D010((unint64_t *)&qword_254A1A6F8, &qword_254A1A700, MEMORY[0x24BDF1028]);
  *(_QWORD *)(v5 - 104) = v11;
  *(_QWORD *)(v5 - 96) = v13;
  v14 = MEMORY[0x24BDED308];
  v15 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v7, v5 - 104);
  v16 = sub_20E39D010(&qword_253ED0C38, &qword_253ED0C40, v12);
  *(_QWORD *)(v5 - 120) = v15;
  *(_QWORD *)(v5 - 112) = v16;
  *(_QWORD *)(v5 - 360) = v8;
  v17 = MEMORY[0x212BBDF90](v14, v8, v5 - 120);
  *(_QWORD *)(v5 - 368) = v17;
  *(_QWORD *)(v5 - 232) = v4;
  *(_QWORD *)(v5 - 224) = v1;
  *(_QWORD *)(v5 - 216) = v8;
  *(_QWORD *)(v5 - 208) = v10;
  v18 = v2;
  *(_QWORD *)(v5 - 200) = v2;
  *(_QWORD *)(v5 - 192) = v17;
  v19 = MEMORY[0x212BBDF30](0, v5 - 232, MEMORY[0x24BDF3660], 0);
  *(_QWORD *)(v5 - 336) = v19;
  *(_QWORD *)(v5 - 328) = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  *(_QWORD *)(v5 - 392) = &v44[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  *(_QWORD *)(v5 - 344) = &v44[-v22];
  v23 = *(_QWORD *)(v5 - 384);
  v24 = type metadata accessor for FlowStackSheetAuthority(0, v1, v23, v2);
  MEMORY[0x212BBDF90](&unk_20E4AD410, v24);
  sub_20E4A3944();
  v25 = *(_QWORD *)(v3 + 24);
  *(_QWORD *)(v5 - 272) = v1;
  *(_QWORD *)(v5 - 264) = v25;
  *(_QWORD *)(v5 - 256) = v23;
  *(_QWORD *)(v5 - 248) = v2;
  v26 = v23;
  v27 = *(_QWORD *)(v3 + 48);
  *(_QWORD *)(v5 - 240) = v27;
  swift_getKeyPath();
  v28 = *(_QWORD *)(v5 - 320);
  sub_20E4A3950();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(v5 - 232, *(_QWORD *)(v5 - 280), v3);
  v29 = swift_allocObject();
  v30 = *(_OWORD *)(v5 - 200);
  *(_OWORD *)(v29 + 104) = *(_OWORD *)(v5 - 184);
  v31 = *(_OWORD *)(v5 - 152);
  *(_OWORD *)(v29 + 120) = *(_OWORD *)(v5 - 168);
  *(_OWORD *)(v29 + 136) = v31;
  *(_OWORD *)(v29 + 145) = *(_OWORD *)(v5 - 143);
  v32 = *(_OWORD *)(v5 - 216);
  *(_OWORD *)(v29 + 56) = *(_OWORD *)(v5 - 232);
  *(_OWORD *)(v29 + 72) = v32;
  v33 = v1;
  *(_QWORD *)(v29 + 16) = v1;
  *(_QWORD *)(v29 + 24) = v25;
  *(_QWORD *)(v29 + 32) = v26;
  *(_QWORD *)(v29 + 40) = v18;
  *(_QWORD *)(v29 + 48) = v27;
  *(_OWORD *)(v29 + 88) = v30;
  v34 = swift_checkMetadataState();
  v35 = swift_checkMetadataState();
  v36 = *(_QWORD *)(v5 - 368);
  v37 = *(_QWORD *)(v5 - 352);
  v38 = *(_QWORD *)(v5 - 392);
  sub_20E4A4448();
  swift_release();
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v5 - 312) + 8))(v28, *(_QWORD *)(v5 - 304));
  *(_QWORD *)(v5 - 232) = v34;
  *(_QWORD *)(v5 - 224) = v33;
  *(_QWORD *)(v5 - 216) = v35;
  *(_QWORD *)(v5 - 208) = v37;
  *(_QWORD *)(v5 - 200) = v18;
  *(_QWORD *)(v5 - 192) = v36;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v40 = *(_QWORD **)(v5 - 344);
  v41 = *(_QWORD *)(v5 - 336);
  sub_20E39D614(v40, v38, v41, OpaqueTypeConformance2);
  v42 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 328) + 8);
  v42(v38, v41);
  sub_20E39D618((uint64_t)v40, v41, *(_QWORD *)(v5 - 288));
  return ((uint64_t (*)(_QWORD *, uint64_t))v42)(v40, v41);
}

void sub_20E4708F4()
{
  type metadata accessor for FlowStackSheetViewModifier();
}

void sub_20E470948(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  uint64_t v34;

  sub_20E470BC0(v34, a1, (uint64_t)&a34);
}

void sub_20E470958()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1BCF0);
  v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1A6E8);
  v6 = sub_20E471EC0();
  v7 = sub_20E41C908();
  *(_QWORD *)(v3 - 184) = v2;
  *(_QWORD *)(v3 - 176) = v4;
  *(_QWORD *)(v3 - 168) = v5;
  *(_QWORD *)(v3 - 160) = v1;
  *(_QWORD *)(v3 - 152) = v0;
  *(_QWORD *)(v3 - 144) = v6;
  *(_QWORD *)(v3 - 136) = v7;
  type metadata accessor for FlowStack();
}

uint64_t sub_20E4709E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[2];
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  __int128 v34;
  __int128 v35;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1A700);
  v3 = sub_20E4A39D4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253ED0C40);
  v4 = sub_20E4A39D4();
  v5 = MEMORY[0x212BBDF90](&unk_20E4AEF28, a1);
  v6 = MEMORY[0x24BDF1028];
  v22[0] = v5;
  v22[1] = sub_20E39D010((unint64_t *)&qword_254A1A6F8, &qword_254A1A700, MEMORY[0x24BDF1028]);
  v7 = MEMORY[0x24BDED308];
  v21[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v3, v22);
  v21[1] = sub_20E39D010(&qword_253ED0C38, &qword_253ED0C40, v6);
  v8 = MEMORY[0x212BBDF90](v7, v4, v21);
  sub_20E39D614((_QWORD *)(v1 - 184), &v23, v4, v8);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_20E3A3D20(v19, v18);
  v9 = *(_QWORD *)(v1 - 184);
  v10 = *(_QWORD *)(v1 - 144);
  v11 = *(_QWORD *)(v1 - 136);
  v12 = *(_BYTE *)(v1 - 128);
  v13 = *(_QWORD *)(v1 - 120);
  v14 = *(_QWORD *)(v1 - 112);
  v15 = *(_QWORD *)(v1 - 104);
  v16 = *(_BYTE *)(v1 - 96);
  v25 = v34;
  v26 = v35;
  v24 = v9;
  v27 = v10;
  v28 = v11;
  v29 = v12;
  v30 = v13;
  v31 = v14;
  v32 = v15;
  v33 = v16;
  sub_20E39D618((uint64_t)&v24, v4, v20);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return sub_20E3A3D20(v14, v15);
}

void sub_20E470BC0(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD v29[2];
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(__int128 *, uint64_t, _QWORD *);
  uint64_t v36;
  char v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  _OWORD v43[2];
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  _OWORD v49[2];
  _OWORD v50[5];

  v33 = a3;
  v6 = a2[2];
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](a1);
  v9 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_20E440B60();
  v35 = *(void (**)(__int128 *, uint64_t, _QWORD *))(*(a2 - 1) + 16);
  v35(&v44, v3, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  v10 = (*(unsigned __int8 *)(v7 + 80) + 161) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v11 = swift_allocObject();
  v12 = v48;
  *(_OWORD *)(v11 + 104) = v47;
  *(_OWORD *)(v11 + 120) = v12;
  *(_OWORD *)(v11 + 136) = v49[0];
  *(_OWORD *)(v11 + 145) = *(_OWORD *)((char *)v49 + 9);
  v13 = v45;
  *(_OWORD *)(v11 + 56) = v44;
  v15 = a2[4];
  v34 = a2[3];
  v14 = v34;
  *(_QWORD *)(v11 + 16) = v6;
  *(_QWORD *)(v11 + 24) = v14;
  v16 = a2[5];
  v17 = a2[6];
  v31 = a2;
  v32 = v17;
  *(_QWORD *)(v11 + 32) = v15;
  *(_QWORD *)(v11 + 40) = v16;
  v18 = v15;
  *(_QWORD *)(v11 + 48) = v17;
  *(_OWORD *)(v11 + 72) = v13;
  *(_OWORD *)(v11 + 88) = v46;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v11 + v10, v9, v6);
  v35(&v38, v36, a2);
  v19 = swift_allocObject();
  v20 = v40;
  *(_OWORD *)(v19 + 104) = v41;
  v21 = v43[0];
  *(_OWORD *)(v19 + 120) = v42;
  *(_OWORD *)(v19 + 136) = v21;
  *(_OWORD *)(v19 + 145) = *(_OWORD *)((char *)v43 + 9);
  v22 = v39;
  *(_OWORD *)(v19 + 56) = v38;
  *(_OWORD *)(v19 + 72) = v22;
  v29[1] = v6;
  v23 = v34;
  *(_QWORD *)(v19 + 16) = v6;
  *(_QWORD *)(v19 + 24) = v23;
  *(_QWORD *)(v19 + 32) = v18;
  *(_QWORD *)(v19 + 40) = v16;
  v24 = v18;
  *(_QWORD *)(v19 + 48) = v17;
  *(_OWORD *)(v19 + 88) = v20;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1BCF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A6E8);
  v27 = sub_20E471EC0();
  v28 = sub_20E41C908();
  sub_20E45A3E0(v30, (uint64_t)sub_20E4720E0, v11, (uint64_t)sub_20E47210C, v19, (uint64_t *)v50);
  v50[3] = v50[0];
  v38 = v50[0];
  v39 = v50[1];
  v40 = v50[2];
  v37 = 2;
  *(_QWORD *)&v44 = v6;
  *((_QWORD *)&v44 + 1) = v25;
  *(_QWORD *)&v45 = v26;
  *((_QWORD *)&v45 + 1) = v24;
  *(_QWORD *)&v46 = v16;
  *((_QWORD *)&v46 + 1) = v27;
  *(_QWORD *)&v47 = v28;
  type metadata accessor for FlowStack();
}

uint64_t sub_20E470E24(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;

  v5 = MEMORY[0x212BBDF90](&unk_20E4AEF28, a1);
  View.presentedBy(_:)();
  sub_20E41CCF4(v4 - 112);
  swift_release();
  swift_release();
  v6 = *(_BYTE *)(v1 + 176);
  *(_QWORD *)(v1 + 256) = *(_QWORD *)(v1 + 120);
  *(_OWORD *)(v1 + 264) = *(_OWORD *)(v1 + 128);
  *(_OWORD *)(v1 + 280) = *(_OWORD *)(v1 + 144);
  *(_OWORD *)(v1 + 296) = *(_OWORD *)(v1 + 160);
  *(_BYTE *)(v1 + 312) = v6;
  swift_getKeyPath();
  (*(void (**)(uint64_t, _QWORD, _QWORD))(v1 + 64))(v1 + 432, *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 24));
  sub_20E4A5DF8();
  v7 = sub_20E4A5DEC();
  v8 = swift_allocObject();
  v9 = *(_OWORD *)(v1 + 464);
  *(_OWORD *)(v8 + 120) = *(_OWORD *)(v1 + 480);
  v10 = *(_OWORD *)(v1 + 512);
  *(_OWORD *)(v8 + 136) = *(_OWORD *)(v1 + 496);
  *(_OWORD *)(v8 + 152) = v10;
  *(_OWORD *)(v8 + 161) = *(_OWORD *)(v1 + 521);
  v11 = *(_OWORD *)(v1 + 448);
  *(_OWORD *)(v8 + 72) = *(_OWORD *)(v1 + 432);
  *(_OWORD *)(v8 + 88) = v11;
  v12 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v12;
  v13 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v1 + 8);
  *(_QWORD *)(v8 + 40) = v13;
  *(_QWORD *)(v8 + 48) = v2;
  *(_QWORD *)(v8 + 56) = v3;
  *(_QWORD *)(v8 + 64) = *(_QWORD *)(v1 + 32);
  *(_OWORD *)(v8 + 104) = v9;
  v14 = sub_20E4A5DEC();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v12;
  sub_20E4A4754();
  v16 = *(_QWORD *)(v1 + 440);
  v17 = *(_BYTE *)(v1 + 448);
  *(_QWORD *)(v1 + 232) = *(_QWORD *)(v1 + 432);
  *(_QWORD *)(v1 + 240) = v16;
  *(_BYTE *)(v1 + 248) = v17;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1A700);
  v18 = sub_20E4A39D4();
  v19 = sub_20E39D010((unint64_t *)&qword_254A1A6F8, &qword_254A1A700, MEMORY[0x24BDF1028]);
  *(_QWORD *)(v1 + 216) = v5;
  *(_QWORD *)(v1 + 224) = v19;
  *(_QWORD *)(v1 + 80) = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v18, v1 + 216);
  sub_20E4A4250();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v20 = *(_QWORD *)(v1 + 360);
  v21 = *(_QWORD *)(v1 + 368);
  v22 = *(_BYTE *)(v1 + 376);
  v23 = *(_QWORD *)(v1 + 384);
  v24 = *(_QWORD *)(v1 + 392);
  v25 = *(_QWORD *)(v1 + 400);
  LOBYTE(v5) = *(_BYTE *)(v1 + 408);
  *(_QWORD *)(v1 + 120) = *(_QWORD *)(v1 + 320);
  v26 = *(_OWORD *)(v1 + 328);
  *(_OWORD *)(v1 + 64) = v26;
  v27 = *(_OWORD *)(v1 + 344);
  *(_OWORD *)(v1 + 48) = v27;
  *(_OWORD *)(v1 + 128) = v26;
  *(_OWORD *)(v1 + 144) = v27;
  *(_QWORD *)(v1 + 160) = v20;
  *(_QWORD *)(v1 + 168) = v21;
  *(_BYTE *)(v1 + 176) = v22;
  *(_QWORD *)(v1 + 184) = v23;
  *(_QWORD *)(v1 + 192) = v24;
  *(_QWORD *)(v1 + 200) = v25;
  *(_BYTE *)(v1 + 208) = v5;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253ED0C40);
  v28 = sub_20E4A39D4();
  v29 = sub_20E39D010(&qword_253ED0C38, &qword_253ED0C40, MEMORY[0x24BDF1028]);
  *(_QWORD *)(v1 + 104) = *(_QWORD *)(v1 + 80);
  *(_QWORD *)(v1 + 112) = v29;
  v30 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v28, v1 + 104);
  sub_20E39D614((_QWORD *)(v1 + 432), v1 + 120, v28, v30);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_20E3A3D20(v24, v25);
  v31 = *(_QWORD *)(v1 + 432);
  v32 = *(_QWORD *)(v1 + 472);
  v33 = *(_QWORD *)(v1 + 480);
  v34 = *(_BYTE *)(v1 + 488);
  v35 = *(_QWORD *)(v1 + 496);
  v36 = *(_QWORD *)(v1 + 504);
  v37 = *(_QWORD *)(v1 + 512);
  LOBYTE(v25) = *(_BYTE *)(v1 + 520);
  v38 = *(_OWORD *)(v1 + 440);
  *(_OWORD *)(v1 + 80) = v38;
  *(_OWORD *)(v1 + 328) = v38;
  v39 = *(_OWORD *)(v1 + 456);
  *(_OWORD *)(v1 + 64) = v39;
  *(_OWORD *)(v1 + 344) = v39;
  *(_QWORD *)(v1 + 320) = v31;
  *(_QWORD *)(v1 + 360) = v32;
  *(_QWORD *)(v1 + 368) = v33;
  *(_BYTE *)(v1 + 376) = v34;
  *(_QWORD *)(v1 + 384) = v35;
  *(_QWORD *)(v1 + 392) = v36;
  *(_QWORD *)(v1 + 400) = v37;
  *(_BYTE *)(v1 + 408) = v25;
  sub_20E39D618(v1 + 320, v28, *(_QWORD *)(v1 + 40));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return sub_20E3A3D20(v36, v37);
}

void sub_20E471204(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  char v36;
  unsigned __int8 v37;
  _QWORD v38[3];
  uint64_t v39;
  uint64_t v40;

  v24 = a7;
  v28 = a6;
  v19 = a4;
  v20 = a2;
  v23 = a8;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v12 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v14 = (char *)&v19 - v13;
  MEMORY[0x24BDAC7A8](v15);
  sub_20E45D75C((uint64_t)v38);
  v26 = v39;
  v27 = v40;
  v25 = __swift_project_boxed_opaque_existential_1(v38, v39);
  v16 = *(void (**)(char *))(a1 + 16);
  sub_20E4A4F4C();
  v16(v14);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, AssociatedTypeWitness);
  v36 = 0;
  v17 = *(_QWORD *)(a1 + 40);
  LOBYTE(v29) = *(_BYTE *)(a1 + 32);
  v30 = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED2A08);
  sub_20E4A464C();
  LODWORD(v20) = v37;
  v18 = *(_QWORD *)(a1 + 56);
  LOBYTE(v29) = *(_BYTE *)(a1 + 48);
  v30 = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1BD30);
  sub_20E4A464C();
  v34 = v35;
  v22 = a3;
  v29 = a3;
  v30 = v19;
  v21 = a5;
  v31 = a5;
  v32 = v28;
  v33 = v24;
  type metadata accessor for FlowStackSheetViewModifier();
}

__n128 sub_20E471404(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  char v16;
  char v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __n128 result;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;

  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16);
  v10(v8 - 272, v6, a1);
  v11 = swift_allocObject();
  v12 = *(_OWORD *)(v8 - 240);
  *(_OWORD *)(v11 + 104) = *(_OWORD *)(v8 - 224);
  v13 = *(_OWORD *)(v8 - 192);
  *(_OWORD *)(v11 + 120) = *(_OWORD *)(v8 - 208);
  *(_OWORD *)(v11 + 136) = v13;
  *(_OWORD *)(v11 + 145) = *(_OWORD *)(v8 - 183);
  v14 = *(_OWORD *)(v8 - 256);
  *(_OWORD *)(v11 + 56) = *(_OWORD *)(v8 - 272);
  *(_OWORD *)(v11 + 72) = v14;
  *(_QWORD *)(v11 + 16) = v3;
  *(_QWORD *)(v11 + 24) = v1;
  *(_QWORD *)(v11 + 32) = v7;
  *(_QWORD *)(v11 + 40) = v5;
  *(_QWORD *)(v11 + 48) = v4;
  *(_OWORD *)(v11 + 88) = v12;
  v15 = v1;
  sub_20E446BA4(v2, 1, (char *)(v8 - 161), *(_DWORD *)(v8 - 344), (char *)(v8 - 163), (uint64_t)sub_20E4724F0, v11, v1, v8 - 160);
  v16 = *(_BYTE *)(v8 - 152);
  v17 = *(_BYTE *)(v8 - 151);
  v18 = *(_BYTE *)(v8 - 150);
  v19 = *(_BYTE *)(v8 - 149);
  v20 = *(_QWORD *)(v8 - 144);
  v21 = *(_QWORD *)(v8 - 136);
  *(_QWORD *)(v8 - 272) = *(_QWORD *)(v8 - 160);
  *(_BYTE *)(v8 - 264) = v16;
  *(_BYTE *)(v8 - 263) = v17;
  *(_BYTE *)(v8 - 262) = v18;
  *(_BYTE *)(v8 - 261) = v19;
  *(_QWORD *)(v8 - 256) = v20;
  *(_QWORD *)(v8 - 248) = v21;
  v22 = sub_20E446C40((uint64_t *)(v8 - 272), *(_QWORD *)(v8 - 296), *(_QWORD *)(v8 - 288));
  swift_release();
  swift_release();
  *(_QWORD *)(v8 - 288) = swift_getKeyPath();
  __swift_destroy_boxed_opaque_existential_1(v8 - 128);
  v10(v8 - 272, v6, a1);
  v23 = swift_allocObject();
  v24 = *(_OWORD *)(v8 - 240);
  *(_OWORD *)(v23 + 104) = *(_OWORD *)(v8 - 224);
  v25 = *(_OWORD *)(v8 - 192);
  *(_OWORD *)(v23 + 120) = *(_OWORD *)(v8 - 208);
  *(_OWORD *)(v23 + 136) = v25;
  *(_OWORD *)(v23 + 145) = *(_OWORD *)(v8 - 183);
  v26 = *(_OWORD *)(v8 - 256);
  *(_OWORD *)(v23 + 56) = *(_OWORD *)(v8 - 272);
  *(_OWORD *)(v23 + 72) = v26;
  v27 = *(_QWORD *)(v8 - 328);
  *(_QWORD *)(v23 + 16) = v27;
  *(_QWORD *)(v23 + 24) = v1;
  v28 = *(_QWORD *)(v8 - 336);
  v29 = *(_QWORD *)(v8 - 280);
  *(_QWORD *)(v23 + 32) = v28;
  *(_QWORD *)(v23 + 40) = v29;
  *(_QWORD *)(v23 + 48) = v4;
  *(_OWORD *)(v23 + 88) = v24;
  v10(v8 - 272, v6, a1);
  v30 = swift_allocObject();
  v31 = *(_OWORD *)(v8 - 240);
  *(_OWORD *)(v30 + 104) = *(_OWORD *)(v8 - 224);
  v32 = *(_OWORD *)(v8 - 192);
  *(_OWORD *)(v30 + 120) = *(_OWORD *)(v8 - 208);
  *(_OWORD *)(v30 + 136) = v32;
  *(_OWORD *)(v30 + 145) = *(_OWORD *)(v8 - 183);
  result = *(__n128 *)(v8 - 272);
  v34 = *(_OWORD *)(v8 - 256);
  *(__n128 *)(v30 + 56) = result;
  *(_OWORD *)(v30 + 72) = v34;
  *(_QWORD *)(v30 + 16) = v27;
  *(_QWORD *)(v30 + 24) = v15;
  *(_QWORD *)(v30 + 32) = v28;
  *(_QWORD *)(v30 + 40) = v29;
  *(_QWORD *)(v30 + 48) = v4;
  *(_OWORD *)(v30 + 88) = v31;
  v35 = *(_QWORD *)(v8 - 320);
  v36 = *(_QWORD *)(v8 - 288);
  *(_QWORD *)v35 = v22;
  *(_QWORD *)(v35 + 8) = v36;
  *(_BYTE *)(v35 + 16) = 2;
  *(_QWORD *)(v35 + 24) = sub_20E472204;
  *(_QWORD *)(v35 + 32) = v23;
  *(_QWORD *)(v35 + 40) = sub_20E4722B4;
  *(_QWORD *)(v35 + 48) = v30;
  return result;
}

void sub_20E47167C(uint64_t a1, uint64_t a2)
{
  _QWORD v4[4];

  MEMORY[0x24BDAC7A8](a1);
  sub_20E45D75C((uint64_t)v4);
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  (*(void (**)(uint64_t))(a2 + 16))(a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED2A08);
  sub_20E4A464C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1BD30);
  sub_20E4A464C();
  type metadata accessor for FlowStackSheetViewModifier();
}

uint64_t sub_20E4717BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  char v15;
  char v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t KeyPath;
  uint64_t result;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v10 - 272, v7, a1);
  v11 = swift_allocObject();
  v12 = *(_OWORD *)(v10 - 240);
  *(_OWORD *)(v11 + 104) = *(_OWORD *)(v10 - 224);
  v13 = *(_OWORD *)(v10 - 192);
  *(_OWORD *)(v11 + 120) = *(_OWORD *)(v10 - 208);
  *(_OWORD *)(v11 + 136) = v13;
  *(_OWORD *)(v11 + 145) = *(_OWORD *)(v10 - 183);
  v14 = *(_OWORD *)(v10 - 256);
  *(_OWORD *)(v11 + 56) = *(_OWORD *)(v10 - 272);
  *(_OWORD *)(v11 + 72) = v14;
  *(_QWORD *)(v11 + 16) = v9;
  *(_QWORD *)(v11 + 24) = v2;
  *(_QWORD *)(v11 + 32) = v8;
  *(_QWORD *)(v11 + 40) = v6;
  *(_QWORD *)(v11 + 48) = v5;
  *(_OWORD *)(v11 + 88) = v12;
  sub_20E446BA4(v4, 0, (char *)(v10 - 161), v3, (char *)(v10 - 163), (uint64_t)sub_20E4721D4, v11, v2, v10 - 160);
  v15 = *(_BYTE *)(v10 - 152);
  v16 = *(_BYTE *)(v10 - 151);
  v17 = *(_BYTE *)(v10 - 150);
  v18 = *(_BYTE *)(v10 - 149);
  v19 = *(_QWORD *)(v10 - 144);
  v20 = *(_QWORD *)(v10 - 136);
  *(_QWORD *)(v10 - 272) = *(_QWORD *)(v10 - 160);
  *(_BYTE *)(v10 - 264) = v15;
  *(_BYTE *)(v10 - 263) = v16;
  *(_BYTE *)(v10 - 262) = v17;
  *(_BYTE *)(v10 - 261) = v18;
  *(_QWORD *)(v10 - 256) = v19;
  *(_QWORD *)(v10 - 248) = v20;
  v21 = sub_20E446C40((uint64_t *)(v10 - 272), *(_QWORD *)(v10 - 288), *(_QWORD *)(v10 - 280));
  swift_release();
  swift_release();
  KeyPath = swift_getKeyPath();
  result = __swift_destroy_boxed_opaque_existential_1(v10 - 128);
  *(_QWORD *)v1 = v21;
  *(_QWORD *)(v1 + 8) = KeyPath;
  *(_BYTE *)(v1 + 16) = 2;
  return result;
}

void sub_20E47191C(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 0;
}

void (*EnvironmentValues.isFlowStackSheetPresented.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  char *v3;
  char v4;

  v3 = (char *)malloc(0x40uLL);
  *a1 = v3;
  *((_QWORD *)v3 + 6) = v1;
  *((_QWORD *)v3 + 7) = sub_20E4700C4();
  sub_20E4A3C08();
  v4 = v3[40];
  *(_OWORD *)v3 = *(_OWORD *)(v3 + 24);
  v3[16] = v4;
  return sub_20E4719A0;
}

void sub_20E4719A0(uint64_t **a1, char a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *a1;
  v4 = **a1;
  v5 = v3[1];
  v3[3] = v4;
  v6 = *((_BYTE *)v3 + 16);
  v3[4] = v5;
  *((_BYTE *)v3 + 40) = v6;
  if ((a2 & 1) != 0)
  {
    sub_20E3A3B08(v4, v5);
    sub_20E4A3C14();
    sub_20E3A3D20(*v3, v3[1]);
  }
  else
  {
    sub_20E4A3C14();
  }
  free(v3);
}

double sub_20E471A30@<D0>(uint64_t a1@<X8>)
{
  double result;
  __int128 v3;
  char v4;

  sub_20E4700C4();
  sub_20E4A3C08();
  result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_BYTE *)(a1 + 16) = v4;
  return result;
}

ValueMetadata *type metadata accessor for FlowStackSheetIsPresentedKey()
{
  return &type metadata for FlowStackSheetIsPresentedKey;
}

void type metadata accessor for FlowStackSheetViewModifier()
{
  JUMPOUT(0x212BBDEE8);
}

uint64_t sub_20E471AAC(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  if ((*(_BYTE *)(a1 + 104) & 1) != 0)
    return __swift_destroy_boxed_opaque_existential_1(a1 + 64);
  else
    return swift_release();
}

uint64_t sub_20E471B04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  char v7;
  __int128 v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v5 = (_QWORD *)(a1 + 64);
  v6 = (_QWORD *)(a2 + 64);
  v7 = *(_BYTE *)(a2 + 104);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  if ((v7 & 1) != 0)
  {
    v8 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 88) = v8;
    (**(void (***)(_QWORD *, _QWORD *))(v8 - 8))(v5, v6);
  }
  else
  {
    *v5 = *v6;
    swift_retain();
  }
  *(_BYTE *)(a1 + 104) = v7;
  return a1;
}

uint64_t sub_20E471BDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    sub_20E471CE0(a1 + 64);
    if ((*(_BYTE *)(a2 + 104) & 1) != 0)
    {
      v5 = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 88) = v5;
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 64, a2 + 64);
      *(_BYTE *)(a1 + 104) = 1;
    }
    else
    {
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_BYTE *)(a1 + 104) = 0;
      swift_retain();
    }
  }
  return a1;
}

uint64_t sub_20E471CE0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_254A1A660);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

__n128 __swift_memcpy105_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_OWORD *)(a1 + 89) = *(__int128 *)((char *)a2 + 89);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t sub_20E471D4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_release();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_release();
  if (a1 != a2)
  {
    sub_20E471CE0(a1 + 64);
    v5 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v5;
    *(_OWORD *)(a1 + 89) = *(_OWORD *)(a2 + 89);
  }
  return a1;
}

uint64_t sub_20E471DE0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 105))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_20E471E28(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 104) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 105) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 105) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_20E471E84()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_20E471EC0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254A1BCF8;
  if (!qword_254A1BCF8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1BCF0);
    v2[0] = sub_20E471F44();
    v2[1] = sub_20E39D010(&qword_254A1BD20, &qword_254A1BD28, MEMORY[0x24BDF09B0]);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254A1BCF8);
  }
  return result;
}

unint64_t sub_20E471F44()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254A1BD00;
  if (!qword_254A1BD00)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1BD08);
    v2[0] = sub_20E41C908();
    v2[1] = sub_20E39D010(&qword_254A1BD10, &qword_254A1BD18, MEMORY[0x24BDF09B0]);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254A1BD00);
  }
  return result;
}

uint64_t sub_20E471FC8()
{
  return sub_20E440C38();
}

uint64_t sub_20E471FE8(uint64_t a1)
{
  return sub_20E4410E4(a1);
}

uint64_t sub_20E472008()
{
  return 40;
}

__n128 sub_20E472014(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

void sub_20E47202C()
{
  sub_20E4708F4();
}

uint64_t sub_20E472040()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  if ((*(_BYTE *)(v0 + 160) & 1) != 0)
    __swift_destroy_boxed_opaque_existential_1(v0 + 120);
  else
    swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + ((v3 + 161) & ~v3), v1);
  return swift_deallocObject();
}

void sub_20E4720E0(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1[2];
  v3 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  sub_20E471204((uint64_t)(v1 + 7), (uint64_t)v1 + ((v3 + 161) & ~v3), v2, v1[3], v1[4], v1[5], v1[6], a1);
}

void sub_20E47210C(uint64_t a1)
{
  uint64_t v1;

  sub_20E47167C(a1, v1 + 56);
}

uint64_t sub_20E472120()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  if ((*(_BYTE *)(v0 + 176) & 1) != 0)
    __swift_destroy_boxed_opaque_existential_1(v0 + 136);
  else
    swift_release();
  return swift_deallocObject();
}

BOOL sub_20E472180@<W0>(_BYTE *a1@<X8>)
{
  _BOOL8 result;

  result = sub_20E440AB8();
  *a1 = result;
  return result;
}

uint64_t sub_20E4721AC()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_20E4721D4()
{
  return sub_20E44067C();
}

uint64_t sub_20E472204()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1BD30);
  return sub_20E4A4658();
}

uint64_t objectdestroyTm_6()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  if ((*(_BYTE *)(v0 + 160) & 1) != 0)
    __swift_destroy_boxed_opaque_existential_1(v0 + 120);
  else
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E4722B4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED2A08);
  return sub_20E4A4658();
}

void sub_20E472308()
{
  type metadata accessor for FlowStackSheetViewModifier();
}

void sub_20E472350(uint64_t a1)
{
  MEMORY[0x212BBDF90](&unk_20E4AFC68, a1);
  sub_20E4A3EA8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1BCF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1A6E8);
  sub_20E471EC0();
  sub_20E41C908();
  type metadata accessor for FlowStack();
}

uint64_t sub_20E4723CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[2];
  _QWORD v14[2];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1A700);
  v3 = sub_20E4A39D4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253ED0C40);
  v4 = sub_20E4A39D4();
  v5 = MEMORY[0x212BBDF90](MEMORY[0x24BDEFB78], v1);
  v6 = MEMORY[0x212BBDF90](&unk_20E4AEF28, a1);
  v7 = MEMORY[0x24BDF1028];
  v14[0] = v6;
  v14[1] = sub_20E39D010((unint64_t *)&qword_254A1A6F8, &qword_254A1A700, MEMORY[0x24BDF1028]);
  v8 = MEMORY[0x24BDED308];
  v13[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v3, v14);
  v13[1] = sub_20E39D010(&qword_253ED0C38, &qword_253ED0C40, v7);
  v9 = MEMORY[0x212BBDF90](v8, v4, v13);
  v15 = v1;
  v16 = v11;
  v17 = v4;
  v18 = v5;
  v19 = v12;
  v20 = v9;
  return swift_getOpaqueTypeConformance2();
}

uint64_t Button.init<>(_:action:)()
{
  sub_20E47256C();
  sub_20E4A4694();
  swift_bridgeObjectRelease();
  return swift_release();
}

unint64_t sub_20E47256C()
{
  unint64_t result;

  result = qword_254A1BD38;
  if (!qword_254A1BD38)
  {
    result = MEMORY[0x212BBDF90](&protocol conformance descriptor for LocalizedText, &type metadata for LocalizedText);
    atomic_store(result, (unint64_t *)&qword_254A1BD38);
  }
  return result;
}

uint64_t Button.init<>(_:role:action:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[16];
  uint64_t v8;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19628);
  MEMORY[0x24BDAC7A8](v4);
  sub_20E3A5E20(a2, (uint64_t)&v7[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)], &qword_254A19628);
  v8 = a1;
  sub_20E47256C();
  sub_20E4A4688();
  sub_20E39D1F8(a2, &qword_254A19628);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t Button.init<>(_:localizer:action:)(uint64_t a1, uint64_t a2)
{
  sub_20E4A4694();
  __swift_destroy_boxed_opaque_existential_1(a2);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t Text.init(_:localizer:)(uint64_t (**a1)(uint64_t), uint64_t a2)
{
  uint64_t v3;

  v3 = (*a1)(a2);
  swift_bridgeObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a2);
  return v3;
}

uint64_t Button.init<>(_:localizer:role:action:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[16];
  uint64_t v10;
  uint64_t v11;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19628);
  MEMORY[0x24BDAC7A8](v6);
  sub_20E3A5E20(a3, (uint64_t)&v9[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)], &qword_254A19628);
  v10 = a1;
  v11 = a2;
  sub_20E4A4688();
  sub_20E39D1F8(a3, &qword_254A19628);
  __swift_destroy_boxed_opaque_existential_1(a2);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t Label.init<>(_:image:)()
{
  return sub_20E4728A4();
}

uint64_t Label.init<>(_:systemImage:)()
{
  return sub_20E4728A4();
}

uint64_t sub_20E4728A4()
{
  sub_20E47256C();
  sub_20E4A461C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_20E472940@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_20E4730A8(*(uint64_t **)(v1 + 16), a1);
}

uint64_t Label.init<>(_:localizer:image:)(uint64_t a1, uint64_t a2)
{
  return sub_20E4729C8(a1, a2);
}

uint64_t sub_20E472970@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  swift_bridgeObjectRetain();
  result = sub_20E4A4610();
  *a1 = result;
  return result;
}

uint64_t Label.init<>(_:localizer:systemImage:)(uint64_t a1, uint64_t a2)
{
  return sub_20E4729C8(a1, a2);
}

uint64_t sub_20E4729C8(uint64_t a1, uint64_t a2)
{
  sub_20E4A461C();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a2);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_20E472A60@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_20E4731AC(*(uint64_t (***)(_BYTE *))(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_20E472A78@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  swift_bridgeObjectRetain();
  result = sub_20E4A4598();
  *a1 = result;
  return result;
}

uint64_t Picker.init<>(_:selection:content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v17 = a4;
  v18 = a5;
  v10 = sub_20E4A4778();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v17 - v13;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v11 + 16))((char *)&v17 - v13, a2, v10, v12);
  v19 = a1;
  v15 = sub_20E47256C();
  sub_20E472BC8((uint64_t)v14, a3, v17, (uint64_t)sub_20E4745D8, v18, a6, v15);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a2, v10);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_20E472BC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X7>, uint64_t a6@<X8>, uint64_t a7)
{
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[6];

  v14[4] = a3;
  v14[5] = a5;
  v14[0] = a4;
  v14[1] = a6;
  v14[2] = a2;
  v14[3] = a7;
  MEMORY[0x24BDAC7A8](a1);
  v8 = sub_20E4A4778();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (*(uint64_t (**)(char *, uint64_t, uint64_t, double))(v9 + 16))((char *)v14 - v11, a1, v8, v10);
  ((void (*)(uint64_t))v14[0])(v12);
  sub_20E4A46E8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
}

uint64_t Picker.init<>(_:localizer:selection:content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v19 = a5;
  v20 = a6;
  v18 = a4;
  v11 = sub_20E4A4778();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v17 - v14;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v12 + 16))((char *)&v17 - v14, a3, v11, v13);
  v21 = a1;
  v22 = a2;
  sub_20E472BC8((uint64_t)v15, v18, v19, (uint64_t)sub_20E4745E0, v20, a7, MEMORY[0x24BDF1F80]);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a3, v11);
  __swift_destroy_boxed_opaque_existential_1(a2);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t Section<>.init<A>(_:localizer:content:)(void (**a1)(uint64_t), uint64_t a2)
{
  (*a1)(a2);
  sub_20E3C3948();
  sub_20E4A47E4();
  __swift_destroy_boxed_opaque_existential_1(a2);
  swift_bridgeObjectRelease();
  return swift_release();
}

{
  (*a1)(a2);
  sub_20E3C3948();
  sub_20E4A47F0();
  __swift_destroy_boxed_opaque_existential_1(a2);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t Section<>.init(_:localizer:content:)(void (**a1)(uint64_t), uint64_t a2)
{
  (*a1)(a2);
  sub_20E3C3948();
  sub_20E4A47FC();
  __swift_destroy_boxed_opaque_existential_1(a2);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t Toggle.init<>(_:isOn:)()
{
  sub_20E47256C();
  sub_20E4A46F4();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_20E4730A8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  type metadata accessor for _LocalizerOwner();
  sub_20E40B978();
  swift_retain();
  swift_bridgeObjectRetain();
  v6 = sub_20E4A3B00();
  v8 = v7;
  result = swift_getKeyPath();
  *(_QWORD *)a2 = v6;
  *(_QWORD *)(a2 + 8) = v8;
  *(_QWORD *)(a2 + 16) = result;
  *(_BYTE *)(a2 + 24) = 0;
  *(_QWORD *)(a2 + 32) = v4;
  *(_QWORD *)(a2 + 40) = v3;
  *(_QWORD *)(a2 + 48) = v5;
  return result;
}

uint64_t Toggle.init<>(_:localizer:isOn:)(uint64_t a1, uint64_t a2)
{
  sub_20E4A46F4();
  __swift_destroy_boxed_opaque_existential_1(a2);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_20E4731AC@<X0>(uint64_t (**a1)(_BYTE *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t (*v4)(_BYTE *);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _BYTE v9[40];

  v4 = *a1;
  sub_20E3C39FC(a2, (uint64_t)v9);
  swift_retain();
  swift_bridgeObjectRetain();
  v5 = v4(v9);
  v7 = v6;
  swift_bridgeObjectRelease();
  swift_release();
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  *(_QWORD *)a3 = v5;
  *(_QWORD *)(a3 + 8) = v7;
  *(_BYTE *)(a3 + 16) = 0;
  *(_QWORD *)(a3 + 24) = MEMORY[0x24BEE4AF8];
  return result;
}

uint64_t View.navigationTitle(_:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_20E47377C(a1, a2, a3, (uint64_t)&type metadata for LocalizedNavigationTitleViewModifier);
}

uint64_t sub_20E473258@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  __int128 v16;
  uint64_t v17;
  char v18;
  char v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, char *, uint64_t);
  uint64_t v27;
  char *v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  __int128 v32;
  uint64_t *v33;
  char *v34;
  uint64_t v35;
  uint64_t (**v36)();
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  _OWORD v46[2];
  _OWORD v47[2];
  _OWORD v48[2];
  uint64_t (*v49)();
  uint64_t v50;
  uint64_t (*v51)(uint64_t);
  uint64_t v52;
  uint64_t (*v53)(uint64_t);
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;

  v40 = a1;
  v43 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1BD50);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1BD58);
  MEMORY[0x24BDAC7A8](v41);
  v42 = (uint64_t)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1BD60);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7);
  v39 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v38 - v11;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v38 - v14;
  v16 = v2[1];
  v55 = *v2;
  v56 = v16;
  v57 = v2[2];
  v58 = *((_QWORD *)v2 + 6);
  v17 = v16;
  v18 = BYTE8(v16);
  sub_20E39CFAC(v16, SBYTE8(v16));
  v19 = sub_20E45CF28(v17, v18);
  sub_20E39CED8(v17, v18);
  if ((v19 & 1) != 0)
  {
    type metadata accessor for _LocalizerOwner();
    sub_20E40B978();
    sub_20E4A3ADC();
    swift_getKeyPath();
    sub_20E4A3AF4();
    swift_release();
    swift_release();
    v20 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    v21 = v40;
    v20(v15, v40, v7);
    v22 = *(unsigned __int8 *)(v8 + 80);
    v38 = v3;
    v23 = (v22 + 16) & ~v22;
    v24 = v23 + v9;
    v25 = swift_allocObject();
    v26 = *(void (**)(uint64_t, char *, uint64_t))(v8 + 32);
    v26(v25 + v23, v15, v7);
    v20(v12, v21, v7);
    v27 = swift_allocObject();
    v26(v27 + v23, v12, v7);
    v28 = v39;
    v20(v39, v21, v7);
    v29 = (v24 + 7) & 0xFFFFFFFFFFFFFFF8;
    v30 = swift_allocObject();
    v26(v30 + v23, v28, v7);
    v31 = v30 + v29;
    v32 = v56;
    *(_OWORD *)v31 = v55;
    *(_OWORD *)(v31 + 16) = v32;
    *(_OWORD *)(v31 + 32) = v57;
    *(_QWORD *)(v31 + 48) = v58;
    v47[0] = v44;
    v47[1] = v45;
    v48[0] = v46[0];
    *(_OWORD *)((char *)v48 + 9) = *(_OWORD *)((char *)v46 + 9);
    v49 = sub_20E474170;
    v50 = v25;
    v51 = sub_20E474198;
    v52 = v27;
    v53 = sub_20E4741C0;
    v54 = v30;
    v33 = &qword_254A1BD68;
    sub_20E3A5E20((uint64_t)v47, v42, &qword_254A1BD68);
    swift_storeEnumTagMultiPayload();
    sub_20E45EBF4((uint64_t)&v55);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254A1BD68);
    sub_20E39D010(&qword_254A1BD70, &qword_254A1BD68, (uint64_t)&unk_20E4AF6E0);
    sub_20E39D010(&qword_254A1BD78, &qword_254A1BD50, (uint64_t)&protocol conformance descriptor for _RequirementFailureView<A, B>);
    sub_20E4A3DF4();
    v34 = (char *)v47;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v15, v40, v7);
    v35 = swift_allocObject();
    *(_QWORD *)(v35 + 16) = 0xD000000000000022;
    *(_QWORD *)(v35 + 24) = 0x800000020E4CBA20;
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v15, v7);
    v36 = (uint64_t (**)())&v5[*(int *)(v3 + 52)];
    *v36 = sub_20E3A5260;
    v36[1] = (uint64_t (*)())v35;
    v33 = &qword_254A1BD50;
    sub_20E3A5E20((uint64_t)v5, v42, &qword_254A1BD50);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254A1BD68);
    sub_20E39D010(&qword_254A1BD70, &qword_254A1BD68, (uint64_t)&unk_20E4AF6E0);
    sub_20E39D010(&qword_254A1BD78, &qword_254A1BD50, (uint64_t)&protocol conformance descriptor for _RequirementFailureView<A, B>);
    sub_20E4A3DF4();
    v34 = v5;
  }
  return sub_20E39D1F8((uint64_t)v34, v33);
}

uint64_t View.navigationSubtitle(_:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_20E47377C(a1, a2, a3, (uint64_t)&type metadata for LocalizedNavigationSubtitleViewModifier);
}

uint64_t sub_20E47377C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t KeyPath;
  _QWORD v15[3];
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v7 = *a1;
  v6 = a1[1];
  v8 = a1[2];
  type metadata accessor for _LocalizerOwner();
  sub_20E40B978();
  swift_retain();
  swift_bridgeObjectRetain();
  v9 = sub_20E4A3B00();
  v11 = v10;
  KeyPath = swift_getKeyPath();
  v15[0] = v9;
  v15[1] = v11;
  v15[2] = KeyPath;
  v16 = 0;
  v17 = v7;
  v18 = v6;
  v19 = v8;
  MEMORY[0x212BBBA70](v15, a2, a4, a3);
  swift_release();
  sub_20E39CED8(KeyPath, 0);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_20E47386C(uint64_t a1)
{
  return get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyx011_JetEngine_aB0024LocalizedNavigationTitleC8Modifier33_2360066CC44703D6FE8597C16DE4267ELLVGAaBHPxAaBHD1__AhA0cK0HPyHCHCTm(a1, (uint64_t)&type metadata for LocalizedNavigationTitleViewModifier, (uint64_t (*)(void))sub_20E473880);
}

unint64_t sub_20E473880()
{
  unint64_t result;

  result = qword_254A1BD40;
  if (!qword_254A1BD40)
  {
    result = MEMORY[0x212BBDF90](&unk_20E4AFE18, &type metadata for LocalizedNavigationTitleViewModifier);
    atomic_store(result, (unint64_t *)&qword_254A1BD40);
  }
  return result;
}

uint64_t sub_20E4738C4(uint64_t a1)
{
  return get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyx011_JetEngine_aB0024LocalizedNavigationTitleC8Modifier33_2360066CC44703D6FE8597C16DE4267ELLVGAaBHPxAaBHD1__AhA0cK0HPyHCHCTm(a1, (uint64_t)&type metadata for LocalizedNavigationSubtitleViewModifier, (uint64_t (*)(void))sub_20E473934);
}

uint64_t get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyx011_JetEngine_aB0024LocalizedNavigationTitleC8Modifier33_2360066CC44703D6FE8597C16DE4267ELLVGAaBHPxAaBHD1__AhA0cK0HPyHCHCTm(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[2];

  v4 = *(_QWORD *)(a1 + 8);
  v5 = sub_20E4A39D4();
  v7[0] = v4;
  v7[1] = a3();
  return MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v5, v7);
}

unint64_t sub_20E473934()
{
  unint64_t result;

  result = qword_254A1BD48;
  if (!qword_254A1BD48)
  {
    result = MEMORY[0x212BBDF90](&unk_20E4AFDC8, &type metadata for LocalizedNavigationSubtitleViewModifier);
    atomic_store(result, (unint64_t *)&qword_254A1BD48);
  }
  return result;
}

ValueMetadata *type metadata accessor for LocalizedNavigationSubtitleViewModifier()
{
  return &type metadata for LocalizedNavigationSubtitleViewModifier;
}

ValueMetadata *type metadata accessor for LocalizedNavigationTitleViewModifier()
{
  return &type metadata for LocalizedNavigationTitleViewModifier;
}

uint64_t sub_20E4739B0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E4739C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  __int128 v16;
  uint64_t v17;
  char v18;
  char v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, char *, uint64_t);
  uint64_t v27;
  char *v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  __int128 v32;
  uint64_t *v33;
  char *v34;
  uint64_t v35;
  uint64_t (**v36)();
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  _OWORD v46[2];
  _OWORD v47[2];
  _OWORD v48[2];
  uint64_t (*v49)();
  uint64_t v50;
  uint64_t (*v51)(uint64_t);
  uint64_t v52;
  uint64_t (*v53)(uint64_t);
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;

  v40 = a1;
  v43 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1BD88);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1BD90);
  MEMORY[0x24BDAC7A8](v41);
  v42 = (uint64_t)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1BD98);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7);
  v39 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v38 - v11;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v38 - v14;
  v16 = v2[1];
  v55 = *v2;
  v56 = v16;
  v57 = v2[2];
  v58 = *((_QWORD *)v2 + 6);
  v17 = v16;
  v18 = BYTE8(v16);
  sub_20E39CFAC(v16, SBYTE8(v16));
  v19 = sub_20E45CF28(v17, v18);
  sub_20E39CED8(v17, v18);
  if ((v19 & 1) != 0)
  {
    type metadata accessor for _LocalizerOwner();
    sub_20E40B978();
    sub_20E4A3ADC();
    swift_getKeyPath();
    sub_20E4A3AF4();
    swift_release();
    swift_release();
    v20 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    v21 = v40;
    v20(v15, v40, v7);
    v22 = *(unsigned __int8 *)(v8 + 80);
    v38 = v3;
    v23 = (v22 + 16) & ~v22;
    v24 = v23 + v9;
    v25 = swift_allocObject();
    v26 = *(void (**)(uint64_t, char *, uint64_t))(v8 + 32);
    v26(v25 + v23, v15, v7);
    v20(v12, v21, v7);
    v27 = swift_allocObject();
    v26(v27 + v23, v12, v7);
    v28 = v39;
    v20(v39, v21, v7);
    v29 = (v24 + 7) & 0xFFFFFFFFFFFFFFF8;
    v30 = swift_allocObject();
    v26(v30 + v23, v28, v7);
    v31 = v30 + v29;
    v32 = v56;
    *(_OWORD *)v31 = v55;
    *(_OWORD *)(v31 + 16) = v32;
    *(_OWORD *)(v31 + 32) = v57;
    *(_QWORD *)(v31 + 48) = v58;
    v47[0] = v44;
    v47[1] = v45;
    v48[0] = v46[0];
    *(_OWORD *)((char *)v48 + 9) = *(_OWORD *)((char *)v46 + 9);
    v49 = sub_20E4741E8;
    v50 = v25;
    v51 = sub_20E4742D0;
    v52 = v27;
    v53 = sub_20E4743F8;
    v54 = v30;
    v33 = &qword_254A1BDA0;
    sub_20E3A5E20((uint64_t)v47, v42, &qword_254A1BDA0);
    swift_storeEnumTagMultiPayload();
    sub_20E45EBF4((uint64_t)&v55);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254A1BDA0);
    sub_20E39D010(&qword_254A1BDA8, &qword_254A1BDA0, (uint64_t)&unk_20E4AF6E0);
    sub_20E39D010(&qword_254A1BDB0, &qword_254A1BD88, (uint64_t)&protocol conformance descriptor for _RequirementFailureView<A, B>);
    sub_20E4A3DF4();
    v34 = (char *)v47;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v15, v40, v7);
    v35 = swift_allocObject();
    *(_QWORD *)(v35 + 16) = 0xD000000000000022;
    *(_QWORD *)(v35 + 24) = 0x800000020E4CBA20;
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v15, v7);
    v36 = (uint64_t (**)())&v5[*(int *)(v3 + 52)];
    *v36 = sub_20E3C3C6C;
    v36[1] = (uint64_t (*)())v35;
    v33 = &qword_254A1BD88;
    sub_20E3A5E20((uint64_t)v5, v42, &qword_254A1BD88);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254A1BDA0);
    sub_20E39D010(&qword_254A1BDA8, &qword_254A1BDA0, (uint64_t)&unk_20E4AF6E0);
    sub_20E39D010(&qword_254A1BDB0, &qword_254A1BD88, (uint64_t)&protocol conformance descriptor for _RequirementFailureView<A, B>);
    sub_20E4A3DF4();
    v34 = v5;
  }
  return sub_20E39D1F8((uint64_t)v34, v33);
}

uint64_t sub_20E473ED4(uint64_t a1, uint64_t *a2, unint64_t *a3, void (*a4)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v7 = sub_20E4A3CA4();
  v9 = v8;
  v11 = v10;
  v13 = v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v15 = sub_20E39D010(a3, a2, MEMORY[0x24BDEFB78]);
  a4(v7, v9, v11 & 1, v13, v14, v15);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_20E473F90(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4, void (*a5)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v8 = sub_20E4A3CA4();
  v10 = v9;
  v12 = v11;
  v14 = v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName(a3);
  v16 = sub_20E39D010(a4, a3, MEMORY[0x24BDEFB78]);
  a5(v8, v10, v12 & 1, v14, v15, v16);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_20E474048(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, unint64_t *a5, void (*a6)(_QWORD *, uint64_t, _QWORD, uint64_t, unint64_t))
{
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _QWORD v18[2];
  __int128 v19;
  uint64_t v20;

  v19 = *(_OWORD *)(a3 + 32);
  v20 = *(_QWORD *)(a3 + 48);
  v10 = (uint64_t (*)(uint64_t))v19;
  sub_20E45F868((uint64_t)&v19);
  v11 = v10(a1);
  v13 = v12;
  sub_20E45F89C((uint64_t)&v19);
  v18[0] = v11;
  v18[1] = v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(a4);
  v15 = sub_20E39D010(a5, a4, MEMORY[0x24BDEFB78]);
  v16 = sub_20E3C3948();
  a6(v18, v14, MEMORY[0x24BEE0D00], v15, v16);
  return swift_bridgeObjectRelease();
}

uint64_t sub_20E474128()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E474138()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_20E474164()
{
  return objectdestroy_8Tm_0(&qword_254A1BD60);
}

uint64_t sub_20E474170()
{
  return sub_20E474204(&qword_254A1BD60, &qword_254A1BD80, MEMORY[0x24BDF2880]);
}

uint64_t sub_20E47418C()
{
  return objectdestroy_8Tm_0(&qword_254A1BD60);
}

uint64_t sub_20E474198(uint64_t a1)
{
  return sub_20E4742EC(a1, &qword_254A1BD60, &qword_254A1BD80, MEMORY[0x24BDF2880]);
}

uint64_t sub_20E4741B4()
{
  return objectdestroy_14Tm(&qword_254A1BD60);
}

uint64_t sub_20E4741C0(uint64_t a1)
{
  return sub_20E474414(a1, &qword_254A1BD60, &qword_254A1BD80, MEMORY[0x24BDF28B8]);
}

uint64_t sub_20E4741DC()
{
  return objectdestroy_8Tm_0(&qword_254A1BD98);
}

uint64_t sub_20E4741E8()
{
  return sub_20E474204(&qword_254A1BD98, &qword_254A1BDB8, MEMORY[0x24BDF2CA8]);
}

uint64_t sub_20E474204(uint64_t *a1, unint64_t *a2, void (*a3)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a1) - 8) + 80);
  return sub_20E473ED4(v3 + ((v7 + 16) & ~v7), a1, a2, a3);
}

uint64_t sub_20E474268()
{
  return objectdestroy_8Tm_0(&qword_254A1BD98);
}

uint64_t objectdestroy_8Tm_0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1+ ((*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80)), v2);
  return swift_deallocObject();
}

uint64_t sub_20E4742D0(uint64_t a1)
{
  return sub_20E4742EC(a1, &qword_254A1BD98, &qword_254A1BDB8, MEMORY[0x24BDF2CA8]);
}

uint64_t sub_20E4742EC(uint64_t a1, uint64_t *a2, unint64_t *a3, void (*a4)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v9;

  v9 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a2) - 8) + 80);
  return sub_20E473F90(a1, v4 + ((v9 + 16) & ~v9), a2, a3, a4);
}

uint64_t sub_20E47435C()
{
  return objectdestroy_14Tm(&qword_254A1BD98);
}

uint64_t objectdestroy_14Tm(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v1 + v4, v2);
  swift_release();
  sub_20E39CED8(*(_QWORD *)(v1 + v5 + 16), *(_BYTE *)(v1 + v5 + 24));
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_20E4743F8(uint64_t a1)
{
  return sub_20E474414(a1, &qword_254A1BD98, &qword_254A1BDB8, MEMORY[0x24BDF2CB8]);
}

uint64_t sub_20E474414(uint64_t a1, uint64_t *a2, unint64_t *a3, void (*a4)(_QWORD *, uint64_t, _QWORD, uint64_t, unint64_t))
{
  uint64_t v4;
  uint64_t v9;
  unint64_t v10;

  v9 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a2) - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  return sub_20E474048(a1, v4 + v10, v4 + ((*(_QWORD *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8), a2, a3, a4);
}

unint64_t sub_20E47449C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254A1BDC0;
  if (!qword_254A1BDC0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1BDC8);
    v2[0] = sub_20E39D010(&qword_254A1BD70, &qword_254A1BD68, (uint64_t)&unk_20E4AF6E0);
    v2[1] = sub_20E39D010(&qword_254A1BD78, &qword_254A1BD50, (uint64_t)&protocol conformance descriptor for _RequirementFailureView<A, B>);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254A1BDC0);
  }
  return result;
}

unint64_t sub_20E47453C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254A1BDD0;
  if (!qword_254A1BDD0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_254A1BDD8);
    v2[0] = sub_20E39D010(&qword_254A1BDA8, &qword_254A1BDA0, (uint64_t)&unk_20E4AF6E0);
    v2[1] = sub_20E39D010(&qword_254A1BDB0, &qword_254A1BD88, (uint64_t)&protocol conformance descriptor for _RequirementFailureView<A, B>);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254A1BDD0);
  }
  return result;
}

uint64_t ShelfGridPadding.init(leading:trailing:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  *(_QWORD *)a5 = result;
  *(_BYTE *)(a5 + 8) = a2 & 1;
  *(_QWORD *)(a5 + 16) = a3;
  *(_BYTE *)(a5 + 24) = a4 & 1;
  return result;
}

void ShelfGridPadding.init(floatLiteral:)(uint64_t a1@<X8>, double a2@<D0>)
{
  *(double *)a1 = a2;
  *(_BYTE *)(a1 + 8) = 0;
  *(double *)(a1 + 16) = a2;
  *(_BYTE *)(a1 + 24) = 0;
}

uint64_t ShelfGridPadding.leading.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t ShelfGridPadding.leading.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)v2 = result;
  *(_BYTE *)(v2 + 8) = a2 & 1;
  return result;
}

uint64_t (*ShelfGridPadding.leading.modify())()
{
  return nullsub_1;
}

uint64_t ShelfGridPadding.trailing.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t ShelfGridPadding.trailing.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = result;
  *(_BYTE *)(v2 + 24) = a2 & 1;
  return result;
}

uint64_t (*ShelfGridPadding.trailing.modify())()
{
  return nullsub_1;
}

ValueMetadata *type metadata accessor for ShelfGridPadding()
{
  return &type metadata for ShelfGridPadding;
}

uint64_t static Transaction._loading.getter()
{
  sub_20E4A48BC();
  return sub_20E4A371C();
}

uint64_t static Transaction.appleServicesLoading.getter()
{
  sub_20E4A48BC();
  return sub_20E4A371C();
}

id ExternalURLActionImplementation.init()@<X0>(_QWORD *a1@<X8>)
{
  id result;

  result = objc_msgSend((id)objc_opt_self(), sel_defaultWorkspace);
  if (result)
    *a1 = result;
  else
    __break(1u);
  return result;
}

uint64_t ExternalURLActionImplementation.perform(_:asPartOf:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20E474FD8(a1, a3);
}

uint64_t sub_20E474738(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[12] = a3;
  v4[13] = a4;
  v4[10] = a1;
  v4[11] = a2;
  v5 = sub_20E4A4CB8();
  v4[14] = v5;
  v4[15] = *(_QWORD *)(v5 - 8);
  v4[16] = swift_task_alloc();
  v4[17] = sub_20E4A5DF8();
  v4[18] = sub_20E4A5DEC();
  v4[19] = sub_20E4A5DBC();
  v4[20] = v6;
  return swift_task_switch();
}

uint64_t sub_20E4747D4()
{
  uint64_t v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDC15A0]), sel_init);
  *(_QWORD *)(v0 + 168) = v1;
  objc_msgSend(v1, sel_setSensitive_, sub_20E4A58A0() & 1);
  v2 = sub_20E4A5DEC();
  *(_QWORD *)(v0 + 176) = v2;
  if (v2)
  {
    swift_getObjectType();
    sub_20E4A5DBC();
  }
  return swift_task_switch();
}

uint64_t sub_20E474884()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0[21];
  v2 = (void *)v0[12];
  v3 = v0[11];
  v0[7] = v0[16];
  v0[2] = v0;
  v0[3] = sub_20E474900;
  v4 = swift_continuation_init();
  sub_20E474A30(v4, v2, v3, v1);
  return swift_continuation_await();
}

uint64_t sub_20E474900()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = *(_QWORD **)v0;
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 184) = v2;
  if (v2)
  {
    swift_willThrow();
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v1[15] + 32))(v1[10], v1[16], v1[14]);
    swift_release();
  }
  return swift_task_switch();
}

uint64_t sub_20E47498C()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20E4749D8()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 168);
  swift_release();

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_20E474A30(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  _QWORD aBlock[6];

  v7 = sub_20E4A3344();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20E4A58AC();
  v11 = (void *)sub_20E4A3314();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a1;
  aBlock[4] = sub_20E475380;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_20E474C5C;
  aBlock[3] = &block_descriptor_4;
  v13 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(a2, sel_openURL_configuration_completionHandler_, v11, a4, v13);
  _Block_release(v13);

}

uint64_t sub_20E474B60(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  id v11;
  uint64_t v13;

  v5 = sub_20E4A4CB8();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_253ED2880);
    swift_allocError();
    *v10 = a2;
    v11 = a2;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    (*(void (**)(char *, _QWORD, uint64_t, double))(v6 + 104))(v9, *MEMORY[0x24BE5CBF0], v5, v7);
    (*(void (**)(_QWORD, char *, uint64_t))(v6 + 32))(*(_QWORD *)(*(_QWORD *)(a3 + 64) + 40), v9, v5);
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_20E474C5C(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v4)(uint64_t, void *);
  uint64_t v5;
  id v6;

  v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
    v5 = sub_20E4A5B64();
  else
    v5 = 0;
  swift_retain();
  v6 = a3;
  v4(v5, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_20E474CF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20E474FD8(a1, a3);
}

uint64_t sub_20E474CF8(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t);

  v6[2] = a6;
  v8 = sub_20E4A4CB8();
  v6[3] = v8;
  v6[4] = *(_QWORD *)(v8 - 8);
  v9 = swift_task_alloc();
  v6[5] = v9;
  v12 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v10 = (_QWORD *)swift_task_alloc();
  v6[6] = v10;
  *v10 = v6;
  v10[1] = sub_20E474D90;
  return v12(v9);
}

uint64_t sub_20E474D90()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20E474DF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 32);
  v1 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 24);
  sub_20E4A599C();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20E474E4C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 56);
  sub_20E4A5990();

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20E474E94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_20E4A5E58();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_20E4A5E4C();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_20E3F7244(a1);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_20E4A5DBC();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_20E474FD8(uint64_t a1, uint64_t a2)
{
  void **v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  void *v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A190F8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_20E4A58B8();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v12 = *v2;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v9 + 16))((char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8, v11);
  v13 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = *(_QWORD *)(a2 + 16);
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v14 + v13, (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  *(_QWORD *)(v14 + ((v10 + v13 + 7) & 0xFFFFFFFFFFFFFFF8)) = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A19610);
  v15 = v12;
  v16 = sub_20E4A59A8();
  v17 = sub_20E4A5E58();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v7, 1, 1, v17);
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = 0;
  v18[3] = 0;
  v18[4] = &unk_254A1BE68;
  v18[5] = v14;
  v18[6] = v16;
  swift_retain();
  sub_20E474E94((uint64_t)v7, (uint64_t)&unk_254A19618, (uint64_t)v18);
  swift_release();
  return v16;
}

uint64_t sub_20E475184()
{
  return MEMORY[0x24BE5E008];
}

uint64_t type metadata accessor for ExternalURLActionImplementation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ExternalURLActionImplementation);
}

uint64_t sub_20E47519C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_20E4A58B8();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_20E475210(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(sub_20E4A58B8() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = v1 + v6;
  v8 = *(_QWORD *)(v1 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_20E3B4E08;
  return sub_20E474738(a1, v7, v8, v4);
}

uint64_t sub_20E4752A8()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E4752DC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E475300(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_20E3B50B0;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_254A1BE78 + dword_254A1BE78))(a1, v4);
}

uint64_t sub_20E475370()
{
  return swift_deallocObject();
}

uint64_t sub_20E475380(uint64_t a1, void *a2)
{
  uint64_t v2;

  return sub_20E474B60(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

id sub_20E4754D4()
{
  void *v0;
  objc_class *ObjectType;
  void *v2;
  id v3;
  id v4;
  objc_super v6;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_defaultCenter);
  objc_msgSend(v3, sel_removeObserver_name_object_, v0, *MEMORY[0x24BEBE6F0], 0);

  v4 = objc_msgSend(v2, sel_defaultCenter);
  objc_msgSend(v4, sel_removeObserver_name_object_, v0, *MEMORY[0x24BEBE710], 0);

  v6.receiver = v0;
  v6.super_class = ObjectType;
  return objc_msgSendSuper2(&v6, sel_dealloc);
}

uint64_t sub_20E4755DC(uint64_t a1)
{
  return sub_20E47563C(a1, MEMORY[0x24BE5DD18]);
}

uint64_t sub_20E475630(uint64_t a1)
{
  return sub_20E47563C(a1, MEMORY[0x24BE5DD20]);
}

uint64_t sub_20E47563C(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t ObjectType;

  v3 = *(_QWORD *)(a1 + 8);
  ObjectType = swift_getObjectType();
  return a2(ObjectType, v3);
}

uint64_t type metadata accessor for _ScenePhaseChangeObserver()
{
  return objc_opt_self();
}

id sub_20E4756DC()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

uint64_t sub_20E4756FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_20E475714(a1, a2, a3, a4, MEMORY[0x24BE5D348]);
}

uint64_t sub_20E475708(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_20E475714(a1, a2, a3, a4, MEMORY[0x24BE5D358]);
}

uint64_t sub_20E475714(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD *))
{
  _QWORD v6[2];

  v6[0] = a1;
  v6[1] = a2;
  return a5(v6);
}

uint64_t View.dataObject<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v5 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DataObjectBox(0, v8, v8, v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, a3);
  v11 = swift_allocObject();
  (*(void (**)(uint64_t, char *))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v11 + 80) - 8) + 32))(v11 + *(_QWORD *)(*(_QWORD *)v11 + 88), v7);
  MEMORY[0x212BBDF90](&unk_20E4B00A8, v10);
  sub_20E4A42F8();
  return swift_release();
}

uint64_t type metadata accessor for DataObjectBox(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DataObjectBox);
}

uint64_t sub_20E47585C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  v4 = type metadata accessor for DataObjectBox(0, a1, a3, a4);
  MEMORY[0x212BBDF90](&unk_20E4B00A8, v4);
  return sub_20E4A3B00();
}

uint64_t sub_20E47589C(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v2 + 80) - 8) + 32))(v2 + *(_QWORD *)(*(_QWORD *)v2 + 88), a1);
  return v2;
}

uint64_t sub_20E4758EC()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_20E47595C()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 88));
  return swift_deallocClassInstance();
}

uint64_t sub_20E475994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[2];

  v4 = *(_QWORD *)(a1 + 16);
  type metadata accessor for DataObjectBox(255, *(_QWORD *)(a1 + 8), a3, a4);
  sub_20E4A60E0();
  v5 = sub_20E4A3FF8();
  v6 = sub_20E4A39D4();
  v8[0] = v4;
  v8[1] = MEMORY[0x212BBDF90](MEMORY[0x24BDF1028], v5);
  return MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v6, v8);
}

_QWORD *sub_20E475A24(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

_QWORD *sub_20E475A50(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  return a1;
}

_QWORD *sub_20E475A9C(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  return a1;
}

uint64_t sub_20E475AD8(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t sub_20E475B34(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

uint64_t type metadata accessor for DataObject(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DataObject);
}

uint64_t sub_20E475B90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t result;

  v7 = type metadata accessor for DataObjectBox(0, a2, a2, a3);
  MEMORY[0x212BBDF90](&unk_20E4B00A8, v7);
  if (a1)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(a4, a1 + *(_QWORD *)(*(_QWORD *)a1 + 88), a2);
  result = sub_20E4A3AE8();
  __break(1u);
  return result;
}

uint64_t sub_20E475C28()
{
  return sub_20E476150();
}

uint64_t EnvironmentValues.dispatchIntent.getter()
{
  sub_20E3F776C();
  return sub_20E4A3C08();
}

uint64_t IntentDispatchAction.callAsFunction<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;

  v5[9] = a3;
  v5[10] = a4;
  v5[7] = a1;
  v5[8] = a2;
  v5[11] = *v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A198A0);
  v6 = (_QWORD *)swift_task_alloc();
  v5[12] = v6;
  *v6 = v5;
  v6[1] = sub_20E475CEC;
  return sub_20E4A4F28();
}

uint64_t sub_20E475CEC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20E475D50()
{
  _QWORD *v0;
  _QWORD *v1;

  __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  v1 = (_QWORD *)swift_task_alloc();
  v0[14] = v1;
  *v1 = v0;
  v1[1] = sub_20E475DCC;
  return sub_20E4A506C();
}

uint64_t sub_20E475DCC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20E475E30()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20E475E64()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20E475E70()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t View.intentDispatcher(_:with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v6[2];

  swift_getKeyPath();
  sub_20E3C39FC(a1, (uint64_t)v6);
  v4 = swift_allocObject();
  sub_20E3B1AB4(v6, v4 + 16);
  *(_QWORD *)(v4 + 56) = a2;
  swift_retain();
  sub_20E4A4388();
  swift_release();
  return swift_release();
}

uint64_t sub_20E475F74(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  __int128 v14[2];

  v4 = sub_20E4A4A24();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20E3C39FC(a2, (uint64_t)v14);
  v8 = swift_allocObject();
  sub_20E3B1AB4(v14, v8 + 16);
  v9 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A198A0);
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = &unk_254A1BFD8;
  v10[3] = v8;
  v10[4] = v9;
  swift_retain();
  swift_retain();
  sub_20E4A49F4();
  v11 = sub_20E4A4F10();
  swift_release();
  swift_release();
  result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *a1 = v11;
  return result;
}

uint64_t sub_20E4760C0()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E4760EC(uint64_t *a1)
{
  uint64_t v1;

  return sub_20E475F74(a1, v1 + 16);
}

uint64_t sub_20E4760F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_20E476110()
{
  uint64_t v0;

  sub_20E3C39FC(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t View.intentDispatcher(from:)()
{
  return sub_20E476150();
}

uint64_t sub_20E476150()
{
  swift_getKeyPath();
  swift_retain();
  sub_20E4A4388();
  swift_release();
  return swift_release();
}

uint64_t sub_20E4761D4(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v4 = sub_20E4A4A24();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A198A0);
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = &unk_254A1BFC8;
  v9[3] = a2;
  v9[4] = v8;
  swift_retain_n();
  sub_20E4A49F4();
  v10 = sub_20E4A4F10();
  swift_release();
  result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *a1 = v10;
  return result;
}

uint64_t sub_20E4762D4(uint64_t *a1)
{
  uint64_t v1;

  return sub_20E4761D4(a1, v1);
}

uint64_t sub_20E4762DC()
{
  uint64_t v0;
  _QWORD *v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254A198A0);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_20E3B50B0;
  return sub_20E4A4F28();
}

uint64_t sub_20E476354(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v4 = sub_20E4A4A24();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A198A0);
  result = sub_20E4A4EBC();
  if ((result & 1) != 0)
  {
    v9 = *a1;
    v10 = (_QWORD *)swift_allocObject();
    v10[2] = &unk_254A1BFF0;
    v10[3] = a2;
    v10[4] = v9;
    swift_retain_n();
    sub_20E4A49F4();
    v11 = sub_20E4A4F10();
    swift_release();
    result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    *a1 = v11;
  }
  return result;
}

uint64_t View.intentDispatcher(with:implementations:)(uint64_t a1, void (*a2)(void))
{
  uint64_t v5[5];

  v5[3] = sub_20E4A5528();
  v5[4] = MEMORY[0x24BE5D8D0];
  __swift_allocate_boxed_opaque_existential_1Tm(v5);
  a2();
  View.intentDispatcher(_:with:)((uint64_t)v5, a1);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
}

ValueMetadata *type metadata accessor for IntentDispatchAction()
{
  return &type metadata for IntentDispatchAction;
}

uint64_t sub_20E476514(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19150);
  v2 = sub_20E4A39D4();
  v4[0] = v1;
  v4[1] = sub_20E476574();
  return MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v2, v4);
}

unint64_t sub_20E476574()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254A19178;
  if (!qword_254A19178)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19150);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDF1248], v1);
    atomic_store(result, (unint64_t *)&qword_254A19178);
  }
  return result;
}

ValueMetadata *type metadata accessor for IntentDispatchActionKey()
{
  return &type metadata for IntentDispatchActionKey;
}

uint64_t sub_20E4765D0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_20E4765E8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v1 + 24) = &type metadata for _NoIntentDispatcherSet;
  *(_QWORD *)(v1 + 32) = sub_20E476B64();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20E47662C(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t);

  v4[27] = a1;
  v4[28] = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1BFA0);
  v4[29] = swift_task_alloc();
  v7 = sub_20E4A5528();
  v4[30] = v7;
  v4[31] = *(_QWORD *)(v7 - 8);
  v4[32] = swift_task_alloc();
  v10 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v8 = (_QWORD *)swift_task_alloc();
  v4[33] = v8;
  *v8 = v4;
  v8[1] = sub_20E4766E8;
  return v10(a1);
}

uint64_t sub_20E4766E8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (!v0)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_20E476764()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  void (*v3)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v10;

  if (*(_QWORD *)(v0 + 224))
  {
    v1 = *(_QWORD *)(v0 + 248);
    sub_20E3C39FC(*(_QWORD *)(v0 + 216), v0 + 16);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254A198A0);
    v2 = swift_dynamicCast();
    v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 56);
    if (v2)
    {
      v5 = *(_QWORD *)(v0 + 248);
      v4 = *(_QWORD *)(v0 + 256);
      v7 = *(_QWORD *)(v0 + 232);
      v6 = *(_QWORD *)(v0 + 240);
      v3(v7, 0, 1, v6);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v4, v7, v6);
      swift_retain();
      v8 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 272) = v8;
      *v8 = v0;
      v8[1] = sub_20E47692C;
      return sub_20E4A4F28();
    }
    else
    {
      v10 = *(_QWORD *)(v0 + 232);
      v3(v10, 1, 1, *(_QWORD *)(v0 + 240));
      sub_20E39D1F8(v10, &qword_254A1BFA0);
      return sub_20E4A6290();
    }
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_20E47692C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 280) = v0;
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_20E47699C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *boxed_opaque_existential_1Tm;

  v1 = *(_QWORD *)(v0 + 248);
  v2 = *(_QWORD *)(v0 + 256);
  v3 = *(_QWORD *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 216);
  sub_20E3C39FC(v0 + 56, v0 + 136);
  v5 = MEMORY[0x24BE5D8D0];
  *(_QWORD *)(v0 + 120) = v3;
  *(_QWORD *)(v0 + 128) = v5;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)(v0 + 96));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v1 + 16))(boxed_opaque_existential_1Tm, v2, v3);
  sub_20E476B1C(v0 + 136, v0 + 176);
  sub_20E4A54F8();
  swift_release();
  sub_20E39D1F8(v0 + 136, &qword_254A1BFA8);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v3);
  __swift_destroy_boxed_opaque_existential_1(v4);
  sub_20E3B1AB4((__int128 *)(v0 + 96), v4);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20E476AAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v0 + 248);
  v1 = *(_QWORD *)(v0 + 256);
  v3 = *(_QWORD *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 216);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  __swift_destroy_boxed_opaque_existential_1(v4);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20E476B1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1BFA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_20E476B64()
{
  unint64_t result;

  result = qword_254A1BFB8;
  if (!qword_254A1BFB8)
  {
    result = MEMORY[0x212BBDF90](&unk_20E4B0198, &type metadata for _NoIntentDispatcherSet);
    atomic_store(result, &qword_254A1BFB8);
  }
  return result;
}

uint64_t sub_20E476BA8()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_20E3B50B0;
  return sub_20E4762DC();
}

uint64_t sub_20E476C00()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_20E476C24(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_20E3B50B0;
  v4[2] = a1;
  v4[3] = v1 + 16;
  return swift_task_switch();
}

uint64_t sub_20E476C8C(uint64_t *a1)
{
  uint64_t v1;

  return sub_20E476354(a1, v1);
}

uint64_t sub_20E476C94()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_20E3B50B0;
  return sub_20E4762DC();
}

ValueMetadata *type metadata accessor for _NoIntentDispatcherSet()
{
  return &type metadata for _NoIntentDispatcherSet;
}

uint64_t sub_20E476CFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[4] = a5;
  v6[5] = a6;
  v6[2] = a2;
  v6[3] = a4;
  return swift_task_switch();
}

uint64_t sub_20E476D18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 16);
  v3 = swift_task_alloc();
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 24);
  *(_QWORD *)(v3 + 32) = v1;
  *(_QWORD *)(v3 + 40) = v2;
  sub_20E4A5228();
  swift_task_dealloc();
  v4 = sub_20E4A545C();
  sub_20E477040();
  swift_allocError();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v4 - 8) + 104))(v5, *MEMORY[0x24BE5D800], v4);
  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20E476DE8()
{
  sub_20E4A61A0();
  sub_20E4A5C6C();
  swift_getDynamicType();
  sub_20E4A6458();
  sub_20E4A5C6C();
  swift_bridgeObjectRelease();
  sub_20E4A5C6C();
  swift_bridgeObjectRetain();
  sub_20E4A5C6C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_20E4A5C6C();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_20E476F08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v11;

  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v11;
  *v11 = v6;
  v11[1] = sub_20E3B4E08;
  v11[4] = a5;
  v11[5] = a6;
  v11[2] = a2;
  v11[3] = a4;
  return swift_task_switch();
}

uint64_t sub_20E476F80()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_20E3B50B0;
  return sub_20E4A5084();
}

uint64_t sub_20E47701C()
{
  return sub_20E4A5078();
}

uint64_t sub_20E477034()
{
  return sub_20E476DE8();
}

unint64_t sub_20E477040()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254A1C018[0];
  if (!qword_254A1C018[0])
  {
    v1 = sub_20E4A545C();
    result = MEMORY[0x212BBDF90](MEMORY[0x24BE5D810], v1);
    atomic_store(result, qword_254A1C018);
  }
  return result;
}

uint64_t sub_20E477088()
{
  uint64_t v1;

  sub_20E477EAC();
  sub_20E4A3C08();
  return v1;
}

double sub_20E4770C4@<D0>(uint64_t a1@<X8>)
{
  double result;
  __int128 v3;
  char v4;

  sub_20E477EAC();
  sub_20E4A3C08();
  result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_BYTE *)(a1 + 16) = v4;
  return result;
}

uint64_t sub_20E477118(uint64_t *a1)
{
  sub_20E3A3B08(*a1, a1[1]);
  sub_20E477EAC();
  return sub_20E4A3C14();
}

uint64_t View.onViewAppearanceChange(perform:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD v7[4];
  __int16 v8;

  v7[0] = a1;
  v7[1] = a2;
  v7[2] = swift_getKeyPath();
  v7[3] = 0;
  v8 = 0;
  MEMORY[0x212BBBA70](v7, a3, &type metadata for _OnViewAppearanceChangeViewModifier, a4);
  return swift_release();
}

double sub_20E4771FC@<D0>(uint64_t a1@<X8>)
{
  double result;
  __int128 v3;
  char v4;

  sub_20E477EAC();
  sub_20E4A3C08();
  result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_BYTE *)(a1 + 16) = v4;
  return result;
}

uint64_t View.viewAppearance(_:)()
{
  swift_getKeyPath();
  sub_20E4A4250();
  return swift_release();
}

uint64_t sub_20E4772D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253ED0C40);
  v2 = sub_20E4A39D4();
  v4[0] = v1;
  v4[1] = sub_20E39D010(&qword_253ED0C38, &qword_253ED0C40, MEMORY[0x24BDF1028]);
  return MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v2, v4);
}

uint64_t sub_20E477358(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  v2 = sub_20E4A39D4();
  v4[0] = v1;
  v4[1] = sub_20E3A5070();
  return MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v2, v4);
}

uint64_t destroy for _OnViewAppearanceChangeViewModifier(uint64_t a1)
{
  swift_release();
  return sub_20E3A3D14(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(unsigned __int8 *)(a1 + 32), *(_BYTE *)(a1 + 33));
}

uint64_t initializeWithCopy for _OnViewAppearanceChangeViewModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_BYTE *)(a2 + 33);
  v7 = *(unsigned __int8 *)(a2 + 32);
  swift_retain();
  sub_20E3A3AFC(v4, v5, v7, v6);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 33) = v6;
  return a1;
}

uint64_t assignWithCopy for _OnViewAppearanceChangeViewModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 33);
  v8 = *(unsigned __int8 *)(a2 + 32);
  sub_20E3A3AFC(v5, v6, v8, v7);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  v11 = *(_BYTE *)(a1 + 33);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v12 = *(unsigned __int8 *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 33) = v7;
  sub_20E3A3D14(v9, v10, v12, v11);
  return a1;
}

uint64_t assignWithTake for _OnViewAppearanceChangeViewModifier(uint64_t a1, uint64_t a2)
{
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  v4 = *(_BYTE *)(a2 + 32);
  v5 = *(_BYTE *)(a2 + 33);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_BYTE *)(a1 + 33);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v9 = *(unsigned __int8 *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v4;
  *(_BYTE *)(a1 + 33) = v5;
  sub_20E3A3D14(v6, v7, v9, v8);
  return a1;
}

ValueMetadata *type metadata accessor for _OnViewAppearanceChangeViewModifier()
{
  return &type metadata for _OnViewAppearanceChangeViewModifier;
}

uint64_t sub_20E477538()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E477548@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  char v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  char v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (**v45)();
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v59 = a1;
  v60 = a2;
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A88);
  MEMORY[0x24BDAC7A8](v52);
  v53 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0AD8);
  MEMORY[0x24BDAC7A8](v64);
  v54 = (uint64_t)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v55 = (uint64_t)&v52 - v6;
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0B30);
  MEMORY[0x24BDAC7A8](v61);
  v63 = (uint64_t)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A98);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0AE8);
  MEMORY[0x24BDAC7A8](v62);
  v57 = (uint64_t)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v58 = (uint64_t)&v52 - v13;
  v14 = *(_QWORD *)(v2 + 16);
  v15 = *(_QWORD *)(v2 + 24);
  v16 = *(unsigned __int8 *)(v2 + 32);
  v17 = *(unsigned __int8 *)(v2 + 33);
  sub_20E3A3AFC(v14, v15, v16, *(_BYTE *)(v2 + 33));
  v56 = sub_20E45C300(v14, v15, v16 | (v17 << 8));
  v19 = v18;
  v21 = v20;
  sub_20E3A3D14(v14, v15, v16, v17);
  if (v19)
  {
    v22 = v21 & 1;
    v55 = *(_QWORD *)(v2 + 8);
    v23 = swift_allocObject();
    v24 = *(_OWORD *)(v2 + 16);
    *(_OWORD *)(v23 + 16) = *(_OWORD *)v2;
    *(_OWORD *)(v23 + 32) = v24;
    *(_WORD *)(v23 + 48) = *(_WORD *)(v2 + 32);
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0BF0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v10, v59, v25);
    v26 = &v10[*(int *)(v8 + 36)];
    v27 = v19;
    v28 = v56;
    *(_QWORD *)v26 = v56;
    *((_QWORD *)v26 + 1) = v27;
    LODWORD(v59) = v17;
    v29 = v27;
    v26[16] = v22;
    v30 = v22;
    *((_QWORD *)v26 + 3) = sub_20E477E20;
    *((_QWORD *)v26 + 4) = v23;
    v26[40] = 1;
    v31 = swift_allocObject();
    *(_QWORD *)(v31 + 16) = v28;
    *(_QWORD *)(v31 + 24) = v29;
    *(_BYTE *)(v31 + 32) = v30;
    v32 = *(_OWORD *)(v2 + 16);
    *(_OWORD *)(v31 + 40) = *(_OWORD *)v2;
    *(_OWORD *)(v31 + 56) = v32;
    *(_WORD *)(v31 + 72) = *(_WORD *)(v2 + 32);
    v33 = (uint64_t)v10;
    v34 = (uint64_t)v10;
    v35 = v57;
    sub_20E3A5E20(v33, v57, &qword_253ED0A98);
    v36 = (_QWORD *)(v35 + *(int *)(v62 + 36));
    *v36 = 0;
    v36[1] = 0;
    v36[2] = sub_20E477E9C;
    v36[3] = v31;
    v37 = v59;
    sub_20E3A3AFC(v14, v15, v16, v59);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_20E3A3AFC(v14, v15, v16, v37);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_20E39D1F8(v34, &qword_253ED0A98);
    v38 = &qword_253ED0AE8;
    v39 = v58;
    sub_20E3BB440(v35, v58, &qword_253ED0AE8);
    sub_20E3A5E20(v39, v63, &qword_253ED0AE8);
    swift_storeEnumTagMultiPayload();
    sub_20E477CF8(&qword_253ED0AE0, &qword_253ED0AE8, (uint64_t (*)(void))sub_20E477C5C);
    sub_20E477CF8(&qword_253ED0AD0, &qword_253ED0AD8, (uint64_t (*)(void))sub_20E477D64);
    sub_20E4A3DF4();
    swift_release();
    swift_release();
    v40 = v39;
  }
  else
  {
    v41 = swift_allocObject();
    v42 = *(_OWORD *)(v2 + 16);
    *(_OWORD *)(v41 + 16) = *(_OWORD *)v2;
    *(_OWORD *)(v41 + 32) = v42;
    *(_WORD *)(v41 + 48) = *(_WORD *)(v2 + 32);
    v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0BF0);
    v44 = (uint64_t)v53;
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v53, v59, v43);
    v45 = (uint64_t (**)())(v44 + *(int *)(v52 + 36));
    *v45 = sub_20E477C10;
    v45[1] = (uint64_t (*)())v41;
    v45[2] = 0;
    v45[3] = 0;
    v46 = swift_allocObject();
    v47 = *(_OWORD *)(v2 + 16);
    *(_OWORD *)(v46 + 16) = *(_OWORD *)v2;
    *(_OWORD *)(v46 + 32) = v47;
    *(_WORD *)(v46 + 48) = *(_WORD *)(v2 + 32);
    v48 = v54;
    sub_20E3A5E20(v44, v54, &qword_253ED0A88);
    v49 = (_QWORD *)(v48 + *(int *)(v64 + 36));
    *v49 = 0;
    v49[1] = 0;
    v49[2] = sub_20E477C38;
    v49[3] = v46;
    sub_20E3A3AFC(v14, v15, v16, v17);
    swift_retain();
    sub_20E3A3AFC(v14, v15, v16, v17);
    swift_retain();
    sub_20E39D1F8(v44, &qword_253ED0A88);
    v38 = &qword_253ED0AD8;
    v50 = v55;
    sub_20E3BB440(v48, v55, &qword_253ED0AD8);
    sub_20E3A5E20(v50, v63, &qword_253ED0AD8);
    swift_storeEnumTagMultiPayload();
    sub_20E477CF8(&qword_253ED0AE0, &qword_253ED0AE8, (uint64_t (*)(void))sub_20E477C5C);
    sub_20E477CF8(&qword_253ED0AD0, &qword_253ED0AD8, (uint64_t (*)(void))sub_20E477D64);
    sub_20E4A3DF4();
    v40 = v50;
  }
  return sub_20E39D1F8(v40, v38);
}

uint64_t sub_20E477B34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (**a4)(_QWORD))
{
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  sub_20E3A5200();
  if ((sub_20E4A6098() & 1) != 0 || (sub_20E4A608C() & 1) != 0 || (result = sub_20E4A60A4(), (result & 1) != 0))
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18408);
    result = (uint64_t)MEMORY[0x212BBBCE0](&v7, v6);
    if (v7 == 1)
      return (*a4)(0);
  }
  return result;
}

uint64_t sub_20E477BD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20E477548(a1, a2);
}

uint64_t sub_20E477C10()
{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t))(v0 + 16))(1);
}

uint64_t sub_20E477C38()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 16))(0);
}

unint64_t sub_20E477C5C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_253ED0A90;
  if (!qword_253ED0A90)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253ED0A98);
    v2[0] = sub_20E39D010(&qword_253ED0BE8, &qword_253ED0BF0, MEMORY[0x24BDEFB78]);
    v2[1] = sub_20E39D010(&qword_253ED08F0, &qword_253ED08F8, (uint64_t)&unk_20E4A9D08);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_253ED0A90);
  }
  return result;
}

uint64_t sub_20E477CF8(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7[0] = a3();
    v7[1] = MEMORY[0x24BDF0910];
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_20E477D64()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_253ED0A80;
  if (!qword_253ED0A80)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253ED0A88);
    v2[0] = sub_20E39D010(&qword_253ED0BE8, &qword_253ED0BF0, MEMORY[0x24BDEFB78]);
    v2[1] = MEMORY[0x24BDF0910];
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_253ED0A80);
  }
  return result;
}

uint64_t objectdestroyTm_7()
{
  uint64_t v0;

  swift_release();
  sub_20E3A3D14(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(unsigned __int8 *)(v0 + 48), *(_BYTE *)(v0 + 49));
  return swift_deallocObject();
}

unsigned __int8 *sub_20E477E20(unsigned __int8 *result, _BYTE *a2)
{
  uint64_t v2;
  int v3;

  v3 = *result;
  if ((v3 & 1) != 0 || *a2)
    return (unsigned __int8 *)(*(uint64_t (**)(_QWORD))(v2 + 16))(*a2 | v3 ^ 1u);
  return result;
}

uint64_t sub_20E477E58()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  sub_20E3A3D14(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(unsigned __int8 *)(v0 + 72), *(_BYTE *)(v0 + 73));
  return swift_deallocObject();
}

uint64_t sub_20E477E9C()
{
  uint64_t v0;

  return sub_20E477B34(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(unsigned __int8 *)(v0 + 32), (uint64_t (**)(_QWORD))(v0 + 40));
}

unint64_t sub_20E477EAC()
{
  unint64_t result;

  result = qword_253ED0698[0];
  if (!qword_253ED0698[0])
  {
    result = MEMORY[0x212BBDF90](&unk_20E4B0294, &type metadata for _IsViewAppearedKey);
    atomic_store(result, qword_253ED0698);
  }
  return result;
}

ValueMetadata *type metadata accessor for _IsViewAppearedKey()
{
  return &type metadata for _IsViewAppearedKey;
}

unint64_t sub_20E477F04()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_253ED0B58;
  if (!qword_253ED0B58)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253ED0B60);
    v2[0] = sub_20E477CF8(&qword_253ED0AE0, &qword_253ED0AE8, (uint64_t (*)(void))sub_20E477C5C);
    v2[1] = sub_20E477CF8(&qword_253ED0AD0, &qword_253ED0AD8, (uint64_t (*)(void))sub_20E477D64);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_253ED0B58);
  }
  return result;
}

uint64_t sub_20E477FA0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;

  v6 = *a3;
  v7 = *((_BYTE *)a3 + 8);
  v8 = a3[2];
  v9 = *((_BYTE *)a3 + 24);
  *(_QWORD *)a6 = result;
  *(_QWORD *)(a6 + 8) = a2;
  *(_QWORD *)(a6 + 16) = v6;
  *(_BYTE *)(a6 + 24) = v7;
  *(_QWORD *)(a6 + 32) = v8;
  *(_BYTE *)(a6 + 40) = v9;
  *(_QWORD *)(a6 + 48) = a4;
  *(_QWORD *)(a6 + 56) = a5;
  return result;
}

uint64_t sub_20E477FCC()
{
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_20E477FF4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  v4 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v4;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_20E478040(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v5;
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_20E4780D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  return a1;
}

uint64_t sub_20E47813C(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_20E478184(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for _ResolvedHorizontalShelfLayout(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _ResolvedHorizontalShelfLayout);
}

uint64_t sub_20E4781E0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E478214@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t OpaqueTypeConformance2;
  _QWORD *v29;
  void (*v30)(char *, uint64_t);
  _QWORD v32[2];
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  char v57;

  v46 = a2;
  v4 = sub_20E4A3E78();
  MEMORY[0x24BDAC7A8](v4);
  v45 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_20E4A4838();
  v43 = *(_QWORD *)(v6 - 8);
  v44 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (_OWORD *)((char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_20E4A4844();
  MEMORY[0x24BDAC7A8](v9);
  v39 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19AF0);
  v41 = *(_QWORD *)(a1 + 16);
  v12 = v41;
  v13 = sub_20E478840();
  *(_QWORD *)&v53 = v11;
  *((_QWORD *)&v53 + 1) = MEMORY[0x24BEE23D0];
  *(_QWORD *)&v54 = v12;
  *((_QWORD *)&v54 + 1) = v13;
  *(_QWORD *)&v55 = MEMORY[0x24BEE23D8];
  v35 = sub_20E4A47C0();
  v38 = *(_QWORD *)(a1 + 24);
  v52 = v38;
  v34 = MEMORY[0x212BBDF90](MEMORY[0x24BDF4A08], v35, &v52);
  v14 = sub_20E4A48F8();
  v42 = *(_QWORD *)(v14 - 8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v37 = (char *)v32 - v16;
  v36 = MEMORY[0x212BBDF90](MEMORY[0x24BDF5198], v14, v15);
  *(_QWORD *)&v53 = v14;
  *((_QWORD *)&v53 + 1) = v36;
  v17 = MEMORY[0x212BBDF30](0, &v53, MEMORY[0x24BDF2D58], 0);
  v40 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v33 = (_QWORD *)((char *)v32 - v21);
  v22 = v2[1];
  v53 = *v2;
  v54 = v22;
  v23 = v2[3];
  v55 = v2[2];
  v56 = v23;
  v32[1] = v55;
  v57 = BYTE8(v55);
  sub_20E4A48B0();
  *v8 = xmmword_20E4A9FA0;
  (*(void (**)(_OWORD *, _QWORD, uint64_t))(v43 + 104))(v8, *MEMORY[0x24BDF4D40], v44);
  v24 = (uint64_t)v39;
  sub_20E4A4850();
  if (*((uint64_t *)&v53 + 1) >= *(_QWORD *)(v53 + 16))
    v25 = *(_QWORD *)(v53 + 16);
  else
    v25 = *((_QWORD *)&v53 + 1);
  sub_20E3EC54C(v24, v25);
  sub_20E4A3C5C();
  v47 = v41;
  v48 = v38;
  v49 = &v53;
  sub_20E3ECA90();
  v26 = v37;
  sub_20E4A48EC();
  v27 = v36;
  sub_20E4A4328();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v26, v14);
  v50 = v14;
  v51 = v27;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v29 = v33;
  sub_20E39D614(v33, v19, v17, OpaqueTypeConformance2);
  v30 = *(void (**)(char *, uint64_t))(v40 + 8);
  v30(v19, v17);
  sub_20E39D618((uint64_t)v29, v17, v46);
  return ((uint64_t (*)(_QWORD *, uint64_t))v30)(v29, v17);
}

uint64_t sub_20E478644@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  _QWORD *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;

  v23 = a4;
  v21 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19AF0);
  v20 = sub_20E478840();
  v25 = v21;
  v26 = MEMORY[0x24BEE23D0];
  v27 = a2;
  v28 = v20;
  v29 = MEMORY[0x24BEE23D8];
  v7 = sub_20E4A47C0();
  v22 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (unint64_t *)((char *)&v20 - v11);
  v25 = *(_QWORD *)a1;
  swift_getKeyPath();
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a2;
  *(_QWORD *)(v13 + 24) = a3;
  v14 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v13 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v13 + 48) = v14;
  v15 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v13 + 64) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v13 + 80) = v15;
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a2;
  v16[3] = a3;
  v16[4] = sub_20E3ED74C;
  v16[5] = v13;
  swift_bridgeObjectRetain();
  sub_20E4788F8(a1);
  sub_20E4A47A8();
  v24 = a3;
  v17 = MEMORY[0x212BBDF90](MEMORY[0x24BDF4A08], v7, &v24);
  sub_20E39D614(v12, v9, v7, v17);
  v18 = *(void (**)(char *, uint64_t))(v22 + 8);
  v18(v9, v7);
  sub_20E39D618((uint64_t)v12, v7, v23);
  return ((uint64_t (*)(_QWORD *, uint64_t))v18)(v12, v7);
}

unint64_t sub_20E478840()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254A19AF8;
  if (!qword_254A19AF8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19AF0);
    result = MEMORY[0x212BBDF90](&protocol conformance descriptor for IndexedRandomAccessCollection<A>, v1);
    atomic_store(result, (unint64_t *)&qword_254A19AF8);
  }
  return result;
}

uint64_t sub_20E47888C@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_20E478644(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_20E47889C()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E4788C8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E4788EC(_QWORD *a1)
{
  uint64_t v1;

  return sub_20E3ECA64(a1, *(uint64_t (**)(_QWORD, _QWORD *))(v1 + 32));
}

uint64_t sub_20E4788F8(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_20E47892C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  v1 = *a1;
  v2 = a1[1];
  v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19AF0);
  v4 = sub_20E478840();
  v10 = v3;
  v11 = MEMORY[0x24BEE23D0];
  v12 = v1;
  v13 = v4;
  v14 = MEMORY[0x24BEE23D8];
  v5 = sub_20E4A47C0();
  v9 = v2;
  MEMORY[0x212BBDF90](MEMORY[0x24BDF4A08], v5, &v9);
  v6 = sub_20E4A48F8();
  v7 = MEMORY[0x212BBDF90](MEMORY[0x24BDF5198], v6);
  v10 = v6;
  v11 = v7;
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E4789EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(_QWORD *)(a3 + *(int *)(sub_20E4A4670() + 28)) = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1, a2);
}

uint64_t _TaskViewDefaultFailed.init(error:retry:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t _TaskViewPlaceholderWorking.init(placeholder:content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v14;
  uint64_t result;
  _QWORD *v16;

  v14 = sub_20E4A60E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a7, a1, v14);
  result = type metadata accessor for _TaskViewPlaceholderWorking(0, a4, a5, a6);
  v16 = (_QWORD *)(a7 + *(int *)(result + 44));
  *v16 = a2;
  v16[1] = a3;
  return result;
}

uint64_t type metadata accessor for _TaskViewPlaceholderWorking(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _TaskViewPlaceholderWorking);
}

void TaskView.init(_:task:working:failed:content:)()
{
  uint64_t v0;

  swift_getTupleTypeMetadata2();
  sub_20E4A596C();
  v0 = sub_20E4A60E0();
  MEMORY[0x24BDAC7A8](v0);
  type metadata accessor for TaskView();
}

uint64_t sub_20E478BCC(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t result;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;

  v9 = v3 + a1[19];
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56);
  v10(v1, 1, 1, v2);
  sub_20E478CE0(v1);
  *(_OWORD *)v3 = *(_OWORD *)(v7 - 256);
  *(_QWORD *)(v3 + 16) = v5;
  v10(v1, 1, 1, v2);
  v11 = sub_20E4A4670();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v9, v11);
  *(_QWORD *)(v9 + *(int *)(v11 + 28)) = 0;
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v9, v1, v6);
  v13 = (_QWORD *)(v3 + a1[20]);
  v14 = *(_QWORD *)(v7 - 200);
  *v13 = *(_QWORD *)(v7 - 208);
  v13[1] = v14;
  v15 = (_QWORD *)(v3 + a1[21]);
  v16 = *(_QWORD *)(v7 - 176);
  *v15 = *(_QWORD *)(v7 - 184);
  v15[1] = v16;
  v17 = (_QWORD *)(v3 + a1[22]);
  v18 = *(_QWORD *)(v7 - 160);
  *v17 = *(_QWORD *)(v7 - 168);
  v17[1] = v18;
  v19 = (_QWORD *)(v3 + a1[23]);
  v20 = *(_QWORD *)(v7 - 192);
  *v19 = *(_QWORD *)(v7 - 152);
  v19[1] = v20;
  return result;
}

void type metadata accessor for TaskView()
{
  JUMPOUT(0x212BBDEE8);
}

uint64_t sub_20E478CE0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  uint64_t v7;

  swift_getTupleTypeMetadata2();
  sub_20E4A596C();
  v2 = sub_20E4A60E0();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16))((char *)&v7 - v5, a1, v2, v4);
  sub_20E4A4640();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

uint64_t sub_20E478DA8(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3;

  swift_getTupleTypeMetadata2();
  sub_20E4A596C();
  sub_20E4A60E0();
  v3 = sub_20E4A4670();
  return a2(v3);
}

uint64_t TaskView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 *v2;
  __int128 *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  void (*v56)(char *, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  __int128 *v89;
  _QWORD v90[2];
  uint64_t v91;
  _QWORD v92[2];
  uint64_t v93;
  _QWORD v94[2];
  _QWORD v95[2];
  __int128 v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;

  v3 = v2;
  v79 = a2;
  v78 = sub_20E4A5E58();
  v77 = *(_QWORD *)(v78 - 8);
  MEMORY[0x24BDAC7A8](v78);
  v76 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = *(_QWORD *)(a1 + 16);
  swift_getTupleTypeMetadata2();
  sub_20E4A596C();
  sub_20E4A60E0();
  v71 = sub_20E4A4778();
  v68 = *(_QWORD *)(v71 - 8);
  v70 = *(_QWORD *)(v68 + 64);
  MEMORY[0x24BDAC7A8](v71);
  v69 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v80 = (char *)&v58 - v8;
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = sub_20E4A4BBC();
  v12 = *(_QWORD *)(a1 + 48);
  v99 = MEMORY[0x24BEE4578];
  v13 = MEMORY[0x212BBDF90](MEMORY[0x24BE5CAA8], v11, &v99);
  *(_QWORD *)&v96 = v9;
  *((_QWORD *)&v96 + 1) = v11;
  v64 = v9;
  v97 = v12;
  v98 = v13;
  v61 = v12;
  v14 = sub_20E4A46DC();
  v63 = v10;
  v59 = sub_20E4A3E00();
  v62 = *(_QWORD *)(a1 + 40);
  v15 = v62;
  v16 = sub_20E4A3E00();
  v17 = sub_20E4A4574();
  v74 = *(_QWORD *)(v17 - 8);
  v66 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v65 = (char *)&v58 - v18;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1C0A0);
  v73 = sub_20E4A39D4();
  v75 = *(_QWORD *)(v73 - 8);
  MEMORY[0x24BDAC7A8](v73);
  v67 = (char *)&v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v72 = (uint64_t *)((char *)&v58 - v22);
  v82 = v81;
  v83 = v9;
  v84 = v10;
  v85 = v15;
  v24 = *(_QWORD *)(a1 + 56);
  v23 = *(_QWORD *)(a1 + 64);
  v60 = v24;
  v86 = v12;
  v87 = v24;
  v88 = v23;
  v89 = v3;
  v25 = MEMORY[0x212BBDF90](MEMORY[0x24BDF44C8], v14, v21);
  v95[0] = v24;
  v95[1] = v25;
  v26 = MEMORY[0x24BDEF3E0];
  v94[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v59, v95);
  v94[1] = v23;
  v27 = MEMORY[0x212BBDF90](v26, v16, v94);
  sub_20E4A4568();
  v28 = *((_QWORD *)v3 + 2);
  v96 = *v3;
  v97 = v28;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19D38);
  MEMORY[0x212BBBCE0](&v93, v29);
  v92[1] = v93;
  v30 = v80;
  sub_20E478DA8(a1, (uint64_t (*)(uint64_t))MEMORY[0x24BDF42B0]);
  v31 = (uint64_t *)((char *)v3 + *(int *)(a1 + 80));
  v32 = v31[1];
  v59 = *v31;
  v33 = *((_QWORD *)v3 + 2);
  v96 = *v3;
  v97 = v33;
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19D38);
  MEMORY[0x212BBBCE0](v92, v34);
  v35 = v92[0];
  v36 = v68;
  v37 = v69;
  v38 = v30;
  v39 = v71;
  (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v69, v38, v71);
  v40 = (*(unsigned __int8 *)(v36 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
  v41 = (v70 + v40 + 7) & 0xFFFFFFFFFFFFFFF8;
  v42 = (char *)swift_allocObject();
  v43 = v64;
  *((_QWORD *)v42 + 2) = v81;
  *((_QWORD *)v42 + 3) = v43;
  v44 = v62;
  *((_QWORD *)v42 + 4) = v63;
  *((_QWORD *)v42 + 5) = v44;
  v45 = v60;
  *((_QWORD *)v42 + 6) = v61;
  *((_QWORD *)v42 + 7) = v45;
  *((_QWORD *)v42 + 8) = v23;
  *((_QWORD *)v42 + 9) = v35;
  (*(void (**)(char *, char *, uint64_t))(v36 + 32))(&v42[v40], v37, v39);
  v46 = (uint64_t *)&v42[v41];
  *v46 = v59;
  v46[1] = v32;
  v91 = v27;
  swift_retain();
  v47 = v66;
  v48 = MEMORY[0x212BBDF90](MEMORY[0x24BDF3F50], v66, &v91);
  sub_20E47A578();
  v49 = v76;
  sub_20E4A5E10();
  v50 = v67;
  v51 = v65;
  sub_20E4A4400();
  swift_release();
  (*(void (**)(char *, uint64_t))(v77 + 8))(v49, v78);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v80, v39);
  (*(void (**)(char *, uint64_t))(v74 + 8))(v51, v47);
  v52 = sub_20E39D010(&qword_254A1C0C0, &qword_254A1C0A0, MEMORY[0x24BDEECB8]);
  v90[0] = v48;
  v90[1] = v52;
  v53 = v73;
  v54 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v73, v90);
  v55 = v72;
  sub_20E39D614(v72, v50, v53, v54);
  v56 = *(void (**)(char *, uint64_t))(v75 + 8);
  v56(v50, v53);
  sub_20E39D618((uint64_t)v55, v53, v79);
  return ((uint64_t (*)(_QWORD *, uint64_t))v56)(v55, v53);
}

void sub_20E479458()
{
  type metadata accessor for TaskView();
}

uint64_t sub_20E4794BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void **v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _QWORD *v41;
  uint64_t v42;
  void (*v43)(_BYTE *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  _QWORD *v60;
  void (*v61)(uint64_t, uint64_t);
  uint64_t v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  void (*v70)(uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _BYTE v77[96];

  v9 = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v7 - 392) = v9;
  *(_QWORD *)(v7 - 424) = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v7 - 408) = &v77[-v10];
  *(_QWORD *)(v7 - 376) = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v11);
  *(_QWORD *)(v7 - 360) = &v77[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v13);
  *(_QWORD *)(v7 - 368) = &v77[-v14];
  *(_QWORD *)(v7 - 416) = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v15);
  *(_QWORD *)(v7 - 432) = &v77[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = sub_20E4A4BBC();
  *(_QWORD *)(v7 - 152) = MEMORY[0x24BEE4578];
  v18 = MEMORY[0x212BBDF90](MEMORY[0x24BE5CAA8], v17, v7 - 152);
  *(_QWORD *)(v7 - 320) = v1;
  *(_QWORD *)(v7 - 144) = v1;
  *(_QWORD *)(v7 - 136) = v17;
  *(_QWORD *)(v7 - 456) = v17;
  *(_QWORD *)(v7 - 328) = v3;
  *(_QWORD *)(v7 - 128) = v3;
  *(_QWORD *)(v7 - 120) = v18;
  *(_QWORD *)(v7 - 464) = v18;
  v19 = sub_20E4A46DC();
  *(_QWORD *)(v7 - 448) = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  *(_QWORD *)(v7 - 440) = &v77[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v21);
  *(_QWORD *)(v7 - 384) = &v77[-v22];
  *(_QWORD *)(v7 - 336) = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v23);
  *(_QWORD *)(v7 - 400) = &v77[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_QWORD *)(v7 - 296) = v25;
  v26 = sub_20E4A3E00();
  *(_QWORD *)(v7 - 312) = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v28 = &v77[-v27];
  *(_QWORD *)(v7 - 352) = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v31 = &v77[-((v30 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v32);
  *(_QWORD *)(v7 - 344) = &v77[-v33];
  *(_QWORD *)(v7 - 304) = v2;
  *(_QWORD *)(v7 - 472) = swift_getTupleTypeMetadata2();
  v34 = sub_20E4A596C();
  v35 = sub_20E4A60E0();
  MEMORY[0x24BDAC7A8](v35);
  v37 = (void **)&v77[-v36];
  *(_QWORD *)(v7 - 288) = v5;
  v38 = sub_20E4A3E00();
  *(_QWORD *)(v7 - 264) = v38;
  *(_QWORD *)(v7 - 272) = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v40 = &v77[-v39];
  sub_20E478DA8(a1, (uint64_t (*)(uint64_t))MEMORY[0x24BDF4290]);
  if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 48))(v37, 1, v34) == 1)
  {
    (*(void (**)(void))(v4 + *(int *)(a1 + 84)))();
    v41 = *(_QWORD **)(v7 - 344);
    v42 = *(_QWORD *)(v7 - 280);
    sub_20E39D614(v41, v31, v6, v42);
    v43 = *(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v7 - 352) + 8);
    v43(v31, v6);
    sub_20E39D618((uint64_t)v41, v6, (uint64_t)v31);
    v44 = *(_QWORD *)(v7 - 296);
    v45 = MEMORY[0x212BBDF90](MEMORY[0x24BDF44C8], v44);
    sub_20E3DC6B0((uint64_t)v31, v6);
    v43(v31, v6);
    *(_QWORD *)(v7 - 240) = v42;
    *(_QWORD *)(v7 - 232) = v45;
    MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v26, v7 - 240);
    v46 = *(_QWORD *)(v7 - 256);
    sub_20E3DC6B0((uint64_t)v28, v26);
    (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v7 - 312) + 8))(v28, v26);
    v43(v41, v6);
    v47 = v46;
    v48 = v44;
  }
  else
  {
    *(_QWORD *)(v7 - 480) = v4;
    *(_QWORD *)(v7 - 488) = v28;
    v49 = a1;
    *(_QWORD *)(v7 - 352) = v40;
    *(_QWORD *)(v7 - 344) = v26;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v50 = *v37;
      v51 = a1;
      *(_QWORD *)(v7 - 312) = *(_QWORD *)(*(_QWORD *)(v7 - 480) + *(int *)(a1 + 88));
      v52 = *(_QWORD *)(v7 - 392);
      v53 = *(_QWORD *)(v7 - 408);
      (*(void (**)(uint64_t))(v52 + 16))(v53);
      v54 = (*(unsigned __int8 *)(v52 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
      v55 = (char *)swift_allocObject();
      v56 = *(_QWORD *)(v7 - 320);
      *((_QWORD *)v55 + 2) = *(_QWORD *)(v7 - 304);
      *((_QWORD *)v55 + 3) = v56;
      v57 = *(_QWORD *)(v7 - 288);
      *((_QWORD *)v55 + 4) = v6;
      *((_QWORD *)v55 + 5) = v57;
      v42 = *(_QWORD *)(v7 - 280);
      *((_QWORD *)v55 + 6) = *(_QWORD *)(v7 - 328);
      *((_QWORD *)v55 + 7) = v42;
      v47 = *(_QWORD *)(v7 - 256);
      *((_QWORD *)v55 + 8) = v47;
      (*(void (**)(char *, uint64_t, uint64_t))(v52 + 32))(&v55[v54], v53, v51);
      v58 = *(_QWORD *)(v7 - 360);
      v59 = v50;
      (*(void (**)(void *, void (*)(), char *))(v7 - 312))(v50, sub_20E47D9E4, v55);
      swift_release();
      v60 = *(_QWORD **)(v7 - 368);
      sub_20E39D614(v60, v58, v57, v47);
      v61 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 376) + 8);
      v61(v58, v57);
      sub_20E39D618((uint64_t)v60, v57, v58);
      v48 = *(_QWORD *)(v7 - 296);
      v62 = MEMORY[0x212BBDF90](MEMORY[0x24BDF44C8], v48);
      *(_QWORD *)(v7 - 168) = v42;
      *(_QWORD *)(v7 - 160) = v62;
      v26 = *(_QWORD *)(v7 - 344);
      MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v26, v7 - 168);
      v40 = *(_BYTE **)(v7 - 352);
      sub_20E39CBE0(v58, v26, v57);

      v61(v58, v57);
      v61((uint64_t)v60, v57);
    }
    else
    {
      v63 = *v37;
      v64 = *(_QWORD *)(v7 - 400);
      (*(void (**)(uint64_t, char *, _QWORD))(*(_QWORD *)(v7 - 336) + 32))(v64, (char *)v37 + *(int *)(*(_QWORD *)(v7 - 472) + 48), *(_QWORD *)(v7 - 304));
      v65 = *(_QWORD *)(v7 - 432);
      (*(void (**)(uint64_t))(*(_QWORD *)(v7 - 480) + *(int *)(v49 + 92)))(v64);
      *(_QWORD *)(v7 - 208) = v63;
      sub_20E4A4BC8();
      *(_QWORD *)(v7 - 208) = *(_QWORD *)(v7 - 144);
      v66 = *(_QWORD *)(v7 - 440);
      v67 = *(_QWORD *)(v7 - 320);
      sub_20E4A43DC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 416) + 8))(v65, v67);
      v48 = *(_QWORD *)(v7 - 296);
      v68 = MEMORY[0x212BBDF90](MEMORY[0x24BDF44C8], v48);
      v69 = *(_QWORD **)(v7 - 384);
      sub_20E39D614(v69, v66, v48, v68);
      v70 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 448) + 8);
      v70(v66, v48);
      sub_20E39D618((uint64_t)v69, v48, v66);
      v71 = *(_QWORD *)(v7 - 488);
      v42 = *(_QWORD *)(v7 - 280);
      sub_20E39CBE0(v66, v6, v48);
      v70(v66, v48);
      *(_QWORD *)(v7 - 224) = v42;
      *(_QWORD *)(v7 - 216) = v68;
      v26 = *(_QWORD *)(v7 - 344);
      MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v26, v7 - 224);
      v40 = *(_BYTE **)(v7 - 352);
      v47 = *(_QWORD *)(v7 - 256);
      sub_20E3DC6B0(v71, v26);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 312) + 8))(v71, v26);
      v70((uint64_t)v69, v48);
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v7 - 336) + 8))(v64, *(_QWORD *)(v7 - 304));
    }
  }
  v72 = MEMORY[0x212BBDF90](MEMORY[0x24BDF44C8], v48);
  *(_QWORD *)(v7 - 184) = v42;
  *(_QWORD *)(v7 - 176) = v72;
  v73 = MEMORY[0x24BDEF3E0];
  *(_QWORD *)(v7 - 200) = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v26, v7 - 184);
  *(_QWORD *)(v7 - 192) = v47;
  v74 = v73;
  v75 = *(_QWORD *)(v7 - 264);
  MEMORY[0x212BBDF90](v74, v75, v7 - 200);
  sub_20E39D618((uint64_t)v40, v75, *(_QWORD *)(v7 - 248));
  return (*(uint64_t (**)(_BYTE *, uint64_t))(*(_QWORD *)(v7 - 272) + 8))(v40, v75);
}

void sub_20E479DE0()
{
  sub_20E479458();
}

void sub_20E479DF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v19 = a8;
  v20 = a1;
  swift_getTupleTypeMetadata2();
  v14 = sub_20E4A596C();
  v15 = sub_20E4A60E0();
  v16 = MEMORY[0x24BDAC7A8](v15);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(*(_QWORD *)(v14 - 8) + 56))((char *)&v18 - v17, 1, 1, v14, v16);
  v21 = a2;
  v22 = a3;
  v23 = a4;
  v24 = a5;
  v25 = a6;
  v26 = a7;
  v27 = v19;
  type metadata accessor for TaskView();
}

uint64_t sub_20E479ED0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_20E47DA78(v0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
}

uint64_t sub_20E479F10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  v5[7] = swift_getTupleTypeMetadata2();
  v5[8] = sub_20E4A596C();
  v6 = sub_20E4A60E0();
  v5[9] = v6;
  v5[10] = *(_QWORD *)(v6 - 8);
  v5[11] = swift_task_alloc();
  v5[12] = swift_task_alloc();
  v5[13] = swift_task_alloc();
  sub_20E4A5DF8();
  v5[14] = sub_20E4A5DEC();
  v5[15] = sub_20E4A5DBC();
  v5[16] = v7;
  return swift_task_switch();
}

uint64_t sub_20E47A000()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v12;
  int *v13;
  char *v14;
  _QWORD *v15;
  uint64_t (*v16)(char *);

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 64);
  *(_QWORD *)(v0 + 136) = sub_20E4A4778();
  MEMORY[0x212BBBCE0]();
  v3 = *(_QWORD *)(v2 - 8);
  *(_QWORD *)(v0 + 144) = v3;
  v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2);
  v5 = *(uint64_t **)(v0 + 104);
  if (v4 == 1)
  {
    v6 = *(_QWORD *)(v0 + 72);
    v7 = *(_QWORD *)(v0 + 80);
LABEL_8:
    (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v5, v6);
    goto LABEL_9;
  }
  v8 = *(_QWORD *)(v0 + 64);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v9 = *v5;
    v5 = (uint64_t *)((char *)v5 + *(int *)(*(_QWORD *)(v0 + 56) + 48));
    if (v9 == *(_QWORD *)(v0 + 16))
    {
      v10 = *(_QWORD *)(v0 + 48);
      swift_release();
      (*(void (**)(uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v5, v10);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    v6 = *(_QWORD *)(v0 + 48);
    v7 = *(_QWORD *)(v6 - 8);
    goto LABEL_8;
  }
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v8);
LABEL_9:
  v12 = *(_QWORD **)(v0 + 96);
  v13 = *(int **)(v0 + 32);
  v14 = (char *)v12 + *(int *)(*(_QWORD *)(v0 + 56) + 48);
  *v12 = *(_QWORD *)(v0 + 16);
  v16 = (uint64_t (*)(char *))((char *)v13 + *v13);
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 152) = v15;
  *v15 = v0;
  v15[1] = sub_20E47A184;
  return v16(v14);
}

uint64_t sub_20E47A184()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20E47A1E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 64);
  swift_release();
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v1 + 56))(v2, 0, 1, v3);
  sub_20E4A4730();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20E47A284()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD **)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 64);
  swift_release();
  *v3 = v1;
  swift_storeEnumTagMultiPayload();
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v2 + 56))(v3, 0, 1, v4);
  sub_20E4A4730();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20E47A32C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t TupleTypeMetadata2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id *v6;

  v1 = *(_QWORD *)(v0 + 16);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v3 = sub_20E4A596C();
  sub_20E4A60E0();
  v4 = sub_20E4A4778();
  v5 = v0
     + ((*(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80));
  swift_release();
  swift_release();
  v6 = (id *)(v5 + *(int *)(v4 + 32));
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(v6, 1, v3))
  {
    if (swift_getEnumCaseMultiPayload() == 1)

    else
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v1 - 8) + 8))((char *)v6 + *(int *)(TupleTypeMetadata2 + 48), v1);
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E47A464()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v2 = *(_QWORD *)(v0 + 16);
  swift_getTupleTypeMetadata2();
  sub_20E4A596C();
  sub_20E4A60E0();
  v3 = *(_QWORD *)(sub_20E4A4778() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v0 + 72);
  v6 = v0 + v4;
  v7 = (uint64_t *)(v0 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  v8 = *v7;
  v9 = v7[1];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v10;
  *v10 = v1;
  v10[1] = sub_20E3B4E08;
  return sub_20E479F10(v5, v6, v8, v9, v2);
}

unint64_t sub_20E47A578()
{
  unint64_t result;

  result = qword_254A1C0B8;
  if (!qword_254A1C0B8)
  {
    result = MEMORY[0x212BBDF90](&protocol conformance descriptor for TaskUpdate, &type metadata for TaskUpdate);
    atomic_store(result, (unint64_t *)&qword_254A1C0B8);
  }
  return result;
}

uint64_t _TaskViewDefaultWorking.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t KeyPath;
  unint64_t v20;
  int v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  unint64_t v25;

  v2 = sub_20E4A3C50();
  v22 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A191F8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v16 - v10;
  v23 = 0;
  sub_20E4A4640();
  v21 = v24;
  v20 = v25;
  KeyPath = swift_getKeyPath();
  v18 = swift_getKeyPath();
  v17 = swift_getKeyPath();
  v16 = swift_getKeyPath();
  sub_20E4A3C44();
  sub_20E4A48BC();
  sub_20E4A371C();
  if (sub_20E4A3710())
  {
    sub_20E4A48C8();
    swift_release();
  }
  swift_release();
  v12 = sub_20E462748();
  sub_20E4A3698();
  swift_release();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v4, v2);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v11, v5);
  v24 = v2;
  v25 = v12;
  swift_getOpaqueTypeConformance2();
  v13 = sub_20E4A37D0();
  result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  *(_QWORD *)a1 = sub_20E39C368;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  *(_BYTE *)(a1 + 24) = v21;
  v15 = KeyPath;
  *(_QWORD *)(a1 + 32) = v20;
  *(_QWORD *)(a1 + 40) = v15;
  *(_BYTE *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = v18;
  *(_BYTE *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 72) = v17;
  *(_BYTE *)(a1 + 80) = 0;
  *(_QWORD *)(a1 + 88) = v16;
  *(_BYTE *)(a1 + 96) = 0;
  *(_QWORD *)(a1 + 104) = v13;
  return result;
}

uint64_t sub_20E47A860@<X0>(uint64_t a1@<X8>)
{
  return _TaskViewDefaultWorking.body.getter(a1);
}

uint64_t _TaskViewPlaceholderWorking.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  char *v23;
  void (*v24)(char *, uint64_t, uint64_t, double);
  uint64_t v25;
  unint64_t v26;
  char *v27;
  char *v28;
  void (*v29)(char *, uint64_t);
  unint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[2];

  v3 = v2;
  v40 = a2;
  v5 = *(_QWORD *)(a1 + 24);
  v36 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v37 = (char *)&v33 - v9;
  v11 = *(_QWORD *)(v10 + 16);
  v12 = sub_20E4A60E0();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v33 - v14;
  v16 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v35 = (char *)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_20E4A3E00();
  v20 = *(_QWORD *)(v19 - 8);
  v38 = v19;
  v39 = v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v33 - v22;
  v24 = *(void (**)(char *, uint64_t, uint64_t, double))(v13 + 16);
  v34 = v3;
  v24(v15, v3, v12, v21);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v15, 1, v11) == 1)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    v25 = *(_QWORD *)(a1 + 32);
    v26 = sub_20E47AB38();
    sub_20E39CBE0(v26, v5, (uint64_t)&type metadata for _TaskViewDefaultWorking);
  }
  else
  {
    v27 = v35;
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v35, v15, v11);
    (*(void (**)(char *))(v34 + *(int *)(a1 + 44)))(v27);
    v25 = *(_QWORD *)(a1 + 32);
    v28 = v37;
    sub_20E39D614(v37, v7, v5, v25);
    v29 = *(void (**)(char *, uint64_t))(v36 + 8);
    v29(v7, v5);
    sub_20E39D618((uint64_t)v28, v5, (uint64_t)v7);
    sub_20E47AB38();
    sub_20E3DC6B0((uint64_t)v7, v5);
    v29(v7, v5);
    v29(v28, v5);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v27, v11);
  }
  v30 = sub_20E47AB38();
  v41[0] = v25;
  v41[1] = v30;
  v31 = v38;
  MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v38, v41);
  sub_20E39D618((uint64_t)v23, v31, v40);
  return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v23, v31);
}

unint64_t sub_20E47AB38()
{
  unint64_t result;

  result = qword_254A1C0C8;
  if (!qword_254A1C0C8)
  {
    result = MEMORY[0x212BBDF90](&protocol conformance descriptor for _TaskViewDefaultWorking, &type metadata for _TaskViewDefaultWorking);
    atomic_store(result, (unint64_t *)&qword_254A1C0C8);
  }
  return result;
}

uint64_t _TaskViewDefaultFailed.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v13;

  v3 = __swift_instantiateConcreteTypeFromMangledName(qword_253ED1E68);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void **)v1;
  v7 = *(_QWORD *)(v1 + 8);
  v8 = *(_QWORD *)(v1 + 16);
  v9 = v6;
  swift_retain();
  ContentUnavailableView.init<>(error:retry:)(v6, v7, v8, (uint64_t)v5);
  KeyPath = swift_getKeyPath();
  sub_20E3D5E78((uint64_t)v5, a1);
  v11 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254A19400) + 36);
  *(_QWORD *)v11 = KeyPath;
  *(_BYTE *)(v11 + 8) = 2;
  return sub_20E4628A0((uint64_t)v5);
}

uint64_t sub_20E47AC60@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v13;

  v3 = __swift_instantiateConcreteTypeFromMangledName(qword_253ED1E68);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void **)v1;
  v7 = *(_QWORD *)(v1 + 8);
  v8 = *(_QWORD *)(v1 + 16);
  v9 = v6;
  swift_retain();
  ContentUnavailableView.init<>(error:retry:)(v6, v7, v8, (uint64_t)v5);
  KeyPath = swift_getKeyPath();
  sub_20E3D5E78((uint64_t)v5, a1);
  v11 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254A19400) + 36);
  *(_QWORD *)v11 = KeyPath;
  *(_BYTE *)(v11 + 8) = 2;
  return sub_20E4628A0((uint64_t)v5);
}

void TaskView.init<>(_:task:content:)()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A19208);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A19210);
  sub_20E39D010(&qword_254A19218, &qword_254A19208, (uint64_t)&protocol conformance descriptor for LoadingView<A>);
  sub_20E39D010(&qword_254A19220, &qword_254A19210, (uint64_t)&protocol conformance descriptor for ContentUnavailableView<A, B, C>);
  TaskView.init(_:task:working:failed:content:)();
}

void TaskView.init<>(_:task:placeholder:content:)(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[5];

  v32 = a8;
  v33 = a6;
  v39 = a3;
  v40 = a5;
  v36 = a4;
  v37 = a9;
  v38 = a2;
  v31 = a10;
  v34 = a7;
  v13 = sub_20E4A60E0();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v30 - v17;
  v19 = a1;
  v35 = a1;
  v21 = *a1;
  v20 = a1[1];
  v22 = v19[2];
  v41[2] = v21;
  v41[3] = v20;
  v41[4] = v22;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v14 + 16))(v18, a4, v13, v16);
  v23 = (*(unsigned __int8 *)(v14 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v24 = (v15 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  v25 = (char *)swift_allocObject();
  *((_QWORD *)v25 + 2) = a7;
  *((_QWORD *)v25 + 3) = v32;
  *((_QWORD *)v25 + 4) = a10;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v25[v23], v18, v13);
  v26 = &v25[v24];
  v27 = v33;
  *(_QWORD *)v26 = v40;
  *((_QWORD *)v26 + 1) = v27;
  swift_retain();
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19208);
  v28 = sub_20E4A3E00();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A19210);
  v29 = sub_20E39D010(&qword_254A19218, &qword_254A19208, (uint64_t)&protocol conformance descriptor for LoadingView<A>);
  v41[0] = v31;
  v41[1] = v29;
  MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v28, v41);
  sub_20E39D010(&qword_254A19220, &qword_254A19210, (uint64_t)&protocol conformance descriptor for ContentUnavailableView<A, B, C>);
  TaskView.init(_:task:working:failed:content:)();
}

uint64_t sub_20E47B034()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(_QWORD, uint64_t))(v0 + 8))(*(_QWORD *)(v2 - 160), v1);
  swift_release();
  return swift_release();
}

uint64_t sub_20E47B07C@<X0>(uint64_t a1@<X0>, void (*a2)(char *)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  char *v25;
  char v26;
  uint64_t v27;
  uint64_t KeyPath;
  uint64_t v29;
  void *v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  void (*v36)(char *);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[2];
  char v45;
  uint64_t (*v46)();
  uint64_t v47;
  char v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  char v54;
  void *v55;
  char v56;

  v43 = a6;
  v35 = a3;
  v36 = a2;
  v42 = a7;
  v37 = *(_QWORD *)(a5 - 8);
  v38 = a1;
  MEMORY[0x24BDAC7A8](a1);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v35 - v12;
  v14 = sub_20E4A60E0();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v35 - v16;
  v18 = *(_QWORD *)(a4 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v35 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19208);
  v22 = sub_20E4A3E00();
  v40 = *(_QWORD *)(v22 - 8);
  v41 = v22;
  v23 = MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v35 - v24;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v15 + 16))(v17, v38, v14, v23);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v17, 1, a4) == 1)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    v45 = 0;
    sub_20E4A4640();
    v26 = (char)v46;
    v27 = v47;
    KeyPath = swift_getKeyPath();
    v29 = swift_getKeyPath();
    v30 = (void *)swift_getKeyPath();
    v46 = sub_20E39C368;
    v47 = 0;
    v48 = 1;
    v49 = v26;
    v50 = v27;
    v51 = KeyPath;
    v52 = 0;
    v53 = v29;
    v54 = 0;
    v55 = v30;
    v56 = 0;
    sub_20E39D010(&qword_254A19218, &qword_254A19208, (uint64_t)&protocol conformance descriptor for LoadingView<A>);
    sub_20E39CBE0((uint64_t)&v46, a5, v39);
    sub_20E39CED0();
    swift_release();
    sub_20E39CED8(KeyPath, 0);
    j__swift_release(v29, 0);
    sub_20E39CE70(v30, 0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v21, v17, a4);
    v36(v21);
    sub_20E39D614(v13, v10, a5, v43);
    v31 = *(void (**)(char *, uint64_t))(v37 + 8);
    v31(v10, a5);
    sub_20E39D618((uint64_t)v13, a5, (uint64_t)v10);
    sub_20E39D010(&qword_254A19218, &qword_254A19208, (uint64_t)&protocol conformance descriptor for LoadingView<A>);
    sub_20E3DC6B0((uint64_t)v10, a5);
    v31(v10, a5);
    v31(v13, a5);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v21, a4);
  }
  v32 = sub_20E39D010(&qword_254A19218, &qword_254A19208, (uint64_t)&protocol conformance descriptor for LoadingView<A>);
  v44[0] = v43;
  v44[1] = v32;
  v33 = v41;
  MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v41, v44);
  sub_20E39D618((uint64_t)v25, v33, v42);
  return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v25, v33);
}

uint64_t sub_20E47B444()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(sub_20E4A60E0() - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v1 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v3, 1, v1))
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E47B4F4@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char *v8;

  v3 = v1[2];
  v4 = v1[3];
  v5 = v1[4];
  v6 = *(_QWORD *)(sub_20E4A60E0() - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = (char *)v1 + ((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_20E47B07C((uint64_t)v1 + v7, *(void (**)(char *))v8, *((_QWORD *)v8 + 1), v3, v4, v5, a1);
}

void TaskView.init<>(task:content:)()
{
  sub_20E4A4760();
  TaskView.init<>(_:task:content:)();
}

void TaskView.init<>(task:placeholder:content:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[3];

  v20 = a5;
  v21 = a7;
  v16 = sub_20E4A60E0();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v20 - v18;
  v22 = 0;
  sub_20E4A4760();
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, a3, v16);
  TaskView.init<>(_:task:placeholder:content:)(v23, a1, a2, (uint64_t)v19, a4, v20, a6, v21, a9, a8);
}

uint64_t sub_20E47B6D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

void TaskView.init<A>(task:content:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v15;

  sub_20E4A4760();
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = a5;
  v15[3] = a6;
  v15[4] = a7;
  v15[5] = a8;
  v15[6] = a9;
  v15[7] = a1;
  v15[8] = a2;
  TaskView.init<>(_:task:content:)();
}

uint64_t sub_20E47B7D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;

  v8[5] = a6;
  v8[6] = a8;
  v8[3] = a2;
  v8[4] = a3;
  v8[2] = a1;
  sub_20E4A5DF8();
  v8[7] = sub_20E4A5DEC();
  v8[8] = sub_20E4A5DBC();
  v8[9] = v9;
  return swift_task_switch();
}

uint64_t sub_20E47B84C()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 80) = (*(uint64_t (**)(void))(v0 + 24))();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v1;
  *v1 = v0;
  v1[1] = sub_20E47B8B0;
  return sub_20E4A572C();
}

uint64_t sub_20E47B8B0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20E47B910()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E47B934(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_20E3B50B0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_254A1C0D0 + dword_254A1C0D0))(a1, v9, v10, v4, v5, v6, v7, v8);
}

void TaskView.init<A>(task:placeholder:content:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[3];

  v21 = a2;
  v22 = a8;
  v24 = a4;
  v25 = a5;
  v23 = a9;
  v15 = sub_20E4A60E0();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v20 - v17;
  v26 = 0;
  sub_20E4A4760();
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = a6;
  v19[3] = a7;
  v19[4] = v22;
  v19[5] = a10;
  v19[6] = a11;
  v19[7] = a1;
  v19[8] = v21;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a3, v15);
  TaskView.init<>(_:task:placeholder:content:)(v27, (uint64_t)&unk_254A1C0E8, (uint64_t)v19, (uint64_t)v18, v24, v25, a6, a7, v23, a10);
}

uint64_t sub_20E47BADC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t sub_20E47BB10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;

  v8[5] = a6;
  v8[6] = a8;
  v8[3] = a2;
  v8[4] = a3;
  v8[2] = a1;
  sub_20E4A5DF8();
  v8[7] = sub_20E4A5DEC();
  v8[8] = sub_20E4A5DBC();
  v8[9] = v9;
  return swift_task_switch();
}

uint64_t sub_20E47BB84()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 80) = (*(uint64_t (**)(void))(v0 + 24))();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v1;
  *v1 = v0;
  v1[1] = sub_20E47BBE8;
  return sub_20E4A572C();
}

uint64_t sub_20E47BBE8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20E47BC48()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20E47BC88()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20E47BCC8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_20E3B4E08;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_254A1C0E0 + dword_254A1C0E0))(a1, v9, v10, v4, v5, v6, v7, v8);
}

uint64_t sub_20E47BD70()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E47BDB4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E47BDC4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E47BE00()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E47BE10()
{
  uint64_t result;
  unint64_t v1;

  swift_getTupleTypeMetadata2();
  sub_20E4A596C();
  sub_20E4A60E0();
  result = sub_20E4A4670();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_20E47BED0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  int v9;
  uint64_t v10;
  BOOL v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unint64_t v17;
  unint64_t v18;
  id v19;
  id v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v33;

  v3 = *(_QWORD *)(a3 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_DWORD *)(v4 + 80);
  v6 = v5;
  v7 = v5 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  if (((v6 + 8) & (unint64_t)~v6) + *(_QWORD *)(v4 + 64) <= 8)
    v8 = 8;
  else
    v8 = ((v5 + 8) & ~(unint64_t)v5) + *(_QWORD *)(v4 + 64);
  v9 = v5 & 0x100000;
  v10 = *a2;
  *a1 = *a2;
  v11 = v6 <= 7 && v9 == 0;
  if (v11
    && (((((((v7 & (v6 + 24)) + (v8 & 0xFFFFFFFFFFFFFFF8) + 16 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
       + 23) & 0xFFFFFFFFFFFFFFF8)
     + 16 <= 0x18)
  {
    v12 = a1;
    v33 = v3;
    v13 = a2[2];
    a1[1] = a2[1];
    a1[2] = v13;
    v14 = v7 & ((unint64_t)a1 + 31);
    v15 = v7 & ((unint64_t)a2 + 31);
    v16 = *(unsigned __int8 *)(v15 + v8);
    swift_retain();
    swift_retain();
    if (v16 > 1)
    {
      v18 = v8 + 1;
      memcpy((void *)v14, (const void *)v15, v8 + 1);
      v17 = (v8 & 0xFFFFFFFFFFFFFFF8) + 16;
    }
    else
    {
      v18 = v8 + 1;
      v17 = (v8 & 0xFFFFFFFFFFFFFFF8) + 16;
      if (v16 == 1)
      {
        v19 = *(id *)v15;
        v20 = *(id *)v15;
        *(_QWORD *)v14 = v19;
        *(_BYTE *)(v14 + v8) = 1;
      }
      else
      {
        *(_QWORD *)v14 = *(_QWORD *)v15;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))((v6 + 8 + v14) & ~v6, (v6 + 8 + v15) & ~v6, v33);
        *(_BYTE *)(v14 + v8) = 0;
      }
    }
    *(_QWORD *)(((v14 | 7) + v18) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((v15 | 7) + v18) & 0xFFFFFFFFFFFFF8);
    v21 = (_QWORD *)(v17 + v14);
    v22 = *(_QWORD *)(v17 + v15 + 8);
    *v21 = *(_QWORD *)(v17 + v15);
    v21[1] = v22;
    v23 = (_QWORD *)((v17 + v14 + 23) & 0xFFFFFFFFFFFFFFF8);
    v24 = (_QWORD *)((v17 + v15 + 23) & 0xFFFFFFFFFFFFFFF8);
    v25 = v24[1];
    *v23 = *v24;
    v23[1] = v25;
    v26 = (_QWORD *)(((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8);
    v27 = (_QWORD *)(((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFFFF8);
    v28 = v27[1];
    *v26 = *v27;
    v26[1] = v28;
    v29 = (_QWORD *)(((unint64_t)v26 + 23) & 0xFFFFFFFFFFFFFFF8);
    v30 = (_QWORD *)(((unint64_t)v27 + 23) & 0xFFFFFFFFFFFFFFF8);
    v31 = v30[1];
    *v29 = *v30;
    v29[1] = v31;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    v12 = (uint64_t *)(v10 + (v7 & (v6 + 16)));
  }
  swift_retain();
  return v12;
}

uint64_t sub_20E47C0F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  id *v6;
  uint64_t v7;
  unsigned int v8;

  swift_release();
  swift_release();
  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = (id *)((a1 + (v5 | 7) + 24) & ~(v5 | 7));
  if (((v5 + 8) & (unint64_t)~v5) + *(_QWORD *)(v4 + 64) <= 8)
    v7 = 8;
  else
    v7 = ((v5 + 8) & ~v5) + *(_QWORD *)(v4 + 64);
  v8 = *((unsigned __int8 *)v6 + v7);
  if (v8 <= 1)
  {
    if (v8 == 1)

    else
      (*(void (**)(unint64_t))(v4 + 8))(((unint64_t)v6 + v5 + 8) & ~v5);
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

_QWORD *sub_20E47C1DC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  id *v10;
  uint64_t v11;
  unsigned int v12;
  id v13;
  id v14;
  unint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v7 | 7) + 24;
  v9 = (_QWORD *)(((unint64_t)a1 + v8) & ~(v7 | 7));
  v10 = (id *)(((unint64_t)a2 + v8) & ~(v7 | 7));
  if (((v7 + 8) & (unint64_t)~v7) + *(_QWORD *)(v6 + 64) <= 8)
    v11 = 8;
  else
    v11 = ((v7 + 8) & ~v7) + *(_QWORD *)(v6 + 64);
  v12 = *((unsigned __int8 *)v10 + v11);
  swift_retain();
  swift_retain();
  if (v12 > 1)
  {
    memcpy(v9, v10, v11 + 1);
  }
  else if (v12 == 1)
  {
    v13 = *v10;
    v14 = *v10;
    *v9 = v13;
    *((_BYTE *)v9 + v11) = 1;
  }
  else
  {
    *v9 = *v10;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16))(((unint64_t)v9 + v7 + 8) & ~v7, ((unint64_t)v10 + v7 + 8) & ~v7, v5);
    *((_BYTE *)v9 + v11) = 0;
  }
  *(_QWORD *)(((unint64_t)v9 + v11 + 8) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v10 + v11 + 8) & 0xFFFFFFFFFFFFF8);
  v15 = (v11 & 0xFFFFFFFFFFFFFFF8) + 16;
  v16 = (_QWORD *)((char *)v9 + v15);
  v17 = (id *)((char *)v10 + v15);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  v19 = (_QWORD *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8);
  v20 = (_QWORD *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  v22 = (_QWORD *)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8);
  v23 = (_QWORD *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  v25 = (_QWORD *)(((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFFFF8);
  v26 = (_QWORD *)(((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8);
  v27 = v26[1];
  *v25 = *v26;
  v25[1] = v27;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *sub_20E47C384(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;
  id v19;
  unsigned int v20;
  uint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;

  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v8 | 7) + 24;
  v10 = (_QWORD *)(((unint64_t)a1 + v9) & ~(v8 | 7));
  v11 = (_QWORD *)(((unint64_t)a2 + v9) & ~(v8 | 7));
  v12 = ~v8;
  v13 = v8 + 8;
  v14 = ((v8 + 8) & ~v8) + *(_QWORD *)(v7 + 64);
  if (v14 <= 8)
    v15 = 8;
  else
    v15 = v14;
  v16 = *((unsigned __int8 *)v10 + v15);
  v17 = *((unsigned __int8 *)v11 + v15);
  if (v16 > 1)
  {
    if (v17 <= 1)
    {
      if (v17 != 1)
      {
LABEL_23:
        *v10 = *v11;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)v10 + v13) & v12, ((unint64_t)v11 + v13) & v12, v6);
        *((_BYTE *)v10 + v15) = 0;
        goto LABEL_24;
      }
      goto LABEL_11;
    }
LABEL_15:
    memcpy(v10, v11, v15 + 1);
    goto LABEL_24;
  }
  if (v17 > 1)
  {
    if (v16 == 1)

    else
      (*(void (**)(unint64_t, uint64_t))(v7 + 8))(((unint64_t)v10 + v13) & v12, v6);
    goto LABEL_15;
  }
  if (v10 != v11)
  {
    if (v16 == 1)

    else
      (*(void (**)(unint64_t, uint64_t))(v7 + 8))(((unint64_t)v10 + v13) & v12, v6);
    v20 = *((unsigned __int8 *)v11 + v15);
    if (v20 >= 2)
    {
      if (v15 <= 3)
        v21 = v15;
      else
        v21 = 4;
      __asm { BR              X12 }
    }
    if (v20 != 1)
      goto LABEL_23;
LABEL_11:
    v18 = *v11;
    v19 = (id)*v11;
    *v10 = v18;
    *((_BYTE *)v10 + v15) = 1;
  }
LABEL_24:
  *(_QWORD *)(((unint64_t)v10 + v15 + 8) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v11 + v15 + 8) & 0xFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  v22 = (v15 & 0xFFFFFFFFFFFFFFF8) + 16;
  v23 = (_QWORD *)((char *)v10 + v22);
  v24 = (_QWORD *)((char *)v11 + v22);
  v25 = v24[1];
  *v23 = *v24;
  v23[1] = v25;
  swift_retain();
  swift_release();
  v26 = (_QWORD *)(((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8);
  v27 = (_QWORD *)(((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFFFF8);
  v28 = v27[1];
  *v26 = *v27;
  v26[1] = v28;
  swift_retain();
  swift_release();
  v29 = (_QWORD *)(((unint64_t)v26 + 23) & 0xFFFFFFFFFFFFFFF8);
  v30 = (_QWORD *)(((unint64_t)v27 + 23) & 0xFFFFFFFFFFFFFFF8);
  v31 = v30[1];
  *v29 = *v30;
  v29[1] = v31;
  swift_retain();
  swift_release();
  v32 = (_QWORD *)(((unint64_t)v29 + 23) & 0xFFFFFFFFFFFFFFF8);
  v33 = (_QWORD *)(((unint64_t)v30 + 23) & 0xFFFFFFFFFFFFFFF8);
  v34 = v33[1];
  *v32 = *v33;
  v32[1] = v34;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_20E47C664(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  unsigned int v10;
  unint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  _OWORD *v14;
  _OWORD *v15;
  _OWORD *v16;
  _OWORD *v17;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = (v5 | 7) + 24;
  v7 = (_QWORD *)((v6 + a1) & ~(v5 | 7));
  v8 = (_QWORD *)((v6 + a2) & ~(v5 | 7));
  if (((v5 + 8) & (unint64_t)~v5) + *(_QWORD *)(v4 + 64) <= 8)
    v9 = 8;
  else
    v9 = ((v5 + 8) & ~v5) + *(_QWORD *)(v4 + 64);
  v10 = *((unsigned __int8 *)v8 + v9);
  if (v10 > 1)
  {
    memcpy(v7, v8, v9 + 1);
  }
  else
  {
    *v7 = *v8;
    if (v10 == 1)
    {
      *((_BYTE *)v7 + v9) = 1;
    }
    else
    {
      (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)v7 + v5 + 8) & ~v5, ((unint64_t)v8 + v5 + 8) & ~v5);
      *((_BYTE *)v7 + v9) = 0;
    }
  }
  *(_QWORD *)(((unint64_t)v7 + v9 + 8) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v8 + v9 + 8) & 0xFFFFFFFFFFFFF8);
  v11 = (v9 & 0xFFFFFFFFFFFFFFF8) + 16;
  v12 = (_OWORD *)((char *)v7 + v11);
  v13 = (_OWORD *)((char *)v8 + v11);
  *v12 = *v13;
  v14 = (_OWORD *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFF8);
  v15 = (_OWORD *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v14 = *v15;
  v16 = (_OWORD *)(((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFF8);
  v17 = (_OWORD *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFF8);
  *v16 = *v17;
  *(_OWORD *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFF8);
  return a1;
}

_QWORD *sub_20E47C7A0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  unint64_t v20;
  _OWORD *v21;
  _OWORD *v22;
  _OWORD *v23;
  _OWORD *v24;
  _OWORD *v25;
  _OWORD *v26;

  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v8 | 7) + 24;
  v10 = (_QWORD *)(((unint64_t)a1 + v9) & ~(v8 | 7));
  v11 = (_QWORD *)(((unint64_t)a2 + v9) & ~(v8 | 7));
  v12 = ~v8;
  v13 = v8 + 8;
  v14 = ((v8 + 8) & ~v8) + *(_QWORD *)(v7 + 64);
  if (v14 <= 8)
    v15 = 8;
  else
    v15 = v14;
  v16 = *((unsigned __int8 *)v10 + v15);
  v17 = *((unsigned __int8 *)v11 + v15);
  if (v16 > 1)
  {
    if (v17 <= 1)
    {
      if (v17 != 1)
      {
LABEL_23:
        *v10 = *v11;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 32))(((unint64_t)v10 + v13) & v12, ((unint64_t)v11 + v13) & v12, v6);
        *((_BYTE *)v10 + v15) = 0;
        goto LABEL_24;
      }
      goto LABEL_11;
    }
LABEL_15:
    memcpy(v10, v11, v15 + 1);
    goto LABEL_24;
  }
  if (v17 > 1)
  {
    if (v16 == 1)

    else
      (*(void (**)(unint64_t, uint64_t))(v7 + 8))(((unint64_t)v10 + v13) & v12, v6);
    goto LABEL_15;
  }
  if (v10 != v11)
  {
    if (v16 == 1)

    else
      (*(void (**)(unint64_t, uint64_t))(v7 + 8))(((unint64_t)v10 + v13) & v12, v6);
    v18 = *((unsigned __int8 *)v11 + v15);
    if (v18 >= 2)
    {
      if (v15 <= 3)
        v19 = v15;
      else
        v19 = 4;
      __asm { BR              X12 }
    }
    if (v18 != 1)
      goto LABEL_23;
LABEL_11:
    *v10 = *v11;
    *((_BYTE *)v10 + v15) = 1;
  }
LABEL_24:
  *(_QWORD *)(((unint64_t)v10 + v15 + 8) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v11 + v15 + 8) & 0xFFFFFFFFFFFFF8);
  swift_release();
  v20 = (v15 & 0xFFFFFFFFFFFFFFF8) + 16;
  v21 = (_OWORD *)((char *)v10 + v20);
  v22 = (_OWORD *)((char *)v11 + v20);
  *v21 = *v22;
  swift_release();
  v23 = (_OWORD *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
  v24 = (_OWORD *)(((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFF8);
  *v23 = *v24;
  swift_release();
  v25 = (_OWORD *)(((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8);
  v26 = (_OWORD *)(((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFF8);
  *v25 = *v26;
  swift_release();
  *(_OWORD *)(((unint64_t)v25 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v26 + 23) & 0xFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_20E47CA34(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v8;
  uint64_t v9;
  unsigned int v10;
  int v11;
  int v12;
  int v13;
  int v14;

  v3 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = ((v4 + 8) & ~v4) + *(_QWORD *)(v3 + 64);
  if (v5 <= 8)
    v5 = 8;
  if (!a2)
    return 0;
  if ((a2 & 0x80000000) == 0)
    goto LABEL_5;
  v8 = ((((((((((v4 + 24) & (~(_BYTE)v4 | 0xFFFFFFFFFFFFFF07)) + (v5 & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFFFFFFFFFF8)
           + 23) & 0xFFFFFFFFFFFFFFF8)
         + 23) & 0xFFFFFFFFFFFFFFF8)
       + 23) & 0xFFFFFFFFFFFFFFF8)
     + 16;
  v9 = v8 & 0xFFFFFFF8;
  v10 = a2 - 2147483646;
  if ((v8 & 0xFFFFFFF8) != 0)
    v10 = 2;
  if (v10 >= 0x10000)
    v11 = 4;
  else
    v11 = 2;
  if (v10 < 0x100)
    v12 = 1;
  else
    v12 = v11;
  if (v12 == 4)
  {
    v13 = *(_DWORD *)(a1 + v8);
    if (!v13)
      goto LABEL_5;
  }
  else if (v12 == 2)
  {
    v13 = *(unsigned __int16 *)(a1 + v8);
    if (!v13)
      goto LABEL_5;
  }
  else
  {
    v13 = *(unsigned __int8 *)(a1 + v8);
    if (!v13)
    {
LABEL_5:
      v6 = *(_QWORD *)(a1 + 8);
      if (v6 >= 0xFFFFFFFF)
        LODWORD(v6) = -1;
      return (v6 + 1);
    }
  }
  v14 = v13 - 1;
  if (v9)
  {
    v14 = 0;
    LODWORD(v9) = *(_DWORD *)a1;
  }
  return (v9 | v14) ^ 0x80000000;
}

void sub_20E47CB3C(unsigned int *a1, int a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  size_t v8;
  int v9;
  unsigned int v10;
  int v11;
  unsigned int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = ((v6 + 8) & ~v6) + *(_QWORD *)(v5 + 64);
  if (v7 <= 8)
    v7 = 8;
  v8 = ((((((((((v6 + 24) & (~(_BYTE)v6 | 0xFFFFFFFFFFFFFF07)) + (v7 & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFFFFFFFFFF8)
           + 23) & 0xFFFFFFFFFFFFFFF8)
         + 23) & 0xFFFFFFFFFFFFFFF8)
       + 23) & 0xFFFFFFFFFFFFFFF8)
     + 16;
  if (a3 < 0)
  {
    v10 = a3 - 2147483646;
    if ((_DWORD)v8)
      v10 = 2;
    if (v10 >= 0x10000)
      v11 = 4;
    else
      v11 = 2;
    if (v10 < 0x100)
      v9 = 1;
    else
      v9 = v11;
    if ((a2 & 0x80000000) == 0)
LABEL_5:
      __asm { BR              X10 }
  }
  else
  {
    v9 = 0;
    if ((a2 & 0x80000000) == 0)
      goto LABEL_5;
  }
  if ((_DWORD)v8)
  {
    v12 = a2 ^ 0x80000000;
    bzero(a1, v8);
    *a1 = v12;
  }
  __asm { BR              X10 }
}

void sub_20E47CC8C(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (!a2)
    JUMPOUT(0x20E47CC78);
  JUMPOUT(0x20E47CC70);
}

void sub_20E47CC98()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x20E47CC78);
}

void sub_20E47CCA0()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x20E47CC78);
}

ValueMetadata *type metadata accessor for _TaskViewDefaultWorking()
{
  return &type metadata for _TaskViewDefaultWorking;
}

uint64_t sub_20E47CCBC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_20E4A60E0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_20E47CD34(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  size_t v8;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  if (*(_DWORD *)(v6 + 84))
    v8 = *(_QWORD *)(v6 + 64);
  else
    v8 = *(_QWORD *)(v6 + 64) + 1;
  if ((v7 & 0x1000F8) != 0 || ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    if ((*(unsigned int (**)(uint64_t *, uint64_t, _QWORD))(v6 + 48))(a2, 1, *(_QWORD *)(a3 + 16)))
    {
      memcpy(a1, a2, v8);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    }
    v11 = (_QWORD *)(((unint64_t)a2 + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
    v12 = v11[1];
    v13 = (_QWORD *)(((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v13 = *v11;
    v13[1] = v12;
  }
  swift_retain();
  return a1;
}

uint64_t sub_20E47CE3C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(a1, 1, v3))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return swift_release();
}

char *sub_20E47CEAC(char *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  size_t v8;
  size_t v9;
  size_t v10;
  size_t v11;
  unint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    v7 = *(_DWORD *)(v6 + 84);
    v8 = *(_QWORD *)(v6 + 64);
    if (v7)
      v9 = v8;
    else
      v9 = v8 + 1;
    memcpy(a1, a2, v9);
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    v7 = *(_DWORD *)(v6 + 84);
    v8 = *(_QWORD *)(v6 + 64);
  }
  if (v7)
    v10 = v8;
  else
    v10 = v8 + 1;
  v11 = v10 + 7;
  v12 = (unint64_t)&a1[v11];
  v13 = (uint64_t *)(((unint64_t)a2 + v11) & 0xFFFFFFFFFFFFFFF8);
  v15 = *v13;
  v14 = v13[1];
  v16 = (_QWORD *)(v12 & 0xFFFFFFFFFFFFFFF8);
  *v16 = v15;
  v16[1] = v14;
  swift_retain();
  return a1;
}

void *sub_20E47CF74(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void *, uint64_t, uint64_t);
  int v8;
  int v9;
  size_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  v8 = v7(a1, 1, v5);
  v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 24))(a1, a2, v5);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
  }
  if (*(_DWORD *)(v6 + 84))
    v10 = *(_QWORD *)(v6 + 64);
  else
    v10 = *(_QWORD *)(v6 + 64) + 1;
  memcpy(a1, a2, v10);
LABEL_10:
  if (*(_DWORD *)(v6 + 84))
    v11 = *(_QWORD *)(v6 + 64);
  else
    v11 = *(_QWORD *)(v6 + 64) + 1;
  v12 = v11 + 7;
  v13 = (_QWORD *)(((unint64_t)a1 + v12) & 0xFFFFFFFFFFFFFFF8);
  v14 = (_QWORD *)(((unint64_t)a2 + v12) & 0xFFFFFFFFFFFFFFF8);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  swift_retain();
  swift_release();
  return a1;
}

void *sub_20E47D090(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  size_t v8;
  size_t v9;
  size_t v10;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    v7 = *(_DWORD *)(v6 + 84);
    v8 = *(_QWORD *)(v6 + 64);
    if (v7)
      v9 = v8;
    else
      v9 = v8 + 1;
    memcpy(a1, a2, v9);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(a1, a2, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    v7 = *(_DWORD *)(v6 + 84);
    v8 = *(_QWORD *)(v6 + 64);
  }
  if (v7)
    v10 = v8;
  else
    v10 = v8 + 1;
  *(_OWORD *)(((unint64_t)a1 + v10 + 7) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)a2 + v10 + 7) & 0xFFFFFFFFFFFFF8);
  return a1;
}

void *sub_20E47D154(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void *, uint64_t, uint64_t);
  int v8;
  int v9;
  size_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  v8 = v7(a1, 1, v5);
  v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 32))(a1, a2, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 40))(a1, a2, v5);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
  }
  if (*(_DWORD *)(v6 + 84))
    v10 = *(_QWORD *)(v6 + 64);
  else
    v10 = *(_QWORD *)(v6 + 64) + 1;
  memcpy(a1, a2, v10);
LABEL_10:
  if (*(_DWORD *)(v6 + 84))
    v11 = *(_QWORD *)(v6 + 64);
  else
    v11 = *(_QWORD *)(v6 + 64) + 1;
  *(_OWORD *)(((unint64_t)a1 + v11 + 7) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)a2 + v11 + 7) & 0xFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_20E47D268(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unsigned int v13;
  unint64_t v14;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5)
    v6 = v5 - 1;
  else
    v6 = 0;
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = v6;
  v8 = *(_QWORD *)(v4 + 64);
  if (!v5)
    ++v8;
  if (!a2)
    return 0;
  if (v7 < a2)
  {
    if (((((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v9 = 2;
    else
      v9 = a2 - v7 + 1;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    __asm { BR              X16 }
  }
  if (v6 < 0x7FFFFFFF)
  {
    v14 = *(_QWORD *)((a1 + v8 + 7) & 0xFFFFFFFFFFFFF8);
    if (v14 >= 0xFFFFFFFF)
      LODWORD(v14) = -1;
    return (v14 + 1);
  }
  else
  {
    v13 = (*(uint64_t (**)(void))(v4 + 48))();
    if (v13 >= 2)
      return v13 - 1;
    else
      return 0;
  }
}

void sub_20E47D3A0(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;
  int v14;
  unsigned int v15;

  v6 = 0;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8)
    v9 = v8 - 1;
  else
    v9 = 0;
  if (v9 <= 0x7FFFFFFF)
    v10 = 0x7FFFFFFF;
  else
    v10 = v9;
  v11 = *(_QWORD *)(v7 + 64);
  if (!v8)
    ++v11;
  if (v10 < a3)
  {
    v12 = a3 - v10;
    if ((((_DWORD)v11 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v13 = v12 + 1;
    else
      v13 = 2;
    if (v13 >= 0x10000)
      v14 = 4;
    else
      v14 = 2;
    if (v13 < 0x100)
      v14 = 1;
    if (v13 >= 2)
      v6 = v14;
    else
      v6 = 0;
  }
  if (a2 > v10)
  {
    if ((((_DWORD)v11 + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      v15 = ~v10 + a2;
      bzero(a1, ((v11 + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
      *a1 = v15;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

uint64_t sub_20E47D498@<X0>(unsigned int a1@<W1>, size_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  unsigned int v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  int v14;
  _QWORD *v15;
  uint64_t result;

  v12[v13] = 0;
  if (a1)
  {
    if (v10 < 0x7FFFFFFF)
    {
      v15 = (_QWORD *)((unint64_t)&v12[a2 + 7] & 0xFFFFFFFFFFFFFFF8);
      if ((a1 & 0x80000000) != 0)
      {
        *v15 = a1 ^ 0x80000000;
        v15[1] = 0;
      }
      else
      {
        *v15 = a1 - 1;
      }
    }
    else if (v10 >= a1)
    {
      return (*(uint64_t (**)(_BYTE *, _QWORD))(v11 + 56))(v12, a1 + 1);
    }
    else if ((_DWORD)a2)
    {
      if (a2 <= 3)
        v14 = a2;
      else
        v14 = 4;
      bzero(v12, a2);
      __asm { BR              X10 }
    }
  }
  return result;
}

void sub_20E47D594()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
}

void sub_20E47D5A4()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
}

void sub_20E47D5AC()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

ValueMetadata *type metadata accessor for _TaskViewDefaultFailed()
{
  return &type metadata for _TaskViewDefaultFailed;
}

void sub_20E47D5C8()
{
  type metadata accessor for TaskView();
}

uint64_t sub_20E47D610()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[2];
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[2];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v4 = sub_20E4A4BBC();
  v18 = MEMORY[0x24BEE4578];
  v5 = MEMORY[0x212BBDF90](MEMORY[0x24BE5CAA8], v4, &v18);
  v19 = v0;
  v20 = v4;
  v21 = v1;
  v22 = v5;
  v6 = sub_20E4A46DC();
  v7 = sub_20E4A3E00();
  v8 = sub_20E4A3E00();
  v9 = sub_20E4A4574();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1C0A0);
  v10 = sub_20E4A39D4();
  v17[0] = v3;
  v17[1] = MEMORY[0x212BBDF90](MEMORY[0x24BDF44C8], v6);
  v11 = MEMORY[0x24BDEF3E0];
  v15 = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v7, v17);
  v16 = v2;
  v14 = MEMORY[0x212BBDF90](v11, v8, &v15);
  v13[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDF3F50], v9, &v14);
  v13[1] = sub_20E39D010(&qword_254A1C0C0, &qword_254A1C0A0, MEMORY[0x24BDEECB8]);
  return MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v10, v13);
}

unint64_t sub_20E47D768()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254A1C1F0;
  if (!qword_254A1C1F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1C1F8);
    v2[0] = sub_20E3D9464();
    v2[1] = sub_20E39D010(&qword_254A192E8, &qword_254A192F0, MEMORY[0x24BDEFB48]);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254A1C1F0);
  }
  return result;
}

uint64_t sub_20E47D7EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 16);
  v2 = sub_20E4A3E00();
  v4[0] = v1;
  v4[1] = sub_20E47AB38();
  return MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v2, v4);
}

void sub_20E47D844()
{
  type metadata accessor for TaskView();
}

uint64_t sub_20E47D888(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  id *v4;
  uint64_t TupleTypeMetadata2;
  uint64_t v6;
  uint64_t v8;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  swift_release();
  swift_release();
  v4 = (id *)(v1 + ((v3 + 72) & ~v3) + *(int *)(a1 + 76));
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v6 = sub_20E4A596C();
  if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v4, 1, v6))
  {
    if (swift_getEnumCaseMultiPayload() == 1)

    else
      (*(void (**)(char *))(*(_QWORD *)(v8 - 8) + 8))((char *)v4 + *(int *)(TupleTypeMetadata2 + 48));
  }
  sub_20E4A60E0();
  sub_20E4A4670();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_20E47D9E4()
{
  type metadata accessor for TaskView();
}

void sub_20E47DA2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v9 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  sub_20E479DF4(v2 + ((v9 + 72) & ~v9), v1, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_20E47DA78(uint64_t a1)
{
  uint64_t v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  swift_getTupleTypeMetadata2();
  sub_20E4A596C();
  v2 = sub_20E4A60E0();
  v3 = MEMORY[0x24BDAC7A8](v2);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v4 + 16))((char *)&v7 - v5, a1, v2, v3);
  sub_20E4A4670();
  return sub_20E4A4658();
}

uint64_t _JetLocalizeDefaultFailed.init(error:retry:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t JetLocalize.init(working:failed:content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;

  type metadata accessor for _LocalizerOwner();
  sub_20E39F334((unint64_t *)&qword_254A1A338, (uint64_t (*)(uint64_t))type metadata accessor for _LocalizerOwner, (uint64_t)&unk_20E4AB4F0);
  v14 = sub_20E4A3B00();
  v16 = v15;
  result = swift_getKeyPath();
  *(_QWORD *)a7 = v14;
  *(_QWORD *)(a7 + 8) = v16;
  *(_QWORD *)(a7 + 16) = result;
  *(_BYTE *)(a7 + 24) = 0;
  *(_QWORD *)(a7 + 32) = a5;
  *(_QWORD *)(a7 + 40) = a6;
  *(_QWORD *)(a7 + 48) = a1;
  *(_QWORD *)(a7 + 56) = a2;
  *(_QWORD *)(a7 + 64) = a3;
  *(_QWORD *)(a7 + 72) = a4;
  return result;
}

uint64_t sub_20E47DC18()
{
  type metadata accessor for _LocalizerOwner();
  sub_20E39F334((unint64_t *)&qword_254A1A338, (uint64_t (*)(uint64_t))type metadata accessor for _LocalizerOwner, (uint64_t)&unk_20E4AB4F0);
  return sub_20E4A3ADC();
}

uint64_t sub_20E47DC74()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_BYTE *)(v0 + 24);
  sub_20E39CFAC(v1, v2);
  v3 = sub_20E45CF28(v1, v2);
  sub_20E39CED8(v1, v2);
  return v3 & 1;
}

void JetLocalize.body.getter(_QWORD *a1)
{
  __int128 *v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD v39[2];
  _QWORD v40[2];
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)();
  uint64_t v44;
  _QWORD v45[2];
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;

  v3 = v1[1];
  v4 = v1[3];
  v53 = v1[2];
  v54 = v4;
  v5 = v1[3];
  v55 = v1[4];
  v6 = v1[1];
  v51 = *v1;
  v52 = v6;
  v48 = v53;
  v49 = v5;
  v50 = v1[4];
  v46 = v51;
  v47 = v3;
  if ((sub_20E47DC74() & 1) != 0)
  {
    v48 = v53;
    v49 = v54;
    v50 = v55;
    v46 = v51;
    v47 = v52;
    sub_20E47DC18();
    swift_getKeyPath();
    sub_20E39F334((unint64_t *)&qword_254A1A338, (uint64_t (*)(uint64_t))type metadata accessor for _LocalizerOwner, (uint64_t)&unk_20E4AB4F0);
    sub_20E4A3AF4();
    swift_release();
    swift_release();
    v7 = swift_allocObject();
    v9 = a1[2];
    v8 = a1[3];
    *(_QWORD *)(v7 + 16) = v9;
    *(_QWORD *)(v7 + 24) = v8;
    v11 = a1[4];
    v10 = a1[5];
    *(_QWORD *)(v7 + 32) = v11;
    *(_QWORD *)(v7 + 40) = v10;
    v38 = a1;
    v12 = a1[6];
    v13 = v38[7];
    *(_QWORD *)(v7 + 48) = v12;
    *(_QWORD *)(v7 + 56) = v13;
    v14 = v54;
    *(_OWORD *)(v7 + 96) = v53;
    *(_OWORD *)(v7 + 112) = v14;
    *(_OWORD *)(v7 + 128) = v55;
    v15 = v52;
    *(_OWORD *)(v7 + 64) = v51;
    *(_OWORD *)(v7 + 80) = v15;
    v16 = swift_allocObject();
    *(_QWORD *)(v16 + 16) = v9;
    *(_QWORD *)(v16 + 24) = v8;
    *(_QWORD *)(v16 + 32) = v11;
    *(_QWORD *)(v16 + 40) = v10;
    *(_QWORD *)(v16 + 48) = v12;
    *(_QWORD *)(v16 + 56) = v13;
    v17 = v54;
    *(_OWORD *)(v16 + 96) = v53;
    *(_OWORD *)(v16 + 112) = v17;
    *(_OWORD *)(v16 + 128) = v55;
    v18 = v52;
    *(_OWORD *)(v16 + 64) = v51;
    *(_OWORD *)(v16 + 80) = v18;
    v19 = swift_allocObject();
    *(_QWORD *)(v19 + 16) = v9;
    *(_QWORD *)(v19 + 24) = v8;
    *(_QWORD *)(v19 + 32) = v11;
    *(_QWORD *)(v19 + 40) = v10;
    *(_QWORD *)(v19 + 48) = v12;
    *(_QWORD *)(v19 + 56) = v13;
    v20 = v54;
    *(_OWORD *)(v19 + 96) = v53;
    *(_OWORD *)(v19 + 112) = v20;
    *(_OWORD *)(v19 + 128) = v55;
    v21 = v52;
    *(_OWORD *)(v19 + 64) = v51;
    *(_OWORD *)(v19 + 80) = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A430);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1A3E0);
    v22 = sub_20E4A39D4();
    v39[0] = v10;
    v39[1] = sub_20E39D010(&qword_254A1A3E8, &qword_254A1A3E0, MEMORY[0x24BDF1028]);
    MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v22, v39);
    sub_20E467A3C((uint64_t)v40, (uint64_t)&v46);
  }
  *(_QWORD *)&v46 = 0xD000000000000022;
  *((_QWORD *)&v46 + 1) = 0x800000020E4CBA20;
  sub_20E3C3948();
  v23 = sub_20E4A41C0();
  v25 = v24;
  v27 = v26;
  v29 = v28 & 1;
  v30 = swift_allocObject();
  *(_QWORD *)(v30 + 16) = 0xD000000000000022;
  *(_QWORD *)(v30 + 24) = 0x800000020E4CBA20;
  v40[0] = v23;
  v40[1] = v25;
  LOBYTE(v41) = v29;
  v42 = v27;
  v43 = sub_20E3A5260;
  v44 = v30;
  v31 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1A430);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1A3E0);
  v32 = sub_20E4A39D4();
  v33 = a1[3];
  v34 = a1[4];
  v45[0] = a1[5];
  v45[1] = sub_20E39D010(&qword_254A1A3E8, &qword_254A1A3E0, MEMORY[0x24BDF1028]);
  v35 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v32, v45);
  v36 = a1[6];
  v37 = a1[7];
  *(_QWORD *)&v46 = v31;
  *((_QWORD *)&v46 + 1) = v32;
  *(_QWORD *)&v47 = v33;
  *((_QWORD *)&v47 + 1) = v34;
  *(_QWORD *)&v48 = v35;
  *((_QWORD *)&v48 + 1) = v36;
  *(_QWORD *)&v49 = v37;
  type metadata accessor for _ResultView();
}

void sub_20E47E138(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
  char v37;
  uint64_t v39;

  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18D00);
  MEMORY[0x212BBDF90](&unk_20E4AF6E0, a1);
  sub_20E39D010((unint64_t *)&qword_254A18D08, &qword_254A18D00, (uint64_t)&protocol conformance descriptor for _RequirementFailureView<A, B>);
  sub_20E39CBE0((uint64_t)&a37, a1, v39);
  sub_20E39D0D8(a16, a15, v37);
  swift_release();
  swift_bridgeObjectRelease();
  JUMPOUT(0x20E47E1BCLL);
}

uint64_t sub_20E47E244(uint64_t a1)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD v5[6];
  _BYTE v6[320];

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A18D00);
  v2 = sub_20E4A3E00();
  v5[0] = MEMORY[0x212BBDF90](&unk_20E4AF6E0, a1);
  v5[1] = sub_20E39D010((unint64_t *)&qword_254A18D08, &qword_254A18D00, (uint64_t)&protocol conformance descriptor for _RequirementFailureView<A, B>);
  MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v2, v5);
  sub_20E39D618((uint64_t)v6, v2, v4);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v6, v2);
}

uint64_t sub_20E47E2F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X5>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v7 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (uint64_t *)((char *)&v17 - v12);
  (*(void (**)(double))(v14 + 48))(v11);
  sub_20E39D614(v13, v9, a2, a3);
  v15 = *(void (**)(char *, uint64_t))(v7 + 8);
  v15(v9, a2);
  sub_20E39D618((uint64_t)v13, a2, a4);
  return ((uint64_t (*)(_QWORD *, uint64_t))v15)(v13, a2);
}

uint64_t sub_20E47E3D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X7>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t (*)(), uint64_t);
  void *v16;
  uint64_t (*v17)();
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v21;

  v8 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (uint64_t *)((char *)&v21 - v12);
  v15 = *(void (**)(uint64_t, uint64_t (*)(), uint64_t))(v14 + 64);
  v17 = _taskRetry(for:)(v16);
  v15(a1, v17, v18);
  swift_release();
  sub_20E39D614(v13, v10, a2, a3);
  v19 = *(void (**)(char *, uint64_t))(v8 + 8);
  v19(v10, a2);
  sub_20E39D618((uint64_t)v13, a2, a4);
  return ((uint64_t (*)(_QWORD *, uint64_t))v19)(v13, a2);
}

uint64_t sub_20E47E4D4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[2];

  v33 = a4;
  v34 = a5;
  v32 = sub_20E4A33BC();
  v30 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a3 - 8);
  v28 = a3;
  v29 = v10;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1A3E0);
  v14 = sub_20E4A39D4();
  v31 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (uint64_t *)((char *)&v27 - v19);
  (*(void (**)(_QWORD *, double))(a2 + 32))(a1, v18);
  swift_getKeyPath();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20E4A5AC8();
  v21 = v28;
  v22 = v33;
  sub_20E4A4250();
  swift_release();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v32);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v13, v21);
  v23 = sub_20E39D010(&qword_254A1A3E8, &qword_254A1A3E0, MEMORY[0x24BDF1028]);
  v35[0] = v22;
  v35[1] = v23;
  v24 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v14, v35);
  sub_20E39D614(v20, v16, v14, v24);
  v25 = *(void (**)(char *, uint64_t))(v31 + 8);
  v25(v16, v14);
  sub_20E39D618((uint64_t)v20, v14, v34);
  return ((uint64_t (*)(_QWORD *, uint64_t))v25)(v20, v14);
}

uint64_t _JetLocalizeDefaultWorking.body.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;

  v0 = sub_20E4A3A70();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20E4A3CA4();
  if (qword_253ED2A20 != -1)
    swift_once();
  v4 = (id)qword_253ED2A18;
  v10 = sub_20E4A41B4();
  v11 = v5;
  v12 = v6 & 1;
  v13 = v7;
  sub_20E4A3A64();
  sub_20E4A44E4();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_20E39D0D8(v10, v11, v12);
  return swift_bridgeObjectRelease();
}

uint64_t sub_20E47E890()
{
  return _JetLocalizeDefaultWorking.body.getter();
}

uint64_t _JetLocalizeDefaultFailed.body.getter@<X0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v21 = a1;
  v2 = sub_20E4A3E60();
  v20 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1C200);
  v19 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *((_QWORD *)v1 + 2);
  v9 = swift_allocObject();
  v10 = *v1;
  *(_OWORD *)(v9 + 16) = *v1;
  *(_QWORD *)(v9 + 32) = v8;
  v11 = (id)v10;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1C208);
  v12 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1B3C8);
  v13 = sub_20E4A3C98();
  v14 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEE988];
  v15 = sub_20E39D010(&qword_254A1B3D0, &qword_254A1B3C8, MEMORY[0x24BDF41A8]);
  v16 = sub_20E39F334(&qword_254A1AAD0, v14, MEMORY[0x24BDEE978]);
  v22 = v12;
  v23 = v13;
  v24 = v15;
  v25 = v16;
  swift_getOpaqueTypeConformance2();
  sub_20E4A4694();
  sub_20E4A3E54();
  sub_20E39D010(qword_254A1C210, &qword_254A1C200, MEMORY[0x24BDF43B0]);
  sub_20E39F334(qword_254A1A240, (uint64_t (*)(uint64_t))MEMORY[0x24BDEF8D0], MEMORY[0x24BDEF8B0]);
  sub_20E4A422C();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v4, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v7, v5);
}

uint64_t sub_20E47EAD8()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v0 = sub_20E4A3C98();
  v1 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEE988];
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1B3C8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20E4A461C();
  sub_20E4A3C8C();
  sub_20E39D010(&qword_254A1B3D0, &qword_254A1B3C8, MEMORY[0x24BDF41A8]);
  sub_20E39F334(&qword_254A1AAD0, v1, MEMORY[0x24BDEE978]);
  sub_20E4A4208();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_20E47EC54@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_20E4A4598();
  *a1 = result;
  return result;
}

uint64_t sub_20E47EC98@<X0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v21 = a1;
  v2 = sub_20E4A3E60();
  v20 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1C200);
  v19 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *((_QWORD *)v1 + 2);
  v9 = swift_allocObject();
  v10 = *v1;
  *(_OWORD *)(v9 + 16) = *v1;
  *(_QWORD *)(v9 + 32) = v8;
  v11 = (id)v10;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1C208);
  v12 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1B3C8);
  v13 = sub_20E4A3C98();
  v14 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEE988];
  v15 = sub_20E39D010(&qword_254A1B3D0, &qword_254A1B3C8, MEMORY[0x24BDF41A8]);
  v16 = sub_20E39F334(&qword_254A1AAD0, v14, MEMORY[0x24BDEE978]);
  v22 = v12;
  v23 = v13;
  v24 = v15;
  v25 = v16;
  swift_getOpaqueTypeConformance2();
  sub_20E4A4694();
  sub_20E4A3E54();
  sub_20E39D010(qword_254A1C210, &qword_254A1C200, MEMORY[0x24BDF43B0]);
  sub_20E39F334(qword_254A1A240, (uint64_t (*)(uint64_t))MEMORY[0x24BDEF8D0], MEMORY[0x24BDEF8B0]);
  sub_20E4A422C();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v4, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v7, v5);
}

uint64_t sub_20E47EECC()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_20E47EEFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_20E47E2F8(v1 + 64, *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 48), a1);
}

uint64_t sub_20E47EF14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_20E47E3D0(a1, *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 56), a2);
}

uint64_t objectdestroy_6Tm_1()
{
  uint64_t v0;

  swift_release();
  sub_20E39CED8(*(_QWORD *)(v0 + 80), *(_BYTE *)(v0 + 88));
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E47EF74@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_20E47E4D4(a1, v2 + 64, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 40), a2);
}

uint64_t sub_20E47EF88(uint64_t a1)
{
  uint64_t v2;
  char v3;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_BYTE *)(a1 + 24);
  swift_retain();
  sub_20E39CFAC(v2, v3);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_20E47EFFC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 24))();
}

uint64_t sub_20E47F01C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E47F058()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E47F068()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E47F078(uint64_t a1)
{
  swift_release();
  sub_20E39CED8(*(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_20E47F0BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  swift_retain();
  sub_20E39CFAC(v5, v6);
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v7 = *(_QWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = v7;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_20E47F158(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 24);
  sub_20E39CFAC(v4, v5);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = v5;
  sub_20E39CED8(v6, v7);
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_retain();
  swift_release();
  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v9;
  swift_retain();
  swift_release();
  v10 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v10;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_20E47F214(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  char v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_BYTE *)(a1 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = v4;
  sub_20E39CED8(v5, v6);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();
  return a1;
}

uint64_t sub_20E47F294(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_20E47F2DC(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for JetLocalize()
{
  JUMPOUT(0x212BBDEE8);
}

ValueMetadata *type metadata accessor for _JetLocalizeDefaultWorking()
{
  return &type metadata for _JetLocalizeDefaultWorking;
}

ValueMetadata *type metadata accessor for _JetLocalizeDefaultFailed()
{
  return &type metadata for _JetLocalizeDefaultFailed;
}

void sub_20E47F35C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  v1 = *(_QWORD *)(a1 + 24);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1A430);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1A3E0);
  v2 = sub_20E4A39D4();
  v3[0] = v1;
  v3[1] = sub_20E39D010(&qword_254A1A3E8, &qword_254A1A3E0, MEMORY[0x24BDF1028]);
  MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v2, v3);
  type metadata accessor for _ResultView();
}

uint64_t sub_20E47F408(uint64_t a1)
{
  uint64_t v2;
  _QWORD v4[19];

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A18D00);
  v2 = sub_20E4A3E00();
  v4[0] = MEMORY[0x212BBDF90](&unk_20E4AF6E0, a1);
  v4[1] = sub_20E39D010((unint64_t *)&qword_254A18D08, &qword_254A18D00, (uint64_t)&protocol conformance descriptor for _RequirementFailureView<A, B>);
  return MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v2, v4);
}

uint64_t sub_20E47F48C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E47F4CC()
{
  uint64_t (*v0)(uint64_t);

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1C200);
  sub_20E4A3E60();
  v0 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEF8D0];
  sub_20E39D010(qword_254A1C210, &qword_254A1C200, MEMORY[0x24BDF43B0]);
  sub_20E39F334(qword_254A1A240, v0, MEMORY[0x24BDEF8B0]);
  return swift_getOpaqueTypeConformance2();
}

uint64_t objectdestroy_15Tm_1()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t ActionButton.init(role:action:label:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  int *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t result;
  _QWORD *v17;

  v12 = (int *)type metadata accessor for ActionButton(0, a5, a6, a4);
  v13 = a7 + v12[11];
  *(_QWORD *)v13 = swift_getKeyPath();
  *(_BYTE *)(v13 + 40) = 0;
  v14 = (uint64_t *)(a7 + v12[12]);
  *v14 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
  swift_storeEnumTagMultiPayload();
  v15 = a7 + v12[13];
  *(_QWORD *)v15 = swift_getKeyPath();
  *(_QWORD *)(v15 + 8) = 0;
  *(_BYTE *)(v15 + 16) = 0;
  sub_20E3BB440(a1, a7, &qword_254A19628);
  result = sub_20E3BB440(a2, a7 + v12[9], &qword_254A19630);
  v17 = (_QWORD *)(a7 + v12[10]);
  *v17 = a3;
  v17[1] = a4;
  return result;
}

uint64_t type metadata accessor for ActionButton(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ActionButton);
}

uint64_t sub_20E47F6B0()
{
  sub_20E452C80();
  return sub_20E4A3C08();
}

uint64_t sub_20E47F6EC()
{
  sub_20E452C80();
  return sub_20E4A3C08();
}

uint64_t sub_20E47F728(uint64_t a1)
{
  uint64_t v2;
  _BYTE v3[40];

  sub_20E3A5E20(a1, (uint64_t)v3, &qword_253ED0658);
  sub_20E3A5E20((uint64_t)v3, (uint64_t)&v2, &qword_253ED0658);
  sub_20E452C80();
  sub_20E4A3C14();
  return sub_20E39D1F8((uint64_t)v3, &qword_253ED0658);
}

uint64_t ActionButton.init<A>(_:role:action:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t result;
  uint64_t (**v20)@<X0>(uint64_t@<X8>);

  v12 = *(_QWORD *)(a4 - 8);
  v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a4;
  *(_QWORD *)(v14 + 24) = a5;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v12 + 32))(v14 + v13, a1, a4);
  v15 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_254A1C298);
  v16 = a6 + v15[11];
  *(_QWORD *)v16 = swift_getKeyPath();
  *(_BYTE *)(v16 + 40) = 0;
  v17 = (uint64_t *)(a6 + v15[12]);
  *v17 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
  swift_storeEnumTagMultiPayload();
  v18 = a6 + v15[13];
  *(_QWORD *)v18 = swift_getKeyPath();
  *(_QWORD *)(v18 + 8) = 0;
  *(_BYTE *)(v18 + 16) = 0;
  sub_20E3BB440(a2, a6, &qword_254A19628);
  result = sub_20E3BB440(a3, a6 + v15[9], &qword_254A19630);
  v20 = (uint64_t (**)@<X0>(uint64_t@<X8>))(a6 + v15[10]);
  *v20 = sub_20E480110;
  v20[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v14;
  return result;
}

{
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  _BYTE *v19;
  _BYTE v22[40];

  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19628);
  MEMORY[0x24BDAC7A8](v12);
  v14 = &v22[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v15 = *(_QWORD *)(a4 - 8);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = &v22[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(_BYTE *, uint64_t, uint64_t, double))(v15 + 16))(v19, a1, a4, v17);
  sub_20E3A5E20(a2, (uint64_t)v14, &qword_254A19628);
  sub_20E3C39FC(a3, (uint64_t)v22);
  ActionButton.init<A>(_:role:action:)((uint64_t)v19, (uint64_t)v14, (uint64_t)v22, a4, a5, a6);
  __swift_destroy_boxed_opaque_existential_1(a3);
  sub_20E39D1F8(a2, &qword_254A19628);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(a1, a4);
}

uint64_t sub_20E47F8EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *, double))(v5 + 16))((char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  result = sub_20E4A41C0();
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = v7;
  *(_BYTE *)(a2 + 16) = v8 & 1;
  *(_QWORD *)(a2 + 24) = v9;
  return result;
}

uint64_t ActionButton.init<>(_:role:action:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t result;
  uint64_t (**v20)@<X0>(uint64_t@<X8>);

  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  *(_BYTE *)(v14 + 32) = a3;
  *(_QWORD *)(v14 + 40) = a4;
  v15 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_254A1C298);
  v16 = a7 + v15[11];
  *(_QWORD *)v16 = swift_getKeyPath();
  *(_BYTE *)(v16 + 40) = 0;
  v17 = (uint64_t *)(a7 + v15[12]);
  *v17 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
  swift_storeEnumTagMultiPayload();
  v18 = a7 + v15[13];
  *(_QWORD *)v18 = swift_getKeyPath();
  *(_QWORD *)(v18 + 8) = 0;
  *(_BYTE *)(v18 + 16) = 0;
  sub_20E3BB440(a5, a7, &qword_254A19628);
  result = sub_20E3BB440(a6, a7 + v15[9], &qword_254A19630);
  v20 = (uint64_t (**)@<X0>(uint64_t@<X8>))(a7 + v15[10]);
  *v20 = sub_20E480130;
  v20[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v14;
  return result;
}

{
  int *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t *v21;
  _BYTE *v22;
  uint64_t (**v23)@<X0>(uint64_t@<X8>);
  uint64_t v25;
  _BYTE v26[40];

  v25 = a7;
  v13 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_254A1C298);
  MEMORY[0x24BDAC7A8](v13);
  v15 = &v26[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19628);
  MEMORY[0x24BDAC7A8](v16);
  v18 = &v26[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_20E3A5E20(a5, (uint64_t)v18, &qword_254A19628);
  sub_20E3C39FC(a6, (uint64_t)v26);
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = a1;
  *(_QWORD *)(v19 + 24) = a2;
  *(_BYTE *)(v19 + 32) = a3;
  *(_QWORD *)(v19 + 40) = a4;
  v20 = &v15[v13[11]];
  *(_QWORD *)v20 = swift_getKeyPath();
  v20[40] = 0;
  v21 = (uint64_t *)&v15[v13[12]];
  *v21 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
  swift_storeEnumTagMultiPayload();
  v22 = &v15[v13[13]];
  *(_QWORD *)v22 = swift_getKeyPath();
  *((_QWORD *)v22 + 1) = 0;
  v22[16] = 0;
  sub_20E3BB440((uint64_t)v18, (uint64_t)v15, &qword_254A19628);
  sub_20E3BB440((uint64_t)v26, (uint64_t)&v15[v13[9]], &qword_254A19630);
  v23 = (uint64_t (**)@<X0>(uint64_t@<X8>))&v15[v13[10]];
  *v23 = sub_20E481CE8;
  v23[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v19;
  sub_20E3BB440((uint64_t)v15, v25, &qword_254A1C298);
  __swift_destroy_boxed_opaque_existential_1(a6);
  return sub_20E39D1F8(a5, &qword_254A19628);
}

uint64_t sub_20E47FAA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  char v4;
  uint64_t v5;

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  result = sub_20E4A41B4();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4 & 1;
  *(_QWORD *)(a1 + 24) = v5;
  return result;
}

uint64_t ActionButton.init<>(_:role:action:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t (**v14)@<X0>(uint64_t@<X8>);

  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = *(_OWORD *)a1;
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(a1 + 16);
  v9 = (int *)__swift_instantiateConcreteTypeFromMangledName(qword_254A1C2A0);
  v10 = a4 + v9[11];
  *(_QWORD *)v10 = swift_getKeyPath();
  *(_BYTE *)(v10 + 40) = 0;
  v11 = (uint64_t *)(a4 + v9[12]);
  *v11 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
  swift_storeEnumTagMultiPayload();
  v12 = a4 + v9[13];
  *(_QWORD *)v12 = swift_getKeyPath();
  *(_QWORD *)(v12 + 8) = 0;
  *(_BYTE *)(v12 + 16) = 0;
  sub_20E3BB440(a2, a4, &qword_254A19628);
  result = sub_20E3BB440(a3, a4 + v9[9], &qword_254A19630);
  v14 = (uint64_t (**)@<X0>(uint64_t@<X8>))(a4 + v9[10]);
  *v14 = sub_20E48016C;
  v14[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v8;
  return result;
}

uint64_t sub_20E47FC58@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  type metadata accessor for _LocalizerOwner();
  sub_20E40B978();
  swift_retain();
  swift_bridgeObjectRetain();
  v6 = sub_20E4A3B00();
  v8 = v7;
  result = swift_getKeyPath();
  *(_QWORD *)a2 = v6;
  *(_QWORD *)(a2 + 8) = v8;
  *(_QWORD *)(a2 + 16) = result;
  *(_BYTE *)(a2 + 24) = 0;
  *(_QWORD *)(a2 + 32) = v4;
  *(_QWORD *)(a2 + 40) = v3;
  *(_QWORD *)(a2 + 48) = v5;
  return result;
}

uint64_t ActionButton.init<>(_:localizer:role:action:)@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t (**v16)@<X0>(uint64_t@<X8>);

  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = *(_OWORD *)a1;
  *(_QWORD *)(v10 + 32) = *(_QWORD *)(a1 + 16);
  sub_20E3B1AB4(a2, v10 + 40);
  v11 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_254A1C298);
  v12 = a5 + v11[11];
  *(_QWORD *)v12 = swift_getKeyPath();
  *(_BYTE *)(v12 + 40) = 0;
  v13 = (uint64_t *)(a5 + v11[12]);
  *v13 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
  swift_storeEnumTagMultiPayload();
  v14 = a5 + v11[13];
  *(_QWORD *)v14 = swift_getKeyPath();
  *(_QWORD *)(v14 + 8) = 0;
  *(_BYTE *)(v14 + 16) = 0;
  sub_20E3BB440(a3, a5, &qword_254A19628);
  result = sub_20E3BB440(a4, a5 + v11[9], &qword_254A19630);
  v16 = (uint64_t (**)@<X0>(uint64_t@<X8>))(a5 + v11[10]);
  *v16 = sub_20E4801A8;
  v16[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v10;
  return result;
}

uint64_t (*sub_20E47FE10(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = v1 + *(int *)(a1 + 52);
  v3 = *(_QWORD *)v2;
  v4 = *(_QWORD *)(v2 + 8);
  v5 = *(_BYTE *)(v2 + 16);
  sub_20E3E2960(*(_QWORD *)v2, v4, v5);
  v6 = sub_20E45E340(v3, v4, v5);
  v8 = v7;
  sub_20E3E2B4C(v3, v4, v5);
  if (!v6)
    return 0;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v6;
  *(_QWORD *)(v9 + 24) = v8;
  return sub_20E3ADC14;
}

uint64_t sub_20E47FEB4@<X0>(uint64_t a1@<X8>)
{
  return _s7SwiftUI17EnvironmentValuesV011_JetEngine_aB0E20metricsFieldsContextAD013OpaqueMetricshI0Vvg_0(a1);
}

uint64_t sub_20E47FED4@<X0>(uint64_t a1@<X8>)
{
  return _s7SwiftUI17EnvironmentValuesV011_JetEngine_aB0E20metricsFieldsContextAD013OpaqueMetricshI0Vvg_0(a1);
}

uint64_t (*sub_20E47FEF4())()
{
  uint64_t v0;
  uint64_t v2;
  uint64_t v3;

  sub_20E481C94();
  sub_20E4A3C08();
  if (!v2)
    return 0;
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = v2;
  *(_QWORD *)(v0 + 24) = v3;
  return sub_20E481CFC;
}

double sub_20E47FF6C@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;

  sub_20E481C94();
  sub_20E4A3C08();
  result = *(double *)&v3;
  *a1 = v3;
  return result;
}

double sub_20E47FFB8@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;

  sub_20E481C94();
  sub_20E4A3C08();
  result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_20E480004(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *a1;
  v2 = a1[1];
  if (*a1)
  {
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v1;
    *(_QWORD *)(v3 + 24) = v2;
    v4 = swift_allocObject();
    *(_QWORD *)(v4 + 16) = sub_20E481CFC;
    *(_QWORD *)(v4 + 24) = v3;
  }
  sub_20E3E592C(v1);
  sub_20E481C94();
  return sub_20E4A3C14();
}

uint64_t sub_20E4800B8()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_20E480110@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v1 + 16) - 8) + 80);
  return sub_20E47F8EC(v1 + ((v2 + 32) & ~v2), a1);
}

uint64_t sub_20E480130@<X0>(uint64_t a1@<X8>)
{
  return sub_20E47FAA8(a1);
}

uint64_t sub_20E480140()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_20E48016C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_20E47FC58((uint64_t *)(v1 + 16), a1);
}

uint64_t sub_20E480174()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  return swift_deallocObject();
}

uint64_t sub_20E4801A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_20E4731AC((uint64_t (**)(_BYTE *))(v1 + 16), v1 + 40, a1);
}

uint64_t sub_20E4801B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)();
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 *v11;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[40];

  v3 = sub_20E4A5384();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20E3A5E20(v1 + *(int *)(a1 + 36), (uint64_t)&v16, &qword_254A19630);
  if (!v17)
    return sub_20E39D1F8((uint64_t)&v16, &qword_254A19630);
  sub_20E3B1AB4(&v16, (uint64_t)v19);
  sub_20E45D570((uint64_t)&v14);
  if (v15)
  {
    sub_20E3B1AB4(&v14, (uint64_t)&v16);
    v7 = sub_20E47FE10(a1);
    if (v7)
    {
      v8 = (uint64_t)v7;
      ((void (*)(_BYTE *))v7)(v19);
      sub_20E3CF5C0(v8);
    }
    v9 = v17;
    v10 = v18;
    __swift_project_boxed_opaque_existential_1(&v16, v17);
    sub_20E45C27C((uint64_t)v6);
    (*(void (**)(_BYTE *, char *, uint64_t, uint64_t))(v10 + 24))(v19, v6, v9, v10);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    v11 = &v16;
  }
  else
  {
    sub_20E39D1F8((uint64_t)&v14, &qword_253ED0658);
    sub_20E4A5228();
    v11 = (__int128 *)v19;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
}

unint64_t sub_20E480360()
{
  return 0xD000000000000029;
}

uint64_t ActionButton.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  _BYTE v28[24];

  v26 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19628);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v9 = sub_20E4A46B8();
  v24 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v24 - v10;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A193D8);
  v12 = sub_20E4A39D4();
  v25 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (uint64_t *)((char *)&v24 - v16);
  sub_20E3A5E20(v2, (uint64_t)v6, &qword_254A19628);
  sub_20E4805F4(v2, v8, v7, v18);
  sub_20E4A4688();
  sub_20E3A5E20(v2 + *(int *)(a1 + 36), (uint64_t)v28, &qword_254A19630);
  sub_20E39D1F8((uint64_t)v28, &qword_254A19630);
  v19 = MEMORY[0x212BBDF90](MEMORY[0x24BDF43B0], v9);
  sub_20E4A44A8();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v11, v9);
  v20 = sub_20E39D010(&qword_254A193D0, &qword_254A193D8, MEMORY[0x24BDF1248]);
  v27[0] = v19;
  v27[1] = v20;
  v21 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v12, v27);
  sub_20E39D614(v17, v14, v12, v21);
  v22 = *(void (**)(char *, uint64_t))(v25 + 8);
  v22(v14, v12);
  sub_20E39D618((uint64_t)v17, v12, v26);
  return ((uint64_t (*)(_QWORD *, uint64_t))v22)(v17, v12);
}

uint64_t (*sub_20E4805F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v7 = type metadata accessor for ActionButton(0, a2, a3, a4);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v15 - v10;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v8 + 16))((char *)&v15 - v10, a1, v7, v9);
  v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a2;
  *(_QWORD *)(v13 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v13 + v12, v11, v7);
  return sub_20E481C50;
}

uint64_t View.beforePerformingAction(perform:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t (*v5)();

  swift_getKeyPath();
  if (a1)
  {
    v4 = swift_allocObject();
    *(_QWORD *)(v4 + 16) = a1;
    *(_QWORD *)(v4 + 24) = a2;
    v5 = sub_20E3ADC14;
  }
  else
  {
    v5 = 0;
  }
  sub_20E3E592C(a1);
  sub_20E4A4250();
  swift_release();
  return sub_20E3CF5C0((uint64_t)v5);
}

uint64_t sub_20E4807A0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t ActionButton.init(role:action:label:)@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  _BYTE v14[40];

  sub_20E3B1AB4(a2, (uint64_t)v14);
  return ActionButton.init(role:action:label:)(a1, (uint64_t)v14, a3, a4, a5, a6, a7);
}

uint64_t objectdestroy_9Tm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_20E480B88()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_20E480BBC()
{
  unint64_t v0;
  unint64_t v1;

  sub_20E3A4C54(319, &qword_253ED2390, (uint64_t (*)(uint64_t))MEMORY[0x24BDEAFA8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
  {
    sub_20E3A4C54(319, (unint64_t *)&qword_253ED2448, (uint64_t (*)(uint64_t))MEMORY[0x24BE5D6D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *sub_20E480C98(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char v37;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_20E4A3620();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19628);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = a3[9];
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = *(uint64_t *)((char *)a2 + v11 + 24);
    if (v14)
    {
      v15 = *((_QWORD *)v13 + 4);
      *((_QWORD *)v12 + 3) = v14;
      *((_QWORD *)v12 + 4) = v15;
      (**(void (***)(void))(v14 - 8))();
    }
    else
    {
      v16 = *((_OWORD *)v13 + 1);
      *(_OWORD *)v12 = *(_OWORD *)v13;
      *((_OWORD *)v12 + 1) = v16;
      *((_QWORD *)v12 + 4) = *((_QWORD *)v13 + 4);
    }
    v17 = a3[10];
    v18 = a3[11];
    v19 = (uint64_t *)((char *)a1 + v17);
    v20 = (uint64_t *)((char *)a2 + v17);
    v21 = v20[1];
    *v19 = *v20;
    v19[1] = v21;
    v22 = (char *)a1 + v18;
    v23 = (char *)a2 + v18;
    v24 = *((_BYTE *)a2 + v18 + 40);
    swift_retain();
    if ((v24 & 1) != 0)
    {
      v25 = *((_QWORD *)v23 + 3);
      if (v25)
      {
        v26 = *((_QWORD *)v23 + 4);
        *((_QWORD *)v22 + 3) = v25;
        *((_QWORD *)v22 + 4) = v26;
        (**(void (***)(char *, char *))(v25 - 8))(v22, v23);
      }
      else
      {
        v27 = *((_OWORD *)v23 + 1);
        *(_OWORD *)v22 = *(_OWORD *)v23;
        *((_OWORD *)v22 + 1) = v27;
        *((_QWORD *)v22 + 4) = *((_QWORD *)v23 + 4);
      }
      v22[40] = 1;
    }
    else
    {
      *(_QWORD *)v22 = *(_QWORD *)v23;
      v22[40] = 0;
      swift_retain();
    }
    v28 = a3[12];
    v29 = (uint64_t *)((char *)a1 + v28);
    v30 = (uint64_t *)((char *)a2 + v28);
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v31 = sub_20E4A5384();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    }
    else
    {
      *v29 = *v30;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v32 = a3[13];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    v35 = *(_QWORD *)v34;
    v36 = *((_QWORD *)v34 + 1);
    v37 = v34[16];
    sub_20E3E2960(*(_QWORD *)v34, v36, v37);
    *(_QWORD *)v33 = v35;
    *((_QWORD *)v33 + 1) = v36;
    v33[16] = v37;
  }
  return a1;
}

uint64_t sub_20E480ED4(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = sub_20E4A3620();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v6 = a1 + a2[9];
  if (*(_QWORD *)(v6 + 24))
    __swift_destroy_boxed_opaque_existential_1(v6);
  swift_release();
  v7 = a1 + a2[11];
  if ((*(_BYTE *)(v7 + 40) & 1) != 0)
  {
    if (*(_QWORD *)(v7 + 24))
      __swift_destroy_boxed_opaque_existential_1(v7);
  }
  else
  {
    swift_release();
  }
  v8 = a1 + a2[12];
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = sub_20E4A5384();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }
  return sub_20E3E2B4C(*(_QWORD *)(a1 + a2[13]), *(_QWORD *)(a1 + a2[13] + 8), *(_BYTE *)(a1 + a2[13] + 16));
}

char *sub_20E480FE0(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char v35;

  v6 = sub_20E4A3620();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19628);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[9];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *(_QWORD *)&a2[v9 + 24];
  if (v12)
  {
    v13 = *((_QWORD *)v11 + 4);
    *((_QWORD *)v10 + 3) = v12;
    *((_QWORD *)v10 + 4) = v13;
    (**(void (***)(void))(v12 - 8))();
  }
  else
  {
    v14 = *((_OWORD *)v11 + 1);
    *(_OWORD *)v10 = *(_OWORD *)v11;
    *((_OWORD *)v10 + 1) = v14;
    *((_QWORD *)v10 + 4) = *((_QWORD *)v11 + 4);
  }
  v15 = a3[10];
  v16 = a3[11];
  v17 = &a1[v15];
  v18 = &a2[v15];
  v19 = *((_QWORD *)v18 + 1);
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *((_QWORD *)v17 + 1) = v19;
  v20 = &a1[v16];
  v21 = &a2[v16];
  v22 = a2[v16 + 40];
  swift_retain();
  if ((v22 & 1) != 0)
  {
    v23 = *((_QWORD *)v21 + 3);
    if (v23)
    {
      v24 = *((_QWORD *)v21 + 4);
      *((_QWORD *)v20 + 3) = v23;
      *((_QWORD *)v20 + 4) = v24;
      (**(void (***)(char *, char *))(v23 - 8))(v20, v21);
    }
    else
    {
      v25 = *((_OWORD *)v21 + 1);
      *(_OWORD *)v20 = *(_OWORD *)v21;
      *((_OWORD *)v20 + 1) = v25;
      *((_QWORD *)v20 + 4) = *((_QWORD *)v21 + 4);
    }
    v20[40] = 1;
  }
  else
  {
    *(_QWORD *)v20 = *(_QWORD *)v21;
    v20[40] = 0;
    swift_retain();
  }
  v26 = a3[12];
  v27 = &a1[v26];
  v28 = &a2[v26];
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v29 = sub_20E4A5384();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
  }
  else
  {
    *(_QWORD *)v27 = *(_QWORD *)v28;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v30 = a3[13];
  v31 = &a1[v30];
  v32 = &a2[v30];
  v33 = *(_QWORD *)v32;
  v34 = *((_QWORD *)v32 + 1);
  v35 = v32[16];
  sub_20E3E2960(*(_QWORD *)v32, v34, v35);
  *(_QWORD *)v31 = v33;
  *((_QWORD *)v31 + 1) = v34;
  v31[16] = v35;
  return a1;
}

char *sub_20E4811F0(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  char v40;

  v6 = sub_20E4A3620();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19628);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  v12 = a3[9];
  v13 = (uint64_t)&a1[v12];
  v14 = (uint64_t *)&a2[v12];
  v15 = *(_QWORD *)&a2[v12 + 24];
  if (*(_QWORD *)&a1[v12 + 24])
  {
    if (v15)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)v13, v14);
      goto LABEL_14;
    }
    __swift_destroy_boxed_opaque_existential_1(v13);
  }
  else if (v15)
  {
    *(_QWORD *)(v13 + 24) = v15;
    *(_QWORD *)(v13 + 32) = v14[4];
    (**(void (***)(uint64_t, char *))(v15 - 8))(v13, (char *)v14);
    goto LABEL_14;
  }
  v16 = *(_OWORD *)v14;
  v17 = *((_OWORD *)v14 + 1);
  *(_QWORD *)(v13 + 32) = v14[4];
  *(_OWORD *)v13 = v16;
  *(_OWORD *)(v13 + 16) = v17;
LABEL_14:
  v18 = a3[10];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = *((_QWORD *)v20 + 1);
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *((_QWORD *)v19 + 1) = v21;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v22 = a3[11];
    v23 = &a1[v22];
    v24 = &a2[v22];
    sub_20E39D1F8((uint64_t)&a1[v22], &qword_253ED0A18);
    if ((v24[40] & 1) != 0)
    {
      v25 = *((_QWORD *)v24 + 3);
      if (v25)
      {
        *((_QWORD *)v23 + 3) = v25;
        *((_QWORD *)v23 + 4) = *((_QWORD *)v24 + 4);
        (**(void (***)(char *, char *))(v25 - 8))(v23, v24);
      }
      else
      {
        v26 = *(_OWORD *)v24;
        v27 = *((_OWORD *)v24 + 1);
        *((_QWORD *)v23 + 4) = *((_QWORD *)v24 + 4);
        *(_OWORD *)v23 = v26;
        *((_OWORD *)v23 + 1) = v27;
      }
      v23[40] = 1;
    }
    else
    {
      *(_QWORD *)v23 = *(_QWORD *)v24;
      v23[40] = 0;
      swift_retain();
    }
    v28 = a3[12];
    v29 = &a1[v28];
    v30 = &a2[v28];
    sub_20E39D1F8((uint64_t)&a1[v28], &qword_253ED0A28);
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v31 = sub_20E4A5384();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    }
    else
    {
      *(_QWORD *)v29 = *(_QWORD *)v30;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v32 = a3[13];
  v33 = &a1[v32];
  v34 = &a2[v32];
  v35 = *(_QWORD *)v34;
  v36 = *((_QWORD *)v34 + 1);
  v37 = v34[16];
  sub_20E3E2960(*(_QWORD *)v34, v36, v37);
  v38 = *(_QWORD *)v33;
  v39 = *((_QWORD *)v33 + 1);
  v40 = v33[16];
  *(_QWORD *)v33 = v35;
  *((_QWORD *)v33 + 1) = v36;
  v33[16] = v37;
  sub_20E3E2B4C(v38, v39, v40);
  return a1;
}

char *sub_20E4814C4(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  __int128 v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;

  v6 = sub_20E4A3620();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19628);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[9];
  v10 = a3[10];
  v11 = &a1[v9];
  v12 = &a2[v9];
  v13 = *((_OWORD *)v12 + 1);
  *(_OWORD *)v11 = *(_OWORD *)v12;
  *((_OWORD *)v11 + 1) = v13;
  *((_QWORD *)v11 + 4) = *((_QWORD *)v12 + 4);
  *(_OWORD *)&a1[v10] = *(_OWORD *)&a2[v10];
  v14 = a3[11];
  v15 = a3[12];
  v16 = &a1[v14];
  v17 = &a2[v14];
  v18 = *((_OWORD *)v17 + 1);
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *((_OWORD *)v16 + 1) = v18;
  *(_OWORD *)(v16 + 25) = *(_OWORD *)(v17 + 25);
  v19 = &a1[v15];
  v20 = &a2[v15];
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v22 = sub_20E4A5384();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v19, v20, v22);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  v23 = a3[13];
  v24 = &a1[v23];
  v25 = &a2[v23];
  *(_OWORD *)v24 = *(_OWORD *)v25;
  v24[16] = v25[16];
  return a1;
}

char *sub_20E481644(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  __int128 v15;
  uint64_t v16;
  char *v17;
  char *v18;
  __int128 v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v6 = sub_20E4A3620();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19628);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  v12 = a3[9];
  v13 = (uint64_t)&a1[v12];
  v14 = &a2[v12];
  if (*(_QWORD *)&a1[v12 + 24])
    __swift_destroy_boxed_opaque_existential_1(v13);
  v15 = *((_OWORD *)v14 + 1);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v15;
  *(_QWORD *)(v13 + 32) = *((_QWORD *)v14 + 4);
  *(_OWORD *)&a1[a3[10]] = *(_OWORD *)&a2[a3[10]];
  swift_release();
  if (a1 != a2)
  {
    v16 = a3[11];
    v17 = &a2[v16];
    v18 = &a1[v16];
    sub_20E39D1F8((uint64_t)&a1[v16], &qword_253ED0A18);
    v19 = *((_OWORD *)v17 + 1);
    *(_OWORD *)v18 = *(_OWORD *)v17;
    *((_OWORD *)v18 + 1) = v19;
    *(_OWORD *)(v18 + 25) = *(_OWORD *)(v17 + 25);
    v20 = a3[12];
    v21 = &a1[v20];
    v22 = &a2[v20];
    sub_20E39D1F8((uint64_t)&a1[v20], &qword_253ED0A28);
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v24 = sub_20E4A5384();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v21, v22, v24);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
  }
  v25 = a3[13];
  v26 = &a1[v25];
  v27 = &a2[v25];
  v28 = v27[16];
  v29 = *(_QWORD *)v26;
  v30 = *((_QWORD *)v26 + 1);
  v31 = v26[16];
  *(_OWORD *)v26 = *(_OWORD *)v27;
  v26[16] = v28;
  sub_20E3E2B4C(v29, v30, v31);
  return a1;
}

uint64_t sub_20E481868()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_20E481874(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19628);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A182F8);
    v10 = a1 + *(int *)(a3 + 48);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 40));
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_20E481924()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_20E481930(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19628);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 40)) = (a2 - 1);
      return result;
    }
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A182F8);
    v12 = a1 + *(int *)(a4 + 48);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_20E4819DC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD v3[2];

  v0 = sub_20E4A46B8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A193D8);
  v1 = sub_20E4A39D4();
  v3[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDF43B0], v0);
  v3[1] = sub_20E39D010(&qword_254A193D0, &qword_254A193D8, MEMORY[0x24BDF1248]);
  return MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v1, v3);
}

uint64_t sub_20E481A7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1C328);
  v2 = sub_20E4A39D4();
  v4[0] = v1;
  v4[1] = sub_20E39D010(&qword_254A1C330, &qword_254A1C328, MEMORY[0x24BDF1028]);
  return MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v2, v4);
}

uint64_t sub_20E481AFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = (int *)type metadata accessor for ActionButton(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
  v6 = *(unsigned __int8 *)(*((_QWORD *)v5 - 1) + 80);
  v7 = (v6 + 32) & ~v6;
  v8 = v4 + v7;
  v9 = sub_20E4A3620();
  v10 = *(_QWORD *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v4 + v7, 1, v9))
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v4 + v7, v9);
  v11 = v8 + v5[9];
  if (*(_QWORD *)(v11 + 24))
    __swift_destroy_boxed_opaque_existential_1(v11);
  swift_release();
  v12 = v8 + v5[11];
  if ((*(_BYTE *)(v12 + 40) & 1) != 0)
  {
    if (*(_QWORD *)(v12 + 24))
      __swift_destroy_boxed_opaque_existential_1(v12);
  }
  else
  {
    swift_release();
  }
  v13 = v8 + v5[12];
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v14 = sub_20E4A5384();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  }
  else
  {
    swift_release();
  }
  sub_20E3E2B4C(*(_QWORD *)(v8 + v5[13]), *(_QWORD *)(v8 + v5[13] + 8), *(_BYTE *)(v8 + v5[13] + 16));
  return swift_deallocObject();
}

uint64_t sub_20E481C50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  v5 = type metadata accessor for ActionButton(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
  return sub_20E4801B4(v5);
}

unint64_t sub_20E481C94()
{
  unint64_t result;

  result = qword_254A1C338;
  if (!qword_254A1C338)
  {
    result = MEMORY[0x212BBDF90](&unk_20E4B09D4, &type metadata for _ActionPreflightKey);
    atomic_store(result, (unint64_t *)&qword_254A1C338);
  }
  return result;
}

ValueMetadata *type metadata accessor for _ActionPreflightKey()
{
  return &type metadata for _ActionPreflightKey;
}

uint64_t View.onRawDeepLink(action:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t KeyPath;
  _QWORD v10[3];
  char v11;

  KeyPath = swift_getKeyPath();
  v10[0] = a1;
  v10[1] = a2;
  v10[2] = KeyPath;
  v11 = 0;
  swift_retain();
  MEMORY[0x212BBBA70](v10, a3, &type metadata for OnRawDeepLinkViewModifier, a4);
  swift_release();
  return j_j__swift_release(KeyPath, 0);
}

uint64_t sub_20E481DA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  v2 = sub_20E4A39D4();
  v4[0] = v1;
  v4[1] = sub_20E481DFC();
  return MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v2, v4);
}

unint64_t sub_20E481DFC()
{
  unint64_t result;

  result = qword_254A1C340;
  if (!qword_254A1C340)
  {
    result = MEMORY[0x212BBDF90](&unk_20E4B0A5C, &type metadata for OnRawDeepLinkViewModifier);
    atomic_store(result, (unint64_t *)&qword_254A1C340);
  }
  return result;
}

uint64_t destroy for OnRawDeepLinkViewModifier(uint64_t a1)
{
  swift_release();
  return j_j__swift_release(*(_QWORD *)(a1 + 16), *(unsigned __int8 *)(a1 + 24));
}

uint64_t initializeWithCopy for OnRawDeepLinkViewModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 24);
  swift_retain();
  j__swift_retain(v4);
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = v5;
  return a1;
}

uint64_t assignWithCopy for OnRawDeepLinkViewModifier(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = a2;
  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  v5 = v2[2];
  LOBYTE(v2) = *((_BYTE *)v2 + 24);
  j__swift_retain(v5);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(unsigned __int8 *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = (_BYTE)v2;
  j_j__swift_release(v6, v7);
  return a1;
}

uint64_t assignWithTake for OnRawDeepLinkViewModifier(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(unsigned __int8 *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = v4;
  j_j__swift_release(v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for OnRawDeepLinkViewModifier(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 25))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OnRawDeepLinkViewModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 25) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for OnRawDeepLinkViewModifier()
{
  return &type metadata for OnRawDeepLinkViewModifier;
}

uint64_t sub_20E482014()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E482024@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (**v32)();
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v37 = a1;
  v44 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1C348);
  v38 = *(_QWORD *)(v3 - 8);
  v39 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v35 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1C350);
  MEMORY[0x24BDAC7A8](v43);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1C358);
  MEMORY[0x24BDAC7A8](v40);
  v42 = (uint64_t)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_20E4A5E58();
  v8 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1C360);
  MEMORY[0x24BDAC7A8](v41);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v34 - v14;
  v16 = *v2;
  v17 = v2[1];
  v18 = v2[2];
  v19 = *((unsigned __int8 *)v2 + 24);
  j__swift_retain(v18);
  sub_20E45E51C(v18, v19, &v45);
  j_j__swift_release(v18, v19);
  v20 = v45;
  if (v45)
  {
    v21 = swift_allocObject();
    *(_QWORD *)(v21 + 16) = v20;
    *(_QWORD *)(v21 + 24) = v16;
    *(_QWORD *)(v21 + 32) = v17;
    *(_QWORD *)(v21 + 40) = v18;
    *(_BYTE *)(v21 + 48) = v19;
    swift_retain();
    swift_retain();
    j__swift_retain(v18);
    sub_20E4A5E10();
    v22 = &v12[*(int *)(v41 + 36)];
    v23 = sub_20E4A3854();
    v24 = v36;
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(&v22[*(int *)(v23 + 20)], v10, v36);
    *(_QWORD *)v22 = &unk_254A1C388;
    *((_QWORD *)v22 + 1) = v21;
    (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v12, v37, v39);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v24);
    sub_20E482AA0((uint64_t)v12, (uint64_t)v15);
    v25 = &qword_254A1C360;
    sub_20E3A5E20((uint64_t)v15, v42, &qword_254A1C360);
    swift_storeEnumTagMultiPayload();
    sub_20E482928();
    sub_20E39D010(&qword_254A1C378, &qword_254A1C350, (uint64_t)&protocol conformance descriptor for _RequirementFailureView<A, B>);
    sub_20E4A3DF4();
    swift_release();
    v26 = (uint64_t)v15;
  }
  else
  {
    v27 = v38;
    v28 = v35;
    v29 = v39;
    (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v35, v37, v39);
    v30 = swift_allocObject();
    *(_QWORD *)(v30 + 16) = 0xD000000000000073;
    *(_QWORD *)(v30 + 24) = 0x800000020E4CD970;
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v6, v28, v29);
    v31 = v42;
    v32 = (uint64_t (**)())&v6[*(int *)(v43 + 52)];
    *v32 = sub_20E3A5260;
    v32[1] = (uint64_t (*)())v30;
    v25 = &qword_254A1C350;
    sub_20E3A5E20((uint64_t)v6, v31, &qword_254A1C350);
    swift_storeEnumTagMultiPayload();
    sub_20E482928();
    sub_20E39D010(&qword_254A1C378, &qword_254A1C350, (uint64_t)&protocol conformance descriptor for _RequirementFailureView<A, B>);
    sub_20E4A3DF4();
    v26 = (uint64_t)v6;
  }
  return sub_20E39D1F8(v26, v25);
}

uint64_t sub_20E48240C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[6] = a2;
  v3[7] = a3;
  v3[5] = a1;
  v4 = sub_20E4A59FC();
  v3[8] = v4;
  v3[9] = *(_QWORD *)(v4 - 8);
  v3[10] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1C390);
  v3[11] = swift_task_alloc();
  v3[12] = sub_20E4A5DF8();
  v3[13] = sub_20E4A5DEC();
  v3[14] = sub_20E4A5DBC();
  v3[15] = v5;
  return swift_task_switch();
}

uint64_t sub_20E4824CC()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[3] = v0[5];
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A140);
  sub_20E39D010(&qword_254A1C398, &qword_254A1A140, MEMORY[0x24BE5CD00]);
  sub_20E4A5E88();
  v0[16] = sub_20E4A5DEC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1C3A0);
  sub_20E39D010(&qword_254A1C3A8, &qword_254A1C3A0, MEMORY[0x24BE5CCF0]);
  v1 = (_QWORD *)swift_task_alloc();
  v0[17] = v1;
  *v1 = v0;
  v1[1] = sub_20E4825BC;
  return sub_20E4A5DD4();
}

uint64_t sub_20E4825BC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  *(_QWORD *)(*v1 + 144) = v0;
  swift_task_dealloc();
  v3 = *(_QWORD *)(v2 + 128);
  if (v0)
  {
    if (v3)
      goto LABEL_5;
  }
  else if (v3)
  {
LABEL_5:
    swift_getObjectType();
    sub_20E4A5DBC();
  }
  return swift_task_switch();
}

uint64_t sub_20E482680()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_20E4826B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v5;
  _QWORD *v6;
  uint64_t (*v7)(_QWORD);

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 72);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v5 = *(int **)(v0 + 48);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v3 + 32))(*(_QWORD *)(v0 + 80), v1, v2);
    v7 = (uint64_t (*)(_QWORD))((char *)v5 + *v5);
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 152) = v6;
    *v6 = v0;
    v6[1] = sub_20E482800;
    return v7(*(_QWORD *)(v0 + 80));
  }
}

uint64_t sub_20E4827A0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 32) = *(_QWORD *)(v0 + 144);
  __swift_instantiateConcreteTypeFromMangledName(qword_253ED2880);
  swift_dynamicCast();
  return swift_willThrowTypedImpl();
}

uint64_t sub_20E482800()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20E48284C()
{
  _QWORD *v0;
  _QWORD *v1;

  (*(void (**)(_QWORD, _QWORD))(v0[9] + 8))(v0[10], v0[8]);
  v0[16] = sub_20E4A5DEC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1C3A0);
  sub_20E39D010(&qword_254A1C3A8, &qword_254A1C3A0, MEMORY[0x24BE5CCF0]);
  v1 = (_QWORD *)swift_task_alloc();
  v0[17] = v1;
  *v1 = v0;
  v1[1] = sub_20E4825BC;
  return sub_20E4A5DD4();
}

uint64_t sub_20E482904()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_20E482928()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254A1C368;
  if (!qword_254A1C368)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1C360);
    v2[0] = sub_20E39D010(&qword_254A1C370, &qword_254A1C348, MEMORY[0x24BDEFB78]);
    v2[1] = sub_20E4829AC();
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254A1C368);
  }
  return result;
}

unint64_t sub_20E4829AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_253ED2910[0];
  if (!qword_253ED2910[0])
  {
    v1 = sub_20E4A3854();
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDEC4C8], v1);
    atomic_store(result, qword_253ED2910);
  }
  return result;
}

uint64_t sub_20E4829F4()
{
  uint64_t v0;

  swift_release();
  swift_release();
  j_j__swift_release(*(_QWORD *)(v0 + 40), *(unsigned __int8 *)(v0 + 48));
  return swift_deallocObject();
}

uint64_t sub_20E482A2C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_20E3B4E08;
  return sub_20E48240C(v2, v3, v4);
}

uint64_t sub_20E482AA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1C360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_20E482AEC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254A1C3B0;
  if (!qword_254A1C3B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_254A1C3B8);
    v2[0] = sub_20E482928();
    v2[1] = sub_20E39D010(&qword_254A1C378, &qword_254A1C350, (uint64_t)&protocol conformance descriptor for _RequirementFailureView<A, B>);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254A1C3B0);
  }
  return result;
}

uint64_t sub_20E482B70()
{
  uint64_t result;
  unint64_t v1;

  result = sub_20E4A60E0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_20E482BF8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  size_t v7;
  size_t v8;
  int v9;
  uint64_t v10;
  uint64_t v13;
  void *v14;
  const void *v15;
  unsigned int (*v16)(const void *, uint64_t, uint64_t);
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;

  v3 = *(_QWORD *)(a3 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_DWORD *)(v4 + 80);
  v6 = v5;
  if (*(_DWORD *)(v4 + 84))
    v7 = *(_QWORD *)(v4 + 64);
  else
    v7 = *(_QWORD *)(v4 + 64) + 1;
  v8 = v7 + 7;
  v9 = v5 & 0x100000;
  v10 = *a2;
  *(_QWORD *)a1 = *a2;
  if (v6 > 7
    || v9 != 0
    || ((((((v7 + 7 + ((v6 + 17) & ~v6)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
     + 16 > 0x18)
  {
    v13 = v10 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16));
  }
  else
  {
    v13 = a1;
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v14 = (void *)((a1 + v6 + 17) & ~v6);
    v15 = (const void *)(((unint64_t)a2 + v6 + 17) & ~v6);
    v16 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v4 + 48);
    swift_retain();
    swift_retain();
    if (v16(v15, 1, v3))
    {
      memcpy(v14, v15, v7);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v4 + 16))(v14, v15, v3);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v14, 0, 1, v3);
    }
    v17 = (_QWORD *)(((unint64_t)v14 + v8) & 0xFFFFFFFFFFFFFFF8);
    v18 = (_QWORD *)(((unint64_t)v15 + v8) & 0xFFFFFFFFFFFFFFF8);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    v20 = (_QWORD *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8);
    v21 = (_QWORD *)(((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    v23 = (_QWORD *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
    v24 = (_QWORD *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
    v25 = v24[1];
    *v23 = *v24;
    v23[1] = v25;
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v13;
}

uint64_t sub_20E482DA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  swift_release();
  swift_release();
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (a1 + *(unsigned __int8 *)(v5 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4))
    (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v6, v4);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_20E482E58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  unsigned int (*v10)(const void *, uint64_t, uint64_t);
  int v11;
  uint64_t v12;
  size_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (void *)((v7 + 17 + a1) & ~v7);
  v9 = (const void *)((v7 + 17 + a2) & ~v7);
  v10 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48);
  swift_retain();
  swift_retain();
  if (v10(v9, 1, v5))
  {
    v11 = *(_DWORD *)(v6 + 84);
    v12 = *(_QWORD *)(v6 + 64);
    if (v11)
      v13 = *(_QWORD *)(v6 + 64);
    else
      v13 = v12 + 1;
    memcpy(v8, v9, v13);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v8, v9, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v8, 0, 1, v5);
    v11 = *(_DWORD *)(v6 + 84);
    v12 = *(_QWORD *)(v6 + 64);
  }
  if (v11)
    v14 = v12;
  else
    v14 = v12 + 1;
  v15 = (_QWORD *)(((unint64_t)v8 + v14 + 7) & 0xFFFFFFFFFFFFFFF8);
  v16 = (_QWORD *)(((unint64_t)v9 + v14 + 7) & 0xFFFFFFFFFFFFFFF8);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  v18 = (_QWORD *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8);
  v19 = (_QWORD *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  v21 = (_QWORD *)(((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8);
  v22 = (_QWORD *)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_20E482FA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  size_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (void *)((v8 + 17 + a1) & ~v8);
  v10 = (void *)((v8 + 17 + a2) & ~v8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v12 = v11(v9, 1, v6);
  v13 = v11(v10, 1, v6);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 16))(v9, v10, v6);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(v9, v10, v6);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(v9, v6);
  }
  if (*(_DWORD *)(v7 + 84))
    v14 = *(_QWORD *)(v7 + 64);
  else
    v14 = *(_QWORD *)(v7 + 64) + 1;
  memcpy(v9, v10, v14);
LABEL_10:
  if (*(_DWORD *)(v7 + 84))
    v15 = *(_QWORD *)(v7 + 64);
  else
    v15 = *(_QWORD *)(v7 + 64) + 1;
  v16 = (_QWORD *)(((unint64_t)v9 + v15 + 7) & 0xFFFFFFFFFFFFFFF8);
  v17 = (_QWORD *)(((unint64_t)v10 + v15 + 7) & 0xFFFFFFFFFFFFFFF8);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  swift_retain();
  swift_release();
  v19 = (_QWORD *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8);
  v20 = (_QWORD *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  swift_retain();
  swift_release();
  v22 = (_QWORD *)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8);
  v23 = (_QWORD *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_20E483174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  int v9;
  size_t v10;
  size_t v11;
  size_t v12;
  _OWORD *v13;
  _OWORD *v14;
  _OWORD *v15;
  _OWORD *v16;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (void *)((v6 + 17 + a1) & ~v6);
  v8 = (const void *)((v6 + 17 + a2) & ~v6);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(v8, 1, v4))
  {
    v9 = *(_DWORD *)(v5 + 84);
    v10 = *(_QWORD *)(v5 + 64);
    if (v9)
      v11 = v10;
    else
      v11 = v10 + 1;
    memcpy(v7, v8, v11);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(v7, v8, v4);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v7, 0, 1, v4);
    v9 = *(_DWORD *)(v5 + 84);
    v10 = *(_QWORD *)(v5 + 64);
  }
  if (v9)
    v12 = v10;
  else
    v12 = v10 + 1;
  v13 = (_OWORD *)(((unint64_t)v7 + v12 + 7) & 0xFFFFFFFFFFFFFFF8);
  v14 = (_OWORD *)(((unint64_t)v8 + v12 + 7) & 0xFFFFFFFFFFFFFFF8);
  *v13 = *v14;
  v15 = (_OWORD *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFF8);
  v16 = (_OWORD *)(((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v15 = *v16;
  *(_OWORD *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_20E483288(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  size_t v14;
  uint64_t v15;
  _OWORD *v16;
  uint64_t v17;
  unint64_t v18;
  _OWORD *v19;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (void *)((v8 + 17 + a1) & ~v8);
  v10 = (void *)((v8 + 17 + a2) & ~v8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v12 = v11(v9, 1, v6);
  v13 = v11(v10, 1, v6);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 32))(v9, v10, v6);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(v9, v10, v6);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(v9, v6);
  }
  if (*(_DWORD *)(v7 + 84))
    v14 = *(_QWORD *)(v7 + 64);
  else
    v14 = *(_QWORD *)(v7 + 64) + 1;
  memcpy(v9, v10, v14);
LABEL_10:
  if (*(_DWORD *)(v7 + 84))
    v15 = *(_QWORD *)(v7 + 64);
  else
    v15 = *(_QWORD *)(v7 + 64) + 1;
  v16 = (_OWORD *)(((unint64_t)v9 + v15 + 7) & 0xFFFFFFFFFFFFFFF8);
  v17 = (uint64_t)v10 + v15 + 7;
  v18 = (v17 & 0xFFFFFFFFFFFFFFF8) + 23;
  *v16 = *(_OWORD *)(v17 & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  v19 = (_OWORD *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8);
  v18 &= 0xFFFFFFFFFFFFF8uLL;
  *v19 = *(_OWORD *)v18;
  swift_release();
  *(_OWORD *)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v18 + 23) & 0xFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_20E483428(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  unint64_t v14;
  unsigned int v15;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5)
    v6 = v5 - 1;
  else
    v6 = 0;
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = v6;
  if (v5)
    v8 = 7;
  else
    v8 = 8;
  if (!a2)
    return 0;
  v9 = *(unsigned __int8 *)(v4 + 80);
  if (v7 < a2)
  {
    if (((((((((v8 + *(_QWORD *)(v4 + 64) + ((v9 + 17) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
           + 23) & 0xFFFFFFFFFFFFFFF8)
         + 16) & 0xFFFFFFF8) != 0)
      v10 = 2;
    else
      v10 = a2 - v7 + 1;
    if (v10 >= 0x10000)
      v11 = 4;
    else
      v11 = 2;
    if (v10 < 0x100)
      v11 = 1;
    if (v10 >= 2)
      v12 = v11;
    else
      v12 = 0;
    __asm { BR              X16 }
  }
  if ((v6 & 0x80000000) != 0)
  {
    v15 = (*(uint64_t (**)(uint64_t))(v4 + 48))((a1 + v9 + 17) & ~v9);
    if (v15 >= 2)
      return v15 - 1;
    else
      return 0;
  }
  else
  {
    v14 = *(_QWORD *)(a1 + 8);
    if (v14 >= 0xFFFFFFFF)
      LODWORD(v14) = -1;
    return (v14 + 1);
  }
}

void sub_20E483580(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;
  int v14;
  unsigned int v15;

  v6 = 0;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8)
    v9 = v8 - 1;
  else
    v9 = 0;
  if (v9 <= 0x7FFFFFFF)
    v10 = 0x7FFFFFFF;
  else
    v10 = v9;
  v11 = *(_QWORD *)(v7 + 64);
  if (!v8)
    ++v11;
  if (v10 < a3)
  {
    v12 = a3 - v10;
    if ((((((((_DWORD)v11 + ((*(unsigned __int8 *)(v7 + 80) + 17) & ~*(unsigned __int8 *)(v7 + 80)) + 7) & 0xFFFFFFF8)
           + 23) & 0xFFFFFFF8)
         + 23) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v13 = v12 + 1;
    else
      v13 = 2;
    if (v13 >= 0x10000)
      v14 = 4;
    else
      v14 = 2;
    if (v13 < 0x100)
      v14 = 1;
    if (v13 >= 2)
      v6 = v14;
    else
      v6 = 0;
  }
  if (a2 > v10)
  {
    if ((((((((_DWORD)v11 + ((*(unsigned __int8 *)(v7 + 80) + 17) & ~*(unsigned __int8 *)(v7 + 80)) + 7) & 0xFFFFFFF8)
           + 23) & 0xFFFFFFF8)
         + 23) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      v15 = ~v10 + a2;
      bzero(a1, ((((((v11 + ((*(unsigned __int8 *)(v7 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)) + 7) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 16);
      *a1 = v15;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X15 }
}

uint64_t sub_20E48369C@<X0>(unsigned int a1@<W1>, size_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  int v17;
  uint64_t result;

  *(_BYTE *)(v14 + v15) = 0;
  if (a1)
  {
    if ((v11 & 0x80000000) != 0)
    {
      v16 = (void *)((v14 + v13 + 17) & v10);
      if (v11 >= a1)
      {
        return (*(uint64_t (**)(void *, _QWORD))(v12 + 56))(v16, a1 + 1);
      }
      else if ((_DWORD)a2)
      {
        if (a2 <= 3)
          v17 = a2;
        else
          v17 = 4;
        bzero(v16, a2);
        __asm { BR              X10 }
      }
    }
    else if ((a1 & 0x80000000) != 0)
    {
      *(_BYTE *)(v14 + 16) = 0;
      *(_QWORD *)v14 = a1 ^ 0x80000000;
      *(_QWORD *)(v14 + 8) = 0;
    }
    else
    {
      *(_QWORD *)(v14 + 8) = a1 - 1;
    }
  }
  return result;
}

void sub_20E483794()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
}

void sub_20E48379C()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
}

void sub_20E4837AC()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

void type metadata accessor for _FlowToastView()
{
  JUMPOUT(0x212BBDEE8);
}

uint64_t sub_20E4837C4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E483808(uint64_t a1)
{
  double v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v1 = MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *, double))(v3 + 16))((char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v1);
  sub_20E4A37D0();
  sub_20E4A4220();
  return swift_release();
}

void sub_20E4838B8()
{
  type metadata accessor for _FlowToastContentView();
}

uint64_t sub_20E48394C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(_BYTE *, uint64_t);
  _BYTE v41[96];

  v4 = sub_20E4A39D4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1C440);
  v5 = sub_20E4A39D4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A192F0);
  v6 = sub_20E4A39D4();
  v7 = MEMORY[0x212BBDF90](&unk_20E4B0B90, a1);
  v8 = MEMORY[0x24BDEDBB8];
  *(_QWORD *)(v2 - 152) = v7;
  *(_QWORD *)(v2 - 144) = v8;
  v9 = MEMORY[0x24BDED308];
  v10 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v4, v2 - 152);
  v11 = sub_20E39D010(&qword_254A1C448, &qword_254A1C440, MEMORY[0x24BDEF370]);
  *(_QWORD *)(v2 - 168) = v10;
  *(_QWORD *)(v2 - 160) = v11;
  v12 = MEMORY[0x212BBDF90](v9, v5, v2 - 168);
  v13 = sub_20E39D010(&qword_254A192E8, &qword_254A192F0, MEMORY[0x24BDEFB48]);
  *(_QWORD *)(v2 - 184) = v12;
  *(_QWORD *)(v2 - 176) = v13;
  MEMORY[0x212BBDF90](v9, v6, v2 - 184);
  v14 = sub_20E4A46B8();
  v15 = sub_20E4A3A58();
  *(_QWORD *)(v2 - 392) = v15;
  v16 = (uint64_t (*)(uint64_t))MEMORY[0x24BDED868];
  v17 = MEMORY[0x212BBDF90](MEMORY[0x24BDF43B0], v14);
  v18 = sub_20E39F334(&qword_254A1C450, v16, MEMORY[0x24BDED858]);
  *(_QWORD *)(v2 - 136) = v14;
  *(_QWORD *)(v2 - 128) = v15;
  *(_QWORD *)(v2 - 120) = v17;
  *(_QWORD *)(v2 - 112) = v18;
  MEMORY[0x212BBDF30](255, v2 - 136, MEMORY[0x24BDF22B8], 0);
  v19 = sub_20E4A60E0();
  v20 = sub_20E4A4574();
  *(_QWORD *)(v2 - 384) = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v22 = &v41[-v21];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1C458);
  v23 = sub_20E4A39D4();
  *(_QWORD *)(v2 - 376) = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v25 = &v41[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v26);
  v28 = &v41[-v27];
  *(_QWORD *)(v2 - 288) = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v2 - 280) = *(_QWORD *)(v2 - 328);
  *(_QWORD *)(v2 - 272) = *(_QWORD *)(v2 - 336);
  *(_QWORD *)(v2 - 264) = *(_QWORD *)(v2 - 344);
  v29 = *(_QWORD *)(v2 - 360);
  *(_QWORD *)(v2 - 256) = *(_QWORD *)(v2 - 352);
  *(_QWORD *)(v2 - 248) = v29;
  v30 = *(_QWORD *)(v2 - 320);
  *(_QWORD *)(v2 - 240) = *(_QWORD *)(v2 - 368);
  *(_QWORD *)(v2 - 232) = v30;
  v31 = *(_QWORD *)(v2 - 392);
  *(_QWORD *)(v2 - 136) = v14;
  *(_QWORD *)(v2 - 128) = v31;
  *(_QWORD *)(v2 - 120) = v17;
  *(_QWORD *)(v2 - 112) = v18;
  *(_QWORD *)(v2 - 192) = swift_getOpaqueTypeConformance2();
  v32 = MEMORY[0x212BBDF90](MEMORY[0x24BDF5578], v19, v2 - 192);
  sub_20E4A4568();
  sub_20E4A48E0();
  v33 = *(_QWORD *)(v30 + 8);
  v34 = *(_BYTE *)(v30 + 16);
  *(_QWORD *)(v2 - 136) = *(_QWORD *)v30;
  *(_QWORD *)(v2 - 128) = v33;
  *(_BYTE *)(v2 - 120) = v34;
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18408);
  MEMORY[0x212BBBCE0](v35);
  *(_BYTE *)(v2 - 136) = *(_BYTE *)(v2 - 193);
  *(_QWORD *)(v2 - 208) = v32;
  v36 = MEMORY[0x212BBDF90](MEMORY[0x24BDF3F50], v20, v2 - 208);
  sub_20E4A44F0();
  swift_release();
  (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v2 - 384) + 8))(v22, v20);
  v37 = sub_20E39D010(&qword_254A1C460, &qword_254A1C458, MEMORY[0x24BDEEC10]);
  *(_QWORD *)(v2 - 224) = v36;
  *(_QWORD *)(v2 - 216) = v37;
  v38 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v23, v2 - 224);
  sub_20E39D614(v28, v25, v23, v38);
  v39 = *(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v2 - 376) + 8);
  v39(v25, v23);
  sub_20E39D618((uint64_t)v28, v23, *(_QWORD *)(v2 - 312));
  return ((uint64_t (*)(_QWORD *, uint64_t))v39)(v28, v23);
}

void sub_20E483D94(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>)
{
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[50];

  v17[32] = a8;
  v15 = sub_20E4A3A58();
  v17[22] = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v17[21] = (char *)v17 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[42] = a1;
  v17[43] = a2;
  v17[44] = a3;
  v17[45] = a4;
  v17[46] = a5;
  v17[47] = a6;
  v17[48] = a7;
  type metadata accessor for _FlowToastView();
}

void sub_20E483E44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *(_QWORD *)(v15 - 264) = a1;
  v16 = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v15 - 360) = v16;
  *(_QWORD *)(v15 - 376) = *(_QWORD *)(v16 + 64);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v15 - 368) = (char *)&a9 - v17;
  *(_QWORD *)(v15 - 288) = v14;
  *(_QWORD *)(v15 - 144) = v14;
  *(_QWORD *)(v15 - 136) = v13;
  *(_QWORD *)(v15 - 352) = v13;
  *(_QWORD *)(v15 - 344) = v12;
  *(_QWORD *)(v15 - 128) = v12;
  *(_QWORD *)(v15 - 120) = v11;
  *(_QWORD *)(v15 - 336) = v11;
  *(_QWORD *)(v15 - 328) = v10;
  *(_QWORD *)(v15 - 112) = v10;
  *(_QWORD *)(v15 - 104) = v9;
  *(_QWORD *)(v15 - 320) = v9;
  type metadata accessor for _FlowToastContentView();
}

uint64_t sub_20E483ED4(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t OpaqueTypeConformance2;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(uint64_t, uint64_t);
  uint64_t v74;
  uint64_t v75;
  _BYTE v77[96];

  v7 = sub_20E4A39D4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1C440);
  v8 = sub_20E4A39D4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A192F0);
  v9 = sub_20E4A39D4();
  v10 = MEMORY[0x212BBDF90](&unk_20E4B0B90, a1);
  v11 = MEMORY[0x24BDEDBB8];
  *(_QWORD *)(v5 - 160) = v10;
  *(_QWORD *)(v5 - 152) = v11;
  v12 = MEMORY[0x24BDED308];
  v13 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v7, v5 - 160);
  v14 = sub_20E39D010(&qword_254A1C448, &qword_254A1C440, MEMORY[0x24BDEF370]);
  *(_QWORD *)(v5 - 176) = v13;
  *(_QWORD *)(v5 - 168) = v14;
  v15 = MEMORY[0x212BBDF90](v12, v8, v5 - 176);
  v16 = sub_20E39D010(&qword_254A192E8, &qword_254A192F0, MEMORY[0x24BDEFB48]);
  *(_QWORD *)(v5 - 192) = v15;
  *(_QWORD *)(v5 - 184) = v16;
  v17 = MEMORY[0x212BBDF90](v12, v9, v5 - 192);
  *(_QWORD *)(v5 - 384) = v9;
  *(_QWORD *)(v5 - 408) = v17;
  v18 = sub_20E4A46B8();
  *(_QWORD *)(v5 - 392) = *(_QWORD *)(v18 - 8);
  v19 = MEMORY[0x24BDAC7A8](v18);
  *(_QWORD *)(v5 - 400) = &v77[-v20];
  v21 = MEMORY[0x212BBDF90](MEMORY[0x24BDF43B0], v18, v19);
  v22 = sub_20E39F334(&qword_254A1C450, v1, MEMORY[0x24BDED858]);
  *(_QWORD *)(v5 - 216) = v18;
  *(_QWORD *)(v5 - 144) = v18;
  *(_QWORD *)(v5 - 136) = v2;
  *(_QWORD *)(v5 - 232) = v2;
  v23 = v4;
  *(_QWORD *)(v5 - 256) = v22;
  *(_QWORD *)(v5 - 248) = v21;
  *(_QWORD *)(v5 - 128) = v21;
  *(_QWORD *)(v5 - 120) = v22;
  v24 = MEMORY[0x212BBDF30](0, v5 - 144, MEMORY[0x24BDF22B8], 0);
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  *(_QWORD *)(v5 - 424) = &v77[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v27);
  *(_QWORD *)(v5 - 416) = &v77[-v28];
  v29 = sub_20E4A60E0();
  *(_QWORD *)(v5 - 296) = v29;
  v30 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v32 = &v77[-v31];
  *(_QWORD *)(v5 - 240) = v3;
  *(_QWORD *)(v5 - 272) = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v33);
  *(_QWORD *)(v5 - 280) = &v77[-((v34 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v35 = sub_20E4A60E0();
  v36 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v38 = &v77[-((v37 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v39);
  v41 = &v77[-v40];
  v42 = *(_QWORD *)(v23 + 8);
  v43 = *(_BYTE *)(v23 + 16);
  *(_QWORD *)(v5 - 144) = *(_QWORD *)v23;
  *(_QWORD *)(v5 - 136) = v42;
  *(_BYTE *)(v5 - 128) = v43;
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18408);
  MEMORY[0x212BBBCE0](v44);
  if (*(_BYTE *)(v5 - 193) == 1)
  {
    *(_QWORD *)(v5 - 456) = v35;
    *(_QWORD *)(v5 - 472) = v38;
    *(_QWORD *)(v5 - 448) = v36;
    *(_QWORD *)(v5 - 440) = v24;
    *(_QWORD *)(v5 - 464) = v41;
    *(_QWORD *)(v5 - 432) = v25;
    v45 = *(_QWORD *)(v5 - 296);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v30 + 16))(v32, v23 + *(int *)(*(_QWORD *)(v5 - 264) + 76), v45);
    v46 = *(_QWORD *)(v5 - 272);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, _QWORD))(v46 + 48))(v32, 1, *(_QWORD *)(v5 - 240)) != 1)
    {
      v51 = *(_QWORD *)(v5 - 240);
      (*(void (**)(_QWORD, _BYTE *))(v46 + 32))(*(_QWORD *)(v5 - 280), v32);
      v52 = *(_QWORD *)(v5 - 360);
      v53 = *(_QWORD *)(v5 - 368);
      (*(void (**)(uint64_t, uint64_t, _QWORD))(v52 + 16))(v53, v23, *(_QWORD *)(v5 - 264));
      v54 = (*(unsigned __int8 *)(v52 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
      v55 = (char *)swift_allocObject();
      v56 = *(_QWORD *)(v5 - 288);
      *((_QWORD *)v55 + 2) = v51;
      *((_QWORD *)v55 + 3) = v56;
      v57 = *(_QWORD *)(v5 - 352);
      v58 = *(_QWORD *)(v5 - 344);
      *((_QWORD *)v55 + 4) = v57;
      *((_QWORD *)v55 + 5) = v58;
      *(_QWORD *)(v5 - 296) = v23;
      v59 = *(_QWORD *)(v5 - 336);
      v60 = *(_QWORD *)(v5 - 328);
      *((_QWORD *)v55 + 6) = v59;
      *((_QWORD *)v55 + 7) = v60;
      v61 = *(_QWORD *)(v5 - 320);
      *((_QWORD *)v55 + 8) = v61;
      v62 = (*(uint64_t (**)(char *, uint64_t, _QWORD))(v52 + 32))(&v55[v54], v53, *(_QWORD *)(v5 - 264));
      MEMORY[0x24BDAC7A8](v62);
      v63 = *(_QWORD *)(v5 - 288);
      *(_QWORD *)&v77[-80] = v51;
      *(_QWORD *)&v77[-72] = v63;
      *(_QWORD *)&v77[-64] = v57;
      *(_QWORD *)&v77[-56] = v58;
      v64 = *(_QWORD *)(v5 - 216);
      *(_QWORD *)&v77[-48] = v59;
      *(_QWORD *)&v77[-40] = v60;
      v65 = *(_QWORD *)(v5 - 296);
      *(_QWORD *)&v77[-32] = v61;
      *(_QWORD *)&v77[-24] = v65;
      *(_QWORD *)&v77[-16] = *(_QWORD *)(v5 - 280);
      v66 = *(_QWORD *)(v5 - 400);
      sub_20E4A4694();
      v67 = *(_QWORD *)(v5 - 312);
      sub_20E4A3A4C();
      v68 = *(_QWORD *)(v5 - 424);
      v48 = *(_QWORD *)(v5 - 232);
      v50 = *(_QWORD *)(v5 - 256);
      v49 = *(_QWORD *)(v5 - 248);
      sub_20E4A422C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 304) + 8))(v67, v48);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 392) + 8))(v66, v64);
      *(_QWORD *)(v5 - 144) = v64;
      *(_QWORD *)(v5 - 136) = v48;
      *(_QWORD *)(v5 - 128) = v49;
      *(_QWORD *)(v5 - 120) = v50;
      OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
      v70 = *(_QWORD **)(v5 - 416);
      v71 = *(_QWORD *)(v5 - 440);
      sub_20E39D614(v70, v68, v71, OpaqueTypeConformance2);
      v72 = *(_QWORD *)(v5 - 432);
      v73 = *(void (**)(uint64_t, uint64_t))(v72 + 8);
      v73(v68, v71);
      v74 = *(_QWORD *)(v5 - 472);
      sub_20E39D618((uint64_t)v70, v71, v74);
      v73((uint64_t)v70, v71);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v72 + 56))(v74, 0, 1, v71);
      v75 = *(_QWORD *)(v5 - 448);
      v41 = *(_BYTE **)(v5 - 464);
      v35 = *(_QWORD *)(v5 - 456);
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v75 + 16))(v41, v74, v35);
      v47 = *(void (**)(uint64_t, uint64_t))(v75 + 8);
      v47(v74, v35);
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v5 - 272) + 8))(*(_QWORD *)(v5 - 280), *(_QWORD *)(v5 - 240));
      goto LABEL_6;
    }
    (*(void (**)(_BYTE *, uint64_t))(v30 + 8))(v32, v45);
    v25 = *(_QWORD *)(v5 - 432);
    v41 = *(_BYTE **)(v5 - 464);
    v24 = *(_QWORD *)(v5 - 440);
    v36 = *(_QWORD *)(v5 - 448);
    v38 = *(_BYTE **)(v5 - 472);
    v35 = *(_QWORD *)(v5 - 456);
  }
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v25 + 56))(v38, 1, 1, v24);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v36 + 16))(v41, v38, v35);
  v47 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
  v47((uint64_t)v38, v35);
  v48 = *(_QWORD *)(v5 - 232);
  v50 = *(_QWORD *)(v5 - 256);
  v49 = *(_QWORD *)(v5 - 248);
LABEL_6:
  *(_QWORD *)(v5 - 144) = *(_QWORD *)(v5 - 216);
  *(_QWORD *)(v5 - 136) = v48;
  *(_QWORD *)(v5 - 128) = v49;
  *(_QWORD *)(v5 - 120) = v50;
  *(_QWORD *)(v5 - 208) = swift_getOpaqueTypeConformance2();
  MEMORY[0x212BBDF90](MEMORY[0x24BDF5578], v35, v5 - 208);
  sub_20E39D618((uint64_t)v41, v35, *(_QWORD *)(v5 - 224));
  return ((uint64_t (*)(_BYTE *, uint64_t))v47)(v41, v35);
}

void sub_20E484620(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[12];
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v56 = a1;
  v57 = a2;
  v49 = a9;
  v16 = sub_20E4A3C50();
  v17 = *(_QWORD *)(v16 - 8);
  v45 = v16;
  v46 = v17;
  MEMORY[0x24BDAC7A8](v16);
  v42 = (char *)v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_20E4A3A10();
  v20 = *(_QWORD *)(v19 - 8);
  v43 = v19;
  v44 = v20;
  MEMORY[0x24BDAC7A8](v19);
  v40 = (char *)v34 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1C468);
  v23 = *(_QWORD *)(v22 - 8);
  v47 = v22;
  v48 = v23;
  MEMORY[0x24BDAC7A8](v22);
  v41 = (char *)v34 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_20E4A4874();
  v38 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v37 = (char *)v34 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_20E4A3A7C();
  MEMORY[0x24BDAC7A8](v35);
  v34[10] = (char *)v34 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1C470);
  MEMORY[0x24BDAC7A8](v36);
  v34[11] = (char *)v34 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34[4] = a3;
  v55 = *(_QWORD *)(a3 - 8);
  v28 = *(_QWORD *)(v55 + 64);
  MEMORY[0x24BDAC7A8](v29);
  v34[8] = (char *)v34 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v30);
  v34[5] = (char *)v34 - v31;
  MEMORY[0x24BDAC7A8](v32);
  v53 = a4;
  v54 = (char *)v34 - v33;
  v58 = a3;
  v59 = a4;
  v50 = a5;
  v51 = a8;
  v60 = a5;
  v61 = a6;
  v62 = a7;
  v63 = a8;
  v52 = a10;
  v64 = a10;
  type metadata accessor for _FlowToastView();
}

void sub_20E484884(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v9[49] = a1;
  v17 = *(_QWORD *)(a1 - 8);
  v9[38] = v17;
  v18 = *(_QWORD *)(v17 + 64);
  MEMORY[0x24BDAC7A8](a1);
  v9[6] = (char *)&a9 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v9[45] = (char *)&a9 - v20;
  MEMORY[0x24BDAC7A8](v21);
  v9[3] = (char *)&a9 - v22;
  *(_QWORD *)(v16 - 256) = v11;
  *(_QWORD *)(v16 - 248) = v14;
  *(_QWORD *)(v16 - 240) = v13;
  *(_QWORD *)(v16 - 232) = v12;
  v9[35] = v12;
  *(_QWORD *)(v16 - 224) = v10;
  *(_QWORD *)(v16 - 216) = v15;
  type metadata accessor for _FlowToastContentView();
}

uint64_t sub_20E48491C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t, double);
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  _OWORD *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  void (*v97)(uint64_t, uint64_t);
  uint64_t v99;
  _BYTE v100[32];

  v1[7] = a1;
  v1[9] = sub_20E4A39D4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1C440);
  v8 = sub_20E4A39D4();
  v1[21] = *(_QWORD *)(v8 - 8);
  v1[16] = v8;
  MEMORY[0x24BDAC7A8](v8);
  v1[46] = (uint64_t)&v100[-v9];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A192F0);
  v10 = sub_20E4A39D4();
  v1[20] = v10;
  v1[22] = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v1[18] = (uint64_t)&v100[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = MEMORY[0x24BDAC7A8](v12);
  v1[19] = (uint64_t)&v100[-v14];
  v15 = v1[38];
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t, double))(v15 + 16);
  v1[37] = (uint64_t)v16;
  v16(v2, v1[47], v1[49], v13);
  v17 = v1[43];
  v18 = v1[44];
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16);
  v1[36] = (uint64_t)v19;
  v20 = v1[4];
  v19(v17, v1[48], v20);
  v21 = *(unsigned __int8 *)(v15 + 80);
  v22 = (v21 + 72) & ~v21;
  v23 = *(unsigned __int8 *)(v18 + 80);
  v24 = (v5 + v23 + v22) & ~v23;
  v25 = v24;
  v1[1] = v24;
  v1[2] = v22;
  v1[33] = v21 | v23 | 7;
  v1[34] = v24 + v6;
  v26 = (char *)swift_allocObject();
  v27 = v20;
  v28 = v1[42];
  *((_QWORD *)v26 + 2) = v20;
  *((_QWORD *)v26 + 3) = v28;
  v29 = v1[38];
  v30 = v1[39];
  *((_QWORD *)v26 + 4) = v30;
  *((_QWORD *)v26 + 5) = v3;
  *v1 = v3;
  *((_QWORD *)v26 + 6) = v4;
  v32 = v1[40];
  v31 = v1[41];
  *((_QWORD *)v26 + 7) = v32;
  *((_QWORD *)v26 + 8) = v31;
  v33 = &v26[v22];
  v34 = *(void (**)(char *, uint64_t, uint64_t))(v29 + 32);
  v1[38] = (uint64_t)v34;
  v35 = v1[49];
  v34(v33, v1[3], v35);
  v36 = v1[43];
  v37 = *(void (**)(char *, uint64_t, uint64_t))(v1[44] + 32);
  v1[44] = (uint64_t)v37;
  v37(&v26[v25], v36, v27);
  ((void (*)(uint64_t, uint64_t, uint64_t))v1[37])(v1[45], v1[47], v35);
  v38 = v1[5];
  ((void (*)(uint64_t, uint64_t, uint64_t))v1[36])(v38, v1[48], v27);
  v39 = (char *)swift_allocObject();
  *((_QWORD *)v39 + 2) = v27;
  *((_QWORD *)v39 + 3) = v28;
  *((_QWORD *)v39 + 4) = v30;
  *((_QWORD *)v39 + 5) = v3;
  *((_QWORD *)v39 + 6) = v1[35];
  *((_QWORD *)v39 + 7) = v32;
  v40 = v1[2];
  *((_QWORD *)v39 + 8) = v31;
  v41 = v1[49];
  ((void (*)(char *, uint64_t, uint64_t))v1[38])(&v39[v40], v1[45], v41);
  v42 = v1[1];
  v43 = v38;
  v44 = (void (*)(char *, uint64_t, uint64_t))v1[44];
  v44(&v39[v42], v43, v27);
  v45 = v1[6];
  ((void (*)(uint64_t, uint64_t, uint64_t))v1[37])(v45, v1[47], v41);
  v46 = v1[8];
  ((void (*)(uint64_t, uint64_t, uint64_t))v1[36])(v46, v1[48], v27);
  v47 = (char *)swift_allocObject();
  v48 = v1[42];
  *((_QWORD *)v47 + 2) = v27;
  *((_QWORD *)v47 + 3) = v48;
  v49 = *v1;
  *((_QWORD *)v47 + 4) = v1[39];
  *((_QWORD *)v47 + 5) = v49;
  v50 = v1[40];
  *((_QWORD *)v47 + 6) = v1[35];
  *((_QWORD *)v47 + 7) = v50;
  *((_QWORD *)v47 + 8) = v1[41];
  ((void (*)(char *, uint64_t, uint64_t))v1[38])(&v47[v40], v45, v1[49]);
  v44(&v47[v42], v46, v27);
  *(_QWORD *)(v7 - 256) = sub_20E485594;
  *(_QWORD *)(v7 - 248) = v26;
  *(_QWORD *)(v7 - 240) = sub_20E4855A4;
  *(_QWORD *)(v7 - 232) = v39;
  *(_QWORD *)(v7 - 224) = sub_20E4856FC;
  *(_QWORD *)(v7 - 216) = v47;
  sub_20E4A48A4();
  v99 = MEMORY[0x212BBDF90](&unk_20E4B0B90, v1[7]);
  sub_20E4A443C();
  swift_release();
  swift_release();
  swift_release();
  v51 = *((_OWORD *)v1 + 45);
  *((_OWORD *)v1 + 34) = *((_OWORD *)v1 + 44);
  *((_OWORD *)v1 + 35) = v51;
  v52 = *((_OWORD *)v1 + 47);
  *((_OWORD *)v1 + 36) = *((_OWORD *)v1 + 46);
  *((_OWORD *)v1 + 37) = v52;
  v53 = *((_OWORD *)v1 + 41);
  *((_OWORD *)v1 + 30) = *((_OWORD *)v1 + 40);
  *((_OWORD *)v1 + 31) = v53;
  v54 = *((_OWORD *)v1 + 43);
  *((_OWORD *)v1 + 32) = *((_OWORD *)v1 + 42);
  *((_OWORD *)v1 + 33) = v54;
  v55 = *((_OWORD *)v1 + 39);
  *((_OWORD *)v1 + 28) = *((_OWORD *)v1 + 38);
  *((_OWORD *)v1 + 29) = v55;
  v56 = (_OWORD *)v1[10];
  v57 = (char *)v56 + *(int *)(v1[12] + 20);
  v58 = *MEMORY[0x24BDEEB68];
  v59 = sub_20E4A3CB0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 104))(v57, v58, v59);
  __asm { FMOV            V0.2D, #9.0 }
  *v56 = _Q0;
  v65 = v1[14];
  sub_20E4A485C();
  v66 = v1[11];
  sub_20E3E6A98((uint64_t)v56, v66);
  v67 = v1[13];
  v68 = v1[15];
  v69 = v65;
  v70 = v65;
  v71 = v1[17];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v68 + 16))(v66 + *(int *)(v67 + 52), v69, v71);
  *(_WORD *)(v66 + *(int *)(v67 + 56)) = 256;
  (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v70, v71);
  sub_20E3E6D20((uint64_t)v56);
  sub_20E4A48A4();
  v72 = MEMORY[0x24BDEDBB8];
  v1[54] = v99;
  v1[55] = v72;
  v73 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v1[9], v1 + 54);
  sub_20E39D010(&qword_254A1C478, &qword_254A1C470, MEMORY[0x24BDEB358]);
  sub_20E4A41F0();
  sub_20E39D1F8(v66, &qword_254A1C470);
  v74 = *((_OWORD *)v1 + 35);
  *(_OWORD *)(v7 - 160) = *((_OWORD *)v1 + 34);
  *(_OWORD *)(v7 - 144) = v74;
  v75 = *((_OWORD *)v1 + 37);
  *(_OWORD *)(v7 - 128) = *((_OWORD *)v1 + 36);
  *(_OWORD *)(v7 - 112) = v75;
  v76 = *((_OWORD *)v1 + 31);
  *(_OWORD *)(v7 - 224) = *((_OWORD *)v1 + 30);
  *(_OWORD *)(v7 - 208) = v76;
  v77 = *((_OWORD *)v1 + 33);
  *(_OWORD *)(v7 - 192) = *((_OWORD *)v1 + 32);
  *(_OWORD *)(v7 - 176) = v77;
  v78 = *((_OWORD *)v1 + 29);
  *(_OWORD *)(v7 - 256) = *((_OWORD *)v1 + 28);
  *(_OWORD *)(v7 - 240) = v78;
  sub_20E4857D0(v7 - 256);
  sub_20E4A4934();
  v79 = v1[23];
  sub_20E4A3A1C();
  v80 = v1[25];
  sub_20E4A3C44();
  v81 = sub_20E39F334(qword_254A1C480, (uint64_t (*)(uint64_t))MEMORY[0x24BDED3E0], MEMORY[0x24BDED3D8]);
  v82 = sub_20E39F334((unint64_t *)&qword_254A19200, (uint64_t (*)(uint64_t))MEMORY[0x24BDEE630], MEMORY[0x24BDEE620]);
  v83 = v1[24];
  v84 = v1[26];
  v85 = v1[28];
  sub_20E4A368C();
  (*(void (**)(uint64_t, uint64_t))(v1[29] + 8))(v80, v85);
  (*(void (**)(uint64_t, uint64_t))(v1[27] + 8))(v79, v84);
  v86 = sub_20E39D010(&qword_254A1C448, &qword_254A1C440, MEMORY[0x24BDEF370]);
  v1[52] = v73;
  v1[53] = v86;
  v87 = MEMORY[0x24BDED308];
  v88 = v1[16];
  v89 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v88, v1 + 52);
  v1[76] = v84;
  v1[77] = v85;
  v1[78] = v81;
  v1[79] = v82;
  swift_getOpaqueTypeConformance2();
  v90 = v1[18];
  v91 = v1[30];
  v92 = v1[46];
  sub_20E483808(v83);
  (*(void (**)(uint64_t, uint64_t))(v1[31] + 8))(v83, v91);
  (*(void (**)(uint64_t, uint64_t))(v1[21] + 8))(v92, v88);
  v93 = sub_20E39D010(&qword_254A192E8, &qword_254A192F0, MEMORY[0x24BDEFB48]);
  v1[50] = v89;
  v1[51] = v93;
  v94 = v1[20];
  v95 = MEMORY[0x212BBDF90](v87, v94, v1 + 50);
  v96 = (_QWORD *)v1[19];
  sub_20E39D614(v96, v90, v94, v95);
  v97 = *(void (**)(uint64_t, uint64_t))(v1[22] + 8);
  v97(v90, v94);
  sub_20E39D618((uint64_t)v96, v94, v1[32]);
  return ((uint64_t (*)(_QWORD *, uint64_t))v97)(v96, v94);
}

void sub_20E485058(uint64_t a1)
{
  uint64_t v1;

  MEMORY[0x24BDAC7A8](a1);
  MEMORY[0x24BDAC7A8](v1);
  type metadata accessor for _FlowToastView();
}

uint64_t sub_20E4850F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(_QWORD *, uint64_t);

  (*(void (**)(uint64_t))(v4 + *(int *)(a1 + 80)))(v7);
  sub_20E39D614(v6, v5, v1, v2);
  v9 = *(uint64_t (**)(_QWORD *, uint64_t))(v8 + 8);
  v9(v5, v1);
  sub_20E39D618((uint64_t)v6, v1, v3);
  return v9(v6, v1);
}

void sub_20E485170(uint64_t a1)
{
  uint64_t v1;

  MEMORY[0x24BDAC7A8](a1);
  MEMORY[0x24BDAC7A8](v1);
  type metadata accessor for _FlowToastView();
}

uint64_t sub_20E48520C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(_QWORD *, uint64_t);

  (*(void (**)(uint64_t))(v4 + *(int *)(a1 + 84)))(v7);
  sub_20E39D614(v6, v5, v1, v2);
  v9 = *(uint64_t (**)(_QWORD *, uint64_t))(v8 + 8);
  v9(v5, v1);
  sub_20E39D618((uint64_t)v6, v1, v3);
  return v9(v6, v1);
}

void sub_20E485288(uint64_t a1)
{
  uint64_t v1;

  MEMORY[0x24BDAC7A8](a1);
  MEMORY[0x24BDAC7A8](v1);
  type metadata accessor for _FlowToastView();
}

uint64_t sub_20E485320(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(_QWORD *, uint64_t);

  (*(void (**)(uint64_t))(v4 + *(int *)(a1 + 88)))(v7);
  sub_20E39D614(v6, v5, v1, v2);
  v9 = *(uint64_t (**)(_QWORD *, uint64_t))(v8 + 8);
  v9(v5, v1);
  sub_20E39D618((uint64_t)v6, v1, v3);
  return v9(v6, v1);
}

void type metadata accessor for _FlowToastContentView()
{
  JUMPOUT(0x212BBDEE8);
}

void sub_20E4853AC(uint64_t a1@<X8>)
{
  uint64_t *v1;

  sub_20E483D94(v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], a1);
}

void sub_20E4853C0()
{
  type metadata accessor for _FlowToastView();
}

uint64_t sub_20E485404(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  swift_release();
  swift_release();
  v4 = v1 + ((v3 + 72) & ~v3) + *(int *)(a1 + 76);
  v5 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t))(v5 + 48))(v4, 1))
    (*(void (**)(uint64_t))(v5 + 8))(v4);
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_20E4854D4()
{
  type metadata accessor for _FlowToastView();
}

uint64_t sub_20E485508()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 17) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A18408);
  return sub_20E4A4730();
}

void sub_20E48555C(uint64_t a1@<X8>)
{
  uint64_t *v1;

  sub_20E484620(v1[9], v1[10], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], a1, v1[8]);
}

void sub_20E485594()
{
  sub_20E485708();
}

void sub_20E4855A4()
{
  sub_20E485708();
}

void objectdestroy_2Tm_3()
{
  type metadata accessor for _FlowToastView();
}

uint64_t sub_20E4855FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v9;
  uint64_t v10;

  v3 = *(_QWORD *)(a1 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v10 = *(_QWORD *)(v3 + 64);
  v5 = *(_QWORD *)(v9 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  swift_release();
  swift_release();
  v7 = v1 + v4 + *(int *)(a1 + 76);
  if (!(*(unsigned int (**)(unint64_t, uint64_t))(v5 + 48))(v7, 1))
    (*(void (**)(unint64_t))(v5 + 8))(v7);
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(unint64_t))(v5 + 8))(v1 + ((v4 + v10 + v6) & ~v6));
  return swift_deallocObject();
}

void sub_20E4856FC()
{
  sub_20E485708();
}

void sub_20E485708()
{
  type metadata accessor for _FlowToastView();
}

uint64_t sub_20E48575C(uint64_t a1)
{
  uint64_t (*v1)(unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v10 = *(_QWORD *)(a1 - 8);
  v11 = (*(unsigned __int8 *)(v10 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v12 = *(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80);
  return v1(v2 + v11, v2 + ((v11 + *(_QWORD *)(v10 + 64) + v12) & ~v12), v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_20E4857D0(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_20E485818@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[2];

  v24 = a2;
  v22 = *(_QWORD *)(a1 + 16);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1C508);
  sub_20E4A39D4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1A230);
  sub_20E4A39D4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A199E0);
  sub_20E4A39D4();
  sub_20E4A39D4();
  sub_20E4A39D4();
  v21 = *(_QWORD *)(a1 + 24);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1B4F0);
  sub_20E4A39D4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1A238);
  sub_20E4A39D4();
  sub_20E4A39D4();
  sub_20E4A39D4();
  v20 = *(_QWORD *)(a1 + 32);
  sub_20E4A39D4();
  sub_20E4A39D4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A199F8);
  sub_20E4A39D4();
  sub_20E4A39D4();
  sub_20E4A39D4();
  swift_getTupleTypeMetadata3();
  v3 = sub_20E4A491C();
  MEMORY[0x212BBDF90](MEMORY[0x24BDF5428], v3);
  v4 = sub_20E4A470C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v19 - v6;
  v8 = sub_20E4A39D4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (uint64_t *)((char *)&v19 - v13);
  sub_20E4A3CC8();
  v25 = v22;
  v26 = v21;
  v27 = v20;
  v28 = *(_OWORD *)(a1 + 40);
  v29 = *(_QWORD *)(a1 + 56);
  v30 = v23;
  sub_20E4A4700();
  v15 = MEMORY[0x212BBDF90](MEMORY[0x24BDF4700], v4);
  sub_20E4A446C();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v31[0] = v15;
  v31[1] = MEMORY[0x24BDECC60];
  v16 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v8, v31);
  sub_20E39D614(v14, v11, v8, v16);
  v17 = *(void (**)(char *, uint64_t))(v9 + 8);
  v17(v11, v8);
  sub_20E39D618((uint64_t)v14, v8, v24);
  return ((uint64_t (*)(_QWORD *, uint64_t))v17)(v14, v8);
}

uint64_t sub_20E485BA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void (*a6)(_QWORD, _QWORD)@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  double v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  void (*v79)(_QWORD, _QWORD);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  _QWORD *v119;
  uint64_t v120;
  uint64_t v121;
  void (*v122)(uint64_t, uint64_t);
  _QWORD *v123;
  void (*v124)(uint64_t, uint64_t);
  uint64_t (*v125)(char *, uint64_t);
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  void (*v149)(_QWORD, _QWORD);
  char *v150;
  char *v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  _QWORD *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  void (*v175)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  _QWORD *v180;
  uint64_t v181;
  char *v182;
  _QWORD *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  _QWORD v187[3];
  uint64_t v188[3];
  _QWORD v189[2];
  _QWORD v190[2];
  _QWORD v191[2];
  _QWORD v192[2];
  _QWORD v193[2];
  _QWORD v194[2];
  _QWORD v195[2];
  _QWORD v196[2];
  _QWORD v197[2];
  _QWORD v198[2];
  _QWORD v199[2];
  _QWORD v200[2];
  _QWORD v201[5];

  v160 = a7;
  v149 = a6;
  v173 = a1;
  v174 = a5;
  v170 = a8;
  v157 = *(_QWORD *)(a4 - 8);
  v154 = a4;
  MEMORY[0x24BDAC7A8](a1);
  v156 = (char *)&v128 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1B4F0);
  v11 = sub_20E4A39D4();
  v158 = *(_QWORD *)(v11 - 8);
  v152 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v150 = (char *)&v128 - v12;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1A238);
  v13 = sub_20E4A39D4();
  v161 = *(_QWORD *)(v13 - 8);
  v155 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v151 = (char *)&v128 - v14;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A199F8);
  v15 = sub_20E4A39D4();
  v16 = *(_QWORD *)(v15 - 8);
  v162 = v15;
  v166 = v16;
  MEMORY[0x24BDAC7A8](v15);
  v153 = (char *)&v128 - v17;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1A230);
  v18 = sub_20E4A39D4();
  v168 = *(_QWORD *)(v18 - 8);
  v164 = v18;
  MEMORY[0x24BDAC7A8](v18);
  v159 = (char *)&v128 - v19;
  v167 = sub_20E4A39D4();
  v169 = *(_QWORD *)(v167 - 8);
  MEMORY[0x24BDAC7A8](v167);
  v163 = (char *)&v128 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v165 = (uint64_t *)((char *)&v128 - v22);
  v139 = a3;
  v143 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v138 = (char *)&v128 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_20E4A39D4();
  v145 = *(_QWORD *)(v25 - 8);
  v141 = v25;
  MEMORY[0x24BDAC7A8](v25);
  v137 = (char *)&v128 - v26;
  v27 = sub_20E4A39D4();
  v28 = *(_QWORD *)(v27 - 8);
  v144 = v27;
  v146 = v28;
  MEMORY[0x24BDAC7A8](v27);
  v140 = (char *)&v128 - v29;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A199E0);
  v30 = sub_20E4A39D4();
  v31 = *(_QWORD *)(v30 - 8);
  v147 = v30;
  v148 = v31;
  MEMORY[0x24BDAC7A8](v30);
  v142 = (char *)&v128 - v32;
  v178 = sub_20E4A39D4();
  v181 = *(_QWORD *)(v178 - 8);
  MEMORY[0x24BDAC7A8](v178);
  v177 = (char *)&v128 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v34);
  v180 = (uint64_t *)((char *)&v128 - v35);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1BC00);
  MEMORY[0x24BDAC7A8](v36);
  v171 = (char *)&v128 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19B68);
  MEMORY[0x24BDAC7A8](v38);
  v40 = (char *)&v128 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v176 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v43 = (char *)&v128 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1C508);
  v44 = sub_20E4A39D4();
  v131 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v46 = (char *)&v128 - v45;
  v47 = sub_20E4A39D4();
  v133 = *(_QWORD *)(v47 - 8);
  MEMORY[0x24BDAC7A8](v47);
  v129 = (char *)&v128 - v48;
  v49 = sub_20E4A39D4();
  v135 = *(_QWORD *)(v49 - 8);
  MEMORY[0x24BDAC7A8](v49);
  v130 = (char *)&v128 - v50;
  v51 = sub_20E4A39D4();
  v136 = *(_QWORD *)(v51 - 8);
  v134 = v51;
  MEMORY[0x24BDAC7A8](v51);
  v132 = (char *)&v128 - v52;
  v172 = sub_20E4A39D4();
  v179 = *(_QWORD *)(v172 - 8);
  MEMORY[0x24BDAC7A8](v172);
  v182 = (char *)&v128 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = MEMORY[0x24BDAC7A8](v54);
  v183 = (uint64_t *)((char *)&v128 - v56);
  (*(void (**)(double))v173)(v55);
  sub_20E4A3CF8();
  v57 = sub_20E4A3D28();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v40, 0, 1, v57);
  v58 = v174;
  sub_20E4A434C();
  sub_20E39D1F8((uint64_t)v40, &qword_254A19B68);
  (*(void (**)(char *, uint64_t))(v176 + 8))(v43, a2);
  v59 = sub_20E4A40F4();
  v175 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56);
  v176 = v59;
  v60 = (uint64_t)v171;
  v175(v171, 1, 1, v59);
  sub_20E4A410C();
  sub_20E39D1F8(v60, &qword_254A1BC00);
  v61 = sub_20E39D010(&qword_254A1C510, &qword_254A1C508, MEMORY[0x24BDF1028]);
  v201[2] = v58;
  v201[3] = v61;
  v62 = MEMORY[0x24BDED308];
  v63 = MEMORY[0x212BBDF90]();
  v64 = v129;
  sub_20E4A43F4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v131 + 8))(v46, v44);
  sub_20E4A4550();
  sub_20E4A4544();
  swift_release();
  v65 = MEMORY[0x24BDF1028];
  v174 = sub_20E39D010(&qword_254A1A2D0, &qword_254A1A230, MEMORY[0x24BDF1028]);
  v201[0] = v63;
  v201[1] = v174;
  v66 = MEMORY[0x212BBDF90](v62, v47, v201);
  v67 = v130;
  sub_20E4A4298();
  swift_release();
  (*(void (**)(char *, uint64_t))(v133 + 8))(v64, v47);
  sub_20E4A48A4();
  v133 = sub_20E39D010((unint64_t *)&qword_254A199D8, &qword_254A199E0, v65);
  v200[0] = v66;
  v200[1] = v133;
  v68 = v62;
  v127 = MEMORY[0x212BBDF90](v62, v49, v200);
  v69 = v132;
  sub_20E4A443C();
  (*(void (**)(char *, uint64_t))(v135 + 8))(v67, v49);
  sub_20E4A40A0();
  v199[0] = v127;
  v199[1] = MEMORY[0x24BDEDBB8];
  v70 = v134;
  v71 = MEMORY[0x212BBDF90](v68, v134, v199);
  v72 = v182;
  sub_20E4A4478();
  (*(void (**)(char *, uint64_t))(v136 + 8))(v69, v70);
  v198[0] = v71;
  v198[1] = MEMORY[0x24BDECC60];
  v73 = v172;
  v135 = MEMORY[0x212BBDF90](v68, v172, v198);
  sub_20E39D614(v183, v72, v73, v135);
  v136 = *(_QWORD *)(v179 + 8);
  v74 = ((uint64_t (*)(char *, uint64_t))v136)(v72, v73);
  v75 = v173;
  v76 = v138;
  (*(void (**)(uint64_t))(v173 + 16))(v74);
  v77 = v137;
  v78 = v139;
  v79 = v149;
  sub_20E4A43A0();
  (*(void (**)(char *, uint64_t))(v143 + 8))(v76, v78);
  v80 = v65;
  v143 = sub_20E39D010(&qword_254A1B508, &qword_254A1B4F0, v65);
  v197[0] = v79;
  v197[1] = v143;
  v81 = v141;
  v82 = MEMORY[0x212BBDF90](v68, v141, v197);
  v83 = v140;
  sub_20E4A44FC();
  (*(void (**)(char *, uint64_t))(v145 + 8))(v77, v81);
  sub_20E4A4550();
  v145 = sub_20E39D010(&qword_254A1A2D8, &qword_254A1A238, v80);
  v196[0] = v82;
  v196[1] = v145;
  v84 = v144;
  v85 = MEMORY[0x212BBDF90](v68, v144, v196);
  v86 = v142;
  sub_20E4A4298();
  swift_release();
  (*(void (**)(char *, uint64_t))(v146 + 8))(v83, v84);
  sub_20E4A4100();
  v87 = (uint64_t)v171;
  v175(v171, 1, 1, v176);
  sub_20E4A410C();
  sub_20E39D1F8(v87, &qword_254A1BC00);
  v195[0] = v85;
  v195[1] = v133;
  v88 = v68;
  v89 = v68;
  v90 = v147;
  v91 = MEMORY[0x212BBDF90](v89, v147, v195);
  v92 = v177;
  sub_20E4A43F4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v148 + 8))(v86, v90);
  v194[0] = v91;
  v194[1] = v174;
  v93 = v178;
  v148 = MEMORY[0x212BBDF90](v88, v178, v194);
  sub_20E39D614(v180, v92, v93, v148);
  v149 = *(void (**)(_QWORD, _QWORD))(v181 + 8);
  v94 = ((uint64_t (*)(char *, uint64_t))v149)(v92, v93);
  v95 = v156;
  (*(void (**)(uint64_t))(v75 + 32))(v94);
  v96 = v150;
  v97 = v154;
  v98 = v160;
  sub_20E4A43A0();
  (*(void (**)(char *, uint64_t))(v157 + 8))(v95, v97);
  v193[0] = v98;
  v193[1] = v143;
  v99 = v88;
  v100 = v152;
  v101 = MEMORY[0x212BBDF90](v88, v152, v193);
  v102 = v151;
  sub_20E4A44FC();
  (*(void (**)(char *, uint64_t))(v158 + 8))(v96, v100);
  LODWORD(v188[0]) = sub_20E4A3ECC();
  v192[0] = v101;
  v192[1] = v145;
  v103 = v155;
  v104 = MEMORY[0x212BBDF90](v99, v155, v192);
  v105 = v153;
  sub_20E4A42A4();
  (*(void (**)(char *, uint64_t))(v161 + 8))(v102, v103);
  v175((char *)v87, 1, 1, v176);
  sub_20E4A410C();
  sub_20E39D1F8(v87, &qword_254A1BC00);
  v106 = sub_20E39D010(&qword_254A199F0, &qword_254A199F8, MEMORY[0x24BDF0710]);
  v191[0] = v104;
  v191[1] = v106;
  v107 = v162;
  v108 = MEMORY[0x212BBDF90](v99, v162, v191);
  v109 = v159;
  sub_20E4A43F4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v166 + 8))(v105, v107);
  sub_20E4A4094();
  v190[0] = v108;
  v190[1] = v174;
  v110 = v164;
  v111 = MEMORY[0x212BBDF90](v99, v164, v190);
  v112 = (uint64_t)v163;
  sub_20E4A4478();
  (*(void (**)(char *, uint64_t))(v168 + 8))(v109, v110);
  v189[0] = v111;
  v189[1] = MEMORY[0x24BDECC60];
  v113 = v167;
  v114 = MEMORY[0x212BBDF90](v99, v167, v189);
  v115 = v165;
  sub_20E39D614(v165, v112, v113, v114);
  v116 = v169;
  v176 = *(_QWORD *)(v169 + 8);
  ((void (*)(uint64_t, uint64_t))v176)(v112, v113);
  v117 = (uint64_t)v182;
  v118 = v172;
  (*(void (**)(char *, _QWORD *, uint64_t))(v179 + 16))(v182, v183, v172);
  v188[0] = v117;
  v119 = v180;
  v121 = (uint64_t)v177;
  v120 = v178;
  (*(void (**)(char *, _QWORD *, uint64_t))(v181 + 16))(v177, v180, v178);
  v188[1] = v121;
  (*(void (**)(uint64_t, _QWORD *, uint64_t))(v116 + 16))(v112, v115, v113);
  v188[2] = v112;
  v187[0] = v118;
  v187[1] = v120;
  v187[2] = v113;
  v184 = v135;
  v185 = v148;
  v186 = v114;
  sub_20E39C54C(v188, 3uLL, (uint64_t)v187);
  v122 = (void (*)(uint64_t, uint64_t))v176;
  ((void (*)(_QWORD *, uint64_t))v176)(v115, v113);
  v123 = v119;
  v124 = v149;
  v149(v123, v120);
  v125 = (uint64_t (*)(char *, uint64_t))v136;
  ((void (*)(_QWORD *, uint64_t))v136)(v183, v118);
  v122(v112, v113);
  v124(v121, v120);
  return v125(v182, v118);
}

uint64_t sub_20E486A70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20E485818(a1, a2);
}

void sub_20E486AA8()
{
  type metadata accessor for _FlowToastContentView();
}

uint64_t sub_20E486AE8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[2];
  uint64_t v16;
  uint64_t OpaqueTypeConformance2;
  _QWORD v18[2];
  _QWORD v19[2];
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v2 = sub_20E4A39D4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1C440);
  v3 = sub_20E4A39D4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A192F0);
  v4 = sub_20E4A39D4();
  v20[0] = MEMORY[0x212BBDF90](&unk_20E4B0B90, a1);
  v20[1] = MEMORY[0x24BDEDBB8];
  v5 = MEMORY[0x24BDED308];
  v19[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v2, v20);
  v19[1] = sub_20E39D010(&qword_254A1C448, &qword_254A1C440, MEMORY[0x24BDEF370]);
  v18[0] = MEMORY[0x212BBDF90](v5, v3, v19);
  v18[1] = sub_20E39D010(&qword_254A192E8, &qword_254A192F0, MEMORY[0x24BDEFB48]);
  MEMORY[0x212BBDF90](v5, v4, v18);
  v6 = sub_20E4A46B8();
  v7 = sub_20E4A3A58();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x24BDED868];
  v9 = MEMORY[0x212BBDF90](MEMORY[0x24BDF43B0], v6);
  v10 = sub_20E39F334(&qword_254A1C450, v8, MEMORY[0x24BDED858]);
  v21 = v6;
  v22 = v7;
  v23 = v9;
  v24 = v10;
  MEMORY[0x212BBDF30](255, &v21, MEMORY[0x24BDF22B8], 0);
  v11 = sub_20E4A60E0();
  v12 = sub_20E4A4574();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1C458);
  v13 = sub_20E4A39D4();
  v21 = v6;
  v22 = v7;
  v23 = v9;
  v24 = v10;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v16 = MEMORY[0x212BBDF90](MEMORY[0x24BDF5578], v11, &OpaqueTypeConformance2);
  v15[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDF3F50], v12, &v16);
  v15[1] = sub_20E39D010(&qword_254A1C460, &qword_254A1C458, MEMORY[0x24BDEEC10]);
  return MEMORY[0x212BBDF90](v5, v13, v15);
}

uint64_t sub_20E486D38()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E486D74@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_20E485BA8(*(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(void (**)(_QWORD, _QWORD))(v1 + 48), *(_QWORD *)(v1 + 56), a1);
}

uint64_t sub_20E486D88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1C508);
  sub_20E4A39D4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1A230);
  sub_20E4A39D4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A199E0);
  sub_20E4A39D4();
  sub_20E4A39D4();
  sub_20E4A39D4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1B4F0);
  sub_20E4A39D4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1A238);
  sub_20E4A39D4();
  sub_20E4A39D4();
  sub_20E4A39D4();
  sub_20E4A39D4();
  sub_20E4A39D4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A199F8);
  sub_20E4A39D4();
  sub_20E4A39D4();
  sub_20E4A39D4();
  swift_getTupleTypeMetadata3();
  v0 = sub_20E4A491C();
  MEMORY[0x212BBDF90](MEMORY[0x24BDF5428], v0);
  v1 = sub_20E4A470C();
  v2 = sub_20E4A39D4();
  v4[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDF4700], v1);
  v4[1] = MEMORY[0x24BDECC60];
  return MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v2, v4);
}

uint64_t View.impressionableLayout<A>(_:scrollViewConfiguration:itemConfiguration:position:definesParentContext:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, char a4@<W4>, int a5@<W5>, uint64_t a6@<X6>, uint64_t a7@<X8>, uint64_t a8)
{
  char v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  uint64_t v18;
  int v19;
  uint64_t v20;

  v20 = a6;
  v19 = a5;
  v12 = a4 & 1;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CC8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20E4A5B40();
  v16 = sub_20E42F020();
  View.impressionableLayout<A>(for:impressions:scrollViewConfiguration:itemConfiguration:position:definesParentContext:)((uint64_t)&type metadata for ComponentModelViewID, (uint64_t)v15, a1, a2, a3, v12, v19, v20, a7, (uint64_t)&type metadata for ComponentModelViewID, a8, v16);
  return sub_20E39D1F8((uint64_t)v15, &qword_253ED0CC8);
}

uint64_t View.impressionableLayoutItem(_:configuration:position:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X2>, char a3@<W3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  char v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  unint64_t v15;
  _BYTE v18[40];

  v11 = a3 & 1;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CC8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = &v18[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  _s9JetEngine14ComponentModelP01_aB8_SwiftUIE6viewIDAD0cd4ViewH0Vvg_0();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20E4A5B40();
  v15 = sub_20E42F020();
  View.impressionableLayoutItem<A>(itemId:impressions:position:)((uint64_t)v18, (uint64_t)v14, a2, v11, a4, (uint64_t)&type metadata for ComponentModelViewID, a5, v15, a6);
  sub_20E39D1F8((uint64_t)v14, &qword_253ED0CC8);
  return sub_20E413908((uint64_t)v18);
}

uint64_t sub_20E4871E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t result;
  _QWORD v8[2];

  v0 = sub_20E4A6008();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_20E4A5FF0();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v4);
  v6 = sub_20E4A4970();
  MEMORY[0x24BDAC7A8](v6);
  sub_20E4366D8(0, (unint64_t *)&qword_253ED0020);
  sub_20E4A4964();
  v8[1] = MEMORY[0x24BEE4AF8];
  sub_20E39F334(&qword_254A1C750, v5, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1C758);
  sub_20E39D010(qword_254A1C760, &qword_254A1C758, MEMORY[0x24BEE12C8]);
  sub_20E4A6128();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BEE5750], v0);
  result = sub_20E4A602C();
  qword_254A1C518 = result;
  return result;
}

uint64_t View.impressionableLayoutItem<A>(itemId:impressions:position:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD v45[2];

  v43 = a7;
  v37 = a5;
  v38 = a8;
  v42 = a3;
  v39 = a1;
  v44 = a9;
  v41 = a4 & 1;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CC8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(a6 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for ImpressionableLayoutItemViewModifier(0, a6, a8, v19);
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v36 - v22;
  v24 = sub_20E4A39D4();
  v40 = *(_QWORD *)(v24 - 8);
  v25 = MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)&v36 - v26;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v15 + 16))(v18, v39, a6, v25);
  sub_20E3A5E20(a2, (uint64_t)v14, &qword_253ED0CC8);
  v28 = (uint64_t)v18;
  v29 = (uint64_t)v14;
  v30 = v42;
  v31 = v41;
  sub_20E4875DC(v28, v29, v42, v41, a6, v38, (uint64_t)v23);
  v32 = v43;
  MEMORY[0x212BBBA70](v23, v37, v20, v43);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  v33 = MEMORY[0x212BBDF90](&unk_20E4B0E28, v20);
  v45[0] = v32;
  v45[1] = v33;
  v34 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v24, v45);
  View.impressionableClickLocation(impressionMetrics:position:)(a2, v30, v31, v24, v34);
  return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v27, v24);
}

uint64_t sub_20E4875DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  int *v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;

  v14 = sub_20E4A33B0();
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (int *)type metadata accessor for ImpressionableLayoutItemViewModifier(0, a5, a6, v17);
  sub_20E4A33A4();
  sub_20E487A0C((uint64_t)v16);
  v19 = (uint64_t *)(a7 + v18[12]);
  *v19 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A20);
  swift_storeEnumTagMultiPayload();
  v20 = (uint64_t *)(a7 + v18[13]);
  *v20 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 32))(a7, a1, a5);
  result = sub_20E48E994(a2, a7 + v18[9]);
  v22 = a7 + v18[10];
  *(_QWORD *)v22 = a3;
  *(_BYTE *)(v22 + 8) = a4 & 1;
  return result;
}

uint64_t View.impressionableLayout<A>(for:impressions:scrollViewConfiguration:itemConfiguration:position:definesParentContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, int a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;

  v39 = a8;
  v37 = a7;
  v34 = a1;
  v35 = a5;
  v31 = a3;
  v32 = a4;
  v30 = a2;
  v36 = a9;
  v38 = a11;
  v33 = a6 & 1;
  v12 = sub_20E4A5450();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v29 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CC8);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v29 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for ImpressionableLayoutViewModifier(0, a10, a12, v22);
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v26 = (uint64_t *)((char *)&v29 - v25);
  sub_20E3A5E20(v30, (uint64_t)v21, &qword_253ED0CC8);
  v27 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v27(v18, v31, v12);
  v27(v15, v32, v12);
  sub_20E4878FC(v34, (uint64_t)v21, (uint64_t)v18, v35, v33, (uint64_t)v15, v37, a10, v26, a12);
  MEMORY[0x212BBBA70](v26, v39, v23, v38);
  return (*(uint64_t (**)(_QWORD *, uint64_t))(v24 + 8))(v26, v23);
}

uint64_t sub_20E4878FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10)
{
  int *v18;
  uint64_t *v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  char *v23;
  uint64_t result;

  v18 = (int *)type metadata accessor for ImpressionableLayoutViewModifier(0, a8, a10, a4);
  v19 = (_QWORD *)((char *)a9 + v18[14]);
  *v19 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
  swift_storeEnumTagMultiPayload();
  *a9 = a1;
  sub_20E48E994(a2, (uint64_t)a9 + v18[9]);
  v20 = (char *)a9 + v18[10];
  v21 = sub_20E4A5450();
  v22 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 32);
  v22(v20, a3, v21);
  v23 = (char *)a9 + v18[12];
  *(_QWORD *)v23 = a4;
  v23[8] = a5 & 1;
  result = ((uint64_t (*)(char *, uint64_t, uint64_t))v22)((char *)a9 + v18[11], a6, v21);
  *((_BYTE *)a9 + v18[13]) = a7;
  return result;
}

uint64_t sub_20E487A0C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  uint64_t v7;

  v2 = sub_20E4A33B0();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16))((char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2, v4);
  sub_20E4A4640();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

uint64_t sub_20E487AAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CE0);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_20E4A5384();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20E45C27C((uint64_t)v7);
  sub_20E4A5348();
  v8 = sub_20E4A33B0();
  MEMORY[0x212BBC958](v3, v8);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_20E487BB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  void (*v57)(char *, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  _QWORD v79[2];
  _QWORD v80[2];
  uint64_t v81;

  v4 = v3;
  v75 = a1;
  v78 = a3;
  v6 = sub_20E4A33B0();
  MEMORY[0x24BDAC7A8](v6);
  v77 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED2428);
  MEMORY[0x24BDAC7A8](v8);
  v76 = (uint64_t)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v72 = (char *)&v59 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CC8);
  MEMORY[0x24BDAC7A8](v12);
  v69 = (uint64_t)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a2 + 16);
  v66 = *(_QWORD *)(v14 - 8);
  v59 = v14;
  MEMORY[0x24BDAC7A8](v15);
  v64 = (char *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(a2 - 8);
  v18 = *(_QWORD *)(v17 + 64);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x212BBDF90](&unk_20E4B0E28, a2, v20);
  v22 = sub_20E4A3EA8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A183B8);
  v23 = sub_20E4A39D4();
  v24 = *(_QWORD *)(v23 - 8);
  v67 = v23;
  v73 = v24;
  MEMORY[0x24BDAC7A8](v23);
  v63 = (char *)&v59 - v25;
  v26 = v14;
  v27 = *(_QWORD *)(a2 + 24);
  v62 = v27;
  v68 = type metadata accessor for _ImpressionableLayoutItemViewModifier(255, v26, v27, v28);
  v71 = sub_20E4A39D4();
  v74 = *(_QWORD *)(v71 - 8);
  MEMORY[0x24BDAC7A8](v71);
  v65 = (char *)&v59 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v30);
  v70 = (uint64_t *)((char *)&v59 - v31);
  swift_getKeyPath();
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v21, v4, a2);
  v32 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v33 = swift_allocObject();
  v34 = v59;
  *(_QWORD *)(v33 + 16) = v59;
  *(_QWORD *)(v33 + 24) = v27;
  (*(void (**)(unint64_t, char *, uint64_t))(v17 + 32))(v33 + v32, v21, a2);
  v61 = MEMORY[0x212BBDF90](MEMORY[0x24BDEFB78], v22);
  sub_20E4A4388();
  swift_release();
  swift_release();
  v35 = (uint64_t)v64;
  v36 = v60;
  v37 = v34;
  (*(void (**)(char *, uint64_t, uint64_t))(v66 + 16))(v64, v60, v34);
  v38 = v69;
  sub_20E3A5E20(v36 + *(int *)(a2 + 36), v69, &qword_253ED0CC8);
  v39 = v36 + *(int *)(a2 + 40);
  v40 = *(void (**)(char *, uint64_t))v39;
  v41 = *(unsigned __int8 *)(v39 + 8);
  v42 = (uint64_t)v72;
  sub_20E487AAC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C68);
  v43 = (uint64_t)v77;
  sub_20E4A464C();
  v44 = v76;
  sub_20E45C2A8(v76);
  v81 = sub_20E488164(v35, v38, v40, v41, v42, v43, v44, v37, v62);
  v45 = sub_20E39D010(&qword_254A183B0, &qword_254A183B8, MEMORY[0x24BDF1248]);
  v80[0] = v61;
  v80[1] = v45;
  v46 = MEMORY[0x24BDED308];
  v47 = v67;
  v48 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v67, v80);
  v49 = v65;
  v50 = v68;
  v51 = v63;
  MEMORY[0x212BBBA70](&v81, v47, v68, v48);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v73 + 8))(v51, v47);
  v52 = MEMORY[0x212BBDF90](&unk_20E4B1058, v50);
  v79[0] = v48;
  v79[1] = v52;
  v53 = v46;
  v54 = v71;
  v55 = MEMORY[0x212BBDF90](v53, v71, v79);
  v56 = v70;
  sub_20E39D614(v70, v49, v54, v55);
  v57 = *(void (**)(char *, uint64_t))(v74 + 8);
  v57(v49, v54);
  sub_20E39D618((uint64_t)v56, v54, v78);
  return ((uint64_t (*)(_QWORD *, uint64_t))v57)(v56, v54);
}

uint64_t sub_20E4880DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;

  sub_20E39D1F8(a1, &qword_253ED2428);
  type metadata accessor for ImpressionableLayoutItemViewModifier(0, a3, a4, v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C68);
  sub_20E4A464C();
  v8 = sub_20E4A33B0();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a1, 0, 1, v8);
}

uint64_t sub_20E488164(uint64_t a1, uint64_t a2, void (*a3)(char *, uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(char *, uint64_t, uint64_t);
  int v38;
  char *v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  int v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t TupleTypeMetadata2;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t, char *, uint64_t);
  char *v60;
  uint64_t v61;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(char *, uint64_t);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;

  v72 = a1;
  v73 = a8;
  v79 = a7;
  v80 = a6;
  v76 = a3;
  v78 = a2;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CC8);
  MEMORY[0x24BDAC7A8](v10);
  v66 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = sub_20E4A5174();
  v77 = *(_QWORD *)(v70 - 8);
  MEMORY[0x24BDAC7A8](v70);
  v68 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED2428);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v63 - v17;
  v19 = sub_20E4A5204();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v63 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)&v63 - v24;
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)&v63 - v27;
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&v63 - v30;
  MEMORY[0x24BDAC7A8](v32);
  v69 = (char *)&v63 - v33;
  sub_20E4A51F8();
  sub_20E4A51C8();
  v64 = v20;
  v34 = *(void (**)(char *, uint64_t))(v20 + 8);
  v67 = v19;
  v76 = v34;
  v34(v22, v19);
  v71 = a5;
  sub_20E3A5E20(a5, (uint64_t)v18, &qword_253ED2428);
  v35 = sub_20E4A33B0();
  v36 = *(_QWORD *)(v35 - 8);
  v37 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v36 + 48);
  v38 = v37(v18, 1, v35);
  v75 = v36;
  if (v38 == 1)
  {
    sub_20E39D1F8((uint64_t)v18, &qword_253ED2428);
  }
  else
  {
    sub_20E4A3398();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v18, v35);
  }
  v65 = a9;
  sub_20E4A51B0();
  swift_bridgeObjectRelease();
  v39 = v25;
  v40 = v67;
  v41 = v76;
  v76(v39, v67);
  sub_20E4A3398();
  sub_20E4A51D4();
  swift_bridgeObjectRelease();
  v41(v28, v40);
  sub_20E3A5E20(v79, (uint64_t)v15, &qword_253ED2428);
  v42 = v37(v15, 1, v35);
  v43 = v78;
  v74 = v35;
  if (v42 == 1)
  {
    sub_20E39D1F8((uint64_t)v15, &qword_253ED2428);
  }
  else
  {
    sub_20E4A3398();
    (*(void (**)(char *, uint64_t))(v75 + 8))(v15, v74);
  }
  v44 = v69;
  v45 = (uint64_t)v66;
  sub_20E4A51E0();
  swift_bridgeObjectRelease();
  v41(v31, v40);
  sub_20E3A5E20(v43, v45, &qword_253ED0CC8);
  v46 = v43;
  v47 = v77;
  v48 = v70;
  v49 = v44;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v77 + 48))(v45, 1, v70) == 1)
  {
    sub_20E39D1F8(v45, &qword_253ED0CC8);
    type metadata accessor for LayoutItemImpressionInformation();
    v50 = v73;
    swift_getTupleTypeMetadata2();
    sub_20E4A5D68();
    v51 = sub_20E4A5B70();
    sub_20E39D1F8(v79, &qword_253ED2428);
    (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v80, v74);
    sub_20E39D1F8(v71, &qword_253ED2428);
    sub_20E39D1F8(v46, &qword_253ED0CC8);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 8))(v72, v50);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v47 + 32))(v68, v45, v48);
    v52 = type metadata accessor for LayoutItemImpressionInformation();
    v53 = v73;
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    sub_20E4A6320();
    swift_allocObject();
    v55 = sub_20E4A5D44();
    v57 = v56 + *(int *)(TupleTypeMetadata2 + 48);
    v69 = *(char **)(v53 - 8);
    v58 = v72;
    (*((void (**)(uint64_t, uint64_t, uint64_t))v69 + 2))(v56, v72, v53);
    v59 = *(void (**)(uint64_t, char *, uint64_t))(v47 + 16);
    v60 = v68;
    v59(v57, v68, v48);
    (*(void (**)(uint64_t, char *, uint64_t))(v64 + 16))(v57 + *(int *)(v52 + 20), v49, v40);
    sub_20E441258(v55);
    v51 = sub_20E4A5B70();
    sub_20E39D1F8(v79, &qword_253ED2428);
    (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v80, v74);
    sub_20E39D1F8(v71, &qword_253ED2428);
    sub_20E39D1F8(v78, &qword_253ED0CC8);
    v61 = v58;
    v41 = v76;
    (*((void (**)(uint64_t, uint64_t))v69 + 1))(v61, v53);
    (*(void (**)(char *, uint64_t))(v77 + 8))(v60, v48);
  }
  v41(v49, v40);
  return v51;
}

uint64_t sub_20E488754@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v25;
  _QWORD v26[3];

  v25 = a4;
  v7 = type metadata accessor for _ImpressionableLayoutItemViewModifier(255, a2, a3, a3);
  MEMORY[0x212BBDF90](&unk_20E4B1058, v7);
  v8 = sub_20E4A3EA8();
  v10 = type metadata accessor for ImpressionPreferenceKey(255, a2, a3, v9);
  MEMORY[0x212BBDF90](&unk_20E4B10D8, v10);
  v11 = sub_20E4A3FC8();
  v12 = sub_20E4A39D4();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v26[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (_QWORD *)((char *)&v26[-1] - v18);
  v26[2] = a1;
  v20 = MEMORY[0x212BBDF90](MEMORY[0x24BDEFB78], v8, v17);
  sub_20E4A4214();
  v21 = MEMORY[0x212BBDF90](MEMORY[0x24BDF0B90], v11);
  v26[0] = v20;
  v26[1] = v21;
  v22 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v12, v26);
  sub_20E39D614(v19, v15, v12, v22);
  v23 = *(void (**)(char *, uint64_t))(v13 + 8);
  v23(v15, v12);
  sub_20E39D618((uint64_t)v19, v12, v25);
  return ((uint64_t (*)(_QWORD *, uint64_t))v23)(v19, v12);
}

uint64_t sub_20E488920@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_20E488754(*v2, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a2);
}

uint64_t sub_20E488930@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(_BYTE *, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(_BYTE *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  _BYTE *v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE *v45;
  uint64_t v46;
  uint64_t v47;
  _BYTE *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  void (*v52)(_BYTE *, uint64_t);
  _BYTE v54[4];
  int v55;
  _BYTE *v56;
  uint64_t v57;
  _BYTE *v58;
  uint64_t v59;
  _BYTE *v60;
  _BYTE *v61;
  uint64_t v62;
  _BYTE *v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  _BYTE *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _BYTE *v74;
  uint64_t v75;
  _BYTE *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD v80[2];
  _QWORD v81[3];

  v78 = a1;
  v79 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0D18);
  MEMORY[0x24BDAC7A8](v5);
  v76 = &v54[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CE8);
  v75 = *(_QWORD *)(v77 - 8);
  MEMORY[0x24BDAC7A8](v77);
  v74 = &v54[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CF0);
  v72 = *(_QWORD *)(v8 - 8);
  v73 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = &v54[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v70 = sub_20E4A5384();
  v67 = *(_QWORD *)(v70 - 8);
  MEMORY[0x24BDAC7A8](v70);
  v68 = &v54[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v12);
  v14 = &v54[-v13];
  v15 = sub_20E4A5450();
  v59 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v17 = &v54[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v56 = v17;
  MEMORY[0x24BDAC7A8](v18);
  v20 = &v54[-v19];
  v58 = &v54[-v19];
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CC8);
  MEMORY[0x24BDAC7A8](v21);
  v23 = &v54[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v60 = v23;
  v24 = *(_QWORD *)(a2 + 24);
  v66 = *(_QWORD *)(a2 + 16);
  v64 = v24;
  v26 = type metadata accessor for _ImpressionableLayoutViewModifier(0, v66, v24, v25);
  v71 = *(_QWORD *)(v26 - 8);
  v27 = MEMORY[0x24BDAC7A8](v26);
  v63 = &v54[-v28];
  MEMORY[0x212BBDF90](&unk_20E4B0DD8, a2, v27);
  v62 = sub_20E4A3EA8();
  v29 = sub_20E4A39D4();
  v69 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v61 = &v54[-((v30 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v31);
  v65 = &v54[-v32];
  sub_20E3A5E20(v3 + *(int *)(a2 + 36), (uint64_t)v23, &qword_253ED0CC8);
  v33 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v59 + 16);
  v33(v20, v3 + *(int *)(a2 + 40), v15);
  v34 = *(int *)(a2 + 44);
  v35 = v3 + *(int *)(a2 + 48);
  v57 = *(_QWORD *)v35;
  LODWORD(v59) = *(unsigned __int8 *)(v35 + 8);
  v33(v17, v3 + v34, v15);
  v55 = *(unsigned __int8 *)(v3 + *(int *)(a2 + 52));
  sub_20E45C27C((uint64_t)v14);
  sub_20E4A5330();
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CD0);
  MEMORY[0x212BBC94C](v81, v10, v36);
  (*(void (**)(_BYTE *, uint64_t))(v72 + 8))(v10, v73);
  v37 = *(void (**)(_BYTE *, uint64_t))(v67 + 8);
  v38 = v70;
  v37(v14, v70);
  v39 = v81[0];
  v40 = v81[1];
  v41 = v68;
  sub_20E45C27C((uint64_t)v68);
  v42 = v74;
  sub_20E4A5324();
  v43 = sub_20E4A56E4();
  v44 = (uint64_t)v76;
  MEMORY[0x212BBC958](v42, v43);
  (*(void (**)(_BYTE *, uint64_t))(v75 + 8))(v42, v77);
  v37(v41, v38);
  v45 = v63;
  sub_20E488E78((uint64_t)v60, (uint64_t)v58, v57, v59, (uint64_t)v56, v55, v39, (uint64_t)v63, v40, v44, v66, v64);
  v46 = v62;
  v47 = MEMORY[0x212BBDF90](MEMORY[0x24BDEFB78], v62);
  v48 = v61;
  MEMORY[0x212BBBA70](v45, v46, v26, v47);
  (*(void (**)(_BYTE *, uint64_t))(v71 + 8))(v45, v26);
  v49 = MEMORY[0x212BBDF90](&unk_20E4B1008, v26);
  v80[0] = v47;
  v80[1] = v49;
  v50 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v29, v80);
  v51 = v65;
  sub_20E39D614(v65, v48, v29, v50);
  v52 = *(void (**)(_BYTE *, uint64_t))(v69 + 8);
  v52(v48, v29);
  sub_20E39D618((uint64_t)v51, v29, v79);
  return ((uint64_t (*)(_QWORD *, uint64_t))v52)(v51, v29);
}

uint64_t sub_20E488E78@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, char a4@<W4>, uint64_t a5@<X5>, char a6@<W6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  _QWORD *v28;

  v16 = (int *)type metadata accessor for _ImpressionableLayoutViewModifier(0, a11, a12, a3);
  v17 = a8 + v16[14];
  v18 = sub_20E4A56E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  v19 = a8 + v16[15];
  *(_QWORD *)v19 = swift_getKeyPath();
  *(_BYTE *)(v19 + 8) = 0;
  v20 = (uint64_t *)(a8 + v16[16]);
  type metadata accessor for LayoutItemImpressionInformation();
  swift_getTupleTypeMetadata2();
  sub_20E4A5D68();
  sub_20E4A5B70();
  *v20 = sub_20E489050();
  v20[1] = v21;
  v22 = (uint64_t *)(a8 + v16[17]);
  sub_20E4A5B4C();
  *v22 = sub_20E4890AC();
  v22[1] = v23;
  sub_20E48E994(a1, a8);
  v24 = a8 + v16[9];
  v25 = sub_20E4A5450();
  v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 32);
  v26(v24, a2, v25);
  v27 = a8 + v16[10];
  *(_QWORD *)v27 = a3;
  *(_BYTE *)(v27 + 8) = a4 & 1;
  v26(a8 + v16[11], a5, v25);
  *(_BYTE *)(a8 + v16[12]) = a6;
  v28 = (_QWORD *)(a8 + v16[13]);
  *v28 = a7;
  v28[1] = a9;
  return sub_20E48E9DC(a10, v17);
}

uint64_t sub_20E489050()
{
  uint64_t v1;

  type metadata accessor for LayoutItemImpressionInformation();
  sub_20E4A5B88();
  sub_20E4A4640();
  return v1;
}

uint64_t sub_20E4890AC()
{
  uint64_t v1;

  sub_20E4A5F0C();
  sub_20E4A4640();
  return v1;
}

void sub_20E4890E4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  _QWORD v7[40];
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v7[37] = a1;
  v7[36] = a2;
  MEMORY[0x212BBDF90](&unk_20E4B1008);
  v2 = sub_20E4A3EA8();
  v7[9] = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v7[8] = (char *)v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7[4] = (char *)v7 - v6;
  v8 = MEMORY[0x212BBDF90](MEMORY[0x24BDEFB78], v2, v5);
  v9 = v2;
  v10 = MEMORY[0x24BDF1FA8];
  v7[39] = v2;
  v11 = v8;
  v12 = MEMORY[0x24BDF1F80];
  type metadata accessor for _RequirementFailureView();
}

uint64_t sub_20E4891E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE *v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _BYTE *v62;
  uint64_t v63;
  int *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t (*v85)(uint64_t, uint64_t, uint64_t);
  uint64_t v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t (*v100)(_QWORD);
  uint64_t v101;
  uint64_t v102;
  uint64_t (*v103)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  uint64_t v115;
  void (*v116)(uint64_t, uint64_t);
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  int v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  void (*v133)(uint64_t, uint64_t);
  char v134;
  uint64_t v135;
  uint64_t OpaqueTypeConformance2;
  uint64_t v137;
  void (*v138)(uint64_t, uint64_t);
  _QWORD *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  _BYTE v147[112];

  *(_QWORD *)(v2 - 336) = a1;
  *(_QWORD *)(v2 - 664) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v2 - 656) = &v147[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v4);
  *(_QWORD *)(v2 - 672) = &v147[-v5];
  v6 = sub_20E4A56E4();
  *(_QWORD *)(v2 - 576) = v6;
  *(_QWORD *)(v2 - 616) = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  *(_QWORD *)(v2 - 648) = &v147[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0D28);
  *(_QWORD *)(v2 - 624) = v8;
  MEMORY[0x24BDAC7A8](v8);
  *(_QWORD *)(v2 - 592) = &v147[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0D18);
  MEMORY[0x24BDAC7A8](v10);
  *(_QWORD *)(v2 - 632) = &v147[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v12);
  *(_QWORD *)(v2 - 448) = &v147[-v13];
  MEMORY[0x24BDAC7A8](v14);
  *(_QWORD *)(v2 - 584) = &v147[-v15];
  type metadata accessor for ImpressionableViewModifier(255);
  v16 = sub_20E4A39D4();
  type metadata accessor for ClickLocationViewModifier();
  v17 = sub_20E4A39D4();
  v18 = sub_20E4A39D4();
  type metadata accessor for _OnScenePhaseChange(255);
  *(_QWORD *)(v2 - 352) = sub_20E4A39D4();
  v19 = sub_20E4A3E00();
  *(_QWORD *)(v2 - 368) = v1;
  v21 = *(_QWORD *)(v1 + 16);
  v20 = *(_QWORD *)(v1 + 24);
  v23 = type metadata accessor for ImpressionPreferenceKey(255, v21, v20, v22);
  v24 = MEMORY[0x212BBDF90](&unk_20E4B10D8, v23);
  type metadata accessor for LayoutItemImpressionInformation();
  v25 = sub_20E4A5B88();
  *(_QWORD *)(v2 - 144) = sub_20E39F334(&qword_254A1C740, (uint64_t (*)(uint64_t))type metadata accessor for LayoutItemImpressionInformation, (uint64_t)&unk_20E4B0FE0);
  v26 = MEMORY[0x212BBDF90](MEMORY[0x24BEE04D0], v25, v2 - 144);
  *(_QWORD *)(v2 - 488) = v23;
  *(_QWORD *)(v2 - 480) = v24;
  *(_QWORD *)(v2 - 496) = v26;
  v27 = sub_20E4A3F98();
  v28 = sub_20E4A39D4();
  v29 = sub_20E39F334(&qword_254A18220, type metadata accessor for ImpressionableViewModifier, (uint64_t)&unk_20E4A73D8);
  *(_QWORD *)(v2 - 160) = *(_QWORD *)(v2 - 328);
  *(_QWORD *)(v2 - 152) = v29;
  v30 = MEMORY[0x24BDED308];
  v31 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v16, v2 - 160);
  v32 = sub_20E39F334(&qword_253ED07E8, (uint64_t (*)(uint64_t))type metadata accessor for ClickLocationViewModifier, (uint64_t)&unk_20E4A953C);
  *(_QWORD *)(v2 - 176) = v31;
  *(_QWORD *)(v2 - 168) = v32;
  v33 = MEMORY[0x212BBDF90](v30, v17, v2 - 176);
  v34 = sub_20E3A50B4();
  *(_QWORD *)(v2 - 192) = v33;
  *(_QWORD *)(v2 - 184) = v34;
  v35 = MEMORY[0x212BBDF90](v30, v18, v2 - 192);
  v36 = sub_20E39F334(&qword_253ED21C0, type metadata accessor for _OnScenePhaseChange, (uint64_t)&unk_20E4AAC48);
  *(_QWORD *)(v2 - 560) = v33;
  *(_QWORD *)(v2 - 208) = v33;
  *(_QWORD *)(v2 - 200) = v36;
  v37 = MEMORY[0x212BBDF90](v30, *(_QWORD *)(v2 - 352), v2 - 208);
  *(_QWORD *)(v2 - 224) = v35;
  *(_QWORD *)(v2 - 216) = v37;
  v38 = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v19, v2 - 224);
  v39 = MEMORY[0x212BBDF90](MEMORY[0x24BDF09B0], v27);
  *(_QWORD *)(v2 - 240) = v38;
  *(_QWORD *)(v2 - 232) = v39;
  v40 = MEMORY[0x212BBDF90](v30, v28, v2 - 240);
  *(_QWORD *)(v2 - 136) = v28;
  *(_QWORD *)(v2 - 128) = v21;
  *(_QWORD *)(v2 - 344) = v21;
  *(_QWORD *)(v2 - 352) = v40;
  *(_QWORD *)(v2 - 120) = v40;
  *(_QWORD *)(v2 - 112) = v20;
  *(_QWORD *)(v2 - 440) = v20;
  v41 = MEMORY[0x212BBDF30](255, v2 - 136, MEMORY[0x24BDF33D8], 0);
  v42 = *(_QWORD *)(v2 - 360);
  v43 = sub_20E4A3E00();
  *(_QWORD *)(v2 - 456) = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  *(_QWORD *)(v2 - 464) = &v147[-v44];
  v45 = swift_checkMetadataState();
  *(_QWORD *)(v2 - 568) = v45;
  *(_QWORD *)(v2 - 552) = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45);
  v47 = &v147[-v46];
  v48 = swift_checkMetadataState();
  *(_QWORD *)(v2 - 536) = v48;
  *(_QWORD *)(v2 - 544) = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v50 = &v147[-v49];
  v51 = swift_checkMetadataState();
  *(_QWORD *)(v2 - 416) = v51;
  *(_QWORD *)(v2 - 528) = *(_QWORD *)(v51 - 8);
  MEMORY[0x24BDAC7A8](v51);
  v53 = &v147[-v52];
  *(_QWORD *)(v2 - 472) = v41;
  v54 = *(_QWORD *)(v41 - 8);
  v55 = *(_QWORD *)(v2 - 432);
  *(_QWORD *)(v2 - 512) = v54;
  MEMORY[0x24BDAC7A8](v56);
  *(_QWORD *)(v2 - 504) = &v147[-((v57 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v58);
  *(_QWORD *)(v2 - 520) = &v147[-v59];
  MEMORY[0x24BDAC7A8](v60);
  v62 = &v147[-v61];
  v63 = sub_20E4A3E00();
  *(_QWORD *)(v2 - 408) = *(_QWORD *)(v63 - 8);
  MEMORY[0x24BDAC7A8](v63);
  *(_QWORD *)(v2 - 424) = &v147[-v65];
  v66 = *(_QWORD *)(v55 + v64[13]);
  *(_QWORD *)(v2 - 392) = v43;
  *(_QWORD *)(v2 - 400) = v67;
  if (!v66)
  {
    v78 = *(_QWORD *)(v2 - 632);
    v79 = *(_QWORD *)(v2 - 584);
    sub_20E3A5E20(v55 + v64[14], v79, &qword_253ED0D18);
    v80 = *(_QWORD *)(v2 - 616);
    v81 = *(_QWORD *)(v2 - 448);
    v82 = *(_QWORD *)(v2 - 576);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v80 + 104))(v81, *MEMORY[0x24BE5DCD8], v82);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v80 + 56))(v81, 0, 1, v82);
    v83 = *(_QWORD *)(v2 - 592);
    v84 = v83 + *(int *)(*(_QWORD *)(v2 - 624) + 48);
    sub_20E3A5E20(v79, v83, &qword_253ED0D18);
    sub_20E3A5E20(v81, v84, &qword_253ED0D18);
    v85 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v80 + 48);
    if (v85(v83, 1, v82) == 1)
    {
      v86 = v42;
      sub_20E39D1F8(*(_QWORD *)(v2 - 448), &qword_253ED0D18);
      sub_20E39D1F8(v79, &qword_253ED0D18);
      v87 = v85(v84, 1, v82);
      v88 = *(_QWORD *)(v2 - 328);
      v89 = *(_QWORD *)(v2 - 344);
      v90 = *(_QWORD *)(v2 - 440);
      v91 = *(_QWORD *)(v2 - 352);
      v92 = *(_QWORD **)(v2 - 640);
      v93 = *(_QWORD *)(v2 - 376);
      v94 = *(_QWORD *)(v2 - 608);
      if (v87 == 1)
      {
        sub_20E39D1F8(v83, &qword_253ED0D18);
        goto LABEL_13;
      }
    }
    else
    {
      v126 = v80;
      v127 = v78;
      sub_20E3A5E20(v83, v78, &qword_253ED0D18);
      v128 = v85(v84, 1, v82);
      v88 = *(_QWORD *)(v2 - 328);
      v89 = *(_QWORD *)(v2 - 344);
      v94 = *(_QWORD *)(v2 - 608);
      if (v128 != 1)
      {
        v130 = v127;
        v86 = v42;
        v131 = *(_QWORD *)(v2 - 648);
        v132 = *(_QWORD *)(v2 - 576);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v126 + 32))(v131, v84, v132);
        sub_20E39F334(&qword_254A183E8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5DCE8], MEMORY[0x24BE5DCF8]);
        *(_DWORD *)(v2 - 368) = sub_20E4A5C0C();
        v133 = *(void (**)(uint64_t, uint64_t))(v126 + 8);
        v133(v131, v132);
        sub_20E39D1F8(*(_QWORD *)(v2 - 448), &qword_253ED0D18);
        sub_20E39D1F8(*(_QWORD *)(v2 - 584), &qword_253ED0D18);
        v133(v130, v132);
        sub_20E39D1F8(*(_QWORD *)(v2 - 592), &qword_253ED0D18);
        v92 = *(_QWORD **)(v2 - 640);
        v93 = *(_QWORD *)(v2 - 376);
        v90 = *(_QWORD *)(v2 - 440);
        v91 = *(_QWORD *)(v2 - 352);
        if ((*(_DWORD *)(v2 - 368) & 1) != 0)
        {
LABEL_13:
          sub_20E4366D8(0, (unint64_t *)&qword_253ED0D50);
          v134 = sub_20E4A60A4();
          v93 = *(_QWORD *)(v2 - 376);
          if ((v134 & 1) == 0)
          {
            (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v2 - 600) + 16))(v92, *(_QWORD *)(v2 - 376), v86);
            _RequirementFailureView.init<>(_:_:)((uint64_t)v92, 0xD00000000000002CLL, 0x800000020E4CA860, v86, *(_QWORD *)(v2 - 656));
          }
        }
LABEL_14:
        sub_20E39D614(v92, v93, v86, v88);
        sub_20E39D618((uint64_t)v92, v86, v94);
        v135 = *(_QWORD *)(v2 - 416);
        *(_QWORD *)(v2 - 136) = v135;
        *(_QWORD *)(v2 - 128) = v89;
        *(_QWORD *)(v2 - 120) = v91;
        *(_QWORD *)(v2 - 112) = v90;
        v112 = v90;
        OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
        v118 = *(_QWORD *)(v2 - 336);
        v137 = MEMORY[0x212BBDF90](&protocol conformance descriptor for _RequirementFailureView<A, B>, v118);
        *(_QWORD *)(v2 - 256) = OpaqueTypeConformance2;
        *(_QWORD *)(v2 - 248) = v137;
        v121 = *(_QWORD *)(v2 - 392);
        MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v121, v2 - 256);
        v122 = *(_QWORD *)(v2 - 424);
        sub_20E39CBE0(v94, v121, v86);
        v138 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 600) + 8);
        v138(v94, v86);
        v139 = v92;
        v125 = v88;
        v110 = v135;
        v138((uint64_t)v139, v86);
        goto LABEL_16;
      }
      v129 = v127;
      v86 = v42;
      sub_20E39D1F8(*(_QWORD *)(v2 - 448), &qword_253ED0D18);
      sub_20E39D1F8(*(_QWORD *)(v2 - 584), &qword_253ED0D18);
      (*(void (**)(uint64_t, _QWORD))(v126 + 8))(v129, *(_QWORD *)(v2 - 576));
      v92 = *(_QWORD **)(v2 - 640);
      v93 = *(_QWORD *)(v2 - 376);
      v90 = *(_QWORD *)(v2 - 440);
      v91 = *(_QWORD *)(v2 - 352);
    }
    sub_20E39D1F8(v83, &qword_253ED0D28);
    goto LABEL_14;
  }
  *(_QWORD *)(v2 - 576) = v38;
  *(_QWORD *)(v2 - 448) = v62;
  v68 = v64;
  v69 = v42;
  v70 = v55;
  View.impressionable(_:configuration:position:definesParentContext:)(v55, v55 + v64[9], *(_QWORD *)(v55 + v64[10]), *(unsigned __int8 *)(v55 + v64[10] + 8), *(unsigned __int8 *)(v55 + v64[12]), v69, *(_QWORD *)(v2 - 328), (uint64_t)v47);
  v71 = (uint64_t *)(v55 + v68[15]);
  v72 = *v71;
  v73 = *((unsigned __int8 *)v71 + 8);
  j__swift_retain(*v71);
  v74 = sub_20E45C2DC(v72, v73);
  j__swift_release(v72, v73);
  v76 = v70;
  if (v74)
  {
    v77 = (void *)MEMORY[0x212BBE110](v74 + 16);
    swift_release();
  }
  else
  {
    v77 = 0;
  }
  v95 = *(_QWORD *)(v2 - 560);
  v96 = *(_QWORD *)(v2 - 568);
  v97 = v70;
  v98 = *(_QWORD *)(v2 - 344);
  v99 = *(_QWORD *)(v2 - 440);
  v100 = sub_20E48A28C(v97, v98, v99, v75);
  sub_20E4023C8(v77, (uint64_t)v100, v101, v96, v95, (uint64_t)v50);
  swift_release();

  (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v2 - 552) + 8))(v47, v96);
  swift_checkMetadataState();
  v103 = sub_20E48A360(v76, v98, v99, v102);
  v105 = v104;
  v106 = (_QWORD *)swift_allocObject();
  v106[2] = v98;
  v106[3] = v99;
  v106[4] = v103;
  v106[5] = v105;
  v107 = *(_QWORD *)(v2 - 536);
  sub_20E4A4310();
  swift_release();
  (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v2 - 544) + 8))(v50, v107);
  sub_20E4A5408();
  sub_20E48A524(v76, v98, v99, v108);
  v109 = *(_QWORD *)(v2 - 520);
  v110 = *(_QWORD *)(v2 - 416);
  v111 = *(_QWORD *)(v2 - 352);
  sub_20E4A43E8();
  swift_release();
  v112 = v99;
  (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v2 - 528) + 8))(v53, v110);
  *(_QWORD *)(v2 - 136) = v110;
  *(_QWORD *)(v2 - 128) = v98;
  *(_QWORD *)(v2 - 120) = v111;
  *(_QWORD *)(v2 - 112) = v99;
  v113 = swift_getOpaqueTypeConformance2();
  v114 = *(_QWORD **)(v2 - 448);
  v115 = *(_QWORD *)(v2 - 472);
  sub_20E39D614(v114, v109, v115, v113);
  v116 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 512) + 8);
  v116(v109, v115);
  v117 = *(_QWORD *)(v2 - 504);
  sub_20E39D618((uint64_t)v114, v115, v117);
  v118 = *(_QWORD *)(v2 - 336);
  v119 = MEMORY[0x212BBDF90](&protocol conformance descriptor for _RequirementFailureView<A, B>, v118);
  v120 = *(_QWORD *)(v2 - 464);
  sub_20E3DC6B0(v117, v115);
  v116(v117, v115);
  *(_QWORD *)(v2 - 320) = v113;
  *(_QWORD *)(v2 - 312) = v119;
  v121 = *(_QWORD *)(v2 - 392);
  MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v121, v2 - 320);
  v122 = *(_QWORD *)(v2 - 424);
  v123 = *(_QWORD *)(v2 - 328);
  sub_20E3DC6B0(v120, v121);
  v124 = v120;
  v125 = v123;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 456) + 8))(v124, v121);
  v116((uint64_t)v114, v115);
LABEL_16:
  v140 = *(_QWORD *)(v2 - 344);
  *(_QWORD *)(v2 - 136) = v110;
  *(_QWORD *)(v2 - 128) = v140;
  *(_QWORD *)(v2 - 120) = *(_QWORD *)(v2 - 352);
  *(_QWORD *)(v2 - 112) = v112;
  v141 = swift_getOpaqueTypeConformance2();
  v142 = MEMORY[0x212BBDF90](&protocol conformance descriptor for _RequirementFailureView<A, B>, v118);
  *(_QWORD *)(v2 - 272) = v141;
  *(_QWORD *)(v2 - 264) = v142;
  v143 = MEMORY[0x24BDEF3E0];
  *(_QWORD *)(v2 - 288) = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v121, v2 - 272);
  *(_QWORD *)(v2 - 280) = v125;
  v144 = v143;
  v145 = *(_QWORD *)(v2 - 400);
  MEMORY[0x212BBDF90](v144, v145, v2 - 288);
  sub_20E39D618(v122, v145, *(_QWORD *)(v2 - 384));
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 408) + 8))(v122, v145);
}

uint64_t (*sub_20E48A28C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))(_QWORD)
{
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v7 = type metadata accessor for _ImpressionableLayoutViewModifier(0, a2, a3, a4);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v15 - v10;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v8 + 16))((char *)&v15 - v10, a1, v7, v9);
  v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a2;
  *(_QWORD *)(v13 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v13 + v12, v11, v7);
  return nullsub_1;
}

uint64_t (*sub_20E48A360(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v7 = type metadata accessor for _ImpressionableLayoutViewModifier(0, a2, a3, a4);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v15 - v10;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v8 + 16))((char *)&v15 - v10, a1, v7, v9);
  v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a2;
  *(_QWORD *)(v13 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v13 + v12, v11, v7);
  return sub_20E490518;
}

uint64_t sub_20E48A434()
{
  type metadata accessor for LayoutItemImpressionInformation();
  sub_20E4A5B88();
  sub_20E4A4670();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_20E4A464C();
  sub_20E4A5B7C();
  sub_20E4A4658();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_20E48A524(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v7 = type metadata accessor for _ImpressionableLayoutViewModifier(0, a2, a3, a4);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v15 - v10;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v8 + 16))((char *)&v15 - v10, a1, v7, v9);
  v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a2;
  *(_QWORD *)(v13 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v13 + v12, v11, v7);
  return sub_20E490180;
}

uint64_t sub_20E48A5F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  _QWORD *v50;
  uint64_t v51;
  _QWORD *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  void *v67;
  char *v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  void (*v79)(char *, uint64_t, uint64_t);
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t aBlock;
  uint64_t v103;
  uint64_t (*v104)(uint64_t);
  void *v105;
  uint64_t (*v106)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v107;
  uint64_t v108;

  v3 = v2;
  v6 = sub_20E4A5A8C();
  v98 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_20E4A494C();
  v93 = *(_QWORD *)(v9 - 8);
  v94 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v92 = (char *)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_20E4A4970();
  v90 = *(_QWORD *)(v11 - 8);
  v91 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v89 = (char *)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = (_QWORD *)sub_20E4A4940();
  v87 = *(v88 - 1);
  MEMORY[0x24BDAC7A8](v88);
  v14 = (char *)&v72 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = sub_20E4A4988();
  v86 = *(_QWORD *)(v101 - 8);
  MEMORY[0x24BDAC7A8](v101);
  v85 = (char *)&v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v100 = (char *)&v72 - v17;
  v18 = sub_20E4A338C();
  v19 = *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64);
  MEMORY[0x24BDAC7A8](v18);
  MEMORY[0x24BDAC7A8](v20);
  v99 = (char *)&v72 - v21;
  v22 = *(_QWORD *)(a2 - 8);
  v23 = *(_QWORD *)(v22 + 64);
  MEMORY[0x24BDAC7A8](v24);
  MEMORY[0x24BDAC7A8](v25);
  v31 = (char *)&v72 - v30;
  v32 = (uint64_t *)(v3 + *(int *)(a2 + 52));
  v33 = *v32;
  if (!*v32)
  {
    sub_20E4A5A5C();
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0D58);
    sub_20E4A4ACC();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_20E4A72D0;
    sub_20E4A4A30();
    sub_20E4A5768();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v98 + 8))(v8, v6);
  }
  v81 = v29;
  v82 = v28;
  v83 = v27;
  v98 = v26;
  v80 = v32[1];
  v34 = *(_QWORD *)(a2 + 16);
  v84 = v33;
  swift_unknownObjectRetain();
  v35 = MEMORY[0x212BBD348](a1, v34);
  v79 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 16);
  v79(v31, v3, a2);
  if (v35 < 1)
  {
    v37 = &v31[*(int *)(a2 + 68)];
    v39 = *(_QWORD *)v37;
    v38 = *((_QWORD *)v37 + 1);
    aBlock = v39;
    v103 = v38;
    v97 = a1;
    sub_20E4A5F0C();
    sub_20E4A4670();
    sub_20E4A464C();
    v40 = sub_20E4A5EF4();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v31, a2);
    v41 = v40 < 1;
    a1 = v97;
    if (v41)
      return swift_unknownObjectRelease();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v31, a2);
  }
  v76 = v22;
  v78 = v14;
  aBlock = a1;
  v42 = sub_20E4A5D98();
  v43 = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  MEMORY[0x212BBDF90](MEMORY[0x24BEE12C8], v42);
  v44 = sub_20E4A5F18();
  v45 = (uint64_t *)(v3 + *(int *)(a2 + 68));
  v96 = v3;
  v47 = v45[1];
  aBlock = *v45;
  v46 = aBlock;
  v103 = v47;
  sub_20E4A5F0C();
  sub_20E4A4670();
  sub_20E4A464C();
  v74 = sub_20E4A5EE8();
  aBlock = v46;
  v103 = v47;
  swift_bridgeObjectRetain();
  sub_20E4A464C();
  v77 = v44;
  v97 = v43;
  v73 = sub_20E4A5EE8();
  swift_bridgeObjectRelease();
  v48 = v99;
  sub_20E4A3374();
  v95 = v34;
  if (qword_254A18128 != -1)
    swift_once();
  v75 = qword_254A1C518;
  v49 = v85;
  sub_20E4A497C();
  v50 = v78;
  *v78 = 500;
  v51 = v87;
  v52 = v88;
  (*(void (**)(_QWORD *, _QWORD, _QWORD *))(v87 + 104))(v50, *MEMORY[0x24BEE5410], v88);
  MEMORY[0x212BBBF50](v49, v50);
  (*(void (**)(_QWORD *, _QWORD *))(v51 + 8))(v50, v52);
  v88 = *(_QWORD **)(v86 + 8);
  ((void (*)(char *, uint64_t))v88)(v49, v101);
  v53 = v81;
  v79(v81, v96, a2);
  v54 = v83;
  v55 = v82;
  (*(void (**)(uint64_t, char *, uint64_t))(v83 + 16))(v82, v48, v98);
  v56 = v76;
  v57 = (*(unsigned __int8 *)(v76 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80);
  v58 = (v23 + v57 + 7) & 0xFFFFFFFFFFFFFFF8;
  v59 = (*(unsigned __int8 *)(v54 + 80) + v58 + 16) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
  v60 = (v19 + v59 + 7) & 0xFFFFFFFFFFFFFFF8;
  v61 = (char *)swift_allocObject();
  v62 = v97;
  *((_QWORD *)v61 + 2) = v95;
  *((_QWORD *)v61 + 3) = v62;
  *((_QWORD *)v61 + 4) = v74;
  (*(void (**)(char *, char *, uint64_t))(v56 + 32))(&v61[v57], v53, a2);
  v63 = &v61[v58];
  v64 = v80;
  *(_QWORD *)v63 = v84;
  *((_QWORD *)v63 + 1) = v64;
  v65 = &v61[v59];
  v66 = v98;
  (*(void (**)(char *, uint64_t, uint64_t))(v54 + 32))(v65, v55, v98);
  *(_QWORD *)&v61[v60] = v73;
  v106 = sub_20E490378;
  v107 = v61;
  aBlock = MEMORY[0x24BDAC760];
  v103 = 1107296256;
  v104 = sub_20E41D848;
  v105 = &block_descriptor_5;
  v67 = _Block_copy(&aBlock);
  swift_unknownObjectRetain();
  v68 = v89;
  sub_20E4A4958();
  v108 = MEMORY[0x24BEE4AF8];
  sub_20E39F334((unint64_t *)&qword_253ED0600, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0608);
  sub_20E39D010((unint64_t *)&qword_253ED0610, &qword_253ED0608, MEMORY[0x24BEE12C8]);
  v69 = v92;
  v70 = v94;
  sub_20E4A6128();
  v71 = v100;
  MEMORY[0x212BBD5B8](v100, v68, v69, v67);
  _Block_release(v67);
  (*(void (**)(char *, uint64_t))(v93 + 8))(v69, v70);
  (*(void (**)(char *, uint64_t))(v90 + 8))(v68, v91);
  ((void (*)(char *, uint64_t))v88)(v71, v101);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v99, v66);
  swift_release();
  sub_20E48AE4C(v96, v77, v95, v97);
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_20E48AE4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for _ImpressionableLayoutViewModifier(0, a3, a4, a4);
  sub_20E4A5F0C();
  sub_20E4A4670();
  swift_bridgeObjectRetain();
  return sub_20E4A4658();
}

uint64_t sub_20E48AEE0()
{
  uint64_t v0;

  v0 = sub_20E4A5F0C();
  MEMORY[0x212BBDF90](MEMORY[0x24BEE1718], v0);
  sub_20E4A5CF0();
  return sub_20E4A5CF0();
}

uint64_t sub_20E48AFC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(char *, uint64_t, char *, uint64_t, uint64_t))
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t *boxed_opaque_existential_1Tm;
  uint64_t v32;
  uint64_t ObjectType;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t, char *, uint64_t, uint64_t);
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49[6];

  v42 = a4;
  v43 = a8;
  v40 = a5;
  v41 = a3;
  v12 = sub_20E4A5204();
  v38 = *(_QWORD *)(v12 - 8);
  v39 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v37 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_20E4A4A90();
  MEMORY[0x24BDAC7A8](v14);
  v44 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_20E4A5A8C();
  v47 = *(_QWORD *)(v16 - 8);
  v48 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v45 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1C748);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v36 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for LayoutItemImpressionInformation();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v36 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = *(int *)(type metadata accessor for _ImpressionableLayoutViewModifier(0, a6, a7, v25) + 64);
  v36 = a2;
  v27 = (uint64_t *)(a2 + v26);
  v29 = *v27;
  v28 = v27[1];
  v49[0] = v29;
  v49[1] = v28;
  sub_20E4A5B88();
  sub_20E4A4670();
  sub_20E4A464C();
  v46 = a1;
  MEMORY[0x212BBD150](a1, v49[5], a6, v21, a7);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21) == 1)
  {
    sub_20E39D1F8((uint64_t)v20, &qword_254A1C748);
    v30 = v45;
    sub_20E4A5A5C();
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0D58);
    sub_20E4A4ACC();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_20E4A72D0;
    sub_20E4A4A84();
    sub_20E4A4A78();
    v49[3] = a6;
    boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v49);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 16))(boxed_opaque_existential_1Tm, v46, a6);
    sub_20E4A4A54();
    sub_20E39D1F8((uint64_t)v49, &qword_253ED2A38);
    sub_20E4A4A78();
    sub_20E4A4A9C();
    v32 = v48;
    sub_20E4A5768();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v30, v32);
  }
  else
  {
    sub_20E490494((uint64_t)v20, (uint64_t)v24);
    ObjectType = swift_getObjectType();
    sub_20E4A5444();
    v35 = v37;
    sub_20E4A51BC();
    swift_bridgeObjectRelease();
    v43(v24, v40, v35, ObjectType, v42);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v35, v39);
    return sub_20E4904D8((uint64_t)v24);
  }
}

uint64_t sub_20E48B3A4()
{
  if ((MEMORY[0x212BBC70C]() & 1) != 0)
    JUMPOUT(0x212BBC7A8);
  return 0;
}

uint64_t sub_20E48B3F8()
{
  type metadata accessor for LayoutItemImpressionInformation();
  swift_getTupleTypeMetadata2();
  sub_20E4A5D68();
  return sub_20E4A5B70();
}

uint64_t sub_20E48B45C(uint64_t a1, void (*a2)(void))
{
  a2();
  type metadata accessor for LayoutItemImpressionInformation();
  sub_20E4A5B88();
  return sub_20E4A5B7C();
}

uint64_t sub_20E48B4D8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_20E490578(a1, a2);
}

uint64_t sub_20E48B504@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_20E48B3F8();
  *a1 = result;
  return result;
}

uint64_t sub_20E48B530(uint64_t a1)
{
  return sub_20E48B45C(a1, (void (*)(void))sub_20E490BBC);
}

uint64_t ComponentModelViewID.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_20E3B7F84(v1, a1);
}

uint64_t ComponentModelViewID.id.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_20E48B5B8(a1, v1);
}

uint64_t (*ComponentModelViewID.id.modify())()
{
  return nullsub_1;
}

__n128 ComponentModelViewID.init(_:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  return result;
}

uint64_t type metadata accessor for ImpressionableLayoutItemViewModifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ImpressionableLayoutItemViewModifier);
}

uint64_t type metadata accessor for ImpressionableLayoutViewModifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ImpressionableLayoutViewModifier);
}

uint64_t sub_20E48B5B8(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 40))(a2, a1);
  return a2;
}

uint64_t ComponentModelViewID.hashValue.getter()
{
  sub_20E4A6410();
  _s9JetEngine12MediaArtworkV01_aB8_SwiftUIE8CacheKeyV4hash4intoys6HasherVz_tF_0();
  return sub_20E4A6428();
}

uint64_t sub_20E48B638@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_20E3B7F84(v1, a1);
}

unint64_t sub_20E48B64C()
{
  unint64_t result;

  result = qword_254A1C520[0];
  if (!qword_254A1C520[0])
  {
    result = MEMORY[0x212BBDF90](&protocol conformance descriptor for ComponentModelViewID, &type metadata for ComponentModelViewID);
    atomic_store(result, qword_254A1C520);
  }
  return result;
}

ValueMetadata *type metadata accessor for ComponentModelViewID()
{
  return &type metadata for ComponentModelViewID;
}

uint64_t sub_20E48B6A4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[2];
  _QWORD v11[2];

  v4 = a1[2];
  v5 = type metadata accessor for ImpressionableLayoutItemViewModifier(255, a1[1], a1[3], a4);
  v6 = sub_20E4A39D4();
  type metadata accessor for ClickLocationViewModifier();
  v7 = sub_20E4A39D4();
  v11[0] = v4;
  v11[1] = MEMORY[0x212BBDF90](&unk_20E4B0E28, v5);
  v8 = MEMORY[0x24BDED308];
  v10[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v6, v11);
  v10[1] = sub_20E39F334(&qword_253ED07E8, (uint64_t (*)(uint64_t))type metadata accessor for ClickLocationViewModifier, (uint64_t)&unk_20E4A953C);
  return MEMORY[0x212BBDF90](v8, v7, v10);
}

uint64_t sub_20E48B77C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[2];
  _QWORD v7[2];

  v1 = *(_QWORD *)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1A5C0);
  v2 = sub_20E4A39D4();
  type metadata accessor for ClickLocationViewModifier();
  v3 = sub_20E4A39D4();
  v7[0] = v1;
  v7[1] = sub_20E39D010(&qword_254A1A5B8, &qword_254A1A5C0, (uint64_t)&unk_20E4B0E28);
  v4 = MEMORY[0x24BDED308];
  v6[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v2, v7);
  v6[1] = sub_20E39F334(&qword_253ED07E8, (uint64_t (*)(uint64_t))type metadata accessor for ClickLocationViewModifier, (uint64_t)&unk_20E4A953C);
  return MEMORY[0x212BBDF90](v4, v3, v6);
}

uint64_t sub_20E48B85C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[2];

  v4 = a1[2];
  v5 = type metadata accessor for ImpressionableLayoutViewModifier(255, a1[1], a1[3], a4);
  v6 = sub_20E4A39D4();
  v8[0] = v4;
  v8[1] = MEMORY[0x212BBDF90](&unk_20E4B0DD8, v5);
  return MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v6, v8);
}

uint64_t sub_20E48B8D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 16);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1A500);
  v2 = sub_20E4A39D4();
  v4[0] = v1;
  v4[1] = sub_20E39D010(&qword_254A1A508, &qword_254A1A500, (uint64_t)&unk_20E4B0DD8);
  return MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v2, v4);
}

void sub_20E48B958()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_20E3A4C54(319, qword_254A1C5A8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5D330], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
  {
    sub_20E4A5450();
    if (v1 <= 0x3F)
    {
      sub_20E3A4C54(319, (unint64_t *)&qword_253ED2448, (uint64_t (*)(uint64_t))MEMORY[0x24BE5D6D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

char *sub_20E48BA4C(char *a1, char *a2, int *a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v5 = *(_QWORD *)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (char *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v8 = a3[9];
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = sub_20E4A5174();
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CC8);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v14 = a3[10];
    v15 = &a1[v14];
    v16 = &a2[v14];
    v17 = sub_20E4A5450();
    v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
    v18(v15, v16, v17);
    v18(&a1[a3[11]], &a2[a3[11]], v17);
    v19 = a3[12];
    v20 = a3[13];
    v21 = &a1[v19];
    v22 = &a2[v19];
    *(_QWORD *)v21 = *(_QWORD *)v22;
    v23 = a2[v20];
    v21[8] = v22[8];
    a1[v20] = v23;
    v24 = a3[14];
    v25 = &a1[v24];
    v26 = &a2[v24];
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v27 = sub_20E4A5384();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    }
    else
    {
      *(_QWORD *)v25 = *(_QWORD *)v26;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_20E48BC20(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;

  v4 = a1 + a2[9];
  v5 = sub_20E4A5174();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v7 = a1 + a2[10];
  v8 = sub_20E4A5450();
  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
  v9(v7, v8);
  v9(a1 + a2[11], v8);
  v10 = a1 + a2[14];
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v11 = sub_20E4A5384();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
}

char *sub_20E48BD20(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = a3[9];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_20E4A5174();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CC8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[10];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_20E4A5450();
  v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
  v16(v13, v14, v15);
  v16(&a1[a3[11]], &a2[a3[11]], v15);
  v17 = a3[12];
  v18 = a3[13];
  v19 = &a1[v17];
  v20 = &a2[v17];
  *(_QWORD *)v19 = *(_QWORD *)v20;
  v21 = a2[v18];
  v19[8] = v20[8];
  a1[v18] = v21;
  v22 = a3[14];
  v23 = &a1[v22];
  v24 = &a2[v22];
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v25 = sub_20E4A5384();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
  }
  else
  {
    *(_QWORD *)v23 = *(_QWORD *)v24;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

char *sub_20E48BEC8(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = a3[9];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_20E4A5174();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CC8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  v15 = a3[10];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = sub_20E4A5450();
  v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 24);
  v19(v16, v17, v18);
  v19(&a1[a3[11]], &a2[a3[11]], v18);
  v20 = a3[12];
  v21 = &a1[v20];
  v22 = &a2[v20];
  v23 = *(_QWORD *)v22;
  v21[8] = v22[8];
  *(_QWORD *)v21 = v23;
  a1[a3[13]] = a2[a3[13]];
  if (a1 != a2)
  {
    v24 = a3[14];
    v25 = &a1[v24];
    v26 = &a2[v24];
    sub_20E39D1F8((uint64_t)&a1[v24], &qword_253ED0A28);
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v27 = sub_20E4A5384();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    }
    else
    {
      *(_QWORD *)v25 = *(_QWORD *)v26;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_20E48C0D8(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = a3[9];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_20E4A5174();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CC8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[10];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_20E4A5450();
  v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32);
  v16(v13, v14, v15);
  v16(&a1[a3[11]], &a2[a3[11]], v15);
  v17 = a3[12];
  v18 = a3[13];
  v19 = &a1[v17];
  v20 = &a2[v17];
  *(_QWORD *)v19 = *(_QWORD *)v20;
  v21 = a2[v18];
  v19[8] = v20[8];
  a1[v18] = v21;
  v22 = a3[14];
  v23 = &a1[v22];
  v24 = &a2[v22];
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v26 = sub_20E4A5384();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v23, v24, v26);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  return a1;
}

char *sub_20E48C284(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = a3[9];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_20E4A5174();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CC8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  v15 = a3[10];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = sub_20E4A5450();
  v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 40);
  v19(v16, v17, v18);
  v19(&a1[a3[11]], &a2[a3[11]], v18);
  v20 = a3[12];
  v21 = a3[13];
  v22 = &a1[v20];
  v23 = &a2[v20];
  *(_QWORD *)v22 = *(_QWORD *)v23;
  v22[8] = v23[8];
  a1[v21] = a2[v21];
  if (a1 != a2)
  {
    v24 = a3[14];
    v25 = &a1[v24];
    v26 = &a2[v24];
    sub_20E39D1F8((uint64_t)&a1[v24], &qword_253ED0A28);
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v28 = sub_20E4A5384();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v25, v26, v28);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_20E48C494()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_20E48C4A0(char *a1, uint64_t a2, int *a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CC8);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[9];
    }
    else
    {
      v12 = sub_20E4A5450();
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[10];
      }
      else
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A182F8);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a3[14];
      }
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t sub_20E48C56C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_20E48C578(char *result, uint64_t a2, int a3, int *a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CC8);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[9];
    }
    else
    {
      v12 = sub_20E4A5450();
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[10];
      }
      else
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A182F8);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a4[14];
      }
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

void sub_20E48C640()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  swift_checkMetadataState();
  if (v0 <= 0x3F)
  {
    sub_20E3A4C54(319, qword_254A1C5A8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5D330], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    if (v1 <= 0x3F)
    {
      sub_20E3A4C54(319, &qword_253ED2450, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
      if (v2 <= 0x3F)
      {
        sub_20E3DBDB0();
        if (v3 <= 0x3F)
        {
          sub_20E3A4C54(319, (unint64_t *)&qword_253ED2448, (uint64_t (*)(uint64_t))MEMORY[0x24BE5D6D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
          if (v4 <= 0x3F)
            swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t *sub_20E48C76C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  unsigned int v21;
  int v22;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  void *v29;
  const void *v30;
  size_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t, uint64_t);
  _QWORD *v38;
  _QWORD *v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  size_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  size_t __n;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;

  v53 = *(_QWORD *)(a3 + 16);
  v3 = *(_QWORD *)(v53 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  v55 = sub_20E4A5174();
  v5 = *(_QWORD *)(v55 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v52 = v4 + v6;
  if (*(_DWORD *)(v5 + 84))
    v7 = *(_QWORD *)(v5 + 64);
  else
    v7 = *(_QWORD *)(v5 + 64) + 1;
  __n = v7;
  v8 = (v7 + ((v4 + v6) & ~(unint64_t)v6) + 7) & 0xFFFFFFFFFFFFFFF8;
  v62 = sub_20E4A33B0();
  v9 = *(_QWORD *)(v62 - 8);
  v11 = *(_DWORD *)(v9 + 80);
  v10 = *(_DWORD *)(v9 + 84);
  v12 = v11 & 0xF8 | 7;
  v59 = v9;
  v13 = *(_QWORD *)(v9 + 64);
  v54 = v13 + 7;
  v56 = ((v13 + 7) & 0xFFFFFFFFFFFFFFF8) + v12 + 8;
  v14 = (v56 + ((v12 + v8 + 9) & ~v12)) & ~v12;
  if (v10)
    v15 = v13;
  else
    v15 = v13 + 1;
  v51 = v15;
  if (v15 <= 8)
    v15 = 8;
  v58 = v15;
  v16 = v15 + 1;
  v17 = sub_20E4A5384();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_DWORD *)(v18 + 80);
  v60 = v19 & 0xF8 | 7;
  v61 = v16;
  if (*(_QWORD *)(v18 + 64) <= 8uLL)
    v20 = 8;
  else
    v20 = *(_QWORD *)(v18 + 64);
  v21 = v6 | v11 & 0xF8 | *(_DWORD *)(v18 + 80) & 0xF8 | *(_DWORD *)(v3 + 80) & 0xF8;
  v22 = (v11 | v6 | v19 | *(_DWORD *)(v3 + 80)) & 0x100000;
  if (v21 > 7 || v22 != 0 || v20 + ((v16 + v60 + v14) & ~v60) + 1 > 0x18)
  {
    v25 = *a2;
    *a1 = *a2;
    v28 = (uint64_t *)(v25 + (((v21 | 7) + 16) & ~(unint64_t)(v21 | 7)));
LABEL_43:
    swift_retain();
    return v28;
  }
  v49 = *(_QWORD *)(v17 - 8);
  v50 = v20;
  v26 = ~(unint64_t)v6;
  v27 = ~v12;
  v28 = a1;
  (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v3 + 16))(a1, a2, v53);
  v29 = (void *)(((unint64_t)a1 + v52) & v26);
  v30 = (const void *)(((unint64_t)a2 + v52) & v26);
  if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(((unint64_t)a2 + v52) & v26, 1, v55))
  {
    v31 = __n;
    memcpy(v29, v30, __n);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(v29, v30, v55);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v29, 0, 1, v55);
    v31 = __n;
  }
  v32 = ((unint64_t)v29 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
  v33 = ((unint64_t)v30 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
  v34 = *(_QWORD *)v33;
  *(_BYTE *)(v32 + 8) = *(_BYTE *)(v33 + 8);
  *(_QWORD *)v32 = v34;
  v35 = (v32 + v12 + 9) & v27;
  v36 = (v33 + v12 + 9) & v27;
  v37 = *(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 16);
  v37(v35, v36, v62);
  *(_QWORD *)((v54 + v35) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v54 + v36) & 0xFFFFFFFFFFFFF8);
  v38 = (_QWORD *)((v56 + v35) & v27);
  v39 = (_QWORD *)((v56 + v36) & v27);
  v40 = *((unsigned __int8 *)v39 + v58);
  swift_retain();
  if (v40 >= 2)
  {
    if (v58 <= 3)
      v41 = v58;
    else
      v41 = 4;
    __asm { BR              X11 }
  }
  v42 = ~v60;
  if (v40 == 1)
  {
    v43 = v50;
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v59 + 48))(v39, 1, v62))
    {
      memcpy(v38, v39, v51);
    }
    else
    {
      v37((uint64_t)v38, (uint64_t)v39, v62);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v38, 0, 1, v62);
    }
    *((_BYTE *)v38 + v58) = 1;
  }
  else
  {
    *v38 = *v39;
    *((_BYTE *)v38 + v58) = 0;
    swift_retain();
    v43 = v50;
  }
  v44 = (_QWORD *)(((unint64_t)v38 + v61 + v60) & v42);
  v45 = (_QWORD *)(((unint64_t)v39 + v61 + v60) & v42);
  v46 = *((unsigned __int8 *)v45 + v43);
  if (v46 >= 2)
  {
    if (v43 <= 3)
      v47 = v43;
    else
      v47 = 4;
    __asm { BR              X12 }
  }
  if (v46 != 1)
  {
    *v44 = *v45;
    *((_BYTE *)v44 + v43) = 0;
    goto LABEL_43;
  }
  (*(void (**)(unint64_t))(v49 + 16))(((unint64_t)v38 + v61 + v60) & v42);
  *((_BYTE *)v44 + v43) = 1;
  return v28;
}

uint64_t sub_20E48CBFC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unsigned int v25;
  uint64_t v26;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = *(_QWORD *)(v3 + 64);
  v5 = sub_20E4A5174();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v4 + a1 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(v7, 1, v5))
    (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v7, v5);
  v8 = v7 + *(_QWORD *)(v6 + 64);
  if (!*(_DWORD *)(v6 + 84))
    ++v8;
  v9 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = sub_20E4A33B0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_DWORD *)(v11 + 80) & 0xF8 | 7;
  v13 = (v9 + v12 + 9) & ~v12;
  v14 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v14(v13, v10);
  v15 = *(_QWORD *)(v11 + 64);
  swift_release();
  v16 = (v12 + ((v15 + 7) & 0xFFFFFFFFFFFFFFF8) + v13 + 8) & ~v12;
  if (*(_DWORD *)(v11 + 84))
    v17 = v15;
  else
    v17 = v15 + 1;
  if (v17 <= 8)
    v18 = 8;
  else
    v18 = v17;
  v19 = *(unsigned __int8 *)(v16 + v18);
  if (v19 >= 2)
  {
    if (v18 <= 3)
      v20 = v18;
    else
      v20 = 4;
    __asm { BR              X12 }
  }
  if (v19 == 1)
  {
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v11 + 48))(v16, 1, v10))
      v14(v16, v10);
  }
  else
  {
    swift_release();
  }
  v21 = *(_QWORD *)(sub_20E4A5384() - 8);
  v22 = *(_DWORD *)(v21 + 80) & 0xF8 | 7;
  v23 = ((v16 | 1) + v18 + v22) & ~v22;
  v24 = *(_QWORD *)(v21 + 64);
  if (v24 <= 8)
    v24 = 8;
  v25 = *(unsigned __int8 *)(v23 + v24);
  if (v25 >= 2)
  {
    if (v24 <= 3)
      v26 = v24;
    else
      v26 = 4;
    __asm { BR              X14 }
  }
  if (v25 == 1)
    return (*(uint64_t (**)(void))(v21 + 8))();
  else
    return swift_release();
}

uint64_t sub_20E48CEA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  int v13;
  size_t v14;
  size_t v15;
  size_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  void (*v27)(unint64_t, unint64_t, uint64_t);
  size_t v28;
  unint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  size_t v32;
  uint64_t v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  unsigned int v42;
  uint64_t v43;
  char v44;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_20E4A5174();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v6 + v9;
  v11 = (void *)((v6 + v9 + a1) & ~v9);
  v12 = (const void *)((v10 + a2) & ~v9);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v12, 1, v7))
  {
    v13 = *(_DWORD *)(v8 + 84);
    v14 = *(_QWORD *)(v8 + 64);
    if (v13)
      v15 = v14;
    else
      v15 = v14 + 1;
    memcpy(v11, v12, v15);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v11, v12, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
    v13 = *(_DWORD *)(v8 + 84);
    v14 = *(_QWORD *)(v8 + 64);
  }
  if (v13)
    v16 = v14;
  else
    v16 = v14 + 1;
  v17 = (uint64_t)v11 + v16 + 7;
  v18 = ((unint64_t)v12 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v19 = *(_QWORD *)v18;
  v20 = v17 & 0xFFFFFFFFFFFFFFF8;
  *(_BYTE *)(v20 + 8) = *(_BYTE *)(v18 + 8);
  *(_QWORD *)v20 = v19;
  v21 = sub_20E4A33B0();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(_DWORD *)(v22 + 80) & 0xF8;
  v24 = v23 | 7;
  v23 += 16;
  v25 = (v23 + v20) & ~v24;
  v26 = (v23 + v18) & ~v24;
  v27 = *(void (**)(unint64_t, unint64_t, uint64_t))(v22 + 16);
  v27(v25, v26, v21);
  v28 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)((v28 + 7 + v25) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v28 + 7 + v26) & 0xFFFFFFFFFFFFF8);
  v29 = ((v28 + 7) & 0xFFFFFFFFFFFFFFF8) + v24 + 8;
  v30 = (_QWORD *)((v29 + v25) & ~v24);
  v31 = (_QWORD *)((v29 + v26) & ~v24);
  if (*(_DWORD *)(v22 + 84))
    v32 = v28;
  else
    v32 = v28 + 1;
  if (v32 <= 8)
    v33 = 8;
  else
    v33 = v32;
  v34 = *((unsigned __int8 *)v31 + v33);
  swift_retain();
  if (v34 >= 2)
  {
    if (v33 <= 3)
      v35 = v33;
    else
      v35 = 4;
    __asm { BR              X11 }
  }
  if (v34 == 1)
  {
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v22 + 48))(v31, 1, v21))
    {
      memcpy(v30, v31, v32);
    }
    else
    {
      v27((unint64_t)v30, (unint64_t)v31, v21);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v30, 0, 1, v21);
    }
    *((_BYTE *)v30 + v33) = 1;
  }
  else
  {
    *v30 = *v31;
    *((_BYTE *)v30 + v33) = 0;
    swift_retain();
  }
  v36 = *(_QWORD *)(sub_20E4A5384() - 8);
  v37 = *(_DWORD *)(v36 + 80) & 0xF8 | 7;
  v38 = v33 + v37 + 1;
  v39 = (_QWORD *)(((unint64_t)v30 + v38) & ~v37);
  v40 = (_QWORD *)(((unint64_t)v31 + v38) & ~v37);
  if (*(_QWORD *)(v36 + 64) <= 8uLL)
    v41 = 8;
  else
    v41 = *(_QWORD *)(v36 + 64);
  v42 = *((unsigned __int8 *)v40 + v41);
  if (v42 >= 2)
  {
    if (v41 <= 3)
      v43 = v41;
    else
      v43 = 4;
    __asm { BR              X13 }
  }
  if (v42 == 1)
  {
    (*(void (**)(_QWORD *))(v36 + 16))(v39);
    v44 = 1;
  }
  else
  {
    *v39 = *v40;
    swift_retain();
    v44 = 0;
  }
  *((_BYTE *)v39 + v41) = v44;
  return a1;
}

uint64_t sub_20E48D224(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  int v15;
  size_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  size_t v28;
  unint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  int v32;
  size_t v33;
  uint64_t v34;
  unsigned int v35;
  uint64_t v36;
  unsigned int v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  unsigned int v49;
  uint64_t v50;
  unsigned int v51;
  uint64_t v52;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_20E4A5174();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v6 + v9;
  v11 = (void *)((v6 + v9 + a1) & ~v9);
  v12 = (void *)((v10 + a2) & ~v9);
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  v14 = v13(v11, 1, v7);
  v15 = v13(v12, 1, v7);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 16))(v11, v12, v7);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 24))(v11, v12, v7);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v11, v7);
  }
  if (*(_DWORD *)(v8 + 84))
    v16 = *(_QWORD *)(v8 + 64);
  else
    v16 = *(_QWORD *)(v8 + 64) + 1;
  memcpy(v11, v12, v16);
LABEL_10:
  if (*(_DWORD *)(v8 + 84))
    v17 = *(_QWORD *)(v8 + 64);
  else
    v17 = *(_QWORD *)(v8 + 64) + 1;
  v18 = (uint64_t)v11 + v17 + 7;
  v19 = ((unint64_t)v12 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  v20 = *(_BYTE *)(v19 + 8);
  v21 = v18 & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v21 = *(_QWORD *)v19;
  *(_BYTE *)(v21 + 8) = v20;
  v22 = sub_20E4A33B0();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(_DWORD *)(v23 + 80) & 0xF8;
  v25 = v24 | 7;
  v24 += 16;
  v26 = (v24 + v21) & ~v25;
  v27 = (v24 + v19) & ~v25;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v23 + 24))(v26, v27, v22);
  v28 = *(_QWORD *)(v23 + 64);
  *(_QWORD *)((v28 + 7 + v26) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((v28 + 7 + v27) & 0xFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  v29 = ((v28 + 7) & 0xFFFFFFFFFFFFFFF8) + v25 + 8;
  v30 = (_QWORD *)((v29 + v26) & ~v25);
  v31 = (_QWORD *)((v29 + v27) & ~v25);
  v32 = *(_DWORD *)(v23 + 84);
  if (v30 != v31)
  {
    if (v32)
      v33 = v28;
    else
      v33 = v28 + 1;
    if (v33 <= 8)
      v34 = 8;
    else
      v34 = v33;
    v35 = *((unsigned __int8 *)v30 + v34);
    if (v35 >= 2)
    {
      if (v34 <= 3)
        v36 = v34;
      else
        v36 = 4;
      __asm { BR              X12 }
    }
    if (v35 == 1)
    {
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v23 + 48))(v30, 1, v22))
        (*(void (**)(_QWORD *, uint64_t))(v23 + 8))(v30, v22);
    }
    else
    {
      swift_release();
    }
    v37 = *((unsigned __int8 *)v31 + v34);
    if (v37 >= 2)
    {
      if (v34 <= 3)
        v38 = v34;
      else
        v38 = 4;
      __asm { BR              X12 }
    }
    if (v37 == 1)
    {
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v23 + 48))(v31, 1, v22))
      {
        memcpy(v30, v31, v33);
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v23 + 16))(v30, v31, v22);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v30, 0, 1, v22);
      }
      *((_BYTE *)v30 + v34) = 1;
    }
    else
    {
      *v30 = *v31;
      *((_BYTE *)v30 + v34) = 0;
      swift_retain();
    }
  }
  if (v32)
    v39 = v28;
  else
    v39 = v28 + 1;
  if (v39 <= 8)
    v40 = 8;
  else
    v40 = v39;
  v41 = sub_20E4A5384();
  v42 = *(_QWORD *)(v41 - 8);
  v43 = *(_DWORD *)(v42 + 80) & 0xF8 | 7;
  v44 = v40 + v43 + 1;
  v45 = (_QWORD *)(((unint64_t)v30 + v44) & ~v43);
  v46 = (_QWORD *)(((unint64_t)v31 + v44) & ~v43);
  if (v45 != v46)
  {
    v47 = v41;
    if (*(_QWORD *)(v42 + 64) <= 8uLL)
      v48 = 8;
    else
      v48 = *(_QWORD *)(v42 + 64);
    v49 = *((unsigned __int8 *)v45 + v48);
    if (v49 >= 2)
    {
      if (v48 <= 3)
        v50 = v48;
      else
        v50 = 4;
      __asm { BR              X12 }
    }
    if (v49 == 1)
      (*(void (**)(_QWORD *, uint64_t))(v42 + 8))(v45, v41);
    else
      swift_release();
    v51 = *((unsigned __int8 *)v46 + v48);
    if (v51 >= 2)
    {
      if (v48 <= 3)
        v52 = v48;
      else
        v52 = 4;
      __asm { BR              X12 }
    }
    if (v51 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v42 + 16))(v45, v46, v47);
      *((_BYTE *)v45 + v48) = 1;
    }
    else
    {
      *v45 = *v46;
      *((_BYTE *)v45 + v48) = 0;
      swift_retain();
    }
  }
  return a1;
}

uint64_t sub_20E48D768(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  int v13;
  size_t v14;
  size_t v15;
  size_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  void (*v27)(unint64_t, unint64_t, uint64_t);
  size_t v28;
  unint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  size_t v32;
  uint64_t v33;
  unsigned int v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  unsigned int v43;
  uint64_t v44;
  char v45;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_20E4A5174();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v6 + v9;
  v11 = (void *)((v6 + v9 + a1) & ~v9);
  v12 = (const void *)((v10 + a2) & ~v9);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v12, 1, v7))
  {
    v13 = *(_DWORD *)(v8 + 84);
    v14 = *(_QWORD *)(v8 + 64);
    if (v13)
      v15 = v14;
    else
      v15 = v14 + 1;
    memcpy(v11, v12, v15);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v11, v12, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
    v13 = *(_DWORD *)(v8 + 84);
    v14 = *(_QWORD *)(v8 + 64);
  }
  if (v13)
    v16 = v14;
  else
    v16 = v14 + 1;
  v17 = (uint64_t)v11 + v16 + 7;
  v18 = ((unint64_t)v12 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v19 = *(_QWORD *)v18;
  v20 = v17 & 0xFFFFFFFFFFFFFFF8;
  *(_BYTE *)(v20 + 8) = *(_BYTE *)(v18 + 8);
  *(_QWORD *)v20 = v19;
  v21 = sub_20E4A33B0();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(_DWORD *)(v22 + 80) & 0xF8;
  v24 = v23 | 7;
  v23 += 16;
  v25 = (v23 + v20) & ~v24;
  v26 = (v23 + v18) & ~v24;
  v27 = *(void (**)(unint64_t, unint64_t, uint64_t))(v22 + 32);
  v27(v25, v26, v21);
  v28 = *(_QWORD *)(v22 + 64);
  *(_QWORD *)((v28 + 7 + v25) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v28 + 7 + v26) & 0xFFFFFFFFFFFFF8);
  v29 = ((v28 + 7) & 0xFFFFFFFFFFFFFFF8) + v24 + 8;
  v30 = (_QWORD *)((v29 + v25) & ~v24);
  v31 = (_QWORD *)((v29 + v26) & ~v24);
  if (*(_DWORD *)(v22 + 84))
    v32 = v28;
  else
    v32 = v28 + 1;
  if (v32 <= 8)
    v33 = 8;
  else
    v33 = v32;
  v34 = *((unsigned __int8 *)v31 + v33);
  if (v34 >= 2)
  {
    if (v33 <= 3)
      v35 = v33;
    else
      v35 = 4;
    __asm { BR              X12 }
  }
  if (v34 == 1)
  {
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v22 + 48))(v31, 1, v21))
    {
      memcpy(v30, v31, v32);
      v36 = 1;
    }
    else
    {
      v27((unint64_t)v30, (unint64_t)v31, v21);
      v36 = 1;
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v30, 0, 1, v21);
    }
  }
  else
  {
    v36 = 0;
    *v30 = *v31;
  }
  *((_BYTE *)v30 + v33) = v36;
  v37 = *(_QWORD *)(sub_20E4A5384() - 8);
  v38 = *(_DWORD *)(v37 + 80) & 0xF8 | 7;
  v39 = v33 + v38 + 1;
  v40 = (_QWORD *)(((unint64_t)v30 + v39) & ~v38);
  v41 = (_QWORD *)(((unint64_t)v31 + v39) & ~v38);
  if (*(_QWORD *)(v37 + 64) <= 8uLL)
    v42 = 8;
  else
    v42 = *(_QWORD *)(v37 + 64);
  v43 = *((unsigned __int8 *)v41 + v42);
  if (v43 >= 2)
  {
    if (v42 <= 3)
      v44 = v42;
    else
      v44 = 4;
    __asm { BR              X13 }
  }
  if (v43 == 1)
  {
    (*(void (**)(_QWORD *))(v37 + 32))(v40);
    v45 = 1;
  }
  else
  {
    v45 = 0;
    *v40 = *v41;
  }
  *((_BYTE *)v40 + v42) = v45;
  return a1;
}

uint64_t sub_20E48DADC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  int v15;
  size_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  size_t v28;
  unint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  int v32;
  size_t v33;
  uint64_t v34;
  unsigned int v35;
  uint64_t v36;
  unsigned int v37;
  uint64_t v38;
  char v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  unsigned int v50;
  uint64_t v51;
  unsigned int v52;
  uint64_t v53;
  char v54;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_20E4A5174();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v6 + v9;
  v11 = (void *)((v6 + v9 + a1) & ~v9);
  v12 = (void *)((v10 + a2) & ~v9);
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  v14 = v13(v11, 1, v7);
  v15 = v13(v12, 1, v7);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 32))(v11, v12, v7);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 40))(v11, v12, v7);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v11, v7);
  }
  if (*(_DWORD *)(v8 + 84))
    v16 = *(_QWORD *)(v8 + 64);
  else
    v16 = *(_QWORD *)(v8 + 64) + 1;
  memcpy(v11, v12, v16);
LABEL_10:
  if (*(_DWORD *)(v8 + 84))
    v17 = *(_QWORD *)(v8 + 64);
  else
    v17 = *(_QWORD *)(v8 + 64) + 1;
  v18 = (uint64_t)v11 + v17 + 7;
  v19 = ((unint64_t)v12 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  v20 = *(_BYTE *)(v19 + 8);
  v21 = v18 & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v21 = *(_QWORD *)v19;
  *(_BYTE *)(v21 + 8) = v20;
  v22 = sub_20E4A33B0();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(_DWORD *)(v23 + 80) & 0xF8;
  v25 = v24 | 7;
  v24 += 16;
  v26 = (v24 + v21) & ~v25;
  v27 = (v24 + v19) & ~v25;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v23 + 40))(v26, v27, v22);
  v28 = *(_QWORD *)(v23 + 64);
  *(_QWORD *)((v28 + 7 + v26) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((v28 + 7 + v27) & 0xFFFFFFFFFFFFF8);
  swift_release();
  v29 = ((v28 + 7) & 0xFFFFFFFFFFFFFFF8) + v25 + 8;
  v30 = (_QWORD *)((v29 + v26) & ~v25);
  v31 = (_QWORD *)((v29 + v27) & ~v25);
  v32 = *(_DWORD *)(v23 + 84);
  if (v30 != v31)
  {
    if (v32)
      v33 = v28;
    else
      v33 = v28 + 1;
    if (v33 <= 8)
      v34 = 8;
    else
      v34 = v33;
    v35 = *((unsigned __int8 *)v30 + v34);
    if (v35 >= 2)
    {
      if (v34 <= 3)
        v36 = v34;
      else
        v36 = 4;
      __asm { BR              X12 }
    }
    if (v35 == 1)
    {
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v23 + 48))(v30, 1, v22))
        (*(void (**)(_QWORD *, uint64_t))(v23 + 8))(v30, v22);
    }
    else
    {
      swift_release();
    }
    v37 = *((unsigned __int8 *)v31 + v34);
    if (v37 >= 2)
    {
      if (v34 <= 3)
        v38 = v34;
      else
        v38 = 4;
      __asm { BR              X12 }
    }
    if (v37 == 1)
    {
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v23 + 48))(v31, 1, v22))
      {
        memcpy(v30, v31, v33);
        v39 = 1;
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v23 + 32))(v30, v31, v22);
        v39 = 1;
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v30, 0, 1, v22);
      }
    }
    else
    {
      v39 = 0;
      *v30 = *v31;
    }
    *((_BYTE *)v30 + v34) = v39;
  }
  if (v32)
    v40 = v28;
  else
    v40 = v28 + 1;
  if (v40 <= 8)
    v41 = 8;
  else
    v41 = v40;
  v42 = sub_20E4A5384();
  v43 = *(_QWORD *)(v42 - 8);
  v44 = *(_DWORD *)(v43 + 80) & 0xF8 | 7;
  v45 = v41 + v44 + 1;
  v46 = (_QWORD *)(((unint64_t)v30 + v45) & ~v44);
  v47 = (_QWORD *)(((unint64_t)v31 + v45) & ~v44);
  if (v46 != v47)
  {
    v48 = v42;
    if (*(_QWORD *)(v43 + 64) <= 8uLL)
      v49 = 8;
    else
      v49 = *(_QWORD *)(v43 + 64);
    v50 = *((unsigned __int8 *)v46 + v49);
    if (v50 >= 2)
    {
      if (v49 <= 3)
        v51 = v49;
      else
        v51 = 4;
      __asm { BR              X12 }
    }
    if (v50 == 1)
      (*(void (**)(_QWORD *, uint64_t))(v43 + 8))(v46, v42);
    else
      swift_release();
    v52 = *((unsigned __int8 *)v47 + v49);
    if (v52 >= 2)
    {
      if (v49 <= 3)
        v53 = v49;
      else
        v53 = 4;
      __asm { BR              X12 }
    }
    if (v52 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v43 + 32))(v46, v47, v48);
      v54 = 1;
    }
    else
    {
      v54 = 0;
      *v46 = *v47;
    }
    *((_BYTE *)v46 + v49) = v54;
  }
  return a1;
}

uint64_t sub_20E48E014(unint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  int v29;
  unsigned int v30;
  int v31;
  int v32;
  uint64_t (*v33)(unint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unsigned int v37;
  unint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v42 = *(_QWORD *)(a3 + 16);
  v4 = *(_QWORD *)(v42 - 8);
  v5 = *(unsigned int *)(v4 + 84);
  v41 = sub_20E4A5174();
  v6 = *(_QWORD *)(v41 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  if ((_DWORD)v7)
    v8 = v7 - 1;
  else
    v8 = 0;
  if (v8 <= v5)
    v9 = v5;
  else
    v9 = v8;
  v40 = sub_20E4A33B0();
  v10 = *(_QWORD *)(v40 - 8);
  v11 = *(unsigned int *)(v10 + 84);
  if (v11 <= 0x7FFFFFFE)
    v12 = 2147483646;
  else
    v12 = *(_DWORD *)(v10 + 84);
  if (v12 <= v9)
    v13 = v9;
  else
    v13 = v12;
  v14 = *(_QWORD *)(v10 + 64);
  v15 = *(_QWORD *)(sub_20E4A5384() - 8);
  if (*(_QWORD *)(v15 + 64) <= 8uLL)
    v16 = 8;
  else
    v16 = *(_QWORD *)(v15 + 64);
  v17 = *(_QWORD *)(v6 + 64);
  if (!(_DWORD)v7)
    ++v17;
  if ((_DWORD)v11)
    v18 = v14;
  else
    v18 = v14 + 1;
  if (v18 <= 8)
    v19 = 8;
  else
    v19 = v18;
  if (!a2)
    return 0;
  v20 = *(unsigned __int8 *)(v6 + 80);
  v21 = *(_QWORD *)(v4 + 64) + v20;
  v22 = v17 + 7;
  v23 = *(_DWORD *)(v10 + 80) & 0xF8 | 7;
  v24 = v14 + 7;
  v25 = a1;
  if (a2 > v13)
  {
    v26 = *(_DWORD *)(v15 + 80) & 0xF8 | 7;
    v27 = v16
        + ((v19
          + v26
          + (((v24 & 0xFFFFFFFFFFFFFFF8) + v23 + ((v23 + ((v22 + (v21 & ~v20)) & 0xFFFFFFFFFFFFFFF8) + 9) & ~v23) + 8) & ~v23)
          + 1) & ~v26)
        + 1;
    v28 = 8 * v27;
    if (v27 > 3)
      goto LABEL_27;
    v30 = ((a2 - v13 + ~(-1 << v28)) >> v28) + 1;
    if (HIWORD(v30))
    {
      v29 = *(_DWORD *)(a1 + v27);
      if (!v29)
        goto LABEL_43;
      goto LABEL_34;
    }
    if (v30 > 0xFF)
    {
      v29 = *(unsigned __int16 *)(a1 + v27);
      if (!*(_WORD *)(a1 + v27))
        goto LABEL_43;
      goto LABEL_34;
    }
    if (v30 >= 2)
    {
LABEL_27:
      v29 = *(unsigned __int8 *)(a1 + v27);
      if (!*(_BYTE *)(a1 + v27))
        goto LABEL_43;
LABEL_34:
      v31 = (v29 - 1) << v28;
      if (v27 > 3)
        v31 = 0;
      if ((_DWORD)v27)
      {
        if (v27 <= 3)
          v32 = v27;
        else
          v32 = 4;
        __asm { BR              X11 }
      }
      return v13 + v31 + 1;
    }
  }
LABEL_43:
  if ((_DWORD)v5 == v13)
  {
    v33 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v4 + 48);
    v34 = v5;
    v35 = v42;
    return v33(v25, v34, v35);
  }
  v36 = (v21 + a1) & ~v20;
  if (v8 == v13)
  {
    if (v7 < 2)
      return 0;
    v37 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(v36, v7, v41);
    if (v37 >= 2)
      return v37 - 1;
    else
      return 0;
  }
  else
  {
    v25 = (((v22 + v36) & 0xFFFFFFFFFFFFFFF8) + v23 + 9) & ~v23;
    if (v11 >= 0x7FFFFFFE)
    {
      v33 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v10 + 48);
      v34 = v11;
      v35 = v40;
      return v33(v25, v34, v35);
    }
    v38 = *(_QWORD *)((v24 + v25) & 0xFFFFFFFFFFFFF8);
    if (v38 >= 0xFFFFFFFF)
      LODWORD(v38) = -1;
    if ((v38 + 1) >= 2)
      return v38;
    else
      return 0;
  }
}

void sub_20E48E314(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  size_t v25;
  unsigned int v26;
  int v27;
  int v28;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_DWORD *)(v5 + 84);
  v7 = *(_QWORD *)(sub_20E4A5174() - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8)
    v9 = v8 - 1;
  else
    v9 = 0;
  if (v9 <= v6)
    v10 = v6;
  else
    v10 = v9;
  v11 = *(_QWORD *)(sub_20E4A33B0() - 8);
  v12 = *(_DWORD *)(v11 + 84);
  if (v12 <= 0x7FFFFFFE)
    v13 = 2147483646;
  else
    v13 = *(_DWORD *)(v11 + 84);
  if (v13 > v10)
    v10 = v13;
  v14 = *(_QWORD *)(v11 + 64);
  v15 = sub_20E4A5384();
  v16 = v5;
  v17 = 0;
  v18 = *(_QWORD *)(v15 - 8);
  v19 = 8;
  if (*(_QWORD *)(v18 + 64) <= 8uLL)
    v20 = 8;
  else
    v20 = *(_QWORD *)(v18 + 64);
  v21 = *(_QWORD *)(v7 + 64);
  if (!v8)
    ++v21;
  if (v12)
    v23 = v14;
  else
    v23 = v14 + 1;
  if (v23 > 8)
    v19 = v23;
  v24 = *(_DWORD *)(v18 + 80) & 0xF8 | 7;
  v22 = *(_DWORD *)(v11 + 80) & 0xF8 | 7;
  v25 = v20
      + ((v19
        + v24
        + ((((v14 + 7) & 0xFFFFFFFFFFFFFFF8)
          + 8
          + v22
          + ((v22
            + ((v21
              + 7
              + ((*(_QWORD *)(v16 + 64) + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))) & 0xFFFFFFFFFFFFFFF8)
            + 9) & ~v22)) & ~v22)
        + 1) & ~v24)
      + 1;
  if (a3 > v10)
  {
    if (v25 <= 3)
    {
      v26 = ((a3 - v10 + ~(-1 << (8 * v25))) >> (8 * v25)) + 1;
      if (HIWORD(v26))
      {
        v17 = 4u;
      }
      else if (v26 >= 0x100)
      {
        v17 = 2;
      }
      else
      {
        v17 = v26 > 1;
      }
    }
    else
    {
      v17 = 1u;
    }
  }
  if (v10 < a2)
  {
    v27 = ~v10 + a2;
    if (v25 < 4)
    {
      if ((_DWORD)v25)
      {
        v28 = v27 & ~(-1 << (8 * v25));
        bzero(a1, v25);
        if ((_DWORD)v25 == 3)
        {
          *(_WORD *)a1 = v28;
          a1[2] = BYTE2(v28);
        }
        else if ((_DWORD)v25 == 2)
        {
          *(_WORD *)a1 = v28;
        }
        else
        {
          *a1 = v28;
        }
      }
    }
    else
    {
      bzero(a1, v25);
      *(_DWORD *)a1 = v27;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X16 }
}

void sub_20E48E638()
{
  char v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v1 + v2) = v0;
}

void sub_20E48E640()
{
  __int16 v0;
  uint64_t v1;
  uint64_t v2;

  *(_WORD *)(v1 + v2) = v0;
}

uint64_t sub_20E48E6C4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E48E6F8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for _ImpressionableLayoutItemViewModifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _ImpressionableLayoutItemViewModifier);
}

uint64_t sub_20E48E740(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = (int *)type metadata accessor for ImpressionableLayoutItemViewModifier(0, v5, *(_QWORD *)(v4 + 24), a4);
  v7 = *(unsigned __int8 *)(*((_QWORD *)v6 - 1) + 80);
  v8 = v4 + ((v7 + 32) & ~v7);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v8, v5);
  v9 = v8 + v6[9];
  v10 = sub_20E4A5174();
  v11 = *(_QWORD *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  v12 = v8 + v6[11];
  v13 = sub_20E4A33B0();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
  v15(v12, v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C68);
  swift_release();
  v16 = v8 + v6[12];
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v16, 1, v13))
      v15(v16, v13);
  }
  else
  {
    swift_release();
  }
  v17 = v8 + v6[13];
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v18 = sub_20E4A5384();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_20E48E8EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *(_QWORD *)(v4 + 16);
  v7 = *(_QWORD *)(v4 + 24);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ImpressionableLayoutItemViewModifier(0, v6, v7, a4)
                                      - 8)
                          + 80);
  return sub_20E4880DC(a1, v4 + ((v8 + 32) & ~v8), v6, v7);
}

uint64_t type metadata accessor for LayoutItemImpressionInformation()
{
  uint64_t result;

  result = qword_254A1C630;
  if (!qword_254A1C630)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for _ImpressionableLayoutViewModifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _ImpressionableLayoutViewModifier);
}

uint64_t sub_20E48E994(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20E48E9DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0D18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t *sub_20E48EA2C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_20E4A5174();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_20E4A5204();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t sub_20E48EAD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_20E4A5174();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_20E4A5204();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t sub_20E48EB30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_20E4A5174();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_20E4A5204();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t sub_20E48EBAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_20E4A5174();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_20E4A5204();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_20E48EC28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_20E4A5174();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_20E4A5204();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t sub_20E48ECA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_20E4A5174();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_20E4A5204();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_20E48ED20()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_20E48ED2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = sub_20E4A5174();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = sub_20E4A5204();
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_20E48EDA0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_20E48EDAC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = sub_20E4A5174();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = sub_20E4A5204();
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_20E48EE28()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_20E4A5174();
  if (v1 <= 0x3F)
  {
    result = sub_20E4A5204();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void sub_20E48EEAC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_20E3A4C54(319, qword_254A1C5A8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5D330], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
  {
    sub_20E4A5450();
    if (v1 <= 0x3F)
    {
      sub_20E3A4C54(319, &qword_253ED0D20, (uint64_t (*)(uint64_t))MEMORY[0x24BE5DCE8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

char *sub_20E48EFB0(char *a1, uint64_t *a2, int *a3)
{
  char *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  _QWORD *v36;
  uint64_t v37;
  char *v38;
  _QWORD *v39;
  uint64_t v40;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *(_QWORD *)a1 = *a2;
    v4 = (char *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_20E4A5174();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CC8);
      memcpy(v4, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, uint64_t *, uint64_t))(v8 + 16))(v4, a2, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v4, 0, 1, v7);
    }
    v11 = a3[9];
    v12 = &v4[v11];
    v13 = (char *)a2 + v11;
    v14 = sub_20E4A5450();
    v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
    v15(v12, v13, v14);
    v16 = a3[10];
    v17 = a3[11];
    v18 = &v4[v16];
    v19 = (char *)a2 + v16;
    *(_QWORD *)v18 = *(_QWORD *)v19;
    v18[8] = v19[8];
    v15(&v4[v17], (char *)a2 + v17, v14);
    v20 = a3[13];
    v4[a3[12]] = *((_BYTE *)a2 + a3[12]);
    *(_OWORD *)&v4[v20] = *(_OWORD *)((char *)a2 + v20);
    v21 = a3[14];
    v22 = &v4[v21];
    v23 = (char *)a2 + v21;
    v24 = sub_20E4A56E4();
    v25 = *(_QWORD *)(v24 - 8);
    v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
    swift_unknownObjectRetain();
    if (v26(v23, 1, v24))
    {
      v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0D18);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
    }
    v28 = a3[15];
    v29 = &v4[v28];
    v30 = (char *)a2 + v28;
    v31 = *(_QWORD *)v30;
    v32 = v30[8];
    j__swift_retain(*(_QWORD *)v30);
    *(_QWORD *)v29 = v31;
    v29[8] = v32;
    v33 = a3[16];
    v34 = a3[17];
    v35 = &v4[v33];
    v36 = (uint64_t *)((char *)a2 + v33);
    v37 = v36[1];
    *(_QWORD *)v35 = *v36;
    *((_QWORD *)v35 + 1) = v37;
    v38 = &v4[v34];
    v39 = (uint64_t *)((char *)a2 + v34);
    v40 = v39[1];
    *(_QWORD *)v38 = *v39;
    *((_QWORD *)v38 + 1) = v40;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_20E48F204(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = sub_20E4A5174();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v6 = a1 + a2[9];
  v7 = sub_20E4A5450();
  v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
  v8(v6, v7);
  v8(a1 + a2[11], v7);
  swift_unknownObjectRelease();
  v9 = a1 + a2[14];
  v10 = sub_20E4A56E4();
  v11 = *(_QWORD *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  j__swift_release(*(_QWORD *)(a1 + a2[15]), *(unsigned __int8 *)(a1 + a2[15] + 8));
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

char *sub_20E48F330(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;

  v6 = sub_20E4A5174();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CC8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[9];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_20E4A5450();
  v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  v13(v10, v11, v12);
  v14 = a3[10];
  v15 = a3[11];
  v16 = &a1[v14];
  v17 = &a2[v14];
  *(_QWORD *)v16 = *(_QWORD *)v17;
  v16[8] = v17[8];
  v13(&a1[v15], &a2[v15], v12);
  v18 = a3[13];
  a1[a3[12]] = a2[a3[12]];
  *(_OWORD *)&a1[v18] = *(_OWORD *)&a2[v18];
  v19 = a3[14];
  v20 = &a1[v19];
  v21 = &a2[v19];
  v22 = sub_20E4A56E4();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
  swift_unknownObjectRetain();
  if (v24(v21, 1, v22))
  {
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0D18);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  }
  v26 = a3[15];
  v27 = &a1[v26];
  v28 = &a2[v26];
  v29 = *(_QWORD *)v28;
  v30 = v28[8];
  j__swift_retain(*(_QWORD *)v28);
  *(_QWORD *)v27 = v29;
  v27[8] = v30;
  v31 = a3[16];
  v32 = a3[17];
  v33 = &a1[v31];
  v34 = &a2[v31];
  v35 = *((_QWORD *)v34 + 1);
  *(_QWORD *)v33 = *(_QWORD *)v34;
  *((_QWORD *)v33 + 1) = v35;
  v36 = &a1[v32];
  v37 = &a2[v32];
  v38 = *((_QWORD *)v37 + 1);
  *(_QWORD *)v36 = *(_QWORD *)v37;
  *((_QWORD *)v36 + 1) = v38;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

char *sub_20E48F55C(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(char *, uint64_t, uint64_t);
  int v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;

  v6 = sub_20E4A5174();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CC8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  v12 = a3[9];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_20E4A5450();
  v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 24);
  v16(v13, v14, v15);
  v17 = a3[10];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = *(_QWORD *)v19;
  v18[8] = v19[8];
  *(_QWORD *)v18 = v20;
  v16(&a1[a3[11]], &a2[a3[11]], v15);
  a1[a3[12]] = a2[a3[12]];
  v21 = a3[13];
  v22 = &a1[v21];
  v23 = &a2[v21];
  v24 = *((_QWORD *)v23 + 1);
  *(_QWORD *)v22 = *(_QWORD *)v23;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *((_QWORD *)v22 + 1) = v24;
  v25 = a3[14];
  v26 = &a1[v25];
  v27 = &a2[v25];
  v28 = sub_20E4A56E4();
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v29 + 48);
  LODWORD(v16) = v30(v26, 1, v28);
  v31 = v30(v27, 1, v28);
  if (!(_DWORD)v16)
  {
    if (!v31)
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 24))(v26, v27, v28);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v29 + 8))(v26, v28);
    goto LABEL_12;
  }
  if (v31)
  {
LABEL_12:
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0D18);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v26, v27, v28);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
LABEL_13:
  v33 = a3[15];
  v34 = &a1[v33];
  v35 = &a2[v33];
  v36 = *(_QWORD *)v35;
  v37 = v35[8];
  j__swift_retain(*(_QWORD *)v35);
  v38 = *(_QWORD *)v34;
  v39 = v34[8];
  *(_QWORD *)v34 = v36;
  v34[8] = v37;
  j__swift_release(v38, v39);
  v40 = a3[16];
  v41 = &a1[v40];
  v42 = &a2[v40];
  *(_QWORD *)&a1[v40] = *(_QWORD *)&a2[v40];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v41 + 1) = *((_QWORD *)v42 + 1);
  swift_retain();
  swift_release();
  v43 = a3[17];
  v44 = &a1[v43];
  v45 = &a2[v43];
  *(_QWORD *)&a1[v43] = *(_QWORD *)&a2[v43];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v44 + 1) = *((_QWORD *)v45 + 1);
  swift_retain();
  swift_release();
  return a1;
}

char *sub_20E48F868(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;

  v6 = sub_20E4A5174();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CC8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[9];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_20E4A5450();
  v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32);
  v13(v10, v11, v12);
  v14 = a3[10];
  v15 = a3[11];
  v16 = &a1[v14];
  v17 = &a2[v14];
  *(_QWORD *)v16 = *(_QWORD *)v17;
  v16[8] = v17[8];
  v13(&a1[v15], &a2[v15], v12);
  v18 = a3[13];
  a1[a3[12]] = a2[a3[12]];
  *(_OWORD *)&a1[v18] = *(_OWORD *)&a2[v18];
  v19 = a3[14];
  v20 = &a1[v19];
  v21 = &a2[v19];
  v22 = sub_20E4A56E4();
  v23 = *(_QWORD *)(v22 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
  {
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0D18);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v20, v21, v22);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  }
  v25 = a3[15];
  v26 = a3[16];
  v27 = &a1[v25];
  v28 = &a2[v25];
  *(_QWORD *)v27 = *(_QWORD *)v28;
  v27[8] = v28[8];
  *(_OWORD *)&a1[v26] = *(_OWORD *)&a2[v26];
  *(_OWORD *)&a1[a3[17]] = *(_OWORD *)&a2[a3[17]];
  return a1;
}

char *sub_20E48FA44(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(char *, uint64_t, uint64_t);
  int v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;

  v6 = sub_20E4A5174();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CC8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  v12 = a3[9];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_20E4A5450();
  v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40);
  v16(v13, v14, v15);
  v17 = a3[10];
  v18 = a3[11];
  v19 = &a1[v17];
  v20 = &a2[v17];
  *(_QWORD *)v19 = *(_QWORD *)v20;
  v19[8] = v20[8];
  v16(&a1[v18], &a2[v18], v15);
  v21 = a3[13];
  a1[a3[12]] = a2[a3[12]];
  v22 = &a1[v21];
  v23 = *(_QWORD *)&a2[v21 + 8];
  *(_QWORD *)&a1[v21] = *(_QWORD *)&a2[v21];
  swift_unknownObjectRelease();
  *((_QWORD *)v22 + 1) = v23;
  v24 = a3[14];
  v25 = &a1[v24];
  v26 = &a2[v24];
  v27 = sub_20E4A56E4();
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48);
  LODWORD(v16) = v29(v25, 1, v27);
  v30 = v29(v26, 1, v27);
  if (!(_DWORD)v16)
  {
    if (!v30)
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 40))(v25, v26, v27);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v28 + 8))(v25, v27);
    goto LABEL_12;
  }
  if (v30)
  {
LABEL_12:
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0D18);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v25, v26, v27);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
LABEL_13:
  v32 = a3[15];
  v33 = &a1[v32];
  v34 = &a2[v32];
  v35 = *(_QWORD *)v34;
  LOBYTE(v34) = v34[8];
  v36 = *(_QWORD *)v33;
  v37 = v33[8];
  *(_QWORD *)v33 = v35;
  v33[8] = (char)v34;
  j__swift_release(v36, v37);
  v38 = a3[16];
  v39 = &a1[v38];
  v40 = &a2[v38];
  *(_QWORD *)&a1[v38] = *(_QWORD *)&a2[v38];
  swift_bridgeObjectRelease();
  *((_QWORD *)v39 + 1) = *((_QWORD *)v40 + 1);
  swift_release();
  v41 = a3[17];
  v42 = &a1[v41];
  v43 = &a2[v41];
  *(_QWORD *)&a1[v41] = *(_QWORD *)v43;
  swift_bridgeObjectRelease();
  *((_QWORD *)v42 + 1) = *((_QWORD *)v43 + 1);
  swift_release();
  return a1;
}

uint64_t sub_20E48FD14()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_20E48FD20(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v16;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CC8);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_20E4A5450();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[9];
LABEL_7:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0D18);
  v12 = *(_QWORD *)(v14 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v14;
    v13 = a3[14];
    goto LABEL_7;
  }
  v16 = *(_QWORD *)(a1 + a3[16]);
  if (v16 >= 0xFFFFFFFF)
    LODWORD(v16) = -1;
  return (v16 + 1);
}

uint64_t sub_20E48FDF4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_20E48FE00(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CC8);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  v13 = sub_20E4A5450();
  v14 = *(_QWORD *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v13;
    v15 = a4[9];
LABEL_7:
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0D18);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v15 = a4[14];
    goto LABEL_7;
  }
  *(_QWORD *)(a1 + a4[16]) = (a2 - 1);
  return result;
}

uint64_t sub_20E48FED0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[2];
  _QWORD v15[2];

  v4 = *a1;
  v5 = a1[1];
  v6 = type metadata accessor for ImpressionableLayoutItemViewModifier(255, *a1, v5, a4);
  MEMORY[0x212BBDF90](&unk_20E4B0E28, v6);
  v7 = sub_20E4A3EA8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A183B8);
  v8 = sub_20E4A39D4();
  v10 = type metadata accessor for _ImpressionableLayoutItemViewModifier(255, v4, v5, v9);
  v11 = sub_20E4A39D4();
  v15[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDEFB78], v7);
  v15[1] = sub_20E39D010(&qword_254A183B0, &qword_254A183B8, MEMORY[0x24BDF1248]);
  v12 = MEMORY[0x24BDED308];
  v14[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v8, v15);
  v14[1] = MEMORY[0x212BBDF90](&unk_20E4B1058, v10);
  return MEMORY[0x212BBDF90](v12, v11, v14);
}

uint64_t sub_20E48FFF8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[2];

  v4 = *a1;
  v5 = a1[1];
  v6 = type metadata accessor for ImpressionableLayoutViewModifier(255, *a1, v5, a4);
  MEMORY[0x212BBDF90](&unk_20E4B0DD8, v6);
  v7 = sub_20E4A3EA8();
  v9 = type metadata accessor for _ImpressionableLayoutViewModifier(255, v4, v5, v8);
  v10 = sub_20E4A39D4();
  v12[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDEFB78], v7);
  v12[1] = MEMORY[0x212BBDF90](&unk_20E4B1008, v9);
  return MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v10, v12);
}

uint64_t sub_20E4900C0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E4900F4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for ImpressionPreferenceKey(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ImpressionPreferenceKey);
}

uint64_t sub_20E490134()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E490158(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 32))(*a1);
}

uint64_t sub_20E490180(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_20E490524(a1, sub_20E48A5F8, a3, a4);
}

uint64_t sub_20E49018C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  v5 = (int *)type metadata accessor for _ImpressionableLayoutViewModifier(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
  v6 = *((_QWORD *)v5 - 1);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = sub_20E4A338C();
  v10 = *(unsigned __int8 *)(*(_QWORD *)(v9 - 8) + 80);
  v21 = *(_QWORD *)(v9 - 8);
  v22 = v9;
  swift_bridgeObjectRelease();
  v11 = v4 + v7;
  v12 = sub_20E4A5174();
  v13 = *(_QWORD *)(v12 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v13 + 48))(v4 + v7, 1, v12))
    (*(void (**)(unint64_t, uint64_t))(v13 + 8))(v4 + v7, v12);
  v14 = v11 + v5[9];
  v15 = sub_20E4A5450();
  v16 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8);
  v16(v14, v15);
  v16(v11 + v5[11], v15);
  swift_unknownObjectRelease();
  v17 = v11 + v5[14];
  v18 = sub_20E4A56E4();
  v19 = *(_QWORD *)(v18 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
  j__swift_release(*(_QWORD *)(v11 + v5[15]), *(unsigned __int8 *)(v11 + v5[15] + 8));
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v21 + 8))(v4 + ((((v8 + v7 + 7) & 0xFFFFFFFFFFFFFFF8) + v10 + 16) & ~v10), v22);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_20E490378(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  type metadata accessor for _ImpressionableLayoutViewModifier(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
  sub_20E4A338C();
  return sub_20E48AEE0();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t sub_20E490438(uint64_t a1)
{
  return sub_20E490470(a1, (void (*)(char *, uint64_t, char *, uint64_t, uint64_t))MEMORY[0x24BE5D400]);
}

uint64_t sub_20E490454(uint64_t a1)
{
  return sub_20E490470(a1, (void (*)(char *, uint64_t, char *, uint64_t, uint64_t))MEMORY[0x24BE5D3F8]);
}

uint64_t sub_20E490470(uint64_t a1, void (*a2)(char *, uint64_t, char *, uint64_t, uint64_t))
{
  uint64_t *v2;

  return sub_20E48AFC4(a1, v2[4], v2[5], v2[6], v2[7], v2[2], v2[3], a2);
}

uint64_t sub_20E490494(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LayoutItemImpressionInformation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20E4904D8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for LayoutItemImpressionInformation();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20E490518(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_20E490524(a1, (uint64_t (*)(uint64_t, uint64_t))sub_20E48A434, a3, a4);
}

uint64_t sub_20E490524(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;

  v7 = type metadata accessor for _ImpressionableLayoutViewModifier(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
  return a2(a1, v7);
}

uint64_t sub_20E490578(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LayoutItemImpressionInformation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t objectdestroy_23Tm_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v5 = (int *)type metadata accessor for _ImpressionableLayoutViewModifier(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
  v6 = *(unsigned __int8 *)(*((_QWORD *)v5 - 1) + 80);
  v7 = (v6 + 32) & ~v6;
  v8 = v4 + v7;
  v9 = sub_20E4A5174();
  v10 = *(_QWORD *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v4 + v7, 1, v9))
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v4 + v7, v9);
  v11 = v8 + v5[9];
  v12 = sub_20E4A5450();
  v13 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8);
  v13(v11, v12);
  v13(v8 + v5[11], v12);
  swift_unknownObjectRelease();
  v14 = v8 + v5[14];
  v15 = sub_20E4A56E4();
  v16 = *(_QWORD *)(v15 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
  j__swift_release(*(_QWORD *)(v8 + v5[15]), *(unsigned __int8 *)(v8 + v5[15] + 8));
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E490734(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[2];

  v4 = *a1;
  v5 = a1[1];
  v6 = type metadata accessor for _ImpressionableLayoutItemViewModifier(255, *a1, v5, a4);
  MEMORY[0x212BBDF90](&unk_20E4B1058, v6);
  v7 = sub_20E4A3EA8();
  v9 = type metadata accessor for ImpressionPreferenceKey(255, v4, v5, v8);
  MEMORY[0x212BBDF90](&unk_20E4B10D8, v9);
  v10 = sub_20E4A3FC8();
  v11 = sub_20E4A39D4();
  v13[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDEFB78], v7);
  v13[1] = MEMORY[0x212BBDF90](MEMORY[0x24BDF0B90], v10);
  return MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v11, v13);
}

void sub_20E490820(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  _QWORD v27[2];
  _QWORD v28[2];
  _QWORD v29[2];
  _QWORD v30[2];
  _QWORD v31[2];
  uint64_t v32;

  v5 = *a1;
  v4 = a1[1];
  v6 = type metadata accessor for _ImpressionableLayoutViewModifier(255, *a1, v4, a4);
  MEMORY[0x212BBDF90](&unk_20E4B1008, v6);
  v7 = sub_20E4A3EA8();
  type metadata accessor for ImpressionableViewModifier(255);
  v8 = sub_20E4A39D4();
  type metadata accessor for ClickLocationViewModifier();
  v9 = sub_20E4A39D4();
  v20 = sub_20E4A39D4();
  type metadata accessor for _OnScenePhaseChange(255);
  v21 = sub_20E4A39D4();
  v19 = sub_20E4A3E00();
  v11 = type metadata accessor for ImpressionPreferenceKey(255, v5, v4, v10);
  MEMORY[0x212BBDF90](&unk_20E4B10D8, v11);
  type metadata accessor for LayoutItemImpressionInformation();
  v12 = sub_20E4A5B88();
  v32 = sub_20E39F334(&qword_254A1C740, (uint64_t (*)(uint64_t))type metadata accessor for LayoutItemImpressionInformation, (uint64_t)&unk_20E4B0FE0);
  MEMORY[0x212BBDF90](MEMORY[0x24BEE04D0], v12, &v32);
  v13 = sub_20E4A3F98();
  v14 = sub_20E4A39D4();
  v15 = MEMORY[0x212BBDF90](MEMORY[0x24BDEFB78], v7);
  v31[0] = v15;
  v31[1] = sub_20E39F334(&qword_254A18220, type metadata accessor for ImpressionableViewModifier, (uint64_t)&unk_20E4A73D8);
  v16 = MEMORY[0x24BDED308];
  v30[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v8, v31);
  v30[1] = sub_20E39F334(&qword_253ED07E8, (uint64_t (*)(uint64_t))type metadata accessor for ClickLocationViewModifier, (uint64_t)&unk_20E4A953C);
  v17 = MEMORY[0x212BBDF90](v16, v9, v30);
  v29[0] = v17;
  v29[1] = sub_20E3A50B4();
  v18 = MEMORY[0x212BBDF90](v16, v20, v29);
  v28[0] = v17;
  v28[1] = sub_20E39F334(&qword_253ED21C0, type metadata accessor for _OnScenePhaseChange, (uint64_t)&unk_20E4AAC48);
  v27[0] = v18;
  v27[1] = MEMORY[0x212BBDF90](v16, v21, v28);
  v26[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v19, v27);
  v26[1] = MEMORY[0x212BBDF90](MEMORY[0x24BDF09B0], v13);
  v22 = v14;
  v23 = v5;
  v24 = MEMORY[0x212BBDF90](v16, v14, v26);
  v25 = v4;
  MEMORY[0x212BBDF30](255, &v22, MEMORY[0x24BDF33D8], 0);
  v22 = v7;
  v23 = MEMORY[0x24BDF1FA8];
  v24 = v15;
  v25 = MEMORY[0x24BDF1F80];
  type metadata accessor for _RequirementFailureView();
}

uint64_t sub_20E490B1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[2];
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v8 = sub_20E4A3E00();
  v9 = sub_20E4A3E00();
  v14 = v5;
  v15 = v2;
  v16 = v3;
  v17 = v1;
  v13[0] = swift_getOpaqueTypeConformance2();
  v13[1] = MEMORY[0x212BBDF90](&protocol conformance descriptor for _RequirementFailureView<A, B>, a1);
  v11 = MEMORY[0x212BBDF90](v6, v8, v13);
  v12 = v4;
  return MEMORY[0x212BBDF90](v6, v9, &v11);
}

uint64_t sub_20E490BBC()
{
  uint64_t v0;
  uint64_t v2;

  (*(void (**)(uint64_t *__return_ptr))(v0 + 32))(&v2);
  return v2;
}

uint64_t sub_20E490BEC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_20E48B4D8(a1, a2);
}

void _RequirementFailureView.init<>(_:_:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;

  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a2;
  *(_QWORD *)(v10 + 24) = a3;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(a5, a1, a4);
  type metadata accessor for _RequirementFailureView();
}

uint64_t sub_20E490C8C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + *(int *)(result + 52));
  *v3 = sub_20E491F18;
  v3[1] = v2;
  return result;
}

uint64_t _RequirementFailureView.init<>(fatal:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;

  sub_20E3C3948();
  swift_bridgeObjectRetain();
  v6 = sub_20E4A41C0();
  v8 = v7;
  v10 = v9;
  v12 = v11;
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  *(_QWORD *)a3 = v6;
  *(_QWORD *)(a3 + 8) = v8;
  *(_BYTE *)(a3 + 16) = v10 & 1;
  *(_QWORD *)(a3 + 24) = v12;
  *(_QWORD *)(a3 + 32) = sub_20E490F5C;
  *(_QWORD *)(a3 + 40) = result;
  return result;
}

void _RequirementFailureView.init(_:message:)(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1, a2);
  type metadata accessor for _RequirementFailureView();
}

uint64_t sub_20E490DD0(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v4 = (_QWORD *)(v3 + *(int *)(result + 52));
  *v4 = v2;
  v4[1] = v1;
  return result;
}

uint64_t sub_20E490DFC()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void _RequirementFailureView.init<>(_:_:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v14;

  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a2;
  *(_QWORD *)(v14 + 24) = a3;
  *(_BYTE *)(v14 + 32) = a4;
  *(_QWORD *)(v14 + 40) = a5;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 32))(a7, a1, a6);
  type metadata accessor for _RequirementFailureView();
}

uint64_t sub_20E490EC0(uint64_t result)
{
  uint64_t v1;
  uint64_t (*v2)@<X0>(uint64_t@<X8>);
  uint64_t (**v3)@<X0>(uint64_t@<X8>);

  v3 = (uint64_t (**)@<X0>(uint64_t@<X8>))(v1 + *(int *)(result + 52));
  *v3 = sub_20E480130;
  v3[1] = v2;
  return result;
}

uint64_t sub_20E490EF4@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  char v4;
  uint64_t v5;

  sub_20E3C3948();
  swift_bridgeObjectRetain();
  result = sub_20E4A41C0();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4 & 1;
  *(_QWORD *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_20E490F5C@<X0>(uint64_t a1@<X8>)
{
  return sub_20E490EF4(a1);
}

void type metadata accessor for _RequirementFailureView()
{
  JUMPOUT(0x212BBDEE8);
}

uint64_t sub_20E490F80()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t _RequirementFailureView.body.getter@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t OpaqueTypeConformance2;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  char *v60;
  void (*v61)(char *, uint64_t);
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  _QWORD v69[2];
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD v103[2];
  _QWORD v104[2];
  _QWORD v105[2];
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;

  v101 = a2;
  v3 = a1[2];
  v88 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v87 = (uint64_t)v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v86 = (_QWORD *)((char *)v69 - v6);
  v7 = sub_20E4A3F50();
  v93 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v92 = (char *)v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_20E4A3EE4();
  v90 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v89 = (char *)v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1[3];
  v95 = a1;
  v12 = a1[5];
  v78 = v11;
  v106 = v11;
  v107 = MEMORY[0x24BDF4108];
  v79 = v12;
  v108 = v12;
  v109 = MEMORY[0x24BDF40E8];
  v13 = sub_20E4A4634();
  v83 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v80 = (char *)v69 - v14;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A199E0);
  v15 = sub_20E4A39D4();
  v81 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v77 = (char *)v69 - v16;
  v17 = sub_20E4A39D4();
  v85 = *(_QWORD *)(v17 - 8);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v82 = (char *)v69 - v19;
  v84 = v13;
  v20 = MEMORY[0x212BBDF90](MEMORY[0x24BDF41A8], v13, v18);
  v21 = sub_20E491838();
  v69[1] = v20;
  v105[0] = v20;
  v105[1] = v21;
  v22 = MEMORY[0x24BDED308];
  v70 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v15, v105);
  v104[0] = v70;
  v104[1] = v21;
  v23 = MEMORY[0x212BBDF90](v22, v17, v104);
  v24 = sub_20E491884();
  v106 = v17;
  v107 = v9;
  v108 = v23;
  v109 = v24;
  v25 = MEMORY[0x212BBDF30](0, &v106, MEMORY[0x24BDF2188], 0);
  v76 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v74 = (char *)v69 - v26;
  v106 = v17;
  v107 = v9;
  v91 = v9;
  v72 = v23;
  v108 = v23;
  v109 = v24;
  v71 = v24;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v99 = v25;
  v100 = v7;
  v106 = v25;
  v107 = v7;
  v98 = OpaqueTypeConformance2;
  v108 = OpaqueTypeConformance2;
  v109 = MEMORY[0x24BDF04A0];
  v28 = MEMORY[0x212BBDF30](0, &v106, MEMORY[0x24BDF2690], 0);
  v73 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v30 = (char *)v69 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v31);
  v75 = (char *)v69 - v32;
  v33 = sub_20E4A55AC();
  v34 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v36 = (char *)v69 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v37);
  v39 = (char *)v69 - v38;
  v40 = v3;
  v96 = sub_20E4A3E00();
  v94 = *(_QWORD *)(v96 - 8);
  MEMORY[0x24BDAC7A8](v96);
  v102 = (uint64_t)v69 - v41;
  sub_20E4A55A0();
  (*(void (**)(char *, _QWORD, uint64_t))(v34 + 104))(v36, *MEMORY[0x24BE5DA80], v33);
  LOBYTE(v3) = sub_20E4A5594();
  v42 = *(void (**)(char *, uint64_t))(v34 + 8);
  v42(v36, v33);
  v43 = ((uint64_t (*)(char *, uint64_t))v42)(v39, v33);
  if ((v3 & 1) != 0)
  {
    MEMORY[0x24BDAC7A8](v43);
    v69[0] = v40;
    v44 = v78;
    v69[-6] = v40;
    v69[-5] = v44;
    v45 = v95[4];
    v46 = v79;
    v69[-4] = v45;
    v69[-3] = v46;
    v69[-2] = v97;
    v47 = v80;
    sub_20E4A461C();
    sub_20E4A452C();
    v48 = v77;
    v49 = v84;
    sub_20E4A4418();
    swift_release();
    (*(void (**)(char *, uint64_t))(v83 + 8))(v47, v49);
    sub_20E4A452C();
    v50 = v82;
    sub_20E4A4298();
    swift_release();
    (*(void (**)(char *, uint64_t))(v81 + 8))(v48, v15);
    v51 = v89;
    sub_20E4A3ED8();
    v52 = v74;
    v53 = v91;
    sub_20E4A4208();
    (*(void (**)(char *, uint64_t))(v90 + 8))(v51, v53);
    (*(void (**)(char *, uint64_t))(v85 + 8))(v50, v17);
    v54 = v92;
    sub_20E4A3F44();
    v56 = v99;
    v55 = v100;
    v57 = v98;
    v58 = MEMORY[0x24BDF04A0];
    sub_20E4A4268();
    (*(void (**)(char *, uint64_t))(v93 + 8))(v54, v55);
    (*(void (**)(char *, uint64_t))(v76 + 8))(v52, v56);
    v106 = v56;
    v107 = v55;
    v108 = v57;
    v109 = v58;
    v59 = swift_getOpaqueTypeConformance2();
    v60 = v75;
    sub_20E39D614(v75, v30, v28, v59);
    v61 = *(void (**)(char *, uint64_t))(v73 + 8);
    v61(v30, v28);
    sub_20E39D618((uint64_t)v60, v28, (uint64_t)v30);
    sub_20E3DC6B0((uint64_t)v30, v28);
    v61(v30, v28);
    v61(v60, v28);
  }
  else
  {
    v45 = v95[4];
    v62 = v86;
    v63 = v40;
    sub_20E39D614(v86, v97, v40, v45);
    v64 = v87;
    sub_20E39D618((uint64_t)v62, v40, v87);
    v56 = v99;
    v55 = v100;
    v106 = v99;
    v107 = v100;
    v57 = v98;
    v108 = v98;
    v58 = MEMORY[0x24BDF04A0];
    v109 = MEMORY[0x24BDF04A0];
    swift_getOpaqueTypeConformance2();
    sub_20E39CBE0(v64, v28, v63);
    v65 = *(void (**)(uint64_t, uint64_t))(v88 + 8);
    v65(v64, v63);
    v65((uint64_t)v62, v63);
  }
  v106 = v56;
  v107 = v55;
  v108 = v57;
  v109 = v58;
  v103[0] = swift_getOpaqueTypeConformance2();
  v103[1] = v45;
  v66 = v96;
  MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v96, v103);
  v67 = v102;
  sub_20E39D618(v102, v66, v101);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v94 + 8))(v67, v66);
}

unint64_t sub_20E491838()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254A199D8;
  if (!qword_254A199D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A199E0);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDF1028], v1);
    atomic_store(result, (unint64_t *)&qword_254A199D8);
  }
  return result;
}

unint64_t sub_20E491884()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254A1AAC0;
  if (!qword_254A1AAC0)
  {
    v1 = sub_20E4A3EE4();
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDEFE28], v1);
    atomic_store(result, (unint64_t *)&qword_254A1AAC0);
  }
  return result;
}

void sub_20E4918CC(uint64_t a1)
{
  uint64_t v1;

  MEMORY[0x24BDAC7A8](a1);
  MEMORY[0x24BDAC7A8](v1);
  type metadata accessor for _RequirementFailureView();
}

uint64_t sub_20E491954(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *, uint64_t);

  (*(void (**)(void))(v2 + *(int *)(a1 + 52)))();
  sub_20E39D614(v6, v5, v1, v3);
  v8 = *(uint64_t (**)(_QWORD *, uint64_t))(v7 + 8);
  v8(v5, v1);
  sub_20E39D618((uint64_t)v6, v1, v4);
  return v8(v6, v1);
}

void sub_20E4919C8()
{
  uint64_t v0;

  sub_20E4918CC(*(_QWORD *)(v0 + 48));
}

uint64_t sub_20E4919D8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_20E4A4598();
  *a1 = result;
  return result;
}

uint64_t sub_20E491A14()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E491A4C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_20E491AC4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v12 = *(_QWORD *)((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_20E491B40 + 4 * byte_20E4B1120[v10]))();
  }
}

void sub_20E491BC4(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_20E491CB8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x20E491D30);
}

void sub_20E491CC0(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x20E491CC8);
  JUMPOUT(0x20E491D30);
}

void sub_20E491D08()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x20E491D30);
}

void sub_20E491D10()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x20E491D30);
}

uint64_t sub_20E491D18(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v5 + v6) = 0;
  if (!a2)
    JUMPOUT(0x20E491D30);
  if (a3 < 0x7FFFFFFF)
  {
    if ((a2 & 0x80000000) == 0)
      JUMPOUT(0x20E491D2CLL);
    JUMPOUT(0x20E491D24);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v5);
}

uint64_t sub_20E491D48(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t OpaqueTypeConformance2;
  unint64_t v15;
  uint64_t v16;
  _QWORD v18[2];
  _QWORD v19[2];
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;

  v2 = a1[2];
  v1 = a1[3];
  v21 = a1[1];
  v22 = MEMORY[0x24BDF4108];
  v23 = v1;
  v24 = MEMORY[0x24BDF40E8];
  v3 = sub_20E4A4634();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A199E0);
  v4 = sub_20E4A39D4();
  v5 = sub_20E4A39D4();
  v6 = sub_20E4A3EE4();
  v7 = MEMORY[0x212BBDF90](MEMORY[0x24BDF41A8], v3);
  v8 = sub_20E491838();
  v20[0] = v7;
  v20[1] = v8;
  v9 = MEMORY[0x24BDED308];
  v19[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v4, v20);
  v19[1] = v8;
  v10 = MEMORY[0x212BBDF90](v9, v5, v19);
  v11 = sub_20E491884();
  v21 = v5;
  v22 = v6;
  v23 = v10;
  v24 = v11;
  v12 = MEMORY[0x212BBDF30](255, &v21, MEMORY[0x24BDF2188], 0);
  v13 = sub_20E4A3F50();
  v21 = v5;
  v22 = v6;
  v23 = v10;
  v24 = v11;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v21 = v12;
  v22 = v13;
  v15 = MEMORY[0x24BDF04A0];
  v23 = OpaqueTypeConformance2;
  v24 = MEMORY[0x24BDF04A0];
  MEMORY[0x212BBDF30](255, &v21, MEMORY[0x24BDF2690], 0);
  v16 = sub_20E4A3E00();
  v21 = v12;
  v22 = v13;
  v23 = OpaqueTypeConformance2;
  v24 = v15;
  v18[0] = swift_getOpaqueTypeConformance2();
  v18[1] = v2;
  return MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v16, v18);
}

uint64_t ViewWillDisappearReason.init(initialPathCount:pageMetricsNavigationPath:isFlowStackSheetPresented:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t result;
  uint64_t *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;

  v29 = a1;
  v11 = sub_20E4A392C();
  v27 = *(_QWORD *)(v11 - 8);
  v28 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v26 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C88);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C80);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a5)
  {
    v31 = a4;
    v32 = a5;
    v33 = a6 & 1;
    swift_retain();
    swift_retain();
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18408);
    v30 = v17;
    MEMORY[0x212BBBCE0](&v34, v20);
    v17 = v30;
    swift_release();
    swift_release();
    if ((v34 & 1) == 0)
    {
      sub_20E4A5558();
LABEL_12:
      sub_20E3A3D20(a4, a5);
      v24 = &qword_253ED0C88;
      v25 = a3;
      return sub_20E39D1F8(v25, v24);
    }
  }
  if ((a2 & 1) != 0)
  {
LABEL_11:
    sub_20E4A554C();
    goto LABEL_12;
  }
  sub_20E4921E8(a3, (uint64_t)v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_20E39D1F8((uint64_t)v15, &qword_253ED0C88);
    goto LABEL_11;
  }
  sub_20E492230((uint64_t)v15, (uint64_t)v19);
  v21 = v26;
  MEMORY[0x212BBBCE0](v16);
  v22 = sub_20E4A38FC();
  result = (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v21, v28);
  if (!__OFSUB__(v29, 1))
  {
    if (v22 == v29 - 1)
    {
      sub_20E4A5564();
      sub_20E3A3D20(a4, a5);
      sub_20E39D1F8(a3, &qword_253ED0C88);
      v24 = &qword_253ED0C80;
      v25 = (uint64_t)v19;
      return sub_20E39D1F8(v25, v24);
    }
    sub_20E39D1F8((uint64_t)v19, &qword_253ED0C80);
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

uint64_t sub_20E4921E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20E492230(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t ViewWillDisappearReason.init(_:where:)(unsigned __int8 *a1)
{
  return ((uint64_t (*)(void))((char *)sub_20E492294 + 4 * byte_20E4B11B8[*a1]))();
}

uint64_t sub_20E492294(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
    return sub_20E4A554C();
  else
    return sub_20E4A5558();
}

uint64_t sub_20E4922A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[3];
  char v10;
  uint64_t v11;
  char v12;

  KeyPath = swift_getKeyPath();
  v6 = swift_getKeyPath();
  type metadata accessor for FlowAlertAuthority(0);
  sub_20E492570();
  swift_retain();
  v9[0] = sub_20E4A3938();
  v9[1] = v7;
  v9[2] = KeyPath;
  v10 = 0;
  v11 = v6;
  v12 = 0;
  MEMORY[0x212BBBA70](v9, a2, &type metadata for FlowAlertViewModifier, a3);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t View.alertIconBackgroundColor(_:)()
{
  swift_getKeyPath();
  sub_20E4A4250();
  return swift_release();
}

uint64_t sub_20E4923FC()
{
  uint64_t v1;

  sub_20E4925B8();
  sub_20E4A3C08();
  return v1;
}

uint64_t sub_20E492434@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_20E4925B8();
  result = sub_20E4A3C08();
  *a1 = v3;
  return result;
}

uint64_t sub_20E492480()
{
  sub_20E4925B8();
  swift_retain();
  return sub_20E4A3C14();
}

uint64_t sub_20E4924E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1C7E8);
  v2 = sub_20E4A39D4();
  v4[0] = v1;
  v4[1] = sub_20E39D010(&qword_254A1C7F0, &qword_254A1C7E8, MEMORY[0x24BDF1028]);
  return MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v2, v4);
}

unint64_t sub_20E492570()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254A1C7F8;
  if (!qword_254A1C7F8)
  {
    v1 = type metadata accessor for FlowAlertAuthority(255);
    result = MEMORY[0x212BBDF90](&unk_20E4AAE98, v1);
    atomic_store(result, (unint64_t *)&qword_254A1C7F8);
  }
  return result;
}

unint64_t sub_20E4925B8()
{
  unint64_t result;

  result = qword_254A1C800;
  if (!qword_254A1C800)
  {
    result = MEMORY[0x212BBDF90](&unk_20E4B1288, &type metadata for AlertIconBackgroundColorKey);
    atomic_store(result, (unint64_t *)&qword_254A1C800);
  }
  return result;
}

ValueMetadata *type metadata accessor for AlertIconBackgroundColorKey()
{
  return &type metadata for AlertIconBackgroundColorKey;
}

uint64_t destroy for FlowAlertViewModifier(uint64_t a1)
{
  swift_release();
  sub_20E3CBDA8(*(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  return sub_20E39CED8(*(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
}

uint64_t initializeWithCopy for FlowAlertViewModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  v2 = a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  swift_retain();
  sub_20E3CBD0C(v5, v6);
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  v7 = *(_QWORD *)(v2 + 32);
  LOBYTE(v2) = *(_BYTE *)(v2 + 40);
  sub_20E39CFAC(v7, v2);
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = v2;
  return a1;
}

uint64_t assignWithCopy for FlowAlertViewModifier(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v2 = a2;
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = a2[1];
  swift_retain();
  swift_release();
  v4 = v2[2];
  v5 = *((_BYTE *)v2 + 24);
  sub_20E3CBD0C(v4, v5);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = v5;
  sub_20E3CBDA8(v6, v7);
  v8 = v2[4];
  LOBYTE(v2) = *((_BYTE *)v2 + 40);
  sub_20E39CFAC(v8, (char)v2);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_BYTE *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 40) = (_BYTE)v2;
  sub_20E39CED8(v9, v10);
  return a1;
}

uint64_t assignWithTake for FlowAlertViewModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  char v10;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_release();
  v5 = *(_BYTE *)(a2 + 24);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = v5;
  sub_20E3CBDA8(v6, v7);
  v8 = *(_BYTE *)(a2 + 40);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_BYTE *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = v8;
  sub_20E39CED8(v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for FlowAlertViewModifier(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 41))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FlowAlertViewModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 41) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FlowAlertViewModifier()
{
  return &type metadata for FlowAlertViewModifier;
}

uint64_t sub_20E492860@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_20E4A4520();
  *a1 = result;
  return result;
}

uint64_t sub_20E492884()
{
  sub_20E495B10();
  return sub_20E4A389C();
}

uint64_t sub_20E4928D4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E4928E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  int EnumCaseMultiPayload;
  void (*v63)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  uint64_t OpaqueTypeConformance2;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t *v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t *v116;
  char *v118;
  int v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  int v125;
  uint64_t v126;
  char *v127;
  unint64_t v128;
  unint64_t v129;
  unint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  void (*v162)(uint64_t, uint64_t, uint64_t, uint64_t);
  unsigned int (*v163)(char *, uint64_t, uint64_t);
  char *v164;
  uint64_t v165;
  char *v166;
  uint64_t *v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  unint64_t v176;
  unint64_t v177;
  unint64_t v178;
  uint64_t v179;
  unint64_t v180;

  v140 = a1;
  v160 = a2;
  v155 = sub_20E4A5804();
  v154 = *(_QWORD *)(v155 - 8);
  MEMORY[0x24BDAC7A8](v155);
  v121 = (char *)&v120 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A196E8);
  MEMORY[0x24BDAC7A8](v4);
  v153 = (char *)&v120 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1C808);
  MEMORY[0x24BDAC7A8](v6);
  v156 = (char *)&v120 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v159 = sub_20E4A3884();
  v158 = *(_QWORD *)(v159 - 8);
  MEMORY[0x24BDAC7A8](v159);
  v157 = (char *)&v120 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = sub_20E4A4C70();
  v123 = *(_QWORD *)(v124 - 8);
  MEMORY[0x24BDAC7A8](v124);
  v122 = (char *)&v120 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v162 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))__swift_instantiateConcreteTypeFromMangledName(&qword_254A1C810);
  MEMORY[0x24BDAC7A8](v162);
  v11 = (char *)&v120 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for FlowAlertAuthority.Presented(0);
  MEMORY[0x24BDAC7A8](v12);
  v143 = (uint64_t)&v120 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v165 = (uint64_t)&v120 - v15;
  MEMORY[0x24BDAC7A8](v16);
  v137 = (uint64_t)&v120 - v17;
  MEMORY[0x24BDAC7A8](v18);
  v139 = (char *)&v120 - v19;
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v120 - v21;
  MEMORY[0x24BDAC7A8](v23);
  v134 = (char *)&v120 - v24;
  MEMORY[0x24BDAC7A8](v25);
  v27 = (char *)&v120 - v26;
  MEMORY[0x24BDAC7A8](v28);
  v30 = (char *)&v120 - v29;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1C818);
  MEMORY[0x24BDAC7A8](v31);
  v142 = (char *)&v120 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v33);
  v144 = (uint64_t)&v120 - v34;
  MEMORY[0x24BDAC7A8](v35);
  v136 = (char *)&v120 - v36;
  MEMORY[0x24BDAC7A8](v37);
  v138 = (uint64_t)&v120 - v38;
  MEMORY[0x24BDAC7A8](v39);
  v133 = (char *)&v120 - v40;
  MEMORY[0x24BDAC7A8](v41);
  v135 = (uint64_t)&v120 - v42;
  MEMORY[0x24BDAC7A8](v43);
  v45 = (char *)&v120 - v44;
  MEMORY[0x24BDAC7A8](v46);
  v48 = (char *)&v120 - v47;
  v146 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1C820);
  v141 = *(_QWORD *)(v146 - 8);
  MEMORY[0x24BDAC7A8](v146);
  v164 = (char *)&v120 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  v149 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1C828);
  v148 = *(_QWORD *)(v149 - 8);
  MEMORY[0x24BDAC7A8](v149);
  v166 = (char *)&v120 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  v152 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1C830);
  v151 = *(_QWORD *)(v152 - 8);
  MEMORY[0x24BDAC7A8](v152);
  v150 = (char *)&v120 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  v145 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1C838);
  MEMORY[0x24BDAC7A8](v145);
  v147 = (char *)&v120 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = *v2;
  v167 = v2;
  v53 = v2[1];
  swift_getKeyPath();
  swift_getKeyPath();
  v168 = v53;
  sub_20E4A35CC();
  swift_release();
  swift_release();
  sub_20E3F8C2C((uint64_t)v30, (uint64_t)v27);
  v169 = v12;
  if (swift_getEnumCaseMultiPayload())
  {
    sub_20E3BB484((uint64_t)v27, type metadata accessor for FlowAlertAuthority.Presented);
    v54 = sub_20E4A581C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v45, 1, 1, v54);
  }
  else
  {
    v55 = (uint64_t)&v27[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254A19DF0) + 48)];
    v54 = sub_20E4A581C();
    v56 = *(_QWORD *)(v54 - 8);
    (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v45, v27, v54);
    sub_20E39D1F8(v55, &qword_253ED0658);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v45, 0, 1, v54);
  }
  sub_20E3BB440((uint64_t)v45, (uint64_t)v48, &qword_254A1C818);
  sub_20E3BB484((uint64_t)v30, type metadata accessor for FlowAlertAuthority.Presented);
  sub_20E4A581C();
  v57 = *(_QWORD *)(v54 - 8);
  v163 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48);
  if (v163(v48, 1, v54) == 1)
  {
    sub_20E39D1F8((uint64_t)v48, &qword_254A1C818);
  }
  else
  {
    v58 = sub_20E4A57A4();
    v60 = v59;
    (*(void (**)(char *, uint64_t))(v57 + 8))(v48, v54);
    if (v60)
      goto LABEL_8;
  }
  swift_bridgeObjectRelease();
  v58 = 0;
  v60 = 0xE000000000000000;
LABEL_8:
  v179 = v58;
  v180 = v60;
  type metadata accessor for FlowAlertAuthority(0);
  sub_20E492570();
  sub_20E4A3944();
  swift_getKeyPath();
  sub_20E4A3950();
  swift_release();
  swift_release();
  swift_getKeyPath();
  sub_20E4A473C();
  swift_release();
  sub_20E39D1F8((uint64_t)v11, &qword_254A1C810);
  v127 = v170;
  v126 = v171;
  v125 = v172;
  swift_getKeyPath();
  swift_getKeyPath();
  v61 = (uint64_t)v134;
  sub_20E4A35CC();
  swift_release();
  swift_release();
  sub_20E3F8C2C(v61, (uint64_t)v22);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v161 = v57;
  if (EnumCaseMultiPayload)
  {
    sub_20E3BB484((uint64_t)v22, type metadata accessor for FlowAlertAuthority.Presented);
    v63 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v57 + 56);
    v64 = (uint64_t)v133;
    v65 = v133;
    v66 = 1;
  }
  else
  {
    v67 = (uint64_t)&v22[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254A19DF0) + 48)];
    v64 = (uint64_t)v133;
    (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v133, v22, v54);
    sub_20E39D1F8(v67, &qword_253ED0658);
    v63 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v57 + 56);
    v65 = (char *)v64;
    v66 = 0;
  }
  v162 = v63;
  v63((uint64_t)v65, v66, 1, v54);
  v68 = v135;
  sub_20E3BB440(v64, v135, &qword_254A1C818);
  v69 = sub_20E3BB484(v61, type metadata accessor for FlowAlertAuthority.Presented);
  MEMORY[0x24BDAC7A8](v69);
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1C840);
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1C848);
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1C850);
  v73 = sub_20E39D010(&qword_254A1C858, &qword_254A1C840, MEMORY[0x24BDEFB78]);
  v74 = sub_20E3C3948();
  v75 = sub_20E494A10();
  v128 = sub_20E494B10();
  v129 = v75;
  v130 = v74;
  v131 = v73;
  v132 = v72;
  v76 = MEMORY[0x24BEE0D00];
  v133 = (char *)v71;
  v134 = (char *)v70;
  sub_20E4A4424();
  swift_release();
  swift_release();
  sub_20E39D1F8(v68, &qword_254A1C818);
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  v77 = (uint64_t)v139;
  sub_20E4A35CC();
  swift_release();
  swift_release();
  v78 = v137;
  sub_20E3F8C2C(v77, v137);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_20E3BB484(v78, type metadata accessor for FlowAlertAuthority.Presented);
    v79 = 1;
    v80 = (uint64_t)v136;
  }
  else
  {
    v81 = v78 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254A19DF0) + 48);
    v80 = (uint64_t)v136;
    (*(void (**)(char *, uint64_t, uint64_t))(v161 + 32))(v136, v78, v54);
    sub_20E39D1F8(v81, &qword_253ED0658);
    v79 = 0;
  }
  v162(v80, v79, 1, v54);
  v82 = v138;
  sub_20E3BB440(v80, v138, &qword_254A1C818);
  sub_20E3BB484(v77, type metadata accessor for FlowAlertAuthority.Presented);
  if (v163((char *)v82, 1, v54) == 1)
  {
    sub_20E39D1F8(v82, &qword_254A1C818);
  }
  else
  {
    v83 = v122;
    sub_20E4A5798();
    (*(void (**)(uint64_t, uint64_t))(v161 + 8))(v82, v54);
    v84 = (uint64_t)v167;
    v85 = v167[2];
    v86 = *((_BYTE *)v167 + 24);
    sub_20E3CBD0C(v85, v86);
    v87 = sub_20E45CB5C(v85, v86);
    sub_20E3CBDA8(v85, v86);
    v88 = *(_QWORD *)(v84 + 32);
    v89 = *(_BYTE *)(v84 + 40);
    sub_20E39CFAC(v88, v89);
    sub_20E45C99C(v88, v89);
    sub_20E39CED8(v88, v89);
    sub_20E494BD4(v87);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v123 + 8))(v83, v124);
  }
  v90 = v154;
  v170 = v134;
  v171 = v76;
  v172 = v133;
  v173 = v132;
  v174 = v54;
  v175 = v131;
  v176 = v130;
  v177 = v129;
  v178 = v128;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v92 = v146;
  v93 = v164;
  sub_20E4A41FC();
  swift_release();
  (*(void (**)(char *, uint64_t))(v141 + 8))(v93, v92);
  swift_getKeyPath();
  swift_getKeyPath();
  v94 = v165;
  sub_20E4A35CC();
  swift_release();
  swift_release();
  v95 = v143;
  sub_20E3F8C2C(v94, v143);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_20E3BB484(v95, type metadata accessor for FlowAlertAuthority.Presented);
    v96 = 1;
    v97 = v159;
    v98 = v158;
    v99 = v155;
    v100 = v153;
    v101 = (uint64_t)v142;
  }
  else
  {
    v102 = v95 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254A19DF0) + 48);
    v101 = (uint64_t)v142;
    (*(void (**)(char *, uint64_t, uint64_t))(v161 + 32))(v142, v95, v54);
    sub_20E39D1F8(v102, &qword_253ED0658);
    v96 = 0;
    v97 = v159;
    v98 = v158;
    v99 = v155;
    v100 = v153;
  }
  v162(v101, v96, 1, v54);
  v103 = v144;
  sub_20E3BB440(v101, v144, &qword_254A1C818);
  sub_20E3BB484(v165, type metadata accessor for FlowAlertAuthority.Presented);
  if (v163((char *)v103, 1, v54) == 1)
  {
    v104 = &qword_254A1C818;
    v105 = v103;
LABEL_24:
    sub_20E39D1F8(v105, v104);
    v106 = v157;
    v107 = (uint64_t)v156;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v98 + 56))(v156, 1, 1, v97);
    goto LABEL_25;
  }
  sub_20E4A5810();
  (*(void (**)(uint64_t, uint64_t))(v161 + 8))(v103, v54);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v90 + 48))(v100, 1, v99) == 1)
  {
    v104 = &qword_254A196E8;
    v105 = (uint64_t)v100;
    goto LABEL_24;
  }
  v118 = v121;
  (*(void (**)(char *, char *, uint64_t))(v90 + 16))(v121, v100, v99);
  v119 = (*(uint64_t (**)(char *, uint64_t))(v90 + 88))(v118, v99);
  v106 = v157;
  v107 = (uint64_t)v156;
  if (v119 == *MEMORY[0x24BE5DF18])
  {
    sub_20E4A3860();
LABEL_31:
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v98 + 56))(v107, 0, 1, v97);
    goto LABEL_33;
  }
  if (v119 == *MEMORY[0x24BE5DF20])
  {
    sub_20E4A386C();
    goto LABEL_31;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v98 + 56))(v156, 1, 1, v97);
  (*(void (**)(char *, uint64_t))(v90 + 8))(v121, v99);
LABEL_33:
  (*(void (**)(char *, uint64_t))(v90 + 8))(v100, v99);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v98 + 48))(v107, 1, v97) != 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v98 + 32))(v106, v107, v97);
    goto LABEL_26;
  }
LABEL_25:
  sub_20E4A3878();
  sub_20E39D1F8(v107, &qword_254A1C808);
LABEL_26:
  v170 = (char *)v92;
  v171 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  v108 = v150;
  v109 = v149;
  v110 = v166;
  sub_20E4A4280();
  (*(void (**)(char *, uint64_t))(v98 + 8))(v106, v97);
  (*(void (**)(char *, uint64_t))(v148 + 8))(v110, v109);
  v111 = sub_20E4A48A4();
  v113 = v112;
  v114 = (uint64_t)v147;
  v115 = (uint64_t)&v147[*(int *)(v145 + 36)];
  sub_20E494304((uint64_t)v167, v115);
  v116 = (uint64_t *)(v115 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254A1C888) + 36));
  *v116 = v111;
  v116[1] = v113;
  (*(void (**)(uint64_t, char *, uint64_t))(v151 + 32))(v114, v108, v152);
  return sub_20E3BB440(v114, v160, &qword_254A1C838);
}

uint64_t sub_20E493A0C@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int EnumCaseMultiPayload;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = type metadata accessor for FlowAlertAuthority.Presented(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20E3F8C2C(a1, (uint64_t)v6);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    result = sub_20E3BB484((uint64_t)v6, type metadata accessor for FlowAlertAuthority.Presented);
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19DF0);
    sub_20E39D1F8((uint64_t)&v6[*(int *)(v9 + 48)], &qword_253ED0658);
    v10 = sub_20E4A581C();
    result = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v6, v10);
  }
  *a2 = EnumCaseMultiPayload == 0;
  return result;
}

uint64_t sub_20E493AEC(uint64_t a1, __int128 *a2)
{
  _OWORD *v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  __int128 v11;

  sub_20E4A57EC();
  swift_getKeyPath();
  v11 = *a2;
  v9 = *((_QWORD *)a2 + 2);
  v10 = *((_BYTE *)a2 + 24);
  v7 = *((_QWORD *)a2 + 4);
  v8 = *((_BYTE *)a2 + 40);
  v3 = (_OWORD *)swift_allocObject();
  v4 = a2[1];
  v3[1] = *a2;
  v3[2] = v4;
  *(_OWORD *)((char *)v3 + 41) = *(__int128 *)((char *)a2 + 25);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = sub_20E4959BC;
  *(_QWORD *)(v5 + 24) = v3;
  sub_20E45BC7C((uint64_t)&v11);
  sub_20E495960((uint64_t)&v9);
  sub_20E49598C((uint64_t)&v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1C8B0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1C870);
  sub_20E39D010(&qword_254A1C8B8, &qword_254A1C8B0, (uint64_t)&protocol conformance descriptor for IndexedRandomAccessCollection<A>);
  sub_20E494A74();
  return sub_20E4A47A8();
}

uint64_t sub_20E493C44@<X0>(__int128 *a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t *v35;
  char *v36;
  uint64_t (**v37)@<X0>(uint64_t@<X8>);
  uint64_t KeyPath;
  _OWORD *v39;
  __int128 v40;
  uint64_t *v41;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;

  v4 = sub_20E4A4CA0();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19628);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_254A1C298);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1C870);
  MEMORY[0x24BDAC7A8](v45);
  v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_20E4A57C8();
  v46 = v16;
  v47 = v15;
  v17 = sub_20E4A57B0();
  if (!v18)
  {
    v23 = sub_20E4A3620();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v9, 1, 1, v23);
    v24 = v45;
    goto LABEL_15;
  }
  v19 = v17;
  v20 = v18;
  v43 = v6;
  v21 = sub_20E4A5780();
  v44 = a2;
  if (v21 == v19 && v20 == v22)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    sub_20E4A3614();
    v26 = sub_20E4A3620();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v9, 0, 1, v26);
    swift_bridgeObjectRelease();
    a2 = v44;
    v24 = v45;
    goto LABEL_15;
  }
  v25 = sub_20E4A635C();
  swift_bridgeObjectRelease();
  if ((v25 & 1) != 0)
    goto LABEL_7;
  if (sub_20E4A5774() == v19 && v20 == v27)
  {
    swift_bridgeObjectRelease();
    v24 = v45;
  }
  else
  {
    v28 = sub_20E4A635C();
    swift_bridgeObjectRelease();
    v24 = v45;
    if ((v28 & 1) == 0)
    {
      v30 = sub_20E4A3620();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v9, 1, 1, v30);
      goto LABEL_14;
    }
  }
  sub_20E4A3608();
  v29 = sub_20E4A3620();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v9, 0, 1, v29);
LABEL_14:
  swift_bridgeObjectRelease();
  a2 = v44;
LABEL_15:
  sub_20E4A57D4();
  if (v49)
  {
    sub_20E3B1AB4(&v48, (uint64_t)&v50);
  }
  else
  {
    sub_20E4A4C94();
    v51 = sub_20E4A4B08();
    v52 = MEMORY[0x24BE5C848];
    __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)&v50);
    sub_20E4A4AFC();
    sub_20E39D1F8((uint64_t)&v48, &qword_254A19630);
  }
  v32 = v46;
  v31 = v47;
  v33 = swift_allocObject();
  *(_QWORD *)(v33 + 16) = v31;
  *(_QWORD *)(v33 + 24) = v32;
  v34 = &v12[v10[11]];
  *(_QWORD *)v34 = swift_getKeyPath();
  v34[40] = 0;
  v35 = (uint64_t *)&v12[v10[12]];
  *v35 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
  swift_storeEnumTagMultiPayload();
  v36 = &v12[v10[13]];
  *(_QWORD *)v36 = swift_getKeyPath();
  *((_QWORD *)v36 + 1) = 0;
  v36[16] = 0;
  sub_20E3BB440((uint64_t)v9, (uint64_t)v12, &qword_254A19628);
  sub_20E3BB440((uint64_t)&v50, (uint64_t)&v12[v10[9]], &qword_254A19630);
  v37 = (uint64_t (**)@<X0>(uint64_t@<X8>))&v12[v10[10]];
  *v37 = sub_20E495A64;
  v37[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v33;
  KeyPath = swift_getKeyPath();
  v50 = *a1;
  *(_QWORD *)&v48 = *((_QWORD *)a1 + 2);
  BYTE8(v48) = *((_BYTE *)a1 + 24);
  v53 = *((_QWORD *)a1 + 4);
  v54 = *((_BYTE *)a1 + 40);
  v39 = (_OWORD *)swift_allocObject();
  v40 = a1[1];
  v39[1] = *a1;
  v39[2] = v40;
  *(_OWORD *)((char *)v39 + 41) = *(__int128 *)((char *)a1 + 25);
  sub_20E495AC8((uint64_t)v12, (uint64_t)v14);
  v41 = (uint64_t *)&v14[*(int *)(v24 + 36)];
  *v41 = KeyPath;
  v41[1] = (uint64_t)sub_20E495AC0;
  v41[2] = (uint64_t)v39;
  sub_20E45BC7C((uint64_t)&v50);
  sub_20E495960((uint64_t)&v48);
  sub_20E49598C((uint64_t)&v53);
  sub_20E39D1F8((uint64_t)v12, &qword_254A1C298);
  return sub_20E3BB440((uint64_t)v14, a2, &qword_254A1C870);
}

uint64_t sub_20E4940DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14[2];
  uint64_t v15;

  v2 = type metadata accessor for FlowAlertAuthority.Presented(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v11 - v6;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_20E4A35CC();
  swift_release();
  swift_release();
  sub_20E3F8C2C((uint64_t)v7, (uint64_t)v4);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_20E3BB484((uint64_t)v4, type metadata accessor for FlowAlertAuthority.Presented);
    memset(v14, 0, sizeof(v14));
    v15 = 0;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19DF0);
    sub_20E3BB440((uint64_t)&v4[*(int *)(v8 + 48)], (uint64_t)v14, &qword_253ED0658);
    v9 = sub_20E4A581C();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v4, v9);
  }
  sub_20E3BB440((uint64_t)v14, (uint64_t)&v12, &qword_253ED0658);
  sub_20E3BB484((uint64_t)v7, type metadata accessor for FlowAlertAuthority.Presented);
  if (!v13)
    return sub_20E39D1F8((uint64_t)&v12, &qword_253ED0658);
  sub_20E39D1F8(a1, &qword_253ED0658);
  sub_20E3B1AB4(&v12, (uint64_t)v14);
  return sub_20E3B1AB4(v14, a1);
}

uint64_t sub_20E49429C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  char v5;
  uint64_t v6;

  sub_20E4A57F8();
  if (v2)
  {
    sub_20E3C3948();
    result = sub_20E4A41C0();
    v6 = v5 & 1;
  }
  else
  {
    result = 0;
    v6 = 0;
    v4 = 0;
  }
  *a1 = result;
  a1[1] = v2;
  a1[2] = v6;
  a1[3] = v4;
  return result;
}

uint64_t sub_20E494304@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v28;
  _OWORD *v29;
  __int128 v30;
  int *v31;
  uint64_t (**v32)@<X0>(uint64_t *@<X8>);
  uint64_t (**v33)@<X0>(uint64_t *@<X8>);
  uint64_t (**v34)@<X0>(uint64_t *@<X8>);
  uint64_t v35;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unsigned __int8 v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  char v50;

  v43 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1C8A0);
  MEMORY[0x24BDAC7A8](v3);
  v42 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = type metadata accessor for FlowAlertAuthority.Presented(0);
  MEMORY[0x24BDAC7A8](v38);
  v37 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v37 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1C810);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1C8A8);
  MEMORY[0x24BDAC7A8](v40);
  v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v39 = (uint64_t)&v37 - v15;
  v16 = *(_QWORD *)(a1 + 8);
  type metadata accessor for FlowAlertAuthority(0);
  sub_20E492570();
  sub_20E4A3944();
  swift_getKeyPath();
  sub_20E4A3950();
  swift_release();
  swift_release();
  swift_getKeyPath();
  sub_20E4A473C();
  swift_release();
  sub_20E39D1F8((uint64_t)v11, &qword_254A1C810);
  v17 = v44;
  v18 = v45;
  LODWORD(v19) = v46;
  swift_getKeyPath();
  swift_getKeyPath();
  v41 = v16;
  v20 = (uint64_t)v37;
  sub_20E4A35CC();
  swift_release();
  swift_release();
  sub_20E3F8C2C((uint64_t)v8, v20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v21 = v20 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254A19DE8) + 48);
    v22 = sub_20E4A5840();
    LODWORD(v38) = v19;
    v19 = v18;
    v23 = v17;
    v24 = *(_QWORD *)(v22 - 8);
    v25 = (uint64_t)v42;
    (*(void (**)(char *, uint64_t, uint64_t))(v24 + 32))(v42, v21, v22);
    v26 = sub_20E4A33B0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v20, v26);
    v27 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v24 + 56);
    v17 = v23;
    v18 = v19;
    LOBYTE(v19) = v38;
    v27(v25, 0, 1, v22);
  }
  else
  {
    sub_20E3BB484(v20, type metadata accessor for FlowAlertAuthority.Presented);
    v28 = sub_20E4A5840();
    v25 = (uint64_t)v42;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v42, 1, 1, v28);
  }
  sub_20E3BB484((uint64_t)v8, type metadata accessor for FlowAlertAuthority.Presented);
  v49 = *(_QWORD *)(a1 + 16);
  v50 = *(_BYTE *)(a1 + 24);
  v47 = *(_QWORD *)(a1 + 32);
  v48 = *(_BYTE *)(a1 + 40);
  v29 = (_OWORD *)swift_allocObject();
  v30 = *(_OWORD *)(a1 + 16);
  v29[1] = *(_OWORD *)a1;
  v29[2] = v30;
  *(_OWORD *)((char *)v29 + 41) = *(_OWORD *)(a1 + 25);
  *(_QWORD *)v13 = v17;
  *((_QWORD *)v13 + 1) = v18;
  v13[16] = v19;
  v31 = (int *)v40;
  sub_20E3BB440(v25, (uint64_t)&v13[*(int *)(v40 + 76)], &qword_254A1C8A0);
  v32 = (uint64_t (**)@<X0>(uint64_t *@<X8>))&v13[v31[20]];
  *v32 = sub_20E495958;
  v32[1] = (uint64_t (*)@<X0>(uint64_t *@<X8>))v29;
  v33 = (uint64_t (**)@<X0>(uint64_t *@<X8>))&v13[v31[21]];
  *v33 = sub_20E494948;
  v33[1] = 0;
  v34 = (uint64_t (**)@<X0>(uint64_t *@<X8>))&v13[v31[22]];
  *v34 = sub_20E494954;
  v34[1] = 0;
  v35 = v39;
  sub_20E3BB440((uint64_t)v13, v39, &qword_254A1C8A8);
  sub_20E3BB440(v35, v43, &qword_254A1C8A8);
  swift_retain();
  sub_20E495960((uint64_t)&v49);
  return sub_20E49598C((uint64_t)&v47);
}

uint64_t sub_20E49473C@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int EnumCaseMultiPayload;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v4 = type metadata accessor for FlowAlertAuthority.Presented(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20E3F8C2C(a1, (uint64_t)v6);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v8 = &v6[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254A19DE8) + 48)];
    v9 = sub_20E4A5840();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
    v10 = sub_20E4A33B0();
    result = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v6, v10);
  }
  else
  {
    result = sub_20E3BB484((uint64_t)v6, type metadata accessor for FlowAlertAuthority.Presented);
  }
  *a2 = EnumCaseMultiPayload == 1;
  return result;
}

uint64_t sub_20E494830@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v4 = sub_20E4A4C70();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20E4A5828();
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_BYTE *)(a1 + 24);
  sub_20E3CBD0C(v8, v9);
  v10 = sub_20E45CB5C(v8, v9);
  sub_20E3CBDA8(v8, v9);
  v11 = *(_QWORD *)(a1 + 32);
  LOBYTE(a1) = *(_BYTE *)(a1 + 40);
  sub_20E39CFAC(v11, a1);
  sub_20E45C99C(v11, a1);
  sub_20E39CED8(v11, a1);
  v12 = sub_20E494BD4(v10);
  swift_bridgeObjectRelease();
  result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *a2 = v12;
  return result;
}

uint64_t sub_20E494948@<X0>(uint64_t *a1@<X8>)
{
  return sub_20E494960(MEMORY[0x24BE5DF68], a1);
}

uint64_t sub_20E494954@<X0>(uint64_t *a1@<X8>)
{
  return sub_20E494960(MEMORY[0x24BE5DF70], a1);
}

uint64_t sub_20E494960@<X0>(uint64_t (*a1)(void)@<X1>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  result = a1();
  v5 = MEMORY[0x24BEE4AF8];
  if (v4)
    v6 = result;
  else
    v6 = 0;
  *a2 = v6;
  a2[1] = v4;
  if (!v4)
    v5 = 0;
  a2[2] = 0;
  a2[3] = v5;
  return result;
}

uint64_t sub_20E4949A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20E4928E4(a1, a2);
}

uint64_t sub_20E4949E4(char *a1)
{
  return sub_20E405D80(*a1);
}

uint64_t sub_20E494A08(uint64_t a1)
{
  uint64_t v1;

  return sub_20E493AEC(a1, *(__int128 **)(v1 + 16));
}

unint64_t sub_20E494A10()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_254A1C860;
  if (!qword_254A1C860)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1C848);
    v2 = sub_20E494A74();
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDF4A08], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_254A1C860);
  }
  return result;
}

unint64_t sub_20E494A74()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254A1C868;
  if (!qword_254A1C868)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1C870);
    v2[0] = sub_20E39D010(&qword_254A1C878, &qword_254A1C298, (uint64_t)&protocol conformance descriptor for ActionButton<A>);
    v2[1] = sub_20E39D010((unint64_t *)&qword_253ED0C48, &qword_253ED0C50, MEMORY[0x24BDF1248]);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254A1C868);
  }
  return result;
}

unint64_t sub_20E494B10()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_254A1C880;
  if (!qword_254A1C880)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1C850);
    v2 = MEMORY[0x24BDF1F80];
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDF5578], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_254A1C880);
  }
  return result;
}

uint64_t sub_20E494B6C@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  char v4;
  uint64_t v5;

  sub_20E3C3948();
  swift_bridgeObjectRetain();
  result = sub_20E4A41C0();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4 & 1;
  *(_QWORD *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_20E494BD4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  ValueMetadata *v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  void (*Kind)(char *, char *);
  char *v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t result;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t (*v59)();
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  ValueMetadata *v64;
  char *v65;
  uint64_t v66;
  int v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t *boxed_opaque_existential_1Tm;
  char v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  char *v88;
  ValueMetadata *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char v112[8];
  uint64_t v113[2];
  uint64_t v114;

  v2 = sub_20E4A4A90();
  MEMORY[0x24BDAC7A8](v2);
  v91 = (char *)&v84 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_20E4A5A8C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v84 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1C890);
  MEMORY[0x24BDAC7A8](v8);
  v101 = (char *)&v84 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = type metadata accessor for MediaArtwork.BundleImageProtocol.MatchedResource();
  v99 = *(_QWORD *)(v100 - 8);
  MEMORY[0x24BDAC7A8](v100);
  v11 = (char *)&v84 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = sub_20E4A45B0();
  v94 = *(_QWORD *)(v95 - 8);
  MEMORY[0x24BDAC7A8](v95);
  v93 = (char *)&v84 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18AA0);
  MEMORY[0x24BDAC7A8](v13);
  v98 = (char *)&v84 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v84 - v16;
  v18 = sub_20E4A4D3C();
  v106 = *(_QWORD *)(v18 - 8);
  v107 = v18;
  MEMORY[0x24BDAC7A8](v18);
  v96 = (char *)&v84 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v102 = (char *)&v84 - v21;
  MEMORY[0x24BDAC7A8](v22);
  v97 = (char *)&v84 - v23;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1C898);
  MEMORY[0x24BDAC7A8](v24);
  v105 = (uint64_t)&v84 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = type metadata accessor for MediaArtwork.SystemImageProtocol.MatchedSymbol();
  v103 = *(_QWORD *)(v104 - 8);
  MEMORY[0x24BDAC7A8](v104);
  v92 = (uint64_t)&v84 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A0C8);
  MEMORY[0x24BDAC7A8](v27);
  v29 = (char *)&v84 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_20E4A3344();
  v31 = *(ValueMetadata **)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v108 = (char *)&v84 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s9JetEngine12MediaArtworkV01_aB8_SwiftUIE5SizedV9_resource9withScaleAA0cD8Resource_pSg12CoreGraphics7CGFloatV_tF_0();
  if (!v114)
  {
    sub_20E39D1F8((uint64_t)v113, &qword_254A19100);
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v31[3].Description)(v29, 1, 1, v30);
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1AF58);
  v33 = swift_dynamicCast();
  ((void (*)(char *, _QWORD, uint64_t, uint64_t))v31[3].Description)(v29, v33 ^ 1u, 1, v30);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v31[3].Kind)(v29, 1, v30) == 1)
  {
LABEL_9:
    v41 = &qword_254A1A0C8;
LABEL_36:
    sub_20E39D1F8((uint64_t)v29, v41);
    return 0;
  }
  v34 = v30;
  v88 = v7;
  v84 = v5;
  v85 = v4;
  v86 = v11;
  v89 = v31;
  Kind = (void (*)(char *, char *))v31[2].Kind;
  v36 = v108;
  v90 = v34;
  Kind(v108, v29);
  v37 = *(_QWORD *)(a1 + 16);
  if (v37)
  {
    v38 = a1 + 32;
    swift_bridgeObjectRetain();
    v39 = 0;
    while (1)
    {
      sub_20E3C39FC(v38, (uint64_t)v113);
      sub_20E3C39FC((uint64_t)v113, (uint64_t)v112);
      swift_bridgeObjectRetain();
      v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18A30);
      LOBYTE(v111) = swift_dynamicCast() ^ 1;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v113);
      swift_bridgeObjectRelease();
      if (v111 != 1)
        break;
      ++v39;
      v38 += 40;
      if (v37 == v39)
        goto LABEL_13;
    }
    if (v37 == v39)
    {
LABEL_13:
      swift_bridgeObjectRelease();
      goto LABEL_14;
    }
    if (v39 < v37)
    {
      sub_20E3C39FC(v38, (uint64_t)v113);
      sub_20E3C39FC((uint64_t)v113, (uint64_t)v112);
      LOBYTE(v111) = swift_dynamicCast() ^ 1;
      result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v113);
      if ((v111 & 1) == 0)
        goto LABEL_13;
      __break(1u);
      goto LABEL_49;
    }
    __break(1u);
    goto LABEL_47;
  }
LABEL_14:
  if (qword_254A180D8 != -1)
    swift_once();
  v43 = sub_20E4A4D60();
  __swift_project_value_buffer(v43, (uint64_t)qword_254A19B38);
  sub_20E4A4D54();
  v45 = v106;
  v44 = v107;
  v40 = *(_QWORD *)(v106 + 48);
  v46 = ((uint64_t (*)(char *, uint64_t, uint64_t))v40)(v17, 1, v107);
  v87 = v43;
  if (v46 == 1)
  {
    sub_20E39D1F8((uint64_t)v17, &qword_254A18AA0);
    v47 = v105;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v103 + 56))(v105, 1, 1, v104);
  }
  else
  {
    v48 = v97;
    (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v97, v17, v44);
    v49 = (uint64_t)v102;
    (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v102, v48, v44);
    v47 = v105;
    sub_20E3EDAB8(v49, v105);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v48, v44);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v103 + 48))(v47, 1, v104) != 1)
    {
      v53 = v92;
      sub_20E3A57AC(v47, v92, (uint64_t (*)(_QWORD))type metadata accessor for MediaArtwork.SystemImageProtocol.MatchedSymbol);
      sub_20E3EE1BC(v53);
      v54 = v94;
      v55 = v93;
      v56 = v95;
      (*(void (**)(char *, _QWORD, uint64_t))(v94 + 104))(v93, *MEMORY[0x24BDF3FD0], v95);
      v57 = sub_20E4A4604();
      swift_release();
      (*(void (**)(char *, uint64_t))(v54 + 8))(v55, v56);
      v58 = v53;
      v59 = type metadata accessor for MediaArtwork.SystemImageProtocol.MatchedSymbol;
      goto LABEL_45;
    }
  }
  sub_20E39D1F8(v47, &qword_254A1C898);
  if (!v37)
  {
LABEL_29:
    __swift_instantiateConcreteTypeFromMangledName(&qword_254A18A98);
    v60 = swift_allocObject();
    *(_OWORD *)(v60 + 16) = xmmword_20E4A7F90;
    *(_QWORD *)(v60 + 32) = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
    v113[0] = v60;
    sub_20E4A5D38();
    v61 = v113[0];
LABEL_30:
    v62 = (uint64_t)v98;
    if (qword_254A180D0 != -1)
      swift_once();
    __swift_project_value_buffer(v87, (uint64_t)qword_254A18A80);
    sub_20E4A4D54();
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v40)(v62, 1, v44) == 1)
    {
      sub_20E39D1F8(v62, &qword_254A18AA0);
      v29 = v101;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v99 + 56))(v101, 1, 1, v100);
      v63 = v90;
      v64 = v89;
LABEL_35:
      ((void (*)(char *, uint64_t))v64->Description)(v36, v63);
      swift_bridgeObjectRelease();
      v41 = &qword_254A1C890;
      goto LABEL_36;
    }
    v65 = v96;
    (*(void (**)(char *, uint64_t, uint64_t))(v45 + 32))(v96, v62, v44);
    v66 = (uint64_t)v102;
    (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v102, v65, v44);
    v29 = v101;
    sub_20E3B2AB8(v66, (uint64_t)v101);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v65, v44);
    v67 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v99 + 48))(v29, 1, v100);
    v63 = v90;
    v64 = v89;
    if (v67 == 1)
      goto LABEL_35;
    v68 = v86;
    sub_20E3A57AC((uint64_t)v29, (uint64_t)v86, (uint64_t (*)(_QWORD))type metadata accessor for MediaArtwork.BundleImageProtocol.MatchedResource);
    v113[0] = v61;
    sub_20E3B3338(v68);
    swift_bridgeObjectRelease();
    v81 = v94;
    v82 = v93;
    v83 = v95;
    (*(void (**)(char *, _QWORD, uint64_t))(v94 + 104))(v93, *MEMORY[0x24BDF3FD0], v95);
    v57 = sub_20E4A4604();
    swift_release();
    (*(void (**)(char *, uint64_t))(v81 + 8))(v82, v83);
    v59 = type metadata accessor for MediaArtwork.BundleImageProtocol.MatchedResource;
    v58 = (uint64_t)v68;
LABEL_45:
    sub_20E3BB484(v58, (uint64_t (*)(_QWORD))v59);
    ((void (*)(char *, uint64_t))v89->Description)(v36, v90);
    return v57;
  }
  v50 = a1 + 32;
  swift_bridgeObjectRetain();
  v51 = 0;
  v31 = &type metadata for MediaArtwork.BundleImageProtocol;
  while (1)
  {
    sub_20E3C39FC(v50, (uint64_t)v113);
    sub_20E3C39FC((uint64_t)v113, (uint64_t)v112);
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254A18A30);
    if ((swift_dynamicCast() & 1) == 0)
      v111 = 0;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v113);
    swift_bridgeObjectRelease();
    v52 = v111;
    swift_bridgeObjectRelease();
    if (v52)
      break;
    ++v51;
    v50 += 40;
    if (v37 == v51)
      goto LABEL_28;
  }
  if (v37 == v51)
  {
LABEL_28:
    swift_bridgeObjectRelease();
    v44 = v107;
    v36 = v108;
    v45 = v106;
    goto LABEL_29;
  }
  if (v51 >= v37)
  {
LABEL_47:
    __break(1u);
    swift_once();
    v69 = v85;
    v70 = __swift_project_value_buffer(v85, (uint64_t)qword_254A24670);
    v71 = v84;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v84 + 16))(v37, v70, v69);
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0D58);
    v72 = *(unsigned __int8 *)(*(_QWORD *)(sub_20E4A4ACC() - 8) + 80);
    v73 = (v72 + 32) & ~v72;
    v74 = swift_allocObject();
    *(_OWORD *)(v74 + 16) = xmmword_20E4A72D0;
    v107 = v74 + v73;
    sub_20E4A4A84();
    sub_20E4A4A78();
    v76 = *(_QWORD *)v40;
    v75 = *(_QWORD *)(v40 + 8);
    v114 = MEMORY[0x24BEE0D00];
    v113[0] = v76;
    v113[1] = v75;
    swift_bridgeObjectRetain();
    sub_20E4A4A48();
    sub_20E39D1F8((uint64_t)v113, &qword_253ED2A38);
    sub_20E4A4A78();
    swift_getErrorValue();
    v77 = v109;
    v78 = v110;
    v114 = v110;
    boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v113);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 16))(boxed_opaque_existential_1Tm, v77, v78);
    sub_20E4A4A54();
    sub_20E39D1F8((uint64_t)v113, &qword_253ED2A38);
    sub_20E4A4A78();
    sub_20E4A4A9C();
    sub_20E4A575C();
    swift_bridgeObjectRelease();

    (*(void (**)(unint64_t, uint64_t))(v71 + 8))(v37, v69);
    sub_20E3BB484(v40, (uint64_t (*)(_QWORD))type metadata accessor for MediaArtwork.BundleImageProtocol.MatchedResource);
    ((void (*)(char *, uint64_t))v89->Description)(v108, v90);
    return 0;
  }
  sub_20E3C39FC(v50, (uint64_t)v113);
  sub_20E3C39FC((uint64_t)v113, (uint64_t)v112);
  v80 = swift_dynamicCast();
  v36 = v108;
  if ((v80 & 1) == 0)
    v111 = 0;
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v113);
  v61 = v111;
  v45 = v106;
  v44 = v107;
  if (v111)
  {
    swift_bridgeObjectRelease();
    goto LABEL_30;
  }
LABEL_49:
  __break(1u);
  return result;
}

uint64_t sub_20E495930(char *a1)
{
  return sub_20E405E84(*a1);
}

uint64_t sub_20E495958@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_20E494830(v1 + 16, a1);
}

uint64_t sub_20E495960(uint64_t a1)
{
  sub_20E3CBD0C(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  return a1;
}

uint64_t sub_20E49598C(uint64_t a1)
{
  sub_20E39CFAC(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  return a1;
}

uint64_t sub_20E4959BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_20E493C44((__int128 *)(v1 + 16), a1);
}

uint64_t sub_20E4959C4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E4959E8(char *a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t, char *);
  uint64_t v4;
  uint64_t v5;

  v3 = *(uint64_t (**)(uint64_t, char *))(v1 + 16);
  v4 = *(_QWORD *)a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1C8C0);
  return v3(v4, &a1[*(int *)(v5 + 48)]);
}

uint64_t sub_20E495A40()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_20E495A64@<X0>(uint64_t a1@<X8>)
{
  return sub_20E494B6C(a1);
}

uint64_t objectdestroyTm_8()
{
  uint64_t v0;

  swift_release();
  sub_20E3CBDA8(*(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
  sub_20E39CED8(*(_QWORD *)(v0 + 48), *(_BYTE *)(v0 + 56));
  return swift_deallocObject();
}

uint64_t sub_20E495AC0(uint64_t a1)
{
  return sub_20E4940DC(a1);
}

uint64_t sub_20E495AC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1C298);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_20E495B10()
{
  unint64_t result;

  result = qword_254A1C8C8;
  if (!qword_254A1C8C8)
  {
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDF3E60], MEMORY[0x24BDF3E48]);
    atomic_store(result, (unint64_t *)&qword_254A1C8C8);
  }
  return result;
}

unint64_t sub_20E495B58()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[11];

  result = qword_254A1C8D0;
  if (!qword_254A1C8D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1C838);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1C828);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1C820);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1C840);
    v3[4] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1C848);
    v3[5] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1C850);
    v3[6] = sub_20E4A581C();
    v3[7] = sub_20E39D010(&qword_254A1C858, &qword_254A1C840, MEMORY[0x24BDEFB78]);
    v3[8] = sub_20E3C3948();
    v3[9] = sub_20E494A10();
    v3[10] = sub_20E494B10();
    swift_getOpaqueTypeConformance2();
    v3[2] = v2;
    v3[3] = swift_getOpaqueTypeConformance2();
    v3[0] = swift_getOpaqueTypeConformance2();
    v3[1] = sub_20E39D010(&qword_254A1C8D8, &qword_254A1C888, MEMORY[0x24BDEDC10]);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_254A1C8D0);
  }
  return result;
}

uint64_t MediaArtwork.PrefetchConfiguration.subscript.getter@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t *v3;

  return sub_20E409814(*v3, a1, a2, a3);
}

uint64_t MediaArtwork.Sized.format(_:withQuality:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v3 = sub_20E4A4C70();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20E3CF19C(v1, a1);
  sub_20E4A4C34();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 40))(a1, v6, v3);
}

uint64_t type metadata accessor for MediaArtwork.Sized()
{
  uint64_t result;

  result = qword_254A1C8E0;
  if (!qword_254A1C8E0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t MediaArtwork.resize(_:croppedTo:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v15;

  v5 = sub_20E4A4C70();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v15 - v11;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16))((char *)&v15 - v11, v2, v5, v10);
  v13 = a1;
  sub_20E4A4C40();

  (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(a2, v8, v5);
}

uint64_t dispatch thunk of ModelWithMediaArtwork.prefetchableMediaArtwork(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

ValueMetadata *type metadata accessor for MediaArtwork.PrefetchConfiguration()
{
  return &type metadata for MediaArtwork.PrefetchConfiguration;
}

uint64_t _s5SizedVwCP(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_20E4A4C70();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t _s5SizedVwxx(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_20E4A4C70();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t _s5SizedVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_20E4A4C70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t _s5SizedVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_20E4A4C70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t _s5SizedVwtk(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_20E4A4C70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t _s5SizedVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_20E4A4C70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t _s5SizedVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_20E496084(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_20E4A4C70();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t _s5SizedVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_20E4960CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_20E4A4C70();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_20E49610C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_20E4A4C70();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void MediaArtworkProtocol.cache<A>(_:allowStandaloneFetches:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v11;
  double v12;
  uint64_t v13;
  _QWORD v14[4];

  v11 = *(_QWORD *)(a3 - 8);
  v12 = MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *, uint64_t, double))(v11 + 16))((char *)v14 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v6, v12);
  v14[0] = a3;
  v14[1] = a4;
  v14[2] = a5;
  v14[3] = a6;
  _s22_CacheProtocolModifierVMa();
}

uint64_t sub_20E496200(uint64_t a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v4 + *(int *)(a1 + 52)) = v3;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v4, v5, v1);
  *(_BYTE *)(v4 + *(int *)(a1 + 56)) = v2;
  return swift_unknownObjectRetain();
}

void sub_20E496250()
{
  _s22_CacheProtocolModifierVMa();
}

uint64_t sub_20E496270(uint64_t a1)
{
  return MEMORY[0x212BBDF90](&unk_20E4B14E8, a1);
}

void _s22_CacheProtocolModifierVMa()
{
  JUMPOUT(0x212BBDEE8);
}

uint64_t sub_20E496298()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_20E496318(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 9 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v11 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)v10 = *(_QWORD *)v11;
    *(_BYTE *)(v10 + 8) = *(_BYTE *)(v11 + 8);
    swift_unknownObjectRetain();
  }
  return v4;
}

uint64_t sub_20E4963D4(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
  return swift_unknownObjectRelease();
}

uint64_t sub_20E496414(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_BYTE *)(v7 + 8) = *(_BYTE *)(v8 + 8);
  swift_unknownObjectRetain();
  return a1;
}

uint64_t sub_20E49647C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v7 = *(_QWORD *)v8;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_BYTE *)(v7 + 8) = *(_BYTE *)(v8 + 8);
  return a1;
}

uint64_t sub_20E4964F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_BYTE *)(v7 + 8) = *(_BYTE *)(v8 + 8);
  return a1;
}

uint64_t sub_20E496554(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v7 = *(_QWORD *)v8;
  swift_unknownObjectRelease();
  *(_BYTE *)(v7 + 8) = *(_BYTE *)(v8 + 8);
  return a1;
}

uint64_t sub_20E4965C0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  unint64_t v14;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v14 = *(_QWORD *)((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8);
      if (v14 >= 0xFFFFFFFF)
        LODWORD(v14) = -1;
      return (v14 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    v8 = ((v7 + 7) & 0xFFFFFFF8) + 9;
    v9 = (a2 - v6 + 255) >> (8 * v8);
    if (v8 < 4)
      v10 = v9 + 1;
    else
      v10 = 2;
    if (v10 >= 0x10000)
      v11 = 4;
    else
      v11 = 2;
    if (v10 < 0x100)
      v11 = 1;
    if (v10 >= 2)
      v12 = v11;
    else
      v12 = 0;
    return ((uint64_t (*)(void))((char *)&loc_20E496648 + 4 * byte_20E4B1480[v12]))();
  }
}

void sub_20E4966DC(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  if (v6 >= a3)
  {
    v10 = 0;
    if (v6 >= a2)
      goto LABEL_17;
  }
  else
  {
    if (v7 <= 3)
      v8 = ((a3 - v6 + 255) >> (8 * v7)) + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    if (v6 >= a2)
LABEL_17:
      __asm { BR              X12 }
  }
  if (v7 >= 4)
    v11 = ~v6 + a2;
  else
    v11 = (~(_BYTE)v6 + a2);
  bzero(a1, v7);
  if ((_DWORD)v7 == 1)
    *a1 = v11;
  else
    *(_DWORD *)a1 = v11;
  __asm { BR              X10 }
}

void sub_20E4967F8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x20E49686CLL);
}

void sub_20E496800(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x20E496808);
  JUMPOUT(0x20E49686CLL);
}

void sub_20E496848()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x20E49686CLL);
}

void sub_20E496850()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x20E49686CLL);
}

uint64_t sub_20E496858(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v5 + v6) = 0;
  if (!a2)
    JUMPOUT(0x20E49686CLL);
  if (a3 < 0x7FFFFFFF)
  {
    if ((a2 & 0x80000000) == 0)
      JUMPOUT(0x20E496868);
    JUMPOUT(0x20E496864);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v5);
}

uint64_t sub_20E496884()
{
  return swift_getAssociatedConformanceWitness();
}

void sub_20E4968A4()
{
  JUMPOUT(0x212BBDF90);
}

uint64_t sub_20E4968B4()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_20E4968D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))() & 1;
}

uint64_t sub_20E496900(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(a2 + 32) + 80))(a1, *(_QWORD *)(a2 + 16));
}

uint64_t sub_20E496910(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t AssociatedConformanceWitness;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_signpost_type_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint8_t *v38;
  os_signpost_id_t v39;
  void (*v40)(uint64_t, uint64_t);
  uint64_t v41;
  char *v42;
  NSObject *v43;
  os_signpost_type_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint8_t *v48;
  os_signpost_id_t v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  char *v52;
  NSObject *v53;
  os_signpost_type_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint8_t *v58;
  os_signpost_id_t v59;
  void (*v60)(char *, uint64_t);
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;

  v5 = *(_QWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = type metadata accessor for MediaArtwork.ProtocolRequest(0, AssociatedTypeWitness, v8, v9);
  v99 = *(_QWORD *)(v10 - 8);
  v100 = v10;
  v95 = *(_QWORD *)(v99 + 64);
  MEMORY[0x24BDAC7A8](v10);
  v105 = (char *)&v88 - v11;
  v97 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v93 = v13;
  v96 = (char *)&v88 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_20E4A3494();
  v103 = *(_QWORD *)(v14 - 8);
  v104 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v90 = (uint64_t)&v88 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v88 - v17;
  MEMORY[0x24BDAC7A8](v19);
  v91 = (char *)&v88 - v20;
  MEMORY[0x24BDAC7A8](v21);
  v89 = (char *)&v88 - v22;
  v23 = *(int *)(a2 + 52);
  v94 = v2;
  v92 = v23;
  v24 = *(_QWORD *)(a2 + 24);
  v25 = swift_getAssociatedTypeWitness();
  v26 = *(_QWORD *)(a2 + 40);
  v101 = v5;
  v98 = v6;
  v27 = v25;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v107 = v24;
  v108 = a1;
  v102 = AssociatedTypeWitness;
  v106 = v26;
  v29 = sub_20E442734(a1, v24, v27, AssociatedTypeWitness, v26, AssociatedConformanceWitness, 0.01);
  if (!(v29 >> 62))
  {
    v89 = (char *)v29;
    v90 = AssociatedConformanceWitness;
    if (qword_254A18110 != -1)
      swift_once();
    v88 = v27;
    v41 = sub_20E4A34B8();
    __swift_project_value_buffer(v41, (uint64_t)qword_254A24688);
    v42 = v18;
    sub_20E4A3488();
    v43 = sub_20E4A34AC();
    v44 = sub_20E4A6050();
    if ((sub_20E4A60D4() & 1) != 0)
    {
      v45 = v103;
      v46 = v104;
      v47 = v91;
      (*(void (**)(char *, char *, uint64_t))(v103 + 16))(v91, v18, v104);
      v48 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v48 = 0;
      v49 = sub_20E4A347C();
      _os_signpost_emit_with_name_impl(&dword_20E399000, v43, v44, v49, "Image.CacheFoundClosestMatch", "", v48, 2u);
      MEMORY[0x212BBE068](v48, -1, -1);

      v50 = *(void (**)(char *, uint64_t))(v45 + 8);
      v50(v42, v46);
      v50(v47, v46);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v103 + 8))(v18, v104);
    }
    v104 = *(_QWORD *)(v94 + v92);
    LODWORD(v103) = *(unsigned __int8 *)(v94 + *(int *)(a2 + 56));
    v61 = v96;
    v62 = v97;
    (*(void (**)(char *))(v97 + 16))(v96);
    v64 = v99;
    v63 = v100;
    (*(void (**)(char *, uint64_t, uint64_t))(v99 + 16))(v105, v108, v100);
    v65 = (*(unsigned __int8 *)(v62 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80);
    v66 = (v93 + v65 + *(unsigned __int8 *)(v64 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80);
    v67 = (char *)swift_allocObject();
    v68 = v107;
    *((_QWORD *)v67 + 2) = v98;
    *((_QWORD *)v67 + 3) = v68;
    v69 = v106;
    *((_QWORD *)v67 + 4) = v101;
    *((_QWORD *)v67 + 5) = v69;
    *((_QWORD *)v67 + 6) = v89;
    (*(void (**)(char *, char *, uint64_t))(v62 + 32))(&v67[v65], v61, a2);
    (*(void (**)(char *, char *, uint64_t))(v64 + 32))(&v67[v66], v105, v63);
    v70 = sub_20E4A5630();
    v71 = swift_getAssociatedTypeWitness();
    swift_retain();
    v72 = MEMORY[0x212BBDF90](MEMORY[0x24BE5DB20], v70);
    v73 = swift_getAssociatedConformanceWitness();
    v109 = v70;
    v110 = v71;
    v111 = v72;
    v112 = v73;
    v74 = sub_20E4A5480();
    v75 = MEMORY[0x212BBDF90](MEMORY[0x24BE5D858], v74);
    v30 = sub_20E442DF4(v108, (v103 & 1) == 0, (uint64_t)sub_20E4974E4, (uint64_t)v67, v107, v74, v102, v106, v75, v90);
    swift_release();
    goto LABEL_20;
  }
  if (v29 >> 62 != 1)
  {
    v90 = AssociatedConformanceWitness;
    if (qword_254A18110 != -1)
      swift_once();
    v51 = sub_20E4A34B8();
    __swift_project_value_buffer(v51, (uint64_t)qword_254A24688);
    v52 = v89;
    sub_20E4A3488();
    v53 = sub_20E4A34AC();
    v54 = sub_20E4A6050();
    if ((sub_20E4A60D4() & 1) != 0)
    {
      v56 = v103;
      v55 = v104;
      v57 = v91;
      (*(void (**)(char *, char *, uint64_t))(v103 + 16))(v91, v52, v104);
      v58 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v58 = 0;
      v59 = sub_20E4A347C();
      _os_signpost_emit_with_name_impl(&dword_20E399000, v53, v54, v59, "Image.CacheMiss", "", v58, 2u);
      MEMORY[0x212BBE068](v58, -1, -1);

      v60 = *(void (**)(char *, uint64_t))(v56 + 8);
      v60(v52, v55);
      v60(v57, v55);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v103 + 8))(v52, v104);
    }
    v104 = *(_QWORD *)(v94 + v92);
    LODWORD(v103) = *(unsigned __int8 *)(v94 + *(int *)(a2 + 56));
    v76 = v96;
    v77 = v97;
    (*(void (**)(char *))(v97 + 16))(v96);
    v79 = v99;
    v78 = v100;
    (*(void (**)(char *, uint64_t, uint64_t))(v99 + 16))(v105, v108, v100);
    v80 = (*(unsigned __int8 *)(v77 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80);
    v81 = (v93 + v80 + *(unsigned __int8 *)(v79 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80);
    v82 = (char *)swift_allocObject();
    v83 = v107;
    *((_QWORD *)v82 + 2) = v98;
    *((_QWORD *)v82 + 3) = v83;
    v84 = v106;
    *((_QWORD *)v82 + 4) = v101;
    *((_QWORD *)v82 + 5) = v84;
    (*(void (**)(char *, char *, uint64_t))(v77 + 32))(&v82[v80], v76, a2);
    (*(void (**)(char *, char *, uint64_t))(v79 + 32))(&v82[v81], v105, v78);
    v85 = swift_getAssociatedTypeWitness();
    v86 = swift_getAssociatedConformanceWitness();
    v30 = sub_20E442DF4(v108, (v103 & 1) == 0, (uint64_t)sub_20E4976E8, (uint64_t)v82, v107, v85, v102, v106, v86, v90);
LABEL_20:
    swift_release();
    return v30;
  }
  v30 = v29 & 0x3FFFFFFFFFFFFFFFLL;
  if (qword_254A18110 != -1)
    swift_once();
  v31 = sub_20E4A34B8();
  __swift_project_value_buffer(v31, (uint64_t)qword_254A24688);
  v32 = v90;
  sub_20E4A3488();
  v33 = sub_20E4A34AC();
  v34 = sub_20E4A6050();
  if ((sub_20E4A60D4() & 1) != 0)
  {
    v36 = v103;
    v35 = v104;
    v37 = v91;
    (*(void (**)(char *, uint64_t, uint64_t))(v103 + 16))(v91, v32, v104);
    v38 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v38 = 0;
    v39 = sub_20E4A347C();
    _os_signpost_emit_with_name_impl(&dword_20E399000, v33, v34, v39, "Image.CacheFoundExactMatch", "", v38, 2u);
    MEMORY[0x212BBE068](v38, -1, -1);

    v40 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
    v40(v32, v35);
    v40((uint64_t)v37, v35);
  }
  else
  {

    (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v32, v104);
  }
  return v30;
}

uint64_t sub_20E4971F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD v17[2];

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v12 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v14 = (char *)v17 - v13;
  v17[1] = a1;
  (*(void (**)(uint64_t, uint64_t, uint64_t, double))(a6 + 88))(a3, a4, a6, v12);
  v15 = sub_20E4A5630();
  MEMORY[0x212BBDF90](MEMORY[0x24BE5DB20], v15);
  swift_getAssociatedConformanceWitness();
  sub_20E4A5978();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, AssociatedTypeWitness);
}

uint64_t sub_20E497338(uint64_t a1, uint64_t a2)
{
  return sub_20E4968D4(*(_QWORD *)(a1 + 16), a2, *(_QWORD *)(a1 + 32));
}

uint64_t sub_20E49734C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result;

  result = sub_20E496910(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_20E497370()
{
  return sub_20E4A5C0C() & 1;
}

uint64_t sub_20E497398()
{
  return sub_20E497370();
}

void sub_20E4973A4()
{
  _s22_CacheProtocolModifierVMa();
}

uint64_t sub_20E4973DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;

  v2 = *(_QWORD *)(a1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v3 + *(_QWORD *)(v2 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = type metadata accessor for MediaArtwork.ProtocolRequest(0, AssociatedTypeWitness, v6, v7);
  v9 = *(unsigned __int8 *)(*(_QWORD *)(v8 - 8) + 80);
  v10 = (v4 + v9) & ~v9;
  swift_release();
  (*(void (**)(unint64_t))(*(_QWORD *)(v12 - 8) + 8))(v1 + v3);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v1 + v10 + *(int *)(v8 + 28), AssociatedTypeWitness);
  swift_release();
  return swift_deallocObject();
}

void sub_20E4974E4()
{
  _s22_CacheProtocolModifierVMa();
}

uint64_t sub_20E497520(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(a1 - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = v6 + *(_QWORD *)(v5 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for MediaArtwork.ProtocolRequest(0, AssociatedTypeWitness, v9, v10)- 8)+ 80);
  return sub_20E4971F0(*(_QWORD *)(v1 + 48), v1 + v6, v1 + ((v7 + v11) & ~v11), v2, v3, v4);
}

void sub_20E4975B0()
{
  _s22_CacheProtocolModifierVMa();
}

uint64_t sub_20E4975E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;

  v2 = *(_QWORD *)(a1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v3 + *(_QWORD *)(v2 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = type metadata accessor for MediaArtwork.ProtocolRequest(0, AssociatedTypeWitness, v6, v7);
  v9 = *(unsigned __int8 *)(*(_QWORD *)(v8 - 8) + 80);
  v10 = (v4 + v9) & ~v9;
  (*(void (**)(unint64_t))(*(_QWORD *)(v12 - 8) + 8))(v1 + v3);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v1 + v10 + *(int *)(v8 + 28), AssociatedTypeWitness);
  swift_release();
  return swift_deallocObject();
}

void sub_20E4976E8()
{
  _s22_CacheProtocolModifierVMa();
}

uint64_t sub_20E49771C(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t AssociatedTypeWitness;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v2 = ((*(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80))
     + *(_QWORD *)(*(_QWORD *)(a1 - 8) + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for MediaArtwork.ProtocolRequest(0, AssociatedTypeWitness, v4, v5)- 8)+ 80);
  return (*(uint64_t (**)(unint64_t))(v8 + 88))(v1 + ((v2 + v6) & ~v6));
}

_QWORD *sub_20E4977B8(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *a1 = v5;
    a1 = (_QWORD *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v6 = a2[1];
    *a1 = v5;
    a1[1] = v6;
    v7 = *(int *)(a3 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_20E4A4D60();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_retain();
    v11(v8, v9, v10);
  }
  return a1;
}

uint64_t sub_20E497854(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_20E4A4D60();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_20E49789C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_20E4A4D60();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_retain();
  v9(v6, v7, v8);
  return a1;
}

_QWORD *sub_20E49790C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_release();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_20E4A4D60();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

_OWORD *sub_20E497980(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_20E4A4D60();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_OWORD *sub_20E4979DC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_release();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_20E4A4D60();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_20E497A48()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_20E497A54(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_20E4A4D60();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_20E497AD0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_20E497ADC(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_20E4A4D60();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t _s22_OneShotActionProtocolVMa()
{
  uint64_t result;

  result = qword_254A1C970;
  if (!qword_254A1C970)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_20E497B8C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_20E4A4D60();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_20E497C04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_20E497C20()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(_QWORD);

  v3 = (uint64_t (*)(_QWORD))(***(int ***)(v0 + 24) + **(_QWORD **)(v0 + 24));
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  *v1 = v0;
  v1[1] = sub_20E497C80;
  return v3(*(_QWORD *)(v0 + 32));
}

uint64_t sub_20E497C80(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = *v2;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v5 + 8))();
  *(_QWORD *)(v4 + 48) = a1;
  return swift_task_switch();
}

uint64_t sub_20E497CFC()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 16) = *(_QWORD *)(v0 + 48);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20E497D14()
{
  return sub_20E4A4D54();
}

uint64_t sub_20E497D38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A080);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](v5);
  v8 = *(_QWORD *)(a2 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v10);
  v11 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20E3FAE3C(v2, (uint64_t)v11);
  sub_20E401F34(a1, (uint64_t)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v13 = (v9 + v12 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v14 = swift_allocObject();
  sub_20E497F68((uint64_t)v11, v14 + v12);
  sub_20E402078((uint64_t)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v14 + v13);
  return sub_20E4A49DC();
}

uint64_t sub_20E497E6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  v1 = _s22_OneShotActionProtocolVMa();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v3 + *(_QWORD *)(v2 + 64);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A080);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  v7 = (v4 + v6) & ~v6;
  swift_release();
  v8 = v0 + v3 + *(int *)(v1 + 20);
  v9 = sub_20E4A4D60();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();
  v10 = v0 + v7 + *(int *)(v5 + 28);
  v11 = sub_20E4A4D3C();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E497F68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s22_OneShotActionProtocolVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20E497FAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(_s22_OneShotActionProtocolVMa() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v5 + *(_QWORD *)(v4 + 64);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254A1A080) - 8) + 80);
  v8 = v1 + v5;
  v9 = v1 + ((v6 + v7) & ~v7);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_20E3B4E08;
  v10[3] = v8;
  v10[4] = v9;
  v10[2] = a1;
  return swift_task_switch();
}

uint64_t sub_20E49805C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_20E4A392C();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_20E4980D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t);
  char v12;
  uint64_t result;
  uint64_t v14;
  _QWORD v15[4];

  v0 = sub_20E4A392C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v15[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_20E4A4F64();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v15[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0D58);
  sub_20E4A4ACC();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_20E4A72D0;
  sub_20E4A4A30();
  sub_20E4A5A14();
  __swift_project_boxed_opaque_existential_1(v15, v15[3]);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BE5CFE0], v4);
  sub_20E4A5738();
  v8 = v7;
  v9 = v14;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  swift_bridgeObjectRelease();
  v10 = v9 + qword_254A246A0;
  swift_beginAccess();
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 16);
  v11(v3, v10, v0);
  v12 = sub_20E4A3914();
  result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if ((v12 & 1) == 0)
  {
    v11(v3, v10, v0);
    sub_20E4A38C0();
    return sub_20E498C34((uint64_t)v3);
  }
  return result;
}

uint64_t sub_20E4982E0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  _QWORD v14[2];
  uint64_t v15;
  _QWORD v16[4];

  v0 = sub_20E4A392C();
  v15 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v14 - v4;
  v6 = sub_20E4A4F64();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0D58);
  sub_20E4A4ACC();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_20E4A72D0;
  sub_20E4A4A30();
  sub_20E4A5A14();
  __swift_project_boxed_opaque_existential_1(v16, v16[3]);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BE5CFE0], v6);
  sub_20E4A5738();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  swift_bridgeObjectRelease();
  v10 = v14[1] + qword_254A246A0;
  swift_beginAccess();
  v11 = v15;
  v12 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v12(v5, v10, v0);
  sub_20E4A38FC();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v5, v0);
  v12(v2, v10, v0);
  sub_20E4A38C0();
  return sub_20E498C34((uint64_t)v2);
}

uint64_t sub_20E49850C(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, _QWORD, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[3];
  uint64_t v45;

  v3 = (_QWORD *)*v1;
  v4 = sub_20E4A392C();
  v42 = *(_QWORD *)(v4 - 8);
  v43 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v40 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v3[10];
  v37 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v36 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = v3[11];
  v9 = v3[12];
  v33 = v6;
  v11 = v9;
  v12 = type metadata accessor for FlowStackAuthority.PathComponent(0, v6, v10, v9);
  v13 = *(_QWORD *)(v12 - 8);
  v38 = v12;
  v39 = v13;
  MEMORY[0x24BDAC7A8](v12);
  v35 = (uint64_t)&v33 - v14;
  v34 = sub_20E4A4F64();
  v15 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_20E4A4A90();
  MEMORY[0x24BDAC7A8](v18);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0D58);
  sub_20E4A4ACC();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_20E4A72D0;
  sub_20E4A4A84();
  sub_20E4A4A78();
  v19 = v6;
  v20 = v11;
  v21 = sub_20E499774(a1, v19, v10, v11);
  v45 = MEMORY[0x24BEE0D00];
  v44[0] = v21;
  v44[1] = v22;
  sub_20E4A4A48();
  sub_20E39D1F8((uint64_t)v44, &qword_253ED2A38);
  sub_20E4A4A78();
  sub_20E4A4A9C();
  sub_20E4A5A14();
  __swift_project_boxed_opaque_existential_1(v44, v45);
  v23 = v15;
  v24 = *(void (**)(char *, _QWORD, uint64_t))(v15 + 104);
  v25 = v34;
  v24(v17, *MEMORY[0x24BE5CFE0], v34);
  sub_20E4A5738();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v17, v25);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
  swift_bridgeObjectRelease();
  v26 = (uint64_t)v36;
  v27 = v33;
  (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v36, a1, v33);
  v28 = v35;
  sub_20E498D20(v26, v27, v10, v20, v35);
  v29 = v41 + qword_254A246A0;
  swift_beginAccess();
  v30 = (uint64_t)v40;
  (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v40, v29, v43);
  v31 = v38;
  MEMORY[0x212BBDF90](&unk_20E4B16C0, v38);
  sub_20E4A3908();
  (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v28, v31);
  return sub_20E498C34(v30);
}

uint64_t sub_20E498888()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v1 = type metadata accessor for FlowAlertAuthority.Presented(0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v9 - v5;
  if (*(_QWORD *)(v0 + 24))
  {
    v7 = *(_QWORD *)(v0 + 24);
  }
  else
  {
    type metadata accessor for FlowAlertAuthority(0);
    v7 = swift_allocObject();
    swift_storeEnumTagMultiPayload();
    swift_beginAccess();
    sub_20E3F8C2C((uint64_t)v6, (uint64_t)v3);
    sub_20E4A359C();
    sub_20E3F8C70((uint64_t)v6);
    swift_endAccess();
    *(_QWORD *)(v0 + 24) = v7;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v7;
}

uint64_t sub_20E4989B0()
{
  uint64_t v0;

  v0 = swift_allocObject();
  sub_20E498FB8();
  return v0;
}

uint64_t sub_20E4989E4()
{
  uint64_t v0;

  if (!sub_20E498AA4())
    return swift_retain();
  v0 = sub_20E440B60();
  swift_release();
  return v0;
}

uint64_t sub_20E498A30()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_20E498CA4();
  if (!sub_20E440AB8())
    return v0;
  do
  {
    sub_20E440B60();
    v1 = sub_20E498CA4();
    swift_release();
    swift_release();
  }
  while (sub_20E440AB8());
  return v1;
}

uint64_t sub_20E498AA4()
{
  uint64_t v0;
  uint64_t v1;
  BOOL v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 16);
  if (v1)
  {
    swift_retain_n();
    v2 = sub_20E440AB8();
    swift_release();
    if (v2)
    {
      v3 = *(_QWORD *)(sub_20E440B60() + 16);
      swift_retain();
      swift_release();
      if (v3)
      {
        v4 = v1;
        while (1)
        {
          v1 = v3;
          if (!sub_20E440AB8())
            break;
          swift_release();
          v3 = *(_QWORD *)(sub_20E440B60() + 16);
          swift_retain();
          swift_release();
          v4 = v1;
          if (!v3)
            return v1;
        }
        swift_release();
        return v4;
      }
    }
    else
    {
      swift_release();
      return 0;
    }
  }
  return v1;
}

uint64_t sub_20E498B6C()
{
  uint64_t v0;

  if (!sub_20E498AA4())
    return sub_20E498888();
  sub_20E440B60();
  v0 = sub_20E498888();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_20E498BD0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + qword_254A246A0;
  swift_beginAccess();
  v4 = sub_20E4A392C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_20E498C34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  sub_20E499040();
  v3 = v1 + qword_254A246A0;
  swift_beginAccess();
  v4 = sub_20E4A392C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t sub_20E498CA4()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  if (v0[2])
  {
    v1 = v0[2];
  }
  else
  {
    v2 = v0;
    type metadata accessor for FlowStackSheetAuthority(0, *(_QWORD *)(*v0 + 80), *(_QWORD *)(*v0 + 88), *(_QWORD *)(*v0 + 96));
    v1 = sub_20E440BFC();
    v2[2] = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_20E498D20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t *v15;

  sub_20E4A61B8();
  v10 = type metadata accessor for FlowStackAuthority.PathComponent(0, a2, a3, a4);
  sub_20E4A4F4C();
  v11 = sub_20E499774(a1, a2, a3, a4);
  v13 = v12;
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 8))(a1, a2);
  v15 = (uint64_t *)(a5 + *(int *)(v10 + 48));
  *v15 = v11;
  v15[1] = v13;
  return result;
}

uint64_t sub_20E498DD0()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  return sub_20E4A5C0C() & 1;
}

uint64_t sub_20E498E64()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  return sub_20E4A5BAC();
}

uint64_t sub_20E498EE8()
{
  sub_20E4A6410();
  sub_20E498E64();
  return sub_20E4A6428();
}

uint64_t sub_20E498F34()
{
  sub_20E4A6410();
  sub_20E498E64();
  return sub_20E4A6428();
}

uint64_t sub_20E498F74(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 48));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_20E498FA8()
{
  return sub_20E498DD0();
}

uint64_t sub_20E498FB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v1 = sub_20E4A392C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0;
  sub_20E4A3920();
  (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v0 + qword_254A246A0, v4, v1);
  return v0;
}

uint64_t sub_20E499040()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v8;

  v1 = *v0;
  v2 = sub_20E4A392C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (char *)v0 + qword_254A246A0;
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v6, v2);
  sub_20E499980();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  MEMORY[0x212BBDF90](&unk_20E4B1618, v1);
  sub_20E4A3584();
  sub_20E4A3590();
  return swift_release();
}

uint64_t sub_20E499134()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  swift_release();
  v1 = v0 + qword_254A246A0;
  v2 = sub_20E4A392C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_20E499188()
{
  sub_20E499134();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FlowStackAuthority(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FlowStackAuthority);
}

uint64_t sub_20E4991B8()
{
  uint64_t v1;

  v1 = MEMORY[0x24BEE4AF8];
  sub_20E4A38F0();
  if (*(_QWORD *)(v1 + 16))
  {
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254A1B620);
    sub_20E4555D8();
    sub_20E4A5BDC();
    swift_bridgeObjectRelease();
    sub_20E4A5C6C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_20E4A5C6C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 91;
  }
  else
  {
    swift_bridgeObjectRelease();
    return 23899;
  }
}

uint64_t sub_20E4992CC(uint64_t a1, _QWORD **a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, uint64_t, uint64_t, double);
  char *v15;
  uint64_t v16;
  _QWORD *v18;
  uint64_t v19;
  void (*v20)(_QWORD *, _QWORD);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  _QWORD *v35;
  char v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t, double);
  char *v41;
  _QWORD **v42;
  __int128 v43[2];
  uint64_t v44;
  char v45[40];
  _QWORD v46[3];
  uint64_t v47;
  uint64_t v48;
  __int128 v49[3];

  v42 = a2;
  v3 = sub_20E4A38D8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1CA28);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v39 - v12;
  v14 = *(void (**)(char *, uint64_t, uint64_t, double))(v4 + 16);
  v14(v9, a1, v3, v11);
  sub_20E3F8CB8();
  sub_20E4A5F3C();
  *(_QWORD *)&v9[*(int *)(v7 + 36)] = *(_QWORD *)&v49[0];
  sub_20E499C18((uint64_t)v9, (uint64_t)v13);
  v15 = &v13[*(int *)(v7 + 36)];
  v16 = *(_QWORD *)v15;
  sub_20E4A5F60();
  if (v16 != v46[0])
  {
    v41 = v6;
    v40 = v14;
    do
    {
      v20 = (void (*)(_QWORD *, _QWORD))sub_20E4A5FC0();
      sub_20E3C39FC(v21, (uint64_t)v49);
      v20(v46, 0);
      ((void (*)(char *, char *, uint64_t))v14)(v6, v13, v3);
      sub_20E4A5F6C();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      sub_20E3B1AB4(v49, (uint64_t)v45);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254A19E08);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254A1CA30);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v22 = v4;
        sub_20E3B1AB4(v43, (uint64_t)v46);
        v23 = v47;
        v24 = v48;
        __swift_project_boxed_opaque_existential_1(v46, v47);
        v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 8))(v23, v24);
        v27 = v26;
        v28 = v42;
        v29 = *v42;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *v28 = v29;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v29 = sub_20E3AD8FC(0, v29[2] + 1, 1, v29);
          *v42 = v29;
        }
        v32 = v29[2];
        v31 = v29[3];
        if (v32 >= v31 >> 1)
        {
          v29 = sub_20E3AD8FC((_QWORD *)(v31 > 1), v32 + 1, 1, v29);
          *v42 = v29;
        }
        v29[2] = v32 + 1;
        v33 = &v29[2 * v32];
        v33[4] = v25;
        v33[5] = v27;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
        v4 = v22;
        v6 = v41;
        v14 = v40;
      }
      else
      {
        v44 = 0;
        memset(v43, 0, sizeof(v43));
        sub_20E39D1F8((uint64_t)v43, &qword_254A1CA38);
        v34 = v42;
        v35 = *v42;
        v36 = swift_isUniquelyReferenced_nonNull_native();
        *v34 = v35;
        if ((v36 & 1) == 0)
        {
          v35 = sub_20E3AD8FC(0, v35[2] + 1, 1, v35);
          *v42 = v35;
        }
        v38 = v35[2];
        v37 = v35[3];
        if (v38 >= v37 >> 1)
        {
          v35 = sub_20E3AD8FC((_QWORD *)(v37 > 1), v38 + 1, 1, v35);
          *v42 = v35;
        }
        v35[2] = v38 + 1;
        v18 = &v35[2 * v38];
        v18[4] = 0x296D65746928;
        v18[5] = 0xE600000000000000;
      }
      v19 = *(_QWORD *)v15;
      sub_20E4A5F60();
    }
    while (v19 != v46[0]);
  }
  return sub_20E39D1F8((uint64_t)v13, &qword_254A1CA28);
}

uint64_t sub_20E4996B8()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_20E4A52D0();
  MEMORY[0x24BDAC7A8](v0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1CA40);
  __swift_allocate_value_buffer(v1, qword_254A1C990);
  __swift_project_value_buffer(v1, (uint64_t)qword_254A1C990);
  sub_20E4A52C4();
  return sub_20E4A4D0C();
}

uint64_t sub_20E499774(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *boxed_opaque_existential_1Tm;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10[6];
  uint64_t v11;
  unint64_t v12;
  uint64_t v13[3];
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v14 = a2;
  v15 = a3;
  v16 = a4;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v13);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(boxed_opaque_existential_1Tm, a1, a2);
  sub_20E4A509C();
  sub_20E4A5090();
  if (qword_254A18130 != -1)
    swift_once();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1CA40);
  __swift_project_value_buffer(v7, (uint64_t)qword_254A1C990);
  sub_20E4A4BB0();
  swift_release();
  if (LOBYTE(v10[0]) != 2 && (v10[0] & 1) != 0)
  {
    sub_20E499E4C((uint64_t)v13, (uint64_t)v10);
    __swift_instantiateConcreteTypeFromMangledName(qword_254A1CA48);
    v8 = sub_20E4A5C54();
  }
  else
  {
    v11 = 0;
    v12 = 0xE000000000000000;
    sub_20E4A5C6C();
    __swift_project_boxed_opaque_existential_1(v13, v14);
    v10[3] = swift_getAssociatedTypeWitness();
    v10[4] = swift_getAssociatedConformanceWitness();
    __swift_allocate_boxed_opaque_existential_1Tm(v10);
    sub_20E4A61B8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254A19E08);
    sub_20E4A626C();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
    sub_20E4A5C6C();
    v8 = v11;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  return v8;
}

uint64_t sub_20E499980()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;

  v0 = sub_20E4A4F64();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_20E4A4A90();
  MEMORY[0x24BDAC7A8](v4);
  v5 = sub_20E4991B8();
  v7 = v6;
  v8 = sub_20E4991B8();
  v10 = v9;
  v11 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0)
    v11 = v5 & 0xFFFFFFFFFFFFLL;
  if (!v11)
    goto LABEL_8;
  v12 = v8;
  v13 = HIBYTE(v9) & 0xF;
  if ((v9 & 0x2000000000000000) == 0)
    v13 = v8 & 0xFFFFFFFFFFFFLL;
  if (v13)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0D58);
    v14 = *(unsigned __int8 *)(*(_QWORD *)(sub_20E4A4ACC() - 8) + 80);
    v21 = v0;
    v15 = (v14 + 32) & ~v14;
    v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_20E4A72D0;
    v20[1] = v16 + v15;
    sub_20E4A4A84();
    sub_20E4A4A78();
    v17 = MEMORY[0x24BEE0D00];
    v24 = MEMORY[0x24BEE0D00];
    v22 = v5;
    v23 = v7;
    sub_20E4A4A6C();
    sub_20E39D1F8((uint64_t)&v22, &qword_253ED2A38);
    sub_20E4A4A78();
    v24 = v17;
    v22 = v12;
    v23 = v10;
    sub_20E4A4A6C();
    sub_20E39D1F8((uint64_t)&v22, &qword_253ED2A38);
    sub_20E4A4A78();
    sub_20E4A4A9C();
    sub_20E4A5A14();
    __swift_project_boxed_opaque_existential_1(&v22, v24);
    v18 = v21;
    (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BE5CFE0], v21);
    sub_20E4A5738();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v18);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v22);
    return swift_bridgeObjectRelease();
  }
  else
  {
LABEL_8:
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_20E499C10(uint64_t a1)
{
  uint64_t v1;

  return sub_20E4992CC(a1, *(_QWORD ***)(v1 + 16));
}

uint64_t sub_20E499C18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1CA28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20E499C60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[4];

  v4 = sub_20E4A4A90();
  MEMORY[0x24BDAC7A8](v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0D58);
  sub_20E4A4ACC();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_20E4A72D0;
  sub_20E4A4A84();
  sub_20E4A4A78();
  v8[3] = MEMORY[0x24BEE0D00];
  v8[0] = a1;
  v8[1] = a2;
  swift_bridgeObjectRetain();
  sub_20E4A4A48();
  sub_20E39D1F8((uint64_t)v8, &qword_253ED2A38);
  sub_20E4A4A78();
  sub_20E4A4A9C();
  if ((sub_20E4A4A3C() & 1) == 0)
  {
    sub_20E4A509C();
    sub_20E4A5090();
    if (qword_254A18130 != -1)
      swift_once();
    v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1CA40);
    __swift_project_value_buffer(v5, (uint64_t)qword_254A1C990);
    sub_20E4A4BB0();
    swift_release();
  }
  v6 = sub_20E4A4AB4();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t type metadata accessor for FlowStackAuthority.PathComponent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FlowStackAuthority.PathComponent);
}

uint64_t sub_20E499E4C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_20E499E90()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    result = swift_getAssociatedTypeWitness();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_20E499F50(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unsigned int v14;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  _QWORD *v22;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v10 = v6 + v9;
  v11 = (v6 + v9) & ~v9;
  v12 = *(_QWORD *)(v8 + 64) + 7;
  v13 = ((v12 + v11) & 0xFFFFFFFFFFFFFFF8) + 16;
  v14 = v9 | *(_DWORD *)(v5 + 80) & 0xF8;
  if (v14 > 7 || ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v8 + 80)) & 0x100000) != 0 || v13 > 0x18)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + (((v14 | 7) + 16) & ~(unint64_t)(v14 | 7)));
    swift_retain();
  }
  else
  {
    v18 = v7;
    v19 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    v20 = ((unint64_t)a2 + v10) & v19;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(((unint64_t)a1 + v10) & v19, v20, v18);
    v21 = (_QWORD *)((v12 + (((unint64_t)a1 + v10) & v19)) & 0xFFFFFFFFFFFFFFF8);
    v22 = (_QWORD *)((v12 + v20) & 0xFFFFFFFFFFFFFFF8);
    *v21 = *v22;
    v21[1] = v22[1];
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_20E49A0B8(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, AssociatedTypeWitness);
  v4 = *(_QWORD *)(v3 + 64) + a1;
  v5 = swift_getAssociatedTypeWitness();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))((v4 + *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80), v5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_20E49A174(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v6 + v9 + a1) & ~v9;
  v11 = (v6 + v9 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  v12 = *(_QWORD *)(v8 + 64) + 7;
  v13 = (_QWORD *)((v12 + v10) & 0xFFFFFFFFFFFFFFF8);
  v14 = (_QWORD *)((v12 + v11) & 0xFFFFFFFFFFFFFFF8);
  *v13 = *v14;
  v13[1] = v14[1];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_20E49A268(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v6 + v9 + a1) & ~v9;
  v11 = (v6 + v9 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 24))(v10, v11, v7);
  v12 = *(_QWORD *)(v8 + 64) + 7;
  v13 = (_QWORD *)((v12 + v10) & 0xFFFFFFFFFFFFFFF8);
  v14 = (_QWORD *)((v12 + v11) & 0xFFFFFFFFFFFFFFF8);
  *v13 = *v14;
  v13[1] = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_20E49A368(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v6 + v9 + a1) & ~v9;
  v11 = (v6 + v9 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v10, v11, v7);
  *(_OWORD *)((*(_QWORD *)(v8 + 64) + 7 + v10) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((*(_QWORD *)(v8 + 64) + 7 + v11) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_20E49A450(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 40))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v6 + v9 + a1) & ~v9;
  v11 = (v6 + v9 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 40))(v10, v11, v7);
  v12 = *(_QWORD *)(v8 + 64) + 7;
  v13 = (_QWORD *)((v12 + v10) & 0xFFFFFFFFFFFFFFF8);
  v14 = (_QWORD *)((v12 + v11) & 0xFFFFFFFFFFFFFFF8);
  *v13 = *v14;
  v13[1] = v14[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_20E49A548(uint64_t a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  unint64_t v21;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned int *)(v8 + 84);
  if (v9 <= v6)
    v10 = v6;
  else
    v10 = *(_DWORD *)(v8 + 84);
  if (v10 <= 0x7FFFFFFF)
    v10 = 0x7FFFFFFF;
  if (!a2)
    return 0;
  v11 = v7;
  v12 = *(unsigned __int8 *)(v8 + 80);
  v13 = *(_QWORD *)(v5 + 64) + v12;
  v14 = *(_QWORD *)(v8 + 64) + 7;
  if (v10 < a2)
  {
    if (((((v14 + (v13 & ~v12)) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v15 = 2;
    else
      v15 = a2 - v10 + 1;
    if (v15 >= 0x10000)
      v16 = 4;
    else
      v16 = 2;
    if (v15 < 0x100)
      v16 = 1;
    if (v15 >= 2)
      v17 = v16;
    else
      v17 = 0;
    __asm { BR              X17 }
  }
  if ((_DWORD)v6 == v10)
  {
    v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    v20 = a1;
    v9 = v6;
    v11 = AssociatedTypeWitness;
    return v19(v20, v9, v11);
  }
  v20 = (v13 + a1) & ~v12;
  if ((_DWORD)v9 == v10)
  {
    v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v19(v20, v9, v11);
  }
  v21 = *(_QWORD *)(((v14 + v20) & 0xFFFFFFFFFFFFF8) + 8);
  if (v21 >= 0xFFFFFFFF)
    LODWORD(v21) = -1;
  return (v21 + 1);
}

void sub_20E49A724(unsigned int *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  int v11;
  int v12;
  unsigned int v13;

  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  if (*(_DWORD *)(v8 + 84) <= v7)
    v9 = v7;
  else
    v9 = *(_DWORD *)(v8 + 84);
  if (v9 <= 0x7FFFFFFF)
    v9 = 0x7FFFFFFF;
  if (v9 >= a3)
  {
    v12 = 0;
    if (a2 <= v9)
      goto LABEL_19;
  }
  else
  {
    if (((*(_DWORD *)(v8 + 64)
         + 7
         + ((*(_DWORD *)(v6 + 64) + *(unsigned __int8 *)(v8 + 80)) & ~*(unsigned __int8 *)(v8 + 80))) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v10 = a3 - v9 + 1;
    else
      v10 = 2;
    if (v10 >= 0x10000)
      v11 = 4;
    else
      v11 = 2;
    if (v10 < 0x100)
      v11 = 1;
    if (v10 >= 2)
      v12 = v11;
    else
      v12 = 0;
    if (a2 <= v9)
LABEL_19:
      __asm { BR              X15 }
  }
  if (((*(_DWORD *)(v8 + 64)
       + 7
       + ((*(_DWORD *)(v6 + 64) + *(unsigned __int8 *)(v8 + 80)) & ~*(unsigned __int8 *)(v8 + 80))) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v13 = ~v9 + a2;
    bzero(a1, ((*(_QWORD *)(v8 + 64)+ 7+ ((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))) & 0xFFFFFFFFFFFFFFF8)+ 16);
    *a1 = v13;
  }
  __asm { BR              X10 }
}

void sub_20E49A894()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  *(_BYTE *)(v0 + v2) = v1;
  JUMPOUT(0x20E49A930);
}

void sub_20E49A89C()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = 0;
  if (v1)
    JUMPOUT(0x20E49A8A4);
  JUMPOUT(0x20E49A930);
}

void sub_20E49A8F4()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;

  *(_WORD *)(v0 + v2) = v1;
  JUMPOUT(0x20E49A930);
}

void sub_20E49A8FC()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = v1;
  JUMPOUT(0x20E49A930);
}

uint64_t sub_20E49A904@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_WORD *)(v10 + v14) = 0;
  if (!(_DWORD)v11)
    JUMPOUT(0x20E49A930);
  if ((_DWORD)v13 == v7)
  {
    v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56);
    v4 = v10;
    v5 = v11;
    a1 = v13;
    a2 = v12;
  }
  else
  {
    v4 = (v8 + v10) & v9;
    if ((_DWORD)a1 != v7)
      JUMPOUT(0x20E49A910);
    v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 56);
    v5 = v11;
  }
  return v3(v4, v5, a1, a2);
}

void sub_20E49A94C()
{
  JUMPOUT(0x212BBDF90);
}

uint64_t ShelfGridItem.model.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_20E3C39FC(v1 + 8, a1);
}

uint64_t ShelfGridItem.offset.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

uint64_t ShelfGridItem.layout.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v2 = *(_QWORD *)(v1 + 56);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(_QWORD *)(v1 + 72);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  v5 = *(_BYTE *)(v1 + 80);
  *(_BYTE *)(a1 + 24) = v5;
  return sub_20E4337BC(v2, v3, v4, v5);
}

uint64_t ShelfGridItem.isInFirstRow.getter()
{
  uint64_t v0;

  return ((uint64_t (*)(void))((char *)&loc_20E49A9A0 + dword_20E49AA4C[*(unsigned __int8 *)(v0 + 80) >> 6]))();
}

BOOL sub_20E49A9B0@<W0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  if (!a1)
  {
    __break(1u);
    goto LABEL_8;
  }
  v2 = *(_QWORD *)(v1 + 48);
  if (a1 == -1 && v2 == 0x8000000000000000)
  {
LABEL_8:
    __break(1u);
    JUMPOUT(0x20E49AA44);
  }
  return v2 % a1 == 0;
}

void ShelfGridItem.isInLastRow.getter()
{
  __asm { BR              X11 }
}

uint64_t sub_20E49AC40(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for ShelfGridItem(a2, a1);
  return a2;
}

uint64_t destroy for ShelfGridItem(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  return sub_20E4338EC(*(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_BYTE *)(a1 + 80));
}

uint64_t initializeWithCopy for ShelfGridItem(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v4;
  (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 8, a2 + 8);
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v6 = *(_QWORD *)(a2 + 64);
  v7 = *(_QWORD *)(a2 + 72);
  v8 = *(_BYTE *)(a2 + 80);
  sub_20E4337BC(v5, v6, v7, v8);
  *(_QWORD *)(a1 + 56) = v5;
  *(_QWORD *)(a1 + 64) = v6;
  *(_QWORD *)(a1 + 72) = v7;
  *(_BYTE *)(a1 + 80) = v8;
  *(_BYTE *)(a1 + 81) = *(_BYTE *)(a2 + 81);
  return a1;
}

uint64_t assignWithCopy for ShelfGridItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 8), (uint64_t *)(a2 + 8));
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v4 = *(_QWORD *)(a2 + 56);
  v5 = *(_QWORD *)(a2 + 64);
  v6 = *(_QWORD *)(a2 + 72);
  v7 = *(_BYTE *)(a2 + 80);
  sub_20E4337BC(v4, v5, v6, v7);
  v8 = *(_QWORD *)(a1 + 56);
  v9 = *(_QWORD *)(a1 + 64);
  v10 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 56) = v4;
  *(_QWORD *)(a1 + 64) = v5;
  *(_QWORD *)(a1 + 72) = v6;
  v11 = *(_BYTE *)(a1 + 80);
  *(_BYTE *)(a1 + 80) = v7;
  sub_20E4338EC(v8, v9, v10, v11);
  *(_BYTE *)(a1 + 81) = *(_BYTE *)(a2 + 81);
  return a1;
}

__n128 __swift_memcpy82_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for ShelfGridItem(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  unsigned __int8 v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v4 = *(_BYTE *)(a2 + 80);
  v5 = *(_QWORD *)(a1 + 56);
  v6 = *(_QWORD *)(a1 + 64);
  v7 = *(_QWORD *)(a1 + 72);
  v8 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v8;
  v9 = *(_BYTE *)(a1 + 80);
  *(_BYTE *)(a1 + 80) = v4;
  sub_20E4338EC(v5, v6, v7, v9);
  *(_BYTE *)(a1 + 81) = *(_BYTE *)(a2 + 81);
  return a1;
}

uint64_t getEnumTagSinglePayload for ShelfGridItem(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 82))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ShelfGridItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 80) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 82) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 82) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ShelfGridItem()
{
  return &type metadata for ShelfGridItem;
}

ValueMetadata *_s19_ProtocolDispatcherVMa()
{
  return &_s19_ProtocolDispatcherVN;
}

uint64_t sub_20E49AF10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  int64_t v26;
  char *v27;
  uint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v37;
  unint64_t v38;
  uint64_t result;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  __int128 v44[2];
  uint64_t v45;
  __int128 v46[2];

  v4 = v3;
  v8 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v43 = (char *)&v40 - v12;
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v40 - v15;
  if (((*(uint64_t (**)(uint64_t, uint64_t, double))(v17 + 64))(v18, v17, v14) & 1) != 0)
  {
    v19 = *(_QWORD *)(v8 + 16);
    ((void (*)(char *, uint64_t, uint64_t))v19)(v16, a1, a2);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254A1CB08);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v20 = sub_20E3B1AB4(v44, (uint64_t)v46);
      MEMORY[0x24BDAC7A8](v20);
      *(&v40 - 2) = (uint64_t)v46;
      v21 = sub_20E49C3C4(sub_20E49C6A4);
      v22 = *(_QWORD *)(*v3 + 16);
      if (v22 < v21)
        goto LABEL_49;
      sub_20E3DEFC4(v21, v22);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
    }
    else
    {
      v45 = 0;
      memset(v44, 0, sizeof(v44));
      sub_20E49C664((uint64_t)v44);
    }
    v27 = v43;
    goto LABEL_35;
  }
  v41 = v8;
  v23 = *v3;
  v8 = *(_QWORD *)(*v3 + 16);
  if (!v8)
  {
    v26 = 0;
    v27 = v43;
LABEL_34:
    sub_20E3DEFC4(v8, v26);
    v8 = v41;
    v19 = *(_QWORD *)(v41 + 16);
LABEL_35:
    ((void (*)(char *, uint64_t, uint64_t))v19)(v27, a1, a2);
    v24 = *v4;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v4 = v24;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
LABEL_42:
      v24 = (unint64_t)sub_20E3AD3A4(0, *(_QWORD *)(v24 + 16) + 1, 1, (_QWORD *)v24);
      *v4 = v24;
    }
    v38 = *(_QWORD *)(v24 + 16);
    v37 = *(_QWORD *)(v24 + 24);
    if (v38 >= v37 >> 1)
      *v4 = (uint64_t)sub_20E3AD3A4((_QWORD *)(v37 > 1), v38 + 1, 1, (_QWORD *)v24);
    ((void (*)(char *, char *, uint64_t))v19)(v10, v27, a2);
    sub_20E49C5EC(v38, (uint64_t)v10, v4, a2, a3);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v27, a2);
  }
  v42 = v10;
  swift_bridgeObjectRetain();
  v24 = 0;
  v19 = 72;
  while (1)
  {
    sub_20E3C39FC(v23 + v19 - 40, (uint64_t)v46);
    v25 = sub_20E49B394((uint64_t)v46, a2);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
    if ((v25 & 1) != 0)
      break;
    ++v24;
    v19 += 40;
    if (v8 == v24)
    {
      swift_bridgeObjectRelease();
      v26 = *(_QWORD *)(*v4 + 16);
      goto LABEL_16;
    }
  }
  swift_bridgeObjectRelease();
  v26 = v24 + 1;
  if (__OFADD__(v24, 1))
    goto LABEL_50;
  v28 = *v4;
  v29 = *(_QWORD *)(*v4 + 16);
  if (v26 == v29)
  {
    v8 = v24;
LABEL_16:
    v10 = v42;
LABEL_33:
    v27 = v43;
    if (v26 < v8)
      goto LABEL_48;
    goto LABEL_34;
  }
  v27 = (char *)(v24 + 1);
  v10 = v42;
  while (1)
  {
    if ((unint64_t)v27 >= v29)
    {
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    sub_20E3C39FC(v28 + v19, (uint64_t)v46);
    v8 = sub_20E49B394((uint64_t)v46, a2);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
    if ((v8 & 1) == 0)
      break;
LABEL_30:
    v26 = (int64_t)(v27 + 1);
    if (__OFADD__(v27, 1))
      goto LABEL_40;
    v28 = *v4;
    v29 = *(_QWORD *)(*v4 + 16);
    ++v27;
    v19 += 40;
    if (v26 == v29)
    {
      v8 = v24;
      goto LABEL_33;
    }
  }
  if (v27 == (char *)v24)
  {
LABEL_29:
    if (__OFADD__(v24++, 1))
      goto LABEL_41;
    goto LABEL_30;
  }
  if ((v24 & 0x8000000000000000) == 0)
  {
    v30 = (_QWORD *)*v4;
    v31 = *(_QWORD *)(*v4 + 16);
    if (v24 >= v31)
      goto LABEL_44;
    sub_20E3C39FC((uint64_t)&v30[5 * v24 + 4], (uint64_t)v46);
    if ((unint64_t)v27 >= v31)
      goto LABEL_45;
    sub_20E3C39FC((uint64_t)v30 + v19, (uint64_t)v44);
    v32 = swift_isUniquelyReferenced_nonNull_native();
    *v4 = (uint64_t)v30;
    if ((v32 & 1) == 0)
    {
      v30 = sub_20E46F4DC(v30);
      *v4 = (uint64_t)v30;
    }
    v10 = v42;
    if (v24 >= v30[2])
      goto LABEL_46;
    v33 = (uint64_t)&v30[5 * v24 + 4];
    __swift_destroy_boxed_opaque_existential_1(v33);
    sub_20E3B1AB4(v44, v33);
    v34 = *v4;
    if ((unint64_t)v27 >= *(_QWORD *)(*v4 + 16))
      goto LABEL_47;
    v8 = v34 + v19;
    __swift_destroy_boxed_opaque_existential_1(v34 + v19);
    sub_20E3B1AB4(v46, v8);
    goto LABEL_29;
  }
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
  result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_20E49B394(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v10[40];

  v3 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_20E3C39FC(v6, (uint64_t)v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A18A30);
  v7 = swift_dynamicCast();
  if ((_DWORD)v7)
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, a2);
  return v7;
}

uint64_t sub_20E49B444(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v3 = a2[3];
  v4 = a2[4];
  v5 = __swift_project_boxed_opaque_existential_1(a2, v3);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18A30);
  return sub_20E49B4B4((uint64_t)v5, a1, v3, v6, v4) & 1;
}

uint64_t sub_20E49B4B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  int v21;
  void (*v22)(char *, uint64_t, uint64_t, uint64_t);
  char v23;
  _QWORD v25[2];

  v25[1] = a5;
  v8 = sub_20E4A60E0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v25 - v10;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(a3 - 8);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v20 + 16))(v14, a2, a4, v17);
  v21 = swift_dynamicCast();
  v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  if (v21)
  {
    v22(v11, 0, 1, a3);
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v19, v11, a3);
    v23 = sub_20E4A5C0C();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v19, a3);
  }
  else
  {
    v22(v11, 1, 1, a3);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v23 = 0;
  }
  return v23 & 1;
}

uint64_t sub_20E49B64C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char *v23;
  uint64_t v24;
  double *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v37[2];
  char *v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  uint64_t v69;

  v39 = a7;
  *(_QWORD *)&v42 = a5;
  LODWORD(v44) = a4;
  *(_QWORD *)&v43 = a3;
  *(_QWORD *)&v41 = a1;
  *(_QWORD *)&v40 = sub_20E4A5E58();
  *(_QWORD *)&v45 = *(_QWORD *)(v40 - 8);
  v12 = *(_QWORD *)(v45 + 64);
  MEMORY[0x24BDAC7A8](v40);
  v38 = (char *)v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a6 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x24BDAC7A8](v15);
  v37[0] = (char *)v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v59 = a2;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a6;
  *(_QWORD *)(v16 + 24) = a7;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1CAD0);
  *(_QWORD *)&v63 = a6;
  *((_QWORD *)&v63 + 1) = MEMORY[0x24BDF4108];
  v37[1] = swift_getExtendedExistentialTypeMetadata();
  sub_20E39D010(&qword_254A1CAD8, &qword_254A1CAD0, MEMORY[0x24BEE25B0]);
  sub_20E4A62E4();
  swift_release();
  swift_bridgeObjectRelease();
  v59 = v52;
  v60 = v53;
  v61 = v54;
  v62 = v55;
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 16))((char *)v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v41, a6);
  v17 = v45;
  v18 = v38;
  v19 = v40;
  (*(void (**)(char *, _QWORD, _QWORD))(v45 + 16))(v38, v42, v40);
  v20 = (*(unsigned __int8 *)(v13 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v21 = (v14 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  v22 = (*(unsigned __int8 *)(v17 + 80) + v21 + 9) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v23 = (char *)swift_allocObject();
  v24 = v39;
  *((_QWORD *)v23 + 2) = a6;
  *((_QWORD *)v23 + 3) = v24;
  *((_QWORD *)v23 + 4) = v43;
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 32))(&v23[v20], v37[0], a6);
  v25 = (double *)&v23[v21];
  *v25 = a8;
  *((_BYTE *)v25 + 8) = v44;
  (*(void (**)(char *, char *, uint64_t))(v45 + 32))(&v23[v22], v18, v19);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1CAE0);
  sub_20E4A60E0();
  sub_20E39D010(&qword_254A1CAE8, &qword_254A1CAE0, MEMORY[0x24BEE12C8]);
  v26 = sub_20E4A6260();
  v27 = MEMORY[0x24BEE2B40];
  MEMORY[0x212BBDF90](MEMORY[0x24BEE2B40], v26);
  v28 = sub_20E4A629C();
  v29 = MEMORY[0x24BEE2FF8];
  MEMORY[0x212BBDF90](MEMORY[0x24BEE2FF8], v28);
  v30 = sub_20E4A6260();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1CAF0);
  MEMORY[0x212BBDF90](MEMORY[0x24BEE2B58], v30);
  sub_20E4A62E4();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  v44 = v64;
  v45 = v63;
  v52 = v63;
  v53 = v64;
  v42 = v66;
  v43 = v65;
  v54 = v65;
  v55 = v66;
  v40 = v68;
  v41 = v67;
  v56 = v67;
  v57 = v68;
  v58 = v69;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1CAF8);
  MEMORY[0x212BBDF90](v27, v30);
  v31 = sub_20E4A6260();
  MEMORY[0x212BBDF90](v27, v31);
  v32 = sub_20E4A629C();
  MEMORY[0x212BBDF90](v29, v32);
  v33 = sub_20E4A6260();
  v51 = sub_20E39D010(&qword_254A1CB00, &qword_254A1CAE0, MEMORY[0x24BEE12E0]);
  v34 = MEMORY[0x24BEE2B50];
  v50 = MEMORY[0x212BBDF90](MEMORY[0x24BEE2B50], v26, &v51);
  v35 = MEMORY[0x24BEE3000];
  v49 = MEMORY[0x212BBDF90](MEMORY[0x24BEE3000], v28, &v50);
  v48 = MEMORY[0x212BBDF90](v34, v30, &v49);
  v47 = MEMORY[0x212BBDF90](v34, v31, &v48);
  v46 = MEMORY[0x212BBDF90](v35, v32, &v47);
  MEMORY[0x212BBDF90](v34, v33, &v46);
  sub_20E4A5F9C();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v59;
}

double sub_20E49BB8C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double result;
  _BYTE v4[40];

  sub_20E3C39FC(a1, (uint64_t)v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A18A30);
  swift_getExtendedExistentialTypeMetadata();
  if ((swift_dynamicCast() & 1) == 0)
  {
    *(_QWORD *)(a2 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

uint64_t sub_20E49BC18()
{
  return swift_deallocObject();
}

double sub_20E49BC28@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20E49BB8C(a1, a2);
}

uint64_t sub_20E49BC30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = sub_20E4A5E58();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v4 + *(unsigned __int8 *)(v6 + 80) + 9) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject();
}

uint64_t (*sub_20E49BCF0@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>))()
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*result)();
  uint64_t (*v17)();
  uint64_t (*v18)();

  v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(unsigned __int8 *)(*(_QWORD *)(sub_20E4A5E58() - 8) + 80);
  v9 = (v7 + v8 + 9) & ~v8;
  v10 = *(_QWORD *)(v2 + 32);
  v11 = v2 + v6;
  v12 = *(double *)(v2 + v7);
  LODWORD(v7) = *(unsigned __int8 *)(v2 + v7 + 8);
  v13 = v2 + v9;
  v14 = a1[3];
  v15 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v14);
  result = sub_20E49BDCC(v10, v11, v7, v13, v14, v15, v12);
  if (result)
    v18 = v17;
  else
    v18 = 0;
  *a2 = result;
  a2[1] = v18;
  return result;
}

uint64_t (*sub_20E49BDCC(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7))()
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t AssociatedTypeWitness;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  char *v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v61 = a2;
  v53 = a4;
  v54 = a1;
  v60 = *(_QWORD *)(a5 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v58 = v11;
  v59 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_20E4A5E58();
  v49 = *(_QWORD *)(v12 - 8);
  v50 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v51 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = a5;
  v64 = a6;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v57 = type metadata accessor for MediaArtwork.ProtocolRequest(0, AssociatedTypeWitness, v15, v16);
  v52 = *(_QWORD *)(v57 - 8);
  v17 = *(_QWORD *)(v52 + 64);
  MEMORY[0x24BDAC7A8](v57);
  v56 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v48 = (char *)&v48 - v19;
  v20 = sub_20E4A60E0();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v48 - v22;
  v24 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](v25);
  v27 = (char *)&v48 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29.n128_f64[0] = MEMORY[0x24BDAC7A8](v28);
  v31 = (char *)&v48 - v30;
  v55 = a3;
  if ((a3 & 1) == 0 && ((*(uint64_t (**)(double))(v64 + 72))(v29.n128_f64[0]) & 1) == 0)
    return 0;
  v32 = v62;
  (*(void (**)(uint64_t, uint64_t, __n128))(v64 + 80))(v61, v63, v29);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v23, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v31, v23, AssociatedTypeWitness);
  (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v27, v31, AssociatedTypeWitness);
  v34 = v51;
  (*(void (**)(char *, uint64_t, uint64_t))(v49 + 16))(v51, v53, v50);
  v35 = swift_bridgeObjectRetain();
  v36 = v48;
  sub_20E41E0D4(v35, (uint64_t)v27, v55 & 1, v34, AssociatedTypeWitness, v48, a7);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v31, AssociatedTypeWitness);
  v38 = v59;
  v37 = v60;
  v39 = v63;
  (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))(v59, v32, v63);
  v40 = v52;
  v41 = *(void (**)(char *, char *, uint64_t))(v52 + 32);
  v43 = v56;
  v42 = v57;
  v41(v56, v36, v57);
  v44 = (*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
  v45 = (v58 + v44 + *(unsigned __int8 *)(v40 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
  v46 = swift_allocObject();
  v47 = v64;
  *(_QWORD *)(v46 + 16) = v39;
  *(_QWORD *)(v46 + 24) = v47;
  (*(void (**)(unint64_t, char *, uint64_t))(v37 + 32))(v46 + v44, v38, v39);
  v41((char *)(v46 + v45), v43, v42);
  return sub_20E49C32C;
}

uint64_t sub_20E49C138(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t AssociatedTypeWitness;
  double v8;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  (*(void (**)(uint64_t, uint64_t, uint64_t, double))(a4 + 88))(a2, a3, a4, v8);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  return sub_20E4A49A0();
}

uint64_t sub_20E49C23C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v3 + *(_QWORD *)(v2 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = type metadata accessor for MediaArtwork.ProtocolRequest(0, AssociatedTypeWitness, v6, v7);
  v9 = *(unsigned __int8 *)(*(_QWORD *)(v8 - 8) + 80);
  v10 = (v4 + v9) & ~v9;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v0 + v10 + *(int *)(v8 + 28), AssociatedTypeWitness);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E49C32C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v1 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = v4 + *(_QWORD *)(v3 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for MediaArtwork.ProtocolRequest(0, AssociatedTypeWitness, v7, v8)- 8)+ 80);
  return sub_20E49C138(v0 + v4, v0 + ((v5 + v9) & ~v9), v1, v2);
}

uint64_t sub_20E49C3C4(uint64_t (*a1)(uint64_t))
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v6;
  uint64_t i;
  char v8;
  uint64_t result;
  unint64_t v10;
  unint64_t j;
  char v12;
  _QWORD *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v19;
  __int128 v20[2];
  __int128 v21[2];

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  if (!v4)
    return 0;
  swift_bridgeObjectRetain();
  v6 = 0;
  for (i = 72; ; i += 40)
  {
    v8 = a1(v3 + i - 40);
    if (v2)
    {
      swift_bridgeObjectRelease();
      return v6;
    }
    if ((v8 & 1) != 0)
      break;
    if (v4 == ++v6)
    {
      swift_bridgeObjectRelease();
      return *(_QWORD *)(v3 + 16);
    }
  }
  result = swift_bridgeObjectRelease();
  if (!__OFADD__(v6, 1))
  {
    v10 = *(_QWORD *)(v3 + 16);
    if (v6 + 1 == v10)
      return v6;
    for (j = v6 + 1; j < v10; ++j)
    {
      sub_20E3C39FC(v3 + i, (uint64_t)v21);
      v12 = a1((uint64_t)v21);
      result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
      if ((v12 & 1) == 0)
      {
        if (j != v6)
        {
          if ((v6 & 0x8000000000000000) != 0)
            goto LABEL_31;
          v13 = (_QWORD *)*v1;
          v14 = *(_QWORD *)(*v1 + 16);
          if (v6 >= v14)
            goto LABEL_32;
          result = sub_20E3C39FC((uint64_t)&v13[5 * v6 + 4], (uint64_t)v21);
          if (j >= v14)
            goto LABEL_33;
          sub_20E3C39FC((uint64_t)&v13[(unint64_t)i / 8], (uint64_t)v20);
          result = swift_isUniquelyReferenced_nonNull_native();
          *v1 = (uint64_t)v13;
          if ((result & 1) == 0)
          {
            result = (uint64_t)sub_20E46F4DC(v13);
            v13 = (_QWORD *)result;
            *v1 = result;
          }
          if (v6 >= v13[2])
            goto LABEL_34;
          v15 = (uint64_t)&v13[5 * v6 + 4];
          __swift_destroy_boxed_opaque_existential_1(v15);
          result = sub_20E3B1AB4(v20, v15);
          v16 = *v1;
          if (j >= *(_QWORD *)(*v1 + 16))
            goto LABEL_35;
          v17 = v16 + i;
          __swift_destroy_boxed_opaque_existential_1(v16 + i);
          result = sub_20E3B1AB4(v21, v17);
        }
        if (__OFADD__(v6++, 1))
          goto LABEL_30;
      }
      v19 = j + 1;
      if (__OFADD__(j, 1))
        goto LABEL_29;
      v3 = *v1;
      v10 = *(_QWORD *)(*v1 + 16);
      i += 40;
      if (v19 == v10)
        return v6;
    }
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20E49C5EC(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t *boxed_opaque_existential_1Tm;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v13 = a4;
  v14 = a5;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(boxed_opaque_existential_1Tm, a2, a4);
  v10 = *a3;
  *(_QWORD *)(v10 + 16) = a1 + 1;
  return sub_20E3B1AB4(&v12, v10 + 40 * a1 + 32);
}

uint64_t sub_20E49C664(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_254A1CB10);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20E49C6A4(uint64_t a1)
{
  uint64_t v1;

  return sub_20E49B444(a1, *(_QWORD **)(v1 + 16)) & 1;
}

uint64_t View.intentImplementation<A>(for:perform:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t KeyPath;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[3];
  char v18;

  KeyPath = swift_getKeyPath();
  v17[0] = a2;
  v17[1] = a3;
  v17[2] = KeyPath;
  v18 = 0;
  v15 = type metadata accessor for IntentImplementationViewModifier(0, a5, a7, v14);
  swift_retain();
  MEMORY[0x212BBBA70](v17, a4, v15, a6);
  swift_release();
  return j__swift_release(KeyPath, 0);
}

uint64_t type metadata accessor for IntentImplementationViewModifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for IntentImplementationViewModifier);
}

uint64_t sub_20E49C78C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[2];

  v4 = a1[2];
  v5 = type metadata accessor for IntentImplementationViewModifier(255, a1[1], a1[3], a4);
  v6 = sub_20E4A39D4();
  v8[0] = v4;
  v8[1] = MEMORY[0x212BBDF90](&unk_20E4B17D0, v5);
  return MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v6, v8);
}

uint64_t sub_20E49C804(uint64_t a1)
{
  swift_release();
  return j__swift_release(*(_QWORD *)(a1 + 16), *(unsigned __int8 *)(a1 + 24));
}

uint64_t sub_20E49C830(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = a2;
  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  v5 = v2[2];
  LOBYTE(v2) = *((_BYTE *)v2 + 24);
  j__swift_retain(v5);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(unsigned __int8 *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = (_BYTE)v2;
  j__swift_release(v6, v7);
  return a1;
}

uint64_t sub_20E49C89C(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(unsigned __int8 *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = v4;
  j__swift_release(v5, v6);
  return a1;
}

uint64_t sub_20E49C8EC()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_20E49C920(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[26];

  v6[7] = a1;
  v6[12] = a2;
  MEMORY[0x212BBDF90](&unk_20E4B17D0);
  v2 = sub_20E4A3EA8();
  v6[0] = *(_QWORD *)(v2 - 8);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v6[2] = (char *)v6 - v4;
  v5 = MEMORY[0x212BBDF90](MEMORY[0x24BDEFB78], v2, v3);
  v6[21] = v2;
  v6[22] = MEMORY[0x24BDF1FA8];
  v6[11] = v5;
  v6[23] = v5;
  v6[24] = MEMORY[0x24BDF1F80];
  type metadata accessor for _RequirementFailureView();
}

uint64_t sub_20E49C9DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void (*v26)(_BYTE *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE v34[96];

  *(_QWORD *)(v4 - 280) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v7 = &v34[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v8);
  *(_QWORD *)(v4 - 264) = &v34[-v9];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19150);
  v10 = sub_20E4A39D4();
  *(_QWORD *)(v4 - 240) = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v34[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v13);
  v15 = &v34[-v14];
  v16 = sub_20E4A3E00();
  *(_QWORD *)(v4 - 216) = *(_QWORD *)(v16 - 8);
  *(_QWORD *)(v4 - 208) = v16;
  MEMORY[0x24BDAC7A8](v16);
  *(_QWORD *)(v4 - 224) = &v34[-v17];
  *(_OWORD *)(v4 - 256) = *(_OWORD *)v1;
  v18 = *(_QWORD *)(v1 + 16);
  v19 = *(unsigned __int8 *)(v1 + 24);
  j__swift_retain(v18);
  sub_20E45D0E0(v18, v19, (_QWORD *)(v4 - 120));
  v20 = j__swift_release(v18, v19);
  v21 = *(_QWORD *)(v4 - 120);
  if (!v21)
  {
    v28 = *(_QWORD *)(v4 - 272);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v4 - 288) + 16))(v28, *(_QWORD *)(v4 - 232), v2);
    _RequirementFailureView.init<>(_:_:)(v28, 0xD00000000000002ALL, 0x800000020E4CDC80, v2, (uint64_t)v7);
  }
  MEMORY[0x24BDAC7A8](v20);
  v22 = *(_OWORD *)(v4 - 256);
  *(_OWORD *)&v34[-48] = *(_OWORD *)(v3 + 16);
  *(_OWORD *)&v34[-32] = v22;
  *(_QWORD *)&v34[-16] = v18;
  v34[-8] = v19;
  v23 = *(_QWORD *)(v4 - 200);
  View.intentDispatcher(with:implementations:)(v21, (void (*)(void))sub_20E49CF28);
  v24 = sub_20E476574();
  *(_QWORD *)(v4 - 184) = v23;
  *(_QWORD *)(v4 - 176) = v24;
  v25 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v10, v4 - 184);
  sub_20E39D614(v15, v12, v10, v25);
  v26 = *(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v4 - 240) + 8);
  v26(v12, v10);
  sub_20E39D618((uint64_t)v15, v10, (uint64_t)v12);
  MEMORY[0x212BBDF90](&protocol conformance descriptor for _RequirementFailureView<A, B>, a1);
  v27 = *(_QWORD *)(v4 - 224);
  sub_20E3DC6B0((uint64_t)v12, v10);
  swift_release();
  v26(v12, v10);
  v26(v15, v10);
  v29 = sub_20E476574();
  *(_QWORD *)(v4 - 152) = v23;
  *(_QWORD *)(v4 - 144) = v29;
  v30 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v10, v4 - 152);
  v31 = MEMORY[0x212BBDF90](&protocol conformance descriptor for _RequirementFailureView<A, B>, a1);
  *(_QWORD *)(v4 - 168) = v30;
  *(_QWORD *)(v4 - 160) = v31;
  v32 = *(_QWORD *)(v4 - 208);
  MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v32, v4 - 168);
  sub_20E39D618(v27, v32, *(_QWORD *)(v4 - 192));
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 216) + 8))(v27, v32);
}

uint64_t sub_20E49CDC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD v19[2];

  v10 = sub_20E4A5528();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[0] = a1;
  v19[1] = a2;
  v15 = type metadata accessor for _DelegatingIntentImplementation(0, a5, a6, v14);
  swift_retain();
  MEMORY[0x212BBDF90](&unk_20E4B18B0, v15);
  sub_20E4A5504();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(qword_254A1CB98);
  v16 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v17 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 16))(v17 + v16, v13, v10);
  sub_20E4A551C();
  sub_20E4A5510();
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_20E49CF28()
{
  uint64_t v0;

  return sub_20E49CDC8(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(unsigned __int8 *)(v0 + 56), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t type metadata accessor for _DelegatingIntentImplementation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _DelegatingIntentImplementation);
}

void sub_20E49CF50(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for IntentImplementationViewModifier(255, *a1, a1[1], a4);
  MEMORY[0x212BBDF90](&unk_20E4B17D0, v4);
  v5 = sub_20E4A3EA8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19150);
  sub_20E4A39D4();
  MEMORY[0x212BBDF90](MEMORY[0x24BDEFB78], v5);
  type metadata accessor for _RequirementFailureView();
}

uint64_t sub_20E49CFF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD v6[2];
  _QWORD v7[12];

  v4 = sub_20E4A3E00();
  v7[0] = v2;
  v7[1] = sub_20E476574();
  v6[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v1, v7);
  v6[1] = MEMORY[0x212BBDF90](&protocol conformance descriptor for _RequirementFailureView<A, B>, a1);
  return MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v4, v6);
}

uint64_t sub_20E49D064(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);

  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)a4 + *a4);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_20E3B4E08;
  return v10(a1, a2, a3);
}

uint64_t sub_20E49D0E0()
{
  return sub_20E49D284();
}

uint64_t sub_20E49D0EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int **v3;
  uint64_t v4;
  int *v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t);

  v8 = *v3;
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_20E3B50B0;
  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)v8 + *v8);
  v10 = (_QWORD *)swift_task_alloc();
  v9[2] = v10;
  *v10 = v9;
  v10[1] = sub_20E3B4E08;
  return v12(a1, a2, a3);
}

uint64_t sub_20E49D18C()
{
  return sub_20E49D198();
}

uint64_t sub_20E49D198()
{
  sub_20E4A61A0();
  swift_bridgeObjectRelease();
  sub_20E4A6458();
  sub_20E4A5C6C();
  swift_bridgeObjectRelease();
  sub_20E4A5C6C();
  swift_getAssociatedTypeWitness();
  sub_20E4A6458();
  sub_20E4A5C6C();
  swift_bridgeObjectRelease();
  return 0x6C6261646E655340;
}

uint64_t sub_20E49D284()
{
  uint64_t v1;

  sub_20E4A4B20();
  return v1;
}

uint64_t sub_20E49D2B4(uint64_t *a1)
{
  uint64_t result;
  unint64_t v2;
  unint64_t v3;

  type metadata accessor for FlowStackTabsAuthority.Tab(255, a1[10], a1[11], a1[12]);
  sub_20E4A5D98();
  result = sub_20E4A35E4();
  if (v2 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    result = sub_20E4A4778();
    if (v3 <= 0x3F)
    {
      result = swift_initClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t sub_20E49D390(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _BYTE v14[16];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 96);
  v5 = *(_QWORD *)(*v1 + 80);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v9 = &v14[-v8];
  v19 = sub_20E49DB50();
  v10 = *(_QWORD *)(v3 + 88);
  v15 = v5;
  v16 = v10;
  v17 = v4;
  v18 = a1;
  type metadata accessor for FlowStackTabsAuthority.Tab(255, v5, v10, v4);
  v11 = sub_20E4A5D98();
  MEMORY[0x212BBDF90](MEMORY[0x24BEE12C8], v11);
  v12 = sub_20E4A5CFC();
  swift_bridgeObjectRelease();
  if ((v12 & 1) != 0)
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(v9, a1, AssociatedTypeWitness);
    sub_20E4A4778();
    sub_20E4A4730();
  }
  return v12 & 1;
}

uint64_t sub_20E49D4E0(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t KeyPath;
  uint64_t *v18;
  uint64_t *v19;
  int v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, _QWORD);
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t *v32;
  uint64_t *v33;
  uint64_t v34;
  char *v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46[40];
  uint64_t v47;
  unint64_t v48;
  unsigned __int8 v49;

  v3 = v2;
  v36 = a2;
  v5 = *v2;
  v6 = *(_QWORD *)(*v2 + 96);
  v7 = *(_QWORD *)(*v2 + 80);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v35 = (char *)&v26 - v9;
  v10 = *(_QWORD *)(v5 + 88);
  v42 = v7;
  v43 = v10;
  v44 = v6;
  v45 = a1;
  sub_20E4A59B4();
  v47 = sub_20E49DB50();
  v38 = v7;
  v39 = v10;
  v40 = v6;
  v41 = a1;
  v37 = a1;
  v11 = type metadata accessor for FlowStackTabsAuthority.Tab(255, v7, v10, v6);
  v12 = sub_20E4A5D98();
  MEMORY[0x212BBDF90](MEMORY[0x24BEE12E0], v12);
  sub_20E4A5F78();
  v13 = swift_bridgeObjectRelease();
  v14 = v49;
  if ((v49 & 1) == 0)
  {
    v33 = &v26;
    v31 = v48;
    MEMORY[0x24BDAC7A8](v13);
    v34 = AssociatedTypeWitness;
    *(&v26 - 4) = v7;
    *(&v26 - 3) = v10;
    v15 = v37;
    *(&v26 - 2) = v6;
    *(&v26 - 1) = v15;
    MEMORY[0x24BDAC7A8](v16);
    *(&v26 - 4) = v7;
    *(&v26 - 3) = v10;
    *(&v26 - 2) = v6;
    KeyPath = swift_getKeyPath();
    v27 = v11;
    v29 = KeyPath;
    MEMORY[0x24BDAC7A8](KeyPath);
    *(&v26 - 4) = v7;
    *(&v26 - 3) = v10;
    *(&v26 - 2) = v6;
    v30 = swift_getKeyPath();
    v28 = (void (*)(char *, _QWORD))sub_20E4A35C0();
    v19 = v18;
    sub_20E4A5D5C();
    v20 = v14;
    v32 = v3;
    v21 = *v19;
    v22 = v31;
    v23 = v27;
    sub_20E49F7E4(v31, *v19);
    v24 = v21
        + ((*(unsigned __int8 *)(*(_QWORD *)(v23 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v23 - 8) + 80))
        + *(_QWORD *)(*(_QWORD *)(v23 - 8) + 72) * v22;
    v14 = v20;
    sub_20E49E73C(v24, *(&v26 - 1), *(&v26 - 4), *(&v26 - 3), *(&v26 - 2));
    nullsub_1(v12);
    v28(v46, 0);
    swift_release();
    swift_release();
    if ((v36 & 1) != 0)
    {
      sub_20E4A61B8();
      sub_20E4A4778();
      sub_20E4A4730();
    }
  }
  return v14 ^ 1u;
}

uint64_t sub_20E49D860(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  void (*v24)(char *, _QWORD);
  void (*v25)(char *);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, char *);
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char v43[32];
  uint64_t v44;

  v30 = a5;
  v31 = a8;
  v38 = a1;
  v39 = a2;
  v29 = *(_QWORD *)(a5 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v40 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v13 = (char *)&v29 - v12;
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_getAssociatedTypeWitness();
  v32 = *(_QWORD *)(v17 - 8);
  v33 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v29 - v18;
  v20 = sub_20E4A5F48();
  if (!v20)
    return sub_20E4A5D68();
  v36 = AssociatedTypeWitness;
  v21 = v20;
  v44 = sub_20E4A6218();
  v34 = sub_20E4A6224();
  sub_20E4A6200();
  v37 = v8;
  result = sub_20E4A5F3C();
  if ((v21 & 0x8000000000000000) == 0)
  {
    v23 = v21;
    v35 = v16;
    while (v23)
    {
      v41 = v23;
      v24 = (void (*)(char *, _QWORD))sub_20E4A5FC0();
      v25 = *(void (**)(char *))(v11 + 16);
      v26 = v11;
      v27 = v36;
      v25(v13);
      v24(v43, 0);
      v28 = v42;
      v38(v13, v40);
      if (v28)
      {
        (*(void (**)(char *, uint64_t))(v26 + 8))(v13, v27);
        (*(void (**)(char *, uint64_t))(v32 + 8))(v19, v33);
        swift_release();
        return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v29 + 32))(v31, v40, v30);
      }
      v42 = 0;
      (*(void (**)(char *, uint64_t))(v26 + 8))(v13, v27);
      sub_20E4A620C();
      result = sub_20E4A5F6C();
      v23 = v41 - 1;
      v11 = v26;
      if (v41 == 1)
      {
        (*(void (**)(char *, uint64_t))(v32 + 8))(v19, v33);
        return v44;
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_20E49DB50()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_20E4A35CC();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_20E49DBEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  sub_20E49DF08(a1, a2);
  return v4;
}

uint64_t sub_20E49DC38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void (*v6)(char *, uint64_t);
  uint64_t v8;

  v1 = type metadata accessor for FlowStackTabsAuthority.Tab(0, *(_QWORD *)(*(_QWORD *)v0 + 80), *(_QWORD *)(*(_QWORD *)v0 + 88), *(_QWORD *)(*(_QWORD *)v0 + 96));
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v8 - v3;
  sub_20E49E2A4();
  sub_20E49DB50();
  sub_20E4A5DB0();
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)&v4[*(int *)(v1 + 52)];
  v6 = *(void (**)(char *, uint64_t))(v2 + 8);
  swift_retain();
  v6(v4, v1);
  return v5;
}

uint64_t sub_20E49DCF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t result;

  sub_20E4A59B4();
  sub_20E4A61B8();
  v10 = type metadata accessor for FlowStackTabsAuthority.Tab(0, a2, a3, a4);
  sub_20E4A4AF0();
  sub_20E4A4F4C();
  type metadata accessor for FlowStackAuthority(0, a2, a3, a4);
  *(_QWORD *)(a5 + *(int *)(v10 + 52)) = sub_20E4989B0();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 8))(a1, a2);
  *(_QWORD *)(a5 + *(int *)(v10 + 56)) = 0;
  return result;
}

uint64_t sub_20E49DE10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v0 = sub_20E4A4F58();
  v2 = v1;
  if (v0 == sub_20E4A54C8() && v2 == v3)
    v4 = 1;
  else
    v4 = sub_20E4A635C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

unint64_t sub_20E49DE9C()
{
  return 0xD00000000000003CLL;
}

uint64_t sub_20E49DEB8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a1, v1, AssociatedTypeWitness);
}

uint64_t *sub_20E49DF08(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[6];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v3 = v2;
  v6 = *v2;
  v8 = *(_QWORD *)(*v2 + 88);
  v19 = *(_QWORD *)(*v2 + 80);
  v7 = v19;
  v20 = v8;
  v21 = *(_QWORD *)(v6 + 96);
  v9 = v21;
  v22 = a2;
  sub_20E4A59B4();
  v23 = a2;
  v18[2] = v19;
  v18[3] = v8;
  v18[4] = v21;
  v10 = sub_20E4A5D98();
  v11 = type metadata accessor for FlowStackTabsAuthority.Tab(0, v19, v8, v21);
  v12 = MEMORY[0x212BBDF90](MEMORY[0x24BEE12E0], v10);
  v14 = sub_20E49D860((void (*)(char *, char *))sub_20E49F78C, (uint64_t)v18, v10, v11, MEMORY[0x24BEE4078], v12, MEMORY[0x24BEE40A8], v13);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  sub_20E49E1C0(v14, v7, v8, v9);
  swift_endAccess();
  v15 = (uint64_t)v3 + *(_QWORD *)(*v3 + 112);
  swift_getAssociatedTypeWitness();
  v16 = sub_20E4A4778();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v15, a1, v16);
  return v3;
}

BOOL sub_20E49E0B0()
{
  uint64_t v0;

  v0 = sub_20E4A5D98();
  MEMORY[0x212BBDF90](MEMORY[0x24BEE12E0], v0);
  return (sub_20E4A5FA8() & 1) == 0;
}

unint64_t sub_20E49E108()
{
  return 0xD00000000000002CLL;
}

uint64_t sub_20E49E124@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v14;

  v9 = MEMORY[0x24BDAC7A8](a1);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v12 + 16))(v11, v9);
  return sub_20E49DCF4((uint64_t)v11, a2, a3, a4, a5);
}

uint64_t sub_20E49E1C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;

  v6 = a1;
  type metadata accessor for FlowStackTabsAuthority.Tab(255, a2, a3, a4);
  v4 = sub_20E4A5D98();
  return sub_20E4405E4((uint64_t)&v6, v4);
}

uint64_t sub_20E49E20C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_20E4A35D8();
}

uint64_t sub_20E49E2A4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 96);
  v3 = *(_QWORD *)(*v0 + 80);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v7 = &v13[-v6];
  v8 = sub_20E4A4778();
  MEMORY[0x212BBBCE0](v8);
  v18 = sub_20E49DB50();
  v9 = *(_QWORD *)(v1 + 88);
  v14 = v3;
  v15 = v9;
  v16 = v2;
  v17 = v7;
  type metadata accessor for FlowStackTabsAuthority.Tab(255, v3, v9, v2);
  v10 = sub_20E4A5D98();
  MEMORY[0x212BBDF90](MEMORY[0x24BEE12E0], v10);
  sub_20E4A5F78();
  swift_bridgeObjectRelease();
  if (v20 == 1)
  {
    sub_20E49DB50();
    swift_bridgeObjectRelease();
    v11 = 0;
  }
  else
  {
    v11 = v19;
  }
  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, AssociatedTypeWitness);
  return v11;
}

uint64_t sub_20E49E400()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  return sub_20E4A5C0C() & 1;
}

uint64_t sub_20E49E4A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  uint64_t v19;

  v4 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_20E4A4F58();
  v9 = v8;
  if (v7 == sub_20E4A54A4() && v9 == v10)
  {
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, a2);
LABEL_11:
    v17 = 1;
    goto LABEL_12;
  }
  v11 = sub_20E4A635C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, a2);
  if ((v11 & 1) != 0)
    goto LABEL_11;
  v12 = sub_20E4A4F58();
  v14 = v13;
  if (v12 == sub_20E4A54B0() && v14 == v15)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_11;
  }
  v17 = sub_20E4A635C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_12:
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, a2);
  return v17 & 1;
}

unint64_t sub_20E49E624()
{
  return 0xD000000000000064;
}

uint64_t sub_20E49E640()
{
  uint64_t AssociatedTypeWitness;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  char v4;
  uint64_t v6;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v1 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v3 = (char *)&v6 - v2;
  sub_20E4A61B8();
  swift_getAssociatedConformanceWitness();
  v4 = sub_20E4A5C0C();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, AssociatedTypeWitness);
  return v4 & 1;
}

uint64_t sub_20E49E73C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v12 = (char *)&v15 - v11;
  sub_20E4A4F4C();
  v13 = type metadata accessor for FlowStackTabsAuthority.Tab(0, a3, a4, a5);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 40))(a1 + *(int *)(v13 + 48), v12, AssociatedTypeWitness);
  ++*(_QWORD *)(a1 + *(int *)(v13 + 56));
  return sub_20E4982E0();
}

uint64_t sub_20E49E838()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 104);
  type metadata accessor for FlowStackTabsAuthority.Tab(255, *(_QWORD *)(*(_QWORD *)v0 + 80), *(_QWORD *)(*(_QWORD *)v0 + 88), *(_QWORD *)(*(_QWORD *)v0 + 96));
  sub_20E4A5D98();
  v2 = sub_20E4A35E4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 112);
  swift_getAssociatedTypeWitness();
  v4 = sub_20E4A4778();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t sub_20E49E8F4()
{
  sub_20E49E838();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FlowStackTabsAuthority(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FlowStackTabsAuthority);
}

uint64_t type metadata accessor for FlowStackTabsAuthority.Tab(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FlowStackTabsAuthority.Tab);
}

uint64_t sub_20E49E930()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    result = sub_20E4A4CA0();
    if (v2 <= 0x3F)
    {
      result = swift_getAssociatedTypeWitness();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_20E49EA20(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t *, uint64_t *, uint64_t);
  uint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v28;
  uint64_t v29;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4 = *(_QWORD *)(v3 + 64);
  v29 = sub_20E4A4CA0();
  v5 = *(_QWORD *)(v29 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = v4 + v6;
  v8 = *(_QWORD *)(v5 + 64);
  v9 = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_DWORD *)(v10 + 80);
  v12 = v8 + v11;
  v13 = *(_QWORD *)(v10 + 64) + 7;
  v14 = v11 | *(_DWORD *)(v3 + 80) & 0xF8 | v6;
  if (v14 > 7
    || ((*(_DWORD *)(v10 + 80) | v6 | *(_DWORD *)(v3 + 80)) & 0x100000) != 0
    || ((((v13 + ((v12 + (v7 & ~(unint64_t)v6)) & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
     + 8 > 0x18)
  {
    v17 = *a2;
    *a1 = *a2;
    v21 = (uint64_t *)(v17 + (((v14 | 7) + 16) & ~(unint64_t)(v14 | 7)));
  }
  else
  {
    v18 = ~(unint64_t)v6;
    v19 = ~v11;
    v20 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v3 + 16);
    v21 = a1;
    v28 = v9;
    v20(a1, a2, AssociatedTypeWitness);
    v22 = ((unint64_t)a1 + v7) & v18;
    v23 = ((unint64_t)a2 + v7) & v18;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16))(v22, v23, v29);
    v24 = (v23 + v12) & v19;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 16))((v22 + v12) & v19, v24, v28);
    v25 = (_QWORD *)((v13 + ((v22 + v12) & v19)) & 0xFFFFFFFFFFFFF8);
    v26 = (_QWORD *)((v13 + v24) & 0xFFFFFFFFFFFFF8);
    *v25 = *v26;
    *(_QWORD *)(((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFF8);
  }
  swift_retain();
  return v21;
}

uint64_t sub_20E49EBFC(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, AssociatedTypeWitness);
  v4 = *(_QWORD *)(v3 + 64);
  v5 = sub_20E4A4CA0();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v4 + a1 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v7, v5);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = swift_getAssociatedTypeWitness();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))((v7 + v8 + *(unsigned __int8 *)(*(_QWORD *)(v9 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v9 - 8) + 80), v9);
  return swift_release();
}

uint64_t sub_20E49ECF0(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_20E4A4CA0();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v6 + v9;
  v11 = (v6 + v9 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v11, v12, v7);
  v13 = *(_QWORD *)(v8 + 64);
  v14 = swift_getAssociatedTypeWitness();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = (v13 + v16 + v11) & ~v16;
  v18 = (v13 + v16 + v12) & ~v16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v17, v18, v14);
  v19 = *(_QWORD *)(v15 + 64) + 7;
  v20 = (_QWORD *)((v19 + v17) & 0xFFFFFFFFFFFFFFF8);
  v21 = (_QWORD *)((v19 + v18) & 0xFFFFFFFFFFFFFFF8);
  *v20 = *v21;
  *(_QWORD *)(((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFF8);
  swift_retain();
  return a1;
}

uint64_t sub_20E49EE28(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_20E4A4CA0();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v6 + v9;
  v11 = (v6 + v9 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 24))(v11, v12, v7);
  v13 = *(_QWORD *)(v8 + 64);
  v14 = swift_getAssociatedTypeWitness();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = (v13 + v16 + v11) & ~v16;
  v18 = (v13 + v16 + v12) & ~v16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 24))(v17, v18, v14);
  v19 = *(_QWORD *)(v15 + 64) + 7;
  v20 = (_QWORD *)((v19 + v17) & 0xFFFFFFFFFFFFFFF8);
  v21 = v19 + v18;
  v22 = (v21 & 0xFFFFFFFFFFFFFFF8) + 15;
  *v20 = *(_QWORD *)(v21 & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  *(_QWORD *)(((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(v22 & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_20E49EF6C(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_20E4A4CA0();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v6 + v9;
  v11 = (v6 + v9 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v11, v12, v7);
  v13 = *(_QWORD *)(v8 + 64);
  v14 = swift_getAssociatedTypeWitness();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = (v13 + v16 + v11) & ~v16;
  v18 = (v13 + v16 + v12) & ~v16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v17, v18, v14);
  v19 = *(_QWORD *)(v15 + 64) + 7;
  v20 = (_QWORD *)((v19 + v17) & 0xFFFFFFFFFFFFFFF8);
  v21 = (_QWORD *)((v19 + v18) & 0xFFFFFFFFFFFFFFF8);
  *v20 = *v21;
  *(_QWORD *)(((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_20E49F0A0(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 40))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_20E4A4CA0();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v6 + v9;
  v11 = (v6 + v9 + a1) & ~v9;
  v12 = (v10 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 40))(v11, v12, v7);
  v13 = *(_QWORD *)(v8 + 64);
  v14 = swift_getAssociatedTypeWitness();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = (v13 + v16 + v11) & ~v16;
  v18 = (v13 + v16 + v12) & ~v16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 40))(v17, v18, v14);
  v19 = *(_QWORD *)(v15 + 64) + 7;
  v20 = (_QWORD *)((v19 + v17) & 0xFFFFFFFFFFFFFFF8);
  v21 = (_QWORD *)((v19 + v18) & 0xFFFFFFFFFFFFFFF8);
  *v20 = *v21;
  swift_release();
  *(_QWORD *)(((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_20E49F1DC(uint64_t a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v27 = sub_20E4A4CA0();
  v7 = *(_QWORD *)(v27 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  if (v8 <= v6)
    v9 = v6;
  else
    v9 = *(_DWORD *)(v7 + 84);
  v10 = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int *)(v11 + 84);
  if (v12 <= v9)
    v13 = v9;
  else
    v13 = *(_DWORD *)(v11 + 84);
  if (v13 <= 0x7FFFFFFF)
    v13 = 0x7FFFFFFF;
  if (!a2)
    return 0;
  v14 = v10;
  v15 = *(unsigned __int8 *)(v7 + 80);
  v16 = *(_QWORD *)(v5 + 64) + v15;
  v17 = *(_QWORD *)(v7 + 64);
  v18 = *(unsigned __int8 *)(v11 + 80);
  v19 = *(_QWORD *)(v11 + 64) + 7;
  if (v13 < a2)
  {
    if (((((((v19 + ((v17 + v18 + (v16 & ~v15)) & ~v18)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v20 = 2;
    else
      v20 = a2 - v13 + 1;
    if (v20 >= 0x10000)
      v21 = 4;
    else
      v21 = 2;
    if (v20 < 0x100)
      v21 = 1;
    if (v20 >= 2)
      v22 = v21;
    else
      v22 = 0;
    __asm { BR              X3 }
  }
  if ((_DWORD)v6 == v13)
  {
    v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    v25 = a1;
    v12 = v6;
    v14 = AssociatedTypeWitness;
    return v24(v25, v12, v14);
  }
  v25 = (v16 + a1) & ~v15;
  if ((_DWORD)v8 == v13)
  {
    v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v12 = v8;
    v14 = v27;
    return v24(v25, v12, v14);
  }
  v25 = (v25 + v17 + v18) & ~v18;
  if ((_DWORD)v12 == v13)
  {
    v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
    return v24(v25, v12, v14);
  }
  v26 = *(_QWORD *)((v19 + v25) & 0xFFFFFFFFFFFFF8);
  if (v26 >= 0xFFFFFFFF)
    LODWORD(v26) = -1;
  return (v26 + 1);
}

void sub_20E49F430(unsigned int *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  int v13;
  int v14;
  unsigned int v15;

  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(sub_20E4A4CA0() - 8);
  if (*(_DWORD *)(v8 + 84) <= v7)
    v9 = v7;
  else
    v9 = *(_DWORD *)(v8 + 84);
  v10 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  if (*(_DWORD *)(v10 + 84) <= v9)
    v11 = v9;
  else
    v11 = *(_DWORD *)(v10 + 84);
  if (v11 <= 0x7FFFFFFF)
    v11 = 0x7FFFFFFF;
  if (v11 >= a3)
  {
    v14 = 0;
  }
  else
  {
    if (((((*(_DWORD *)(v10 + 64)
           + 7
           + ((*(_DWORD *)(v8 + 64)
             + *(unsigned __int8 *)(v10 + 80)
             + ((*(_DWORD *)(v6 + 64) + *(unsigned __int8 *)(v8 + 80)) & ~*(unsigned __int8 *)(v8 + 80))) & ~*(unsigned __int8 *)(v10 + 80))) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v12 = a3 - v11 + 1;
    else
      v12 = 2;
    if (v12 >= 0x10000)
      v13 = 4;
    else
      v13 = 2;
    if (v12 < 0x100)
      v13 = 1;
    if (v12 >= 2)
      v14 = v13;
    else
      v14 = 0;
  }
  if (a2 > v11)
  {
    if (((((*(_DWORD *)(v10 + 64)
           + 7
           + ((*(_DWORD *)(v8 + 64)
             + *(unsigned __int8 *)(v10 + 80)
             + ((*(_DWORD *)(v6 + 64) + *(unsigned __int8 *)(v8 + 80)) & ~*(unsigned __int8 *)(v8 + 80))) & ~*(unsigned __int8 *)(v10 + 80))) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      v15 = ~v11 + a2;
      bzero(a1, ((((*(_QWORD *)(v10 + 64)+ 7+ ((*(_QWORD *)(v8 + 64)+ *(unsigned __int8 *)(v10 + 80)+ ((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 8);
      *a1 = v15;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X0 }
}

void sub_20E49F5E0(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  *(_BYTE *)(v11 + v15) = 0;
  if ((_DWORD)v10)
  {
    if ((_DWORD)v13 == v3)
    {
      v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56);
      v18 = v11;
      v19 = v10;
      a1 = v13;
      a2 = v22;
LABEL_8:
      v17(v18, v19, a1, a2);
      return;
    }
    v18 = (v7 + v11) & v9;
    if ((_DWORD)v14 == v3)
    {
      v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56);
      v19 = v10;
      a1 = v14;
      a2 = v21;
      goto LABEL_8;
    }
    v18 = (v18 + v5 + v4) & v8;
    if ((_DWORD)a1 == v3)
    {
      v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 56);
      v19 = v10;
      goto LABEL_8;
    }
    if ((v10 & 0x80000000) != 0)
      v20 = v10 ^ 0x80000000;
    else
      v20 = (v10 - 1);
    *(_QWORD *)((v6 + v18) & 0xFFFFFFFFFFFFFFF8) = v20;
  }
}

uint64_t sub_20E49F6D0()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_20E49F6F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_20E49DB50();
  *a1 = result;
  return result;
}

uint64_t sub_20E49F718()
{
  swift_bridgeObjectRetain();
  return sub_20E49E20C();
}

uint64_t sub_20E49F740()
{
  return 24;
}

__n128 sub_20E49F74C(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_20E49F760()
{
  return sub_20E49E400() & 1;
}

BOOL sub_20E49F780()
{
  return sub_20E49E0B0();
}

uint64_t sub_20E49F78C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_20E49E124(a1, v2[2], v2[3], v2[4], a2);
}

uint64_t sub_20E49F7AC()
{
  return sub_20E49DE10();
}

uint64_t sub_20E49F7B8()
{
  uint64_t v0;

  return sub_20E49E4A4(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 16));
}

uint64_t sub_20E49F7C4()
{
  return sub_20E49E640() & 1;
}

uint64_t sub_20E49F7E4(unint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = _swift_isClassOrObjCExistentialType();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  v5 = a2 & 0xFFFFFFFFFFFFF8;
  if ((result & 1) == 0)
    v5 = a2;
  if (*(_QWORD *)(v5 + 16) <= a1)
    goto LABEL_7;
  return result;
}

uint64_t sub_20E49F834()
{
  return sub_20E49F760() & 1;
}

uint64_t sub_20E49F850(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 < 0)
    return swift_unknownObjectRetain();
  else
    return sub_20E3E2950(a1, a2, a3 & 1);
}

uint64_t sub_20E49F868(uint64_t a1)
{
  return sub_20E49F878(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_20E49F878(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 < 0)
    return swift_unknownObjectRelease();
  else
    return sub_20E3E2B3C(a1, a2, a3 & 1);
}

uint64_t sub_20E49F890(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_20E49F850(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t sub_20E49F8D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_20E49F850(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_20E49F878(v6, v7, v8);
  return a1;
}

uint64_t sub_20E49F92C(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_20E49F878(v4, v5, v6);
  return a1;
}

uint64_t sub_20E49F970(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7F && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 127);
  v3 = (*(_BYTE *)(a1 + 16) & 0x7E | (*(unsigned __int8 *)(a1 + 16) >> 7)) ^ 0x7F;
  if (v3 >= 0x7E)
    v3 = -1;
  return v3 + 1;
}

uint64_t sub_20E49F9C0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 127;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_BYTE *)(result + 16) = 2 * (((-a2 >> 1) & 0x3F) - ((_BYTE)a2 << 6));
    }
  }
  return result;
}

uint64_t sub_20E49FA14(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16) >> 7;
}

uint64_t sub_20E49FA20(uint64_t result)
{
  *(_BYTE *)(result + 16) &= ~0x80u;
  return result;
}

uint64_t sub_20E49FA30(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = *(_BYTE *)(result + 16) & 1 | (a2 << 7);
  return result;
}

uint64_t type metadata accessor for _StateOrObservedObject(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _StateOrObservedObject);
}

uint64_t EnvironmentValues.pageMetricsNavigationPath.getter()
{
  sub_20E49FA84();
  return sub_20E4A3C08();
}

unint64_t sub_20E49FA84()
{
  unint64_t result;

  result = qword_253ED07F0;
  if (!qword_253ED07F0)
  {
    result = MEMORY[0x212BBDF90](&unk_20E4B1A9C, &type metadata for PageMetricsNavigationPath);
    atomic_store(result, (unint64_t *)&qword_253ED07F0);
  }
  return result;
}

uint64_t sub_20E49FAC8()
{
  sub_20E49FA84();
  return sub_20E4A3C08();
}

uint64_t sub_20E49FB04(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C88);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v9 - v6;
  sub_20E4921E8(a1, (uint64_t)&v9 - v6);
  sub_20E4921E8((uint64_t)v7, (uint64_t)v4);
  sub_20E49FA84();
  sub_20E4A3C14();
  return sub_20E45BBD0((uint64_t)v7);
}

uint64_t EnvironmentValues.pageMetricsNavigationPath.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C88);
  MEMORY[0x24BDAC7A8](v2);
  sub_20E4921E8(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_20E49FA84();
  sub_20E4A3C14();
  return sub_20E45BBD0(a1);
}

uint64_t sub_20E49FC50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C80);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

void (*EnvironmentValues.pageMetricsNavigationPath.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C88) - 8) + 64);
  v3[1] = malloc(v4);
  v3[2] = malloc(v4);
  v3[3] = malloc(v4);
  v3[4] = sub_20E49FA84();
  sub_20E4A3C08();
  return sub_20E49FD30;
}

void sub_20E49FD30(uint64_t **a1, char a2)
{
  uint64_t *v3;
  void *v4;
  void *v5;
  void *v6;

  v3 = *a1;
  sub_20E4921E8((*a1)[3], (*a1)[2]);
  v4 = (void *)v3[3];
  v5 = (void *)v3[1];
  v6 = (void *)v3[2];
  if ((a2 & 1) != 0)
  {
    sub_20E4921E8(v3[2], v3[1]);
    sub_20E4A3C14();
    sub_20E45BBD0((uint64_t)v6);
  }
  else
  {
    sub_20E4A3C14();
  }
  sub_20E45BBD0((uint64_t)v4);
  free(v4);
  free(v6);
  free(v5);
  free(v3);
}

uint64_t sub_20E49FDEC()
{
  sub_20E49FA84();
  return sub_20E4A3C08();
}

ValueMetadata *type metadata accessor for PageMetricsNavigationPath()
{
  return &type metadata for PageMetricsNavigationPath;
}

uint64_t View.onDeepLink<A>(prepare:recover:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v21 = a7;
  v20 = a5;
  v14 = type metadata accessor for OnDeepLinkViewModifier(0, a6, a8, a4);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v19 - v16;
  sub_20E49FF40(a1, a2, a3, a4, a6, a8, (uint64_t)&v19 - v16);
  swift_retain();
  swift_retain();
  MEMORY[0x212BBBA70](v17, v20, v14, v21);
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
}

uint64_t type metadata accessor for OnDeepLinkViewModifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for OnDeepLinkViewModifier);
}

uint64_t sub_20E49FF40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v14;
  uint64_t *v15;
  uint64_t result;

  *(_QWORD *)(a7 + 32) = swift_getKeyPath();
  *(_BYTE *)(a7 + 40) = 0;
  *(_QWORD *)(a7 + 48) = swift_getKeyPath();
  *(_BYTE *)(a7 + 56) = 0;
  *(_QWORD *)(a7 + 64) = swift_getKeyPath();
  *(_BYTE *)(a7 + 104) = 0;
  v15 = (uint64_t *)(a7 + *(int *)(type metadata accessor for OnDeepLinkViewModifier(0, a5, a6, v14) + 52));
  *v15 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
  result = swift_storeEnumTagMultiPayload();
  *(_QWORD *)a7 = a1;
  *(_QWORD *)(a7 + 8) = a2;
  *(_QWORD *)(a7 + 16) = a3;
  *(_QWORD *)(a7 + 24) = a4;
  return result;
}

uint64_t View.onDeepLink<A>(prepare:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return View.onDeepLink<A>(prepare:recover:)(a1, a2, (uint64_t)sub_20E4A0034, 0, a3, a4, a5, a6);
}

void sub_20E4A0034(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t *boxed_opaque_existential_1Tm;
  id v11;

  v8 = sub_20E4A581C();
  v9 = MEMORY[0x24BE5DF40];
  a4[3] = v8;
  a4[4] = v9;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(a4);
  v11 = a1;
  swift_retain();
  Models.AlertAction.init(contentUnavailableError:retry:)(a1, a2, a3, (uint64_t)boxed_opaque_existential_1Tm);
}

uint64_t View.onDeepLink()(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_20E4A584C();
  return View.onDeepLink<A>(prepare:recover:)((uint64_t)&unk_254A1CDB0, 0, (uint64_t)sub_20E4A0034, 0, a1, v4, a2, MEMORY[0x24BE5DF98]);
}

uint64_t sub_20E4A010C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = a2;
  v3 = sub_20E4A59FC();
  v2[4] = v3;
  v2[5] = *(_QWORD *)(v3 - 8);
  v2[6] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20E4A016C()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 40) + 16))(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  sub_20E4A5858();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20E4A01C0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[2];

  v4 = a1[2];
  v5 = type metadata accessor for OnDeepLinkViewModifier(255, a1[1], a1[3], a4);
  v6 = sub_20E4A39D4();
  v8[0] = v4;
  v8[1] = MEMORY[0x212BBDF90](&unk_20E4B1B38, v5);
  return MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v6, v8);
}

uint64_t sub_20E4A0238(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1CDB8);
  v2 = sub_20E4A39D4();
  v4[0] = v1;
  v4[1] = sub_20E39D010(qword_254A1CDC0, &qword_254A1CDB8, (uint64_t)&unk_20E4B1B38);
  return MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v2, v4);
}

void sub_20E4A02B8()
{
  unint64_t v0;

  sub_20E4217F0();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_20E4A0348(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _OWORD *v11;
  _OWORD *v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *(_QWORD *)a1 = v5;
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = v5;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    v8 = a2[4];
    *(_QWORD *)(a1 + 24) = a2[3];
    v9 = *((_BYTE *)a2 + 40);
    swift_retain();
    swift_retain();
    j__swift_retain(v8);
    *(_QWORD *)(a1 + 32) = v8;
    *(_BYTE *)(a1 + 40) = v9;
    v10 = a2[6];
    LOBYTE(v8) = *((_BYTE *)a2 + 56);
    j__swift_retain(v10);
    *(_QWORD *)(a1 + 48) = v10;
    *(_BYTE *)(a1 + 56) = v8;
    v11 = a2 + 8;
    if ((a2[13] & 1) != 0)
    {
      v12 = (_OWORD *)(a1 + 64);
      v13 = a2[11];
      if (v13)
      {
        v14 = a2[12];
        *(_QWORD *)(a1 + 88) = v13;
        *(_QWORD *)(a1 + 96) = v14;
        (**(void (***)(_OWORD *, _OWORD *))(v13 - 8))(v12, v11);
      }
      else
      {
        v15 = *((_OWORD *)a2 + 5);
        *v12 = *v11;
        *(_OWORD *)(a1 + 80) = v15;
        *(_QWORD *)(a1 + 96) = a2[12];
      }
      *(_BYTE *)(a1 + 104) = 1;
    }
    else
    {
      *(_QWORD *)(a1 + 64) = *(_QWORD *)v11;
      *(_BYTE *)(a1 + 104) = 0;
      swift_retain();
    }
    v16 = *(int *)(a3 + 52);
    v17 = (_QWORD *)(a1 + v16);
    v18 = (uint64_t *)((char *)a2 + v16);
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v19 = sub_20E4A5384();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    }
    else
    {
      *v17 = *v18;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_20E4A04DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release();
  swift_release();
  j_j__swift_release(*(_QWORD *)(a1 + 32), *(unsigned __int8 *)(a1 + 40));
  j_j__swift_release(*(_QWORD *)(a1 + 48), *(unsigned __int8 *)(a1 + 56));
  if ((*(_BYTE *)(a1 + 104) & 1) != 0)
  {
    if (*(_QWORD *)(a1 + 88))
      __swift_destroy_boxed_opaque_existential_1(a1 + 64);
  }
  else
  {
    swift_release();
  }
  v4 = a1 + *(int *)(a2 + 52);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v5 = sub_20E4A5384();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_20E4A0598(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 40);
  swift_retain();
  swift_retain();
  j__swift_retain(v6);
  *(_QWORD *)(a1 + 32) = v6;
  *(_BYTE *)(a1 + 40) = v7;
  v8 = *(_QWORD *)(a2 + 48);
  LOBYTE(v6) = *(_BYTE *)(a2 + 56);
  j__swift_retain(v8);
  *(_QWORD *)(a1 + 48) = v8;
  *(_BYTE *)(a1 + 56) = v6;
  v9 = (_OWORD *)(a2 + 64);
  if ((*(_BYTE *)(a2 + 104) & 1) != 0)
  {
    v10 = (_OWORD *)(a1 + 64);
    v11 = *(_QWORD *)(a2 + 88);
    if (v11)
    {
      v12 = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 88) = v11;
      *(_QWORD *)(a1 + 96) = v12;
      (**(void (***)(_OWORD *, _OWORD *))(v11 - 8))(v10, v9);
    }
    else
    {
      v13 = *(_OWORD *)(a2 + 80);
      *v10 = *v9;
      *(_OWORD *)(a1 + 80) = v13;
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    }
    *(_BYTE *)(a1 + 104) = 1;
  }
  else
  {
    *(_QWORD *)(a1 + 64) = *(_QWORD *)v9;
    *(_BYTE *)(a1 + 104) = 0;
    swift_retain();
  }
  v14 = *(int *)(a3 + 52);
  v15 = (_QWORD *)(a1 + v14);
  v16 = (_QWORD *)(a2 + v14);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v17 = sub_20E4A5384();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
  }
  else
  {
    *v15 = *v16;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_20E4A06FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  __int128 *v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_retain();
  swift_release();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_retain();
  swift_release();
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_BYTE *)(a2 + 40);
  j__swift_retain(v8);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(unsigned __int8 *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 40) = v9;
  j_j__swift_release(v10, v11);
  v12 = *(_QWORD *)(a2 + 48);
  v13 = *(_BYTE *)(a2 + 56);
  j__swift_retain(v12);
  v14 = *(_QWORD *)(a1 + 48);
  v15 = *(unsigned __int8 *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = v12;
  *(_BYTE *)(a1 + 56) = v13;
  j_j__swift_release(v14, v15);
  if (a1 != a2)
  {
    v16 = (__int128 *)(a2 + 64);
    sub_20E39D1F8(a1 + 64, &qword_253ED0A18);
    if ((*(_BYTE *)(a2 + 104) & 1) != 0)
    {
      v17 = *(_QWORD *)(a2 + 88);
      if (v17)
      {
        *(_QWORD *)(a1 + 88) = v17;
        *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
        (**(void (***)(uint64_t, uint64_t))(v17 - 8))(a1 + 64, a2 + 64);
      }
      else
      {
        v18 = *v16;
        v19 = *(_OWORD *)(a2 + 80);
        *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
        *(_OWORD *)(a1 + 64) = v18;
        *(_OWORD *)(a1 + 80) = v19;
      }
      *(_BYTE *)(a1 + 104) = 1;
    }
    else
    {
      *(_QWORD *)(a1 + 64) = *(_QWORD *)v16;
      *(_BYTE *)(a1 + 104) = 0;
      swift_retain();
    }
    v20 = *(int *)(a3 + 52);
    v21 = (_QWORD *)(a1 + v20);
    v22 = (_QWORD *)(a2 + v20);
    sub_20E39D1F8(a1 + v20, &qword_253ED0A28);
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v23 = sub_20E4A5384();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    }
    else
    {
      *v21 = *v22;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_20E4A08B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  v6 = *(int *)(a3 + 52);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  *(_OWORD *)(a1 + 89) = *(_OWORD *)(a2 + 89);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_20E4A5384();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  return a1;
}

uint64_t sub_20E4A0990(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  v6 = *(_BYTE *)(a2 + 40);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(unsigned __int8 *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = v6;
  j_j__swift_release(v7, v8);
  v9 = *(_BYTE *)(a2 + 56);
  v10 = *(_QWORD *)(a1 + 48);
  v11 = *(unsigned __int8 *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = v9;
  j_j__swift_release(v10, v11);
  if (a1 != a2)
  {
    sub_20E39D1F8(a1 + 64, &qword_253ED0A18);
    v12 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v12;
    *(_OWORD *)(a1 + 89) = *(_OWORD *)(a2 + 89);
    v13 = *(int *)(a3 + 52);
    v14 = (void *)(a1 + v13);
    v15 = (const void *)(a2 + v13);
    sub_20E39D1F8(a1 + v13, &qword_253ED0A28);
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v17 = sub_20E4A5384();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v14, v15, v17);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_20E4A0AC8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_20E4A0AD4(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A182F8);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 52)], a2, v8);
  }
}

uint64_t sub_20E4A0B54()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_20E4A0B60(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A182F8);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 52)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_20E4A0BD8()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_20E4A0C0C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[49];

  v6[18] = a1;
  v6[30] = a2;
  MEMORY[0x212BBDF90](&unk_20E4B1B38);
  v2 = sub_20E4A3EA8();
  v6[24] = *(_QWORD *)(v2 - 8);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v6[25] = (char *)v6 - v4;
  v5 = MEMORY[0x212BBDF90](MEMORY[0x24BDEFB78], v2, v3);
  v6[40] = v2;
  v6[41] = MEMORY[0x24BDF1FA8];
  v6[17] = v5;
  v6[42] = v5;
  v6[43] = MEMORY[0x24BDF1F80];
  type metadata accessor for _RequirementFailureView();
}

uint64_t sub_20E4A0CDC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  void (*v61)(uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _BYTE v82[96];

  *(_QWORD *)(v3 - 368) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v3 - 352) = &v82[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v6);
  *(_QWORD *)(v3 - 360) = &v82[-v7];
  v8 = sub_20E4A5E58();
  *(_QWORD *)(v3 - 512) = v8;
  *(_QWORD *)(v3 - 528) = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  *(_QWORD *)(v3 - 536) = &v82[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_QWORD *)(v3 - 488) = v2;
  *(_QWORD *)(v3 - 544) = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v10);
  *(_QWORD *)(v3 - 560) = v11;
  *(_QWORD *)(v3 - 552) = &v82[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1CE48);
  *(_QWORD *)(v3 - 448) = v1;
  v12 = sub_20E4A39D4();
  *(_QWORD *)(v3 - 520) = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  *(_QWORD *)(v3 - 496) = &v82[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v14);
  *(_QWORD *)(v3 - 504) = &v82[-v15];
  *(_QWORD *)(v3 - 424) = v16;
  v17 = sub_20E4A3E00();
  *(_QWORD *)(v3 - 456) = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  *(_QWORD *)(v3 - 464) = &v82[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v19);
  *(_QWORD *)(v3 - 472) = &v82[-v20];
  *(_QWORD *)(v3 - 400) = v21;
  v22 = sub_20E4A3E00();
  *(_QWORD *)(v3 - 408) = v22;
  *(_QWORD *)(v3 - 344) = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  *(_QWORD *)(v3 - 416) = &v82[-v23];
  v24 = sub_20E4A4A90();
  MEMORY[0x24BDAC7A8](v24);
  v25 = sub_20E4A5A8C();
  v26 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v28 = &v82[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v29 = sub_20E4A33B0();
  v30 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v32 = &v82[-((v31 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_20E4A33A4();
  v33 = sub_20E4A3398();
  v35 = v34;
  (*(void (**)(_BYTE *, uint64_t))(v30 + 8))(v32, v29);
  sub_20E4A5A08();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0D58);
  sub_20E4A4ACC();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_20E4A72D0;
  sub_20E4A4A84();
  sub_20E4A4A78();
  *(_QWORD *)(v3 - 232) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v3 - 568) = v33;
  *(_QWORD *)(v3 - 256) = v33;
  *(_QWORD *)(v3 - 248) = v35;
  swift_bridgeObjectRetain();
  sub_20E4A4A54();
  sub_20E39D1F8(v3 - 256, &qword_253ED2A38);
  sub_20E4A4A78();
  sub_20E4A4A9C();
  sub_20E4A5750();
  swift_bridgeObjectRelease();
  (*(void (**)(_BYTE *, uint64_t))(v26 + 8))(v28, v25);
  v36 = *(_QWORD *)(v3 - 392);
  v37 = *(_QWORD *)(v36 + 32);
  v38 = v36;
  v39 = *(unsigned __int8 *)(v36 + 40);
  j__swift_retain(v37);
  sub_20E45E51C(v37, v39, (_QWORD *)(v3 - 256));
  j_j__swift_release(v37, v39);
  v40 = *(_QWORD *)(v3 - 256);
  if (!v40)
  {
    swift_bridgeObjectRelease();
    v64 = *(_QWORD *)(v3 - 376);
    v65 = *(_QWORD *)(v3 - 448);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v3 - 384) + 16))(v64, *(_QWORD *)(v3 - 432), v65);
    _RequirementFailureView.init<>(_:_:)(v64, 0xD000000000000079, 0x800000020E4CDE50, v65, *(_QWORD *)(v3 - 352));
  }
  *(_QWORD *)(v3 - 576) = a1;
  *(_QWORD *)(v3 - 480) = v40;
  v41 = *(_QWORD *)(v3 - 384);
  v42 = *(_QWORD *)(v3 - 376);
  v43 = *(_QWORD *)(v38 + 48);
  v44 = *(unsigned __int8 *)(v38 + 56);
  j__swift_retain(v43);
  sub_20E45D0E0(v43, v44, (_QWORD *)(v3 - 256));
  j_j__swift_release(v43, v44);
  v45 = *(_QWORD *)(v3 - 256);
  v46 = *(_QWORD *)(v3 - 352);
  if (!v45)
  {
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  sub_20E45D570(v3 - 296);
  if (!*(_QWORD *)(v3 - 272))
  {
    swift_bridgeObjectRelease();
    swift_release();
    sub_20E39D1F8(v3 - 296, &qword_253ED0658);
LABEL_8:
    v66 = *(_QWORD *)(v3 - 448);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v41 + 16))(v42, *(_QWORD *)(v3 - 432), v66);
    _RequirementFailureView.init<>(_:_:)(v42, 0xD00000000000006CLL, 0x800000020E4CDED0, v66, v46);
  }
  sub_20E3B1AB4((__int128 *)(v3 - 296), v3 - 256);
  *(_QWORD *)(v3 - 352) = v45;
  v47 = *(_QWORD *)(v3 - 568);
  *(_QWORD *)(v3 - 312) = v47;
  *(_QWORD *)(v3 - 304) = v35;
  v48 = *(_QWORD *)(v3 - 544);
  v49 = *(_QWORD *)(v3 - 552);
  v50 = *(_QWORD *)(v3 - 488);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 16))(v49, v38, v50);
  sub_20E3C39FC(v3 - 256, v3 - 296);
  v51 = (*(unsigned __int8 *)(v48 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
  v52 = (*(_QWORD *)(v3 - 560) + v51 + 7) & 0xFFFFFFFFFFFFFFF8;
  v53 = swift_allocObject();
  *(_OWORD *)(v53 + 16) = *(_OWORD *)(v50 + 16);
  *(_QWORD *)(v53 + 32) = v47;
  *(_QWORD *)(v53 + 40) = v35;
  *(_QWORD *)(v53 + 48) = *(_QWORD *)(v3 - 480);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v48 + 32))(v53 + v51, v49, v50);
  *(_QWORD *)(v53 + v52) = *(_QWORD *)(v3 - 352);
  sub_20E3B1AB4((__int128 *)(v3 - 296), v53 + ((v52 + 15) & 0xFFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  v54 = *(_QWORD *)(v3 - 536);
  v55 = *(_QWORD *)(v3 - 440);
  sub_20E478AE8();
  v56 = *(_QWORD *)(v3 - 496);
  sub_20E4A4400();
  swift_release();
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 - 528) + 8))(v54, *(_QWORD *)(v3 - 512));
  swift_bridgeObjectRelease();
  v57 = sub_20E39D010(&qword_254A1CE50, &qword_254A1CE48, MEMORY[0x24BDEECB8]);
  *(_QWORD *)(v3 - 328) = v55;
  *(_QWORD *)(v3 - 320) = v57;
  v58 = *(_QWORD *)(v3 - 424);
  v59 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v58, v3 - 328);
  v60 = *(_QWORD **)(v3 - 504);
  sub_20E39D614(v60, v56, v58, v59);
  v61 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 520) + 8);
  v61(v56, v58);
  sub_20E39D618((uint64_t)v60, v58, v56);
  v62 = *(_QWORD *)(v3 - 576);
  MEMORY[0x212BBDF90](&protocol conformance descriptor for _RequirementFailureView<A, B>, v62);
  v63 = *(_QWORD *)(v3 - 472);
  sub_20E3DC6B0(v56, v58);
  swift_release();
  v61(v56, v58);
  v61((uint64_t)v60, v58);
  __swift_destroy_boxed_opaque_existential_1(v3 - 256);
  v67 = *(_QWORD *)(v3 - 400);
  v68 = *(_QWORD *)(v3 - 408);
  v69 = *(_QWORD *)(v3 - 416);
  v70 = sub_20E39D010(&qword_254A1CE50, &qword_254A1CE48, MEMORY[0x24BDEECB8]);
  *(_QWORD *)(v3 - 200) = v55;
  *(_QWORD *)(v3 - 192) = v70;
  v71 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v58, v3 - 200);
  v72 = MEMORY[0x212BBDF90](&protocol conformance descriptor for _RequirementFailureView<A, B>, v62);
  *(_QWORD *)(v3 - 216) = v71;
  *(_QWORD *)(v3 - 208) = v72;
  MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v67, v3 - 216);
  v73 = *(_QWORD *)(v3 - 464);
  sub_20E39D618(v63, v67, v73);
  sub_20E3DC6B0(v73, v67);
  swift_release();
  v74 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 456) + 8);
  v74(v73, v67);
  v74(v63, v67);
  v75 = *(_QWORD *)(v3 - 344);
  v76 = *(_QWORD *)(v3 - 336);
  v77 = sub_20E39D010(&qword_254A1CE50, &qword_254A1CE48, MEMORY[0x24BDEECB8]);
  *(_QWORD *)(v3 - 136) = v55;
  *(_QWORD *)(v3 - 128) = v77;
  v78 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v58, v3 - 136);
  v79 = MEMORY[0x212BBDF90](&protocol conformance descriptor for _RequirementFailureView<A, B>, v62);
  *(_QWORD *)(v3 - 152) = v78;
  *(_QWORD *)(v3 - 144) = v79;
  v80 = MEMORY[0x24BDEF3E0];
  *(_QWORD *)(v3 - 168) = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v67, v3 - 152);
  *(_QWORD *)(v3 - 160) = v79;
  MEMORY[0x212BBDF90](v80, v68, v3 - 168);
  sub_20E39D618(v69, v68, v76);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v75 + 8))(v69, v68);
}

uint64_t sub_20E4A1904(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8[36] = a7;
  v8[37] = a8;
  v8[34] = a5;
  v8[35] = a6;
  v8[32] = a3;
  v8[33] = a4;
  v8[30] = a1;
  v8[31] = a2;
  v8[38] = *(_QWORD *)(a7 - 8);
  v8[39] = swift_task_alloc();
  v9 = sub_20E4A59FC();
  v8[40] = v9;
  v8[41] = *(_QWORD *)(v9 - 8);
  v8[42] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1C390);
  v8[43] = swift_task_alloc();
  sub_20E4A4A90();
  v8[44] = swift_task_alloc();
  v8[45] = swift_task_alloc();
  v10 = sub_20E4A5A8C();
  v8[46] = v10;
  v8[47] = *(_QWORD *)(v10 - 8);
  v8[48] = swift_task_alloc();
  v8[49] = sub_20E4A5DF8();
  v8[50] = sub_20E4A5DEC();
  v8[51] = sub_20E4A5DBC();
  v8[52] = v11;
  return swift_task_switch();
}

uint64_t sub_20E4A1A40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  _QWORD *v8;

  v2 = *(_QWORD *)(v0 + 376);
  v1 = *(_QWORD *)(v0 + 384);
  v3 = *(_QWORD *)(v0 + 368);
  v4 = *(_QWORD *)(v0 + 248);
  v5 = *(_QWORD *)(v0 + 240);
  sub_20E4A5A08();
  *(_QWORD *)(v0 + 424) = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0D58);
  v6 = *(_QWORD *)(sub_20E4A4ACC() - 8);
  *(_QWORD *)(v0 + 432) = *(_QWORD *)(v6 + 72);
  *(_DWORD *)(v0 + 512) = *(_DWORD *)(v6 + 80);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_20E4A72D0;
  sub_20E4A4A84();
  sub_20E4A4A78();
  *(_QWORD *)(v0 + 80) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v0 + 56) = v5;
  *(_QWORD *)(v0 + 64) = v4;
  swift_bridgeObjectRetain();
  sub_20E4A4A54();
  sub_20E39D1F8(v0 + 56, &qword_253ED2A38);
  sub_20E4A4A78();
  sub_20E4A4A9C();
  sub_20E4A5750();
  swift_bridgeObjectRelease();
  v7 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  *(_QWORD *)(v0 + 440) = v7;
  v7(v1, v3);
  *(_QWORD *)(v0 + 216) = sub_20E4A4D6C();
  *(_QWORD *)(v0 + 448) = sub_20E4A5DEC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1C3A0);
  sub_20E39D010(&qword_254A1C3A8, &qword_254A1C3A0, MEMORY[0x24BE5CCF0]);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 456) = v8;
  *v8 = v0;
  v8[1] = sub_20E4A1C34;
  return sub_20E4A5DD4();
}

uint64_t sub_20E4A1C34()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  *(_QWORD *)(*v1 + 464) = v0;
  swift_task_dealloc();
  v3 = *(_QWORD *)(v2 + 448);
  if (v0)
  {
    if (v3)
      goto LABEL_5;
  }
  else if (v3)
  {
LABEL_5:
    swift_getObjectType();
    sub_20E4A5DBC();
  }
  return swift_task_switch();
}

uint64_t sub_20E4A1CF8()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_20E4A1D30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t (*v15)(_QWORD, _QWORD);

  v1 = *(_QWORD *)(v0 + 344);
  v2 = *(_QWORD *)(v0 + 320);
  v3 = *(_QWORD *)(v0 + 328);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    swift_release();
    swift_release();
LABEL_5:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v3 + 32))(*(_QWORD *)(v0 + 336), v1, v2);
  if ((sub_20E4A5E70() & 1) != 0)
  {
    v5 = *(_QWORD *)(v0 + 328);
    v4 = *(_QWORD *)(v0 + 336);
    v6 = *(_QWORD *)(v0 + 320);
    swift_release();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    goto LABEL_5;
  }
  v8 = *(_QWORD *)(v0 + 384);
  v9 = *(_QWORD *)(v0 + 368);
  v13 = *(_QWORD **)(v0 + 264);
  v14 = *(void (**)(uint64_t, uint64_t))(v0 + 440);
  v11 = *(_QWORD *)(v0 + 240);
  v10 = *(_QWORD *)(v0 + 248);
  sub_20E4A5A08();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_20E4A72D0;
  sub_20E4A4A84();
  sub_20E4A4A78();
  *(_QWORD *)(v0 + 176) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v0 + 152) = v11;
  *(_QWORD *)(v0 + 160) = v10;
  swift_bridgeObjectRetain();
  sub_20E4A4A54();
  sub_20E39D1F8(v0 + 152, &qword_253ED2A38);
  sub_20E4A4A78();
  sub_20E4A4A9C();
  sub_20E4A5750();
  swift_bridgeObjectRelease();
  v14(v8, v9);
  v15 = (uint64_t (*)(_QWORD, _QWORD))(*(int *)*v13 + *v13);
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 472) = v12;
  *v12 = v0;
  v12[1] = sub_20E4A2000;
  return v15(*(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 336));
}

uint64_t sub_20E4A1FA0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 208) = *(_QWORD *)(v0 + 464);
  __swift_instantiateConcreteTypeFromMangledName(qword_253ED2880);
  swift_dynamicCast();
  return swift_willThrowTypedImpl();
}

uint64_t sub_20E4A2000()
{
  uint64_t **v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  _QWORD *v5;
  uint64_t v6;

  v1 = *v0;
  v2 = (*v0)[37];
  v3 = (*v0)[34];
  v4 = *v0;
  swift_task_dealloc();
  v1[29] = v3;
  v1 += 29;
  v5 = (_QWORD *)swift_task_alloc();
  v1[31] = (uint64_t)v5;
  v6 = *(_QWORD *)(v2 + 8);
  *v5 = v4;
  v5[1] = sub_20E4A2090;
  return IntentDispatchAction.callAsFunction<A>(_:)((uint64_t)(v1 - 27), v1[10], v1[7], v6);
}

uint64_t sub_20E4A2090()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 488) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20E4A20F8()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 496) = sub_20E4A5DEC();
  sub_20E4A5DBC();
  return swift_task_switch();
}

uint64_t sub_20E4A2158()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v2 = v0[36];
  v1 = v0[37];
  v3 = (_QWORD *)v0[35];
  v4 = v0[33];
  swift_release();
  sub_20E4A268C(v3, (uint64_t)(v0 + 2), v4, v2, v1);
  return swift_task_switch();
}

uint64_t sub_20E4A21D0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = v0[41];
  v1 = v0[42];
  v3 = v0[40];
  (*(void (**)(_QWORD, _QWORD))(v0[38] + 8))(v0[39], v0[36]);
  sub_20E4A2B40((uint64_t)(v0 + 2));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v0[56] = sub_20E4A5DEC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1C3A0);
  sub_20E39D010(&qword_254A1C3A8, &qword_254A1C3A0, MEMORY[0x24BE5CCF0]);
  v4 = (_QWORD *)swift_task_alloc();
  v0[57] = v4;
  *v4 = v0;
  v4[1] = sub_20E4A1C34;
  return sub_20E4A5DD4();
}

uint64_t sub_20E4A22B0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *boxed_opaque_existential_1Tm;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);

  v1 = v0[48];
  v6 = v0[46];
  v7 = (void (*)(uint64_t, uint64_t))v0[55];
  (*(void (**)(uint64_t, uint64_t))(v0[38] + 8))(v0[39], v0[36]);
  sub_20E4A5A08();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_20E4A8070;
  sub_20E4A4A84();
  sub_20E4A4A78();
  v0[18] = sub_20E4A3344();
  __swift_allocate_boxed_opaque_existential_1Tm(v0 + 15);
  sub_20E4A59E4();
  sub_20E4A4A48();
  sub_20E39D1F8((uint64_t)(v0 + 15), &qword_253ED2A38);
  sub_20E4A4A78();
  sub_20E4A4A9C();
  sub_20E4A4A84();
  sub_20E4A4A78();
  swift_getErrorValue();
  v2 = v0[23];
  v3 = v0[24];
  v0[14] = v3;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v0 + 11);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(boxed_opaque_existential_1Tm, v2, v3);
  sub_20E4A4A54();
  sub_20E39D1F8((uint64_t)(v0 + 11), &qword_253ED2A38);
  sub_20E4A4A78();
  sub_20E4A4A9C();
  sub_20E4A575C();
  swift_bridgeObjectRelease();
  v7(v1, v6);
  return swift_task_switch();
}

uint64_t sub_20E4A24E0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 504) = sub_20E4A5DEC();
  sub_20E4A5DBC();
  return swift_task_switch();
}

uint64_t sub_20E4A2540()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v1 = v0[61];
  v2 = v0[42];
  v4 = v0[36];
  v3 = v0[37];
  v5 = (_QWORD *)v0[35];
  v7 = v0[32];
  v6 = v0[33];
  swift_release();
  sub_20E4A2780(v6, v1, v7, v2, v5, v4, v3);
  return swift_task_switch();
}

uint64_t sub_20E4A25C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 328);
  v1 = *(_QWORD *)(v0 + 336);
  v3 = *(_QWORD *)(v0 + 320);

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  *(_QWORD *)(v0 + 448) = sub_20E4A5DEC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1C3A0);
  sub_20E39D010(&qword_254A1C3A8, &qword_254A1C3A0, MEMORY[0x24BE5CCF0]);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 456) = v4;
  *v4 = v0;
  v4[1] = sub_20E4A1C34;
  return sub_20E4A5DD4();
}

uint64_t sub_20E4A268C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v17 = a2;
  v8 = sub_20E4A5384();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v12 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  type metadata accessor for OnDeepLinkViewModifier(0, a4, a5, v14);
  sub_20E45C27C((uint64_t)v11);
  (*(void (**)(uint64_t, char *, uint64_t, uint64_t))(v12 + 24))(v17, v11, v13, v12);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_20E4A2780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  void (*v17)(_QWORD *__return_ptr, uint64_t, uint64_t (*)(), uint64_t);
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[2];
  void (*v25)(_QWORD *__return_ptr, uint64_t, uint64_t (*)(), uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[5];

  v28 = a6;
  v29 = a7;
  v26 = a3;
  v27 = a2;
  v10 = sub_20E4A5384();
  v30 = *(_QWORD *)(v10 - 8);
  v31 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_20E4A59FC();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  v16 = MEMORY[0x24BDAC7A8](v13);
  v17 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t (*)(), uint64_t))(a1 + 16);
  v24[1] = *(_QWORD *)(a1 + 24);
  v25 = v17;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v14 + 16))((char *)v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v13, v16);
  v18 = (*(unsigned __int8 *)(v14 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = v26;
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v19 + v18, (char *)v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v13);
  swift_retain();
  v25(v32, v27, sub_20E4A2BE8, v19);
  swift_release();
  v20 = a5[3];
  v21 = a5[4];
  __swift_project_boxed_opaque_existential_1(a5, v20);
  type metadata accessor for OnDeepLinkViewModifier(0, v28, v29, v22);
  sub_20E45C27C((uint64_t)v12);
  (*(void (**)(_QWORD *, char *, uint64_t, uint64_t))(v21 + 24))(v32, v12, v20, v21);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v12, v31);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
}

uint64_t sub_20E4A2940(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = type metadata accessor for OnDeepLinkViewModifier(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  swift_bridgeObjectRelease();
  swift_release();
  v9 = v4 + v7;
  swift_release();
  swift_release();
  j_j__swift_release(*(_QWORD *)(v9 + 32), *(unsigned __int8 *)(v9 + 40));
  j_j__swift_release(*(_QWORD *)(v9 + 48), *(unsigned __int8 *)(v9 + 56));
  if ((*(_BYTE *)(v4 + v7 + 104) & 1) != 0)
  {
    if (*(_QWORD *)(v9 + 88))
      __swift_destroy_boxed_opaque_existential_1(v4 + v7 + 64);
  }
  else
  {
    swift_release();
  }
  v10 = v9 + *(int *)(v5 + 52);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = sub_20E4A5384();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  }
  else
  {
    swift_release();
  }
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v4 + ((((v8 + v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8));
  return swift_deallocObject();
}

uint64_t sub_20E4A2A74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  v6 = v4[2];
  v7 = v4[3];
  v8 = *(_QWORD *)(type metadata accessor for OnDeepLinkViewModifier(0, v6, v7, a4) - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = (*(_QWORD *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = v4[4];
  v12 = v4[5];
  v13 = v4[6];
  v14 = (uint64_t)v4 + v9;
  v15 = *(_QWORD *)((char *)v4 + v10);
  v16 = (uint64_t)v4 + ((v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v17;
  *v17 = v5;
  v17[1] = sub_20E3B4E08;
  return sub_20E4A1904(v11, v12, v13, v14, v15, v16, v6, v7);
}

uint64_t sub_20E4A2B40(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BE5E020] - 8) + 8))();
  return a1;
}

uint64_t sub_20E4A2B74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_20E4A59FC();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_20E4A2BE8()
{
  sub_20E4A59FC();
  return sub_20E4A4D90();
}

void sub_20E4A2C48(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for OnDeepLinkViewModifier(255, *a1, a1[1], a4);
  MEMORY[0x212BBDF90](&unk_20E4B1B38, v4);
  v5 = sub_20E4A3EA8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1CE48);
  sub_20E4A39D4();
  MEMORY[0x212BBDF90](MEMORY[0x24BDEFB78], v5);
  type metadata accessor for _RequirementFailureView();
}

uint64_t sub_20E4A2CF0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[2];
  _QWORD v12[2];
  _QWORD v13[14];

  v5 = sub_20E4A3E00();
  v6 = sub_20E4A3E00();
  v13[0] = v3;
  v13[1] = sub_20E39D010(&qword_254A1CE50, v1, MEMORY[0x24BDEECB8]);
  v7 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v2, v13);
  v8 = MEMORY[0x212BBDF90](&protocol conformance descriptor for _RequirementFailureView<A, B>, a1);
  v12[0] = v7;
  v12[1] = v8;
  v9 = MEMORY[0x24BDEF3E0];
  v11[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v5, v12);
  v11[1] = v8;
  return MEMORY[0x212BBDF90](v9, v6, v11);
}

uint64_t ComponentView.init(_:content:)@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result;

  result = sub_20E3B1AB4(a1, a4);
  *(_QWORD *)(a4 + 40) = a2;
  *(_QWORD *)(a4 + 48) = a3;
  return result;
}

uint64_t ComponentView.init(_:content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result;
  __int128 v9[2];

  sub_20E3C39FC(a1 + 8, (uint64_t)v9);
  sub_20E435318(a1);
  result = sub_20E3B1AB4(v9, a4);
  *(_QWORD *)(a4 + 40) = a2;
  *(_QWORD *)(a4 + 48) = a3;
  return result;
}

uint64_t ComponentView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t AssociatedConformanceWitness;
  void (*v18)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;

  v21 = a2;
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v7 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (uint64_t *)((char *)&v20 - v15);
  (*(void (**)(double))(v2 + 40))(v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 24))(v2, v3, v8);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_20E39D614(v16, v12, AssociatedTypeWitness, AssociatedConformanceWitness);
  v18 = *(void (**)(char *, uint64_t))(v10 + 8);
  v18(v12, AssociatedTypeWitness);
  sub_20E39D618((uint64_t)v16, AssociatedTypeWitness, v21);
  return ((uint64_t (*)(_QWORD *, uint64_t))v18)(v16, AssociatedTypeWitness);
}

uint64_t sub_20E4A2FC8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E4A3000(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  return swift_release();
}

uint64_t sub_20E4A3024(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_retain();
  return a1;
}

uint64_t *sub_20E4A306C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;

  __swift_assign_boxed_opaque_existential_1(a1, a2);
  v4 = a2[6];
  a1[5] = a2[5];
  a1[6] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_20E4A30AC(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  return a1;
}

uint64_t sub_20E4A30F4(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_20E4A313C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for ComponentView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ComponentView);
}

uint64_t sub_20E4A3194()
{
  swift_getAssociatedTypeWitness();
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_20E4A31F4()
{
  return MEMORY[0x24BDCADA0]();
}

uint64_t sub_20E4A3200()
{
  return MEMORY[0x24BDBB310]();
}

uint64_t sub_20E4A320C()
{
  return MEMORY[0x24BDCAEB0]();
}

uint64_t sub_20E4A3218()
{
  return MEMORY[0x24BDCAEE8]();
}

uint64_t sub_20E4A3224()
{
  return MEMORY[0x24BDCB8E8]();
}

uint64_t sub_20E4A3230()
{
  return MEMORY[0x24BDCB930]();
}

uint64_t sub_20E4A323C()
{
  return MEMORY[0x24BDCB9D8]();
}

uint64_t sub_20E4A3248()
{
  return MEMORY[0x24BDCB9E8]();
}

uint64_t sub_20E4A3254()
{
  return MEMORY[0x24BDCBE60]();
}

uint64_t sub_20E4A3260()
{
  return MEMORY[0x24BDCBE68]();
}

uint64_t sub_20E4A326C()
{
  return MEMORY[0x24BDCBE80]();
}

uint64_t sub_20E4A3278()
{
  return MEMORY[0x24BDCC630]();
}

uint64_t sub_20E4A3284()
{
  return MEMORY[0x24BDCC638]();
}

uint64_t sub_20E4A3290()
{
  return MEMORY[0x24BDCC640]();
}

uint64_t sub_20E4A329C()
{
  return MEMORY[0x24BDCC648]();
}

uint64_t sub_20E4A32A8()
{
  return MEMORY[0x24BDCC6D8]();
}

uint64_t sub_20E4A32B4()
{
  return MEMORY[0x24BDCC930]();
}

uint64_t sub_20E4A32C0()
{
  return MEMORY[0x24BDCD258]();
}

uint64_t sub_20E4A32CC()
{
  return MEMORY[0x24BDCD2C0]();
}

uint64_t sub_20E4A32D8()
{
  return MEMORY[0x24BDCD2F0]();
}

uint64_t sub_20E4A32E4()
{
  return MEMORY[0x24BDCD2F8]();
}

uint64_t sub_20E4A32F0()
{
  return MEMORY[0x24BDCD5A8]();
}

uint64_t sub_20E4A32FC()
{
  return MEMORY[0x24BDCD7B8]();
}

uint64_t sub_20E4A3308()
{
  return MEMORY[0x24BDCD898]();
}

uint64_t sub_20E4A3314()
{
  return MEMORY[0x24BDCD8D0]();
}

uint64_t sub_20E4A3320()
{
  return MEMORY[0x24BDCD9C0]();
}

uint64_t sub_20E4A332C()
{
  return MEMORY[0x24BDCDA68]();
}

uint64_t sub_20E4A3338()
{
  return MEMORY[0x24BDCDAA8]();
}

uint64_t sub_20E4A3344()
{
  return MEMORY[0x24BDCDAC0]();
}

uint64_t sub_20E4A3350()
{
  return MEMORY[0x24BDCDCA0]();
}

uint64_t sub_20E4A335C()
{
  return MEMORY[0x24BDCDCE0]();
}

uint64_t sub_20E4A3368()
{
  return MEMORY[0x24BDCE5D8]();
}

uint64_t sub_20E4A3374()
{
  return MEMORY[0x24BDCE880]();
}

uint64_t sub_20E4A3380()
{
  return MEMORY[0x24BDCE8F8]();
}

uint64_t sub_20E4A338C()
{
  return MEMORY[0x24BDCE900]();
}

uint64_t sub_20E4A3398()
{
  return MEMORY[0x24BDCE9B0]();
}

uint64_t sub_20E4A33A4()
{
  return MEMORY[0x24BDCEA40]();
}

uint64_t sub_20E4A33B0()
{
  return MEMORY[0x24BDCEA58]();
}

uint64_t sub_20E4A33BC()
{
  return MEMORY[0x24BDCEEA8]();
}

uint64_t sub_20E4A33C8()
{
  return MEMORY[0x24BDCF580]();
}

uint64_t sub_20E4A33D4()
{
  return MEMORY[0x24BDCF590]();
}

uint64_t sub_20E4A33E0()
{
  return MEMORY[0x24BDCF5D8]();
}

uint64_t sub_20E4A33EC()
{
  return MEMORY[0x24BDCF5F8]();
}

uint64_t sub_20E4A33F8()
{
  return MEMORY[0x24BDCF600]();
}

uint64_t sub_20E4A3404()
{
  return MEMORY[0x24BDCF610]();
}

uint64_t sub_20E4A3410()
{
  return MEMORY[0x24BEE5C38]();
}

uint64_t sub_20E4A341C()
{
  return MEMORY[0x24BEE5C40]();
}

uint64_t sub_20E4A3428()
{
  return MEMORY[0x24BEE5C58]();
}

uint64_t sub_20E4A3434()
{
  return MEMORY[0x24BEE5C60]();
}

uint64_t sub_20E4A3440()
{
  return MEMORY[0x24BEE5118]();
}

uint64_t sub_20E4A344C()
{
  return MEMORY[0x24BEE5120]();
}

uint64_t sub_20E4A3458()
{
  return MEMORY[0x24BEE5130]();
}

uint64_t sub_20E4A3464()
{
  return MEMORY[0x24BEE76F0]();
}

uint64_t sub_20E4A3470()
{
  return MEMORY[0x24BEE7718]();
}

uint64_t sub_20E4A347C()
{
  return MEMORY[0x24BEE7738]();
}

uint64_t sub_20E4A3488()
{
  return MEMORY[0x24BEE7748]();
}

uint64_t sub_20E4A3494()
{
  return MEMORY[0x24BEE7758]();
}

uint64_t sub_20E4A34A0()
{
  return MEMORY[0x24BEE77B0]();
}

uint64_t sub_20E4A34AC()
{
  return MEMORY[0x24BEE77C0]();
}

uint64_t sub_20E4A34B8()
{
  return MEMORY[0x24BEE77F0]();
}

uint64_t sub_20E4A34C4()
{
  return MEMORY[0x24BEE7818]();
}

uint64_t sub_20E4A34D0()
{
  return MEMORY[0x24BEE7848]();
}

uint64_t sub_20E4A34DC()
{
  return MEMORY[0x24BEE7868]();
}

uint64_t sub_20E4A34E8()
{
  return MEMORY[0x24BEE7870]();
}

uint64_t sub_20E4A34F4()
{
  return MEMORY[0x24BEE78A0]();
}

uint64_t sub_20E4A3500()
{
  return MEMORY[0x24BEBC3F0]();
}

uint64_t sub_20E4A350C()
{
  return MEMORY[0x24BEBC408]();
}

uint64_t sub_20E4A3518()
{
  return MEMORY[0x24BEBC908]();
}

uint64_t sub_20E4A3524()
{
  return MEMORY[0x24BEBC918]();
}

uint64_t sub_20E4A3530()
{
  return MEMORY[0x24BEBC920]();
}

uint64_t sub_20E4A353C()
{
  return MEMORY[0x24BEBC930]();
}

uint64_t sub_20E4A3548()
{
  return MEMORY[0x24BEBC960]();
}

uint64_t sub_20E4A3554()
{
  return MEMORY[0x24BEBC968]();
}

uint64_t sub_20E4A3560()
{
  return MEMORY[0x24BEBC970]();
}

uint64_t sub_20E4A356C()
{
  return MEMORY[0x24BEBC980]();
}

uint64_t sub_20E4A3578()
{
  return MEMORY[0x24BEBC998]();
}

uint64_t sub_20E4A3584()
{
  return MEMORY[0x24BDB9C48]();
}

uint64_t sub_20E4A3590()
{
  return MEMORY[0x24BDB9D68]();
}

uint64_t sub_20E4A359C()
{
  return MEMORY[0x24BDB9E98]();
}

uint64_t sub_20E4A35A8()
{
  return MEMORY[0x24BDB9EA0]();
}

uint64_t sub_20E4A35B4()
{
  return MEMORY[0x24BDB9EA8]();
}

uint64_t sub_20E4A35C0()
{
  return MEMORY[0x24BDB9EC0]();
}

uint64_t sub_20E4A35CC()
{
  return MEMORY[0x24BDB9EC8]();
}

uint64_t sub_20E4A35D8()
{
  return MEMORY[0x24BDB9ED0]();
}

uint64_t sub_20E4A35E4()
{
  return MEMORY[0x24BDB9EF0]();
}

uint64_t sub_20E4A35F0()
{
  return MEMORY[0x24BDEAF58]();
}

uint64_t sub_20E4A35FC()
{
  return MEMORY[0x24BDEAF68]();
}

uint64_t sub_20E4A3608()
{
  return MEMORY[0x24BDEAF80]();
}

uint64_t sub_20E4A3614()
{
  return MEMORY[0x24BDEAF98]();
}

uint64_t sub_20E4A3620()
{
  return MEMORY[0x24BDEAFA8]();
}

uint64_t sub_20E4A362C()
{
  return MEMORY[0x24BDEB030]();
}

uint64_t sub_20E4A3638()
{
  return MEMORY[0x24BDEB040]();
}

uint64_t sub_20E4A3644()
{
  return MEMORY[0x24BDEB170]();
}

uint64_t sub_20E4A3650()
{
  return MEMORY[0x24BDEB178]();
}

uint64_t sub_20E4A365C()
{
  return MEMORY[0x24BDEB1D8]();
}

uint64_t sub_20E4A3668()
{
  return MEMORY[0x24BDEB1F0]();
}

uint64_t sub_20E4A3674()
{
  return MEMORY[0x24BDEB210]();
}

uint64_t sub_20E4A3680()
{
  return MEMORY[0x24BDEB230]();
}

uint64_t sub_20E4A368C()
{
  return MEMORY[0x24BDEB2F0]();
}

uint64_t sub_20E4A3698()
{
  return MEMORY[0x24BDEB300]();
}

uint64_t sub_20E4A36A4()
{
  return MEMORY[0x24BDEB4A0]();
}

uint64_t sub_20E4A36B0()
{
  return MEMORY[0x24BDEB558]();
}

uint64_t sub_20E4A36BC()
{
  return MEMORY[0x24BDEB560]();
}

uint64_t sub_20E4A36C8()
{
  return MEMORY[0x24BDEB580]();
}

uint64_t sub_20E4A36D4()
{
  return MEMORY[0x24BDEB5A0]();
}

uint64_t sub_20E4A36E0()
{
  return MEMORY[0x24BDEB780]();
}

uint64_t sub_20E4A36EC()
{
  return MEMORY[0x24BDEB790]();
}

uint64_t sub_20E4A36F8()
{
  return MEMORY[0x24BDEB798]();
}

uint64_t sub_20E4A3704()
{
  return MEMORY[0x24BDEB828]();
}

uint64_t sub_20E4A3710()
{
  return MEMORY[0x24BDEB8A0]();
}

uint64_t sub_20E4A371C()
{
  return MEMORY[0x24BDEB8B0]();
}

uint64_t sub_20E4A3728()
{
  return MEMORY[0x24BDEB8E8]();
}

uint64_t sub_20E4A3734()
{
  return MEMORY[0x24BDEB8F8]();
}

uint64_t sub_20E4A3740()
{
  return MEMORY[0x24BDEB900]();
}

uint64_t sub_20E4A374C()
{
  return MEMORY[0x24BDEBBC8]();
}

uint64_t sub_20E4A3758()
{
  return MEMORY[0x24BDEBC10]();
}

uint64_t sub_20E4A3764()
{
  return MEMORY[0x24BDEBC38]();
}

uint64_t sub_20E4A3770()
{
  return MEMORY[0x24BDEBC40]();
}

uint64_t sub_20E4A377C()
{
  return MEMORY[0x24BDEBC98]();
}

uint64_t sub_20E4A3788()
{
  return MEMORY[0x24BDEBCA0]();
}

uint64_t sub_20E4A3794()
{
  return MEMORY[0x24BDEBCA8]();
}

uint64_t sub_20E4A37A0()
{
  return MEMORY[0x24BDEBDE0]();
}

uint64_t sub_20E4A37AC()
{
  return MEMORY[0x24BDEBDF0]();
}

uint64_t sub_20E4A37B8()
{
  return MEMORY[0x24BDEBE00]();
}

uint64_t sub_20E4A37C4()
{
  return MEMORY[0x24BDEBED0]();
}

uint64_t sub_20E4A37D0()
{
  return MEMORY[0x24BDEC000]();
}

uint64_t sub_20E4A37DC()
{
  return MEMORY[0x24BDEC110]();
}

uint64_t sub_20E4A37E8()
{
  return MEMORY[0x24BDEC118]();
}

uint64_t sub_20E4A37F4()
{
  return MEMORY[0x24BDEC120]();
}

uint64_t sub_20E4A3800()
{
  return MEMORY[0x24BDEC130]();
}

uint64_t sub_20E4A380C()
{
  return MEMORY[0x24BDEC138]();
}

uint64_t sub_20E4A3818()
{
  return MEMORY[0x24BDEC148]();
}

uint64_t sub_20E4A3824()
{
  return MEMORY[0x24BDEC298]();
}

uint64_t sub_20E4A3830()
{
  return MEMORY[0x24BDEC2E0]();
}

uint64_t sub_20E4A383C()
{
  return MEMORY[0x24BDEC348]();
}

uint64_t sub_20E4A3848()
{
  return MEMORY[0x24BDEC358]();
}

uint64_t sub_20E4A3854()
{
  return MEMORY[0x24BDEC4E0]();
}

uint64_t sub_20E4A3860()
{
  return MEMORY[0x24BDEC600]();
}

uint64_t sub_20E4A386C()
{
  return MEMORY[0x24BDEC608]();
}

uint64_t sub_20E4A3878()
{
  return MEMORY[0x24BDEC610]();
}

uint64_t sub_20E4A3884()
{
  return MEMORY[0x24BDEC618]();
}

uint64_t sub_20E4A3890()
{
  return MEMORY[0x24BDEC638]();
}

uint64_t sub_20E4A389C()
{
  return MEMORY[0x24BDEC648]();
}

uint64_t sub_20E4A38A8()
{
  return MEMORY[0x24BDEC6D8]();
}

uint64_t sub_20E4A38B4()
{
  return MEMORY[0x24BDEC6E0]();
}

uint64_t sub_20E4A38C0()
{
  return MEMORY[0x24BDEC8F0]();
}

uint64_t sub_20E4A38CC()
{
  return MEMORY[0x24BDEC8F8]();
}

uint64_t sub_20E4A38D8()
{
  return MEMORY[0x24BDEC900]();
}

uint64_t sub_20E4A38E4()
{
  return MEMORY[0x24BDEC920]();
}

uint64_t sub_20E4A38F0()
{
  return MEMORY[0x24BDEC928]();
}

uint64_t sub_20E4A38FC()
{
  return MEMORY[0x24BDEC930]();
}

uint64_t sub_20E4A3908()
{
  return MEMORY[0x24BDEC938]();
}

uint64_t sub_20E4A3914()
{
  return MEMORY[0x24BDEC948]();
}

uint64_t sub_20E4A3920()
{
  return MEMORY[0x24BDEC950]();
}

uint64_t sub_20E4A392C()
{
  return MEMORY[0x24BDEC958]();
}

uint64_t sub_20E4A3938()
{
  return MEMORY[0x24BDEC998]();
}

uint64_t sub_20E4A3944()
{
  return MEMORY[0x24BDEC9A0]();
}

uint64_t sub_20E4A3950()
{
  return MEMORY[0x24BDEC9B0]();
}

uint64_t sub_20E4A395C()
{
  return MEMORY[0x24BDEC9E0]();
}

uint64_t sub_20E4A3968()
{
  return MEMORY[0x24BDEC9E8]();
}

uint64_t sub_20E4A3974()
{
  return MEMORY[0x24BDECD18]();
}

uint64_t sub_20E4A3980()
{
  return MEMORY[0x24BDECD20]();
}

uint64_t sub_20E4A398C()
{
  return MEMORY[0x24BDECD38]();
}

uint64_t sub_20E4A3998()
{
  return MEMORY[0x24BDECDD0]();
}

uint64_t sub_20E4A39A4()
{
  return MEMORY[0x24BDECE00]();
}

uint64_t sub_20E4A39B0()
{
  return MEMORY[0x24BDECE58]();
}

uint64_t sub_20E4A39BC()
{
  return MEMORY[0x24BDECE68]();
}

uint64_t sub_20E4A39C8()
{
  return MEMORY[0x24BDECE78]();
}

uint64_t sub_20E4A39D4()
{
  return MEMORY[0x24BDED2D0]();
}

uint64_t sub_20E4A39E0()
{
  return MEMORY[0x24BDED318]();
}

uint64_t sub_20E4A39EC()
{
  return MEMORY[0x24BDED338]();
}

uint64_t sub_20E4A39F8()
{
  return MEMORY[0x24BDED3B0]();
}

uint64_t sub_20E4A3A04()
{
  return MEMORY[0x24BDED3C8]();
}

uint64_t sub_20E4A3A10()
{
  return MEMORY[0x24BDED3E0]();
}

uint64_t sub_20E4A3A1C()
{
  return MEMORY[0x24BDED3F0]();
}

uint64_t sub_20E4A3A28()
{
  return MEMORY[0x24BDED5F8]();
}

uint64_t sub_20E4A3A34()
{
  return MEMORY[0x24BDED6C8]();
}

uint64_t sub_20E4A3A40()
{
  return MEMORY[0x24BDED6D0]();
}

uint64_t sub_20E4A3A4C()
{
  return MEMORY[0x24BDED860]();
}

uint64_t sub_20E4A3A58()
{
  return MEMORY[0x24BDED868]();
}

uint64_t sub_20E4A3A64()
{
  return MEMORY[0x24BDED918]();
}

uint64_t sub_20E4A3A70()
{
  return MEMORY[0x24BDED930]();
}

uint64_t sub_20E4A3A7C()
{
  return MEMORY[0x24BDED998]();
}

uint64_t sub_20E4A3A88()
{
  return MEMORY[0x24BDED9E8]();
}

uint64_t sub_20E4A3A94()
{
  return MEMORY[0x24BDED9F0]();
}

uint64_t sub_20E4A3AA0()
{
  return MEMORY[0x24BDEDA30]();
}

uint64_t sub_20E4A3AAC()
{
  return MEMORY[0x24BDEDA38]();
}

uint64_t sub_20E4A3AB8()
{
  return MEMORY[0x24BDEDA70]();
}

uint64_t sub_20E4A3AC4()
{
  return MEMORY[0x24BDEDA90]();
}

uint64_t sub_20E4A3AD0()
{
  return MEMORY[0x24BDEDBA8]();
}

uint64_t sub_20E4A3ADC()
{
  return MEMORY[0x24BDEDE40]();
}

uint64_t sub_20E4A3AE8()
{
  return MEMORY[0x24BDEDE50]();
}

uint64_t sub_20E4A3AF4()
{
  return MEMORY[0x24BDEDE58]();
}

uint64_t sub_20E4A3B00()
{
  return MEMORY[0x24BDEDE60]();
}

uint64_t sub_20E4A3B0C()
{
  return MEMORY[0x24BDEDEC0]();
}

uint64_t sub_20E4A3B18()
{
  return MEMORY[0x24BDEDEC8]();
}

uint64_t sub_20E4A3B24()
{
  return MEMORY[0x24BDEDF08]();
}

uint64_t sub_20E4A3B30()
{
  return MEMORY[0x24BDEDF10]();
}

uint64_t sub_20E4A3B3C()
{
  return MEMORY[0x24BDEDF68]();
}

uint64_t sub_20E4A3B48()
{
  return MEMORY[0x24BDEDF70]();
}

uint64_t sub_20E4A3B54()
{
  return MEMORY[0x24BDEDF80]();
}

uint64_t sub_20E4A3B60()
{
  return MEMORY[0x24BDEDF88]();
}

uint64_t sub_20E4A3B6C()
{
  return MEMORY[0x24BDEE038]();
}

uint64_t sub_20E4A3B78()
{
  return MEMORY[0x24BDEE048]();
}

uint64_t sub_20E4A3B84()
{
  return MEMORY[0x24BDEE0E8]();
}

uint64_t sub_20E4A3B90()
{
  return MEMORY[0x24BDEE1D8]();
}

uint64_t sub_20E4A3B9C()
{
  return MEMORY[0x24BDEE390]();
}

uint64_t sub_20E4A3BA8()
{
  return MEMORY[0x24BDEE3A0]();
}

uint64_t sub_20E4A3BB4()
{
  return MEMORY[0x24BDEE3C8]();
}

uint64_t sub_20E4A3BC0()
{
  return MEMORY[0x24BDEE3D8]();
}

uint64_t sub_20E4A3BCC()
{
  return MEMORY[0x24BDEE400]();
}

uint64_t sub_20E4A3BD8()
{
  return MEMORY[0x24BDEE468]();
}

uint64_t sub_20E4A3BE4()
{
  return MEMORY[0x24BDEE478]();
}

uint64_t sub_20E4A3BF0()
{
  return MEMORY[0x24BDEE4E0]();
}

uint64_t sub_20E4A3BFC()
{
  return MEMORY[0x24BDEE4F8]();
}

uint64_t sub_20E4A3C08()
{
  return MEMORY[0x24BDEE530]();
}

uint64_t sub_20E4A3C14()
{
  return MEMORY[0x24BDEE538]();
}

uint64_t sub_20E4A3C20()
{
  return MEMORY[0x24BDEE548]();
}

uint64_t sub_20E4A3C2C()
{
  return MEMORY[0x24BDEE550]();
}

uint64_t sub_20E4A3C38()
{
  return MEMORY[0x24BDEE608]();
}

uint64_t sub_20E4A3C44()
{
  return MEMORY[0x24BDEE628]();
}

uint64_t sub_20E4A3C50()
{
  return MEMORY[0x24BDEE630]();
}

uint64_t sub_20E4A3C5C()
{
  return MEMORY[0x24BDEE718]();
}

uint64_t sub_20E4A3C68()
{
  return MEMORY[0x24BDEE730]();
}

uint64_t sub_20E4A3C74()
{
  return MEMORY[0x24BDEE8E0]();
}

uint64_t sub_20E4A3C80()
{
  return MEMORY[0x24BDEE8E8]();
}

uint64_t sub_20E4A3C8C()
{
  return MEMORY[0x24BDEE980]();
}

uint64_t sub_20E4A3C98()
{
  return MEMORY[0x24BDEE988]();
}

uint64_t sub_20E4A3CA4()
{
  return MEMORY[0x24BDEEA50]();
}

uint64_t sub_20E4A3CB0()
{
  return MEMORY[0x24BDEEB88]();
}

uint64_t sub_20E4A3CBC()
{
  return MEMORY[0x24BDEECA8]();
}

uint64_t sub_20E4A3CC8()
{
  return MEMORY[0x24BDEEF60]();
}

uint64_t sub_20E4A3CD4()
{
  return MEMORY[0x24BDEEF78]();
}

uint64_t sub_20E4A3CE0()
{
  return MEMORY[0x24BDEEFF0]();
}

uint64_t sub_20E4A3CEC()
{
  return MEMORY[0x24BDEF000]();
}

uint64_t sub_20E4A3CF8()
{
  return MEMORY[0x24BDEF0B0]();
}

uint64_t sub_20E4A3D04()
{
  return MEMORY[0x24BDEF0B8]();
}

uint64_t sub_20E4A3D10()
{
  return MEMORY[0x24BDEF0D0]();
}

uint64_t sub_20E4A3D1C()
{
  return MEMORY[0x24BDEF0D8]();
}

uint64_t sub_20E4A3D28()
{
  return MEMORY[0x24BDEF0E8]();
}

uint64_t sub_20E4A3D34()
{
  return MEMORY[0x24BDEF110]();
}

uint64_t sub_20E4A3D40()
{
  return MEMORY[0x24BDEF120]();
}

uint64_t sub_20E4A3D4C()
{
  return MEMORY[0x24BDEF1D0]();
}

uint64_t sub_20E4A3D58()
{
  return MEMORY[0x24BDEF228]();
}

uint64_t sub_20E4A3D64()
{
  return MEMORY[0x24BDEF238]();
}

uint64_t sub_20E4A3D70()
{
  return MEMORY[0x24BDEF248]();
}

uint64_t sub_20E4A3D7C()
{
  return MEMORY[0x24BDEF260]();
}

uint64_t sub_20E4A3D88()
{
  return MEMORY[0x24BDEF270]();
}

uint64_t sub_20E4A3D94()
{
  return MEMORY[0x24BDEF278]();
}

uint64_t sub_20E4A3DA0()
{
  return MEMORY[0x24BDEF288]();
}

uint64_t sub_20E4A3DAC()
{
  return MEMORY[0x24BDEF298]();
}

uint64_t sub_20E4A3DB8()
{
  return MEMORY[0x24BDEF2A8]();
}

uint64_t sub_20E4A3DC4()
{
  return MEMORY[0x24BDEF2C0]();
}

uint64_t sub_20E4A3DD0()
{
  return MEMORY[0x24BDEF2C8]();
}

uint64_t sub_20E4A3DDC()
{
  return MEMORY[0x24BDEF2D8]();
}

uint64_t sub_20E4A3DE8()
{
  return MEMORY[0x24BDEF380]();
}

uint64_t sub_20E4A3DF4()
{
  return MEMORY[0x24BDEF3A0]();
}

uint64_t sub_20E4A3E00()
{
  return MEMORY[0x24BDEF3B8]();
}

uint64_t sub_20E4A3E0C()
{
  return MEMORY[0x24BDEF5C8]();
}

uint64_t sub_20E4A3E18()
{
  return MEMORY[0x24BDEF5D8]();
}

uint64_t sub_20E4A3E24()
{
  return MEMORY[0x24BDEF600]();
}

uint64_t sub_20E4A3E30()
{
  return MEMORY[0x24BDEF608]();
}

uint64_t sub_20E4A3E3C()
{
  return MEMORY[0x24BDEF700]();
}

uint64_t sub_20E4A3E48()
{
  return MEMORY[0x24BDEF740]();
}

uint64_t sub_20E4A3E54()
{
  return MEMORY[0x24BDEF8C0]();
}

uint64_t sub_20E4A3E60()
{
  return MEMORY[0x24BDEF8D0]();
}

uint64_t sub_20E4A3E6C()
{
  return MEMORY[0x24BDEF950]();
}

uint64_t sub_20E4A3E78()
{
  return MEMORY[0x24BDEF998]();
}

uint64_t sub_20E4A3E84()
{
  return MEMORY[0x24BDEFA78]();
}

uint64_t sub_20E4A3E90()
{
  return MEMORY[0x24BDEFAB0]();
}

uint64_t sub_20E4A3E9C()
{
  return MEMORY[0x24BDEFB28]();
}

uint64_t sub_20E4A3EA8()
{
  return MEMORY[0x24BDEFB50]();
}

uint64_t sub_20E4A3EB4()
{
  return MEMORY[0x24BDEFCA8]();
}

uint64_t sub_20E4A3EC0()
{
  return MEMORY[0x24BDEFCB8]();
}

uint64_t sub_20E4A3ECC()
{
  return MEMORY[0x24BDEFCC8]();
}

uint64_t sub_20E4A3ED8()
{
  return MEMORY[0x24BDEFE30]();
}

uint64_t sub_20E4A3EE4()
{
  return MEMORY[0x24BDEFE38]();
}

uint64_t sub_20E4A3EF0()
{
  return MEMORY[0x24BDEFEF8]();
}

uint64_t sub_20E4A3EFC()
{
  return MEMORY[0x24BDF0108]();
}

uint64_t sub_20E4A3F08()
{
  return MEMORY[0x24BDF0158]();
}

uint64_t sub_20E4A3F14()
{
  return MEMORY[0x24BDF0238]();
}

uint64_t sub_20E4A3F20()
{
  return MEMORY[0x24BDF02D0]();
}

uint64_t sub_20E4A3F2C()
{
  return MEMORY[0x24BDF03F0]();
}

uint64_t sub_20E4A3F38()
{
  return MEMORY[0x24BDF0468]();
}

uint64_t sub_20E4A3F44()
{
  return MEMORY[0x24BDF04A8]();
}

uint64_t sub_20E4A3F50()
{
  return MEMORY[0x24BDF04B0]();
}

uint64_t sub_20E4A3F5C()
{
  return MEMORY[0x24BDF07B8]();
}

uint64_t sub_20E4A3F68()
{
  return MEMORY[0x24BDF07C8]();
}

uint64_t sub_20E4A3F74()
{
  return MEMORY[0x24BDF08B0]();
}

uint64_t sub_20E4A3F80()
{
  return MEMORY[0x24BDF08B8]();
}

uint64_t sub_20E4A3F8C()
{
  return MEMORY[0x24BDF08D0]();
}

uint64_t sub_20E4A3F98()
{
  return MEMORY[0x24BDF0998]();
}

uint64_t sub_20E4A3FA4()
{
  return MEMORY[0x24BDF09F8]();
}

uint64_t sub_20E4A3FB0()
{
  return MEMORY[0x24BDF0A20]();
}

uint64_t sub_20E4A3FBC()
{
  return MEMORY[0x24BDF0AF8]();
}

uint64_t sub_20E4A3FC8()
{
  return MEMORY[0x24BDF0B78]();
}

uint64_t sub_20E4A3FD4()
{
  return MEMORY[0x24BDF0CB8]();
}

uint64_t sub_20E4A3FE0()
{
  return MEMORY[0x24BDF0CC8]();
}

uint64_t sub_20E4A3FEC()
{
  return MEMORY[0x24BDF0CD8]();
}

uint64_t sub_20E4A3FF8()
{
  return MEMORY[0x24BDF1008]();
}

uint64_t sub_20E4A4004()
{
  return MEMORY[0x24BDF1088]();
}

uint64_t sub_20E4A4010()
{
  return MEMORY[0x24BDF10D0]();
}

uint64_t sub_20E4A401C()
{
  return MEMORY[0x24BDF10D8]();
}

uint64_t sub_20E4A4028()
{
  return MEMORY[0x24BDF10E0]();
}

uint64_t sub_20E4A4034()
{
  return MEMORY[0x24BDF10E8]();
}

uint64_t sub_20E4A4040()
{
  return MEMORY[0x24BDF10F8]();
}

uint64_t sub_20E4A404C()
{
  return MEMORY[0x24BDF12E8]();
}

uint64_t sub_20E4A4058()
{
  return MEMORY[0x24BDF1430]();
}

uint64_t sub_20E4A4064()
{
  return MEMORY[0x24BDF1450]();
}

uint64_t sub_20E4A4070()
{
  return MEMORY[0x24BDF1458]();
}

uint64_t sub_20E4A407C()
{
  return MEMORY[0x24BDF1468]();
}

uint64_t sub_20E4A4088()
{
  return MEMORY[0x24BDF14A8]();
}

uint64_t sub_20E4A4094()
{
  return MEMORY[0x24BDF14C0]();
}

uint64_t sub_20E4A40A0()
{
  return MEMORY[0x24BDF14C8]();
}

uint64_t sub_20E4A40AC()
{
  return MEMORY[0x24BDF14E0]();
}

uint64_t sub_20E4A40B8()
{
  return MEMORY[0x24BDF14E8]();
}

uint64_t sub_20E4A40C4()
{
  return MEMORY[0x24BDF14F8]();
}

uint64_t sub_20E4A40D0()
{
  return MEMORY[0x24BDF1510]();
}

uint64_t sub_20E4A40DC()
{
  return MEMORY[0x24BDF1580]();
}

uint64_t sub_20E4A40E8()
{
  return MEMORY[0x24BDF1600]();
}

uint64_t sub_20E4A40F4()
{
  return MEMORY[0x24BDF1678]();
}

uint64_t sub_20E4A4100()
{
  return MEMORY[0x24BDF1700]();
}

uint64_t sub_20E4A410C()
{
  return MEMORY[0x24BDF1750]();
}

uint64_t sub_20E4A4118()
{
  return MEMORY[0x24BDF1778]();
}

uint64_t sub_20E4A4124()
{
  return MEMORY[0x24BDF1900]();
}

uint64_t sub_20E4A4130()
{
  return MEMORY[0x24BDF1990]();
}

uint64_t sub_20E4A413C()
{
  return MEMORY[0x24BDF1998]();
}

uint64_t sub_20E4A4148()
{
  return MEMORY[0x24BDF19B0]();
}

uint64_t sub_20E4A4154()
{
  return MEMORY[0x24BDF19B8]();
}

uint64_t sub_20E4A4160()
{
  return MEMORY[0x24BDF19D0]();
}

uint64_t sub_20E4A416C()
{
  return MEMORY[0x24BDF19F0]();
}

uint64_t sub_20E4A4178()
{
  return MEMORY[0x24BDF1A00]();
}

uint64_t sub_20E4A4184()
{
  return MEMORY[0x24BDF1A18]();
}

uint64_t sub_20E4A4190()
{
  return MEMORY[0x24BDF1A48]();
}

uint64_t sub_20E4A419C()
{
  return MEMORY[0x24BDF1BD8]();
}

uint64_t sub_20E4A41A8()
{
  return MEMORY[0x24BDF1DC8]();
}

uint64_t sub_20E4A41B4()
{
  return MEMORY[0x24BDF1FC0]();
}

uint64_t sub_20E4A41C0()
{
  return MEMORY[0x24BDF1FF0]();
}

uint64_t sub_20E4A41CC()
{
  return MEMORY[0x24BDF2088]();
}

uint64_t sub_20E4A41D8()
{
  return MEMORY[0x24BDF20A0]();
}

uint64_t sub_20E4A41E4()
{
  return MEMORY[0x24BDF20B0]();
}

uint64_t sub_20E4A41F0()
{
  return MEMORY[0x24BDF2100]();
}

uint64_t sub_20E4A41FC()
{
  return MEMORY[0x24BDF2118]();
}

uint64_t sub_20E4A4208()
{
  return MEMORY[0x24BDF2170]();
}

uint64_t sub_20E4A4214()
{
  return MEMORY[0x24BDF21B0]();
}

uint64_t sub_20E4A4220()
{
  return MEMORY[0x24BDF2258]();
}

uint64_t sub_20E4A422C()
{
  return MEMORY[0x24BDF22B0]();
}

uint64_t sub_20E4A4238()
{
  return MEMORY[0x24BDF22C8]();
}

uint64_t sub_20E4A4244()
{
  return MEMORY[0x24BDF2330]();
}

uint64_t sub_20E4A4250()
{
  return MEMORY[0x24BDF2370]();
}

uint64_t sub_20E4A425C()
{
  return MEMORY[0x24BDF23D8]();
}

uint64_t sub_20E4A4268()
{
  return MEMORY[0x24BDF2688]();
}

uint64_t sub_20E4A4274()
{
  return MEMORY[0x24BDF2698]();
}

uint64_t sub_20E4A4280()
{
  return MEMORY[0x24BDF26F8]();
}

uint64_t sub_20E4A428C()
{
  return MEMORY[0x24BDF27B8]();
}

uint64_t sub_20E4A4298()
{
  return MEMORY[0x24BDF2810]();
}

uint64_t sub_20E4A42A4()
{
  return MEMORY[0x24BDF2818]();
}

uint64_t sub_20E4A42B0()
{
  return MEMORY[0x24BDF2850]();
}

uint64_t sub_20E4A42BC()
{
  return MEMORY[0x24BDF2858]();
}

uint64_t sub_20E4A42C8()
{
  return MEMORY[0x24BDF2890]();
}

uint64_t sub_20E4A42D4()
{
  return MEMORY[0x24BDF2968]();
}

uint64_t sub_20E4A42E0()
{
  return MEMORY[0x24BDF29C0]();
}

uint64_t sub_20E4A42EC()
{
  return MEMORY[0x24BDF29F0]();
}

uint64_t sub_20E4A42F8()
{
  return MEMORY[0x24BDF2A70]();
}

uint64_t sub_20E4A4304()
{
  return MEMORY[0x24BDF2B40]();
}

uint64_t sub_20E4A4310()
{
  return MEMORY[0x24BDF2CD8]();
}

uint64_t sub_20E4A431C()
{
  return MEMORY[0x24BDF2D30]();
}

uint64_t sub_20E4A4328()
{
  return MEMORY[0x24BDF2D50]();
}

uint64_t sub_20E4A4334()
{
  return MEMORY[0x24BDF2DA0]();
}

uint64_t sub_20E4A4340()
{
  return MEMORY[0x24BDF2DB8]();
}

uint64_t sub_20E4A434C()
{
  return MEMORY[0x24BDF2E90]();
}

uint64_t sub_20E4A4358()
{
  return MEMORY[0x24BDF2F08]();
}

uint64_t sub_20E4A4364()
{
  return MEMORY[0x24BDF2FD8]();
}

uint64_t sub_20E4A4370()
{
  return MEMORY[0x24BDF2FE8]();
}

uint64_t sub_20E4A437C()
{
  return MEMORY[0x24BDF2FF8]();
}

uint64_t sub_20E4A4388()
{
  return MEMORY[0x24BDF3008]();
}

uint64_t sub_20E4A4394()
{
  return MEMORY[0x24BDF3060]();
}

uint64_t sub_20E4A43A0()
{
  return MEMORY[0x24BDF3118]();
}

uint64_t sub_20E4A43AC()
{
  return MEMORY[0x24BDF3178]();
}

uint64_t sub_20E4A43B8()
{
  return MEMORY[0x24BDF31F0]();
}

uint64_t sub_20E4A43C4()
{
  return MEMORY[0x24BDF32E0]();
}

uint64_t sub_20E4A43D0()
{
  return MEMORY[0x24BDF3390]();
}

uint64_t sub_20E4A43DC()
{
  return MEMORY[0x24BDF33C8]();
}

uint64_t sub_20E4A43E8()
{
  return MEMORY[0x24BDF33D0]();
}

uint64_t sub_20E4A43F4()
{
  return MEMORY[0x24BDF3490]();
}

uint64_t sub_20E4A4400()
{
  return MEMORY[0x24BDF34C8]();
}

uint64_t sub_20E4A440C()
{
  return MEMORY[0x24BDF34D0]();
}

uint64_t sub_20E4A4418()
{
  return MEMORY[0x24BDF34E0]();
}

uint64_t sub_20E4A4424()
{
  return MEMORY[0x24BDF3550]();
}

uint64_t sub_20E4A4430()
{
  return MEMORY[0x24BDF3628]();
}

uint64_t sub_20E4A443C()
{
  return MEMORY[0x24BDF3630]();
}

uint64_t sub_20E4A4448()
{
  return MEMORY[0x24BDF3658]();
}

uint64_t sub_20E4A4454()
{
  return MEMORY[0x24BDF3668]();
}

uint64_t sub_20E4A4460()
{
  return MEMORY[0x24BDF37A8]();
}

uint64_t sub_20E4A446C()
{
  return MEMORY[0x24BDF37D8]();
}

uint64_t sub_20E4A4478()
{
  return MEMORY[0x24BDF37E0]();
}

uint64_t sub_20E4A4484()
{
  return MEMORY[0x24BDF3810]();
}

uint64_t sub_20E4A4490()
{
  return MEMORY[0x24BDF3830]();
}

uint64_t sub_20E4A449C()
{
  return MEMORY[0x24BDF3840]();
}

uint64_t sub_20E4A44A8()
{
  return MEMORY[0x24BDF3890]();
}

uint64_t sub_20E4A44B4()
{
  return MEMORY[0x24BDF38C0]();
}

uint64_t sub_20E4A44C0()
{
  return MEMORY[0x24BDF38C8]();
}

uint64_t sub_20E4A44CC()
{
  return MEMORY[0x24BDF38E0]();
}

uint64_t sub_20E4A44D8()
{
  return MEMORY[0x24BDF3900]();
}

uint64_t sub_20E4A44E4()
{
  return MEMORY[0x24BDF3940]();
}

uint64_t sub_20E4A44F0()
{
  return MEMORY[0x24BDF3970]();
}

uint64_t sub_20E4A44FC()
{
  return MEMORY[0x24BDF3A40]();
}

uint64_t sub_20E4A4508()
{
  return MEMORY[0x24BDF3A68]();
}

uint64_t sub_20E4A4514()
{
  return MEMORY[0x24BDF3AA8]();
}

uint64_t sub_20E4A4520()
{
  return MEMORY[0x24BDF3BF8]();
}

uint64_t sub_20E4A452C()
{
  return MEMORY[0x24BDF3C78]();
}

uint64_t sub_20E4A4538()
{
  return MEMORY[0x24BDF3CF0]();
}

uint64_t sub_20E4A4544()
{
  return MEMORY[0x24BDF3D78]();
}

uint64_t sub_20E4A4550()
{
  return MEMORY[0x24BDF3D88]();
}

uint64_t sub_20E4A455C()
{
  return MEMORY[0x24BDF3EA0]();
}

uint64_t sub_20E4A4568()
{
  return MEMORY[0x24BDF3F18]();
}

uint64_t sub_20E4A4574()
{
  return MEMORY[0x24BDF3F28]();
}

uint64_t sub_20E4A4580()
{
  return MEMORY[0x24BDF3F68]();
}

uint64_t sub_20E4A458C()
{
  return MEMORY[0x24BDF3F70]();
}

uint64_t sub_20E4A4598()
{
  return MEMORY[0x24BDF3F80]();
}

uint64_t sub_20E4A45A4()
{
  return MEMORY[0x24BDF3F90]();
}

uint64_t sub_20E4A45B0()
{
  return MEMORY[0x24BDF3FE8]();
}

uint64_t sub_20E4A45BC()
{
  return MEMORY[0x24BDF4010]();
}

uint64_t sub_20E4A45C8()
{
  return MEMORY[0x24BDF4020]();
}

uint64_t sub_20E4A45D4()
{
  return MEMORY[0x24BDF4028]();
}

uint64_t sub_20E4A45E0()
{
  return MEMORY[0x24BDF4038]();
}

uint64_t sub_20E4A45EC()
{
  return MEMORY[0x24BDF4050]();
}

uint64_t sub_20E4A45F8()
{
  return MEMORY[0x24BDF4070]();
}

uint64_t sub_20E4A4604()
{
  return MEMORY[0x24BDF40D8]();
}

uint64_t sub_20E4A4610()
{
  return MEMORY[0x24BDF4130]();
}

uint64_t sub_20E4A461C()
{
  return MEMORY[0x24BDF4150]();
}

uint64_t sub_20E4A4628()
{
  return MEMORY[0x24BDF4158]();
}

uint64_t sub_20E4A4634()
{
  return MEMORY[0x24BDF4188]();
}

uint64_t sub_20E4A4640()
{
  return MEMORY[0x24BDF4280]();
}

uint64_t sub_20E4A464C()
{
  return MEMORY[0x24BDF4290]();
}

uint64_t sub_20E4A4658()
{
  return MEMORY[0x24BDF42A8]();
}

uint64_t sub_20E4A4664()
{
  return MEMORY[0x24BDF42B0]();
}

uint64_t sub_20E4A4670()
{
  return MEMORY[0x24BDF42C0]();
}

uint64_t sub_20E4A467C()
{
  return MEMORY[0x24BDF4300]();
}

uint64_t sub_20E4A4688()
{
  return MEMORY[0x24BDF4330]();
}

uint64_t sub_20E4A4694()
{
  return MEMORY[0x24BDF4340]();
}

uint64_t sub_20E4A46A0()
{
  return MEMORY[0x24BDF4358]();
}

uint64_t sub_20E4A46AC()
{
  return MEMORY[0x24BDF4378]();
}

uint64_t sub_20E4A46B8()
{
  return MEMORY[0x24BDF4398]();
}

uint64_t sub_20E4A46C4()
{
  return MEMORY[0x24BDF4470]();
}

uint64_t sub_20E4A46D0()
{
  return MEMORY[0x24BDF4480]();
}

uint64_t sub_20E4A46DC()
{
  return MEMORY[0x24BDF44B0]();
}

uint64_t sub_20E4A46E8()
{
  return MEMORY[0x24BDF4518]();
}

uint64_t sub_20E4A46F4()
{
  return MEMORY[0x24BDF4678]();
}

uint64_t sub_20E4A4700()
{
  return MEMORY[0x24BDF46D8]();
}

uint64_t sub_20E4A470C()
{
  return MEMORY[0x24BDF46E0]();
}

uint64_t sub_20E4A4718()
{
  return MEMORY[0x24BDF4790]();
}

uint64_t sub_20E4A4724()
{
  return MEMORY[0x24BDF47B0]();
}

uint64_t sub_20E4A4730()
{
  return MEMORY[0x24BDF47B8]();
}

uint64_t sub_20E4A473C()
{
  return MEMORY[0x24BDF47C8]();
}

uint64_t sub_20E4A4748()
{
  return MEMORY[0x24BDF47E0]();
}

uint64_t sub_20E4A4754()
{
  return MEMORY[0x24BDF47F8]();
}

uint64_t sub_20E4A4760()
{
  return MEMORY[0x24BDF4808]();
}

uint64_t sub_20E4A476C()
{
  return MEMORY[0x24BDF4848]();
}

uint64_t sub_20E4A4778()
{
  return MEMORY[0x24BDF4870]();
}

uint64_t sub_20E4A4784()
{
  return MEMORY[0x24BDF4888]();
}

uint64_t sub_20E4A4790()
{
  return MEMORY[0x24BDF4908]();
}

uint64_t sub_20E4A479C()
{
  return MEMORY[0x24BDF4918]();
}

uint64_t sub_20E4A47A8()
{
  return MEMORY[0x24BDF49A0]();
}

uint64_t sub_20E4A47B4()
{
  return MEMORY[0x24BDF49B8]();
}

uint64_t sub_20E4A47C0()
{
  return MEMORY[0x24BDF49C8]();
}

uint64_t sub_20E4A47CC()
{
  return MEMORY[0x24BDF4A50]();
}

uint64_t sub_20E4A47D8()
{
  return MEMORY[0x24BDF4A58]();
}

uint64_t sub_20E4A47E4()
{
  return MEMORY[0x24BDF4A70]();
}

uint64_t sub_20E4A47F0()
{
  return MEMORY[0x24BDF4A78]();
}

uint64_t sub_20E4A47FC()
{
  return MEMORY[0x24BDF4A90]();
}

uint64_t sub_20E4A4808()
{
  return MEMORY[0x24BDF4AA0]();
}

uint64_t sub_20E4A4814()
{
  return MEMORY[0x24BDF4B70]();
}

uint64_t sub_20E4A4820()
{
  return MEMORY[0x24BDF4B78]();
}

uint64_t sub_20E4A482C()
{
  return MEMORY[0x24BDF4B80]();
}

uint64_t sub_20E4A4838()
{
  return MEMORY[0x24BDF4D48]();
}

uint64_t sub_20E4A4844()
{
  return MEMORY[0x24BDF4D58]();
}

uint64_t sub_20E4A4850()
{
  return MEMORY[0x24BDF4D80]();
}

uint64_t sub_20E4A485C()
{
  return MEMORY[0x24BDF4E20]();
}

uint64_t sub_20E4A4868()
{
  return MEMORY[0x24BDF4E30]();
}

uint64_t sub_20E4A4874()
{
  return MEMORY[0x24BDF4E58]();
}

uint64_t sub_20E4A4880()
{
  return MEMORY[0x24BDF4EC0]();
}

uint64_t sub_20E4A488C()
{
  return MEMORY[0x24BDF4EC8]();
}

uint64_t sub_20E4A4898()
{
  return MEMORY[0x24BDF4EF0]();
}

uint64_t sub_20E4A48A4()
{
  return MEMORY[0x24BDF4F18]();
}

uint64_t sub_20E4A48B0()
{
  return MEMORY[0x24BDF4F20]();
}

uint64_t sub_20E4A48BC()
{
  return MEMORY[0x24BDF4F68]();
}

uint64_t sub_20E4A48C8()
{
  return MEMORY[0x24BDF4FA0]();
}

uint64_t sub_20E4A48D4()
{
  return MEMORY[0x24BDF4FB0]();
}

uint64_t sub_20E4A48E0()
{
  return MEMORY[0x24BDF4FF0]();
}

uint64_t sub_20E4A48EC()
{
  return MEMORY[0x24BDF5180]();
}

uint64_t sub_20E4A48F8()
{
  return MEMORY[0x24BDF5188]();
}

uint64_t sub_20E4A4904()
{
  return MEMORY[0x24BDF51E8]();
}

uint64_t sub_20E4A4910()
{
  return MEMORY[0x24BDF51F0]();
}

uint64_t sub_20E4A491C()
{
  return MEMORY[0x24BDF53F0]();
}

uint64_t sub_20E4A4928()
{
  return MEMORY[0x24BDF5418]();
}

uint64_t sub_20E4A4934()
{
  return MEMORY[0x24BDF54A0]();
}

uint64_t sub_20E4A4940()
{
  return MEMORY[0x24BEE5428]();
}

uint64_t sub_20E4A494C()
{
  return MEMORY[0x24BEE5458]();
}

uint64_t sub_20E4A4958()
{
  return MEMORY[0x24BEE54C8]();
}

uint64_t sub_20E4A4964()
{
  return MEMORY[0x24BEE54D8]();
}

uint64_t sub_20E4A4970()
{
  return MEMORY[0x24BEE5500]();
}

uint64_t sub_20E4A497C()
{
  return MEMORY[0x24BEE5570]();
}

uint64_t sub_20E4A4988()
{
  return MEMORY[0x24BEE5590]();
}

uint64_t sub_20E4A4994()
{
  return MEMORY[0x24BEE5620]();
}

uint64_t sub_20E4A49A0()
{
  return MEMORY[0x24BE5C5D0]();
}

uint64_t sub_20E4A49AC()
{
  return MEMORY[0x24BE5C5E8]();
}

uint64_t sub_20E4A49B8()
{
  return MEMORY[0x24BE5C5F0]();
}

uint64_t sub_20E4A49C4()
{
  return MEMORY[0x24BE5C5F8]();
}

uint64_t sub_20E4A49D0()
{
  return MEMORY[0x24BE5C600]();
}

uint64_t sub_20E4A49DC()
{
  return MEMORY[0x24BE5C610]();
}

uint64_t sub_20E4A49E8()
{
  return MEMORY[0x24BE5C618]();
}

uint64_t sub_20E4A49F4()
{
  return MEMORY[0x24BE5C628]();
}

uint64_t sub_20E4A4A00()
{
  return MEMORY[0x24BE5C630]();
}

uint64_t sub_20E4A4A0C()
{
  return MEMORY[0x24BE5C640]();
}

uint64_t sub_20E4A4A18()
{
  return MEMORY[0x24BE5C650]();
}

uint64_t sub_20E4A4A24()
{
  return MEMORY[0x24BE5C668]();
}

uint64_t sub_20E4A4A30()
{
  return MEMORY[0x24BE5C758]();
}

uint64_t sub_20E4A4A3C()
{
  return MEMORY[0x24BE5C760]();
}

uint64_t sub_20E4A4A48()
{
  return MEMORY[0x24BE5C768]();
}

uint64_t sub_20E4A4A54()
{
  return MEMORY[0x24BE5C770]();
}

uint64_t sub_20E4A4A60()
{
  return MEMORY[0x24BE5C778]();
}

uint64_t sub_20E4A4A6C()
{
  return MEMORY[0x24BE5C780]();
}

uint64_t sub_20E4A4A78()
{
  return MEMORY[0x24BE5C788]();
}

uint64_t sub_20E4A4A84()
{
  return MEMORY[0x24BE5C790]();
}

uint64_t sub_20E4A4A90()
{
  return MEMORY[0x24BE5C798]();
}

uint64_t sub_20E4A4A9C()
{
  return MEMORY[0x24BE5C7A0]();
}

uint64_t sub_20E4A4AA8()
{
  return MEMORY[0x24BE5C7A8]();
}

uint64_t sub_20E4A4AB4()
{
  return MEMORY[0x24BE5C7B0]();
}

uint64_t sub_20E4A4AC0()
{
  return MEMORY[0x24BE5C7B8]();
}

uint64_t sub_20E4A4ACC()
{
  return MEMORY[0x24BE5C7C0]();
}

uint64_t sub_20E4A4AD8()
{
  return MEMORY[0x24BE5C7D8]();
}

uint64_t sub_20E4A4AE4()
{
  return MEMORY[0x24BE5C7F8]();
}

uint64_t sub_20E4A4AF0()
{
  return MEMORY[0x24BE5C818]();
}

uint64_t sub_20E4A4AFC()
{
  return MEMORY[0x24BE5C840]();
}

uint64_t sub_20E4A4B08()
{
  return MEMORY[0x24BE5C858]();
}

uint64_t sub_20E4A4B14()
{
  return MEMORY[0x24BE5C870]();
}

uint64_t sub_20E4A4B20()
{
  return MEMORY[0x24BE5C878]();
}

uint64_t sub_20E4A4B2C()
{
  return MEMORY[0x24BE5C880]();
}

uint64_t sub_20E4A4B38()
{
  return MEMORY[0x24BE5C9B8]();
}

uint64_t sub_20E4A4B44()
{
  return MEMORY[0x24BE5C9C0]();
}

uint64_t sub_20E4A4B50()
{
  return MEMORY[0x24BE5C9E0]();
}

uint64_t sub_20E4A4B5C()
{
  return MEMORY[0x24BE5C9F0]();
}

uint64_t sub_20E4A4B68()
{
  return MEMORY[0x24BE5CA00]();
}

uint64_t sub_20E4A4B74()
{
  return MEMORY[0x24BE5CA18]();
}

uint64_t sub_20E4A4B80()
{
  return MEMORY[0x24BE5CA48]();
}

uint64_t sub_20E4A4B8C()
{
  return MEMORY[0x24BE5CA50]();
}

uint64_t sub_20E4A4B98()
{
  return MEMORY[0x24BE5CA70]();
}

uint64_t sub_20E4A4BA4()
{
  return MEMORY[0x24BE5CA78]();
}

uint64_t sub_20E4A4BB0()
{
  return MEMORY[0x24BE5CA88]();
}

uint64_t sub_20E4A4BBC()
{
  return MEMORY[0x24BE5CA90]();
}

uint64_t sub_20E4A4BC8()
{
  return MEMORY[0x24BE5CAA0]();
}

uint64_t sub_20E4A4BD4()
{
  return MEMORY[0x24BE5CAB0]();
}

uint64_t sub_20E4A4BE0()
{
  return MEMORY[0x24BE5CAF0]();
}

uint64_t sub_20E4A4BEC()
{
  return MEMORY[0x24BE5CAF8]();
}

uint64_t sub_20E4A4BF8()
{
  return MEMORY[0x24BE5CB00]();
}

uint64_t sub_20E4A4C04()
{
  return MEMORY[0x24BE5CB28]();
}

uint64_t sub_20E4A4C10()
{
  return MEMORY[0x24BE5CB30]();
}

uint64_t _s18_JetEngine_SwiftUI30MediaArtworkStyleConfigurationV4sizeSo6CGSizeVvg_0()
{
  return MEMORY[0x24BE5CB38]();
}

uint64_t sub_20E4A4C28()
{
  return MEMORY[0x24BE5CB40]();
}

uint64_t sub_20E4A4C34()
{
  return MEMORY[0x24BE5CB48]();
}

uint64_t sub_20E4A4C40()
{
  return MEMORY[0x24BE5CB50]();
}

uint64_t _s18_JetEngine_SwiftUI30MediaArtworkStyleConfigurationV7isEmptySbvg_0()
{
  return MEMORY[0x24BE5CB58]();
}

uint64_t _s9JetEngine12MediaArtworkV01_aB8_SwiftUIE5SizedV9_resource9withScaleAA0cD8Resource_pSg12CoreGraphics7CGFloatV_tF_0()
{
  return MEMORY[0x24BE5CB60]();
}

uint64_t sub_20E4A4C64()
{
  return MEMORY[0x24BE5CB68]();
}

uint64_t sub_20E4A4C70()
{
  return MEMORY[0x24BE5CB70]();
}

uint64_t sub_20E4A4C7C()
{
  return MEMORY[0x24BE5CB80]();
}

uint64_t sub_20E4A4C88()
{
  return MEMORY[0x24BE5CB88]();
}

uint64_t sub_20E4A4C94()
{
  return MEMORY[0x24BE5CBA8]();
}

uint64_t sub_20E4A4CA0()
{
  return MEMORY[0x24BE5CBD0]();
}

uint64_t sub_20E4A4CAC()
{
  return MEMORY[0x24BE5CBE8]();
}

uint64_t sub_20E4A4CB8()
{
  return MEMORY[0x24BE5CBF8]();
}

uint64_t sub_20E4A4CC4()
{
  return MEMORY[0x24BE5CC08]();
}

uint64_t sub_20E4A4CD0()
{
  return MEMORY[0x24BE5CC18]();
}

uint64_t sub_20E4A4CDC()
{
  return MEMORY[0x24BE5CC30]();
}

uint64_t sub_20E4A4CE8()
{
  return MEMORY[0x24BE5CC38]();
}

uint64_t sub_20E4A4CF4()
{
  return MEMORY[0x24BE5CC40]();
}

uint64_t sub_20E4A4D00()
{
  return MEMORY[0x24BE5CC48]();
}

uint64_t sub_20E4A4D0C()
{
  return MEMORY[0x24BE5CC60]();
}

uint64_t sub_20E4A4D18()
{
  return MEMORY[0x24BE5CC78]();
}

uint64_t sub_20E4A4D24()
{
  return MEMORY[0x24BE5CC80]();
}

uint64_t sub_20E4A4D30()
{
  return MEMORY[0x24BE5CC88]();
}

uint64_t sub_20E4A4D3C()
{
  return MEMORY[0x24BE5CC90]();
}

uint64_t sub_20E4A4D48()
{
  return MEMORY[0x24BE5CCA0]();
}

uint64_t sub_20E4A4D54()
{
  return MEMORY[0x24BE5CCA8]();
}

uint64_t sub_20E4A4D60()
{
  return MEMORY[0x24BE5CCB0]();
}

uint64_t sub_20E4A4D6C()
{
  return MEMORY[0x24BE5CCC0]();
}

uint64_t sub_20E4A4D78()
{
  return MEMORY[0x24BE5CCC8]();
}

uint64_t sub_20E4A4D84()
{
  return MEMORY[0x24BE5CCD8]();
}

uint64_t sub_20E4A4D90()
{
  return MEMORY[0x24BE5CCE0]();
}

uint64_t sub_20E4A4D9C()
{
  return MEMORY[0x24BE5CD08]();
}

uint64_t sub_20E4A4DA8()
{
  return MEMORY[0x24BE5CD10]();
}

uint64_t sub_20E4A4DB4()
{
  return MEMORY[0x24BE5CD18]();
}

uint64_t sub_20E4A4DC0()
{
  return MEMORY[0x24BE5CD20]();
}

uint64_t sub_20E4A4DCC()
{
  return MEMORY[0x24BE5CD28]();
}

uint64_t sub_20E4A4DD8()
{
  return MEMORY[0x24BE5CD60]();
}

uint64_t _s9JetEngine14ComponentModelP01_aB8_SwiftUIE6viewIDAD0cd4ViewH0Vvg_0()
{
  return MEMORY[0x24BE5CD68]();
}

uint64_t sub_20E4A4DF0()
{
  return MEMORY[0x24BE5CD78]();
}

uint64_t sub_20E4A4DFC()
{
  return MEMORY[0x24BE5CDD0]();
}

uint64_t sub_20E4A4E08()
{
  return MEMORY[0x24BE5CE28]();
}

uint64_t sub_20E4A4E14()
{
  return MEMORY[0x24BE5CE38]();
}

uint64_t sub_20E4A4E20()
{
  return MEMORY[0x24BE5CE40]();
}

uint64_t sub_20E4A4E2C()
{
  return MEMORY[0x24BE5CE48]();
}

uint64_t sub_20E4A4E38()
{
  return MEMORY[0x24BE5CE50]();
}

uint64_t sub_20E4A4E44()
{
  return MEMORY[0x24BE5CE58]();
}

uint64_t sub_20E4A4E50()
{
  return MEMORY[0x24BE5CE68]();
}

uint64_t sub_20E4A4E5C()
{
  return MEMORY[0x24BE5CE70]();
}

uint64_t sub_20E4A4E68()
{
  return MEMORY[0x24BE5CE78]();
}

uint64_t sub_20E4A4E74()
{
  return MEMORY[0x24BE5CE98]();
}

uint64_t sub_20E4A4E80()
{
  return MEMORY[0x24BE5CEB0]();
}

uint64_t sub_20E4A4E8C()
{
  return MEMORY[0x24BE5CED0]();
}

uint64_t sub_20E4A4E98()
{
  return MEMORY[0x24BE5CED8]();
}

uint64_t sub_20E4A4EA4()
{
  return MEMORY[0x24BE5CEE8]();
}

uint64_t sub_20E4A4EB0()
{
  return MEMORY[0x24BE5CEF8]();
}

uint64_t sub_20E4A4EBC()
{
  return MEMORY[0x24BE5CF00]();
}

uint64_t sub_20E4A4EC8()
{
  return MEMORY[0x24BE5CF08]();
}

uint64_t sub_20E4A4ED4()
{
  return MEMORY[0x24BE5CF10]();
}

uint64_t sub_20E4A4EE0()
{
  return MEMORY[0x24BE5CF18]();
}

uint64_t sub_20E4A4EEC()
{
  return MEMORY[0x24BE5CF20]();
}

uint64_t sub_20E4A4EF8()
{
  return MEMORY[0x24BE5CF30]();
}

uint64_t sub_20E4A4F04()
{
  return MEMORY[0x24BE5CF58]();
}

uint64_t sub_20E4A4F10()
{
  return MEMORY[0x24BE5CF68]();
}

uint64_t sub_20E4A4F1C()
{
  return MEMORY[0x24BE5CF70]();
}

uint64_t sub_20E4A4F28()
{
  return MEMORY[0x24BE5CF78]();
}

uint64_t sub_20E4A4F34()
{
  return MEMORY[0x24BE5CF88]();
}

uint64_t sub_20E4A4F40()
{
  return MEMORY[0x24BE5CF98]();
}

uint64_t sub_20E4A4F4C()
{
  return MEMORY[0x24BE5CFC0]();
}

uint64_t sub_20E4A4F58()
{
  return MEMORY[0x24BE5CFC8]();
}

uint64_t sub_20E4A4F64()
{
  return MEMORY[0x24BE5CFE8]();
}

uint64_t sub_20E4A4F70()
{
  return MEMORY[0x24BE5D020]();
}

uint64_t sub_20E4A4F7C()
{
  return MEMORY[0x24BE5D038]();
}

uint64_t sub_20E4A4F88()
{
  return MEMORY[0x24BE5D040]();
}

uint64_t sub_20E4A4F94()
{
  return MEMORY[0x24BE5D048]();
}

uint64_t sub_20E4A4FA0()
{
  return MEMORY[0x24BE5D050]();
}

uint64_t sub_20E4A4FAC()
{
  return MEMORY[0x24BE5D060]();
}

uint64_t sub_20E4A4FB8()
{
  return MEMORY[0x24BE5D068]();
}

uint64_t sub_20E4A4FC4()
{
  return MEMORY[0x24BE5D070]();
}

uint64_t sub_20E4A4FD0()
{
  return MEMORY[0x24BE5D078]();
}

uint64_t sub_20E4A4FDC()
{
  return MEMORY[0x24BE5D080]();
}

uint64_t sub_20E4A4FE8()
{
  return MEMORY[0x24BE5D088]();
}

uint64_t sub_20E4A4FF4()
{
  return MEMORY[0x24BE5D090]();
}

uint64_t sub_20E4A5000()
{
  return MEMORY[0x24BE5D0A8]();
}

uint64_t sub_20E4A500C()
{
  return MEMORY[0x24BE5D0B8]();
}

uint64_t sub_20E4A5018()
{
  return MEMORY[0x24BE5D0C0]();
}

uint64_t sub_20E4A5024()
{
  return MEMORY[0x24BE5D0C8]();
}

uint64_t sub_20E4A5030()
{
  return MEMORY[0x24BE5D0D0]();
}

uint64_t sub_20E4A503C()
{
  return MEMORY[0x24BE5D0E0]();
}

uint64_t sub_20E4A5048()
{
  return MEMORY[0x24BE5D0E8]();
}

uint64_t sub_20E4A5054()
{
  return MEMORY[0x24BE5D100]();
}

uint64_t sub_20E4A5060()
{
  return MEMORY[0x24BE5D110]();
}

uint64_t sub_20E4A506C()
{
  return MEMORY[0x24BE5D128]();
}

uint64_t sub_20E4A5078()
{
  return MEMORY[0x24BE5D148]();
}

uint64_t sub_20E4A5084()
{
  return MEMORY[0x24BE5D150]();
}

uint64_t sub_20E4A5090()
{
  return MEMORY[0x24BE5D168]();
}

uint64_t sub_20E4A509C()
{
  return MEMORY[0x24BE5D178]();
}

uint64_t sub_20E4A50A8()
{
  return MEMORY[0x24BE5D180]();
}

uint64_t sub_20E4A50B4()
{
  return MEMORY[0x24BE5D188]();
}

uint64_t sub_20E4A50C0()
{
  return MEMORY[0x24BE5D200]();
}

uint64_t sub_20E4A50CC()
{
  return MEMORY[0x24BE5D250]();
}

uint64_t sub_20E4A50D8()
{
  return MEMORY[0x24BE5D258]();
}

uint64_t sub_20E4A50E4()
{
  return MEMORY[0x24BE5D260]();
}

uint64_t sub_20E4A50F0()
{
  return MEMORY[0x24BE5D268]();
}

uint64_t sub_20E4A50FC()
{
  return MEMORY[0x24BE5D270]();
}

uint64_t sub_20E4A5108()
{
  return MEMORY[0x24BE5D278]();
}

uint64_t sub_20E4A5114()
{
  return MEMORY[0x24BE5D280]();
}

uint64_t sub_20E4A5120()
{
  return MEMORY[0x24BE5D290]();
}

uint64_t sub_20E4A512C()
{
  return MEMORY[0x24BE5D2E0]();
}

uint64_t sub_20E4A5138()
{
  return MEMORY[0x24BE5D2F0]();
}

uint64_t sub_20E4A5144()
{
  return MEMORY[0x24BE5D2F8]();
}

uint64_t sub_20E4A5150()
{
  return MEMORY[0x24BE5D300]();
}

uint64_t sub_20E4A515C()
{
  return MEMORY[0x24BE5D318]();
}

uint64_t sub_20E4A5168()
{
  return MEMORY[0x24BE5D320]();
}

uint64_t sub_20E4A5174()
{
  return MEMORY[0x24BE5D330]();
}

uint64_t sub_20E4A5180()
{
  return MEMORY[0x24BE5D350]();
}

uint64_t sub_20E4A518C()
{
  return MEMORY[0x24BE5D360]();
}

uint64_t sub_20E4A5198()
{
  return MEMORY[0x24BE5D378]();
}

uint64_t sub_20E4A51A4()
{
  return MEMORY[0x24BE5D380]();
}

uint64_t sub_20E4A51B0()
{
  return MEMORY[0x24BE5D398]();
}

uint64_t sub_20E4A51BC()
{
  return MEMORY[0x24BE5D3A0]();
}

uint64_t sub_20E4A51C8()
{
  return MEMORY[0x24BE5D3A8]();
}

uint64_t sub_20E4A51D4()
{
  return MEMORY[0x24BE5D3B0]();
}

uint64_t sub_20E4A51E0()
{
  return MEMORY[0x24BE5D3B8]();
}

uint64_t sub_20E4A51EC()
{
  return MEMORY[0x24BE5D3C0]();
}

uint64_t sub_20E4A51F8()
{
  return MEMORY[0x24BE5D3C8]();
}

uint64_t sub_20E4A5204()
{
  return MEMORY[0x24BE5D3D0]();
}

uint64_t sub_20E4A5210()
{
  return MEMORY[0x24BE5D3F8]();
}

uint64_t sub_20E4A521C()
{
  return MEMORY[0x24BE5D400]();
}

uint64_t sub_20E4A5228()
{
  return MEMORY[0x24BE5D448]();
}

uint64_t sub_20E4A5234()
{
  return MEMORY[0x24BE5D450]();
}

uint64_t sub_20E4A5240()
{
  return MEMORY[0x24BE5D460]();
}

uint64_t sub_20E4A524C()
{
  return MEMORY[0x24BE5D470]();
}

uint64_t sub_20E4A5258()
{
  return MEMORY[0x24BE5D478]();
}

uint64_t sub_20E4A5264()
{
  return MEMORY[0x24BE5D488]();
}

uint64_t sub_20E4A5270()
{
  return MEMORY[0x24BE5D490]();
}

uint64_t sub_20E4A527C()
{
  return MEMORY[0x24BE5D4E8]();
}

uint64_t sub_20E4A5288()
{
  return MEMORY[0x24BE5D508]();
}

uint64_t sub_20E4A5294()
{
  return MEMORY[0x24BE5D510]();
}

uint64_t sub_20E4A52A0()
{
  return MEMORY[0x24BE5D528]();
}

uint64_t sub_20E4A52AC()
{
  return MEMORY[0x24BE5D530]();
}

uint64_t sub_20E4A52B8()
{
  return MEMORY[0x24BE5D540]();
}

uint64_t sub_20E4A52C4()
{
  return MEMORY[0x24BE5D548]();
}

uint64_t sub_20E4A52D0()
{
  return MEMORY[0x24BE5D550]();
}

uint64_t sub_20E4A52DC()
{
  return MEMORY[0x24BE5D620]();
}

uint64_t sub_20E4A52E8()
{
  return MEMORY[0x24BE5D628]();
}

uint64_t sub_20E4A52F4()
{
  return MEMORY[0x24BE5D630]();
}

uint64_t sub_20E4A5300()
{
  return MEMORY[0x24BE5D638]();
}

uint64_t sub_20E4A530C()
{
  return MEMORY[0x24BE5D670]();
}

uint64_t _s18_JetEngine_SwiftUI26OpaqueMetricsFieldsContextV2eeoiySbAC_ACtFZ_0()
{
  return MEMORY[0x24BE5D678]();
}

uint64_t sub_20E4A5324()
{
  return MEMORY[0x24BE5D680]();
}

uint64_t sub_20E4A5330()
{
  return MEMORY[0x24BE5D688]();
}

uint64_t sub_20E4A533C()
{
  return MEMORY[0x24BE5D690]();
}

uint64_t sub_20E4A5348()
{
  return MEMORY[0x24BE5D698]();
}

uint64_t sub_20E4A5354()
{
  return MEMORY[0x24BE5D6A0]();
}

uint64_t sub_20E4A5360()
{
  return MEMORY[0x24BE5D6A8]();
}

uint64_t sub_20E4A536C()
{
  return MEMORY[0x24BE5D6C0]();
}

uint64_t sub_20E4A5378()
{
  return MEMORY[0x24BE5D6C8]();
}

uint64_t sub_20E4A5384()
{
  return MEMORY[0x24BE5D6D0]();
}

uint64_t sub_20E4A5390()
{
  return MEMORY[0x24BE5D6E8]();
}

uint64_t sub_20E4A539C()
{
  return MEMORY[0x24BE5D6F0]();
}

uint64_t sub_20E4A53A8()
{
  return MEMORY[0x24BE5D6F8]();
}

uint64_t sub_20E4A53B4()
{
  return MEMORY[0x24BE5D700]();
}

uint64_t sub_20E4A53C0()
{
  return MEMORY[0x24BE5D708]();
}

uint64_t sub_20E4A53CC()
{
  return MEMORY[0x24BE5D710]();
}

uint64_t sub_20E4A53D8()
{
  return MEMORY[0x24BE5D718]();
}

uint64_t sub_20E4A53E4()
{
  return MEMORY[0x24BE5D720]();
}

uint64_t sub_20E4A53F0()
{
  return MEMORY[0x24BE5D728]();
}

uint64_t sub_20E4A53FC()
{
  return MEMORY[0x24BE5D738]();
}

uint64_t sub_20E4A5408()
{
  return MEMORY[0x24BE5D760]();
}

uint64_t sub_20E4A5414()
{
  return MEMORY[0x24BE5D768]();
}

uint64_t sub_20E4A5420()
{
  return MEMORY[0x24BE5D770]();
}

uint64_t sub_20E4A542C()
{
  return MEMORY[0x24BE5D778]();
}

uint64_t sub_20E4A5438()
{
  return MEMORY[0x24BE5D780]();
}

uint64_t sub_20E4A5444()
{
  return MEMORY[0x24BE5D788]();
}

uint64_t sub_20E4A5450()
{
  return MEMORY[0x24BE5D790]();
}

uint64_t sub_20E4A545C()
{
  return MEMORY[0x24BE5D808]();
}

uint64_t sub_20E4A5468()
{
  return MEMORY[0x24BE5D818]();
}

uint64_t sub_20E4A5474()
{
  return MEMORY[0x24BE5D820]();
}

uint64_t sub_20E4A5480()
{
  return MEMORY[0x24BE5D850]();
}

uint64_t sub_20E4A548C()
{
  return MEMORY[0x24BE5D860]();
}

uint64_t sub_20E4A5498()
{
  return MEMORY[0x24BE5D868]();
}

uint64_t sub_20E4A54A4()
{
  return MEMORY[0x24BE5D870]();
}

uint64_t sub_20E4A54B0()
{
  return MEMORY[0x24BE5D878]();
}

uint64_t sub_20E4A54BC()
{
  return MEMORY[0x24BE5D880]();
}

uint64_t sub_20E4A54C8()
{
  return MEMORY[0x24BE5D888]();
}

uint64_t sub_20E4A54D4()
{
  return MEMORY[0x24BE5D890]();
}

uint64_t sub_20E4A54E0()
{
  return MEMORY[0x24BE5D898]();
}

uint64_t sub_20E4A54EC()
{
  return MEMORY[0x24BE5D8A0]();
}

uint64_t sub_20E4A54F8()
{
  return MEMORY[0x24BE5D8B0]();
}

uint64_t sub_20E4A5504()
{
  return MEMORY[0x24BE5D8B8]();
}

uint64_t sub_20E4A5510()
{
  return MEMORY[0x24BE5D8C0]();
}

uint64_t sub_20E4A551C()
{
  return MEMORY[0x24BE5D8D8]();
}

uint64_t sub_20E4A5528()
{
  return MEMORY[0x24BE5D8E0]();
}

uint64_t sub_20E4A5534()
{
  return MEMORY[0x24BE5D970]();
}

uint64_t sub_20E4A5540()
{
  return MEMORY[0x24BE5D978]();
}

uint64_t sub_20E4A554C()
{
  return MEMORY[0x24BE5D9E8]();
}

uint64_t sub_20E4A5558()
{
  return MEMORY[0x24BE5D9F0]();
}

uint64_t sub_20E4A5564()
{
  return MEMORY[0x24BE5D9F8]();
}

uint64_t sub_20E4A5570()
{
  return MEMORY[0x24BE5DA00]();
}

uint64_t sub_20E4A557C()
{
  return MEMORY[0x24BE5DA08]();
}

uint64_t sub_20E4A5588()
{
  return MEMORY[0x24BE5DA18]();
}

uint64_t sub_20E4A5594()
{
  return MEMORY[0x24BE5DA78]();
}

uint64_t sub_20E4A55A0()
{
  return MEMORY[0x24BE5DA88]();
}

uint64_t sub_20E4A55AC()
{
  return MEMORY[0x24BE5DA90]();
}

uint64_t sub_20E4A55B8()
{
  return MEMORY[0x24BE5DA98]();
}

uint64_t sub_20E4A55C4()
{
  return MEMORY[0x24BE5DAA0]();
}

uint64_t sub_20E4A55D0()
{
  return MEMORY[0x24BE5DAA8]();
}

uint64_t sub_20E4A55DC()
{
  return MEMORY[0x24BE5DAC0]();
}

uint64_t sub_20E4A55E8()
{
  return MEMORY[0x24BE5DAC8]();
}

uint64_t sub_20E4A55F4()
{
  return MEMORY[0x24BE5DAE0]();
}

uint64_t sub_20E4A5600()
{
  return MEMORY[0x24BE5DAE8]();
}

uint64_t sub_20E4A560C()
{
  return MEMORY[0x24BE5DAF0]();
}

uint64_t sub_20E4A5618()
{
  return MEMORY[0x24BE5DAF8]();
}

uint64_t sub_20E4A5624()
{
  return MEMORY[0x24BE5DB00]();
}

uint64_t sub_20E4A5630()
{
  return MEMORY[0x24BE5DB08]();
}

uint64_t sub_20E4A563C()
{
  return MEMORY[0x24BE5DB50]();
}

uint64_t sub_20E4A5648()
{
  return MEMORY[0x24BE5DB68]();
}

uint64_t sub_20E4A5654()
{
  return MEMORY[0x24BE5DB70]();
}

uint64_t sub_20E4A5660()
{
  return MEMORY[0x24BE5DB78]();
}

uint64_t sub_20E4A566C()
{
  return MEMORY[0x24BE5DB80]();
}

uint64_t sub_20E4A5678()
{
  return MEMORY[0x24BE5DB88]();
}

uint64_t sub_20E4A5684()
{
  return MEMORY[0x24BE5DB90]();
}

uint64_t sub_20E4A5690()
{
  return MEMORY[0x24BE5DB98]();
}

uint64_t sub_20E4A569C()
{
  return MEMORY[0x24BE5DBA0]();
}

uint64_t sub_20E4A56A8()
{
  return MEMORY[0x24BE5DBB0]();
}

uint64_t sub_20E4A56B4()
{
  return MEMORY[0x24BE5DBB8]();
}

uint64_t sub_20E4A56C0()
{
  return MEMORY[0x24BE5DC38]();
}

uint64_t sub_20E4A56CC()
{
  return MEMORY[0x24BE5DC48]();
}

uint64_t sub_20E4A56D8()
{
  return MEMORY[0x24BE5DC50]();
}

uint64_t sub_20E4A56E4()
{
  return MEMORY[0x24BE5DCE8]();
}

uint64_t sub_20E4A56F0()
{
  return MEMORY[0x24BE5DD70]();
}

uint64_t sub_20E4A56FC()
{
  return MEMORY[0x24BE5DE30]();
}

uint64_t sub_20E4A5708()
{
  return MEMORY[0x24BE5DE38]();
}

uint64_t sub_20E4A5714()
{
  return MEMORY[0x24BE5DE40]();
}

uint64_t sub_20E4A5720()
{
  return MEMORY[0x24BE5DE48]();
}

uint64_t sub_20E4A572C()
{
  return MEMORY[0x24BE5DE68]();
}

uint64_t sub_20E4A5738()
{
  return MEMORY[0x24BE5DE80]();
}

uint64_t sub_20E4A5744()
{
  return MEMORY[0x24BE5DE90]();
}

uint64_t sub_20E4A5750()
{
  return MEMORY[0x24BE5DE98]();
}

uint64_t sub_20E4A575C()
{
  return MEMORY[0x24BE5DEA0]();
}

uint64_t sub_20E4A5768()
{
  return MEMORY[0x24BE5DEA8]();
}

uint64_t sub_20E4A5774()
{
  return MEMORY[0x24BE5DEB0]();
}

uint64_t sub_20E4A5780()
{
  return MEMORY[0x24BE5DEB8]();
}

uint64_t sub_20E4A578C()
{
  return MEMORY[0x24BE5DEC0]();
}

uint64_t sub_20E4A5798()
{
  return MEMORY[0x24BE5DEC8]();
}

uint64_t sub_20E4A57A4()
{
  return MEMORY[0x24BE5DED0]();
}

uint64_t sub_20E4A57B0()
{
  return MEMORY[0x24BE5DED8]();
}

uint64_t sub_20E4A57BC()
{
  return MEMORY[0x24BE5DEE0]();
}

uint64_t sub_20E4A57C8()
{
  return MEMORY[0x24BE5DEE8]();
}

uint64_t sub_20E4A57D4()
{
  return MEMORY[0x24BE5DEF0]();
}

uint64_t sub_20E4A57E0()
{
  return MEMORY[0x24BE5DEF8]();
}

uint64_t sub_20E4A57EC()
{
  return MEMORY[0x24BE5DF08]();
}

uint64_t sub_20E4A57F8()
{
  return MEMORY[0x24BE5DF10]();
}

uint64_t sub_20E4A5804()
{
  return MEMORY[0x24BE5DF28]();
}

uint64_t sub_20E4A5810()
{
  return MEMORY[0x24BE5DF38]();
}

uint64_t sub_20E4A581C()
{
  return MEMORY[0x24BE5DF50]();
}

uint64_t sub_20E4A5828()
{
  return MEMORY[0x24BE5DF60]();
}

uint64_t sub_20E4A5834()
{
  return MEMORY[0x24BE5DF78]();
}

uint64_t sub_20E4A5840()
{
  return MEMORY[0x24BE5DF88]();
}

uint64_t sub_20E4A584C()
{
  return MEMORY[0x24BE5DFA0]();
}

uint64_t sub_20E4A5858()
{
  return MEMORY[0x24BE5DFB0]();
}

uint64_t sub_20E4A5864()
{
  return MEMORY[0x24BE5DFB8]();
}

uint64_t sub_20E4A5870()
{
  return MEMORY[0x24BE5DFC0]();
}

uint64_t sub_20E4A587C()
{
  return MEMORY[0x24BE5DFC8]();
}

uint64_t sub_20E4A5888()
{
  return MEMORY[0x24BE5DFD8]();
}

uint64_t sub_20E4A5894()
{
  return MEMORY[0x24BE5DFE8]();
}

uint64_t sub_20E4A58A0()
{
  return MEMORY[0x24BE5DFF8]();
}

uint64_t sub_20E4A58AC()
{
  return MEMORY[0x24BE5E000]();
}

uint64_t sub_20E4A58B8()
{
  return MEMORY[0x24BE5E010]();
}

uint64_t sub_20E4A58C4()
{
  return MEMORY[0x24BE5E028]();
}

uint64_t sub_20E4A58D0()
{
  return MEMORY[0x24BE5E040]();
}

uint64_t sub_20E4A58DC()
{
  return MEMORY[0x24BE5E048]();
}

uint64_t sub_20E4A58E8()
{
  return MEMORY[0x24BE5E050]();
}

uint64_t sub_20E4A58F4()
{
  return MEMORY[0x24BE5E058]();
}

uint64_t sub_20E4A5900()
{
  return MEMORY[0x24BE5E068]();
}

uint64_t sub_20E4A590C()
{
  return MEMORY[0x24BE5E070]();
}

uint64_t sub_20E4A5918()
{
  return MEMORY[0x24BE5E080]();
}

uint64_t sub_20E4A5924()
{
  return MEMORY[0x24BE5E0A0]();
}

uint64_t sub_20E4A5930()
{
  return MEMORY[0x24BE5E0D0]();
}

uint64_t sub_20E4A593C()
{
  return MEMORY[0x24BE5E0E0]();
}

uint64_t sub_20E4A5948()
{
  return MEMORY[0x24BE5E0E8]();
}

uint64_t sub_20E4A5954()
{
  return MEMORY[0x24BE5E0F8]();
}

uint64_t sub_20E4A5960()
{
  return MEMORY[0x24BE5E100]();
}

uint64_t sub_20E4A596C()
{
  return MEMORY[0x24BE5E108]();
}

uint64_t sub_20E4A5978()
{
  return MEMORY[0x24BE5E118]();
}

uint64_t sub_20E4A5984()
{
  return MEMORY[0x24BE5E218]();
}

uint64_t sub_20E4A5990()
{
  return MEMORY[0x24BE5E248]();
}

uint64_t sub_20E4A599C()
{
  return MEMORY[0x24BE5E258]();
}

uint64_t sub_20E4A59A8()
{
  return MEMORY[0x24BE5E268]();
}

uint64_t sub_20E4A59B4()
{
  return MEMORY[0x24BE5E288]();
}

uint64_t sub_20E4A59C0()
{
  return MEMORY[0x24BE5E290]();
}

uint64_t sub_20E4A59CC()
{
  return MEMORY[0x24BE5E298]();
}

uint64_t sub_20E4A59D8()
{
  return MEMORY[0x24BE5E2A0]();
}

uint64_t sub_20E4A59E4()
{
  return MEMORY[0x24BE5E2A8]();
}

uint64_t sub_20E4A59F0()
{
  return MEMORY[0x24BE5E2B0]();
}

uint64_t sub_20E4A59FC()
{
  return MEMORY[0x24BE5E2B8]();
}

uint64_t sub_20E4A5A08()
{
  return MEMORY[0x24BE5E2C8]();
}

uint64_t sub_20E4A5A14()
{
  return MEMORY[0x24BE5E2D0]();
}

uint64_t sub_20E4A5A20()
{
  return MEMORY[0x24BE5E2D8]();
}

uint64_t sub_20E4A5A2C()
{
  return MEMORY[0x24BE5E2E0]();
}

uint64_t sub_20E4A5A38()
{
  return MEMORY[0x24BE5E2E8]();
}

uint64_t sub_20E4A5A44()
{
  return MEMORY[0x24BE5E2F0]();
}

uint64_t sub_20E4A5A50()
{
  return MEMORY[0x24BE5E2F8]();
}

uint64_t sub_20E4A5A5C()
{
  return MEMORY[0x24BE5E300]();
}

uint64_t sub_20E4A5A68()
{
  return MEMORY[0x24BE5E308]();
}

uint64_t sub_20E4A5A74()
{
  return MEMORY[0x24BE5E320]();
}

uint64_t sub_20E4A5A80()
{
  return MEMORY[0x24BE5E328]();
}

uint64_t sub_20E4A5A8C()
{
  return MEMORY[0x24BE5E338]();
}

uint64_t sub_20E4A5A98()
{
  return MEMORY[0x24BE5E410]();
}

uint64_t sub_20E4A5AA4()
{
  return MEMORY[0x24BE5E418]();
}

uint64_t sub_20E4A5AB0()
{
  return MEMORY[0x24BE5E420]();
}

uint64_t sub_20E4A5ABC()
{
  return MEMORY[0x24BE5E428]();
}

uint64_t sub_20E4A5AC8()
{
  return MEMORY[0x24BE5E430]();
}

uint64_t sub_20E4A5AD4()
{
  return MEMORY[0x24BE5E438]();
}

uint64_t sub_20E4A5AE0()
{
  return MEMORY[0x24BE5E440]();
}

uint64_t sub_20E4A5AEC()
{
  return MEMORY[0x24BE5E448]();
}

uint64_t sub_20E4A5AF8()
{
  return MEMORY[0x24BE5E450]();
}

uint64_t sub_20E4A5B04()
{
  return MEMORY[0x24BE5E460]();
}

uint64_t sub_20E4A5B10()
{
  return MEMORY[0x24BE5E468]();
}

uint64_t sub_20E4A5B1C()
{
  return MEMORY[0x24BE5E478]();
}

uint64_t sub_20E4A5B28()
{
  return MEMORY[0x24BE5E480]();
}

uint64_t sub_20E4A5B34()
{
  return MEMORY[0x24BE5E488]();
}

uint64_t sub_20E4A5B40()
{
  return MEMORY[0x24BE5E4A0]();
}

uint64_t sub_20E4A5B4C()
{
  return MEMORY[0x24BEE01C0]();
}

uint64_t sub_20E4A5B58()
{
  return MEMORY[0x24BDCF828]();
}

uint64_t sub_20E4A5B64()
{
  return MEMORY[0x24BDCF830]();
}

uint64_t sub_20E4A5B70()
{
  return MEMORY[0x24BEE02B0]();
}

uint64_t sub_20E4A5B7C()
{
  return MEMORY[0x24BEE0380]();
}

uint64_t sub_20E4A5B88()
{
  return MEMORY[0x24BEE0460]();
}

uint64_t sub_20E4A5B94()
{
  return MEMORY[0x24BEE04A8]();
}

uint64_t sub_20E4A5BA0()
{
  return MEMORY[0x24BEE0610]();
}

uint64_t sub_20E4A5BAC()
{
  return MEMORY[0x24BEE0618]();
}

uint64_t sub_20E4A5BB8()
{
  return MEMORY[0x24BEE0620]();
}

uint64_t sub_20E4A5BC4()
{
  return MEMORY[0x24BEE0740]();
}

uint64_t sub_20E4A5BD0()
{
  return MEMORY[0x24BEE0790]();
}

uint64_t sub_20E4A5BDC()
{
  return MEMORY[0x24BEE07D0]();
}

uint64_t sub_20E4A5BE8()
{
  return MEMORY[0x24BEE07D8]();
}

uint64_t sub_20E4A5BF4()
{
  return MEMORY[0x24BEE07E0]();
}

uint64_t sub_20E4A5C00()
{
  return MEMORY[0x24BEE07F0]();
}

uint64_t sub_20E4A5C0C()
{
  return MEMORY[0x24BEE0980]();
}

uint64_t sub_20E4A5C18()
{
  return MEMORY[0x24BDCF9E0]();
}

uint64_t sub_20E4A5C24()
{
  return MEMORY[0x24BDCFA08]();
}

uint64_t sub_20E4A5C30()
{
  return MEMORY[0x24BDCFA18]();
}

uint64_t sub_20E4A5C3C()
{
  return MEMORY[0x24BDCFA28]();
}

uint64_t sub_20E4A5C48()
{
  return MEMORY[0x24BDCFA78]();
}

uint64_t sub_20E4A5C54()
{
  return MEMORY[0x24BEE0A10]();
}

uint64_t sub_20E4A5C60()
{
  return MEMORY[0x24BEE0B20]();
}

uint64_t sub_20E4A5C6C()
{
  return MEMORY[0x24BEE0BC0]();
}

uint64_t sub_20E4A5C78()
{
  return MEMORY[0x24BEE0C10]();
}

uint64_t sub_20E4A5C84()
{
  return MEMORY[0x24BEE0DE8]();
}

uint64_t sub_20E4A5C90()
{
  return MEMORY[0x24BEE0DF8]();
}

uint64_t sub_20E4A5C9C()
{
  return MEMORY[0x24BEE0E40]();
}

uint64_t sub_20E4A5CA8()
{
  return MEMORY[0x24BEE0E50]();
}

uint64_t sub_20E4A5CB4()
{
  return MEMORY[0x24BEE0E58]();
}

uint64_t sub_20E4A5CC0()
{
  return MEMORY[0x24BEE0E70]();
}

uint64_t sub_20E4A5CCC()
{
  return MEMORY[0x24BEE0E90]();
}

uint64_t sub_20E4A5CD8()
{
  return MEMORY[0x24BEE0E98]();
}

uint64_t sub_20E4A5CE4()
{
  return MEMORY[0x24BEE0ED0]();
}

uint64_t sub_20E4A5CF0()
{
  return MEMORY[0x24BEE0EE0]();
}

uint64_t sub_20E4A5CFC()
{
  return MEMORY[0x24BEE0EE8]();
}

uint64_t sub_20E4A5D08()
{
  return MEMORY[0x24BEE0F40]();
}

uint64_t sub_20E4A5D14()
{
  return MEMORY[0x24BEE1110]();
}

uint64_t sub_20E4A5D20()
{
  return MEMORY[0x24BDCFBA8]();
}

uint64_t sub_20E4A5D2C()
{
  return MEMORY[0x24BDCFBC8]();
}

uint64_t sub_20E4A5D38()
{
  return MEMORY[0x24BEE1128]();
}

uint64_t sub_20E4A5D44()
{
  return MEMORY[0x24BEE1138]();
}

uint64_t sub_20E4A5D50()
{
  return MEMORY[0x24BEE1160]();
}

uint64_t sub_20E4A5D5C()
{
  return MEMORY[0x24BEE1178]();
}

uint64_t sub_20E4A5D68()
{
  return MEMORY[0x24BEE1180]();
}

uint64_t sub_20E4A5D74()
{
  return MEMORY[0x24BEE1190]();
}

uint64_t sub_20E4A5D80()
{
  return MEMORY[0x24BEE11B8]();
}

uint64_t sub_20E4A5D8C()
{
  return MEMORY[0x24BEE11C8]();
}

uint64_t sub_20E4A5D98()
{
  return MEMORY[0x24BEE1250]();
}

uint64_t sub_20E4A5DA4()
{
  return MEMORY[0x24BEE1288]();
}

uint64_t sub_20E4A5DB0()
{
  return MEMORY[0x24BEE1308]();
}

uint64_t sub_20E4A5DBC()
{
  return MEMORY[0x24BEE6800]();
}

uint64_t sub_20E4A5DC8()
{
  return MEMORY[0x24BEE6838]();
}

uint64_t sub_20E4A5DD4()
{
  return MEMORY[0x24BEE68C8]();
}

uint64_t sub_20E4A5DE0()
{
  return MEMORY[0x24BEE68D8]();
}

uint64_t sub_20E4A5DEC()
{
  return MEMORY[0x24BEE6920]();
}

uint64_t sub_20E4A5DF8()
{
  return MEMORY[0x24BEE6928]();
}

uint64_t sub_20E4A5E04()
{
  return MEMORY[0x24BEE6938]();
}

uint64_t sub_20E4A5E10()
{
  return MEMORY[0x24BEE6940]();
}

uint64_t sub_20E4A5E1C()
{
  return MEMORY[0x24BEE6948]();
}

uint64_t sub_20E4A5E28()
{
  return MEMORY[0x24BEE6968]();
}

uint64_t sub_20E4A5E34()
{
  return MEMORY[0x24BEE6970]();
}

uint64_t sub_20E4A5E40()
{
  return MEMORY[0x24BEE6980]();
}

uint64_t sub_20E4A5E4C()
{
  return MEMORY[0x24BEE6988]();
}

uint64_t sub_20E4A5E58()
{
  return MEMORY[0x24BEE6990]();
}

uint64_t sub_20E4A5E64()
{
  return MEMORY[0x24BEE6AD0]();
}

uint64_t sub_20E4A5E70()
{
  return MEMORY[0x24BEE6B10]();
}

uint64_t sub_20E4A5E7C()
{
  return MEMORY[0x24BEE6B20]();
}

uint64_t sub_20E4A5E88()
{
  return MEMORY[0x24BEE6C08]();
}

uint64_t sub_20E4A5E94()
{
  return MEMORY[0x24BEE6C90]();
}

uint64_t sub_20E4A5EA0()
{
  return MEMORY[0x24BEE6CC0]();
}

uint64_t sub_20E4A5EAC()
{
  return MEMORY[0x24BEE6CC8]();
}

uint64_t sub_20E4A5EB8()
{
  return MEMORY[0x24BEE6D30]();
}

uint64_t sub_20E4A5EC4()
{
  return MEMORY[0x24BEE1370]();
}

uint64_t sub_20E4A5ED0()
{
  return MEMORY[0x24BEE13A8]();
}

uint64_t sub_20E4A5EDC()
{
  return MEMORY[0x24BDCFCE8]();
}

uint64_t sub_20E4A5EE8()
{
  return MEMORY[0x24BEE15A8]();
}

uint64_t sub_20E4A5EF4()
{
  return MEMORY[0x24BEE1628]();
}

uint64_t sub_20E4A5F00()
{
  return MEMORY[0x24BEE1678]();
}

uint64_t sub_20E4A5F0C()
{
  return MEMORY[0x24BEE16D8]();
}

uint64_t sub_20E4A5F18()
{
  return MEMORY[0x24BEE16F8]();
}

uint64_t sub_20E4A5F24()
{
  return MEMORY[0x24BEE1860]();
}

uint64_t sub_20E4A5F30()
{
  return MEMORY[0x24BEE1870]();
}

uint64_t sub_20E4A5F3C()
{
  return MEMORY[0x24BEE18A0]();
}

uint64_t sub_20E4A5F48()
{
  return MEMORY[0x24BEE18D0]();
}

uint64_t sub_20E4A5F54()
{
  return MEMORY[0x24BEE18D8]();
}

uint64_t sub_20E4A5F60()
{
  return MEMORY[0x24BEE1910]();
}

uint64_t sub_20E4A5F6C()
{
  return MEMORY[0x24BEE1918]();
}

uint64_t sub_20E4A5F78()
{
  return MEMORY[0x24BEE1938]();
}

uint64_t sub_20E4A5F84()
{
  return MEMORY[0x24BEE1950]();
}

uint64_t sub_20E4A5F90()
{
  return MEMORY[0x24BEE1978]();
}

uint64_t sub_20E4A5F9C()
{
  return MEMORY[0x24BEE1980]();
}

uint64_t sub_20E4A5FA8()
{
  return MEMORY[0x24BEE19B8]();
}

uint64_t sub_20E4A5FB4()
{
  return MEMORY[0x24BEE1A18]();
}

uint64_t sub_20E4A5FC0()
{
  return MEMORY[0x24BEE1A28]();
}

uint64_t sub_20E4A5FCC()
{
  return MEMORY[0x24BEE1B68]();
}

uint64_t sub_20E4A5FD8()
{
  return MEMORY[0x24BDCFDC0]();
}

uint64_t sub_20E4A5FE4()
{
  return MEMORY[0x24BEE7920]();
}

uint64_t sub_20E4A5FF0()
{
  return MEMORY[0x24BEE5688]();
}

uint64_t sub_20E4A5FFC()
{
  return MEMORY[0x24BEE56B8]();
}

uint64_t sub_20E4A6008()
{
  return MEMORY[0x24BEE5760]();
}

uint64_t sub_20E4A6014()
{
  return MEMORY[0x24BEE5770]();
}

uint64_t sub_20E4A6020()
{
  return MEMORY[0x24BEE5790]();
}

uint64_t sub_20E4A602C()
{
  return MEMORY[0x24BEE57A0]();
}

uint64_t sub_20E4A6038()
{
  return MEMORY[0x24BEE7940]();
}

uint64_t sub_20E4A6044()
{
  return MEMORY[0x24BEE7948]();
}

uint64_t sub_20E4A6050()
{
  return MEMORY[0x24BEE7958]();
}

uint64_t sub_20E4A605C()
{
  return MEMORY[0x24BDD0078]();
}

uint64_t sub_20E4A6068()
{
  return MEMORY[0x24BDD0098]();
}

uint64_t sub_20E4A6074()
{
  return MEMORY[0x24BEBCDB0]();
}

uint64_t sub_20E4A6080()
{
  return MEMORY[0x24BEBCDB8]();
}

uint64_t sub_20E4A608C()
{
  return MEMORY[0x24BE5E540]();
}

uint64_t sub_20E4A6098()
{
  return MEMORY[0x24BE5E548]();
}

uint64_t sub_20E4A60A4()
{
  return MEMORY[0x24BE5E550]();
}

uint64_t sub_20E4A60B0()
{
  return MEMORY[0x24BEE5BC0]();
}

uint64_t sub_20E4A60BC()
{
  return MEMORY[0x24BEBD030]();
}

uint64_t sub_20E4A60C8()
{
  return MEMORY[0x24BEBD1C0]();
}

uint64_t sub_20E4A60D4()
{
  return MEMORY[0x24BEE7968]();
}

uint64_t sub_20E4A60E0()
{
  return MEMORY[0x24BEE1C68]();
}

uint64_t sub_20E4A60EC()
{
  return MEMORY[0x24BEE1E70]();
}

uint64_t sub_20E4A60F8()
{
  return MEMORY[0x24BEE1F00]();
}

uint64_t sub_20E4A6104()
{
  return MEMORY[0x24BEE1F48]();
}

uint64_t sub_20E4A6110()
{
  return MEMORY[0x24BEE20A8]();
}

uint64_t sub_20E4A611C()
{
  return MEMORY[0x24BEE22B0]();
}

uint64_t sub_20E4A6128()
{
  return MEMORY[0x24BEE22C0]();
}

uint64_t sub_20E4A6134()
{
  return MEMORY[0x24BEE22D0]();
}

uint64_t sub_20E4A6140()
{
  return MEMORY[0x24BEE2300]();
}

uint64_t sub_20E4A614C()
{
  return MEMORY[0x24BEE2358]();
}

uint64_t _s9JetEngine12MediaArtworkV01_aB8_SwiftUIE8CacheKeyV16debugDescriptionSSvg_0()
{
  return MEMORY[0x24BEE2398]();
}

uint64_t sub_20E4A6164()
{
  return MEMORY[0x24BEE23A0]();
}

uint64_t sub_20E4A6170()
{
  return MEMORY[0x24BEE23A8]();
}

uint64_t _s9JetEngine12MediaArtworkV01_aB8_SwiftUIE8CacheKeyV4hash4intoys6HasherVz_tF_0()
{
  return MEMORY[0x24BEE23B8]();
}

uint64_t sub_20E4A6188()
{
  return MEMORY[0x24BEE23E8]();
}

uint64_t sub_20E4A6194()
{
  return MEMORY[0x24BEE24F0]();
}

uint64_t sub_20E4A61A0()
{
  return MEMORY[0x24BEE2510]();
}

uint64_t sub_20E4A61AC()
{
  return MEMORY[0x24BEE2518]();
}

uint64_t sub_20E4A61B8()
{
  return MEMORY[0x24BEE2568]();
}

uint64_t sub_20E4A61C4()
{
  return MEMORY[0x24BEE2588]();
}

uint64_t sub_20E4A61D0()
{
  return MEMORY[0x24BEE2658]();
}

uint64_t sub_20E4A61DC()
{
  return MEMORY[0x24BEE2788]();
}

uint64_t sub_20E4A61E8()
{
  return MEMORY[0x24BEE2798]();
}

uint64_t sub_20E4A61F4()
{
  return MEMORY[0x24BEE2838]();
}

uint64_t sub_20E4A6200()
{
  return MEMORY[0x24BEE2950]();
}

uint64_t sub_20E4A620C()
{
  return MEMORY[0x24BEE29C0]();
}

uint64_t sub_20E4A6218()
{
  return MEMORY[0x24BEE2A00]();
}

uint64_t sub_20E4A6224()
{
  return MEMORY[0x24BEE2A08]();
}

uint64_t sub_20E4A6230()
{
  return MEMORY[0x24BEE6DC8]();
}

uint64_t sub_20E4A623C()
{
  return MEMORY[0x24BEE6E08]();
}

uint64_t sub_20E4A6248()
{
  return MEMORY[0x24BEE6E10]();
}

uint64_t sub_20E4A6254()
{
  return MEMORY[0x24BEE2AE0]();
}

uint64_t sub_20E4A6260()
{
  return MEMORY[0x24BEE2B20]();
}

uint64_t sub_20E4A626C()
{
  return MEMORY[0x24BEE2BE0]();
}

uint64_t sub_20E4A6278()
{
  return MEMORY[0x24BEE2C00]();
}

uint64_t sub_20E4A6284()
{
  return MEMORY[0x24BEE2F40]();
}

uint64_t sub_20E4A6290()
{
  return MEMORY[0x24BEE2F48]();
}

uint64_t sub_20E4A629C()
{
  return MEMORY[0x24BEE2FD8]();
}

uint64_t sub_20E4A62A8()
{
  return MEMORY[0x24BEE3068]();
}

uint64_t sub_20E4A62B4()
{
  return MEMORY[0x24BEE3080]();
}

uint64_t sub_20E4A62C0()
{
  return MEMORY[0x24BEE3088]();
}

uint64_t sub_20E4A62CC()
{
  return MEMORY[0x24BEE3098]();
}

uint64_t sub_20E4A62D8()
{
  return MEMORY[0x24BEE30B0]();
}

uint64_t sub_20E4A62E4()
{
  return MEMORY[0x24BEE3160]();
}

uint64_t sub_20E4A62F0()
{
  return MEMORY[0x24BEE3168]();
}

uint64_t sub_20E4A62FC()
{
  return MEMORY[0x24BEE31D0]();
}

uint64_t sub_20E4A6308()
{
  return MEMORY[0x24BEE3288]();
}

uint64_t sub_20E4A6314()
{
  return MEMORY[0x24BEE3568]();
}

uint64_t sub_20E4A6320()
{
  return MEMORY[0x24BEE3598]();
}

uint64_t sub_20E4A632C()
{
  return MEMORY[0x24BEE7058]();
}

uint64_t sub_20E4A6338()
{
  return MEMORY[0x24BEE3880]();
}

uint64_t sub_20E4A6344()
{
  return MEMORY[0x24BEE3930]();
}

uint64_t sub_20E4A6350()
{
  return MEMORY[0x24BEE3A20]();
}

uint64_t sub_20E4A635C()
{
  return MEMORY[0x24BEE3A30]();
}

uint64_t sub_20E4A6368()
{
  return MEMORY[0x24BEE7098]();
}

uint64_t sub_20E4A6374()
{
  return MEMORY[0x24BEE3D48]();
}

uint64_t sub_20E4A6380()
{
  return MEMORY[0x24BEE3D90]();
}

uint64_t sub_20E4A638C()
{
  return MEMORY[0x24BEE3ED8]();
}

uint64_t sub_20E4A6398()
{
  return MEMORY[0x24BEE7110]();
}

uint64_t sub_20E4A63A4()
{
  return MEMORY[0x24BEE7118]();
}

uint64_t sub_20E4A63B0()
{
  return MEMORY[0x24BDD06E0]();
}

uint64_t sub_20E4A63BC()
{
  return MEMORY[0x24BDD06F0]();
}

uint64_t sub_20E4A63C8()
{
  return MEMORY[0x24BDD0708]();
}

uint64_t sub_20E4A63D4()
{
  return MEMORY[0x24BEE3EF8]();
}

uint64_t sub_20E4A63E0()
{
  return MEMORY[0x24BEE3F00]();
}

uint64_t sub_20E4A63EC()
{
  return MEMORY[0x24BEE3F08]();
}

uint64_t sub_20E4A63F8()
{
  return MEMORY[0x24BEE3F10]();
}

uint64_t sub_20E4A6404()
{
  return MEMORY[0x24BEE42D8]();
}

uint64_t sub_20E4A6410()
{
  return MEMORY[0x24BEE42E0]();
}

uint64_t sub_20E4A641C()
{
  return MEMORY[0x24BEE42F8]();
}

uint64_t sub_20E4A6428()
{
  return MEMORY[0x24BEE4328]();
}

uint64_t sub_20E4A6434()
{
  return MEMORY[0x24BEE4898]();
}

uint64_t sub_20E4A6440()
{
  return MEMORY[0x24BEE48A0]();
}

uint64_t sub_20E4A644C()
{
  return MEMORY[0x24BEE4A18]();
}

uint64_t sub_20E4A6458()
{
  return MEMORY[0x24BEE4A98]();
}

uint64_t AMSLogableError()
{
  return MEMORY[0x24BE07E10]();
}

CFDictionaryRef CGImageSourceCopyPropertiesAtIndex(CGImageSourceRef isrc, size_t index, CFDictionaryRef options)
{
  return (CFDictionaryRef)MEMORY[0x24BDD9148](isrc, index, options);
}

CGImageRef CGImageSourceCreateImageAtIndex(CGImageSourceRef isrc, size_t index, CFDictionaryRef options)
{
  return (CGImageRef)MEMORY[0x24BDD9158](isrc, index, options);
}

CGImageSourceRef CGImageSourceCreateWithData(CFDataRef data, CFDictionaryRef options)
{
  return (CGImageSourceRef)MEMORY[0x24BDD9170](data, options);
}

size_t CGImageSourceGetCount(CGImageSourceRef isrc)
{
  return MEMORY[0x24BDD9188](isrc);
}

BOOL CGRectEqualToRect(CGRect rect1, CGRect rect2)
{
  return MEMORY[0x24BDBEFE0]((__n128)rect1.origin, *(__n128 *)&rect1.origin.y, (__n128)rect1.size, *(__n128 *)&rect1.size.height, (__n128)rect2.origin, *(__n128 *)&rect2.origin.y, (__n128)rect2.size, *(__n128 *)&rect2.size.height);
}

CGFloat CGRectGetHeight(CGRect rect)
{
  CGFloat result;

  MEMORY[0x24BDBEFE8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMinX(CGRect rect)
{
  CGFloat result;

  MEMORY[0x24BDBF010]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMinY(CGRect rect)
{
  CGFloat result;

  MEMORY[0x24BDBF018]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGRect CGRectIntegral(CGRect rect)
{
  double v1;
  double v2;
  double v3;
  double v4;
  CGRect result;

  MEMORY[0x24BDBF038]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  result.size.height = v4;
  result.size.width = v3;
  result.origin.y = v2;
  result.origin.x = v1;
  return result;
}

CGRect CGRectIntersection(CGRect r1, CGRect r2)
{
  double v2;
  double v3;
  double v4;
  double v5;
  CGRect result;

  MEMORY[0x24BDBF040]((__n128)r1.origin, *(__n128 *)&r1.origin.y, (__n128)r1.size, *(__n128 *)&r1.size.height, (__n128)r2.origin, *(__n128 *)&r2.origin.y, (__n128)r2.size, *(__n128 *)&r2.size.height);
  result.size.height = v5;
  result.size.width = v4;
  result.origin.y = v3;
  result.origin.x = v2;
  return result;
}

void UIAccessibilityPostNotification(UIAccessibilityNotifications notification, id argument)
{
  MEMORY[0x24BEBDE98](*(_QWORD *)&notification, argument);
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x24BDAC720](aBlock);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x24BDAC738](aBlock);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB90](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACC10](dso, log, type, spid, name, format, buf, *(_QWORD *)&size);
}

uint64_t _swift_isClassOrObjCExistentialType()
{
  return MEMORY[0x24BEE4B28]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x24BEE4B38]();
}

uint64_t _swift_stdlib_strtod_clocale()
{
  return MEMORY[0x24BEE4B48]();
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x24BDAD320](a1, a2);
}

void free(void *a1)
{
  MEMORY[0x24BDAE450](a1);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x24BDAED08](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x24BDAED60](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x24BDAEE80](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x24BDAEE98](__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x24BEDCF78](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD108](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD120](a1, a2);
}

uint64_t objc_opt_self()
{
  return MEMORY[0x24BEDD168]();
}

void objc_release(id a1)
{
  MEMORY[0x24BEDD188](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x24BEDD2A0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B8](a1);
}

void objc_storeStrong(id *location, id obj)
{
  MEMORY[0x24BEDD410](location, obj);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x24BDAF398](oslog, type);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
  MEMORY[0x24BDAF460](lock);
}

BOOL os_unfair_lock_trylock(os_unfair_lock_t lock)
{
  return MEMORY[0x24BDAF478](lock);
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
  MEMORY[0x24BDAF488](lock);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x24BEE4B58]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x24BEE4B68]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x24BEE4B70]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x24BEE4B78]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x24BEE4B80]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x24BEE4B98]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x24BEE4BA0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x24BEE4BA8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x24BEE4BB0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x24BEE4BB8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x24BEE4BC0]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x24BEE4BC8]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x24BEE4BD0]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x24BEE4BD8]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x24BEE4BE0]();
}

uint64_t swift_continuation_await()
{
  return MEMORY[0x24BEE71B8]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x24BEE71C0]();
}

uint64_t swift_continuation_throwingResume()
{
  return MEMORY[0x24BEE71D0]();
}

uint64_t swift_continuation_throwingResumeWithError()
{
  return MEMORY[0x24BEE71D8]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x24BEE4C00]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x24BEE4C10]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x24BEE4C38]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x24BEE4C60]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x24BEE4C98]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x24BEE4CA0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x24BEE4CA8]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x24BEE4CD0]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x24BEE4CD8]();
}

uint64_t swift_getAtKeyPath()
{
  return MEMORY[0x24BEE4CE8]();
}

uint64_t swift_getDynamicType()
{
  return MEMORY[0x24BEE4D00]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x24BEE4D08]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4D10]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x24BEE4D18]();
}

uint64_t swift_getExtendedExistentialTypeMetadata()
{
  return MEMORY[0x24BEE4D30]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x24BEE4D40]();
}

uint64_t swift_getFunctionTypeMetadata1()
{
  return MEMORY[0x24BEE4D60]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x24BEE4D80]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x24BEE4D88]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x24BEE4DA0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x24BEE4DB0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x24BEE4DB8]();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return MEMORY[0x24BEE4DC0]();
}

uint64_t swift_getOpaqueTypeMetadata2()
{
  return MEMORY[0x24BEE4DC8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x24BEE4DD0]();
}

uint64_t swift_getTupleTypeLayout2()
{
  return MEMORY[0x24BEE4DE0]();
}

uint64_t swift_getTupleTypeMetadata()
{
  return MEMORY[0x24BEE4DF0]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x24BEE4DF8]();
}

uint64_t swift_getTupleTypeMetadata3()
{
  return MEMORY[0x24BEE4E00]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x24BEE4E10]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x24BEE4E18]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x24BEE4E20]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x24BEE4E28]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x24BEE4E30]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x24BEE4E48]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x24BEE4E58]();
}

uint64_t swift_isClassType()
{
  return MEMORY[0x24BEE4E60]();
}

uint64_t swift_isUniquelyReferenced()
{
  return MEMORY[0x24BEE4E78]();
}

uint64_t swift_isUniquelyReferenced_native()
{
  return MEMORY[0x24BEE4E80]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x24BEE4E98]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x24BEE4EA8]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x24BEE4EB0]();
}

uint64_t swift_once()
{
  return MEMORY[0x24BEE4EC8]();
}

uint64_t swift_release()
{
  return MEMORY[0x24BEE4EF8]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x24BEE4F00]();
}

uint64_t swift_retain()
{
  return MEMORY[0x24BEE4F08]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x24BEE4F10]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x24BEE4F30]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x24BEE4F38]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x24BEE4F40]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x24BEE4F58]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4F60]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x24BEE7228]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x24BEE7230]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x24BEE7238]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x24BEE7278]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x24BEE4F68]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x24BEE4F70]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x24BEE4F80]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x24BEE4F88]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x24BEE4FB0]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x24BEE4FC8]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x24BEE4FD0]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x24BEE4FD8]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x24BEE5008]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x24BEE5028]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x24BEE5030]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x24BEE5038]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x24BEE5050]();
}

uint64_t swift_willThrowTypedImpl()
{
  return MEMORY[0x24BEE5058]();
}

