uint64_t destroy for _PlatformLoadingViewContent()
{
  return swift_release();
}

uint64_t getEnumTagSinglePayload for ImpressionableLayoutStyle(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

ValueMetadata *type metadata accessor for LoadingViewPresentationContext()
{
  return &type metadata for LoadingViewPresentationContext;
}

void sub_20E39B7D8(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_20E39B7E0()
{
  sub_20E39B880();
  return sub_20E4A3DD0();
}

uint64_t sub_20E39B830()
{
  sub_20E39B880();
  return sub_20E4A3D7C();
}

unint64_t sub_20E39B880()
{
  unint64_t result;

  result = qword_253ED29A0;
  if (!qword_253ED29A0)
  {
    result = MEMORY[0x212BBDF90](&unk_20E4AECD0, &type metadata for _PlatformLoadingViewContent);
    atomic_store(result, (unint64_t *)&qword_253ED29A0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for LoadingViewPresentationContext(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_20E39B910 + 4 * byte_20E4AE9C5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_20E39B944 + 4 * byte_20E4AE9C0[v4]))();
}

uint64_t sub_20E39B944(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20E39B94C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20E39B954);
  return result;
}

uint64_t sub_20E39B960(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20E39B968);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_20E39B96C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20E39B974(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for _ContentUnavailableBackgroundView()
{
  return &type metadata for _ContentUnavailableBackgroundView;
}

ValueMetadata *type metadata accessor for _PlatformLoadingViewContent()
{
  return &type metadata for _PlatformLoadingViewContent;
}

uint64_t sub_20E39B9A8(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2 & 1;
  return result;
}

uint64_t sub_20E39B9B4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t type metadata accessor for LoadingView.Implementation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LoadingView.Implementation);
}

void sub_20E39B9CC(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_20E39B9E0(uint64_t a1, uint64_t a2)
{
  uint64_t (**v2)(uint64_t);

  return sub_20E39C190(a1, a2, *v2);
}

uint64_t sub_20E39B9F4(_QWORD *a1)
{
  uint64_t v1;

  return sub_20E39BF44(a1, *(_QWORD *)(v1 + 16));
}

BOOL sub_20E39B9FC()
{
  uint64_t v0;

  return **(_QWORD **)(v0 + 16) == 0;
}

void sub_20E39BA10(double a1)
{
  id v1;

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16E0]), sel_initWithDouble_, a1);
  UIAccessibilityPostNotification(0x3EFu, v1);

}

uint64_t sub_20E39BA64@<X0>(uint64_t a1@<X8>)
{
  _BYTE *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  if (*v1 == 1)
  {
    v3 = sub_20E4A39F8();
    v4 = 256;
    result = sub_20E4A4088();
  }
  else
  {
    v3 = 0;
    result = 0;
    v4 = 2;
  }
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = result;
  return result;
}

id sub_20E39BABC@<X0>(_QWORD *a1@<X8>)
{
  objc_class *v1;
  id result;
  objc_super v4;

  v4.receiver = objc_allocWithZone(v1);
  v4.super_class = v1;
  result = objc_msgSendSuper2(&v4, sel_init);
  *a1 = result;
  return result;
}

uint64_t sub_20E39BB00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(unsigned __int8 *)(v0 + 64);
  j__swift_retain(v1);
  v3 = sub_20E39DC80(v1, v2);
  j__swift_release(v1, v2);
  return v3;
}

uint64_t sub_20E39BB54()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20E39BB90()
{
  uint64_t v0;
  uint64_t *v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(void (**)(uint64_t, uint64_t))(*v1 + 96);
  v3 = *(_QWORD *)(*v1 + 88);
  v4 = *(_QWORD *)(*v1 + 64);
  v5 = *v1;
  *(_QWORD *)(v5 + 112) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_20E39BC3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;

  *(_QWORD *)(v6 + 56) = v5;
  v12 = sub_20E4A6230();
  *(_QWORD *)(v6 + 64) = v12;
  *(_QWORD *)(v6 + 72) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v6 + 80) = swift_task_alloc();
  *(_QWORD *)(v6 + 88) = swift_task_alloc();
  *(_QWORD *)(v6 + 40) = a1;
  *(_QWORD *)(v6 + 48) = a2;
  *(_QWORD *)(v6 + 16) = a3;
  *(_QWORD *)(v6 + 24) = a4;
  *(_BYTE *)(v6 + 32) = a5 & 1;
  return swift_task_switch();
}

id sub_20E39BCE0()
{
  uint64_t ObjCClassFromMetadata;
  id result;

  type metadata accessor for ThisFramework();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  result = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  qword_253ED2A18 = (uint64_t)result;
  return result;
}

uint64_t sub_20E39BD34(uint64_t a1, char a2, int a3, int a4, id a5)
{
  if ((a2 & 1) != 0)
    return 0;
  objc_msgSend(a5, sel_intrinsicContentSize);
  return a1;
}

uint64_t View.loadingViewPresentationContext(_:)()
{
  swift_getKeyPath();
  sub_20E4A4250();
  return swift_release();
}

uint64_t sub_20E39BDF0()
{
  sub_20E39D050();
  swift_retain();
  return sub_20E4A3C14();
}

uint64_t sub_20E39BE4C(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  char v15;

  v2 = a2;
  v4 = *a2;
  v5 = a2[1];
  v6 = *((_BYTE *)a2 + 16);
  sub_20E39CFB8();
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  sub_20E39CED0();
  *(_BYTE *)(a1 + 24) = *((_BYTE *)v2 + 24);
  *(_QWORD *)(a1 + 32) = v2[4];
  swift_retain();
  swift_release();
  v7 = v2[5];
  LOBYTE(v5) = *((_BYTE *)v2 + 48);
  sub_20E39CFAC(v7, v5);
  v8 = *(_QWORD *)(a1 + 40);
  v9 = *(_BYTE *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = v7;
  *(_BYTE *)(a1 + 48) = v5;
  sub_20E39CED8(v8, v9);
  v10 = v2[7];
  LOBYTE(v5) = *((_BYTE *)v2 + 64);
  j__swift_retain(v10);
  v11 = *(_QWORD *)(a1 + 56);
  v12 = *(unsigned __int8 *)(a1 + 64);
  *(_QWORD *)(a1 + 56) = v10;
  *(_BYTE *)(a1 + 64) = v5;
  j__swift_release(v11, v12);
  v13 = (void *)v2[9];
  LOBYTE(v2) = *((_BYTE *)v2 + 80);
  sub_20E39CFA0(v13, (char)v2);
  v14 = *(void **)(a1 + 72);
  v15 = *(_BYTE *)(a1 + 80);
  *(_QWORD *)(a1 + 72) = v13;
  *(_BYTE *)(a1 + 80) = (_BYTE)v2;
  sub_20E39CE70(v14, v15);
  return a1;
}

uint64_t sub_20E39BF44(_QWORD *a1, uint64_t a2)
{
  uint64_t result;

  sub_20E4A59B4();
  swift_retain();
  result = swift_release();
  *a1 = a2;
  return result;
}

uint64_t LoadingView.init<>()@<X0>(uint64_t a1@<X8>)
{
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t result;
  char v5;
  uint64_t v6;

  sub_20E4A4640();
  KeyPath = swift_getKeyPath();
  v3 = swift_getKeyPath();
  result = swift_getKeyPath();
  *(_QWORD *)a1 = sub_20E39C368;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  *(_BYTE *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = KeyPath;
  *(_BYTE *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = v3;
  *(_BYTE *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 72) = result;
  *(_BYTE *)(a1 + 80) = 0;
  return result;
}

{
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t result;
  char v5;
  uint64_t v6;

  sub_20E4A4640();
  KeyPath = swift_getKeyPath();
  v3 = swift_getKeyPath();
  result = swift_getKeyPath();
  *(_QWORD *)a1 = nullsub_1;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = KeyPath;
  *(_BYTE *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = v3;
  *(_BYTE *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 72) = result;
  *(_BYTE *)(a1 + 80) = 0;
  return result;
}

uint64_t type metadata accessor for _PageRenderMetricsVisualizer()
{
  return objc_opt_self();
}

uint64_t LoadingView.pageRenderMetrics(_:)(uint64_t a1, uint64_t a2)
{
  swift_getKeyPath();
  *(_QWORD *)(swift_allocObject() + 16) = a1;
  swift_retain();
  MEMORY[0x212BBDF90](&protocol conformance descriptor for LoadingView<A>, a2);
  sub_20E4A4388();
  swift_release();
  return swift_release();
}

uint64_t sub_20E39C190(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t *boxed_opaque_existential_1Tm;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23[6];

  v22 = a1;
  v4 = sub_20E4A3BFC();
  v20 = *(_QWORD *)(v4 - 8);
  v21 = v4;
  MEMORY[0x24BDAC7A8]();
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20E4A350C();
  MEMORY[0x24BDAC7A8]();
  v7 = sub_20E4A3578();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8]();
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20E4A356C();
  sub_20E4A3500();
  v11 = sub_20E4A3518();
  v12 = a3(v11);
  v14 = v13;
  v16 = v15 & 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED2A00);
  sub_20E4A3FBC();
  sub_20E4A419C();
  sub_20E39D0D8(v12, v14, v16);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v6, v21);
  sub_20E4A3548();
  v23[3] = v7;
  v23[4] = MEMORY[0x24BEBC990];
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v23);
  (*(void (**)(uint64_t *, char *, uint64_t))(v8 + 16))(boxed_opaque_existential_1Tm, v10, v7);
  sub_20E4A6074();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_20E39C368()
{
  id v0;

  sub_20E4A3CA4();
  if (qword_253ED2A20 != -1)
    swift_once();
  v0 = (id)qword_253ED2A18;
  return sub_20E4A41B4();
}

uint64_t sub_20E39C434()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  _QWORD *v5;

  v1 = v0[10];
  v2 = v0[8];
  v3 = v0[9];
  sub_20E4A6248();
  sub_20E39F334(&qword_253ED2908, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6E10], MEMORY[0x24BEE6E20]);
  sub_20E4A6398();
  sub_20E39F334(&qword_253ED2A30, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6DC8], MEMORY[0x24BEE6E00]);
  sub_20E4A6254();
  v4 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[12] = v4;
  v4(v1, v2);
  v5 = (_QWORD *)swift_task_alloc();
  v0[13] = v5;
  *v5 = v0;
  v5[1] = sub_20E39BB90;
  return sub_20E4A63A4();
}

uint64_t sub_20E39C54C(uint64_t *a1, unint64_t a2, uint64_t a3)
{
  uint64_t *v5;
  uint64_t TupleTypeMetadata;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  __int128 *v12;
  _OWORD *v13;
  unint64_t v14;
  __int128 v15;
  unint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;

  v5 = (uint64_t *)(a3 & 0xFFFFFFFFFFFFFFFELL);
  if (a2 == 1)
  {
    TupleTypeMetadata = *v5;
    MEMORY[0x24BDAC7A8]();
    v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
LABEL_12:
    v22 = 32;
    v23 = a2;
    do
    {
      if (a2 == 1)
        v24 = 0;
      else
        v24 = *(_DWORD *)(TupleTypeMetadata + v22);
      v26 = *v5++;
      v25 = v26;
      v27 = *a1++;
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(&v8[v24], v27);
      v22 += 16;
      --v23;
    }
    while (v23);
    return sub_20E4A4928();
  }
  MEMORY[0x24BDAC7A8]();
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v11 = 0;
    if (a2 < 4)
      goto LABEL_9;
    if ((unint64_t)(v10 - (char *)v5) < 0x20)
      goto LABEL_9;
    v11 = a2 & 0xFFFFFFFFFFFFFFFCLL;
    v12 = (__int128 *)(v5 + 2);
    v13 = v10 + 16;
    v14 = a2 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      v15 = *v12;
      *(v13 - 1) = *(v12 - 1);
      *v13 = v15;
      v12 += 2;
      v13 += 2;
      v14 -= 4;
    }
    while (v14);
    if (v11 != a2)
    {
LABEL_9:
      v16 = a2 - v11;
      v17 = v11;
      v18 = &v10[8 * v11];
      v19 = &v5[v17];
      do
      {
        v20 = *v19++;
        *(_QWORD *)v18 = v20;
        v18 += 8;
        --v16;
      }
      while (v16);
    }
  }
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  MEMORY[0x24BDAC7A8]();
  v8 = (char *)&v29 - v21;
  if (a2)
    goto LABEL_12;
  return sub_20E4A4928();
}

double sub_20E39C700()
{
  void *v0;
  double Height;
  void *v2;
  id v3;
  void *v4;
  id v5;
  unint64_t v6;
  unint64_t v7;
  id v9;
  void *v10;
  unsigned __int8 v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  CGRect v25;

  v0 = (void *)sub_20E39D6BC();
  Height = 0.0;
  if (v0)
  {
    v2 = v0;
    v3 = objc_msgSend(v0, sel_scene);

    if (v3)
    {
      objc_opt_self();
      v4 = (void *)swift_dynamicCastObjCClass();
      if (v4)
      {
        v5 = objc_msgSend(v4, sel_windows);

        sub_20E4366D8(0, &qword_253ED2A28);
        v6 = sub_20E4A5D2C();

        if (v6 >> 62)
          goto LABEL_26;
        v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
        while (v7)
        {
          while (__OFSUB__(v7--, 1))
          {
            __break(1u);
LABEL_24:
            __break(1u);
LABEL_25:
            __break(1u);
LABEL_26:
            swift_bridgeObjectRetain();
            v7 = sub_20E4A62A8();
            swift_bridgeObjectRelease();
            if (!v7)
              goto LABEL_14;
          }
          if ((v6 & 0xC000000000000001) != 0)
          {
            v9 = (id)MEMORY[0x212BBD78C](v7, v6);
            goto LABEL_12;
          }
          if ((v7 & 0x8000000000000000) != 0)
            goto LABEL_24;
          if (v7 >= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_25;
          v9 = *(id *)(v6 + 32 + 8 * v7);
LABEL_12:
          v10 = v9;
          v11 = objc_msgSend(v9, sel_isKeyWindow);

          if ((v11 & 1) != 0)
          {
            v12 = (void *)sub_20E459D74(v7, v6);
            goto LABEL_17;
          }
        }
LABEL_14:
        v12 = 0;
LABEL_17:
        swift_bridgeObjectRelease();
        if (v12)
        {
          v13 = objc_msgSend(v12, sel_windowScene);
          if (v13)
          {
            v14 = v13;
            v15 = objc_msgSend(v13, sel_statusBarManager);

            if (v15)
            {
              objc_msgSend(v15, sel_statusBarFrame);
              v17 = v16;
              v19 = v18;
              v21 = v20;
              v23 = v22;

              v25.origin.x = v17;
              v25.origin.y = v19;
              v25.size.width = v21;
              v25.size.height = v23;
              Height = CGRectGetHeight(v25);
            }
          }

        }
      }
      else
      {

      }
    }
  }
  return Height;
}

uint64_t sub_20E39C9A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _QWORD v18[2];
  _QWORD v19[2];
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  if ((a3 & 1) != 0)
  {
    v21 = a1;
    v22 = a2;
    v12 = type metadata accessor for _CompatibilityLoadingViewContent(0, a4, a5, a4);
    MEMORY[0x212BBDF90](&unk_20E4AEC30, v12);
    sub_20E39CB9C();
    sub_20E39CBE0((uint64_t)&v21, v12, (uint64_t)&type metadata for _PlatformLoadingViewContent);
  }
  else
  {
    v23 = a1;
    v24 = a2;
    v9 = type metadata accessor for _CompatibilityLoadingViewContent(0, a4, a5, a4);
    v10 = MEMORY[0x212BBDF90](&unk_20E4AEC30, v9);
    sub_20E39D614(&v21, &v23, v9, v10);
    swift_retain();
    v23 = v21;
    v24 = v22;
    sub_20E39D618((uint64_t)&v23, v9, (uint64_t)v19);
    v18[0] = v19[0];
    v18[1] = v19[1];
    sub_20E39CB9C();
    sub_20E3DC6B0((uint64_t)v18, v9);
    sub_20E39CED0();
    swift_release();
    swift_release();
  }
  v13 = type metadata accessor for _CompatibilityLoadingViewContent(255, a4, a5, v11);
  v14 = sub_20E4A3E00();
  v15 = MEMORY[0x212BBDF90](&unk_20E4AEC30, v13);
  v16 = sub_20E39CB9C();
  v20[0] = v15;
  v20[1] = v16;
  MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v14, v20);
  sub_20E39D618((uint64_t)&v23, v14, a6);
  return sub_20E39CED0();
}

uint64_t type metadata accessor for _CompatibilityLoadingViewContent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _CompatibilityLoadingViewContent);
}

unint64_t sub_20E39CB9C()
{
  unint64_t result;

  result = qword_253ED2998;
  if (!qword_253ED2998)
  {
    result = MEMORY[0x212BBDF90](&unk_20E4AEC80, &type metadata for _PlatformLoadingViewContent);
    atomic_store(result, (unint64_t *)&qword_253ED2998);
  }
  return result;
}

uint64_t sub_20E39CBE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v7;

  sub_20E4A3DE8();
  MEMORY[0x24BDAC7A8]();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))((char *)&v7 - v5, a1, a3);
  swift_storeEnumTagMultiPayload();
  return sub_20E4A3DF4();
}

_QWORD *initializeBufferWithCopyOfBuffer for _PlatformLoadingViewContent(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t objectdestroy_16Tm()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = (int *)type metadata accessor for _MediaArtworkBody();
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = sub_20E4A4C70();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  sub_20E39CED8(*(_QWORD *)(v3 + v1[5]), *(_BYTE *)(v3 + v1[5] + 8));
  v5 = v3 + v1[6];
  if ((*(_BYTE *)(v5 + 40) & 1) != 0)
    __swift_destroy_boxed_opaque_existential_1(v5);
  else
    swift_release();
  sub_20E3CBDA8(*(_QWORD *)(v3 + v1[7]), *(_BYTE *)(v3 + v1[7] + 8));
  j__swift_release(*(_QWORD *)(v3 + v1[8]), *(unsigned __int8 *)(v3 + v1[8] + 8));
  return swift_deallocObject();
}

uint64_t objectdestroy_16Tm_0()
{
  uint64_t v0;

  sub_20E39CED0();
  swift_release();
  sub_20E39CED8(*(_QWORD *)(v0 + 72), *(_BYTE *)(v0 + 80));
  j__swift_release(*(_QWORD *)(v0 + 88), *(unsigned __int8 *)(v0 + 96));
  sub_20E39CE70(*(id *)(v0 + 104), *(_BYTE *)(v0 + 112));
  return swift_deallocObject();
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x212BBDEE8](a1, v6, a5);
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x212BBDF84](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

void sub_20E39CE70(id a1, char a2)
{
  if ((a2 & 1) != 0)

  else
    swift_release();
}

void sub_20E39CE7C(uint64_t a1)
{
  sub_20E39CED0();
  swift_release();
  sub_20E39CED8(*(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
  j__swift_release(*(_QWORD *)(a1 + 56), *(unsigned __int8 *)(a1 + 64));
  sub_20E39CE70(*(id *)(a1 + 72), *(_BYTE *)(a1 + 80));
}

uint64_t sub_20E39CED0()
{
  return swift_release();
}

uint64_t sub_20E39CED8(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) == 0)
    return swift_release();
  return result;
}

uint64_t sub_20E39CEE8(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v2 = a2;
  v4 = *a2;
  v5 = a2[1];
  v6 = *((_BYTE *)a2 + 16);
  sub_20E39CFB8();
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = *((_BYTE *)v2 + 24);
  v7 = v2[5];
  *(_QWORD *)(a1 + 32) = v2[4];
  LOBYTE(v5) = *((_BYTE *)v2 + 48);
  swift_retain();
  sub_20E39CFAC(v7, v5);
  *(_QWORD *)(a1 + 40) = v7;
  *(_BYTE *)(a1 + 48) = v5;
  v8 = v2[7];
  LOBYTE(v5) = *((_BYTE *)v2 + 64);
  j__swift_retain(v8);
  *(_QWORD *)(a1 + 56) = v8;
  *(_BYTE *)(a1 + 64) = v5;
  v9 = (void *)v2[9];
  LOBYTE(v2) = *((_BYTE *)v2 + 80);
  sub_20E39CFA0(v9, (char)v2);
  *(_QWORD *)(a1 + 72) = v9;
  *(_BYTE *)(a1 + 80) = (_BYTE)v2;
  return a1;
}

id sub_20E39CFA0(id a1, char a2)
{
  if ((a2 & 1) != 0)
    return a1;
  else
    return (id)swift_retain();
}

uint64_t sub_20E39CFAC(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) == 0)
    return swift_retain();
  return result;
}

uint64_t sub_20E39CFB8()
{
  return swift_retain();
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x212BBDF78]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t type metadata accessor for LoadingView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LoadingView);
}

uint64_t sub_20E39D010(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x212BBDF90](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_20E39D050()
{
  unint64_t result;

  result = qword_253ED29A8;
  if (!qword_253ED29A8)
  {
    result = MEMORY[0x212BBDF90](&unk_20E4AA8D0, &type metadata for PageRenderMetricsPresenterKey);
    atomic_store(result, (unint64_t *)&qword_253ED29A8);
  }
  return result;
}

unint64_t sub_20E39D094()
{
  unint64_t result;

  result = qword_253ED29B0;
  if (!qword_253ED29B0)
  {
    result = MEMORY[0x212BBDF90](&unk_20E4AEDE4, &type metadata for LoadingViewPresentationContextKey);
    atomic_store(result, (unint64_t *)&qword_253ED29B0);
  }
  return result;
}

uint64_t sub_20E39D0D8(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_release();
  else
    return swift_bridgeObjectRelease();
}

uint64_t View.automationSemantics(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = sub_20E4A4DCC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8]();
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20E4A5288();
  View._automationIdentifier(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t View._automationIdentifier(_:)()
{
  sub_20E4A4D9C();
  sub_20E4A43AC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_20E39D1F8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_20E39D234()
{
  unint64_t result;

  result = qword_253ED29B8;
  if (!qword_253ED29B8)
  {
    result = MEMORY[0x212BBDF90](&unk_20E4AEE54, &type metadata for _ContentUnavailableBackgroundView);
    atomic_store(result, (unint64_t *)&qword_253ED29B8);
  }
  return result;
}

uint64_t LoadingView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 *v2;
  __int128 v4;
  __int128 v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[2];
  _QWORD v35[2];
  _QWORD v36[2];
  _QWORD v37[2];
  _QWORD v38[2];
  _QWORD v39[2];
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  char v49;

  v4 = v2[3];
  v46 = v2[2];
  v47 = v4;
  v48 = v2[4];
  v49 = *((_BYTE *)v2 + 80);
  v5 = v2[1];
  v44 = *v2;
  v45 = v5;
  sub_20E39D8E4(&v40);
  if (v40 == 3)
    v6 = 0;
  else
    v6 = v40;
  v7 = swift_allocObject();
  v9 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(v7 + 16) = v9;
  *(_QWORD *)(v7 + 24) = v8;
  v10 = v47;
  *(_OWORD *)(v7 + 64) = v46;
  *(_OWORD *)(v7 + 80) = v10;
  *(_OWORD *)(v7 + 96) = v48;
  *(_BYTE *)(v7 + 112) = v49;
  v11 = v45;
  *(_OWORD *)(v7 + 32) = v44;
  *(_OWORD *)(v7 + 48) = v11;
  *(_BYTE *)(v7 + 113) = v6;
  sub_20E39D630((uint64_t)&v44);
  v12 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253ED2A40);
  v13 = MEMORY[0x24BDF4638];
  v40 = v12;
  v41 = MEMORY[0x24BDF4638];
  type metadata accessor for _CompatibilityLoadingViewContent(255, v9, v8, v14);
  sub_20E4A3E00();
  v42 = sub_20E4A39D4();
  v43 = v13;
  swift_getTupleTypeMetadata();
  v15 = sub_20E4A491C();
  MEMORY[0x212BBDF90](MEMORY[0x24BDF5428], v15);
  v16 = sub_20E4A470C();
  v17 = sub_20E4A39D4();
  v18 = sub_20E4A39D4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253ED29F8);
  v19 = sub_20E4A39D4();
  sub_20E4A4004();
  v20 = (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088];
  v21 = sub_20E4A39D4();
  v22 = sub_20E4A39D4();
  sub_20E4A3854();
  v23 = sub_20E4A39D4();
  v39[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDF4700], v16);
  v39[1] = MEMORY[0x24BDEDBB8];
  v24 = MEMORY[0x24BDED308];
  v38[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v17, v39);
  v38[1] = MEMORY[0x24BDF1050];
  v37[0] = MEMORY[0x212BBDF90](v24, v18, v38);
  v37[1] = sub_20E39D010(&qword_253ED29F0, &qword_253ED29F8, MEMORY[0x24BDEF370]);
  v25 = MEMORY[0x212BBDF90](v24, v19, v37);
  v26 = sub_20E39F334(qword_253ED27F8, v20, MEMORY[0x24BDF1078]);
  v36[0] = v25;
  v36[1] = v26;
  v35[0] = MEMORY[0x212BBDF90](v24, v21, v36);
  v35[1] = v26;
  v34[0] = MEMORY[0x212BBDF90](v24, v22, v35);
  v34[1] = sub_20E39F334(qword_253ED2910, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC4E0], MEMORY[0x24BDEC4C8]);
  MEMORY[0x212BBDF90](v24, v23, v34);
  v32 = sub_20E4A38A8();
  v33 = v27;
  v28 = sub_20E4A38B4();
  v29 = MEMORY[0x212BBDF90](MEMORY[0x24BDEC6F8], v28);
  sub_20E39D614(&v40, &v32, v28, v29);
  swift_release();
  v32 = v40;
  v33 = v41;
  sub_20E39D618((uint64_t)&v32, v28, a2);
  return swift_release();
}

uint64_t sub_20E39D618@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(a3, a1);
}

uint64_t sub_20E39D630(uint64_t a1)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  void *v5;
  char v6;

  v2 = *(_QWORD *)(a1 + 40);
  v3 = *(_BYTE *)(a1 + 48);
  v4 = *(_QWORD *)(a1 + 56);
  v5 = *(void **)(a1 + 72);
  v6 = *(_BYTE *)(a1 + 80);
  sub_20E39CFB8();
  swift_retain();
  sub_20E39CFAC(v2, v3);
  j__swift_retain(v4);
  sub_20E39CFA0(v5, v6);
  return a1;
}

uint64_t sub_20E39D6BC()
{
  uint64_t v0;
  void *v1;
  char v2;
  uint64_t v3;

  v1 = *(void **)(v0 + 72);
  v2 = *(_BYTE *)(v0 + 80);
  sub_20E39CFA0(v1, v2);
  v3 = sub_20E39D710(v1, v2);
  sub_20E39CE70(v1, v2);
  return v3;
}

uint64_t sub_20E39D710(void *a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  os_log_type_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  _QWORD v17[3];
  uint64_t v18;

  v4 = sub_20E4A3BFC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8]();
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    v15 = a1;
  }
  else
  {
    swift_retain();
    v8 = sub_20E4A5FE4();
    v9 = sub_20E4A4058();
    v10 = v8;
    if (os_log_type_enabled(v9, v8))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = swift_slowAlloc();
      v18 = v12;
      *(_DWORD *)v11 = 136315138;
      v17[1] = v11 + 4;
      __swift_instantiateConcreteTypeFromMangledName(qword_254A1B7F8);
      v13 = sub_20E4A6458();
      v17[2] = sub_20E45F228(v13, v14, &v18);
      sub_20E4A60F8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_20E399000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x212BBE068](v12, -1, -1);
      MEMORY[0x212BBE068](v11, -1, -1);
    }

    sub_20E4A3BF0();
    swift_getAtKeyPath();
    sub_20E39CE70(a1, 0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v18;
  }
  return (uint64_t)a1;
}

uint64_t sub_20E39D8E4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char v4;

  v3 = *(_QWORD *)(v1 + 40);
  v4 = *(_BYTE *)(v1 + 48);
  sub_20E39CFAC(v3, v4);
  sub_20E39D934(v3, v4, a1);
  return sub_20E39CED8(v3, v4);
}

uint64_t sub_20E39D934@<X0>(uint64_t a1@<X0>, char a2@<W1>, _BYTE *a3@<X8>)
{
  return sub_20E39D960(a1, a2, (void (*)(uint64_t, _QWORD))sub_20E39CFAC, 0xD000000000000028, 0x800000020E4CD390, (void (*)(_QWORD, _QWORD))sub_20E39CED8, a3);
}

uint64_t sub_20E39D960@<X0>(uint64_t a1@<X0>, char a2@<W1>, void (*a3)(uint64_t, _QWORD)@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, void (*a6)(_QWORD, _QWORD)@<X5>, _BYTE *a7@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  char *v18;
  os_log_type_t v19;
  NSObject *v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26[2];
  void (*v27)(_QWORD, _QWORD);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v14 = sub_20E4A3BFC();
  v15 = *(_QWORD *)(v14 - 8);
  result = MEMORY[0x24BDAC7A8]();
  v18 = (char *)v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    *a7 = a1;
  }
  else
  {
    v28 = a4;
    a3(a1, 0);
    v19 = sub_20E4A5FE4();
    v20 = sub_20E4A4058();
    if (os_log_type_enabled(v20, v19))
    {
      v26[1] = (unint64_t)a7;
      v21 = swift_slowAlloc();
      v26[0] = a5;
      v22 = (uint8_t *)v21;
      v23 = swift_slowAlloc();
      v27 = a6;
      v24 = v23;
      v30 = v23;
      *(_DWORD *)v22 = 136315138;
      v29 = sub_20E45F228(v28, v26[0], &v30);
      sub_20E4A60F8();
      _os_log_impl(&dword_20E399000, v20, v19, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v22, 0xCu);
      swift_arrayDestroy();
      v25 = v24;
      a6 = v27;
      MEMORY[0x212BBE068](v25, -1, -1);
      MEMORY[0x212BBE068](v22, -1, -1);
    }

    sub_20E4A3BF0();
    swift_getAtKeyPath();
    a6(a1, 0);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  }
  return result;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1Tm(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

__n128 __swift_memcpy81_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

unint64_t sub_20E39DBB0()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_253ED29E8;
  if (!qword_253ED29E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253ED29E0);
    v2 = sub_20E39DC14();
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDF5578], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_253ED29E8);
  }
  return result;
}

unint64_t sub_20E39DC14()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_253ED29D0;
  if (!qword_253ED29D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253ED29D8);
    v2[0] = sub_20E39DCA4();
    v2[1] = MEMORY[0x24BDF1050];
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_253ED29D0);
  }
  return result;
}

uint64_t sub_20E39DC80(uint64_t a1, char a2)
{
  return sub_20E45CD30(a1, a2, 0xD000000000000024, 0x800000020E4CD130, (void (*)(_QWORD, _QWORD))j__swift_release);
}

unint64_t sub_20E39DCA4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_253ED29C0;
  if (!qword_253ED29C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253ED29C8);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDEB358], v1);
    atomic_store(result, (unint64_t *)&qword_253ED29C0);
  }
  return result;
}

uint64_t type metadata accessor for _PageRenderMetricsPresenterVoiceOverAccessibility()
{
  return objc_opt_self();
}

void sub_20E39DD10()
{
  sub_20E39BA10(0.0);
}

uint64_t sub_20E39DD18()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E39DD28()
{
  return swift_allocateGenericValueMetadata();
}

_BYTE *sub_20E39DD30(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

BOOL sub_20E39DD38(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t type metadata accessor for ThisFramework()
{
  return objc_opt_self();
}

uint64_t sub_20E39DD70()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E39DDA4()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_20E39DDAC()
{
  return swift_allocateGenericValueMetadata();
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

void type metadata accessor for CGPoint(uint64_t a1)
{
  sub_20E39F15C(a1, qword_254A18138);
}

uint64_t sub_20E39DDD4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_20E4A4670();
  if (v1 <= 0x3F)
  {
    result = sub_20E4A4778();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_20E39DE60(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  unint64_t v10;
  int v11;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_DWORD *)(v6 + 80);
  v9 = v8;
  if (((v9 + 16) & (unint64_t)~v9) + v7 <= ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8)
    v10 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  else
    v10 = ((v8 + 16) & ~(unint64_t)v8) + v7;
  v11 = v8 & 0x100000;
  if (v9 > 7 || v11 != 0 || v10 + 1 > 0x18)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v14 + ((v9 & 0xF8 ^ 0x1F8) & (v9 + 16)));
LABEL_21:
    swift_retain();
    return v4;
  }
  v15 = *((unsigned __int8 *)a2 + v10);
  if (v15 >= 2)
  {
    if (v10 <= 3)
      v16 = v10;
    else
      v16 = 4;
    __asm { BR              X14 }
  }
  if (v15 != 1)
  {
    (*(void (**)(uint64_t *, uint64_t *, _QWORD))(v6 + 16))(a1, a2, *(_QWORD *)(a3 + 16));
    *(_QWORD *)(((unint64_t)v4 + v7 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFF8);
    *((_BYTE *)v4 + v10) = 0;
    goto LABEL_21;
  }
  *a1 = *a2;
  v17 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v18 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v17 = *v18;
  v19 = ((unint64_t)v17 + v9 + 8) & ~v9;
  v20 = ((unint64_t)v18 + v9 + 8) & ~v9;
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  swift_retain();
  swift_retain();
  v21(v19, v20, v5);
  *((_BYTE *)v4 + v10) = 1;
  return v4;
}

uint64_t sub_20E39E01C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = ((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v7 = *(unsigned __int8 *)(v4 + 80);
  if (((v7 + 16) & (unint64_t)~v7) + v5 > v6)
    v6 = ((v7 + 16) & ~v7) + v5;
  v8 = *(unsigned __int8 *)(a1 + v6);
  if (v8 >= 2)
  {
    if (v6 <= 3)
      v9 = v6;
    else
      v9 = 4;
    __asm { BR              X13 }
  }
  if (v8 == 1)
  {
    swift_release();
    swift_release();
    return (*(uint64_t (**)(unint64_t, uint64_t))(v4 + 8))((((a1 + 15) & 0xFFFFFFFFFFFFFFF8) + v7 + 8) & ~v7, v3);
  }
  else
  {
    (*(void (**)(uint64_t, _QWORD))(v4 + 8))(a1, *(_QWORD *)(a2 + 16));
    return swift_release();
  }
}

_QWORD *sub_20E39E150(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unsigned int v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  char v17;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(unsigned __int8 *)(v6 + 80);
  if (((v8 + 16) & (unint64_t)~v8) + v7 <= ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8)
    v9 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  else
    v9 = ((v8 + 16) & ~v8) + v7;
  v10 = *((unsigned __int8 *)a2 + v9);
  if (v10 >= 2)
  {
    if (v9 <= 3)
      v11 = v9;
    else
      v11 = 4;
    __asm { BR              X14 }
  }
  if (v10 == 1)
  {
    *a1 = *a2;
    v12 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    v13 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v12 = *v13;
    v14 = ((unint64_t)v12 + v8 + 8) & ~v8;
    v15 = ((unint64_t)v13 + v8 + 8) & ~v8;
    v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
    swift_retain();
    swift_retain();
    v16(v14, v15, v5);
    v17 = 1;
  }
  else
  {
    (*(void (**)(_QWORD *, _QWORD *, _QWORD))(v6 + 16))(a1, a2, *(_QWORD *)(a3 + 16));
    *(_QWORD *)(((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFF8);
    swift_retain();
    v17 = 0;
  }
  *((_BYTE *)a1 + v9) = v17;
  return a1;
}

_QWORD *sub_20E39E2D4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(_QWORD *)(v6 + 64);
    v8 = *(unsigned __int8 *)(v6 + 80);
    if (((v8 + 16) & (unint64_t)~v8) + v7 <= ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8)
      v9 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    else
      v9 = ((v8 + 16) & ~v8) + v7;
    v10 = *((unsigned __int8 *)a1 + v9);
    if (v10 >= 2)
    {
      if (v9 <= 3)
        v11 = v9;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    v12 = ~v8;
    if (v10 == 1)
    {
      swift_release();
      swift_release();
      (*(void (**)(unint64_t, uint64_t))(v6 + 8))(((((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8) + v8 + 8) & v12, v5);
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
      swift_release();
    }
    v13 = *((unsigned __int8 *)a2 + v9);
    if (v13 >= 2)
    {
      if (v9 <= 3)
        v14 = v9;
      else
        v14 = 4;
      __asm { BR              X12 }
    }
    if (v13 == 1)
    {
      *a1 = *a2;
      v15 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
      v16 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
      *v15 = *v16;
      v17 = ((unint64_t)v15 + v8 + 8) & v12;
      v18 = ((unint64_t)v16 + v8 + 8) & v12;
      v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
      swift_retain();
      swift_retain();
      v19(v17, v18, v5);
      *((_BYTE *)a1 + v9) = 1;
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 16))(a1, a2, v5);
      *(_QWORD *)(((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFF8);
      *((_BYTE *)a1 + v9) = 0;
      swift_retain();
    }
  }
  return a1;
}

_QWORD *sub_20E39E56C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  char v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(unsigned __int8 *)(v5 + 80);
  if (((v7 + 16) & (unint64_t)~v7) + v6 <= ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8)
    v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  else
    v8 = ((v7 + 16) & ~v7) + v6;
  v9 = *((unsigned __int8 *)a2 + v8);
  if (v9 >= 2)
  {
    if (v8 <= 3)
      v10 = v8;
    else
      v10 = 4;
    __asm { BR              X14 }
  }
  if (v9 == 1)
  {
    *a1 = *a2;
    v11 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    v12 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v11 = *v12;
    (*(void (**)(unint64_t, unint64_t))(v5 + 32))(((unint64_t)v11 + v7 + 8) & ~v7, ((unint64_t)v12 + v7 + 8) & ~v7);
    v13 = 1;
  }
  else
  {
    (*(void (**)(_QWORD *, _QWORD *))(v5 + 32))(a1, a2);
    v13 = 0;
    *(_QWORD *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
  }
  *((_BYTE *)a1 + v8) = v13;
  return a1;
}

uint64_t *sub_20E39E6C0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  char v18;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(_QWORD *)(v6 + 64);
    v8 = *(unsigned __int8 *)(v6 + 80);
    if (((v8 + 16) & (unint64_t)~v8) + v7 <= ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8)
      v9 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    else
      v9 = ((v8 + 16) & ~v8) + v7;
    v10 = *((unsigned __int8 *)a1 + v9);
    if (v10 >= 2)
    {
      if (v9 <= 3)
        v11 = v9;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    v12 = ~v8;
    if (v10 == 1)
    {
      swift_release();
      swift_release();
      (*(void (**)(unint64_t, uint64_t))(v6 + 8))(((((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8) + v8 + 8) & v12, v5);
    }
    else
    {
      (*(void (**)(uint64_t *, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
      swift_release();
    }
    v13 = *((unsigned __int8 *)a2 + v9);
    if (v13 >= 2)
    {
      if (v9 <= 3)
        v14 = v9;
      else
        v14 = 4;
      __asm { BR              X12 }
    }
    if (v13 == 1)
    {
      v16 = *a2;
      v15 = (unint64_t)a2 + 15;
      *a1 = v16;
      v17 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
      *v17 = *(_QWORD *)(v15 & 0xFFFFFFFFFFFFFFF8);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 32))(((unint64_t)v17 + v8 + 8) & v12, ((v15 & 0xFFFFFFFFFFFFFFF8) + v8 + 8) & v12, v5);
      v18 = 1;
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 32))(a1, a2, v5);
      v18 = 0;
      *(_QWORD *)(((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFF8);
    }
    *((_BYTE *)a1 + v9) = v18;
  }
  return a1;
}

uint64_t sub_20E39E940(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  char v8;
  int v9;
  unsigned int v11;
  int v12;
  unsigned int v13;

  v3 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v4 = *(_QWORD *)(v3 + 64);
  v5 = ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)) + v4;
  if (v5 <= ((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8)
    v6 = ((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  else
    v6 = v5;
  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_22;
  v7 = v6 + 1;
  v8 = 8 * (v6 + 1);
  if ((v6 + 1) <= 3)
  {
    v11 = ((a2 + ~(-1 << v8) - 254) >> v8) + 1;
    if (HIWORD(v11))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v11 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v11 < 2)
    {
LABEL_22:
      v13 = *(unsigned __int8 *)(a1 + v6);
      if (v13 >= 2)
        return (v13 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_22;
LABEL_15:
  v12 = (v9 - 1) << v8;
  if (v7 > 3)
    v12 = 0;
  if (!(_DWORD)v7)
    return (v12 + 255);
  if (v7 > 3)
    LODWORD(v7) = 4;
  return ((uint64_t (*)(void))((char *)&loc_20E39EA1C + 4 * byte_20E4A6F88[(v7 - 1)]))();
}

void sub_20E39EA68(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  size_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)) + v6;
  if (v7 <= ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8)
    v7 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v8 = v7 + 1;
  if (a3 < 0xFF)
  {
    v9 = 0;
  }
  else if (v8 <= 3)
  {
    v11 = ((a3 + ~(-1 << (8 * v8)) - 254) >> (8 * v8)) + 1;
    if (HIWORD(v11))
    {
      v9 = 4u;
    }
    else if (v11 >= 0x100)
    {
      v9 = 2;
    }
    else
    {
      v9 = v11 > 1;
    }
  }
  else
  {
    v9 = 1u;
  }
  if (a2 <= 0xFE)
    __asm { BR              X11 }
  v10 = a2 - 255;
  if (v8 < 4)
  {
    if ((_DWORD)v7 != -1)
    {
      v12 = v10 & ~(-1 << (8 * v8));
      bzero(a1, v8);
      if ((_DWORD)v8 == 3)
      {
        *a1 = v12;
        *((_BYTE *)a1 + 2) = BYTE2(v12);
      }
      else if ((_DWORD)v8 == 2)
      {
        *a1 = v12;
      }
      else
      {
        *(_BYTE *)a1 = v12;
      }
    }
  }
  else
  {
    bzero(a1, v7 + 1);
    *(_DWORD *)a1 = v10;
  }
  __asm { BR              X10 }
}

uint64_t sub_20E39EC28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  v4 = ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80)) + v3;
  if (v4 <= ((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8)
    v5 = ((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  else
    v5 = v4;
  if (*(unsigned __int8 *)(a1 + v5) < 2u)
    return *(unsigned __int8 *)(a1 + v5);
  if (v5 <= 3)
    v6 = v5;
  else
    v6 = 4;
  return ((uint64_t (*)(void))((char *)&loc_20E39EC88 + 4 * byte_20E4A6F96[v6]))();
}

void sub_20E39ECD0(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  size_t v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (a2 > 1)
  {
    v9 = *(_QWORD *)(v4 + 64);
    v10 = ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)) + v9;
    if (v10 <= ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 8)
      v11 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    else
      v11 = v10;
    v12 = a2 - 2;
    if (v11 < 4)
    {
      v13 = v12 >> (8 * v11);
      v14 = v12 & ~(-1 << (8 * v11));
      a1[v11] = v13 + 2;
      bzero(a1, v11);
      if ((_DWORD)v11 == 3)
      {
        *(_WORD *)a1 = v14;
        a1[2] = BYTE2(v14);
      }
      else if ((_DWORD)v11 == 2)
      {
        *(_WORD *)a1 = v14;
      }
      else
      {
        *a1 = v14;
      }
    }
    else
    {
      a1[v11] = 2;
      bzero(a1, v11);
      *(_DWORD *)a1 = v12;
    }
  }
  else
  {
    v5 = *(unsigned __int8 *)(v4 + 80);
    v6 = *(_QWORD *)(v4 + 64);
    v7 = ((v5 + 16) & ~v5) + v6;
    v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    if (v7 > v8)
      v8 = v7;
    a1[v8] = a2;
  }
}

uint64_t type metadata accessor for _StateOrBinding(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _StateOrBinding);
}

void type metadata accessor for Importance(uint64_t a1)
{
  sub_20E39F15C(a1, &qword_254A181C0);
}

uint64_t sub_20E39EDF8(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_20E39EE18(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_20E39F15C(a1, &qword_254A181C8);
}

uint64_t initializeBufferWithCopyOfBuffer for ShelfScrollGeometryProxy(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_20E39EE90(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_20E39EEB0(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
  sub_20E39F15C(a1, &qword_254A181D0);
}

uint64_t sub_20E39EEF0()
{
  return sub_20E4A39B0();
}

uint64_t sub_20E39EF08(uint64_t a1)
{
  MEMORY[0x212BBDF90](&unk_20E4A7250, a1);
  return sub_20E4A3458();
}

uint64_t sub_20E39EF44()
{
  MEMORY[0x212BBDF90](&unk_20E4A7250);
  return sub_20E4A344C();
}

uint64_t sub_20E39EF8C(uint64_t a1, uint64_t a2)
{
  sub_20E4A6410();
  MEMORY[0x212BBDF90](&unk_20E4A7250, a2);
  sub_20E4A344C();
  return sub_20E4A6428();
}

uint64_t sub_20E39EFE4(uint64_t a1, uint64_t a2)
{
  return sub_20E39F380(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF9E0]);
}

uint64_t sub_20E39EFF0(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_20E4A5C24();
  *a2 = 0;
  return result;
}

uint64_t sub_20E39F064(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_20E4A5C30();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_20E39F0E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_20E4A5C3C();
  v2 = sub_20E4A5C18();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

void type metadata accessor for CFString(uint64_t a1)
{
  sub_20E39F15C(a1, &qword_254A181D8);
}

void type metadata accessor for Name(uint64_t a1)
{
  sub_20E39F15C(a1, qword_253ED00B8);
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_20E39F15C(a1, &qword_254A181E0);
}

void sub_20E39F15C(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_20E39F1A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x212BBDF90](&unk_20E4A7250, a3);
  return sub_20E4A3440();
}

uint64_t sub_20E39F1EC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_20E4A5C18();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_20E39F230@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_20E4A5C3C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_20E39F258()
{
  sub_20E39F334(&qword_254A18210, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_20E4A7184);
  sub_20E39F334(&qword_254A18218, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_20E4A7124);
  return sub_20E4A62FC();
}

uint64_t sub_20E39F2DC()
{
  return sub_20E39F334(&qword_254A181E8, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_20E4A70E8);
}

uint64_t sub_20E39F308()
{
  return sub_20E39F334(&qword_254A181F0, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_20E4A70BC);
}

uint64_t sub_20E39F334(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x212BBDF90](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20E39F374(uint64_t a1, uint64_t a2)
{
  return sub_20E39F380(a1, a2, MEMORY[0x24BEE0CD8]);
}

uint64_t sub_20E39F380(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_20E4A5C3C();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_20E39F3BC()
{
  sub_20E4A5C3C();
  sub_20E4A5C60();
  return swift_bridgeObjectRelease();
}

uint64_t sub_20E39F3FC()
{
  uint64_t v0;

  sub_20E4A5C3C();
  sub_20E4A6410();
  sub_20E4A5C60();
  v0 = sub_20E4A6428();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_20E39F46C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_20E4A5C3C();
  v2 = v1;
  if (v0 == sub_20E4A5C3C() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_20E4A635C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_20E39F4F4()
{
  return sub_20E39F334(&qword_254A181F8, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_20E4A7158);
}

uint64_t sub_20E39F520()
{
  return sub_20E39F334(&qword_254A18200, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_20E4A727C);
}

uint64_t sub_20E39F54C()
{
  return sub_20E39F334(&qword_254A18208, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_20E4A7224);
}

uint64_t View.impressionable(_:configuration:position:definesParentContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v47[2];

  v43 = a7;
  v41 = a5;
  v39 = a4;
  v46 = a3;
  v40 = a2;
  v44 = a8;
  v10 = sub_20E4A5450();
  v37 = *(_QWORD *)(v10 - 8);
  v38 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_20E4A5174();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CC8);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for ImpressionableViewModifier(0);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (uint64_t *)((char *)&v36 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v42 = a6;
  v23 = sub_20E4A39D4();
  v36 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)&v36 - v24;
  v45 = a1;
  sub_20E3A5E20(a1, (uint64_t)v19, &qword_253ED0CC8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v19, 1, v13) == 1)
  {
    v26 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v27 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    v27(v16, v19, v13);
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0D60);
    v28 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_20E4A72D0;
    v27((char *)(v26 + v28), v16, v13);
  }
  v29 = v39 & 1;
  (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v12, v40, v38);
  v30 = (uint64_t)v12;
  v31 = v46;
  sub_20E39F87C(v26, v30, v46, v29, v41 & 1, v22);
  v32 = v43;
  MEMORY[0x212BBBA70](v22, v42, v20, v43);
  sub_20E39FAD4((uint64_t)v22);
  v33 = sub_20E39F334(&qword_254A18220, type metadata accessor for ImpressionableViewModifier, (uint64_t)&unk_20E4A73D8);
  v47[0] = v32;
  v47[1] = v33;
  v34 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v23, v47);
  View.impressionableClickLocation(impressionMetrics:position:)(v45, v31, v29, v23, v34);
  return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v25, v23);
}

uint64_t type metadata accessor for ImpressionableViewModifier(uint64_t a1)
{
  return sub_20E3A4CD0(a1, qword_253ED0028);
}

uint64_t sub_20E39F87C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, int a5@<W4>, _QWORD *a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  int *v16;
  char *v17;
  uint64_t *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  void (*v23)(char *, uint64_t);
  uint64_t *v24;
  char *v25;
  uint64_t v26;
  uint64_t result;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  int v32;
  __int16 v33;
  __int16 v34;
  uint64_t v35;

  v31 = a4;
  v32 = a5;
  v30 = a3;
  v9 = sub_20E4A33B0();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v29 - v14;
  v16 = (int *)type metadata accessor for ImpressionableViewModifier(0);
  v17 = (char *)a6 + v16[8];
  *(_QWORD *)v17 = swift_getKeyPath();
  *((_QWORD *)v17 + 1) = 0;
  *((_WORD *)v17 + 8) = 0;
  v18 = (_QWORD *)((char *)a6 + v16[9]);
  *v18 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
  swift_storeEnumTagMultiPayload();
  v19 = (char *)a6 + v16[10];
  *(_QWORD *)v19 = swift_getKeyPath();
  v19[8] = 0;
  v20 = (char *)a6 + v16[11];
  v33 = 0;
  sub_20E4A4640();
  v21 = v35;
  *(_WORD *)v20 = v34;
  *((_QWORD *)v20 + 1) = v21;
  sub_20E4A33A4();
  v22 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v22(v13, v15, v9);
  sub_20E4A4640();
  v23 = *(void (**)(char *, uint64_t))(v10 + 8);
  v23(v15, v9);
  sub_20E4A33A4();
  v22(v13, v15, v9);
  sub_20E4A4640();
  v23(v15, v9);
  v24 = (_QWORD *)((char *)a6 + v16[14]);
  *v24 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A20);
  swift_storeEnumTagMultiPayload();
  *a6 = a1;
  v25 = (char *)a6 + v16[5];
  v26 = sub_20E4A5450();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v25, a2, v26);
  v28 = (char *)a6 + v16[6];
  *(_QWORD *)v28 = v30;
  v28[8] = v31 & 1;
  *((_BYTE *)a6 + v16[7]) = v32;
  return result;
}

uint64_t sub_20E39FAD4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ImpressionableViewModifier(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t View.impressionableOpaqueContainer(_:configuration:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v16;

  v7 = sub_20E4A5450();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ImpressionableViewModifier(0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (uint64_t *)((char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a2, v7);
  v14 = swift_bridgeObjectRetain();
  sub_20E39F87C(v14, (uint64_t)v10, 0, 1, 0, v13);
  MEMORY[0x212BBBA70](v13, a3, v11, a4);
  return sub_20E39FAD4((uint64_t)v13);
}

uint64_t View.impressionable(_:configuration:position:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v18;

  v13 = a4 & 1;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CC8);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v18 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20E4A5B40();
  View.impressionable(_:configuration:position:definesParentContext:)((uint64_t)v16, a2, a3, v13, 0, a5, a6, a7);
  return sub_20E39D1F8((uint64_t)v16, &qword_253ED0CC8);
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t View.impressionable<A>(_:configuration:position:definesParentContext:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, char a3@<W3>, int a4@<W4>, uint64_t a5@<X5>, uint64_t a6@<X7>, uint64_t a7@<X8>)
{
  int v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v17;

  v17 = a6;
  v12 = a3 & 1;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CC8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20E4A5B40();
  View.impressionable(_:configuration:position:definesParentContext:)((uint64_t)v15, a1, a2, v12, a4, a5, v17, a7);
  return sub_20E39D1F8((uint64_t)v15, &qword_253ED0CC8);
}

uint64_t View.impressionable(_:configuration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return View.impressionable(_:configuration:position:definesParentContext:)(a1, a2, 0, 1, 0, a3, a4, a5);
}

uint64_t View.impressionable(_:configuration:position:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  return View.impressionable(_:configuration:position:definesParentContext:)(a1, a2, a3, a4 & 1, 0, a5, a6, a7);
}

uint64_t View.impressionable(_:configuration:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;

  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CC8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20E4A5B40();
  View.impressionable(_:configuration:position:definesParentContext:)((uint64_t)v12, a2, 0, 1, 0, a3, a4, a5);
  return sub_20E39D1F8((uint64_t)v12, &qword_253ED0CC8);
}

uint64_t View.impressionable<A>(_:configuration:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CC8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20E4A5B40();
  View.impressionable(_:configuration:position:definesParentContext:)((uint64_t)v10, a1, 0, 1, 0, a2, a3, a4);
  return sub_20E39D1F8((uint64_t)v10, &qword_253ED0CC8);
}

uint64_t View.impressionable(_:minimumPercentVisible:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v8 = sub_20E4A5450();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v17 - v13;
  sub_20E4A542C();
  sub_20E4A5414();
  v15 = *(void (**)(char *, uint64_t))(v9 + 8);
  v15(v12, v8);
  View.impressionable(_:configuration:position:definesParentContext:)(a1, (uint64_t)v14, 0, 1, 0, a2, a3, a4);
  return ((uint64_t (*)(char *, uint64_t))v15)(v14, v8);
}

uint64_t sub_20E3A0128()
{
  sub_20E3A5DDC();
  return sub_20E4A3C08();
}

uint64_t sub_20E3A015C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unsigned int (*v60)(char *, uint64_t, uint64_t);
  uint64_t v61;
  void (*v62)(char *, uint64_t);
  char *v63;
  int *v64;
  uint64_t v65;
  char *v66;
  BOOL v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t, uint64_t);
  char *v70;
  uint64_t v71;
  uint64_t v73;
  char *v74;
  unsigned int (*v75)(char *, uint64_t, uint64_t);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t (*v81)(uint64_t, uint64_t, uint64_t);
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unsigned int (*v95)(char *, uint64_t, uint64_t);
  uint64_t v96;
  uint64_t v97;
  unsigned int v98;
  char *v99;
  uint64_t v100;
  void (*v101)(char *, uint64_t);
  char *v102;
  uint64_t v103;
  char *v104;
  void (*v105)(char *, uint64_t);
  char *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  _QWORD *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t KeyPath;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  _QWORD *v149;
  uint64_t *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  void *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  int v169;
  uint64_t v170;
  char *v171;
  void (*v172)(char *, uint64_t);
  void (*v173)(char *, uint64_t, uint64_t);
  uint64_t v174;
  uint64_t v175;
  uint64_t (**v176)();
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  char *v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  unsigned int (*v197)(char *, uint64_t, uint64_t);
  uint64_t v198;
  char *v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  char *v206;
  char *v207;
  char *v208;
  char *v209;
  char *v210;
  uint64_t v211;
  uint64_t v212;
  char *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  char *v218;
  uint64_t v219;
  char *v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  char *v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  char *v230;
  uint64_t v231;
  char *v232;
  uint64_t v233;
  char *v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  char *v239;
  uint64_t v240;
  char *v241;
  char *v242;
  uint64_t v243;
  int *v244;
  uint64_t v245;
  _QWORD v246[2];

  v236 = a1;
  v240 = a2;
  v237 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18308);
  MEMORY[0x24BDAC7A8](v237);
  v239 = (char *)&v179 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v243 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18310);
  v238 = *(_QWORD *)(v243 - 8);
  MEMORY[0x24BDAC7A8](v243);
  v230 = (char *)&v179 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v228 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18318);
  MEMORY[0x24BDAC7A8](v228);
  v183 = (char *)&v179 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v194 = sub_20E4A56E4();
  v198 = *(_QWORD *)(v194 - 8);
  MEMORY[0x24BDAC7A8](v194);
  v184 = (char *)&v179 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v193 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0D28);
  MEMORY[0x24BDAC7A8](v193);
  v229 = (uint64_t)&v179 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0D18);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v185 = (uint64_t)&v179 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v196 = (uint64_t)&v179 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v197 = (unsigned int (*)(char *, uint64_t, uint64_t))((char *)&v179 - v13);
  v192 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CE8);
  v191 = *(_QWORD *)(v192 - 8);
  MEMORY[0x24BDAC7A8](v192);
  v190 = (char *)&v179 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v233 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18320);
  MEMORY[0x24BDAC7A8](v233);
  v232 = (char *)&v179 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v226 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18328);
  MEMORY[0x24BDAC7A8](v226);
  v227 = (uint64_t)&v179 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v231 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18330);
  MEMORY[0x24BDAC7A8](v231);
  v224 = (char *)&v179 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v216 = type metadata accessor for _ImpressionableGeometryChange(0);
  MEMORY[0x24BDAC7A8](v216);
  v218 = (char *)&v179 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v211 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18338);
  MEMORY[0x24BDAC7A8](v211);
  v213 = (char *)&v179 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v212 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18340);
  MEMORY[0x24BDAC7A8](v212);
  v217 = (uint64_t)&v179 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v215 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18348);
  MEMORY[0x24BDAC7A8](v215);
  v220 = (char *)&v179 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v219 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18350);
  MEMORY[0x24BDAC7A8](v219);
  v221 = (uint64_t)&v179 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v225 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18358);
  v23 = MEMORY[0x24BDAC7A8](v225);
  v205 = (uint64_t)&v179 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v222 = (uint64_t)&v179 - v25;
  v244 = (int *)type metadata accessor for ImpressionableViewModifier(0);
  v203 = *((_QWORD *)v244 - 1);
  MEMORY[0x24BDAC7A8](v244);
  v204 = v26;
  v214 = (uint64_t)&v179 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v202 = sub_20E4A33B0();
  v201 = *(_QWORD *)(v202 - 8);
  MEMORY[0x24BDAC7A8](v202);
  v209 = (char *)&v179 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v189 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CE0);
  v188 = *(_QWORD *)(v189 - 8);
  MEMORY[0x24BDAC7A8](v189);
  v187 = (char *)&v179 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED2428);
  v30 = MEMORY[0x24BDAC7A8](v29);
  v210 = (char *)&v179 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v30);
  v199 = (char *)&v179 - v32;
  v245 = sub_20E4A5204();
  v235 = *(_QWORD *)(v245 - 8);
  v33 = *(_QWORD *)(v235 + 64);
  v34 = MEMORY[0x24BDAC7A8](v245);
  v241 = (char *)&v179 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = MEMORY[0x24BDAC7A8](v34);
  v206 = (char *)&v179 - v36;
  v37 = MEMORY[0x24BDAC7A8](v35);
  v200 = (char *)&v179 - v38;
  v39 = MEMORY[0x24BDAC7A8](v37);
  v207 = (char *)&v179 - v40;
  v41 = MEMORY[0x24BDAC7A8](v39);
  v208 = (char *)&v179 - v42;
  MEMORY[0x24BDAC7A8](v41);
  v242 = (char *)&v179 - v43;
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CF0);
  v45 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v47 = (char *)&v179 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = sub_20E4A5384();
  v49 = *(_QWORD *)(v48 - 8);
  v50 = MEMORY[0x24BDAC7A8](v48);
  v52 = (char *)&v179 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = MEMORY[0x24BDAC7A8](v50);
  v186 = (uint64_t)&v179 - v54;
  MEMORY[0x24BDAC7A8](v53);
  v56 = (char *)&v179 - v55;
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18360);
  v58 = MEMORY[0x24BDAC7A8](v57);
  v234 = (char *)&v179 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(*(_QWORD *)v2 + 16))
  {
    v68 = v238;
    v69 = *(void (**)(char *, uint64_t, uint64_t))(v238 + 16);
    v70 = v230;
    v71 = v243;
    v69(v230, v236, v243);
    v69(v239, (uint64_t)v70, v71);
    swift_storeEnumTagMultiPayload();
    sub_20E3A517C();
    sub_20E39D010(&qword_254A183A8, &qword_254A18310, MEMORY[0x24BDEFB78]);
    sub_20E4A3DF4();
    return (*(uint64_t (**)(char *, uint64_t))(v68 + 8))(v70, v71);
  }
  v182 = v52;
  v195 = v58;
  v60 = (_QWORD *)(v2 + v244[9]);
  sub_20E45C27C((uint64_t)v56);
  sub_20E4A5330();
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CD0);
  MEMORY[0x212BBC94C](v246, v47, v61);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v47, v44);
  v62 = *(void (**)(char *, uint64_t))(v49 + 8);
  v62(v56, v48);
  v223 = v246[0];
  if (v246[0])
  {
    v197 = (unsigned int (*)(char *, uint64_t, uint64_t))v60;
    v229 = v246[1];
    v63 = v241;
    sub_20E4A51F8();
    v64 = v244;
    v65 = v2 + v244[5];
    sub_20E4A5444();
    v66 = v206;
    sub_20E4A51BC();
    swift_bridgeObjectRelease();
    v230 = *(char **)(v235 + 8);
    ((void (*)(char *, uint64_t))v230)(v63, v245);
    v67 = *(_BYTE *)(v2 + v64[7]) == 1;
    v198 = v65;
    v180 = v33;
    if (v67)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C68);
      v91 = (uint64_t)v199;
      sub_20E4A464C();
      v94 = v201;
      v93 = v202;
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v201 + 56))(v91, 0, 1, v202);
      v95 = *(_QWORD **)(v94 + 48);
      v96 = v91;
      v97 = v93;
    }
    else
    {
      v89 = v186;
      sub_20E45C27C(v186);
      v90 = v187;
      sub_20E4A5348();
      v91 = (uint64_t)v199;
      v92 = v202;
      MEMORY[0x212BBC958](v90, v202);
      (*(void (**)(char *, uint64_t))(v188 + 8))(v90, v189);
      v62((char *)v89, v48);
      v93 = v92;
      v94 = v201;
      v95 = *(_QWORD **)(v201 + 48);
      v96 = v91;
      v97 = v92;
    }
    v197 = (unsigned int (*)(char *, uint64_t, uint64_t))v95;
    v98 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v95)(v96, 1, v97);
    v99 = v200;
    if (v98 == 1)
    {
      sub_20E39D1F8(v91, &qword_253ED2428);
    }
    else
    {
      sub_20E4A3398();
      (*(void (**)(uint64_t, uint64_t))(v94 + 8))(v91, v93);
    }
    sub_20E4A51B0();
    swift_bridgeObjectRelease();
    v100 = v245;
    v101 = (void (*)(char *, uint64_t))v230;
    ((void (*)(char *, uint64_t))v230)(v66, v245);
    v102 = v207;
    sub_20E4A51C8();
    v101(v99, v100);
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C68);
    v103 = v2;
    v104 = v209;
    sub_20E4A464C();
    sub_20E4A3398();
    v105 = *(void (**)(char *, uint64_t))(v94 + 8);
    v105(v104, v93);
    v106 = v208;
    sub_20E4A51D4();
    swift_bridgeObjectRelease();
    v101(v102, v100);
    v107 = v2;
    v108 = v210;
    sub_20E45C2A8((uint64_t)v210);
    if (v197(v108, 1, v93) == 1)
    {
      sub_20E39D1F8((uint64_t)v108, &qword_253ED2428);
    }
    else
    {
      sub_20E4A3398();
      v105(v108, v93);
    }
    v109 = v204;
    v110 = v203;
    v111 = v180;
    v112 = v242;
    sub_20E4A51E0();
    swift_bridgeObjectRelease();
    v113 = v245;
    ((void (*)(char *, uint64_t))v230)(v106, v245);
    v114 = v103;
    v115 = v214;
    sub_20E3A6A14(v114, v214, type metadata accessor for ImpressionableViewModifier);
    v116 = v235;
    v210 = *(char **)(v235 + 16);
    v117 = v241;
    ((void (*)(char *, char *, uint64_t))v210)(v241, v112, v113);
    v118 = *(unsigned __int8 *)(v110 + 80);
    v202 = ((v118 + 16) & ~v118) + v109;
    v119 = (v118 + 16) & ~v118;
    v204 = v119;
    v120 = v118 | 7;
    v121 = (v202 + 7) & 0xFFFFFFFFFFFFFFF8;
    v122 = *(unsigned __int8 *)(v116 + 80);
    v207 = (char *)v121;
    v209 = (char *)(((v122 + v121 + 16) & ~v122) + v111);
    v123 = (v122 + v121 + 16) & ~v122;
    v206 = (char *)v123;
    v208 = (char *)(v120 | v122);
    v124 = swift_allocObject();
    sub_20E3A57AC(v115, v124 + v119, type metadata accessor for ImpressionableViewModifier);
    v125 = (_QWORD *)(v124 + v121);
    v126 = v223;
    *v125 = v223;
    v127 = v126;
    v125[1] = v229;
    v203 = v124;
    v235 = *(_QWORD *)(v116 + 32);
    ((void (*)(uint64_t, char *, uint64_t))v235)(v124 + v123, v117, v113);
    v128 = v107;
    KeyPath = swift_getKeyPath();
    sub_20E3A6A14(v107, v115, type metadata accessor for ImpressionableViewModifier);
    v130 = swift_allocObject();
    v131 = v204;
    sub_20E3A57AC(v115, v130 + v204, type metadata accessor for ImpressionableViewModifier);
    v132 = (uint64_t)v213;
    (*(void (**)(char *, uint64_t, uint64_t))(v238 + 16))(v213, v236, v243);
    v133 = (uint64_t *)(v132 + *(int *)(v211 + 36));
    *v133 = KeyPath;
    v133[1] = (uint64_t)sub_20E3A52F4;
    v133[2] = v130;
    v134 = swift_getKeyPath();
    v181 = v128;
    sub_20E3A6A14(v128, v115, type metadata accessor for ImpressionableViewModifier);
    v135 = swift_allocObject();
    v136 = v131;
    sub_20E3A57AC(v115, v135 + v131, type metadata accessor for ImpressionableViewModifier);
    v137 = v217;
    sub_20E3A5E20(v132, v217, &qword_254A18338);
    v138 = (uint64_t *)(v137 + *(int *)(v212 + 36));
    *v138 = v134;
    v138[1] = (uint64_t)sub_20E3A54F8;
    v138[2] = v135;
    v139 = v127;
    swift_unknownObjectRetain();
    sub_20E39D1F8(v132, &qword_254A18338);
    sub_20E4A5408();
    v141 = v140;
    sub_20E3A6A14(v128, v115, type metadata accessor for ImpressionableViewModifier);
    v142 = v241;
    v143 = v242;
    v144 = v245;
    ((void (*)(char *, char *, uint64_t))v210)(v241, v242, v245);
    v145 = swift_allocObject();
    sub_20E3A57AC(v115, v145 + v136, type metadata accessor for ImpressionableViewModifier);
    v146 = &v207[v145];
    v147 = v139;
    v148 = v229;
    *(_QWORD *)v146 = v139;
    *((_QWORD *)v146 + 1) = v148;
    ((void (*)(char *, char *, uint64_t))v235)(&v206[v145], v142, v144);
    v149 = v218;
    v150 = (uint64_t *)&v218[*(int *)(v216 + 24)];
    *v150 = swift_getKeyPath();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254A183F0);
    swift_storeEnumTagMultiPayload();
    *v149 = v141;
    v149[1] = sub_20E3A57A0;
    v149[2] = v145;
    v151 = (uint64_t)v220;
    sub_20E3A57AC((uint64_t)v149, (uint64_t)&v220[*(int *)(v215 + 36)], type metadata accessor for _ImpressionableGeometryChange);
    sub_20E3A5E20(v137, v151, &qword_254A18340);
    swift_unknownObjectRetain();
    sub_20E39D1F8(v137, &qword_254A18340);
    v152 = v181;
    sub_20E3A6A14(v181, v115, type metadata accessor for ImpressionableViewModifier);
    ((void (*)(char *, char *, uint64_t))v210)(v142, v143, v144);
    v153 = swift_allocObject();
    sub_20E3A57AC(v115, v153 + v204, type metadata accessor for ImpressionableViewModifier);
    v154 = &v207[v153];
    v155 = v229;
    *(_QWORD *)v154 = v147;
    *((_QWORD *)v154 + 1) = v155;
    ((void (*)(char *, char *, uint64_t))v235)(&v206[v153], v142, v144);
    v156 = swift_getKeyPath();
    v157 = v221;
    sub_20E3A5E20(v151, v221, &qword_254A18348);
    v158 = v157 + *(int *)(v219 + 36);
    *(_QWORD *)v158 = sub_20E3A57F4;
    *(_QWORD *)(v158 + 8) = v153;
    *(_QWORD *)(v158 + 16) = v156;
    *(_QWORD *)(v158 + 24) = 0;
    *(_WORD *)(v158 + 32) = 0;
    swift_unknownObjectRetain();
    sub_20E39D1F8(v151, &qword_254A18348);
    v159 = (uint64_t *)(v152 + v244[10]);
    v160 = *v159;
    v161 = *((unsigned __int8 *)v159 + 8);
    j__swift_retain(*v159);
    v162 = sub_20E45C2DC(v160, v161);
    j__swift_release(v160, v161);
    if (v162)
    {
      v163 = (void *)MEMORY[0x212BBE110](v162 + 16);
      swift_release();
    }
    else
    {
      v163 = 0;
    }
    v164 = (uint64_t)v232;
    v165 = (uint64_t)v224;
    v166 = v205;
    sub_20E3A25A0(v163, (uint64_t)sub_20E3A526C, v203, v205);

    sub_20E39D1F8(v157, &qword_254A18350);
    v167 = v222;
    sub_20E3A5894(v166, v222);
    sub_20E3A5E20(v167, v227, &qword_254A18358);
    swift_storeEnumTagMultiPayload();
    sub_20E3A4D88();
    sub_20E39D010(&qword_254A183D8, &qword_254A18318, (uint64_t)&protocol conformance descriptor for _RequirementFailureView<A, B>);
    sub_20E4A3DF4();
    sub_20E3A5E20(v165, v164, &qword_254A18330);
    swift_storeEnumTagMultiPayload();
    sub_20E3A4D04();
    sub_20E39D010(&qword_254A183A8, &qword_254A18310, MEMORY[0x24BDEFB78]);
    v86 = (uint64_t)v234;
    sub_20E4A3DF4();
    swift_unknownObjectRelease();
    swift_release();
    sub_20E39D1F8(v165, &qword_254A18330);
    sub_20E39D1F8(v167, &qword_254A18358);
    ((void (*)(char *, uint64_t))v230)(v242, v245);
    v85 = (uint64_t)v239;
    goto LABEL_27;
  }
  v73 = (uint64_t)v182;
  sub_20E45C27C((uint64_t)v182);
  v74 = v190;
  sub_20E4A5324();
  v75 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))v197;
  v76 = v194;
  MEMORY[0x212BBC958](v74, v194);
  (*(void (**)(char *, uint64_t))(v191 + 8))(v74, v192);
  v62((char *)v73, v48);
  v77 = v198;
  v78 = v196;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v198 + 104))(v196, *MEMORY[0x24BE5DCD8], v76);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v77 + 56))(v78, 0, 1, v76);
  v79 = v229;
  v80 = v229 + *(int *)(v193 + 48);
  sub_20E3A5E20((uint64_t)v75, v229, &qword_253ED0D18);
  sub_20E3A5E20(v78, v80, &qword_253ED0D18);
  v81 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v77 + 48);
  if (v81(v79, 1, v76) != 1)
  {
    v168 = v185;
    sub_20E3A5E20(v79, v185, &qword_253ED0D18);
    v169 = v81(v80, 1, v76);
    v83 = v243;
    v84 = v238;
    v85 = (uint64_t)v239;
    v86 = (uint64_t)v234;
    v88 = v230;
    if (v169 != 1)
    {
      v170 = v198;
      v171 = v184;
      (*(void (**)(char *, uint64_t, uint64_t))(v198 + 32))(v184, v80, v76);
      sub_20E39F334(&qword_254A183E8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5DCE8], MEMORY[0x24BE5DCF8]);
      LODWORD(v245) = sub_20E4A5C0C();
      v172 = *(void (**)(char *, uint64_t))(v170 + 8);
      v172(v171, v76);
      sub_20E39D1F8(v196, &qword_253ED0D18);
      sub_20E39D1F8((uint64_t)v197, &qword_253ED0D18);
      v172((char *)v168, v76);
      sub_20E39D1F8(v229, &qword_253ED0D18);
      v87 = v236;
      if ((v245 & 1) == 0)
        goto LABEL_25;
      goto LABEL_24;
    }
    sub_20E39D1F8(v196, &qword_253ED0D18);
    sub_20E39D1F8((uint64_t)v197, &qword_253ED0D18);
    (*(void (**)(uint64_t, uint64_t))(v198 + 8))(v168, v76);
    v87 = v236;
LABEL_22:
    sub_20E39D1F8(v229, &qword_253ED0D28);
    goto LABEL_25;
  }
  sub_20E39D1F8(v78, &qword_253ED0D18);
  sub_20E39D1F8((uint64_t)v75, &qword_253ED0D18);
  v82 = v81(v80, 1, v76);
  v83 = v243;
  v84 = v238;
  v85 = (uint64_t)v239;
  v86 = (uint64_t)v234;
  v87 = v236;
  v88 = v230;
  if (v82 != 1)
    goto LABEL_22;
  sub_20E39D1F8(v229, &qword_253ED0D18);
LABEL_24:
  sub_20E3A5200();
  if ((sub_20E4A60A4() & 1) == 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v84 + 16))(v88, v87, v83);
    v174 = swift_allocObject();
    *(_QWORD *)(v174 + 16) = 0xD00000000000002CLL;
    *(_QWORD *)(v174 + 24) = 0x800000020E4CA860;
    v175 = (uint64_t)v183;
    (*(void (**)(char *, char *, uint64_t))(v84 + 32))(v183, v88, v83);
    v176 = (uint64_t (**)())(v175 + *(int *)(v228 + 52));
    *v176 = sub_20E3A5260;
    v176[1] = (uint64_t (*)())v174;
    sub_20E3A5E20(v175, v227, &qword_254A18318);
    swift_storeEnumTagMultiPayload();
    sub_20E3A4D88();
    sub_20E39D010(&qword_254A183D8, &qword_254A18318, (uint64_t)&protocol conformance descriptor for _RequirementFailureView<A, B>);
    v177 = (uint64_t)v224;
    sub_20E4A3DF4();
    sub_20E3A5E20(v177, (uint64_t)v232, &qword_254A18330);
    swift_storeEnumTagMultiPayload();
    sub_20E3A4D04();
    sub_20E39D010(&qword_254A183A8, &qword_254A18310, MEMORY[0x24BDEFB78]);
    sub_20E4A3DF4();
    v178 = v177;
    v86 = (uint64_t)v234;
    sub_20E39D1F8(v178, &qword_254A18330);
    sub_20E39D1F8(v175, &qword_254A18318);
    goto LABEL_27;
  }
LABEL_25:
  v173 = *(void (**)(char *, uint64_t, uint64_t))(v84 + 16);
  v173(v88, v87, v83);
  v173(v232, (uint64_t)v88, v83);
  swift_storeEnumTagMultiPayload();
  sub_20E3A4D04();
  sub_20E39D010(&qword_254A183A8, &qword_254A18310, MEMORY[0x24BDEFB78]);
  sub_20E4A3DF4();
  (*(void (**)(char *, uint64_t))(v84 + 8))(v88, v83);
LABEL_27:
  sub_20E3A5E20(v86, v85, &qword_254A18360);
  swift_storeEnumTagMultiPayload();
  sub_20E3A517C();
  sub_20E39D010(&qword_254A183A8, &qword_254A18310, MEMORY[0x24BDEFB78]);
  sub_20E4A3DF4();
  return sub_20E39D1F8(v86, &qword_254A18360);
}

uint64_t sub_20E3A1A50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int v18;
  uint64_t v19;
  __int16 v20;
  uint64_t v21;
  char v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int16 v27;
  uint64_t v28;
  __int16 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t ObjectType;
  __int16 v48;
  uint64_t v49;
  __int16 v50;

  v44 = a4;
  v45 = a5;
  v46 = a3;
  ObjectType = a2;
  v6 = sub_20E4A338C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_20E4A5174();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_20E4A3668();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a1, v14);
  v18 = (*(uint64_t (**)(char *, uint64_t))(v15 + 88))(v17, v14);
  if (v18 == *MEMORY[0x24BDEB1D0])
  {
    v19 = ObjectType + *(int *)(type metadata accessor for ImpressionableViewModifier(0) + 44);
    v21 = *(_QWORD *)(v19 + 8);
    v48 = *(_WORD *)v19;
    v20 = v48;
    v49 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254A18400);
    sub_20E4A464C();
    v22 = v50;
    v48 = v20;
    v49 = v21;
    sub_20E4A464C();
    v48 = v20;
    v49 = v21;
    v50 = v50 & 0x100 | v22 & 1 | 0x8000;
    return sub_20E4A4658();
  }
  else
  {
    v38 = v10;
    v39 = v7;
    v24 = ObjectType;
    v43 = v11;
    v40 = v6;
    if (v18 == *MEMORY[0x24BDEB1E0])
    {
      v25 = ObjectType;
      v26 = v24 + *(int *)(type metadata accessor for ImpressionableViewModifier(0) + 44);
      v27 = *(_WORD *)v26;
      v28 = *(_QWORD *)(v26 + 8);
      v48 = *(_WORD *)v26;
      v49 = v28;
      __swift_instantiateConcreteTypeFromMangledName(&qword_254A18400);
      result = sub_20E4A464C();
      v29 = v50;
      if (v50 < 0)
      {
        v48 = v27;
        v49 = v28;
        v50 &= 0x101u;
        result = sub_20E4A4658();
        if ((v29 & 0x100) != 0)
        {
          v30 = *(_QWORD *)v25;
          v31 = *(_QWORD *)(*(_QWORD *)v25 + 16);
          if (v31)
          {
            ObjectType = swift_getObjectType();
            v32 = v30 + ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80));
            v33 = *(_QWORD *)(v43 + 72);
            v41 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 16);
            v42 = v33;
            v37 = v30;
            swift_bridgeObjectRetain();
            v35 = v39;
            v34 = v40;
            v36 = v38;
            do
            {
              v41(v13, v32, v36);
              sub_20E4A3380();
              sub_20E4A5210();
              (*(void (**)(char *, uint64_t))(v35 + 8))(v9, v34);
              (*(void (**)(char *, uint64_t))(v43 + 8))(v13, v36);
              v32 += v42;
              --v31;
            }
            while (v31);
            return swift_bridgeObjectRelease();
          }
        }
      }
    }
    else
    {
      return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    }
  }
  return result;
}

uint64_t sub_20E3A1D64(uint64_t a1)
{
  uint64_t v2;

  sub_20E39D1F8(a1, &qword_253ED2428);
  type metadata accessor for ImpressionableViewModifier(0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C68);
  sub_20E4A464C();
  v2 = sub_20E4A33B0();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 0, 1, v2);
}

uint64_t sub_20E3A1DDC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CE0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_20E4A33B0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = type metadata accessor for ImpressionableViewModifier(0);
  if (*(_BYTE *)(a2 + *(int *)(result + 28)) == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C68);
    sub_20E4A464C();
    sub_20E4A5348();
    sub_20E4A536C();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  return result;
}

uint64_t sub_20E3A1EFC(char a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int16 v32;
  uint64_t v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  __int16 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int16 v55;
  uint64_t v56;
  _QWORD v57[2];
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t ObjectType;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;

  v64 = a4;
  v9 = sub_20E4A338C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_20E4A5174();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for ImpressionableViewModifier(0);
  v60 = v13;
  if ((a1 & 1) == 0)
  {
    v59 = v10;
    v44 = (char *)a2 + *(int *)(v17 + 44);
    v45 = *(_WORD *)v44;
    v46 = *((_QWORD *)v44 + 1);
    LOWORD(v65) = v45;
    v66 = v46;
    LOWORD(v68) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254A18400);
    result = sub_20E4A4658();
    v47 = *a2;
    v48 = *(_QWORD *)(v47 + 16);
    if (!v48)
      return result;
    ObjectType = swift_getObjectType();
    v63 = a5;
    v49 = v47 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    v61 = *(_QWORD *)(v14 + 72);
    v50 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
    v58 = v47;
    swift_bridgeObjectRetain();
    v51 = v14;
    v53 = v59;
    v52 = v60;
    do
    {
      v50(v16, v49, v52);
      sub_20E4A3380();
      sub_20E4A521C();
      (*(void (**)(char *, uint64_t))(v53 + 8))(v12, v9);
      (*(void (**)(char *, uint64_t))(v51 + 8))(v16, v52);
      v49 += v61;
      --v48;
    }
    while (v48);
    return swift_bridgeObjectRelease();
  }
  v57[1] = a3;
  v58 = v14;
  ObjectType = (uint64_t)a2;
  v63 = a5;
  v18 = v17;
  v19 = (char *)a2 + *(int *)(v17 + 32);
  v20 = *(_QWORD *)v19;
  v21 = *((_QWORD *)v19 + 1);
  v22 = v19[16];
  v23 = v19[17];
  sub_20E3A3AFC(*(_QWORD *)v19, v21, v22, v19[17]);
  v24 = sub_20E45C300(v20, v21, v22 | (v23 << 8));
  LODWORD(v61) = v25;
  v26 = v22;
  v28 = v27;
  sub_20E3A3D14(v20, v21, v26, v23);
  if (!v28
    || (v65 = v24,
        v66 = v28,
        v67 = v61 & 1,
        v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18408),
        MEMORY[0x212BBBCE0](&v68, v29),
        swift_release(),
        swift_release(),
        (v68 & 1) != 0))
  {
    v59 = v10;
    v30 = ObjectType;
    v31 = ObjectType + *(int *)(v18 + 44);
    v32 = *(_WORD *)v31;
    v33 = *(_QWORD *)(v31 + 8);
    LOWORD(v65) = v32;
    v66 = v33;
    LOWORD(v68) = 257;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254A18400);
    result = sub_20E4A4658();
    v35 = *(_QWORD *)v30;
    v36 = *(_QWORD *)(*(_QWORD *)v30 + 16);
    v37 = v58;
    if (!v36)
      return result;
    v38 = swift_getObjectType();
    v39 = v35 + ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80));
    v61 = *(_QWORD *)(v37 + 72);
    ObjectType = v38;
    v40 = *(void (**)(char *, uint64_t, uint64_t))(v37 + 16);
    v57[0] = v35;
    swift_bridgeObjectRetain();
    v41 = v37;
    v43 = v59;
    v42 = v60;
    do
    {
      v40(v16, v39, v42);
      sub_20E4A3380();
      sub_20E4A5210();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v12, v9);
      (*(void (**)(char *, uint64_t))(v41 + 8))(v16, v42);
      v39 += v61;
      --v36;
    }
    while (v36);
    return swift_bridgeObjectRelease();
  }
  v54 = ObjectType + *(int *)(v18 + 44);
  v55 = *(_WORD *)v54;
  v56 = *(_QWORD *)(v54 + 8);
  LOWORD(v65) = v55;
  v66 = v56;
  LOWORD(v68) = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A18400);
  return sub_20E4A4658();
}

uint64_t sub_20E3A2298(char a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  __int16 *v13;
  __int16 v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t ObjectType;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int16 v38;
  uint64_t v39;
  __int16 v40;

  v31 = a4;
  v37 = a3;
  v6 = sub_20E4A338C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_20E4A5174();
  v36 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (__int16 *)((char *)a2 + *(int *)(type metadata accessor for ImpressionableViewModifier(0) + 44));
  v14 = *v13;
  v15 = *((_QWORD *)v13 + 1);
  v32 = v10;
  if ((a1 & 1) == 0)
  {
    v29 = v7;
    v22 = v6;
    v38 = v14;
    v39 = v15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254A18400);
    sub_20E4A464C();
    v38 = v14;
    v39 = v15;
    v40 &= 1u;
    result = sub_20E4A4658();
    v23 = *a2;
    v24 = *(_QWORD *)(*a2 + 16);
    if (!v24)
      return result;
    ObjectType = swift_getObjectType();
    v26 = v23 + ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80));
    v34 = *(_QWORD *)(v36 + 72);
    v35 = ObjectType;
    v33 = *(void (**)(char *, uint64_t, uint64_t))(v36 + 16);
    v30 = v23;
    swift_bridgeObjectRetain();
    v27 = v29;
    v28 = v32;
    do
    {
      v33(v12, v26, v28);
      sub_20E4A3380();
      sub_20E4A521C();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v9, v22);
      (*(void (**)(char *, uint64_t))(v36 + 8))(v12, v28);
      v26 += v34;
      --v24;
    }
    while (v24);
    return swift_bridgeObjectRelease();
  }
  v38 = v14;
  v39 = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A18400);
  result = sub_20E4A464C();
  if ((v40 & 0x8101) == 1)
  {
    v38 = v14;
    v39 = v15;
    v40 = 257;
    result = sub_20E4A4658();
    v17 = *a2;
    v18 = *(_QWORD *)(*a2 + 16);
    if (v18)
    {
      v19 = swift_getObjectType();
      v20 = v17 + ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80));
      v34 = *(_QWORD *)(v36 + 72);
      v35 = v19;
      v33 = *(void (**)(char *, uint64_t, uint64_t))(v36 + 16);
      v30 = v17;
      swift_bridgeObjectRetain();
      v21 = v32;
      do
      {
        v33(v12, v20, v21);
        sub_20E4A3380();
        sub_20E4A5210();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        (*(void (**)(char *, uint64_t))(v36 + 8))(v12, v21);
        v20 += v34;
        --v18;
      }
      while (v18);
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_20E3A25A0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  char *v19;
  uint64_t *v20;
  id v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v27 = a3;
  v28 = a4;
  v6 = type metadata accessor for _OnScenePhaseChange(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (uint64_t *)((char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A183D0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A183F8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18380);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (v16 + 15) & 0xFFFFFFFFFFFFFFF0;
  v18 = (char *)&v25 - v17;
  if (a1)
  {
    sub_20E3A5E20(v26, (uint64_t)&v25 - v17, &qword_254A18350);
    v19 = &v18[*(int *)(v15 + 36)];
    *(_QWORD *)v19 = a2;
    *((_QWORD *)v19 + 1) = v27;
    *((_QWORD *)v19 + 2) = a1;
    v20 = &qword_254A18380;
    sub_20E3A5E20((uint64_t)v18, (uint64_t)v14, &qword_254A18380);
    swift_storeEnumTagMultiPayload();
    sub_20E3A4DF4();
    sub_20E3A50F8();
    v21 = a1;
    swift_retain();
    sub_20E4A3DF4();
    v22 = (uint64_t)v18;
  }
  else
  {
    v23 = (_QWORD *)((char *)v8 + *(int *)(v6 + 20));
    *v23 = swift_getKeyPath();
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED23A0);
    swift_storeEnumTagMultiPayload();
    *v8 = a2;
    v8[1] = v27;
    sub_20E3A57AC((uint64_t)v8, (uint64_t)&v11[*(int *)(v9 + 36)], type metadata accessor for _OnScenePhaseChange);
    sub_20E3A5E20(v26, (uint64_t)v11, &qword_254A18350);
    v20 = &qword_254A183D0;
    sub_20E3A5E20((uint64_t)v11, (uint64_t)v14, &qword_254A183D0);
    swift_storeEnumTagMultiPayload();
    sub_20E3A4DF4();
    sub_20E3A50F8();
    swift_retain();
    sub_20E4A3DF4();
    v22 = (uint64_t)v11;
  }
  return sub_20E39D1F8(v22, v20);
}

uint64_t sub_20E3A2844@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  char *v19;
  uint64_t *v20;
  id v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v27 = a3;
  v28 = a4;
  v6 = type metadata accessor for _OnScenePhaseChange(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (uint64_t *)((char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0B18);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0B38);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0B28);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (v16 + 15) & 0xFFFFFFFFFFFFFFF0;
  v18 = (char *)&v25 - v17;
  if (a1)
  {
    sub_20E3A5E20(v26, (uint64_t)&v25 - v17, &qword_253ED0B08);
    v19 = &v18[*(int *)(v15 + 36)];
    *(_QWORD *)v19 = a2;
    *((_QWORD *)v19 + 1) = v27;
    *((_QWORD *)v19 + 2) = a1;
    v20 = &qword_253ED0B28;
    sub_20E3A5E20((uint64_t)v18, (uint64_t)v14, &qword_253ED0B28);
    swift_storeEnumTagMultiPayload();
    sub_20E3A5ADC();
    sub_20E3A5D58();
    v21 = a1;
    swift_retain();
    sub_20E4A3DF4();
    v22 = (uint64_t)v18;
  }
  else
  {
    v23 = (_QWORD *)((char *)v8 + *(int *)(v6 + 20));
    *v23 = swift_getKeyPath();
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED23A0);
    swift_storeEnumTagMultiPayload();
    *v8 = a2;
    v8[1] = v27;
    sub_20E3A57AC((uint64_t)v8, (uint64_t)&v11[*(int *)(v9 + 36)], type metadata accessor for _OnScenePhaseChange);
    sub_20E3A5E20(v26, (uint64_t)v11, &qword_253ED0B08);
    v20 = &qword_253ED0B18;
    sub_20E3A5E20((uint64_t)v11, (uint64_t)v14, &qword_253ED0B18);
    swift_storeEnumTagMultiPayload();
    sub_20E3A5ADC();
    sub_20E3A5D58();
    swift_retain();
    sub_20E4A3DF4();
    v22 = (uint64_t)v11;
  }
  return sub_20E39D1F8(v22, v20);
}

uint64_t sub_20E3A2AE8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  char *v19;
  uint64_t *v20;
  id v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v27 = a3;
  v28 = a4;
  v6 = type metadata accessor for _OnScenePhaseChange(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (uint64_t *)((char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18410);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18418);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18420);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (v16 + 15) & 0xFFFFFFFFFFFFFFF0;
  v18 = (char *)&v25 - v17;
  if (a1)
  {
    sub_20E3A5E20(v26, (uint64_t)&v25 - v17, &qword_254A18428);
    v19 = &v18[*(int *)(v15 + 36)];
    *(_QWORD *)v19 = a2;
    *((_QWORD *)v19 + 1) = v27;
    *((_QWORD *)v19 + 2) = a1;
    v20 = &qword_254A18420;
    sub_20E3A5E20((uint64_t)v18, (uint64_t)v14, &qword_254A18420);
    swift_storeEnumTagMultiPayload();
    sub_20E3A58E4();
    sub_20E3A5A58();
    v21 = a1;
    swift_retain();
    sub_20E4A3DF4();
    v22 = (uint64_t)v18;
  }
  else
  {
    v23 = (_QWORD *)((char *)v8 + *(int *)(v6 + 20));
    *v23 = swift_getKeyPath();
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED23A0);
    swift_storeEnumTagMultiPayload();
    *v8 = a2;
    v8[1] = v27;
    sub_20E3A57AC((uint64_t)v8, (uint64_t)&v11[*(int *)(v9 + 36)], type metadata accessor for _OnScenePhaseChange);
    sub_20E3A5E20(v26, (uint64_t)v11, &qword_254A18428);
    v20 = &qword_254A18410;
    sub_20E3A5E20((uint64_t)v11, (uint64_t)v14, &qword_254A18410);
    swift_storeEnumTagMultiPayload();
    sub_20E3A58E4();
    sub_20E3A5A58();
    swift_retain();
    sub_20E4A3DF4();
    v22 = (uint64_t)v11;
  }
  return sub_20E39D1F8(v22, v20);
}

uint64_t sub_20E3A2D94()
{
  return sub_20E4A37B8();
}

uint64_t sub_20E3A2DB0@<X0>(double *a1@<X1>, BOOL *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  double v7;
  double v8;
  uint64_t result;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18228);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for _ImpressionableGeometryChange(0);
  sub_20E45C4F0((uint64_t)v6);
  sub_20E3C2220((uint64_t)v6);
  v8 = v7;
  result = sub_20E39D1F8((uint64_t)v6, &qword_254A18228);
  *a2 = *a1 < v8;
  return result;
}

uint64_t sub_20E3A2E70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (**v16)@<X0>(BOOL *@<X8>);
  uint64_t v18;

  v4 = v3;
  v7 = *(_QWORD *)(a2 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](a1);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20E3A6A14(v4, (uint64_t)v9, type metadata accessor for _ImpressionableGeometryChange);
  v10 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v11 = swift_allocObject();
  sub_20E3A57AC((uint64_t)v9, v11 + v10, type metadata accessor for _ImpressionableGeometryChange);
  v13 = *(_QWORD *)(v4 + 8);
  v12 = *(_QWORD *)(v4 + 16);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v13;
  *(_QWORD *)(v14 + 24) = v12;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A184B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a3, a1, v15);
  v16 = (uint64_t (**)@<X0>(BOOL *@<X8>))(a3
                                                  + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254A184B8)
                                                           + 36));
  *v16 = sub_20E3A6B2C;
  v16[1] = (uint64_t (*)@<X0>(BOOL *@<X8>))v11;
  v16[2] = (uint64_t (*)@<X0>(BOOL *@<X8>))sub_20E3A6B9C;
  v16[3] = (uint64_t (*)@<X0>(BOOL *@<X8>))v14;
  return swift_retain();
}

uint64_t sub_20E3A2FA0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = sub_20E4A33B0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

uint64_t sub_20E3A2FDC()
{
  sub_20E3A6BC0();
  return sub_20E4A389C();
}

uint64_t sub_20E3A302C()
{
  uint64_t v0;

  sub_20E39D1F8(v0 + OBJC_IVAR____TtC18_JetEngine_SwiftUI31ListContainerElementSizeWrapper_proxy, &qword_254A18228);
  return swift_deallocClassInstance();
}

uint64_t sub_20E3A3068@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  sub_20E3A5E64();
  sub_20E4A3C08();
  if (v5)
  {
    v2 = v5 + OBJC_IVAR____TtC18_JetEngine_SwiftUI31ListContainerElementSizeWrapper_proxy;
    swift_beginAccess();
    sub_20E3A5E20(v2, a1, &qword_254A18228);
    return swift_release();
  }
  else
  {
    v4 = sub_20E4A3818();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, 1, 1, v4);
  }
}

uint64_t sub_20E3A311C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  sub_20E3A5E64();
  sub_20E4A3C08();
  swift_release();
  if (!v6)
  {
    type metadata accessor for ListContainerElementSizeWrapper(0);
    v2 = swift_allocObject() + OBJC_IVAR____TtC18_JetEngine_SwiftUI31ListContainerElementSizeWrapper_proxy;
    v3 = sub_20E4A3818();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
    sub_20E4A3C14();
  }
  sub_20E4A3C08();
  if (v7)
  {
    v4 = v7 + OBJC_IVAR____TtC18_JetEngine_SwiftUI31ListContainerElementSizeWrapper_proxy;
    swift_beginAccess();
    sub_20E3A5EA8(a1, v4);
    swift_endAccess();
  }
  else
  {
    sub_20E39D1F8(a1, &qword_254A18228);
  }
  return swift_release();
}

uint64_t View.listContainerElementProxy(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18228);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  v5 = sub_20E4A3818();
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v4, a1, v5);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  sub_20E4A4250();
  swift_release();
  return sub_20E39D1F8((uint64_t)v4, &qword_254A18228);
}

uint64_t sub_20E3A3354@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  sub_20E3A5E64();
  sub_20E4A3C08();
  if (v5)
  {
    v2 = v5 + OBJC_IVAR____TtC18_JetEngine_SwiftUI31ListContainerElementSizeWrapper_proxy;
    swift_beginAccess();
    sub_20E3A5E20(v2, a1, &qword_254A18228);
    return swift_release();
  }
  else
  {
    v4 = sub_20E4A3818();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, 1, 1, v4);
  }
}

uint64_t sub_20E3A3410(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18228);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20E3A5E20(a1, (uint64_t)v4, &qword_254A18228);
  return sub_20E3A311C((uint64_t)v4);
}

uint64_t sub_20E3A3494()
{
  return type metadata accessor for ListContainerElementSizeWrapper(0);
}

uint64_t type metadata accessor for ListContainerElementSizeWrapper(uint64_t a1)
{
  return sub_20E3A4CD0(a1, (uint64_t *)&unk_254A18258);
}

void sub_20E3A34B0()
{
  unint64_t v0;

  sub_20E3A4C54(319, qword_254A18268, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC148], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_20E3A3534(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[2];
  _QWORD v7[2];

  v1 = *(_QWORD *)(a1 + 8);
  type metadata accessor for ImpressionableViewModifier(255);
  v2 = sub_20E4A39D4();
  type metadata accessor for ClickLocationViewModifier();
  v3 = sub_20E4A39D4();
  v7[0] = v1;
  v7[1] = sub_20E39F334(&qword_254A18220, type metadata accessor for ImpressionableViewModifier, (uint64_t)&unk_20E4A73D8);
  v4 = MEMORY[0x24BDED308];
  v6[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v2, v7);
  v6[1] = sub_20E39F334(&qword_253ED07E8, (uint64_t (*)(uint64_t))type metadata accessor for ClickLocationViewModifier, (uint64_t)&unk_20E4A953C);
  return MEMORY[0x212BBDF90](v4, v3, v6);
}

uint64_t sub_20E3A3614(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  type metadata accessor for ImpressionableViewModifier(255);
  v2 = sub_20E4A39D4();
  v4[0] = v1;
  v4[1] = sub_20E39F334(&qword_254A18220, type metadata accessor for ImpressionableViewModifier, (uint64_t)&unk_20E4A73D8);
  return MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v2, v4);
}

uint64_t sub_20E3A3694(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[2];
  _QWORD v7[2];

  v1 = *(_QWORD *)(a1 + 16);
  type metadata accessor for ImpressionableViewModifier(255);
  v2 = sub_20E4A39D4();
  type metadata accessor for ClickLocationViewModifier();
  v3 = sub_20E4A39D4();
  v7[0] = v1;
  v7[1] = sub_20E39F334(&qword_254A18220, type metadata accessor for ImpressionableViewModifier, (uint64_t)&unk_20E4A73D8);
  v4 = MEMORY[0x24BDED308];
  v6[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v2, v7);
  v6[1] = sub_20E39F334(&qword_253ED07E8, (uint64_t (*)(uint64_t))type metadata accessor for ClickLocationViewModifier, (uint64_t)&unk_20E4A953C);
  return MEMORY[0x212BBDF90](v4, v3, v6);
}

uint64_t sub_20E3A3778(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A182E8);
  v2 = sub_20E4A39D4();
  v4[0] = v1;
  v4[1] = sub_20E39D010(&qword_254A182F0, &qword_254A182E8, MEMORY[0x24BDF1028]);
  return MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v2, v4);
}

_QWORD *sub_20E3A37F8(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v3;
  uint64_t v4;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (_QWORD *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_20E4A5450();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[6];
    v14 = a3[7];
    v15 = (char *)v7 + v13;
    v16 = (char *)a2 + v13;
    *(_QWORD *)v15 = *(_QWORD *)v16;
    v15[8] = v16[8];
    *((_BYTE *)v7 + v14) = *((_BYTE *)a2 + v14);
    v17 = a3[8];
    v18 = (char *)v7 + v17;
    v19 = (char *)a2 + v17;
    v20 = *(_QWORD *)v19;
    v21 = *((_QWORD *)v19 + 1);
    LOBYTE(v10) = v19[17];
    LOBYTE(v11) = v19[16];
    sub_20E3A3AFC(*(_QWORD *)v19, v21, v11, (char)v10);
    *(_QWORD *)v18 = v20;
    *((_QWORD *)v18 + 1) = v21;
    v18[16] = v11;
    v18[17] = (char)v10;
    v22 = a3[9];
    v23 = (_QWORD *)((char *)v7 + v22);
    v24 = (_QWORD *)((char *)a2 + v22);
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v25 = sub_20E4A5384();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
    }
    else
    {
      *v23 = *v24;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v26 = a3[10];
    v27 = (char *)v7 + v26;
    v28 = (char *)a2 + v26;
    v29 = *(_QWORD *)v28;
    v30 = v28[8];
    j__swift_retain(*(_QWORD *)v28);
    *(_QWORD *)v27 = v29;
    v27[8] = v30;
    v31 = a3[11];
    v32 = a3[12];
    v33 = (char *)v7 + v31;
    v34 = (char *)a2 + v31;
    *(_WORD *)v33 = *(_WORD *)v34;
    *((_QWORD *)v33 + 1) = *((_QWORD *)v34 + 1);
    v35 = (char *)v7 + v32;
    v36 = (char *)a2 + v32;
    v37 = sub_20E4A33B0();
    v38 = *(_QWORD *)(v37 - 8);
    v39 = *(void (**)(char *, char *, uint64_t))(v38 + 16);
    swift_retain();
    v39(v35, v36, v37);
    v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C68);
    *(_QWORD *)&v35[*(int *)(v40 + 28)] = *(_QWORD *)&v36[*(int *)(v40 + 28)];
    v41 = a3[13];
    v42 = (char *)v7 + v41;
    v43 = (char *)a2 + v41;
    swift_retain();
    v39(v42, v43, v37);
    *(_QWORD *)&v42[*(int *)(v40 + 28)] = *(_QWORD *)&v43[*(int *)(v40 + 28)];
    v44 = a3[14];
    v45 = (_QWORD *)((char *)v7 + v44);
    v46 = (_QWORD *)((char *)a2 + v44);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v38 + 48))(v46, 1, v37))
      {
        v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED2428);
        memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
      }
      else
      {
        v39((char *)v45, (char *)v46, v37);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v45, 0, 1, v37);
      }
    }
    else
    {
      *v45 = *v46;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v7;
}

uint64_t sub_20E3A3AFC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) != 0)
    return sub_20E3A3B08(a1, a2);
  else
    return swift_retain();
}

uint64_t sub_20E3A3B08(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_20E3A3B34(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  void (*v13)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  v5 = sub_20E4A5450();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  sub_20E3A3D14(*(_QWORD *)(a1 + a2[8]), *(_QWORD *)(a1 + a2[8] + 8), *(unsigned __int8 *)(a1 + a2[8] + 16), *(_BYTE *)(a1 + a2[8] + 17));
  v6 = a1 + a2[9];
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_20E4A5384();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  j__swift_release(*(_QWORD *)(a1 + a2[10]), *(unsigned __int8 *)(a1 + a2[10] + 8));
  swift_release();
  v8 = a1 + a2[12];
  v9 = sub_20E4A33B0();
  v10 = *(_QWORD *)(v9 - 8);
  v13 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  v13(v8, v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C68);
  swift_release();
  v13(a1 + a2[13], v9);
  swift_release();
  v11 = a1 + a2[14];
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A20);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v11, 1, v9);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v13)(v11, v9);
  return result;
}

uint64_t sub_20E3A3D14(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) != 0)
    return sub_20E3A3D20(a1, a2);
  else
    return swift_release();
}

uint64_t sub_20E3A3D20(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

_QWORD *sub_20E3A3D50(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_20E4A5450();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  v11 = a3[6];
  v12 = a3[7];
  v13 = (char *)a1 + v11;
  v14 = (char *)a2 + v11;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  v13[8] = v14[8];
  *((_BYTE *)a1 + v12) = *((_BYTE *)a2 + v12);
  v15 = a3[8];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = *(_QWORD *)v17;
  v19 = *((_QWORD *)v17 + 1);
  LOBYTE(v8) = v17[17];
  LOBYTE(v9) = v17[16];
  sub_20E3A3AFC(*(_QWORD *)v17, v19, v9, (char)v8);
  *(_QWORD *)v16 = v18;
  *((_QWORD *)v16 + 1) = v19;
  v16[16] = v9;
  v16[17] = (char)v8;
  v20 = a3[9];
  v21 = (_QWORD *)((char *)a1 + v20);
  v22 = (_QWORD *)((char *)a2 + v20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v23 = sub_20E4A5384();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
  }
  else
  {
    *v21 = *v22;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v24 = a3[10];
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  v27 = *(_QWORD *)v26;
  v28 = v26[8];
  j__swift_retain(*(_QWORD *)v26);
  *(_QWORD *)v25 = v27;
  v25[8] = v28;
  v29 = a3[11];
  v30 = a3[12];
  v31 = (char *)a1 + v29;
  v32 = (char *)a2 + v29;
  *(_WORD *)v31 = *(_WORD *)v32;
  *((_QWORD *)v31 + 1) = *((_QWORD *)v32 + 1);
  v33 = (char *)a1 + v30;
  v34 = (char *)a2 + v30;
  v35 = sub_20E4A33B0();
  v36 = *(_QWORD *)(v35 - 8);
  v37 = *(void (**)(char *, char *, uint64_t))(v36 + 16);
  swift_retain();
  v37(v33, v34, v35);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C68);
  *(_QWORD *)&v33[*(int *)(v38 + 28)] = *(_QWORD *)&v34[*(int *)(v38 + 28)];
  v39 = a3[13];
  v40 = (char *)a1 + v39;
  v41 = (char *)a2 + v39;
  swift_retain();
  v37(v40, v41, v35);
  *(_QWORD *)&v40[*(int *)(v38 + 28)] = *(_QWORD *)&v41[*(int *)(v38 + 28)];
  v42 = a3[14];
  v43 = (_QWORD *)((char *)a1 + v42);
  v44 = (_QWORD *)((char *)a2 + v42);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v36 + 48))(v44, 1, v35))
    {
      v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED2428);
      memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    }
    else
    {
      v37((char *)v43, (char *)v44, v35);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v43, 0, 1, v35);
    }
  }
  else
  {
    *v43 = *v44;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_20E3A402C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  unsigned __int8 v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_20E4A5450();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = *(_QWORD *)v12;
  v11[8] = v12[8];
  *(_QWORD *)v11 = v13;
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  v14 = a3[8];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = *(_QWORD *)v16;
  v18 = *((_QWORD *)v16 + 1);
  v19 = v16[17];
  v20 = v16[16];
  sub_20E3A3AFC(*(_QWORD *)v16, v18, v20, v19);
  v21 = *(_QWORD *)v15;
  v22 = *((_QWORD *)v15 + 1);
  v23 = v15[17];
  *(_QWORD *)v15 = v17;
  *((_QWORD *)v15 + 1) = v18;
  v24 = v15[16];
  v15[16] = v20;
  v15[17] = v19;
  sub_20E3A3D14(v21, v22, v24, v23);
  if (a1 != a2)
  {
    v25 = a3[9];
    v26 = (_QWORD *)((char *)a1 + v25);
    v27 = (_QWORD *)((char *)a2 + v25);
    sub_20E39D1F8((uint64_t)a1 + v25, &qword_253ED0A28);
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v28 = sub_20E4A5384();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
    }
    else
    {
      *v26 = *v27;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v29 = a3[10];
  v30 = (char *)a1 + v29;
  v31 = (char *)a2 + v29;
  v32 = *(_QWORD *)v31;
  v33 = v31[8];
  j__swift_retain(*(_QWORD *)v31);
  v34 = *(_QWORD *)v30;
  v35 = v30[8];
  *(_QWORD *)v30 = v32;
  v30[8] = v33;
  j__swift_release(v34, v35);
  v36 = a3[11];
  v37 = (char *)a1 + v36;
  v38 = (char *)a2 + v36;
  *(_WORD *)v37 = *(_WORD *)v38;
  *((_QWORD *)v37 + 1) = *((_QWORD *)v38 + 1);
  swift_retain();
  swift_release();
  v39 = a3[12];
  v40 = (char *)a1 + v39;
  v41 = (char *)a2 + v39;
  v42 = sub_20E4A33B0();
  v43 = *(_QWORD *)(v42 - 8);
  v44 = *(void (**)(char *, char *, uint64_t))(v43 + 24);
  v44(v40, v41, v42);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C68);
  *(_QWORD *)&v40[*(int *)(v45 + 28)] = *(_QWORD *)&v41[*(int *)(v45 + 28)];
  swift_retain();
  swift_release();
  v46 = a3[13];
  v47 = (char *)a1 + v46;
  v48 = (char *)a2 + v46;
  v44((char *)a1 + v46, (char *)a2 + v46, v42);
  *(_QWORD *)&v47[*(int *)(v45 + 28)] = *(_QWORD *)&v48[*(int *)(v45 + 28)];
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v49 = a3[14];
    v50 = (_QWORD *)((char *)a1 + v49);
    v51 = (_QWORD *)((char *)a2 + v49);
    sub_20E39D1F8((uint64_t)a1 + v49, &qword_253ED0A20);
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v43 + 48))(v51, 1, v42))
      {
        v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED2428);
        memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v43 + 16))(v50, v51, v42);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v50, 0, 1, v42);
      }
    }
    else
    {
      *v50 = *v51;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *sub_20E3A4384(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  __int128 v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_20E4A5450();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[6];
  v11 = a3[7];
  v12 = (char *)a1 + v10;
  v13 = (char *)a2 + v10;
  *(_QWORD *)v12 = *(_QWORD *)v13;
  v12[8] = v13[8];
  *((_BYTE *)a1 + v11) = *((_BYTE *)a2 + v11);
  v14 = a3[8];
  v15 = a3[9];
  v16 = (char *)a1 + v14;
  v17 = (char *)a2 + v14;
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *((_WORD *)v16 + 8) = *((_WORD *)v17 + 8);
  v18 = (char *)a1 + v15;
  v19 = (char *)a2 + v15;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v21 = sub_20E4A5384();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v18, v19, v21);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  v22 = a3[10];
  v23 = a3[11];
  v24 = (char *)a1 + v22;
  v25 = (char *)a2 + v22;
  *(_QWORD *)v24 = *(_QWORD *)v25;
  v26 = *(_OWORD *)((char *)a2 + v23);
  v24[8] = v25[8];
  *(_OWORD *)((char *)a1 + v23) = v26;
  v27 = a3[12];
  v28 = (char *)a1 + v27;
  v29 = (char *)a2 + v27;
  v30 = sub_20E4A33B0();
  v31 = *(_QWORD *)(v30 - 8);
  v32 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
  v32(v28, v29, v30);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C68);
  *(_QWORD *)&v28[*(int *)(v33 + 28)] = *(_QWORD *)&v29[*(int *)(v33 + 28)];
  v34 = a3[13];
  v35 = (char *)a1 + v34;
  v36 = (char *)a2 + v34;
  v32((char *)a1 + v34, (char *)a2 + v34, v30);
  *(_QWORD *)&v35[*(int *)(v33 + 28)] = *(_QWORD *)&v36[*(int *)(v33 + 28)];
  v37 = a3[14];
  v38 = (char *)a1 + v37;
  v39 = (char *)a2 + v37;
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v39, 1, v30))
    {
      v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED2428);
      memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    }
    else
    {
      v32(v38, v39, v30);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v38, 0, 1, v30);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_20E3A4608(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_20E4A5450();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[6];
  v11 = a3[7];
  v12 = (char *)a1 + v10;
  v13 = (char *)a2 + v10;
  *(_QWORD *)v12 = *(_QWORD *)v13;
  v12[8] = v13[8];
  *((_BYTE *)a1 + v11) = *((_BYTE *)a2 + v11);
  v14 = a3[8];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  LOBYTE(v12) = v16[16];
  v17 = v16[17];
  v18 = *(_QWORD *)v15;
  v19 = *((_QWORD *)v15 + 1);
  v20 = v15[17];
  *(_OWORD *)v15 = *(_OWORD *)v16;
  v21 = v15[16];
  v15[16] = (char)v12;
  v15[17] = v17;
  sub_20E3A3D14(v18, v19, v21, v20);
  if (a1 != a2)
  {
    v22 = a3[9];
    v23 = (char *)a1 + v22;
    v24 = (char *)a2 + v22;
    sub_20E39D1F8((uint64_t)a1 + v22, &qword_253ED0A28);
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v26 = sub_20E4A5384();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v23, v24, v26);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
  }
  v27 = a3[10];
  v28 = (char *)a1 + v27;
  v29 = (char *)a2 + v27;
  v30 = *(_QWORD *)v29;
  LOBYTE(v29) = v29[8];
  v31 = *(_QWORD *)v28;
  v32 = v28[8];
  *(_QWORD *)v28 = v30;
  v28[8] = (char)v29;
  j__swift_release(v31, v32);
  v33 = a3[11];
  v34 = (char *)a1 + v33;
  v35 = (char *)a2 + v33;
  *(_WORD *)v34 = *(_WORD *)v35;
  *((_QWORD *)v34 + 1) = *((_QWORD *)v35 + 1);
  swift_release();
  v36 = a3[12];
  v37 = (char *)a1 + v36;
  v38 = (char *)a2 + v36;
  v39 = sub_20E4A33B0();
  v40 = *(_QWORD *)(v39 - 8);
  v41 = *(void (**)(char *, char *, uint64_t))(v40 + 40);
  v41(v37, v38, v39);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C68);
  *(_QWORD *)&v37[*(int *)(v42 + 28)] = *(_QWORD *)&v38[*(int *)(v42 + 28)];
  swift_release();
  v43 = a3[13];
  v44 = (char *)a1 + v43;
  v45 = (char *)a2 + v43;
  v41((char *)a1 + v43, (char *)a2 + v43, v39);
  *(_QWORD *)&v44[*(int *)(v42 + 28)] = *(_QWORD *)&v45[*(int *)(v42 + 28)];
  swift_release();
  if (a1 != a2)
  {
    v46 = a3[14];
    v47 = (char *)a1 + v46;
    v48 = (char *)a2 + v46;
    sub_20E39D1F8((uint64_t)a1 + v46, &qword_253ED0A20);
    v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v48, 1, v39))
      {
        v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED2428);
        memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v47, v48, v39);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v47, 0, 1, v39);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_20E3A491C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_20E3A4928(char *a1, uint64_t a2, int *a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_20E4A5450();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[5];
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A182F8);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[9];
      }
      else
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C68);
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
        {
          v10 = v13;
          v11 = a3[12];
        }
        else
        {
          v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18300);
          v9 = *(_QWORD *)(v10 - 8);
          v11 = a3[14];
        }
      }
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t sub_20E3A4A1C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_20E3A4A28(char *result, uint64_t a2, int a3, int *a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = sub_20E4A5450();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[5];
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A182F8);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[9];
      }
      else
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C68);
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == a3)
        {
          v10 = v13;
          v11 = a4[12];
        }
        else
        {
          v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18300);
          v9 = *(_QWORD *)(v10 - 8);
          v11 = a4[14];
        }
      }
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

void sub_20E3A4B18()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_20E4A5450();
  if (v0 <= 0x3F)
  {
    sub_20E3A4C54(319, (unint64_t *)&qword_253ED2448, (uint64_t (*)(uint64_t))MEMORY[0x24BE5D6D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (v1 <= 0x3F)
    {
      sub_20E3A4C54(319, &qword_253ED2450, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
      if (v2 <= 0x3F)
      {
        sub_20E3A6754(319, (unint64_t *)&qword_253ED2440, &qword_253ED2428);
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

void sub_20E3A4C54(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = a4(a1, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t sub_20E3A4CAC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for _ImpressionableGeometryChange(uint64_t a1)
{
  return sub_20E3A4CD0(a1, (uint64_t *)&unk_254A18488);
}

uint64_t sub_20E3A4CD0(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_20E3A4D04()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254A18368;
  if (!qword_254A18368)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A18330);
    v2[0] = sub_20E3A4D88();
    v2[1] = sub_20E39D010(&qword_254A183D8, &qword_254A18318, (uint64_t)&protocol conformance descriptor for _RequirementFailureView<A, B>);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254A18368);
  }
  return result;
}

unint64_t sub_20E3A4D88()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254A18370;
  if (!qword_254A18370)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A18358);
    v2[0] = sub_20E3A4DF4();
    v2[1] = sub_20E3A50F8();
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254A18370);
  }
  return result;
}

unint64_t sub_20E3A4DF4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254A18378;
  if (!qword_254A18378)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A18380);
    v2[0] = sub_20E3A4E60();
    v2[1] = sub_20E3A50B4();
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254A18378);
  }
  return result;
}

unint64_t sub_20E3A4E60()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254A18388;
  if (!qword_254A18388)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A18350);
    v2[0] = sub_20E3A4ECC();
    v2[1] = sub_20E3A5070();
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254A18388);
  }
  return result;
}

unint64_t sub_20E3A4ECC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254A18390;
  if (!qword_254A18390)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A18348);
    v2[0] = sub_20E3A4F50();
    v2[1] = sub_20E39F334(&qword_254A183C0, type metadata accessor for _ImpressionableGeometryChange, (uint64_t)&unk_20E4A75F8);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254A18390);
  }
  return result;
}

unint64_t sub_20E3A4F50()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254A18398;
  if (!qword_254A18398)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A18340);
    v2[0] = sub_20E3A4FD4();
    v2[1] = sub_20E39D010(&qword_253ED0C58, &qword_253ED0C60, MEMORY[0x24BDF1248]);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254A18398);
  }
  return result;
}

unint64_t sub_20E3A4FD4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254A183A0;
  if (!qword_254A183A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A18338);
    v2[0] = sub_20E39D010(&qword_254A183A8, &qword_254A18310, MEMORY[0x24BDEFB78]);
    v2[1] = sub_20E39D010(&qword_254A183B0, &qword_254A183B8, MEMORY[0x24BDF1248]);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254A183A0);
  }
  return result;
}

unint64_t sub_20E3A5070()
{
  unint64_t result;

  result = qword_253ED0630;
  if (!qword_253ED0630)
  {
    result = MEMORY[0x212BBDF90](&unk_20E4B0224, &type metadata for _OnViewAppearanceChangeViewModifier);
    atomic_store(result, (unint64_t *)&qword_253ED0630);
  }
  return result;
}

unint64_t sub_20E3A50B4()
{
  unint64_t result;

  result = qword_253ED21D8[0];
  if (!qword_253ED21D8[0])
  {
    result = MEMORY[0x212BBDF90](&unk_20E4AAC98, &type metadata for _OnUIScenePhaseChange);
    atomic_store(result, qword_253ED21D8);
  }
  return result;
}

unint64_t sub_20E3A50F8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254A183C8;
  if (!qword_254A183C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A183D0);
    v2[0] = sub_20E3A4E60();
    v2[1] = sub_20E39F334(&qword_253ED21C0, type metadata accessor for _OnScenePhaseChange, (uint64_t)&unk_20E4AAC48);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254A183C8);
  }
  return result;
}

unint64_t sub_20E3A517C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254A183E0;
  if (!qword_254A183E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A18360);
    v2[0] = sub_20E3A4D04();
    v2[1] = sub_20E39D010(&qword_254A183A8, &qword_254A18310, MEMORY[0x24BDEFB78]);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254A183E0);
  }
  return result;
}

unint64_t sub_20E3A5200()
{
  unint64_t result;

  result = qword_253ED0D50;
  if (!qword_253ED0D50)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_253ED0D50);
  }
  return result;
}

uint64_t sub_20E3A523C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_20E3A5260()
{
  uint64_t v0;

  return sub_20E490DF8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_20E3A526C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(type metadata accessor for ImpressionableViewModifier(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = *(unsigned __int8 *)(*(_QWORD *)(sub_20E4A5204() - 8) + 80);
  return sub_20E3A1A50(a1, v1 + v4, *(_QWORD *)(v1 + v5), *(_QWORD *)(v1 + v5 + 8), v1 + ((v5 + v6 + 16) & ~v6));
}

uint64_t sub_20E3A52F4(uint64_t a1)
{
  return sub_20E3A5504(a1, (uint64_t (*)(uint64_t, uint64_t))sub_20E3A1D64);
}

uint64_t objectdestroy_13Tm()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;

  v1 = (int *)type metadata accessor for ImpressionableViewModifier(0);
  v2 = v0
     + ((*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80));
  swift_bridgeObjectRelease();
  v3 = v2 + v1[5];
  v4 = sub_20E4A5450();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  sub_20E3A3D14(*(_QWORD *)(v2 + v1[8]), *(_QWORD *)(v2 + v1[8] + 8), *(unsigned __int8 *)(v2 + v1[8] + 16), *(_BYTE *)(v2 + v1[8] + 17));
  v5 = v2 + v1[9];
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_20E4A5384();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  j__swift_release(*(_QWORD *)(v2 + v1[10]), *(unsigned __int8 *)(v2 + v1[10] + 8));
  swift_release();
  v7 = v2 + v1[12];
  v8 = sub_20E4A33B0();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  v10(v7, v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C68);
  swift_release();
  v10(v2 + v1[13], v8);
  swift_release();
  v11 = v2 + v1[14];
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v11, 1, v8))
      v10(v11, v8);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_20E3A54F8(uint64_t a1)
{
  return sub_20E3A5504(a1, sub_20E3A1DDC);
}

uint64_t sub_20E3A5504(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ImpressionableViewModifier(0) - 8) + 80);
  return a2(a1, v2 + ((v4 + 16) & ~v4));
}

uint64_t objectdestroy_6Tm()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = (int *)type metadata accessor for ImpressionableViewModifier(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v17 = *(_QWORD *)(v2 + 64);
  v4 = sub_20E4A5204();
  v5 = *(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80);
  v18 = *(_QWORD *)(v4 - 8);
  v19 = v4;
  v6 = v0 + ((v3 + 16) & ~v3);
  swift_bridgeObjectRelease();
  v7 = v6 + v1[5];
  v8 = sub_20E4A5450();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  sub_20E3A3D14(*(_QWORD *)(v6 + v1[8]), *(_QWORD *)(v6 + v1[8] + 8), *(unsigned __int8 *)(v6 + v1[8] + 16), *(_BYTE *)(v6 + v1[8] + 17));
  v9 = v6 + v1[9];
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_20E4A5384();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }
  j__swift_release(*(_QWORD *)(v6 + v1[10]), *(unsigned __int8 *)(v6 + v1[10] + 8));
  swift_release();
  v11 = v6 + v1[12];
  v12 = sub_20E4A33B0();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
  v14(v11, v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C68);
  swift_release();
  v14(v6 + v1[13], v12);
  swift_release();
  v15 = v6 + v1[14];
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v15, 1, v12))
      v14(v15, v12);
  }
  else
  {
    swift_release();
  }
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v18 + 8))(v0 + ((((v17 + ((v3 + 16) & ~v3) + 7) & 0xFFFFFFFFFFFFFFF8) + v5 + 16) & ~v5), v19);
  return swift_deallocObject();
}

uint64_t sub_20E3A57A0(uint64_t a1)
{
  return sub_20E3A5800(a1, (uint64_t (*)(uint64_t, unint64_t, _QWORD, _QWORD, unint64_t))sub_20E3A1EFC);
}

uint64_t sub_20E3A57AC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_20E3A57F4(uint64_t a1)
{
  return sub_20E3A5800(a1, (uint64_t (*)(uint64_t, unint64_t, _QWORD, _QWORD, unint64_t))sub_20E3A2298);
}

uint64_t sub_20E3A5800(uint64_t a1, uint64_t (*a2)(uint64_t, unint64_t, _QWORD, _QWORD, unint64_t))
{
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(type metadata accessor for ImpressionableViewModifier(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(unsigned __int8 *)(*(_QWORD *)(sub_20E4A5204() - 8) + 80);
  return a2(a1, v2 + v5, *(_QWORD *)(v2 + v6), *(_QWORD *)(v2 + v6 + 8), v2 + ((v6 + v7 + 16) & ~v7));
}

uint64_t sub_20E3A5894(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18358);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_20E3A58E4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254A18430;
  if (!qword_254A18430)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A18420);
    v2[0] = sub_20E3A5950();
    v2[1] = sub_20E3A50B4();
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254A18430);
  }
  return result;
}

unint64_t sub_20E3A5950()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254A18438;
  if (!qword_254A18438)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A18428);
    v2[0] = sub_20E3A59BC();
    v2[1] = sub_20E3A5070();
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254A18438);
  }
  return result;
}

unint64_t sub_20E3A59BC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254A18440;
  if (!qword_254A18440)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A18448);
    v2[0] = sub_20E39D010(&qword_254A18450, &qword_254A18458, MEMORY[0x24BDEFB78]);
    v2[1] = sub_20E39D010(&qword_254A18460, &qword_254A18468, MEMORY[0x24BDF1028]);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254A18440);
  }
  return result;
}

unint64_t sub_20E3A5A58()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254A18470;
  if (!qword_254A18470)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A18410);
    v2[0] = sub_20E3A5950();
    v2[1] = sub_20E39F334(&qword_253ED21C0, type metadata accessor for _OnScenePhaseChange, (uint64_t)&unk_20E4AAC48);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254A18470);
  }
  return result;
}

unint64_t sub_20E3A5ADC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_253ED0B20;
  if (!qword_253ED0B20)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253ED0B28);
    v2[0] = sub_20E3A5B48();
    v2[1] = sub_20E3A50B4();
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_253ED0B20);
  }
  return result;
}

unint64_t sub_20E3A5B48()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_253ED0B00;
  if (!qword_253ED0B00)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253ED0B08);
    v2[0] = sub_20E3A5BB4();
    v2[1] = sub_20E3A5070();
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_253ED0B00);
  }
  return result;
}

unint64_t sub_20E3A5BB4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_253ED0AF0;
  if (!qword_253ED0AF0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253ED0AF8);
    v2[0] = sub_20E3A5C38();
    v2[1] = sub_20E39D010(&qword_253ED0BF8, &qword_253ED0C00, MEMORY[0x24BDF0400]);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_253ED0AF0);
  }
  return result;
}

unint64_t sub_20E3A5C38()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_253ED0AC0;
  if (!qword_253ED0AC0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253ED0AC8);
    v2[0] = sub_20E3A5CBC();
    v2[1] = sub_20E39D010(&qword_253ED0C58, &qword_253ED0C60, MEMORY[0x24BDF1248]);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_253ED0AC0);
  }
  return result;
}

unint64_t sub_20E3A5CBC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_253ED0A70;
  if (!qword_253ED0A70)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253ED0A78);
    v2[0] = sub_20E39D010(&qword_253ED0BD8, &qword_253ED0BE0, MEMORY[0x24BDEFB78]);
    v2[1] = sub_20E39D010(&qword_253ED0C18, &qword_253ED0C20, MEMORY[0x24BDF1028]);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_253ED0A70);
  }
  return result;
}

unint64_t sub_20E3A5D58()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_253ED0B10;
  if (!qword_253ED0B10)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253ED0B18);
    v2[0] = sub_20E3A5B48();
    v2[1] = sub_20E39F334(&qword_253ED21C0, type metadata accessor for _OnScenePhaseChange, (uint64_t)&unk_20E4AAC48);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_253ED0B10);
  }
  return result;
}

unint64_t sub_20E3A5DDC()
{
  unint64_t result;

  result = qword_253ED0A08;
  if (!qword_253ED0A08)
  {
    result = MEMORY[0x212BBDF90](&unk_20E4A75C0, &type metadata for UniqueImpressionParentIDEnvironmentKey);
    atomic_store(result, (unint64_t *)&qword_253ED0A08);
  }
  return result;
}

uint64_t sub_20E3A5E20(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_20E3A5E64()
{
  unint64_t result;

  result = qword_254A18478;
  if (!qword_254A18478)
  {
    result = MEMORY[0x212BBDF90](&unk_20E4A7588, &type metadata for ListContainerElementSizeWrapperKey);
    atomic_store(result, (unint64_t *)&qword_254A18478);
  }
  return result;
}

uint64_t sub_20E3A5EA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18228);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for ListContainerElementSizeWrapperKey()
{
  return &type metadata for ListContainerElementSizeWrapperKey;
}

ValueMetadata *type metadata accessor for UniqueImpressionParentIDEnvironmentKey()
{
  return &type metadata for UniqueImpressionParentIDEnvironmentKey;
}

uint64_t *sub_20E3A5F18(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    v6 = a2[2];
    *a1 = *a2;
    a1[1] = v5;
    a1[2] = v6;
    v7 = *(int *)(a3 + 24);
    v8 = (uint64_t *)((char *)a1 + v7);
    v9 = (uint64_t *)((char *)a2 + v7);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254A183F0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_20E4A3818();
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18228);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v11 + 16))(v8, v9, v10);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
    }
    else
    {
      *v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_20E3A605C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_release();
  v4 = a1 + *(int *)(a2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A183F0);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v5 = sub_20E4A3818();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

_QWORD *sub_20E3A610C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = a2[1];
  v5 = a2[2];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = v5;
  v6 = *(int *)(a3 + 24);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A183F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = sub_20E4A3818();
    v10 = *(_QWORD *)(v9 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18228);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  else
  {
    *v7 = *v8;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_20E3A6224(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *a1 = *a2;
  v6 = a2[2];
  a1[1] = a2[1];
  a1[2] = v6;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 24);
    v8 = (_QWORD *)((char *)a1 + v7);
    v9 = (_QWORD *)((char *)a2 + v7);
    sub_20E39D1F8((uint64_t)a1 + v7, &qword_254A183F0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254A183F0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_20E4A3818();
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18228);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v11 + 16))(v8, v9, v10);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
    }
    else
    {
      *v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_20E3A6368(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v4 = *(int *)(a3 + 24);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A183F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_20E4A3818();
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8))
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18228);
      memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v5, v6, v8);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v5, 0, 1, v8);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  return a1;
}

uint64_t sub_20E3A6478(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 24);
    v7 = (void *)(a1 + v6);
    v8 = (const void *)(a2 + v6);
    sub_20E39D1F8(a1 + v6, &qword_254A183F0);
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A183F0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_20E4A3818();
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
      {
        v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18228);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v7, v8, v10);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_20E3A65B0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_20E3A65BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18480);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_20E3A663C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_20E3A6648(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18480);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

void sub_20E3A66C0()
{
  unint64_t v0;

  sub_20E3A6754(319, &qword_254A18498, &qword_254A18228);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_20E3A6754(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    v4 = sub_20E4A36BC();
    if (!v5)
      atomic_store(v4, a2);
  }
}

_WORD *__swift_memcpy2_1(_WORD *result, _WORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for ImpressionableViewModifier.ViewState(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;

  if (!a2)
    return 0;
  if (a2 < 0x3FFF)
    goto LABEL_17;
  if (a2 + 49153 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 49153 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 49153;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 49153;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 49153;
  }
LABEL_17:
  v6 = (*a1 & 0xFE | (*a1 >> 15) | (*a1 >> 1) & 0x3F00) ^ 0x3FFF;
  if (v6 >= 0x3FFE)
    v6 = -1;
  return v6 + 1;
}

uint64_t storeEnumTagSinglePayload for ImpressionableViewModifier.ViewState(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  unsigned int v4;
  uint64_t v5;

  if (a3 + 49153 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 49153 < 0xFF0000)
    v4 = 1;
  else
    v4 = v3;
  if (a3 >= 0x3FFF)
    v5 = v4;
  else
    v5 = 0;
  if (a2 <= 0x3FFE)
    return ((uint64_t (*)(void))((char *)&loc_20E3A68B4 + 4 * byte_20E4A72E5[v5]))();
  *a1 = a2 - 0x3FFF;
  return ((uint64_t (*)(void))((char *)sub_20E3A68EC + 4 * byte_20E4A72E0[v5]))();
}

uint64_t sub_20E3A68EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_20E3A68F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x20E3A68FCLL);
  return result;
}

uint64_t sub_20E3A691C(uint64_t result, int a2)
{
  unsigned int v2;

  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x20E3A6924);
  v2 = ((-a2 >> 1) & 0x1FFF) - (a2 << 13);
  *(_WORD *)result = (4 * v2) & 0xFE00 | (2 * (v2 & 0x7F));
  return result;
}

uint64_t sub_20E3A6928(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_20E3A6930(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_20E3A693C(unsigned __int16 *a1)
{
  return *a1 >> 15;
}

_WORD *sub_20E3A6948(_WORD *result)
{
  *result &= ~0x8000u;
  return result;
}

_WORD *sub_20E3A6958(_WORD *result, __int16 a2)
{
  *result = *result & 0x101 | (a2 << 15);
  return result;
}

ValueMetadata *type metadata accessor for ImpressionableViewModifier.ViewState()
{
  return &type metadata for ImpressionableViewModifier.ViewState;
}

unint64_t sub_20E3A6980()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254A184A0;
  if (!qword_254A184A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A184A8);
    v2[0] = sub_20E3A517C();
    v2[1] = sub_20E39D010(&qword_254A183A8, &qword_254A18310, MEMORY[0x24BDEFB78]);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254A184A0);
  }
  return result;
}

uint64_t sub_20E3A6A04()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E3A6A14(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_20E3A6A58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for _ImpressionableGeometryChange(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_release();
  v3 = v0 + ((v2 + 16) & ~v2) + *(int *)(v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A183F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_20E4A3818();
    v5 = *(_QWORD *)(v4 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_20E3A6B2C@<X0>(BOOL *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for _ImpressionableGeometryChange(0) - 8) + 80);
  return sub_20E3A2DB0((double *)(v1 + ((v3 + 16) & ~v3)), a1);
}

uint64_t sub_20E3A6B78()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E3A6B9C(unsigned __int8 *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(*a1);
}

unint64_t sub_20E3A6BC0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_253ED0628;
  if (!qword_253ED0628)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253ED2428);
    v2 = sub_20E39F334((unint64_t *)&qword_253ED0618, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BEE4AB8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_253ED0628);
  }
  return result;
}

unint64_t sub_20E3A6C40()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254A184C0;
  if (!qword_254A184C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A184B8);
    v2[0] = sub_20E39D010(&qword_254A184C8, &qword_254A184B0, MEMORY[0x24BDEFB78]);
    v2[1] = sub_20E39D010(&qword_253ED0BF8, &qword_253ED0C00, MEMORY[0x24BDF0400]);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254A184C0);
  }
  return result;
}

uint64_t static ShelfPageConfiguration.standard.getter()
{
  return 1;
}

uint64_t ShelfPage.init(_:spacing:configuration:content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v18;
  int *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t result;

  v18 = *(_QWORD *)(a7 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(a9, a1, a7);
  v19 = (int *)type metadata accessor for ShelfPage(0, a7, a8, a10);
  v20 = a9 + v19[11];
  *(_QWORD *)v20 = a2;
  *(_BYTE *)(v20 + 8) = a3 & 1;
  *(_QWORD *)(a9 + v19[12]) = a4;
  v21 = (_QWORD *)(a9 + v19[13]);
  *v21 = a5;
  v21[1] = a6;
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8))(a1, a7);
  *(_QWORD *)(a9 + v19[14]) = MEMORY[0x24BEE4AF8];
  return result;
}

uint64_t type metadata accessor for ShelfPage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ShelfPage);
}

void ShelfPage.init<A>(_:spacing:configuration:shelfContent:)(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v20 = a6;
  v23 = a2;
  v24 = a4;
  v22 = a9;
  v21 = a3 & 1;
  v16 = *(_QWORD *)(a7 - 8);
  MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))((char *)&v20 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v18);
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = a7;
  v19[3] = a8;
  v19[4] = a10;
  v19[5] = a11;
  v19[6] = a12;
  v19[7] = a5;
  v19[8] = v20;
  v25 = a7;
  v26 = a8;
  v27 = a10;
  v28 = a11;
  v29 = a12;
  type metadata accessor for _ShelfPageStaticContent();
}

uint64_t sub_20E3A6EA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v8 = MEMORY[0x212BBDF90](&protocol conformance descriptor for _ShelfPageStaticContent<A, B>, a1);
  ShelfPage.init(_:spacing:configuration:content:)(v5, *(_QWORD *)(v6 - 136), *(_DWORD *)(v6 - 148), *(_QWORD *)(v6 - 128), (uint64_t)sub_20E3A70D8, v3, v1, a1, *(_QWORD *)(v6 - 144), v8);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v2, v1);
}

void sub_20E3A6F1C(uint64_t a1)
{
  MEMORY[0x24BDAC7A8](a1);
  type metadata accessor for _ShelfPageStaticContent();
}

void sub_20E3A6F9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;

  v16 = MEMORY[0x24BDAC7A8](a1);
  v18 = (char *)&a9 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v10 + 16))(v9, *(_QWORD *)(v15 - 152), v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v18, v9, v14);
  *(_QWORD *)(v15 - 120) = v14;
  *(_QWORD *)(v15 - 112) = v13;
  *(_QWORD *)(v15 - 104) = v12;
  *(_QWORD *)(v15 - 96) = v11;
  *(_QWORD *)(v15 - 88) = *(_QWORD *)(v15 - 160);
  type metadata accessor for _ShelfPageStaticContent();
}

uint64_t sub_20E3A702C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  void (*v9)(uint64_t, uint64_t);

  v6 = (_QWORD *)(v1 + *(int *)(a1 + 60));
  v7 = *(_QWORD *)(v5 - 136);
  *v6 = *(_QWORD *)(v5 - 144);
  v6[1] = v7;
  MEMORY[0x212BBDF90](&protocol conformance descriptor for _ShelfPageStaticContent<A, B>, v2);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v8(v4, v1, v2);
  v9 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  swift_retain();
  v9(v1, v2);
  v8(*(_QWORD *)(v5 - 128), v4, v2);
  return ((uint64_t (*)(uint64_t, uint64_t))v9)(v4, v2);
}

uint64_t sub_20E3A70B4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E3A70D8(uint64_t a1)
{
  return sub_20E3ADF08(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_20E3A6F1C);
}

void type metadata accessor for _ShelfPageStaticContent()
{
  JUMPOUT(0x212BBDEE8);
}

void _ShelfPageStaticContent.init(_:content:)(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1, a2);
  type metadata accessor for _ShelfPageStaticContent();
}

uint64_t sub_20E3A715C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v4 = (_QWORD *)(v3 + *(int *)(result + 60));
  *v4 = v2;
  v4[1] = v1;
  return result;
}

void ShelfPage.init<A, B, C>(_:spacing:configuration:shelfTransaction:shelfWorking:shelfFailed:shelfContent:)(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __int128 a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v39 = a7;
  v40 = a8;
  v37 = a5;
  v38 = a6;
  v44 = a2;
  v45 = a4;
  v41 = a1;
  v43 = a9;
  v36 = a10;
  v35 = a22;
  v34 = a21;
  v32 = a20;
  v31 = a19;
  v33 = a11;
  v42 = a3 & 1;
  v22 = *(_QWORD *)(a12 - 8);
  MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *))(v22 + 16))((char *)&v30 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = a12;
  *(_QWORD *)(v24 + 24) = a13;
  *(_QWORD *)(v24 + 32) = a14;
  *(_QWORD *)(v24 + 40) = a15;
  *(_QWORD *)(v24 + 48) = a16;
  *(_QWORD *)(v24 + 56) = a17;
  v25 = v31;
  *(_QWORD *)(v24 + 64) = a18;
  *(_QWORD *)(v24 + 72) = v25;
  v26 = v32;
  v27 = v34;
  *(_QWORD *)(v24 + 80) = v32;
  *(_QWORD *)(v24 + 88) = v27;
  v28 = v35;
  v29 = v37;
  *(_QWORD *)(v24 + 96) = v35;
  *(_QWORD *)(v24 + 104) = v29;
  *(_QWORD *)(v24 + 112) = v38;
  *(_QWORD *)(v24 + 120) = v39;
  *(_QWORD *)(v24 + 128) = v40;
  *(_OWORD *)(v24 + 136) = v36;
  *(_QWORD *)(v24 + 152) = v33;
  v46 = a12;
  v47 = a13;
  v48 = a14;
  v49 = a15;
  v50 = a16;
  v51 = a17;
  v52 = a18;
  v53 = v25;
  v54 = v26;
  v55 = v27;
  v56 = v28;
  type metadata accessor for _ShelfPageContinuousContent();
}

uint64_t sub_20E3A7300(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v7 = MEMORY[0x212BBDF90](&protocol conformance descriptor for _ShelfPageContinuousContent<A, B, C, D>, a1);
  ShelfPage.init(_:spacing:configuration:content:)(v4, *(_QWORD *)(v5 - 192), *(_DWORD *)(v5 - 204), *(_QWORD *)(v5 - 184), (uint64_t)sub_20E3A762C, v1, v2, a1, *(_QWORD *)(v5 - 200), v7);
  return (*(uint64_t (**)(_QWORD, uint64_t))(v3 + 8))(*(_QWORD *)(v5 - 216), v2);
}

void sub_20E3A7374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  MEMORY[0x24BDAC7A8](a15);
  type metadata accessor for _ShelfPageContinuousContent();
}

void sub_20E3A745C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;

  v13 = MEMORY[0x24BDAC7A8](a1);
  v15 = (char *)&a9 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v9, v11, v12);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  _ShelfPageContinuousContent.init(_:transaction:working:failed:content:)(v9, (uint64_t)v15, v12);
}

uint64_t sub_20E3A757C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  void (*v6)(uint64_t, uint64_t);

  MEMORY[0x212BBDF90](&protocol conformance descriptor for _ShelfPageContinuousContent<A, B, C, D>, v3);
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 16);
  v5(v1, v2, v3);
  v6 = *(void (**)(uint64_t, uint64_t))(v0 + 8);
  v6(v2, v3);
  v5(*(_QWORD *)(v4 - 184), v1, v3);
  return ((uint64_t (*)(uint64_t, uint64_t))v6)(v1, v3);
}

uint64_t sub_20E3A75F0()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_20E3A762C(uint64_t a1)
{
  uint64_t *v1;

  sub_20E3A7374(a1, v1[13], v1[14], v1[15], v1[16], v1[17], v1[18], v1[19], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8]);
}

void type metadata accessor for _ShelfPageContinuousContent()
{
  JUMPOUT(0x212BBDEE8);
}

void _ShelfPageContinuousContent.init(_:transaction:working:failed:content:)(uint64_t a1@<X0>, uint64_t a2@<X8>, uint64_t a3)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(a2, a1, a3);
  type metadata accessor for _ShelfPageContinuousContent();
}

uint64_t sub_20E3A772C(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  *(_QWORD *)(v1 + a1[27]) = v5;
  v8 = (_QWORD *)(v1 + a1[28]);
  *v8 = v3;
  v8[1] = v18;
  v9 = (_QWORD *)(v1 + a1[29]);
  *v9 = v19;
  v9[1] = v20;
  v10 = (_QWORD *)(v1 + a1[30]);
  *v10 = v21;
  v10[1] = v22;
  v11 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v2 + 8) + 8) + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_20E3C0A08(v24, AssociatedTypeWitness, v4, v6, v11, v23);
  swift_getAssociatedTypeWitness();
  v13 = swift_getAssociatedTypeWitness();
  type metadata accessor for IntentResult(255, v13, v14, v15);
  sub_20E4A5D98();
  sub_20E4A4640();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 8))(v24, v4);
  v17 = (_QWORD *)(v1 + a1[31]);
  *v17 = v26;
  v17[1] = v27;
  return result;
}

void ShelfPage.init<A>(_:spacing:configuration:shelfTransaction:shelfContent:)(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v16;
  char *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  __int128 v23;
  uint64_t v24[3];
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v28 = a6;
  v29 = a7;
  v30 = a4;
  v31 = a5;
  v26 = a9;
  v27 = a2;
  v24[0] = a10;
  v24[1] = a1;
  v25 = a3 & 1;
  v24[2] = *(_QWORD *)(a8 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v17 = (char *)v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v18 + 16))(v17);
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = a8;
  v19[3] = a10;
  v19[4] = a11;
  v19[5] = a12;
  v19[6] = a13;
  v19[7] = a14;
  v19[8] = a15;
  v20 = (_QWORD *)swift_allocObject();
  v20[2] = a8;
  v20[3] = a10;
  v20[4] = a11;
  v20[5] = a12;
  v20[6] = a13;
  v20[7] = a14;
  v20[8] = a15;
  v21 = sub_20E3ADB5C();
  v22 = sub_20E3ADBA0();
  *(_QWORD *)&v23 = v20;
  *((_QWORD *)&v23 + 1) = v28;
  ShelfPage.init<A, B, C>(_:spacing:configuration:shelfTransaction:shelfWorking:shelfFailed:shelfContent:)((uint64_t)v17, v27, v25, v30, v31, (uint64_t)sub_20E3ADB04, (uint64_t)v19, (uint64_t)sub_20E3ADB28, v26, v23, v29, a8, v24[0], (uint64_t)&type metadata for _IntentViewDefaultContinuousWorking, (uint64_t)&type metadata for _IntentViewDefaultContinuousFailed, a11, a12, v21, v22,
    a13,
    a14,
    a15);
}

uint64_t sub_20E3A7A08()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, uint64_t))(*(_QWORD *)(v1 - 144) + 8))(*(_QWORD *)(v1 - 152), v0);
}

uint64_t sub_20E3A7A3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v5 = type metadata accessor for ShelfPageContext(0, a2, a4, a4);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v10 - v7;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v10 - v7, a1, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t _IntentViewDefaultContinuousWorking.init<A>(context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;

  v5 = type metadata accessor for ShelfPageContext(0, a2, a3, a4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
}

uint64_t sub_20E3A7AF4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X6>, _QWORD *a7@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  uint64_t result;
  uint64_t v18;

  v12 = type metadata accessor for ShelfPageContext(0, a5, a6, a4);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v18 - v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v18 - v14, a4, v12);
  v16 = a1;
  swift_retain();
  result = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  *a7 = a1;
  a7[1] = a2;
  a7[2] = a3;
  return result;
}

uint64_t _IntentViewDefaultContinuousFailed.init<A>(error:retry:context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  uint64_t v12;
  uint64_t result;

  v12 = type metadata accessor for ShelfPageContext(0, a5, a6, a4);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(a4, v12);
  *a7 = a1;
  a7[1] = a2;
  a7[2] = a3;
  return result;
}

uint64_t sub_20E3A7C1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t result;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(a3, v3, a2);
  v7 = *(int *)(a2 + 56);
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a3 + v7) = a1;
  return result;
}

uint64_t ShelfPage.onScroll(perform:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t result;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(a4, v4);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a1;
  *(_QWORD *)(v9 + 24) = a2;
  v10 = *(int *)(a3 + 56);
  v11 = *(_QWORD **)(a4 + v10);
  swift_retain();
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_20E3AD284(0, v11[2] + 1, 1, v11);
    v11 = (_QWORD *)result;
  }
  v14 = v11[2];
  v13 = v11[3];
  if (v14 >= v13 >> 1)
  {
    result = (uint64_t)sub_20E3AD284((_QWORD *)(v13 > 1), v14 + 1, 1, v11);
    v11 = (_QWORD *)result;
  }
  v11[2] = v14 + 1;
  v15 = &v11[2 * v14];
  v15[4] = sub_20E3ADC14;
  v15[5] = v9;
  *(_QWORD *)(a4 + v10) = v11;
  return result;
}

uint64_t sub_20E3A7D68(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t ShelfPage.body.getter@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(_QWORD *, uint64_t *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[2];
  _QWORD v30[2];
  _QWORD v31[2];
  _QWORD v32[2];
  _QWORD v33[2];
  _QWORD v34[2];

  v4 = *(a1 - 1);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *))(v4 + 16))((char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v7 = (char *)swift_allocObject();
  v8 = a1[3];
  *((_QWORD *)v7 + 2) = a1[2];
  *((_QWORD *)v7 + 3) = v8;
  *((_QWORD *)v7 + 4) = a1[4];
  (*(void (**)(char *, char *, _QWORD *))(v4 + 32))(&v7[v6], (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  v9 = sub_20E4A3650();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A18510);
  v10 = sub_20E4A39D4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A18518);
  v11 = sub_20E4A39D4();
  v12 = sub_20E4A3E00();
  v13 = MEMORY[0x212BBDF90](MEMORY[0x24BDEB188], v9);
  v14 = sub_20E39D010(&qword_254A18520, &qword_254A18510, MEMORY[0x24BDF06F0]);
  v33[0] = v13;
  v33[1] = v14;
  v15 = MEMORY[0x24BDED308];
  v16 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v10, v33);
  v17 = sub_20E39D010(&qword_254A18528, &qword_254A18518, MEMORY[0x24BDF0400]);
  v32[0] = v16;
  v32[1] = v17;
  v31[0] = MEMORY[0x212BBDF90](v15, v11, v32);
  v31[1] = v16;
  MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v12, v31);
  v18 = sub_20E4A3674();
  v19 = sub_20E4A39D4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A18530);
  v20 = sub_20E4A39D4();
  v30[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDEB238], v18);
  v30[1] = v14;
  v21 = MEMORY[0x212BBDF90](v15, v19, v30);
  v22 = sub_20E39D010((unint64_t *)&qword_254A18538, &qword_254A18530, MEMORY[0x24BDF1028]);
  v29[0] = v21;
  v29[1] = v22;
  MEMORY[0x212BBDF90](v15, v20, v29);
  v27 = sub_20E4A38A8();
  v28 = v23;
  v24 = sub_20E4A38B4();
  MEMORY[0x212BBDF90](MEMORY[0x24BDEC6F8], v24);
  v25 = *(void (**)(_QWORD *, uint64_t *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
  v25(v34, &v27, v24);
  swift_release();
  v27 = v34[0];
  v28 = v34[1];
  v25(a2, &v27, v24);
  return swift_release();
}

uint64_t sub_20E3A8088@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  char *v35;
  void (*v36)(char *, uint64_t);
  _QWORD v38[3];
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD v53[2];
  _QWORD v54[2];
  unint64_t v55;
  unint64_t v56;
  _QWORD v57[2];
  _QWORD v58[2];
  _QWORD v59[3];

  v43 = a5;
  v44 = a2;
  v46 = a1;
  v47 = a6;
  v8 = sub_20E4A3650();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A18510);
  v9 = sub_20E4A39D4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A18518);
  v10 = sub_20E4A39D4();
  v11 = sub_20E4A3E00();
  v12 = MEMORY[0x212BBDF90](MEMORY[0x24BDEB188], v8);
  v45 = sub_20E39D010(&qword_254A18520, &qword_254A18510, MEMORY[0x24BDF06F0]);
  v59[0] = v12;
  v59[1] = v45;
  v13 = MEMORY[0x24BDED308];
  v14 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v9, v59);
  v58[0] = v14;
  v58[1] = sub_20E39D010(&qword_254A18528, &qword_254A18518, MEMORY[0x24BDF0400]);
  v57[0] = MEMORY[0x212BBDF90](v13, v10, v58);
  v57[1] = v14;
  v38[2] = v11;
  v38[1] = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v11, v57);
  v15 = sub_20E4A3674();
  v39 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)v38 - v16;
  v18 = sub_20E4A39D4();
  v42 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)v38 - v19;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A18530);
  v21 = sub_20E4A39D4();
  v41 = *(_QWORD *)(v21 - 8);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)v38 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v40 = (char *)v38 - v25;
  sub_20E4A407C();
  v26 = v43;
  type metadata accessor for ShelfPage(0, a3, a4, v43);
  v48 = a3;
  v49 = a4;
  v50 = v26;
  v51 = v44;
  v52 = v46;
  sub_20E4A3680();
  v55 = 0xD000000000000023;
  v56 = 0x800000020E4CAA20;
  v27 = MEMORY[0x212BBDF90](MEMORY[0x24BDEB238], v15);
  sub_20E4A428C();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v17, v15);
  swift_getKeyPath();
  sub_20E4A37F4();
  v55 = v28;
  v56 = v29;
  v54[0] = v27;
  v54[1] = v45;
  v30 = MEMORY[0x24BDED308];
  v31 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v18, v54);
  sub_20E4A4250();
  swift_release();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v20, v18);
  v32 = sub_20E39D010((unint64_t *)&qword_254A18538, &qword_254A18530, MEMORY[0x24BDF1028]);
  v53[0] = v31;
  v53[1] = v32;
  MEMORY[0x212BBDF90](v30, v21, v53);
  v33 = v41;
  v34 = *(void (**)(char *, char *, uint64_t))(v41 + 16);
  v35 = v40;
  v34(v40, v24, v21);
  v36 = *(void (**)(char *, uint64_t))(v33 + 8);
  v36(v24, v21);
  v34(v47, v35, v21);
  return ((uint64_t (*)(char *, uint64_t))v36)(v35, v21);
}

uint64_t sub_20E3A84DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  unint64_t v40;
  unint64_t v41;
  char *v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t, uint64_t);
  char *v55;
  void (*v56)(uint64_t, uint64_t);
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(char *, char *, uint64_t);
  char *v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD v104[2];
  _QWORD v105[2];
  _QWORD v106[2];
  _QWORD v107[2];
  _QWORD v108[2];
  _QWORD v109[2];
  _QWORD v110[4];

  v98 = a3;
  v78 = a2;
  v97 = a6;
  v9 = type metadata accessor for ShelfPage(0, a3, a4, a5);
  v85 = *(_QWORD *)(v9 - 8);
  v81 = *(_QWORD *)(v85 + 64);
  MEMORY[0x24BDAC7A8](v9);
  v84 = (char *)&v74 - v10;
  v83 = sub_20E4A3818();
  v82 = *(_QWORD *)(v83 - 8);
  MEMORY[0x24BDAC7A8](v83);
  v77 = v11;
  v80 = (char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_20E4A3650();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A18510);
  v13 = v12;
  v89 = v12;
  v14 = sub_20E4A39D4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A18518);
  v15 = sub_20E4A39D4();
  v86 = *(_QWORD *)(v15 - 8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v88 = (char *)&v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v87 = (char *)&v74 - v18;
  v96 = v19;
  v95 = sub_20E4A3E00();
  v94 = *(_QWORD *)(v95 - 8);
  MEMORY[0x24BDAC7A8](v95);
  v93 = (char *)&v74 - v20;
  v21 = sub_20E4A3E78();
  v22 = MEMORY[0x24BDAC7A8](v21);
  v90 = *(_QWORD *)(v13 - 8);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v74 - v24;
  v91 = v14;
  v92 = *(_QWORD *)(v14 - 8);
  v26 = MEMORY[0x24BDAC7A8](v23);
  v75 = (char *)&v74 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = MEMORY[0x24BDAC7A8](v26);
  v74 = (char *)&v74 - v29;
  MEMORY[0x24BDAC7A8](v28);
  v31 = (char *)&v74 - v30;
  sub_20E4A3CD4();
  v32 = a1;
  v100 = v98;
  v101 = a4;
  v102 = a5;
  v103 = a1;
  sub_20E3A8E14();
  v76 = a4;
  v79 = a5;
  sub_20E4A3644();
  v110[2] = 0xD000000000000020;
  v110[3] = 0x800000020E4CA9F0;
  v33 = v89;
  v34 = MEMORY[0x212BBDF90](MEMORY[0x24BDEB188], v89);
  v99 = v31;
  sub_20E4A428C();
  (*(void (**)(char *, uint64_t))(v90 + 8))(v25, v33);
  if (*(_QWORD *)(*(_QWORD *)(v32 + *(int *)(v9 + 56)) + 16))
  {
    v90 = v34;
    v35 = v82;
    v36 = v80;
    v37 = v83;
    (*(void (**)(char *, uint64_t, uint64_t))(v82 + 16))(v80, v78, v83);
    v38 = v85;
    v39 = v84;
    (*(void (**)(char *, uint64_t, uint64_t))(v85 + 16))(v84, v32, v9);
    v40 = (*(unsigned __int8 *)(v35 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
    v41 = (v77 + *(unsigned __int8 *)(v38 + 80) + v40) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
    v42 = (char *)swift_allocObject();
    v43 = v76;
    *((_QWORD *)v42 + 2) = v98;
    *((_QWORD *)v42 + 3) = v43;
    *((_QWORD *)v42 + 4) = v79;
    v44 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
    v34 = v90;
    v44(&v42[v40], v36, v37);
    (*(void (**)(char *, char *, uint64_t))(v38 + 32))(&v42[v41], v39, v9);
    type metadata accessor for CGRect(0);
    v45 = sub_20E39D010(&qword_254A18520, &qword_254A18510, MEMORY[0x24BDF06F0]);
    v110[0] = v34;
    v110[1] = v45;
    v46 = MEMORY[0x24BDED308];
    v47 = v91;
    v48 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v91, v110);
    sub_20E39F334(&qword_254A18A50, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x24BDBD830]);
    v49 = (uint64_t)v88;
    sub_20E4A42E0();
    swift_release();
    v50 = sub_20E39D010(&qword_254A18528, &qword_254A18518, MEMORY[0x24BDF0400]);
    v109[0] = v48;
    v109[1] = v50;
    v51 = v46;
    v52 = v96;
    MEMORY[0x212BBDF90](v51, v96, v109);
    v53 = v86;
    v54 = *(void (**)(char *, uint64_t, uint64_t))(v86 + 16);
    v55 = v87;
    v54(v87, v49, v52);
    v56 = *(void (**)(uint64_t, uint64_t))(v53 + 8);
    v56(v49, v52);
    v54((char *)v49, (uint64_t)v55, v52);
    v57 = v93;
    sub_20E3DC6B0(v49, v52);
    v56(v49, v52);
    v56((uint64_t)v55, v52);
    (*(void (**)(char *, uint64_t))(v92 + 8))(v99, v47);
  }
  else
  {
    v58 = sub_20E39D010(&qword_254A18520, &qword_254A18510, MEMORY[0x24BDF06F0]);
    v105[0] = v34;
    v105[1] = v58;
    v59 = MEMORY[0x24BDED308];
    v47 = v91;
    v60 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v91, v105);
    v61 = v92;
    v62 = *(void (**)(char *, char *, uint64_t))(v92 + 16);
    v63 = v74;
    v62(v74, v99, v47);
    v64 = (uint64_t)v75;
    v62(v75, v63, v47);
    v65 = sub_20E39D010(&qword_254A18528, &qword_254A18518, MEMORY[0x24BDF0400]);
    v104[0] = v60;
    v104[1] = v65;
    v52 = v96;
    MEMORY[0x212BBDF90](v59, v96, v104);
    v57 = v93;
    sub_20E39CBE0(v64, v52, v47);
    v66 = *(void (**)(uint64_t, uint64_t))(v61 + 8);
    v66(v64, v47);
    v66((uint64_t)v63, v47);
    v66((uint64_t)v99, v47);
  }
  v67 = sub_20E39D010(&qword_254A18520, &qword_254A18510, MEMORY[0x24BDF06F0]);
  v108[0] = v34;
  v108[1] = v67;
  v68 = MEMORY[0x24BDED308];
  v69 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v47, v108);
  v70 = sub_20E39D010(&qword_254A18528, &qword_254A18518, MEMORY[0x24BDF0400]);
  v107[0] = v69;
  v107[1] = v70;
  v106[0] = MEMORY[0x212BBDF90](v68, v52, v107);
  v106[1] = v69;
  v71 = v95;
  MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v95, v106);
  v72 = v94;
  (*(void (**)(uint64_t, char *, uint64_t))(v94 + 16))(v97, v57, v71);
  return (*(uint64_t (**)(char *, uint64_t))(v72 + 8))(v57, v71);
}

uint64_t sub_20E3A8D2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, char *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  void (*v17)(char *, uint64_t);
  uint64_t v19;

  v6 = *(_QWORD *)(a2 - 8);
  v7 = MEMORY[0x24BDAC7A8](a1);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v19 - v10;
  v15 = type metadata accessor for ShelfPage(0, v12, v13, v14);
  (*(void (**)(uint64_t))(a1 + *(int *)(v15 + 52)))(a1);
  v16 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v16(v11, v9, a2);
  v17 = *(void (**)(char *, uint64_t))(v6 + 8);
  v17(v9, a2);
  v16(a3, v11, a2);
  return ((uint64_t (*)(char *, uint64_t))v17)(v11, a2);
}

uint64_t sub_20E3A8E14()
{
  sub_20E4A3E78();
  sub_20E39F334((unint64_t *)&qword_254A18A58, (uint64_t (*)(uint64_t))MEMORY[0x24BDEF998], MEMORY[0x24BDEF9B8]);
  return sub_20E4A644C();
}

void sub_20E3A8E78(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(double *)a1 = sub_20E3A8EA4();
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
}

double sub_20E3A8EA4()
{
  uint64_t v0;
  double x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  CGRect v6;
  CGRect v7;

  if (qword_254A180C0 != -1)
    swift_once();
  v0 = sub_20E4A39A4();
  __swift_project_value_buffer(v0, (uint64_t)qword_254A184D0);
  sub_20E4A3800();
  x = v6.origin.x;
  y = v6.origin.y;
  width = v6.size.width;
  height = v6.size.height;
  if ((COERCE_UNSIGNED_INT64(CGRectGetMinX(v6)) & 0x7FFFFFFFFFFFFFFFLL) != 0)
    x = -x;
  v7.origin.x = x;
  v7.origin.y = y;
  v7.size.width = width;
  v7.size.height = height;
  CGRectGetMinY(v7);
  return x;
}

uint64_t sub_20E3A8F58(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(_QWORD *);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[10];

  v12 = sub_20E4A3818();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1[1];
  v39 = *a1;
  v18 = a1[2];
  v17 = a1[3];
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a2, v12);
  sub_20E4A37DC();
  v20 = v19;
  v22 = v21;
  v24 = v23;
  v26 = v25;
  sub_20E4A37F4();
  v28 = v27;
  v37 = v29;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  result = type metadata accessor for ShelfPage(0, a4, a5, a6);
  v31 = *(_QWORD *)(a3 + *(int *)(result + 56));
  v32 = *(_QWORD *)(v31 + 16);
  if (v32)
  {
    swift_bridgeObjectRetain();
    v33 = v31 + 40;
    v38 = v16;
    v34 = v37;
    do
    {
      v35 = *(void (**)(_QWORD *))(v33 - 8);
      v40[0] = v20;
      v40[1] = v22;
      v40[2] = v24;
      v40[3] = v26;
      v40[4] = v28;
      v40[5] = v34;
      v40[6] = v39;
      v40[7] = v38;
      v40[8] = v18;
      v40[9] = v17;
      swift_retain();
      v35(v40);
      swift_release();
      v33 += 16;
      --v32;
    }
    while (v32);
    return swift_bridgeObjectRelease();
  }
  return result;
}

double EnvironmentValues.shelfContainerSize.getter()
{
  uint64_t v0;
  uint64_t v1;
  double v2;

  type metadata accessor for ShelfContainerEnviromentValues();
  sub_20E39F334((unint64_t *)&qword_254A18540, (uint64_t (*)(uint64_t))type metadata accessor for ShelfContainerEnviromentValues, (uint64_t)&unk_20E4A7ED8);
  v0 = sub_20E4A3C20();
  if (!v0)
    return 0.0;
  v1 = v0;
  swift_getKeyPath();
  sub_20E4A341C();
  swift_release();
  v2 = *(double *)(v1 + 16);
  swift_release();
  return v2;
}

uint64_t sub_20E3A91AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t KeyPath;

  type metadata accessor for ShelfContainerEnviromentValues();
  sub_20E39F334((unint64_t *)&qword_254A18540, (uint64_t (*)(uint64_t))type metadata accessor for ShelfContainerEnviromentValues, (uint64_t)&unk_20E4A7ED8);
  v0 = sub_20E4A3C20();
  swift_release();
  if (!v0)
  {
    v1 = swift_allocObject();
    sub_20E4A3428();
    *(_QWORD *)(v1 + 16) = 0;
    *(_QWORD *)(v1 + 24) = 0;
    sub_20E4A3C2C();
  }
  result = sub_20E4A3C20();
  if (result)
  {
    KeyPath = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](KeyPath);
    sub_20E4A3410();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_20E3A9314@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t AssociatedConformanceWitness;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  void (*v23)(_BYTE *, _QWORD);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char v32;
  void (*v33)(_BYTE *, _QWORD);
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t AssociatedTypeWitness;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE v52[32];

  v50 = a4;
  v48 = *(_QWORD *)(a4 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = sub_20E4A60E0();
  v45 = *(_QWORD *)(v9 - 8);
  v46 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v40 - v10;
  v12 = swift_getAssociatedTypeWitness();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v40 - v17;
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16);
  v51 = a5;
  v19(a5, (uint64_t)a1, v12);
  v47 = a2;
  sub_20E4A5F3C();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v49 = a1;
  v42 = AssociatedConformanceWitness;
  LOBYTE(a2) = sub_20E4A5BE8();
  v21 = *(void (**)(char *, uint64_t))(v13 + 8);
  v21(v18, v12);
  v41 = v11;
  if ((a2 & 1) != 0)
  {
    sub_20E4A5BC4();
    v23 = (void (*)(_BYTE *, _QWORD))sub_20E4A5FC0();
    v24 = AssociatedTypeWitness;
    v25 = *(_QWORD *)(AssociatedTypeWitness - 8);
    (*(void (**)(char *))(v25 + 16))(v11);
    v23(v52, 0);
    v21(v18, v12);
    v40 = v25;
    v43 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56);
    v43(v11, 0, 1, v24);
    v27 = type metadata accessor for ShelfPageContext(0, a3, v50, v26);
    (*(void (**)(uint64_t, char *, uint64_t))(v45 + 32))(v51 + *(int *)(v27 + 36), v11, v46);
  }
  else
  {
    v28 = type metadata accessor for ShelfPageContext(0, a3, v50, v22);
    v29 = (char *)(v51 + *(int *)(v28 + 36));
    v24 = AssociatedTypeWitness;
    v40 = *(_QWORD *)(AssociatedTypeWitness - 8);
    v43 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v40 + 56);
    v43(v29, 1, 1, AssociatedTypeWitness);
  }
  v30 = v47;
  sub_20E4A5F60();
  sub_20E4A5BC4();
  v21(v16, v12);
  v31 = v49;
  v32 = sub_20E4A5BF4();
  v21(v18, v12);
  if ((v32 & 1) != 0)
  {
    sub_20E4A5F54();
    v33 = (void (*)(_BYTE *, _QWORD))sub_20E4A5FC0();
    v34 = v41;
    (*(void (**)(char *))(v40 + 16))(v41);
    v33(v52, 0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 8))(v30, a3);
    v21(v31, v12);
    v21(v18, v12);
    v43(v34, 0, 1, v24);
    v36 = type metadata accessor for ShelfPageContext(0, a3, v50, v35);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v45 + 32))(v51 + *(int *)(v36 + 40), v34, v46);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 8))(v30, a3);
    v21(v31, v12);
    v39 = type metadata accessor for ShelfPageContext(0, a3, v50, v38);
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v43)(v51 + *(int *)(v39 + 40), 1, 1, v24);
  }
}

uint64_t ShelfPageContext.shelfOffset.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a1, v1, AssociatedTypeWitness);
}

uint64_t ShelfPageContext.previousShelf.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 36);
  swift_getAssociatedTypeWitness();
  v5 = sub_20E4A60E0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t ShelfPageContext.nextShelf.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 40);
  swift_getAssociatedTypeWitness();
  v5 = sub_20E4A60E0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t static ShelfPageConfiguration.showsScrollIndicator.getter()
{
  return 1;
}

_QWORD *sub_20E3A9868@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

_QWORD *sub_20E3A9874@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_QWORD *sub_20E3A9888@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_QWORD *sub_20E3A989C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_20E3A98B0(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_QWORD *sub_20E3A98E0@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_20E3A990C@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v5 == 0;
  return result;
}

_QWORD *sub_20E3A9930(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_20E3A9944(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

_QWORD *sub_20E3A9958(_QWORD *result)
{
  _QWORD *v1;

  *v1 ^= *result;
  return result;
}

_QWORD *sub_20E3A996C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_20E3A9980(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_20E3A9994(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_20E3A99A8(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_20E3A99BC()
{
  _QWORD *v0;

  return *v0 == 0;
}

uint64_t sub_20E3A99CC()
{
  return sub_20E4A611C();
}

_QWORD *sub_20E3A99E4(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= ~*result;
  return result;
}

_QWORD *sub_20E3A99F8@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_20E3A9A08(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

BOOL sub_20E3A9A14(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_20E3A9A28@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_20E455D3C();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t _ShelfPageStaticContent.body.getter@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  char *v25;
  uint64_t v26;
  _QWORD *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  char *v32;
  void (*v33)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t KeyPath;
  char *v39;
  char *v40;
  uint64_t AssociatedConformanceWitness;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD v56[7];

  v49 = a2;
  v3 = *(_QWORD *)(*(a1 - 1) + 64);
  v47 = *(a1 - 1);
  v48 = v3;
  v4 = MEMORY[0x24BDAC7A8](a1);
  v46 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v4 + 16);
  v7 = *(_QWORD *)(v4 + 32);
  v9 = type metadata accessor for IndexedRandomAccessCollection(0, v6, v7, v8);
  v43 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v50 = (uint64_t)&v35 - v10;
  v11 = a1[6];
  swift_getAssociatedTypeWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v13 = a1[3];
  v14 = MEMORY[0x212BBDF90](&protocol conformance descriptor for IndexedRandomAccessCollection<A>, v9);
  v42 = v14;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v56[1] = v9;
  v56[2] = AssociatedTypeWitness;
  v56[3] = v13;
  v56[4] = v14;
  v15 = v13;
  v56[5] = AssociatedConformanceWitness;
  v37 = sub_20E4A47C0();
  v45 = *(_QWORD *)(v37 - 8);
  v16 = MEMORY[0x24BDAC7A8](v37);
  v39 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v40 = (char *)&v35 - v18;
  v36 = v6;
  v19 = v44;
  RandomAccessCollection.indexed.getter(v6, v50);
  v51 = v6;
  v52 = v13;
  v20 = a1[5];
  v53 = v7;
  v54 = v20;
  v21 = v7;
  v55 = v11;
  KeyPath = swift_getKeyPath();
  v22 = v46;
  v23 = v47;
  (*(void (**)(char *, uint64_t, _QWORD *))(v47 + 16))(v46, v19, a1);
  v24 = (*(unsigned __int8 *)(v23 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  v25 = (char *)swift_allocObject();
  v26 = v36;
  *((_QWORD *)v25 + 2) = v36;
  *((_QWORD *)v25 + 3) = v15;
  *((_QWORD *)v25 + 4) = v21;
  *((_QWORD *)v25 + 5) = v20;
  *((_QWORD *)v25 + 6) = v11;
  (*(void (**)(char *, char *, _QWORD *))(v23 + 32))(&v25[v24], v22, a1);
  v27 = (_QWORD *)swift_allocObject();
  v27[2] = v26;
  v27[3] = v15;
  v27[4] = v21;
  v27[5] = v20;
  v27[6] = v11;
  v27[7] = sub_20E3ADE58;
  v27[8] = v25;
  v28 = v39;
  sub_20E4A47A8();
  v56[0] = v20;
  v29 = v37;
  MEMORY[0x212BBDF90](MEMORY[0x24BDF4A08], v37, v56);
  v30 = v45;
  v31 = *(void (**)(char *, char *, uint64_t))(v45 + 16);
  v32 = v40;
  v31(v40, v28, v29);
  v33 = *(void (**)(char *, uint64_t))(v30 + 8);
  v33(v28, v29);
  v31(v49, v32, v29);
  return ((uint64_t (*)(char *, uint64_t))v33)(v32, v29);
}

uint64_t sub_20E3A9DC8()
{
  swift_getAssociatedTypeWitness();
  return sub_20E4A61B8();
}

void sub_20E3A9E30(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>)
{
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[5];
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v18 = a6;
  v19 = a7;
  v21 = a1;
  v22 = a2;
  v23 = a8;
  MEMORY[0x24BDAC7A8](a1);
  v20 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v17[1] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v17[2] = AssociatedTypeWitness;
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v17[0] = a5;
  v14 = type metadata accessor for ShelfPageContext(0, a3, a5, v13);
  v17[3] = *(_QWORD *)(v14 - 8);
  v17[4] = v14;
  v15 = MEMORY[0x24BDAC7A8](v14);
  v16 = MEMORY[0x24BDAC7A8](v15);
  MEMORY[0x24BDAC7A8](v16);
  v24 = a3;
  v25 = a4;
  v26 = a5;
  v27 = v18;
  v28 = v19;
  type metadata accessor for _ShelfPageStaticContent();
}

uint64_t sub_20E3A9F94(uint64_t a1)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  void (*v14)(uint64_t, uint64_t);

  *(_QWORD *)(v10 - 160) = *(_QWORD *)(v3 + *(int *)(a1 + 60));
  (*(void (**)(char *, _QWORD, _QWORD))(*(_QWORD *)(v10 - 200) + 16))(v2, *(_QWORD *)(v10 - 144), *(_QWORD *)(v10 - 192));
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v12 = *(_QWORD *)(v10 - 152);
  v11(v12, v3, v4);
  sub_20E3A9314(v2, v12, v4, *(_QWORD *)(v10 - 208), v5);
  (*(void (**)(_QWORD, uint64_t))(v10 - 160))(*(_QWORD *)(v10 - 136), v5);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v10 - 184) + 8))(v5, *(_QWORD *)(v10 - 176));
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
  v13(v7, v8, v1);
  v14 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  v14(v8, v1);
  v13(*(_QWORD *)(v10 - 128), v7, v1);
  return ((uint64_t (*)(uint64_t, uint64_t))v14)(v7, v1);
}

uint64_t sub_20E3AA070(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t TupleTypeMetadata2;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return a2(a1, a1 + *(int *)(TupleTypeMetadata2 + 48));
}

uint64_t sub_20E3AA130()
{
  return sub_20E4A4274();
}

uint64_t sub_20E3AA14C()
{
  uint64_t AssociatedTypeWitness;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  type metadata accessor for IntentResult(255, AssociatedTypeWitness, v1, v2);
  sub_20E4A5D98();
  sub_20E4A4670();
  sub_20E4A464C();
  return v4;
}

uint64_t sub_20E3AA224()
{
  uint64_t AssociatedTypeWitness;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  type metadata accessor for IntentResult(255, AssociatedTypeWitness, v1, v2);
  sub_20E4A5D98();
  sub_20E4A4670();
  sub_20E4A4664();
  return v4;
}

void _ShelfPageContinuousContent.body.getter(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[7];
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v17 = a2;
  v21 = *(a1 - 1);
  v16 = *(_QWORD *)(v21 + 64);
  v3 = MEMORY[0x24BDAC7A8](a1);
  v20 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for IndexedRandomAccessCollection(0, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 48), v5);
  MEMORY[0x24BDAC7A8](v6);
  v22 = (char *)v12 - v7;
  swift_getAssociatedTypeWitness();
  v8 = a1[12];
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  v12[5] = v8;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = a1[3];
  v14 = a1[4];
  v18 = v10;
  v19 = a1[5];
  v11 = a1[7];
  v15 = a1[8];
  v12[6] = v11;
  v13 = a1[9];
  v23 = a1;
  v24 = AssociatedTypeWitness;
  v25 = v14;
  v26 = v10;
  v27 = v19;
  v28 = v15;
  v29 = v11;
  v30 = v13;
  type metadata accessor for IntentResultView();
}

void sub_20E3AA4CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  *(_QWORD *)(v16 - 472) = a1;
  *(_QWORD *)(v16 - 352) = v15;
  v17 = type metadata accessor for _ContinuousIntentDispatchWorker(255, v12, v15, v13);
  v18 = MEMORY[0x212BBDF90](&unk_20E4A9AB8, v17);
  *(_QWORD *)(v16 - 448) = type metadata accessor for _IntentDispatchViewModifier(255, v17, v18, v19);
  *(_QWORD *)(v16 - 456) = sub_20E4A39D4();
  *(_QWORD *)(v16 - 424) = type metadata accessor for PageResourceMetricsViewModifier(255, v12, v15, v20);
  v21 = sub_20E4A39D4();
  *(_QWORD *)(v16 - 440) = v21;
  *(_QWORD *)(v16 - 400) = v14;
  v22 = MEMORY[0x212BBDF90](&protocol conformance descriptor for IndexedRandomAccessCollection<A>, v14);
  *(_QWORD *)(v16 - 408) = v22;
  v23 = *(_QWORD *)(v11 + 88);
  *(_QWORD *)(v16 - 144) = v14;
  *(_QWORD *)(v16 - 136) = v9;
  *(_QWORD *)(v16 - 128) = v21;
  *(_QWORD *)(v16 - 120) = v22;
  *(_QWORD *)(v16 - 112) = v23;
  *(_QWORD *)(v16 - 560) = v23;
  v24 = sub_20E4A47C0();
  *(_QWORD *)(v16 - 376) = *(_QWORD *)(v24 - 8);
  *(_QWORD *)(v16 - 488) = v24;
  MEMORY[0x24BDAC7A8](v24);
  *(_QWORD *)(v16 - 480) = (char *)&a9 - v25;
  v28 = type metadata accessor for _PrefetchMediaArtworkAdapter(255, v10, v26, v27);
  *(_QWORD *)(v16 - 464) = v28;
  v29 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A18550);
  v30 = sub_20E3B1B30(&qword_254A18558, &qword_254A18550, MEMORY[0x24BEE23D8], MEMORY[0x24BEE12A8]);
  *(_QWORD *)(v16 - 144) = v28;
  *(_QWORD *)(v16 - 136) = v29;
  *(_QWORD *)(v16 - 128) = &off_24C9415A8;
  *(_QWORD *)(v16 - 120) = v30;
  type metadata accessor for _PrefetchMediaArtworkViewModifier();
}

void sub_20E3AA664(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  *(_QWORD *)(v12 - 416) = a1;
  v13 = sub_20E4A39D4();
  *(_QWORD *)(v12 - 392) = v13;
  *(_QWORD *)(v12 - 384) = *(_QWORD *)(v13 - 8);
  v14 = MEMORY[0x24BDAC7A8](v13);
  *(_QWORD *)(v12 - 496) = (char *)&a9 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  *(_QWORD *)(v12 - 432) = (char *)&a9 - v16;
  v17 = *(_QWORD *)(v12 - 304);
  v18 = v11;
  *(_QWORD *)(v12 - 552) = v10;
  v19 = *(_QWORD *)(v12 - 320);
  RandomAccessCollection.indexed.getter(v11, v17);
  *(_QWORD *)(v12 - 288) = v11;
  *(_QWORD *)(v12 - 568) = v11;
  v20 = *(_QWORD *)(v12 - 344);
  *(_QWORD *)(v12 - 280) = v20;
  v21 = *(_QWORD *)(v12 - 512);
  *(_QWORD *)(v12 - 272) = v21;
  v22 = *(_QWORD *)(v12 - 336);
  *(_QWORD *)(v12 - 264) = v22;
  v23 = *(_QWORD *)(v12 - 528);
  *(_QWORD *)(v12 - 256) = v10;
  *(_QWORD *)(v12 - 248) = v23;
  v24 = *(_QWORD *)(v12 - 504);
  v25 = *(_QWORD *)(v12 - 520);
  *(_QWORD *)(v12 - 240) = v24;
  *(_QWORD *)(v12 - 232) = v25;
  *(_QWORD *)(v12 - 224) = *(_QWORD *)(v12 - 352);
  *(_QWORD *)(v12 - 216) = v9;
  v26 = *(_QWORD *)(v12 - 536);
  *(_QWORD *)(v12 - 208) = v26;
  *(_QWORD *)(v12 - 544) = swift_getKeyPath();
  v27 = *(_QWORD *)(v12 - 312);
  (*(void (**)(_QWORD, uint64_t, _QWORD))(v27 + 16))(*(_QWORD *)(v12 - 328), v19, *(_QWORD *)(v12 - 296));
  v28 = (*(unsigned __int8 *)(v27 + 80) + 104) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  v29 = (char *)swift_allocObject();
  *((_QWORD *)v29 + 2) = v18;
  *((_QWORD *)v29 + 3) = v20;
  *((_QWORD *)v29 + 4) = v21;
  *((_QWORD *)v29 + 5) = v22;
  v30 = *(_QWORD *)(v12 - 552);
  *((_QWORD *)v29 + 6) = v30;
  *((_QWORD *)v29 + 7) = v23;
  *((_QWORD *)v29 + 8) = v24;
  *((_QWORD *)v29 + 9) = v25;
  v31 = *(_QWORD *)(v12 - 352);
  v32 = *(_QWORD *)(v12 - 560);
  *((_QWORD *)v29 + 10) = v31;
  *((_QWORD *)v29 + 11) = v32;
  *((_QWORD *)v29 + 12) = v26;
  (*(void (**)(char *, _QWORD, _QWORD))(*(_QWORD *)(v12 - 312) + 32))(&v29[v28], *(_QWORD *)(v12 - 328), *(_QWORD *)(v12 - 296));
  v33 = (_QWORD *)swift_allocObject();
  v34 = *(_QWORD *)(v12 - 344);
  v33[2] = *(_QWORD *)(v12 - 568);
  v33[3] = v34;
  v35 = *(_QWORD *)(v12 - 336);
  v33[4] = v21;
  v33[5] = v35;
  v33[6] = v30;
  v33[7] = v23;
  v33[8] = v24;
  v33[9] = v25;
  v33[10] = v31;
  v33[11] = v32;
  v33[12] = v26;
  v33[13] = sub_20E3AE028;
  v33[14] = v29;
  v36 = MEMORY[0x212BBDF90](&protocol conformance descriptor for IntentResultView<A, B, C, D>, *(_QWORD *)(v12 - 472));
  v37 = MEMORY[0x212BBDF90](&unk_20E4A9A68, *(_QWORD *)(v12 - 448));
  *(_QWORD *)(v12 - 160) = v36;
  *(_QWORD *)(v12 - 152) = v37;
  v38 = MEMORY[0x24BDED308];
  v39 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], *(_QWORD *)(v12 - 456), v12 - 160);
  v40 = MEMORY[0x212BBDF90](&unk_20E4AF188, *(_QWORD *)(v12 - 424));
  *(_QWORD *)(v12 - 176) = v39;
  *(_QWORD *)(v12 - 168) = v40;
  v41 = MEMORY[0x212BBDF90](v38, *(_QWORD *)(v12 - 440), v12 - 176);
  sub_20E4A47A8();
  *(_QWORD *)(v12 - 144) = sub_20E3AA14C();
  *(_QWORD *)(v12 - 184) = v41;
  MEMORY[0x212BBDF90](MEMORY[0x24BDF4A08], *(_QWORD *)(v12 - 488), v12 - 184);
  MEMORY[0x212BBDF90](&unk_20E4A7E90, *(_QWORD *)(v12 - 464));
  sub_20E3CB758(v12 - 144);
}

uint64_t sub_20E3AA9EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 376) + 8))(v3, v1);
  v6 = MEMORY[0x212BBDF90](&unk_20E4A89A0, *(_QWORD *)(v5 - 416));
  *(_QWORD *)(v5 - 200) = v0;
  *(_QWORD *)(v5 - 192) = v6;
  v7 = *(_QWORD *)(v5 - 392);
  MEMORY[0x212BBDF90](v2, v7, v5 - 200);
  v8 = *(_QWORD *)(v5 - 384);
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  v10 = *(_QWORD *)(v5 - 432);
  v9(v10, v4, v7);
  v11 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v11(v4, v7);
  v9(*(_QWORD *)(v5 - 360), v10, v7);
  return ((uint64_t (*)(uint64_t, uint64_t))v11)(v10, v7);
}

void sub_20E3AAAB0()
{
  type metadata accessor for _ShelfPageContinuousContent();
}

void sub_20E3AAB80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t AssociatedTypeWitness;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  *(_QWORD *)(v17 - 256) = a1;
  v18 = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v17 - 328) = v18;
  *(_QWORD *)(v17 - 416) = *(_QWORD *)(v18 + 64);
  v19 = MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v17 - 528) = (char *)&a9 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v19);
  *(_QWORD *)(v17 - 592) = (char *)&a9 - v22;
  MEMORY[0x24BDAC7A8](v21);
  *(_QWORD *)(v17 - 344) = (char *)&a9 - v23;
  *(_QWORD *)(v17 - 368) = *(_QWORD *)(*(_QWORD *)(v10 + 8) + 8);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  *(_QWORD *)(v17 - 248) = v9;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v17 - 544) = AssociatedTypeWitness;
  *(_QWORD *)(v17 - 408) = type metadata accessor for IntentResult(255, AssociatedTypeWitness, v25, v26);
  v27 = sub_20E4A4778();
  *(_QWORD *)(v17 - 456) = v27;
  *(_QWORD *)(v17 - 464) = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  *(_QWORD *)(v17 - 312) = (char *)&a9 - v28;
  *(_QWORD *)(v17 - 176) = AssociatedTypeWitness;
  *(_QWORD *)(v17 - 168) = v12;
  *(_QWORD *)(v17 - 160) = v14;
  *(_QWORD *)(v17 - 152) = v11;
  *(_QWORD *)(v17 - 144) = v13;
  *(_QWORD *)(v17 - 136) = v16;
  *(_QWORD *)(v17 - 128) = v15;
  type metadata accessor for IntentResultView();
}

void sub_20E3AAD10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t AssociatedTypeWitness;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  void (*v46)(char *, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(_QWORD, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  void (*v57)(_QWORD, _QWORD, _QWORD);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(char *, _QWORD, uint64_t);
  char *v73;
  void (*v74)(char *, _QWORD, uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;

  v13 = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v12 - 552) = a1;
  *(_QWORD *)(v12 - 488) = v13;
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v12 - 584) = (char *)&a9 - v14;
  *(_QWORD *)(v12 - 568) = v11;
  *(_QWORD *)(v12 - 272) = v9;
  v15 = type metadata accessor for _ContinuousIntentDispatchWorker(255, v11, v9, v10);
  v16 = MEMORY[0x212BBDF90](&unk_20E4A9AB8, v15);
  *(_QWORD *)(v12 - 520) = type metadata accessor for _IntentDispatchViewModifier(255, v15, v16, v17);
  v18 = sub_20E4A39D4();
  *(_QWORD *)(v12 - 512) = *(_QWORD *)(v18 - 8);
  *(_QWORD *)(v12 - 536) = v18;
  MEMORY[0x24BDAC7A8](v18);
  *(_QWORD *)(v12 - 576) = (char *)&a9 - v19;
  *(_QWORD *)(v12 - 496) = type metadata accessor for PageResourceMetricsViewModifier(255, v11, v9, v20);
  v21 = sub_20E4A39D4();
  *(_QWORD *)(v12 - 480) = v21;
  *(_QWORD *)(v12 - 472) = *(_QWORD *)(v21 - 8);
  v22 = MEMORY[0x24BDAC7A8](v21);
  *(_QWORD *)(v12 - 560) = (char *)&a9 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v22);
  *(_QWORD *)(v12 - 504) = (char *)&a9 - v25;
  v26 = *(_QWORD *)(v12 - 304);
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v29 = (char *)&a9 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v31 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v33 = (char *)&a9 - v32;
  v34 = *(_QWORD *)(v12 - 288);
  v36 = type metadata accessor for ShelfPageContext(0, v26, v34, v35);
  *(_QWORD *)(v12 - 224) = v36;
  v37 = *(_QWORD *)(v36 - 8);
  *(_QWORD *)(v12 - 280) = v37;
  v38 = *(_QWORD *)(v37 + 64);
  v39 = MEMORY[0x24BDAC7A8](v36);
  *(_QWORD *)(v12 - 376) = (char *)&a9 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = MEMORY[0x24BDAC7A8](v39);
  *(_QWORD *)(v12 - 384) = (char *)&a9 - v41;
  v42 = MEMORY[0x24BDAC7A8](v40);
  *(_QWORD *)(v12 - 392) = (char *)&a9 - v43;
  MEMORY[0x24BDAC7A8](v42);
  v45 = (char *)&a9 - v44;
  *(_QWORD *)(v12 - 296) = (char *)&a9 - v44;
  (*(void (**)(char *, _QWORD, uint64_t))(v31 + 16))(v33, *(_QWORD *)(v12 - 400), AssociatedTypeWitness);
  v46 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 16);
  v47 = *(_QWORD *)(v12 - 232);
  v46(v29, v47, v26);
  sub_20E3A9314(v33, (uint64_t)v29, v26, v34, (uint64_t)v45);
  sub_20E4A5F3C();
  v48 = sub_20E4A5F24();
  *(_QWORD *)(v12 - 608) = v48;
  (*(void (**)(char *, uint64_t))(v31 + 8))(v33, AssociatedTypeWitness);
  v49 = *(_QWORD *)(v12 - 256);
  *(_QWORD *)(v12 - 176) = sub_20E3AA224();
  *(_QWORD *)(v12 - 168) = v50;
  *(_QWORD *)(v12 - 160) = v51;
  *(_QWORD *)(v12 - 184) = v48;
  v52 = sub_20E4A5D98();
  *(_QWORD *)(v12 - 616) = sub_20E4A4778();
  *(_QWORD *)(v12 - 624) = MEMORY[0x212BBDF90](MEMORY[0x24BEE12B8], v52);
  sub_20E4A476C();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  v53 = *(_QWORD *)(v12 - 328);
  v54 = *(void (**)(_QWORD, uint64_t, uint64_t))(v53 + 16);
  *(_QWORD *)(v12 - 368) = v54;
  v55 = v49;
  v54(*(_QWORD *)(v12 - 344), v47, v49);
  v56 = *(_QWORD *)(v12 - 280);
  v57 = *(void (**)(_QWORD, _QWORD, _QWORD))(v56 + 16);
  *(_QWORD *)(v12 - 400) = v57;
  v57(*(_QWORD *)(v12 - 392), *(_QWORD *)(v12 - 296), *(_QWORD *)(v12 - 224));
  v58 = *(unsigned __int8 *)(v53 + 80);
  v59 = (v58 + 104) & ~v58;
  v60 = *(unsigned __int8 *)(v56 + 80);
  v61 = *(_QWORD *)(v12 - 416) + v60 + v59;
  *(_QWORD *)(v12 - 408) = v59;
  v62 = v61 & ~v60;
  *(_QWORD *)(v12 - 416) = v62 + v38;
  *(_QWORD *)(v12 - 432) = v62;
  *(_QWORD *)(v12 - 424) = v58 | v60 | 7;
  v63 = (char *)swift_allocObject();
  *((_QWORD *)v63 + 2) = v26;
  v64 = *(_QWORD *)(v12 - 264);
  v65 = *(_QWORD *)(v12 - 360);
  *((_QWORD *)v63 + 3) = v64;
  *((_QWORD *)v63 + 4) = v65;
  v66 = *(_QWORD *)(v12 - 288);
  *((_QWORD *)v63 + 5) = *(_QWORD *)(v12 - 240);
  *((_QWORD *)v63 + 6) = v66;
  v67 = *(_QWORD *)(v12 - 352);
  *((_QWORD *)v63 + 7) = *(_QWORD *)(v12 - 336);
  *((_QWORD *)v63 + 8) = v67;
  v68 = *(_QWORD *)(v12 - 600);
  v69 = *(_QWORD *)(v12 - 272);
  *((_QWORD *)v63 + 9) = v68;
  *((_QWORD *)v63 + 10) = v69;
  v70 = *(_QWORD *)(v12 - 320);
  v71 = *(_QWORD *)(v12 - 248);
  *((_QWORD *)v63 + 11) = v70;
  *((_QWORD *)v63 + 12) = v71;
  v72 = *(void (**)(char *, _QWORD, uint64_t))(*(_QWORD *)(v12 - 328) + 32);
  *(_QWORD *)(v12 - 328) = v72;
  v72(&v63[v59], *(_QWORD *)(v12 - 344), v55);
  v73 = &v63[v62];
  v74 = *(void (**)(char *, _QWORD, uint64_t))(*(_QWORD *)(v12 - 280) + 32);
  *(_QWORD *)(v12 - 344) = v74;
  v75 = *(_QWORD *)(v12 - 224);
  v74(v73, *(_QWORD *)(v12 - 392), v75);
  v76 = *(_QWORD *)(v12 - 592);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v12 - 368))(v76, *(_QWORD *)(v12 - 232), v55);
  v77 = *(_QWORD *)(v12 - 296);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v12 - 400))(*(_QWORD *)(v12 - 384), v77, v75);
  v78 = (char *)swift_allocObject();
  *((_QWORD *)v78 + 2) = *(_QWORD *)(v12 - 304);
  *((_QWORD *)v78 + 3) = v64;
  v79 = *(_QWORD *)(v12 - 360);
  v80 = *(_QWORD *)(v12 - 240);
  *((_QWORD *)v78 + 4) = v79;
  *((_QWORD *)v78 + 5) = v80;
  *((_QWORD *)v78 + 6) = v66;
  v81 = *(_QWORD *)(v12 - 336);
  *((_QWORD *)v78 + 7) = v81;
  *((_QWORD *)v78 + 8) = v67;
  *((_QWORD *)v78 + 9) = v68;
  *((_QWORD *)v78 + 10) = v69;
  *((_QWORD *)v78 + 11) = v70;
  v82 = &v78[*(_QWORD *)(v12 - 408)];
  v83 = *(_QWORD *)(v12 - 256);
  v84 = *(_QWORD *)(v12 - 248);
  *((_QWORD *)v78 + 12) = v84;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 - 328))(v82, v76, v83);
  v85 = *(_QWORD *)(v12 - 224);
  (*(void (**)(char *, _QWORD, uint64_t))(v12 - 344))(&v78[*(_QWORD *)(v12 - 432)], *(_QWORD *)(v12 - 384), v85);
  v86 = *(_QWORD *)(v12 - 528);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v12 - 368))(v86, *(_QWORD *)(v12 - 232), v83);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v12 - 400))(*(_QWORD *)(v12 - 376), v77, v85);
  v87 = (char *)swift_allocObject();
  v88 = *(_QWORD *)(v12 - 264);
  *((_QWORD *)v87 + 2) = *(_QWORD *)(v12 - 304);
  *((_QWORD *)v87 + 3) = v88;
  v89 = *(_QWORD *)(v12 - 240);
  *((_QWORD *)v87 + 4) = v79;
  *((_QWORD *)v87 + 5) = v89;
  *((_QWORD *)v87 + 6) = *(_QWORD *)(v12 - 288);
  *((_QWORD *)v87 + 7) = v81;
  *((_QWORD *)v87 + 8) = *(_QWORD *)(v12 - 352);
  *((_QWORD *)v87 + 9) = v68;
  v90 = *(_QWORD *)(v12 - 320);
  *((_QWORD *)v87 + 10) = *(_QWORD *)(v12 - 272);
  *((_QWORD *)v87 + 11) = v90;
  v91 = &v87[*(_QWORD *)(v12 - 408)];
  *((_QWORD *)v87 + 12) = v84;
  (*(void (**)(char *, uint64_t, _QWORD))(v12 - 328))(v91, v86, *(_QWORD *)(v12 - 256));
  (*(void (**)(char *, _QWORD, _QWORD))(v12 - 344))(&v87[*(_QWORD *)(v12 - 432)], *(_QWORD *)(v12 - 376), *(_QWORD *)(v12 - 224));
  IntentResultView.init(_:empty:success:failure:)(*(_QWORD *)(v12 - 312), (uint64_t)v63, (uint64_t)sub_20E3B2370, *(_QWORD *)(v12 - 544), *(_QWORD *)(v12 - 584));
}

uint64_t sub_20E3AB4B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t);

  *(_QWORD *)(v2 - 176) = sub_20E3AA224();
  *(_QWORD *)(v2 - 168) = v3;
  *(_QWORD *)(v2 - 160) = v4;
  *(_QWORD *)(v2 - 184) = *(_QWORD *)(v2 - 608);
  sub_20E4A476C();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  v5 = *(_QWORD *)(v2 - 552);
  v6 = MEMORY[0x212BBDF90](&protocol conformance descriptor for IntentResultView<A, B, C, D>, v5);
  v7 = *(_QWORD *)(v2 - 576);
  v8 = *(_QWORD *)(v2 - 248);
  View.dispatch<A>(_:into:)(*(_QWORD *)(v2 - 448), v0, v5, *(_QWORD *)(v2 - 568), v6, *(_QWORD *)(v2 - 272), v8, v7);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 464) + 8))(v0, *(_QWORD *)(v2 - 456));
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 488) + 8))(v1, v5);
  v9 = *(_QWORD *)(v2 - 520);
  v10 = MEMORY[0x212BBDF90](&unk_20E4A99C0, v9);
  v11 = *(_QWORD *)(v2 - 560);
  v12 = *(_QWORD *)(v2 - 536);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_20E45F944)(v12, v6, v10, v8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 512) + 8))(v7, v12);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v2 - 280) + 8))(*(_QWORD *)(v2 - 296), *(_QWORD *)(v2 - 224));
  v13 = MEMORY[0x212BBDF90](&unk_20E4A9A68, v9);
  *(_QWORD *)(v2 - 200) = v6;
  *(_QWORD *)(v2 - 192) = v13;
  v14 = MEMORY[0x24BDED308];
  v15 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v12, v2 - 200);
  v16 = MEMORY[0x212BBDF90](&unk_20E4AF188, *(_QWORD *)(v2 - 496));
  *(_QWORD *)(v2 - 216) = v15;
  *(_QWORD *)(v2 - 208) = v16;
  v17 = *(_QWORD *)(v2 - 480);
  MEMORY[0x212BBDF90](v14, v17, v2 - 216);
  v18 = *(_QWORD *)(v2 - 472);
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16);
  v20 = *(_QWORD *)(v2 - 504);
  v19(v20, v11, v17);
  v21 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
  v21(v11, v17);
  v19(*(_QWORD *)(v2 - 440), v20, v17);
  return ((uint64_t (*)(uint64_t, uint64_t))v21)(v20, v17);
}

void sub_20E3AB6F8(uint64_t a1)
{
  uint64_t v1;

  v1 = ((uint64_t (*)(uint64_t))MEMORY[0x24BDAC7A8])(a1);
  MEMORY[0x24BDAC7A8](v1);
  type metadata accessor for _ShelfPageContinuousContent();
}

uint64_t sub_20E3AB798(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  void (*v9)(uint64_t, uint64_t);

  (*(void (**)(uint64_t))(v3 + *(int *)(a1 + 112)))(v6);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v8(v5, v4, v1);
  v9 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v9(v4, v1);
  v8(v2, v5, v1);
  return ((uint64_t (*)(uint64_t, uint64_t))v9)(v5, v1);
}

void sub_20E3AB80C(uint64_t a1)
{
  uint64_t v1;

  MEMORY[0x24BDAC7A8](a1);
  MEMORY[0x24BDAC7A8](v1);
  type metadata accessor for _ShelfPageContinuousContent();
}

uint64_t sub_20E3AB8B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  void (*v10)(uint64_t, uint64_t);

  (*(void (**)(uint64_t, uint64_t))(v3 + *(int *)(a1 + 120)))(v4, v7);
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  v9(v6, v5, v1);
  v10 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v10(v5, v1);
  v9(v2, v6, v1);
  return ((uint64_t (*)(uint64_t, uint64_t))v10)(v6, v1);
}

void sub_20E3AB92C(uint64_t a1)
{
  uint64_t v1;

  MEMORY[0x24BDAC7A8](a1);
  MEMORY[0x24BDAC7A8](v1);
  type metadata accessor for _ShelfPageContinuousContent();
}

uint64_t sub_20E3AB9E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  void (*v12)(uint64_t, uint64_t);

  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + *(int *)(a1 + 116)))(v6, v5, v4, v9);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  v11(v8, v7, v1);
  v12 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v12(v7, v1);
  v11(*(_QWORD *)(v10 - 176), v8, v1);
  return ((uint64_t (*)(uint64_t, uint64_t))v12)(v8, v1);
}

uint64_t sub_20E3ABA68(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t TupleTypeMetadata2;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return a2(a1, a1 + *(int *)(TupleTypeMetadata2 + 48));
}

uint64_t _ShelfPagePaginatedContent.init(content:footer:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

uint64_t _ShelfPagePaginatedContent.body.getter@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void (**v2)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void (*v18)(uint64_t);
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  char *v24;
  void (*v25)(char *, uint64_t);
  uint64_t (*v26)(char *, uint64_t);
  void (*v28)(uint64_t);
  uint64_t v29;
  char *v30;
  uint64_t (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[2];
  uint64_t v37[2];

  v33 = a2;
  v4 = a1[3];
  v32 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v30 = (char *)&v28 - v9;
  v10 = *(_QWORD *)(v8 + 16);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v8);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v28 - v16;
  v18 = *v2;
  v28 = v2[2];
  v18(v15);
  v29 = *(_QWORD *)(a1[4] + 8);
  v19 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  v19(v17, v14, v10);
  v31 = *(uint64_t (**)(char *, uint64_t))(v11 + 8);
  v20 = v31(v14, v10);
  v28(v20);
  v21 = a1[5];
  v22 = v32;
  v23 = *(void (**)(char *, char *, uint64_t))(v32 + 16);
  v24 = v30;
  v23(v30, v7, v4);
  v25 = *(void (**)(char *, uint64_t))(v22 + 8);
  v25(v7, v4);
  v19(v14, v17, v10);
  v37[0] = (uint64_t)v14;
  v23(v7, v24, v4);
  v37[1] = (uint64_t)v7;
  v36[0] = v10;
  v36[1] = v4;
  v34 = v29;
  v35 = v21;
  sub_20E39C54C(v37, 2uLL, (uint64_t)v36);
  v25(v24, v4);
  v26 = v31;
  v31(v17, v10);
  v25(v7, v4);
  return v26(v14, v10);
}

uint64_t sub_20E3ABD30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  type metadata accessor for IntentResult(255, a2, a3, a4);
  v4 = sub_20E4A5D98();
  swift_bridgeObjectRetain();
  MEMORY[0x212BBDF90](MEMORY[0x24BEE12C8], v4);
  v5 = sub_20E4A5C9C();
  swift_bridgeObjectRelease();
  return v5;
}

double sub_20E3ABDCC@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double result;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  _QWORD v17[4];

  v4 = sub_20E4A60E0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v14 - v6;
  v10 = type metadata accessor for IntentResult(0, a1, v8, v9);
  IntentResult.data.getter(v10, v11, v12, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 48))(v7, 1, a1) == 1)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
LABEL_6:
    v16 = 0;
    v14 = 0u;
    v15 = 0u;
    goto LABEL_7;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A189D0);
  if (!swift_dynamicCast())
    goto LABEL_6;
  if (*((_QWORD *)&v15 + 1))
  {
    sub_20E3B1AB4(&v14, (uint64_t)v17);
    __swift_project_boxed_opaque_existential_1(v17, v17[3]);
    sub_20E3ABF28();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
    return result;
  }
LABEL_7:
  sub_20E39D1F8((uint64_t)&v14, &qword_254A189C8);
  *(_QWORD *)(a2 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  return result;
}

uint64_t sub_20E3ABF28()
{
  uint64_t AssociatedTypeWitness;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v1 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v3 = (char *)&v5 - v2;
  sub_20E4A61B8();
  swift_getAssociatedConformanceWitness();
  sub_20E4A6308();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, AssociatedTypeWitness);
}

uint64_t sub_20E3AC008(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  type metadata accessor for IntentResult(255, a3, a3, a4);
  v5 = sub_20E4A5D98();
  v6 = MEMORY[0x24BEE12C8];
  MEMORY[0x212BBDF90](MEMORY[0x24BEE12C8], v5);
  sub_20E4A5CCC();
  *(_QWORD *)(swift_allocObject() + 16) = a3;
  v7 = sub_20E4A61C4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A189A8);
  MEMORY[0x212BBDF90](MEMORY[0x24BEE25B0], v7);
  sub_20E4A62E4();
  swift_release();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A189B0);
  v8 = sub_20E4A6260();
  v9 = MEMORY[0x24BEE2B40];
  MEMORY[0x212BBDF90](MEMORY[0x24BEE2B40], v8);
  v10 = sub_20E4A629C();
  MEMORY[0x212BBDF90](MEMORY[0x24BEE2FF8], v10);
  v11 = sub_20E4A6260();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A189B8);
  MEMORY[0x212BBDF90](v9, v11);
  sub_20E39D010(&qword_254A189C0, &qword_254A189B8, v6);
  v12 = sub_20E4A5CE4();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return v12;
}

double sub_20E3AC238@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double result;
  uint64_t v14;

  v4 = sub_20E4A60E0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v14 - v6;
  v10 = type metadata accessor for IntentResult(0, a1, v8, v9);
  IntentResult.data.getter(v10, v11, v12, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 48))(v7, 1, a1) == 1)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254A189A8);
    if ((swift_dynamicCast() & 1) != 0)
      return result;
  }
  *(_QWORD *)(a2 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  return result;
}

uint64_t sub_20E3AC320@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t *v4;
  uint64_t result;

  result = sub_20E3ABD30(*v4, *(_QWORD *)(a1 + 16), a2, a3);
  *a4 = result;
  return result;
}

uint64_t sub_20E3AC350(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;

  return sub_20E3AC008(a1, *v4, *(_QWORD *)(a2 + 16), a4);
}

uint64_t sub_20E3AC360(uint64_t a1)
{
  return sub_20E3AC3C4(a1, qword_254A184D0);
}

uint64_t static CoordinateSpace.shelfContainerScrollView.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20E3AC478(&qword_254A180C0, (uint64_t)qword_254A184D0, a1);
}

uint64_t sub_20E3AC3A0(uint64_t a1)
{
  return sub_20E3AC3C4(a1, qword_254A184E8);
}

uint64_t sub_20E3AC3C4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = sub_20E4A39A4();
  __swift_allocate_value_buffer(v3, a2);
  v4 = __swift_project_value_buffer(v3, (uint64_t)a2);
  sub_20E4A6188();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(v4, *MEMORY[0x24BDECDE0], v3);
}

uint64_t static CoordinateSpace.shelfContainerContent.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20E3AC478(&qword_254A180C8, (uint64_t)qword_254A184E8, a1);
}

uint64_t sub_20E3AC478@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = sub_20E4A39A4();
  v6 = __swift_project_value_buffer(v5, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
}

double sub_20E3AC4E0()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_20E39F334((unint64_t *)&qword_254A18540, (uint64_t (*)(uint64_t))type metadata accessor for ShelfContainerEnviromentValues, (uint64_t)&unk_20E4A7ED8);
  sub_20E4A341C();
  swift_release();
  return *(double *)(v0 + 16);
}

__n128 sub_20E3AC564@<Q0>(__n128 **a1@<X0>, __n128 *a2@<X8>)
{
  __n128 *v3;
  __n128 result;

  v3 = *a1;
  swift_getKeyPath();
  sub_20E39F334((unint64_t *)&qword_254A18540, (uint64_t (*)(uint64_t))type metadata accessor for ShelfContainerEnviromentValues, (uint64_t)&unk_20E4A7ED8);
  sub_20E4A341C();
  swift_release();
  result = v3[1];
  *a2 = result;
  return result;
}

uint64_t sub_20E3AC5F0()
{
  swift_getKeyPath();
  sub_20E39F334((unint64_t *)&qword_254A18540, (uint64_t (*)(uint64_t))type metadata accessor for ShelfContainerEnviromentValues, (uint64_t)&unk_20E4A7ED8);
  sub_20E4A3410();
  return swift_release();
}

uint64_t sub_20E3AC6A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC18_JetEngine_SwiftUI30ShelfContainerEnviromentValues___observationRegistrar;
  v2 = sub_20E4A3434();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

BOOL sub_20E3AC6F0(uint64_t *a1, uint64_t *a2)
{
  return sub_20E3ADA08(*a1, *a2);
}

uint64_t View.shelfContentMaxWidth(_:)()
{
  swift_getKeyPath();
  sub_20E4A4250();
  return swift_release();
}

uint64_t EnvironmentValues.shelfContentMaxWidth.getter()
{
  uint64_t v1;

  sub_20E3AE20C();
  sub_20E4A3C08();
  return v1;
}

uint64_t sub_20E3AC7BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  char v4;

  sub_20E3AE20C();
  result = sub_20E4A3C08();
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return result;
}

uint64_t sub_20E3AC810()
{
  sub_20E3AE20C();
  return sub_20E4A3C14();
}

void sub_20E3AC860(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t sub_20E3AC870()
{
  sub_20E3B2920(&qword_254A189D8, &qword_254A189E0, (uint64_t (*)(void))sub_20E3B1AEC);
  return sub_20E4A389C();
}

double EnvironmentValues.shelfContentPadding.getter()
{
  char v1;

  sub_20E3AE20C();
  sub_20E4A3C08();
  if ((v1 & 1) == 0)
  {
    type metadata accessor for ShelfContainerEnviromentValues();
    sub_20E39F334((unint64_t *)&qword_254A18540, (uint64_t (*)(uint64_t))type metadata accessor for ShelfContainerEnviromentValues, (uint64_t)&unk_20E4A7ED8);
    if (sub_20E4A3C20())
    {
      swift_getKeyPath();
      sub_20E4A341C();
      swift_release();
      swift_release();
    }
  }
  return 0.0;
}

uint64_t View.shelfContentPrefersCompactLayouts(_:)()
{
  swift_getKeyPath();
  sub_20E4A4250();
  return swift_release();
}

uint64_t sub_20E3ACA50()
{
  unsigned __int8 v1;

  sub_20E3AE2B0();
  sub_20E4A3C08();
  return v1;
}

void sub_20E3ACA88(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_20E3ACA94()
{
  sub_20E3B1B30(&qword_254A189F0, &qword_254A189F8, MEMORY[0x24BEE1340], MEMORY[0x24BEE4AB8]);
  return sub_20E4A389C();
}

uint64_t EnvironmentValues.shelfContentPrefersCompactLayouts.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  unsigned int (*v17)(uint64_t, uint64_t, uint64_t);
  char v18;
  char v19;
  void (*v20)(_BYTE *, uint64_t);
  _BYTE v22[15];
  char v23;

  v0 = sub_20E4A3EF0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = &v22[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18568);
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v22[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18570);
  MEMORY[0x24BDAC7A8](v7);
  v9 = &v22[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v22[-v11];
  MEMORY[0x24BDAC7A8](v13);
  v15 = &v22[-v14];
  sub_20E3AE2B0();
  sub_20E4A3C08();
  if (v23 != 2)
  {
    v18 = v23 & 1;
    return v18 & 1;
  }
  sub_20E4A3B90();
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v12, *MEMORY[0x24BDEFEF0], v0);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v1 + 56))(v12, 0, 1, v0);
  v16 = (uint64_t)&v6[*(int *)(v4 + 48)];
  sub_20E3AE2F4((uint64_t)v15, (uint64_t)v6);
  sub_20E3AE2F4((uint64_t)v12, v16);
  v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48);
  if (v17((uint64_t)v6, 1, v0) != 1)
  {
    sub_20E3AE2F4((uint64_t)v6, (uint64_t)v9);
    if (v17(v16, 1, v0) != 1)
    {
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v1 + 32))(v3, v16, v0);
      sub_20E39F334((unint64_t *)&qword_254A18580, (uint64_t (*)(uint64_t))MEMORY[0x24BDEFEF8], MEMORY[0x24BDEFF08]);
      v19 = sub_20E4A5C0C();
      v20 = *(void (**)(_BYTE *, uint64_t))(v1 + 8);
      v20(v3, v0);
      sub_20E39D1F8((uint64_t)v12, &qword_254A18570);
      sub_20E39D1F8((uint64_t)v15, &qword_254A18570);
      v20(v9, v0);
      sub_20E39D1F8((uint64_t)v6, &qword_254A18570);
      v18 = v19 ^ 1;
      return v18 & 1;
    }
    sub_20E39D1F8((uint64_t)v12, &qword_254A18570);
    sub_20E39D1F8((uint64_t)v15, &qword_254A18570);
    (*(void (**)(_BYTE *, uint64_t))(v1 + 8))(v9, v0);
    goto LABEL_8;
  }
  sub_20E39D1F8((uint64_t)v12, &qword_254A18570);
  sub_20E39D1F8((uint64_t)v15, &qword_254A18570);
  if (v17(v16, 1, v0) != 1)
  {
LABEL_8:
    sub_20E39D1F8((uint64_t)v6, &qword_254A18568);
    v18 = 1;
    return v18 & 1;
  }
  sub_20E39D1F8((uint64_t)v6, &qword_254A18570);
  v18 = 0;
  return v18 & 1;
}

BOOL static ShelfGridVerticalLayoutLonelyItemSpan.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ShelfGridVerticalLayoutLonelyItemSpan.hash(into:)()
{
  return sub_20E4A641C();
}

uint64_t ShelfGridVerticalLayoutLonelyItemSpan.hashValue.getter()
{
  sub_20E4A6410();
  sub_20E4A641C();
  return sub_20E4A6428();
}

BOOL sub_20E3ACEAC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_20E3ACEC4()
{
  sub_20E4A6410();
  sub_20E4A641C();
  return sub_20E4A6428();
}

uint64_t sub_20E3ACF08()
{
  return sub_20E4A641C();
}

uint64_t sub_20E3ACF30()
{
  sub_20E4A6410();
  sub_20E4A641C();
  return sub_20E4A6428();
}

uint64_t sub_20E3ACF70()
{
  sub_20E3B2920(&qword_254A18A70, &qword_254A18A78, (uint64_t (*)(void))sub_20E3AE6EC);
  return sub_20E4A389C();
}

uint64_t View.verticalShelfGridLonelyItemSupport(_:)(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  uint64_t v10;
  _QWORD v13[2];
  BOOL v14;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A18588);
  v5 = sub_20E4A39D4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13[-1] - v7;
  v9 = *a1;
  swift_getKeyPath();
  v14 = v9 != 2;
  sub_20E4A4250();
  swift_release();
  swift_getKeyPath();
  v14 = v9;
  v10 = sub_20E39D010((unint64_t *)&qword_254A18590, &qword_254A18588, MEMORY[0x24BDF1028]);
  v13[0] = a3;
  v13[1] = v10;
  MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v5, v13);
  sub_20E4A4250();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_20E3AD128@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_20E3B21F8();
  result = sub_20E4A3C08();
  *a1 = v3;
  return result;
}

uint64_t sub_20E3AD174()
{
  sub_20E3B21F8();
  return sub_20E4A3C14();
}

uint64_t sub_20E3AD1BC()
{
  sub_20E3B21B4();
  return sub_20E4A3C08();
}

uint64_t sub_20E3AD1F0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_20E3B21B4();
  result = sub_20E4A3C08();
  *a1 = v3;
  return result;
}

uint64_t sub_20E3AD23C()
{
  sub_20E3B21B4();
  return sub_20E4A3C14();
}

_QWORD *sub_20E3AD284(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254A18A60);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_20E3B1B8C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_20E3AD390(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_20E3AD6F0(a1, a2, a3, a4, &qword_254A18A38, (uint64_t (*)(_QWORD))MEMORY[0x24BE5DEF8]);
}

_QWORD *sub_20E3AD3A4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254A18A28);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4])
          memmove(v12, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_20E3B1C94(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_20E3AD4C4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254A18A00);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_20E3B1DA0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_20E3AD5D0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254A18A18);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_20E3B1EAC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_20E3AD6DC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_20E3AD6F0(a1, a2, a3, a4, &qword_254A18A10, _s13PopupHUDModelC8RowModelVMa);
}

uint64_t sub_20E3AD6F0(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_20E4A6284();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_20E3B1F9C(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

_QWORD *sub_20E3AD8FC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254A18A20);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_20E3B20B4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

BOOL sub_20E3ADA08(uint64_t a1, uint64_t a2)
{
  double v4;
  double v5;

  swift_getKeyPath();
  sub_20E39F334((unint64_t *)&qword_254A18540, (uint64_t (*)(uint64_t))type metadata accessor for ShelfContainerEnviromentValues, (uint64_t)&unk_20E4A7ED8);
  sub_20E4A341C();
  swift_release();
  v4 = *(double *)(a1 + 16);
  v5 = *(double *)(a1 + 24);
  swift_getKeyPath();
  sub_20E4A341C();
  swift_release();
  return v5 == *(double *)(a2 + 24) && v4 == *(double *)(a2 + 16);
}

uint64_t sub_20E3ADAF4()
{
  return swift_deallocObject();
}

uint64_t sub_20E3ADB04(uint64_t a1)
{
  uint64_t *v1;

  return sub_20E3A7A3C(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_20E3ADB18()
{
  return swift_deallocObject();
}

uint64_t sub_20E3ADB28@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v5;

  return sub_20E3A7AF4(a1, a2, a3, a4, *(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 32), a5);
}

unint64_t sub_20E3ADB5C()
{
  unint64_t result;

  result = qword_254A18500;
  if (!qword_254A18500)
  {
    result = MEMORY[0x212BBDF90](&protocol conformance descriptor for _IntentViewDefaultContinuousWorking, &type metadata for _IntentViewDefaultContinuousWorking);
    atomic_store(result, (unint64_t *)&qword_254A18500);
  }
  return result;
}

unint64_t sub_20E3ADBA0()
{
  unint64_t result;

  result = qword_254A18508;
  if (!qword_254A18508)
  {
    result = MEMORY[0x212BBDF90](&protocol conformance descriptor for _IntentViewDefaultContinuousFailed, &type metadata for _IntentViewDefaultContinuousFailed);
    atomic_store(result, (unint64_t *)&qword_254A18508);
  }
  return result;
}

uint64_t type metadata accessor for ShelfPageContext(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ShelfPageContext);
}

uint64_t sub_20E3ADBF0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E3ADC14()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_20E3ADC34()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[2];
  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ShelfPage(0, v1, v0[3], v0[4]) - 8) + 80);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))((uint64_t)v0 + ((v2 + 40) & ~v2), v1);
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_20E3ADCD0@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = v2[2];
  v6 = v2[3];
  v7 = v2[4];
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ShelfPage(0, v5, v6, v7) - 8) + 80);
  return sub_20E3A8088(a1, (uint64_t)v2 + ((v8 + 40) & ~v8), v5, v6, v7, a2);
}

uint64_t type metadata accessor for ShelfContainerEnviromentValues()
{
  uint64_t result;

  result = qword_254A18868;
  if (!qword_254A18868)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_20E3ADD8C()
{
  return 40;
}

__n128 sub_20E3ADD98(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

void sub_20E3ADDAC()
{
  type metadata accessor for _ShelfPageStaticContent();
}

uint64_t sub_20E3ADDE4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  (*(void (**)(uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v1 + ((v2 + 56) & ~v2));
  swift_release();
  return swift_deallocObject();
}

void sub_20E3ADE58()
{
  type metadata accessor for _ShelfPageStaticContent();
}

void sub_20E3ADEA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_20E3A9E30(v1, v0, v3, v4, v5, v6, v7, v2);
}

uint64_t sub_20E3ADEFC(uint64_t a1)
{
  return sub_20E3ADF08(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_20E3AA070);
}

uint64_t sub_20E3ADF08(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[7], v2[8], v2[2], v2[3], v2[4], v2[5], v2[6]);
}

uint64_t type metadata accessor for _PrefetchMediaArtworkAdapter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _PrefetchMediaArtworkAdapter);
}

void sub_20E3ADF2C()
{
  type metadata accessor for _ShelfPageContinuousContent();
}

uint64_t sub_20E3ADF70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  (*(void (**)(uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v1 + ((v2 + 104) & ~v2));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_20E3AE028()
{
  type metadata accessor for _ShelfPageContinuousContent();
}

void sub_20E3AE090()
{
  sub_20E3AAAB0();
}

uint64_t sub_20E3AE0EC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E3AE110(uint64_t a1)
{
  uint64_t v1;

  return sub_20E3ABA68(a1, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 104));
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t sub_20E3AE168@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  char v4;

  sub_20E3AE20C();
  result = sub_20E4A3C08();
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return result;
}

uint64_t sub_20E3AE1BC()
{
  sub_20E3AE20C();
  return sub_20E4A3C14();
}

unint64_t sub_20E3AE20C()
{
  unint64_t result;

  result = qword_254A18560;
  if (!qword_254A18560)
  {
    result = MEMORY[0x212BBDF90](&unk_20E4A7E58, &type metadata for ShelfContentMaxWidthKey);
    atomic_store(result, (unint64_t *)&qword_254A18560);
  }
  return result;
}

uint64_t sub_20E3AE250@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_20E3AE2B0();
  result = sub_20E4A3C08();
  *a1 = v3;
  return result;
}

uint64_t sub_20E3AE29C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_37Tm(a1, a2, a3, a4, (void (*)(void))sub_20E3AE2B0);
}

unint64_t sub_20E3AE2B0()
{
  unint64_t result;

  result = qword_254A18578;
  if (!qword_254A18578)
  {
    result = MEMORY[0x212BBDF90](&unk_20E4A7E20, &type metadata for ShelfContentPrefersCompactLayoutsKey);
    atomic_store(result, (unint64_t *)&qword_254A18578);
  }
  return result;
}

uint64_t sub_20E3AE2F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18570);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20E3AE33C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_20E3B21F8();
  result = sub_20E4A3C08();
  *a1 = v3;
  return result;
}

uint64_t sub_20E3AE388()
{
  sub_20E3B21F8();
  return sub_20E4A3C14();
}

uint64_t sub_20E3AE3D0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_20E3B21B4();
  result = sub_20E4A3C08();
  *a1 = v3;
  return result;
}

uint64_t sub_20E3AE41C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_37Tm(a1, a2, a3, a4, (void (*)(void))sub_20E3B21B4);
}

uint64_t keypath_set_37Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void))
{
  a5();
  return sub_20E4A3C14();
}

uint64_t sub_20E3AE478()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_20E3AE4B8()
{
  unint64_t result;

  result = qword_254A18598;
  if (!qword_254A18598)
  {
    result = MEMORY[0x212BBDF90](&protocol conformance descriptor for ShelfPageConfiguration, &type metadata for ShelfPageConfiguration);
    atomic_store(result, (unint64_t *)&qword_254A18598);
  }
  return result;
}

unint64_t sub_20E3AE500()
{
  unint64_t result;

  result = qword_254A185A0;
  if (!qword_254A185A0)
  {
    result = MEMORY[0x212BBDF90](&protocol conformance descriptor for ShelfPageConfiguration, &type metadata for ShelfPageConfiguration);
    atomic_store(result, (unint64_t *)&qword_254A185A0);
  }
  return result;
}

unint64_t sub_20E3AE548()
{
  unint64_t result;

  result = qword_254A185A8;
  if (!qword_254A185A8)
  {
    result = MEMORY[0x212BBDF90](&protocol conformance descriptor for ShelfPageConfiguration, &type metadata for ShelfPageConfiguration);
    atomic_store(result, (unint64_t *)&qword_254A185A8);
  }
  return result;
}

unint64_t sub_20E3AE590()
{
  unint64_t result;

  result = qword_254A185B0;
  if (!qword_254A185B0)
  {
    result = MEMORY[0x212BBDF90](&protocol conformance descriptor for ShelfPageConfiguration, &type metadata for ShelfPageConfiguration);
    atomic_store(result, (unint64_t *)&qword_254A185B0);
  }
  return result;
}

uint64_t sub_20E3AE5D4(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x212BBDF90](&protocol conformance descriptor for _ShelfPageStaticContent<A, B>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_20E3AE600()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E3AE63C(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x212BBDF90](&protocol conformance descriptor for _ShelfPageContinuousContent<A, B, C, D>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_20E3AE668()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E3AE6B4()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_20E3AE6EC()
{
  unint64_t result;

  result = qword_254A185B8[0];
  if (!qword_254A185B8[0])
  {
    result = MEMORY[0x212BBDF90](&protocol conformance descriptor for ShelfGridVerticalLayoutLonelyItemSpan, &type metadata for ShelfGridVerticalLayoutLonelyItemSpan);
    atomic_store(result, qword_254A185B8);
  }
  return result;
}

uint64_t sub_20E3AE738()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_20E3AE740()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_20E3AE7E0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0
    || ((((((v6 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v11 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v12 = *(_QWORD *)v11;
    *(_BYTE *)(v10 + 8) = *(_BYTE *)(v11 + 8);
    *(_QWORD *)v10 = v12;
    v13 = (_QWORD *)(((unint64_t)v4 + v6 + 23) & 0xFFFFFFFFFFFFF8);
    v14 = (_QWORD *)(((unint64_t)a2 + v6 + 23) & 0xFFFFFFFFFFFFF8);
    *v13 = *v14;
    v15 = (_QWORD *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
    v16 = (_QWORD *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    *(_QWORD *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFF8);
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_20E3AE8F4(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_20E3AE94C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  v9 = (v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_BYTE *)(v10 + 8);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = v11;
  v12 = (_QWORD *)((v7 + 23) & 0xFFFFFFFFFFFFF8);
  v13 = (_QWORD *)((v8 + 23) & 0xFFFFFFFFFFFFF8);
  *v12 = *v13;
  v14 = (_QWORD *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_QWORD *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  *(_QWORD *)(((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFF8);
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_20E3AEA00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  v9 = (v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_BYTE *)(v10 + 8);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = v11;
  v12 = (_QWORD *)((v7 + 23) & 0xFFFFFFFFFFFFF8);
  v13 = (_QWORD *)((v8 + 23) & 0xFFFFFFFFFFFFF8);
  *v12 = *v13;
  v14 = (_QWORD *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_QWORD *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  swift_retain();
  swift_release();
  *(_QWORD *)(((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_20E3AEAC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char v11;
  _QWORD *v12;
  _QWORD *v13;
  _OWORD *v14;
  _OWORD *v15;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  v9 = (v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_BYTE *)(v10 + 8);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = v11;
  v12 = (_QWORD *)((v7 + 23) & 0xFFFFFFFFFFFFF8);
  v13 = (_QWORD *)((v8 + 23) & 0xFFFFFFFFFFFFF8);
  *v12 = *v13;
  v14 = (_OWORD *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFF8);
  v15 = (_OWORD *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFF8);
  *v14 = *v15;
  *(_QWORD *)(((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_20E3AEB68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  uint64_t v16;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = v6 + a2;
  v9 = (v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_BYTE *)(v10 + 8);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = v11;
  v12 = (_QWORD *)((v7 + 23) & 0xFFFFFFFFFFFFF8);
  v13 = (v8 + 23) & 0xFFFFFFFFFFFFF8;
  v14 = *(_QWORD *)v13;
  v13 += 15;
  *v12 = v14;
  v15 = (_OWORD *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
  v16 = (v13 & 0xFFFFFFFFFFFFF8) + 23;
  *v15 = *(_OWORD *)(v13 & 0xFFFFFFFFFFFFF8);
  swift_release();
  *(_QWORD *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(v16 & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_20E3AEC1C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v12 = *(_QWORD *)((((a1 + v7 + 23) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((((((v7 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_20E3AECA8 + 4 * byte_20E4A7650[v10]))();
  }
}

void sub_20E3AED34(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((((((*(_DWORD *)(v5 + 64) + 23) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((((((*(_DWORD *)(v5 + 64) + 23) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((((((*(_QWORD *)(v5 + 64) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)+ 8);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_20E3AEE38()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x20E3AEEB8);
}

void sub_20E3AEE40(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x20E3AEE48);
  JUMPOUT(0x20E3AEEB8);
}

void sub_20E3AEE90()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x20E3AEEB8);
}

void sub_20E3AEE98()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x20E3AEEB8);
}

uint64_t sub_20E3AEEA0(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v5 + v6) = 0;
  if (!a2)
    JUMPOUT(0x20E3AEEB8);
  if (a3 < 0x7FFFFFFF)
  {
    if ((a2 & 0x80000000) == 0)
      JUMPOUT(0x20E3AEEB4);
    JUMPOUT(0x20E3AEEACLL);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v5);
}

uint64_t sub_20E3AEED0()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_20E3AEED8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    result = sub_20E4A60E0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_20E3AEFAC(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  size_t v12;
  int v13;
  uint64_t v14;
  int v15;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  void *v22;
  unint64_t v23;
  unsigned int (*v25)(unint64_t, uint64_t, uint64_t);

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v10 = v9;
  v11 = v6 + v9;
  if (*(_DWORD *)(v8 + 84))
    v12 = *(_QWORD *)(v8 + 64);
  else
    v12 = *(_QWORD *)(v8 + 64) + 1;
  v13 = *(_DWORD *)(v5 + 80) | v9;
  v14 = (*(_BYTE *)(v5 + 80) | v9);
  v15 = v13 & 0x100000;
  if (v14 > 7 || v15 != 0 || ((v12 + v10 + ((v6 + v10) & ~v10)) & ~v10) + v12 > 0x18)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v14 + 16) & ~v14));
    swift_retain();
  }
  else
  {
    v19 = v7;
    v20 = ~v10;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    v21 = (unint64_t)a1 + v11;
    v22 = (void *)(((unint64_t)a1 + v11) & ~v10);
    v23 = (unint64_t)a2 + v11;
    v25 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v8 + 48);
    if (v25(v23 & ~v10, 1, v19))
    {
      memcpy(v22, (const void *)(v23 & v20), v12);
    }
    else
    {
      (*(void (**)(void *, unint64_t, uint64_t))(v8 + 16))(v22, v23 & v20, v19);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v22, 0, 1, v19);
    }
    if (v25(((v23 | v10) + v12) & v20, 1, v19))
    {
      memcpy((void *)(((v21 | v10) + v12) & v20), (const void *)(((v23 | v10) + v12) & v20), v12);
    }
    else
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(((v21 | v10) + v12) & v20, ((v23 | v10) + v12) & v20, v19);
      (*(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(((v21 | v10) + v12) & v20, 0, 1, v19);
    }
  }
  return a1;
}

uint64_t sub_20E3AF1B4(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t result;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, AssociatedTypeWitness);
  v4 = *(_QWORD *)(v3 + 64) + a1;
  v5 = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = v4 + v7;
  v9 = ~v7;
  v10 = (v4 + v7) & ~v7;
  v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v11(v10, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v10, v5);
  v12 = (v8 | v7) + *(_QWORD *)(v6 + 64);
  if (!*(_DWORD *)(v6 + 84))
    ++v12;
  v13 = v12 & v9;
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v11)(v12 & v9, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v13, v5);
  return result;
}

uint64_t sub_20E3AF2E4(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  size_t v14;
  size_t v15;
  size_t v16;
  void *v17;
  const void *v18;
  unsigned int (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v6 + v9 + a1;
  v11 = ~v9;
  v12 = v6 + v9 + a2;
  v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  v21 = a1;
  if (v20(v12 & ~v9, 1, v7))
  {
    v13 = *(_DWORD *)(v8 + 84);
    v14 = *(_QWORD *)(v8 + 64);
    if (v13)
      v15 = *(_QWORD *)(v8 + 64);
    else
      v15 = v14 + 1;
    memcpy((void *)(v10 & ~v9), (const void *)(v12 & ~v9), v15);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v10 & ~v9, v12 & ~v9, v7);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v10 & ~v9, 0, 1, v7);
    v13 = *(_DWORD *)(v8 + 84);
    v14 = *(_QWORD *)(v8 + 64);
  }
  if (v13)
    v16 = v14;
  else
    v16 = v14 + 1;
  v17 = (void *)(((v10 | v9) + v16) & v11);
  v18 = (const void *)(((v12 | v9) + v16) & v11);
  if (v20((uint64_t)v18, 1, v7))
  {
    memcpy(v17, v18, v16);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v17, v18, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v17, 0, 1, v7);
  }
  return v21;
}

uint64_t sub_20E3AF4A4(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  size_t v15;
  size_t v16;
  void *v17;
  void *v18;
  int v19;
  int v20;
  uint64_t v22;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v22 = a1;
  v10 = v6 + v9 + a1;
  v11 = ~v9;
  v12 = v6 + v9 + a2;
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  LODWORD(a1) = v13((void *)(v10 & ~v9), 1, v7);
  v14 = v13((void *)(v12 & ~v9), 1, v7);
  if ((_DWORD)a1)
  {
    if (!v14)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v10 & ~v9, v12 & ~v9, v7);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v10 & ~v9, 0, 1, v7);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v14)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 24))(v10 & ~v9, v12 & ~v9, v7);
      goto LABEL_10;
    }
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v10 & ~v9, v7);
  }
  if (*(_DWORD *)(v8 + 84))
    v15 = *(_QWORD *)(v8 + 64);
  else
    v15 = *(_QWORD *)(v8 + 64) + 1;
  memcpy((void *)(v10 & ~v9), (const void *)(v12 & ~v9), v15);
LABEL_10:
  if (*(_DWORD *)(v8 + 84))
    v16 = *(_QWORD *)(v8 + 64);
  else
    v16 = *(_QWORD *)(v8 + 64) + 1;
  v17 = (void *)(((v10 | v9) + v16) & v11);
  v18 = (void *)(((v12 | v9) + v16) & v11);
  v19 = v13(v17, 1, v7);
  v20 = v13(v18, 1, v7);
  if (!v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 24))(v17, v18, v7);
      return v22;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v17, v7);
    goto LABEL_18;
  }
  if (v20)
  {
LABEL_18:
    memcpy(v17, v18, v16);
    return v22;
  }
  (*(void (**)(void *, void *, uint64_t))(v8 + 16))(v17, v18, v7);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v17, 0, 1, v7);
  return v22;
}

uint64_t sub_20E3AF6E8(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  size_t v14;
  size_t v15;
  size_t v16;
  void *v17;
  const void *v18;
  unsigned int (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v6 + v9 + a1;
  v11 = ~v9;
  v12 = v6 + v9 + a2;
  v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  v21 = a1;
  if (v20(v12 & ~v9, 1, v7))
  {
    v13 = *(_DWORD *)(v8 + 84);
    v14 = *(_QWORD *)(v8 + 64);
    if (v13)
      v15 = *(_QWORD *)(v8 + 64);
    else
      v15 = v14 + 1;
    memcpy((void *)(v10 & ~v9), (const void *)(v12 & ~v9), v15);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v10 & ~v9, v12 & ~v9, v7);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v10 & ~v9, 0, 1, v7);
    v13 = *(_DWORD *)(v8 + 84);
    v14 = *(_QWORD *)(v8 + 64);
  }
  if (v13)
    v16 = v14;
  else
    v16 = v14 + 1;
  v17 = (void *)(((v10 | v9) + v16) & v11);
  v18 = (const void *)(((v12 | v9) + v16) & v11);
  if (v20((uint64_t)v18, 1, v7))
  {
    memcpy(v17, v18, v16);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v17, v18, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v17, 0, 1, v7);
  }
  return v21;
}

uint64_t sub_20E3AF8A8(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  size_t v15;
  size_t v16;
  void *v17;
  void *v18;
  int v19;
  int v20;
  uint64_t v22;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 40))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v22 = a1;
  v10 = v6 + v9 + a1;
  v11 = ~v9;
  v12 = v6 + v9 + a2;
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  LODWORD(a1) = v13((void *)(v10 & ~v9), 1, v7);
  v14 = v13((void *)(v12 & ~v9), 1, v7);
  if ((_DWORD)a1)
  {
    if (!v14)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v10 & ~v9, v12 & ~v9, v7);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v10 & ~v9, 0, 1, v7);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v14)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 40))(v10 & ~v9, v12 & ~v9, v7);
      goto LABEL_10;
    }
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v10 & ~v9, v7);
  }
  if (*(_DWORD *)(v8 + 84))
    v15 = *(_QWORD *)(v8 + 64);
  else
    v15 = *(_QWORD *)(v8 + 64) + 1;
  memcpy((void *)(v10 & ~v9), (const void *)(v12 & ~v9), v15);
LABEL_10:
  if (*(_DWORD *)(v8 + 84))
    v16 = *(_QWORD *)(v8 + 64);
  else
    v16 = *(_QWORD *)(v8 + 64) + 1;
  v17 = (void *)(((v10 | v9) + v16) & v11);
  v18 = (void *)(((v12 | v9) + v16) & v11);
  v19 = v13(v17, 1, v7);
  v20 = v13(v18, 1, v7);
  if (!v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 40))(v17, v18, v7);
      return v22;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v17, v7);
    goto LABEL_18;
  }
  if (v20)
  {
LABEL_18:
    memcpy(v17, v18, v16);
    return v22;
  }
  (*(void (**)(void *, void *, uint64_t))(v8 + 32))(v17, v18, v7);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v17, 0, 1, v7);
  return v22;
}

uint64_t sub_20E3AFAEC(uint64_t a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  int v16;
  unsigned int v17;
  int v18;
  int v19;
  unsigned int v20;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8)
    v9 = v8 - 1;
  else
    v9 = 0;
  if (v9 <= v6)
    v10 = v6;
  else
    v10 = v9;
  if (v8)
    v11 = *(_QWORD *)(v7 + 64);
  else
    v11 = *(_QWORD *)(v7 + 64) + 1;
  if (!a2)
    return 0;
  v12 = *(unsigned __int8 *)(v7 + 80);
  v13 = *(_QWORD *)(v5 + 64) + v12;
  if (a2 <= v10)
    goto LABEL_29;
  v14 = ((v11 + v12 + (v13 & ~v12)) & ~v12) + v11;
  v15 = 8 * v14;
  if (v14 <= 3)
  {
    v17 = ((a2 - v10 + ~(-1 << v15)) >> v15) + 1;
    if (HIWORD(v17))
    {
      v16 = *(_DWORD *)(a1 + v14);
      if (!v16)
        goto LABEL_29;
      goto LABEL_20;
    }
    if (v17 > 0xFF)
    {
      v16 = *(unsigned __int16 *)(a1 + v14);
      if (!*(_WORD *)(a1 + v14))
        goto LABEL_29;
      goto LABEL_20;
    }
    if (v17 < 2)
    {
LABEL_29:
      if (v10)
      {
        if (v6 >= v9)
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, v6, AssociatedTypeWitness);
        v20 = (*(uint64_t (**)(uint64_t))(v7 + 48))((v13 + a1) & ~v12);
        if (v20 >= 2)
          return v20 - 1;
        else
          return 0;
      }
      return 0;
    }
  }
  v16 = *(unsigned __int8 *)(a1 + v14);
  if (!*(_BYTE *)(a1 + v14))
    goto LABEL_29;
LABEL_20:
  v18 = (v16 - 1) << v15;
  if (v14 > 3)
    v18 = 0;
  if ((_DWORD)v14)
  {
    if (v14 <= 3)
      v19 = v14;
    else
      v19 = 4;
    __asm { BR              X12 }
  }
  return v10 + v18 + 1;
}

void sub_20E3AFD00(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  int v19;

  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = 0;
  v9 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v10 = *(_DWORD *)(v9 + 84);
  v11 = v10 - 1;
  if (!v10)
    v11 = 0;
  if (v11 <= v7)
    v12 = v7;
  else
    v12 = v11;
  v13 = *(unsigned __int8 *)(v9 + 80);
  if (v10)
    v15 = *(_QWORD *)(v9 + 64);
  else
    v15 = *(_QWORD *)(v9 + 64) + 1;
  v14 = *(_QWORD *)(v6 + 64) + v13;
  v16 = ((v15 + v13 + (v14 & ~(_DWORD)v13)) & ~(_DWORD)v13) + v15;
  if (a3 > v12)
  {
    if (v16 > 3)
    {
      v8 = 1u;
      if (v12 >= a2)
LABEL_25:
        __asm { BR              X14 }
LABEL_18:
      v18 = ~v12 + a2;
      if (v16 < 4)
      {
        if (v16)
        {
          v19 = v18 & ~(-1 << (8 * v16));
          bzero(a1, ((v15 + v13 + (v14 & ~v13)) & ~v13) + v15);
          if (v16 == 3)
          {
            *(_WORD *)a1 = v19;
            a1[2] = BYTE2(v19);
          }
          else if (v16 == 2)
          {
            *(_WORD *)a1 = v19;
          }
          else
          {
            *a1 = v19;
          }
        }
      }
      else
      {
        bzero(a1, ((v15 + v13 + (v14 & ~v13)) & ~v13) + v15);
        *(_DWORD *)a1 = v18;
      }
      __asm { BR              X10 }
    }
    v17 = ((a3 - v12 + ~(-1 << (8 * v16))) >> (8 * v16)) + 1;
    if (HIWORD(v17))
    {
      v8 = 4u;
      if (v12 >= a2)
        goto LABEL_25;
      goto LABEL_18;
    }
    if (v17 >= 0x100)
      v8 = 2;
    else
      v8 = v17 > 1;
  }
  if (v12 >= a2)
    goto LABEL_25;
  goto LABEL_18;
}

void sub_20E3AFFBC()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  *(_BYTE *)(v0 + v2) = v1;
}

void sub_20E3AFFC4()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;

  *(_WORD *)(v0 + v2) = v1;
}

void sub_20E3AFFE8()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
}

void sub_20E3AFFF8()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
}

void sub_20E3B0000()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

ValueMetadata *type metadata accessor for ShelfPageConfiguration()
{
  return &type metadata for ShelfPageConfiguration;
}

uint64_t sub_20E3B001C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_20E3B0094(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v11 = v10[1];
    v12 = (_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v12 = *v10;
    v12[1] = v11;
  }
  swift_retain();
  return v4;
}

uint64_t sub_20E3B0144(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
  return swift_release();
}

uint64_t sub_20E3B0184(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v9 = v8[1];
  *v7 = *v8;
  v7[1] = v9;
  swift_retain();
  return a1;
}

uint64_t sub_20E3B01E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v9 = v8[1];
  *v7 = *v8;
  v7[1] = v9;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_20E3B0250(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  *(_OWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_20E3B02AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  *(_OWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_20E3B0310(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v12 = *(_QWORD *)((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_20E3B038C + 4 * byte_20E4A7671[v10]))();
  }
}

void sub_20E3B0410(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_20E3B0504()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x20E3B057CLL);
}

void sub_20E3B050C(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x20E3B0514);
  JUMPOUT(0x20E3B057CLL);
}

void sub_20E3B0554()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x20E3B057CLL);
}

void sub_20E3B055C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x20E3B057CLL);
}

uint64_t sub_20E3B0564(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v5 + v6) = 0;
  if (!a2)
    JUMPOUT(0x20E3B057CLL);
  if (a3 < 0x7FFFFFFF)
  {
    if ((a2 & 0x80000000) == 0)
      JUMPOUT(0x20E3B0578);
    JUMPOUT(0x20E3B0570);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v5);
}

uint64_t sub_20E3B0594()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_20E3B059C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_20E3B062C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0
    || ((((((((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
       + 23) & 0xFFFFFFFFFFFFFFF8)
     + 16 > 0x18)
  {
    v9 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = (_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    v11 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    *v10 = *v11;
    v12 = (_QWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
    v13 = (_QWORD *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
    v14 = v13[1];
    *v12 = *v13;
    v12[1] = v14;
    v15 = (_QWORD *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8);
    v16 = (_QWORD *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    v18 = (_QWORD *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8);
    v19 = (_QWORD *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    v21 = (_QWORD *)(((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8);
    v22 = (_QWORD *)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8);
    *v21 = *v22;
    v21[1] = v22[1];
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_20E3B078C(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_20E3B0810(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = (_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_QWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8);
  v13 = (_QWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = (_QWORD *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8);
  v16 = (_QWORD *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  v18 = (_QWORD *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8);
  v19 = (_QWORD *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v18 = *v19;
  v18[1] = v19[1];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_20E3B0900(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = v6 + a2;
  v9 = (v8 & 0xFFFFFFFFFFFFFFF8) + 15;
  *v7 = *(_QWORD *)(v8 & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  v10 = (_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  v9 &= 0xFFFFFFFFFFFFFFF8;
  v11 = *(_QWORD *)(v9 + 8);
  *v10 = *(_QWORD *)v9;
  v10[1] = v11;
  swift_retain();
  swift_release();
  v12 = (_QWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
  v13 = (_QWORD *)((v9 + 23) & 0xFFFFFFFFFFFFFFF8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  swift_retain();
  swift_release();
  v15 = (_QWORD *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8);
  v16 = (_QWORD *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  swift_retain();
  swift_release();
  v18 = (_QWORD *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8);
  v19 = (_QWORD *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v18 = *v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18[1] = v19[1];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_20E3B0A1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _OWORD *v9;
  _OWORD *v10;
  _OWORD *v11;
  _OWORD *v12;
  _OWORD *v13;
  _OWORD *v14;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = (_OWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_OWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  v11 = (_OWORD *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFF8);
  v12 = (_OWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v11 = *v12;
  v13 = (_OWORD *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFF8);
  v14 = (_OWORD *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFF8);
  *v13 = *v14;
  *(_OWORD *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_20E3B0AB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _OWORD *v9;
  _OWORD *v10;
  _OWORD *v11;
  _OWORD *v12;
  _OWORD *v13;
  _OWORD *v14;
  _QWORD *v15;
  _QWORD *v16;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  swift_release();
  v9 = (_OWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_OWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFF8);
  *v9 = *v10;
  swift_release();
  v11 = (_OWORD *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8);
  v12 = (_OWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFF8);
  *v11 = *v12;
  swift_release();
  v13 = (_OWORD *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
  v14 = (_OWORD *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFF8);
  *v13 = *v14;
  swift_release();
  v15 = (_QWORD *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8);
  v16 = (_QWORD *)(((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v15 = *v16;
  swift_bridgeObjectRelease();
  v15[1] = v16[1];
  swift_release();
  return a1;
}

uint64_t sub_20E3B0B98(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v12 = *(_QWORD *)((((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((((((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
           + 23) & 0xFFFFFFFFFFFFFFF8)
         + 16) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_20E3B0C34 + 4 * byte_20E4A7680[v10]))();
  }
}

void sub_20E3B0CC0(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((((((((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8)
         + 23) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((((((((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((((((((((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)+ 16);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_20E3B0DD4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x20E3B0E54);
}

void sub_20E3B0DDC(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x20E3B0DE4);
  JUMPOUT(0x20E3B0E54);
}

void sub_20E3B0E2C()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x20E3B0E54);
}

void sub_20E3B0E34()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x20E3B0E54);
}

uint64_t sub_20E3B0E3C(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v5 + v6) = 0;
  if (!a2)
    JUMPOUT(0x20E3B0E54);
  if (a3 < 0x7FFFFFFF)
  {
    if ((a2 & 0x80000000) == 0)
      JUMPOUT(0x20E3B0E50);
    JUMPOUT(0x20E3B0E48);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v5);
}

uint64_t sub_20E3B0E6C()
{
  swift_release();
  return swift_release();
}

uint64_t sub_20E3B0E94(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = v3;
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *sub_20E3B0EDC(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_20E3B0F38(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for FlowSheetContentStyleConfiguration(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FlowSheetContentStyleConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for _ShelfPagePaginatedContent()
{
  JUMPOUT(0x212BBDEE8);
}

uint64_t sub_20E3B1010()
{
  return type metadata accessor for ShelfContainerEnviromentValues();
}

uint64_t sub_20E3B1018()
{
  uint64_t result;
  unint64_t v1;

  result = sub_20E4A3434();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ShelfGridVerticalLayoutLonelyItemSpan(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ShelfGridVerticalLayoutLonelyItemSpan(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_20E3B116C + 4 * byte_20E4A7694[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_20E3B11A0 + 4 * byte_20E4A768F[v4]))();
}

uint64_t sub_20E3B11A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20E3B11A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20E3B11B0);
  return result;
}

uint64_t sub_20E3B11BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20E3B11C4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_20E3B11C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20E3B11D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20E3B11DC(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_20E3B11E4(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ShelfGridVerticalLayoutLonelyItemSpan()
{
  return &type metadata for ShelfGridVerticalLayoutLonelyItemSpan;
}

uint64_t sub_20E3B1200()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[2];
  _QWORD v14[2];
  _QWORD v15[2];
  _QWORD v16[2];
  _QWORD v17[2];

  v0 = sub_20E4A3650();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A18510);
  v1 = sub_20E4A39D4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A18518);
  v2 = sub_20E4A39D4();
  v3 = sub_20E4A3E00();
  v4 = MEMORY[0x212BBDF90](MEMORY[0x24BDEB188], v0);
  v5 = sub_20E39D010(&qword_254A18520, &qword_254A18510, MEMORY[0x24BDF06F0]);
  v17[0] = v4;
  v17[1] = v5;
  v6 = MEMORY[0x24BDED308];
  v7 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v1, v17);
  v16[0] = v7;
  v16[1] = sub_20E39D010(&qword_254A18528, &qword_254A18518, MEMORY[0x24BDF0400]);
  v15[0] = MEMORY[0x212BBDF90](v6, v2, v16);
  v15[1] = v7;
  MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v3, v15);
  v8 = sub_20E4A3674();
  v9 = sub_20E4A39D4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A18530);
  v10 = sub_20E4A39D4();
  v14[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDEB238], v8);
  v14[1] = v5;
  v13[0] = MEMORY[0x212BBDF90](v6, v9, v14);
  v13[1] = sub_20E39D010((unint64_t *)&qword_254A18538, &qword_254A18530, MEMORY[0x24BDF1028]);
  MEMORY[0x212BBDF90](v6, v10, v13);
  v11 = sub_20E4A38B4();
  return MEMORY[0x212BBDF90](MEMORY[0x24BDEC6F8], v11);
}

uint64_t sub_20E3B13FC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[6];

  v4 = a1[1];
  v5 = a1[3];
  v6 = type metadata accessor for IndexedRandomAccessCollection(255, *a1, a1[2], a4);
  swift_getAssociatedTypeWitness();
  v9[1] = v6;
  v9[2] = swift_getAssociatedTypeWitness();
  v9[3] = v4;
  v9[4] = MEMORY[0x212BBDF90](&protocol conformance descriptor for IndexedRandomAccessCollection<A>, v6);
  v9[5] = swift_getAssociatedConformanceWitness();
  v7 = sub_20E4A47C0();
  v9[0] = v5;
  return MEMORY[0x212BBDF90](MEMORY[0x24BDF4A08], v7, v9);
}

void sub_20E3B1508(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for IndexedRandomAccessCollection(255, *a1, a1[4], a4);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  type metadata accessor for IntentResultView();
}

void sub_20E3B1618()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = type metadata accessor for _ContinuousIntentDispatchWorker(255, v3, v1, v2);
  v6 = MEMORY[0x212BBDF90](&unk_20E4A9AB8, v5);
  type metadata accessor for _IntentDispatchViewModifier(255, v5, v6, v7);
  sub_20E4A39D4();
  type metadata accessor for PageResourceMetricsViewModifier(255, v3, v1, v8);
  sub_20E4A39D4();
  MEMORY[0x212BBDF90](&protocol conformance descriptor for IndexedRandomAccessCollection<A>, v0);
  sub_20E4A47C0();
  type metadata accessor for _PrefetchMediaArtworkAdapter(255, v4, v9, v10);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A18550);
  sub_20E3B1B30(&qword_254A18558, &qword_254A18550, MEMORY[0x24BEE23D8], MEMORY[0x24BEE12A8]);
  type metadata accessor for _PrefetchMediaArtworkViewModifier();
}

uint64_t sub_20E3B1724(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[2];
  uint64_t v12;
  _QWORD v13[2];
  _QWORD v14[21];

  v8 = sub_20E4A39D4();
  v14[0] = MEMORY[0x212BBDF90](&protocol conformance descriptor for IntentResultView<A, B, C, D>, v2);
  v14[1] = MEMORY[0x212BBDF90](&unk_20E4A9A68, v6);
  v9 = MEMORY[0x24BDED308];
  v13[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v4, v14);
  v13[1] = MEMORY[0x212BBDF90](&unk_20E4AF188, v5);
  v12 = MEMORY[0x212BBDF90](v9, v3, v13);
  v11[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDF4A08], v1, &v12);
  v11[1] = MEMORY[0x212BBDF90](&unk_20E4A89A0, a1);
  return MEMORY[0x212BBDF90](v9, v8, v11);
}

void sub_20E3B1804()
{
  swift_getTupleTypeMetadata2();
  sub_20E4A491C();
  JUMPOUT(0x212BBDF90);
}

uint64_t sub_20E3B1840(uint64_t a1)
{
  return get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyxAA30_EnvironmentKeyWritingModifierVy12CoreGraphics7CGFloatVSgGGAaBHPxAaBHD1__AkA0cI0HPyHCHCTm(a1, &qword_254A188F8, &qword_254A18900);
}

uint64_t sub_20E3B1854(uint64_t a1)
{
  return get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyxAA30_EnvironmentKeyWritingModifierVy12CoreGraphics7CGFloatVSgGGAaBHPxAaBHD1__AkA0cI0HPyHCHCTm(a1, &qword_254A18908, &qword_254A18910);
}

uint64_t get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyxAA30_EnvironmentKeyWritingModifierVy12CoreGraphics7CGFloatVSgGGAaBHPxAaBHD1__AkA0cI0HPyHCHCTm(uint64_t a1, uint64_t *a2, unint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[2];

  v5 = *(_QWORD *)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
  v6 = sub_20E4A39D4();
  v8[0] = v5;
  v8[1] = sub_20E39D010(a3, a2, MEMORY[0x24BDF1028]);
  return MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v6, v8);
}

uint64_t sub_20E3B18E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[2];
  _QWORD v8[2];

  v1 = *(_QWORD *)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A18588);
  v2 = sub_20E4A39D4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A18918);
  v3 = sub_20E4A39D4();
  v4 = MEMORY[0x24BDF1028];
  v8[0] = v1;
  v8[1] = sub_20E39D010((unint64_t *)&qword_254A18590, &qword_254A18588, MEMORY[0x24BDF1028]);
  v5 = MEMORY[0x24BDED308];
  v7[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v2, v8);
  v7[1] = sub_20E39D010(qword_254A18920, &qword_254A18918, v4);
  return MEMORY[0x212BBDF90](v5, v3, v7);
}

ValueMetadata *type metadata accessor for ShelfContentPrefersCompactLayoutsKey()
{
  return &type metadata for ShelfContentPrefersCompactLayoutsKey;
}

ValueMetadata *type metadata accessor for ShelfContentMaxWidthKey()
{
  return &type metadata for ShelfContentMaxWidthKey;
}

uint64_t sub_20E3B19E4()
{
  return sub_20E3B1B30(&qword_254A18558, &qword_254A18550, MEMORY[0x24BEE23D8], MEMORY[0x24BEE12A8]);
}

uint64_t sub_20E3B1A18()
{
  return swift_deallocObject();
}

double sub_20E3B1A28@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_20E3AC238(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_20E3B1A30@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  v4 = *(_QWORD *)(v2 + 16);
  v5 = a1[3];
  v6 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v5);
  v8 = v4;
  result = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v6 + 8))(&v8, v5, v6);
  *a2 = result;
  return result;
}

double sub_20E3B1A9C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_20E3ABDCC(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_20E3B1AB4(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

unint64_t sub_20E3B1AEC()
{
  unint64_t result;

  result = qword_254A189E8;
  if (!qword_254A189E8)
  {
    result = MEMORY[0x212BBDF90](MEMORY[0x24BEE50E0], MEMORY[0x24BEE50B0]);
    atomic_store(result, (unint64_t *)&qword_254A189E8);
  }
  return result;
}

uint64_t sub_20E3B1B30(unint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9 = a3;
    result = MEMORY[0x212BBDF90](a4, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20E3B1B8C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254A18A68);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_20E4A62D8();
  __break(1u);
  return result;
}

uint64_t sub_20E3B1C94(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254A18A30);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_20E4A62D8();
  __break(1u);
  return result;
}

uint64_t sub_20E3B1DA0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254A18A08);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_20E4A62D8();
  __break(1u);
  return result;
}

uint64_t sub_20E3B1EAC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_20E4A62D8();
  __break(1u);
  return result;
}

uint64_t sub_20E3B1F9C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(a5(0) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_20E4A62D8();
  __break(1u);
  return result;
}

uint64_t sub_20E3B20B4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_20E4A62D8();
  __break(1u);
  return result;
}

__n128 sub_20E3B21A4()
{
  uint64_t v0;
  __n128 result;

  result = *(__n128 *)(v0 + 24);
  *(__n128 *)(*(_QWORD *)(v0 + 16) + 16) = result;
  return result;
}

unint64_t sub_20E3B21B4()
{
  unint64_t result;

  result = qword_254A18A40;
  if (!qword_254A18A40)
  {
    result = MEMORY[0x212BBDF90](&unk_20E4A7F4C, &type metadata for ShelfGridVerticalLayoutLonelyItemSpanKey);
    atomic_store(result, (unint64_t *)&qword_254A18A40);
  }
  return result;
}

unint64_t sub_20E3B21F8()
{
  unint64_t result;

  result = qword_254A18A48;
  if (!qword_254A18A48)
  {
    result = MEMORY[0x212BBDF90](&unk_20E4AA560, &type metadata for _ShelfGridPrefersEagerLayoutKey);
    atomic_store(result, (unint64_t *)&qword_254A18A48);
  }
  return result;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

void sub_20E3B2280()
{
  type metadata accessor for _ShelfPageContinuousContent();
}

void sub_20E3B22E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v7 = (*(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80) + 104) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  type metadata accessor for ShelfPageContext(0, v4, v6, a4);
  sub_20E3AB6F8(v5 + v7);
}

void sub_20E3B2370()
{
  type metadata accessor for _ShelfPageContinuousContent();
}

void sub_20E3B23D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;

  type metadata accessor for ShelfPageContext(0, v20, v21, a4);
  sub_20E3AB80C(a20);
}

void objectdestroy_60Tm()
{
  type metadata accessor for _ShelfPageContinuousContent();
}

uint64_t sub_20E3B24B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t AssociatedTypeWitness;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(unint64_t, uint64_t, uint64_t);
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_QWORD *)(a1 - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 104) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = v6 + *(_QWORD *)(v5 + 64);
  v8 = type metadata accessor for ShelfPageContext(0, v18, v17, a4);
  v9 = (v7 + *(unsigned __int8 *)(*(_QWORD *)(v8 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v8 - 8) + 80);
  (*(void (**)(unint64_t))(*(_QWORD *)(v18 - 8) + 8))(v4 + v6);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v4 + v9, AssociatedTypeWitness);
  v11 = v4 + v9 + *(int *)(v8 + 36);
  v12 = swift_getAssociatedTypeWitness();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v13 + 48);
  if (!v14(v11, 1, v12))
    (*(void (**)(unint64_t, uint64_t))(v13 + 8))(v11, v12);
  v15 = v4 + v9 + *(int *)(v8 + 40);
  if (!v14(v15, 1, v12))
    (*(void (**)(unint64_t, uint64_t))(v13 + 8))(v15, v12);
  return swift_deallocObject();
}

void sub_20E3B2670()
{
  type metadata accessor for _ShelfPageContinuousContent();
}

void sub_20E3B26DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;

  type metadata accessor for ShelfPageContext(0, v22, v23, a4);
  sub_20E3AB92C(a22);
}

uint64_t sub_20E3B2768@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_20E3A84DC(v1[5], v1[6], v1[2], v1[3], v1[4], a1);
}

uint64_t sub_20E3B2780@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_20E3A8D2C(*(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_20E3B278C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v1 = *((_QWORD *)v0 + 2);
  v2 = *((_QWORD *)v0 + 3);
  v3 = *((_QWORD *)v0 + 4);
  v4 = sub_20E4A3818();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = v6 + *(_QWORD *)(v5 + 64);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ShelfPage(0, v1, v2, v3) - 8) + 80);
  v9 = (v7 + v8) & ~v8;
  (*(void (**)(char *, uint64_t))(v5 + 8))(&v0[v6], v4);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(&v0[v9], v1);
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_20E3B2878(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v3 = v1[2];
  v4 = v1[3];
  v5 = v1[4];
  v6 = *(_QWORD *)(sub_20E4A3818() - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = v7 + *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ShelfPage(0, v3, v4, v5) - 8) + 80);
  return sub_20E3A8F58(a1, (uint64_t)v1 + v7, (uint64_t)v1 + ((v8 + v9) & ~v9), v3, v4, v5);
}

ValueMetadata *type metadata accessor for ShelfGridVerticalLayoutLonelyItemSpanKey()
{
  return &type metadata for ShelfGridVerticalLayoutLonelyItemSpanKey;
}

uint64_t sub_20E3B2920(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7 = a3();
    result = MEMORY[0x212BBDF90](MEMORY[0x24BEE4AB8], v6, &v7);
    atomic_store(result, a1);
  }
  return result;
}

double sub_20E3B2984()
{
  double result;

  *(_QWORD *)&result = sub_20E3B21A4().n128_u64[0];
  return result;
}

uint64_t MediaArtwork.BundleImageProtocol.Configuration.withAllowedBundles<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  double v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *, double))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  sub_20E3A5200();
  result = sub_20E4A5DA4();
  *a2 = result;
  return result;
}

uint64_t MediaArtwork.BundleImageProtocol.Configuration.addingAllowedBundle(_:)@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;
  _QWORD *v3;
  id v6;

  v3 = v2;
  *a2 = *v3;
  swift_bridgeObjectRetain();
  v6 = a1;
  MEMORY[0x212BBD2D0]();
  if (*(_QWORD *)((*a2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*a2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_20E4A5D50();
  sub_20E4A5D80();
  return sub_20E4A5D38();
}

uint64_t sub_20E3B2AB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(uint64_t, uint64_t, uint64_t);
  uint64_t v66;
  void (*v67)(uint64_t, uint64_t, uint64_t);
  uint64_t v68;
  char *v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;

  v72 = a2;
  v3 = sub_20E4A4FAC();
  v70 = *(uint64_t **)(v3 - 8);
  v71 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v69 = (char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v61 - v6;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v61 - v9;
  v11 = type metadata accessor for MediaArtwork.BundleImageProtocol.MatchedResource();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (uint64_t *)((char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14[2] = 0;
  v14[3] = 0;
  v16 = (uint64_t)v14 + *(int *)(v15 + 24);
  v17 = sub_20E4A45F8();
  v63 = *(_QWORD *)(v17 - 8);
  v67 = *(void (**)(uint64_t, uint64_t, uint64_t))(v63 + 56);
  v68 = v17;
  v67(v16, 1, 1);
  v18 = (uint64_t)v14 + *(int *)(v11 + 28);
  v19 = sub_20E4A45BC();
  v64 = *(_QWORD *)(v19 - 8);
  v65 = *(void (**)(uint64_t, uint64_t, uint64_t))(v64 + 56);
  v66 = v19;
  v65(v18, 1, 1);
  v20 = sub_20E4A4D24();
  v22 = v21;
  swift_bridgeObjectRelease();
  v23 = HIBYTE(v22) & 0xF;
  if ((v22 & 0x2000000000000000) == 0)
    v23 = v20 & 0xFFFFFFFFFFFFLL;
  if (!v23)
  {
    v40 = sub_20E4A4D3C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 8))(a1, v40);
    swift_bridgeObjectRelease();
    sub_20E39D1F8(v16, &qword_254A18AD0);
    sub_20E39D1F8(v18, &qword_254A18AD8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v72, 1, 1, v11);
  }
  v61 = v11;
  v62 = v12;
  *v14 = sub_20E4A4D24();
  v14[1] = v24;
  sub_20E4A4D30();
  v25 = sub_20E4A4FB8();
  v27 = v26;
  v28 = v71;
  v29 = (void (*)(char *, uint64_t))v70[1];
  v29(v10, v71);
  swift_bridgeObjectRelease();
  v14[2] = v25;
  v14[3] = v27;
  v70 = v14;
  v30 = a1;
  sub_20E4A4D30();
  v31 = sub_20E4A4FB8();
  v33 = v32;
  v29(v7, v28);
  v34 = v28;
  if (v33)
  {
    if (v31 == 0x6C616E696769726FLL && v33 == 0xE800000000000000 || (sub_20E4A635C() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      sub_20E39D1F8(v16, &qword_254A18AD0);
      v35 = (unsigned int *)MEMORY[0x24BDF4060];
LABEL_9:
      v36 = v68;
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v63 + 104))(v16, *v35, v68);
      v37 = 0;
      v38 = v30;
      v39 = v69;
      goto LABEL_17;
    }
    if (v31 == 0x6574616C706D6574 && v33 == 0xE800000000000000)
    {
      swift_bridgeObjectRelease();
LABEL_15:
      sub_20E39D1F8(v16, &qword_254A18AD0);
      v35 = (unsigned int *)MEMORY[0x24BDF4068];
      goto LABEL_9;
    }
    v42 = sub_20E4A635C();
    swift_bridgeObjectRelease();
    if ((v42 & 1) != 0)
      goto LABEL_15;
  }
  sub_20E39D1F8(v16, &qword_254A18AD0);
  v37 = 1;
  v38 = v30;
  v36 = v68;
  v39 = v69;
LABEL_17:
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v67)(v16, v37, 1, v36);
  sub_20E4A4D30();
  v43 = sub_20E4A4FB8();
  v45 = v44;
  v29(v39, v34);
  if (!v45)
  {
    v53 = sub_20E4A4D3C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 8))(v38, v53);
    v51 = v62;
    v54 = v66;
    v52 = (uint64_t)v70;
    goto LABEL_24;
  }
  if ((v43 != 1701736302 || v45 != 0xE400000000000000) && (sub_20E4A635C() & 1) == 0)
  {
    if (v43 == 7827308 && v45 == 0xE300000000000000 || (sub_20E4A635C() & 1) != 0)
    {
      v56 = sub_20E4A4D3C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 8))(v38, v56);
      swift_bridgeObjectRelease();
      sub_20E39D1F8(v18, &qword_254A18AD8);
      v47 = (unsigned int *)MEMORY[0x24BDF3FF0];
      goto LABEL_22;
    }
    if (v43 == 0x6D756964656DLL && v45 == 0xE600000000000000 || (sub_20E4A635C() & 1) != 0)
    {
      v57 = sub_20E4A4D3C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 8))(v38, v57);
      swift_bridgeObjectRelease();
      sub_20E39D1F8(v18, &qword_254A18AD8);
      v47 = (unsigned int *)MEMORY[0x24BDF4008];
      goto LABEL_22;
    }
    v51 = v62;
    v54 = v66;
    v52 = (uint64_t)v70;
    if (v43 == 1751607656 && v45 == 0xE400000000000000)
    {
      swift_bridgeObjectRelease();
      v58 = sub_20E4A4D3C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 8))(v30, v58);
LABEL_40:
      sub_20E39D1F8(v18, &qword_254A18AD8);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v64 + 104))(v18, *MEMORY[0x24BDF3FF8], v54);
      v55 = 0;
      goto LABEL_25;
    }
    v59 = sub_20E4A635C();
    swift_bridgeObjectRelease();
    v60 = sub_20E4A4D3C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 8))(v30, v60);
    if ((v59 & 1) != 0)
      goto LABEL_40;
LABEL_24:
    sub_20E39D1F8(v18, &qword_254A18AD8);
    v55 = 1;
LABEL_25:
    v49 = v72;
    v50 = v61;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v65)(v18, v55, 1, v54);
    goto LABEL_26;
  }
  v46 = sub_20E4A4D3C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 8))(v38, v46);
  swift_bridgeObjectRelease();
  sub_20E39D1F8(v18, &qword_254A18AD8);
  v47 = (unsigned int *)MEMORY[0x24BDF4000];
LABEL_22:
  v48 = v66;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v64 + 104))(v18, *v47, v66);
  v49 = v72;
  v50 = v61;
  v51 = v62;
  v52 = (uint64_t)v70;
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v65)(v18, 0, 1, v48);
LABEL_26:
  sub_20E3B5030(v52, v49);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v51 + 56))(v49, 0, 1, v50);
  return sub_20E3B5074(v52);
}

uint64_t sub_20E3B31DC()
{
  uint64_t v0;

  v0 = sub_20E4A4D60();
  __swift_allocate_value_buffer(v0, qword_254A18A80);
  __swift_project_value_buffer(v0, (uint64_t)qword_254A18A80);
  return sub_20E4A4D48();
}

_QWORD *MediaArtwork.BundleImageProtocol.init(_:)@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t _s9JetEngine12MediaArtworkV01_aB8_SwiftUIE19BundleImageProtocolV13ConfigurationVAHycfC_0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254A18A98);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_20E4A7F90;
  *(_QWORD *)(v2 + 32) = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  result = sub_20E4A5D38();
  *a1 = v2;
  return result;
}

uint64_t sub_20E3B3338(char *a1)
{
  unint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  void *v30;
  id v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  void *v39;
  id v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  NSObject *v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char *v60;
  os_signpost_id_t v61;
  void (*v62)(char *, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t inited;
  uint64_t v67;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  char *v85;
  uint64_t v86;
  __int128 v87;
  uint64_t v88;
  uint64_t v89;

  v3 = sub_20E4A33E0();
  MEMORY[0x24BDAC7A8](v3);
  v85 = (char *)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_20E4A3404();
  v86 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (uint64_t *)((char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_20E4A3494();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v78 = (char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v84 = (char *)&v69 - v12;
  v81 = type metadata accessor for MediaArtwork.BundleImageProtocol.MatchedResource();
  MEMORY[0x24BDAC7A8](v81);
  v77 = (uint64_t *)((char *)&v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18AD8);
  MEMORY[0x24BDAC7A8](v14);
  v82 = (uint64_t)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_20E4A45BC();
  v76 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v73 = (char *)&v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18AD0);
  MEMORY[0x24BDAC7A8](v18);
  v72 = (char *)&v69 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v69 - v21;
  v23 = sub_20E4A45F8();
  v79 = *(_QWORD *)(v23 - 8);
  v80 = v23;
  MEMORY[0x24BDAC7A8](v23);
  v71 = (char *)&v69 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = *v1;
  v26 = *((_QWORD *)a1 + 3);
  v83 = a1;
  if (v26)
  {
    v70 = v16;
    v75 = v8;
    v27 = *((_QWORD *)a1 + 2);
    v8 = v26;
LABEL_3:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v28 = v87;
    v29 = sub_20E3B4E98(v25, v27, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v29 & 1) != 0)
    {
      v74 = v9;
      swift_bridgeObjectRetain();
      *(_QWORD *)&v87 = v27;
      v30 = (void *)sub_20E4A5C18();
      swift_bridgeObjectRelease();
      v31 = objc_msgSend((id)objc_opt_self(), sel_bundleWithIdentifier_, v30);

      if (v31)
      {
        v86 = v28;
        v32 = v83;
        swift_bridgeObjectRetain();
        v85 = (char *)v31;
        v5 = sub_20E4A458C();
        v33 = v81;
        v34 = v32;
        sub_20E3A5E20((uint64_t)&v32[*(int *)(v81 + 24)], (uint64_t)v22, &qword_254A18AD0);
        v36 = v79;
        v35 = v80;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v79 + 48))(v22, 1, v80) == 1)
        {
          sub_20E39D1F8((uint64_t)v22, &qword_254A18AD0);
        }
        else
        {
          v42 = v71;
          (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v71, v22, v35);
          v43 = (uint64_t)v72;
          (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v72, v42, v35);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v36 + 56))(v43, 0, 1, v35);
          v44 = sub_20E4A45D4();
          swift_release();
          sub_20E39D1F8(v43, &qword_254A18AD0);
          (*(void (**)(char *, uint64_t))(v36 + 8))(v42, v35);
          v5 = v44;
        }
        v25 = (unint64_t)v84;
        v7 = v77;
        v45 = v70;
        v46 = v76;
        v22 = v34;
        v47 = (uint64_t)&v34[*(int *)(v33 + 28)];
        v48 = v82;
        sub_20E3A5E20(v47, v82, &qword_254A18AD8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v48, 1, v45) == 1)
        {
          sub_20E39D1F8(v48, &qword_254A18AD8);
        }
        else
        {
          v49 = v73;
          (*(void (**)(char *, uint64_t, uint64_t))(v46 + 32))(v73, v48, v45);
          v50 = sub_20E4A45C8();
          swift_release();
          (*(void (**)(char *, uint64_t))(v46 + 8))(v49, v45);
          v5 = v50;
        }
        if (qword_254A18110 == -1)
          goto LABEL_20;
        goto LABEL_31;
      }
    }
    goto LABEL_24;
  }
  if (!(v25 >> 62))
  {
    v37 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v37)
      goto LABEL_10;
LABEL_24:
    swift_bridgeObjectRelease();
    goto LABEL_25;
  }
  swift_bridgeObjectRetain();
  if (!sub_20E4A62A8())
    goto LABEL_24;
LABEL_10:
  v74 = v9;
  if ((v25 & 0xC000000000000001) != 0)
  {
    v38 = (id)MEMORY[0x212BBD78C](0, v25);
  }
  else
  {
    if (!*(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_31:
      swift_once();
LABEL_20:
      v51 = sub_20E4A34B8();
      __swift_project_value_buffer(v51, (uint64_t)qword_254A24688);
      sub_20E3B5030((uint64_t)v22, (uint64_t)v7);
      swift_bridgeObjectRetain();
      sub_20E4A3488();
      v52 = sub_20E4A34AC();
      v53 = sub_20E4A6050();
      if ((sub_20E4A60D4() & 1) != 0)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v74 + 16))(v78, v25, v75);
        v54 = swift_slowAlloc();
        LODWORD(v83) = v53;
        v55 = v54;
        v56 = swift_slowAlloc();
        v89 = v56;
        *(_DWORD *)v55 = 136315394;
        v57 = (uint64_t)v7;
        v58 = *v7;
        v59 = v7[1];
        swift_bridgeObjectRetain();
        v88 = sub_20E45F228(v58, v59, &v89);
        sub_20E4A60F8();
        swift_bridgeObjectRelease();
        sub_20E3B5074(v57);
        *(_WORD *)(v55 + 12) = 2080;
        swift_bridgeObjectRetain();
        v88 = sub_20E45F228(v87, v8, &v89);
        sub_20E4A60F8();
        swift_bridgeObjectRelease_n();
        v60 = v78;
        v61 = sub_20E4A347C();
        _os_signpost_emit_with_name_impl(&dword_20E399000, v52, (os_signpost_type_t)v83, v61, "Image.BundleImageLoad", "name=%s,bundleID=%s", (uint8_t *)v55, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x212BBE068](v56, -1, -1);
        MEMORY[0x212BBE068](v55, -1, -1);

        v62 = *(void (**)(char *, uint64_t))(v74 + 8);
        v63 = v75;
        v62(v84, v75);
        v62(v60, v63);
      }
      else
      {
        swift_bridgeObjectRelease_n();

        sub_20E3B5074((uint64_t)v7);
        (*(void (**)(unint64_t, uint64_t))(v74 + 8))(v25, v75);
      }
      return v5;
    }
    v38 = *(id *)(v25 + 32);
  }
  v39 = v38;
  swift_bridgeObjectRelease();
  v40 = objc_msgSend(v39, sel_bundleIdentifier);

  if (v40)
  {
    v70 = v16;
    v75 = v8;
    v27 = sub_20E4A5C3C();
    v8 = v41;

    v9 = v74;
    goto LABEL_3;
  }
LABEL_25:
  if (qword_254A18108 != -1)
    swift_once();
  v64 = sub_20E4A5A8C();
  __swift_project_value_buffer(v64, (uint64_t)qword_254A24670);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0D58);
  sub_20E4A4ACC();
  v65 = swift_allocObject();
  v87 = xmmword_20E4A72D0;
  *(_OWORD *)(v65 + 16) = xmmword_20E4A72D0;
  sub_20E4A4A30();
  sub_20E4A575C();
  swift_bridgeObjectRelease();
  sub_20E4A33D4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A18B08);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = v87;
  *(_QWORD *)(inited + 32) = sub_20E4A5C3C();
  *(_QWORD *)(inited + 40) = v67;
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 48) = 0xD000000000000011;
  *(_QWORD *)(inited + 56) = 0x800000020E4CAAB0;
  sub_20E3B50B8(inited);
  sub_20E3B4E50();
  sub_20E4A32CC();
  sub_20E4A33EC();
  (*(void (**)(uint64_t *, uint64_t))(v86 + 8))(v7, v5);
  swift_willThrow();
  return v5;
}

uint64_t MediaArtwork.BundleImageProtocol.match(_:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18AA0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_20E4A4D3C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v15 - v10;
  if (qword_254A180D0 != -1)
    swift_once();
  v12 = sub_20E4A4D60();
  __swift_project_value_buffer(v12, (uint64_t)qword_254A18A80);
  sub_20E4A4D54();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_20E39D1F8((uint64_t)v4, &qword_254A18AA0);
    v13 = type metadata accessor for MediaArtwork.BundleImageProtocol.MatchedResource();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a1, 1, 1, v13);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v4, v5);
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v11, v5);
    sub_20E3B2AB8((uint64_t)v8, a1);
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  }
}

uint64_t type metadata accessor for MediaArtwork.BundleImageProtocol.MatchedResource()
{
  uint64_t result;

  result = qword_254A18AE0;
  if (!qword_254A18AE0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t MediaArtwork.BundleImageProtocol.fetch(contentsOf:)(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18AA8);
  sub_20E3B3338((char *)(a1 + *(int *)(v2 + 28)));
  return sub_20E4A49E8();
}

uint64_t sub_20E3B3FCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a2;
  return swift_task_switch();
}

uint64_t sub_20E3B3FE4()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  swift_willThrow();
  v2 = v1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20E3B4028()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_20E3B404C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_20E3B50B0;
  v3[2] = v2;
  return swift_task_switch();
}

uint64_t sub_20E3B40AC()
{
  return MEMORY[0x24BDF40E8];
}

unint64_t sub_20E3B40BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254A18AC0;
  if (!qword_254A18AC0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A18AC8);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BE5C620], v1);
    atomic_store(result, (unint64_t *)&qword_254A18AC0);
  }
  return result;
}

uint64_t sub_20E3B4108()
{
  return MEMORY[0x24BE5C380];
}

uint64_t sub_20E3B4114@<X0>(uint64_t a1@<X8>)
{
  return MediaArtwork.BundleImageProtocol.match(_:)(a1);
}

uint64_t sub_20E3B4128(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18AA8);
  sub_20E3B3338((char *)(a1 + *(int *)(v2 + 28)));
  return sub_20E4A49E8();
}

ValueMetadata *type metadata accessor for MediaArtwork.BundleImageProtocol()
{
  return &type metadata for MediaArtwork.BundleImageProtocol;
}

ValueMetadata *type metadata accessor for MediaArtwork.BundleImageProtocol.Configuration()
{
  return &type metadata for MediaArtwork.BundleImageProtocol.Configuration;
}

uint64_t *_s19BundleImageProtocolV15MatchedResourceVwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = *(int *)(a3 + 24);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_20E4A45F8();
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18AD0);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    v17 = *(int *)(a3 + 28);
    v18 = (char *)v4 + v17;
    v19 = (char *)a2 + v17;
    v20 = sub_20E4A45BC();
    v21 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18AD8);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
  }
  return v4;
}

uint64_t _s19BundleImageProtocolV15MatchedResourceVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_20E4A45F8();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v7 = a1 + *(int *)(a2 + 28);
  v8 = sub_20E4A45BC();
  v9 = *(_QWORD *)(v8 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  return result;
}

_QWORD *_s19BundleImageProtocolV15MatchedResourceVwcp(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_20E4A45F8();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18AD0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v15 = *(int *)(a3 + 28);
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = sub_20E4A45BC();
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18AD8);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  return a1;
}

_QWORD *_s19BundleImageProtocolV15MatchedResourceVwca(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t v23;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_20E4A45F8();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18AD0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  v15 = *(int *)(a3 + 28);
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = sub_20E4A45BC();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  v21 = v20(v16, 1, v18);
  v22 = v20(v17, 1, v18);
  if (!v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 24))(v16, v17, v18);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
    goto LABEL_12;
  }
  if (v22)
  {
LABEL_12:
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18AD8);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  return a1;
}

_OWORD *_s19BundleImageProtocolV15MatchedResourceVwtk(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_20E4A45F8();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18AD0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v13 = *(int *)(a3 + 28);
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = sub_20E4A45BC();
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18AD8);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  return a1;
}

_QWORD *_s19BundleImageProtocolV15MatchedResourceVwta(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(char *, uint64_t, uint64_t);
  int v23;
  int v24;
  uint64_t v25;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_20E4A45F8();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18AD0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
LABEL_7:
  v17 = *(int *)(a3 + 28);
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = sub_20E4A45BC();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48);
  v23 = v22(v18, 1, v20);
  v24 = v22(v19, 1, v20);
  if (!v23)
  {
    if (!v24)
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 40))(v18, v19, v20);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v21 + 8))(v18, v20);
    goto LABEL_12;
  }
  if (v24)
  {
LABEL_12:
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18AD8);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v18, v19, v20);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  return a1;
}

uint64_t _s19BundleImageProtocolV15MatchedResourceVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_20E3B4B4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18AD0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 24);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18AD8);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 28);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t _s19BundleImageProtocolV15MatchedResourceVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_20E3B4C00(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18AD0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 24);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18AD8);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 28);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_20E3B4CA4()
{
  unint64_t v0;
  unint64_t v1;

  sub_20E3B4D5C(319, &qword_254A18AF0, (void (*)(uint64_t))MEMORY[0x24BDF4070]);
  if (v0 <= 0x3F)
  {
    sub_20E3B4D5C(319, &qword_254A18AF8, (void (*)(uint64_t))MEMORY[0x24BDF4010]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_20E3B4D5C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_20E4A60E0();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_20E3B4DA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_20E3B4E08;
  v3[2] = v2;
  return swift_task_switch();
}

uint64_t sub_20E3B4E08()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

unint64_t sub_20E3B4E50()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254A18B10;
  if (!qword_254A18B10)
  {
    v1 = sub_20E4A3404();
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDCF608], v1);
    atomic_store(result, (unint64_t *)&qword_254A18B10);
  }
  return result;
}

uint64_t sub_20E3B4E98(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  uint64_t v18;

  if (a1 >> 62)
    goto LABEL_21;
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; v6 = sub_20E4A62A8())
  {
    v7 = 4;
    while (1)
    {
      v8 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x212BBD78C](v7 - 4, a1) : *(id *)(a1 + 8 * v7);
      v9 = v8;
      v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1))
        break;
      v11 = objc_msgSend(v8, sel_bundleIdentifier);
      if (v11)
      {
        v12 = v11;
        v13 = sub_20E4A5C3C();
        v15 = v14;

        if (v13 == a2 && v15 == a3)
        {
          swift_bridgeObjectRelease();

LABEL_19:
          v18 = 1;
          goto LABEL_23;
        }
        v17 = sub_20E4A635C();

        swift_bridgeObjectRelease();
        if ((v17 & 1) != 0)
          goto LABEL_19;
      }
      else
      {

      }
      ++v7;
      if (v10 == v6)
      {
        v18 = 0;
        goto LABEL_23;
      }
    }
    __break(1u);
LABEL_21:
    swift_bridgeObjectRetain();
  }
  v18 = 0;
LABEL_23:
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t sub_20E3B5030(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MediaArtwork.BundleImageProtocol.MatchedResource();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20E3B5074(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MediaArtwork.BundleImageProtocol.MatchedResource();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_20E3B50B8(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A18B38);
  v2 = sub_20E4A62CC();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_20E3A5E20(v6, (uint64_t)&v15, &qword_254A18B40);
    v7 = v15;
    v8 = v16;
    result = sub_20E3BB33C(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_20E3B8B34(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_20E3B51EC(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t *v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A18B68);
  v2 = (_QWORD *)sub_20E4A62CC();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  v4 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_20E3A5E20(v4, (uint64_t)&v16, &qword_254A18B70);
    v5 = v16;
    v6 = v17;
    result = sub_20E3BB33C(v16, v17);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = (uint64_t *)(v2[6] + 16 * result);
    *v9 = v5;
    v9[1] = v6;
    v10 = v2[7] + 40 * result;
    v11 = v18;
    v12 = v19;
    *(_QWORD *)(v10 + 32) = v20;
    *(_OWORD *)v10 = v11;
    *(_OWORD *)(v10 + 16) = v12;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v2[2] = v15;
    v4 += 56;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_20E3B5334(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t result;
  char v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  _OWORD *v10;
  __int128 v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  _OWORD v15[2];
  uint64_t v16;
  __int128 v17;
  __int128 v18;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A18B48);
  v2 = (_QWORD *)sub_20E4A62CC();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  v4 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_20E3A5E20(v4, (uint64_t)v15, &qword_254A18B50);
    result = sub_20E3BCCB0((uint64_t)v15);
    if ((v6 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v7 = v2[6] + 40 * result;
    v8 = v15[0];
    v9 = v15[1];
    *(_QWORD *)(v7 + 32) = v16;
    *(_OWORD *)v7 = v8;
    *(_OWORD *)(v7 + 16) = v9;
    v10 = (_OWORD *)(v2[7] + 32 * result);
    v11 = v18;
    *v10 = v17;
    v10[1] = v11;
    v12 = v2[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v2[2] = v14;
    v4 += 72;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_20E3B5464(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD v22[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18BC0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A18BC8);
  v6 = sub_20E4A62CC();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = &v5[*(int *)(v2 + 48)];
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_20E3A5E20(v12, (uint64_t)v5, &qword_254A18BC0);
    result = sub_20E3BCCAC((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_20E4A4E68();
    (*(void (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    result = (unint64_t)sub_20E3B8B34(v9, (_OWORD *)(v7[7] + 32 * v16));
    v19 = v7[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_11;
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_20E3B5600(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t *v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  __int128 v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A18BB8);
  v2 = (_QWORD *)sub_20E4A62CC();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (_OWORD *)(a1 + 48);
  while (1)
  {
    v5 = *((_QWORD *)v4 - 2);
    v6 = *((_QWORD *)v4 - 1);
    v13 = *v4;
    swift_bridgeObjectRetain();
    swift_retain();
    result = sub_20E3BCD58(v5, v6);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = (uint64_t *)(v2[6] + 16 * result);
    *v9 = v5;
    v9[1] = v6;
    *(_OWORD *)(v2[7] + 16 * result) = v13;
    v10 = v2[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_20E3B5728(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t result;
  char v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  _QWORD v25[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18B28);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (_QWORD *)((char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A18B30);
  v6 = sub_20E4A62CC();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = (char *)v5 + *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_20E3A5E20(v12, (uint64_t)v5, &qword_254A18B28);
    v14 = *v5;
    v15 = v5[1];
    result = sub_20E3BB33C(*v5, v15);
    if ((v17 & 1) != 0)
      break;
    v18 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v19 = (uint64_t *)(v7[6] + 16 * result);
    *v19 = v14;
    v19[1] = v15;
    v20 = v7[7];
    v21 = sub_20E4A3344();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v20 + *(_QWORD *)(*(_QWORD *)(v21 - 8) + 72) * v18, v9, v21);
    v22 = v7[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
      goto LABEL_11;
    v7[2] = v24;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_20E3B58C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;
  unint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  unint64_t v14;
  _QWORD *v15;
  uint64_t result;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;

  v19 = a4;
  v20 = a1;
  v21 = a5;
  v7 = sub_20E4A5540();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A18B18);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20E4A8040;
  *(_QWORD *)(inited + 32) = 7955819;
  *(_QWORD *)(inited + 40) = 0xE300000000000000;
  v23 = a2;
  swift_bridgeObjectRetain();
  sub_20E4A6188();
  strcpy((char *)(inited + 88), "replacements");
  *(_BYTE *)(inited + 101) = 0;
  *(_WORD *)(inited + 102) = -5120;
  v22 = a3;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A18B78);
  sub_20E3B8428();
  sub_20E4A6188();
  strcpy((char *)(inited + 144), "lookupStrategy");
  *(_BYTE *)(inited + 159) = -18;
  v11 = v19;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v19, v7);
  sub_20E39F334(&qword_254A18BB0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5D978], MEMORY[0x24BE5D988]);
  sub_20E4A6188();
  v12 = sub_20E3B51EC(inited);
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 32);
  v13((char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v11, v7);
  v14 = (*(unsigned __int8 *)(v8 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = v20;
  v15[3] = a2;
  v15[4] = a3;
  result = ((uint64_t (*)(char *, char *, uint64_t))v13)((char *)v15 + v14, (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  v17 = v21;
  *v21 = sub_20E3B8AA8;
  v17[1] = v15;
  v17[2] = v12;
  return result;
}

uint64_t sub_20E3B5B1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t inited;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  char *v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  unint64_t v23;
  unint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t result;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v34 = a1;
  v35 = a5;
  v30 = a4;
  v40 = a6;
  v41 = a3;
  v8 = sub_20E4A5474();
  v31 = *(_QWORD *)(v8 - 8);
  v9 = *(_QWORD *)(v31 + 64);
  v38 = v8;
  v39 = v9;
  MEMORY[0x24BDAC7A8](v8);
  v36 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_20E4A5540();
  v12 = *(_QWORD *)(v11 - 8);
  v37 = *(_QWORD *)(v12 + 64);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A18B18);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20E4A8050;
  *(_QWORD *)(inited + 32) = 7955819;
  *(_QWORD *)(inited + 40) = 0xE300000000000000;
  v42 = a1;
  v43 = a2;
  v33 = a2;
  swift_bridgeObjectRetain();
  sub_20E4A6188();
  strcpy((char *)(inited + 88), "replacements");
  *(_BYTE *)(inited + 101) = 0;
  *(_WORD *)(inited + 102) = -5120;
  v42 = v41;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A18B78);
  sub_20E3B8428();
  sub_20E4A6188();
  strcpy((char *)(inited + 144), "defaultValue");
  *(_BYTE *)(inited + 157) = 0;
  *(_WORD *)(inited + 158) = -5120;
  v42 = sub_20E4A5468();
  v43 = v16;
  sub_20E4A6188();
  strcpy((char *)(inited + 200), "lookupStrategy");
  *(_BYTE *)(inited + 215) = -18;
  v17 = v35;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v35, v11);
  sub_20E39F334(&qword_254A18BB0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5D978], MEMORY[0x24BE5D988]);
  sub_20E4A6188();
  v32 = sub_20E3B51EC(inited);
  v18 = v31;
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v31 + 32);
  v20 = v36;
  v21 = v38;
  v19(v36, v30, v38);
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 32);
  v22(v14, v17, v11);
  v23 = (*(unsigned __int8 *)(v18 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v24 = (v39 + *(unsigned __int8 *)(v12 + 80) + v23) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v25 = (char *)swift_allocObject();
  v26 = v33;
  *((_QWORD *)v25 + 2) = v34;
  *((_QWORD *)v25 + 3) = v26;
  *((_QWORD *)v25 + 4) = v41;
  v19(&v25[v23], (uint64_t)v20, v21);
  result = ((uint64_t (*)(char *, char *, uint64_t))v22)(&v25[v24], v14, v11);
  v28 = v40;
  *v40 = sub_20E3B8978;
  v28[1] = v25;
  v28[2] = v32;
  return result;
}

uint64_t sub_20E3B5E34@<X0>(void *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t inited;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  char *v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  int v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;

  v38 = a5;
  v37 = a4;
  HIDWORD(v34) = a3;
  v35 = a2;
  v44 = a9;
  v43 = a11;
  v42 = a10;
  v16 = sub_20E4A50B4();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_QWORD *)(v17 + 64);
  v40 = v16;
  v41 = v18;
  MEMORY[0x24BDAC7A8](v16);
  v39 = (char *)&v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A18B18);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20E4A8050;
  *(_QWORD *)(inited + 32) = a7;
  *(_QWORD *)(inited + 40) = a8;
  v45 = (uint64_t)a1;
  sub_20E3B873C();
  sub_20E39F334(&qword_254A18BA0, (uint64_t (*)(uint64_t))sub_20E3B873C, MEMORY[0x24BEE5BD8]);
  v36 = a1;
  sub_20E4A6188();
  *(_QWORD *)(inited + 88) = 0xD000000000000015;
  *(_QWORD *)(inited + 96) = 0x800000020E4CABA0;
  v45 = a2;
  HIDWORD(v34) = BYTE4(v34) & 1;
  LOBYTE(v46) = BYTE4(v34);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0D38);
  sub_20E3B1B30(&qword_254A18BA8, &qword_253ED0D38, MEMORY[0x24BEE1778], MEMORY[0x24BEE4AB0]);
  sub_20E4A6188();
  *(_QWORD *)(inited + 144) = 0xD000000000000015;
  *(_QWORD *)(inited + 152) = 0x800000020E4CABC0;
  v21 = v37;
  v45 = v37;
  v22 = v38 & 1;
  LOBYTE(v46) = v38 & 1;
  sub_20E4A6188();
  *(_QWORD *)(inited + 200) = 0x747865746E6F63;
  *(_QWORD *)(inited + 208) = 0xE700000000000000;
  v23 = a6;
  v45 = sub_20E4A50A8();
  v46 = v24;
  sub_20E4A6188();
  v25 = sub_20E3B51EC(inited);
  v26 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 32);
  v28 = v39;
  v27 = v40;
  v26(v39, v23, v40);
  v29 = (*(unsigned __int8 *)(v17 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v30 = swift_allocObject();
  v31 = v35;
  *(_QWORD *)(v30 + 16) = v36;
  *(_QWORD *)(v30 + 24) = v31;
  *(_BYTE *)(v30 + 32) = BYTE4(v34);
  *(_QWORD *)(v30 + 40) = v21;
  *(_BYTE *)(v30 + 48) = v22;
  result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(v30 + v29, v28, v27);
  v33 = v44;
  *v44 = v43;
  v33[1] = v30;
  v33[2] = v25;
  return result;
}

uint64_t sub_20E3B60E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t inited;
  unint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;

  v22 = a1;
  v23 = a5;
  v21 = a2;
  v24 = a6;
  v8 = sub_20E4A5540();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A18B18);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20E4A8050;
  *(_QWORD *)(inited + 32) = 0x746E756F63;
  *(_QWORD *)(inited + 40) = 0xE500000000000000;
  sub_20E4A6188();
  *(_QWORD *)(inited + 88) = 7955819;
  *(_QWORD *)(inited + 96) = 0xE300000000000000;
  v26 = a3;
  swift_bridgeObjectRetain();
  sub_20E4A6188();
  strcpy((char *)(inited + 144), "replacements");
  *(_BYTE *)(inited + 157) = 0;
  *(_WORD *)(inited + 158) = -5120;
  v20 = a4;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A18B78);
  sub_20E3B8428();
  sub_20E4A6188();
  strcpy((char *)(inited + 200), "lookupStrategy");
  *(_BYTE *)(inited + 215) = -18;
  v25 = sub_20E4A5534();
  sub_20E4A6188();
  v12 = sub_20E3B51EC(inited);
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 32);
  v13((char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v23, v8);
  v14 = (*(unsigned __int8 *)(v9 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v15 = (_QWORD *)swift_allocObject();
  v16 = v21;
  v15[2] = v22;
  v15[3] = v16;
  v17 = v20;
  v15[4] = a3;
  v15[5] = v17;
  result = ((uint64_t (*)(char *, char *, uint64_t))v13)((char *)v15 + v14, (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  v19 = v24;
  *v24 = sub_20E3B86AC;
  v19[1] = v15;
  v19[2] = v12;
  return result;
}

uint64_t sub_20E3B6334@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t inited;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;

  v41 = a1;
  v42 = a6;
  v40 = a2;
  v48 = a7;
  v12 = sub_20E4A5540();
  v45 = *(_QWORD *)(v12 - 8);
  v46 = v12;
  v47 = *(_QWORD *)(v45 + 64);
  MEMORY[0x24BDAC7A8](v12);
  v44 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_20E4A5474();
  v14 = *(_QWORD *)(v36 - 8);
  v43 = *(_QWORD *)(v14 + 64);
  MEMORY[0x24BDAC7A8](v36);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A18B18);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20E4A8060;
  *(_QWORD *)(inited + 32) = 0x746E756F63;
  *(_QWORD *)(inited + 40) = 0xE500000000000000;
  v49 = a1;
  sub_20E4A6188();
  *(_QWORD *)(inited + 88) = 7955819;
  *(_QWORD *)(inited + 96) = 0xE300000000000000;
  v49 = a2;
  v50 = a3;
  v39 = a3;
  swift_bridgeObjectRetain();
  sub_20E4A6188();
  strcpy((char *)(inited + 144), "replacements");
  *(_BYTE *)(inited + 157) = 0;
  *(_WORD *)(inited + 158) = -5120;
  v38 = a4;
  v49 = a4;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A18B78);
  sub_20E3B8428();
  sub_20E4A6188();
  strcpy((char *)(inited + 200), "defaultValue");
  *(_BYTE *)(inited + 213) = 0;
  *(_WORD *)(inited + 214) = -5120;
  v49 = sub_20E4A5468();
  v50 = v18;
  sub_20E4A6188();
  strcpy((char *)(inited + 256), "lookupStrategy");
  *(_BYTE *)(inited + 271) = -18;
  v19 = v42;
  v49 = sub_20E4A5534();
  sub_20E4A6188();
  v37 = sub_20E3B51EC(inited);
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 32);
  v21 = v16;
  v22 = v36;
  v20(v16, a5, v36);
  v24 = v44;
  v23 = v45;
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v45 + 32);
  v26 = v19;
  v27 = v46;
  v25(v44, v26, v46);
  v28 = (*(unsigned __int8 *)(v14 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v29 = (v43 + *(unsigned __int8 *)(v23 + 80) + v28) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  v30 = (char *)swift_allocObject();
  v31 = v40;
  *((_QWORD *)v30 + 2) = v41;
  *((_QWORD *)v30 + 3) = v31;
  v32 = v38;
  *((_QWORD *)v30 + 4) = v39;
  *((_QWORD *)v30 + 5) = v32;
  v20(&v30[v28], (uint64_t)v21, v22);
  result = ((uint64_t (*)(char *, char *, uint64_t))v25)(&v30[v29], v24, v27);
  v34 = v48;
  *v48 = sub_20E3B8570;
  v34[1] = v30;
  v34[2] = v37;
  return result;
}

uint64_t sub_20E3B6680@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  void (*v17)(char *, uint64_t, uint64_t);
  char *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  _QWORD *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;

  v29 = a4;
  v28 = a1;
  v33 = a5;
  v31 = sub_20E4A50B4();
  v8 = *(_QWORD *)(v31 - 8);
  v32 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v31);
  v30 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_20E4A338C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x24BDAC7A8](v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A18B18);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20E4A8040;
  *(_QWORD *)(inited + 32) = 0x74616D726F66;
  *(_QWORD *)(inited + 40) = 0xE600000000000000;
  v34 = a1;
  v27 = a2;
  v35 = a2;
  swift_bridgeObjectRetain();
  sub_20E4A6188();
  *(_QWORD *)(inited + 88) = 1702125924;
  *(_QWORD *)(inited + 96) = 0xE400000000000000;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v10);
  sub_20E39F334(&qword_254A18B60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_20E4A6188();
  *(_QWORD *)(inited + 144) = 0x747865746E6F63;
  *(_QWORD *)(inited + 152) = 0xE700000000000000;
  v14 = v29;
  v34 = sub_20E4A50A8();
  v35 = v15;
  sub_20E4A6188();
  v26 = sub_20E3B51EC(inited);
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 32);
  v16((char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v10);
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 32);
  v18 = v30;
  v19 = v31;
  v17(v30, v14, v31);
  v20 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v21 = (v12 + *(unsigned __int8 *)(v8 + 80) + v20) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v22 = swift_allocObject();
  v23 = v27;
  *(_QWORD *)(v22 + 16) = v28;
  *(_QWORD *)(v22 + 24) = v23;
  v16((char *)(v22 + v20), (uint64_t)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  result = ((uint64_t (*)(unint64_t, char *, uint64_t))v17)(v22 + v21, v18, v19);
  v25 = v33;
  *v33 = sub_20E3B837C;
  v25[1] = v22;
  v25[2] = v26;
  return result;
}

uint64_t sub_20E3B6968@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  unint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;

  v24 = a4;
  v23 = a1;
  v25 = a6;
  v10 = sub_20E4A338C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x24BDAC7A8](v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A18B18);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20E4A8040;
  *(_QWORD *)(inited + 32) = 0x74616D726F66;
  *(_QWORD *)(inited + 40) = 0xE600000000000000;
  v26 = a1;
  v27 = a2;
  swift_bridgeObjectRetain();
  sub_20E4A6188();
  *(_QWORD *)(inited + 88) = 1702125924;
  *(_QWORD *)(inited + 96) = 0xE400000000000000;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v10);
  sub_20E39F334(&qword_254A18B60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_20E4A6188();
  *(_QWORD *)(inited + 144) = 0x65636E65746E6573;
  *(_QWORD *)(inited + 152) = 0xE800000000000000;
  v14 = v24;
  v26 = v24;
  v27 = a5;
  swift_bridgeObjectRetain();
  sub_20E4A6188();
  v15 = sub_20E3B51EC(inited);
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 32);
  v16((char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v10);
  v17 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v23;
  *(_QWORD *)(v18 + 24) = a2;
  result = ((uint64_t (*)(unint64_t, char *, uint64_t))v16)(v18 + v17, (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  v20 = (_QWORD *)(v18 + ((v12 + v17 + 7) & 0xFFFFFFFFFFFFFFF8));
  *v20 = v14;
  v20[1] = a5;
  v21 = v25;
  *v25 = sub_20E3B821C;
  v21[1] = v18;
  v21[2] = v15;
  return result;
}

uint64_t sub_20E3B6BB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  char *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t result;
  _QWORD *v21;
  unint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;

  v27 = a3;
  v25 = sub_20E4A5540();
  v24 = *(_QWORD *)(v25 - 8);
  v26 = *(_QWORD *)(v24 + 64);
  MEMORY[0x24BDAC7A8](v25);
  v23 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_20E4A338C();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  v8 = *(_QWORD *)(v6 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A18B18);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20E4A8070;
  *(_QWORD *)(inited + 32) = 1702125924;
  *(_QWORD *)(inited + 40) = 0xE400000000000000;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  sub_20E39F334(&qword_254A18B60, v7, MEMORY[0x24BDCE930]);
  sub_20E4A6188();
  strcpy((char *)(inited + 88), "lookupStrategy");
  *(_BYTE *)(inited + 103) = -18;
  v11 = a2;
  v28 = sub_20E4A5534();
  sub_20E4A6188();
  v22 = sub_20E3B51EC(inited);
  v12 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 32);
  v12((char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  v13 = v24;
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 32);
  v15 = v23;
  v16 = v25;
  v14(v23, v11, v25);
  v17 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v18 = (v9 + *(unsigned __int8 *)(v13 + 80) + v17) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v19 = swift_allocObject();
  v12((char *)(v19 + v17), (uint64_t)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  result = ((uint64_t (*)(unint64_t, char *, uint64_t))v14)(v19 + v18, v15, v16);
  v21 = v27;
  *v27 = sub_20E3B80F0;
  v21[1] = v19;
  v21[2] = v22;
  return result;
}

uint64_t LocalizerRequest.perform(using:)()
{
  uint64_t (**v0)(void);

  return (*v0)();
}

uint64_t static LocalizerRequest.string(forKey:with:using:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v16;

  v10 = sub_20E4A5540();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, double))(v14 + 16))(v13, a4, v11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_20E3B58C8(a1, a2, a3, (uint64_t)v13, a5);
}

uint64_t static LocalizerRequest.string(forKey:with:defaultValue:using:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v22;

  v12 = sub_20E4A5540();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_20E4A5474();
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v22 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, double))(v20 + 16))(v19, a4, v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a5, v12);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_20E3B5B1C(a1, a2, a3, (uint64_t)v19, (uint64_t)v15, a6);
}

uint64_t static LocalizerRequest.decimal(forNumber:minimumFractionDigits:maximumFractionDigits:in:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  return sub_20E3B7094(a1, a2, a3, a4, a5, a6, 0x6C616D69636564, 0xE700000000000000, a7, (uint64_t)&unk_24C9466C8, (uint64_t)sub_20E3B8800);
}

uint64_t static LocalizerRequest.percentage(forNumber:minimumFractionDigits:maximumFractionDigits:in:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  return sub_20E3B7094(a1, a2, a3, a4, a5, a6, 0x61746E6563726570, 0xEA00000000006567, a7, (uint64_t)&unk_24C9466A0, (uint64_t)sub_20E3B877C);
}

uint64_t sub_20E3B7094@<X0>(void *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11)
{
  int v16;
  int v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  id v23;
  uint64_t v25;
  uint64_t v26;

  v25 = a7;
  v26 = a8;
  v16 = a3 & 1;
  v17 = a5 & 1;
  v18 = sub_20E4A50B4();
  v19 = MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v25 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, double))(v22 + 16))(v21, a6, v19);
  v23 = a1;
  return sub_20E3B5E34(v23, a2, v16, a4, v17, (uint64_t)v21, v25, v26, a9, a10, a11);
}

uint64_t static LocalizerRequest.string(withCount:forKey:with:using:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;

  v12 = sub_20E4A5540();
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, double))(v16 + 16))(v15, a5, v13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_20E3B60E0(a1, a2, a3, a4, (uint64_t)v15, a6);
}

uint64_t static LocalizerRequest.string(withCount:forKey:with:defaultValue:using:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;

  v24 = a2;
  v13 = sub_20E4A5540();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_20E4A5474();
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v23 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, double))(v21 + 16))(v20, a5, v18);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a6, v13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_20E3B6334(a1, v24, a3, a4, (uint64_t)v20, (uint64_t)v16, a7);
}

uint64_t static LocalizerRequest.formattedCount(_:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t inited;
  unint64_t v5;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254A18B18);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20E4A72D0;
  *(_QWORD *)(inited + 32) = 0x746E756F63;
  *(_QWORD *)(inited + 40) = 0xE500000000000000;
  sub_20E4A6188();
  v5 = sub_20E3B51EC(inited);
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  *a2 = sub_20E3B7418;
  a2[1] = result;
  a2[2] = v5;
  return result;
}

uint64_t sub_20E3B7408()
{
  return swift_deallocObject();
}

uint64_t sub_20E3B7418(_QWORD *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  return sub_20E4A5ABC();
}

uint64_t static LocalizerRequest.fileSize(forBytes:)@<X0>(_QWORD *a1@<X8>, double a2@<D0>)
{
  uint64_t inited;
  unint64_t v5;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254A18B18);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20E4A72D0;
  *(_QWORD *)(inited + 32) = 0x7365747962;
  *(_QWORD *)(inited + 40) = 0xE500000000000000;
  sub_20E4A6188();
  v5 = sub_20E3B51EC(inited);
  result = swift_allocObject();
  *(double *)(result + 16) = a2;
  *a1 = sub_20E3B7528;
  a1[1] = result;
  a1[2] = v5;
  return result;
}

uint64_t sub_20E3B7518()
{
  return swift_deallocObject();
}

uint64_t sub_20E3B7528(_QWORD *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  return sub_20E4A5B04();
}

uint64_t static LocalizerRequest.formattedDate(format:date:withContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v20;

  v10 = sub_20E4A50B4();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_20E4A338C();
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, double))(v18 + 16))(v17, a3, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a4, v10);
  swift_bridgeObjectRetain();
  return sub_20E3B6680(a1, a2, (uint64_t)v17, (uint64_t)v13, a5);
}

uint64_t static LocalizerRequest.formattedDate(format:date:inSentence:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;

  v12 = sub_20E4A338C();
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, double))(v16 + 16))(v15, a3, v13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_20E3B6968(a1, a2, (uint64_t)v15, a4, a5, a6);
}

uint64_t static LocalizerRequest.relativeDate(_:using:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v16;

  v6 = sub_20E4A5540();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_20E4A338C();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, double))(v14 + 16))(v13, a1, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  return sub_20E3B6BB4((uint64_t)v13, (uint64_t)v9, a3);
}

unint64_t static LocalizerRequest.verbatim(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (**a3)()@<X8>)
{
  uint64_t v6;
  uint64_t inited;
  unint64_t result;

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A18B18);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20E4A72D0;
  *(_QWORD *)(inited + 32) = 0x746E65746E6F63;
  *(_QWORD *)(inited + 40) = 0xE700000000000000;
  swift_bridgeObjectRetain_n();
  sub_20E4A6188();
  result = sub_20E3B51EC(inited);
  *a3 = sub_20E3B791C;
  a3[1] = (uint64_t (*)())v6;
  a3[2] = (uint64_t (*)())result;
  return result;
}

uint64_t sub_20E3B78F8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_20E3B791C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static LocalizerRequest.custom(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  unint64_t v6;

  v6 = sub_20E3B51EC(MEMORY[0x24BEE4AF8]);
  *a3 = a1;
  a3[1] = a2;
  a3[2] = v6;
  return swift_retain();
}

unint64_t static LocalizerRequest.custom(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  unint64_t result;

  swift_retain();
  result = sub_20E3B51EC(MEMORY[0x24BEE4AF8]);
  *a3 = a1;
  a3[1] = a2;
  a3[2] = result;
  return result;
}

uint64_t static LocalizerRequest.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 16);
  if (*(_QWORD *)(v2 + 16))
    return sub_20E3B79F0(v2, *(_QWORD *)(a2 + 16));
  else
    return 0;
}

uint64_t sub_20E3B79F0(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  char v17;
  char v18;
  char v19;
  uint64_t v20;
  int64_t v21;
  _BYTE v22[40];
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v20 = result + 64;
  v5 = 1 << *(_BYTE *)(result + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(result + 64);
  v21 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v8 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v9 = v8 | (v4 << 6);
LABEL_8:
      v10 = *(_QWORD *)(v3 + 56);
      v11 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v9);
      v12 = v11[1];
      *(_QWORD *)&v23 = *v11;
      *((_QWORD *)&v23 + 1) = v12;
      sub_20E3B7F84(v10 + 40 * v9, (uint64_t)&v24);
      swift_bridgeObjectRetain();
      goto LABEL_30;
    }
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v13 < v21)
    {
      v14 = *(_QWORD *)(v20 + 8 * v13);
      if (v14)
        goto LABEL_12;
      v15 = v4 + 2;
      ++v4;
      if (v13 + 1 < v21)
      {
        v14 = *(_QWORD *)(v20 + 8 * v15);
        if (v14)
          goto LABEL_15;
        v4 = v13 + 1;
        if (v13 + 2 < v21)
        {
          v14 = *(_QWORD *)(v20 + 8 * (v13 + 2));
          if (v14)
          {
            v13 += 2;
            goto LABEL_12;
          }
          v4 = v13 + 2;
          if (v13 + 3 < v21)
          {
            v14 = *(_QWORD *)(v20 + 8 * (v13 + 3));
            if (v14)
            {
              v13 += 3;
              goto LABEL_12;
            }
            v15 = v13 + 4;
            v4 = v13 + 3;
            if (v13 + 4 < v21)
              break;
          }
        }
      }
    }
LABEL_29:
    v7 = 0;
    v26 = 0;
    v24 = 0u;
    v25 = 0u;
    v23 = 0u;
LABEL_30:
    sub_20E3B7FC0((uint64_t)&v23, (uint64_t)&v27);
    if (!v28)
      return 1;
    v23 = v29;
    v24 = v30;
    *(_QWORD *)&v25 = v31;
    v16 = sub_20E3BB33C(v27, v28);
    v18 = v17;
    swift_bridgeObjectRelease();
    if ((v18 & 1) == 0)
    {
      sub_20E3B8008((uint64_t)&v23);
      return 0;
    }
    sub_20E3B7F84(*(_QWORD *)(a2 + 56) + 40 * v16, (uint64_t)v22);
    v19 = MEMORY[0x212BBD72C](v22, &v23);
    sub_20E3B8008((uint64_t)v22);
    result = sub_20E3B8008((uint64_t)&v23);
    if ((v19 & 1) == 0)
      return 0;
  }
  v14 = *(_QWORD *)(v20 + 8 * v15);
  if (v14)
  {
LABEL_15:
    v13 = v15;
LABEL_12:
    v7 = (v14 - 1) & v14;
    v9 = __clz(__rbit64(v14)) + (v13 << 6);
    v4 = v13;
    goto LABEL_8;
  }
  while (1)
  {
    v13 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v13 >= v21)
    {
      v4 = v21 - 1;
      goto LABEL_29;
    }
    v14 = *(_QWORD *)(v20 + 8 * v13);
    ++v15;
    if (v14)
      goto LABEL_12;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_20E3B7C94(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 16);
  if (*(_QWORD *)(v2 + 16))
    return sub_20E3B79F0(v2, *(_QWORD *)(a2 + 16));
  else
    return 0;
}

uint64_t destroy for LocalizerRequest()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

_QWORD *_s18_JetEngine_SwiftUI16LocalizerRequestVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for LocalizerRequest(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for LocalizerRequest(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LocalizerRequest(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LocalizerRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for LocalizerRequest()
{
  return &type metadata for LocalizerRequest;
}

unint64_t sub_20E3B7E64(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  unint64_t result;
  __int128 v7;
  char v8;
  _OWORD *v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  _OWORD *v13;
  id v14;
  id v15;
  char v16;
  id v17;
  id v18;
  __int128 v19;
  __int128 v20;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return MEMORY[0x24BEE4B00];
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A18B20);
  v4 = (_QWORD *)sub_20E4A62CC();
  v5 = *(_QWORD *)(a1 + 32);
  v19 = *(_OWORD *)(a1 + 40);
  result = sub_20E3BCDCC(v5);
  v7 = v19;
  if ((v8 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    v17 = (id)v7;
    v18 = v1;
    return (unint64_t)v4;
  }
  v9 = (_OWORD *)(a1 + 64);
  while (1)
  {
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_QWORD *)(v4[6] + 8 * result) = v5;
    *(_OWORD *)(v4[7] + 16 * result) = v7;
    v10 = v4[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      break;
    v4[2] = v12;
    v1 = (void *)*((_QWORD *)&v7 + 1);
    if (!--v2)
      goto LABEL_8;
    v13 = (_OWORD *)((char *)v9 + 24);
    v5 = *((_QWORD *)v9 - 1);
    v20 = *v9;
    v14 = (id)v7;
    v15 = v1;
    result = sub_20E3BCDCC(v5);
    v9 = v13;
    v7 = v20;
    if ((v16 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_20E3B7F84(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t sub_20E3B7FC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18B58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20E3B8008(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 8))();
  return a1;
}

uint64_t sub_20E3B803C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = sub_20E4A338C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = sub_20E4A5540();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject();
}

uint64_t sub_20E3B80F0(_QWORD *a1)
{
  sub_20E4A338C();
  sub_20E4A5540();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  return sub_20E4A5A98();
}

uint64_t sub_20E3B8188()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_20E4A338C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_20E3B821C(_QWORD *a1)
{
  sub_20E4A338C();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  return sub_20E4A5AA4();
}

uint64_t sub_20E3B82C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = sub_20E4A338C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = sub_20E4A50B4();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject();
}

uint64_t sub_20E3B837C(_QWORD *a1)
{
  sub_20E4A338C();
  sub_20E4A50B4();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  return sub_20E4A5AB0();
}

unint64_t sub_20E3B8428()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_254A18B80;
  if (!qword_254A18B80)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A18B78);
    v2 = sub_20E3B1B30(&qword_254A18B88, &qword_254A18B90, MEMORY[0x24BEE0D10], MEMORY[0x24BEE04C8]);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BEE4AB0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_254A18B80);
  }
  return result;
}

uint64_t sub_20E3B84AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = sub_20E4A5474();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = sub_20E4A5540();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject();
}

uint64_t sub_20E3B8570(_QWORD *a1)
{
  sub_20E4A5474();
  sub_20E4A5540();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  return sub_20E4A5AEC();
}

uint64_t sub_20E3B8630()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_20E4A5540();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_20E3B86AC(_QWORD *a1)
{
  sub_20E4A5540();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  return sub_20E4A5AF8();
}

unint64_t sub_20E3B873C()
{
  unint64_t result;

  result = qword_254A18B98;
  if (!qword_254A18B98)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_254A18B98);
  }
  return result;
}

uint64_t sub_20E3B877C(_QWORD *a1)
{
  return sub_20E3B880C(a1, MEMORY[0x24BE5E408]);
}

uint64_t objectdestroy_23Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_20E4A50B4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_20E3B8800(_QWORD *a1)
{
  return sub_20E3B880C(a1, MEMORY[0x24BE5E458]);
}

uint64_t sub_20E3B880C(_QWORD *a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_20E4A50B4() - 8) + 80);
  v6 = *(_QWORD *)(v2 + 16);
  v7 = *(_QWORD *)(v2 + 24);
  v8 = *(unsigned __int8 *)(v2 + 32);
  v9 = *(_QWORD *)(v2 + 40);
  v10 = *(unsigned __int8 *)(v2 + 48);
  v11 = v2 + ((v5 + 49) & ~v5);
  v12 = a1[3];
  v13 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v12);
  return a2(v6, v7, v8, v9, v10, v11, v12, v13);
}

uint64_t sub_20E3B88B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = sub_20E4A5474();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = sub_20E4A5540();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject();
}

uint64_t sub_20E3B8978(_QWORD *a1)
{
  sub_20E4A5474();
  sub_20E4A5540();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  return sub_20E4A5AD4();
}

uint64_t sub_20E3B8A2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_20E4A5540();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_20E3B8AA8(_QWORD *a1)
{
  sub_20E4A5540();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  return sub_20E4A5AE0();
}

_OWORD *sub_20E3B8B34(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t ClickLocationConfiguration.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = sub_20E4A5114();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

uint64_t ClickLocationConfiguration.init(pageMetrics:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v35[3];
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;

  v40 = a2;
  v3 = sub_20E4A33B0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CC0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CA0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_20E4A4BA4();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for ClickLocationConfiguration(0);
  v38 = *(_QWORD *)(v17 - 8);
  v39 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = a1;
  sub_20E3A5E20(a1, (uint64_t)v12, &qword_253ED0CA0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_20E39D1F8((uint64_t)v12, &qword_253ED0CA0);
LABEL_8:
    v27 = v39;
    v26 = v40;
    v28 = v37;
LABEL_16:
    v33 = v38;
    sub_20E4A5228();
    sub_20E39D1F8(v28, &qword_253ED0CA0);
    v32 = 1;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 56))(v26, v32, 1, v27);
  }
  v36 = v9;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
  v20 = sub_20E4A4B50();
  if (!v20)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    goto LABEL_8;
  }
  v21 = v20;
  if (*(_QWORD *)(v20 + 16))
  {
    v22 = sub_20E3BB33C(0x644965676170, 0xE600000000000000);
    v23 = v3;
    v24 = v4;
    if ((v25 & 1) != 0)
    {
      sub_20E3BB3A0(*(_QWORD *)(v21 + 56) + 32 * v22, (uint64_t)&v42);
    }
    else
    {
      v42 = 0u;
      v43 = 0u;
    }
  }
  else
  {
    v42 = 0u;
    v43 = 0u;
    v23 = v3;
    v24 = v4;
  }
  v29 = (uint64_t)v19;
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v43 + 1))
  {
    sub_20E39D1F8((uint64_t)&v42, &qword_253ED2A38);
    goto LABEL_15;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_15:
    v27 = v39;
    v26 = v40;
    v28 = v37;
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    goto LABEL_16;
  }
  v35[2] = v41;
  v35[1] = sub_20E4A4B98();
  sub_20E4A33A4();
  sub_20E4A3398();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v6, v23);
  v30 = (uint64_t)v36;
  sub_20E4A5108();
  sub_20E39D1F8(v37, &qword_253ED0CA0);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  v31 = sub_20E4A5114();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v30, 0, 1, v31);
  sub_20E3BB440(v30, (uint64_t)v19, &qword_253ED0CC0);
  v26 = v40;
  sub_20E3A57AC(v29, v40, type metadata accessor for ClickLocationConfiguration);
  v32 = 0;
  v33 = v38;
  v27 = v39;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 56))(v26, v32, 1, v27);
}

uint64_t type metadata accessor for ClickLocationConfiguration(uint64_t a1)
{
  return sub_20E3A4CD0(a1, (uint64_t *)&unk_253ED07F8);
}

unint64_t sub_20E3B8F70()
{
  return 0xD00000000000006ELL;
}

uint64_t View.pageMetrics(_:pipeline:tracker:clickLocationConfiguration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  void (*v57)(char *, uint64_t);
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD v77[2];
  _QWORD v78[3];

  v69 = a1;
  v72 = a7;
  v74 = a4;
  v75 = a3;
  v70 = a2;
  v76 = a8;
  v71 = sub_20E4A4F70();
  v10 = *(_QWORD *)(v71 - 8);
  MEMORY[0x24BDAC7A8](v71);
  v12 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CA0);
  MEMORY[0x24BDAC7A8](v13);
  v68 = (uint64_t)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (int *)type metadata accessor for PageMetricsViewModifier(0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v73 = (uint64_t)&v59 - v19;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0808);
  MEMORY[0x24BDAC7A8](v20);
  v61 = (uint64_t)&v59 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v59 - v23;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CC0);
  MEMORY[0x24BDAC7A8](v25);
  v27 = (char *)&v59 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ClickLocationViewModifier();
  v28 = sub_20E4A39D4();
  v63 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v30 = (char *)&v59 - v29;
  v65 = v31;
  v62 = sub_20E4A39D4();
  v67 = *(_QWORD *)(v62 - 8);
  MEMORY[0x24BDAC7A8](v62);
  v64 = (char *)&v59 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v33);
  v66 = (uint64_t *)((char *)&v59 - v34);
  v35 = a5;
  sub_20E3A5E20(a5, (uint64_t)v24, &qword_253ED0808);
  v36 = type metadata accessor for ClickLocationConfiguration(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 48))(v24, 1, v36) == 1)
  {
    sub_20E39D1F8((uint64_t)v24, &qword_253ED0808);
    v37 = sub_20E4A5114();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v27, 1, 1, v37);
  }
  else
  {
    sub_20E3A5E20((uint64_t)v24, (uint64_t)v27, &qword_253ED0CC0);
    sub_20E3BB484((uint64_t)v24, type metadata accessor for ClickLocationConfiguration);
  }
  v60 = v30;
  v38 = a6;
  v39 = v72;
  View.impressionableClickLocation(data:)((uint64_t)v27, v38, v72);
  sub_20E39D1F8((uint64_t)v27, &qword_253ED0CC0);
  v40 = v68;
  sub_20E3A5E20(v69, v68, &qword_253ED0CA0);
  v41 = v71;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v70, v71);
  v42 = v61;
  sub_20E3A5E20(v35, v61, &qword_253ED0808);
  v43 = &v17[v15[8]];
  *(_QWORD *)v43 = swift_getKeyPath();
  v43[8] = 0;
  sub_20E3BB440(v40, (uint64_t)v17, &qword_253ED0CA0);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v17[v15[5]], v12, v41);
  v44 = &v17[v15[6]];
  v45 = v74;
  *(_QWORD *)v44 = v75;
  *((_QWORD *)v44 + 1) = v45;
  sub_20E3BB440(v42, (uint64_t)&v17[v15[7]], &qword_253ED0808);
  v46 = v73;
  sub_20E3A57AC((uint64_t)v17, v73, type metadata accessor for PageMetricsViewModifier);
  v47 = sub_20E39F334(&qword_253ED07E8, (uint64_t (*)(uint64_t))type metadata accessor for ClickLocationViewModifier, (uint64_t)&unk_20E4A953C);
  v78[0] = v39;
  v78[1] = v47;
  swift_unknownObjectRetain();
  v48 = MEMORY[0x24BDED308];
  v49 = v65;
  v50 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v65, v78);
  v51 = v64;
  v52 = v60;
  MEMORY[0x212BBBA70](v46, v49, v15, v50);
  sub_20E3BB484(v46, type metadata accessor for PageMetricsViewModifier);
  (*(void (**)(char *, uint64_t))(v63 + 8))(v52, v49);
  v53 = sub_20E39F334(&qword_253ED0738, type metadata accessor for PageMetricsViewModifier, (uint64_t)&unk_20E4A8168);
  v77[0] = v50;
  v77[1] = v53;
  v54 = v62;
  v55 = MEMORY[0x212BBDF90](v48, v62, v77);
  v56 = v66;
  sub_20E39D614(v66, v51, v54, v55);
  v57 = *(void (**)(char *, uint64_t))(v67 + 8);
  v57(v51, v54);
  sub_20E39D618((uint64_t)v56, v54, v76);
  return ((uint64_t (*)(_QWORD *, uint64_t))v57)(v56, v54);
}

uint64_t sub_20E3B94A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int *v13;
  _OWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  __int128 v48;
  uint64_t v49;

  v38 = a6;
  v43 = a5;
  v44 = a2;
  v40 = a3;
  v41 = a4;
  v45 = a1;
  v8 = sub_20E4A4F70();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ClickLocationConfiguration(0);
  v37 = *(_QWORD *)(v12 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 56))(a7, 1, 1, v12);
  v13 = (int *)type metadata accessor for PageMetricsViewModifier.Instrumentation(0);
  v14 = (_OWORD *)(a7 + v13[6]);
  v46 = 0;
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CD8);
  sub_20E4A4640();
  *v14 = v48;
  v15 = (uint64_t *)(a7 + v13[7]);
  *v15 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
  swift_storeEnumTagMultiPayload();
  v16 = a7 + v13[10];
  *(_QWORD *)v16 = swift_getKeyPath();
  *(_BYTE *)(v16 + 8) = 0;
  v17 = (uint64_t *)(a7 + v13[11]);
  *v17 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A30);
  swift_storeEnumTagMultiPayload();
  v18 = a7 + v13[12];
  *(_QWORD *)v18 = swift_getKeyPath();
  *(_QWORD *)(v18 + 8) = 0;
  *(_WORD *)(v18 + 16) = 0;
  v19 = a7 + v13[13];
  v46 = 0;
  v47 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0D38);
  sub_20E4A4640();
  v20 = BYTE8(v48);
  v21 = v49;
  *(_QWORD *)v19 = v48;
  *(_BYTE *)(v19 + 8) = v20;
  *(_QWORD *)(v19 + 16) = v21;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v44, v8);
  v22 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = v45;
  v42 = v9;
  v24 = v11;
  v25 = v8;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v23 + v22, v24, v8);
  v26 = a7 + v13[5];
  *(_QWORD *)v26 = sub_20E3BCC34;
  *(_QWORD *)(v26 + 8) = v23;
  *(_BYTE *)(v26 + 16) = 0;
  v27 = v38;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v38, 1, v12) == 1)
  {
    swift_retain();
    v28 = 0;
  }
  else
  {
    sub_20E4A5300();
    swift_allocObject();
    swift_retain();
    v28 = sub_20E4A52F4();
  }
  v46 = v28;
  swift_retain();
  sub_20E4A4640();
  v29 = v48;
  swift_release();
  swift_release();
  *v14 = v29;
  v30 = (_QWORD *)(a7 + v13[9]);
  v31 = v41;
  *v30 = v40;
  v30[1] = v31;
  v32 = v43;
  sub_20E3A5E20(v43, a7 + v13[8], &qword_253ED0CA0);
  v33 = *(_BYTE *)(v19 + 8);
  v34 = *(_QWORD *)(v19 + 16);
  *(_QWORD *)&v48 = *(_QWORD *)v19;
  BYTE8(v48) = v33;
  v49 = v34;
  v46 = 0;
  v47 = 1;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C78);
  sub_20E4A4658();
  swift_release();
  swift_release();
  sub_20E39D1F8(v32, &qword_253ED0CA0);
  (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v44, v25);
  swift_release();
  return sub_20E3BCC64(v27, a7);
}

uint64_t sub_20E3B9840(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v3 = sub_20E4A5384();
  MEMORY[0x24BDAC7A8](v3);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CA0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_20E4A4F70();
  v8 = MEMORY[0x24BDAC7A8](v7);
  (*(void (**)(char *, uint64_t, double))(v10 + 16))((char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v8);
  v11 = sub_20E4A4BA4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v6, 1, 1, v11);
  swift_retain();
  sub_20E4A5378();
  sub_20E4A53F0();
  swift_allocObject();
  return sub_20E4A53A8();
}

uint64_t sub_20E3B998C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t KeyPath;
  uint64_t *v16;
  char *v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v37;
  void (*v38)(char *, char *, uint64_t);
  uint64_t v39;
  void (*v40)(unint64_t, char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;

  v43 = a1;
  v47 = a2;
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CB8);
  MEMORY[0x24BDAC7A8](v46);
  v45 = (uint64_t)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = type metadata accessor for PageMetricsViewModifier.Instrumentation(0);
  v42 = *(_QWORD *)(v44 - 8);
  v40 = *(void (**)(unint64_t, char *, uint64_t))(v42 + 64);
  MEMORY[0x24BDAC7A8](v44);
  v39 = (uint64_t)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A48);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0AA8);
  MEMORY[0x24BDAC7A8](v50);
  v49 = (uint64_t)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_20E4A5384();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9);
  v48 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v37 - v13;
  sub_20E3B9D9C(v2, (uint64_t)&v37 - v13);
  KeyPath = swift_getKeyPath();
  v16 = (uint64_t *)&v7[*(int *)(v5 + 36)];
  v17 = (char *)v16 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C30) + 28);
  v18 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v37 = v14;
  v18(v17, v14, v9);
  v38 = v18;
  *v16 = KeyPath;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0BB0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v7, v43, v19);
  v20 = v39;
  sub_20E3BEF24(v2, v39);
  v21 = v48;
  v18(v48, v14, v9);
  v22 = *(unsigned __int8 *)(v42 + 80);
  v23 = (v22 + 16) & ~v22;
  v24 = *(unsigned __int8 *)(v10 + 80);
  v25 = ((unint64_t)v40 + v24 + v23) & ~v24;
  v43 = v25 + v11;
  v41 = v10;
  v42 = v22 | v24 | 7;
  v26 = swift_allocObject();
  v27 = v20;
  sub_20E3A57AC(v20, v26 + v23, type metadata accessor for PageMetricsViewModifier.Instrumentation);
  v40 = *(void (**)(unint64_t, char *, uint64_t))(v10 + 32);
  v40(v26 + v25, v21, v9);
  v28 = swift_getKeyPath();
  v29 = v49;
  sub_20E3A5E20((uint64_t)v7, v49, &qword_253ED0A48);
  v30 = v29 + *(int *)(v50 + 36);
  *(_QWORD *)v30 = sub_20E3BEF6C;
  *(_QWORD *)(v30 + 8) = v26;
  *(_QWORD *)(v30 + 16) = v28;
  *(_QWORD *)(v30 + 24) = 0;
  *(_WORD *)(v30 + 32) = 0;
  sub_20E39D1F8((uint64_t)v7, &qword_253ED0A48);
  v31 = v45;
  sub_20E3A5E20(v2 + *(int *)(v44 + 32), v45, &qword_253ED0CA0);
  sub_20E3BEF24(v2, v27);
  v32 = v48;
  v33 = v37;
  v38(v48, v37, v9);
  v34 = swift_allocObject();
  sub_20E3A57AC(v27, v34 + v23, type metadata accessor for PageMetricsViewModifier.Instrumentation);
  v40(v34 + v25, v32, v9);
  sub_20E3BF304();
  sub_20E39D010(&qword_253ED0CB0, &qword_253ED0CB8, MEMORY[0x24BE5CB98]);
  v35 = v49;
  sub_20E4A44CC();
  swift_release();
  sub_20E39D1F8(v31, &qword_253ED0CB8);
  sub_20E39D1F8(v35, &qword_253ED0AA8);
  return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v33, v9);
}

uint64_t sub_20E3B9D9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CF8);
  v29 = *(_QWORD *)(v4 - 8);
  v30 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v28 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0D00);
  v26 = *(_QWORD *)(v6 - 8);
  v27 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CA0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CF0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (int *)type metadata accessor for PageMetricsViewModifier.Instrumentation(0);
  sub_20E45C27C(a2);
  v17 = (uint64_t *)(a1 + v16[9]);
  v18 = *v17;
  if (*v17)
  {
    v19 = v17[1];
    *(_QWORD *)&v31 = v18;
    *((_QWORD *)&v31 + 1) = v19;
    swift_unknownObjectRetain();
    sub_20E4A5330();
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CD0);
    sub_20E4A536C();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    swift_unknownObjectRelease();
  }
  sub_20E3A5E20(a1 + v16[8], (uint64_t)v11, &qword_253ED0CA0);
  v20 = sub_20E4A4BA4();
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v11, 1, v20) == 1)
  {
    sub_20E39D1F8((uint64_t)v11, &qword_253ED0CA0);
  }
  else
  {
    v22 = sub_20E4A4B50();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v11, v20);
    if (v22)
    {
      *(_QWORD *)&v31 = v22;
      sub_20E4A5360();
      __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0D30);
      sub_20E4A536C();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v8, v27);
      swift_bridgeObjectRelease();
    }
  }
  v31 = *(_OWORD *)(a1 + v16[6]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C70);
  result = sub_20E4A464C();
  if (v32)
  {
    *(_QWORD *)&v31 = v32;
    v24 = v28;
    sub_20E4A533C();
    sub_20E4A5300();
    sub_20E4A536C();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v24, v30);
    return swift_release();
  }
  return result;
}

uint64_t sub_20E3BA084(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t *v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  int *v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int *v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  char v54;
  char *v55;
  char v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  BOOL v80;

  v74 = a3;
  v5 = sub_20E4A5570();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CA0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = sub_20E4A5384();
  v71 = *(_QWORD *)(v73 - 8);
  MEMORY[0x24BDAC7A8](v73);
  v72 = (char *)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_20E4A5A8C();
  v69 = *(_QWORD *)(v13 - 8);
  v70 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v68 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_20E4A392C();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C88);
  MEMORY[0x24BDAC7A8](v19);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v64 - v22;
  v75 = v11;
  if ((a1 & 1) != 0)
  {
    v24 = type metadata accessor for PageMetricsViewModifier.Instrumentation(0);
    v25 = (uint64_t *)(a2 + *(int *)(v24 + 52));
    v26 = *((_BYTE *)v25 + 8);
    v27 = v25[2];
    v76 = *v25;
    v77 = v26;
    v78 = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C78);
    sub_20E4A464C();
    v28 = a2;
    if (v80)
    {
      sub_20E45C744((uint64_t)v23);
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C80);
      v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 48))(v23, 1, v29);
      if (v30 == 1)
      {
        sub_20E39D1F8((uint64_t)v23, &qword_253ED0C88);
        v31 = 0;
      }
      else
      {
        MEMORY[0x212BBBCE0](v29);
        sub_20E39D1F8((uint64_t)v23, &qword_253ED0C80);
        v31 = sub_20E4A38FC();
        (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
      }
      v57 = *((_BYTE *)v25 + 8);
      v58 = v25[2];
      v76 = *v25;
      v77 = v57;
      v78 = v58;
      v79 = v31;
      v80 = v30 == 1;
      sub_20E4A4658();
      v28 = a2;
    }
    v59 = v28;
    sub_20E4A53F0();
    sub_20E39F334(&qword_253ED0D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5D728], (uint64_t)&protocol conformance descriptor for PageMetricsPresenter);
    sub_20E4A36EC();
    v60 = sub_20E4A53CC();
    swift_release();
    if ((v60 & 1) == 0)
    {
      v67 = v24;
      v61 = v68;
      sub_20E4A5A5C();
      __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0D58);
      sub_20E4A4ACC();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_20E4A8040;
      sub_20E4A4A30();
      sub_20E4A4A30();
      sub_20E4A4A30();
      v62 = v70;
      sub_20E4A5768();
      swift_bridgeObjectRelease();
      v63 = v61;
      v24 = v67;
      (*(void (**)(char *, uint64_t))(v69 + 8))(v63, v62);
    }
    sub_20E4A36EC();
    (*(void (**)(char *, uint64_t, uint64_t))(v71 + 16))(v72, v74, v73);
    sub_20E4A53E4();
    swift_release();
    sub_20E4A36EC();
    sub_20E3A5E20(v59 + *(int *)(v24 + 32), (uint64_t)v75, &qword_253ED0CA0);
    sub_20E4A53D8();
    swift_release();
    sub_20E4A36EC();
    sub_20E4A53B4();
    return swift_release();
  }
  else
  {
    v64 = v21;
    v65 = v8;
    v66 = v6;
    v67 = v5;
    v32 = (int *)type metadata accessor for PageMetricsViewModifier.Instrumentation(0);
    v33 = a2 + v32[10];
    v34 = *(_QWORD *)v33;
    v35 = *(_BYTE *)(v33 + 8);
    sub_20E39CFAC(*(_QWORD *)v33, v35);
    sub_20E45C770(v34, v35, &v76);
    sub_20E39CED8(v34, v35);
    v36 = a2;
    if (v76 == 4)
    {
      v37 = v68;
      sub_20E4A5A5C();
      __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0D58);
      sub_20E4A4ACC();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_20E4A8050;
      sub_20E4A4A30();
      sub_20E4A4A30();
      sub_20E4A4A30();
      sub_20E4A4A30();
      v38 = v70;
      sub_20E4A5768();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v69 + 8))(v37, v38);
    }
    v39 = (uint64_t *)(a2 + v32[13]);
    v40 = *v39;
    v41 = *((_BYTE *)v39 + 8);
    v42 = v39[2];
    v76 = v40;
    v77 = v41;
    v78 = v42;
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C78);
    sub_20E4A464C();
    v70 = v79;
    LODWORD(v69) = v80;
    v43 = v64;
    sub_20E45C744(v64);
    v44 = a2 + v32[12];
    v45 = *(_QWORD *)v44;
    v46 = *(_QWORD *)(v44 + 8);
    v47 = v32;
    v48 = *(unsigned __int8 *)(v44 + 16);
    v49 = *(unsigned __int8 *)(v44 + 17);
    sub_20E3A3AFC(*(_QWORD *)v44, v46, v48, *(_BYTE *)(v44 + 17));
    v50 = sub_20E45C300(v45, v46, v48 | (v49 << 8));
    v52 = v51;
    v54 = v53;
    sub_20E3A3D14(v45, v46, v48, v49);
    v55 = v65;
    ViewWillDisappearReason.init(initialPathCount:pageMetricsNavigationPath:isFlowStackSheetPresented:)(v70, v69, v43, v50, v52, v54);
    sub_20E4A53F0();
    sub_20E39F334(&qword_253ED0D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5D728], (uint64_t)&protocol conformance descriptor for PageMetricsPresenter);
    sub_20E4A36EC();
    sub_20E4A53C0();
    swift_release();
    sub_20E4A36EC();
    (*(void (**)(char *, uint64_t, uint64_t))(v71 + 16))(v72, v74, v73);
    sub_20E4A53E4();
    swift_release();
    sub_20E4A36EC();
    sub_20E3A5E20(v36 + v47[8], (uint64_t)v75, &qword_253ED0CA0);
    sub_20E4A53D8();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v66 + 8))(v55, v67);
  }
}

uint64_t sub_20E3BA900(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, unint64_t, uint64_t);
  char v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int (*v54)(uint64_t, uint64_t, uint64_t);
  unsigned int v55;
  uint64_t v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD v61[2];
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(char *, unint64_t, uint64_t);
  uint64_t v73;
  unint64_t v74;
  unsigned int (*v75)(char *, uint64_t, uint64_t);
  char *v76;
  char *v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;

  v8 = sub_20E4A5384();
  v66 = *(_QWORD *)(v8 - 8);
  v67 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v65 = (char *)v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_20E4A4B8C();
  v84 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v83 = (char *)v61 - v14;
  v15 = sub_20E4A4B68();
  v81 = *(_QWORD *)(v15 - 8);
  v82 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v80 = (char *)v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CA0);
  MEMORY[0x24BDAC7A8](v17);
  v64 = (uint64_t)v61 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v69 = (uint64_t)v61 - v20;
  MEMORY[0x24BDAC7A8](v21);
  v76 = (char *)v61 - v22;
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)v61 - v24;
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)v61 - v27;
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)v61 - v30;
  sub_20E3A5E20(a1, (uint64_t)v61 - v30, &qword_253ED0CA0);
  v78 = v28;
  sub_20E3A5E20(a2, (uint64_t)v28, &qword_253ED0CA0);
  v77 = v31;
  sub_20E3A5E20((uint64_t)v31, (uint64_t)v25, &qword_253ED0CA0);
  v32 = sub_20E4A4BA4();
  v33 = *(_QWORD *)(v32 - 8);
  v75 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48);
  v34 = v75(v25, 1, v32);
  v68 = a4;
  if (v34 == 1)
  {
    sub_20E39D1F8((uint64_t)v25, &qword_253ED0CA0);
    v35 = 0;
LABEL_15:
    v52 = (uint64_t)v77;
    v51 = (uint64_t)v78;
    v53 = (uint64_t)v76;
    goto LABEL_16;
  }
  v36 = sub_20E4A4B74();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v25, v32);
  v70 = *(_QWORD *)(v36 + 16);
  if (!v70)
  {
    swift_bridgeObjectRelease();
    v35 = 1;
    goto LABEL_15;
  }
  v62 = v33;
  v63 = a3;
  v74 = v36 + ((*(unsigned __int8 *)(v81 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80));
  v37 = *(_QWORD *)(v81 + 72);
  v72 = *(void (**)(char *, unint64_t, uint64_t))(v81 + 16);
  v73 = v37;
  v61[1] = v36;
  swift_bridgeObjectRetain();
  v38 = 0;
  v39 = v82;
  v40 = v83;
  v41 = v80;
  v71 = v32;
  while (1)
  {
    v79 = v38;
    v72(v41, v74 + v73 * v38, v39);
    v42 = sub_20E4A4B5C();
    sub_20E4A4B80();
    if (*(_QWORD *)(v42 + 16))
    {
      sub_20E39F334(&qword_253ED0C90, (uint64_t (*)(uint64_t))MEMORY[0x24BE5CA50], MEMORY[0x24BE5CA60]);
      v43 = sub_20E4A5BA0();
      v44 = -1 << *(_BYTE *)(v42 + 32);
      v45 = v43 & ~v44;
      if (((*(_QWORD *)(v42 + 56 + ((v45 >> 3) & 0xFFFFFFFFFFFFF8)) >> v45) & 1) != 0)
        break;
    }
LABEL_5:
    v38 = v79 + 1;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v84 + 8))(v40, v10);
    v41 = v80;
    v39 = v82;
    (*(void (**)(char *, uint64_t))(v81 + 8))(v80, v82);
    v32 = v71;
    if (v38 == v70)
    {
      swift_bridgeObjectRelease_n();
      v35 = 1;
      a3 = v63;
      v52 = (uint64_t)v77;
      v51 = (uint64_t)v78;
      v53 = (uint64_t)v76;
      goto LABEL_13;
    }
  }
  v46 = ~v44;
  v47 = *(_QWORD *)(v84 + 72);
  v48 = *(void (**)(char *, unint64_t, uint64_t))(v84 + 16);
  while (1)
  {
    v48(v12, *(_QWORD *)(v42 + 48) + v47 * v45, v10);
    sub_20E39F334(&qword_253ED0C98, (uint64_t (*)(uint64_t))MEMORY[0x24BE5CA50], MEMORY[0x24BE5CA68]);
    v49 = sub_20E4A5C0C();
    v50 = *(void (**)(char *, uint64_t))(v84 + 8);
    v50(v12, v10);
    if ((v49 & 1) != 0)
      break;
    v45 = (v45 + 1) & v46;
    v40 = v83;
    if (((*(_QWORD *)(v42 + 56 + ((v45 >> 3) & 0xFFFFFFFFFFFFF8)) >> v45) & 1) == 0)
      goto LABEL_5;
  }
  swift_bridgeObjectRelease();
  v50(v83, v10);
  (*(void (**)(char *, uint64_t))(v81 + 8))(v80, v82);
  swift_bridgeObjectRelease_n();
  v35 = 0;
  a3 = v63;
  v52 = (uint64_t)v77;
  v51 = (uint64_t)v78;
  v53 = (uint64_t)v76;
  v32 = v71;
LABEL_13:
  v33 = v62;
LABEL_16:
  v54 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v75;
  v55 = v75((char *)v52, 1, v32);
  sub_20E3A5E20(v51, v53, &qword_253ED0CA0);
  if ((v35 & 1) == 0 && v55 != 1)
  {
    v56 = v53;
LABEL_21:
    sub_20E39D1F8(v56, &qword_253ED0CA0);
    goto LABEL_22;
  }
  v56 = v69;
  sub_20E3A5E20(v53, v69, &qword_253ED0CA0);
  if (v54(v56, 1, v32) == 1)
  {
    sub_20E39D1F8(v53, &qword_253ED0CA0);
    goto LABEL_21;
  }
  v58 = sub_20E4A4B74();
  (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v56, v32);
  v59 = *(_QWORD *)(v58 + 16);
  swift_bridgeObjectRelease();
  sub_20E39D1F8(v53, &qword_253ED0CA0);
  if (v59)
  {
    v60 = type metadata accessor for PageMetricsViewModifier.Instrumentation(0);
    sub_20E4A53F0();
    sub_20E39F334(&qword_253ED0D10, (uint64_t (*)(uint64_t))MEMORY[0x24BE5D728], (uint64_t)&protocol conformance descriptor for PageMetricsPresenter);
    sub_20E4A36EC();
    (*(void (**)(char *, uint64_t, uint64_t))(v66 + 16))(v65, v68, v67);
    sub_20E4A53E4();
    swift_release();
    v52 = (uint64_t)v77;
    v51 = (uint64_t)v78;
    sub_20E4A36EC();
    sub_20E3A5E20(a3 + *(int *)(v60 + 32), v64, &qword_253ED0CA0);
    sub_20E4A53D8();
    swift_release();
  }
LABEL_22:
  sub_20E39D1F8(v51, &qword_253ED0CA0);
  return sub_20E39D1F8(v52, &qword_253ED0CA0);
}

uint64_t sub_20E3BAFCC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_20E3BD17C();
  result = sub_20E4A3C08();
  *a1 = v3;
  return result;
}

uint64_t sub_20E3BB018()
{
  sub_20E3BD17C();
  swift_retain();
  return sub_20E4A3C14();
}

uint64_t sub_20E3BB074@<X0>(uint64_t a1@<X0>, int *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;

  v5 = v3;
  v28 = a3;
  v29 = a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0808);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CA0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_20E4A4F70();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (uint64_t *)(v5 + a2[8]);
  v17 = *v16;
  v18 = *((unsigned __int8 *)v16 + 8);
  j__swift_retain(*v16);
  v19 = sub_20E45C79C(v17, v18);
  j__swift_release(v17, v18);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v5 + a2[5], v12);
  v20 = (uint64_t *)(v5 + a2[6]);
  v21 = *v20;
  v22 = v20[1];
  sub_20E3A5E20(v5, (uint64_t)v11, &qword_253ED0CA0);
  sub_20E3A5E20(v5 + a2[7], (uint64_t)v8, &qword_253ED0808);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A58);
  v24 = v28;
  v25 = v28 + *(int *)(v23 + 36);
  swift_unknownObjectRetain();
  sub_20E3B94A4(v19, (uint64_t)v15, v21, v22, (uint64_t)v11, (uint64_t)v8, v25);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0BC0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v29, v26);
}

uint64_t View.pageMetrics(_:pipeline:tracker:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v19;

  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0808);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for ClickLocationConfiguration(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  View.pageMetrics(_:pipeline:tracker:clickLocationConfiguration:)(a1, a2, a3, a4, (uint64_t)v16, a5, a6, a7);
  return sub_20E39D1F8((uint64_t)v16, &qword_253ED0808);
}

unint64_t sub_20E3BB33C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_20E4A6410();
  sub_20E4A5C60();
  v4 = sub_20E4A6428();
  return sub_20E3BCDFC(a1, a2, v4);
}

uint64_t sub_20E3BB3A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t type metadata accessor for PageMetricsViewModifier(uint64_t a1)
{
  return sub_20E3A4CD0(a1, qword_253ED0740);
}

uint64_t sub_20E3BB3F0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_20E3BD17C();
  result = sub_20E4A3C08();
  *a1 = v3;
  return result;
}

uint64_t sub_20E3BB440(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_20E3BB484(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t *initializeBufferWithCopyOfBuffer for ClickLocationConfiguration(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CC0) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = sub_20E4A5114();
    v7 = *(_QWORD *)(v6 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      memcpy(a1, a2, *(_QWORD *)(v4 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
  }
  return a1;
}

uint64_t destroy for ClickLocationConfiguration(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = sub_20E4A5114();
  v3 = *(_QWORD *)(v2 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return result;
}

void *initializeWithCopy for ClickLocationConfiguration(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_20E4A5114();
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CC0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(a1, a2, v4);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

void *assignWithCopy for ClickLocationConfiguration(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void *, uint64_t, uint64_t);
  int v7;
  int v8;
  uint64_t v9;

  v4 = sub_20E4A5114();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 24))(a1, a2, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CC0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, v4);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

void *initializeWithTake for ClickLocationConfiguration(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_20E4A5114();
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CC0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(a1, a2, v4);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

void *assignWithTake for ClickLocationConfiguration(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void *, uint64_t, uint64_t);
  int v7;
  int v8;
  uint64_t v9;

  v4 = sub_20E4A5114();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 40))(a1, a2, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CC0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v5 + 32))(a1, a2, v4);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClickLocationConfiguration()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_20E3BB930(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CC0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for ClickLocationConfiguration()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_20E3BB97C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CC0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

void sub_20E3BB9C0()
{
  unint64_t v0;

  sub_20E3A4C54(319, &qword_253ED2458, (uint64_t (*)(uint64_t))MEMORY[0x24BE5D280], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_20E3BBA40(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[2];
  _QWORD v7[2];

  v1 = *(_QWORD *)(a1 + 8);
  type metadata accessor for ClickLocationViewModifier();
  v2 = sub_20E4A39D4();
  type metadata accessor for PageMetricsViewModifier(255);
  v3 = sub_20E4A39D4();
  v7[0] = v1;
  v7[1] = sub_20E39F334(&qword_253ED07E8, (uint64_t (*)(uint64_t))type metadata accessor for ClickLocationViewModifier, (uint64_t)&unk_20E4A953C);
  v4 = MEMORY[0x24BDED308];
  v6[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v2, v7);
  v6[1] = sub_20E39F334(&qword_253ED0738, type metadata accessor for PageMetricsViewModifier, (uint64_t)&unk_20E4A8168);
  return MEMORY[0x212BBDF90](v4, v3, v6);
}

uint64_t *sub_20E3BBB20(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char v29;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_20E4A4BA4();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CA0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = a3[5];
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_20E4A4F70();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
    v15 = a3[7];
    *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    v18 = type metadata accessor for ClickLocationConfiguration(0);
    v19 = *(_QWORD *)(v18 - 8);
    v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
    swift_unknownObjectRetain();
    if (v20(v17, 1, v18))
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0808);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      v22 = sub_20E4A5114();
      v23 = *(_QWORD *)(v22 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v17, 1, v22))
      {
        v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CC0);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v16, v17, v22);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v16, 0, 1, v22);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
    v25 = a3[8];
    v26 = (char *)a1 + v25;
    v27 = (char *)a2 + v25;
    v28 = *(_QWORD *)v27;
    v29 = v27[8];
    j__swift_retain(*(_QWORD *)v27);
    *(_QWORD *)v26 = v28;
    v26[8] = v29;
  }
  return a1;
}

uint64_t sub_20E3BBD68(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = sub_20E4A4BA4();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v6 = a1 + a2[5];
  v7 = sub_20E4A4F70();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  swift_unknownObjectRelease();
  v8 = a1 + a2[7];
  v9 = type metadata accessor for ClickLocationConfiguration(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
  {
    v10 = sub_20E4A5114();
    v11 = *(_QWORD *)(v10 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v8, v10);
  }
  return j__swift_release(*(_QWORD *)(a1 + a2[8]), *(unsigned __int8 *)(a1 + a2[8] + 8));
}

char *sub_20E3BBE74(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char v27;

  v6 = sub_20E4A4BA4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CA0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_20E4A4F70();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  v13 = a3[7];
  *(_OWORD *)&a1[a3[6]] = *(_OWORD *)&a2[a3[6]];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = type metadata accessor for ClickLocationConfiguration(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  swift_unknownObjectRetain();
  if (v18(v15, 1, v16))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0808);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    v20 = sub_20E4A5114();
    v21 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v15, 1, v20))
    {
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CC0);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v14, v15, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v14, 0, 1, v20);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  v23 = a3[8];
  v24 = &a1[v23];
  v25 = &a2[v23];
  v26 = *(_QWORD *)v25;
  v27 = v25[8];
  j__swift_retain(*(_QWORD *)v25);
  *(_QWORD *)v24 = v26;
  v24[8] = v27;
  return a1;
}

char *sub_20E3BC090(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(char *, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t (*v33)(char *, uint64_t, uint64_t);
  int v34;
  int v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;

  v6 = sub_20E4A4BA4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CA0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_20E4A4F70();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  v16 = a3[6];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = *((_QWORD *)v18 + 1);
  *(_QWORD *)v17 = *(_QWORD *)v18;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *((_QWORD *)v17 + 1) = v19;
  v20 = a3[7];
  v21 = &a1[v20];
  v22 = &a2[v20];
  v23 = type metadata accessor for ClickLocationConfiguration(0);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48);
  v26 = v25(v21, 1, v23);
  v27 = v25(v22, 1, v23);
  if (v26)
  {
    if (!v27)
    {
      v28 = sub_20E4A5114();
      v29 = *(_QWORD *)(v28 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v22, 1, v28))
      {
        v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CC0);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v21, v22, v28);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v21, 0, 1, v28);
      }
      goto LABEL_20;
    }
    goto LABEL_13;
  }
  if (v27)
  {
    sub_20E3BB484((uint64_t)v21, type metadata accessor for ClickLocationConfiguration);
LABEL_13:
    v31 = &qword_253ED0808;
    goto LABEL_14;
  }
  v23 = sub_20E4A5114();
  v24 = *(_QWORD *)(v23 - 8);
  v33 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48);
  v34 = v33(v21, 1, v23);
  v35 = v33(v22, 1, v23);
  if (v34)
  {
    if (!v35)
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
LABEL_20:
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
      goto LABEL_21;
    }
  }
  else
  {
    if (!v35)
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 24))(v21, v22, v23);
      goto LABEL_21;
    }
    (*(void (**)(char *, uint64_t))(v24 + 8))(v21, v23);
  }
  v31 = &qword_253ED0CC0;
LABEL_14:
  v32 = __swift_instantiateConcreteTypeFromMangledName(v31);
  memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
LABEL_21:
  v36 = a3[8];
  v37 = &a1[v36];
  v38 = &a2[v36];
  v39 = *(_QWORD *)v38;
  v40 = v38[8];
  j__swift_retain(*(_QWORD *)v38);
  v41 = *(_QWORD *)v37;
  v42 = v37[8];
  *(_QWORD *)v37 = v39;
  v37[8] = v40;
  j__swift_release(v41, v42);
  return a1;
}

char *sub_20E3BC3C0(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;

  v6 = sub_20E4A4BA4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CA0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_20E4A4F70();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  v13 = a3[7];
  *(_OWORD *)&a1[a3[6]] = *(_OWORD *)&a2[a3[6]];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = type metadata accessor for ClickLocationConfiguration(0);
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0808);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    v19 = sub_20E4A5114();
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v15, 1, v19))
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CC0);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v14, v15, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v14, 0, 1, v19);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  v22 = a3[8];
  v23 = &a1[v22];
  v24 = &a2[v22];
  *(_QWORD *)v23 = *(_QWORD *)v24;
  v23[8] = v24[8];
  return a1;
}

char *sub_20E3BC5B8(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(char *, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t (*v33)(char *, uint64_t, uint64_t);
  int v34;
  int v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v6 = sub_20E4A4BA4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CA0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_20E4A4F70();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  v16 = a3[6];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = *((_QWORD *)v18 + 1);
  *(_QWORD *)v17 = *(_QWORD *)v18;
  swift_unknownObjectRelease();
  *((_QWORD *)v17 + 1) = v19;
  v20 = a3[7];
  v21 = &a1[v20];
  v22 = &a2[v20];
  v23 = type metadata accessor for ClickLocationConfiguration(0);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48);
  v26 = v25(v21, 1, v23);
  v27 = v25(v22, 1, v23);
  if (v26)
  {
    if (!v27)
    {
      v28 = sub_20E4A5114();
      v29 = *(_QWORD *)(v28 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v22, 1, v28))
      {
        v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CC0);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v21, v22, v28);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v21, 0, 1, v28);
      }
      goto LABEL_20;
    }
    goto LABEL_13;
  }
  if (v27)
  {
    sub_20E3BB484((uint64_t)v21, type metadata accessor for ClickLocationConfiguration);
LABEL_13:
    v31 = &qword_253ED0808;
    goto LABEL_14;
  }
  v23 = sub_20E4A5114();
  v24 = *(_QWORD *)(v23 - 8);
  v33 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48);
  v34 = v33(v21, 1, v23);
  v35 = v33(v22, 1, v23);
  if (v34)
  {
    if (!v35)
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v21, v22, v23);
LABEL_20:
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
      goto LABEL_21;
    }
  }
  else
  {
    if (!v35)
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 40))(v21, v22, v23);
      goto LABEL_21;
    }
    (*(void (**)(char *, uint64_t))(v24 + 8))(v21, v23);
  }
  v31 = &qword_253ED0CC0;
LABEL_14:
  v32 = __swift_instantiateConcreteTypeFromMangledName(v31);
  memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
LABEL_21:
  v36 = a3[8];
  v37 = &a1[v36];
  v38 = &a2[v36];
  v39 = *(_QWORD *)v38;
  LOBYTE(v38) = v38[8];
  v40 = *(_QWORD *)v37;
  v41 = v37[8];
  *(_QWORD *)v37 = v39;
  v37[8] = (char)v38;
  j__swift_release(v40, v41);
  return a1;
}

uint64_t sub_20E3BC8D4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_20E3BC8E0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int v14;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CA0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = sub_20E4A4F70();
  v10 = *(_QWORD *)(v9 - 8);
  if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
  {
    v11 = v9;
    v12 = a3[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1 + v12, a2, v11);
  }
  if ((_DWORD)a2 != 2147483646)
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0808);
    v10 = *(_QWORD *)(v11 - 8);
    v12 = a3[7];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1 + v12, a2, v11);
  }
  v13 = *(_QWORD *)(a1 + a3[6]);
  if (v13 >= 0xFFFFFFFF)
    LODWORD(v13) = -1;
  v14 = v13 - 1;
  if (v14 < 0)
    v14 = -1;
  return (v14 + 1);
}

uint64_t sub_20E3BC9C0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_20E3BC9CC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CA0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    result = sub_20E4A4F70();
    v14 = *(_QWORD *)(result - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = result;
      v15 = a4[5];
    }
    else
    {
      if (a3 == 2147483646)
      {
        *(_QWORD *)(a1 + a4[6]) = a2;
        return result;
      }
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0808);
      v14 = *(_QWORD *)(v10 - 8);
      v15 = a4[7];
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_20E3BCA9C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_20E3A4C54(319, &qword_253ED0CA8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5CA78], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
  {
    sub_20E4A4F70();
    if (v1 <= 0x3F)
    {
      sub_20E3A4C54(319, &qword_253ED0810, type metadata accessor for ClickLocationConfiguration, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t sub_20E3BCB7C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for PageMetricsViewModifier.Instrumentation(uint64_t a1)
{
  return sub_20E3A4CD0(a1, (uint64_t *)&unk_253ED0728);
}

uint64_t sub_20E3BCBC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_20E4A4F70();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_20E3BCC34()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_20E4A4F70() - 8) + 80);
  return sub_20E3B9840(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_20E3BCC64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0808);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_20E3BCCB0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_20E4A6164();
  return sub_20E3BCEDC(a1, v2);
}

unint64_t sub_20E3BCCE0(uint64_t a1)
{
  uint64_t v2;

  sub_20E4A4E68();
  sub_20E39F334(&qword_254A18BD0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5CE78], MEMORY[0x24BE5CE88]);
  v2 = sub_20E4A5BA0();
  return sub_20E3BCFA0(a1, v2);
}

unint64_t sub_20E3BCD58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_20E4A6410();
  swift_bridgeObjectRetain();
  sub_20E4A5C60();
  swift_bridgeObjectRelease();
  v4 = sub_20E4A6428();
  return sub_20E3BCDFC(a1, a2, v4);
}

unint64_t sub_20E3BCDCC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_20E4A6404();
  return sub_20E3BD0E0(a1, v2);
}

unint64_t sub_20E3BCDFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_20E4A635C() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_20E4A635C() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_20E3BCEDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_20E3B7F84(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x212BBD72C](v9, a1);
      sub_20E3B8008((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_20E3BCFA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, unint64_t, uint64_t, __n128);
  char v15;
  _QWORD v17[2];

  v3 = v2;
  v17[1] = a1;
  v5 = sub_20E4A4E68();
  v6 = *(_QWORD *)(v5 - 8);
  v7.n128_f64[0] = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = -1 << *(_BYTE *)(v3 + 32);
  v11 = a2 & ~v10;
  if (((*(_QWORD *)(v3 + 64 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
  {
    v12 = ~v10;
    v13 = *(_QWORD *)(v6 + 72);
    v14 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v6 + 16);
    do
    {
      v14(v9, *(_QWORD *)(v3 + 48) + v13 * v11, v5, v7);
      sub_20E39F334(&qword_254A18BD8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5CE78], MEMORY[0x24BE5CE90]);
      v15 = sub_20E4A5C0C();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
      if ((v15 & 1) != 0)
        break;
      v11 = (v11 + 1) & v12;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  }
  return v11;
}

unint64_t sub_20E3BD0E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_20E3BD17C()
{
  unint64_t result;

  result = qword_253ED07E0;
  if (!qword_253ED07E0)
  {
    result = MEMORY[0x212BBDF90](&unk_20E4AC8CC, &type metadata for AppMetricsEnvironmentKey);
    atomic_store(result, (unint64_t *)&qword_253ED07E0);
  }
  return result;
}

uint64_t *sub_20E3BD1C0(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  unsigned __int8 v53;
  uint64_t v54;
  char *v55;
  char *v56;
  void (*v58)(char *, char *, uint64_t);
  char *v59;
  char *v60;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = type metadata accessor for ClickLocationConfiguration(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0808);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v11 = sub_20E4A5114();
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CC0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v12 + 16))(a1, a2, v11);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v14 = a3[5];
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    v17 = *(_QWORD *)v16;
    v18 = *((_QWORD *)v16 + 1);
    v19 = v16[16];
    sub_20E39CFB8();
    *(_QWORD *)v15 = v17;
    *((_QWORD *)v15 + 1) = v18;
    v15[16] = v19;
    v20 = a3[6];
    v21 = a3[7];
    v22 = (uint64_t *)((char *)a1 + v20);
    v23 = (uint64_t *)((char *)a2 + v20);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    v25 = (uint64_t *)((char *)a1 + v21);
    v26 = (uint64_t *)((char *)a2 + v21);
    swift_retain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v27 = sub_20E4A5384();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    }
    else
    {
      *v25 = *v26;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v28 = a3[8];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    v31 = sub_20E4A4BA4();
    v32 = *(_QWORD *)(v31 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
    {
      v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CA0);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v29, v30, v31);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
    }
    v34 = a3[10];
    *(_OWORD *)((char *)a1 + a3[9]) = *(_OWORD *)((char *)a2 + a3[9]);
    v35 = (char *)a1 + v34;
    v36 = *(uint64_t *)((char *)a2 + v34);
    v37 = *((_BYTE *)a2 + v34 + 8);
    swift_unknownObjectRetain();
    sub_20E39CFAC(v36, v37);
    *(_QWORD *)v35 = v36;
    v35[8] = v37;
    v38 = a3[11];
    v39 = (uint64_t *)((char *)a1 + v38);
    v40 = (uint64_t *)((char *)a2 + v38);
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C80);
      v42 = *(_QWORD *)(v41 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
      {
        v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C88);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
      }
      else
      {
        v44 = v40[1];
        *v39 = *v40;
        v39[1] = v44;
        v45 = *(int *)(v41 + 32);
        v59 = (char *)v40 + v45;
        v60 = (char *)v39 + v45;
        v46 = sub_20E4A392C();
        v58 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 16);
        swift_retain();
        swift_retain();
        v58(v60, v59, v46);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
      }
    }
    else
    {
      *v39 = *v40;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v47 = a3[12];
    v48 = (char *)a1 + v47;
    v49 = (char *)a2 + v47;
    v50 = *(_QWORD *)v49;
    v51 = *((_QWORD *)v49 + 1);
    v52 = v49[17];
    v53 = v49[16];
    sub_20E3A3AFC(*(_QWORD *)v49, v51, v53, v52);
    *(_QWORD *)v48 = v50;
    *((_QWORD *)v48 + 1) = v51;
    v48[16] = v53;
    v48[17] = v52;
    v54 = a3[13];
    v55 = (char *)a1 + v54;
    v56 = (char *)a2 + v54;
    *(_QWORD *)v55 = *(_QWORD *)v56;
    v55[8] = v56[8];
    *((_QWORD *)v55 + 2) = *((_QWORD *)v56 + 2);
  }
  swift_retain();
  return a1;
}

uint64_t sub_20E3BD600(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = type metadata accessor for ClickLocationConfiguration(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4))
  {
    v5 = sub_20E4A5114();
    v6 = *(_QWORD *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
  }
  sub_20E39CED0();
  swift_release();
  swift_release();
  v7 = a1 + a2[7];
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_20E4A5384();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  v9 = a1 + a2[8];
  v10 = sub_20E4A4BA4();
  v11 = *(_QWORD *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  swift_unknownObjectRelease();
  sub_20E39CED8(*(_QWORD *)(a1 + a2[10]), *(_BYTE *)(a1 + a2[10] + 8));
  v12 = a1 + a2[11];
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C80);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v12, 1, v13))
    {
      swift_release();
      swift_release();
      v14 = v12 + *(int *)(v13 + 32);
      v15 = sub_20E4A392C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
    }
  }
  else
  {
    swift_release();
  }
  sub_20E3A3D14(*(_QWORD *)(a1 + a2[12]), *(_QWORD *)(a1 + a2[12] + 8), *(unsigned __int8 *)(a1 + a2[12] + 16), *(_BYTE *)(a1 + a2[12] + 17));
  return swift_release();
}

char *sub_20E3BD820(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  unsigned __int8 v51;
  uint64_t v52;
  char *v53;
  char *v54;
  void (*v56)(char *, char *, uint64_t);
  char *v57;
  char *v58;

  v6 = type metadata accessor for ClickLocationConfiguration(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0808);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = sub_20E4A5114();
    v10 = *(_QWORD *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(a2, 1, v9))
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CC0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(a1, a2, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = *(_QWORD *)v14;
  v16 = *((_QWORD *)v14 + 1);
  v17 = v14[16];
  sub_20E39CFB8();
  *(_QWORD *)v13 = v15;
  *((_QWORD *)v13 + 1) = v16;
  v13[16] = v17;
  v18 = a3[6];
  v19 = a3[7];
  v20 = &a1[v18];
  v21 = &a2[v18];
  v22 = *((_QWORD *)v21 + 1);
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *((_QWORD *)v20 + 1) = v22;
  v23 = &a1[v19];
  v24 = &a2[v19];
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v25 = sub_20E4A5384();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
  }
  else
  {
    *(_QWORD *)v23 = *(_QWORD *)v24;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v26 = a3[8];
  v27 = &a1[v26];
  v28 = &a2[v26];
  v29 = sub_20E4A4BA4();
  v30 = *(_QWORD *)(v29 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
  {
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CA0);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v27, v28, v29);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
  }
  v32 = a3[10];
  *(_OWORD *)&a1[a3[9]] = *(_OWORD *)&a2[a3[9]];
  v33 = &a1[v32];
  v34 = *(_QWORD *)&a2[v32];
  v35 = a2[v32 + 8];
  swift_unknownObjectRetain();
  sub_20E39CFAC(v34, v35);
  *(_QWORD *)v33 = v34;
  v33[8] = v35;
  v36 = a3[11];
  v37 = &a1[v36];
  v38 = &a2[v36];
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C80);
    v40 = *(_QWORD *)(v39 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
    {
      v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C88);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    }
    else
    {
      v42 = *((_QWORD *)v38 + 1);
      *(_QWORD *)v37 = *(_QWORD *)v38;
      *((_QWORD *)v37 + 1) = v42;
      v43 = *(int *)(v39 + 32);
      v57 = &v38[v43];
      v58 = &v37[v43];
      v44 = sub_20E4A392C();
      v56 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16);
      swift_retain();
      swift_retain();
      v56(v58, v57, v44);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
    }
  }
  else
  {
    *(_QWORD *)v37 = *(_QWORD *)v38;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v45 = a3[12];
  v46 = &a1[v45];
  v47 = &a2[v45];
  v48 = *(_QWORD *)v47;
  v49 = *((_QWORD *)v47 + 1);
  v50 = v47[17];
  v51 = v47[16];
  sub_20E3A3AFC(*(_QWORD *)v47, v49, v51, v50);
  *(_QWORD *)v46 = v48;
  *((_QWORD *)v46 + 1) = v49;
  v46[16] = v51;
  v46[17] = v50;
  v52 = a3[13];
  v53 = &a1[v52];
  v54 = &a2[v52];
  *(_QWORD *)v53 = *(_QWORD *)v54;
  v53[8] = v54[8];
  *((_QWORD *)v53 + 2) = *((_QWORD *)v54 + 2);
  swift_retain();
  return a1;
}

char *sub_20E3BDC38(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(char *, uint64_t, uint64_t);
  int v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  unsigned __int8 v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  void (*v75)(char *, char *, uint64_t);
  char *v76;
  char *v77;

  v6 = type metadata accessor for ClickLocationConfiguration(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      v11 = sub_20E4A5114();
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CC0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(a1, a2, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
      }
      goto LABEL_13;
    }
    goto LABEL_7;
  }
  if (v10)
  {
    sub_20E3BB484((uint64_t)a1, type metadata accessor for ClickLocationConfiguration);
LABEL_7:
    v14 = &qword_253ED0808;
LABEL_8:
    v15 = __swift_instantiateConcreteTypeFromMangledName(v14);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_14;
  }
  v6 = sub_20E4A5114();
  v7 = *(_QWORD *)(v6 - 8);
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v17 = v16(a1, 1, v6);
  v18 = v16(a2, 1, v6);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
LABEL_13:
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_14;
    }
    goto LABEL_36;
  }
  if (v18)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_36:
    v14 = &qword_253ED0CC0;
    goto LABEL_8;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_14:
  v19 = a3[5];
  v20 = &a1[v19];
  v21 = &a2[v19];
  v22 = *(_QWORD *)v21;
  v23 = *((_QWORD *)v21 + 1);
  v24 = v21[16];
  sub_20E39CFB8();
  *(_QWORD *)v20 = v22;
  *((_QWORD *)v20 + 1) = v23;
  v20[16] = v24;
  sub_20E39CED0();
  v25 = a3[6];
  v26 = &a1[v25];
  v27 = &a2[v25];
  *(_QWORD *)&a1[v25] = *(_QWORD *)&a2[v25];
  swift_retain();
  swift_release();
  *((_QWORD *)v26 + 1) = *((_QWORD *)v27 + 1);
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v28 = a3[7];
    v29 = &a1[v28];
    v30 = &a2[v28];
    sub_20E39D1F8((uint64_t)&a1[v28], &qword_253ED0A28);
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v31 = sub_20E4A5384();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
    }
    else
    {
      *(_QWORD *)v29 = *(_QWORD *)v30;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v32 = a3[8];
  v33 = &a1[v32];
  v34 = &a2[v32];
  v35 = sub_20E4A4BA4();
  v36 = *(_QWORD *)(v35 - 8);
  v37 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v36 + 48);
  v38 = v37(v33, 1, v35);
  v39 = v37(v34, 1, v35);
  if (v38)
  {
    if (!v39)
    {
      (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v33, v34, v35);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v39)
  {
    (*(void (**)(char *, uint64_t))(v36 + 8))(v33, v35);
LABEL_24:
    v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CA0);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v36 + 24))(v33, v34, v35);
LABEL_25:
  v41 = a3[9];
  v42 = &a1[v41];
  v43 = &a2[v41];
  v44 = *((_QWORD *)v43 + 1);
  *(_QWORD *)v42 = *(_QWORD *)v43;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *((_QWORD *)v42 + 1) = v44;
  v45 = a3[10];
  v46 = &a1[v45];
  v47 = &a2[v45];
  v48 = *(_QWORD *)v47;
  LOBYTE(v42) = v47[8];
  sub_20E39CFAC(*(_QWORD *)v47, (char)v42);
  v49 = *(_QWORD *)v46;
  v50 = v46[8];
  *(_QWORD *)v46 = v48;
  v46[8] = (char)v42;
  sub_20E39CED8(v49, v50);
  if (a1 != a2)
  {
    v51 = a3[11];
    v52 = &a1[v51];
    v53 = &a2[v51];
    sub_20E39D1F8((uint64_t)&a1[v51], &qword_253ED0A30);
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C80);
      v55 = *(_QWORD *)(v54 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v53, 1, v54))
      {
        v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C88);
        memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
      }
      else
      {
        *(_QWORD *)v52 = *(_QWORD *)v53;
        *((_QWORD *)v52 + 1) = *((_QWORD *)v53 + 1);
        v57 = *(int *)(v54 + 32);
        v76 = &v53[v57];
        v77 = &v52[v57];
        v58 = sub_20E4A392C();
        v75 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 16);
        swift_retain();
        swift_retain();
        v75(v77, v76, v58);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
      }
    }
    else
    {
      *(_QWORD *)v52 = *(_QWORD *)v53;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v59 = a3[12];
  v60 = &a1[v59];
  v61 = &a2[v59];
  v62 = *(_QWORD *)v61;
  v63 = *((_QWORD *)v61 + 1);
  v64 = v61[17];
  v65 = v61[16];
  sub_20E3A3AFC(*(_QWORD *)v61, v63, v65, v64);
  v66 = *(_QWORD *)v60;
  v67 = *((_QWORD *)v60 + 1);
  v68 = v60[17];
  *(_QWORD *)v60 = v62;
  *((_QWORD *)v60 + 1) = v63;
  v69 = v60[16];
  v60[16] = v65;
  v60[17] = v64;
  sub_20E3A3D14(v66, v67, v69, v68);
  v70 = a3[13];
  v71 = &a1[v70];
  v72 = &a2[v70];
  v73 = *(_QWORD *)v72;
  v71[8] = v72[8];
  *(_QWORD *)v71 = v73;
  *((_QWORD *)v71 + 2) = *((_QWORD *)v72 + 2);
  swift_retain();
  swift_release();
  return a1;
}

char *sub_20E3BE1F4(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  __int128 v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  char *v47;
  char *v48;

  v6 = type metadata accessor for ClickLocationConfiguration(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0808);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = sub_20E4A5114();
    v10 = *(_QWORD *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(a2, 1, v9))
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CC0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(a1, a2, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
    }
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v12 = a3[5];
  v13 = a3[6];
  v14 = &a1[v12];
  v15 = &a2[v12];
  *(_OWORD *)v14 = *(_OWORD *)v15;
  v16 = *(_OWORD *)&a2[v13];
  v14[16] = v15[16];
  *(_OWORD *)&a1[v13] = v16;
  v17 = a3[7];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v21 = sub_20E4A5384();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v18, v19, v21);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  v22 = a3[8];
  v23 = &a1[v22];
  v24 = &a2[v22];
  v25 = sub_20E4A4BA4();
  v26 = *(_QWORD *)(v25 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
  {
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CA0);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  }
  v28 = a3[10];
  *(_OWORD *)&a1[a3[9]] = *(_OWORD *)&a2[a3[9]];
  v29 = &a1[v28];
  v30 = &a2[v28];
  *(_QWORD *)v29 = *(_QWORD *)v30;
  v29[8] = v30[8];
  v31 = a3[11];
  v32 = &a1[v31];
  v33 = &a2[v31];
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C80);
    v36 = *(_QWORD *)(v35 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v33, 1, v35))
    {
      v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C88);
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      v38 = *((_QWORD *)v33 + 1);
      *(_QWORD *)v32 = *(_QWORD *)v33;
      *((_QWORD *)v32 + 1) = v38;
      v39 = *(int *)(v35 + 32);
      v40 = &v32[v39];
      v41 = &v33[v39];
      v42 = sub_20E4A392C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v40, v41, v42);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v32, 0, 1, v35);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
  }
  v43 = a3[12];
  v44 = a3[13];
  v45 = &a1[v43];
  v46 = &a2[v43];
  *(_OWORD *)v45 = *(_OWORD *)v46;
  *((_WORD *)v45 + 8) = *((_WORD *)v46 + 8);
  v47 = &a1[v44];
  v48 = &a2[v44];
  *(_OWORD *)v47 = *(_OWORD *)v48;
  *((_QWORD *)v47 + 2) = *((_QWORD *)v48 + 2);
  return a1;
}

char *sub_20E3BE584(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(char *, uint64_t, uint64_t);
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  char v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;

  v6 = type metadata accessor for ClickLocationConfiguration(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      v11 = sub_20E4A5114();
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CC0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 32))(a1, a2, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
      }
      goto LABEL_13;
    }
    goto LABEL_7;
  }
  if (v10)
  {
    sub_20E3BB484((uint64_t)a1, type metadata accessor for ClickLocationConfiguration);
LABEL_7:
    v14 = &qword_253ED0808;
LABEL_8:
    v15 = __swift_instantiateConcreteTypeFromMangledName(v14);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_14;
  }
  v6 = sub_20E4A5114();
  v7 = *(_QWORD *)(v6 - 8);
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v17 = v16(a1, 1, v6);
  v18 = v16(a2, 1, v6);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
LABEL_13:
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_14;
    }
    goto LABEL_35;
  }
  if (v18)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_35:
    v14 = &qword_253ED0CC0;
    goto LABEL_8;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_14:
  v19 = a3[5];
  v20 = &a1[v19];
  v21 = &a2[v19];
  v22 = v21[16];
  *(_OWORD *)v20 = *(_OWORD *)v21;
  v20[16] = v22;
  sub_20E39CED0();
  v23 = a3[6];
  v24 = &a1[v23];
  v25 = &a2[v23];
  *(_QWORD *)&a1[v23] = *(_QWORD *)&a2[v23];
  swift_release();
  *((_QWORD *)v24 + 1) = *((_QWORD *)v25 + 1);
  swift_release();
  if (a1 != a2)
  {
    v26 = a3[7];
    v27 = &a1[v26];
    v28 = &a2[v26];
    sub_20E39D1F8((uint64_t)&a1[v26], &qword_253ED0A28);
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v30 = sub_20E4A5384();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v27, v28, v30);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
  }
  v31 = a3[8];
  v32 = &a1[v31];
  v33 = &a2[v31];
  v34 = sub_20E4A4BA4();
  v35 = *(_QWORD *)(v34 - 8);
  v36 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 48);
  v37 = v36(v32, 1, v34);
  v38 = v36(v33, 1, v34);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v32, v33, v34);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
      goto LABEL_24;
    }
    goto LABEL_23;
  }
  if (v38)
  {
    (*(void (**)(char *, uint64_t))(v35 + 8))(v32, v34);
LABEL_23:
    v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CA0);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    goto LABEL_24;
  }
  (*(void (**)(char *, char *, uint64_t))(v35 + 40))(v32, v33, v34);
LABEL_24:
  v40 = a3[9];
  v41 = &a1[v40];
  v42 = &a2[v40];
  v43 = *((_QWORD *)v42 + 1);
  *(_QWORD *)v41 = *(_QWORD *)v42;
  swift_unknownObjectRelease();
  *((_QWORD *)v41 + 1) = v43;
  v44 = a3[10];
  v45 = &a1[v44];
  v46 = &a2[v44];
  v47 = *(_QWORD *)v46;
  LOBYTE(v46) = v46[8];
  v48 = *(_QWORD *)v45;
  v49 = v45[8];
  *(_QWORD *)v45 = v47;
  v45[8] = (char)v46;
  sub_20E39CED8(v48, v49);
  if (a1 != a2)
  {
    v50 = a3[11];
    v51 = &a1[v50];
    v52 = &a2[v50];
    sub_20E39D1F8((uint64_t)&a1[v50], &qword_253ED0A30);
    v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C80);
      v55 = *(_QWORD *)(v54 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v52, 1, v54))
      {
        v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C88);
        memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
      }
      else
      {
        v57 = *((_QWORD *)v52 + 1);
        *(_QWORD *)v51 = *(_QWORD *)v52;
        *((_QWORD *)v51 + 1) = v57;
        v58 = *(int *)(v54 + 32);
        v59 = &v51[v58];
        v60 = &v52[v58];
        v61 = sub_20E4A392C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v59, v60, v61);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v51, 0, 1, v54);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    }
  }
  v62 = a3[12];
  v63 = &a1[v62];
  v64 = &a2[v62];
  v65 = v64[16];
  v66 = v64[17];
  v67 = *(_QWORD *)v63;
  v68 = *((_QWORD *)v63 + 1);
  v69 = v63[17];
  *(_OWORD *)v63 = *(_OWORD *)v64;
  v70 = v63[16];
  v63[16] = v65;
  v63[17] = v66;
  sub_20E3A3D14(v67, v68, v70, v69);
  v71 = a3[13];
  v72 = &a1[v71];
  v73 = &a2[v71];
  *(_QWORD *)v72 = *(_QWORD *)v73;
  v72[8] = v73[8];
  *((_QWORD *)v72 + 2) = *((_QWORD *)v73 + 2);
  swift_release();
  return a1;
}

uint64_t sub_20E3BEAC4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_20E3BEAD0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0808);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if ((_DWORD)a2 == 2147483646)
  {
    v9 = *(_QWORD *)(a1 + a3[6]);
    if (v9 >= 0xFFFFFFFF)
      LODWORD(v9) = -1;
    v10 = v9 - 1;
    if (v10 < 0)
      v10 = -1;
    return (v10 + 1);
  }
  else
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A182F8);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v13 = v11;
      v14 = a3[7];
    }
    else
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CA0);
      v12 = *(_QWORD *)(v15 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v13 = v15;
        v14 = a3[8];
      }
      else
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18BE0);
        v12 = *(_QWORD *)(v13 - 8);
        v14 = a3[11];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a1 + v14, a2, v13);
  }
}

uint64_t sub_20E3BEBDC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_20E3BEBE8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0808);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 2147483646)
    {
      *(_QWORD *)(a1 + a4[6]) = a2;
      return result;
    }
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A182F8);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[7];
    }
    else
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CA0);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[8];
      }
      else
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18BE0);
        v14 = *(_QWORD *)(v10 - 8);
        v15 = a4[11];
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_20E3BECE4()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_20E3A4C54(319, &qword_253ED0810, type metadata accessor for ClickLocationConfiguration, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
  {
    sub_20E3A4C54(319, (unint64_t *)&qword_253ED2448, (uint64_t (*)(uint64_t))MEMORY[0x24BE5D6D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
    if (v1 <= 0x3F)
    {
      sub_20E3A4C54(319, &qword_253ED0CA8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5CA78], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      if (v2 <= 0x3F)
      {
        sub_20E3BEE1C();
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

void sub_20E3BEE1C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_253ED0A38)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253ED0C88);
    v0 = sub_20E4A36BC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_253ED0A38);
  }
}

unint64_t sub_20E3BEE78()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_253ED0A50;
  if (!qword_253ED0A50)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253ED0A58);
    v2[0] = sub_20E39D010(&qword_253ED0BB8, &qword_253ED0BC0, MEMORY[0x24BDEFB78]);
    v2[1] = sub_20E39F334(&qword_253ED0720, type metadata accessor for PageMetricsViewModifier.Instrumentation, (uint64_t)&unk_20E4A82B0);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_253ED0A50);
  }
  return result;
}

uint64_t sub_20E3BEF14()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E3BEF24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PageMetricsViewModifier.Instrumentation(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20E3BEF6C(char a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(type metadata accessor for PageMetricsViewModifier.Instrumentation(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(sub_20E4A5384() - 8) + 80);
  return sub_20E3BA084(a1, v1 + v4, v1 + ((v4 + v5 + v6) & ~v6));
}

uint64_t objectdestroy_24Tm()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v1 = (int *)type metadata accessor for PageMetricsViewModifier.Instrumentation(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v20 = *(_QWORD *)(v2 + 64);
  v4 = sub_20E4A5384();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = v0 + ((v3 + 16) & ~v3);
  v8 = type metadata accessor for ClickLocationConfiguration(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
  {
    v9 = sub_20E4A5114();
    v10 = *(_QWORD *)(v9 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v0 + ((v3 + 16) & ~v3), 1, v9))
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v0 + ((v3 + 16) & ~v3), v9);
  }
  sub_20E39CED0();
  swift_release();
  swift_release();
  v11 = v7 + v1[7];
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
  if (swift_getEnumCaseMultiPayload() == 1)
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v11, v4);
  else
    swift_release();
  v12 = v7 + v1[8];
  v13 = sub_20E4A4BA4();
  v14 = *(_QWORD *)(v13 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  swift_unknownObjectRelease();
  sub_20E39CED8(*(_QWORD *)(v7 + v1[10]), *(_BYTE *)(v7 + v1[10] + 8));
  v15 = v7 + v1[11];
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C80);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v15, 1, v16))
    {
      swift_release();
      swift_release();
      v17 = v15 + *(int *)(v16 + 32);
      v18 = sub_20E4A392C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
    }
  }
  else
  {
    swift_release();
  }
  sub_20E3A3D14(*(_QWORD *)(v7 + v1[12]), *(_QWORD *)(v7 + v1[12] + 8), *(unsigned __int8 *)(v7 + v1[12] + 16), *(_BYTE *)(v7 + v1[12] + 17));
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + ((((v3 + 16) & ~v3) + v20 + v6) & ~v6), v4);
  return swift_deallocObject();
}

uint64_t sub_20E3BF28C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(type metadata accessor for PageMetricsViewModifier.Instrumentation(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(sub_20E4A5384() - 8) + 80);
  return sub_20E3BA900(a1, a2, v2 + v6, v2 + ((v6 + v7 + v8) & ~v8));
}

unint64_t sub_20E3BF304()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_253ED0AA0;
  if (!qword_253ED0AA0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253ED0AA8);
    v2[0] = sub_20E3BF370();
    v2[1] = sub_20E3A5070();
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_253ED0AA0);
  }
  return result;
}

unint64_t sub_20E3BF370()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_253ED0A40;
  if (!qword_253ED0A40)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253ED0A48);
    v2[0] = sub_20E39D010(&qword_253ED0BA8, &qword_253ED0BB0, MEMORY[0x24BDEFB78]);
    v2[1] = sub_20E39D010(&qword_253ED0C28, &qword_253ED0C30, MEMORY[0x24BDF1028]);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_253ED0A40);
  }
  return result;
}

uint64_t sub_20E3BF40C()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253ED0AA8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253ED0CB8);
  sub_20E3BF304();
  sub_20E39D010(&qword_253ED0CB0, &qword_253ED0CB8, MEMORY[0x24BE5CB98]);
  return swift_getOpaqueTypeConformance2();
}

uint64_t Array.init<A, B>(initialDataFrom:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;

  v8 = sub_20E3C0A08(a1, a2, a3, a4, a5, a6);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 8))(a1, a3);
  return v8;
}

uint64_t IntentResult.data.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, uint64_t, uint64_t);
  void (*v22)(char *, char *, uint64_t);
  char *v23;
  char *v24;
  char *v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v29;
  char *v30;

  v5 = v4;
  v30 = a4;
  v6 = *(_QWORD *)(a1 + 16);
  v7 = type metadata accessor for IntentResult._State(0, v6, a2, a3);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v29 - v13;
  v15 = *(_QWORD *)(v6 - 8);
  v16 = MEMORY[0x24BDAC7A8](v12);
  v18 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v29 - v19;
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v21(v14, v5, v7);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v22 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v22(v20, v14, v6);
    v23 = v30;
    v24 = v30;
    v25 = v20;
LABEL_6:
    v22(v24, v25, v6);
    v27 = 0;
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v23, v27, 1, v6);
  }
  v26 = *(void (**)(char *, uint64_t))(v8 + 8);
  v26(v14, v7);
  v21(v11, v5, v7);
  if (!swift_getEnumCaseMultiPayload())
  {
    v22 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v22(v18, v11, v6);
    v23 = v30;
    v24 = v30;
    v25 = v18;
    goto LABEL_6;
  }
  v26(v11, v7);
  v27 = 1;
  v23 = v30;
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v23, v27, 1, v6);
}

uint64_t static IntentResult.empty.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v6 = type metadata accessor for IntentResult._State(0, a1, a2, a3);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v12 - v7;
  swift_storeEnumTagMultiPayload();
  return sub_20E3BF71C((uint64_t)v8, a1, v9, v10, a4);
}

uint64_t sub_20E3BF71C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v8 = type metadata accessor for IntentResult._State(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a5, a1, v8);
  result = type metadata accessor for IntentResult(0, a2, v9, v10);
  *(_QWORD *)(a5 + *(int *)(result + 28)) = 0;
  return result;
}

uint64_t static IntentResult.success(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v8 = type metadata accessor for IntentResult._State(0, a2, a3, a4);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v15 - v10;
  (*(void (**)(char *, uint64_t, uint64_t, double))(*(_QWORD *)(a2 - 8) + 16))((char *)&v15 - v10, a1, a2, v9);
  swift_storeEnumTagMultiPayload();
  return sub_20E3BF71C((uint64_t)v11, a2, v12, v13, a5);
}

id static IntentResult.failure(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v8 = type metadata accessor for IntentResult._State(0, a2, a3, a4);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v14 - v9;
  *(uint64_t *)((char *)&v14 - v9) = (uint64_t)a1;
  swift_storeEnumTagMultiPayload();
  sub_20E3BF71C((uint64_t)v10, a2, v11, v12, a5);
  return a1;
}

uint64_t IntentResult.init<A>(initialDataFrom:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t (*v22)(char *, uint64_t, uint64_t);
  void (*v23)(char *, uint64_t);
  char *v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  void (*v30)(char *, char *, uint64_t);
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;

  v40 = a5;
  v39 = type metadata accessor for IntentResult._State(0, a2, a3, a4);
  MEMORY[0x24BDAC7A8](v39);
  v38 = (char *)&v35 - v8;
  v9 = sub_20E4A60E0();
  v36 = *(_QWORD *)(v9 - 8);
  v37 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v35 - v13;
  v15 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v35 - v20;
  sub_20E4A4C88();
  v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (v22(v14, 1, a2) == 1)
  {
    v35 = v18;
    v23 = *(void (**)(char *, uint64_t))(v36 + 8);
    v24 = v14;
    v25 = v37;
    v23(v24, v37);
    sub_20E4A50D8();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 8))(a1, a3);
    v26 = v22(v11, 1, a2);
    v27 = v40;
    v28 = (uint64_t)v38;
    if (v26 == 1)
    {
      v23(v11, v25);
    }
    else
    {
      v30 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
      v31 = v35;
      v30(v35, v11, a2);
      v30((char *)v28, v31, a2);
    }
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 8))(a1, a3);
    v29 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v29(v21, v14, a2);
    v28 = (uint64_t)v38;
    v29(v38, v21, a2);
    v27 = v40;
  }
  swift_storeEnumTagMultiPayload();
  return sub_20E3BF71C(v28, a2, v32, v33, v27);
}

uint64_t IntentResult.init<A, B>(initialDataFrom:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t (*v22)(char *, uint64_t, uint64_t);
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  char *v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  void (*v30)(char *, char *, uint64_t);
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  char *v36;
  void (*v37)(char *, uint64_t);
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v43 = a6;
  v44 = a5;
  v42 = type metadata accessor for IntentResult._State(0, a2, a3, a4);
  MEMORY[0x24BDAC7A8](v42);
  v41 = (char *)&v35 - v10;
  v39 = sub_20E4A60E0();
  v37 = *(void (**)(char *, uint64_t))(v39 - 8);
  v11 = MEMORY[0x24BDAC7A8](v39);
  v38 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v35 - v14;
  v16 = *(_QWORD *)(a2 - 8);
  v17 = MEMORY[0x24BDAC7A8](v13);
  v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v35 - v20;
  v40 = a3;
  sub_20E4A4C7C();
  v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  if (v22(v15, 1, a2) == 1)
  {
    v23 = (void (*)(char *, uint64_t))*((_QWORD *)v37 + 1);
    v24 = v39;
    v36 = v19;
    v37 = v23;
    v23(v15, v39);
    v25 = v38;
    sub_20E4A50CC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 8))(a1, a4);
    v26 = v22(v25, 1, a2);
    v27 = v43;
    v28 = (uint64_t)v41;
    if (v26 == 1)
    {
      v37(v25, v24);
    }
    else
    {
      v30 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
      v31 = v36;
      v30(v36, v25, a2);
      v30((char *)v28, v31, a2);
    }
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 8))(a1, a4);
    v29 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
    v29(v21, v15, a2);
    v28 = (uint64_t)v41;
    v29(v41, v21, a2);
    v27 = v43;
  }
  swift_storeEnumTagMultiPayload();
  return sub_20E3BF71C(v28, a2, v32, v33, v27);
}

BOOL sub_20E3BFDB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  _BOOL8 v10;
  uint64_t v12;

  v5 = type metadata accessor for IntentResult._State(0, *(_QWORD *)(a1 + 16), a3, a4);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v12 - v8;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16))((char *)&v12 - v8, v4, v5, v7);
  v10 = swift_getEnumCaseMultiPayload() == 0;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  return v10;
}

uint64_t IntentResult.error.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;

  v5 = v4;
  v6 = type metadata accessor for IntentResult._State(0, *(_QWORD *)(a1 + 16), a3, a4);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v12 - v9;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v7 + 16))((char *)&v12 - v9, v5, v6, v8);
  if (swift_getEnumCaseMultiPayload() == 2)
    return *(_QWORD *)v10;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  return 0;
}

Swift::Void __swiftcall IntentResult.invalidate(clearing:)(Swift::Bool clearing)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  ++*(_QWORD *)(v4 + *(int *)(v1 + 28));
  if (clearing)
  {
    v5 = type metadata accessor for IntentResult._State(0, *(_QWORD *)(v1 + 16), v2, v3);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
    swift_storeEnumTagMultiPayload();
  }
}

uint64_t static IntentResult<>.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t TupleTypeMetadata2;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  char *v25;
  char *v26;
  _QWORD v28[6];

  v7 = *(_QWORD *)(a3 - 8);
  v28[4] = a4;
  v28[5] = v7;
  MEMORY[0x24BDAC7A8](a1);
  v28[3] = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v28[2] = (char *)v28 - v10;
  v13 = type metadata accessor for IntentResult._State(0, v11, v11, v12);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  MEMORY[0x24BDAC7A8](v15);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v18 = (char *)v28 - v17;
  v21 = type metadata accessor for IntentResult(0, a3, v19, v20);
  if (*(_QWORD *)(a1 + *(int *)(v21 + 28)) == *(_QWORD *)(a2 + *(int *)(v21 + 28)))
  {
    v22 = &v18[*(int *)(TupleTypeMetadata2 + 48)];
    v28[1] = v14;
    v23 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
    v24 = a1;
    v25 = v22;
    v23(v18, v24, v13);
    v23(v25, a2, v13);
    v26 = (char *)&loc_20E3C00F4 + 4 * byte_20E4A8330[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return 0;
}

uint64_t sub_20E3C0280(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static IntentResult<>.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a4 - 8));
}

uint64_t Array.init<A, B>(initialDataFrom:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[8];

  v15[2] = a2;
  v15[3] = a3;
  v15[4] = a4;
  v15[5] = a5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = type metadata accessor for IntentResult(0, AssociatedTypeWitness, v9, v10);
  v13 = sub_20E3C03FC((void (*)(char *, char *))sub_20E3C0B24, (uint64_t)v15, a3, v11, MEMORY[0x24BEE4078], a5, MEMORY[0x24BEE40A8], v12);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 8))(a1, a3);
  return v13;
}

uint64_t sub_20E3C0344@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  double v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;

  v7 = MEMORY[0x24BDAC7A8](a1);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v10 + 16))(v9, v7);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return IntentResult.init<A>(initialDataFrom:)((uint64_t)v9, AssociatedTypeWitness, a2, a3, a4);
}

uint64_t sub_20E3C03FC(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  void (*v15)(char *, char *, uint64_t);
  uint64_t AssociatedTypeWitness;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  char *v32;
  uint64_t result;
  char *v34;
  char *v35;
  char *v36;
  _QWORD v37[2];
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  void (*v50)(char *, char *, uint64_t);
  char *v51;
  char *v52;
  uint64_t v53;
  void (*v54)(char *, char *);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v40 = a8;
  v41 = a5;
  v9 = v8;
  v53 = a4;
  v54 = a1;
  v55 = a2;
  v39 = *(_QWORD *)(a5 - 8);
  v10 = MEMORY[0x24BDAC7A8](a1);
  v52 = (char *)v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v51 = (char *)v37 - v12;
  v45 = v13;
  v15 = v14;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v17 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v38 = (char *)v37 - v18;
  v19 = sub_20E4A60E0();
  v42 = *(_QWORD *)(v19 - 8);
  v43 = v19;
  v20 = MEMORY[0x24BDAC7A8](v19);
  v49 = (char *)v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)v37 - v23;
  v25 = MEMORY[0x24BDAC7A8](v22);
  v37[1] = (char *)v37 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x24BDAC7A8](v25);
  v48 = *((_QWORD *)v15 - 1);
  MEMORY[0x24BDAC7A8](v27);
  v47 = (char *)v37 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = swift_getAssociatedTypeWitness();
  v44 = *(_QWORD *)(v56 - 8);
  MEMORY[0x24BDAC7A8](v56);
  v46 = (char *)v37 - v29;
  v30 = v15;
  v31 = sub_20E4A5C90();
  v57 = sub_20E4A6218();
  v53 = sub_20E4A6224();
  sub_20E4A6200();
  (*(void (**)(char *, _QWORD, _QWORD *))(v48 + 16))(v47, v50, v15);
  v32 = v46;
  v50 = v30;
  result = sub_20E4A5C84();
  if (v31 < 0)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    return result;
  }
  if (v31)
  {
    swift_getAssociatedConformanceWitness();
    while (1)
    {
      sub_20E4A60EC();
      result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v24, 1, AssociatedTypeWitness);
      if ((_DWORD)result == 1)
        goto LABEL_18;
      v54(v24, v52);
      if (v9)
      {
        (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v56);
        swift_release();
        (*(void (**)(uint64_t, char *, uint64_t))(v39 + 32))(v40, v52, v41);
        return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v24, AssociatedTypeWitness);
      }
      v9 = 0;
      (*(void (**)(char *, uint64_t))(v17 + 8))(v24, AssociatedTypeWitness);
      sub_20E4A620C();
      if (!--v31)
      {
        v34 = v49;
        goto LABEL_9;
      }
    }
  }
  swift_getAssociatedConformanceWitness();
  v34 = v49;
LABEL_9:
  sub_20E4A60EC();
  v52 = *(char **)(v17 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v52)(v34, 1, AssociatedTypeWitness) == 1)
  {
    v35 = v49;
LABEL_14:
    (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v56);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v35, v43);
    return v57;
  }
  else
  {
    v50 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
    v36 = v38;
    v35 = v49;
    while (1)
    {
      v50(v36, v35, AssociatedTypeWitness);
      v54(v36, v51);
      if (v9)
        break;
      v9 = 0;
      (*(void (**)(char *, uint64_t))(v17 + 8))(v36, AssociatedTypeWitness);
      sub_20E4A620C();
      sub_20E4A60EC();
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v52)(v35, 1, AssociatedTypeWitness) == 1)
        goto LABEL_14;
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v36, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v56);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v39 + 32))(v40, v51, v41);
  }
}

uint64_t sub_20E3C0908@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v13;

  MEMORY[0x24BDAC7A8](a1);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v9 + 16))(v8);
  swift_getAssociatedTypeWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = swift_checkMetadataState();
  return IntentResult.init<A, B>(initialDataFrom:)((uint64_t)v8, AssociatedTypeWitness, v11, a2, a3, a4);
}

uint64_t sub_20E3C0A08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[8];

  v14[2] = a2;
  v14[3] = a3;
  v14[4] = a4;
  v14[5] = a5;
  v14[6] = a6;
  swift_getAssociatedTypeWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = type metadata accessor for IntentResult(0, AssociatedTypeWitness, v9, v10);
  return sub_20E3C03FC((void (*)(char *, char *))sub_20E3C21FC, (uint64_t)v14, a3, v11, MEMORY[0x24BEE4078], a5, MEMORY[0x24BEE40A8], v12);
}

uint64_t type metadata accessor for IntentResult._State(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for IntentResult._State);
}

uint64_t type metadata accessor for IntentResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for IntentResult);
}

unint64_t sub_20E3C0AE8()
{
  unint64_t result;

  result = qword_254A18BE8[0];
  if (!qword_254A18BE8[0])
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, qword_254A18BE8);
  }
  return result;
}

uint64_t sub_20E3C0B24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_20E3C0344(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 32), a2);
}

uint64_t sub_20E3C0B44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v5;

  result = type metadata accessor for IntentResult._State(319, *(_QWORD *)(a1 + 16), a3, a4);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

id *sub_20E3C0BBC(id *__dst, id *__src, uint64_t a3)
{
  id *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  char *v9;
  unsigned int v10;
  uint64_t v11;
  id v12;
  id v13;

  v4 = __dst;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v5 + 64) <= 8uLL)
    v6 = 8;
  else
    v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || (v6 & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v9 = (char *)*__src;
    *v4 = *__src;
    v4 = (id *)&v9[(unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8];
    swift_retain();
  }
  else
  {
    v10 = *((unsigned __int8 *)__src + v6);
    if (v10 >= 3)
    {
      if (v6 <= 3)
        v11 = v6;
      else
        v11 = 4;
      __asm { BR              X13 }
    }
    if (v10 == 2)
    {
      v12 = *__src;
      v13 = *__src;
      *v4 = v12;
      *((_BYTE *)v4 + v6) = 2;
    }
    else if (v10 == 1)
    {
      (*(void (**)(id *, id *))(v5 + 16))(__dst, __src);
      *((_BYTE *)v4 + v6) = 1;
    }
    else
    {
      (*(void (**)(id *, id *))(v5 + 16))(__dst, __src);
      *((_BYTE *)v4 + v6) = 0;
    }
    *(_QWORD *)(((unint64_t)v4 + v6 + 8) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)__src + v6 + 8) & 0xFFFFFFFFFFFFF8);
  }
  return v4;
}

_BYTE *sub_20E3C0D48(_BYTE *__dst, id *__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  id v9;
  id v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v5 + 64) <= 8uLL)
    v6 = 8;
  else
    v6 = *(_QWORD *)(v5 + 64);
  v7 = *((unsigned __int8 *)__src + v6);
  if (v7 >= 3)
  {
    if (v6 <= 3)
      v8 = v6;
    else
      v8 = 4;
    __asm { BR              X13 }
  }
  if (v7 == 2)
  {
    v9 = *__src;
    v10 = *__src;
    *(_QWORD *)__dst = v9;
    __dst[v6] = 2;
  }
  else if (v7 == 1)
  {
    (*(void (**)(_BYTE *, id *))(v5 + 16))(__dst, __src);
    __dst[v6] = 1;
  }
  else
  {
    (*(void (**)(_BYTE *, id *))(v5 + 16))(__dst, __src);
    __dst[v6] = 0;
  }
  *(_QWORD *)((unint64_t)&__dst[v6 + 8] & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)__src + v6 + 8) & 0xFFFFFFFFFFFFF8);
  return __dst;
}

id *sub_20E3C0E8C(id *__dst, id *__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  id v12;
  id v13;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  if (*(_QWORD *)(v6 + 64) <= 8uLL)
    v7 = 8;
  else
    v7 = *(_QWORD *)(v6 + 64);
  if (__dst != __src)
  {
    v8 = *((unsigned __int8 *)__dst + v7);
    if (v8 >= 3)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 2)

    else
      (*(void (**)(id *, _QWORD))(v6 + 8))(__dst, *(_QWORD *)(a3 + 16));
    v10 = *((unsigned __int8 *)__src + v7);
    if (v10 >= 3)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 2)
    {
      v12 = *__src;
      v13 = *__src;
      *__dst = v12;
      *((_BYTE *)__dst + v7) = 2;
    }
    else if (v10 == 1)
    {
      (*(void (**)(id *, id *, uint64_t))(v6 + 16))(__dst, __src, v5);
      *((_BYTE *)__dst + v7) = 1;
    }
    else
    {
      (*(void (**)(id *, id *, uint64_t))(v6 + 16))(__dst, __src, v5);
      *((_BYTE *)__dst + v7) = 0;
    }
  }
  *(_QWORD *)(((unint64_t)__dst + v7 + 8) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)__src + v7 + 8) & 0xFFFFFFFFFFFFF8);
  return __dst;
}

_BYTE *sub_20E3C1088(_BYTE *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v5 + 64) <= 8uLL)
    v6 = 8;
  else
    v6 = *(_QWORD *)(v5 + 64);
  v7 = __src[v6];
  if (v7 >= 3)
  {
    if (v6 <= 3)
      v8 = v6;
    else
      v8 = 4;
    __asm { BR              X13 }
  }
  if (v7 == 2)
  {
    *(_QWORD *)__dst = *(_QWORD *)__src;
    __dst[v6] = 2;
  }
  else if (v7 == 1)
  {
    (*(void (**)(_BYTE *, unsigned __int8 *))(v5 + 32))(__dst, __src);
    __dst[v6] = 1;
  }
  else
  {
    (*(void (**)(_BYTE *, unsigned __int8 *))(v5 + 32))(__dst, __src);
    __dst[v6] = 0;
  }
  *(_QWORD *)((unint64_t)&__dst[v6 + 8] & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((unint64_t)&__src[v6 + 8] & 0xFFFFFFFFFFFFF8);
  return __dst;
}

id *sub_20E3C11C4(id *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  if (*(_QWORD *)(v6 + 64) <= 8uLL)
    v7 = 8;
  else
    v7 = *(_QWORD *)(v6 + 64);
  if (__dst != (id *)__src)
  {
    v8 = *((unsigned __int8 *)__dst + v7);
    if (v8 >= 3)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 2)

    else
      (*(void (**)(id *, _QWORD))(v6 + 8))(__dst, *(_QWORD *)(a3 + 16));
    v10 = __src[v7];
    if (v10 >= 3)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 2)
    {
      *__dst = *(id *)__src;
      *((_BYTE *)__dst + v7) = 2;
    }
    else if (v10 == 1)
    {
      (*(void (**)(id *, unsigned __int8 *, uint64_t))(v6 + 32))(__dst, __src, v5);
      *((_BYTE *)__dst + v7) = 1;
    }
    else
    {
      (*(void (**)(id *, unsigned __int8 *, uint64_t))(v6 + 32))(__dst, __src, v5);
      *((_BYTE *)__dst + v7) = 0;
    }
  }
  *(_QWORD *)(((unint64_t)__dst + v7 + 8) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((unint64_t)&__src[v7 + 8] & 0xFFFFFFFFFFFFF8);
  return __dst;
}

uint64_t sub_20E3C13B8(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  unsigned int v5;
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  int v11;
  unsigned int v12;

  v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (v3 <= 8)
    v3 = 8;
  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_23;
  v4 = (v3 & 0xFFFFFFFFFFFFFFF8) + 16;
  v5 = a2 - 251;
  v6 = v4 & 0xFFFFFFF8;
  if ((v4 & 0xFFFFFFF8) != 0)
    v5 = 2;
  if (v5 >= 0x10000)
    v7 = 4;
  else
    v7 = 2;
  if (v5 < 0x100)
    v8 = 1;
  else
    v8 = v7;
  if (v8 == 4)
  {
    v9 = *(_DWORD *)((char *)a1 + v4);
    if (!v9)
      goto LABEL_23;
  }
  else if (v8 == 2)
  {
    v9 = *(unsigned __int16 *)((char *)a1 + v4);
    if (!v9)
    {
LABEL_23:
      v12 = *((unsigned __int8 *)a1 + v3);
      if (v12 >= 4)
        return (v12 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  else
  {
    v9 = *((unsigned __int8 *)a1 + v4);
    if (!v9)
      goto LABEL_23;
  }
  v11 = v9 - 1;
  if (v6)
  {
    v11 = 0;
    LODWORD(v6) = *a1;
  }
  return (v6 | v11) + 253;
}

void sub_20E3C1470(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  unsigned int v6;
  int v7;
  int v8;
  unsigned int v9;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  if (v5 <= 8)
    v5 = 8;
  if (a3 < 0xFD)
  {
    v8 = 0;
    if (a2 > 0xFC)
      goto LABEL_13;
  }
  else
  {
    v6 = a3 - 251;
    if ((v5 & 0xFFFFFFF8) != 0xFFFFFFF0)
      v6 = 2;
    if (v6 >= 0x10000)
      v7 = 4;
    else
      v7 = 2;
    if (v6 < 0x100)
      v8 = 1;
    else
      v8 = v7;
    if (a2 > 0xFC)
    {
LABEL_13:
      if ((v5 & 0xFFFFFFF8) != 0xFFFFFFF0)
      {
        v9 = a2 - 253;
        bzero(a1, (v5 & 0xFFFFFFFFFFFFFFF8) + 16);
        *a1 = v9;
      }
      __asm { BR              X10 }
    }
  }
  __asm { BR              X11 }
}

void sub_20E3C1548(int a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v2 + v3) = 0;
  if (a1)
    *(_BYTE *)(v2 + a2) = -(char)a1;
}

void sub_20E3C1570(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x20E3C1564);
}

uint64_t sub_20E3C1598()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

id *sub_20E3C160C(id *__dst, id *a2, uint64_t a3)
{
  id *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  char *v8;
  unsigned int v10;
  uint64_t v11;
  id v12;
  id v13;

  v3 = __dst;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    v8 = (char *)*a2;
    *v3 = *a2;
    v3 = (id *)&v8[(unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8];
    swift_retain();
  }
  else
  {
    v10 = *((unsigned __int8 *)a2 + v5);
    if (v10 >= 3)
    {
      if (v5 <= 3)
        v11 = v5;
      else
        v11 = 4;
      __asm { BR              X14 }
    }
    if (v10 == 2)
    {
      v12 = *a2;
      v13 = *a2;
      *v3 = v12;
      *((_BYTE *)v3 + v5) = 2;
    }
    else if (v10 == 1)
    {
      (*(void (**)(id *))(v4 + 16))(__dst);
      *((_BYTE *)v3 + v5) = 1;
    }
    else
    {
      (*(void (**)(id *))(v4 + 16))(__dst);
      *((_BYTE *)v3 + v5) = 0;
    }
  }
  return v3;
}

void sub_20E3C1764(id *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unsigned int v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  if (v3 <= 8)
    v3 = 8;
  v4 = *((unsigned __int8 *)a1 + v3);
  if (v4 < 3)
  {
    if (v4 == 2)

    else
      (*(void (**)(void))(v2 + 8))();
  }
  else
  {
    if (v3 <= 3)
      v5 = v3;
    else
      v5 = 4;
    ((void (*)(void))((char *)&loc_20E3C17AC + 4 * byte_20E4A8366[v5]))();
  }
}

_BYTE *sub_20E3C1814(_BYTE *__dst, id *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  id v8;
  id v9;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 >= 3)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 2)
  {
    v8 = *a2;
    v9 = *a2;
    *(_QWORD *)__dst = v8;
    __dst[v5] = 2;
  }
  else if (v6 == 1)
  {
    (*(void (**)(_BYTE *))(v4 + 16))(__dst);
    __dst[v5] = 1;
  }
  else
  {
    (*(void (**)(_BYTE *))(v4 + 16))(__dst);
    __dst[v5] = 0;
  }
  return __dst;
}

id *sub_20E3C192C(id *__dst, void **__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  void *v12;
  id v13;

  if (__dst != __src)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 8uLL)
      v7 = 8;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *((unsigned __int8 *)__dst + v7);
    if (v8 >= 3)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 2)

    else
      (*(void (**)(id *, _QWORD))(v6 + 8))(__dst, *(_QWORD *)(a3 + 16));
    v10 = *((unsigned __int8 *)__src + v7);
    if (v10 >= 3)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 2)
    {
      v12 = *__src;
      v13 = v12;
      *__dst = v12;
      *((_BYTE *)__dst + v7) = 2;
    }
    else if (v10 == 1)
    {
      (*(void (**)(id *, void **, uint64_t))(v6 + 16))(__dst, __src, v5);
      *((_BYTE *)__dst + v7) = 1;
    }
    else
    {
      (*(void (**)(id *, void **, uint64_t))(v6 + 16))(__dst, __src, v5);
      *((_BYTE *)__dst + v7) = 0;
    }
  }
  return __dst;
}

_BYTE *sub_20E3C1B0C(_BYTE *__dst, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 >= 3)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 2)
  {
    *(_QWORD *)__dst = *a2;
    __dst[v5] = 2;
  }
  else if (v6 == 1)
  {
    (*(void (**)(_BYTE *))(v4 + 32))(__dst);
    __dst[v5] = 1;
  }
  else
  {
    (*(void (**)(_BYTE *))(v4 + 32))(__dst);
    __dst[v5] = 0;
  }
  return __dst;
}

id *sub_20E3C1C14(id *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;

  if (__dst != (id *)__src)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 8uLL)
      v7 = 8;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *((unsigned __int8 *)__dst + v7);
    if (v8 >= 3)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 2)

    else
      (*(void (**)(id *, _QWORD))(v6 + 8))(__dst, *(_QWORD *)(a3 + 16));
    v10 = __src[v7];
    if (v10 >= 3)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 2)
    {
      *__dst = *(id *)__src;
      *((_BYTE *)__dst + v7) = 2;
    }
    else if (v10 == 1)
    {
      (*(void (**)(id *, unsigned __int8 *, uint64_t))(v6 + 32))(__dst, __src, v5);
      *((_BYTE *)__dst + v7) = 1;
    }
    else
    {
      (*(void (**)(id *, unsigned __int8 *, uint64_t))(v6 + 32))(__dst, __src, v5);
      *((_BYTE *)__dst + v7) = 0;
    }
  }
  return __dst;
}

uint64_t sub_20E3C1DEC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  int v6;
  unsigned int v8;
  int v9;
  unsigned int v10;

  v3 = 8;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) > 8uLL)
    v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_21;
  v4 = v3 + 1;
  v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    v8 = ((a2 + ~(-1 << v5) - 252) >> v5) + 1;
    if (HIWORD(v8))
    {
      v6 = *(_DWORD *)(a1 + v4);
      if (!v6)
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 > 0xFF)
    {
      v6 = *(unsigned __int16 *)(a1 + v4);
      if (!*(_WORD *)(a1 + v4))
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 < 2)
    {
LABEL_21:
      v10 = *(unsigned __int8 *)(a1 + v3);
      if (v10 >= 4)
        return (v10 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v6 = *(unsigned __int8 *)(a1 + v4);
  if (!*(_BYTE *)(a1 + v4))
    goto LABEL_21;
LABEL_14:
  v9 = (v6 - 1) << v5;
  if (v4 > 3)
    v9 = 0;
  if (!(_DWORD)v4)
    return (v9 + 253);
  if (v4 > 3)
    LODWORD(v4) = 4;
  return ((uint64_t (*)(void))((char *)&loc_20E3C1EB0 + 4 * byte_20E4A8389[(v4 - 1)]))();
}

void sub_20E3C1EFC(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  size_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  if (v5 <= 8)
    v5 = 8;
  v6 = v5 + 1;
  if (a3 < 0xFD)
  {
    v7 = 0;
  }
  else if (v6 <= 3)
  {
    v9 = ((a3 + ~(-1 << (8 * v6)) - 252) >> (8 * v6)) + 1;
    if (HIWORD(v9))
    {
      v7 = 4u;
    }
    else if (v9 >= 0x100)
    {
      v7 = 2;
    }
    else
    {
      v7 = v9 > 1;
    }
  }
  else
  {
    v7 = 1u;
  }
  if (a2 <= 0xFC)
    __asm { BR              X11 }
  v8 = a2 - 253;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      v10 = v8 & ~(-1 << (8 * v6));
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v10;
        *((_BYTE *)a1 + 2) = BYTE2(v10);
      }
      else if ((_DWORD)v6 == 2)
      {
        *a1 = v10;
      }
      else
      {
        *(_BYTE *)a1 = v10;
      }
    }
  }
  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v8;
  }
  __asm { BR              X10 }
}

uint64_t sub_20E3C20A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = 8;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64) > 8uLL)
    v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64);
  if (*(unsigned __int8 *)(a1 + v2) < 3u)
    return *(unsigned __int8 *)(a1 + v2);
  if (v2 <= 3)
    v3 = v2;
  else
    v3 = 4;
  return ((uint64_t (*)(void))((char *)&loc_20E3C20EC + 4 * byte_20E4A8397[v3]))();
}

void sub_20E3C2134(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  size_t v4;
  unsigned int v5;
  unsigned int v6;
  int v7;

  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) <= 8uLL)
    v4 = 8;
  else
    v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (a2 > 2)
  {
    v5 = a2 - 3;
    if (v4 < 4)
    {
      v6 = v5 >> (8 * v4);
      v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 3;
      bzero(a1, v4);
      if ((_DWORD)v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if ((_DWORD)v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 3;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

uint64_t sub_20E3C21FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_20E3C0908(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 32), a2);
}

uint64_t sub_20E3C2220(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  void (*v24)(char *, uint64_t);
  double v25;
  CGFloat v26;
  double v27;
  CGFloat v28;
  double v29;
  CGFloat v30;
  double v31;
  CGFloat v32;
  uint64_t v34;
  uint64_t v35;
  CGRect v36;
  CGRect v37;

  v2 = sub_20E4A39A4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_20E4A3E6C();
  v35 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18228);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_20E4A3818();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20E3C24C4(a1, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_20E3C250C((uint64_t)v11);
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BDECDE8], v2);
    sub_20E4A37E8();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
    sub_20E4A3F08();
    sub_20E4A380C();
    v17 = v16;
    v19 = v18;
    v21 = v20;
    v23 = v22;
    v24 = *(void (**)(char *, uint64_t))(v35 + 8);
    v24(v8, v6);
    sub_20E4A3F08();
    sub_20E4A380C();
    v26 = v25;
    v28 = v27;
    v30 = v29;
    v32 = v31;
    v24(v8, v6);
    v36.origin.x = v17;
    v36.origin.y = v19;
    v36.size.width = v21;
    v36.size.height = v23;
    v37.origin.x = v26;
    v37.origin.y = v28;
    v37.size.width = v30;
    v37.size.height = v32;
    CGRectIntersection(v36, v37);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  sub_20E4A37F4();
  return sub_20E4A37F4();
}

uint64_t sub_20E3C24C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18228);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20E3C250C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18228);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t _ComponentContentByType.init()()
{
  return MEMORY[0x24BEE4B00];
}

uint64_t _ComponentContentByType._adding<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t *boxed_opaque_existential_1Tm;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[24];
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;

  v8 = sub_20E4A4E68();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getAssociatedTypeWitness();
  swift_bridgeObjectRetain();
  sub_20E4A4E74();
  v25 = a3;
  v26 = a4;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)&v24);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(boxed_opaque_existential_1Tm, a1, a3);
  sub_20E3B1AB4(&v24, (uint64_t)v22);
  LOBYTE(a1) = swift_isUniquelyReferenced_nonNull_native();
  v21 = a2;
  v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, v23);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v17 + 16))(v16, v14);
  sub_20E3C3720((uint64_t)v16, (uint64_t)v11, a1, &v21, a3, a4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  v18 = v21;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v18;
}

uint64_t _ComponentContentByType._merging(_:)(uint64_t a1, uint64_t a2)
{
  char isUniquelyReferenced_nonNull_native;
  uint64_t v5;
  uint64_t v7;

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = a2;
  sub_20E3C30A0(a1, (uint64_t)sub_20E3C3024, 0, isUniquelyReferenced_nonNull_native, &v7);
  v5 = v7;
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t _ComponentContentByType.registry.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*_ComponentContentByType.registry.modify())()
{
  return nullsub_1;
}

uint64_t _ComponentContentByType.body(withContentsOf:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t *boxed_opaque_existential_1Tm;
  unint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  __int128 v29;
  __int128 v30;
  uint64_t (*v31)();
  uint64_t v32;
  uint64_t v33[3];
  uint64_t v34;

  v6 = sub_20E4A4E68();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a1[3];
  v11 = __swift_project_boxed_opaque_existential_1(a1, v10);
  v34 = v10;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v33);
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(boxed_opaque_existential_1Tm, v11, v10);
  sub_20E4A4E5C();
  if (*(_QWORD *)(a2 + 16) && (v13 = sub_20E3BCCAC((uint64_t)v9), (v14 & 1) != 0))
  {
    sub_20E3C39FC(*(_QWORD *)(a2 + 56) + 40 * v13, (uint64_t)&v29);
  }
  else
  {
    v31 = 0;
    v29 = 0u;
    v30 = 0u;
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v15 = *((_QWORD *)&v30 + 1);
  if (!*((_QWORD *)&v30 + 1))
  {
    sub_20E39D1F8((uint64_t)&v29, &qword_254A18CF0);
    sub_20E3C39FC((uint64_t)a1, (uint64_t)v33);
LABEL_9:
    *(_QWORD *)&v29 = 0;
    *((_QWORD *)&v29 + 1) = 0xE000000000000000;
    sub_20E4A61A0();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v29 = 0xD00000000000001CLL;
    *((_QWORD *)&v29 + 1) = 0x800000020E4CAE50;
    __swift_project_boxed_opaque_existential_1(v33, v34);
    swift_getDynamicType();
    sub_20E4A6458();
    sub_20E4A5C6C();
    swift_bridgeObjectRelease();
    sub_20E4A5C6C();
    v18 = *((_QWORD *)&v29 + 1);
    v19 = v29;
    sub_20E3C3948();
    swift_bridgeObjectRetain();
    v20 = sub_20E4A41C0();
    v22 = v21;
    v24 = v23;
    v26 = v25;
    v27 = swift_allocObject();
    *(_QWORD *)(v27 + 16) = v19;
    *(_QWORD *)(v27 + 24) = v18;
    *(_QWORD *)&v29 = v20;
    *((_QWORD *)&v29 + 1) = v22;
    LOBYTE(v30) = v24 & 1;
    *((_QWORD *)&v30 + 1) = v26;
    v31 = sub_20E3A5260;
    v32 = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254A18D00);
    sub_20E3C39B0();
    v17 = sub_20E4A4718();
    goto LABEL_10;
  }
  v16 = (uint64_t)v31;
  __swift_project_boxed_opaque_existential_1(&v29, *((uint64_t *)&v30 + 1));
  v17 = Component.trySetModel(to:)((uint64_t)a1, v15, v16);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v29);
  sub_20E3C39FC((uint64_t)a1, (uint64_t)v33);
  if (!v17)
    goto LABEL_9;
LABEL_10:
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  *a3 = v17;
  return result;
}

uint64_t Component.trySetModel(to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  int v19;
  void (*v20)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[2];
  _BYTE v31[40];

  v29 = a1;
  v28 = a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  type metadata accessor for DataObjectBox(255, AssociatedTypeWitness, v5, v6);
  sub_20E4A60E0();
  v7 = sub_20E4A3FF8();
  v8 = sub_20E4A39D4();
  v27 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v26 - v9;
  v11 = sub_20E4A60E0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v26 - v13;
  v15 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v26 - v17;
  sub_20E3C39FC(v29, (uint64_t)v31);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A18D10);
  v19 = swift_dynamicCast();
  v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  if (v19)
  {
    v20(v14, 0, 1, AssociatedTypeWitness);
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v14, AssociatedTypeWitness);
    v21 = v28;
    Component.model(_:)((uint64_t)v18, a2);
    v22 = *(_QWORD *)(v21 + 8);
    v23 = MEMORY[0x212BBDF90](MEMORY[0x24BDF1028], v7);
    v30[0] = v22;
    v30[1] = v23;
    MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v8, v30);
    v24 = sub_20E3C3B10((uint64_t)v10);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v8);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, AssociatedTypeWitness);
  }
  else
  {
    v20(v14, 1, 1, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    return 0;
  }
  return v24;
}

uint64_t sub_20E3C2C80@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;

  return _ComponentContentByType.body(withContentsOf:)(a1, *v2, a2);
}

uint64_t _ComponentContentN.init<A>(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 - 8);
  v5 = MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v4 + 16))((char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a2, v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A18D18);
  v7 = sub_20E4A5DA4();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, a2);
  return v7;
}

uint64_t _ComponentContentN.body(withContentsOf:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  _OWORD v29[2];
  _QWORD v30[3];
  uint64_t v31;
  uint64_t v32;
  _OWORD v33[3];
  char v34;

  sub_20E3C39FC((uint64_t)a1, (uint64_t)v33);
  sub_20E3C39FC((uint64_t)a1, (uint64_t)&v27);
  v6 = *(_QWORD *)(a2 + 16);
  if (!v6)
  {
    swift_bridgeObjectRetain();
LABEL_8:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v27);
    *(_QWORD *)&v33[0] = 0;
    *((_QWORD *)&v33[0] + 1) = 0xE000000000000000;
    sub_20E4A61A0();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v33[0] = 0xD00000000000001BLL;
    *((_QWORD *)&v33[0] + 1) = 0x800000020E4CAE70;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    swift_getDynamicType();
    sub_20E4A6458();
    sub_20E4A5C6C();
    swift_bridgeObjectRelease();
    sub_20E4A5C6C();
    v13 = v33[0];
    sub_20E3C3948();
    swift_bridgeObjectRetain();
    v14 = sub_20E4A41C0();
    v16 = v15;
    v18 = v17;
    v20 = v19 & 1;
    v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = v13;
    v27 = v14;
    *(_QWORD *)&v28 = v16;
    *((_QWORD *)&v28 + 1) = v20;
    *(_QWORD *)&v29[0] = v18;
    *((_QWORD *)&v29[0] + 1) = sub_20E3C3C6C;
    *(_QWORD *)&v29[1] = v21;
    BYTE8(v29[1]) = 1;
LABEL_9:
    __swift_instantiateConcreteTypeFromMangledName(&qword_254A18D00);
    sub_20E3C39B0();
    result = sub_20E4A3DF4();
    v22 = v34;
    v23 = v33[1];
    *(_OWORD *)a3 = v33[0];
    *(_OWORD *)(a3 + 16) = v23;
    *(_OWORD *)(a3 + 32) = v33[2];
    *(_BYTE *)(a3 + 48) = v22;
    return result;
  }
  v7 = a2 + 32;
  swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    sub_20E3C39FC(v7, (uint64_t)v30);
    v9 = v31;
    v10 = v32;
    __swift_project_boxed_opaque_existential_1(v30, v31);
    swift_bridgeObjectRetain();
    v11 = Component.trySetModel(to:)((uint64_t)&v27, v9, v10);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
    swift_bridgeObjectRelease();
    result = swift_release();
    if (v11)
      break;
    ++v8;
    v7 += 40;
    if (v6 == v8)
      goto LABEL_8;
  }
  if (v6 == v8)
    goto LABEL_8;
  if (v8 >= v6)
  {
    __break(1u);
  }
  else
  {
    sub_20E3C39FC(v7, (uint64_t)v30);
    v24 = v31;
    v25 = v32;
    __swift_project_boxed_opaque_existential_1(v30, v31);
    v26 = Component.trySetModel(to:)((uint64_t)v33, v24, v25);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
    if (v26)
    {
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v27);
      v27 = v26;
      v28 = 0u;
      memset(v29, 0, 25);
      goto LABEL_9;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_20E3C301C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return _ComponentContentN.body(withContentsOf:)(a1, *v2, a2);
}

uint64_t sub_20E3C3024@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254A18D30) + 48);
  v5 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254A18D38) + 48);
  v6 = sub_20E4A4E68();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, a1, v6);
  return sub_20E3C39FC(v4, v5);
}

uint64_t sub_20E3C30A0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  __int128 *v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  uint64_t v29;
  _BOOL8 v30;
  uint64_t v31;
  char v32;
  unint64_t v33;
  char v34;
  _QWORD *v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  _QWORD v39[3];
  __int128 v40[2];
  __int128 v41[2];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v10 = sub_20E4A4E68();
  v49 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18D40);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = -1 << *(_BYTE *)(a1 + 32);
  v17 = ~v16;
  v18 = *(_QWORD *)(a1 + 64);
  v19 = -v16;
  v42 = a1;
  v43 = a1 + 64;
  if (v19 < 64)
    v20 = ~(-1 << v19);
  else
    v20 = -1;
  v44 = v17;
  v45 = 0;
  v46 = v20 & v18;
  v47 = a2;
  v48 = a3;
  v39[2] = a1;
  swift_bridgeObjectRetain();
  v39[1] = a3;
  swift_retain();
  sub_20E3C33DC((uint64_t)v15);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18D38);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v15, 1, v21) == 1)
  {
LABEL_5:
    swift_release();
    swift_bridgeObjectRelease();
    sub_20E3C3C60();
    return swift_release();
  }
  v23 = *(void (**)(char *, char *, uint64_t))(v49 + 32);
  while (1)
  {
    v25 = (__int128 *)&v15[*(int *)(v21 + 48)];
    v23(v12, v15, v10);
    sub_20E3B1AB4(v25, (uint64_t)v41);
    v26 = *a5;
    v28 = sub_20E3BCCAC((uint64_t)v12);
    v29 = *(_QWORD *)(v26 + 16);
    v30 = (v27 & 1) == 0;
    v31 = v29 + v30;
    if (__OFADD__(v29, v30))
      break;
    v32 = v27;
    if (*(_QWORD *)(v26 + 24) >= v31)
    {
      if ((a4 & 1) != 0)
      {
        if ((v27 & 1) != 0)
          goto LABEL_7;
      }
      else
      {
        sub_20E3CA8F0();
        if ((v32 & 1) != 0)
          goto LABEL_7;
      }
    }
    else
    {
      sub_20E3C8DB8(v31, a4 & 1);
      v33 = sub_20E3BCCAC((uint64_t)v12);
      if ((v32 & 1) != (v34 & 1))
        goto LABEL_22;
      v28 = v33;
      if ((v32 & 1) != 0)
      {
LABEL_7:
        sub_20E3C39FC((uint64_t)v41, (uint64_t)v40);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
        (*(void (**)(char *, uint64_t))(v49 + 8))(v12, v10);
        v24 = *(_QWORD *)(*a5 + 56) + 40 * v28;
        __swift_destroy_boxed_opaque_existential_1(v24);
        sub_20E3B1AB4(v40, v24);
        goto LABEL_8;
      }
    }
    v35 = (_QWORD *)*a5;
    *(_QWORD *)(*a5 + 8 * (v28 >> 6) + 64) |= 1 << v28;
    v23((char *)(v35[6] + *(_QWORD *)(v49 + 72) * v28), v12, v10);
    sub_20E3B1AB4(v41, v35[7] + 40 * v28);
    v36 = v35[2];
    v37 = __OFADD__(v36, 1);
    v38 = v36 + 1;
    if (v37)
      goto LABEL_21;
    v35[2] = v38;
LABEL_8:
    sub_20E3C33DC((uint64_t)v15);
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18D38);
    a4 = 1;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v15, 1, v21) == 1)
      goto LABEL_5;
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  result = sub_20E4A638C();
  __break(1u);
  return result;
}

void sub_20E3C33DC(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  void (*v26)(uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  int64_t v31;
  unint64_t v32;
  int64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18D30);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(qword_254A18D48);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v35 - v11;
  v13 = *v1;
  v14 = v1[1];
  v15 = v1[2];
  v16 = v1[3];
  v17 = v1[4];
  v35 = v6;
  v38 = v15;
  if (v17)
  {
    v36 = v14;
    v37 = v16;
    v18 = v4;
    v19 = a1;
    v20 = (v17 - 1) & v17;
    v21 = __clz(__rbit64(v17)) | (v16 << 6);
LABEL_3:
    v22 = *(_QWORD *)(v13 + 48);
    v23 = sub_20E4A4E68();
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v12, v22 + *(_QWORD *)(*(_QWORD *)(v23 - 8) + 72) * v21, v23);
    sub_20E3C39FC(*(_QWORD *)(v13 + 56) + 40 * v21, (uint64_t)&v12[*(int *)(v3 + 48)]);
    v24 = 0;
    a1 = v19;
    v4 = v18;
    v14 = v36;
    goto LABEL_4;
  }
  v30 = v16 + 1;
  if (__OFADD__(v16, 1))
  {
    __break(1u);
    return;
  }
  v31 = (unint64_t)(v15 + 64) >> 6;
  if (v30 >= v31)
  {
    v37 = v16;
    v20 = 0;
    v24 = 1;
    goto LABEL_4;
  }
  v32 = *(_QWORD *)(v14 + 8 * v30);
  if (v32)
  {
LABEL_11:
    v36 = v14;
    v37 = v30;
    v18 = v4;
    v19 = a1;
    v20 = (v32 - 1) & v32;
    v21 = __clz(__rbit64(v32)) + (v30 << 6);
    goto LABEL_3;
  }
  v33 = v16 + 2;
  if (v16 + 2 >= v31)
    goto LABEL_27;
  v32 = *(_QWORD *)(v14 + 8 * v33);
  if (v32)
  {
LABEL_15:
    v30 = v33;
    goto LABEL_11;
  }
  if (v16 + 3 >= v31)
    goto LABEL_28;
  v32 = *(_QWORD *)(v14 + 8 * (v16 + 3));
  if (v32)
  {
    v30 = v16 + 3;
    goto LABEL_11;
  }
  v33 = v16 + 4;
  if (v16 + 4 < v31)
  {
    v32 = *(_QWORD *)(v14 + 8 * v33);
    if (v32)
      goto LABEL_15;
    v30 = v16 + 5;
    if (v16 + 5 < v31)
    {
      v32 = *(_QWORD *)(v14 + 8 * v30);
      if (v32)
        goto LABEL_11;
      v30 = v31 - 1;
      v34 = v16 + 6;
      while (v31 != v34)
      {
        v32 = *(_QWORD *)(v14 + 8 * v34++);
        if (v32)
        {
          v30 = v34 - 1;
          goto LABEL_11;
        }
      }
LABEL_27:
      v20 = 0;
      v24 = 1;
      v37 = v30;
      goto LABEL_4;
    }
LABEL_28:
    v20 = 0;
    v24 = 1;
    v37 = v33;
    goto LABEL_4;
  }
  v20 = 0;
  v24 = 1;
  v37 = v16 + 3;
LABEL_4:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v12, v24, 1, v3);
  *v1 = v13;
  v1[1] = v14;
  v25 = v37;
  v1[2] = v38;
  v1[3] = v25;
  v1[4] = v20;
  v26 = (void (*)(uint64_t))v1[5];
  sub_20E3BB440((uint64_t)v12, (uint64_t)v9, qword_254A18D48);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3) == 1)
  {
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18D38);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(a1, 1, 1, v27);
  }
  else
  {
    v28 = (uint64_t)v35;
    sub_20E3BB440((uint64_t)v9, (uint64_t)v35, &qword_254A18D30);
    v26(v28);
    sub_20E39D1F8(v28, &qword_254A18D30);
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18D38);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(a1, 0, 1, v29);
  }
}

uint64_t sub_20E3C3720(uint64_t a1, uint64_t a2, char a3, _QWORD *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t *boxed_opaque_existential_1Tm;
  _QWORD *v17;
  char v18;
  unint64_t v19;
  uint64_t v20;
  _BOOL8 v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t result;
  unint64_t v28;
  char v29;
  uint64_t v30;
  double v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;

  v12 = sub_20E4A4E68();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = a5;
  v38 = a6;
  v35 = a6;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)&v36);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 32))(boxed_opaque_existential_1Tm, a1, a5);
  v17 = (_QWORD *)*a4;
  v19 = sub_20E3BCCAC(a2);
  v20 = v17[2];
  v21 = (v18 & 1) == 0;
  v22 = v20 + v21;
  if (__OFADD__(v20, v21))
  {
    __break(1u);
    goto LABEL_14;
  }
  v23 = v18;
  v24 = v17[3];
  if (v24 >= v22 && (a3 & 1) != 0)
  {
LABEL_7:
    v25 = (_QWORD *)*a4;
    if ((v23 & 1) != 0)
    {
LABEL_8:
      v26 = v25[7] + 40 * v19;
      __swift_destroy_boxed_opaque_existential_1(v26);
      return sub_20E3B1AB4(&v36, v26);
    }
    goto LABEL_11;
  }
  if (v24 >= v22 && (a3 & 1) == 0)
  {
    sub_20E3CA8F0();
    goto LABEL_7;
  }
  sub_20E3C8DB8(v22, a3 & 1);
  v28 = sub_20E3BCCAC(a2);
  if ((v23 & 1) != (v29 & 1))
  {
LABEL_14:
    result = sub_20E4A638C();
    __break(1u);
    return result;
  }
  v19 = v28;
  v25 = (_QWORD *)*a4;
  if ((v23 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a2, v12);
  v30 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v36, v37);
  v31 = MEMORY[0x24BDAC7A8](v30);
  v33 = (char *)&v35 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v34 + 16))(v33, v31);
  sub_20E3C3A40(v19, (uint64_t)v15, (uint64_t)v33, v25, a5, v35);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v36);
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

unint64_t sub_20E3C3948()
{
  unint64_t result;

  result = qword_254A18CF8;
  if (!qword_254A18CF8)
  {
    result = MEMORY[0x212BBDF90](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_254A18CF8);
  }
  return result;
}

uint64_t sub_20E3C398C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_20E3C39B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254A18D08;
  if (!qword_254A18D08)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A18D00);
    result = MEMORY[0x212BBDF90](&protocol conformance descriptor for _RequirementFailureView<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_254A18D08);
  }
  return result;
}

uint64_t sub_20E3C39FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_20E3C3A40(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6)
{
  uint64_t *boxed_opaque_existential_1Tm;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;

  v19 = a5;
  v20 = a6;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)&v18);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 32))(boxed_opaque_existential_1Tm, a3, a5);
  a4[(a1 >> 6) + 8] |= 1 << a1;
  v12 = a4[6];
  v13 = sub_20E4A4E68();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v12 + *(_QWORD *)(*(_QWORD *)(v13 - 8) + 72) * a1, a2, v13);
  result = sub_20E3B1AB4(&v18, a4[7] + 40 * a1);
  v15 = a4[2];
  v16 = __OFADD__(v15, 1);
  v17 = v15 + 1;
  if (v16)
    __break(1u);
  else
    a4[2] = v17;
  return result;
}

uint64_t sub_20E3C3B10(uint64_t a1)
{
  double v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v1 = MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *, double))(v3 + 16))((char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v1);
  return sub_20E4A4718();
}

uint64_t sub_20E3C3B8C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E3C3B9C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t dispatch thunk of ComponentContent.body(withContentsOf:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

ValueMetadata *type metadata accessor for ComponentContentBuilder()
{
  return &type metadata for ComponentContentBuilder;
}

ValueMetadata *type metadata accessor for _ComponentContentByType()
{
  return &type metadata for _ComponentContentByType;
}

ValueMetadata *type metadata accessor for _ComponentContentN()
{
  return &type metadata for _ComponentContentN;
}

uint64_t sub_20E3C3BE4()
{
  return MEMORY[0x24BDF4760];
}

unint64_t sub_20E3C3BF4()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_254A18D20;
  if (!qword_254A18D20)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A18D28);
    v2 = sub_20E3C39B0();
    v3[0] = MEMORY[0x24BDF4760];
    v3[1] = v2;
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_254A18D20);
  }
  return result;
}

uint64_t sub_20E3C3C60()
{
  return swift_release();
}

uint64_t sub_20E3C3C70(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  swift_getAssociatedTypeWitness();
  v2 = sub_20E4A60E0();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v8 - v5;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16))((char *)&v8 - v5, a1, v2, v4);
  sub_20E4405E4((uint64_t)v6, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

uint64_t sub_20E3C3D34(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = sub_20E4A60E0();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v10 - v6;
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v8 + 16))((char *)&v10 - v6, a1, AssociatedTypeWitness, v5);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v7, 0, 1, AssociatedTypeWitness);
  sub_20E3C49B8((uint64_t)v7);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t sub_20E3C3E14()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_20E4A35CC();
  swift_release();
  return swift_release();
}

uint64_t sub_20E3C3EB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 112);
  swift_getAssociatedTypeWitness();
  sub_20E4A60E0();
  v2 = sub_20E4A35E4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_20E3C3F2C()
{
  sub_20E3C3EB8();
  return swift_deallocClassInstance();
}

uint64_t sub_20E3C3F4C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_20E4A3584();
  *a1 = result;
  return result;
}

void Observe.init(_:content:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v12;

  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a4;
  v12[3] = a5;
  v12[4] = a6;
  v12[5] = a7;
  v12[6] = a1;
  type metadata accessor for Observe.Coordinator();
}

{
  _QWORD *v14;

  v14 = (_QWORD *)swift_allocObject();
  v14[2] = a4;
  v14[3] = a5;
  v14[4] = a6;
  v14[5] = a7;
  v14[6] = a2;
  v14[7] = a3;
  Observe.init(_:content:)(a1, (uint64_t)sub_20E3C427C, (uint64_t)v14, a4, a5, a6, a7);
}

uint64_t sub_20E3C3FEC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char v6;

  MEMORY[0x212BBDF90](&unk_20E4A85B0, a1);
  result = sub_20E4A36E0();
  *(_QWORD *)v3 = result;
  *(_QWORD *)(v3 + 8) = v5;
  *(_BYTE *)(v3 + 16) = v6 & 1;
  *(_QWORD *)(v3 + 24) = v2;
  *(_QWORD *)(v3 + 32) = v1;
  return result;
}

void sub_20E3C4048()
{
  type metadata accessor for Observe.Coordinator();
}

uint64_t *sub_20E3C4070()
{
  uint64_t v0;
  uint64_t *v1;

  swift_allocObject();
  v0 = swift_unknownObjectRetain();
  v1 = sub_20E3C47D8(v0);
  swift_unknownObjectRelease();
  return v1;
}

uint64_t sub_20E3C40AC()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

void sub_20E3C40D0()
{
  sub_20E3C4048();
}

void type metadata accessor for Observe.Coordinator()
{
  JUMPOUT(0x212BBDEE8);
}

uint64_t sub_20E3C4180@<X0>(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X6>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  _QWORD *v13;
  void (*v14)(double);
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v7 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (uint64_t *)((char *)&v17 - v12);
  v14(v11);
  sub_20E39D614(v13, v9, a2, a3);
  v15 = *(void (**)(char *, uint64_t))(v7 + 8);
  v15(v9, a2);
  sub_20E39D618((uint64_t)v13, a2, a4);
  return ((uint64_t (*)(_QWORD *, uint64_t))v15)(v13, a2);
}

uint64_t sub_20E3C4258()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E3C427C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_20E3C4180(a1, *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 40), a2);
}

void sub_20E3C428C()
{
  type metadata accessor for Observe.Coordinator();
}

uint64_t sub_20E3C42BC(uint64_t a1)
{
  MEMORY[0x212BBDF90](&unk_20E4A85B0, a1);
  return sub_20E4A36EC();
}

void Observe.body.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_getAssociatedTypeWitness();
  v2 = sub_20E4A60E0();
  MEMORY[0x24BDAC7A8](v2);
  MEMORY[0x24BDAC7A8](v0);
  MEMORY[0x24BDAC7A8](v1);
  sub_20E3C428C();
}

uint64_t sub_20E3C43EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(_QWORD *, uint64_t);

  sub_20E3C3E14();
  swift_release();
  v3(v5);
  (*(void (**)(uint64_t, _QWORD))(v0 + 8))(v5, *(_QWORD *)(v8 - 144));
  sub_20E39D614(v4, v6, v2, *(_QWORD *)(v1 + 40));
  v9 = *(uint64_t (**)(_QWORD *, uint64_t))(v7 + 8);
  v9(v6, v2);
  sub_20E39D618((uint64_t)v4, v2, *(_QWORD *)(v8 - 136));
  return v9(v4, v2);
}

uint64_t sub_20E3C4488()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E3C44C0()
{
  sub_20E39CED0();
  return swift_release();
}

uint64_t sub_20E3C44F0(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  v4 = *a2;
  v5 = a2[1];
  v6 = *((_BYTE *)a2 + 16);
  sub_20E39CFB8();
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  v7 = a2[4];
  *(_QWORD *)(a1 + 24) = a2[3];
  *(_QWORD *)(a1 + 32) = v7;
  swift_retain();
  return a1;
}

uint64_t sub_20E3C4550(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  v4 = *a2;
  v5 = a2[1];
  v6 = *((_BYTE *)a2 + 16);
  sub_20E39CFB8();
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  sub_20E39CED0();
  v7 = a2[4];
  *(_QWORD *)(a1 + 24) = a2[3];
  *(_QWORD *)(a1 + 32) = v7;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_20E3C45DC(uint64_t a1, uint64_t a2)
{
  char v4;

  v4 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v4;
  sub_20E39CED0();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t _s8CacheKeyVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s8CacheKeyVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for Observe()
{
  JUMPOUT(0x212BBDEE8);
}

uint64_t sub_20E3C46D0()
{
  uint64_t result;
  unint64_t v1;

  swift_getAssociatedTypeWitness();
  sub_20E4A60E0();
  result = sub_20E4A35E4();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_20E3C476C(uint64_t a1)
{
  return *(_QWORD *)(a1 + 24);
}

uint64_t sub_20E3C4774()
{
  return MEMORY[0x24BDB9D70];
}

uint64_t sub_20E3C4780()
{
  return sub_20E3C3E14();
}

uint64_t sub_20E3C47A0(uint64_t a1)
{
  return sub_20E3C49B8(a1);
}

uint64_t sub_20E3C47C0()
{
  return 32;
}

__n128 sub_20E3C47CC(uint64_t a1, _OWORD *a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t *sub_20E3C47D8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[5];

  v2 = v1;
  v23 = a1;
  v3 = *v1;
  v20[1] = *(_QWORD *)(*v1 + 96);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = sub_20E4A5120();
  v21 = *(_QWORD *)(v5 - 8);
  v22 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v20 - v6;
  sub_20E4A60E0();
  v8 = sub_20E4A35E4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v20 - v10;
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v20 - v14;
  v16 = (uint64_t)v2 + *(_QWORD *)(v3 + 112);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))((char *)v20 - v14, 1, 1, AssociatedTypeWitness, v13);
  sub_20E3C3C70((uint64_t)v15);
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v16, v11, v8);
  v17 = sub_20E3C4AD0();
  v18 = sub_20E4A6014();
  v24[3] = v17;
  v24[4] = MEMORY[0x24BE5E508];
  v24[0] = v18;
  sub_20E4A4BEC();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v22);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  return v2;
}

uint64_t sub_20E3C49B8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[8];

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 96);
  v5 = *(_QWORD *)(*v1 + 80);
  swift_getAssociatedTypeWitness();
  v6 = sub_20E4A60E0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v13 - v8;
  v10 = *(_QWORD *)(v3 + 88);
  v13[4] = v5;
  v13[5] = v10;
  v11 = *(_QWORD *)(v3 + 104);
  v13[6] = v4;
  v13[7] = v11;
  swift_getKeyPath();
  v13[0] = v5;
  v13[1] = v10;
  v13[2] = v4;
  v13[3] = v11;
  swift_getKeyPath();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  swift_retain();
  return sub_20E4A35D8();
}

unint64_t sub_20E3C4AD0()
{
  unint64_t result;

  result = qword_253ED0020;
  if (!qword_253ED0020)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_253ED0020);
  }
  return result;
}

uint64_t (*sub_20E3C4B0C())(uint64_t)
{
  swift_retain();
  return sub_20E3C4B3C;
}

uint64_t View.playable<A>(id:isEnabled:playPercentVisible:pausePercentVisible:frameCoordinateSpace:)@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>, double a9@<D0>, double a10@<D1>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  char *v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v35 = a6;
  v33 = a8;
  v34 = a4;
  v30 = a1;
  v31 = a3;
  v32 = a2;
  v14 = sub_20E4A39A4();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(a5 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v29 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for PlayableViewModifier(0, a5, a7, v22);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v29 - v26;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v18 + 16))(v21, v30, a5, v25);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v31, v14);
  sub_20E3C4CC4((uint64_t)v21, v32, (uint64_t)v17, a5, a7, (uint64_t)v27, a9, a10);
  MEMORY[0x212BBBA70](v27, v34, v23, v35);
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v27, v23);
}

uint64_t type metadata accessor for PlayableViewModifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PlayableViewModifier);
}

uint64_t sub_20E3C4CC4@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>, double a7@<D0>, double a8@<D1>)
{
  uint64_t v16;
  uint64_t v17;
  double *v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE v27[24];
  uint64_t v28;

  v16 = type metadata accessor for PlayableViewModifier.Snapshot(0, a4, a5, a4);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (double *)&v27[-v17];
  v20 = (int *)type metadata accessor for PlayableViewModifier(0, a4, a5, v19);
  v21 = a6 + v20[11];
  *(_QWORD *)v21 = swift_getKeyPath();
  *(_BYTE *)(v21 + 8) = 0;
  v22 = a6 + v20[12];
  v27[15] = 0;
  sub_20E4A4640();
  v23 = v28;
  *(_BYTE *)v22 = v27[16];
  *(_QWORD *)(v22 + 8) = v23;
  v24 = a6 + v20[13];
  *(_QWORD *)v24 = swift_getKeyPath();
  *(_QWORD *)(v24 + 8) = 0;
  *(_WORD *)(v24 + 16) = 0;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(a6, a1, a4);
  *(_BYTE *)(a6 + v20[9]) = a2;
  sub_20E3C5F24(a3, a4, a5, v25, v18, a7, a8);
  return sub_20E4789EC((uint64_t)v18, v16, a6 + v20[10]);
}

uint64_t View.onPlayableViewsChange<A>(identifiedBy:perform:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD *v18;
  _QWORD v20[3];

  v20[2] = a8;
  v20[1] = a1;
  v14 = type metadata accessor for OnPlayableViewChangeModifier(0, a5, a7, a4);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v20 - v16;
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = a4;
  v18[3] = a5;
  v18[4] = a6;
  v18[5] = a7;
  v18[6] = a2;
  v18[7] = a3;
  swift_retain();
  sub_20E3C5014((uint64_t)sub_20E3C5004, (uint64_t)v18, a5, a7, (uint64_t)v17);
  MEMORY[0x212BBBA70](v17, a4, v14, a6);
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
}

uint64_t type metadata accessor for OnPlayableViewChangeModifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for OnPlayableViewChangeModifier);
}

uint64_t sub_20E3C4F50(uint64_t a1, void (*a2)(void))
{
  uint64_t result;

  type metadata accessor for CGRect(0);
  result = sub_20E4A6374();
  if (result)
  {
    a2();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_20E3C4FE0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E3C5004(uint64_t a1)
{
  uint64_t v1;

  return sub_20E3C4F50(a1, *(void (**)(void))(v1 + 48));
}

uint64_t sub_20E3C5014@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  objc_class *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  void *v23;
  id v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  objc_super v28;

  v27 = a1;
  v10 = sub_20E4A4E68();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)a5 = swift_getKeyPath();
  *(_BYTE *)(a5 + 8) = 0;
  *(_QWORD *)(a5 + 40) = a1;
  *(_QWORD *)(a5 + 48) = a2;
  v15 = a5 + *(int *)(type metadata accessor for OnPlayableViewChangeModifier(0, a3, a4, v14) + 44);
  swift_retain();
  sub_20E4A4E74();
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v16(v13, v15, v10);
  v17 = (objc_class *)type metadata accessor for PlayableStorage();
  v18 = (char *)objc_allocWithZone(v17);
  v19 = OBJC_IVAR____TtC18_JetEngine_SwiftUIP33_A88781FDD5080888A74F07BF6234265B15PlayableStorage_allPlayable;
  v20 = v18;
  *(_QWORD *)&v18[v19] = sub_20E3B5334(MEMORY[0x24BEE4AF8]);
  v21 = OBJC_IVAR____TtC18_JetEngine_SwiftUIP33_A88781FDD5080888A74F07BF6234265B15PlayableStorage_chained;
  *(_QWORD *)&v20[OBJC_IVAR____TtC18_JetEngine_SwiftUIP33_A88781FDD5080888A74F07BF6234265B15PlayableStorage_chained] = 0;
  *(_QWORD *)&v20[OBJC_IVAR____TtC18_JetEngine_SwiftUIP33_A88781FDD5080888A74F07BF6234265B15PlayableStorage_timer] = 0;
  v16(&v20[OBJC_IVAR____TtC18_JetEngine_SwiftUIP33_A88781FDD5080888A74F07BF6234265B15PlayableStorage_validType], (uint64_t)v13, v10);
  v22 = &v20[OBJC_IVAR____TtC18_JetEngine_SwiftUIP33_A88781FDD5080888A74F07BF6234265B15PlayableStorage_action];
  *(_QWORD *)v22 = v27;
  *((_QWORD *)v22 + 1) = a2;
  v23 = *(void **)&v20[v21];
  *(_QWORD *)&v20[v21] = 0;
  swift_retain();

  v28.receiver = v20;
  v28.super_class = v17;
  v24 = objc_msgSendSuper2(&v28, sel_init);
  swift_release();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v24;
  *(_QWORD *)(a5 + 16) = sub_20E3CB47C;
  *(_QWORD *)(a5 + 24) = result;
  *(_BYTE *)(a5 + 32) = 0;
  return result;
}

id sub_20E3C51E8(_QWORD *a1, uint64_t a2, _QWORD *a3, char a4, double a5)
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  id v21;
  _QWORD v23[2];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_20E4A6350();
  v11 = a3[3];
  if (v11)
  {
    v12 = __swift_project_boxed_opaque_existential_1(a3, a3[3]);
    v23[1] = v23;
    v13 = a4;
    v14 = a2;
    v15 = *(_QWORD *)(v11 - 8);
    v16 = MEMORY[0x24BDAC7A8](v12);
    v18 = (char *)v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v15 + 16))(v18, v16);
    v19 = sub_20E4A6350();
    v20 = *(void (**)(char *, uint64_t))(v15 + 8);
    a2 = v14;
    a4 = v13;
    v20(v18, v11);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a3);
  }
  else
  {
    v19 = 0;
  }
  v21 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_timerWithTimeInterval_target_selector_userInfo_repeats_, v10, a2, v19, a4 & 1, a5);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v21;
}

void sub_20E3C5410(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6, double a7)
{
  uint64_t v7;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  void *v27;
  id v28;
  char v29;
  void (*v30)(char *, uint64_t, uint64_t);
  void (*v31)(char *, uint64_t);
  uint64_t *v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  uint64_t v36;
  CGFloat v37;
  CGFloat v38;
  CGFloat v39;
  CGFloat v40;
  char v41;
  char v42;
  char *v43;
  char isUniquelyReferenced_nonNull_native;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  _BYTE v48[48];
  CGRect v49;
  CGRect v50;

  v15 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v45 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v45 - v18;
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v45 - v21;
  v23 = sub_20E4A4E68();
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)&v45 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = v7;
  v27 = *(void **)(v7 + OBJC_IVAR____TtC18_JetEngine_SwiftUIP33_A88781FDD5080888A74F07BF6234265B15PlayableStorage_chained);
  if (v27)
  {
    v28 = v27;
    sub_20E3C5410(a1, a2, a3, a4, a5, a6, a7);

  }
  swift_getDynamicType();
  sub_20E4A4E74();
  v29 = sub_20E4A4E50();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
  if ((v29 & 1) != 0)
  {
    v30 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
    v30(v22, a1, a2);
    sub_20E4A6308();
    v31 = *(void (**)(char *, uint64_t))(v15 + 8);
    v31(v22, a2);
    v32 = (uint64_t *)(v46
                    + OBJC_IVAR____TtC18_JetEngine_SwiftUIP33_A88781FDD5080888A74F07BF6234265B15PlayableStorage_allPlayable);
    swift_beginAccess();
    v33 = *v32;
    if (*(_QWORD *)(*v32 + 16) && (v34 = sub_20E3BCCB0((uint64_t)v48), (v35 & 1) != 0))
    {
      v36 = *(_QWORD *)(v33 + 56) + 32 * v34;
      v37 = *(double *)v36;
      v38 = *(double *)(v36 + 8);
      v39 = *(double *)(v36 + 16);
      v40 = *(double *)(v36 + 24);
      swift_endAccess();
      sub_20E3B8008((uint64_t)v48);
      v49.origin.x = v37;
      v49.origin.y = v38;
      v49.size.width = v39;
      v49.size.height = v40;
      v50.origin.x = a4;
      v50.origin.y = a5;
      v50.size.width = a6;
      v50.size.height = a7;
      if (CGRectEqualToRect(v49, v50))
        return;
    }
    else
    {
      swift_endAccess();
      sub_20E3B8008((uint64_t)v48);
    }
    v30(v19, a1, a2);
    sub_20E4A6308();
    v31(v19, a2);
    swift_beginAccess();
    if (*(_QWORD *)(*v32 + 16))
    {
      sub_20E3BCCB0((uint64_t)v48);
      v42 = v41 ^ 1;
    }
    else
    {
      v42 = 1;
    }
    swift_endAccess();
    sub_20E3B8008((uint64_t)v48);
    v43 = v45;
    v30(v45, a1, a2);
    sub_20E4A6308();
    v31(v43, a2);
    swift_beginAccess();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v47 = *v32;
    *v32 = 0x8000000000000000;
    sub_20E3CA250((uint64_t)v48, isUniquelyReferenced_nonNull_native, a4, a5, a6, a7);
    *v32 = v47;
    swift_bridgeObjectRelease();
    sub_20E3B8008((uint64_t)v48);
    swift_endAccess();
    sub_20E3C57A4(v42 & 1);
  }
}

void sub_20E3C57A4(char a1)
{
  char *v1;
  char *v2;
  uint64_t ObjectType;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  char *v9;
  id v10;
  id v11;
  char *v12;
  void *v13;
  __int128 v14;
  __int128 v15;
  _QWORD v16[3];
  uint64_t v17;

  v2 = v1;
  ObjectType = swift_getObjectType();
  v5 = OBJC_IVAR____TtC18_JetEngine_SwiftUIP33_A88781FDD5080888A74F07BF6234265B15PlayableStorage_timer;
  v6 = *(void **)&v2[OBJC_IVAR____TtC18_JetEngine_SwiftUIP33_A88781FDD5080888A74F07BF6234265B15PlayableStorage_timer];
  if (v6)
  {
    if ((a1 & 1) == 0)
      return;
    v7 = v6;
    objc_msgSend(v7, sel_invalidate);
    v8 = *(void **)&v2[v5];
    *(_QWORD *)&v2[v5] = 0;

    sub_20E3CA384();
    v17 = ObjectType;
    v16[0] = v2;
    v14 = 0u;
    v15 = 0u;
    v9 = v2;
    v10 = sub_20E3C51E8(v16, (uint64_t)sel_fireTimerWithTimer_, &v14, 0, 0.1);
    v11 = objc_msgSend((id)objc_opt_self(), sel_currentRunLoop, v14, v15, v16[0]);
    objc_msgSend(v11, sel_addTimer_forMode_, v10, *MEMORY[0x24BDBCB80]);

  }
  else
  {
    sub_20E3CA384();
    v17 = ObjectType;
    v16[0] = v2;
    v14 = 0u;
    v15 = 0u;
    v12 = v2;
    v10 = sub_20E3C51E8(v16, (uint64_t)sel_fireTimerWithTimer_, &v14, 0, 0.1);
    v11 = objc_msgSend((id)objc_opt_self(), sel_currentRunLoop, v14, v15, v16[0]);
    objc_msgSend(v11, sel_addTimer_forMode_, v10, *MEMORY[0x24BDBCB80]);
  }

  v13 = *(void **)&v2[v5];
  *(_QWORD *)&v2[v5] = v10;

}

void sub_20E3C5960(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  void *v14;
  id v15;
  char v16;
  _BYTE v18[40];
  _BYTE v19[40];

  v7 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v9 = v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  v10 = sub_20E4A4E68();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  v14 = *(void **)(v3 + OBJC_IVAR____TtC18_JetEngine_SwiftUIP33_A88781FDD5080888A74F07BF6234265B15PlayableStorage_chained);
  if (v14)
  {
    v15 = v14;
    sub_20E3C5960(a1, a2, a3);

  }
  swift_getDynamicType();
  sub_20E4A4E74();
  v16 = sub_20E4A4E50();
  (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v13, v10);
  if ((v16 & 1) != 0)
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(v9, a1, a2);
    sub_20E4A6308();
    (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, a2);
    swift_beginAccess();
    sub_20E3C8BB8((uint64_t)v18, (uint64_t)v19);
    swift_endAccess();
    sub_20E3B8008((uint64_t)v18);
    sub_20E3CB2C8((uint64_t)v19, (uint64_t)v18);
    if ((v18[32] & 1) == 0)
      sub_20E3C57A4(1);
  }
}

id sub_20E3C5B44()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_20E3C5C40@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  swift_getObjectType();
  result = sub_20E4A3584();
  *a1 = result;
  return result;
}

uint64_t sub_20E3C5C7C()
{
  sub_20E3CB6DC();
  return sub_20E4A389C();
}

uint64_t sub_20E3C5CCC()
{
  uint64_t v1;

  sub_20E3CB414();
  sub_20E4A3C08();
  return v1;
}

uint64_t sub_20E3C5D04()
{
  uint64_t v0;
  void *v1;
  char v2;
  uint64_t v3;

  v1 = *(void **)v0;
  v2 = *(_BYTE *)(v0 + 8);
  sub_20E39CFA0(v1, v2);
  v3 = sub_20E45C7C0(v1, v2);
  sub_20E39CE70(v1, v2);
  return v3;
}

uint64_t sub_20E3C5D58()
{
  type metadata accessor for PlayableStorage();
  sub_20E39F334(&qword_254A19018, (uint64_t (*)(uint64_t))type metadata accessor for PlayableStorage, (uint64_t)&unk_20E4A8860);
  return sub_20E4A36EC();
}

uint64_t sub_20E3C5DBC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  char *v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v9;
  void *v11;

  v3 = sub_20E3C5D04();
  if (v3)
  {
    v4 = (void *)v3;
    v5 = (char *)sub_20E3C5D58();
    v6 = *(_QWORD *)&v5[OBJC_IVAR____TtC18_JetEngine_SwiftUIP33_A88781FDD5080888A74F07BF6234265B15PlayableStorage_chained];

    if (!v6)
    {
      v7 = (char *)sub_20E3C5D58();
      v8 = *(void **)&v7[OBJC_IVAR____TtC18_JetEngine_SwiftUIP33_A88781FDD5080888A74F07BF6234265B15PlayableStorage_chained];
      *(_QWORD *)&v7[OBJC_IVAR____TtC18_JetEngine_SwiftUIP33_A88781FDD5080888A74F07BF6234265B15PlayableStorage_chained] = v4;

      v4 = v8;
    }

  }
  swift_getKeyPath();
  v11 = (void *)sub_20E3C5D58();
  MEMORY[0x212BBDF90](&unk_20E4A87C0, a2);
  v9 = sub_20E4A3EA8();
  MEMORY[0x212BBDF90](MEMORY[0x24BDEFB78], v9);
  sub_20E4A4250();

  return swift_release();
}

uint64_t sub_20E3C5EC8(void **a1)
{
  void *v1;
  id v2;

  v1 = *a1;
  sub_20E3CB414();
  v2 = v1;
  return sub_20E4A3C14();
}

double sub_20E3C5F24@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, double *a5@<X8>, double a6@<D0>, double a7@<D1>)
{
  int *v9;
  char *v10;
  uint64_t v11;
  _OWORD *v12;
  double result;

  *a5 = a6;
  a5[1] = a7;
  v9 = (int *)type metadata accessor for PlayableViewModifier.Snapshot(0, a2, a3, a4);
  v10 = (char *)a5 + v9[10];
  v11 = sub_20E4A39A4();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10, a1, v11);
  *((_BYTE *)a5 + v9[11]) = 0;
  *((_BYTE *)a5 + v9[12]) = 0;
  v12 = (_OWORD *)((char *)a5 + v9[13]);
  result = 0.0;
  *v12 = 0u;
  v12[1] = 0u;
  return result;
}

void sub_20E3C5FA4(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  int v9;
  uint64_t v10;
  double v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  CGRect v15;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18228);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, double))(*(_QWORD *)(a1 - 8) + 16))(a2, v2, a1, v6);
  v9 = *(unsigned __int8 *)(v2 + *(int *)(a1 + 44));
  v10 = sub_20E4A3818();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  sub_20E3C2220((uint64_t)v8);
  v12 = v11;
  sub_20E3C250C((uint64_t)v8);
  v13 = 8;
  if (!v9)
    v13 = 0;
  *(_BYTE *)(a2 + *(int *)(a1 + 44)) = *(double *)(v2 + v13) < v12;
  sub_20E4A3800();
  *(CGRect *)(a2 + *(int *)(a1 + 52)) = CGRectIntegral(v15);
}

BOOL sub_20E3C60B4(double *a1, double *a2, uint64_t a3, uint64_t a4)
{
  int *v6;

  if (*a1 == *a2
    && a1[1] == a2[1]
    && (v6 = (int *)type metadata accessor for PlayableViewModifier.Snapshot(0, a3, a4, a4),
        (MEMORY[0x212BBAF54]((char *)a1 + v6[10], (char *)a2 + v6[10]) & 1) != 0)
    && *((unsigned __int8 *)a1 + v6[11]) == *((unsigned __int8 *)a2 + v6[11])
    && *((unsigned __int8 *)a1 + v6[12]) == *((unsigned __int8 *)a2 + v6[12]))
  {
    return CGRectEqualToRect(*(CGRect *)((char *)a1 + v6[13]), *(CGRect *)((char *)a2 + v6[13]));
  }
  else
  {
    return 0;
  }
}

BOOL sub_20E3C6174(double *a1, double *a2, uint64_t a3)
{
  return sub_20E3C60B4(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

void sub_20E3C6180(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void *v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, int *);
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double *v30;
  double v31;
  double v32;
  double v33;
  double v34;
  id v35;
  id v36;
  _QWORD v37[3];
  id v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  char v44;

  v2 = v1;
  v4 = *(_QWORD *)(a1 + 16);
  v40 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v39 = (char *)v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = *(_QWORD *)(v10 + 24);
  v12 = (int *)type metadata accessor for PlayableViewModifier.Snapshot(0, v4, v41, v11);
  v13 = *((_QWORD *)v12 - 1);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)v37 - v17;
  if (*(_BYTE *)(v1 + *(int *)(a1 + 36)) == 1)
  {
    v19 = (void *)sub_20E3C6444(a1);
    if (v19)
    {
      v38 = v19;
      v20 = v1 + *(int *)(a1 + 48);
      v21 = *(_BYTE *)v20;
      v22 = *(_QWORD *)(v20 + 8);
      v42 = v21;
      v43 = v22;
      __swift_instantiateConcreteTypeFromMangledName(&qword_253ED2A08);
      sub_20E4A464C();
      if (v44 == 1)
      {
        v23 = v1 + *(int *)(a1 + 40);
        v24 = sub_20E4A4670();
        v37[1] = v23;
        v37[2] = v24;
        sub_20E4A464C();
        LODWORD(v23) = v18[v12[11]];
        v25 = *(void (**)(char *, int *))(v13 + 8);
        v25(v18, v12);
        (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v2, a1);
        if ((_DWORD)v23 == 1)
        {
          sub_20E4A464C();
          (*(void (**)(char *, uint64_t))(v7 + 8))(v9, a1);
          v26 = v15[v12[12]];
          v25(v15, v12);
          v27 = v41;
          if ((v26 & 1) != 0)
          {
            v29 = (uint64_t)v39;
            v28 = v40;
            (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v39, v2, v4);
            sub_20E4A464C();
            v30 = (double *)&v15[v12[13]];
            v31 = *v30;
            v32 = v30[1];
            v33 = v30[2];
            v34 = v30[3];
            v25(v15, v12);
            v35 = v38;
            sub_20E3C5410(v29, v4, v27, v31, v32, v33, v34);

            (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v29, v4);
            return;
          }
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v7 + 8))(v9, a1);
          v27 = v41;
        }
        v36 = v38;
        sub_20E3C5960(v2, v4, v27);

      }
      else
      {

      }
    }
  }
}

uint64_t sub_20E3C6444(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  char v4;
  uint64_t v5;

  v2 = v1 + *(int *)(a1 + 44);
  v3 = *(id *)v2;
  v4 = *(_BYTE *)(v2 + 8);
  sub_20E39CFA0(*(id *)v2, v4);
  v5 = sub_20E45C7C0(v3, v4);
  sub_20E39CE70(v3, v4);
  return v5;
}

uint64_t sub_20E3C64A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t, double);
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, char *, uint64_t);
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t OpaqueTypeConformance2;
  _QWORD *v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t);
  uint64_t v67;
  void (*v68)(uint64_t, char *, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void (*v91)(char *, uint64_t, uint64_t);
  uint64_t v92;
  char *v93;
  uint64_t v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD v100[2];
  _QWORD v101[2];

  v86 = a1;
  v88 = a3;
  v5 = *(_QWORD *)(a2 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = MEMORY[0x24BDAC7A8](a1);
  MEMORY[0x212BBDF90](&unk_20E4A8810, v7);
  v8 = sub_20E4A3EA8();
  v9 = *(_QWORD *)(a2 + 24);
  v94 = *(_QWORD *)(a2 + 16);
  v69 = a2;
  v92 = v9;
  v77 = type metadata accessor for PlayableViewModifier.Snapshot(255, v94, v9, v10);
  v79 = MEMORY[0x212BBDF90](&unk_20E4A8798, v77);
  v11 = sub_20E4A3F2C();
  v73 = v8;
  v12 = sub_20E4A39D4();
  v83 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v93 = (char *)&v67 - v13;
  v75 = v12;
  v14 = sub_20E4A39D4();
  v87 = *(_QWORD *)(v14 - 8);
  v15 = v14;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v76 = (char *)&v67 - v17;
  v18 = MEMORY[0x212BBDF90](MEMORY[0x24BDEFB78], v8, v16);
  v72 = v18;
  v19 = MEMORY[0x212BBDF90](MEMORY[0x24BDF0400], v11);
  v101[0] = v18;
  v101[1] = v19;
  v20 = MEMORY[0x24BDED308];
  v21 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v12, v101);
  v74 = v21;
  v22 = sub_20E3A5070();
  v100[0] = v21;
  v100[1] = v22;
  v81 = v15;
  v80 = MEMORY[0x212BBDF90](v20, v15, v100);
  v96 = v15;
  v97 = MEMORY[0x24BEE1328];
  v98 = v80;
  v99 = MEMORY[0x24BEE1340];
  v23 = MEMORY[0x212BBDF30](0, &v96, MEMORY[0x24BDF38E8], 0);
  v24 = *(_QWORD *)(v23 - 8);
  v84 = v23;
  v85 = v24;
  MEMORY[0x24BDAC7A8](v23);
  v78 = (char *)&v67 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x24BDAC7A8](v26);
  v82 = (uint64_t *)((char *)&v67 - v28);
  v29 = *(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16);
  v30 = (char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = v3;
  v29(v30, v3, a2, v27);
  v91 = (void (*)(char *, uint64_t, uint64_t))v29;
  v31 = *(unsigned __int8 *)(v5 + 80);
  v32 = (v31 + 32) & ~v31;
  v70 = v32;
  v89 = v32 + v6;
  v90 = v31 | 7;
  v33 = swift_allocObject();
  v34 = v94;
  v35 = v92;
  *(_QWORD *)(v33 + 16) = v94;
  *(_QWORD *)(v33 + 24) = v35;
  v36 = v33 + v32;
  v68 = *(void (**)(uint64_t, char *, uint64_t))(v5 + 32);
  v37 = v69;
  v68(v36, v30, v69);
  ((void (*)(char *, uint64_t, uint64_t))v29)(v30, v3, v37);
  v38 = swift_allocObject();
  *(_QWORD *)(v38 + 16) = v34;
  *(_QWORD *)(v38 + 24) = v35;
  v39 = v34;
  v40 = v35;
  v41 = v70;
  v42 = v37;
  v43 = v37;
  v44 = v68;
  v68(v38 + v70, v30, v42);
  sub_20E4A42E0();
  swift_release();
  swift_release();
  v45 = v30;
  v46 = v30;
  v47 = v71;
  v91(v46, v71, v43);
  v48 = swift_allocObject();
  *(_QWORD *)(v48 + 16) = v39;
  *(_QWORD *)(v48 + 24) = v40;
  v44(v48 + v41, v45, v43);
  v49 = v76;
  v50 = v75;
  v51 = v93;
  View.onViewAppearanceChange(perform:)((uint64_t)sub_20E3C89F4, v48, v75, v74);
  swift_release();
  (*(void (**)(char *, uint64_t))(v83 + 8))(v51, v50);
  v52 = (char *)(v47 + *(int *)(v43 + 48));
  v53 = *v52;
  v54 = *((_QWORD *)v52 + 1);
  LOBYTE(v96) = v53;
  v97 = v54;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED2A08);
  sub_20E4A464C();
  LOBYTE(v96) = v95;
  v91(v45, v47, v43);
  v55 = swift_allocObject();
  v56 = v92;
  *(_QWORD *)(v55 + 16) = v94;
  *(_QWORD *)(v55 + 24) = v56;
  v44(v55 + v41, v45, v43);
  v57 = v78;
  v58 = v81;
  v59 = MEMORY[0x24BEE1328];
  v60 = v80;
  v61 = MEMORY[0x24BEE1340];
  sub_20E4A44CC();
  swift_release();
  (*(void (**)(char *, uint64_t))(v87 + 8))(v49, v58);
  v96 = v58;
  v97 = v59;
  v98 = v60;
  v99 = v61;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v63 = v82;
  v64 = v84;
  sub_20E39D614(v82, v57, v84, OpaqueTypeConformance2);
  v65 = *(void (**)(char *, uint64_t))(v85 + 8);
  v65(v57, v64);
  sub_20E39D618((uint64_t)v63, v64, v88);
  return ((uint64_t (*)(_QWORD *, uint64_t))v65)(v63, v64);
}

uint64_t sub_20E3C6A70@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  v6 = type metadata accessor for PlayableViewModifier.Snapshot(0, a1, a2, a2);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v12 - v8;
  type metadata accessor for PlayableViewModifier(0, a1, a2, v10);
  sub_20E4A4670();
  sub_20E4A464C();
  sub_20E3C5FA4(v6, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_20E3C6B44(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char v20;
  uint64_t v21;
  uint64_t result;
  char *v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char v29;

  v8 = type metadata accessor for PlayableViewModifier(0, a3, a4, a4);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v26 - v10;
  v13 = type metadata accessor for PlayableViewModifier.Snapshot(0, a3, a4, v12);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v26 - v15;
  sub_20E4A4670();
  sub_20E4A464C();
  v16[*(int *)(v13 + 48)] = a1;
  sub_20E3CB310((uint64_t)v16, v8, v17, v18);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  if ((a1 & 1) == 0)
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v19 = &v11[*(int *)(v8 + 48)];
  v20 = *v19;
  v21 = *((_QWORD *)v19 + 1);
  v27 = v20;
  v28 = v21;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED2A08);
  sub_20E4A464C();
  result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if ((v29 & 1) == 0)
  {
    v23 = (char *)(a2 + *(int *)(v8 + 48));
    v24 = *v23;
    v25 = *((_QWORD *)v23 + 1);
    v27 = v24;
    v28 = v25;
    v29 = 1;
    return sub_20E4A4658();
  }
  return result;
}

uint64_t View.playable<A>(id:playPercentVisible:pausePercentVisible:frameCoordinateSpace:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>, double a8@<D0>, double a9@<D1>)
{
  return View.playable<A>(id:isEnabled:playPercentVisible:pausePercentVisible:frameCoordinateSpace:)(a1, 1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_20E3C6D14()
{
  return type metadata accessor for PlayableStorage();
}

uint64_t type metadata accessor for PlayableStorage()
{
  uint64_t result;

  result = qword_254A18E78;
  if (!qword_254A18E78)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_20E3C6D58()
{
  uint64_t result;
  unint64_t v1;

  result = sub_20E4A4E68();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_20E3C6DEC(_QWORD *a1)
{
  return get_witness_table_7SwiftUI4ViewRzSHRd__r__lAA15ModifiedContentVyx011_JetEngine_aB008PlayableC8Modifier33_A88781FDD5080888A74F07BF6234265BLLVyqd__GGAaBHPxAaBHD1__AiA0cI0HPyHCHCTm(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD))type metadata accessor for PlayableViewModifier, (uint64_t)&unk_20E4A8810);
}

uint64_t sub_20E3C6E00(_QWORD *a1)
{
  return get_witness_table_7SwiftUI4ViewRzSHRd__r__lAA15ModifiedContentVyx011_JetEngine_aB008PlayableC8Modifier33_A88781FDD5080888A74F07BF6234265BLLVyqd__GGAaBHPxAaBHD1__AiA0cI0HPyHCHCTm(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD))type metadata accessor for OnPlayableViewChangeModifier, (uint64_t)&unk_20E4A87C0);
}

uint64_t get_witness_table_7SwiftUI4ViewRzSHRd__r__lAA15ModifiedContentVyx011_JetEngine_aB008PlayableC8Modifier33_A88781FDD5080888A74F07BF6234265BLLVyqd__GGAaBHPxAaBHD1__AiA0cI0HPyHCHCTm(_QWORD *a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD), uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[2];

  v4 = a1[2];
  v5 = a2(255, a1[1], a1[3]);
  v6 = sub_20E4A39D4();
  v8[0] = v4;
  v8[1] = MEMORY[0x212BBDF90](a3, v5);
  return MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v6, v8);
}

uint64_t sub_20E3C6E90()
{
  uint64_t result;
  unint64_t v1;

  result = sub_20E4A4E68();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

char *sub_20E3C6F1C(char *a1, char **a2, uint64_t a3)
{
  int v5;
  char *v7;
  char v8;
  uint64_t v9;
  char *v10;
  char v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  char *v18;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v18[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    v7 = *a2;
    v8 = *((_BYTE *)a2 + 8);
    sub_20E39CFA0(*a2, v8);
    *(_QWORD *)a1 = v7;
    a1[8] = v8;
    v9 = (uint64_t)a2[2];
    v10 = a2[3];
    v11 = *((_BYTE *)a2 + 32);
    sub_20E3C6FFC(v9, v10, v11);
    *((_QWORD *)a1 + 2) = v9;
    *((_QWORD *)a1 + 3) = v10;
    a1[32] = v11;
    v12 = a2[6];
    *((_QWORD *)a1 + 5) = a2[5];
    *((_QWORD *)a1 + 6) = v12;
    v13 = *(int *)(a3 + 44);
    v14 = &a1[v13];
    v15 = (uint64_t)a2 + v13;
    v16 = sub_20E4A4E68();
    v17 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
    swift_retain();
    v17(v14, v15, v16);
  }
  return a1;
}

id sub_20E3C6FFC(uint64_t a1, void *a2, char a3)
{
  if ((a3 & 1) != 0)
    return a2;
  else
    return (id)swift_retain();
}

uint64_t sub_20E3C700C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  sub_20E39CE70(*(id *)a1, *(_BYTE *)(a1 + 8));
  sub_20E3C706C(*(_QWORD *)(a1 + 16), *(void **)(a1 + 24), *(_BYTE *)(a1 + 32));
  swift_release();
  v4 = a1 + *(int *)(a2 + 44);
  v5 = sub_20E4A4E68();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

void sub_20E3C706C(uint64_t a1, void *a2, char a3)
{
  if ((a3 & 1) != 0)

  else
    swift_release();
}

uint64_t sub_20E3C707C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6;
  char v7;
  uint64_t v8;
  void *v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);

  v6 = *(id *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_20E39CFA0(*(id *)a2, v7);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(void **)(a2 + 24);
  v10 = *(_BYTE *)(a2 + 32);
  sub_20E3C6FFC(v8, v9, v10);
  *(_QWORD *)(a1 + 16) = v8;
  *(_QWORD *)(a1 + 24) = v9;
  *(_BYTE *)(a1 + 32) = v10;
  v11 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v11;
  v12 = *(int *)(a3 + 44);
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_20E4A4E68();
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
  swift_retain();
  v16(v13, v14, v15);
  return a1;
}

uint64_t sub_20E3C7130(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6;
  char v7;
  void *v8;
  char v9;
  uint64_t v10;
  void *v11;
  char v12;
  uint64_t v13;
  void *v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = *(id *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_20E39CFA0(*(id *)a2, v7);
  v8 = *(void **)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_20E39CE70(v8, v9);
  v10 = *(_QWORD *)(a2 + 16);
  v11 = *(void **)(a2 + 24);
  v12 = *(_BYTE *)(a2 + 32);
  sub_20E3C6FFC(v10, v11, v12);
  v13 = *(_QWORD *)(a1 + 16);
  v14 = *(void **)(a1 + 24);
  v15 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 24) = v11;
  *(_BYTE *)(a1 + 32) = v12;
  sub_20E3C706C(v13, v14, v15);
  v16 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v16;
  swift_retain();
  swift_release();
  v17 = *(int *)(a3 + 44);
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = sub_20E4A4E68();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 24))(v18, v19, v20);
  return a1;
}

uint64_t sub_20E3C7200(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v4 = *(int *)(a3 + 44);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_20E4A4E68();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_20E3C727C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  void *v8;
  char v9;
  char v10;
  uint64_t v11;
  void *v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = *a2;
  v7 = *((_BYTE *)a2 + 8);
  v8 = *(void **)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_20E39CE70(v8, v9);
  v10 = *((_BYTE *)a2 + 32);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(void **)(a1 + 24);
  v13 = *(_BYTE *)(a1 + 32);
  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
  *(_BYTE *)(a1 + 32) = v10;
  sub_20E3C706C(v11, v12, v13);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
  swift_release();
  v14 = *(int *)(a3 + 44);
  v15 = a1 + v14;
  v16 = (uint64_t)a2 + v14;
  v17 = sub_20E4A4E68();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 40))(v15, v16, v17);
  return a1;
}

uint64_t sub_20E3C7320()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_20E3C732C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 40);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_20E4A4E68();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 44), a2, v8);
  }
}

uint64_t sub_20E3C73A8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_20E3C73B4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 40) = (a2 - 1);
  }
  else
  {
    v7 = sub_20E4A4E68();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 44), a2, a2, v7);
  }
  return result;
}

uint64_t sub_20E3C7428(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v2 = swift_checkMetadataState();
  v4 = v2;
  if (v5 <= 0x3F)
  {
    type metadata accessor for PlayableViewModifier.Snapshot(255, v2, *(_QWORD *)(a1 + 24), v3);
    v4 = sub_20E4A4670();
    if (v6 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return v4;
}

_QWORD *sub_20E3C74F4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unsigned int v15;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(_QWORD *, _QWORD *, uint64_t);
  uint64_t v21;
  char *v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  _OWORD *v30;
  _OWORD *v31;
  __int128 v32;
  char *v33;
  char *v34;
  void *v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  unint64_t v43;
  _QWORD *v44;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = sub_20E4A39A4();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = v10 | 7;
  v12 = *(_QWORD *)(v9 + 64);
  v13 = (v12 + ((v10 + 16) & ~v10) + 9) & 0xFFFFFFFFFFFFFFF8;
  v14 = ((v13 + 39) & 0xFFFFFFFFFFFFFFF8) + 8;
  v15 = v10 | *(_DWORD *)(v6 + 80) & 0xF8;
  if (v15 > 7
    || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v9 + 80)) & 0x100000) != 0
    || (((((v10 | 7) + v7 + 1) & ~(v10 | 7)) + v14 + 39) & 0xFFFFFFFFFFFFFFF8) + 18 > 0x18)
  {
    v18 = *a2;
    *a1 = *a2;
    v41 = (_QWORD *)(v18 + (((v15 | 7) + 16) & ~(unint64_t)(v15 | 7)));
    swift_retain();
  }
  else
  {
    v44 = a1;
    v19 = ~v11;
    v43 = v13 + 32;
    v20 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 16);
    v21 = v8;
    v20(v44, a2, v5);
    *((_BYTE *)v44 + v7) = *((_BYTE *)a2 + v7);
    v22 = (char *)a2 + v7 + v11;
    v23 = (_QWORD *)(((unint64_t)v44 + v7 + v11 + 1) & ~v11);
    v24 = (_QWORD *)((unint64_t)(v22 + 1) & v19);
    *v23 = *v24;
    v25 = (_QWORD *)(((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFFFF8);
    v26 = (_QWORD *)(((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v25 = *v26;
    v27 = ((unint64_t)v25 + v10 + 8) & ~v10;
    v28 = ((unint64_t)v26 + v10 + 8) & ~v10;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v27, v28, v21);
    v29 = (_BYTE *)(v27 + v12);
    *v29 = *(_BYTE *)(v28 + v12);
    v29[1] = *(_BYTE *)(v28 + v12 + 1);
    v30 = (_OWORD *)((v27 + v12 + 9) & 0xFFFFFFFFFFFFFFF8);
    v31 = (_OWORD *)((v28 + v12 + 9) & 0xFFFFFFFFFFFFFFF8);
    v32 = v31[1];
    *v30 = *v31;
    v30[1] = v32;
    *(_QWORD *)((char *)v23 + v43) = *(_QWORD *)((char *)v24 + v43);
    v33 = (char *)v23 + v14;
    v34 = (char *)v24 + v14;
    v35 = *(void **)((char *)v24 + v14);
    LOBYTE(v27) = v34[8];
    swift_retain();
    sub_20E39CFA0(v35, v27);
    *(_QWORD *)v33 = v35;
    v33[8] = v27;
    v33[16] = v34[16];
    *((_QWORD *)v33 + 3) = *((_QWORD *)v34 + 3);
    v36 = (unint64_t)(v33 + 39) & 0xFFFFFFFFFFFFFFF8;
    v37 = (unint64_t)(v34 + 39) & 0xFFFFFFFFFFFFFFF8;
    v38 = *(_QWORD *)v37;
    v39 = *(_QWORD *)(v37 + 8);
    LOBYTE(v34) = *(_BYTE *)(v37 + 17);
    v40 = *(unsigned __int8 *)(v37 + 16);
    swift_retain();
    sub_20E3A3AFC(v38, v39, v40, (char)v34);
    *(_QWORD *)v36 = v38;
    *(_QWORD *)(v36 + 8) = v39;
    v41 = v44;
    *(_BYTE *)(v36 + 16) = v40;
    *(_BYTE *)(v36 + 17) = (_BYTE)v34;
  }
  return v41;
}

uint64_t sub_20E3C7744(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = *(_QWORD *)(v3 + 64);
  v5 = sub_20E4A39A4();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (a1 + (v7 | 7) + v4 + 1) & ~(v7 | 7);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))((v7 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v7, v5);
  v9 = (*(_QWORD *)(v6 + 64) + ((v7 + 16) & ~v7) + 9) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  v10 = v8 + ((v9 + 39) & 0xFFFFFFFFFFFFFFF8);
  sub_20E39CE70(*(id *)(v10 + 8), *(_BYTE *)(v10 + 16));
  swift_release();
  return sub_20E3A3D14(*(_QWORD *)((v10 + 47) & 0xFFFFFFFFFFFFFFF8), *(_QWORD *)(((v10 + 47) & 0xFFFFFFFFFFFFFFF8) + 8), *(unsigned __int8 *)(((v10 + 47) & 0xFFFFFFFFFFFFFFF8) + 16), *(_BYTE *)(((v10 + 47) & 0xFFFFFFFFFFFFFFF8) + 17));
}

uint64_t sub_20E3C7818(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  _OWORD *v21;
  _OWORD *v22;
  __int128 v23;
  unint64_t v24;
  unint64_t v25;
  char *v26;
  char *v27;
  void *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = (_BYTE *)(v6 + a2);
  *(_BYTE *)(v6 + a1) = *v8;
  v9 = sub_20E4A39A4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (v11 | 7) + 1;
  v13 = (_QWORD *)((v12 + v7) & ~(v11 | 7));
  v14 = (_QWORD *)((unint64_t)&v8[v12] & ~(v11 | 7));
  *v13 = *v14;
  v15 = (_QWORD *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
  v16 = (_QWORD *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v15 = *v16;
  v17 = ((unint64_t)v15 + v11 + 8) & ~v11;
  v18 = ((unint64_t)v16 + v11 + 8) & ~v11;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v17, v18, v9);
  v19 = *(_QWORD *)(v10 + 64);
  v20 = (_BYTE *)(v17 + v19);
  *v20 = *(_BYTE *)(v18 + v19);
  v20[1] = *(_BYTE *)(v18 + v19 + 1);
  v21 = (_OWORD *)((v17 + v19 + 9) & 0xFFFFFFFFFFFFFFF8);
  v22 = (_OWORD *)((v18 + v19 + 9) & 0xFFFFFFFFFFFFFFF8);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  v24 = (((v11 + 16) & ~v11) + v19 + 9) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)((char *)v13 + v24 + 32) = *(_QWORD *)((char *)v14 + v24 + 32);
  v25 = ((v24 + 39) & 0xFFFFFFFFFFFFFFF8) + 8;
  v26 = (char *)v13 + v25;
  v27 = (char *)v14 + v25;
  v28 = *(void **)((char *)v14 + v25);
  LOBYTE(v18) = *((_BYTE *)v14 + v25 + 8);
  swift_retain();
  sub_20E39CFA0(v28, v18);
  *(_QWORD *)v26 = v28;
  v26[8] = v18;
  v26[16] = v27[16];
  *((_QWORD *)v26 + 3) = *((_QWORD *)v27 + 3);
  v29 = (unint64_t)(v26 + 39) & 0xFFFFFFFFFFFFFFF8;
  v30 = (unint64_t)(v27 + 39) & 0xFFFFFFFFFFFFFFF8;
  v31 = *(_QWORD *)v30;
  v32 = *(_QWORD *)(v30 + 8);
  LOBYTE(v26) = *(_BYTE *)(v30 + 17);
  v33 = *(unsigned __int8 *)(v30 + 16);
  swift_retain();
  sub_20E3A3AFC(v31, v32, v33, (char)v26);
  *(_QWORD *)v29 = v31;
  *(_QWORD *)(v29 + 8) = v32;
  *(_BYTE *)(v29 + 16) = v33;
  *(_BYTE *)(v29 + 17) = (_BYTE)v26;
  return a1;
}

uint64_t sub_20E3C79C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  _QWORD *v21;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  char *v25;
  char *v26;
  id v27;
  void *v28;
  char v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = (_BYTE *)(v6 + a2);
  *(_BYTE *)(v6 + a1) = *v8;
  v9 = sub_20E4A39A4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (v11 | 7) + 1;
  v13 = (_QWORD *)((v12 + v7) & ~(v11 | 7));
  v14 = (_QWORD *)((unint64_t)&v8[v12] & ~(v11 | 7));
  *v13 = *v14;
  v15 = (_QWORD *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
  v16 = (_QWORD *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v15 = *v16;
  v17 = ((unint64_t)v15 + v11 + 8) & ~v11;
  v18 = ((unint64_t)v16 + v11 + 8) & ~v11;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 24))(v17, v18, v9);
  v19 = *(_QWORD *)(v10 + 64);
  v20 = (_BYTE *)(v17 + v19);
  *v20 = *(_BYTE *)(v18 + v19);
  v20[1] = *(_BYTE *)(v18 + v19 + 1);
  v21 = (_QWORD *)((v17 + v19 + 9) & 0xFFFFFFFFFFFFFFF8);
  v22 = (_QWORD *)((v18 + v19 + 9) & 0xFFFFFFFFFFFFFFF8);
  *v21 = *v22;
  v21[1] = v22[1];
  v21[2] = v22[2];
  v21[3] = v22[3];
  v23 = (((v11 + 16) & ~v11) + v19 + 9) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)((char *)v13 + v23 + 32) = *(_QWORD *)((char *)v14 + v23 + 32);
  swift_retain();
  swift_release();
  v24 = ((v23 + 39) & 0xFFFFFFFFFFFFFFF8) + 8;
  v25 = (char *)v13 + v24;
  v26 = (char *)v14 + v24;
  v27 = *(id *)v26;
  LOBYTE(v23) = v26[8];
  sub_20E39CFA0(*(id *)v26, v23);
  v28 = *(void **)v25;
  v29 = v25[8];
  *(_QWORD *)v25 = v27;
  v25[8] = v23;
  sub_20E39CE70(v28, v29);
  v25[16] = v26[16];
  *((_QWORD *)v25 + 3) = *((_QWORD *)v26 + 3);
  swift_retain();
  swift_release();
  v30 = (unint64_t)(v25 + 39) & 0xFFFFFFFFFFFFFFF8;
  v31 = (unint64_t)(v26 + 39) & 0xFFFFFFFFFFFFFFF8;
  v32 = *(_QWORD *)v31;
  v33 = *(_QWORD *)(v31 + 8);
  LOBYTE(v25) = *(_BYTE *)(v31 + 17);
  LOBYTE(v26) = *(_BYTE *)(v31 + 16);
  sub_20E3A3AFC(*(_QWORD *)v31, v33, v26, (char)v25);
  v34 = *(_QWORD *)v30;
  v35 = *(_QWORD *)(v30 + 8);
  v36 = *(_BYTE *)(v30 + 17);
  *(_QWORD *)v30 = v32;
  *(_QWORD *)(v30 + 8) = v33;
  v37 = *(unsigned __int8 *)(v30 + 16);
  *(_BYTE *)(v30 + 16) = (_BYTE)v26;
  *(_BYTE *)(v30 + 17) = (_BYTE)v25;
  sub_20E3A3D14(v34, v35, v37, v36);
  return a1;
}

uint64_t sub_20E3C7BB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  _OWORD *v21;
  _OWORD *v22;
  __int128 v23;
  unint64_t v24;
  unint64_t v25;
  char *v26;
  char *v27;
  unint64_t v28;
  unint64_t v29;
  __int128 v30;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = (_BYTE *)(v6 + a2);
  *(_BYTE *)(v6 + a1) = *v8;
  v9 = sub_20E4A39A4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (v11 | 7) + 1;
  v13 = (_QWORD *)((v12 + v7) & ~(v11 | 7));
  v14 = (_QWORD *)((unint64_t)&v8[v12] & ~(v11 | 7));
  *v13 = *v14;
  v15 = (_QWORD *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
  v16 = (_QWORD *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v15 = *v16;
  v17 = ((unint64_t)v15 + v11 + 8) & ~v11;
  v18 = ((unint64_t)v16 + v11 + 8) & ~v11;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v17, v18, v9);
  v19 = *(_QWORD *)(v10 + 64);
  v20 = (_BYTE *)(v17 + v19);
  *v20 = *(_BYTE *)(v18 + v19);
  v20[1] = *(_BYTE *)(v18 + v19 + 1);
  v21 = (_OWORD *)((v17 + v19 + 9) & 0xFFFFFFFFFFFFFFF8);
  v22 = (_OWORD *)((v18 + v19 + 9) & 0xFFFFFFFFFFFFFFF8);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  v24 = (((v11 + 16) & ~v11) + v19 + 9) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)((char *)v13 + v24 + 32) = *(_QWORD *)((char *)v14 + v24 + 32);
  v25 = ((v24 + 39) & 0xFFFFFFFFFFFFFFF8) + 8;
  v26 = (char *)v13 + v25;
  v27 = (char *)v14 + v25;
  LOBYTE(v22) = v27[8];
  *(_QWORD *)v26 = *(_QWORD *)v27;
  v26[8] = (char)v22;
  *((_OWORD *)v26 + 1) = *((_OWORD *)v27 + 1);
  v28 = (unint64_t)(v26 + 39) & 0xFFFFFFFFFFFFFFF8;
  v29 = (unint64_t)(v27 + 39) & 0xFFFFFFFFFFFFFFF8;
  v30 = *(_OWORD *)v29;
  *(_WORD *)(v28 + 16) = *(_WORD *)(v29 + 16);
  *(_OWORD *)v28 = v30;
  return a1;
}

uint64_t sub_20E3C7D24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  _QWORD *v21;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  char *v25;
  char *v26;
  char v27;
  void *v28;
  char v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = v6 + a1;
  v8 = (_BYTE *)(v6 + a2);
  *(_BYTE *)(v6 + a1) = *v8;
  v9 = sub_20E4A39A4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (v11 | 7) + 1;
  v13 = (_QWORD *)((v12 + v7) & ~(v11 | 7));
  v14 = (_QWORD *)((unint64_t)&v8[v12] & ~(v11 | 7));
  *v13 = *v14;
  v15 = (_QWORD *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
  v16 = (_QWORD *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v15 = *v16;
  v17 = ((unint64_t)v15 + v11 + 8) & ~v11;
  v18 = ((unint64_t)v16 + v11 + 8) & ~v11;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 40))(v17, v18, v9);
  v19 = *(_QWORD *)(v10 + 64);
  v20 = (_BYTE *)(v17 + v19);
  *v20 = *(_BYTE *)(v18 + v19);
  v20[1] = *(_BYTE *)(v18 + v19 + 1);
  v21 = (_QWORD *)((v17 + v19 + 9) & 0xFFFFFFFFFFFFFFF8);
  v22 = (_QWORD *)((v18 + v19 + 9) & 0xFFFFFFFFFFFFFFF8);
  *v21 = *v22;
  v21[1] = v22[1];
  v21[2] = v22[2];
  v21[3] = v22[3];
  v23 = (((v11 + 16) & ~v11) + v19 + 9) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)((char *)v13 + v23 + 32) = *(_QWORD *)((char *)v14 + v23 + 32);
  swift_release();
  v24 = ((v23 + 39) & 0xFFFFFFFFFFFFFFF8) + 8;
  v25 = (char *)v13 + v24;
  v26 = (char *)v14 + v24;
  v27 = *((_BYTE *)v14 + v24 + 8);
  v28 = *(void **)((char *)v13 + v24);
  v29 = *((_BYTE *)v13 + v24 + 8);
  *(_QWORD *)v25 = *(_QWORD *)((char *)v14 + v24);
  v25[8] = v27;
  sub_20E39CE70(v28, v29);
  v25[16] = v26[16];
  *((_QWORD *)v25 + 3) = *((_QWORD *)v26 + 3);
  swift_release();
  v30 = (unint64_t)(v25 + 39) & 0xFFFFFFFFFFFFFFF8;
  v31 = (unint64_t)(v26 + 39) & 0xFFFFFFFFFFFFFFF8;
  v32 = *(_BYTE *)(v31 + 16);
  v33 = *(_BYTE *)(v31 + 17);
  v34 = *(_QWORD *)v30;
  v35 = *(_QWORD *)(v30 + 8);
  v36 = *(_BYTE *)(v30 + 17);
  *(_OWORD *)v30 = *(_OWORD *)v31;
  v37 = *(unsigned __int8 *)(v30 + 16);
  *(_BYTE *)(v30 + 16) = v32;
  *(_BYTE *)(v30 + 17) = v33;
  sub_20E3A3D14(v34, v35, v37, v36);
  return a1;
}

uint64_t sub_20E3C7EE8(unint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t (*v26)(unint64_t, uint64_t, uint64_t);
  unint64_t v28;
  unsigned int v29;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  v8 = sub_20E4A39A4();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= 0xFE)
    v11 = 254;
  else
    v11 = *(_DWORD *)(v9 + 84);
  if (v10 <= 0x7FFFFFFE)
    v12 = 2147483646;
  else
    v12 = *(_DWORD *)(v9 + 84);
  if (v7 <= v12)
    v13 = v12;
  else
    v13 = v7;
  if (!a2)
    return 0;
  v14 = v8;
  v15 = *(_QWORD *)(v6 + 64);
  v16 = *(unsigned __int8 *)(v9 + 80);
  v17 = v16 | 7;
  v18 = *(_QWORD *)(v9 + 64);
  v19 = (v18 + ((v16 + 16) & ~v16) + 9) & 0xFFFFFFFFFFFFFFF8;
  if (v13 < a2)
  {
    v20 = ((((v15 + v17 + 1) & ~(_DWORD)v17) + ((v19 + 39) & 0xFFFFFFF8) + 47) & 0xFFFFFFF8) + 18;
    if (v20 <= 3)
      v21 = ((a2 - v13 + 0xFFFF) >> (8 * v20)) + 1;
    else
      v21 = 2;
    if (v21 >= 0x10000)
      v22 = 4;
    else
      v22 = 2;
    if (v21 < 0x100)
      v22 = 1;
    if (v21 >= 2)
      v23 = v22;
    else
      v23 = 0;
    __asm { BR              X5 }
  }
  if (v7 >= v12)
  {
    v26 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v6 + 48);
    v25 = a1;
    v10 = v7;
    v14 = v5;
    return v26(v25, v10, v14);
  }
  v24 = (a1 + v15 + v17 + 1) & ~v17;
  if (v11 == v12)
  {
    v25 = (v16 + ((v24 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v16;
    if (v10 >= 0xFE)
    {
      v26 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v9 + 48);
      return v26(v25, v10, v14);
    }
    v29 = *(unsigned __int8 *)(v25 + v18);
    if (v29 < 2)
      return 0;
    return ((v29 + 2147483646) & 0x7FFFFFFF) + 1;
  }
  else
  {
    v28 = *(_QWORD *)(v24 + v19 + 32);
    if (v28 >= 0xFFFFFFFF)
      LODWORD(v28) = -1;
    if ((v28 + 1) >= 2)
      return v28;
    else
      return 0;
  }
}

void sub_20E3C8104(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unsigned int v15;
  int v16;
  int v17;
  unsigned int v18;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(sub_20E4A39A4() - 8);
  if (*(_DWORD *)(v9 + 84) <= 0x7FFFFFFEu)
    v10 = 2147483646;
  else
    v10 = *(_DWORD *)(v9 + 84);
  if (v8 <= v10)
    v11 = v10;
  else
    v11 = v8;
  v12 = *(unsigned __int8 *)(v9 + 80);
  v13 = (*(_QWORD *)(v9 + 64) + ((v12 + 16) & ~v12) + 9) & 0xFFFFFFFFFFFFFFF8;
  v14 = ((((*(_QWORD *)(v7 + 64) + (v12 | 7) + 1) & ~(v12 | 7)) + ((v13 + 39) & 0xFFFFFFFFFFFFFFF8) + 8 + 39) & 0xFFFFFFFFFFFFFFF8)
      + 18;
  if (v11 >= a3)
  {
    v17 = 0;
    if (v11 >= a2)
      goto LABEL_20;
  }
  else
  {
    if (v14 <= 3)
      v15 = ((a3 - v11 + 0xFFFF) >> (8 * v14)) + 1;
    else
      v15 = 2;
    if (v15 >= 0x10000)
      v16 = 4;
    else
      v16 = 2;
    if (v15 < 0x100)
      v16 = 1;
    if (v15 >= 2)
      v17 = v16;
    else
      v17 = 0;
    if (v11 >= a2)
LABEL_20:
      __asm { BR              X5 }
  }
  v18 = ~v11 + a2;
  bzero(a1, ((((*(_QWORD *)(v7 + 64) + (v12 | 7) + 1) & ~(v12 | 7)) + ((v13 + 39) & 0xFFFFFFFFFFFFFFF8) + 8 + 39) & 0xFFFFFFFFFFFFFFF8)+ 18);
  if (v14 > 3)
    *a1 = v18;
  else
    *(_WORD *)a1 = v18;
  __asm { BR              X11 }
}

void sub_20E3C8290(char a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v1 + v2) = a1;
  JUMPOUT(0x20E3C838CLL);
}

void sub_20E3C8298()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v1 + v2) = 0;
  if (v0)
    JUMPOUT(0x20E3C82A0);
  JUMPOUT(0x20E3C838CLL);
}

void sub_20E3C8308(__int16 a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_WORD *)(v1 + v2) = a1;
  JUMPOUT(0x20E3C838CLL);
}

void sub_20E3C8310(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v1 + v2) = a1;
  JUMPOUT(0x20E3C838CLL);
}

uint64_t sub_20E3C8318(uint64_t a1, size_t a2)
{
  _DWORD *v2;
  int v3;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_WORD *)(v10 + v13) = 0;
  if (!(_DWORD)v9)
    goto LABEL_7;
  if (v12 < v5)
  {
    v2 = (_DWORD *)((v10 + v6 + v7 + 1) & v8);
    if (v5 >= v9)
      JUMPOUT(0x20E3C8324);
    if ((_DWORD)a2)
    {
      v3 = ~v5 + v9;
      bzero(v2, a2);
      *v2 = v3;
    }
LABEL_7:
    JUMPOUT(0x20E3C838CLL);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(v10, v9, v12, v11);
}

uint64_t type metadata accessor for PlayableViewModifier.Snapshot(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PlayableViewModifier.Snapshot);
}

uint64_t sub_20E3C83B4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_20E4A39A4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *sub_20E3C8440(_OWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  __int128 v15;
  uint64_t v16;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(_OWORD *)a2;
    v7 = a3[10];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_20E4A39A4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = a3[12];
    *((_BYTE *)v4 + a3[11]) = *((_BYTE *)a2 + a3[11]);
    *((_BYTE *)v4 + v11) = *((_BYTE *)a2 + v11);
    v12 = a3[13];
    v13 = (_OWORD *)((char *)v4 + v12);
    v14 = (_OWORD *)((char *)a2 + v12);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
  }
  return v4;
}

uint64_t sub_20E3C8500(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 40);
  v3 = sub_20E4A39A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_OWORD *sub_20E3C8538(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  __int128 v14;

  *a1 = *a2;
  v6 = a3[10];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_20E4A39A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  v10 = a3[12];
  *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
  *((_BYTE *)a1 + v10) = *((_BYTE *)a2 + v10);
  v11 = a3[13];
  v12 = (_OWORD *)((char *)a1 + v11);
  v13 = (_OWORD *)((char *)a2 + v11);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  return a1;
}

_QWORD *sub_20E3C85CC(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  *a1 = *a2;
  a1[1] = a2[1];
  v6 = a3[10];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_20E4A39A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
  *((_BYTE *)a1 + a3[12]) = *((_BYTE *)a2 + a3[12]);
  v10 = a3[13];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  v11[2] = v12[2];
  v11[3] = v12[3];
  return a1;
}

_OWORD *sub_20E3C8684(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  __int128 v14;

  *a1 = *a2;
  v6 = a3[10];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_20E4A39A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[12];
  *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
  *((_BYTE *)a1 + v10) = *((_BYTE *)a2 + v10);
  v11 = a3[13];
  v12 = (_OWORD *)((char *)a1 + v11);
  v13 = (_OWORD *)((char *)a2 + v11);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  return a1;
}

_OWORD *sub_20E3C8718(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  __int128 v14;

  *a1 = *a2;
  v6 = a3[10];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_20E4A39A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[12];
  *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
  *((_BYTE *)a1 + v10) = *((_BYTE *)a2 + v10);
  v11 = a3[13];
  v12 = (_OWORD *)((char *)a1 + v11);
  v13 = (_OWORD *)((char *)a2 + v11);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  return a1;
}

uint64_t sub_20E3C87AC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_20E3C87B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = sub_20E4A39A4();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 40), a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 44));
  if (v9 >= 2)
    return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t sub_20E3C8848()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_20E3C8854(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_20E4A39A4();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 40), a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 44)) = a2 + 1;
  return result;
}

uint64_t sub_20E3C88D0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E3C8904()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E3C893C@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(v2 + 16);
  v5 = *(_QWORD *)(v2 + 24);
  type metadata accessor for PlayableViewModifier(0, v4, v5, a1);
  return sub_20E3C6A70(v4, v5, a2);
}

void sub_20E3C89A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for PlayableViewModifier(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
  sub_20E3CB310(a1, v6, v7, v8);
}

uint64_t sub_20E3C89F4(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *(_QWORD *)(v4 + 16);
  v7 = *(_QWORD *)(v4 + 24);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for PlayableViewModifier(0, v6, v7, a4) - 8) + 80);
  return sub_20E3C6B44(a1, v4 + ((v8 + 32) & ~v8), v6, v7);
}

uint64_t objectdestroy_6Tm_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v4 + 24);
  v7 = (int *)type metadata accessor for PlayableViewModifier(0, v5, v6, a4);
  v8 = *(unsigned __int8 *)(*((_QWORD *)v7 - 1) + 80);
  v9 = v4 + ((v8 + 32) & ~v8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v9, v5);
  v10 = v9 + v7[10];
  v12 = v10 + *(int *)(type metadata accessor for PlayableViewModifier.Snapshot(0, v5, v6, v11) + 40);
  v13 = sub_20E4A39A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  sub_20E4A4670();
  swift_release();
  sub_20E39CE70(*(id *)(v9 + v7[11]), *(_BYTE *)(v9 + v7[11] + 8));
  swift_release();
  sub_20E3A3D14(*(_QWORD *)(v9 + v7[13]), *(_QWORD *)(v9 + v7[13] + 8), *(unsigned __int8 *)(v9 + v7[13] + 16), *(_BYTE *)(v9 + v7[13] + 17));
  return swift_deallocObject();
}

void sub_20E3C8B6C(uint64_t a1, _BYTE *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;

  v6 = type metadata accessor for PlayableViewModifier(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
  if (*a2 == 1)
    sub_20E3C6180(v6);
}

uint64_t sub_20E3C8BB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  char v8;
  uint64_t result;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_20E3BCCB0(a1);
  v8 = v7;
  result = swift_bridgeObjectRelease();
  if ((v8 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v3;
    v17 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_20E3CAB30();
      v11 = v17;
    }
    sub_20E3B8008(*(_QWORD *)(v11 + 48) + 40 * v6);
    v12 = (uint64_t *)(*(_QWORD *)(v11 + 56) + 32 * v6);
    v13 = *v12;
    v14 = v12[1];
    v15 = v12[2];
    v16 = v12[3];
    sub_20E3C9DE8(v6, v11);
    *v3 = v11;
    result = swift_bridgeObjectRelease();
  }
  else
  {
    v13 = 0;
    v14 = 0;
    v15 = 0;
    v16 = 0;
  }
  *(_QWORD *)a2 = v13;
  *(_QWORD *)(a2 + 8) = v14;
  *(_QWORD *)(a2 + 16) = v15;
  *(_QWORD *)(a2 + 24) = v16;
  *(_BYTE *)(a2 + 32) = (v8 & 1) == 0;
  return result;
}

double sub_20E3C8CBC@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double result;
  uint64_t v13;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_20E3BCCAC(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v13 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_20E3CAD0C();
      v9 = v13;
    }
    v10 = *(_QWORD *)(v9 + 48);
    v11 = sub_20E4A4E68();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v6, v11);
    sub_20E3B8B34((_OWORD *)(*(_QWORD *)(v9 + 56) + 32 * v6), a2);
    sub_20E3C9FB0(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

uint64_t sub_20E3C8DB8(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  _QWORD *v39;
  int v40;
  __int128 v41[2];

  v3 = v2;
  v5 = sub_20E4A4E68();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A19028);
  v40 = a2;
  v10 = sub_20E4A62C0();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v39 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v37 = v2;
  v38 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  while (1)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_22;
    }
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v38)
      break;
    v23 = v39;
    v24 = v39[v22];
    ++v18;
    if (!v24)
    {
      v18 = v22 + 1;
      if (v22 + 1 >= v38)
        goto LABEL_34;
      v24 = v39[v18];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v38)
        {
LABEL_34:
          swift_release();
          v3 = v37;
          if ((v40 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v39[v25];
        if (!v24)
        {
          while (1)
          {
            v18 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v18 >= v38)
              goto LABEL_34;
            v24 = v39[v18];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v18 = v25;
      }
    }
LABEL_21:
    v15 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v6 + 72);
    v27 = *(_QWORD *)(v9 + 48) + v26 * v21;
    if ((v40 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v27, v5);
      sub_20E3B1AB4((__int128 *)(*(_QWORD *)(v9 + 56) + 40 * v21), (uint64_t)v41);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v27, v5);
      sub_20E3C39FC(*(_QWORD *)(v9 + 56) + 40 * v21, (uint64_t)v41);
    }
    sub_20E39F334(&qword_254A18BD0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5CE78], MEMORY[0x24BE5CE88]);
    result = sub_20E4A5BA0();
    v28 = -1 << *(_BYTE *)(v11 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v16 + 8 * (v29 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v16 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v16 + 8 * v30);
      }
      while (v34 == -1);
      v19 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v26 * v19, v8, v5);
    result = sub_20E3B1AB4(v41, *(_QWORD *)(v11 + 56) + 40 * v19);
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v37;
  v23 = v39;
  if ((v40 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v35 = 1 << *(_BYTE *)(v9 + 32);
  if (v35 >= 64)
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v35;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_20E3C9160(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A18B48);
  v6 = sub_20E4A62C0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v40 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_22;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v11)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v40 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v11)
        goto LABEL_34;
      v24 = *(_QWORD *)(v40 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = *(_QWORD *)(v40 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v14 >= v11)
              goto LABEL_34;
            v24 = *(_QWORD *)(v40 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v14 = v25;
      }
    }
LABEL_21:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v5 + 48) + 40 * v21;
    if ((a2 & 1) != 0)
    {
      v27 = *(_OWORD *)v26;
      v28 = *(_OWORD *)(v26 + 16);
      v44 = *(_QWORD *)(v26 + 32);
      v42 = v27;
      v43 = v28;
    }
    else
    {
      sub_20E3B7F84(v26, (uint64_t)&v42);
    }
    v29 = *(_QWORD *)(v5 + 56) + 32 * v21;
    v30 = *(_QWORD *)(v29 + 24);
    v41 = *(_OWORD *)(v29 + 8);
    v31 = *(_QWORD *)v29;
    result = sub_20E4A6164();
    v32 = -1 << *(_BYTE *)(v7 + 32);
    v33 = result & ~v32;
    v34 = v33 >> 6;
    if (((-1 << v33) & ~*(_QWORD *)(v12 + 8 * (v33 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v33) & ~*(_QWORD *)(v12 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v35 = 0;
      v36 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (++v34 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v37 = v34 == v36;
        if (v34 == v36)
          v34 = 0;
        v35 |= v37;
        v38 = *(_QWORD *)(v12 + 8 * v34);
      }
      while (v38 == -1);
      v15 = __clz(__rbit64(~v38)) + (v34 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    v16 = *(_QWORD *)(v7 + 48) + 40 * v15;
    v17 = v42;
    v18 = v43;
    *(_QWORD *)(v16 + 32) = v44;
    *(_OWORD *)v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    v19 = *(_QWORD *)(v7 + 56) + 32 * v15;
    *(_QWORD *)v19 = v31;
    *(_OWORD *)(v19 + 8) = v41;
    *(_QWORD *)(v19 + 24) = v30;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v23 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v39 = 1 << *(_BYTE *)(v5 + 32);
  if (v39 >= 64)
    bzero(v23, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v39;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_20E3C947C(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;
  _QWORD *v38;
  int v39;
  _OWORD v40[2];

  v3 = v2;
  v5 = sub_20E4A4E68();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A18BC8);
  v39 = a2;
  v10 = sub_20E4A62C0();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v38 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v36 = v2;
  v37 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  while (1)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_22;
    }
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v37)
      break;
    v23 = v38;
    v24 = v38[v22];
    ++v18;
    if (!v24)
    {
      v18 = v22 + 1;
      if (v22 + 1 >= v37)
        goto LABEL_34;
      v24 = v38[v18];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_34:
          swift_release();
          v3 = v36;
          if ((v39 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v38[v25];
        if (!v24)
        {
          while (1)
          {
            v18 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v18 >= v37)
              goto LABEL_34;
            v24 = v38[v18];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v18 = v25;
      }
    }
LABEL_21:
    v15 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v6 + 72);
    v27 = *(_QWORD *)(v9 + 48) + v26 * v21;
    if ((v39 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v27, v5);
      sub_20E3B8B34((_OWORD *)(*(_QWORD *)(v9 + 56) + 32 * v21), v40);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v27, v5);
      sub_20E3BB3A0(*(_QWORD *)(v9 + 56) + 32 * v21, (uint64_t)v40);
    }
    sub_20E39F334(&qword_254A18BD0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5CE78], MEMORY[0x24BE5CE88]);
    result = sub_20E4A5BA0();
    v28 = -1 << *(_BYTE *)(v11 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v16 + 8 * (v29 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v16 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v16 + 8 * v30);
      }
      while (v34 == -1);
      v19 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v26 * v19, v8, v5);
    result = (uint64_t)sub_20E3B8B34(v40, (_OWORD *)(*(_QWORD *)(v11 + 56) + 32 * v19));
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v36;
  v23 = v38;
  if ((v39 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v35 = 1 << *(_BYTE *)(v9 + 32);
  if (v35 >= 64)
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v35;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_20E3C9818(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  _QWORD *v35;
  __int128 v36;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A18BB8);
  v6 = sub_20E4A62C0();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v35 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v34 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v21 = v20 | (v13 << 6);
      }
      else
      {
        v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v34)
          goto LABEL_33;
        v23 = v35[v22];
        ++v13;
        if (!v23)
        {
          v13 = v22 + 1;
          if (v22 + 1 >= v34)
            goto LABEL_33;
          v23 = v35[v13];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v34)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((a2 & 1) != 0)
              {
                v33 = 1 << *(_BYTE *)(v5 + 32);
                if (v33 >= 64)
                  bzero(v35, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v35 = -1 << v33;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v23 = v35[v24];
            if (!v23)
            {
              while (1)
              {
                v13 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_40;
                if (v13 >= v34)
                  goto LABEL_33;
                v23 = v35[v13];
                ++v24;
                if (v23)
                  goto LABEL_30;
              }
            }
            v13 = v24;
          }
        }
LABEL_30:
        v10 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      v29 = 16 * v21;
      v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v29);
      v32 = *v30;
      v31 = v30[1];
      v36 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + v29);
      if ((a2 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_retain();
      }
      sub_20E4A6410();
      swift_bridgeObjectRetain();
      sub_20E4A5C60();
      swift_bridgeObjectRelease();
      result = sub_20E4A6428();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v27 = v16 == v26;
          if (v16 == v26)
            v16 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = 16 * v17;
      v19 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v18);
      *v19 = v32;
      v19[1] = v31;
      *(_OWORD *)(*(_QWORD *)(v7 + 56) + v18) = v36;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_20E3C9B2C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  __int128 v34;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A18B20);
  result = sub_20E4A62C0();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v9 = (uint64_t *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v31 = -1 << v10;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v32 = 1 << *(_BYTE *)(v5 + 32);
    v33 = v3;
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v20 = v19 | (v8 << 6);
      }
      else
      {
        v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v21 >= v13)
          goto LABEL_33;
        v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          v8 = v21 + 1;
          if (v21 + 1 >= v13)
            goto LABEL_33;
          v22 = v9[v8];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v13)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v33;
                goto LABEL_40;
              }
              if (v32 >= 64)
                bzero((void *)(v5 + 64), 8 * v13);
              else
                *v9 = v31;
              v3 = v33;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                v8 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_42;
                if (v8 >= v13)
                  goto LABEL_33;
                v22 = v9[v8];
                ++v23;
                if (v22)
                  goto LABEL_30;
              }
            }
            v8 = v23;
          }
        }
LABEL_30:
        v12 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      v28 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v20);
      v34 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + 16 * v20);
      if ((a2 & 1) == 0)
      {
        v29 = (id)v34;
        v30 = *((id *)&v34 + 1);
      }
      result = sub_20E4A6404();
      v15 = -1 << *(_BYTE *)(v7 + 32);
      v16 = result & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v14 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v14 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v26 = v17 == v25;
          if (v17 == v25)
            v17 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v14 + 8 * v17);
        }
        while (v27 == -1);
        v18 = __clz(__rbit64(~v27)) + (v17 << 6);
      }
      *(_QWORD *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v18) = v28;
      *(_OWORD *)(*(_QWORD *)(v7 + 56) + 16 * v18) = v34;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

unint64_t sub_20E3C9DE8(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v14;
  unint64_t v15;
  __int128 *v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  _OWORD *v20;
  _OWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  _BYTE v28[40];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_20E4A6134();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_20E3B7F84(*(_QWORD *)(a2 + 48) + 40 * v6, (uint64_t)v28);
        v10 = sub_20E4A6164();
        result = sub_20E3B8008((uint64_t)v28);
        v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            v14 = *(_QWORD *)(a2 + 48);
            v15 = v14 + 40 * v3;
            v16 = (__int128 *)(v14 + 40 * v6);
            if (v3 != v6 || v15 >= (unint64_t)v16 + 40)
            {
              v17 = *v16;
              v18 = v16[1];
              *(_QWORD *)(v15 + 32) = *((_QWORD *)v16 + 4);
              *(_OWORD *)v15 = v17;
              *(_OWORD *)(v15 + 16) = v18;
            }
            v19 = *(_QWORD *)(a2 + 56);
            v20 = (_OWORD *)(v19 + 32 * v3);
            v21 = (_OWORD *)(v19 + 32 * v6);
            if (v3 != v6 || (v3 = v6, v20 >= v21 + 2))
            {
              v9 = v21[1];
              *v20 = *v21;
              v20[1] = v9;
              v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v23 = *v22;
    v24 = (-1 << v3) - 1;
  }
  else
  {
    v22 = (uint64_t *)(v4 + 8 * (result >> 6));
    v24 = *v22;
    v23 = (-1 << result) - 1;
  }
  *v22 = v24 & v23;
  v25 = *(_QWORD *)(a2 + 16);
  v26 = __OFSUB__(v25, 1);
  v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_20E3C9FB0(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  _OWORD *v23;
  _OWORD *v24;
  __int128 v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, unint64_t, uint64_t);
  unint64_t v34;
  uint64_t v35;

  v4 = sub_20E4A4E68();
  v35 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a2 + 64;
  v8 = -1 << *(_BYTE *)(a2 + 32);
  v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(_QWORD *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    v10 = ~v8;
    v11 = sub_20E4A6134();
    if ((*(_QWORD *)(v7 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      v34 = (v11 + 1) & v10;
      v12 = *(_QWORD *)(v35 + 72);
      v33 = *(void (**)(char *, unint64_t, uint64_t))(v35 + 16);
      v13 = v10;
      do
      {
        v14 = v7;
        v15 = v12;
        v16 = v12 * v9;
        v17 = v13;
        v33(v6, *(_QWORD *)(a2 + 48) + v12 * v9, v4);
        sub_20E39F334(&qword_254A18BD0, (uint64_t (*)(uint64_t))MEMORY[0x24BE5CE78], MEMORY[0x24BE5CE88]);
        v18 = sub_20E4A5BA0();
        (*(void (**)(char *, uint64_t))(v35 + 8))(v6, v4);
        v13 = v17;
        v19 = v18 & v17;
        if (a1 >= (uint64_t)v34)
        {
          if (v19 >= v34 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            v7 = v14;
            if (v15 * a1 < v16
              || (v12 = v15, *(_QWORD *)(a2 + 48) + v15 * a1 >= (unint64_t)(*(_QWORD *)(a2 + 48) + v16 + v15)))
            {
              swift_arrayInitWithTakeFrontToBack();
LABEL_21:
              v13 = v17;
              v12 = v15;
            }
            else if (v15 * a1 != v16)
            {
              swift_arrayInitWithTakeBackToFront();
              goto LABEL_21;
            }
            v22 = *(_QWORD *)(a2 + 56);
            v23 = (_OWORD *)(v22 + 32 * a1);
            v24 = (_OWORD *)(v22 + 32 * v9);
            if (a1 != v9 || (a1 = v9, v23 >= v24 + 2))
            {
              v25 = v24[1];
              *v23 = *v24;
              v23[1] = v25;
              a1 = v9;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v34 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        v7 = v14;
        v12 = v15;
LABEL_5:
        v9 = (v9 + 1) & v13;
      }
      while (((*(_QWORD *)(v7 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    v26 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v27 = *v26;
    v28 = (-1 << a1) - 1;
  }
  else
  {
    v26 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v28 = *v26;
    v27 = (-1 << a1) - 1;
  }
  *v26 = v28 & v27;
  v29 = *(_QWORD *)(a2 + 16);
  v30 = __OFSUB__(v29, 1);
  v31 = v29 - 1;
  if (v30)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v31;
    ++*(_DWORD *)(a2 + 36);
  }
}

uint64_t sub_20E3CA250(uint64_t a1, char a2, double a3, double a4, double a5, double a6)
{
  _QWORD *v6;
  _QWORD **v7;
  _QWORD *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t result;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  double *v23;
  char v24;
  _BYTE v25[40];

  v7 = (_QWORD **)v6;
  v14 = (_QWORD *)*v6;
  v16 = sub_20E3BCCB0(a1);
  v17 = v14[2];
  v18 = (v15 & 1) == 0;
  result = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
  }
  else
  {
    v20 = v15;
    v21 = v14[3];
    if (v21 >= result && (a2 & 1) != 0)
    {
LABEL_7:
      v22 = *v7;
      if ((v20 & 1) != 0)
      {
LABEL_8:
        v23 = (double *)(v22[7] + 32 * v16);
        *v23 = a3;
        v23[1] = a4;
        v23[2] = a5;
        v23[3] = a6;
        return result;
      }
      goto LABEL_11;
    }
    if (v21 >= result && (a2 & 1) == 0)
    {
      result = (uint64_t)sub_20E3CAB30();
      goto LABEL_7;
    }
    sub_20E3C9160(result, a2 & 1);
    result = sub_20E3BCCB0(a1);
    if ((v20 & 1) == (v24 & 1))
    {
      v16 = result;
      v22 = *v7;
      if ((v20 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_20E3B7F84(a1, (uint64_t)v25);
      return sub_20E3CA7F0(v16, (uint64_t)v25, v22, a3, a4, a5, a6);
    }
  }
  result = sub_20E4A638C();
  __break(1u);
  return result;
}

unint64_t sub_20E3CA384()
{
  unint64_t result;

  result = qword_254A19008;
  if (!qword_254A19008)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_254A19008);
  }
  return result;
}

_OWORD *sub_20E3CA3C0(_OWORD *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  _OWORD *v21;
  _OWORD *result;
  unint64_t v23;
  char v24;
  uint64_t v25;

  v4 = (_QWORD **)v3;
  v8 = sub_20E4A4E68();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_20E3BCCAC(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a3 & 1) != 0)
    {
LABEL_7:
      v20 = *v4;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = (_OWORD *)(v20[7] + 32 * v14);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
        return sub_20E3B8B34(a1, v21);
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_20E3CAD0C();
      goto LABEL_7;
    }
    sub_20E3C947C(v17, a3 & 1);
    v23 = sub_20E3BCCAC(a2);
    if ((v18 & 1) == (v24 & 1))
    {
      v14 = v23;
      v20 = *v4;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_20E3CA850(v14, (uint64_t)v11, a1, v20);
    }
  }
  result = (_OWORD *)sub_20E4A638C();
  __break(1u);
  return result;
}

uint64_t sub_20E3CA53C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t *v25;
  _QWORD *v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;

  v6 = v5;
  v12 = *v5;
  v14 = sub_20E3BCD58(a3, a4);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0)
    goto LABEL_7;
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_20E3CAF48();
LABEL_7:
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = (_QWORD *)(v20[7] + 16 * v14);
      result = swift_release();
      *v21 = a1;
      v21[1] = a2;
      return result;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    v25 = (uint64_t *)(v20[6] + 16 * v14);
    *v25 = a3;
    v25[1] = a4;
    v26 = (_QWORD *)(v20[7] + 16 * v14);
    *v26 = a1;
    v26[1] = a2;
    v27 = v20[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (!v28)
    {
      v20[2] = v29;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_20E3C9818(v17, a5 & 1);
  v23 = sub_20E3BCD58(a3, a4);
  if ((v18 & 1) == (v24 & 1))
  {
    v14 = v23;
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_20E4A638C();
  __break(1u);
  return result;
}

void sub_20E3CA6B0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  void *v20;
  unint64_t v21;
  char v22;
  _QWORD *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v5 = v4;
  v10 = *v4;
  v12 = sub_20E3BCDCC(a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_20E3CB108();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7] + 16 * v12;
      v20 = *(void **)v19;

      *(_QWORD *)v19 = a1;
      *(_QWORD *)(v19 + 8) = a2;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    *(_QWORD *)(v18[6] + 8 * v12) = a3;
    v23 = (_QWORD *)(v18[7] + 16 * v12);
    *v23 = a1;
    v23[1] = a2;
    v24 = v18[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (!v25)
    {
      v18[2] = v26;
      return;
    }
    goto LABEL_14;
  }
  sub_20E3C9B2C(v15, a4 & 1);
  v21 = sub_20E3BCDCC(a3);
  if ((v16 & 1) == (v22 & 1))
  {
    v12 = v21;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_20E4A638C();
  __break(1u);
}

unint64_t sub_20E3CA7F0(unint64_t result, uint64_t a2, _QWORD *a3, double a4, double a5, double a6, double a7)
{
  uint64_t v7;
  __int128 v8;
  double *v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  a3[(result >> 6) + 8] |= 1 << result;
  v7 = a3[6] + 40 * result;
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v7 = *(_OWORD *)a2;
  *(_OWORD *)(v7 + 16) = v8;
  *(_QWORD *)(v7 + 32) = *(_QWORD *)(a2 + 32);
  v9 = (double *)(a3[7] + 32 * result);
  *v9 = a4;
  v9[1] = a5;
  v9[2] = a6;
  v9[3] = a7;
  v10 = a3[2];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    a3[2] = v12;
  return result;
}

_OWORD *sub_20E3CA850(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  _OWORD *result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_20E4A4E68();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  result = sub_20E3B8B34(a3, (_OWORD *)(a4[7] + 32 * a1));
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

void *sub_20E3CA8F0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  __int128 v27[2];

  v1 = v0;
  v2 = sub_20E4A4E68();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A19028);
  v6 = *v0;
  v7 = sub_20E4A62B4();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v8;
    return result;
  }
  v25 = v1;
  result = (void *)(v7 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  v26 = v6 + 64;
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v13 = 1 << *(_BYTE *)(v6 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v6 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v21 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v16)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v21);
    ++v12;
    if (!v22)
    {
      v12 = v21 + 1;
      if (v21 + 1 >= v16)
        goto LABEL_26;
      v22 = *(_QWORD *)(v26 + 8 * v12);
      if (!v22)
        break;
    }
LABEL_25:
    v15 = (v22 - 1) & v22;
    v18 = __clz(__rbit64(v22)) + (v12 << 6);
LABEL_12:
    v19 = *(_QWORD *)(v3 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v19, v2);
    v20 = 40 * v18;
    sub_20E3C39FC(*(_QWORD *)(v6 + 56) + v20, (uint64_t)v27);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v19, v5, v2);
    result = (void *)sub_20E3B1AB4(v27, *(_QWORD *)(v8 + 56) + v20);
  }
  v23 = v21 + 2;
  if (v23 >= v16)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v22 = *(_QWORD *)(v26 + 8 * v23);
  if (v22)
  {
    v12 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v12);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_20E3CAB30()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  __int128 *v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  _OWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  _OWORD v26[2];
  uint64_t v27;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A18B48);
  v2 = *v0;
  v3 = sub_20E4A62B4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    result = (void *)sub_20E3B7F84(*(_QWORD *)(v2 + 48) + 40 * v15, (uint64_t)v26);
    v16 = (__int128 *)(*(_QWORD *)(v2 + 56) + 32 * v15);
    v17 = *(_QWORD *)(v4 + 48) + 40 * v15;
    v18 = *v16;
    v19 = v16[1];
    v20 = v27;
    v21 = v26[1];
    *(_OWORD *)v17 = v26[0];
    *(_OWORD *)(v17 + 16) = v21;
    *(_QWORD *)(v17 + 32) = v20;
    v22 = (_OWORD *)(*(_QWORD *)(v4 + 56) + 32 * v15);
    *v22 = v18;
    v22[1] = v19;
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_20E3CAD0C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t *v24;
  uint64_t v25;
  _OWORD v26[2];

  v1 = v0;
  v2 = sub_20E4A4E68();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A18BC8);
  v6 = *v0;
  v7 = sub_20E4A62B4();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v8;
    return result;
  }
  v24 = v1;
  result = (void *)(v7 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  v25 = v6 + 64;
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v13 = 1 << *(_BYTE *)(v6 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v6 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v21 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v16)
      goto LABEL_26;
    v22 = *(_QWORD *)(v25 + 8 * v21);
    ++v12;
    if (!v22)
    {
      v12 = v21 + 1;
      if (v21 + 1 >= v16)
        goto LABEL_26;
      v22 = *(_QWORD *)(v25 + 8 * v12);
      if (!v22)
        break;
    }
LABEL_25:
    v15 = (v22 - 1) & v22;
    v18 = __clz(__rbit64(v22)) + (v12 << 6);
LABEL_12:
    v19 = *(_QWORD *)(v3 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v19, v2);
    v20 = 32 * v18;
    sub_20E3BB3A0(*(_QWORD *)(v6 + 56) + v20, (uint64_t)v26);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v19, v5, v2);
    result = sub_20E3B8B34(v26, (_OWORD *)(*(_QWORD *)(v8 + 56) + v20));
  }
  v23 = v21 + 2;
  if (v23 >= v16)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v24;
    goto LABEL_28;
  }
  v22 = *(_QWORD *)(v25 + 8 * v23);
  if (v22)
  {
    v12 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v22 = *(_QWORD *)(v25 + 8 * v12);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_20E3CAF48()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A18BB8);
  v2 = *v0;
  v3 = sub_20E4A62B4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + v16) = v20;
    swift_bridgeObjectRetain();
    result = (void *)swift_retain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_20E3CB108()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  __int128 v23;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A18B20);
  v2 = *v0;
  v3 = sub_20E4A62B4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 16 * v15;
    v23 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + v18);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + v18) = v23;
    v19 = (id)v23;
    result = *((id *)&v23 + 1);
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_20E3CB2C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19010);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_20E3CB310(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for PlayableViewModifier.Snapshot(0, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4);
  v7 = MEMORY[0x24BDAC7A8](v6);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v8 + 16))((char *)&v10 - v9, a1, v6, v7);
  sub_20E4A4670();
  sub_20E4A4658();
  sub_20E3C6180(a2);
}

uint64_t sub_20E3CB3C4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_20E3CB414();
  result = sub_20E4A3C08();
  *a1 = v3;
  return result;
}

unint64_t sub_20E3CB414()
{
  unint64_t result;

  result = qword_254A19020;
  if (!qword_254A19020)
  {
    result = MEMORY[0x212BBDF90](&unk_20E4A8904, &type metadata for PlayableStorageKey);
    atomic_store(result, (unint64_t *)&qword_254A19020);
  }
  return result;
}

uint64_t sub_20E3CB458()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_20E3CB47C()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

ValueMetadata *type metadata accessor for PlayableStorageKey()
{
  return &type metadata for PlayableStorageKey;
}

uint64_t sub_20E3CB49C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[2];
  _QWORD v16[2];

  v4 = *a1;
  v5 = a1[1];
  v6 = type metadata accessor for PlayableViewModifier(255, *a1, v5, a4);
  MEMORY[0x212BBDF90](&unk_20E4A8810, v6);
  v7 = sub_20E4A3EA8();
  v9 = type metadata accessor for PlayableViewModifier.Snapshot(255, v4, v5, v8);
  MEMORY[0x212BBDF90](&unk_20E4A8798, v9);
  v10 = sub_20E4A3F2C();
  v11 = sub_20E4A39D4();
  v12 = sub_20E4A39D4();
  v16[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDEFB78], v7);
  v16[1] = MEMORY[0x212BBDF90](MEMORY[0x24BDF0400], v10);
  v13 = MEMORY[0x24BDED308];
  v15[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v11, v16);
  v15[1] = sub_20E3A5070();
  MEMORY[0x212BBDF90](v13, v12, v15);
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E3CB5EC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[2];

  v4 = type metadata accessor for OnPlayableViewChangeModifier(255, *a1, a1[1], a4);
  MEMORY[0x212BBDF90](&unk_20E4A87C0, v4);
  v5 = sub_20E4A3EA8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19030);
  v6 = sub_20E4A39D4();
  v8[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDEFB78], v5);
  v8[1] = sub_20E3CB690();
  return MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v6, v8);
}

unint64_t sub_20E3CB690()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254A19038;
  if (!qword_254A19038)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19030);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDF1028], v1);
    atomic_store(result, (unint64_t *)&qword_254A19038);
  }
  return result;
}

unint64_t sub_20E3CB6DC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_254A19040;
  if (!qword_254A19040)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19048);
    v2 = sub_20E39F334(qword_254A19050, (uint64_t (*)(uint64_t))type metadata accessor for PlayableStorage, MEMORY[0x24BEE5BE0]);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BEE4AB8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_254A19040);
  }
  return result;
}

void sub_20E3CB758(uint64_t a1)
{
  swift_getKeyPath();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  View.prefetchMediaArtwork<A, B>(of:id:)(a1);
}

uint64_t sub_20E3CB814()
{
  return swift_release();
}

void View.prefetchMediaArtwork<A, B>(of:id:)(uint64_t a1)
{
  MEMORY[0x24BDAC7A8](a1);
  type metadata accessor for _PrefetchMediaArtworkViewModifier();
}

void sub_20E3CB8CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;

  v5 = MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(uint64_t, uint64_t, uint64_t, double))(v1 + 16))(v4, v2, v3, v5);
  sub_20E3CB97C();
}

uint64_t sub_20E3CB924()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  swift_retain();
  MEMORY[0x212BBBA70](v1, *(_QWORD *)(v3 - 136), v0, *(_QWORD *)(v3 - 128));
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

void type metadata accessor for _PrefetchMediaArtworkViewModifier()
{
  JUMPOUT(0x212BBDEE8);
}

void sub_20E3CB97C()
{
  type metadata accessor for _PrefetchMediaArtworkViewModifier();
}

uint64_t sub_20E3CB9C8(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v5 = v2 + a1[14];
  *(_QWORD *)v5 = swift_getKeyPath();
  *(_BYTE *)(v5 + 8) = 0;
  v6 = v2 + a1[15];
  *(_QWORD *)v6 = swift_getKeyPath();
  *(_BYTE *)(v6 + 8) = 0;
  v7 = v2 + a1[16];
  *(_QWORD *)v7 = swift_getKeyPath();
  *(_BYTE *)(v7 + 8) = 0;
  v8 = v2 + a1[17];
  *(_QWORD *)v8 = swift_getKeyPath();
  *(_BYTE *)(v8 + 8) = 0;
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v2, v3);
  *(_QWORD *)(v2 + a1[13]) = v1;
  return result;
}

void sub_20E3CBA78()
{
  type metadata accessor for _PrefetchMediaArtworkViewModifier();
}

uint64_t sub_20E3CBAAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v5[12];

  v3 = sub_20E4A39D4();
  v5[0] = v1;
  v5[1] = MEMORY[0x212BBDF90](&unk_20E4A89A0, a1);
  return MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v3, v5);
}

uint64_t sub_20E3CBB00()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_20E3CBB08()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_20E3CBB90(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  char v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  uint64_t v26;
  char v27;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 63) & 0xFFFFFFFFFFFFFFF8) + 9 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = (_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v11 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v12 = v10;
    *v10 = *v11;
    v13 = ((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8;
    v14 = ((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8;
    v15 = *(_QWORD *)v14;
    v16 = *(_BYTE *)(v14 + 8);
    swift_retain();
    sub_20E39CFAC(v15, v16);
    *(_QWORD *)v13 = v15;
    *(_BYTE *)(v13 + 8) = v16;
    v17 = ((unint64_t)v10 + 31) & 0xFFFFFFFFFFFFFFF8;
    v18 = ((unint64_t)v11 + 31) & 0xFFFFFFFFFFFFFFF8;
    v19 = *(_QWORD *)v18;
    v20 = *(_BYTE *)(v18 + 8);
    sub_20E3CBD0C(*(_QWORD *)v18, v20);
    *(_QWORD *)v17 = v19;
    *(_BYTE *)(v17 + 8) = v20;
    v21 = ((unint64_t)v10 + 47) & 0xFFFFFFFFFFFFFFF8;
    v22 = ((unint64_t)v11 + 47) & 0xFFFFFFFFFFFFFFF8;
    v23 = *(_QWORD *)v22;
    v24 = *(_BYTE *)(v22 + 8);
    sub_20E3CBD0C(*(_QWORD *)v22, v24);
    *(_QWORD *)v21 = v23;
    *(_BYTE *)(v21 + 8) = v24;
    v25 = ((unint64_t)v12 + 63) & 0xFFFFFFFFFFFFFFF8;
    v26 = *(_QWORD *)(((unint64_t)v11 + 63) & 0xFFFFFFFFFFFFFFF8);
    v27 = *(_BYTE *)((((unint64_t)v11 + 63) & 0xFFFFFFFFFFFFFFF8) + 8);
    j__swift_retain(v26);
    *(_QWORD *)v25 = v26;
    *(_BYTE *)(v25 + 8) = v27;
  }
  return v4;
}

uint64_t sub_20E3CBD0C(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
    return swift_bridgeObjectRetain();
  else
    return swift_retain();
}

uint64_t sub_20E3CBD18(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = (a1 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  sub_20E39CED8(*(_QWORD *)((v4 + 15) & 0xFFFFFFFFFFFFFFF8), *(_BYTE *)(((v4 + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
  sub_20E3CBDA8(*(_QWORD *)((v4 + 31) & 0xFFFFFFFFFFFFFFF8), *(_BYTE *)(((v4 + 31) & 0xFFFFFFFFFFFFFFF8) + 8));
  sub_20E3CBDA8(*(_QWORD *)((v4 + 47) & 0xFFFFFFFFFFFFFFF8), *(_BYTE *)(((v4 + 47) & 0xFFFFFFFFFFFFFFF8) + 8));
  return j__swift_release(*(_QWORD *)((v4 + 63) & 0xFFFFFFFFFFFFFFF8), *(unsigned __int8 *)(((v4 + 63) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_20E3CBDA8(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
    return swift_bridgeObjectRelease();
  else
    return swift_release();
}

uint64_t sub_20E3CBDB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v9 = v7;
  *v7 = *v8;
  v10 = ((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  v11 = ((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  v12 = *(_QWORD *)v11;
  LOBYTE(v5) = *(_BYTE *)(v11 + 8);
  swift_retain();
  sub_20E39CFAC(v12, v5);
  *(_QWORD *)v10 = v12;
  *(_BYTE *)(v10 + 8) = v5;
  v13 = ((unint64_t)v7 + 31) & 0xFFFFFFFFFFFFFFF8;
  v14 = ((unint64_t)v8 + 31) & 0xFFFFFFFFFFFFFFF8;
  v15 = *(_QWORD *)v14;
  LOBYTE(v5) = *(_BYTE *)(v14 + 8);
  sub_20E3CBD0C(*(_QWORD *)v14, v5);
  *(_QWORD *)v13 = v15;
  *(_BYTE *)(v13 + 8) = v5;
  v16 = ((unint64_t)v7 + 47) & 0xFFFFFFFFFFFFFFF8;
  v17 = ((unint64_t)v8 + 47) & 0xFFFFFFFFFFFFFFF8;
  v18 = *(_QWORD *)v17;
  LOBYTE(v5) = *(_BYTE *)(v17 + 8);
  sub_20E3CBD0C(*(_QWORD *)v17, v5);
  *(_QWORD *)v16 = v18;
  *(_BYTE *)(v16 + 8) = v5;
  v19 = ((unint64_t)v9 + 63) & 0xFFFFFFFFFFFFFFF8;
  v20 = *(_QWORD *)(((unint64_t)v8 + 63) & 0xFFFFFFFFFFFFFFF8);
  LOBYTE(v5) = *(_BYTE *)((((unint64_t)v8 + 63) & 0xFFFFFFFFFFFFFFF8) + 8);
  j__swift_retain(v20);
  *(_QWORD *)v19 = v20;
  *(_BYTE *)(v19 + 8) = v5;
  return a1;
}

uint64_t sub_20E3CBED4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v9 = (unint64_t)v7 + 47;
  *v7 = *v8;
  v10 = (unint64_t)v7 + 63;
  swift_retain();
  swift_release();
  v11 = ((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  v12 = ((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  v13 = *(_QWORD *)v12;
  LOBYTE(v5) = *(_BYTE *)(v12 + 8);
  sub_20E39CFAC(*(_QWORD *)v12, v5);
  v14 = *(_QWORD *)v11;
  v15 = *(_BYTE *)(v11 + 8);
  *(_QWORD *)v11 = v13;
  *(_BYTE *)(v11 + 8) = v5;
  sub_20E39CED8(v14, v15);
  v16 = ((unint64_t)v7 + 31) & 0xFFFFFFFFFFFFFFF8;
  v17 = ((unint64_t)v8 + 31) & 0xFFFFFFFFFFFFFFF8;
  v18 = *(_QWORD *)v17;
  LOBYTE(v5) = *(_BYTE *)(v17 + 8);
  sub_20E3CBD0C(*(_QWORD *)v17, v5);
  v19 = *(_QWORD *)v16;
  v20 = *(_BYTE *)(v16 + 8);
  *(_QWORD *)v16 = v18;
  *(_BYTE *)(v16 + 8) = v5;
  sub_20E3CBDA8(v19, v20);
  v21 = v9 & 0xFFFFFFFFFFFFFFF8;
  v22 = ((unint64_t)v8 + 47) & 0xFFFFFFFFFFFFFFF8;
  v23 = *(_QWORD *)v22;
  LOBYTE(v5) = *(_BYTE *)(v22 + 8);
  sub_20E3CBD0C(*(_QWORD *)v22, v5);
  v24 = *(_QWORD *)(v9 & 0xFFFFFFFFFFFFFFF8);
  v25 = *(_BYTE *)((v9 & 0xFFFFFFFFFFFFFFF8) + 8);
  *(_QWORD *)v21 = v23;
  *(_BYTE *)(v21 + 8) = v5;
  sub_20E3CBDA8(v24, v25);
  v10 &= 0xFFFFFFFFFFFFFFF8;
  v26 = *(_QWORD *)(((unint64_t)v8 + 63) & 0xFFFFFFFFFFFFFFF8);
  LOBYTE(v5) = *(_BYTE *)((((unint64_t)v8 + 63) & 0xFFFFFFFFFFFFFFF8) + 8);
  j__swift_retain(v26);
  v27 = *(_QWORD *)v10;
  v28 = *(unsigned __int8 *)(v10 + 8);
  *(_QWORD *)v10 = v26;
  *(_BYTE *)(v10 + 8) = v5;
  j__swift_release(v27, v28);
  return a1;
}

uint64_t sub_20E3CC038(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  unint64_t v17;
  unint64_t v18;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = ((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  v10 = ((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_BYTE *)(v10 + 8);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = v11;
  v12 = ((unint64_t)v7 + 31) & 0xFFFFFFFFFFFFFFF8;
  v13 = ((unint64_t)v8 + 31) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v9) = *(_BYTE *)(v13 + 8);
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_BYTE *)(v12 + 8) = v9;
  v14 = ((unint64_t)v7 + 47) & 0xFFFFFFFFFFFFFFF8;
  v15 = ((unint64_t)v8 + 47) & 0xFFFFFFFFFFFFFFF8;
  v16 = *(_BYTE *)(v15 + 8);
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_BYTE *)(v14 + 8) = v16;
  v17 = ((unint64_t)v7 + 63) & 0xFFFFFFFFFFFFFFF8;
  v18 = ((unint64_t)v8 + 63) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v14) = *(_BYTE *)(v18 + 8);
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *(_BYTE *)(v17 + 8) = v14;
  return a1;
}

uint64_t sub_20E3CC10C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  swift_release();
  v9 = ((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  v10 = ((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_QWORD *)v10;
  LOBYTE(v10) = *(_BYTE *)(v10 + 8);
  v12 = *(_QWORD *)v9;
  v13 = *(_BYTE *)(v9 + 8);
  *(_QWORD *)v9 = v11;
  *(_BYTE *)(v9 + 8) = v10;
  sub_20E39CED8(v12, v13);
  v14 = ((unint64_t)v7 + 31) & 0xFFFFFFFFFFFFFFF8;
  v15 = ((unint64_t)v8 + 31) & 0xFFFFFFFFFFFFFFF8;
  v16 = *(_QWORD *)v15;
  LOBYTE(v15) = *(_BYTE *)(v15 + 8);
  v17 = *(_QWORD *)v14;
  v18 = *(_BYTE *)(v14 + 8);
  *(_QWORD *)v14 = v16;
  *(_BYTE *)(v14 + 8) = v15;
  sub_20E3CBDA8(v17, v18);
  v19 = ((unint64_t)v7 + 47) & 0xFFFFFFFFFFFFFFF8;
  v20 = ((unint64_t)v8 + 47) & 0xFFFFFFFFFFFFFFF8;
  v21 = *(_QWORD *)v20;
  LOBYTE(v20) = *(_BYTE *)(v20 + 8);
  v22 = *(_QWORD *)v19;
  v23 = *(_BYTE *)(v19 + 8);
  *(_QWORD *)v19 = v21;
  *(_BYTE *)(v19 + 8) = v20;
  sub_20E3CBDA8(v22, v23);
  v24 = ((unint64_t)v7 + 63) & 0xFFFFFFFFFFFFFFF8;
  v25 = *(_BYTE *)((((unint64_t)v8 + 63) & 0xFFFFFFFFFFFFFFF8) + 8);
  v26 = *(_QWORD *)v24;
  v27 = *(unsigned __int8 *)(v24 + 8);
  *(_QWORD *)v24 = *(_QWORD *)(((unint64_t)v8 + 63) & 0xFFFFFFFFFFFFFFF8);
  *(_BYTE *)(v24 + 8) = v25;
  j__swift_release(v26, v27);
  return a1;
}

uint64_t sub_20E3CC228(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  unint64_t v14;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v14 = *(_QWORD *)((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8);
      if (v14 >= 0xFFFFFFFF)
        LODWORD(v14) = -1;
      return (v14 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    v8 = ((((v7 + 7) & 0xFFFFFFF8) + 63) & 0xFFFFFFF8) + 9;
    v9 = (a2 - v6 + 255) >> (8 * v8);
    if (v8 < 4)
      v10 = v9 + 1;
    else
      v10 = 2;
    if (v10 >= 0x10000)
      v11 = 4;
    else
      v11 = 2;
    if (v10 < 0x100)
      v11 = 1;
    if (v10 >= 2)
      v12 = v11;
    else
      v12 = 0;
    return ((uint64_t (*)(void))((char *)&loc_20E3CC2B8 + 4 * byte_20E4A8940[v12]))();
  }
}

void sub_20E3CC34C(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 63) & 0xFFFFFFFFFFFFFFF8) + 9;
  if (v6 >= a3)
  {
    v10 = 0;
    if (v6 >= a2)
      goto LABEL_17;
  }
  else
  {
    if (v7 <= 3)
      v8 = ((a3 - v6 + 255) >> (8 * v7)) + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    if (v6 >= a2)
LABEL_17:
      __asm { BR              X12 }
  }
  if (v7 >= 4)
    v11 = ~v6 + a2;
  else
    v11 = (~(_BYTE)v6 + a2);
  bzero(a1, v7);
  if ((_DWORD)v7 == 1)
    *a1 = v11;
  else
    *(_DWORD *)a1 = v11;
  __asm { BR              X10 }
}

void sub_20E3CC470()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x20E3CC4E4);
}

void sub_20E3CC478(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x20E3CC480);
  JUMPOUT(0x20E3CC4E4);
}

void sub_20E3CC4C0()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x20E3CC4E4);
}

void sub_20E3CC4C8()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x20E3CC4E4);
}

uint64_t sub_20E3CC4D0(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v5 + v6) = 0;
  if (!a2)
    JUMPOUT(0x20E3CC4E4);
  if (a3 < 0x7FFFFFFF)
  {
    if ((a2 & 0x80000000) == 0)
      JUMPOUT(0x20E3CC4E0);
    JUMPOUT(0x20E3CC4DCLL);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v5);
}

uint64_t sub_20E3CC4FC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E3CC530@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  unint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  _QWORD v45[2];

  v4 = v3;
  v42 = a1;
  v43 = a3;
  v6 = *(a2 - 1);
  v36 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](a1);
  v44 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_20E4A5E58();
  v40 = *(_QWORD *)(v8 - 8);
  v41 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a2[3];
  v39 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v33 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x212BBDF90](&unk_20E4A89A0, a2, v13);
  v15 = sub_20E4A3EA8();
  v16 = *(_QWORD *)(a2[5] + 8);
  v34 = a2[5];
  v35 = v16;
  v37 = sub_20E4A3CBC();
  v17 = sub_20E4A39D4();
  v38 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char **)((char *)&v33 - v21);
  swift_getAtKeyPath();
  sub_20E4A5E04();
  (*(void (**)(char *, uint64_t, _QWORD *))(v6 + 16))(v44, v4, a2);
  v23 = v6;
  v24 = (*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v25 = (char *)swift_allocObject();
  *((_QWORD *)v25 + 2) = a2[2];
  *((_QWORD *)v25 + 3) = v11;
  v26 = v34;
  *((_QWORD *)v25 + 4) = a2[4];
  *((_QWORD *)v25 + 5) = v26;
  (*(void (**)(char *, char *, _QWORD *))(v23 + 32))(&v25[v24], v44, a2);
  v27 = MEMORY[0x212BBDF90](MEMORY[0x24BDEFB78], v15);
  v28 = v33;
  sub_20E4A4400();
  swift_release();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v10, v41);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v28, v11);
  v29 = MEMORY[0x212BBDF90](MEMORY[0x24BDEECB8], v37);
  v45[0] = v27;
  v45[1] = v29;
  v30 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v17, v45);
  sub_20E39D614(v22, v19, v17, v30);
  v31 = *(void (**)(char *, uint64_t))(v38 + 8);
  v31(v19, v17);
  sub_20E39D618((uint64_t)v22, v17, v43);
  return ((uint64_t (*)(_QWORD *, uint64_t))v31)(v22, v17);
}

uint64_t sub_20E3CC830(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[9] = a4;
  v5[10] = a5;
  v5[7] = a2;
  v5[8] = a3;
  v5[6] = a1;
  v5[11] = sub_20E4A5DF8();
  v5[12] = sub_20E4A5DEC();
  v5[13] = sub_20E4A5DBC();
  v5[14] = v6;
  return swift_task_switch();
}

void sub_20E3CC8A8()
{
  _OWORD *v0;

  v0[1] = *(_OWORD *)((char *)v0 + 56);
  v0[2] = *(_OWORD *)((char *)v0 + 72);
  type metadata accessor for _PrefetchMediaArtworkViewModifier();
}

uint64_t sub_20E3CC8F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;

  v4 = v1 + *(int *)(a1 + 64);
  v5 = *(_QWORD *)v4;
  v6 = *(_BYTE *)(v4 + 8);
  sub_20E3CBD0C(*(_QWORD *)v4, v6);
  v7 = sub_20E45C988(v5, v6);
  sub_20E3CBDA8(v5, v6);
  v16 = v7;
  v8 = (*(uint64_t (**)(uint64_t *))(v13 + 8))(&v16);
  *(_QWORD *)(v2 + 104) = v8;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v8 + 16))
  {
    v9 = *(_QWORD *)(v3 + 48);
    v14 = *(_OWORD *)(v3 + 72);
    v15 = *(_OWORD *)(v3 + 56);
    *(_QWORD *)(v3 + 128) = sub_20E4A5DEC();
    v10 = swift_task_alloc();
    *(_QWORD *)(v3 + 136) = v10;
    *(_OWORD *)(v10 + 16) = v15;
    *(_OWORD *)(v10 + 32) = v14;
    *(_QWORD *)(v10 + 48) = v8;
    *(_QWORD *)(v10 + 56) = v9;
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v3 + 144) = v11;
    *v11 = v3;
    v11[1] = sub_20E3CCA30;
    return sub_20E4A632C();
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(void))(v3 + 8))();
  }
}

uint64_t sub_20E3CCA30()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20E3CCAA0()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_20E3CCAD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;

  v8[53] = a7;
  v8[54] = a8;
  v8[51] = a5;
  v8[52] = a6;
  v8[49] = a3;
  v8[50] = a4;
  v8[48] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A190F8);
  v8[55] = swift_task_alloc();
  v8[56] = swift_task_alloc();
  v8[27] = a5;
  v8[28] = a6;
  v8[29] = a7;
  v8[30] = a8;
  type metadata accessor for _PrefetchMediaArtworkViewModifier();
}

uint64_t sub_20E3CCB58(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1[57] = a1;
  v2 = *(_QWORD *)(a1 - 8);
  v1[58] = v2;
  v1[59] = *(_QWORD *)(v2 + 64);
  v1[60] = swift_task_alloc();
  sub_20E4A4A90();
  v1[61] = swift_task_alloc();
  v1[62] = swift_task_alloc();
  v3 = sub_20E4A5A8C();
  v1[63] = v3;
  v1[64] = *(_QWORD *)(v3 - 8);
  v1[65] = swift_task_alloc();
  v4 = sub_20E4A5E58();
  v1[66] = v4;
  v1[67] = *(_QWORD *)(v4 - 8);
  v1[68] = swift_task_alloc();
  v5 = sub_20E4A3BFC();
  v1[69] = v5;
  v1[70] = *(_QWORD *)(v5 - 8);
  v1[71] = swift_task_alloc();
  v1[72] = *(_QWORD *)(type metadata accessor for MediaArtwork.Sized() - 8);
  v1[73] = swift_task_alloc();
  sub_20E4A5DF8();
  v1[74] = sub_20E4A5DEC();
  sub_20E4A5DBC();
  return swift_task_switch();
}

uint64_t sub_20E3CCCA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  os_log_type_t v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  __int128 *v24;
  os_log_type_t v25;
  NSObject *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t *boxed_opaque_existential_1Tm;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(uint64_t, uint64_t);
  uint64_t *v67;
  uint64_t *v68;
  _QWORD *v69;
  __int128 v70;
  __int128 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int *v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88[2];

  v1 = *(_QWORD *)(v0 + 392);
  swift_release();
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v69 = (_QWORD *)(v0 + 16);
    v87 = (_QWORD *)(v0 + 56);
    v3 = (__int128 *)(v0 + 96);
    v67 = (uint64_t *)(v0 + 280);
    v68 = (uint64_t *)(v0 + 248);
    v4 = *(_QWORD *)(v0 + 576);
    v81 = *(_QWORD *)(v0 + 560);
    v72 = *(_QWORD *)(v0 + 536);
    v80 = *(_QWORD *)(v0 + 512);
    v65 = *(_QWORD *)(v0 + 464);
    v84 = *(int **)(v0 + 456);
    v83 = *(_QWORD *)(v0 + 400) + v84[14];
    v5 = *(_QWORD *)(v0 + 392)
       + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v82 = *(_QWORD *)(v4 + 72);
    v64 = *(_QWORD *)(v0 + 472) + 7;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_20E3CF19C(v5, *(_QWORD *)(v0 + 584));
      v6 = *(_QWORD *)v83;
      v7 = *(unsigned __int8 *)(v83 + 8);
      if (v7 != 1)
      {
        sub_20E39CFAC(*(_QWORD *)v83, 0);
        swift_retain();
        v8 = sub_20E4A5FE4();
        v9 = sub_20E4A4058();
        if (os_log_type_enabled(v9, v8))
        {
          v10 = swift_slowAlloc();
          v11 = swift_slowAlloc();
          v88[0] = v11;
          *(_DWORD *)v10 = 136315138;
          *(_QWORD *)(v10 + 4) = sub_20E45F228(0x74616F6C464743, 0xE700000000000000, v88);
          _os_log_impl(&dword_20E399000, v9, v8, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v10, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x212BBE068](v11, -1, -1);
          MEMORY[0x212BBE068](v10, -1, -1);
        }

        v12 = *(_QWORD *)(v0 + 568);
        v13 = *(_QWORD *)(v0 + 552);
        sub_20E4A3BF0();
        swift_getAtKeyPath();
        sub_20E39CED8(v6, 0);
        (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v12, v13);
        sub_20E39CED8(v6, 0);
      }
      _s9JetEngine12MediaArtworkV01_aB8_SwiftUIE5SizedV9_resource9withScaleAA0cD8Resource_pSg12CoreGraphics7CGFloatV_tF_0();
      if (*(_QWORD *)(v0 + 120))
      {
        v86 = v5;
        v14 = *(_QWORD *)(v0 + 400);
        sub_20E3B1AB4(v3, (uint64_t)v87);
        v15 = v14 + v84[15];
        v16 = *(_QWORD *)v15;
        v17 = *(_BYTE *)(v15 + 8);
        sub_20E3CBD0C(*(_QWORD *)v15, v17);
        v18 = sub_20E45CB5C(v16, v17);
        sub_20E3CBDA8(v16, v17);
        v19 = v14 + v84[16];
        v20 = *(_QWORD *)v19;
        LOBYTE(v14) = *(_BYTE *)(v19 + 8);
        sub_20E3CBD0C(*(_QWORD *)v19, v14);
        v21 = sub_20E45C988(v20, v14);
        sub_20E3CBDA8(v20, v14);
        v22 = v0 + 176;
        sub_20E3C39FC((uint64_t)v87, v0 + 176);
        if (v7)
        {
          v23 = *(double *)&v6;
          v24 = (__int128 *)(v0 + 136);
        }
        else
        {
          sub_20E39CFAC(v6, 0);
          swift_retain();
          v25 = sub_20E4A5FE4();
          v26 = sub_20E4A4058();
          if (os_log_type_enabled(v26, v25))
          {
            v27 = swift_slowAlloc();
            v28 = swift_slowAlloc();
            v88[0] = v28;
            *(_DWORD *)v27 = 136315138;
            *(_QWORD *)(v27 + 4) = sub_20E45F228(0x74616F6C464743, 0xE700000000000000, v88);
            _os_log_impl(&dword_20E399000, v26, v25, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v27, 0xCu);
            swift_arrayDestroy();
            v29 = v28;
            v22 = v0 + 176;
            MEMORY[0x212BBE068](v29, -1, -1);
            MEMORY[0x212BBE068](v27, -1, -1);
          }

          v24 = (__int128 *)(v0 + 136);
          v30 = *(_QWORD *)(v0 + 568);
          v31 = *(_QWORD *)(v0 + 552);
          sub_20E4A3BF0();
          swift_getAtKeyPath();
          sub_20E39CED8(v6, 0);
          (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v30, v31);
          sub_20E39CED8(v6, 0);
          v23 = *(double *)(v0 + 368);
        }
        sub_20E4A5E04();
        sub_20E3CF21C(v22, (uint64_t)v24);
        v32 = *(_QWORD *)(v0 + 544);
        v33 = *(_QWORD *)(v0 + 528);
        v85 = v2;
        if (!*(_QWORD *)(v0 + 160))
        {
          sub_20E39D1F8((uint64_t)v24, &qword_254A19100);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v32, v33);
          sub_20E39D1F8(v22, &qword_254A19100);
LABEL_20:
          if (qword_254A18108 != -1)
            swift_once();
          v48 = *(_QWORD *)(v0 + 520);
          v77 = v48;
          v79 = *(_QWORD *)(v0 + 584);
          v49 = *(_QWORD *)(v0 + 504);
          v75 = *(_QWORD *)(v0 + 416);
          v50 = __swift_project_value_buffer(v49, (uint64_t)qword_254A24670);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v80 + 16))(v48, v50, v49);
          __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0D58);
          sub_20E4A4ACC();
          *(_OWORD *)(swift_allocObject() + 16) = xmmword_20E4A8070;
          sub_20E4A4A84();
          sub_20E4A4A78();
          v51 = *(_QWORD *)(v0 + 80);
          v52 = __swift_project_boxed_opaque_existential_1(v87, v51);
          *(_QWORD *)(v0 + 272) = v51;
          boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v68);
          (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(boxed_opaque_existential_1Tm, v52, v51);
          sub_20E4A4A48();
          sub_20E39D1F8((uint64_t)v68, &qword_253ED2A38);
          sub_20E4A4A78();
          sub_20E4A4A9C();
          sub_20E4A4A84();
          sub_20E4A4A78();
          *(_QWORD *)(v0 + 304) = v75;
          __swift_allocate_boxed_opaque_existential_1Tm(v67);
          swift_getAtKeyPath();
          sub_20E4A4A48();
          sub_20E39D1F8((uint64_t)v67, &qword_253ED2A38);
          sub_20E4A4A78();
          sub_20E4A4A9C();
          sub_20E4A5750();
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v77, v49);
          sub_20E3CF1E0(v79);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v87);
          v2 = v85;
          v5 = v86;
          v3 = (__int128 *)(v0 + 96);
          goto LABEL_4;
        }
        sub_20E3B1AB4(v24, (uint64_t)v69);
        v34 = *(_QWORD *)(v0 + 40);
        v35 = *(_QWORD *)(v0 + 48);
        v36 = __swift_project_boxed_opaque_existential_1(v69, v34);
        v37 = sub_20E49B64C((uint64_t)v36, v18, v21, 0, v32, v34, v35, v23);
        v39 = v38;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v69);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v40 = *(void (**)(uint64_t, uint64_t))(v72 + 8);
        v40(v32, v33);
        sub_20E39D1F8(v22, &qword_254A19100);
        if (!v37)
          goto LABEL_20;
        v66 = v40;
        v41 = *(_QWORD *)(v0 + 480);
        v42 = *(_QWORD *)(v0 + 456);
        v73 = *(_QWORD *)(v0 + 448);
        v74 = *(_QWORD *)(v0 + 528);
        v76 = *(_QWORD *)(v0 + 440);
        v70 = *(_OWORD *)(v0 + 424);
        v71 = *(_OWORD *)(v0 + 408);
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v65 + 16))(v41, *(_QWORD *)(v0 + 400), v42);
        v78 = v39;
        v43 = v37;
        v44 = (*(unsigned __int8 *)(v65 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80);
        v45 = swift_allocObject();
        *(_QWORD *)(v45 + 16) = 0;
        *(_QWORD *)(v45 + 24) = 0;
        *(_OWORD *)(v45 + 32) = v71;
        *(_OWORD *)(v45 + 48) = v70;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v65 + 32))(v45 + v44, v41, v42);
        v46 = (uint64_t *)(v45 + ((v64 + v44) & 0xFFFFFFFFFFFFFFF8));
        *v46 = v43;
        v46[1] = v78;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v72 + 56))(v73, 1, 1, v74);
        sub_20E3CF44C(v73, v76);
        v47 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v72 + 48))(v76, 1, v74);
        swift_retain();
        if (v47 == 1)
        {
          sub_20E39D1F8(*(_QWORD *)(v0 + 440), &qword_254A190F8);
        }
        else
        {
          v54 = *(_QWORD *)(v0 + 528);
          v55 = *(_QWORD *)(v0 + 440);
          sub_20E4A5E4C();
          v66(v55, v54);
        }
        if (*(_QWORD *)(v45 + 16))
        {
          swift_getObjectType();
          swift_unknownObjectRetain();
          v56 = sub_20E4A5DBC();
          v58 = v57;
          swift_unknownObjectRelease();
        }
        else
        {
          v56 = 0;
          v58 = 0;
        }
        v5 = v86;
        v59 = **(_QWORD **)(v0 + 384);
        v60 = swift_allocObject();
        *(_QWORD *)(v60 + 16) = &unk_254A19110;
        *(_QWORD *)(v60 + 24) = v45;
        v61 = v58 | v56;
        if (v58 | v56)
        {
          v61 = v0 + 312;
          *(_QWORD *)(v0 + 312) = 0;
          *(_QWORD *)(v0 + 320) = 0;
          *(_QWORD *)(v0 + 328) = v56;
          *(_QWORD *)(v0 + 336) = v58;
        }
        v62 = *(_QWORD *)(v0 + 584);
        *(_QWORD *)(v0 + 344) = 1;
        *(_QWORD *)(v0 + 352) = v61;
        *(_QWORD *)(v0 + 360) = v59;
        swift_task_create();
        swift_release();
        sub_20E3CF5C0(v43);
        sub_20E3CF1E0(v62);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v87);
        v3 = (__int128 *)(v0 + 96);
      }
      else
      {
        sub_20E3CF1E0(*(_QWORD *)(v0 + 584));
        sub_20E39D1F8((uint64_t)v3, &qword_254A19100);
      }
LABEL_4:
      v5 += v82;
      if (!--v2)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20E3CD734(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v8[27] = a8;
  v8[28] = v18;
  v8[25] = a6;
  v8[26] = a7;
  v8[23] = a4;
  v8[24] = a5;
  v8[22] = a3;
  v8[29] = *(_QWORD *)(a6 - 8);
  v8[30] = swift_task_alloc();
  sub_20E4A4A90();
  v8[31] = swift_task_alloc();
  v8[32] = swift_task_alloc();
  v9 = sub_20E4A5A8C();
  v8[33] = v9;
  v8[34] = *(_QWORD *)(v9 - 8);
  v8[35] = swift_task_alloc();
  v10 = sub_20E4A563C();
  v8[36] = v10;
  v8[37] = *(_QWORD *)(v10 - 8);
  v8[38] = swift_task_alloc();
  v11 = sub_20E4A34C4();
  v8[39] = v11;
  v8[40] = *(_QWORD *)(v11 - 8);
  v8[41] = swift_task_alloc();
  v8[42] = swift_task_alloc();
  v8[43] = swift_task_alloc();
  v12 = sub_20E4A5DC8();
  v8[44] = v12;
  v8[45] = *(_QWORD *)(v12 - 8);
  v8[46] = swift_task_alloc();
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18AC8);
  v8[47] = v13;
  v8[48] = *(_QWORD *)(v13 - 8);
  v8[49] = swift_task_alloc();
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19128);
  v8[50] = v14;
  v8[51] = *(_QWORD *)(v14 - 8);
  v8[52] = swift_task_alloc();
  v15 = sub_20E4A5648();
  v8[53] = v15;
  v8[54] = *(_QWORD *)(v15 - 8);
  v8[55] = swift_task_alloc();
  v16 = sub_20E4A3494();
  v8[56] = v16;
  v8[57] = *(_QWORD *)(v16 - 8);
  v8[58] = swift_task_alloc();
  v8[59] = swift_task_alloc();
  v8[60] = swift_task_alloc();
  v8[61] = swift_task_alloc();
  v8[62] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20E3CD960()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_signpost_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, _QWORD, uint64_t);
  uint8_t *v8;
  os_signpost_id_t v9;
  uint64_t v10;

  if (qword_254A18110 != -1)
    swift_once();
  v1 = sub_20E4A34B8();
  v0[63] = __swift_project_value_buffer(v1, (uint64_t)qword_254A24688);
  sub_20E4A34AC();
  sub_20E4A3470();
  v2 = sub_20E4A34AC();
  v3 = sub_20E4A6044();
  if ((sub_20E4A60D4() & 1) != 0)
  {
    v4 = v0[61];
    v5 = v0[56];
    v6 = v0[57];
    v7 = *(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 16);
    v7(v4, v0[62], v5);
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    v9 = sub_20E4A347C();
    _os_signpost_emit_with_name_impl(&dword_20E399000, v2, v3, v9, "Image.Prefetch", "", v8, 2u);
    MEMORY[0x212BBE068](v8, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    v10 = v0[57];

    v7 = *(void (**)(uint64_t, _QWORD, uint64_t))(v10 + 16);
  }
  v0[64] = v7;
  v7(v0[61], v0[62], v0[56]);
  sub_20E4A34E8();
  swift_allocObject();
  v0[65] = sub_20E4A34DC();
  v0[66] = sub_20E4A5DF8();
  v0[67] = sub_20E4A5DEC();
  sub_20E4A5DBC();
  return swift_task_switch();
}

void sub_20E3CDB28()
{
  _OWORD *v0;
  __int128 v1;
  __int128 v2;

  v1 = *(_OWORD *)((char *)v0 + 216);
  v2 = *(_OWORD *)((char *)v0 + 200);
  swift_release();
  v0[1] = v2;
  v0[2] = v1;
  type metadata accessor for _PrefetchMediaArtworkViewModifier();
}

uint64_t sub_20E3CDB74(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v2 + 544) = a1;
  v3 = *(int *)(a1 + 68);
  *(_DWORD *)(v2 + 712) = v3;
  v4 = (uint64_t *)(v1 + v3);
  v5 = *v4;
  v6 = *((unsigned __int8 *)v4 + 8);
  j__swift_retain(*v4);
  *(_QWORD *)(v2 + 552) = sub_20E39DC80(v5, v6);
  j__swift_release(v5, v6);
  return swift_task_switch();
}

uint64_t sub_20E3CDBD8()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  if (*(_QWORD *)(v0 + 552))
  {
    v2 = *(_QWORD *)(v0 + 432);
    v1 = *(_BYTE **)(v0 + 440);
    v3 = *(_QWORD *)(v0 + 424);
    *v1 = 0;
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v2 + 104))(v1, *MEMORY[0x24BE5DB58], v3);
    sub_20E4A5684();
    swift_release();
    (*(void (**)(_BYTE *, uint64_t))(v2 + 8))(v1, v3);
  }
  v5 = *(_QWORD *)(v0 + 384);
  v4 = *(_QWORD *)(v0 + 392);
  v6 = *(_QWORD *)(v0 + 376);
  (*(void (**)(void))(v0 + 184))();
  sub_20E4A49AC();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  *(_QWORD *)(v0 + 560) = sub_20E3CF5D0();
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 568) = v7;
  *v7 = v0;
  v7[1] = sub_20E3CDCDC;
  return sub_20E4A5DD4();
}

uint64_t sub_20E3CDCDC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
    *(_QWORD *)(v2 + 592) = v0;
  return swift_task_switch();
}

uint64_t sub_20E3CDD40()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 576) = *(_QWORD *)(v0 + 152);
  return swift_task_switch();
}

uint64_t sub_20E3CDD5C()
{
  uint64_t v0;
  _QWORD *v1;
  NSObject *v3;
  os_signpost_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint8_t *v17;
  os_signpost_id_t v18;

  if (*(_QWORD *)(v0 + 576))
  {
    swift_release();
    v1 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 584) = v1;
    *v1 = v0;
    v1[1] = sub_20E3CDF98;
    return sub_20E4A5DD4();
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 408) + 8))(*(_QWORD *)(v0 + 416), *(_QWORD *)(v0 + 400));
    v3 = sub_20E4A34AC();
    sub_20E4A34D0();
    v4 = sub_20E4A6038();
    if ((sub_20E4A60D4() & 1) != 0)
    {
      v5 = *(_QWORD *)(v0 + 344);
      v6 = *(_QWORD *)(v0 + 312);
      v7 = *(_QWORD *)(v0 + 320);
      swift_retain();
      sub_20E4A34F4();
      swift_release();
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v7 + 88))(v5, v6) == *MEMORY[0x24BEE7810])
      {
        v8 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 320) + 8))(*(_QWORD *)(v0 + 344), *(_QWORD *)(v0 + 312));
        v8 = "finished";
      }
      v14 = *(_QWORD *)(v0 + 480);
      v13 = *(_QWORD *)(v0 + 488);
      v15 = *(_QWORD *)(v0 + 448);
      v16 = *(_QWORD *)(v0 + 456);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 512))(v13, v14, v15);
      v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v17 = 0;
      v18 = sub_20E4A347C();
      _os_signpost_emit_with_name_impl(&dword_20E399000, v3, v4, v18, "Image.Prefetch", v8, v17, 2u);
      MEMORY[0x212BBE068](v17, -1, -1);

      v12 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
      v12(v14, v15);
      v12(v13, v15);
    }
    else
    {
      v9 = *(_QWORD *)(v0 + 480);
      v10 = *(_QWORD *)(v0 + 448);
      v11 = *(_QWORD *)(v0 + 456);

      v12 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
      v12(v9, v10);
    }
    *(_QWORD *)(v0 + 608) = v12;
    *(_QWORD *)(v0 + 616) = sub_20E4A5DEC();
    sub_20E4A5DBC();
    return swift_task_switch();
  }
}

uint64_t sub_20E3CDF98()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
    *(_QWORD *)(v2 + 592) = v0;
  return swift_task_switch();
}

uint64_t sub_20E3CDFFC()
{
  _QWORD *v0;

  v0[18] = v0[74];
  v0[75] = __swift_instantiateConcreteTypeFromMangledName(qword_253ED2880);
  swift_willThrowTypedImpl();
  return swift_task_switch();
}

uint64_t sub_20E3CE060()
{
  uint64_t v0;
  void *v1;
  id v2;
  NSObject *v3;
  os_signpost_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint8_t *v27;
  os_signpost_id_t v28;
  uint64_t v30;

  v1 = *(void **)(v0 + 592);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 408) + 8))(*(_QWORD *)(v0 + 416), *(_QWORD *)(v0 + 400));
  *(_QWORD *)(v0 + 136) = v1;
  v2 = v1;
  if (swift_dynamicCast())
  {

    v3 = sub_20E4A34AC();
    sub_20E4A34D0();
    v4 = sub_20E4A6038();
    if ((sub_20E4A60D4() & 1) != 0)
    {
      v5 = *(_QWORD *)(v0 + 336);
      v6 = *(_QWORD *)(v0 + 312);
      v7 = *(_QWORD *)(v0 + 320);
      swift_retain();
      sub_20E4A34F4();
      swift_release();
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v7 + 88))(v5, v6) == *MEMORY[0x24BEE7810])
      {
        v8 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 320) + 8))(*(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 312));
        v8 = "cancelled";
      }
      v23 = *(_QWORD *)(v0 + 488);
      v24 = *(_QWORD *)(v0 + 472);
      v25 = *(_QWORD *)(v0 + 448);
      v26 = *(_QWORD *)(v0 + 456);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 512))(v23, v24, v25);
      v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v27 = 0;
      v28 = sub_20E4A347C();
      _os_signpost_emit_with_name_impl(&dword_20E399000, v3, v4, v28, "Image.Prefetch", v8, v27, 2u);
      MEMORY[0x212BBE068](v27, -1, -1);

      v22 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
      v22(v24, v25);
      v22(v23, v25);
    }
    else
    {
      v19 = *(_QWORD *)(v0 + 472);
      v20 = *(_QWORD *)(v0 + 448);
      v21 = *(_QWORD *)(v0 + 456);

      v22 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
      v22(v19, v20);
    }
    *(_QWORD *)(v0 + 632) = v22;
    *(_QWORD *)(v0 + 640) = sub_20E4A5DEC();
    sub_20E4A5DBC();
  }
  else
  {

    if (qword_254A18108 != -1)
      swift_once();
    v30 = *(_QWORD *)(v0 + 544);
    v10 = *(_QWORD *)(v0 + 272);
    v9 = *(_QWORD *)(v0 + 280);
    v11 = *(_QWORD *)(v0 + 264);
    v13 = *(_QWORD *)(v0 + 232);
    v12 = *(_QWORD *)(v0 + 240);
    v14 = *(_QWORD *)(v0 + 200);
    v15 = *(_QWORD *)(v0 + 176);
    v16 = __swift_project_value_buffer(v11, (uint64_t)qword_254A24670);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v9, v16, v11);
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0D58);
    v17 = *(_QWORD *)(sub_20E4A4ACC() - 8);
    *(_QWORD *)(v0 + 656) = *(_QWORD *)(v17 + 72);
    *(_DWORD *)(v0 + 716) = *(_DWORD *)(v17 + 80);
    v18 = swift_allocObject();
    *(_QWORD *)(v0 + 664) = v18;
    *(_OWORD *)(v18 + 16) = xmmword_20E4A8040;
    sub_20E4A4A30();
    sub_20E4A4A84();
    sub_20E4A4A78();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v12, v15, v14);
    *(_DWORD *)(v0 + 720) = *(_DWORD *)(v30 + 52);
    *(_QWORD *)(v0 + 672) = sub_20E4A5DEC();
    sub_20E4A5DBC();
  }
  return swift_task_switch();
}

uint64_t sub_20E3CE3E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(int *)(v0 + 712);
  v2 = *(_QWORD *)(v0 + 176);
  swift_release();
  v3 = v2 + v1;
  v4 = *(_QWORD *)(v2 + v1);
  v5 = *(unsigned __int8 *)(v3 + 8);
  j__swift_retain(v4);
  *(_QWORD *)(v0 + 624) = sub_20E39DC80(v4, v5);
  j__swift_release(v4, v5);
  return swift_task_switch();
}

uint64_t sub_20E3CE460()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 608);
  v2 = *(_QWORD *)(v0 + 496);
  v3 = *(_QWORD *)(v0 + 448);
  if (*(_QWORD *)(v0 + 624))
  {
    v5 = *(_QWORD *)(v0 + 296);
    v4 = *(_BYTE **)(v0 + 304);
    v6 = *(_QWORD *)(v0 + 288);
    *v4 = 0;
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v5 + 104))(v4, *MEMORY[0x24BE5DB40], v6);
    sub_20E4A566C();
    swift_release();
    swift_release();
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v4, v6);
    v1(v2, v3);
  }
  else
  {
    v1(*(_QWORD *)(v0 + 496), *(_QWORD *)(v0 + 448));
    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20E3CE600()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(int *)(v0 + 712);
  v2 = *(_QWORD *)(v0 + 176);
  swift_release();
  v3 = v2 + v1;
  v4 = *(_QWORD *)(v2 + v1);
  v5 = *(unsigned __int8 *)(v3 + 8);
  j__swift_retain(v4);
  *(_QWORD *)(v0 + 648) = sub_20E39DC80(v4, v5);
  j__swift_release(v4, v5);
  return swift_task_switch();
}

uint64_t sub_20E3CE678()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 632);
  v2 = *(_QWORD *)(v0 + 496);
  v3 = *(_QWORD *)(v0 + 448);
  if (*(_QWORD *)(v0 + 648))
  {
    v5 = *(_QWORD *)(v0 + 296);
    v4 = *(_BYTE **)(v0 + 304);
    v6 = *(_QWORD *)(v0 + 288);
    *v4 = 0;
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v5 + 104))(v4, *MEMORY[0x24BE5DB40], v6);
    sub_20E4A566C();
    swift_release();
    swift_release();
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v4, v6);
    v1(v2, v3);
  }
  else
  {
    v1(*(_QWORD *)(v0 + 496), *(_QWORD *)(v0 + 448));
    swift_release();
  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 360) + 8))(*(_QWORD *)(v0 + 368), *(_QWORD *)(v0 + 352));

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20E3CE830()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(int *)(v0 + 720);
  v2 = *(_QWORD *)(v0 + 176);
  swift_release();
  *(_QWORD *)(v0 + 680) = *(_QWORD *)(v2 + v1);
  return swift_task_switch();
}

uint64_t sub_20E3CE87C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *boxed_opaque_existential_1Tm;
  id v7;
  id v8;
  NSObject *v9;
  os_signpost_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  const char *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t);
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  os_signpost_id_t v31;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  char *format;
  char *formata;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  os_signpost_type_t v41;
  uint64_t v42;

  v33 = *(void **)(v0 + 592);
  format = *(char **)(v0 + 280);
  v38 = *(_QWORD *)(v0 + 272);
  v34 = *(_QWORD *)(v0 + 264);
  v1 = *(_QWORD *)(v0 + 240);
  v2 = *(_QWORD *)(v0 + 232);
  v3 = *(_QWORD *)(v0 + 200);
  *(_QWORD *)(v0 + 104) = *(_QWORD *)(v0 + 208);
  __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)(v0 + 80));
  swift_getAtKeyPath();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_20E4A4A48();
  sub_20E39D1F8(v0 + 80, &qword_253ED2A38);
  sub_20E4A4A78();
  sub_20E4A4A9C();
  sub_20E4A4A84();
  sub_20E4A4A78();
  swift_getErrorValue();
  v5 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 120);
  *(_QWORD *)(v0 + 72) = v4;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)(v0 + 48));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(boxed_opaque_existential_1Tm, v5, v4);
  sub_20E4A4A54();
  sub_20E39D1F8(v0 + 48, &qword_253ED2A38);
  sub_20E4A4A78();
  sub_20E4A4A9C();
  sub_20E4A5768();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v38 + 8))(format, v34);
  v7 = v33;
  v8 = v33;
  v9 = sub_20E4A34AC();
  sub_20E4A34D0();
  v10 = sub_20E4A6038();
  if ((sub_20E4A60D4() & 1) != 0)
  {
    v41 = v10;
    v11 = *(_QWORD *)(v0 + 320);
    v12 = *(_QWORD *)(v0 + 328);
    v13 = *(_QWORD *)(v0 + 312);
    swift_retain();
    sub_20E4A34F4();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v11 + 88))(v12, v13) == *MEMORY[0x24BEE7810])
    {
      v14 = 0;
      v15 = 0;
      v16 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 320) + 8))(*(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 312));
      v16 = "error=%{public}s";
      v15 = 2;
      v14 = 1;
    }
    formata = (char *)v16;
    v22 = *(void **)(v0 + 592);
    v35 = *(_QWORD *)(v0 + 488);
    v39 = *(_QWORD *)(v0 + 464);
    v40 = *(_QWORD *)(v0 + 456);
    v23 = *(_QWORD *)(v0 + 448);
    (*(void (**)(void))(v0 + 512))();
    v24 = swift_slowAlloc();
    v25 = swift_slowAlloc();
    v42 = v25;
    *(_BYTE *)v24 = v15;
    *(_BYTE *)(v24 + 1) = v14;
    *(_WORD *)(v24 + 2) = 2082;
    v26 = (void *)sub_20E4A32D8();
    v27 = (id)AMSLogableError();

    v28 = sub_20E4A5C3C();
    v30 = v29;

    *(_QWORD *)(v0 + 168) = sub_20E45F228(v28, v30, &v42);
    sub_20E4A60F8();
    swift_bridgeObjectRelease();

    v31 = sub_20E4A347C();
    _os_signpost_emit_with_name_impl(&dword_20E399000, v9, v41, v31, "Image.Prefetch", formata, (uint8_t *)v24, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x212BBE068](v25, -1, -1);
    MEMORY[0x212BBE068](v24, -1, -1);

    v21 = *(void (**)(uint64_t, uint64_t))(v40 + 8);
    v21(v39, v23);
    v21(v35, v23);
  }
  else
  {
    v17 = *(void **)(v0 + 592);
    v19 = *(_QWORD *)(v0 + 456);
    v18 = *(_QWORD *)(v0 + 464);
    v20 = *(_QWORD *)(v0 + 448);

    v21 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
    v21(v18, v20);
  }
  *(_QWORD *)(v0 + 688) = v21;
  *(_QWORD *)(v0 + 696) = sub_20E4A5DEC();
  sub_20E4A5DBC();
  return swift_task_switch();
}

uint64_t sub_20E3CECF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(int *)(v0 + 712);
  v2 = *(_QWORD *)(v0 + 176);
  swift_release();
  v3 = v2 + v1;
  v4 = *(_QWORD *)(v2 + v1);
  v5 = *(unsigned __int8 *)(v3 + 8);
  j__swift_retain(v4);
  *(_QWORD *)(v0 + 704) = sub_20E39DC80(v4, v5);
  j__swift_release(v4, v5);
  return swift_task_switch();
}

uint64_t sub_20E3CED70()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 688);
  v2 = *(void **)(v0 + 592);
  v3 = *(_QWORD *)(v0 + 496);
  v4 = *(_QWORD *)(v0 + 448);
  if (*(_QWORD *)(v0 + 704))
  {
    v6 = *(_QWORD *)(v0 + 296);
    v5 = *(_QWORD *)(v0 + 304);
    v7 = *(_QWORD *)(v0 + 288);
    *(_QWORD *)v5 = v2;
    *(_BYTE *)(v5 + 8) = 0;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 104))(v5, *MEMORY[0x24BE5DB30], v7);
    v8 = v2;
    sub_20E4A566C();
    swift_release();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    v1(v3, v4);
  }
  else
  {
    v1(*(_QWORD *)(v0 + 496), *(_QWORD *)(v0 + 448));

    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_20E3CEF34()
{
  type metadata accessor for _PrefetchMediaArtworkViewModifier();
}

uint64_t sub_20E3CEF64(int *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v3 = *(unsigned __int8 *)(*((_QWORD *)a1 - 1) + 80);
  v4 = v1 + ((v3 + 48) & ~v3);
  (*(void (**)(uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4);
  swift_release();
  sub_20E39CED8(*(_QWORD *)(v4 + a1[14]), *(_BYTE *)(v4 + a1[14] + 8));
  sub_20E3CBDA8(*(_QWORD *)(v4 + a1[15]), *(_BYTE *)(v4 + a1[15] + 8));
  sub_20E3CBDA8(*(_QWORD *)(v4 + a1[16]), *(_BYTE *)(v4 + a1[16] + 8));
  j__swift_release(*(_QWORD *)(v4 + a1[17]), *(unsigned __int8 *)(v4 + a1[17] + 8));
  return swift_deallocObject();
}

void sub_20E3CF024()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v0[3];
  v3 = v0[4];
  v4 = v0[5];
  v1[2] = v0[2];
  v1[3] = v2;
  v1[4] = v3;
  v1[5] = v4;
  type metadata accessor for _PrefetchMediaArtworkViewModifier();
}

uint64_t sub_20E3CF060(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  v8 = v2 + ((v7 + 48) & ~v7);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 48) = v9;
  *v9 = v4;
  v9[1] = sub_20E3CF0C0;
  return sub_20E3CC830(v8, v1, v3, v5, v6);
}

uint64_t sub_20E3CF0C0()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

void sub_20E3CF108(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v6 = v2[2];
  v7 = v2[3];
  v8 = v2[4];
  v9 = v2[5];
  v11 = v2[6];
  v10 = v2[7];
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v12;
  *v12 = v3;
  v12[1] = sub_20E3B4E08;
  sub_20E3CCAD0(a1, a2, v11, v10, v6, v7, v8, v9);
}

uint64_t sub_20E3CF19C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MediaArtwork.Sized();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20E3CF1E0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MediaArtwork.Sized();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20E3CF21C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19100);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_20E3CF264()
{
  type metadata accessor for _PrefetchMediaArtworkViewModifier();
}

uint64_t sub_20E3CF294(int *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v3 = *(unsigned __int8 *)(*((_QWORD *)a1 - 1) + 80);
  v4 = (v3 + 64) & ~v3;
  swift_unknownObjectRelease();
  v5 = v1 + v4;
  (*(void (**)(uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5);
  swift_release();
  sub_20E39CED8(*(_QWORD *)(v5 + a1[14]), *(_BYTE *)(v5 + a1[14] + 8));
  sub_20E3CBDA8(*(_QWORD *)(v5 + a1[15]), *(_BYTE *)(v5 + a1[15] + 8));
  sub_20E3CBDA8(*(_QWORD *)(v5 + a1[16]), *(_BYTE *)(v5 + a1[16] + 8));
  j__swift_release(*(_QWORD *)(v5 + a1[17]), *(unsigned __int8 *)(v5 + a1[17] + 8));
  swift_release();
  return swift_deallocObject();
}

void sub_20E3CF374()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v0[5];
  v3 = v0[6];
  v4 = v0[7];
  v1[2] = v0[4];
  v1[3] = v2;
  v1[4] = v3;
  v1[5] = v4;
  type metadata accessor for _PrefetchMediaArtworkViewModifier();
}

uint64_t sub_20E3CF3B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v8 = *(_QWORD *)(a1 - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v2 + 16);
  v11 = *(_QWORD *)(v2 + 24);
  v12 = v2 + v9;
  v13 = (uint64_t *)(v2 + ((*(_QWORD *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8));
  v14 = *v13;
  v15 = v13[1];
  v16 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 48) = v16;
  *v16 = v4;
  v16[1] = sub_20E3CF76C;
  *(_QWORD *)(v7 + 16) = v6;
  return sub_20E3CD734(v10, v11, v12, v14, v15, v1, v3, v5);
}

uint64_t sub_20E3CF44C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A190F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20E3CF494(int *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))((char *)a1 + *a1);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_20E3CF4EC;
  return v4();
}

uint64_t sub_20E3CF4EC()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_20E3CF538()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E3CF55C()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;

  v2 = *(int **)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_20E3B4E08;
  return ((uint64_t (*)(int *))((char *)&dword_254A19118 + dword_254A19118))(v2);
}

uint64_t sub_20E3CF5C0(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

unint64_t sub_20E3CF5D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254A19130;
  if (!qword_254A19130)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19128);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BE5C5E0], v1);
    atomic_store(result, (unint64_t *)&qword_254A19130);
  }
  return result;
}

uint64_t sub_20E3CF63C()
{
  return sub_20E4A61B8();
}

uint64_t sub_20E3CF66C()
{
  return 40;
}

__n128 sub_20E3CF678(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

void sub_20E3CF68C()
{
  type metadata accessor for _PrefetchMediaArtworkViewModifier();
}

uint64_t sub_20E3CF6C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[12];

  MEMORY[0x212BBDF90](&unk_20E4A89A0, a1);
  v1 = sub_20E4A3EA8();
  v2 = sub_20E4A3CBC();
  v3 = sub_20E4A39D4();
  v5[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDEFB78], v1);
  v5[1] = MEMORY[0x212BBDF90](MEMORY[0x24BDEECB8], v2);
  return MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v3, v5);
}

_QWORD *Jet.init(startUpProcedure:transaction:makeObjects:working:failed:content:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v18;
  _QWORD *result;

  v18 = *a1;
  result = (_QWORD *)swift_allocObject();
  result[2] = v18;
  result[3] = a2;
  result[4] = a3;
  result[5] = a4;
  *(_QWORD *)a9 = sub_20E3CF910;
  *(_QWORD *)(a9 + 8) = result;
  *(_BYTE *)(a9 + 16) = 0;
  *(_QWORD *)(a9 + 24) = a5;
  *(_QWORD *)(a9 + 32) = a6;
  *(_QWORD *)(a9 + 40) = a7;
  *(_QWORD *)(a9 + 48) = a8;
  *(_QWORD *)(a9 + 56) = a10;
  *(_QWORD *)(a9 + 64) = a11;
  return result;
}

_QWORD *sub_20E3CF814(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v8;

  type metadata accessor for _JetTakeOff();
  v8 = (_QWORD *)swift_allocObject();
  v8[6] = 0;
  sub_20E3D4580(a1);
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A191C0);
  sub_20E4A359C();
  v8[2] = a1;
  v8[3] = a2;
  v8[4] = a3;
  v8[5] = a4;
  v8[6] = 0;
  swift_release();
  return v8;
}

uint64_t sub_20E3CF8D4()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16) >= 2uLL)
    swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

_QWORD *sub_20E3CF910()
{
  uint64_t v0;

  return sub_20E3CF814(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t _JetViewDefaultFailed.init(error:retry:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t Jet.init(startUpWith:working:failed:content:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t result;
  uint64_t v15;

  type metadata accessor for _JetTakeOff();
  sub_20E39F334(&qword_254A19138, (uint64_t (*)(uint64_t))type metadata accessor for _JetTakeOff, (uint64_t)&unk_20E4A8F4C);
  result = sub_20E4A3938();
  *(_QWORD *)a7 = result;
  *(_QWORD *)(a7 + 8) = v15;
  *(_BYTE *)(a7 + 16) = 0x80;
  *(_QWORD *)(a7 + 24) = a1;
  *(_QWORD *)(a7 + 32) = a2;
  *(_QWORD *)(a7 + 40) = a3;
  *(_QWORD *)(a7 + 48) = a4;
  *(_QWORD *)(a7 + 56) = a5;
  *(_QWORD *)(a7 + 64) = a6;
  return result;
}

uint64_t type metadata accessor for _JetTakeOff()
{
  uint64_t result;

  result = qword_254A192B0;
  if (!qword_254A192B0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_20E3CFA10()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(char *)(v0 + 16);
  if (v2 < 0)
    return swift_retain();
  v3 = *(_QWORD *)v0;
  sub_20E39CFB8();
  type metadata accessor for _JetTakeOff();
  sub_20E39F334(&qword_254A19138, (uint64_t (*)(uint64_t))type metadata accessor for _JetTakeOff, (uint64_t)&unk_20E4A8F4C);
  v4 = sub_20E4A36EC();
  sub_20E3D06A0(v3, v1, v2);
  return v4;
}

uint64_t sub_20E3CFACC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(char *)(v0 + 16);
  if (v3 < 0)
  {
    type metadata accessor for _JetTakeOff();
    sub_20E39F334(&qword_254A19138, (uint64_t (*)(uint64_t))type metadata accessor for _JetTakeOff, (uint64_t)&unk_20E4A8F4C);
    swift_retain();
    v4 = sub_20E4A3944();
  }
  else
  {
    sub_20E39CFB8();
    type metadata accessor for _JetTakeOff();
    sub_20E39F334(&qword_254A19138, (uint64_t (*)(uint64_t))type metadata accessor for _JetTakeOff, (uint64_t)&unk_20E4A8F4C);
    v4 = sub_20E4A36F8();
  }
  v5 = v4;
  sub_20E3D06A0(v1, v2, v3);
  return v5;
}

void Jet.body.getter(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[6];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD v53[2];
  _QWORD v54[2];
  _QWORD v55[2];
  _QWORD v56[2];
  _QWORD v57[2];
  _QWORD v58[2];
  _QWORD v59[2];
  _QWORD v60[12];

  v33[5] = a2;
  v3 = sub_20E4A5E58();
  v41 = *(_QWORD *)(v3 - 8);
  v42 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v40 = (char *)v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = sub_20E4A4F40();
  v5 = a1[5];
  v37 = a1[2];
  v38 = v5;
  v46 = v37;
  v47 = MEMORY[0x24BEE0940];
  v48 = v5;
  v49 = MEMORY[0x24BEE0948];
  v6 = sub_20E4A46DC();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19140);
  v7 = sub_20E4A39D4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19148);
  v8 = sub_20E4A39D4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19150);
  v9 = sub_20E4A39D4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19158);
  v10 = sub_20E4A39D4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A18588);
  v39 = sub_20E4A39D4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19160);
  v11 = sub_20E4A39D4();
  type metadata accessor for AppMetricsViewModifier();
  v44 = sub_20E4A39D4();
  v43 = sub_20E4A3E00();
  v12 = a1[3];
  v34 = a1[4];
  v35 = v12;
  v13 = MEMORY[0x212BBDF90](MEMORY[0x24BDF44C8], v6);
  v14 = MEMORY[0x24BDF1028];
  v15 = sub_20E39D010(&qword_254A19168, &qword_254A19140, MEMORY[0x24BDF1028]);
  v60[0] = v13;
  v60[1] = v15;
  v16 = MEMORY[0x24BDED308];
  v17 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v7, v60);
  v18 = sub_20E39D010(&qword_254A19170, &qword_254A19148, (uint64_t)&unk_20E4AF838);
  v59[0] = v17;
  v59[1] = v18;
  v19 = MEMORY[0x212BBDF90](v16, v8, v59);
  v20 = MEMORY[0x24BDF1248];
  v21 = sub_20E39D010((unint64_t *)&qword_254A19178, &qword_254A19150, MEMORY[0x24BDF1248]);
  v58[0] = v19;
  v58[1] = v21;
  v22 = MEMORY[0x212BBDF90](v16, v9, v58);
  v23 = sub_20E39D010(&qword_254A19180, &qword_254A19158, v14);
  v57[0] = v22;
  v57[1] = v23;
  v24 = MEMORY[0x212BBDF90](v16, v10, v57);
  v25 = sub_20E39D010((unint64_t *)&qword_254A18590, &qword_254A18588, v14);
  v56[0] = v24;
  v56[1] = v25;
  v26 = MEMORY[0x212BBDF90](v16, v39, v56);
  v27 = sub_20E39D010(&qword_254A19188, &qword_254A19160, v20);
  v55[0] = v26;
  v55[1] = v27;
  v28 = MEMORY[0x212BBDF90](v16, v11, v55);
  v29 = sub_20E39F334(&qword_254A19190, (uint64_t (*)(uint64_t))type metadata accessor for AppMetricsViewModifier, (uint64_t)&unk_20E4AC838);
  v54[0] = v28;
  v54[1] = v29;
  v53[0] = MEMORY[0x212BBDF90](v16, v44, v54);
  v53[1] = v28;
  v30 = v43;
  v36 = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v43, v53);
  v31 = a1[6];
  v32 = a1[7];
  v46 = v45;
  v47 = v30;
  v48 = v35;
  v49 = v34;
  v50 = v36;
  v51 = v31;
  v52 = v32;
  type metadata accessor for _ResultView();
}

void sub_20E3CFF28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  __int128 *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;

  *(_QWORD *)(v9 + 72) = a1;
  sub_20E4A3854();
  v16 = sub_20E4A39D4();
  *(_QWORD *)(v9 + 104) = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  *(_QWORD *)(v9 + 144) = (char *)&a9 - v17;
  *(_QWORD *)(v9 + 16) = v18;
  v19 = sub_20E4A39D4();
  *(_QWORD *)(v9 + 32) = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  *(_QWORD *)(v9 + 96) = (char *)&a9 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  *(_QWORD *)(v9 + 24) = (char *)&a9 - v22;
  v23 = v10[1];
  v25 = v10[2];
  v24 = v10[3];
  *(_OWORD *)(v15 - 128) = v25;
  *(_OWORD *)(v15 - 112) = v24;
  v26 = v10[1];
  v27 = *v10;
  *(_OWORD *)(v15 - 160) = *v10;
  *(_OWORD *)(v15 - 144) = v26;
  v28 = v10[3];
  *(_OWORD *)(v9 + 336) = v25;
  *(_OWORD *)(v9 + 352) = v28;
  *(_QWORD *)(v15 - 96) = *((_QWORD *)v10 + 8);
  *(_QWORD *)(v9 + 368) = *((_QWORD *)v10 + 8);
  *(_OWORD *)(v9 + 304) = v27;
  *(_OWORD *)(v9 + 320) = v23;
  sub_20E3CFACC();
  swift_getKeyPath();
  *(_QWORD *)(v9 + 8) = sub_20E39F334(&qword_254A19138, (uint64_t (*)(uint64_t))type metadata accessor for _JetTakeOff, (uint64_t)&unk_20E4A8F4C);
  sub_20E4A3950();
  swift_release();
  swift_release();
  v29 = *(_QWORD *)(v9 + 208);
  v30 = *(_BYTE *)(v9 + 216);
  *(_OWORD *)(v9 + 272) = *(_OWORD *)(v9 + 192);
  *(_QWORD *)(v9 + 288) = v29;
  *(_BYTE *)(v9 + 296) = v30;
  v31 = swift_allocObject();
  v33 = *(_QWORD *)(v9 + 80);
  v32 = *(_QWORD *)(v9 + 88);
  *(_QWORD *)(v31 + 16) = v33;
  *(_QWORD *)(v31 + 24) = v11;
  *(_QWORD *)(v31 + 32) = v12;
  *(_QWORD *)(v31 + 40) = v32;
  *(_QWORD *)(v31 + 48) = v13;
  *(_QWORD *)(v31 + 56) = v14;
  v34 = *(_OWORD *)(v15 - 112);
  *(_OWORD *)(v31 + 96) = *(_OWORD *)(v15 - 128);
  *(_OWORD *)(v31 + 112) = v34;
  *(_QWORD *)(v31 + 128) = *(_QWORD *)(v15 - 96);
  v35 = *(_OWORD *)(v15 - 144);
  *(_OWORD *)(v31 + 64) = *(_OWORD *)(v15 - 160);
  *(_OWORD *)(v31 + 80) = v35;
  v36 = swift_allocObject();
  *(_QWORD *)(v36 + 16) = v33;
  *(_QWORD *)(v36 + 24) = v11;
  *(_QWORD *)(v36 + 32) = v12;
  *(_QWORD *)(v36 + 40) = v32;
  *(_QWORD *)(v36 + 48) = v13;
  *(_QWORD *)(v36 + 56) = v14;
  v37 = *(_OWORD *)(v15 - 112);
  *(_OWORD *)(v36 + 96) = *(_OWORD *)(v15 - 128);
  *(_OWORD *)(v36 + 112) = v37;
  *(_QWORD *)(v36 + 128) = *(_QWORD *)(v15 - 96);
  v38 = *(_OWORD *)(v15 - 144);
  *(_OWORD *)(v36 + 64) = *(_OWORD *)(v15 - 160);
  *(_OWORD *)(v36 + 80) = v38;
  v39 = swift_allocObject();
  *(_QWORD *)(v39 + 16) = v33;
  *(_QWORD *)(v39 + 24) = v11;
  *(_QWORD *)(v39 + 32) = v12;
  *(_QWORD *)(v39 + 40) = v32;
  *(_QWORD *)(v39 + 48) = v13;
  *(_QWORD *)(v39 + 56) = v14;
  v40 = *(_OWORD *)(v15 - 112);
  *(_OWORD *)(v39 + 96) = *(_OWORD *)(v15 - 128);
  *(_OWORD *)(v39 + 112) = v40;
  *(_QWORD *)(v39 + 128) = *(_QWORD *)(v15 - 96);
  v41 = *(_OWORD *)(v15 - 144);
  *(_OWORD *)(v39 + 64) = *(_OWORD *)(v15 - 160);
  *(_OWORD *)(v39 + 80) = v41;
  sub_20E467A3C(v9 + 272, v9 + 304);
}

uint64_t sub_20E3D01A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  char v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(_QWORD *, uint64_t);

  v9 = *(_QWORD *)(v0 + 320);
  v10 = *(_BYTE *)(v0 + 328);
  *(_OWORD *)(v0 + 192) = *(_OWORD *)(v0 + 304);
  *(_QWORD *)(v0 + 208) = v9;
  *(_BYTE *)(v0 + 216) = v10;
  v11 = *(_OWORD *)(v0 + 352);
  *(_OWORD *)(v0 + 224) = *(_OWORD *)(v0 + 336);
  *(_OWORD *)(v0 + 240) = v11;
  *(_OWORD *)(v0 + 256) = *(_OWORD *)(v0 + 368);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v3;
  *(_QWORD *)(v12 + 24) = v5;
  *(_QWORD *)(v12 + 32) = v2;
  *(_QWORD *)(v12 + 40) = v1;
  *(_QWORD *)(v12 + 48) = v6;
  *(_QWORD *)(v12 + 56) = v7;
  v13 = *(_OWORD *)(v8 - 112);
  *(_OWORD *)(v12 + 96) = *(_OWORD *)(v8 - 128);
  *(_OWORD *)(v12 + 112) = v13;
  *(_QWORD *)(v12 + 128) = *(_QWORD *)(v8 - 96);
  v14 = *(_OWORD *)(v8 - 144);
  *(_OWORD *)(v12 + 64) = *(_OWORD *)(v8 - 160);
  *(_OWORD *)(v12 + 80) = v14;
  sub_20E3D2690(v8 - 160);
  sub_20E3D2690(v8 - 160);
  sub_20E3D2690(v8 - 160);
  sub_20E3D2690(v8 - 160);
  v15 = MEMORY[0x212BBDF90](&unk_20E4AF6E0, *(_QWORD *)(v0 + 72));
  v16 = *(_QWORD *)(v0 + 112);
  sub_20E4A5E10();
  sub_20E4A440C();
  swift_release();
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 120) + 8))(v16, *(_QWORD *)(v0 + 128));
  swift_release();
  swift_release();
  sub_20E3D2704(*(void **)(v0 + 208), *(_BYTE *)(v0 + 216));
  swift_release();
  swift_release();
  swift_release();
  v17 = *(char *)(v8 - 144);
  if ((v17 & 0x80000000) == 0)
  {
    v19 = *(_QWORD *)(v8 - 160);
    v18 = *(_QWORD *)(v8 - 152);
    sub_20E39CFB8();
    type metadata accessor for _JetTakeOff();
    v20 = sub_20E4A36EC();
    sub_20E3D06A0(v19, v18, v17);
    v21 = *(_QWORD *)(v20 + 48);
    swift_retain();
    swift_release();
    if (!v21)
    {
      v22 = 1;
      goto LABEL_6;
    }
    swift_release();
  }
  v22 = 0;
LABEL_6:
  v23 = *(_QWORD *)(v0 + 32);
  v24 = *(_QWORD *)(v0 + 40);
  v25 = *(_QWORD *)(v0 + 16);
  v26 = *(_QWORD **)(v0 + 24);
  v27 = sub_20E39F334(qword_253ED2910, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC4E0], MEMORY[0x24BDEC4C8]);
  *(_QWORD *)(v0 + 176) = v15;
  *(_QWORD *)(v0 + 184) = v27;
  v28 = MEMORY[0x24BDED308];
  v29 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v25, v0 + 176);
  v30 = *(_QWORD **)(v0 + 96);
  v31 = v22;
  v32 = *(_QWORD *)(v0 + 144);
  sub_20E406E08(v31, v25, v29);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 104) + 8))(v32, v25);
  v33 = sub_20E3D2728();
  *(_QWORD *)(v0 + 160) = v29;
  *(_QWORD *)(v0 + 168) = v33;
  v34 = MEMORY[0x212BBDF90](v28, v4, v0 + 160);
  sub_20E39D614(v26, v30, v4, v34);
  v35 = *(uint64_t (**)(_QWORD *, uint64_t))(v23 + 8);
  v35(v30, v4);
  sub_20E39D618((uint64_t)v26, v4, v24);
  return v35(v26, v4);
}

uint64_t sub_20E3D0438()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_20E4A35CC();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_20E3D04AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  char v4;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_20E4A35CC();
  swift_release();
  result = swift_release();
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return result;
}

uint64_t sub_20E3D0534(uint64_t a1)
{
  void *v1;
  unsigned __int8 v2;

  v1 = *(void **)a1;
  v2 = *(_BYTE *)(a1 + 8);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_20E3D616C(v1, v2);
  swift_retain();
  return sub_20E4A35D8();
}

uint64_t sub_20E3D05C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X5>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v7 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (uint64_t *)((char *)&v17 - v12);
  (*(void (**)(double))(v14 + 24))(v11);
  sub_20E39D614(v13, v9, a2, a3);
  v15 = *(void (**)(char *, uint64_t))(v7 + 8);
  v15(v9, a2);
  sub_20E39D618((uint64_t)v13, a2, a4);
  return ((uint64_t (*)(_QWORD *, uint64_t))v15)(v13, a2);
}

uint64_t sub_20E3D06A0(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 < 0)
    return swift_release();
  else
    return sub_20E39CED0();
}

uint64_t sub_20E3D06B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_20E3D05C4(v1 + 64, *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 48), a1);
}

uint64_t sub_20E3D06CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  void (*v25)(char *, uint64_t);
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t (*)(), uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v29 = a6;
  v30 = a7;
  v31 = a1;
  v32 = a9;
  v14 = *(_QWORD *)(a5 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (uint64_t *)((char *)&v27 - v18);
  v28 = *(void (**)(uint64_t, uint64_t (*)(), uint64_t))(v20 + 40);
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = a3;
  *(_QWORD *)(v21 + 24) = a4;
  v22 = v29;
  *(_QWORD *)(v21 + 32) = a5;
  *(_QWORD *)(v21 + 40) = v22;
  *(_QWORD *)(v21 + 48) = v30;
  *(_QWORD *)(v21 + 56) = a8;
  v23 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v21 + 96) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v21 + 112) = v23;
  *(_QWORD *)(v21 + 128) = *(_QWORD *)(a2 + 64);
  v24 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v21 + 64) = *(_OWORD *)a2;
  *(_OWORD *)(v21 + 80) = v24;
  sub_20E3D2690(a2);
  v28(v31, sub_20E3D6068, v21);
  swift_release();
  sub_20E39D614(v19, v16, a5, a8);
  v25 = *(void (**)(char *, uint64_t))(v14 + 8);
  v25(v16, a5);
  sub_20E39D618((uint64_t)v19, a5, v32);
  return ((uint64_t (*)(_QWORD *, uint64_t))v25)(v19, a5);
}

uint64_t sub_20E3D0830@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_20E3D06CC(a1, (uint64_t)(v2 + 8), v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], a2);
}

uint64_t sub_20E3D0844(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  uint64_t v24;

  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A190F8);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_20E4A5E58();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  sub_20E4A5DF8();
  sub_20E3D2690(a1);
  v18 = sub_20E4A5DEC();
  v19 = swift_allocObject();
  v20 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v19 + 16) = v18;
  *(_QWORD *)(v19 + 24) = v20;
  *(_QWORD *)(v19 + 32) = a2;
  *(_QWORD *)(v19 + 40) = a3;
  *(_QWORD *)(v19 + 48) = a4;
  *(_QWORD *)(v19 + 56) = a5;
  *(_QWORD *)(v19 + 64) = a6;
  *(_QWORD *)(v19 + 72) = a7;
  v21 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v19 + 112) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v19 + 128) = v21;
  *(_QWORD *)(v19 + 144) = *(_QWORD *)(a1 + 64);
  v22 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v19 + 80) = *(_OWORD *)a1;
  *(_OWORD *)(v19 + 96) = v22;
  sub_20E3D1A10((uint64_t)v16, (uint64_t)&unk_254A19438, v19);
  return swift_release();
}

uint64_t sub_20E3D0970(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v8[13] = v11;
  v8[14] = v12;
  v8[11] = a7;
  v8[12] = a8;
  v8[9] = a5;
  v8[10] = a6;
  v8[8] = a4;
  sub_20E4A5DF8();
  v8[15] = sub_20E4A5DEC();
  v8[16] = sub_20E4A5DBC();
  v8[17] = v9;
  return swift_task_switch();
}

void sub_20E3D09F0()
{
  _OWORD *v0;
  __int128 v1;
  __int128 v2;

  v1 = *(_OWORD *)((char *)v0 + 88);
  v2 = *(_OWORD *)((char *)v0 + 104);
  v0[1] = *(_OWORD *)((char *)v0 + 72);
  v0[2] = v1;
  v0[3] = v2;
  type metadata accessor for Jet();
}

uint64_t sub_20E3D0A40()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 144) = sub_20E3CFA10();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 152) = v1;
  *v1 = v0;
  v1[1] = sub_20E3D0A84;
  return sub_20E3D0B08(0);
}

uint64_t sub_20E3D0A84()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_20E3D0AD8()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20E3D0B08(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 56) = v1;
  *(_BYTE *)(v2 + 25) = a1;
  *(_QWORD *)(v2 + 64) = sub_20E4A5DF8();
  *(_QWORD *)(v2 + 72) = sub_20E4A5DEC();
  *(_QWORD *)(v2 + 80) = sub_20E4A5DBC();
  *(_QWORD *)(v2 + 88) = v3;
  return swift_task_switch();
}

uint64_t sub_20E3D0B7C()
{
  uint64_t v0;
  int v1;
  uint64_t v3;

  if (*(_BYTE *)(v0 + 25) != 1
    || (swift_getKeyPath(),
        swift_getKeyPath(),
        sub_20E4A35CC(),
        swift_release(),
        swift_release(),
        v1 = *(unsigned __int8 *)(v0 + 40),
        v1 == 255)
    || (sub_20E3D2704(*(void **)(v0 + 32), *(_BYTE *)(v0 + 40)), (v1 & 1) != 0))
  {
    *(_QWORD *)(v0 + 96) = *(_QWORD *)(*(_QWORD *)(v0 + 56) + 48);
    swift_retain();
    *(_QWORD *)(v0 + 104) = sub_20E4A5DEC();
    *(_QWORD *)(v0 + 112) = sub_20E4A5DBC();
    *(_QWORD *)(v0 + 120) = v3;
    return swift_task_switch();
  }
  else
  {
    swift_release();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_20E3D0C84()
{
  uint64_t v0;
  _QWORD *v1;

  if (*(_QWORD *)(v0 + 96))
  {
    swift_retain();
    v1 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 128) = v1;
    *v1 = v0;
    v1[1] = sub_20E3D0D2C;
    return sub_20E3D0B08(*(unsigned __int8 *)(v0 + 25));
  }
  else
  {
    swift_release();
    sub_20E4A4F40();
    *(_QWORD *)(v0 + 144) = sub_20E4A4F04();
    return swift_task_switch();
  }
}

uint64_t sub_20E3D0D2C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20E3D0D78()
{
  uint64_t v0;
  int v1;

  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_20E4A35CC();
  swift_release();
  swift_release();
  *(_QWORD *)(v0 + 136) = *(_QWORD *)(v0 + 16);
  v1 = *(unsigned __int8 *)(v0 + 24);
  *(_BYTE *)(v0 + 26) = v1;
  if (v1 == 255)
  {
    sub_20E4A5228();
    sub_20E4A4F40();
    *(_QWORD *)(v0 + 152) = sub_20E4A4F04();
  }
  swift_release_n();
  return swift_task_switch();
}

uint64_t sub_20E3D0E8C()
{
  uint64_t v0;
  unsigned __int8 v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;

  v1 = *(_BYTE *)(v0 + 26);
  v2 = *(void **)(v0 + 136);
  if ((v1 & 1) != 0)
  {
    v8 = *(_QWORD *)(v0 + 56);
    swift_release();
    v9 = swift_task_alloc();
    *(_QWORD *)(v9 + 16) = v8;
    *(_QWORD *)(v9 + 24) = v2;
    sub_20E3D5FEC(v2, 1);
    sub_20E4A3A28();
    sub_20E3D2704(v2, v1);
    sub_20E3D2704(v2, v1);
    goto LABEL_6;
  }
  *(_QWORD *)(v0 + 160) = v2;
  *(_QWORD *)(v0 + 168) = v2;
  v3 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    if (v4 == 1)
    {
      swift_retain_n();
      v5 = swift_release();
      (*(void (**)(uint64_t))(v3 + 32))(v5);
      v6 = sub_20E4A4F1C();
      swift_release();
      swift_release();
      v7 = swift_task_alloc();
      *(_QWORD *)(v7 + 16) = v3;
      *(_QWORD *)(v7 + 24) = v6;
      sub_20E4A3A28();
      swift_release();
      swift_release();
      sub_20E3D271C(v2, 0);
LABEL_6:
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    *(_QWORD *)(v0 + 176) = *(_QWORD *)(v3 + 24);
    swift_retain();
    v13 = sub_20E4A3A28();
    (*(void (**)(uint64_t))(v3 + 32))(v13);
    *(_QWORD *)(v0 + 184) = sub_20E4A4F1C();
    swift_release();
    *(_QWORD *)(v0 + 48) = v4;
    v14 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 192) = v14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254A19420);
    sub_20E39D010(&qword_254A19428, &qword_254A19420, MEMORY[0x24BEE12C8]);
    *v14 = v0;
    v14[1] = sub_20E3D164C;
    return sub_20E4A4EEC();
  }
  else
  {
    *(_QWORD *)(v0 + 208) = *(_QWORD *)(v3 + 24);
    swift_retain();
    v11 = sub_20E4A3A28();
    (*(void (**)(uint64_t))(v3 + 32))(v11);
    *(_QWORD *)(v0 + 216) = sub_20E4A4F1C();
    swift_release();
    v12 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 224) = v12;
    *v12 = v0;
    v12[1] = sub_20E3D16D0;
    return sub_20E4A4EF8();
  }
}

uint64_t sub_20E3D1164()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;

  v1 = *(void **)(v0 + 144);
  *(_QWORD *)(v0 + 160) = v1;
  *(_QWORD *)(v0 + 168) = v1;
  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    if (v3 == 1)
    {
      swift_retain_n();
      v4 = swift_release();
      (*(void (**)(uint64_t))(v2 + 32))(v4);
      v5 = sub_20E4A4F1C();
      swift_release();
      swift_release();
      v6 = swift_task_alloc();
      *(_QWORD *)(v6 + 16) = v2;
      *(_QWORD *)(v6 + 24) = v5;
      sub_20E4A3A28();
      swift_release();
      swift_release();
      sub_20E3D271C(v1, 0);
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    else
    {
      *(_QWORD *)(v0 + 176) = *(_QWORD *)(v2 + 24);
      swift_retain();
      v10 = sub_20E4A3A28();
      (*(void (**)(uint64_t))(v2 + 32))(v10);
      *(_QWORD *)(v0 + 184) = sub_20E4A4F1C();
      swift_release();
      *(_QWORD *)(v0 + 48) = v3;
      v11 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 192) = v11;
      __swift_instantiateConcreteTypeFromMangledName(&qword_254A19420);
      sub_20E39D010(&qword_254A19428, &qword_254A19420, MEMORY[0x24BEE12C8]);
      *v11 = v0;
      v11[1] = sub_20E3D164C;
      return sub_20E4A4EEC();
    }
  }
  else
  {
    *(_QWORD *)(v0 + 208) = *(_QWORD *)(v2 + 24);
    swift_retain();
    v8 = sub_20E4A3A28();
    (*(void (**)(uint64_t))(v2 + 32))(v8);
    *(_QWORD *)(v0 + 216) = sub_20E4A4F1C();
    swift_release();
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 224) = v9;
    *v9 = v0;
    v9[1] = sub_20E3D16D0;
    return sub_20E4A4EF8();
  }
}

uint64_t sub_20E3D13D8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;

  v1 = *(void **)(v0 + 152);
  *(_QWORD *)(v0 + 160) = v1;
  *(_QWORD *)(v0 + 168) = v1;
  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    if (v3 == 1)
    {
      swift_retain_n();
      v4 = swift_release();
      (*(void (**)(uint64_t))(v2 + 32))(v4);
      v5 = sub_20E4A4F1C();
      swift_release();
      swift_release();
      v6 = swift_task_alloc();
      *(_QWORD *)(v6 + 16) = v2;
      *(_QWORD *)(v6 + 24) = v5;
      sub_20E4A3A28();
      swift_release();
      swift_release();
      sub_20E3D271C(v1, 0);
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    else
    {
      *(_QWORD *)(v0 + 176) = *(_QWORD *)(v2 + 24);
      swift_retain();
      v10 = sub_20E4A3A28();
      (*(void (**)(uint64_t))(v2 + 32))(v10);
      *(_QWORD *)(v0 + 184) = sub_20E4A4F1C();
      swift_release();
      *(_QWORD *)(v0 + 48) = v3;
      v11 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 192) = v11;
      __swift_instantiateConcreteTypeFromMangledName(&qword_254A19420);
      sub_20E39D010(&qword_254A19428, &qword_254A19420, MEMORY[0x24BEE12C8]);
      *v11 = v0;
      v11[1] = sub_20E3D164C;
      return sub_20E4A4EEC();
    }
  }
  else
  {
    *(_QWORD *)(v0 + 208) = *(_QWORD *)(v2 + 24);
    swift_retain();
    v8 = sub_20E4A3A28();
    (*(void (**)(uint64_t))(v2 + 32))(v8);
    *(_QWORD *)(v0 + 216) = sub_20E4A4F1C();
    swift_release();
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 224) = v9;
    *v9 = v0;
    v9[1] = sub_20E3D16D0;
    return sub_20E4A4EF8();
  }
}

uint64_t sub_20E3D164C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 200) = v1;
  swift_task_dealloc();
  swift_release();
  if (!v1)
    *(_QWORD *)(v4 + 248) = a1;
  return swift_task_switch();
}

uint64_t sub_20E3D16D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 232) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_release();
    *(_QWORD *)(v4 + 240) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_20E3D174C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 240);
  v2 = *(void **)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 56);
  swift_release();
  v4 = swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = v1;
  sub_20E4A3A28();
  swift_release();
  swift_release();
  sub_20E3D271C(v2, 0);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20E3D17F8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 248);
  v2 = *(void **)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 56);
  swift_release();
  v4 = swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = v1;
  sub_20E4A3A28();
  swift_release();
  swift_release();
  sub_20E3D271C(v2, 0);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20E3D18A8()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(void **)(v0 + 232);
  v2 = *(void **)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 56);
  swift_release();
  swift_release();
  v4 = swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = v1;
  sub_20E4A3A28();
  swift_release();

  sub_20E3D271C(v2, 0);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20E3D1960()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(void **)(v0 + 200);
  v2 = *(void **)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 56);
  swift_release();
  v4 = swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = v1;
  sub_20E4A3A28();
  swift_release();

  sub_20E3D271C(v2, 0);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20E3D1A10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_20E4A5E58();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_20E4A5E4C();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_20E39D1F8(a1, &qword_254A190F8);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_20E4A5DBC();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_20E3D1B5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_20E4A5E58();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_20E4A5E4C();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_20E39D1F8(a1, &qword_254A190F8);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_20E4A5DBC();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A193F8);
  return swift_task_create();
}

void sub_20E3D1CB0(uint64_t *a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 *v42;
  char *v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  _QWORD v47[2];
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  __int128 *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  uint64_t v92;

  v71 = a9;
  v72 = a4;
  v50 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v48 = (char *)v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v88 = v17;
  *((_QWORD *)&v88 + 1) = MEMORY[0x24BEE0940];
  *(_QWORD *)&v89 = v18;
  *((_QWORD *)&v89 + 1) = MEMORY[0x24BEE0948];
  v19 = sub_20E4A46DC();
  v20 = *(_QWORD *)(v19 - 8);
  v51 = v19;
  v58 = v20;
  MEMORY[0x24BDAC7A8](v19);
  v73 = (char *)v47 - v21;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19140);
  v22 = sub_20E4A39D4();
  v23 = *(_QWORD *)(v22 - 8);
  v55 = v22;
  v61 = v23;
  MEMORY[0x24BDAC7A8](v22);
  v49 = (char *)v47 - v24;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19148);
  v25 = sub_20E4A39D4();
  v26 = *(_QWORD *)(v25 - 8);
  v57 = v25;
  v63 = v26;
  MEMORY[0x24BDAC7A8](v25);
  v53 = (char *)v47 - v27;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19150);
  v28 = sub_20E4A39D4();
  v29 = *(_QWORD *)(v28 - 8);
  v59 = v28;
  v65 = v29;
  MEMORY[0x24BDAC7A8](v28);
  v54 = (char *)v47 - v30;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19158);
  v62 = sub_20E4A39D4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A18588);
  v64 = sub_20E4A39D4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19160);
  v31 = sub_20E4A39D4();
  v32 = *(_QWORD *)(v31 - 8);
  v56 = v31;
  v68 = v32;
  MEMORY[0x24BDAC7A8](v31);
  v52 = (char *)v47 - v33;
  type metadata accessor for AppMetricsViewModifier();
  v67 = sub_20E4A39D4();
  v34 = sub_20E4A3E00();
  v35 = *(_QWORD *)(v34 - 8);
  v69 = v34;
  v70 = v35;
  MEMORY[0x24BDAC7A8](v34);
  v60 = (char *)v47 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v37);
  v66 = (char *)v47 - v38;
  v39 = *a1;
  v47[1] = v39;
  v40 = a3;
  v74 = a3;
  v75 = v72;
  v76 = a5;
  v77 = a6;
  v41 = a7;
  v78 = a7;
  v79 = a8;
  v42 = a2;
  v80 = a2;
  v81 = v39;
  v43 = v48;
  v44 = v40;
  sub_20E4A4EC8();
  *(_QWORD *)&v88 = v39;
  sub_20E4A43DC();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v43, v44);
  swift_getKeyPath();
  v45 = v42[3];
  v90 = v42[2];
  v91 = v45;
  v92 = *((_QWORD *)v42 + 8);
  v46 = v42[1];
  v88 = *v42;
  v89 = v46;
  v82 = v44;
  v83 = v72;
  v84 = a5;
  v85 = a6;
  v86 = v41;
  v87 = a8;
  type metadata accessor for Jet();
}

uint64_t sub_20E3D2068()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)@<X0>(uint64_t@<X8>);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  void (*v35)(uint64_t, uint64_t);

  *(_QWORD *)(v1 - 176) = sub_20E3CFA10();
  v2 = v0[5];
  v3 = MEMORY[0x212BBDF90](MEMORY[0x24BDF44C8], v2);
  v4 = v0[3];
  v5 = v0[27];
  sub_20E4A4250();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v0[12] + 8))(v5, v2);
  v6 = sub_20E4A4F40();
  v7 = MEMORY[0x24BDF1028];
  v8 = sub_20E39D010(&qword_254A19168, &qword_254A19140, MEMORY[0x24BDF1028]);
  *(_QWORD *)(v1 - 240) = v3;
  *(_QWORD *)(v1 - 232) = v8;
  v9 = MEMORY[0x24BDED308];
  v10 = v0[9];
  v11 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v10, v1 - 240);
  v12 = v0[7];
  v13 = (uint64_t (*)@<X0>(uint64_t@<X8>))v0[1];
  sub_20E4681C0(v13, v10, v6, v11, v12);
  (*(void (**)(uint64_t, uint64_t))(v0[15] + 8))(v4, v10);
  v14 = sub_20E39D010(&qword_254A19170, &qword_254A19148, (uint64_t)&unk_20E4AF838);
  *(_QWORD *)(v1 - 256) = v11;
  *(_QWORD *)(v1 - 248) = v14;
  v15 = v0[11];
  v16 = MEMORY[0x212BBDF90](v9, v15, v1 - 256);
  v17 = v0[8];
  sub_20E475C28();
  (*(void (**)(uint64_t, uint64_t))(v0[17] + 8))(v12, v15);
  v18 = MEMORY[0x24BDF1248];
  v19 = sub_20E39D010((unint64_t *)&qword_254A19178, &qword_254A19150, MEMORY[0x24BDF1248]);
  v0[48] = v16;
  v0[49] = v19;
  v20 = v0[13];
  v21 = MEMORY[0x212BBDF90](v9, v20, v0 + 48);
  v22 = v0[6];
  sub_20E40D7EC(v21, v22);
  (*(void (**)(uint64_t, uint64_t))(v0[19] + 8))(v17, v20);
  v23 = sub_20E39D010(&qword_254A19180, &qword_254A19158, v7);
  v0[46] = v21;
  v0[47] = v23;
  v24 = MEMORY[0x212BBDF90](v9, v0[16], v0 + 46);
  v25 = sub_20E39D010((unint64_t *)&qword_254A18590, &qword_254A18588, v7);
  v0[44] = v24;
  v0[45] = v25;
  v26 = MEMORY[0x212BBDF90](v9, v0[18], v0 + 44);
  v27 = sub_20E39D010(&qword_254A19188, &qword_254A19160, v18);
  v0[42] = v26;
  v0[43] = v27;
  v28 = v0[10];
  v29 = MEMORY[0x212BBDF90](v9, v28, v0 + 42);
  v30 = v0[14];
  sub_20E42967C((uint64_t)v13, v28, v29, v30);
  (*(void (**)(uint64_t, uint64_t))(v0[22] + 8))(v22, v28);
  v31 = sub_20E39F334(&qword_254A19190, (uint64_t (*)(uint64_t))type metadata accessor for AppMetricsViewModifier, (uint64_t)&unk_20E4AC838);
  v0[40] = v29;
  v0[41] = v31;
  v0[38] = MEMORY[0x212BBDF90](v9, v0[21], v0 + 40);
  v0[39] = v29;
  v32 = v0[23];
  v33 = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v32, v0 + 38);
  v34 = (_QWORD *)v0[20];
  sub_20E39D614(v34, v30, v32, v33);
  v35 = *(void (**)(uint64_t, uint64_t))(v0[24] + 8);
  v35(v30, v32);
  sub_20E39D618((uint64_t)v34, v32, v0[25]);
  return ((uint64_t (*)(_QWORD *, uint64_t))v35)(v34, v32);
}

void sub_20E3D23B4(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_20E3D1CB0(a1, (__int128 *)(v2 + 64), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), a2);
}

uint64_t EnvironmentValues.restartJet.getter()
{
  sub_20E3D276C();
  return sub_20E4A3C08();
}

uint64_t sub_20E3D23FC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_20E3D276C();
  result = sub_20E4A3C08();
  *a1 = v3;
  return result;
}

uint64_t sub_20E3D2448()
{
  sub_20E3D276C();
  swift_retain();
  return sub_20E4A3C14();
}

uint64_t sub_20E3D24A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;

  v7[13] = a6;
  v7[14] = a7;
  v7[11] = a4;
  v7[12] = a5;
  v7[9] = a2;
  v7[10] = a3;
  v7[8] = a1;
  sub_20E4A5DF8();
  v7[15] = sub_20E4A5DEC();
  v7[16] = sub_20E4A5DBC();
  v7[17] = v8;
  return swift_task_switch();
}

void sub_20E3D251C()
{
  _OWORD *v0;
  __int128 v1;
  __int128 v2;

  v1 = *(_OWORD *)((char *)v0 + 88);
  v2 = *(_OWORD *)((char *)v0 + 104);
  v0[1] = *(_OWORD *)((char *)v0 + 72);
  v0[2] = v1;
  v0[3] = v2;
  type metadata accessor for Jet();
}

uint64_t sub_20E3D256C()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 144) = sub_20E3CFA10();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 152) = v1;
  *v1 = v0;
  v1[1] = sub_20E3D25B0;
  return sub_20E3D0B08(1);
}

uint64_t sub_20E3D25B0()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_20E3D2608()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = v0[5];
  v6 = v0[6];
  v7 = v0[7];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v8;
  *v8 = v1;
  v8[1] = sub_20E3B50B0;
  return sub_20E3D24A4((uint64_t)(v0 + 8), v2, v3, v4, v5, v6, v7);
}

uint64_t sub_20E3D2690(uint64_t a1)
{
  sub_20E3D26EC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_20E3D26EC(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 < 0)
    return swift_retain();
  else
    return sub_20E39CFB8();
}

void sub_20E3D2704(void *a1, unsigned __int8 a2)
{
  if (a2 != 255)
    sub_20E3D271C(a1, a2 & 1);
}

void sub_20E3D271C(id a1, char a2)
{
  if ((a2 & 1) != 0)

  else
    swift_release();
}

unint64_t sub_20E3D2728()
{
  unint64_t result;

  result = qword_254A191A8;
  if (!qword_254A191A8)
  {
    result = MEMORY[0x212BBDF90](&unk_20E4AAFE4, &type metadata for DeepLinkableViewModifier);
    atomic_store(result, (unint64_t *)&qword_254A191A8);
  }
  return result;
}

unint64_t sub_20E3D276C()
{
  unint64_t result;

  result = qword_254A191B0;
  if (!qword_254A191B0)
  {
    result = MEMORY[0x212BBDF90](&unk_20E4A8F14, &type metadata for RestartJetActionKey);
    atomic_store(result, (unint64_t *)&qword_254A191B0);
  }
  return result;
}

uint64_t JetStartUpCoordinator.init(startUpProcedure:transaction:makeObjects:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v9;
  _QWORD *v10;
  uint64_t result;

  v9 = *a1;
  type metadata accessor for _JetTakeOff();
  v10 = (_QWORD *)swift_allocObject();
  v10[6] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A191C0);
  sub_20E4A359C();
  v10[2] = v9;
  v10[3] = a2;
  v10[4] = a3;
  v10[5] = a4;
  v10[6] = 0;
  result = swift_release();
  *a5 = v10;
  return result;
}

Swift::Void __swiftcall JetStartUpCoordinator.restart()()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A190F8);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *v0;
  v5 = sub_20E4A5E58();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v3, 1, 1, v5);
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = 0;
  v6[3] = 0;
  v6[4] = v4;
  swift_retain_n();
  sub_20E3D1A10((uint64_t)v3, (uint64_t)&unk_254A191D0, (uint64_t)v6);
  swift_release();
  swift_release();
}

uint64_t RestartJetAction.callAsFunction()()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A190F8);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *v0;
  if (v4)
  {
    v5 = sub_20E4A5E58();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v3, 1, 1, v5);
    v6 = (_QWORD *)swift_allocObject();
    v6[2] = 0;
    v6[3] = 0;
    v6[4] = v4;
    swift_retain();
    v7 = &unk_254A191E8;
    v8 = (uint64_t)v3;
    v9 = (uint64_t)v6;
  }
  else
  {
    sub_20E4A5228();
    v10 = sub_20E4A5E58();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v3, 1, 1, v10);
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = 0;
    *(_QWORD *)(v9 + 24) = 0;
    v7 = &unk_254A191E0;
    v8 = (uint64_t)v3;
  }
  return sub_20E3D1A10(v8, (uint64_t)v7, v9);
}

uint64_t JetStartUpCoordinator.debugDescription.getter()
{
  sub_20E4A61A0();
  sub_20E4A5C6C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A191F0);
  sub_20E4A626C();
  sub_20E4A5C6C();
  return 0;
}

BOOL static JetStartUpCoordinator.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

_QWORD *JetStartUpCoordinator.extend(startUpProcedure:withDependencies:)@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  _QWORD *result;
  unint64_t v6;

  v6 = *a1;
  result = sub_20E3D2BA0(&v6, a2, a3);
  *a4 = result;
  return result;
}

_QWORD *sub_20E3D2BA0(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v6 = *a1;
  v7 = *a1;
  if (*a1 == 2)
  {
    v7 = *(_QWORD *)(v3 + 16);
    sub_20E3D4580(v7);
  }
  v8 = *(_QWORD *)(v3 + 24);
  v9 = (_QWORD *)swift_allocObject();
  v9[6] = 0;
  sub_20E3D5F1C(v6);
  swift_retain();
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A191C0);
  sub_20E4A359C();
  v9[2] = v7;
  v9[3] = v8;
  v9[4] = a2;
  v9[5] = a3;
  v9[6] = v3;
  swift_release();
  return v9;
}

BOOL static JetStartUpDecoration.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t JetStartUpDecoration.hash(into:)()
{
  return sub_20E4A641C();
}

uint64_t JetStartUpDecoration.hashValue.getter()
{
  sub_20E4A6410();
  sub_20E4A641C();
  return sub_20E4A6428();
}

uint64_t sub_20E3D2D0C()
{
  sub_20E3D5EC0();
  return sub_20E4A3C08();
}

uint64_t sub_20E3D2D40@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_20E404A68();
  *a1 = result & 1;
  return result;
}

void sub_20E3D2D6C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t OpaqueTypeConformance2;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  _QWORD v29[13];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned __int8 v34;
  __int128 v35;
  _BYTE v36[32];

  v33 = a2;
  v3 = *(_QWORD *)(a1 + 16);
  v29[1] = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  MEMORY[0x24BDAC7A8](v4);
  v29[2] = (char *)v29 - v5;
  v7 = *(_QWORD *)(v6 + 24);
  *(_QWORD *)&v35 = MEMORY[0x24BEE1768];
  *((_QWORD *)&v35 + 1) = v3;
  *(_QWORD *)v36 = MEMORY[0x24BEE1778];
  *(_QWORD *)&v36[8] = v7;
  v8 = sub_20E4A482C();
  v29[6] = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v29[7] = (char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v29[8] = (char *)v29 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19398);
  v13 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A193A0);
  v14 = sub_20E4A3AAC();
  v15 = sub_20E39D010(&qword_254A193A8, &qword_254A193A0, MEMORY[0x24BDF1A30]);
  *(_QWORD *)&v35 = v13;
  *((_QWORD *)&v35 + 1) = v14;
  *(_QWORD *)v36 = v15;
  *(_QWORD *)&v36[8] = MEMORY[0x24BDEDA28];
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v29[5] = v12;
  *(_QWORD *)&v35 = v12;
  *((_QWORD *)&v35 + 1) = MEMORY[0x24BDF5158];
  *(_QWORD *)v36 = v3;
  *(_QWORD *)&v36[8] = OpaqueTypeConformance2;
  v29[4] = OpaqueTypeConformance2;
  *(_QWORD *)&v36[16] = MEMORY[0x24BDF5138];
  *(_QWORD *)&v36[24] = v7;
  v32 = v7;
  v17 = sub_20E4A3CEC();
  v31 = v8;
  v18 = sub_20E4A3E00();
  v29[10] = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v29[9] = (char *)v29 - v19;
  v29[3] = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v20);
  MEMORY[0x24BDAC7A8](v21);
  v30 = sub_20E4A3E00();
  v29[12] = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v29[11] = (char *)v29 - v22;
  v23 = v2[1];
  v35 = *v2;
  *(_OWORD *)v36 = v23;
  *(_OWORD *)&v36[9] = *(__int128 *)((char *)v2 + 25);
  v24 = v23;
  v25 = BYTE8(v23);
  sub_20E39CFAC(v23, SBYTE8(v23));
  sub_20E45CEFC(v24, v25, &v34);
  sub_20E39CED8(v24, v25);
  v26 = v34;
  v27 = *(_QWORD *)&v36[16];
  v28 = v36[24];
  sub_20E39CFAC(*(uint64_t *)&v36[16], v36[24]);
  sub_20E45CF28(v27, v28);
  sub_20E39CED8(v27, v28);
  __asm { BR              X9 }
}

uint64_t sub_20E3D30A0(uint64_t a1)
{
  char v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  MEMORY[0x24BDAC7A8](a1);
  v7 = *(_QWORD *)(v6 - 248);
  if ((v1 & 1) != 0)
  {
    sub_20E4A3CE0();
    v8 = MEMORY[0x212BBDF90](MEMORY[0x24BDEF010], v3);
    sub_20E39D614(v4, v5, v3, v8);
    v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 344) + 8);
    v9(v5, v3);
    sub_20E39D618((uint64_t)v4, v3, v5);
    v10 = *(_QWORD *)(v6 - 256);
    v11 = MEMORY[0x212BBDF90](MEMORY[0x24BDF4B90], v10);
    *(_QWORD *)(v6 - 304) = v4;
    v12 = *(_QWORD *)(v6 - 296);
    sub_20E3DC6B0(v5, v3);
    v9(v5, v3);
    *(_QWORD *)(v6 - 232) = v8;
    *(_QWORD *)(v6 - 224) = v11;
    MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v2, v6 - 232);
    v13 = *(_QWORD *)(v6 - 280);
    sub_20E3DC6B0(v12, v2);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 288) + 8))(v12, v2);
    v9(*(_QWORD *)(v6 - 304), v3);
  }
  else
  {
    v14 = *(_QWORD *)(v6 - 312);
    sub_20E4A4820();
    v10 = *(_QWORD *)(v6 - 256);
    v15 = MEMORY[0x212BBDF90](MEMORY[0x24BDF4B90], v10);
    v16 = *(_QWORD **)(v6 - 304);
    sub_20E39D614(v16, v14, v10, v15);
    v17 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 320) + 8);
    v17(v14, v10);
    sub_20E39D618((uint64_t)v16, v10, v14);
    v18 = MEMORY[0x212BBDF90](MEMORY[0x24BDEF010], v3);
    v19 = *(_QWORD *)(v6 - 296);
    sub_20E39CBE0(v14, v3, v10);
    v17(v14, v10);
    *(_QWORD *)(v6 - 216) = v18;
    *(_QWORD *)(v6 - 208) = v15;
    MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v2, v6 - 216);
    v13 = *(_QWORD *)(v6 - 280);
    sub_20E3DC6B0(v19, v2);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 288) + 8))(v19, v2);
    v17(*(_QWORD *)(v6 - 304), v10);
  }
  v20 = MEMORY[0x212BBDF90](MEMORY[0x24BDEF010], v3);
  v21 = MEMORY[0x212BBDF90](MEMORY[0x24BDF4B90], v10);
  *(_QWORD *)(v6 - 184) = v20;
  *(_QWORD *)(v6 - 176) = v21;
  v22 = MEMORY[0x24BDEF3E0];
  *(_QWORD *)(v6 - 200) = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v2, v6 - 184);
  *(_QWORD *)(v6 - 192) = v7;
  v23 = v22;
  v24 = *(_QWORD *)(v6 - 264);
  MEMORY[0x212BBDF90](v23, v24, v6 - 200);
  sub_20E39D618(v13, v24, *(_QWORD *)(v6 - 240));
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 272) + 8))(v13, v24);
}

uint64_t sub_20E3D34F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v0 = sub_20E4A3AAC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A193A0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A193B0);
  sub_20E3D5B50();
  sub_20E4A4178();
  sub_20E4A3AA0();
  sub_20E39D010(&qword_254A193A8, &qword_254A193A0, MEMORY[0x24BDF1A30]);
  sub_20E4A4508();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_20E3D3644()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v11;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED23F0);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A193C8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20E4A3CA4();
  sub_20E4A46AC();
  KeyPath = swift_getKeyPath();
  v8 = swift_allocObject();
  *(_BYTE *)(v8 + 16) = 1;
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v6, v3, v0);
  v9 = (uint64_t *)&v6[*(int *)(v4 + 36)];
  *v9 = KeyPath;
  v9[1] = (uint64_t)sub_20E3D5CD0;
  v9[2] = v8;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_20E3D5BD4();
  sub_20E4A4340();
  return sub_20E39D1F8((uint64_t)v6, &qword_254A193C8);
}

uint64_t sub_20E3D37B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  _QWORD *v13;
  void (**v14)(double);
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v7 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (uint64_t *)((char *)&v17 - v12);
  (*v14)(v11);
  sub_20E39D614(v13, v9, a2, a3);
  v15 = *(void (**)(char *, uint64_t))(v7 + 8);
  v15(v9, a2);
  sub_20E39D618((uint64_t)v13, a2, a4);
  return ((uint64_t (*)(_QWORD *, uint64_t))v15)(v13, a2);
}

uint64_t _JetViewDefaultWorking.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t KeyPath;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = sub_20E4A3C50();
  v18 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A191F8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v15 - v10;
  KeyPath = swift_getKeyPath();
  v16 = swift_getKeyPath();
  sub_20E4A3C44();
  sub_20E4A48BC();
  sub_20E4A371C();
  if (sub_20E4A3710())
  {
    sub_20E4A48C8();
    swift_release();
  }
  swift_release();
  v12 = sub_20E39F334((unint64_t *)&qword_254A19200, (uint64_t (*)(uint64_t))MEMORY[0x24BDEE630], MEMORY[0x24BDEE620]);
  sub_20E4A3698();
  swift_release();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v4, v2);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v11, v5);
  v19 = v2;
  v20 = v12;
  swift_getOpaqueTypeConformance2();
  v13 = sub_20E4A37D0();
  result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  *(_QWORD *)a1 = sub_20E3D3AC0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = KeyPath;
  *(_BYTE *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = v16;
  *(_BYTE *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = v13;
  return result;
}

uint64_t sub_20E3D3AC0@<X0>(uint64_t a1@<X8>)
{
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v6;
  uint64_t v7;

  sub_20E4A4640();
  KeyPath = swift_getKeyPath();
  v3 = swift_getKeyPath();
  v4 = swift_getKeyPath();
  result = swift_getKeyPath();
  *(_QWORD *)a1 = sub_20E39C368;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  *(_BYTE *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = KeyPath;
  *(_BYTE *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = v3;
  *(_BYTE *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 72) = v4;
  *(_BYTE *)(a1 + 80) = 0;
  *(_QWORD *)(a1 + 88) = result;
  *(_BYTE *)(a1 + 96) = 0;
  return result;
}

uint64_t sub_20E3D3B90@<X0>(uint64_t a1@<X8>)
{
  return _JetViewDefaultWorking.body.getter(a1);
}

uint64_t _JetViewDefaultFailed.body.getter@<X0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  id v7;
  __int128 v9;

  v3 = *((_QWORD *)v1 + 2);
  v4 = swift_allocObject();
  v9 = *v1;
  *(_OWORD *)(v4 + 16) = *v1;
  *(_QWORD *)(v4 + 32) = v3;
  KeyPath = swift_getKeyPath();
  v6 = swift_getKeyPath();
  *(_QWORD *)a1 = sub_20E3D4060;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = KeyPath;
  *(_BYTE *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = v6;
  *(_BYTE *)(a1 + 40) = 0;
  v7 = (id)v9;
  return swift_retain();
}

uint64_t sub_20E3D3C44@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t KeyPath;
  uint64_t v13;
  uint64_t v15;

  v8 = __swift_instantiateConcreteTypeFromMangledName(qword_253ED1E68);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1;
  swift_retain();
  ContentUnavailableView.init<>(error:retry:)(a1, a2, a3, (uint64_t)v10);
  KeyPath = swift_getKeyPath();
  sub_20E3D5E78((uint64_t)v10, a4);
  v13 = a4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254A19400) + 36);
  *(_QWORD *)v13 = KeyPath;
  *(_BYTE *)(v13 + 8) = 2;
  return sub_20E39D1F8((uint64_t)v10, qword_253ED1E68);
}

uint64_t sub_20E3D3D28@<X0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  id v7;
  __int128 v9;

  v3 = *((_QWORD *)v1 + 2);
  v4 = swift_allocObject();
  v9 = *v1;
  *(_OWORD *)(v4 + 16) = *v1;
  *(_QWORD *)(v4 + 32) = v3;
  KeyPath = swift_getKeyPath();
  v6 = swift_getKeyPath();
  *(_QWORD *)a1 = sub_20E3D6310;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = KeyPath;
  *(_BYTE *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = v6;
  *(_BYTE *)(a1 + 40) = 0;
  v7 = (id)v9;
  return swift_retain();
}

unint64_t sub_20E3D3DC8()
{
  return 0xD000000000000017;
}

uint64_t sub_20E3D3DE4()
{
  uint64_t v0;

  return sub_20E3D5F2C(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_20E3D3DF0()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_20E3B50B0;
  return sub_20E3D0B08(0);
}

uint64_t sub_20E3D3E3C()
{
  return objectdestroy_15Tm((void (*)(_QWORD))MEMORY[0x24BEE4F70]);
}

uint64_t sub_20E3D3E48()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_20E3B50B0;
  v2 = (_QWORD *)swift_task_alloc();
  v1[2] = v2;
  *v2 = v1;
  v2[1] = sub_20E3B50B0;
  return sub_20E3D0B08(0);
}

uint64_t sub_20E3D3EB4()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_20E3D3ED8()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_20E3B50B0;
  return sub_20E3B4E08();
}

uint64_t sub_20E3D3F1C()
{
  return objectdestroy_15Tm((void (*)(_QWORD))MEMORY[0x24BEE4F70]);
}

uint64_t sub_20E3D3F28()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_20E3B4E08;
  v2 = (_QWORD *)swift_task_alloc();
  v1[2] = v2;
  *v2 = v1;
  v2[1] = sub_20E3B50B0;
  return sub_20E3D0B08(0);
}

uint64_t sub_20E3D3F94@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_20E3D5EC0();
  result = sub_20E4A3C08();
  *a1 = v3;
  return result;
}

uint64_t sub_20E3D3FE0()
{
  sub_20E3D5EC0();
  return sub_20E4A3C14();
}

uint64_t sub_20E3D4028@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_20E404A68();
  *a1 = result & 1;
  return result;
}

uint64_t sub_20E3D4054()
{
  return objectdestroy_15Tm((void (*)(_QWORD))MEMORY[0x24BEE4CA0]);
}

uint64_t sub_20E3D4060@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_20E3D3C44(*(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), a1);
}

uint64_t View.startUpDecoration(_:)()
{
  swift_getKeyPath();
  sub_20E4A4250();
  return swift_release();
}

void sub_20E3D40DC(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_20E3D40E4()
{
  sub_20E3D48E4();
  return sub_20E4A389C();
}

uint64_t sub_20E3D4134()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_20E4A35D8();
}

uint64_t sub_20E3D41B0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  swift_retain();
  return sub_20E4A35D8();
}

uint64_t sub_20E3D4234(uint64_t a1, void *a2)
{
  id v3;

  swift_getKeyPath();
  swift_getKeyPath();
  v3 = a2;
  swift_retain();
  return sub_20E4A35D8();
}

unint64_t sub_20E3D42C4()
{
  return 0xD000000000000048;
}

uint64_t sub_20E3D42E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_20E3D4590(*(_QWORD *)(v0 + 16));
  swift_release();
  swift_release();
  v1 = v0 + OBJC_IVAR____TtC18_JetEngine_SwiftUI11_JetTakeOff__objectGraph;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A193E0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = *(_QWORD *)(v0 + 48);
  *(_QWORD *)(v0 + 48) = 0;
  if (v3)
  {
    do
    {
      if (!swift_isUniquelyReferenced_native())
        break;
      v4 = *(_QWORD *)(v3 + 48);
      swift_retain();
      swift_release();
      v3 = v4;
    }
    while (v4);
  }
  swift_release();
  return v0;
}

uint64_t sub_20E3D4384()
{
  sub_20E3D42E0();
  return swift_deallocClassInstance();
}

_QWORD *Jet.init(startUpProcedure:makeObjects:working:failed:content:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v17;
  uint64_t v18;
  _QWORD *result;

  v17 = *a1;
  sub_20E4A48BC();
  v18 = sub_20E4A371C();
  result = (_QWORD *)swift_allocObject();
  result[2] = v17;
  result[3] = v18;
  result[4] = a2;
  result[5] = a3;
  *(_QWORD *)a9 = sub_20E3CF910;
  *(_QWORD *)(a9 + 8) = result;
  *(_BYTE *)(a9 + 16) = 0;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = a7;
  *(_QWORD *)(a9 + 56) = a8;
  *(_QWORD *)(a9 + 64) = a10;
  return result;
}

unint64_t Jet.init<>(startUpProcedure:makeObjects:content:)@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v11 = *a1;
  sub_20E3D4580(*a1);
  sub_20E4A48BC();
  v12 = sub_20E4A371C();
  sub_20E39D010(&qword_254A19218, &qword_254A19208, (uint64_t)&protocol conformance descriptor for LoadingView<A>);
  sub_20E39D010(&qword_254A19220, &qword_254A19210, (uint64_t)&protocol conformance descriptor for ContentUnavailableView<A, B, C>);
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = v11;
  v13[3] = v12;
  v13[4] = a2;
  v13[5] = a3;
  *(_QWORD *)a6 = sub_20E3CF910;
  *(_QWORD *)(a6 + 8) = v13;
  *(_BYTE *)(a6 + 16) = 0;
  *(_QWORD *)(a6 + 24) = j___s18_JetEngine_SwiftUI11LoadingViewVACy0cD04TextVGycAFRszrlufC;
  *(_QWORD *)(a6 + 32) = 0;
  *(_QWORD *)(a6 + 40) = sub_20E3D457C;
  *(_QWORD *)(a6 + 48) = 0;
  *(_QWORD *)(a6 + 56) = a4;
  *(_QWORD *)(a6 + 64) = a5;
  return sub_20E3D4590(v11);
}

unint64_t sub_20E3D4580(unint64_t result)
{
  if (result >= 2)
    return swift_bridgeObjectRetain();
  return result;
}

unint64_t sub_20E3D4590(unint64_t result)
{
  if (result >= 2)
    return swift_bridgeObjectRelease();
  return result;
}

unint64_t Jet.init<>(startUpProcedure:transaction:makeObjects:content:)@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v11 = *a1;
  sub_20E3D4580(*a1);
  sub_20E4A48BC();
  v12 = sub_20E4A371C();
  sub_20E39D010(&qword_254A19218, &qword_254A19208, (uint64_t)&protocol conformance descriptor for LoadingView<A>);
  sub_20E39D010(&qword_254A19220, &qword_254A19210, (uint64_t)&protocol conformance descriptor for ContentUnavailableView<A, B, C>);
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = v11;
  v13[3] = v12;
  v13[4] = a2;
  v13[5] = a3;
  *(_QWORD *)a6 = sub_20E3CF910;
  *(_QWORD *)(a6 + 8) = v13;
  *(_BYTE *)(a6 + 16) = 0;
  *(_QWORD *)(a6 + 24) = j___s18_JetEngine_SwiftUI11LoadingViewVACy0cD04TextVGycAFRszrlufC;
  *(_QWORD *)(a6 + 32) = 0;
  *(_QWORD *)(a6 + 40) = sub_20E3D457C;
  *(_QWORD *)(a6 + 48) = 0;
  *(_QWORD *)(a6 + 56) = a4;
  *(_QWORD *)(a6 + 64) = a5;
  swift_release();
  return sub_20E3D4590(v11);
}

uint64_t Jet.init<>(startUpWith:content:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t result;
  uint64_t v7;

  sub_20E39D010(&qword_254A19218, &qword_254A19208, (uint64_t)&protocol conformance descriptor for LoadingView<A>);
  sub_20E39D010(&qword_254A19220, &qword_254A19210, (uint64_t)&protocol conformance descriptor for ContentUnavailableView<A, B, C>);
  type metadata accessor for _JetTakeOff();
  sub_20E39F334(&qword_254A19138, (uint64_t (*)(uint64_t))type metadata accessor for _JetTakeOff, (uint64_t)&unk_20E4A8F4C);
  result = sub_20E4A3938();
  *(_QWORD *)a3 = result;
  *(_QWORD *)(a3 + 8) = v7;
  *(_BYTE *)(a3 + 16) = 0x80;
  *(_QWORD *)(a3 + 24) = j___s18_JetEngine_SwiftUI11LoadingViewVACy0cD04TextVGycAFRszrlufC;
  *(_QWORD *)(a3 + 32) = 0;
  *(_QWORD *)(a3 + 40) = sub_20E3D457C;
  *(_QWORD *)(a3 + 48) = 0;
  *(_QWORD *)(a3 + 56) = a1;
  *(_QWORD *)(a3 + 64) = a2;
  return result;
}

uint64_t sub_20E3D477C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  id v8;

  v8 = a1;
  swift_retain();
  return ContentUnavailableView.init<>(error:retry:)(a1, a2, a3, a4);
}

uint64_t JetStartUpCoordinator.init(startUpProcedure:makeObjects:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t result;

  v7 = *a1;
  sub_20E4A48BC();
  v8 = sub_20E4A371C();
  type metadata accessor for _JetTakeOff();
  v9 = (_QWORD *)swift_allocObject();
  v9[6] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A191C0);
  sub_20E4A359C();
  v9[2] = v7;
  v9[3] = v8;
  v9[4] = a2;
  v9[5] = a3;
  v9[6] = 0;
  result = swift_release();
  *a4 = v9;
  return result;
}

uint64_t sub_20E3D48A4()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_20E3D48E4()
{
  unint64_t result;

  result = qword_254A19228[0];
  if (!qword_254A19228[0])
  {
    result = MEMORY[0x212BBDF90](&protocol conformance descriptor for JetStartUpDecoration, &type metadata for JetStartUpDecoration);
    atomic_store(result, qword_254A19228);
  }
  return result;
}

uint64_t sub_20E3D4928()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E3D4938()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E3D4948@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_20E3D276C();
  result = sub_20E4A3C08();
  *a1 = v3;
  return result;
}

uint64_t sub_20E3D4998()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_20E3D49A0(uint64_t a1)
{
  sub_20E3D06A0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_20E3D49E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  __int128 v8;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 16);
  sub_20E3D26EC(*(_QWORD *)a2, v5, v6);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 64);
  v8 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 64) = v7;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_20E3D4A74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 16);
  sub_20E3D26EC(*(_QWORD *)a2, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  v9 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v6;
  sub_20E3D06A0(v7, v8, v9);
  v10 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v10;
  swift_retain();
  swift_release();
  v11 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v11;
  swift_retain();
  swift_release();
  v12 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v12;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t sub_20E3D4B40(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v4 = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v7 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v4;
  sub_20E3D06A0(v5, v6, v7);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  return a1;
}

uint64_t sub_20E3D4BB4(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_20E3D4BFC(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for Jet()
{
  JUMPOUT(0x212BBDEE8);
}

uint64_t *initializeBufferWithCopyOfBuffer for JetStartUpProcedure(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF)
    v3 = swift_bridgeObjectRetain();
  *a1 = v3;
  return a1;
}

unint64_t destroy for JetStartUpProcedure(unint64_t *a1)
{
  unint64_t result;

  result = *a1;
  if (result >= 0xFFFFFFFF)
    return swift_bridgeObjectRelease();
  return result;
}

unint64_t *assignWithCopy for JetStartUpProcedure(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;

  v3 = *a1;
  v4 = *a2;
  if (v3 < 0xFFFFFFFF)
  {
    *a1 = v4;
    if (v4 >= 0xFFFFFFFF)
      swift_bridgeObjectRetain();
  }
  else if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    *a1 = *a2;
  }
  else
  {
    *a1 = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  return a1;
}

_QWORD *__swift_memcpy8_8(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

unint64_t *assignWithTake for JetStartUpProcedure(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a2;
  if (*a1 < 0xFFFFFFFF)
    goto LABEL_5;
  if (v3 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *a1 = v3;
    return a1;
  }
  *a1 = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for JetStartUpProcedure(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 >= 3)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for JetStartUpProcedure(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 1;
  }
  return result;
}

uint64_t sub_20E3D4E48(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_20E3D4E60(_QWORD *result, int a2)
{
  unsigned int v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2)
      return result;
    v2 = a2 - 1;
  }
  *result = v2;
  return result;
}

ValueMetadata *type metadata accessor for JetStartUpProcedure()
{
  return &type metadata for JetStartUpProcedure;
}

ValueMetadata *type metadata accessor for JetStartUpCoordinator()
{
  return &type metadata for JetStartUpCoordinator;
}

uint64_t getEnumTagSinglePayload for JetStartUpDecoration(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for JetStartUpDecoration(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_20E3D4F7C + 4 * byte_20E4A8AD9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_20E3D4FB0 + 4 * byte_20E4A8AD4[v4]))();
}

uint64_t sub_20E3D4FB0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20E3D4FB8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20E3D4FC0);
  return result;
}

uint64_t sub_20E3D4FCC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20E3D4FD4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_20E3D4FD8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20E3D4FE0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for JetStartUpDecoration()
{
  return &type metadata for JetStartUpDecoration;
}

ValueMetadata *type metadata accessor for _JetViewDefaultWorking()
{
  return &type metadata for _JetViewDefaultWorking;
}

uint64_t destroy for _JetViewDefaultFailed(id *a1)
{

  return swift_release();
}

_QWORD *_s18_JetEngine_SwiftUI21_JetViewDefaultFailedVwCP_0(_QWORD *a1, uint64_t a2)
{
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(id *)a2;
  v5 = *(id *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  *a1 = v4;
  a1[1] = v7;
  a1[2] = v6;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for _JetViewDefaultFailed(uint64_t a1, uint64_t a2)
{
  id v4;
  id v5;
  void *v6;
  uint64_t v7;

  v4 = *(id *)a2;
  v5 = *(id *)a2;
  v6 = *(void **)a1;
  *(_QWORD *)a1 = v4;

  v7 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v7;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for _JetViewDefaultFailed(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v4;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for _JetViewDefaultFailed()
{
  return &type metadata for _JetViewDefaultFailed;
}

_QWORD *initializeBufferWithCopyOfBuffer for RestartJetAction(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t destroy for RestartJetAction()
{
  return swift_release();
}

_QWORD *assignWithCopy for RestartJetAction(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *assignWithTake for RestartJetAction(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for RestartJetAction(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for RestartJetAction(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for RestartJetAction()
{
  return &type metadata for RestartJetAction;
}

uint64_t sub_20E3D5288()
{
  return type metadata accessor for _JetTakeOff();
}

void sub_20E3D5290()
{
  unint64_t v0;

  sub_20E3D5320();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_20E3D5320()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254A192C0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A191C0);
    v0 = sub_20E4A35E4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254A192C0);
  }
}

void sub_20E3D5378()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[2];
  _QWORD v16[2];
  _QWORD v17[2];
  _QWORD v18[2];
  _QWORD v19[2];
  _QWORD v20[2];
  _QWORD v21[2];
  _QWORD v22[3];

  sub_20E4A4F40();
  v0 = sub_20E4A46DC();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19140);
  v1 = sub_20E4A39D4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19148);
  v2 = sub_20E4A39D4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19150);
  v3 = sub_20E4A39D4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19158);
  v4 = sub_20E4A39D4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A18588);
  v5 = sub_20E4A39D4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19160);
  v6 = sub_20E4A39D4();
  type metadata accessor for AppMetricsViewModifier();
  v7 = sub_20E4A39D4();
  v8 = sub_20E4A3E00();
  v9 = MEMORY[0x212BBDF90](MEMORY[0x24BDF44C8], v0);
  v10 = MEMORY[0x24BDF1028];
  v22[0] = v9;
  v22[1] = sub_20E39D010(&qword_254A19168, &qword_254A19140, MEMORY[0x24BDF1028]);
  v11 = MEMORY[0x24BDED308];
  v21[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v1, v22);
  v21[1] = sub_20E39D010(&qword_254A19170, &qword_254A19148, (uint64_t)&unk_20E4AF838);
  v12 = MEMORY[0x212BBDF90](v11, v2, v21);
  v13 = MEMORY[0x24BDF1248];
  v20[0] = v12;
  v20[1] = sub_20E39D010((unint64_t *)&qword_254A19178, &qword_254A19150, MEMORY[0x24BDF1248]);
  v19[0] = MEMORY[0x212BBDF90](v11, v3, v20);
  v19[1] = sub_20E39D010(&qword_254A19180, &qword_254A19158, v10);
  v18[0] = MEMORY[0x212BBDF90](v11, v4, v19);
  v18[1] = sub_20E39D010((unint64_t *)&qword_254A18590, &qword_254A18588, v10);
  v17[0] = MEMORY[0x212BBDF90](v11, v5, v18);
  v17[1] = sub_20E39D010(&qword_254A19188, &qword_254A19160, v13);
  v14 = MEMORY[0x212BBDF90](v11, v6, v17);
  v16[0] = v14;
  v16[1] = sub_20E39F334(&qword_254A19190, (uint64_t (*)(uint64_t))type metadata accessor for AppMetricsViewModifier, (uint64_t)&unk_20E4AC838);
  v15[0] = MEMORY[0x212BBDF90](v11, v7, v16);
  v15[1] = v14;
  MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v8, v15);
  type metadata accessor for _ResultView();
}

uint64_t sub_20E3D568C(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[2];
  _QWORD v8[38];

  sub_20E4A3854();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEC4E0];
  v4 = sub_20E4A39D4();
  v5 = sub_20E4A39D4();
  v8[0] = MEMORY[0x212BBDF90](&unk_20E4AF6E0, a1);
  v8[1] = sub_20E39F334(qword_253ED2910, v3, MEMORY[0x24BDEC4C8]);
  v7[0] = MEMORY[0x212BBDF90](v1, v4, v8);
  v7[1] = sub_20E3D2728();
  return MEMORY[0x212BBDF90](v1, v5, v7);
}

unint64_t sub_20E3D574C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254A192C8;
  if (!qword_254A192C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A192D0);
    v2[0] = sub_20E39D010(&qword_254A192D8, &qword_254A192E0, (uint64_t)&unk_20E4A8EC4);
    v2[1] = sub_20E39D010(&qword_254A192E8, &qword_254A192F0, MEMORY[0x24BDEFB48]);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254A192C8);
  }
  return result;
}

uint64_t sub_20E3D57E8()
{
  return sub_20E39D010(&qword_254A192F8, &qword_254A19300, (uint64_t)&unk_20E4A8EC4);
}

uint64_t sub_20E3D5814(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19308);
  v2 = sub_20E4A39D4();
  v4[0] = v1;
  v4[1] = sub_20E39D010(qword_254A19310, &qword_254A19308, MEMORY[0x24BDF1028]);
  return MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v2, v4);
}

uint64_t sub_20E3D5894(uint64_t a1)
{
  swift_release();
  sub_20E39CED8(*(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  return sub_20E39CED8(*(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
}

uint64_t sub_20E3D58CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  v2 = a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  swift_retain();
  sub_20E39CFAC(v5, v6);
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  v7 = *(_QWORD *)(v2 + 32);
  LOBYTE(v2) = *(_BYTE *)(v2 + 40);
  sub_20E39CFAC(v7, v2);
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = v2;
  return a1;
}

uint64_t sub_20E3D593C(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  v2 = a2;
  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  v5 = v2[2];
  v6 = *((_BYTE *)v2 + 24);
  sub_20E39CFAC(v5, v6);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  sub_20E39CED8(v7, v8);
  v9 = v2[4];
  LOBYTE(v2) = *((_BYTE *)v2 + 40);
  sub_20E39CFAC(v9, (char)v2);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_BYTE *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v9;
  *(_BYTE *)(a1 + 40) = (_BYTE)v2;
  sub_20E39CED8(v10, v11);
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_20E3D59E4(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  char v9;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = v4;
  sub_20E39CED8(v5, v6);
  v7 = *(_BYTE *)(a2 + 40);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_BYTE *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = v7;
  sub_20E39CED8(v8, v9);
  return a1;
}

uint64_t sub_20E3D5A50(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 41))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_20E3D5A98(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 41) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for _JetStartUpDecorationView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _JetStartUpDecorationView);
}

ValueMetadata *type metadata accessor for RestartJetActionKey()
{
  return &type metadata for RestartJetActionKey;
}

uint64_t sub_20E3D5B00()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E3D5B34@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_20E3D37B8(v1[4], v1[2], v1[3], a1);
}

unint64_t sub_20E3D5B50()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254A193B8;
  if (!qword_254A193B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A193B0);
    v2[0] = sub_20E3D5BD4();
    v2[1] = sub_20E39F334(qword_253ED27F8, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254A193B8);
  }
  return result;
}

unint64_t sub_20E3D5BD4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254A193C0;
  if (!qword_254A193C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A193C8);
    v2[0] = sub_20E39D010(&qword_253ED23E8, &qword_253ED23F0, MEMORY[0x24BDF43B0]);
    v2[1] = sub_20E39D010(&qword_254A193D0, &qword_254A193D8, MEMORY[0x24BDF1248]);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254A193C0);
  }
  return result;
}

uint64_t sub_20E3D5C70@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_20E4A3BD8();
  *a1 = result & 1;
  return result;
}

uint64_t sub_20E3D5C9C()
{
  return sub_20E4A3BE4();
}

uint64_t sub_20E3D5CC0()
{
  return swift_deallocObject();
}

_BYTE *sub_20E3D5CD0(_BYTE *result)
{
  uint64_t v1;

  *result &= ~*(_BYTE *)(v1 + 16) & 1;
  return result;
}

uint64_t sub_20E3D5CE8()
{
  return objectdestroy_15Tm((void (*)(_QWORD))MEMORY[0x24BEE4CA0]);
}

uint64_t objectdestroy_15Tm(void (*a1)(_QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 16));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E3D5D24(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  *(_QWORD *)(v2 + 16) = a1;
  v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v3;
  *v3 = v2;
  v3[1] = sub_20E3D5D8C;
  return v5(v2 + 32);
}

uint64_t sub_20E3D5D8C()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_BYTE **)(*v0 + 16);
  v4 = *v0;
  swift_task_dealloc();
  *v2 = *(_BYTE *)(v1 + 32);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_20E3D5DDC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E3D5E00(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_20E3B4E08;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_254A193E8 + dword_254A193E8))(a1, v4);
}

uint64_t sub_20E3D5E78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_253ED1E68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_20E3D5EC0()
{
  unint64_t result;

  result = qword_254A19408;
  if (!qword_254A19408)
  {
    result = MEMORY[0x212BBDF90](&unk_20E4A90C8, &type metadata for JetStartUpDecorationKey);
    atomic_store(result, (unint64_t *)&qword_254A19408);
  }
  return result;
}

unint64_t sub_20E3D5F1C(unint64_t result)
{
  if (result != 2)
    return sub_20E3D4580(result);
  return result;
}

uint64_t sub_20E3D5F2C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_20E3D5F34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_20E3B50B0;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_254A19888 + dword_254A19888))(a1, v4);
}

uint64_t sub_20E3D5FA4()
{
  return sub_20E3D4134();
}

uint64_t sub_20E3D5FBC()
{
  uint64_t v0;

  return sub_20E3D4234(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_20E3D5FD4()
{
  return sub_20E3D41B0();
}

id sub_20E3D5FEC(id a1, char a2)
{
  if ((a2 & 1) != 0)
    return a1;
  else
    return (id)swift_retain();
}

uint64_t sub_20E3D5FF8()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(v0 + 64) + 56))(*(_QWORD *)(v0 + 72));
}

uint64_t objectdestroy_2Tm()
{
  uint64_t v0;

  sub_20E3D06A0(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_BYTE *)(v0 + 80));
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E3D6068()
{
  uint64_t *v0;

  return sub_20E3D0844((uint64_t)(v0 + 8), v0[2], v0[3], v0[4], v0[5], v0[6], v0[7]);
}

uint64_t sub_20E3D607C()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  sub_20E3D06A0(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_BYTE *)(v0 + 96));
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E3D60C4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;

  v4 = v1[5];
  v11 = v1[4];
  v5 = v1[6];
  v6 = v1[7];
  v7 = v1[2];
  v8 = v1[3];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_20E3B50B0;
  return sub_20E3D0970(a1, v7, v8, (uint64_t)(v1 + 10), v11, v4, v5, v6);
}

id sub_20E3D616C(id result, unsigned __int8 a2)
{
  if (a2 != 255)
    return sub_20E3D5FEC(result, a2 & 1);
  return result;
}

ValueMetadata *type metadata accessor for JetStartUpDecorationKey()
{
  return &type metadata for JetStartUpDecorationKey;
}

uint64_t sub_20E3D6194(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[2];
  _QWORD v10[8];

  v1 = *a1;
  v2 = a1[1];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19398);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A193A0);
  sub_20E4A3AAC();
  sub_20E39D010(&qword_254A193A8, &qword_254A193A0, MEMORY[0x24BDF1A30]);
  swift_getOpaqueTypeConformance2();
  v10[6] = MEMORY[0x24BDF5138];
  v10[7] = v2;
  v3 = sub_20E4A3CEC();
  v10[2] = MEMORY[0x24BEE1768];
  v10[3] = v1;
  v10[4] = MEMORY[0x24BEE1778];
  v10[5] = v2;
  v4 = sub_20E4A482C();
  v5 = sub_20E4A3E00();
  v6 = sub_20E4A3E00();
  v10[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDEF010], v3);
  v10[1] = MEMORY[0x212BBDF90](MEMORY[0x24BDF4B90], v4);
  v7 = MEMORY[0x24BDEF3E0];
  v9[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v5, v10);
  v9[1] = v2;
  return MEMORY[0x212BBDF90](v7, v6, v9);
}

uint64_t sub_20E3D6318()
{
  return sub_20E3D5FD4();
}

uint64_t sub_20E3D632C()
{
  return sub_20E3D5FBC();
}

uint64_t _IntentViewDefaultContinuousFailed.init(error:retry:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

void IntentView.init<A>(what:transaction:working:failed:content:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  double v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t AssociatedTypeWitness;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v37 = a7;
  v38 = a8;
  v34 = a4;
  v35 = a6;
  v39 = a5;
  v40 = a3;
  v32 = a2;
  v42 = a1;
  v44 = a9;
  v31 = a18;
  v30 = a17;
  v29 = a15;
  v28 = a13;
  v43 = *(_QWORD *)(a10 - 8);
  v20 = MEMORY[0x24BDAC7A8](a1);
  v41 = (char *)&v28 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(double))(v22 + 16))(v20);
  v23 = (_QWORD *)swift_allocObject();
  v23[2] = a10;
  v23[3] = a11;
  v33 = a11;
  v23[4] = a12;
  v23[5] = a13;
  v36 = a14;
  v23[6] = a14;
  v23[7] = a15;
  v24 = v30;
  v23[8] = a16;
  v23[9] = v24;
  v25 = v31;
  v26 = v32;
  v23[10] = v31;
  v23[11] = v26;
  v23[12] = a3;
  v23[13] = v34;
  v23[14] = a5;
  v27 = v37;
  v23[15] = v35;
  v23[16] = v27;
  v23[17] = v38;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v46 = v28;
  v47 = a11;
  v48 = a12;
  v49 = v25;
  v50 = v24;
  v51 = v29;
  v52 = a16;
  type metadata accessor for _IntentViewContinuousContent();
}

void sub_20E3D64CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v11 = MEMORY[0x212BBDF90](&protocol conformance descriptor for _IntentViewContinuousContent<A, B, C, D>, a1);
  *(_BYTE *)(v9 - 152) = 0;
  swift_retain();
  swift_retain();
  swift_retain();
  IntentView.init(what:transaction:configuration:working:failed:content:)(*(_QWORD *)(v9 - 184), v8, (unsigned __int8 *)(v9 - 152), *(_QWORD *)(v9 - 192), v3, *(_QWORD *)(v9 - 200), v1, (uint64_t)sub_20E3D68F4, v5, v6, a1, *(_QWORD *)(v9 - 248), v4, *(_QWORD *)(v9 - 224), v11, v2, v7);
}

uint64_t sub_20E3D6548()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, uint64_t))(*(_QWORD *)(v1 - 168) + 8))(*(_QWORD *)(v1 - 176), v0);
}

void sub_20E3D657C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t AssociatedTypeWitness;
  double v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v36 = a7;
  v35 = a5;
  v31 = a4;
  v34 = a3;
  v28 = a2;
  v37 = a9;
  v33 = a13;
  v38 = a12;
  v30 = a16;
  v29 = a15;
  v32 = a11;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v22 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v24 = (char *)&v27 - v23;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v25 + 16))((char *)&v27 - v23, a1, AssociatedTypeWitness, v22);
  swift_retain();
  v26 = v31;
  swift_retain();
  swift_retain();
  swift_retain();
  _IntentViewContinuousContent.init(_:transaction:working:failed:content:)((uint64_t)v24, v28, v34, v26, v35, a6, v36, a8, AssociatedTypeWitness, v33, v32, v38, a18, a17, a15, a16);
}

void sub_20E3D6718()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;

  v6 = *(_QWORD *)(v5 - 224);
  v7 = *(_BYTE *)(v5 - 216);
  v8 = *(_QWORD *)(v5 - 208);
  v9 = *(_QWORD *)(v5 - 168);
  *(_QWORD *)(v5 - 304) = *(_QWORD *)(v5 - 232);
  *(_QWORD *)(v5 - 296) = v6;
  *(_BYTE *)(v5 - 288) = v7;
  *(_QWORD *)(v5 - 280) = v8;
  v10 = *(_OWORD *)(v5 - 200);
  *(_OWORD *)(v5 - 352) = v10;
  v11 = *(_OWORD *)(v5 - 184);
  *(_OWORD *)(v5 - 368) = v11;
  *(_OWORD *)(v5 - 272) = v10;
  *(_OWORD *)(v5 - 256) = v11;
  *(_QWORD *)(v5 - 240) = v9;
  *(_QWORD *)(v5 - 160) = v3;
  *(_QWORD *)(v5 - 152) = v4;
  v12 = *(_QWORD *)(v5 - 320);
  *(_QWORD *)(v5 - 144) = v2;
  *(_QWORD *)(v5 - 136) = v12;
  *(_QWORD *)(v5 - 128) = v0;
  *(_QWORD *)(v5 - 120) = v1;
  v13 = *(_QWORD *)(v5 - 408);
  *(_QWORD *)(v5 - 112) = *(_QWORD *)(v5 - 416);
  *(_QWORD *)(v5 - 104) = v13;
  type metadata accessor for _IntentViewContinuousContent();
}

uint64_t sub_20E3D67A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;

  v3 = MEMORY[0x212BBDF90](&protocol conformance descriptor for _IntentViewContinuousContent<A, B, C, D>, a1);
  sub_20E39D614((_QWORD *)(v1 - 160), v1 - 304, a1, v3);
  sub_20E39CED0();
  swift_release();
  swift_release();
  swift_release();
  v4 = *(_QWORD *)(v1 - 152);
  v5 = *(_BYTE *)(v1 - 144);
  v6 = *(_QWORD *)(v1 - 136);
  v7 = *(_QWORD *)(v1 - 96);
  *(_QWORD *)(v1 - 232) = *(_QWORD *)(v1 - 160);
  *(_QWORD *)(v1 - 224) = v4;
  *(_BYTE *)(v1 - 216) = v5;
  *(_QWORD *)(v1 - 208) = v6;
  v8 = *(_OWORD *)(v1 - 128);
  v9 = *(_OWORD *)(v1 - 112);
  *(_OWORD *)(v1 - 320) = v8;
  *(_OWORD *)(v1 - 352) = v9;
  *(_OWORD *)(v1 - 200) = v8;
  *(_OWORD *)(v1 - 184) = v9;
  *(_QWORD *)(v1 - 168) = v7;
  sub_20E39D618(v1 - 232, a1, *(_QWORD *)(v1 - 328));
  sub_20E39CED0();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_20E3D68B8()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_20E3D68F4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  sub_20E3D657C(a1, v2[11], v2[12], v2[13], v2[14], v2[15], v2[16], v2[17], a2, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], v2[8], v2[9], v2[10]);
}

void _IntentViewContinuousContent.init(_:transaction:working:failed:content:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v16;
  uint64_t v17;
  double v18;
  char *v19;
  unint64_t v20;
  unint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v39 = a7;
  v40 = a8;
  v37 = a5;
  v38 = a6;
  v35 = a3;
  v36 = a4;
  v33 = a2;
  v34 = a1;
  v31 = a15;
  v32 = a16;
  v30 = a14;
  v28 = a13;
  v27 = a12;
  v26 = a11;
  v16 = *(_QWORD *)(a9 - 8);
  v29 = v16;
  v17 = *(_QWORD *)(v16 + 64);
  v18 = MEMORY[0x24BDAC7A8](a1);
  v19 = (char *)&v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v16 + 16))(v19, v18);
  v20 = (*(unsigned __int8 *)(v16 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v21 = (v17 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  v22 = (char *)swift_allocObject();
  *((_QWORD *)v22 + 2) = a9;
  *((_QWORD *)v22 + 3) = a10;
  *((_QWORD *)v22 + 4) = a11;
  *((_QWORD *)v22 + 5) = a12;
  *((_QWORD *)v22 + 6) = a13;
  v24 = v30;
  v23 = v31;
  *((_QWORD *)v22 + 7) = v30;
  *((_QWORD *)v22 + 8) = v23;
  v25 = v32;
  *((_QWORD *)v22 + 9) = v32;
  (*(void (**)(char *, char *, uint64_t))(v29 + 32))(&v22[v20], v19, a9);
  *(_QWORD *)&v22[v21] = v33;
  v41 = a9;
  v42 = a10;
  v43 = v26;
  v44 = v27;
  v45 = v28;
  v46 = v24;
  v47 = v23;
  v48 = v25;
  type metadata accessor for _IntentViewContinuousContent.Dispatcher();
}

uint64_t sub_20E3D6A7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  MEMORY[0x212BBDF90](&unk_20E4A93F4, a1);
  v5 = sub_20E4A36E0();
  v7 = v6;
  v9 = v8;
  result = (*(uint64_t (**)(_QWORD, uint64_t))(v2 + 8))(*(_QWORD *)(v4 - 208), v3);
  *(_QWORD *)v1 = v5;
  *(_QWORD *)(v1 + 8) = v7;
  *(_BYTE *)(v1 + 16) = v9 & 1;
  v11 = *(_QWORD *)(v4 - 192);
  *(_QWORD *)(v1 + 24) = *(_QWORD *)(v4 - 200);
  *(_QWORD *)(v1 + 32) = v11;
  v12 = *(_QWORD *)(v4 - 176);
  *(_QWORD *)(v1 + 40) = *(_QWORD *)(v4 - 184);
  *(_QWORD *)(v1 + 48) = v12;
  v13 = *(_QWORD *)(v4 - 160);
  *(_QWORD *)(v1 + 56) = *(_QWORD *)(v4 - 168);
  *(_QWORD *)(v1 + 64) = v13;
  return result;
}

void type metadata accessor for _IntentViewContinuousContent()
{
  JUMPOUT(0x212BBDEE8);
}

void IntentView.init<A>(what:transaction:content:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v24 = a7;
  v25 = a3;
  v26 = a4;
  v16 = *(_QWORD *)(a5 - 8);
  v17 = MEMORY[0x24BDAC7A8](a1);
  v19 = (char *)&v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v16 + 16))(v19, a1, v20, v17);
  v21 = sub_20E3ADB5C();
  v22 = sub_20E3ADBA0();
  IntentView.init<A>(what:transaction:working:failed:content:)((uint64_t)v19, a2, (uint64_t)nullsub_1, 0, (uint64_t)sub_20E3D6C3C, 0, v25, v26, a9, a5, (uint64_t)&type metadata for _IntentViewDefaultContinuousWorking, (uint64_t)&type metadata for _IntentViewDefaultContinuousFailed, a6, v24, v21, v22, a8, a10);
}

uint64_t sub_20E3D6C08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t sub_20E3D6C3C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  id v4;

  *a4 = a1;
  a4[1] = a2;
  a4[2] = a3;
  v4 = a1;
  return swift_retain();
}

uint64_t *sub_20E3D6C68(uint64_t a1, uint64_t a2)
{
  swift_allocObject();
  return sub_20E3D6CB0(a1, a2);
}

uint64_t *sub_20E3D6CB0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  char *v33;
  uint64_t v34;
  void (*v36)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;

  v46 = a1;
  v47 = a2;
  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 112);
  v43 = *(_QWORD *)(*v2 + 80);
  v44 = v4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v40 = sub_20E4A60E0();
  v38 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v45 = (char *)&v36 - v6;
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](v8);
  v42 = (char *)&v36 - v9;
  v10 = sub_20E4A596C();
  v11 = sub_20E4A60E0();
  v12 = sub_20E4A35E4();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v36 - v14;
  v41 = v11;
  v37 = *(_QWORD *)(v11 - 8);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v36 - v18;
  *(uint64_t *)((char *)v2 + *(_QWORD *)(v3 + 160)) = 0;
  v20 = (uint64_t)v2 + *(_QWORD *)(*v2 + 168);
  v21 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  v39 = v10;
  v36 = v21;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t, double))v21)(v19, 1, 1, v10, v17);
  v22 = v7;
  v23 = v43;
  sub_20E3D6FDC((uint64_t)v19);
  v24 = *(void (**)(uint64_t, char *, uint64_t))(v13 + 32);
  v25 = v20;
  v26 = v46;
  v27 = v47;
  v28 = v15;
  v29 = AssociatedTypeWitness;
  v24(v25, v28, v12);
  v30 = *(_QWORD *)(v23 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16))((uint64_t)v2 + *(_QWORD *)(*v2 + 144), v26, v23);
  *(uint64_t *)((char *)v2 + *(_QWORD *)(*v2 + 152)) = v27;
  swift_retain();
  v31 = v45;
  sub_20E4A49B8();
  v32 = v31;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v31, 1, v29) == 1)
  {
    (*(void (**)(char *, uint64_t))(v38 + 8))(v31, v40);
    sub_20E3D70A8();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v26, v23);
  }
  else
  {
    v33 = v42;
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v42, v32, v29);
    (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v33, v29);
    v34 = v39;
    swift_storeEnumTagMultiPayload();
    v36(v19, 0, 1, v34);
    sub_20E3D9600((uint64_t)v19);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v19, v41);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v26, v23);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v33, v29);
  }
  return v2;
}

uint64_t sub_20E3D6FDC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  swift_getAssociatedTypeWitness();
  sub_20E4A596C();
  v2 = sub_20E4A60E0();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v8 - v5;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16))((char *)&v8 - v5, a1, v2, v4);
  sub_20E4405E4((uint64_t)v6, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

uint64_t sub_20E3D70A8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;

  v1 = v0;
  v2 = *v0;
  v27 = *(_QWORD *)(*v0 + 80);
  v3 = sub_20E4A56C0();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = v3;
  v6 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](v3);
  v28 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v25 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A190F8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_20E4A5E58();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  v14 = swift_allocObject();
  swift_weakInit();
  sub_20E4A4BD4();
  v15 = *(uint64_t *)((char *)v1 + *(_QWORD *)(*v1 + 152));
  v25 = v5;
  v26 = v15;
  v16 = v5;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))((char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v9, v5);
  sub_20E4A5DF8();
  swift_retain();
  swift_retain();
  v17 = sub_20E4A5DEC();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v16);
  v18 = (*(unsigned __int8 *)(v4 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v19 = (v6 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  v20 = swift_allocObject();
  v21 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v20 + 16) = v17;
  *(_QWORD *)(v20 + 24) = v21;
  v22 = v28;
  *(_QWORD *)(v20 + 32) = v27;
  *(_QWORD *)(v20 + 40) = *(_QWORD *)(v2 + 88);
  *(_OWORD *)(v20 + 48) = *(_OWORD *)(v2 + 96);
  *(_QWORD *)(v20 + 64) = *(_QWORD *)(v2 + 112);
  *(_OWORD *)(v20 + 72) = *(_OWORD *)(v2 + 120);
  *(_QWORD *)(v20 + 88) = *(_QWORD *)(v2 + 136);
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v20 + v18, v22, v25);
  *(_QWORD *)(v20 + v19) = v26;
  *(_QWORD *)(v20 + ((v19 + 15) & 0xFFFFFFFFFFFFFFF8)) = v14;
  swift_release();
  v23 = sub_20E3DF694((uint64_t)v12, (uint64_t)&unk_254A19570, v20);
  sub_20E39D1F8((uint64_t)v12, &qword_254A190F8);
  sub_20E3D95A0();
  *(uint64_t *)((char *)v1 + *(_QWORD *)(*v1 + 160)) = v23;
  return swift_release();
}

uint64_t *sub_20E3D7324()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *v0;
  v2 = *v0;
  if (*(uint64_t *)((char *)v0 + *(_QWORD *)(*v0 + 160)))
  {
    swift_retain();
    sub_20E4A5E64();
    swift_release();
    v2 = *v0;
  }
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(v2 + 144), *(_QWORD *)(v1 + 80));
  swift_release();
  swift_release();
  v3 = (uint64_t)v0 + *(_QWORD *)(*v0 + 168);
  swift_getAssociatedTypeWitness();
  sub_20E4A596C();
  sub_20E4A60E0();
  v4 = sub_20E4A35E4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t sub_20E3D7428()
{
  sub_20E3D7324();
  return swift_deallocClassInstance();
}

uint64_t sub_20E3D7448()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_20E4A35CC();
  swift_release();
  return swift_release();
}

uint64_t sub_20E3D750C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;

  *(_QWORD *)(v8 + 96) = v21;
  *(_OWORD *)(v8 + 80) = v20;
  *(_QWORD *)(v8 + 64) = v18;
  *(_QWORD *)(v8 + 72) = v19;
  *(_QWORD *)(v8 + 48) = a8;
  *(_QWORD *)(v8 + 56) = v17;
  *(_QWORD *)(v8 + 32) = a6;
  *(_QWORD *)(v8 + 40) = a7;
  *(_QWORD *)(v8 + 16) = a4;
  *(_QWORD *)(v8 + 24) = a5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v8 + 104) = AssociatedTypeWitness;
  v11 = sub_20E4A49D0();
  *(_QWORD *)(v8 + 112) = v11;
  v12 = sub_20E4A60E0();
  *(_QWORD *)(v8 + 120) = v12;
  *(_QWORD *)(v8 + 128) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v8 + 136) = swift_task_alloc();
  *(_QWORD *)(v8 + 144) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v8 + 152) = swift_task_alloc();
  *(_QWORD *)(v8 + 160) = *(_QWORD *)(AssociatedTypeWitness - 8);
  *(_QWORD *)(v8 + 168) = swift_task_alloc();
  v13 = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v8 + 176) = v13;
  *(_QWORD *)(v8 + 184) = *(_QWORD *)(v13 - 8);
  *(_QWORD *)(v8 + 192) = swift_task_alloc();
  *(_QWORD *)(v8 + 200) = swift_task_alloc();
  sub_20E4A60E0();
  *(_QWORD *)(v8 + 208) = swift_task_alloc();
  v14 = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v8 + 216) = v14;
  *(_QWORD *)(v8 + 224) = *(_QWORD *)(v14 - 8);
  *(_QWORD *)(v8 + 232) = swift_task_alloc();
  *(_QWORD *)(v8 + 240) = *(_QWORD *)(a7 - 8);
  *(_QWORD *)(v8 + 248) = swift_task_alloc();
  *(_QWORD *)(v8 + 256) = swift_task_alloc();
  *(_QWORD *)(v8 + 264) = swift_task_alloc();
  *(_QWORD *)(v8 + 272) = sub_20E4A5DF8();
  *(_QWORD *)(v8 + 280) = sub_20E4A5DEC();
  *(_QWORD *)(v8 + 288) = sub_20E4A5DBC();
  *(_QWORD *)(v8 + 296) = v15;
  return swift_task_switch();
}

uint64_t sub_20E3D773C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  _QWORD *v6;

  v1 = v0[32];
  v2 = v0[33];
  v3 = v0[30];
  v4 = v0[5];
  sub_20E4A4E80();
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[38] = v5;
  v5(v1, v2, v4);
  swift_retain();
  sub_20E4A5E88();
  v0[39] = sub_20E4A5DEC();
  v0[40] = swift_getAssociatedConformanceWitness();
  v6 = (_QWORD *)swift_task_alloc();
  v0[41] = v6;
  *v6 = v0;
  v6[1] = sub_20E3D7854;
  return sub_20E4A5DE0();
}

uint64_t sub_20E3D7854()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 336) = v0;
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_20E3D78BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  void (*v9)(_QWORD, uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  _QWORD *v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v1 = *(_QWORD *)(v0 + 208);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 104);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 224) + 8))(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 216));
    swift_release();
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v2 + 32))(*(_QWORD *)(v0 + 168), v1, v3);
    if ((sub_20E4A5E70() & 1) == 0)
    {
      v27 = *(_QWORD *)(v0 + 160);
      v26 = *(_QWORD *)(v0 + 168);
      v28 = *(_QWORD *)(v0 + 104);
      v29 = *(_QWORD *)(v0 + 32);
      v30 = swift_task_alloc();
      v31 = *(_OWORD *)(v0 + 56);
      v32 = *(_OWORD *)(v0 + 72);
      v33 = *(_OWORD *)(v0 + 88);
      *(_OWORD *)(v30 + 16) = *(_OWORD *)(v0 + 40);
      *(_OWORD *)(v30 + 32) = v31;
      *(_OWORD *)(v30 + 48) = v32;
      *(_OWORD *)(v30 + 64) = v33;
      *(_QWORD *)(v30 + 80) = v29;
      *(_QWORD *)(v30 + 88) = v26;
      __swift_instantiateConcreteTypeFromMangledName(&qword_254A193F8);
      sub_20E4A3A28();
      swift_task_dealloc();
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
      *(_QWORD *)(v0 + 312) = sub_20E4A5DEC();
      *(_QWORD *)(v0 + 320) = swift_getAssociatedConformanceWitness();
      v34 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 328) = v34;
      *v34 = v0;
      v34[1] = sub_20E3D7854;
      return sub_20E4A5DE0();
    }
    v5 = *(_QWORD *)(v0 + 160);
    v4 = *(_QWORD *)(v0 + 168);
    v6 = *(_QWORD *)(v0 + 104);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 224) + 8))(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 216));
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  }
  v7 = *(_QWORD *)(v0 + 144);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 304))(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 40));
  v8 = swift_dynamicCast();
  v9 = *(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v7 + 56);
  v10 = *(_QWORD *)(v0 + 136);
  if ((v8 & 1) != 0)
  {
    v12 = *(_QWORD *)(v0 + 144);
    v11 = *(_QWORD *)(v0 + 152);
    v13 = *(_QWORD *)(v0 + 112);
    v9(*(_QWORD *)(v0 + 136), 0, 1, v13);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v11, v10, v13);
    if ((sub_20E4A49C4() & 1) != 0 || (sub_20E4A5E70() & 1) != 0)
    {
      v14 = *(_QWORD *)(v0 + 264);
      v15 = *(_QWORD *)(v0 + 240);
      v17 = *(_QWORD *)(v0 + 144);
      v16 = *(_QWORD *)(v0 + 152);
      v18 = *(_QWORD *)(v0 + 112);
      v19 = *(_QWORD *)(v0 + 40);
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
      v20 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
    }
    else
    {
      v14 = *(_QWORD *)(v0 + 264);
      v36 = *(_QWORD *)(v0 + 240);
      v38 = *(_QWORD *)(v0 + 144);
      v37 = *(_QWORD *)(v0 + 152);
      v39 = *(_QWORD *)(v0 + 112);
      v19 = *(_QWORD *)(v0 + 40);
      IntentViewLogFinishedSequenceError()();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v39);
      v20 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
    }
    v20(v14, v19);
  }
  else
  {
    v21 = *(_QWORD *)(v0 + 264);
    v22 = *(_QWORD *)(v0 + 240);
    v23 = *(_QWORD *)(v0 + 120);
    v24 = *(_QWORD *)(v0 + 128);
    v25 = *(_QWORD *)(v0 + 40);
    v9(*(_QWORD *)(v0 + 136), 1, 1, *(_QWORD *)(v0 + 112));
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v25);
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v10, v23);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20E3D7C84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;

  v2 = *(_QWORD *)(v0 + 192);
  v1 = *(_QWORD *)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 176);
  v4 = *(_QWORD *)(v0 + 184);
  swift_release();
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32);
  v5(v2, v1, v3);
  swift_getAssociatedConformanceWitness();
  v6 = sub_20E4A6338();
  v7 = *(_QWORD *)(v0 + 192);
  if (v6)
  {
    v8 = (void *)v6;
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 184) + 8))(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 176));
  }
  else
  {
    v9 = *(_QWORD *)(v0 + 176);
    v8 = (void *)swift_allocError();
    v5(v10, v7, v9);
  }
  v11 = *(_QWORD *)(v0 + 264);
  v12 = *(_QWORD *)(v0 + 240);
  v13 = *(_QWORD *)(v0 + 32);
  v18 = *(_OWORD *)(v0 + 56);
  v19 = *(_OWORD *)(v0 + 40);
  v16 = *(_OWORD *)(v0 + 88);
  v17 = *(_OWORD *)(v0 + 72);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 224) + 8))(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 216));
  v14 = swift_task_alloc();
  *(_OWORD *)(v14 + 16) = v19;
  *(_OWORD *)(v14 + 32) = v18;
  *(_OWORD *)(v14 + 48) = v17;
  *(_OWORD *)(v14 + 64) = v16;
  *(_QWORD *)(v14 + 80) = v13;
  *(_QWORD *)(v14 + 88) = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A193F8);
  sub_20E4A3A28();
  swift_release();
  swift_task_dealloc();
  (*(void (**)(uint64_t, _QWORD))(v12 + 8))(v11, v19);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20E3D7E98@<X0>(uint64_t a1@<X1>, BOOL *a2@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = sub_20E4A596C();
  v6 = sub_20E4A60E0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v12 - v8;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  v11 = result;
  if (result)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(v9, a1, AssociatedTypeWitness);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v9, 0, 1, v5);
    sub_20E3D9600((uint64_t)v9);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    result = swift_release();
  }
  *a2 = v11 == 0;
  return result;
}

Swift::Void __swiftcall IntentViewLogFinishedSequenceError()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;

  v0 = sub_20E4A5A8C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((byte_254A19440 & 1) == 0)
  {
    byte_254A19440 = 1;
    sub_20E4A5A44();
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0D58);
    sub_20E4A4ACC();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_20E4A8040;
    sub_20E4A4A30();
    sub_20E4A4A30();
    sub_20E4A4A30();
    sub_20E4A5768();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
}

uint64_t sub_20E3D815C@<X0>(void *a1@<X1>, BOOL *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t result;
  uint64_t v10;
  id v11;
  uint64_t v12;

  swift_getAssociatedTypeWitness();
  v4 = sub_20E4A596C();
  v5 = sub_20E4A60E0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (uint64_t *)((char *)&v12 - v7);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  v10 = result;
  if (result)
  {
    *v8 = a1;
    swift_storeEnumTagMultiPayload();
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v8, 0, 1, v4);
    v11 = a1;
    sub_20E3D9600((uint64_t)v8);
    (*(void (**)(_QWORD *, uint64_t))(v6 + 8))(v8, v5);
    result = swift_release();
  }
  *a2 = v10 == 0;
  return result;
}

void sub_20E3D829C(uint64_t a1)
{
  MEMORY[0x24BDAC7A8](a1);
  type metadata accessor for _IntentViewContinuousContent.Dispatcher();
}

uint64_t *sub_20E3D830C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v2, v0);
  swift_allocObject();
  swift_retain();
  return sub_20E3D6CB0(v3, v1);
}

uint64_t sub_20E3D8368()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  swift_release();
  return swift_deallocObject();
}

void sub_20E3D83D4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80);
  sub_20E3D829C(v0 + ((v1 + 80) & ~v1));
}

void type metadata accessor for _IntentViewContinuousContent.Dispatcher()
{
  JUMPOUT(0x212BBDEE8);
}

void sub_20E3D8438()
{
  type metadata accessor for _IntentViewContinuousContent.Dispatcher();
}

uint64_t sub_20E3D8478(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v6 = MEMORY[0x212BBDF90](&unk_20E4A93F4, a1);
  return v1(v3, v4, v2, a1, v6);
}

void _IntentViewContinuousContent.body.getter(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v13 = a2;
  v11 = a1[6];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_20E4A596C();
  sub_20E4A60E0();
  v3 = sub_20E4A4778();
  MEMORY[0x24BDAC7A8](v3);
  v14 = (char *)&v11 - v4;
  v5 = a1[3];
  v6 = a1[4];
  v7 = a1[5];
  v8 = a1[7];
  v9 = a1[8];
  v10 = a1[9];
  v15 = AssociatedTypeWitness;
  v16 = v5;
  v17 = v6;
  v18 = v7;
  v19 = v8;
  v20 = v9;
  v21 = v10;
  type metadata accessor for _ResultView();
}

void sub_20E3D85A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  __int128 *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;

  *(_QWORD *)(v10 - 344) = a1;
  *(_QWORD *)(v10 - 328) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v10 - 360) = (char *)&a9 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  *(_QWORD *)(v10 - 352) = (char *)&a9 - v13;
  v14 = v9[1];
  v16 = v9[2];
  v15 = v9[3];
  *(_OWORD *)(v10 - 128) = v16;
  *(_OWORD *)(v10 - 112) = v15;
  v17 = v9[1];
  v18 = *v9;
  *(_OWORD *)(v10 - 160) = *v9;
  *(_OWORD *)(v10 - 144) = v17;
  v19 = v9[3];
  *(_OWORD *)(v10 - 208) = v16;
  *(_OWORD *)(v10 - 192) = v19;
  *(_QWORD *)(v10 - 96) = *((_QWORD *)v9 + 8);
  *(_QWORD *)(v10 - 176) = *((_QWORD *)v9 + 8);
  *(_OWORD *)(v10 - 240) = v18;
  *(_OWORD *)(v10 - 224) = v14;
  sub_20E3D8438();
}

void sub_20E3D8650()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v7 - 304) = v4;
  *(_QWORD *)(v7 - 296) = v0;
  *(_QWORD *)(v7 - 288) = v1;
  *(_QWORD *)(v7 - 280) = v6;
  v8 = *(_QWORD *)(v7 - 368);
  *(_QWORD *)(v7 - 272) = v8;
  *(_QWORD *)(v7 - 264) = v3;
  *(_QWORD *)(v7 - 256) = v5;
  *(_QWORD *)(v7 - 248) = v2;
  swift_getKeyPath();
  *(_QWORD *)(v7 - 240) = v4;
  *(_QWORD *)(v7 - 232) = v0;
  *(_QWORD *)(v7 - 224) = v1;
  *(_QWORD *)(v7 - 216) = v6;
  *(_QWORD *)(v7 - 208) = v8;
  *(_QWORD *)(v7 - 200) = v3;
  *(_QWORD *)(v7 - 192) = v5;
  *(_QWORD *)(v7 - 184) = v2;
  type metadata accessor for _IntentViewContinuousContent.Dispatcher();
}

void sub_20E3D86C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;

  MEMORY[0x212BBDF90](&unk_20E4A93F4, a1);
  sub_20E4A3950();
  swift_release();
  swift_release();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v6;
  *(_QWORD *)(v10 + 24) = v1;
  *(_QWORD *)(v10 + 32) = v2;
  *(_QWORD *)(v10 + 40) = v8;
  *(_QWORD *)(v10 + 48) = v4;
  *(_QWORD *)(v10 + 56) = v5;
  *(_QWORD *)(v10 + 64) = v7;
  *(_QWORD *)(v10 + 72) = v3;
  v11 = *(_OWORD *)(v9 - 112);
  *(_OWORD *)(v10 + 112) = *(_OWORD *)(v9 - 128);
  *(_OWORD *)(v10 + 128) = v11;
  *(_QWORD *)(v10 + 144) = *(_QWORD *)(v9 - 96);
  v12 = *(_OWORD *)(v9 - 144);
  *(_OWORD *)(v10 + 80) = *(_OWORD *)(v9 - 160);
  *(_OWORD *)(v10 + 96) = v12;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v6;
  *(_QWORD *)(v13 + 24) = v1;
  *(_QWORD *)(v13 + 32) = v2;
  *(_QWORD *)(v13 + 40) = v8;
  *(_QWORD *)(v13 + 48) = v4;
  *(_QWORD *)(v13 + 56) = v5;
  *(_QWORD *)(v13 + 64) = v7;
  *(_QWORD *)(v13 + 72) = v3;
  v14 = *(_OWORD *)(v9 - 112);
  *(_OWORD *)(v13 + 112) = *(_OWORD *)(v9 - 128);
  *(_OWORD *)(v13 + 128) = v14;
  *(_QWORD *)(v13 + 144) = *(_QWORD *)(v9 - 96);
  v15 = *(_OWORD *)(v9 - 144);
  *(_OWORD *)(v13 + 80) = *(_OWORD *)(v9 - 160);
  *(_OWORD *)(v13 + 96) = v15;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = v6;
  *(_QWORD *)(v16 + 24) = v1;
  *(_QWORD *)(v16 + 32) = v2;
  *(_QWORD *)(v16 + 40) = v8;
  *(_QWORD *)(v16 + 48) = v4;
  *(_QWORD *)(v16 + 56) = v5;
  *(_QWORD *)(v16 + 64) = v7;
  *(_QWORD *)(v16 + 72) = v3;
  v17 = *(_OWORD *)(v9 - 112);
  *(_OWORD *)(v16 + 112) = *(_OWORD *)(v9 - 128);
  *(_OWORD *)(v16 + 128) = v17;
  *(_QWORD *)(v16 + 144) = *(_QWORD *)(v9 - 96);
  v18 = *(_OWORD *)(v9 - 144);
  *(_OWORD *)(v16 + 80) = *(_OWORD *)(v9 - 160);
  *(_OWORD *)(v16 + 96) = v18;
  sub_20E467A3C(*(_QWORD *)(v9 - 312), *(_QWORD *)(v9 - 360));
}

uint64_t sub_20E3D8808()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);

  v2 = *(_QWORD *)(v1 - 344);
  v3 = MEMORY[0x212BBDF90](&unk_20E4AF6E0, v2);
  v4 = *(_QWORD **)(v1 - 352);
  v5 = v2;
  sub_20E39D614(v4, v0, v2, v3);
  sub_20E3D8D64(v1 - 160);
  sub_20E3D8D64(v1 - 160);
  sub_20E3D8D64(v1 - 160);
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 328) + 8);
  v6(v0, v5);
  sub_20E39D618((uint64_t)v4, v5, *(_QWORD *)(v1 - 320));
  return ((uint64_t (*)(_QWORD *, uint64_t))v6)(v4, v5);
}

uint64_t sub_20E3D88BC()
{
  return sub_20E3D7448();
}

uint64_t sub_20E3D88DC(uint64_t a1)
{
  return sub_20E3D9600(a1);
}

uint64_t sub_20E3D88FC()
{
  return 64;
}

__n128 sub_20E3D8908(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  v4 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 48) = v4;
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_20E3D891C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X7>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v7 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (uint64_t *)((char *)&v17 - v12);
  (*(void (**)(double))(v14 + 24))(v11);
  sub_20E39D614(v13, v9, a2, a3);
  v15 = *(void (**)(char *, uint64_t))(v7 + 8);
  v15(v9, a2);
  sub_20E39D618((uint64_t)v13, a2, a4);
  return ((uint64_t (*)(_QWORD *, uint64_t))v15)(v13, a2);
}

uint64_t sub_20E3D89F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_20E3D891C(v1 + 80, *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 64), a1);
}

uint64_t sub_20E3D8A2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  void (*v26)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, void (*)(), uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v31 = a7;
  v32 = a8;
  v29 = a5;
  v35 = a9;
  v15 = *(_QWORD *)(a6 - 8);
  v33 = a1;
  v34 = v15;
  MEMORY[0x24BDAC7A8](a1);
  v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (uint64_t *)((char *)&v28 - v19);
  v30 = *(void (**)(uint64_t, void (*)(), uint64_t))(v21 + 40);
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = a3;
  *(_QWORD *)(v22 + 24) = a4;
  *(_QWORD *)(v22 + 32) = v29;
  *(_QWORD *)(v22 + 40) = a6;
  v23 = v32;
  *(_QWORD *)(v22 + 48) = v31;
  *(_QWORD *)(v22 + 56) = v23;
  *(_QWORD *)(v22 + 64) = a10;
  *(_QWORD *)(v22 + 72) = a11;
  v24 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v22 + 112) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v22 + 128) = v24;
  *(_QWORD *)(v22 + 144) = *(_QWORD *)(a2 + 64);
  v25 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v22 + 80) = *(_OWORD *)a2;
  *(_OWORD *)(v22 + 96) = v25;
  sub_20E3D8D64(a2);
  v30(v33, sub_20E3D99B0, v22);
  swift_release();
  sub_20E39D614(v20, v17, a6, a11);
  v26 = *(void (**)(char *, uint64_t))(v34 + 8);
  v26(v17, a6);
  sub_20E39D618((uint64_t)v20, a6, v35);
  return ((uint64_t (*)(_QWORD *, uint64_t))v26)(v20, a6);
}

uint64_t sub_20E3D8BA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_20E3D8A2C(a1, (uint64_t)(v2 + 10), v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], a2, v2[8], v2[9]);
}

void sub_20E3D8BDC()
{
  type metadata accessor for _IntentViewContinuousContent();
}

void sub_20E3D8C24()
{
  sub_20E3D8438();
}

uint64_t sub_20E3D8C34()
{
  sub_20E3D70A8();
  return swift_release();
}

uint64_t sub_20E3D8C54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X7>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v7 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (uint64_t *)((char *)&v17 - v12);
  (*(void (**)(double))(v14 + 56))(v11);
  sub_20E39D614(v13, v9, a2, a3);
  v15 = *(void (**)(char *, uint64_t))(v7 + 8);
  v15(v9, a2);
  sub_20E39D618((uint64_t)v13, a2, a4);
  return ((uint64_t (*)(_QWORD *, uint64_t))v15)(v13, a2);
}

uint64_t sub_20E3D8D30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_20E3D8C54(a1, *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 56), a2);
}

uint64_t sub_20E3D8D64(uint64_t a1)
{
  sub_20E39CFB8();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t _IntentViewDefaultContinuousWorking.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v6;
  uint64_t v7;

  sub_20E4A4640();
  KeyPath = swift_getKeyPath();
  v3 = swift_getKeyPath();
  v4 = swift_getKeyPath();
  result = swift_getKeyPath();
  *(_QWORD *)a1 = sub_20E39C368;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = 1;
  *(_BYTE *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = KeyPath;
  *(_BYTE *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = v3;
  *(_BYTE *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 72) = v4;
  *(_BYTE *)(a1 + 80) = 0;
  *(_QWORD *)(a1 + 88) = result;
  *(_BYTE *)(a1 + 96) = 1;
  return result;
}

uint64_t sub_20E3D8E94@<X0>(uint64_t a1@<X8>)
{
  return _IntentViewDefaultContinuousWorking.body.getter(a1);
}

uint64_t _IntentViewDefaultContinuousFailed.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v13;

  v3 = __swift_instantiateConcreteTypeFromMangledName(qword_253ED1E68);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void **)v1;
  v7 = *(_QWORD *)(v1 + 8);
  v8 = *(_QWORD *)(v1 + 16);
  v9 = v6;
  swift_retain();
  ContentUnavailableView.init<>(error:retry:)(v6, v7, v8, (uint64_t)v5);
  KeyPath = swift_getKeyPath();
  sub_20E3D5E78((uint64_t)v5, a1);
  v11 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254A19400) + 36);
  *(_QWORD *)v11 = KeyPath;
  *(_BYTE *)(v11 + 8) = 1;
  return sub_20E39D1F8((uint64_t)v5, qword_253ED1E68);
}

uint64_t sub_20E3D8F88@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v13;

  v3 = __swift_instantiateConcreteTypeFromMangledName(qword_253ED1E68);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void **)v1;
  v7 = *(_QWORD *)(v1 + 8);
  v8 = *(_QWORD *)(v1 + 16);
  v9 = v6;
  swift_retain();
  ContentUnavailableView.init<>(error:retry:)(v6, v7, v8, (uint64_t)v5);
  KeyPath = swift_getKeyPath();
  sub_20E3D5E78((uint64_t)v5, a1);
  v11 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254A19400) + 36);
  *(_QWORD *)v11 = KeyPath;
  *(_BYTE *)(v11 + 8) = 1;
  return sub_20E39D1F8((uint64_t)v5, qword_253ED1E68);
}

uint64_t sub_20E3D9088()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E3D90C4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E3D90D4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E3D90E4()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_20E3D90EC()
{
  sub_20E39CED0();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_20E3D912C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  __int128 v8;

  v4 = *a2;
  v5 = a2[1];
  v6 = *((_BYTE *)a2 + 16);
  sub_20E39CFB8();
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = a2[3];
  v7 = a2[8];
  v8 = *((_OWORD *)a2 + 3);
  *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
  *(_OWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 64) = v7;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_20E3D91C0(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *a2;
  v5 = a2[1];
  v6 = *((_BYTE *)a2 + 16);
  sub_20E39CFB8();
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  sub_20E39CED0();
  v7 = a2[4];
  *(_QWORD *)(a1 + 24) = a2[3];
  *(_QWORD *)(a1 + 32) = v7;
  swift_retain();
  swift_release();
  v8 = a2[6];
  *(_QWORD *)(a1 + 40) = a2[5];
  *(_QWORD *)(a1 + 48) = v8;
  swift_retain();
  swift_release();
  v9 = a2[8];
  *(_QWORD *)(a1 + 56) = a2[7];
  *(_QWORD *)(a1 + 64) = v9;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_20E3D9268(uint64_t a1, uint64_t a2)
{
  char v4;

  v4 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v4;
  sub_20E39CED0();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  return a1;
}

uint64_t sub_20E3D92DC()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t inited;

  v0 = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    sub_20E4A596C();
    sub_20E4A60E0();
    v0 = sub_20E4A35E4();
    if (v2 <= 0x3F)
    {
      inited = swift_initClassMetadata2();
      if (inited)
        return inited;
      else
        return 0;
    }
  }
  return v0;
}

ValueMetadata *type metadata accessor for _IntentViewDefaultContinuousWorking()
{
  return &type metadata for _IntentViewDefaultContinuousWorking;
}

ValueMetadata *type metadata accessor for _IntentViewDefaultContinuousFailed()
{
  return &type metadata for _IntentViewDefaultContinuousFailed;
}

void sub_20E3D93D8()
{
  swift_getAssociatedTypeWitness();
  type metadata accessor for _ResultView();
}

uint64_t sub_20E3D943C(uint64_t a1)
{
  return MEMORY[0x212BBDF90](&unk_20E4AF6E0, a1);
}

unint64_t sub_20E3D9464()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254A19548;
  if (!qword_254A19548)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19550);
    v2[0] = sub_20E39D010(&qword_254A19218, &qword_254A19208, (uint64_t)&protocol conformance descriptor for LoadingView<A>);
    v2[1] = sub_20E39D010(&qword_253ED2478, &qword_253ED2480, MEMORY[0x24BDF1028]);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254A19548);
  }
  return result;
}

unint64_t sub_20E3D9504()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254A19558;
  if (!qword_254A19558)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19400);
    v2[0] = sub_20E39D010(&qword_254A19560, qword_253ED1E68, (uint64_t)&protocol conformance descriptor for ContentUnavailableView<A, B, C>);
    v2[1] = sub_20E39D010(&qword_253ED05F0, &qword_253ED05F8, MEMORY[0x24BDF1028]);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254A19558);
  }
  return result;
}

uint64_t sub_20E3D95A0()
{
  uint64_t v0;
  uint64_t result;

  if (*(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 160)))
  {
    swift_retain();
    sub_20E4A5E64();
    return swift_release();
  }
  return result;
}

uint64_t sub_20E3D9600(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v17 = a1;
  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 112);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  swift_getAssociatedTypeWitness();
  sub_20E4A596C();
  v16 = sub_20E4A60E0();
  v5 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v7 = (char *)&KeyPath - v6;
  v8 = v2[11];
  v9 = v2[12];
  v26 = v4;
  v27 = v8;
  v10 = v2[13];
  v28 = v9;
  v29 = v10;
  v11 = v2[15];
  v12 = v2[16];
  v30 = v3;
  v31 = v11;
  v13 = v2[17];
  v32 = v12;
  v33 = v13;
  KeyPath = swift_getKeyPath();
  v18 = v4;
  v19 = v8;
  v20 = v9;
  v21 = v10;
  v22 = v3;
  v23 = v11;
  v24 = v12;
  v25 = v13;
  swift_getKeyPath();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v17, v16);
  swift_retain();
  return sub_20E4A35D8();
}

uint64_t sub_20E3D973C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_20E3D9760()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(sub_20E4A56C0() - 8) + 80);
  v3 = (v2 + 96) & ~v2;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0 + v3, v1);
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E3D9808(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;

  v4 = v1[4];
  v15 = v1[5];
  v5 = *(_QWORD *)(sub_20E4A56C0() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = v1[2];
  v9 = v1[3];
  v10 = (uint64_t)v1 + v6;
  v11 = *(_QWORD *)((char *)v1 + v7);
  v12 = *(_QWORD *)((char *)v1 + ((v7 + 15) & 0xFFFFFFFFFFFFF8));
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_20E3B4E08;
  return sub_20E3D750C(a1, v8, v9, v10, v11, v12, v4, v15);
}

uint64_t sub_20E3D9904@<X0>(BOOL *a1@<X8>)
{
  uint64_t v1;

  return sub_20E3D815C(*(void **)(v1 + 88), a1);
}

uint64_t sub_20E3D9938@<X0>(BOOL *a1@<X8>)
{
  uint64_t v1;

  return sub_20E3D7E98(*(_QWORD *)(v1 + 88), a1);
}

uint64_t objectdestroy_5Tm()
{
  sub_20E39CED0();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_20E3D99B0()
{
  sub_20E3D8BDC();
}

__n128 FlowBackActionImplementation.init<A>(following:)@<Q0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t (**a6)(uint64_t a1, uint64_t a2)@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  __n128 result;

  v12 = *a1;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a2;
  *(_QWORD *)(v13 + 24) = a3;
  *(_QWORD *)(v13 + 32) = a4;
  *(_QWORD *)(v13 + 40) = a5;
  *(_QWORD *)(v13 + 48) = v12;
  result = *(__n128 *)(a1 + 1);
  *(__n128 *)(v13 + 56) = result;
  *a6 = sub_20E3D9D00;
  a6[1] = (uint64_t (*)(uint64_t, uint64_t))v13;
  return result;
}

uint64_t sub_20E3D9A64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  if (sub_20E4A587C() == a1 && v13 == a2)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    v15 = type metadata accessor for FlowAuthority(255, a7, a8, a9);
    v16 = sub_20E4A4778();
    MEMORY[0x212BBBCE0](&v27, v16);
    sub_20E441280(v15);
    swift_release();
    sub_20E4980D4();
    goto LABEL_11;
  }
  v14 = sub_20E4A635C();
  swift_bridgeObjectRelease();
  if ((v14 & 1) != 0)
    goto LABEL_5;
  if (sub_20E4A5870() == a1 && v17 == a2)
  {
    swift_bridgeObjectRelease();
LABEL_10:
    v19 = type metadata accessor for FlowAuthority(255, a7, a8, a9);
    v20 = sub_20E4A4778();
    MEMORY[0x212BBBCE0](&v27, v20);
    sub_20E441280(v19);
    swift_release();
    sub_20E4982E0();
    goto LABEL_11;
  }
  v18 = sub_20E4A635C();
  swift_bridgeObjectRelease();
  if ((v18 & 1) != 0)
    goto LABEL_10;
  if (sub_20E4A5864() == a1 && v22 == a2)
  {
    swift_bridgeObjectRelease();
LABEL_18:
    v24 = type metadata accessor for FlowAuthority(255, a7, a8, a9);
    v25 = sub_20E4A4778();
    MEMORY[0x212BBBCE0](&v27, v25);
    v26 = sub_20E44128C(v24);
    swift_release();
    if (!v26)
      return 1;
    sub_20E44067C();
LABEL_11:
    swift_release();
    return 1;
  }
  v23 = sub_20E4A635C();
  swift_bridgeObjectRelease();
  result = 0;
  if ((v23 & 1) != 0)
    goto LABEL_18;
  return result;
}

uint64_t sub_20E3D9CCC()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E3D9D00(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_20E3D9A64(a1, a2, v2[6], v2[7], v2[8], v2[2], v2[3], v2[4], v2[5]) & 1;
}

uint64_t FlowBackActionImplementation.perform(_:asPartOf:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20E3D9E50(a1, a3);
}

uint64_t sub_20E3D9D3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  sub_20E4A5DF8();
  v4[6] = sub_20E4A5DEC();
  sub_20E4A5DBC();
  return swift_task_switch();
}

uint64_t sub_20E3D9DAC()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  unsigned int *v6;

  v1 = *(uint64_t (**)(uint64_t))(v0 + 24);
  v2 = *(_QWORD *)(v0 + 16);
  swift_release();
  v3 = sub_20E4A5888();
  v4 = v1(v3);
  swift_bridgeObjectRelease();
  v5 = sub_20E4A4CB8();
  v6 = (unsigned int *)MEMORY[0x24BE5CBF0];
  if ((v4 & 1) == 0)
    v6 = (unsigned int *)MEMORY[0x24BE5CBE0];
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(v2, *v6, v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20E3D9E48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20E3D9E50(a1, a3);
}

uint64_t sub_20E3D9E50(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v21;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A190F8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_20E4A5894();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = *v2;
  v12 = v2[1];
  (*(void (**)(char *, uint64_t, uint64_t, double))(v9 + 16))((char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8, v11);
  v14 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v15 = (char *)swift_allocObject();
  *((_QWORD *)v15 + 2) = *(_QWORD *)(a2 + 16);
  *((_QWORD *)v15 + 3) = v13;
  *((_QWORD *)v15 + 4) = v12;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v15[v14], (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = &unk_254A19600;
  *(_QWORD *)(v16 + 24) = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A19610);
  swift_retain();
  v17 = sub_20E4A59A8();
  v18 = sub_20E4A5E58();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v7, 1, 1, v18);
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = 0;
  v19[3] = 0;
  v19[4] = &unk_254A19608;
  v19[5] = v16;
  v19[6] = v17;
  swift_retain();
  sub_20E474E94((uint64_t)v7, (uint64_t)&unk_254A19618, (uint64_t)v19);
  swift_release();
  return v17;
}

uint64_t sub_20E3DA01C()
{
  return MEMORY[0x24BE5DFE0];
}

_QWORD *_s18_JetEngine_SwiftUI27_PlatformLoadingViewContentVwca_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for _PlatformLoadingViewContent(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t _s18_JetEngine_SwiftUI27_PlatformLoadingViewContentVwet_0(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_20E3DA0D8(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for FlowBackActionImplementation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FlowBackActionImplementation);
}

uint64_t sub_20E3DA120()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_20E4A5894();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_20E3DA194(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_20E4A5894() - 8) + 80);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = v1 + ((v4 + 40) & ~v4);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_20E3B4E08;
  return sub_20E3D9D3C(a1, v5, v6, v7);
}

uint64_t sub_20E3DA228()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E3DA24C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_20E3B4E08;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_254A19DE0 + dword_254A19DE0))(a1, v4);
}

uint64_t sub_20E3DA2BC()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E3DA2F0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_20E3B50B0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *, uint64_t, uint64_t))((char *)&dword_254A1BE70
                                                                                     + dword_254A1BE70))(a1, v4, v5, v6, v7, v8);
}

uint64_t View.impressionableClickLocation(impressionMetrics:position:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v15;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CC8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CC0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20E3A5E20(a1, (uint64_t)v10, &qword_253ED0CC8);
  sub_20E4A50F0();
  View.impressionableClickLocation(data:)((uint64_t)v13, a4, a5);
  return sub_20E39D1F8((uint64_t)v13, &qword_253ED0CC0);
}

uint64_t sub_20E3DA494()
{
  sub_20E3DC550();
  return sub_20E4A3C08();
}

uint64_t sub_20E3DA4D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  void (*v10)(char *, uint64_t, uint64_t, double);
  uint64_t v12;

  v2 = sub_20E4A5384();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v12 - v8;
  v10 = *(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16);
  v10((char *)&v12 - v8, a1, v2, v7);
  ((void (*)(char *, char *, uint64_t))v10)(v5, v9, v2);
  sub_20E3DC550();
  sub_20E4A3C14();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v9, v2);
}

uint64_t View.impressionableClickLocation(data:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  char *v16;
  uint64_t *v17;
  char *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v22 = a3;
  v21 = a2;
  v4 = sub_20E4A33B0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CC0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (int *)type metadata accessor for ClickLocationViewModifier();
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (uint64_t *)((char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v20 - v15;
  sub_20E3A5E20(a1, (uint64_t)v10, &qword_253ED0CC0);
  *v14 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
  swift_storeEnumTagMultiPayload();
  v17 = (uint64_t *)((char *)v14 + v11[5]);
  *v17 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A20);
  swift_storeEnumTagMultiPayload();
  sub_20E3A5E20((uint64_t)v10, (uint64_t)v14 + v11[6], &qword_253ED0CC0);
  sub_20E4A33A4();
  sub_20E39D1F8((uint64_t)v10, &qword_253ED0CC0);
  v18 = (char *)v14 + v11[7];
  *(_QWORD *)&v18[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C68) + 28)] = 0;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v18, v7, v4);
  sub_20E3DABFC((uint64_t)v14, (uint64_t)v16);
  MEMORY[0x212BBBA70](v16, v21, v11, v22);
  return sub_20E3DAC40((uint64_t)v16);
}

uint64_t type metadata accessor for ClickLocationViewModifier()
{
  uint64_t result;

  result = qword_253ED2430;
  if (!qword_253ED2430)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_20E3DA7F8()
{
  sub_20E3DC550();
  return sub_20E4A3C08();
}

uint64_t sub_20E3DA838@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t KeyPath;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;

  v3 = v2;
  v24 = a1;
  v25 = a2;
  v4 = type metadata accessor for ClickLocationViewModifier();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED2428);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A68);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C68);
  sub_20E4A464C();
  v14 = sub_20E4A33B0();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v9, 0, 1, v14);
  v15 = (uint64_t *)&v12[*(int *)(v10 + 36)];
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C20);
  sub_20E3A5E20((uint64_t)v9, (uint64_t)v15 + *(int *)(v16 + 28), &qword_253ED2428);
  *v15 = KeyPath;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0BD0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v12, v24, v17);
  sub_20E39D1F8((uint64_t)v9, &qword_253ED2428);
  sub_20E3DC2E4(v3, (uint64_t)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v19 = swift_allocObject();
  sub_20E3DABFC((uint64_t)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v19 + v18);
  v20 = swift_getKeyPath();
  v21 = v25;
  sub_20E3A5E20((uint64_t)v12, v25, &qword_253ED0A68);
  v22 = v21 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_253ED0AB8) + 36);
  *(_QWORD *)v22 = sub_20E3DC4C8;
  *(_QWORD *)(v22 + 8) = v19;
  *(_QWORD *)(v22 + 16) = v20;
  *(_QWORD *)(v22 + 24) = 0;
  *(_WORD *)(v22 + 32) = 0;
  return sub_20E39D1F8((uint64_t)v12, &qword_253ED0A68);
}

uint64_t sub_20E3DAA78()
{
  sub_20E3DC50C();
  return sub_20E4A3C08();
}

uint64_t sub_20E3DAAAC()
{
  sub_20E3DC50C();
  return sub_20E4A3C08();
}

uint64_t sub_20E3DAAE8()
{
  sub_20E3DC50C();
  return sub_20E4A3C08();
}

uint64_t sub_20E3DAB24(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED2428);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v9 - v6;
  sub_20E3A5E20(a1, (uint64_t)&v9 - v6, &qword_253ED2428);
  sub_20E3A5E20((uint64_t)v7, (uint64_t)v4, &qword_253ED2428);
  sub_20E3DC50C();
  sub_20E4A3C14();
  return sub_20E39D1F8((uint64_t)v7, &qword_253ED2428);
}

uint64_t sub_20E3DABFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ClickLocationViewModifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20E3DAC40(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ClickLocationViewModifier();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20E3DAC7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  type metadata accessor for ClickLocationViewModifier();
  v2 = sub_20E4A39D4();
  v4[0] = v1;
  v4[1] = sub_20E39F334(&qword_253ED07E8, (uint64_t (*)(uint64_t))type metadata accessor for ClickLocationViewModifier, (uint64_t)&unk_20E4A953C);
  return MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v2, v4);
}

uint64_t *sub_20E3DACFC(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_20E4A5384();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v9 = a3[5];
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_20E4A33B0();
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED2428);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v13 + 16))(v10, v11, v12);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
    }
    else
    {
      *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v15 = a3[6];
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    v18 = sub_20E4A5114();
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CC0);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
    v21 = a3[7];
    v22 = (char *)a1 + v21;
    v23 = (char *)a2 + v21;
    v24 = sub_20E4A33B0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C68);
    *(_QWORD *)&v22[*(int *)(v25 + 28)] = *(_QWORD *)&v23[*(int *)(v25 + 28)];
  }
  swift_retain();
  return a1;
}

uint64_t sub_20E3DAF74(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_20E4A5384();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  v5 = a1 + a2[5];
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_20E4A33B0();
    v7 = *(_QWORD *)(v6 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  v8 = a1 + a2[6];
  v9 = sub_20E4A5114();
  v10 = *(_QWORD *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  v11 = a1 + a2[7];
  v12 = sub_20E4A33B0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C68);
  return swift_release();
}

_QWORD *sub_20E3DB0D0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;

  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_20E4A5384();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v7 = a3[5];
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_20E4A33B0();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED2428);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
  }
  else
  {
    *v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v13 = a3[6];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = sub_20E4A5114();
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CC0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  v19 = a3[7];
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = sub_20E4A33B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C68);
  *(_QWORD *)&v20[*(int *)(v23 + 28)] = *(_QWORD *)&v21[*(int *)(v23 + 28)];
  swift_retain();
  return a1;
}

_QWORD *sub_20E3DB320(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t, uint64_t);
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;

  if (a1 != a2)
  {
    sub_20E39D1F8((uint64_t)a1, &qword_253ED0A28);
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_20E4A5384();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v7 = a3[5];
    v8 = (_QWORD *)((char *)a1 + v7);
    v9 = (_QWORD *)((char *)a2 + v7);
    sub_20E39D1F8((uint64_t)a1 + v7, &qword_253ED0A20);
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_20E4A33B0();
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED2428);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v11 + 16))(v8, v9, v10);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
    }
    else
    {
      *v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v13 = a3[6];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = sub_20E4A5114();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
  v19 = v18(v14, 1, v16);
  v20 = v18(v15, 1, v16);
  if (!v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 24))(v14, v15, v16);
      goto LABEL_17;
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v14, v16);
    goto LABEL_16;
  }
  if (v20)
  {
LABEL_16:
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CC0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_17;
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
LABEL_17:
  v22 = a3[7];
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = sub_20E4A33B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 24))(v23, v24, v25);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C68);
  *(_QWORD *)&v23[*(int *)(v26 + 28)] = *(_QWORD *)&v24[*(int *)(v26 + 28)];
  swift_retain();
  swift_release();
  return a1;
}

char *sub_20E3DB5F0(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_20E4A5384();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12 = sub_20E4A33B0();
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED2428);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v9, v10, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  v15 = a3[6];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = sub_20E4A5114();
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CC0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  v21 = a3[7];
  v22 = &a1[v21];
  v23 = &a2[v21];
  v24 = sub_20E4A33B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C68);
  *(_QWORD *)&v22[*(int *)(v25 + 28)] = *(_QWORD *)&v23[*(int *)(v25 + 28)];
  return a1;
}

char *sub_20E3DB834(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;

  if (a1 != a2)
  {
    sub_20E39D1F8((uint64_t)a1, &qword_253ED0A28);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_20E4A5384();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    v8 = a3[5];
    v9 = &a1[v8];
    v10 = &a2[v8];
    sub_20E39D1F8((uint64_t)&a1[v8], &qword_253ED0A20);
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_20E4A33B0();
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12))
      {
        v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED2428);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v9, v10, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
  }
  v15 = a3[6];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = sub_20E4A5114();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  v21 = v20(v16, 1, v18);
  v22 = v20(v17, 1, v18);
  if (!v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 40))(v16, v17, v18);
      goto LABEL_17;
    }
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
    goto LABEL_16;
  }
  if (v22)
  {
LABEL_16:
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CC0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_17;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
LABEL_17:
  v24 = a3[7];
  v25 = &a1[v24];
  v26 = &a2[v24];
  v27 = sub_20E4A33B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 40))(v25, v26, v27);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C68);
  *(_QWORD *)&v25[*(int *)(v28 + 28)] = *(_QWORD *)&v26[*(int *)(v28 + 28)];
  swift_release();
  return a1;
}

uint64_t sub_20E3DBAF4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_20E3DBB00(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A182F8);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18300);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CC0);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C68);
        v12 = *(_QWORD *)(v8 - 8);
        v13 = a3[7];
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_20E3DBBCC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_20E3DBBD8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A182F8);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18300);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CC0);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C68);
        v14 = *(_QWORD *)(v10 - 8);
        v15 = a4[7];
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_20E3DBCAC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_20E3A4C54(319, (unint64_t *)&qword_253ED2448, (uint64_t (*)(uint64_t))MEMORY[0x24BE5D6D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (v0 <= 0x3F)
  {
    sub_20E3DBDB0();
    if (v1 <= 0x3F)
    {
      sub_20E3A4C54(319, &qword_253ED2458, (uint64_t (*)(uint64_t))MEMORY[0x24BE5D280], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      if (v2 <= 0x3F)
      {
        sub_20E3A4C54(319, &qword_253ED2450, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF42C0]);
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

void sub_20E3DBDB0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_253ED2440)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253ED2428);
    v0 = sub_20E4A36BC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_253ED2440);
  }
}

uint64_t sub_20E3DBE08()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E3DBE18(int a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  char *v35;
  char *v36;
  char *v37;
  char *v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t);
  uint64_t v53;

  v49 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED2428);
  MEMORY[0x24BDAC7A8](v3);
  v44 = (uint64_t)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_20E4A33B0();
  v45 = *(_QWORD *)(v5 - 8);
  v46 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v48 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v42 = (char *)&v40 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CF8);
  v51 = *(_QWORD *)(v9 - 8);
  v52 = (void (*)(char *, uint64_t))v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_20E4A5384();
  v12 = *(_QWORD *)(v50 - 8);
  MEMORY[0x24BDAC7A8](v50);
  v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CC0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_20E4A5114();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v41 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v47 = (char *)&v40 - v22;
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)&v40 - v24;
  v43 = type metadata accessor for ClickLocationViewModifier();
  sub_20E3A5E20(a2 + *(int *)(v43 + 24), (uint64_t)v17, &qword_253ED0CC0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
    return sub_20E39D1F8((uint64_t)v17, &qword_253ED0CC0);
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v25, v17, v18);
  sub_20E45C27C((uint64_t)v14);
  sub_20E4A533C();
  v27 = sub_20E4A5300();
  MEMORY[0x212BBC94C](&v53, v11, v27);
  (*(void (**)(char *, _QWORD))(v51 + 8))(v11, v52);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v50);
  if (!v53)
    return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v25, v18);
  if ((v49 & 1) == 0)
  {
    sub_20E4A52E8();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v25, v18);
  }
  v28 = v44;
  sub_20E45C2A8(v44);
  v29 = v45;
  v30 = v46;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v28, 1, v46) == 1)
  {
    sub_20E39D1F8(v28, &qword_253ED2428);
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C68);
    v31 = v48;
    sub_20E4A464C();
    sub_20E4A3398();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v30);
    v32 = v47;
    sub_20E4A50E4();
    swift_bridgeObjectRelease();
    sub_20E4A52DC();
    swift_release();
    v33 = *(void (**)(char *, uint64_t))(v19 + 8);
    v33(v32, v18);
    return ((uint64_t (*)(char *, uint64_t))v33)(v25, v18);
  }
  else
  {
    v34 = v28;
    v35 = v42;
    (*(void (**)(char *, uint64_t, uint64_t))(v29 + 32))(v42, v34, v30);
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C68);
    v36 = v48;
    sub_20E4A464C();
    sub_20E4A3398();
    v52 = *(void (**)(char *, uint64_t))(v29 + 8);
    v52(v36, v30);
    v37 = v41;
    sub_20E4A50E4();
    swift_bridgeObjectRelease();
    sub_20E4A3398();
    v38 = v47;
    sub_20E4A50FC();
    swift_bridgeObjectRelease();
    v39 = *(void (**)(char *, uint64_t))(v19 + 8);
    v39(v37, v18);
    sub_20E4A52DC();
    swift_release();
    v39(v38, v18);
    v52(v35, v30);
    return ((uint64_t (*)(char *, uint64_t))v39)(v25, v18);
  }
}

uint64_t sub_20E3DC2E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ClickLocationViewModifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20E3DC328()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = (int *)type metadata accessor for ClickLocationViewModifier();
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = v0 + v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_20E4A5384();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v0 + v3, v5);
  }
  else
  {
    swift_release();
  }
  v6 = v4 + v1[5];
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_20E4A33B0();
    v8 = *(_QWORD *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  v9 = v4 + v1[6];
  v10 = sub_20E4A5114();
  v11 = *(_QWORD *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  v12 = v4 + v1[7];
  v13 = sub_20E4A33B0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C68);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E3DC4C8(int a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ClickLocationViewModifier() - 8) + 80);
  return sub_20E3DBE18(a1, v1 + ((v3 + 16) & ~v3));
}

unint64_t sub_20E3DC50C()
{
  unint64_t result;

  result = qword_253ED0900[0];
  if (!qword_253ED0900[0])
  {
    result = MEMORY[0x212BBDF90](&unk_20E4A95E4, &type metadata for ClickLocationUniqueIDEnvironmentKey);
    atomic_store(result, qword_253ED0900);
  }
  return result;
}

unint64_t sub_20E3DC550()
{
  unint64_t result;

  result = qword_253ED0690;
  if (!qword_253ED0690)
  {
    result = MEMORY[0x212BBDF90](&unk_20E4ADA04, &type metadata for MetricsContextKey);
    atomic_store(result, (unint64_t *)&qword_253ED0690);
  }
  return result;
}

ValueMetadata *type metadata accessor for ClickLocationUniqueIDEnvironmentKey()
{
  return &type metadata for ClickLocationUniqueIDEnvironmentKey;
}

unint64_t sub_20E3DC5A8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_253ED0AB0;
  if (!qword_253ED0AB0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253ED0AB8);
    v2[0] = sub_20E3DC614();
    v2[1] = sub_20E3A5070();
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_253ED0AB0);
  }
  return result;
}

unint64_t sub_20E3DC614()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_253ED0A60;
  if (!qword_253ED0A60)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253ED0A68);
    v2[0] = sub_20E39D010(&qword_253ED0BC8, &qword_253ED0BD0, MEMORY[0x24BDEFB78]);
    v2[1] = sub_20E39D010(&qword_253ED0C18, &qword_253ED0C20, MEMORY[0x24BDF1028]);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_253ED0A60);
  }
  return result;
}

uint64_t sub_20E3DC6B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v6;

  sub_20E4A3DE8();
  MEMORY[0x24BDAC7A8]();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))((char *)&v6 - v4, a1, a2);
  swift_storeEnumTagMultiPayload();
  return sub_20E4A3DF4();
}

uint64_t Component.model(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return View.dataObject<A>(_:)(a1, a2, AssociatedTypeWitness);
}

uint64_t Component.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  double v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v7 = MEMORY[0x24BDAC7A8](a1);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v10 + 16))(v9, v3, a1, v7);
  return _ComponentBody.init(_:)((uint64_t)v9, a1, a2, v11, a3);
}

uint64_t _ComponentBody.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t *v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v8 = (uint64_t *)(a5 + *(int *)(type metadata accessor for _ComponentBody(0, a2, a3, a4) + 36));
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *v8 = sub_20E47585C(AssociatedTypeWitness, v10, v11, v12);
  v8[1] = v13;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a5, a1, a2);
}

uint64_t type metadata accessor for _ComponentBody(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _ComponentBody);
}

uint64_t sub_20E3DC8FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;

  v4 = *(_QWORD *)(v2 + *(int *)(a1 + 36));
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return sub_20E475B90(v4, AssociatedTypeWitness, v6, a2);
}

uint64_t _ComponentBody.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedConformanceWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t OpaqueTypeConformance2;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (**v41)(char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t, uint64_t);
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *boxed_opaque_existential_1Tm;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  void (*v70)(uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  void (*v80)(uint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v86;
  char *v87;
  void (**v88)(char *, uint64_t);
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  _QWORD *v122;
  _QWORD v123[2];
  __int128 v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  _QWORD *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;

  v118 = a1;
  v116 = a2;
  v3 = *(_QWORD *)(a1 + 16);
  v2 = *(_QWORD *)(a1 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v88 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v87 = (char *)&v86 - v6;
  v7 = type metadata accessor for ComponentMenuContent();
  v121 = v7;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v9 = sub_20E39F334(&qword_254A19620, (uint64_t (*)(uint64_t))type metadata accessor for ComponentMenuContent, (uint64_t)&unk_20E4ACEC0);
  v128 = (_QWORD *)AssociatedTypeWitness;
  v129 = v7;
  v130 = AssociatedConformanceWitness;
  v131 = v9;
  v120 = MEMORY[0x212BBDF30](0, &v128, MEMORY[0x24BDF2338], 0);
  v86 = *(_QWORD *)(v120 - 8);
  MEMORY[0x24BDAC7A8](v120);
  v90 = (uint64_t)&v86 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v89 = (uint64_t *)((char *)&v86 - v12);
  v13 = swift_getAssociatedTypeWitness();
  v105 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v104 = (char *)&v86 - v14;
  v98 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v92 = v16;
  v96 = (char *)&v86 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19628);
  MEMORY[0x24BDAC7A8](v17);
  v93 = (char *)&v86 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = (_QWORD *)AssociatedTypeWitness;
  v115 = AssociatedConformanceWitness;
  v20 = (_QWORD *)type metadata accessor for ActionButton(0, AssociatedTypeWitness, AssociatedConformanceWitness, v19);
  v101 = *(v20 - 1);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v100 = (uint64_t)&v86 - v22;
  v23 = MEMORY[0x212BBDF90](&protocol conformance descriptor for ActionButton<A>, v20, v21);
  v24 = swift_getAssociatedConformanceWitness();
  v128 = v20;
  v129 = v13;
  v130 = v23;
  v131 = v24;
  v25 = MEMORY[0x212BBDF30](0, &v128, MEMORY[0x24BDF22B8], 0);
  v99 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v97 = (char *)&v86 - v26;
  v128 = v20;
  v129 = v13;
  v106 = v13;
  v94 = v23;
  v130 = v23;
  v131 = v24;
  v91 = v24;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v113 = (_QWORD *)v25;
  v128 = (_QWORD *)v25;
  v129 = v121;
  v112 = OpaqueTypeConformance2;
  v130 = OpaqueTypeConformance2;
  v131 = v9;
  v114 = v9;
  v28 = MEMORY[0x212BBDF30](0, &v128, MEMORY[0x24BDF2338], 0);
  v95 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v103 = (uint64_t)&v86 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v30);
  v102 = (uint64_t *)((char *)&v86 - v31);
  v32 = swift_getAssociatedTypeWitness();
  v33 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v107 = (uint64_t)&v86 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v35);
  v37 = (char *)&v86 - v36;
  v108 = v28;
  v111 = sub_20E4A3E00();
  v110 = *(_QWORD *)(v111 - 8);
  MEMORY[0x24BDAC7A8](v111);
  v117 = (uint64_t)&v86 - v38;
  sub_20E3DC8FC(v118, (uint64_t)v37);
  v39 = v2;
  v109 = v3;
  v40 = swift_getAssociatedConformanceWitness();
  sub_20E4A4DF0();
  v41 = *(void (***)(char *, uint64_t))(v33 + 8);
  ((void (*)(char *, uint64_t))v41)(v37, v32);
  if (v126)
  {
    sub_20E3B1AB4(&v124, (uint64_t)&v128);
    v42 = sub_20E4A3620();
    v43 = (uint64_t)v93;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v93, 1, 1, v42);
    sub_20E3C39FC((uint64_t)&v128, (uint64_t)&v124);
    v44 = v98;
    v45 = *(void (**)(char *, uint64_t, uint64_t))(v98 + 16);
    v89 = v20;
    v46 = v96;
    v90 = v40;
    v47 = v118;
    v45(v96, v119, v118);
    v48 = *(unsigned __int8 *)(v44 + 80);
    v88 = v41;
    v49 = (v48 + 32) & ~v48;
    v50 = swift_allocObject();
    v51 = v109;
    *(_QWORD *)(v50 + 16) = v109;
    *(_QWORD *)(v50 + 24) = v39;
    (*(void (**)(uint64_t, char *, uint64_t))(v44 + 32))(v50 + v49, v46, v47);
    v52 = v100;
    v53 = v115;
    ActionButton.init(role:action:label:)(v43, (uint64_t)&v124, (uint64_t)sub_20E3DD6C4, v50, (uint64_t)v122, v115, v100);
    v54 = v107;
    sub_20E3DC8FC(v47, v107);
    v55 = v104;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 72))(v54, v51, v39);
    ((void (*)(uint64_t, uint64_t))v88)(v54, v32);
    v56 = v97;
    v57 = v89;
    v58 = v106;
    sub_20E4A422C();
    (*(void (**)(char *, uint64_t))(v105 + 8))(v55, v58);
    v59 = v52;
    v60 = v53;
    (*(void (**)(uint64_t, _QWORD *))(v101 + 8))(v59, v57);
    v126 = v32;
    v127 = v90;
    boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)&v124);
    sub_20E3DC8FC(v47, (uint64_t)boxed_opaque_existential_1Tm);
    v62 = v103;
    v63 = (uint64_t)v113;
    v64 = v112;
    sub_20E3DD4B8((uint64_t)&v124, (uint64_t)v113, v112, v103);
    (*(void (**)(char *, uint64_t))(v99 + 8))(v56, v63);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v124);
    v65 = v121;
    *(_QWORD *)&v124 = v63;
    *((_QWORD *)&v124 + 1) = v121;
    v66 = v114;
    v125 = v64;
    v126 = v114;
    v67 = swift_getOpaqueTypeConformance2();
    v68 = v102;
    v69 = v108;
    sub_20E39D614(v102, v62, v108, v67);
    v70 = *(void (**)(uint64_t, uint64_t))(v95 + 8);
    v70(v62, v69);
    sub_20E39D618((uint64_t)v68, v69, v62);
    *(_QWORD *)&v124 = v122;
    *((_QWORD *)&v124 + 1) = v65;
    v125 = v60;
    v126 = v66;
    swift_getOpaqueTypeConformance2();
    sub_20E3DC6B0(v62, v69);
    v70(v62, v69);
    v70((uint64_t)v68, v69);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v128);
  }
  else
  {
    sub_20E3DD3A8((uint64_t)&v124);
    v71 = v107;
    v72 = v118;
    sub_20E3DC8FC(v118, v107);
    v73 = v87;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 64))(v71, v109, v39);
    ((void (*)(uint64_t, uint64_t))v41)(v71, v32);
    v131 = v32;
    v132 = v40;
    v74 = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)&v128);
    sub_20E3DC8FC(v72, (uint64_t)v74);
    v75 = v90;
    v76 = (uint64_t)v122;
    v60 = v115;
    sub_20E3DD4B8((uint64_t)&v128, (uint64_t)v122, v115, v90);
    v88[1](v73, v76);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v128);
    v128 = (_QWORD *)v76;
    v65 = v121;
    v129 = v121;
    v130 = v60;
    v66 = v114;
    v131 = v114;
    v77 = swift_getOpaqueTypeConformance2();
    v78 = v89;
    v79 = v120;
    sub_20E39D614(v89, v75, v120, v77);
    v80 = *(void (**)(uint64_t, uint64_t))(v86 + 8);
    v80(v75, v79);
    sub_20E39D618((uint64_t)v78, v79, v75);
    v63 = (uint64_t)v113;
    v128 = v113;
    v129 = v65;
    v64 = v112;
    v130 = v112;
    v131 = v66;
    swift_getOpaqueTypeConformance2();
    sub_20E39CBE0(v75, v108, v79);
    v80(v75, v79);
    v80((uint64_t)v78, v79);
  }
  v128 = (_QWORD *)v63;
  v129 = v65;
  v130 = v64;
  v131 = v66;
  v81 = swift_getOpaqueTypeConformance2();
  v128 = v122;
  v129 = v65;
  v130 = v60;
  v131 = v66;
  v82 = swift_getOpaqueTypeConformance2();
  v123[0] = v81;
  v123[1] = v82;
  v83 = v111;
  MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v111, v123);
  v84 = v117;
  sub_20E39D618(v117, v83, v116);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v110 + 8))(v84, v83);
}

uint64_t sub_20E3DD3A8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19630);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20E3DD3E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v8 = (char *)&v12 - v7;
  v10 = type metadata accessor for _ComponentBody(0, a2, a3, v9);
  sub_20E3DC8FC(v10, (uint64_t)v8);
  (*(void (**)(char *, uint64_t, uint64_t))(a3 + 64))(v8, a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, AssociatedTypeWitness);
}

uint64_t sub_20E3DD4B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t OpaqueTypeConformance2;
  void (*v18)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v21 = a4;
  v7 = type metadata accessor for ComponentMenuContent();
  v8 = sub_20E39F334(&qword_254A19620, (uint64_t (*)(uint64_t))type metadata accessor for ComponentMenuContent, (uint64_t)&unk_20E4ACEC0);
  v23 = a2;
  v24 = v7;
  v25 = a3;
  v26 = v8;
  v9 = MEMORY[0x212BBDF30](0, &v23, MEMORY[0x24BDF2338], 0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (uint64_t *)((char *)&v20 - v14);
  v22 = a1;
  v16 = swift_checkMetadataState();
  sub_20E4A4244();
  v23 = a2;
  v24 = v16;
  v25 = a3;
  v26 = v8;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  sub_20E39D614(v15, v12, v9, OpaqueTypeConformance2);
  v18 = *(void (**)(char *, uint64_t))(v10 + 8);
  v18(v12, v9);
  sub_20E39D618((uint64_t)v15, v9, v21);
  return ((uint64_t (*)(_QWORD *, uint64_t))v18)(v15, v9);
}

uint64_t sub_20E3DD63C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for _ComponentBody(0, v5, *(_QWORD *)(v4 + 24), a4) - 8)
                          + 80);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4 + ((v6 + 32) & ~v6), v5);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E3DD6C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v4 + 24);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for _ComponentBody(0, v5, v6, a4) - 8) + 80);
  return sub_20E3DD3E8(v4 + ((v7 + 32) & ~v7), v5, v6);
}

uint64_t sub_20E3DD720@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  __int128 v12[2];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A196D8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20E4A4DD8();
  sub_20E3C39FC((uint64_t)a1, (uint64_t)v12);
  v7 = (int *)type metadata accessor for ComponentMenuContent();
  v8 = a2 + v7[6];
  *(_QWORD *)v8 = swift_getKeyPath();
  *(_BYTE *)(v8 + 40) = 0;
  v9 = a2 + v7[7];
  *(_QWORD *)v9 = swift_getKeyPath();
  *(_BYTE *)(v9 + 8) = 0;
  sub_20E3DE460((uint64_t)v6, a2);
  return sub_20E3B1AB4(v12, a2 + v7[5]);
}

uint64_t sub_20E3DD820()
{
  return sub_20E4A3F38();
}

uint64_t _ComponentBodyButtonStyle.makeBody(configuration:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;

  v2 = sub_20E4A404C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19638);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16))(v5, a1, v2, v8);
  sub_20E4A46A0();
  sub_20E3DD94C();
  sub_20E3DD998();
  sub_20E4A4238();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

unint64_t sub_20E3DD94C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254A19640;
  if (!qword_254A19640)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19638);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDF43B0], v1);
    atomic_store(result, (unint64_t *)&qword_254A19640);
  }
  return result;
}

unint64_t sub_20E3DD998()
{
  unint64_t result;

  result = qword_254A19648;
  if (!qword_254A19648)
  {
    result = MEMORY[0x212BBDF90](&unk_20E4A975C, &type metadata for _ComponentBodyButtonStyle.BareButtonStyle);
    atomic_store(result, (unint64_t *)&qword_254A19648);
  }
  return result;
}

uint64_t sub_20E3DD9DC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E3DDA10()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E3DDA20(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;

  v2 = sub_20E4A404C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19638);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16))(v5, a1, v2, v8);
  sub_20E4A46A0();
  sub_20E3DD94C();
  sub_20E3DD998();
  sub_20E4A4238();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

unint64_t sub_20E3DDB30()
{
  unint64_t result;

  result = qword_254A19650[0];
  if (!qword_254A19650[0])
  {
    result = MEMORY[0x212BBDF90](&protocol conformance descriptor for _ComponentBodyButtonStyle, &type metadata for _ComponentBodyButtonStyle);
    atomic_store(result, qword_254A19650);
  }
  return result;
}

uint64_t dispatch thunk of Component.content(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of Component._buttonStyle(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t sub_20E3DDB84()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_20E3DDBF8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = (_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v11 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v10 = *v11;
    v10[1] = v11[1];
  }
  swift_retain();
  return v4;
}

uint64_t sub_20E3DDCB0(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
  return swift_release();
}

uint64_t sub_20E3DDCF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  swift_retain();
  return a1;
}

uint64_t sub_20E3DDD58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  swift_retain();
  swift_release();
  v7[1] = v8[1];
  return a1;
}

uint64_t sub_20E3DDDCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  swift_release();
  v7[1] = v8[1];
  return a1;
}

uint64_t sub_20E3DDE38(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;
  int v13;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFE)
    v6 = 2147483646;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFE)
    {
      v12 = *(_QWORD *)((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      v13 = v12 - 1;
      if (v13 < 0)
        v13 = -1;
      return (v13 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_20E3DDEB4 + 4 * byte_20E4A9620[v10]))();
  }
}

void sub_20E3DDF44(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFEu)
    v6 = 2147483646;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_20E3DE038()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x20E3DE0B8);
}

void sub_20E3DE040(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x20E3DE048);
  JUMPOUT(0x20E3DE0B8);
}

void sub_20E3DE08C()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x20E3DE0B8);
}

void sub_20E3DE094()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x20E3DE0B8);
}

uint64_t sub_20E3DE09C(uint64_t a1, unsigned int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v5 + v6) = 0;
  if (!a2)
    JUMPOUT(0x20E3DE0B8);
  if (a3 < 0x7FFFFFFE)
  {
    if (a2 <= 0x7FFFFFFE)
      JUMPOUT(0x20E3DE0B4);
    JUMPOUT(0x20E3DE0A8);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v5);
}

ValueMetadata *type metadata accessor for _ComponentBodyButtonStyle()
{
  return &type metadata for _ComponentBodyButtonStyle;
}

void sub_20E3DE0E0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for _ComponentBody(255, *a1, a1[1], a4);
  JUMPOUT(0x212BBDF90);
}

uint64_t sub_20E3DE108(uint64_t a1)
{
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[2];

  v1 = *(_QWORD *)(a1 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  type metadata accessor for DataObjectBox(255, AssociatedTypeWitness, v3, v4);
  sub_20E4A60E0();
  v5 = sub_20E4A3FF8();
  v6 = sub_20E4A39D4();
  v8[0] = *(_QWORD *)(v1 + 8);
  v8[1] = MEMORY[0x212BBDF90](MEMORY[0x24BDF1028], v5);
  return MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v6, v8);
}

uint64_t sub_20E3DE1BC()
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t OpaqueTypeConformance2;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[2];
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v3 = type metadata accessor for ActionButton(255, AssociatedTypeWitness, AssociatedConformanceWitness, v2);
  v4 = swift_getAssociatedTypeWitness();
  v5 = MEMORY[0x212BBDF90](&protocol conformance descriptor for ActionButton<A>, v3);
  v6 = swift_getAssociatedConformanceWitness();
  v16 = v3;
  v17 = v4;
  v18 = v5;
  v19 = v6;
  v7 = MEMORY[0x212BBDF30](255, &v16, MEMORY[0x24BDF22B8], 0);
  v8 = type metadata accessor for ComponentMenuContent();
  v16 = v3;
  v17 = v4;
  v18 = v5;
  v19 = v6;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v10 = sub_20E39F334(&qword_254A19620, (uint64_t (*)(uint64_t))type metadata accessor for ComponentMenuContent, (uint64_t)&unk_20E4ACEC0);
  v16 = v7;
  v17 = v8;
  v18 = OpaqueTypeConformance2;
  v19 = v10;
  v11 = MEMORY[0x24BDF2338];
  MEMORY[0x212BBDF30](255, &v16, MEMORY[0x24BDF2338], 0);
  v16 = AssociatedTypeWitness;
  v17 = v8;
  v18 = AssociatedConformanceWitness;
  v19 = v10;
  MEMORY[0x212BBDF30](255, &v16, v11, 0);
  v12 = sub_20E4A3E00();
  v16 = v7;
  v17 = v8;
  v18 = OpaqueTypeConformance2;
  v19 = v10;
  v13 = swift_getOpaqueTypeConformance2();
  v16 = AssociatedTypeWitness;
  v17 = v8;
  v18 = AssociatedConformanceWitness;
  v19 = v10;
  v15[0] = v13;
  v15[1] = swift_getOpaqueTypeConformance2();
  return MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v12, v15);
}

uint64_t sub_20E3DE3C8()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19638);
  sub_20E3DD94C();
  sub_20E3DD998();
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for _ComponentBodyButtonStyle.BareButtonStyle()
{
  return &type metadata for _ComponentBodyButtonStyle.BareButtonStyle;
}

uint64_t sub_20E3DE438()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E3DE448@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_20E3DD720(*(_QWORD **)(v1 + 16), a1);
}

uint64_t sub_20E3DE460(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A196D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20E3DE4A8()
{
  return sub_20E39F334(&qword_254A196E0, MEMORY[0x24BDF0440], MEMORY[0x24BDF0438]);
}

void Models.AlertAction.init(contentUnavailableError:retry:)(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t inited;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char v47;
  void *v48;
  id v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  char *v71;
  uint64_t v72;
  __int128 v73;
  __int128 v74;
  uint64_t v75;
  uint64_t v76;

  v69 = a3;
  v60 = a2;
  v68 = a4;
  v5 = sub_20E4A4C70();
  MEMORY[0x24BDAC7A8](v5);
  v67 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A196E8);
  MEMORY[0x24BDAC7A8](v7);
  v66 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(qword_254A196F0);
  MEMORY[0x24BDAC7A8](v9);
  v64 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_20E4A4CA0();
  MEMORY[0x24BDAC7A8](v11);
  v65 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = sub_20E4A57E0();
  v57 = *(_QWORD *)(v72 - 8);
  MEMORY[0x24BDAC7A8](v72);
  v71 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_20E4A4A90();
  MEMORY[0x24BDAC7A8](v14);
  v55 = sub_20E4A5A8C();
  v56 = *(_QWORD *)(v55 - 8);
  MEMORY[0x24BDAC7A8](v55);
  v54 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_20E4A3BFC();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ContentUnavailableTextLogBuilder();
  inited = swift_initStackObject();
  *(_WORD *)(inited + 24) = 514;
  *(_QWORD *)(inited + 16) = a1;
  v21 = a1;
  v22 = a1;
  v23 = sub_20E453138();
  v25 = v24;
  v27 = v26 & 1;

  sub_20E4A3BF0();
  v62 = sub_20E4A419C();
  v61 = v28;
  sub_20E39D0D8(v23, v25, v27);
  swift_bridgeObjectRelease();
  v29 = *(void (**)(char *, uint64_t))(v17 + 8);
  v29(v19, v16);
  v30 = a1;
  swift_retain();
  v70 = a1;
  v31 = sub_20E448614(a1, inited);
  v33 = v32;
  LOBYTE(v25) = v34 & 1;
  sub_20E4A3BF0();
  v59 = sub_20E4A419C();
  v58 = v35;
  sub_20E39D0D8(v31, v33, v25);
  swift_bridgeObjectRelease();
  v29(v19, v16);
  v36 = v54;
  sub_20E4A5A2C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0D58);
  sub_20E4A4ACC();
  v37 = swift_allocObject();
  v53 = xmmword_20E4A72D0;
  *(_OWORD *)(v37 + 16) = xmmword_20E4A72D0;
  sub_20E4A4A84();
  sub_20E4A4A78();
  v63 = inited;
  v38 = sub_20E44EEF8();
  *((_QWORD *)&v74 + 1) = MEMORY[0x24BEE0D00];
  *(_QWORD *)&v73 = v38;
  *((_QWORD *)&v73 + 1) = v39;
  sub_20E4A4A54();
  sub_20E39D1F8((uint64_t)&v73, &qword_253ED2A38);
  sub_20E4A4A78();
  sub_20E4A4A9C();
  v40 = v55;
  sub_20E4A5744();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v36, v40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A18A38);
  v41 = v57;
  v42 = swift_allocObject();
  *(_OWORD *)(v42 + 16) = v53;
  if (qword_253ED2A20 != -1)
    swift_once();
  sub_20E4A32A8();
  v75 = 0;
  v73 = 0u;
  v74 = 0u;
  sub_20E4A57BC();
  v76 = v42;
  v43 = MEMORY[0x24BE5CC10];
  v44 = v60;
  v45 = (uint64_t)v64;
  if (v60)
  {
    swift_retain();
    sub_20E4A32A8();
    sub_20E4A4C94();
    *((_QWORD *)&v74 + 1) = sub_20E4A4CD0();
    v75 = v43;
    __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)&v73);
    swift_retain();
    sub_20E4A4CC4();
    v46 = v71;
    sub_20E4A57BC();
    (*(void (**)(uint64_t, char *, uint64_t))(v41 + 32))(v45, v46, v72);
    sub_20E3DEDB4(0, 0, v45);
    sub_20E3CF5C0(v44);
  }
  v47 = sub_20E4A56FC();
  v48 = v70;
  if ((v47 & 1) != 0)
  {
    sub_20E4A32A8();
    sub_20E4A4C94();
    *(_QWORD *)(swift_allocObject() + 16) = v48;
    *((_QWORD *)&v74 + 1) = sub_20E4A4CD0();
    v75 = v43;
    __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)&v73);
    v49 = v48;
    sub_20E4A4CC4();
    v50 = v71;
    sub_20E4A57BC();
    (*(void (**)(uint64_t, char *, uint64_t))(v41 + 32))(v45, v50, v72);
    sub_20E3DEDB4(0, 0, v45);
  }
  sub_20E4A4C94();
  v51 = sub_20E4A5804();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v66, 1, 1, v51);
  sub_20E4A4C64();
  sub_20E4A578C();
  sub_20E3CF5C0(v44);

  v52 = v63;
  swift_setDeallocating();

}

void sub_20E3DECF4()
{
  id v0;
  void *v1;
  id v2;
  void *v3;

  v0 = objc_msgSend((id)objc_opt_self(), sel_generalPasteboard);
  v1 = (void *)sub_20E4A32D8();
  v2 = (id)AMSLogableError();

  sub_20E4A5C3C();
  v3 = (void *)sub_20E4A5C18();
  objc_msgSend(v0, sel_setString_, v3);

  swift_bridgeObjectRelease();
}

uint64_t sub_20E3DEDB4(uint64_t a1, int64_t a2, uint64_t a3)
{
  unint64_t *v3;
  unint64_t v5;
  int64_t v6;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  int isUniquelyReferenced_nonNull_native;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t result;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_29;
  }
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (v6 < a2)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v3 = v5;
  if (!isUniquelyReferenced_nonNull_native || v10 > *(_QWORD *)(v5 + 24) >> 1)
  {
    if (v6 <= v10)
      v13 = v6 + v9;
    else
      v13 = v6;
    v5 = sub_20E3AD390(isUniquelyReferenced_nonNull_native, v13, 1, v5);
    *v3 = v5;
  }
  v14 = sub_20E4A57E0();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = v5 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  v17 = *(_QWORD *)(v15 + 72);
  v18 = v16 + v17 * a1;
  swift_arrayDestroy();
  if (!v9)
    goto LABEL_25;
  v19 = *(_QWORD *)(v5 + 16);
  v20 = v19 - a2;
  if (__OFSUB__(v19, a2))
    goto LABEL_33;
  if (v20 < 0)
  {
LABEL_35:
    result = sub_20E4A62D8();
    __break(1u);
    return result;
  }
  v21 = v18 + v17;
  v22 = v16 + v17 * a2;
  if (v18 + v17 < v22 || v21 >= v22 + v20 * v17)
  {
    swift_arrayInitWithTakeFrontToBack();
  }
  else if (v21 != v22)
  {
    swift_arrayInitWithTakeBackToFront();
  }
  v24 = *(_QWORD *)(v5 + 16);
  v25 = __OFADD__(v24, v9);
  v26 = v24 + v9;
  if (v25)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  *(_QWORD *)(v5 + 16) = v26;
LABEL_25:
  if (v17 >= 1)
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v15 + 16))(v18, a3, v14);
  return sub_20E39D1F8(a3, qword_254A196F0);
}

uint64_t sub_20E3DEF88()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_20E3DEFAC()
{
  sub_20E3DECF4();
}

uint64_t sub_20E3DEFC4(uint64_t a1, int64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_20E3AD3A4(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A18A30);
  result = swift_arrayDestroy();
  if (!v7)
    goto LABEL_20;
  v13 = v4[2];
  v14 = __OFSUB__(v13, a2);
  v15 = v13 - a2;
  if (v14)
    goto LABEL_26;
  if ((v15 & 0x8000000000000000) == 0)
  {
    v16 = (char *)&v4[5 * a2 + 4];
    if (a1 != a2 || &v4[5 * a1 + 4] >= (_QWORD *)&v16[40 * v15])
      result = (uint64_t)memmove(&v4[5 * a1 + 4], v16, 40 * v15);
    v17 = v4[2];
    v14 = __OFADD__(v17, v8);
    v18 = v17 - v7;
    if (!v14)
    {
      v4[2] = v18;
LABEL_20:
      *(_QWORD *)v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  result = sub_20E4A62D8();
  __break(1u);
  return result;
}

uint64_t sub_20E3DF140(uint64_t a1, int64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_20E3AD5D0(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  result = swift_arrayDestroy();
  if (!v7)
    goto LABEL_20;
  v13 = v4[2];
  v14 = __OFSUB__(v13, a2);
  v15 = v13 - a2;
  if (v14)
    goto LABEL_26;
  if ((v15 & 0x8000000000000000) == 0)
  {
    v16 = (char *)&v4[2 * a2 + 4];
    if (a1 != a2 || &v4[2 * a1 + 4] >= (_QWORD *)&v16[16 * v15])
      result = (uint64_t)memmove(&v4[2 * a1 + 4], v16, 16 * v15);
    v17 = v4[2];
    v14 = __OFADD__(v17, v8);
    v18 = v17 - v7;
    if (!v14)
    {
      v4[2] = v18;
LABEL_20:
      *(_QWORD *)v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  result = sub_20E4A62D8();
  __break(1u);
  return result;
}

uint64_t sub_20E3DF2A8(uint64_t a1, int64_t a2)
{
  unint64_t *v2;
  unint64_t v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > *(_QWORD *)(v4 + 24) >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_20E3AD6DC(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  v12 = *(_QWORD *)(_s13PopupHUDModelC8RowModelVMa(0) - 8);
  v13 = v4 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  v14 = *(_QWORD *)(v12 + 72);
  v15 = v14 * a1;
  v16 = v13 + v14 * a1;
  result = swift_arrayDestroy();
  if (!v7)
    goto LABEL_25;
  v18 = *(_QWORD *)(v4 + 16);
  v19 = v18 - a2;
  if (__OFSUB__(v18, a2))
    goto LABEL_31;
  if ((v19 & 0x8000000000000000) == 0)
  {
    if (v15 < v14 * a2 || v16 >= v13 + v14 * a2 + v19 * v14)
    {
      result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (v15 != v14 * a2)
    {
      result = swift_arrayInitWithTakeBackToFront();
    }
    v21 = *(_QWORD *)(v4 + 16);
    v22 = __OFADD__(v21, v8);
    v23 = v21 - v7;
    if (!v22)
    {
      *(_QWORD *)(v4 + 16) = v23;
LABEL_25:
      *v2 = v4;
      return result;
    }
    goto LABEL_32;
  }
LABEL_33:
  result = sub_20E4A62D8();
  __break(1u);
  return result;
}

uint64_t View.dispatch<A>(_:into:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v42 = a8;
  v39 = a5;
  v40 = a1;
  v41 = a2;
  v34 = a6;
  swift_getAssociatedTypeWitness();
  v33 = a7;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  type metadata accessor for IntentResult(255, AssociatedTypeWitness, v13, v14);
  v15 = sub_20E4A4778();
  v37 = *(_QWORD *)(v15 - 8);
  v38 = v15;
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v32 - v17;
  v35 = *(_QWORD *)(a4 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for _ContinuousIntentDispatchWorker(255, a4, a6, a7);
  v22 = MEMORY[0x212BBDF90](&unk_20E4A9AB8, v21);
  v24 = type metadata accessor for _IntentDispatchViewModifier(0, v21, v22, v23);
  v36 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v26 = (char *)&v32 - v25;
  v27 = (_QWORD *)swift_allocObject();
  v27[2] = a3;
  v27[3] = a4;
  v29 = v39;
  v28 = v40;
  v30 = v34;
  v27[4] = v39;
  v27[5] = v30;
  v27[6] = v33;
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v20, v28, a4);
  (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v18, v41, v38);
  sub_20E3DFA40((uint64_t)sub_20E3DFC64, (uint64_t)v27, (uint64_t)v20, (uint64_t)v18, v21, v22, (uint64_t)v26);
  MEMORY[0x212BBBA70](v26, a3, v24, v29);
  return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v26, v24);
}

uint64_t type metadata accessor for _ContinuousIntentDispatchWorker(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _ContinuousIntentDispatchWorker);
}

uint64_t type metadata accessor for _IntentDispatchViewModifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _IntentDispatchViewModifier);
}

uint64_t sub_20E3DF694(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[4];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A190F8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20E3E52EC(a1, (uint64_t)v8);
  v9 = sub_20E4A5E58();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_20E39D1F8((uint64_t)v8, &qword_254A190F8);
    if (*(_QWORD *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      v11 = sub_20E4A5DBC();
      v13 = v12;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_20E4A5E4C();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (*(_QWORD *)(a3 + 16))
      goto LABEL_3;
  }
  v11 = 0;
  v13 = 0;
LABEL_6:
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a2;
  *(_QWORD *)(v14 + 24) = a3;
  if (v13 | v11)
  {
    v16[0] = 0;
    v16[1] = 0;
    v16[2] = v11;
    v16[3] = v13;
  }
  return swift_task_create();
}

uint64_t View.dispatch<A>(_:into:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v39 = a7;
  v36 = a5;
  v37 = a1;
  v38 = a2;
  v31 = a6;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  type metadata accessor for IntentResult(255, AssociatedTypeWitness, v11, v12);
  v13 = sub_20E4A4778();
  v34 = *(_QWORD *)(v13 - 8);
  v35 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v31 - v14;
  v32 = *(_QWORD *)(a4 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for _OneShotIntentDispatchWorker(255, a4, a6, v19);
  v21 = MEMORY[0x212BBDF90](&unk_20E4A9A4C, v20);
  v23 = type metadata accessor for _IntentDispatchViewModifier(0, v20, v21, v22);
  v33 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)&v31 - v24;
  v26 = (_QWORD *)swift_allocObject();
  v26[2] = a3;
  v26[3] = a4;
  v28 = v36;
  v27 = v37;
  v29 = v31;
  v26[4] = v36;
  v26[5] = v29;
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v18, v27, a4);
  (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v15, v38, v35);
  sub_20E3DFA40((uint64_t)sub_20E3DFCB0, (uint64_t)v26, (uint64_t)v18, (uint64_t)v15, v20, v21, (uint64_t)v25);
  MEMORY[0x212BBBA70](v25, a3, v23, v28);
  return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v25, v23);
}

uint64_t sub_20E3DFA1C()
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_20E3DFA40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v33;
  char v34;

  v12 = (int *)type metadata accessor for _IntentDispatchViewModifier(0, a5, a6, a4);
  v13 = a7 + v12[11];
  *(_QWORD *)v13 = swift_getKeyPath();
  *(_BYTE *)(v13 + 8) = 0;
  v14 = a7 + v12[12];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v18 = type metadata accessor for _IntentObserverKey(0, AssociatedTypeWitness, AssociatedConformanceWitness, v17);
  type metadata accessor for _IntentProgress(255, AssociatedTypeWitness, AssociatedConformanceWitness, v19);
  swift_getFunctionTypeMetadata1();
  v20 = sub_20E4A60E0();
  v21 = MEMORY[0x212BBDF90](&unk_20E4AAA58, v18);
  sub_20E461270(v18, v20, v18, v21);
  *(_OWORD *)v14 = v33;
  *(_BYTE *)(v14 + 16) = v34;
  v22 = (_QWORD *)swift_allocObject();
  v22[2] = a5;
  v22[3] = a6;
  v22[4] = a1;
  v22[5] = a2;
  *(_QWORD *)a7 = sub_20E4A36E0();
  *(_QWORD *)(a7 + 8) = v23;
  *(_BYTE *)(a7 + 16) = v24 & 1;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))(a7 + v12[9], a3, AssociatedTypeWitness);
  v25 = a7 + v12[10];
  v26 = swift_getAssociatedTypeWitness();
  type metadata accessor for IntentResult(255, v26, v27, v28);
  v29 = sub_20E4A4778();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v25, a4, v29);
}

uint64_t sub_20E3DFC54()
{
  return swift_deallocObject();
}

uint64_t sub_20E3DFC64()
{
  uint64_t *v0;
  uint64_t result;

  type metadata accessor for _ContinuousIntentDispatchWorker(0, v0[3], v0[5], v0[6]);
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0;
  return result;
}

uint64_t type metadata accessor for _OneShotIntentDispatchWorker(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _OneShotIntentDispatchWorker);
}

uint64_t sub_20E3DFCA0()
{
  return swift_deallocObject();
}

uint64_t sub_20E3DFCB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t result;

  type metadata accessor for _OneShotIntentDispatchWorker(0, *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 40), a4);
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0;
  return result;
}

uint64_t dispatch thunk of _IntentDispatchingViewModifier._intentKind.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_20E3DFCE8()
{
  return swift_initClassMetadata2();
}

void sub_20E3DFD28(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(a5, a1, a3);
  v9 = type metadata accessor for IntentResult(0, a4, v7, v8);
  (*(void (**)(uint64_t))(*(_QWORD *)(v9 - 8) + 8))(a2);
  type metadata accessor for _IntentDispatchViewModifier._DispatchID();
}

uint64_t sub_20E3DFDB4(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + *(int *)(result + 52)) = v1;
  return result;
}

void sub_20E3DFDD8()
{
  type metadata accessor for _IntentDispatchViewModifier._DispatchID();
}

uint64_t sub_20E3DFE1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(_BYTE *, uint64_t, uint64_t, double);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  char v29;
  _BYTE *v30;
  _BYTE *v31;
  _BYTE *v32;
  void (*v33)(_BYTE *, uint64_t);
  uint64_t v34;
  _QWORD *v35;
  uint64_t *boxed_opaque_existential_1Tm;
  uint64_t v37;
  _QWORD *v38;
  uint64_t *v39;
  char v40;
  _BYTE v42[96];

  MEMORY[0x24BDAC7A8](a1);
  v6 = &v42[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v7);
  v9 = &v42[-v8];
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v42[-v11];
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = &v42[-v15];
  v18 = *(int *)(v17 + 52);
  v19 = *(_QWORD *)(v1 + v18);
  v20 = *(_QWORD *)(v2 + v18);
  *(_QWORD *)(v3 - 272) = v21;
  v22 = *(void (**)(_BYTE *, uint64_t, uint64_t, double))(v21 + 16);
  *(_QWORD *)(v3 - 264) = v1;
  v22(&v42[-v15], v1, a1, v14);
  *(_QWORD *)(v3 - 248) = v2;
  ((void (*)(_BYTE *, uint64_t, uint64_t))v22)(v12, v2, a1);
  if (v19 == v20)
  {
    *(_QWORD *)(v3 - 288) = v6;
    *(_QWORD *)(v3 - 280) = v9;
    v23 = sub_20E4A4B2C();
    v25 = v24;
    v27 = v23 == sub_20E4A4B2C() && v25 == v26;
    v28 = *(_QWORD *)(v3 - 264);
    if (v27)
      v29 = 1;
    else
      v29 = sub_20E4A635C();
    v30 = v12;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v31 = *(_BYTE **)(v3 - 280);
    v32 = *(_BYTE **)(v3 - 288);
  }
  else
  {
    v30 = v12;
    v29 = 0;
    v31 = v9;
    v32 = v6;
    v28 = *(_QWORD *)(v3 - 264);
  }
  v33 = *(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v3 - 272) + 8);
  v33(v30, a1);
  v33(v16, a1);
  ((void (*)(_BYTE *, uint64_t, uint64_t))v22)(v31, v28, a1);
  ((void (*)(_BYTE *, _QWORD, uint64_t))v22)(v32, *(_QWORD *)(v3 - 248), a1);
  if ((v29 & 1) != 0)
  {
    sub_20E4A4B14();
    v34 = *(_QWORD *)(v3 - 104);
    v35 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v3 - 128), v34);
    *(_QWORD *)(v3 - 136) = v34;
    boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)(v3 - 160));
    (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(boxed_opaque_existential_1Tm, v35, v34);
    sub_20E4A4B14();
    v37 = *(_QWORD *)(v3 - 176);
    v38 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v3 - 200), v37);
    *(_QWORD *)(v3 - 208) = v37;
    v39 = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)(v3 - 232));
    (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v39, v38, v37);
    v40 = sub_20E4A53FC();
    v33(v32, a1);
    v33(v31, a1);
    __swift_destroy_boxed_opaque_existential_1(v3 - 232);
    __swift_destroy_boxed_opaque_existential_1(v3 - 200);
    __swift_destroy_boxed_opaque_existential_1(v3 - 160);
    __swift_destroy_boxed_opaque_existential_1(v3 - 128);
  }
  else
  {
    v33(v32, a1);
    v33(v31, a1);
    v40 = 0;
  }
  return v40 & 1;
}

void sub_20E3E0124()
{
  sub_20E3DFDD8();
}

uint64_t sub_20E3E0134()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  return sub_20E4A4B2C();
}

void sub_20E3E01B8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedConformanceWitness;
  _BYTE v12[24];
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t AssociatedTypeWitness;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v19 = a1;
  v20 = a3;
  v13 = *(_QWORD *)(a2 - 8);
  v18 = *(_QWORD *)(v13 + 64);
  MEMORY[0x24BDAC7A8](a1);
  v17 = &v12[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = *(_QWORD *)(v4 + 24);
  v21 = *(_QWORD *)(v4 + 16);
  v6 = v21;
  v22 = v5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v15 = type metadata accessor for IntentResult(0, AssociatedTypeWitness, v7, v8);
  MEMORY[0x24BDAC7A8](v15);
  v14 = &v12[-v9];
  v10 = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](v10);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v23 = v6;
  v24 = v10;
  v25 = v5;
  v26 = AssociatedConformanceWitness;
  type metadata accessor for _IntentDispatchViewModifier._DispatchID();
}

void sub_20E3E0310(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  *(_QWORD *)(v14 - 232) = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v14 - 336) = a1;
  v16 = MEMORY[0x24BDAC7A8](a1);
  v18 = (char *)&a9 - v17;
  MEMORY[0x212BBDF90](&unk_20E4A9A68, v13, v16);
  v19 = sub_20E4A3EA8();
  v20 = MEMORY[0x24BDEFB78];
  v21 = v19;
  *(_QWORD *)(v14 - 352) = v19;
  v22 = MEMORY[0x212BBDF90](v20);
  *(_QWORD *)(v14 - 320) = v22;
  v23 = MEMORY[0x212BBDF90](&unk_20E4A9B20, a1);
  *(_QWORD *)(v14 - 328) = v23;
  *(_QWORD *)(v14 - 120) = v21;
  *(_QWORD *)(v14 - 112) = a1;
  *(_QWORD *)(v14 - 104) = v22;
  *(_QWORD *)(v14 - 96) = v23;
  v24 = MEMORY[0x212BBDF30](0, v14 - 120, MEMORY[0x24BDF3908], 0);
  *(_QWORD *)(v14 - 216) = *(_QWORD *)(v24 - 8);
  *(_QWORD *)(v14 - 264) = v24;
  MEMORY[0x24BDAC7A8](v24);
  *(_QWORD *)(v14 - 384) = (char *)&a9 - v25;
  v26 = sub_20E4A39D4();
  *(_QWORD *)(v14 - 208) = *(_QWORD *)(v26 - 8);
  *(_QWORD *)(v14 - 312) = v26;
  MEMORY[0x24BDAC7A8](v26);
  *(_QWORD *)(v14 - 304) = (char *)&a9 - v27;
  *(_QWORD *)(v14 - 368) = v11;
  *(_QWORD *)(v14 - 360) = v9;
  type metadata accessor for _IntentProgress(255, v11, v9, v28);
  swift_getFunctionTypeMetadata1();
  sub_20E4A60E0();
  *(_QWORD *)(v14 - 272) = sub_20E4A3FF8();
  v29 = sub_20E4A39D4();
  v30 = *(_QWORD *)(v29 - 8);
  *(_QWORD *)(v14 - 256) = v29;
  *(_QWORD *)(v14 - 248) = v30;
  MEMORY[0x24BDAC7A8](v29);
  *(_QWORD *)(v14 - 344) = (char *)&a9 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = MEMORY[0x24BDAC7A8](v32);
  *(_QWORD *)(v14 - 288) = (char *)&a9 - v34;
  (*(void (**)(uint64_t, _QWORD, uint64_t, double))(v12 + 16))(v10, *(_QWORD *)(v14 - 160) + *(int *)(v13 + 36), v11, v33);
  v35 = sub_20E4A4778();
  v36 = *(_QWORD *)(v14 - 296);
  MEMORY[0x212BBBCE0](v35);
  sub_20E3DFD28(v10, v36, v11, *(_QWORD *)(v14 - 240), (uint64_t)v18);
}

uint64_t sub_20E3E0598()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t OpaqueTypeConformance2;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t (*v37)(_QWORD *, uint64_t);

  v6 = *(_QWORD *)(v5 - 376);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  *(_QWORD *)(v5 - 240) = v7;
  v8 = *(_QWORD *)(v5 - 224);
  v9 = v2;
  v10 = v3;
  *(_QWORD *)(v5 - 392) = v3;
  v7(v8, v9, v3);
  v11 = *(unsigned __int8 *)(v6 + 80);
  v12 = (v11 + 32) & ~v11;
  *(_QWORD *)(v5 - 200) += v12;
  *(_QWORD *)(v5 - 280) = v11 | 7;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v4;
  *(_QWORD *)(v13 + 24) = v1;
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
  v15 = v8;
  v14(v13 + v12, v8, v10);
  v16 = swift_checkMetadataState();
  v17 = v0;
  v18 = *(_QWORD *)(v5 - 336);
  v19 = *(_QWORD *)(v5 - 320);
  v20 = *(_QWORD *)(v5 - 328);
  sub_20E4A44D8();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 232) + 8))(v17, v18);
  v21 = *(_QWORD *)(v5 - 392);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 - 240))(v15, *(_QWORD *)(v5 - 160), v21);
  v22 = swift_allocObject();
  v23 = *(_QWORD *)(v5 - 168);
  *(_QWORD *)(v22 + 16) = *(_QWORD *)(v5 - 176);
  *(_QWORD *)(v22 + 24) = v23;
  v14(v22 + v12, v15, v21);
  *(_QWORD *)(v5 - 120) = v16;
  *(_QWORD *)(v5 - 112) = v18;
  *(_QWORD *)(v5 - 104) = v19;
  *(_QWORD *)(v5 - 96) = v20;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v25 = *(_QWORD *)(v5 - 304);
  v26 = *(_QWORD *)(v5 - 264);
  v27 = *(_QWORD *)(v5 - 384);
  sub_20E4A44C0();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 216) + 8))(v27, v26);
  v28 = MEMORY[0x24BDF0910];
  *(_QWORD *)(v5 - 136) = OpaqueTypeConformance2;
  *(_QWORD *)(v5 - 128) = v28;
  v29 = MEMORY[0x24BDED308];
  v30 = *(_QWORD *)(v5 - 312);
  v31 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v30, v5 - 136);
  v32 = *(_QWORD **)(v5 - 344);
  sub_20E3FE6FC(*(_QWORD *)(v5 - 368), 0, 0, v30, *(_QWORD *)(v5 - 368), v31, *(_QWORD *)(v5 - 360));
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 208) + 8))(v25, v30);
  v33 = MEMORY[0x212BBDF90](MEMORY[0x24BDF1028], *(_QWORD *)(v5 - 272));
  *(_QWORD *)(v5 - 152) = v31;
  *(_QWORD *)(v5 - 144) = v33;
  v34 = *(_QWORD *)(v5 - 256);
  v35 = MEMORY[0x212BBDF90](v29, v34, v5 - 152);
  v36 = *(_QWORD **)(v5 - 288);
  sub_20E39D614(v36, v32, v34, v35);
  v37 = *(uint64_t (**)(_QWORD *, uint64_t))(*(_QWORD *)(v5 - 248) + 8);
  v37(v32, v34);
  sub_20E39D618((uint64_t)v36, v34, *(_QWORD *)(v5 - 184));
  return v37(v36, v34);
}

uint64_t sub_20E3E0878(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  __int128 *v27;
  char v28;
  uint64_t AssociatedConformanceWitness;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  void *v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v6 = sub_20E4A4A24();
  v36 = *(_QWORD *)(v6 - 8);
  v37 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  type metadata accessor for IntentResult(255, AssociatedTypeWitness, v10, v11);
  v12 = sub_20E4A4778();
  v40 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v36 - v13;
  v15 = swift_getAssociatedTypeWitness();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v36 - v17;
  v38 = sub_20E4A36EC();
  v20 = (int *)type metadata accessor for _IntentDispatchViewModifier(0, a2, a3, v19);
  v21 = a1 + v20[9];
  v39 = v16;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v21, v15);
  v41 = v12;
  sub_20E4A4748();
  v22 = (uint64_t *)(a1 + v20[11]);
  v23 = *v22;
  v24 = *((unsigned __int8 *)v22 + 8);
  j__swift_retain(*v22);
  sub_20E45D0E0(v23, v24, &v42);
  j__swift_release(v23, v24);
  v25 = v42;
  if (!(_QWORD)v42)
  {
    sub_20E4A4F40();
    sub_20E4A4F04();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254A198A0);
    v26 = (_QWORD *)swift_allocObject();
    v26[3] = 0;
    v26[4] = 0;
    v26[2] = &unk_254A1BFB0;
    sub_20E4A49F4();
    v25 = sub_20E4A4F10();
    swift_release();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v8, v37);
  }
  v46 = v25;
  v27 = (__int128 *)(a1 + v20[12]);
  v28 = *((_BYTE *)v27 + 16);
  v42 = *v27;
  v43 = v28;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for _IntentProgress(255, v15, AssociatedConformanceWitness, v30);
  swift_getFunctionTypeMetadata1();
  sub_20E4A60E0();
  sub_20E4A36C8();
  sub_20E4A36B0();
  v31 = v44;
  if (v44)
  {
    v32 = v45;
    v33 = (_QWORD *)swift_allocObject();
    v33[2] = a2;
    v33[3] = a3;
    v33[4] = v31;
    v33[5] = v32;
    v34 = &unk_254A198C8;
  }
  else
  {
    v34 = 0;
    v33 = 0;
  }
  (*(void (**)(uint64_t, char *, char *, uint64_t *, void *, _QWORD *, uint64_t, uint64_t))(a3 + 40))(1, v18, v14, &v46, v34, v33, a2, a3);
  sub_20E3CF5C0((uint64_t)v34);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v14, v41);
  return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v18, v15);
}

uint64_t sub_20E3E0C34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  __int128 *v27;
  char v28;
  uint64_t AssociatedConformanceWitness;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  void *v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v6 = sub_20E4A4A24();
  v36 = *(_QWORD *)(v6 - 8);
  v37 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  type metadata accessor for IntentResult(255, AssociatedTypeWitness, v10, v11);
  v12 = sub_20E4A4778();
  v40 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v36 - v13;
  v15 = swift_getAssociatedTypeWitness();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v36 - v17;
  v38 = sub_20E4A36EC();
  v20 = (int *)type metadata accessor for _IntentDispatchViewModifier(0, a2, a3, v19);
  v21 = a1 + v20[9];
  v39 = v16;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v21, v15);
  v41 = v12;
  sub_20E4A4748();
  v22 = (uint64_t *)(a1 + v20[11]);
  v23 = *v22;
  v24 = *((unsigned __int8 *)v22 + 8);
  j__swift_retain(*v22);
  sub_20E45D0E0(v23, v24, &v42);
  j__swift_release(v23, v24);
  v25 = v42;
  if (!(_QWORD)v42)
  {
    sub_20E4A4F40();
    sub_20E4A4F04();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254A198A0);
    v26 = (_QWORD *)swift_allocObject();
    v26[3] = 0;
    v26[4] = 0;
    v26[2] = &unk_254A1BFB0;
    sub_20E4A49F4();
    v25 = sub_20E4A4F10();
    swift_release();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v8, v37);
  }
  v46 = v25;
  v27 = (__int128 *)(a1 + v20[12]);
  v28 = *((_BYTE *)v27 + 16);
  v42 = *v27;
  v43 = v28;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for _IntentProgress(255, v15, AssociatedConformanceWitness, v30);
  swift_getFunctionTypeMetadata1();
  sub_20E4A60E0();
  sub_20E4A36C8();
  sub_20E4A36B0();
  v31 = v44;
  if (v44)
  {
    v32 = v45;
    v33 = (_QWORD *)swift_allocObject();
    v33[2] = a2;
    v33[3] = a3;
    v33[4] = v31;
    v33[5] = v32;
    v34 = &unk_254A198B8;
  }
  else
  {
    v34 = 0;
    v33 = 0;
  }
  (*(void (**)(_QWORD, char *, char *, uint64_t *, void *, _QWORD *, uint64_t, uint64_t))(a3 + 40))(0, v18, v14, &v46, v34, v33, a2, a3);
  sub_20E3CF5C0((uint64_t)v34);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v14, v41);
  return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v18, v15);
}

uint64_t sub_20E3E0FF8()
{
  sub_20E3E2408();
  return swift_deallocClassInstance();
}

uint64_t sub_20E3E1014()
{
  return swift_initClassMetadata2();
}

uint64_t sub_20E3E1054(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t AssociatedTypeWitness;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  char *v37;
  void (*v38)(char *, uint64_t, double);
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  uint64_t result;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;

  v83 = a5;
  v84 = a6;
  v80 = a2;
  LODWORD(v86) = a1;
  v9 = *v6;
  v10 = *(_QWORD *)(*v6 + 80);
  v82 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v81 = v11;
  v92 = (char *)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A190F8);
  MEMORY[0x24BDAC7A8](v12);
  v91 = (uint64_t)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = *(_QWORD *)(v9 + 88);
  v89 = v10;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v15 = sub_20E4A60E0();
  v72 = *(_QWORD *)(v15 - 8);
  v73 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v71 = (char *)&v70 - v16;
  v74 = AssociatedTypeWitness;
  v19 = type metadata accessor for IntentResult(0, AssociatedTypeWitness, v17, v18);
  v77 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v75 = (char *)&v70 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v70 - v22;
  v24 = sub_20E4A4778();
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v90 = (char *)&v70 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v27);
  v29 = (char *)&v70 - v28;
  MEMORY[0x24BDAC7A8](v30);
  v32 = (char *)&v70 - v31;
  v79 = v33;
  v35 = MEMORY[0x24BDAC7A8](v34);
  v37 = (char *)&v70 - v36;
  v78 = *a4;
  v38 = *(void (**)(char *, uint64_t, double))(v25 + 16);
  v40 = v39;
  v38((char *)&v70 - v36, a3, v35);
  v85 = v6;
  v87 = v25;
  if ((v86 & 1) == 0)
  {
    v86 = a3;
    v43 = v6[2];
    ((void (*)(char *, char *, uint64_t))v38)(v32, v37, v40);
    if (v43)
    {
      v41 = *(void (**)(char *, uint64_t))(v87 + 8);
      v41(v32, v40);
      v41(v37, v40);
      a3 = v86;
      ((void (*)(char *, uint64_t, uint64_t))v38)(v29, v86, v40);
    }
    else
    {
      sub_20E3E1580();
      v44 = v71;
      IntentResult.data.getter(v19, v45, v46, v71);
      v42 = v40;
      (*(void (**)(char *, uint64_t))(v77 + 8))(v23, v19);
      v41 = *(void (**)(char *, uint64_t))(v87 + 8);
      v41(v32, v40);
      v41(v37, v40);
      v47 = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v74 - 8) + 48))(v44, 1);
      (*(void (**)(char *, uint64_t))(v72 + 8))(v44, v73);
      a3 = v86;
      ((void (*)(char *, uint64_t, uint64_t))v38)(v29, v86, v40);
      if (v47 == 1)
        goto LABEL_3;
    }
    v48 = v75;
    sub_20E3E1580();
    v42 = v40;
    v52 = sub_20E3BFDB8(v19, v49, v50, v51);
    (*(void (**)(char *, uint64_t))(v77 + 8))(v48, v19);
    result = ((uint64_t (*)(char *, uint64_t))v41)(v29, v40);
    if (!v52)
      return result;
    goto LABEL_8;
  }
  v41 = *(void (**)(char *, uint64_t))(v25 + 8);
  v42 = v40;
  v41(v37, v40);
  ((void (*)(char *, uint64_t, uint64_t))v38)(v29, a3, v40);
LABEL_3:
  v41(v29, v42);
LABEL_8:
  v76 = v42;
  v54 = sub_20E4A5E58();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v91, 1, 1, v54);
  v55 = v82;
  v56 = v89;
  (*(void (**)(char *, uint64_t, uint64_t))(v82 + 16))(v92, v80, v89);
  ((void (*)(char *, uint64_t, uint64_t))v38)(v90, a3, v42);
  sub_20E4A5DF8();
  v58 = v83;
  v57 = v84;
  sub_20E3E592C(v83);
  v59 = v78;
  swift_retain();
  v60 = sub_20E4A5DEC();
  v61 = (*(unsigned __int8 *)(v55 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
  v62 = v87;
  v63 = (v81 + v61 + *(unsigned __int8 *)(v87 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80);
  v64 = (char *)swift_allocObject();
  v65 = MEMORY[0x24BEE6930];
  *((_QWORD *)v64 + 2) = v60;
  *((_QWORD *)v64 + 3) = v65;
  v66 = v88;
  *((_QWORD *)v64 + 4) = v56;
  *((_QWORD *)v64 + 5) = v66;
  *((_QWORD *)v64 + 6) = v58;
  *((_QWORD *)v64 + 7) = v57;
  *((_QWORD *)v64 + 8) = v59;
  (*(void (**)(char *, char *, uint64_t))(v55 + 32))(&v64[v61], v92, v56);
  (*(void (**)(char *, char *, uint64_t))(v62 + 32))(&v64[v63], v90, v76);
  v67 = v91;
  v68 = sub_20E3DF694(v91, (uint64_t)&unk_254A198D8, (uint64_t)v64);
  sub_20E39D1F8(v67, &qword_254A190F8);
  v69 = v85;
  sub_20E3E4AC4();
  v69[2] = v68;
  return swift_release();
}

uint64_t sub_20E3E1580()
{
  uint64_t AssociatedTypeWitness;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  type metadata accessor for IntentResult(255, AssociatedTypeWitness, v1, v2);
  v3 = sub_20E4A4778();
  return MEMORY[0x212BBBCE0](v3);
}

uint64_t sub_20E3E15E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  v8[9] = v21;
  v8[10] = v22;
  v8[7] = a7;
  v8[8] = a8;
  v8[5] = a5;
  v8[6] = a6;
  v8[4] = a4;
  v9 = sub_20E4A5DC8();
  v8[11] = v9;
  v8[12] = *(_QWORD *)(v9 - 8);
  v8[13] = swift_task_alloc();
  v8[14] = swift_task_alloc();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8[15] = AssociatedTypeWitness;
  v13 = type metadata accessor for IntentResult(0, AssociatedTypeWitness, v11, v12);
  v8[16] = v13;
  v8[17] = *(_QWORD *)(v13 - 8);
  v8[18] = swift_task_alloc();
  v16 = type metadata accessor for IntentResult._State(0, AssociatedTypeWitness, v14, v15);
  v8[19] = v16;
  v8[20] = *(_QWORD *)(v16 - 8);
  v8[21] = swift_task_alloc();
  v8[22] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8[23] = swift_task_alloc();
  v18 = type metadata accessor for _IntentProgress(0, v21, v22, v17);
  v8[24] = v18;
  v8[25] = *(_QWORD *)(v18 - 8);
  v8[26] = swift_task_alloc();
  sub_20E4A5DF8();
  v8[27] = sub_20E4A5DEC();
  v8[28] = sub_20E4A5DBC();
  v8[29] = v19;
  return swift_task_switch();
}

uint64_t sub_20E3E176C()
{
  _QWORD *v0;
  int *v1;
  _QWORD *v2;
  _QWORD *v4;
  uint64_t (*v5)(_QWORD);

  v1 = (int *)v0[4];
  if (v1)
  {
    swift_storeEnumTagMultiPayload();
    v5 = (uint64_t (*)(_QWORD))((char *)v1 + *v1);
    v2 = (_QWORD *)swift_task_alloc();
    v0[30] = v2;
    *v2 = v0;
    v2[1] = sub_20E3E1838;
    return v5(v0[26]);
  }
  else
  {
    v0[2] = v0[6];
    v4 = (_QWORD *)swift_task_alloc();
    v0[31] = v4;
    *v4 = v0;
    v4[1] = sub_20E3E18D8;
    return IntentDispatchAction.callAsFunction<A>(_:)(v0[23], v0[7], v0[9], v0[10]);
  }
}

uint64_t sub_20E3E1838()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = (_QWORD *)*v0;
  v3 = *(_QWORD *)(*v0 + 200);
  v2 = *(_QWORD *)(*v0 + 208);
  v4 = *(_QWORD *)(*v0 + 192);
  v5 = *v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  v1[2] = v1[6];
  v1 += 2;
  v6 = (_QWORD *)swift_task_alloc();
  v1[29] = v6;
  *v6 = v5;
  v6[1] = sub_20E3E18D8;
  return IntentDispatchAction.callAsFunction<A>(_:)(v1[21], v1[5], v1[7], v1[8]);
}

uint64_t sub_20E3E18D8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 256) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20E3E193C()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t (*v16)();
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  int *v23;
  id v24;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(_QWORD);
  uint64_t v45;
  uint64_t v46;

  v1 = *(void **)(v0 + 256);
  sub_20E4A5E7C();
  if (v1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 176) + 8))(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 120));
    *(_QWORD *)(v0 + 280) = v1;
    *(_QWORD *)(v0 + 24) = v1;
    v2 = v1;
    __swift_instantiateConcreteTypeFromMangledName(qword_253ED2880);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v3 = *(_QWORD *)(v0 + 104);
      v4 = *(_QWORD *)(v0 + 112);
      v5 = *(_QWORD *)(v0 + 88);
      v6 = *(_QWORD *)(v0 + 96);
      v7 = *(_QWORD *)(v0 + 32);

      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v3, v4, v5);
      if (v7)
      {
        v8 = *(uint64_t **)(v0 + 208);
        v10 = *(_QWORD *)(v0 + 96);
        v9 = *(_QWORD *)(v0 + 104);
        v11 = *(_QWORD *)(v0 + 88);
        v12 = *(int **)(v0 + 32);
        sub_20E3E5B90();
        v13 = swift_allocError();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v14, v9, v11);
        *v8 = v13;
        swift_storeEnumTagMultiPayload();
        v44 = (uint64_t (*)(_QWORD))((char *)v12 + *v12);
        v15 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 288) = v15;
        v16 = sub_20E3E1EC0;
LABEL_9:
        *v15 = v0;
        v15[1] = v16;
        return v44(*(_QWORD *)(v0 + 208));
      }
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 8))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 88));
      swift_release();
      v34 = *(void **)(v0 + 24);
    }
    else
    {
      v22 = *(_QWORD *)(v0 + 32);

      if (v22)
      {
        v23 = *(int **)(v0 + 32);
        **(_QWORD **)(v0 + 208) = v1;
        swift_storeEnumTagMultiPayload();
        v24 = v1;
        v44 = (uint64_t (*)(_QWORD))((char *)v23 + *v23);
        v15 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 296) = v15;
        v16 = sub_20E3E1FCC;
        goto LABEL_9;
      }
      swift_release();
      v35 = *(void **)(v0 + 280);
      v37 = *(_QWORD *)(v0 + 160);
      v36 = *(_QWORD **)(v0 + 168);
      v39 = *(_QWORD *)(v0 + 144);
      v38 = *(_QWORD *)(v0 + 152);
      v40 = *(_QWORD *)(v0 + 136);
      v46 = *(_QWORD *)(v0 + 128);
      *v36 = v35;
      swift_storeEnumTagMultiPayload();
      v41 = v35;
      sub_20E3E1580();
      (*(void (**)(uint64_t, _QWORD *, uint64_t))(v37 + 40))(v39, v36, v38);
      sub_20E3E5358(v39);
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v39, v46);
      v34 = v35;
    }

  }
  else
  {
    v17 = *(int **)(v0 + 32);
    if (v17)
    {
      v18 = *(_QWORD *)(v0 + 208);
      v19 = *(_QWORD *)(v0 + 184);
      v20 = *(_QWORD *)(v0 + 120);
      v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 176) + 16);
      *(_QWORD *)(v0 + 264) = v21;
      v21(v18, v19, v20);
      swift_storeEnumTagMultiPayload();
      v44 = (uint64_t (*)(_QWORD))((char *)v17 + *v17);
      v15 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 272) = v15;
      v16 = sub_20E3E1D1C;
      goto LABEL_9;
    }
    v26 = *(_QWORD *)(v0 + 176);
    swift_release();
    v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16);
    v28 = *(_QWORD *)(v0 + 184);
    v30 = *(_QWORD *)(v0 + 160);
    v29 = *(_QWORD *)(v0 + 168);
    v32 = *(_QWORD *)(v0 + 144);
    v31 = *(_QWORD *)(v0 + 152);
    v42 = *(_QWORD *)(v0 + 136);
    v33 = *(_QWORD *)(v0 + 120);
    v43 = *(_QWORD *)(v0 + 128);
    v45 = *(_QWORD *)(v0 + 176);
    v27(v29, v28, v33);
    swift_storeEnumTagMultiPayload();
    sub_20E3E1580();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 40))(v32, v29, v31);
    sub_20E3E5358(v32);
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v32, v43);
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v28, v33);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20E3E1D1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v0 + 200);
  v1 = *(_QWORD *)(*(_QWORD *)v0 + 208);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 192);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_task_switch();
}

uint64_t sub_20E3E1D88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  swift_release();
  v1 = *(_QWORD *)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 152);
  v8 = *(_QWORD *)(v0 + 136);
  v6 = *(_QWORD *)(v0 + 120);
  v9 = *(_QWORD *)(v0 + 128);
  v10 = *(_QWORD *)(v0 + 176);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 264))(v2, v1, v6);
  swift_storeEnumTagMultiPayload();
  sub_20E3E1580();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 40))(v5, v2, v4);
  sub_20E3E5358(v5);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v5, v9);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v1, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20E3E1EC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v0 + 200);
  v1 = *(_QWORD *)(*(_QWORD *)v0 + 208);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 192);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_task_switch();
}

uint64_t sub_20E3E1F2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 96);
  v1 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 88);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20E3E1FCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v0 + 200);
  v1 = *(_QWORD *)(*(_QWORD *)v0 + 208);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 192);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_task_switch();
}

uint64_t sub_20E3E2038()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v9;

  swift_release();
  v1 = *(void **)(v0 + 280);
  v3 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD **)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 152);
  v6 = *(_QWORD *)(v0 + 136);
  v9 = *(_QWORD *)(v0 + 128);
  *v2 = v1;
  swift_storeEnumTagMultiPayload();
  v7 = v1;
  sub_20E3E1580();
  (*(void (**)(uint64_t, _QWORD *, uint64_t))(v3 + 40))(v5, v2, v4);
  sub_20E3E5358(v5);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v9);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20E3E2154()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t (*v16)();
  uint64_t v17;
  int *v18;
  id v19;
  void *v21;
  void *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t (*v29)(_QWORD);
  uint64_t v30;

  v1 = *(void **)(v0 + 256);
  *(_QWORD *)(v0 + 24) = v1;
  *(_QWORD *)(v0 + 280) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(qword_253ED2880);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v4 = *(_QWORD *)(v0 + 104);
    v3 = *(_QWORD *)(v0 + 112);
    v6 = *(_QWORD *)(v0 + 88);
    v5 = *(_QWORD *)(v0 + 96);
    v7 = *(_QWORD *)(v0 + 32);

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v4, v3, v6);
    if (v7)
    {
      v8 = *(uint64_t **)(v0 + 208);
      v10 = *(_QWORD *)(v0 + 96);
      v9 = *(_QWORD *)(v0 + 104);
      v11 = *(_QWORD *)(v0 + 88);
      v12 = *(int **)(v0 + 32);
      sub_20E3E5B90();
      v13 = swift_allocError();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v14, v9, v11);
      *v8 = v13;
      swift_storeEnumTagMultiPayload();
      v29 = (uint64_t (*)(_QWORD))((char *)v12 + *v12);
      v15 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 288) = v15;
      v16 = sub_20E3E1EC0;
LABEL_6:
      *v15 = v0;
      v15[1] = v16;
      return v29(*(_QWORD *)(v0 + 208));
    }
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 8))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 88));
    swift_release();
    v21 = *(void **)(v0 + 24);
  }
  else
  {
    v17 = *(_QWORD *)(v0 + 32);

    if (v17)
    {
      v18 = *(int **)(v0 + 32);
      **(_QWORD **)(v0 + 208) = v1;
      swift_storeEnumTagMultiPayload();
      v19 = v1;
      v29 = (uint64_t (*)(_QWORD))((char *)v18 + *v18);
      v15 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 296) = v15;
      v16 = sub_20E3E1FCC;
      goto LABEL_6;
    }
    swift_release();
    v22 = *(void **)(v0 + 280);
    v24 = *(_QWORD *)(v0 + 160);
    v23 = *(_QWORD **)(v0 + 168);
    v26 = *(_QWORD *)(v0 + 144);
    v25 = *(_QWORD *)(v0 + 152);
    v27 = *(_QWORD *)(v0 + 136);
    v30 = *(_QWORD *)(v0 + 128);
    *v23 = v22;
    swift_storeEnumTagMultiPayload();
    v28 = v22;
    sub_20E3E1580();
    (*(void (**)(uint64_t, _QWORD *, uint64_t))(v24 + 40))(v26, v23, v25);
    sub_20E3E5358(v26);
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v30);
    v21 = v22;
  }

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20E3E2408()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
  {
    swift_retain();
    sub_20E4A5E64();
    swift_release();
  }
  swift_release();
  return v0;
}

void sub_20E3E246C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = type metadata accessor for _OneShotIntentDispatchWorker(255, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 24), a4);
  v5 = MEMORY[0x212BBDF90](&unk_20E4A9A4C, v4);
  type metadata accessor for _IntentDispatchViewModifier(255, v4, v5, v6);
  JUMPOUT(0x212BBDF90);
}

void sub_20E3E24C4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = type metadata accessor for _ContinuousIntentDispatchWorker(255, a1[1], a1[3], a1[4]);
  v2 = MEMORY[0x212BBDF90](&unk_20E4A9AB8, v1);
  type metadata accessor for _IntentDispatchViewModifier(255, v1, v2, v3);
  JUMPOUT(0x212BBDF90);
}

uint64_t sub_20E3E251C()
{
  uint64_t result;
  unint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    type metadata accessor for IntentResult(255, AssociatedTypeWitness, v3, v4);
    result = sub_20E4A4778();
    if (v5 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_20E3E260C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int v15;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  id *v28;
  unsigned int v29;
  uint64_t v30;
  id v31;
  id v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v5 = *(_DWORD *)(v4 + 80);
  v6 = v5;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = v10 & 0xF8 | 7;
  v12 = v7 + v11;
  v13 = 8;
  if (*(_QWORD *)(v9 + 64) > 8uLL)
    v13 = *(_QWORD *)(v9 + 64);
  v14 = (v13 & 0xFFFFFFFFFFFFFFF8) + (((v10 & 0xF8) + 23) & ~v11) + 16;
  v15 = (v10 | v5) & 0x100000;
  if ((v11 | v5) != 7
    || v15 != 0
    || v14 + ((v12 + ((v5 + 17) & ~(unint64_t)v5)) & ~v11) + 33 > 0x18)
  {
    v18 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    v19 = v18 + (((v11 | v5) + 16) & ~(v11 | v5));
    swift_retain();
  }
  else
  {
    v40 = *(_QWORD *)(v8 - 8);
    v41 = v8;
    v42 = v13;
    v43 = v14;
    v20 = *(_QWORD *)a2;
    v21 = *(_QWORD *)(a2 + 8);
    v22 = *(_BYTE *)(a2 + 16);
    sub_20E3E2950(*(_QWORD *)a2, v21, v22);
    *(_QWORD *)a1 = v20;
    *(_QWORD *)(a1 + 8) = v21;
    *(_BYTE *)(a1 + 16) = v22;
    v44 = a1;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))((a1 + v6 + 17) & ~v6, (a2 + v6 + 17) & ~v6, AssociatedTypeWitness);
    v23 = (_QWORD *)((((a1 + v6 + 17) & ~v6) + v12) & ~v11);
    v24 = (_QWORD *)((((a2 + v6 + 17) & ~v6) + v12) & ~v11);
    *v23 = *v24;
    v25 = (_QWORD *)(((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFFFF8);
    v26 = (_QWORD *)(((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v25 = *v26;
    v27 = (_QWORD *)(((unint64_t)v25 + v11 + 8) & ~v11);
    v28 = (id *)(((unint64_t)v26 + v11 + 8) & ~v11);
    v29 = *((unsigned __int8 *)v28 + v42);
    swift_retain();
    swift_retain();
    if (v29 >= 3)
    {
      if (v42 <= 3)
        v30 = v42;
      else
        v30 = 4;
      __asm { BR              X11 }
    }
    if (v29 == 2)
    {
      v31 = *v28;
      v32 = *v28;
      *v27 = v31;
      *((_BYTE *)v27 + v42) = 2;
    }
    else
    {
      (*(void (**)(_QWORD *, id *, uint64_t))(v40 + 16))(v27, v28, v41);
      *((_BYTE *)v27 + v42) = v29 == 1;
    }
    *(_QWORD *)(((unint64_t)v27 + v42 + 8) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v28 + v42 + 8) & 0xFFFFFFFFFFFFF8);
    v33 = ((unint64_t)v23 + v43) & 0xFFFFFFFFFFFFFFF8;
    v34 = ((unint64_t)v24 + v43) & 0xFFFFFFFFFFFFFFF8;
    v35 = *(_QWORD *)v34;
    v36 = *(_BYTE *)(v34 + 8);
    j__swift_retain(*(_QWORD *)v34);
    *(_QWORD *)v33 = v35;
    *(_BYTE *)(v33 + 8) = v36;
    v37 = *(_QWORD *)(v34 + 16);
    v38 = *(_QWORD *)(v34 + 24);
    LOBYTE(v34) = *(_BYTE *)(v34 + 32);
    sub_20E3E2960(v37, v38, v34);
    *(_QWORD *)(v33 + 16) = v37;
    *(_QWORD *)(v33 + 24) = v38;
    *(_BYTE *)(v33 + 32) = v34;
    return v44;
  }
  return v19;
}

uint64_t sub_20E3E2950(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_unknownObjectRetain();
  else
    return swift_retain();
}

uint64_t sub_20E3E2960(uint64_t result, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return sub_20E3E592C(result);
  else
    return swift_retain();
}

uint64_t sub_20E3E296C(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  id *v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  unint64_t v13;

  sub_20E3E2B3C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4 = (a1 + *(unsigned __int8 *)(v3 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v4, AssociatedTypeWitness);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v7 = *(_DWORD *)(v6 + 80) & 0xF8 | 7;
  v8 = (v4 + v5 + v7) & ~v7;
  swift_release();
  swift_release();
  v9 = (id *)((v7 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v7);
  if (*(_QWORD *)(v6 + 64) <= 8uLL)
    v10 = 8;
  else
    v10 = *(_QWORD *)(v6 + 64);
  v11 = *((unsigned __int8 *)v9 + v10);
  if (v11 >= 3)
  {
    if (v10 <= 3)
      v12 = v10;
    else
      v12 = 4;
    __asm { BR              X12 }
  }
  if (v11 == 2)

  else
    (*(void (**)(void))(v6 + 8))();
  v13 = (((v7 + 16) & ~v7) + (v10 & 0xFFFFFFFFFFFFFFF8) + v8 + 16) & 0xFFFFFFFFFFFFFFF8;
  j__swift_release(*(_QWORD *)v13, *(unsigned __int8 *)(v13 + 8));
  return sub_20E3E2B4C(*(_QWORD *)(v13 + 16), *(_QWORD *)(v13 + 24), *(_BYTE *)(v13 + 32));
}

uint64_t sub_20E3E2B3C(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_unknownObjectRelease();
  else
    return swift_release();
}

uint64_t sub_20E3E2B4C(uint64_t result, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return sub_20E3CF5C0(result);
  else
    return swift_release();
}

uint64_t sub_20E3E2B58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  id *v22;
  uint64_t v23;
  unsigned int v24;
  uint64_t v25;
  id v26;
  id v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v36;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 16);
  sub_20E3E2950(*(_QWORD *)a2, v5, v6);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v9 + 17 + a1) & ~v9;
  v11 = (v9 + 17 + a2) & ~v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v10, v11, AssociatedTypeWitness);
  v12 = *(_QWORD *)(v8 + 64);
  v13 = swift_getAssociatedTypeWitness();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_DWORD *)(v14 + 80) & 0xF8;
  v16 = v15 | 7;
  v17 = v12 + (v15 | 7);
  v18 = (_QWORD *)((v17 + v11) & ~(v15 | 7));
  v36 = (_QWORD *)((v17 + v10) & ~(v15 | 7));
  *v36 = *v18;
  v19 = (_QWORD *)(((unint64_t)v36 + 15) & 0xFFFFFFFFFFFFFFF8);
  v20 = (_QWORD *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v19 = *v20;
  v15 += 15;
  v21 = (_QWORD *)(((unint64_t)v19 + v15) & ~v16);
  v22 = (id *)(((unint64_t)v20 + v15) & ~v16);
  if (*(_QWORD *)(v14 + 64) <= 8uLL)
    v23 = 8;
  else
    v23 = *(_QWORD *)(v14 + 64);
  v24 = *((unsigned __int8 *)v22 + v23);
  swift_retain();
  swift_retain();
  if (v24 >= 3)
  {
    if (v23 <= 3)
      v25 = v23;
    else
      v25 = 4;
    __asm { BR              X11 }
  }
  if (v24 == 2)
  {
    v26 = *v22;
    v27 = *v22;
    *v21 = v26;
    *((_BYTE *)v21 + v23) = 2;
  }
  else
  {
    (*(void (**)(_QWORD *, id *, uint64_t))(v14 + 16))(v21, v22, v13);
    *((_BYTE *)v21 + v23) = v24 == 1;
  }
  *(_QWORD *)(((unint64_t)v21 + v23 + 8) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v22 + v23 + 8) & 0xFFFFFFFFFFFFF8);
  v28 = ((v16 + 16) & ~v16) + (v23 & 0xFFFFFFFFFFFFFFF8) + 16;
  v29 = ((unint64_t)v36 + v28) & 0xFFFFFFFFFFFFFFF8;
  v30 = ((unint64_t)v18 + v28) & 0xFFFFFFFFFFFFFFF8;
  v31 = *(_QWORD *)v30;
  v32 = *(_BYTE *)(v30 + 8);
  j__swift_retain(*(_QWORD *)v30);
  *(_QWORD *)v29 = v31;
  *(_BYTE *)(v29 + 8) = v32;
  v33 = *(_QWORD *)(v30 + 16);
  v34 = *(_QWORD *)(v30 + 24);
  LOBYTE(v30) = *(_BYTE *)(v30 + 32);
  sub_20E3E2960(v33, v34, v30);
  *(_QWORD *)(v29 + 16) = v33;
  *(_QWORD *)(v29 + 24) = v34;
  *(_BYTE *)(v29 + 32) = v30;
  return a1;
}

uint64_t sub_20E3E2E28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  id *v27;
  uint64_t v28;
  unsigned int v29;
  uint64_t v30;
  unsigned int v31;
  uint64_t v32;
  id v33;
  id v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v48;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 16);
  sub_20E3E2950(*(_QWORD *)a2, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  sub_20E3E2B3C(v7, v8, v9);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = (v12 + 17 + a1) & ~v12;
  v14 = (v12 + 17 + a2) & ~v12;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 24))(v13, v14, AssociatedTypeWitness);
  v15 = *(_QWORD *)(v11 + 64);
  v16 = swift_getAssociatedTypeWitness();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_DWORD *)(v17 + 80) & 0xF8;
  v19 = v18 | 7;
  v20 = v15 + (v18 | 7);
  v48 = ~(v18 | 7);
  v21 = (_QWORD *)((v20 + v13) & v48);
  v22 = (_QWORD *)((v20 + v14) & v48);
  *v21 = *v22;
  swift_retain();
  swift_release();
  v23 = (_QWORD *)(((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8);
  v24 = (_QWORD *)(((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v23 = *v24;
  swift_retain();
  swift_release();
  v25 = v18 + 15;
  v26 = ((unint64_t)v23 + v18 + 15) & v48;
  v27 = (id *)(((unint64_t)v24 + v25) & ~v19);
  if (*(_QWORD *)(v17 + 64) <= 8uLL)
    v28 = 8;
  else
    v28 = *(_QWORD *)(v17 + 64);
  if ((id *)v26 != v27)
  {
    v29 = *(unsigned __int8 *)(v26 + v28);
    if (v29 >= 3)
    {
      if (v28 <= 3)
        v30 = v28;
      else
        v30 = 4;
      __asm { BR              X12 }
    }
    if (v29 == 2)

    else
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v26, v16);
    v31 = *((unsigned __int8 *)v27 + v28);
    if (v31 >= 3)
    {
      if (v28 <= 3)
        v32 = v28;
      else
        v32 = 4;
      __asm { BR              X12 }
    }
    if (v31 == 2)
    {
      v33 = *v27;
      v34 = *v27;
      *(_QWORD *)v26 = v33;
      *(_BYTE *)(v26 + v28) = 2;
    }
    else if (v31 == 1)
    {
      (*(void (**)(uint64_t, id *, uint64_t))(v17 + 16))(v26, v27, v16);
      *(_BYTE *)(v26 + v28) = 1;
    }
    else
    {
      (*(void (**)(uint64_t, id *, uint64_t))(v17 + 16))(v26, v27, v16);
      *(_BYTE *)(v26 + v28) = 0;
    }
  }
  *(_QWORD *)(((v26 | 7) + v28 + 1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((((unint64_t)v27 | 7) + v28 + 1) & 0xFFFFFFFFFFFFF8);
  v35 = ((v19 + 16) & v48) + (v28 & 0xFFFFFFFFFFFFFFF8) + 16;
  v36 = ((unint64_t)v21 + v35) & 0xFFFFFFFFFFFFFFF8;
  v37 = ((unint64_t)v22 + v35) & 0xFFFFFFFFFFFFFFF8;
  v38 = *(_QWORD *)v37;
  v39 = *(_BYTE *)(v37 + 8);
  j__swift_retain(*(_QWORD *)v37);
  v40 = *(_QWORD *)v36;
  v41 = *(unsigned __int8 *)(v36 + 8);
  *(_QWORD *)v36 = v38;
  *(_BYTE *)(v36 + 8) = v39;
  j__swift_release(v40, v41);
  v42 = *(_QWORD *)(v37 + 16);
  v43 = *(_QWORD *)(v37 + 24);
  LOBYTE(v37) = *(_BYTE *)(v37 + 32);
  sub_20E3E2960(v42, v43, v37);
  v44 = *(_QWORD *)(v36 + 16);
  v45 = *(_QWORD *)(v36 + 24);
  v46 = *(_BYTE *)(v36 + 32);
  *(_QWORD *)(v36 + 16) = v42;
  *(_QWORD *)(v36 + 24) = v43;
  *(_BYTE *)(v36 + 32) = v37;
  sub_20E3E2B4C(v44, v45, v46);
  return a1;
}

uint64_t sub_20E3E31E4(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  unint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  __int128 v29;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (v6 + 17 + a1) & ~v6;
  v8 = (v6 + 17 + a2) & ~v6;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v7, v8, AssociatedTypeWitness);
  v9 = *(_QWORD *)(v5 + 64);
  v10 = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_DWORD *)(v11 + 80) & 0xF8;
  v13 = v12 | 7;
  v14 = v9 + (v12 | 7);
  v15 = (_QWORD *)((v14 + v7) & ~(v12 | 7));
  v16 = (_QWORD *)((v14 + v8) & ~(v12 | 7));
  *v15 = *v16;
  v17 = (_QWORD *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8);
  v18 = (_QWORD *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v17 = *v18;
  v12 += 15;
  v19 = (unint64_t)v17 + v12;
  v20 = (_QWORD *)(v19 & ~v13);
  v21 = (_QWORD *)(((unint64_t)v18 + v12) & ~v13);
  if (*(_QWORD *)(v11 + 64) <= 8uLL)
    v22 = 8;
  else
    v22 = *(_QWORD *)(v11 + 64);
  v23 = *((unsigned __int8 *)v21 + v22);
  if (v23 >= 3)
  {
    if (v22 <= 3)
      v24 = v22;
    else
      v24 = 4;
    __asm { BR              X13 }
  }
  if (v23 == 2)
  {
    *v20 = *v21;
    *((_BYTE *)v20 + v22) = 2;
  }
  else if (v23 == 1)
  {
    (*(void (**)(unint64_t, _QWORD *, uint64_t))(v11 + 32))(v19 & ~v13, v21, v10);
    *((_BYTE *)v20 + v22) = 1;
  }
  else
  {
    (*(void (**)(unint64_t, _QWORD *, uint64_t))(v11 + 32))(v19 & ~v13, v21, v10);
    *((_BYTE *)v20 + v22) = 0;
  }
  *(_QWORD *)(((unint64_t)v20 + v22 + 8) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v21 + v22 + 8) & 0xFFFFFFFFFFFFF8);
  v25 = ((v13 + 16) & ~v13) + (v22 & 0xFFFFFFFFFFFFFFF8) + 16;
  v26 = ((unint64_t)v15 + v25) & 0xFFFFFFFFFFFFFFF8;
  v27 = ((unint64_t)v16 + v25) & 0xFFFFFFFFFFFFFFF8;
  v28 = *(_QWORD *)v27;
  *(_BYTE *)(v26 + 8) = *(_BYTE *)(v27 + 8);
  *(_QWORD *)v26 = v28;
  v29 = *(_OWORD *)(v27 + 16);
  *(_BYTE *)(v26 + 32) = *(_BYTE *)(v27 + 32);
  *(_OWORD *)(v26 + 16) = v29;
  return a1;
}

uint64_t sub_20E3E3454(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unsigned int v28;
  uint64_t v29;
  unsigned int v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  char v41;

  v4 = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v4;
  sub_20E3E2B3C(v5, v6, v7);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = (v10 + 17 + a1) & ~v10;
  v12 = (v10 + 17 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 40))(v11, v12, AssociatedTypeWitness);
  v13 = *(_QWORD *)(v9 + 64);
  v14 = swift_getAssociatedTypeWitness();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_DWORD *)(v15 + 80) & 0xF8;
  v17 = v16 | 7;
  v18 = v13 + (v16 | 7);
  v19 = ~(v16 | 7);
  v20 = (_QWORD *)((v18 + v11) & v19);
  v21 = (_QWORD *)((v18 + v12) & v19);
  *v20 = *v21;
  swift_release();
  v22 = (_QWORD *)(((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF8);
  v23 = (_QWORD *)(((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v22 = *v23;
  swift_release();
  v24 = v16 + 15;
  v25 = ((unint64_t)v22 + v16 + 15) & v19;
  v26 = ((unint64_t)v23 + v24) & ~v17;
  if (*(_QWORD *)(v15 + 64) <= 8uLL)
    v27 = 8;
  else
    v27 = *(_QWORD *)(v15 + 64);
  if (v25 != v26)
  {
    v28 = *(unsigned __int8 *)(v25 + v27);
    if (v28 >= 3)
    {
      if (v27 <= 3)
        v29 = v27;
      else
        v29 = 4;
      __asm { BR              X12 }
    }
    if (v28 == 2)

    else
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v25, v14);
    v30 = *(unsigned __int8 *)(v26 + v27);
    if (v30 >= 3)
    {
      if (v27 <= 3)
        v31 = v27;
      else
        v31 = 4;
      __asm { BR              X12 }
    }
    if (v30 == 2)
    {
      *(_QWORD *)v25 = *(_QWORD *)v26;
      *(_BYTE *)(v25 + v27) = 2;
    }
    else if (v30 == 1)
    {
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v15 + 32))(v25, v26, v14);
      *(_BYTE *)(v25 + v27) = 1;
    }
    else
    {
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v15 + 32))(v25, v26, v14);
      *(_BYTE *)(v25 + v27) = 0;
    }
  }
  *(_QWORD *)(((v25 | 7) + v27 + 1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((v26 | 7) + v27 + 1) & 0xFFFFFFFFFFFFF8);
  v32 = ((v17 + 16) & v19) + (v27 & 0xFFFFFFFFFFFFFFF8) + 16;
  v33 = ((unint64_t)v20 + v32) & 0xFFFFFFFFFFFFFFF8;
  v34 = ((unint64_t)v21 + v32) & 0xFFFFFFFFFFFFFFF8;
  v35 = *(_BYTE *)(v34 + 8);
  v36 = *(_QWORD *)v33;
  v37 = *(unsigned __int8 *)(v33 + 8);
  *(_QWORD *)v33 = *(_QWORD *)v34;
  *(_BYTE *)(v33 + 8) = v35;
  j__swift_release(v36, v37);
  v38 = *(_BYTE *)(v34 + 32);
  v39 = *(_QWORD *)(v33 + 16);
  v40 = *(_QWORD *)(v33 + 24);
  v41 = *(_BYTE *)(v33 + 32);
  *(_OWORD *)(v33 + 16) = *(_OWORD *)(v34 + 16);
  *(_BYTE *)(v33 + 32) = v38;
  sub_20E3E2B4C(v39, v40, v41);
  return a1;
}

uint64_t sub_20E3E37C0(uint64_t a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v19;
  unint64_t v20;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  if (*(_QWORD *)(v7 + 64) <= 8uLL)
    LODWORD(v8) = 8;
  else
    v8 = *(_QWORD *)(v7 + 64);
  if (v6 <= 0x7FFFFFFF)
    v9 = 0x7FFFFFFF;
  else
    v9 = v6;
  if (!a2)
    return 0;
  v10 = *(unsigned __int8 *)(v5 + 80);
  v11 = *(_QWORD *)(v5 + 64);
  v12 = *(_DWORD *)(v7 + 80) & 0xF8;
  v13 = v12 | 7;
  if (v9 < a2)
  {
    v14 = (v8 & 0xFFFFFFF8)
        + ((v12 + 23) & ~(_DWORD)v13)
        + ((v11 + v13 + ((v10 + 17) & ~(_DWORD)v10)) & ~(_DWORD)v13)
        + 49;
    if (v14 < 4)
      v15 = ((a2 - v9 + 255) >> (8 * v14)) + 1;
    else
      v15 = 2;
    if (v15 >= 0x10000)
      v16 = 4;
    else
      v16 = 2;
    if (v15 < 0x100)
      v16 = 1;
    if (v15 >= 2)
      v17 = v16;
    else
      v17 = 0;
    __asm { BR              X16 }
  }
  v19 = (a1 + v10 + 17) & ~v10;
  if (v6 >= 0x7FFFFFFF)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v19, v6, AssociatedTypeWitness);
  v20 = *(_QWORD *)((((v19 + v11 + v13) & ~v13) + 15) & 0xFFFFFFFFFFFFF8);
  if (v20 >= 0xFFFFFFFF)
    LODWORD(v20) = -1;
  return (v20 + 1);
}

void sub_20E3E39CC(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unint64_t v9;
  unsigned int v10;
  uint64_t v11;
  size_t v12;
  unsigned int v13;
  int v14;
  int v15;
  unsigned int v16;

  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v9 = *(_QWORD *)(v8 + 64);
  if (v9 <= 8)
    v9 = 8;
  if (v7 <= 0x7FFFFFFF)
    v10 = 0x7FFFFFFF;
  else
    v10 = v7;
  v11 = *(_DWORD *)(v8 + 80) & 0xF8;
  v12 = ((v11 + 23) & ~(v11 | 7))
      + (v9 & 0xFFFFFFFFFFFFFFF8)
      + ((*(_QWORD *)(v6 + 64)
        + (v11 | 7)
        + ((*(unsigned __int8 *)(v6 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))) & ~(v11 | 7))
      + 49;
  if (v10 >= a3)
  {
    v15 = 0;
    if (v10 >= a2)
      goto LABEL_19;
  }
  else
  {
    if (v12 <= 3)
      v13 = ((a3 - v10 + 255) >> (8 * v12)) + 1;
    else
      v13 = 2;
    if (v13 >= 0x10000)
      v14 = 4;
    else
      v14 = 2;
    if (v13 < 0x100)
      v14 = 1;
    if (v13 >= 2)
      v15 = v14;
    else
      v15 = 0;
    if (v10 >= a2)
LABEL_19:
      __asm { BR              X17 }
  }
  if (v12 >= 4)
    v16 = ~v10 + a2;
  else
    v16 = (~(_BYTE)v10 + a2);
  bzero(a1, v12);
  if ((_DWORD)v12 == 1)
    *a1 = v16;
  else
    *(_DWORD *)a1 = v16;
  __asm { BR              X10 }
}

void sub_20E3E3B84()
{
  char v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v1 + v2) = v0;
  JUMPOUT(0x20E3E3C38);
}

void sub_20E3E3B8C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v1 + v2) = 0;
  if (v0)
    JUMPOUT(0x20E3E3B94);
  JUMPOUT(0x20E3E3C38);
}

void sub_20E3E3BFC()
{
  __int16 v0;
  uint64_t v1;
  uint64_t v2;

  *(_WORD *)(v1 + v2) = v0;
  JUMPOUT(0x20E3E3C38);
}

void sub_20E3E3C04()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v1 + v2) = v0;
  JUMPOUT(0x20E3E3C38);
}

uint64_t sub_20E3E3C0C()
{
  uint64_t v0;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_WORD *)(v9 + v12) = 0;
  if (!(_DWORD)v8)
    goto LABEL_6;
  v0 = (v9 + v5 + 17) & v7;
  if (v11 < 0x7FFFFFFF)
  {
    v2 = v0 + v3 + v4;
    if ((v8 & 0x80000000) != 0)
      JUMPOUT(0x20E3E3C18);
    *(_QWORD *)(((v2 & v6) + 15) & 0xFFFFFFFFFFFFF8) = (v8 - 1);
LABEL_6:
    JUMPOUT(0x20E3E3C38);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(v0, v8, v11, v10);
}

uint64_t sub_20E3E3C58()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_20E3E3C74(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x212BBDF90](&unk_20E4A9A68);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_20E3E3CA0()
{
  uint64_t AssociatedTypeWitness;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  swift_getAssociatedTypeWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  type metadata accessor for IntentResult(255, AssociatedTypeWitness, v1, v2);
  v3 = sub_20E4A4778();
  return MEMORY[0x212BBBCE0](v3);
}

uint64_t sub_20E3E3D30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v13;
  uint64_t AssociatedTypeWitness;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v27;

  v8[5] = a8;
  v8[6] = v27;
  v8[3] = a6;
  v8[4] = a7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A19890);
  v8[7] = swift_task_alloc();
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19898);
  v8[8] = v13;
  v8[9] = *(_QWORD *)(v13 - 8);
  v8[10] = swift_task_alloc();
  swift_getAssociatedTypeWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8[11] = AssociatedTypeWitness;
  v17 = type metadata accessor for IntentResult(0, AssociatedTypeWitness, v15, v16);
  v8[12] = v17;
  v8[13] = *(_QWORD *)(v17 - 8);
  v8[14] = swift_task_alloc();
  v20 = type metadata accessor for IntentResult._State(0, AssociatedTypeWitness, v18, v19);
  v8[15] = v20;
  v8[16] = *(_QWORD *)(v20 - 8);
  v8[17] = swift_task_alloc();
  v8[18] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8[19] = swift_task_alloc();
  v21 = swift_getAssociatedTypeWitness();
  v8[20] = v21;
  v8[21] = *(_QWORD *)(v21 - 8);
  v8[22] = swift_task_alloc();
  v8[23] = swift_task_alloc();
  sub_20E4A60E0();
  v8[24] = swift_task_alloc();
  v22 = swift_getAssociatedTypeWitness();
  v8[25] = v22;
  v8[26] = *(_QWORD *)(v22 - 8);
  v8[27] = swift_task_alloc();
  v23 = swift_checkMetadataState();
  v8[28] = v23;
  v8[29] = *(_QWORD *)(v23 - 8);
  v8[30] = swift_task_alloc();
  v8[31] = swift_task_alloc();
  v24 = swift_task_alloc();
  v8[32] = v24;
  v8[33] = sub_20E4A5DF8();
  v8[34] = sub_20E4A5DEC();
  v8[2] = a4;
  v25 = (_QWORD *)swift_task_alloc();
  v8[35] = v25;
  *v25 = v8;
  v25[1] = sub_20E3E3FF4;
  return IntentDispatchAction.callAsFunction<A>(_:)(v24, a5, a7, a8);
}

uint64_t sub_20E3E3FF4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  *(_QWORD *)(*v1 + 288) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_20E4A5DBC();
  }
  else
  {
    *(_QWORD *)(v2 + 296) = sub_20E4A5DBC();
    *(_QWORD *)(v2 + 304) = v3;
  }
  return swift_task_switch();
}

uint64_t sub_20E3E4090()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t, uint64_t);
  _QWORD *v5;

  v2 = v0[31];
  v1 = v0[32];
  v3 = v0[28];
  v4 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[29] + 16);
  v0[39] = v4;
  v4(v2, v1, v3);
  sub_20E4A5E88();
  v0[40] = sub_20E4A5DEC();
  v0[41] = swift_getAssociatedConformanceWitness();
  v5 = (_QWORD *)swift_task_alloc();
  v0[42] = v5;
  *v5 = v0;
  v5[1] = sub_20E3E4180;
  return sub_20E4A5DE0();
}

uint64_t sub_20E3E4180()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_20E3E41E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  void (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 88);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 208) + 8))(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 200));
    swift_release();
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v2 + 32))(*(_QWORD *)(v0 + 152), v1, v3);
    if ((sub_20E4A5E70() & 1) == 0)
    {
      v24 = *(_QWORD *)(v0 + 144);
      v25 = *(_QWORD *)(v0 + 136);
      v37 = *(_QWORD *)(v0 + 128);
      v38 = *(_QWORD *)(v0 + 152);
      v27 = *(_QWORD *)(v0 + 112);
      v26 = *(_QWORD *)(v0 + 120);
      v28 = *(_QWORD *)(v0 + 88);
      v39 = *(_QWORD *)(v0 + 104);
      v40 = *(_QWORD *)(v0 + 96);
      (*(void (**)(uint64_t))(v24 + 16))(v25);
      swift_storeEnumTagMultiPayload();
      sub_20E3E3CA0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 40))(v27, v25, v26);
      sub_20E3E5408(v27);
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v27, v40);
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v38, v28);
      *(_QWORD *)(v0 + 320) = sub_20E4A5DEC();
      *(_QWORD *)(v0 + 328) = swift_getAssociatedConformanceWitness();
      v29 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 336) = v29;
      *v29 = v0;
      v29[1] = sub_20E3E4180;
      return sub_20E4A5DE0();
    }
    v5 = *(_QWORD *)(v0 + 208);
    v4 = *(_QWORD *)(v0 + 216);
    v6 = *(_QWORD *)(v0 + 200);
    v8 = *(_QWORD *)(v0 + 144);
    v7 = *(_QWORD *)(v0 + 152);
    v9 = *(_QWORD *)(v0 + 88);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  }
  v10 = *(_QWORD *)(v0 + 72);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 312))(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 224));
  v11 = swift_dynamicCast();
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
  if ((v11 & 1) != 0)
  {
    v14 = *(_QWORD *)(v0 + 72);
    v13 = *(_QWORD *)(v0 + 80);
    v16 = *(_QWORD *)(v0 + 56);
    v15 = *(_QWORD *)(v0 + 64);
    v12(v16, 0, 1, v15);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(v13, v16, v15);
    if ((sub_20E4A49C4() & 1) != 0 || (sub_20E4A5E70() & 1) != 0)
    {
      v17 = *(_QWORD *)(v0 + 256);
      v18 = *(_QWORD *)(v0 + 224);
      v19 = *(_QWORD *)(v0 + 232);
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 72) + 8))(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 64));
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
    }
    else
    {
      v31 = *(_QWORD *)(v0 + 256);
      v32 = *(_QWORD *)(v0 + 224);
      v33 = *(_QWORD *)(v0 + 232);
      v35 = *(_QWORD *)(v0 + 72);
      v34 = *(_QWORD *)(v0 + 80);
      v36 = *(_QWORD *)(v0 + 64);
      IntentViewLogFinishedSequenceError()();
      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v34, v36);
      (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v31, v32);
    }
  }
  else
  {
    v20 = *(_QWORD *)(v0 + 256);
    v21 = *(_QWORD *)(v0 + 224);
    v22 = *(_QWORD *)(v0 + 232);
    v23 = *(_QWORD *)(v0 + 56);
    v12(v23, 1, 1, *(_QWORD *)(v0 + 64));
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
    sub_20E39D1F8(v23, &qword_254A19890);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20E3E45C0()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v8;
  uint64_t v9;

  swift_release();
  v1 = *(void **)(v0 + 288);
  v3 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD **)(v0 + 136);
  v5 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 120);
  v8 = *(_QWORD *)(v0 + 104);
  v9 = *(_QWORD *)(v0 + 96);
  *v2 = v1;
  swift_storeEnumTagMultiPayload();
  v6 = v1;
  sub_20E3E3CA0();
  (*(void (**)(uint64_t, _QWORD *, uint64_t))(v3 + 40))(v5, v2, v4);
  sub_20E3E5408(v5);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v5, v9);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20E3E4730()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v20;
  uint64_t v21;

  v2 = *(_QWORD *)(v0 + 176);
  v1 = *(_QWORD *)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 160);
  v4 = *(_QWORD *)(v0 + 168);
  swift_release();
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32);
  v5(v2, v1, v3);
  swift_getAssociatedConformanceWitness();
  v6 = sub_20E4A6338();
  v7 = *(_QWORD *)(v0 + 176);
  if (v6)
  {
    v8 = (void *)v6;
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 168) + 8))(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 160));
  }
  else
  {
    v9 = *(_QWORD *)(v0 + 160);
    v8 = (void *)swift_allocError();
    v5(v10, v7, v9);
  }
  v11 = *(_QWORD *)(v0 + 256);
  v12 = *(_QWORD *)(v0 + 224);
  v13 = *(_QWORD *)(v0 + 232);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 208) + 8))(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 200));
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  v15 = *(_QWORD *)(v0 + 128);
  v14 = *(_QWORD **)(v0 + 136);
  v17 = *(_QWORD *)(v0 + 112);
  v16 = *(_QWORD *)(v0 + 120);
  v20 = *(_QWORD *)(v0 + 104);
  v21 = *(_QWORD *)(v0 + 96);
  *v14 = v8;
  swift_storeEnumTagMultiPayload();
  v18 = v8;
  sub_20E3E3CA0();
  (*(void (**)(uint64_t, _QWORD *, uint64_t))(v15 + 40))(v17, v14, v16);
  sub_20E3E5408(v17);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v17, v21);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20E3E496C(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 88);
}

uint64_t sub_20E3E4974(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x212BBDF90](&unk_20E4A9A14);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_20E3E49A0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E3E49D4(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x212BBDF90](&unk_20E4A99DC);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_20E3E4A00(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v5 = (uint64_t (*)(void))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v3;
  *v3 = v2;
  v3[1] = sub_20E3B50B0;
  return v5();
}

uint64_t sub_20E3E4A60(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_20E3CF4EC;
  return v6(a1);
}

uint64_t sub_20E3E4AC4()
{
  uint64_t v0;
  uint64_t result;

  if (*(_QWORD *)(v0 + 16))
  {
    swift_retain();
    sub_20E4A5E64();
    return swift_release();
  }
  return result;
}

uint64_t sub_20E3E4B1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  char *v37;
  void (*v38)(char *, double);
  uint64_t v39;
  void (*v40)(char *, uint64_t);
  void (*v41)(char *, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  uint64_t result;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  unint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;

  v91 = a3;
  v82 = a2;
  LODWORD(v87) = a1;
  v6 = *v4;
  v7 = *(_QWORD *)(*v4 + 80);
  v85 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v83 = (char *)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A190F8);
  MEMORY[0x24BDAC7A8](v9);
  v92 = (uint64_t)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v6 + 96);
  v88 = *(_QWORD *)(v6 + 88);
  v90 = v7;
  swift_getAssociatedTypeWitness();
  v89 = v11;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v13 = sub_20E4A60E0();
  v74 = *(_QWORD *)(v13 - 8);
  v75 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v73 = (char *)&v72 - v14;
  v76 = AssociatedTypeWitness;
  v17 = type metadata accessor for IntentResult(0, AssociatedTypeWitness, v15, v16);
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v77 = (char *)&v72 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v72 - v21;
  v78 = v23;
  v24 = sub_20E4A4778();
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v79 = (char *)&v72 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v27);
  v29 = (char *)&v72 - v28;
  MEMORY[0x24BDAC7A8](v30);
  v32 = (char *)&v72 - v31;
  v81 = v33;
  v35 = MEMORY[0x24BDAC7A8](v34);
  v37 = (char *)&v72 - v36;
  v80 = *a4;
  v38 = *(void (**)(char *, double))(v25 + 16);
  v39 = v91;
  v38((char *)&v72 - v36, v35);
  v86 = v4;
  if ((v87 & 1) == 0)
  {
    v87 = v18;
    v42 = v4[2];
    ((void (*)(char *, char *, uint64_t))v38)(v32, v37, v24);
    v41 = (void (*)(char *, uint64_t, uint64_t))v38;
    if (v42)
    {
      v40 = *(void (**)(char *, uint64_t))(v25 + 8);
      v40(v32, v24);
      v40(v37, v24);
      v39 = v91;
      ((void (*)(char *, uint64_t, uint64_t))v38)(v29, v91, v24);
      v43 = v78;
    }
    else
    {
      sub_20E3E3CA0();
      v44 = v73;
      v43 = v78;
      IntentResult.data.getter(v78, v45, v46, v73);
      (*(void (**)(char *, uint64_t))(v87 + 8))(v22, v43);
      v40 = *(void (**)(char *, uint64_t))(v25 + 8);
      v40(v32, v24);
      v40(v37, v24);
      v47 = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v76 - 8) + 48))(v44, 1);
      (*(void (**)(char *, uint64_t))(v74 + 8))(v44, v75);
      v39 = v91;
      v41(v29, v91, v24);
      if (v47 == 1)
        goto LABEL_3;
    }
    v48 = v77;
    sub_20E3E3CA0();
    v52 = sub_20E3BFDB8(v43, v49, v50, v51);
    (*(void (**)(char *, uint64_t))(v87 + 8))(v48, v43);
    result = ((uint64_t (*)(char *, uint64_t))v40)(v29, v24);
    if (!v52)
      return result;
    goto LABEL_8;
  }
  v40 = *(void (**)(char *, uint64_t))(v25 + 8);
  v40(v37, v24);
  ((void (*)(char *, uint64_t, uint64_t))v38)(v29, v39, v24);
  v41 = (void (*)(char *, uint64_t, uint64_t))v38;
LABEL_3:
  v40(v29, v24);
LABEL_8:
  v54 = sub_20E4A5E58();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v92, 1, 1, v54);
  v55 = v85;
  v56 = v83;
  v57 = v90;
  (*(void (**)(char *, uint64_t, uint64_t))(v85 + 16))(v83, v82, v90);
  v58 = v79;
  v41(v79, v39, v24);
  sub_20E4A5DF8();
  v59 = v80;
  swift_retain();
  v60 = sub_20E4A5DEC();
  v61 = (*(unsigned __int8 *)(v55 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
  v62 = *(unsigned __int8 *)(v25 + 80);
  v91 = v24;
  v63 = v58;
  v64 = v25;
  v65 = (v84 + v61 + v62) & ~v62;
  v66 = (char *)swift_allocObject();
  v67 = MEMORY[0x24BEE6930];
  *((_QWORD *)v66 + 2) = v60;
  *((_QWORD *)v66 + 3) = v67;
  v68 = v88;
  *((_QWORD *)v66 + 4) = v57;
  *((_QWORD *)v66 + 5) = v68;
  *((_QWORD *)v66 + 6) = v89;
  *((_QWORD *)v66 + 7) = v59;
  (*(void (**)(char *, char *, uint64_t))(v55 + 32))(&v66[v61], v56, v57);
  (*(void (**)(char *, char *, uint64_t))(v64 + 32))(&v66[v65], v63, v91);
  v69 = v92;
  v70 = sub_20E3DF694(v92, (uint64_t)&unk_254A19880, (uint64_t)v66);
  sub_20E39D1F8(v69, &qword_254A190F8);
  v71 = v86;
  sub_20E3E4AC4();
  v71[2] = v70;
  return swift_release();
}

uint64_t sub_20E3E5064()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int EnumCaseMultiPayload;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v3 + *(_QWORD *)(v2 + 64);
  swift_getAssociatedTypeWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  type metadata accessor for IntentResult(255, AssociatedTypeWitness, v6, v7);
  v8 = sub_20E4A4778();
  v9 = *(unsigned __int8 *)(*(_QWORD *)(v8 - 8) + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  swift_release();
  v10 = (id *)(v0 + ((v4 + v9) & ~v9) + *(int *)(v8 + 32));
  type metadata accessor for IntentResult._State(0, AssociatedTypeWitness, v11, v12);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {

  }
  else if (EnumCaseMultiPayload <= 1)
  {
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v10, AssociatedTypeWitness);
  }
  return swift_deallocObject();
}

uint64_t sub_20E3E51C4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;

  v5 = v1[4];
  v4 = v1[5];
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = v7 + *(_QWORD *)(v6 + 64);
  swift_getAssociatedTypeWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  type metadata accessor for IntentResult(255, AssociatedTypeWitness, v10, v11);
  v12 = *(unsigned __int8 *)(*(_QWORD *)(sub_20E4A4778() - 8) + 80);
  v13 = (v8 + v12) & ~v12;
  v14 = v1[2];
  v15 = v1[3];
  v16 = v1[7];
  v17 = (uint64_t)v1 + v7;
  v18 = (uint64_t)v1 + v13;
  v19 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v19;
  *v19 = v2;
  v19[1] = sub_20E3B50B0;
  return sub_20E3E3D30(a1, v14, v15, v16, v17, v18, v5, v4);
}

uint64_t sub_20E3E52EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A190F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20E3E5334()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E3E5358(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = type metadata accessor for IntentResult(0, AssociatedTypeWitness, v3, v4);
  v6 = MEMORY[0x24BDAC7A8](v5);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v7 + 16))((char *)&v10 - v8, a1, v5, v6);
  sub_20E4A4778();
  return sub_20E4A4730();
}

uint64_t sub_20E3E5408(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  swift_getAssociatedTypeWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = type metadata accessor for IntentResult(0, AssociatedTypeWitness, v3, v4);
  v6 = MEMORY[0x24BDAC7A8](v5);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v7 + 16))((char *)&v10 - v8, a1, v5, v6);
  sub_20E4A4778();
  return sub_20E4A4730();
}

void type metadata accessor for _IntentDispatchViewModifier._DispatchID()
{
  JUMPOUT(0x212BBDEE8);
}

uint64_t sub_20E3E54EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_20E3E569C(sub_20E3E0878, a2, a3, a4);
}

uint64_t objectdestroy_20Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int EnumCaseMultiPayload;

  v5 = (int *)type metadata accessor for _IntentDispatchViewModifier(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
  v6 = *(unsigned __int8 *)(*((_QWORD *)v5 - 1) + 80);
  v7 = v4 + ((v6 + 32) & ~v6);
  sub_20E3E2B3C(*(_QWORD *)v7, *(_QWORD *)(v7 + 8), *(_BYTE *)(v7 + 16));
  v8 = v7 + v5[9];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v8, AssociatedTypeWitness);
  v10 = v7 + v5[10];
  swift_release();
  swift_release();
  v11 = swift_getAssociatedTypeWitness();
  type metadata accessor for IntentResult(255, v11, v12, v13);
  v14 = (id *)(v10 + *(int *)(sub_20E4A4778() + 32));
  type metadata accessor for IntentResult._State(0, v11, v15, v16);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {

  }
  else if (EnumCaseMultiPayload <= 1)
  {
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v14, v11);
  }
  j__swift_release(*(_QWORD *)(v7 + v5[11]), *(unsigned __int8 *)(v7 + v5[11] + 8));
  sub_20E3E2B4C(*(_QWORD *)(v7 + v5[12]), *(_QWORD *)(v7 + v5[12] + 8), *(_BYTE *)(v7 + v5[12] + 16));
  return swift_deallocObject();
}

uint64_t sub_20E3E5690(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_20E3E569C(sub_20E3E0C34, a2, a3, a4);
}

uint64_t sub_20E3E569C(uint64_t (*a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v4 + 24);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for _IntentDispatchViewModifier(0, v5, v6, a4) - 8)
                          + 80);
  return a1(v4 + ((v7 + 32) & ~v7), v5, v6);
}

uint64_t sub_20E3E5700(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = (int *)v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_20E3B50B0;
  return sub_20E47662C(a1, v4, v5, v6);
}

uint64_t sub_20E3E576C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E3E5790(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 32);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_20E3B50B0;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_254A198B0 + dword_254A198B0))(a1, v4);
}

uint64_t objectdestroy_26Tm()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E3E5840(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = (int *)v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_20E3B4E08;
  return sub_20E47662C(a1, v4, v5, v6);
}

uint64_t sub_20E3E58AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 32);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_20E3B4E08;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_254A198B0 + dword_254A198B0))(a1, v4);
}

uint64_t sub_20E3E592C(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t sub_20E3E593C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int EnumCaseMultiPayload;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v3 + *(_QWORD *)(v2 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  type metadata accessor for IntentResult(255, AssociatedTypeWitness, v6, v7);
  v8 = sub_20E4A4778();
  v9 = *(unsigned __int8 *)(*(_QWORD *)(v8 - 8) + 80);
  v10 = (v4 + v9) & ~v9;
  swift_unknownObjectRelease();
  if (*(_QWORD *)(v0 + 48))
    swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  swift_release();
  v11 = (id *)(v0 + v10 + *(int *)(v8 + 32));
  type metadata accessor for IntentResult._State(0, AssociatedTypeWitness, v12, v13);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {

  }
  else if (EnumCaseMultiPayload <= 1)
  {
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v11, AssociatedTypeWitness);
  }
  return swift_deallocObject();
}

uint64_t sub_20E3E5A88(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;

  v3 = *(_QWORD *)(v1[4] - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = v4 + *(_QWORD *)(v3 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  type metadata accessor for IntentResult(255, AssociatedTypeWitness, v7, v8);
  v9 = *(unsigned __int8 *)(*(_QWORD *)(sub_20E4A4778() - 8) + 80);
  v10 = (v5 + v9) & ~v9;
  v11 = v1[2];
  v12 = v1[3];
  v13 = v1[6];
  v14 = v1[7];
  v15 = v1[8];
  v16 = (uint64_t)v1 + v4;
  v17 = (uint64_t)v1 + v10;
  v18 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v18;
  *v18 = v2;
  v18[1] = sub_20E3B50B0;
  return sub_20E3E15E4(a1, v11, v12, v13, v14, v15, v16, v17);
}

unint64_t sub_20E3E5B90()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254A198E0[0];
  if (!qword_254A198E0[0])
  {
    v1 = sub_20E4A5DC8();
    result = MEMORY[0x212BBDF90](MEMORY[0x24BEE6848], v1);
    atomic_store(result, qword_254A198E0);
  }
  return result;
}

uint64_t sub_20E3E5BE0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 32))();
}

uint64_t sub_20E3E5C00()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_20E3E5C78(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    *(_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
  }
  return v4;
}

uint64_t sub_20E3E5D28(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 8))();
}

uint64_t sub_20E3E5D38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(void))(v5 + 16))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_20E3E5D94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(void))(v5 + 24))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_20E3E5DF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(void))(v5 + 32))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_20E3E5E4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(void))(v5 + 40))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_20E3E5EA8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 >= a2)
  {
    if (v5)
      return (*(uint64_t (**)(void))(v4 + 48))();
    return 0;
  }
  if (((((*(_QWORD *)(v4 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
    v6 = 2;
  else
    v6 = a2 - v5 + 1;
  if (v6 >= 0x10000)
    v7 = 4;
  else
    v7 = 2;
  if (v6 < 0x100)
    v7 = 1;
  if (v6 >= 2)
    v8 = v7;
  else
    v8 = 0;
  return ((uint64_t (*)(void))((char *)&loc_20E3E5F18 + 4 * byte_20E4A9827[v8]))();
}

void sub_20E3E5F70(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  int v11;
  unsigned int v12;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7 >= a3)
  {
    v11 = 0;
    if (a2 <= v7)
      goto LABEL_14;
  }
  else
  {
    v8 = a3 - v7;
    if (((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v9 = v8 + 1;
    else
      v9 = 2;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    if (a2 <= v7)
LABEL_14:
      __asm { BR              X11 }
  }
  if (((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    v12 = ~v7 + a2;
    bzero(a1, ((*(_QWORD *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
    *a1 = v12;
  }
  __asm { BR              X10 }
}

void sub_20E3E6058()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_20E3E6060(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x20E3E6068);
}

void sub_20E3E6084()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

void sub_20E3E608C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
}

uint64_t sub_20E3E6094(uint64_t a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_WORD *)(v4 + v5) = 0;
  if (!a2)
    JUMPOUT(0x20E3E609CLL);
  return (*(uint64_t (**)(uint64_t))(v3 + 56))(v4);
}

void sub_20E3E60B4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  v4 = type metadata accessor for _IntentDispatchViewModifier(255, *a1, a1[1], a4);
  MEMORY[0x212BBDF90](&unk_20E4A9A68, v4);
  sub_20E4A3EA8();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for _IntentDispatchViewModifier._DispatchID();
}

uint64_t sub_20E3E6168(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[2];
  _QWORD v14[2];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v5 = MEMORY[0x212BBDF90](MEMORY[0x24BDEFB78], v1);
  v6 = MEMORY[0x212BBDF90](&unk_20E4A9B20, a1);
  v15 = v1;
  v16 = a1;
  v17 = v5;
  v18 = v6;
  MEMORY[0x212BBDF30](255, &v15, MEMORY[0x24BDF3908], 0);
  v7 = sub_20E4A39D4();
  type metadata accessor for _IntentProgress(255, v2, v3, v8);
  swift_getFunctionTypeMetadata1();
  sub_20E4A60E0();
  v9 = sub_20E4A3FF8();
  v10 = sub_20E4A39D4();
  v15 = v1;
  v16 = a1;
  v17 = v5;
  v18 = v6;
  v14[0] = swift_getOpaqueTypeConformance2();
  v14[1] = MEMORY[0x24BDF0910];
  v11 = MEMORY[0x24BDED308];
  v13[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v7, v14);
  v13[1] = MEMORY[0x212BBDF90](MEMORY[0x24BDF1028], v9);
  return MEMORY[0x212BBDF90](v11, v10, v13);
}

uint64_t sub_20E3E62C4()
{
  sub_20E4A48BC();
  return sub_20E4A371C();
}

uint64_t MediaArtworkStyle.transaction.getter()
{
  sub_20E4A48BC();
  return sub_20E4A371C();
}

uint64_t MediaArtworkStyleConfiguration.subscript.getter()
{
  uint64_t result;

  result = sub_20E4A4C28();
  if (result)
    return MEMORY[0x212BBBB18]();
  return result;
}

uint64_t MediaArtworkStyleConfiguration.error.getter()
{
  return sub_20E3E6378(MEMORY[0x24BDECD18]);
}

uint64_t type metadata accessor for MediaArtworkStyleConfiguration(uint64_t a1)
{
  return sub_20E3A4CD0(a1, (uint64_t *)&unk_254A19A00);
}

uint64_t MediaArtworkStyleConfiguration.image.getter()
{
  return sub_20E3E6378(MEMORY[0x24BDECD20]);
}

uint64_t sub_20E3E6378(uint64_t (*a1)(void))
{
  type metadata accessor for MediaArtworkStyleConfiguration(0);
  return a1();
}

uint64_t MediaArtworkStyleConfiguration.subscript.getter@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;

  v7 = *(_QWORD *)(v3 + *(int *)(type metadata accessor for MediaArtworkStyleConfiguration(0) + 24));
  return sub_20E409814(v7, a1, a2, a3);
}

uint64_t StandardMediaArtworkStyle.init(cornerRadius:cornerStyle:)@<X0>(uint64_t a1@<X0>, double *a2@<X8>, double a3@<D0>)
{
  char *v4;
  uint64_t v5;

  *a2 = a3;
  v4 = (char *)a2 + *(int *)(type metadata accessor for StandardMediaArtworkStyle(0) + 20);
  v5 = sub_20E4A3CB0();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v4, a1, v5);
}

uint64_t type metadata accessor for StandardMediaArtworkStyle(uint64_t a1)
{
  return sub_20E3A4CD0(a1, (uint64_t *)&unk_254A19A10);
}

uint64_t StandardMediaArtworkStyle.transaction.getter()
{
  sub_20E4A48BC();
  return sub_20E4A371C();
}

uint64_t StandardMediaArtworkStyle.body(configuration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t KeyPath;
  uint64_t *v40;
  int v42;
  uint64_t v43;
  _QWORD v44[2];
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v47 = a1;
  v55 = a2;
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19968);
  MEMORY[0x24BDAC7A8](v54);
  v46 = (char *)v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19970);
  MEMORY[0x24BDAC7A8](v52);
  v45 = (char *)v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19978);
  MEMORY[0x24BDAC7A8](v51);
  v53 = (uint64_t)v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19980);
  MEMORY[0x24BDAC7A8](v48);
  v49 = (uint64_t)v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19988);
  MEMORY[0x24BDAC7A8](v56);
  v50 = (char *)v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19990);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_20E4A45B0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19998);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)v44 - v19;
  v21 = sub_20E4A3A7C();
  MEMORY[0x24BDAC7A8](v21);
  v23 = (_QWORD *)((char *)v44 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v24 = *v2;
  v25 = (char *)v2 + *(int *)(type metadata accessor for StandardMediaArtworkStyle(0) + 20);
  v26 = (char *)v23 + *(int *)(v21 + 20);
  v27 = sub_20E4A3CB0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v26, v25, v27);
  *v23 = v24;
  v23[1] = v24;
  type metadata accessor for MediaArtworkStyleConfiguration(0);
  if (sub_20E4A3980())
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x24BDF3FD0], v11);
    v28 = sub_20E4A4604();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    sub_20E3E6A98((uint64_t)v23, (uint64_t)v10);
    sub_20E3A5E20((uint64_t)v10, (uint64_t)&v17[*(int *)(v15 + 36)], &qword_254A19990);
    *(_QWORD *)v17 = v28;
    *((_QWORD *)v17 + 1) = 0;
    *((_WORD *)v17 + 8) = 1;
    sub_20E39D1F8((uint64_t)v10, &qword_254A19990);
    sub_20E3E716C((uint64_t)v17, (uint64_t)v20);
    v29 = &qword_254A19998;
    sub_20E3A5E20((uint64_t)v20, v49, &qword_254A19998);
    swift_storeEnumTagMultiPayload();
    sub_20E3E6B00();
    sub_20E3E6BE8();
    v30 = (uint64_t)v50;
    sub_20E4A3DF4();
    sub_20E3A5E20(v30, v53, &qword_254A19988);
    swift_storeEnumTagMultiPayload();
    sub_20E3E6ADC();
    sub_20E3E6C84();
    sub_20E4A3DF4();
    swift_release();
    sub_20E39D1F8(v30, &qword_254A19988);
    v31 = (uint64_t)v20;
  }
  else
  {
    v44[1] = v15;
    v34 = (uint64_t)v45;
    v33 = (uint64_t)v46;
    v35 = v49;
    v36 = v52;
    v37 = (uint64_t)v50;
    if (sub_20E4A4C28())
    {
      v38 = MEMORY[0x212BBBB18]();
      KeyPath = swift_getKeyPath();
      sub_20E3E6A98((uint64_t)v23, v34);
      v40 = (uint64_t *)(v34 + *(int *)(v36 + 36));
      *v40 = KeyPath;
      v40[1] = v38;
      sub_20E3A5E20(v34, v35, &qword_254A19970);
      swift_storeEnumTagMultiPayload();
      sub_20E3E6B00();
      sub_20E3E6BE8();
      swift_retain();
      sub_20E4A3DF4();
      sub_20E3A5E20(v37, v53, &qword_254A19988);
      swift_storeEnumTagMultiPayload();
      sub_20E3E6ADC();
      sub_20E3E6C84();
      sub_20E4A3DF4();
      swift_release();
      sub_20E39D1F8(v37, &qword_254A19988);
      v31 = v34;
      v32 = &qword_254A19970;
      goto LABEL_6;
    }
    v42 = sub_20E4A3EC0();
    sub_20E3E6A98((uint64_t)v23, v33);
    v43 = v53;
    *(_DWORD *)(v33 + *(int *)(v54 + 36)) = v42;
    v29 = &qword_254A19968;
    sub_20E3A5E20(v33, v43, &qword_254A19968);
    swift_storeEnumTagMultiPayload();
    sub_20E3E6ADC();
    sub_20E3E6C84();
    sub_20E4A3DF4();
    v31 = v33;
  }
  v32 = v29;
LABEL_6:
  sub_20E39D1F8(v31, v32);
  return sub_20E3E6D20((uint64_t)v23);
}

uint64_t sub_20E3E6A98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_20E4A3A7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20E3E6ADC()
{
  return sub_20E3E7B0C(&qword_254A199A0, &qword_254A19988, (uint64_t (*)(void))sub_20E3E6B00, (uint64_t (*)(void))sub_20E3E6BE8);
}

unint64_t sub_20E3E6B00()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254A199A8;
  if (!qword_254A199A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19998);
    v2[0] = sub_20E3E6B84();
    v2[1] = sub_20E39D010(&qword_254A199C0, &qword_254A19990, MEMORY[0x24BDEB9D0]);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254A199A8);
  }
  return result;
}

unint64_t sub_20E3E6B84()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254A199B0;
  if (!qword_254A199B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A199B8);
    v2[0] = MEMORY[0x24BDF40E8];
    v2[1] = MEMORY[0x24BDEEC40];
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254A199B0);
  }
  return result;
}

unint64_t sub_20E3E6BE8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254A199C8;
  if (!qword_254A199C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19970);
    v2[0] = sub_20E39F334(&qword_254A199D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDED998], MEMORY[0x24BDED988]);
    v2[1] = sub_20E39D010((unint64_t *)&qword_254A199D8, &qword_254A199E0, MEMORY[0x24BDF1028]);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254A199C8);
  }
  return result;
}

unint64_t sub_20E3E6C84()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254A199E8;
  if (!qword_254A199E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19968);
    v2[0] = sub_20E39F334(&qword_254A199D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDED998], MEMORY[0x24BDED988]);
    v2[1] = sub_20E39D010(&qword_254A199F0, &qword_254A199F8, MEMORY[0x24BDF0710]);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254A199E8);
  }
  return result;
}

uint64_t sub_20E3E6D20(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_20E4A3A7C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t static MediaArtworkStyle<>.standard.getter@<X0>(_QWORD *a1@<X8>)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v2 = (char *)a1 + *(int *)(type metadata accessor for StandardMediaArtworkStyle(0) + 20);
  v3 = *MEMORY[0x24BDEEB78];
  v4 = sub_20E4A3CB0();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 104))(v2, v3, v4);
  *a1 = 0;
  return result;
}

uint64_t static MediaArtworkStyle<>.standard(cornerRadius:cornerStyle:)@<X0>(uint64_t a1@<X0>, double *a2@<X8>, double a3@<D0>)
{
  char *v6;
  uint64_t v7;
  uint64_t result;

  v6 = (char *)a2 + *(int *)(type metadata accessor for StandardMediaArtworkStyle(0) + 20);
  v7 = sub_20E4A3CB0();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v6, a1, v7);
  *a2 = a3;
  return result;
}

uint64_t MediaArtworkStyle._body(configuration:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v10 = (char *)&v13 - v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t, double))(a3 + 32))(a1, a2, a3, v8);
  swift_getAssociatedConformanceWitness();
  v11 = sub_20E3C3B10((uint64_t)v10);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, AssociatedTypeWitness);
  return v11;
}

uint64_t View.mediaArtworkStyle<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *boxed_opaque_existential_1Tm;
  uint64_t v10[5];

  swift_getKeyPath();
  v10[3] = a3;
  v10[4] = a5;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v10);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(boxed_opaque_existential_1Tm, a1, a3);
  sub_20E4A4250();
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
}

uint64_t sub_20E3E6FB8()
{
  sub_20E3E7C00();
  return sub_20E4A3C08();
}

uint64_t sub_20E3E6FEC()
{
  sub_20E3E7C00();
  return sub_20E4A3C08();
}

uint64_t sub_20E3E7028(uint64_t a1)
{
  uint64_t v2;
  _BYTE v3[40];

  sub_20E3C39FC(a1, (uint64_t)v3);
  sub_20E3C39FC((uint64_t)v3, (uint64_t)&v2);
  sub_20E3E7C00();
  sub_20E4A3C14();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
}

uint64_t sub_20E3E7084@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t *boxed_opaque_existential_1Tm;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v2 = type metadata accessor for StandardMediaArtworkStyle(0);
  a1[3] = v2;
  a1[4] = sub_20E39F334(&qword_254A19A48, type metadata accessor for StandardMediaArtworkStyle, (uint64_t)&protocol conformance descriptor for StandardMediaArtworkStyle);
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(a1);
  v4 = (char *)boxed_opaque_existential_1Tm + *(int *)(v2 + 20);
  v5 = *MEMORY[0x24BDEEB78];
  v6 = sub_20E4A3CB0();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v4, v5, v6);
  *boxed_opaque_existential_1Tm = 0;
  return result;
}

uint64_t sub_20E3E711C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_20E4A3B6C();
  *a1 = result;
  return result;
}

uint64_t sub_20E3E7144()
{
  swift_retain();
  return sub_20E4A3B78();
}

uint64_t sub_20E3E716C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19998);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20E3E71B4()
{
  sub_20E3E7C00();
  return sub_20E4A3C08();
}

uint64_t sub_20E3E71F4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t dispatch thunk of MediaArtworkStyle.transaction.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of MediaArtworkStyle.body(configuration:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t *initializeBufferWithCopyOfBuffer for MediaArtworkStyleConfiguration(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_20E4A4C70();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_20E4A398C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for MediaArtworkStyleConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_20E4A4C70();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_20E4A398C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MediaArtworkStyleConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_20E4A4C70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_20E4A398C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MediaArtworkStyleConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_20E4A4C70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_20E4A398C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for MediaArtworkStyleConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_20E4A4C70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_20E4A398C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithTake for MediaArtworkStyleConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_20E4A4C70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_20E4A398C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MediaArtworkStyleConfiguration()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_20E3E75AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_20E4A4C70();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_20E4A398C();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for MediaArtworkStyleConfiguration()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_20E3E7660(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_20E4A4C70();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_20E4A398C();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t sub_20E3E7704()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_20E4A4C70();
  if (v1 <= 0x3F)
  {
    result = sub_20E4A398C();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for StandardMediaArtworkStyle(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v5 = *(int *)(a3 + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_20E4A3CB0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t destroy for StandardMediaArtworkStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = sub_20E4A3CB0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_QWORD *initializeWithCopy for StandardMediaArtworkStyle(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_20E4A3CB0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_QWORD *assignWithCopy for StandardMediaArtworkStyle(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_20E4A3CB0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_QWORD *initializeWithTake for StandardMediaArtworkStyle(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_20E4A3CB0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *assignWithTake for StandardMediaArtworkStyle(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_20E4A3CB0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for StandardMediaArtworkStyle()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_20E3E79D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 20);
  v5 = sub_20E4A3CB0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for StandardMediaArtworkStyle()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_20E3E7A1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 20);
  v6 = sub_20E4A3CB0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, a2, a2, v6);
}

uint64_t sub_20E3E7A60()
{
  uint64_t result;
  unint64_t v1;

  result = sub_20E4A3CB0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_20E3E7AD8()
{
  return sub_20E3E7B0C(&qword_254A19A20, &qword_254A19A28, sub_20E3E6ADC, (uint64_t (*)(void))sub_20E3E6C84);
}

uint64_t sub_20E3E7B0C(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = a3();
    v9[1] = a4();
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20E3E7B7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 16);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19A30);
  v2 = sub_20E4A39D4();
  v4[0] = v1;
  v4[1] = sub_20E39D010(&qword_254A19A38, &qword_254A19A30, MEMORY[0x24BDF1028]);
  return MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v2, v4);
}

unint64_t sub_20E3E7C00()
{
  unint64_t result;

  result = qword_254A19A40;
  if (!qword_254A19A40)
  {
    result = MEMORY[0x212BBDF90](&unk_20E4A9C48, &type metadata for MediaArtworkStyleKey);
    atomic_store(result, (unint64_t *)&qword_254A19A40);
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaArtworkStyleKey()
{
  return &type metadata for MediaArtworkStyleKey;
}

uint64_t sub_20E3E7C54@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_20E3E84C0();
  result = sub_20E4A3C08();
  *a1 = v3;
  return result;
}

uint64_t sub_20E3E7CA0()
{
  sub_20E3E84C0();
  swift_bridgeObjectRetain();
  return sub_20E4A3C14();
}

uint64_t View.mediaArtworkAllowedBundles<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  void (*v23)(char *, uint64_t);
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[2];

  v29 = a6;
  v27 = a5;
  v10 = *(_QWORD *)(a3 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](a1);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19A50);
  v12 = sub_20E4A39D4();
  v28 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v26 = (uint64_t *)((char *)&v25 - v16);
  swift_getKeyPath();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a3);
  v17 = (*(unsigned __int8 *)(v10 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v18 = (char *)swift_allocObject();
  *((_QWORD *)v18 + 2) = a2;
  *((_QWORD *)v18 + 3) = a3;
  v19 = v27;
  *((_QWORD *)v18 + 4) = a4;
  *((_QWORD *)v18 + 5) = v19;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v18[v17], (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a3);
  sub_20E4A4388();
  swift_release();
  swift_release();
  v20 = sub_20E3E8090();
  v30[0] = a4;
  v30[1] = v20;
  v21 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v12, v30);
  v22 = v26;
  sub_20E39D614(v26, v14, v12, v21);
  v23 = *(void (**)(char *, uint64_t))(v28 + 8);
  v23(v14, v12);
  sub_20E39D618((uint64_t)v22, v12, v29);
  return ((uint64_t (*)(_QWORD *, uint64_t))v23)(v22, v12);
}

uint64_t sub_20E3E7EF8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_20E3E84C0();
  result = sub_20E4A3C08();
  *a1 = v3;
  return result;
}

uint64_t sub_20E3E7F48(uint64_t a1, uint64_t a2)
{
  uint64_t inited;
  uint64_t v5;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254A18A98);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20E4A7F90;
  *(_QWORD *)(inited + 32) = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v5 = inited;
  sub_20E4A5D38();
  MediaArtwork.BundleImageProtocol.Configuration.withAllowedBundles<A>(_:)(a2, &v5);
  swift_bridgeObjectRelease();
  sub_20E3E8140(v5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_20E3E8018()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_20E3E8070(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v1 + 24) - 8) + 80);
  return sub_20E3E7F48(a1, v1 + ((v2 + 48) & ~v2));
}

unint64_t sub_20E3E8090()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254A19A58;
  if (!qword_254A19A58)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19A50);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDF1248], v1);
    atomic_store(result, (unint64_t *)&qword_254A19A58);
  }
  return result;
}

uint64_t sub_20E3E80DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 16);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19A50);
  v2 = sub_20E4A39D4();
  v4[0] = v1;
  v4[1] = sub_20E3E8090();
  return MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v2, v4);
}

uint64_t sub_20E3E8140(uint64_t a1)
{
  unint64_t *v1;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t result;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  __int128 v21[2];
  __int128 v22;
  ValueMetadata *v23;
  unint64_t v24;

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    v5 = 0;
    v6 = 72;
    while (1)
    {
      sub_20E3C39FC(v3 + v6 - 40, (uint64_t)&v22);
      sub_20E3C39FC((uint64_t)&v22, (uint64_t)v21);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254A18A30);
      if (swift_dynamicCast())
        break;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v22);
      ++v5;
      v6 += 40;
      if (v4 == v5)
      {
        swift_bridgeObjectRelease();
        v7 = *(_QWORD *)(*v1 + 16);
        v5 = v4;
LABEL_9:
        if (v7 >= (uint64_t)v5)
          goto LABEL_10;
        goto LABEL_39;
      }
    }
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v22);
    result = swift_bridgeObjectRelease();
    v7 = v5 + 1;
    if (!__OFADD__(v5, 1))
    {
      v9 = *v1;
      v10 = *(_QWORD *)(*v1 + 16);
      if (v7 == v10)
        goto LABEL_9;
      v13 = v5 + 1;
      while (v13 < v10)
      {
        sub_20E3C39FC(v9 + v6, (uint64_t)&v22);
        sub_20E3C39FC((uint64_t)&v22, (uint64_t)v21);
        if (swift_dynamicCast())
        {
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v22);
        }
        else
        {
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v22);
          if (v13 != v5)
          {
            if ((v5 & 0x8000000000000000) != 0)
              goto LABEL_34;
            v14 = (_QWORD *)*v1;
            v15 = *(_QWORD *)(*v1 + 16);
            if (v5 >= v15)
              goto LABEL_35;
            sub_20E3C39FC((uint64_t)&v14[5 * v5 + 4], (uint64_t)&v22);
            if (v13 >= v15)
              goto LABEL_36;
            sub_20E3C39FC((uint64_t)&v14[(unint64_t)v6 / 8], (uint64_t)v21);
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            *v1 = (unint64_t)v14;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              v14 = sub_20E46F4DC(v14);
              *v1 = (unint64_t)v14;
            }
            if (v5 >= v14[2])
              goto LABEL_37;
            v17 = (uint64_t)&v14[5 * v5 + 4];
            __swift_destroy_boxed_opaque_existential_1(v17);
            sub_20E3B1AB4(v21, v17);
            v18 = *v1;
            if (v13 >= *(_QWORD *)(*v1 + 16))
              goto LABEL_38;
            v19 = v18 + v6;
            __swift_destroy_boxed_opaque_existential_1(v18 + v6);
            sub_20E3B1AB4(&v22, v19);
          }
          if (__OFADD__(v5++, 1))
            goto LABEL_33;
        }
        v7 = v13 + 1;
        if (__OFADD__(v13, 1))
          goto LABEL_32;
        v9 = *v1;
        v10 = *(_QWORD *)(*v1 + 16);
        ++v13;
        v6 += 40;
        if (v7 == v10)
          goto LABEL_9;
      }
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    __break(1u);
  }
  else
  {
    v7 = 0;
    v5 = 0;
LABEL_10:
    sub_20E3DEFC4(v5, v7);
    v5 = *v1;
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
LABEL_40:
      v5 = (unint64_t)sub_20E3AD3A4(0, *(_QWORD *)(v5 + 16) + 1, 1, (_QWORD *)v5);
    v12 = *(_QWORD *)(v5 + 16);
    v11 = *(_QWORD *)(v5 + 24);
    if (v12 >= v11 >> 1)
      v5 = (unint64_t)sub_20E3AD3A4((_QWORD *)(v11 > 1), v12 + 1, 1, (_QWORD *)v5);
    v23 = &type metadata for MediaArtwork.BundleImageProtocol;
    v24 = sub_20E3E847C();
    *(_QWORD *)&v22 = a1;
    *(_QWORD *)(v5 + 16) = v12 + 1;
    result = sub_20E3B1AB4(&v22, v5 + 40 * v12 + 32);
    *v1 = v5;
  }
  return result;
}

unint64_t sub_20E3E847C()
{
  unint64_t result;

  result = qword_254A19A60;
  if (!qword_254A19A60)
  {
    result = MEMORY[0x212BBDF90](&protocol conformance descriptor for MediaArtwork.BundleImageProtocol, &type metadata for MediaArtwork.BundleImageProtocol);
    atomic_store(result, (unint64_t *)&qword_254A19A60);
  }
  return result;
}

unint64_t sub_20E3E84C0()
{
  unint64_t result;

  result = qword_254A19A68[0];
  if (!qword_254A19A68[0])
  {
    result = MEMORY[0x212BBDF90](&unk_20E4AA6EC, &type metadata for MediaArtworkProtocolsKey);
    atomic_store(result, qword_254A19A68);
  }
  return result;
}

uint64_t sub_20E3E8504()
{
  uint64_t result;
  unint64_t v1;

  result = sub_20E4A4778();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_20E3E8588(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = ((v6 + 16) & ~v6) + *(_QWORD *)(v5 + 64);
  v8 = *(_DWORD *)(v5 + 80) & 0x100000;
  v9 = *a2;
  *a1 = *a2;
  if (v6 > 7 || v8 != 0 || ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 17 > 0x18)
  {
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
  }
  else
  {
    v13 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    v14 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v13 = *v14;
    v15 = ((unint64_t)v13 + v6 + 8) & ~v6;
    v16 = ((unint64_t)v14 + v6 + 8) & ~v6;
    v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_retain();
    swift_retain();
    v17(v15, v16, v4);
    v18 = ((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
    v19 = ((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
    v20 = *(_QWORD *)(v19 + 8);
    *(_QWORD *)v18 = *(_QWORD *)v19;
    *(_QWORD *)(v18 + 8) = v20;
    *(_BYTE *)(v18 + 16) = *(_BYTE *)(v19 + 16);
  }
  swift_retain();
  return a1;
}

uint64_t sub_20E3E86A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = a1 + 15;
  swift_release();
  swift_release();
  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))(((v3 & 0xFFFFFFFFFFFFFFF8)
                                                                                            + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80)
                                                                                            + 8) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
  return swift_release();
}

_QWORD *sub_20E3E8720(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;

  *a1 = *a2;
  v5 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v6 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v5 = *v6;
  v7 = *(_QWORD *)(a3 + 16);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = ((unint64_t)v5 + v9 + 8) & ~v9;
  v11 = ((unint64_t)v6 + v9 + 8) & ~v9;
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  swift_retain();
  swift_retain();
  v12(v10, v11, v7);
  v13 = ((v9 + 16) & ~v9) + *(_QWORD *)(v8 + 64) + 7;
  v14 = ((unint64_t)a1 + v13) & 0xFFFFFFFFFFFFFFF8;
  v15 = ((unint64_t)a2 + v13) & 0xFFFFFFFFFFFFFFF8;
  v16 = *(_QWORD *)(v15 + 8);
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_QWORD *)(v14 + 8) = v16;
  *(_BYTE *)(v14 + 16) = *(_BYTE *)(v15 + 16);
  swift_retain();
  return a1;
}

_QWORD *sub_20E3E87FC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;

  v6 = (unint64_t)a2 + 15;
  *a1 = *a2;
  swift_retain();
  swift_release();
  v7 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v6 &= 0xFFFFFFFFFFFFFFF8;
  *v7 = *(_QWORD *)v6;
  swift_retain();
  swift_release();
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  (*(void (**)(unint64_t, unint64_t))(v8 + 24))(((unint64_t)v7 + v9 + 8) & ~v9, (v9 + 8 + v6) & ~v9);
  v10 = ((v9 + 16) & ~v9) + *(_QWORD *)(v8 + 64) + 7;
  v11 = ((unint64_t)a1 + v10) & 0xFFFFFFFFFFFFFFF8;
  v12 = ((unint64_t)a2 + v10) & 0xFFFFFFFFFFFFFFF8;
  v13 = *(_QWORD *)(v12 + 8);
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_QWORD *)(v11 + 8) = v13;
  swift_retain();
  swift_release();
  *(_BYTE *)(v11 + 16) = *(_BYTE *)(v12 + 16);
  return a1;
}

_QWORD *sub_20E3E88E0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;

  *a1 = *a2;
  v5 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v6 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v5 = *v6;
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  (*(void (**)(unint64_t, unint64_t))(v7 + 32))(((unint64_t)v5 + v8 + 8) & ~v8, ((unint64_t)v6 + v8 + 8) & ~v8);
  v9 = ((v8 + 16) & ~v8) + *(_QWORD *)(v7 + 64) + 7;
  v10 = ((unint64_t)a1 + v9) & 0xFFFFFFFFFFFFFFF8;
  v11 = ((unint64_t)a2 + v9) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)v10 = *(_OWORD *)v11;
  *(_BYTE *)(v10 + 16) = *(_BYTE *)(v11 + 16);
  return a1;
}

_QWORD *sub_20E3E8988(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;

  v6 = (unint64_t)a2 + 15;
  *a1 = *a2;
  swift_release();
  v7 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v6 &= 0xFFFFFFFFFFFFFFF8;
  *v7 = *(_QWORD *)v6;
  swift_release();
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  (*(void (**)(unint64_t, unint64_t))(v8 + 40))(((unint64_t)v7 + v9 + 8) & ~v9, (v9 + 8 + v6) & ~v9);
  v10 = ((v9 + 16) & ~v9) + *(_QWORD *)(v8 + 64) + 7;
  v11 = ((unint64_t)a1 + v10) & 0xFFFFFFFFFFFFFFF8;
  v12 = ((unint64_t)a2 + v10) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)v11 = *(_OWORD *)v12;
  swift_release();
  *(_BYTE *)(v11 + 16) = *(_BYTE *)(v12 + 16);
  return a1;
}

uint64_t sub_20E3E8A54(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unint64_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  unint64_t *v14;
  unint64_t v15;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  if (v6 >= a2)
  {
    v14 = (unint64_t *)((a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    if ((v5 & 0x80000000) != 0)
    {
      return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)v14 + v7 + 8) & ~v7);
    }
    else
    {
      v15 = *v14;
      if (v15 >= 0xFFFFFFFF)
        LODWORD(v15) = -1;
      return (v15 + 1);
    }
  }
  else
  {
    v8 = ((*(_QWORD *)(v4 + 64) + ((v7 + 16) & ~v7) + 7) & 0xFFFFFFFFFFFFFFF8) + 17;
    v9 = (a2 - v6 + 255) >> (8 * v8);
    if (v8 < 4)
      v10 = v9 + 1;
    else
      v10 = 2;
    if (v10 >= 0x10000)
      v11 = 4;
    else
      v11 = 2;
    if (v10 < 0x100)
      v11 = 1;
    if (v10 >= 2)
      v12 = v11;
    else
      v12 = 0;
    return ((uint64_t (*)(void))((char *)&loc_20E3E8AEC + 4 * byte_20E4A9CB0[v12]))();
  }
}

void sub_20E3E8B84(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(_QWORD *)(v5 + 64)
       + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
       + 7) & 0xFFFFFFFFFFFFFFF8)
     + 17;
  if (v6 >= a3)
  {
    v10 = 0;
    if (v6 >= a2)
      goto LABEL_17;
  }
  else
  {
    if (v7 <= 3)
      v8 = ((a3 - v6 + 255) >> (8 * v7)) + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    if (v6 >= a2)
LABEL_17:
      __asm { BR              X13 }
  }
  if (v7 >= 4)
    v11 = ~v6 + a2;
  else
    v11 = (~(_BYTE)v6 + a2);
  bzero(a1, v7);
  if ((_DWORD)v7 == 1)
    *a1 = v11;
  else
    *(_DWORD *)a1 = v11;
  __asm { BR              X10 }
}

void sub_20E3E8CB4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x20E3E8D24);
}

void sub_20E3E8CBC(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x20E3E8CC4);
  JUMPOUT(0x20E3E8D24);
}

void sub_20E3E8CDC()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x20E3E8D24);
}

void sub_20E3E8CE4()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x20E3E8D24);
}

void sub_20E3E8CEC(uint64_t a1, int a2, int a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_WORD *)(v3 + v4) = 0;
  if (a2)
  {
    if ((a3 & 0x80000000) == 0)
    {
      if ((a2 & 0x80000000) == 0)
        JUMPOUT(0x20E3E8D20);
      JUMPOUT(0x20E3E8D1CLL);
    }
    JUMPOUT(0x20E3E8CF8);
  }
  JUMPOUT(0x20E3E8D24);
}

uint64_t type metadata accessor for _OnChangeOfBindingViewModifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _OnChangeOfBindingViewModifier);
}

uint64_t sub_20E3E8D48()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E3E8D7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t OpaqueTypeConformance2;
  _QWORD *v27;
  void (*v28)(char *, uint64_t);
  _DWORD v30[4];
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v37 = a1;
  v38 = a3;
  v5 = *(_QWORD *)(a2 - 8);
  v34 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v8 + 16);
  v36 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x212BBDF90](&unk_20E4A9D08, v11);
  v14 = sub_20E4A3EA8();
  v31 = v14;
  v32 = MEMORY[0x212BBDF90](MEMORY[0x24BDEFB78], v14);
  v15 = *(_QWORD *)(a2 + 24);
  v39 = v14;
  v40 = v9;
  v41 = v32;
  v42 = v15;
  v16 = MEMORY[0x212BBDF30](0, &v39, MEMORY[0x24BDF38E8], 0);
  v35 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v33 = (_QWORD *)((char *)v30 - v20);
  v21 = sub_20E4A4778();
  MEMORY[0x212BBBCE0](v21);
  v30[3] = *(unsigned __int8 *)(v3 + *(int *)(a2 + 40));
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v3, a2);
  v22 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = v9;
  *(_QWORD *)(v23 + 24) = v15;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v23 + v22, v7, a2);
  v24 = swift_checkMetadataState();
  v25 = v32;
  sub_20E4A44CC();
  swift_release();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v13, v9);
  v39 = v24;
  v40 = v9;
  v41 = v25;
  v42 = v15;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v27 = v33;
  sub_20E39D614(v33, v18, v16, OpaqueTypeConformance2);
  v28 = *(void (**)(char *, uint64_t))(v35 + 8);
  v28(v18, v16);
  sub_20E39D618((uint64_t)v27, v16, v38);
  return ((uint64_t (*)(_QWORD *, uint64_t))v28)(v27, v16);
}

uint64_t sub_20E3E9020(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for _OnChangeOfBindingViewModifier(0, v5, *(_QWORD *)(v4 + 24), a4)- 8)+ 80);
  v7 = v4 + ((v6 + 32) & ~v6);
  swift_release();
  swift_release();
  v8 = sub_20E4A4778();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v7 + *(int *)(v8 + 32), v5);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E3E90CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;

  v7 = type metadata accessor for _OnChangeOfBindingViewModifier(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(v7 - 8) + 80);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + *(int *)(v7 + 36) + ((v8 + 32) & ~v8)))(a1, a2);
}

uint64_t sub_20E3E912C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;

  v4 = type metadata accessor for _OnChangeOfBindingViewModifier(255, *a1, a1[1], a4);
  MEMORY[0x212BBDF90](&unk_20E4A9D08, v4);
  v6 = sub_20E4A3EA8();
  MEMORY[0x212BBDF90](MEMORY[0x24BDEFB78], v6);
  return swift_getOpaqueTypeConformance2();
}

uint64_t RandomAccessCollection.indexed.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v4 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8]();
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v4 + 16))(v6);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(a2, v6, a1);
}

uint64_t IndexedRandomAccessCollection.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
}

uint64_t IndexedRandomAccessCollection.startIndex.getter(uint64_t a1)
{
  return sub_20E3E9278(a1, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x24BEE18A0]);
}

uint64_t IndexedRandomAccessCollection.endIndex.getter(uint64_t a1)
{
  return sub_20E3E9278(a1, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x24BEE1910]);
}

uint64_t IndexedRandomAccessCollection.indices.getter(uint64_t a1)
{
  return sub_20E3E9278(a1, MEMORY[0x24BEE18F8]);
}

uint64_t sub_20E3E9278(uint64_t a1, uint64_t (*a2)(_QWORD, _QWORD))
{
  return a2(*(_QWORD *)(a1 + 16), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 24) + 8) + 8));
}

uint64_t IndexedRandomAccessCollection.distance(from:to:)()
{
  return sub_20E4A5F24();
}

uint64_t IndexedRandomAccessCollection.index(before:)()
{
  return sub_20E4A5BC4();
}

uint64_t IndexedRandomAccessCollection.index(after:)()
{
  return sub_20E4A5F54();
}

uint64_t IndexedRandomAccessCollection.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness;
  uint64_t (*v7)(uint64_t *, _QWORD);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a1, a3, AssociatedTypeWitness);
  v7 = (uint64_t (*)(uint64_t *, _QWORD))sub_20E4A5FC0();
  v9 = v8;
  v10 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a2, v9, v10);
  return v7(&v12, 0);
}

void sub_20E3E93A0()
{
  JUMPOUT(0x212BBDF90);
}

uint64_t sub_20E3E93B0()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_20E3E93CC(uint64_t a1)
{
  uint64_t v3;

  v3 = MEMORY[0x212BBDF90](&protocol conformance descriptor for IndexedRandomAccessCollection<A>);
  return MEMORY[0x212BBDF90](MEMORY[0x24BEE4230], a1, &v3);
}

uint64_t sub_20E3E9414(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x212BBDF90](&protocol conformance descriptor for IndexedRandomAccessCollection<A>, a3);
  return sub_20E4A5BD0();
}

void sub_20E3E9478()
{
  JUMPOUT(0x212BBDF90);
}

uint64_t sub_20E3E9488()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_20E3E94A8(uint64_t a1)
{
  uint64_t v3;

  v3 = MEMORY[0x212BBDF90](&protocol conformance descriptor for IndexedRandomAccessCollection<A>);
  return MEMORY[0x212BBDF90](MEMORY[0x24BEE4218], a1, &v3);
}

uint64_t sub_20E3E94F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20E3E9950(a1, a2, a3, (void (*)(uint64_t, uint64_t, double))IndexedRandomAccessCollection.index(before:));
}

uint64_t sub_20E3E9504(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  MEMORY[0x212BBDF90](&protocol conformance descriptor for IndexedRandomAccessCollection<A>, a4);
  return sub_20E4A5F30();
}

void sub_20E3E9568()
{
  JUMPOUT(0x212BBDF90);
}

uint64_t sub_20E3E9578()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_20E3E959C()
{
  return swift_getAssociatedConformanceWitness();
}

void sub_20E3E95C0()
{
  JUMPOUT(0x212BBDF90);
}

void (*sub_20E3E95D8(uint64_t **a1, uint64_t a2))(uint64_t *a1, uint64_t a2)
{
  uint64_t *v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t TupleTypeMetadata2;
  uint64_t v8;
  char *v9;
  void (*v10)(_QWORD *);
  uint64_t v11;
  uint64_t v12;

  v4 = (uint64_t *)malloc(0x40uLL);
  *a1 = v4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v4[4] = TupleTypeMetadata2;
  v8 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v4[5] = v8;
  v9 = (char *)malloc(*(_QWORD *)(v8 + 64));
  v4[6] = (uint64_t)v9;
  v10 = sub_20E3E975C(v4, a2);
  v12 = v11;
  v4[7] = (uint64_t)v10;
  (*(void (**)(char *))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(v9);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(&v9[*(int *)(TupleTypeMetadata2 + 48)], v12, v6);
  return sub_20E3E9708;
}

void sub_20E3E9708(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;

  v3 = *a1;
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(*a1 + 40) + 8))(*(_QWORD *)(*a1 + 48), *(_QWORD *)(*a1 + 32));
  v4 = *(void **)(v3 + 48);
  (*(void (**)(uint64_t, uint64_t))(v3 + 56))(v3, a2);
  free(v4);
  free((void *)v3);
}

void (*sub_20E3E975C(uint64_t *a1, uint64_t a2))(_QWORD *a1)
{
  uint64_t TupleTypeMetadata2;
  uint64_t v5;
  void *v6;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  *a1 = TupleTypeMetadata2;
  v5 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  a1[1] = v5;
  v6 = malloc(*(_QWORD *)(v5 + 64));
  a1[2] = (uint64_t)v6;
  IndexedRandomAccessCollection.subscript.getter((uint64_t)v6, (uint64_t)v6 + *(int *)(TupleTypeMetadata2 + 48), a2);
  return sub_20E3E984C;
}

void sub_20E3E984C(_QWORD *a1)
{
  void *v1;

  v1 = (void *)a1[2];
  (*(void (**)(void *, _QWORD))(a1[1] + 8))(v1, *a1);
  free(v1);
}

uint64_t sub_20E3E9890@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  swift_getAssociatedTypeWitness();
  v2 = sub_20E4A60E0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

uint64_t sub_20E3E98F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_20E3EA044(a1, a2, a3, a4, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BEE1B68], (uint64_t (*)(char *, char *, uint64_t, uint64_t))MEMORY[0x24BEE07E0]);
}

uint64_t sub_20E3E9918(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_20E3EA044(a1, a2, a3, a4, MEMORY[0x24BEE08B8], (uint64_t (*)(char *, char *, uint64_t, uint64_t))MEMORY[0x24BEE07F0]);
}

uint64_t sub_20E3E9944(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20E3E9950(a1, a2, a3, (void (*)(uint64_t, uint64_t, double))IndexedRandomAccessCollection.index(after:));
}

uint64_t sub_20E3E9950(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, double))
{
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v11 = (char *)&v13 - v10;
  a4(a1, a2, v9);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, AssociatedTypeWitness);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(a1, v11, AssociatedTypeWitness);
}

void sub_20E3E9A14()
{
  JUMPOUT(0x212BBDF90);
}

uint64_t sub_20E3E9A24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v7 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v9 = (char *)&v13 - v8;
  v10 = *(_QWORD *)(a1 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, double))(v10 + 16))(a2, v2, a1, v7);
  IndexedRandomAccessCollection.startIndex.getter(a1);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v2, a1);
  MEMORY[0x212BBDF90](&protocol conformance descriptor for IndexedRandomAccessCollection<A>, a1);
  v11 = sub_20E4A6278();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(a2 + *(int *)(v11 + 36), v9, AssociatedTypeWitness);
}

uint64_t sub_20E3E9B1C(uint64_t a1)
{
  MEMORY[0x212BBDF90](&protocol conformance descriptor for IndexedRandomAccessCollection<A>, a1);
  return sub_20E4A5F84();
}

uint64_t sub_20E3E9B50()
{
  return 2;
}

uint64_t sub_20E3E9B58(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = MEMORY[0x212BBDF90](&protocol conformance descriptor for IndexedRandomAccessCollection<A>, a1);
  v4 = sub_20E3EA1F0(v1, a1, v3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
  return v4;
}

uint64_t sub_20E3E9BBC()
{
  return sub_20E4A5CC0();
}

uint64_t sub_20E3E9BDC()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_20E3E9C48(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7 && *(_QWORD *)(v4 + 64) <= 0x18uLL && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_20E3E9CB8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_20E3E9CC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 16))();
  return a1;
}

uint64_t sub_20E3E9CF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 24))();
  return a1;
}

uint64_t sub_20E3E9D28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 32))();
  return a1;
}

uint64_t sub_20E3E9D58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 40))();
  return a1;
}

uint64_t sub_20E3E9D88(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(void))(v4 + 48))();
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if (!(_DWORD)v7)
    return v5 + v11 + 1;
  if (v7 > 3)
    LODWORD(v7) = 4;
  return ((uint64_t (*)(void))((char *)&loc_20E3E9E38 + 4 * byte_20E4A9D60[(v7 - 1)]))();
}

void sub_20E3E9E88(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  BOOL v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = a3 >= v7;
  v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      v13 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v13))
      {
        v11 = 4u;
      }
      else if (v13 >= 0x100)
      {
        v11 = 2;
      }
      else
      {
        v11 = v13 > 1;
      }
    }
    else
    {
      v11 = 1u;
    }
  }
  else
  {
    v11 = 0;
  }
  if (v7 < a2)
  {
    v12 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v14 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v14;
          *((_BYTE *)a1 + 2) = BYTE2(v14);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v14;
        }
        else
        {
          *(_BYTE *)a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, *(_QWORD *)(v6 + 64));
      *(_DWORD *)a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t type metadata accessor for IndexedRandomAccessCollection(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for IndexedRandomAccessCollection);
}

uint64_t sub_20E3EA044(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, uint64_t, uint64_t), uint64_t (*a6)(char *, char *, uint64_t, uint64_t))
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char v19;
  char v20;
  uint64_t result;
  uint64_t v22;
  uint64_t (*v23)(char *, char *, uint64_t, uint64_t);

  v23 = a6;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v11 = a5(0, AssociatedTypeWitness, AssociatedConformanceWitness);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v22 - v13;
  v15 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v22 - v17;
  v19 = sub_20E4A5C00();
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v18, a1, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a2, v11);
  if ((v19 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    result = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, AssociatedTypeWitness);
    goto LABEL_5;
  }
  v20 = v23(v18, &v14[*(int *)(v11 + 36)], AssociatedTypeWitness, AssociatedConformanceWitness);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  result = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, AssociatedTypeWitness);
  if ((v20 & 1) == 0)
LABEL_5:
    __break(1u);
  return result;
}

uint64_t sub_20E3EA1F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char v11;
  void (*v12)(char *, uint64_t, uint64_t);
  char v13;
  void (*v14)(char *, uint64_t);
  uint64_t result;
  void (*v16)(char *, uint64_t);
  uint64_t v17;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v4 = sub_20E4A5FCC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v17 - v9;
  v11 = sub_20E4A5C00();
  v12 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v12(v10, a1, v4);
  v12(v7, a2, v4);
  if ((v11 & 1) == 0)
  {
    v16 = *(void (**)(char *, uint64_t))(v5 + 8);
    v16(v7, v4);
    result = ((uint64_t (*)(char *, uint64_t))v16)(v10, v4);
    goto LABEL_5;
  }
  v13 = sub_20E4A5C00();
  v14 = *(void (**)(char *, uint64_t))(v5 + 8);
  v14(v7, v4);
  result = ((uint64_t (*)(char *, uint64_t))v14)(v10, v4);
  if ((v13 & 1) == 0)
LABEL_5:
    __break(1u);
  return result;
}

uint64_t sub_20E3EA384(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_release();
  return sub_20E39CED8(*(_QWORD *)(a1 + 64), *(_BYTE *)(a1 + 72));
}

uint64_t sub_20E3EA3B8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  v4 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v4;
  v5 = *(_QWORD *)(a2 + 64);
  v6 = *(_BYTE *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_20E39CFAC(v5, v6);
  *(_QWORD *)(a1 + 64) = v5;
  *(_BYTE *)(a1 + 72) = v6;
  return a1;
}

uint64_t sub_20E3EA430(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v2 = a2;
  *(_QWORD *)a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = v2[1];
  v4 = v2[2];
  *(_BYTE *)(a1 + 24) = *((_BYTE *)v2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  v5 = v2[4];
  *(_BYTE *)(a1 + 40) = *((_BYTE *)v2 + 40);
  *(_QWORD *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 41) = *((_BYTE *)v2 + 41);
  v6 = v2[7];
  *(_QWORD *)(a1 + 48) = v2[6];
  *(_QWORD *)(a1 + 56) = v6;
  swift_retain();
  swift_release();
  v7 = v2[8];
  LOBYTE(v2) = *((_BYTE *)v2 + 72);
  sub_20E39CFAC(v7, (char)v2);
  v8 = *(_QWORD *)(a1 + 64);
  v9 = *(_BYTE *)(a1 + 72);
  *(_QWORD *)(a1 + 64) = v7;
  *(_BYTE *)(a1 + 72) = (_BYTE)v2;
  sub_20E39CED8(v8, v9);
  return a1;
}

__n128 __swift_memcpy73_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t sub_20E3EA508(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  v5 = *(_BYTE *)(a2 + 72);
  v6 = *(_QWORD *)(a1 + 64);
  v7 = *(_BYTE *)(a1 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = v5;
  sub_20E39CED8(v6, v7);
  return a1;
}

uint64_t sub_20E3EA588(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 73))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_20E3EA5D0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 72) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 73) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 73) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for _ResolvedVerticalShelfLayout(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _ResolvedVerticalShelfLayout);
}

uint64_t sub_20E3EA630()
{
  return swift_getOpaqueTypeConformance2();
}

_QWORD *sub_20E3EA664(_QWORD *(*a1)(__int128 *__return_ptr, __int128 *))
{
  int64_t *v1;
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  int64_t v5;
  int64_t v6;
  uint64_t v7;
  int64_t v8;
  _BOOL4 v9;
  BOOL v10;
  uint64_t v11;
  int64_t v12;
  _QWORD *result;
  BOOL v14;
  int64_t v15;
  int64_t v16;
  __int128 v17;
  __int128 v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  BOOL v22;
  int64_t v23;
  __int128 v24;
  __int128 v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  BOOL v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  void (*v33)(__int128 *__return_ptr, int64_t *);
  __int128 v35;
  __int128 v36;
  int64_t v37;
  __int128 v38;
  char v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;

  v3 = v2;
  v4 = 0;
  v6 = *v1;
  v5 = v1[1];
  v7 = v1[2];
  v8 = *v1;
  while (1)
  {
    v9 = v5 >= v8;
    if (v7 > 0)
      v9 = v8 >= v5;
    if (v9)
      break;
    v10 = __OFADD__(v8, v7);
    v8 += v7;
    if (v10)
      v8 = (v8 >> 63) ^ 0x8000000000000000;
    v10 = __OFADD__(v4++, 1);
    if (v10)
    {
      __break(1u);
      break;
    }
  }
  v42 = MEMORY[0x24BEE4AF8];
  sub_20E3ECE94(0, v4, 0);
  v11 = v42;
  v12 = v1[4];
  v33 = (void (*)(__int128 *__return_ptr, int64_t *))v1[3];
  if (v4)
  {
    result = (_QWORD *)swift_retain();
    while (1)
    {
      v14 = v5 >= v6;
      if (v7 > 0)
        v14 = v6 >= v5;
      if (v14)
        break;
      if (__OFADD__(v6, v7))
        v15 = ((v6 + v7) >> 63) ^ 0x8000000000000000;
      else
        v15 = v6 + v7;
      v37 = v6;
      v33(&v36, &v37);
      v38 = v36;
      v39 = 0;
      result = a1(&v40, &v38);
      if (v3)
        goto LABEL_38;
      v16 = v12;
      v17 = v40;
      v18 = v41;
      v42 = v11;
      v20 = *(_QWORD *)(v11 + 16);
      v19 = *(_QWORD *)(v11 + 24);
      if (v20 >= v19 >> 1)
      {
        v30 = v41;
        v31 = v40;
        result = (_QWORD *)sub_20E3ECE94(v19 > 1, v20 + 1, 1);
        v18 = v30;
        v17 = v31;
        v11 = v42;
      }
      *(_QWORD *)(v11 + 16) = v20 + 1;
      v21 = v11 + 32 * v20;
      *(_OWORD *)(v21 + 32) = v17;
      *(_OWORD *)(v21 + 48) = v18;
      v6 = v15;
      --v4;
      v12 = v16;
      v3 = 0;
      if (!v4)
        goto LABEL_24;
    }
    __break(1u);
  }
  else
  {
    swift_retain();
    v15 = v6;
LABEL_24:
    v22 = v5 >= v15;
    if (v7 > 0)
      v22 = v15 >= v5;
    if (v22)
    {
LABEL_27:
      sub_20E3ED690((uint64_t)v1);
    }
    else
    {
      while (1)
      {
        v23 = __OFADD__(v15, v7) ? ((v15 + v7) >> 63) ^ 0x8000000000000000 : v15 + v7;
        *(_QWORD *)&v36 = v15;
        v33(&v40, (int64_t *)&v36);
        v38 = v40;
        a1(&v40, &v38);
        if (v3)
          break;
        v3 = 0;
        v24 = v40;
        v25 = v41;
        v42 = v11;
        v27 = *(_QWORD *)(v11 + 16);
        v26 = *(_QWORD *)(v11 + 24);
        if (v27 >= v26 >> 1)
        {
          v35 = v40;
          v32 = v41;
          sub_20E3ECE94(v26 > 1, v27 + 1, 1);
          v25 = v32;
          v24 = v35;
          v11 = v42;
        }
        *(_QWORD *)(v11 + 16) = v27 + 1;
        v28 = v11 + 32 * v27;
        *(_OWORD *)(v28 + 32) = v24;
        *(_OWORD *)(v28 + 48) = v25;
        v29 = v5 >= v23;
        if (v7 > 0)
          v29 = v23 >= v5;
        v15 = v23;
        if (v29)
          goto LABEL_27;
      }
LABEL_38:
      sub_20E3ED690((uint64_t)v1);
      swift_release();
    }
    return (_QWORD *)v11;
  }
  return result;
}

uint64_t sub_20E3EA920@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t result;

  v12 = *a3;
  v13 = *((_BYTE *)a3 + 8);
  v14 = a3[2];
  v15 = *((_BYTE *)a3 + 24);
  v16 = *a4;
  result = swift_getKeyPath();
  *(_QWORD *)a7 = a1;
  *(_QWORD *)(a7 + 8) = a2;
  *(_QWORD *)(a7 + 16) = v12;
  *(_BYTE *)(a7 + 24) = v13;
  *(_QWORD *)(a7 + 32) = v14;
  *(_BYTE *)(a7 + 40) = v15;
  *(_BYTE *)(a7 + 41) = v16;
  *(_QWORD *)(a7 + 48) = a5;
  *(_QWORD *)(a7 + 56) = a6;
  *(_QWORD *)(a7 + 64) = result;
  *(_BYTE *)(a7 + 72) = 0;
  return result;
}

uint64_t sub_20E3EA9B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 *v2;
  __int128 *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t);
  uint64_t v55;
  uint64_t v56;
  _OWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  void (*v65)(uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _OWORD *v80;
  uint64_t v81;
  _QWORD *v82;
  char *v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD v93[2];
  _QWORD v94[2];
  _QWORD v95[2];
  _QWORD v96[2];
  uint64_t v97;
  uint64_t v98;
  _QWORD v99[2];
  _QWORD v100[2];
  _QWORD v101[2];
  uint64_t v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  _BYTE v106[25];
  char v107;

  v3 = v2;
  v92 = a2;
  v5 = sub_20E4A3E78();
  MEMORY[0x24BDAC7A8](v5);
  v84 = (char *)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = sub_20E4A4838();
  v78 = *(_QWORD *)(v81 - 8);
  MEMORY[0x24BDAC7A8](v81);
  v80 = (_OWORD *)((char *)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_20E4A4844();
  MEMORY[0x24BDAC7A8](v8);
  v76 = (char *)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19AF0);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = sub_20E39D010((unint64_t *)&qword_254A19AF8, &qword_254A19AF0, (uint64_t)&protocol conformance descriptor for IndexedRandomAccessCollection<A>);
  *(_QWORD *)&v103 = v10;
  *((_QWORD *)&v103 + 1) = MEMORY[0x24BEE23D0];
  *(_QWORD *)&v104 = v11;
  *((_QWORD *)&v104 + 1) = v12;
  *(_QWORD *)&v105 = MEMORY[0x24BEE23D8];
  v13 = sub_20E4A47C0();
  v102 = *(_QWORD *)(a1 + 24);
  v14 = v102;
  v15 = MEMORY[0x212BBDF90](MEMORY[0x24BDF4A08], v13, &v102);
  v79 = v13;
  v75 = v15;
  v16 = sub_20E4A4910();
  v77 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v83 = (char *)&v72 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v82 = (uint64_t *)((char *)&v72 - v19);
  v20 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19B00);
  v21 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19B08);
  v22 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19B10);
  v23 = sub_20E4A39D4();
  v24 = sub_20E4A3E00();
  v89 = v11;
  v25 = sub_20E4A3E00();
  v26 = sub_20E39D010(&qword_254A19B18, &qword_254A19B10, (uint64_t)&protocol conformance descriptor for IndexedRandomAccessCollection<A>);
  *(_QWORD *)&v103 = v22;
  *((_QWORD *)&v103 + 1) = MEMORY[0x24BEE23D0];
  *(_QWORD *)&v104 = v25;
  *((_QWORD *)&v104 + 1) = v26;
  *(_QWORD *)&v105 = MEMORY[0x24BEE23D8];
  v27 = sub_20E4A47C0();
  v28 = sub_20E3ECAE0();
  v101[0] = v14;
  v101[1] = v28;
  v90 = v28;
  v100[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v23, v101);
  v100[1] = v100[0];
  v29 = MEMORY[0x24BDEF3E0];
  v99[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v24, v100);
  v99[1] = v14;
  v88 = v14;
  v98 = MEMORY[0x212BBDF90](v29, v25, v99);
  v30 = MEMORY[0x24BDF4A08];
  MEMORY[0x212BBDF90](MEMORY[0x24BDF4A08], v27, &v98);
  v31 = sub_20E4A47D8();
  v32 = sub_20E39D010(&qword_254A19B28, &qword_254A19B00, MEMORY[0x24BEE12D8]);
  v33 = sub_20E39D010(&qword_254A19B30, &qword_254A19B08, (uint64_t)&unk_20E4ABBC0);
  *(_QWORD *)&v103 = v20;
  *((_QWORD *)&v103 + 1) = v21;
  *(_QWORD *)&v104 = v31;
  *((_QWORD *)&v104 + 1) = v32;
  *(_QWORD *)&v105 = v33;
  v34 = sub_20E4A47C0();
  v97 = MEMORY[0x212BBDF90](MEMORY[0x24BDF4A68], v31);
  v35 = MEMORY[0x212BBDF90](v30, v34, &v97);
  v36 = sub_20E4A413C();
  v73 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v38 = (char *)&v72 - v37;
  v39 = sub_20E4A39D4();
  v74 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v41 = (char *)&v72 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v42);
  v44 = (char *)&v72 - v43;
  v91 = v16;
  v87 = sub_20E4A3E00();
  v86 = *(_QWORD *)(v87 - 8);
  MEMORY[0x24BDAC7A8](v87);
  v85 = (char *)&v72 - v45;
  *(_OWORD *)&v106[9] = *(__int128 *)((char *)v3 + 57);
  v46 = v3[3];
  v105 = v3[2];
  *(_OWORD *)v106 = v46;
  v47 = v3[1];
  v103 = *v3;
  v104 = v47;
  v48 = *(_QWORD *)&v106[16];
  LOBYTE(v30) = v106[24];
  sub_20E39CFAC(*(uint64_t *)&v106[16], v106[24]);
  LOBYTE(v16) = sub_20E45CF28(v48, v30);
  sub_20E39CED8(v48, v30);
  if ((v16 & 1) != 0)
  {
    v49 = sub_20E4A4880();
    MEMORY[0x24BDAC7A8](v49);
    v50 = v88;
    *(&v72 - 4) = v89;
    *(&v72 - 3) = v50;
    v70 = v34;
    v71 = v35;
    sub_20E4A4130();
    v51 = MEMORY[0x212BBDF90](MEMORY[0x24BDF19A8], v36);
    sub_20E4A42B0();
    (*(void (**)(char *, uint64_t))(v73 + 8))(v38, v36);
    v93[0] = v51;
    v52 = v90;
    v93[1] = v90;
    v53 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v39, v93);
    sub_20E39D614(v44, v41, v39, v53);
    v54 = *(void (**)(char *, uint64_t))(v74 + 8);
    v54(v41, v39);
    sub_20E39D618((uint64_t)v44, v39, (uint64_t)v41);
    v55 = v91;
    MEMORY[0x212BBDF90](MEMORY[0x24BDF5210], v91);
    v56 = (uint64_t)v85;
    sub_20E3DC6B0((uint64_t)v41, v39);
    v54(v41, v39);
    v54(v44, v39);
  }
  else
  {
    v74 = v104;
    v107 = BYTE8(v104);
    sub_20E4A4898();
    v57 = v80;
    *v80 = xmmword_20E4A9FA0;
    (*(void (**)(_OWORD *, _QWORD, uint64_t))(v78 + 104))(v57, *MEMORY[0x24BDF4D40], v81);
    v58 = (uint64_t)v76;
    sub_20E4A4850();
    sub_20E3EC54C(v58, *((uint64_t *)&v103 + 1));
    v59 = sub_20E4A3CD4();
    MEMORY[0x24BDAC7A8](v59);
    v60 = v88;
    *(&v72 - 4) = v89;
    *(&v72 - 3) = v60;
    v61 = v75;
    sub_20E3ECA90();
    v70 = v61;
    v62 = (uint64_t)v83;
    sub_20E4A4904();
    v55 = v91;
    v63 = MEMORY[0x212BBDF90](MEMORY[0x24BDF5210], v91);
    v64 = v82;
    sub_20E39D614(v82, v62, v55, v63);
    v65 = *(void (**)(uint64_t, uint64_t))(v77 + 8);
    v65(v62, v55);
    sub_20E39D618((uint64_t)v64, v55, v62);
    v96[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDF19A8], v36);
    v52 = v90;
    v96[1] = v90;
    MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v39, v96);
    v56 = (uint64_t)v85;
    sub_20E39CBE0(v62, v39, v55);
    v65(v62, v55);
    v65((uint64_t)v64, v55);
  }
  v95[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDF19A8], v36);
  v95[1] = v52;
  v66 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v39, v95);
  v67 = MEMORY[0x212BBDF90](MEMORY[0x24BDF5210], v55);
  v94[0] = v66;
  v94[1] = v67;
  v68 = v87;
  MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v87, v94);
  sub_20E39D618(v56, v68, v92);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v86 + 8))(v56, v68);
}

uint64_t sub_20E3EB344@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[2];
  _QWORD v45[2];
  _QWORD v46[2];
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v39 = a3;
  v40 = a2;
  v41 = a5;
  v36 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19B00);
  v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19B08);
  v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19B10);
  v9 = sub_20E4A39D4();
  v10 = sub_20E4A3E00();
  v11 = sub_20E4A3E00();
  v12 = sub_20E39D010(&qword_254A19B18, &qword_254A19B10, (uint64_t)&protocol conformance descriptor for IndexedRandomAccessCollection<A>);
  v47 = v8;
  v48 = MEMORY[0x24BEE23D0];
  v49 = v11;
  v50 = v12;
  v51 = MEMORY[0x24BEE23D8];
  v13 = sub_20E4A47C0();
  v38 = a4;
  v46[0] = a4;
  v46[1] = sub_20E3ECAE0();
  v45[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v9, v46);
  v45[1] = v45[0];
  v14 = MEMORY[0x24BDEF3E0];
  v44[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v10, v45);
  v44[1] = a4;
  v43 = MEMORY[0x212BBDF90](v14, v11, v44);
  MEMORY[0x212BBDF90](MEMORY[0x24BDF4A08], v13, &v43);
  v15 = sub_20E4A47D8();
  v16 = sub_20E39D010(&qword_254A19B28, &qword_254A19B00, MEMORY[0x24BEE12D8]);
  v17 = sub_20E39D010(&qword_254A19B30, &qword_254A19B08, (uint64_t)&unk_20E4ABBC0);
  v47 = v36;
  v48 = v7;
  v49 = v15;
  v50 = v16;
  v51 = v17;
  v18 = sub_20E4A47C0();
  v37 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v36 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (uint64_t *)((char *)&v36 - v22);
  v24 = *(_QWORD *)a1;
  v25 = *(_QWORD *)(a1 + 8);
  v26 = *(_BYTE *)(a1 + 41);
  swift_bridgeObjectRetain();
  v27 = sub_20E3EB6B0(v25, v26, v24);
  swift_bridgeObjectRelease();
  v47 = v27;
  swift_getKeyPath();
  v28 = swift_allocObject();
  v29 = v38;
  *(_QWORD *)(v28 + 16) = v39;
  *(_QWORD *)(v28 + 24) = v29;
  v30 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v28 + 64) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v28 + 80) = v30;
  *(_OWORD *)(v28 + 89) = *(_OWORD *)(a1 + 57);
  v31 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v28 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v28 + 48) = v31;
  *(_QWORD *)(v28 + 112) = v40;
  sub_20E3ECBA0(a1);
  v35 = MEMORY[0x212BBDF90](MEMORY[0x24BDF4A68], v15);
  sub_20E4A47A8();
  v42 = v35;
  v32 = MEMORY[0x212BBDF90](MEMORY[0x24BDF4A08], v18, &v42);
  sub_20E39D614(v23, v20, v18, v32);
  v33 = *(void (**)(char *, uint64_t))(v37 + 8);
  v33(v20, v18);
  sub_20E39D618((uint64_t)v23, v18, v41);
  return ((uint64_t (*)(_QWORD *, uint64_t))v33)(v23, v18);
}

uint64_t sub_20E3EB6B0(uint64_t result, char a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;

  v4 = result;
  if (a2 == 2)
  {
    if (result)
      goto LABEL_9;
    __break(1u);
    goto LABEL_18;
  }
  if (!result)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v5 = *(_QWORD *)(a3 + 16);
  if (v5 % result != 1)
  {
LABEL_9:
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = a3;
    *(_QWORD *)(v9 + 24) = v4;
    MEMORY[0x24BDAC7A8](v9);
    swift_bridgeObjectRetain();
    v10 = sub_20E3EA664((_QWORD *(*)(__int128 *__return_ptr, __int128 *))sub_20E3EDA94);
    swift_release();
    return (uint64_t)v10;
  }
  if ((a2 & 1) != 0)
  {
    if ((unint64_t)v5 <= 1)
      v11 = 1;
    else
      v11 = 2 * v5 - 1;
    v12 = (_QWORD *)swift_allocObject();
    v12[2] = a3;
    v12[3] = a3 + 32;
    v12[4] = 0;
    v12[5] = v11;
    v12[6] = v4;
    MEMORY[0x24BDAC7A8](v12);
    swift_bridgeObjectRetain_n();
    v6 = sub_20E3EA664((_QWORD *(*)(__int128 *__return_ptr, __int128 *))sub_20E3EDA94);
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254A18A00);
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_20E4A72D0;
    result = a3;
    v13 = *(_QWORD *)(a3 + 16);
    if (!v13)
      goto LABEL_20;
    *(_QWORD *)(v8 + 32) = a3;
    *(_QWORD *)(v8 + 40) = a3 + 32;
    *(_QWORD *)(v8 + 48) = v13 - 1;
    *(_QWORD *)(v8 + 56) = (2 * v13) | 1;
    swift_bridgeObjectRetain();
LABEL_15:
    sub_20E3ECD28(v8);
    swift_bridgeObjectRelease();
    return (uint64_t)v6;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A18A00);
  result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_20E4A72D0;
  if (v5)
  {
    v6 = (_QWORD *)result;
    *(_QWORD *)(result + 32) = a3;
    *(_QWORD *)(result + 40) = a3 + 32;
    *(_OWORD *)(result + 48) = xmmword_20E4A9FB0;
    v7 = (_QWORD *)swift_allocObject();
    v7[2] = a3;
    v7[3] = a3 + 32;
    v7[4] = 1;
    v7[5] = (2 * v5) | 1;
    v7[6] = v4;
    MEMORY[0x24BDAC7A8](v7);
    swift_bridgeObjectRetain_n();
    v8 = (uint64_t)sub_20E3EA664((_QWORD *(*)(__int128 *__return_ptr, __int128 *))sub_20E3ED674);
    swift_release();
    goto LABEL_15;
  }
LABEL_19:
  __break(1u);
LABEL_20:
  __break(1u);
  return result;
}

uint64_t sub_20E3EB9D8@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  __int128 v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[2];
  _QWORD v38[2];
  _QWORD v39[8];

  v28 = a3;
  v29 = a6;
  v10 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19B10);
  v11 = sub_20E4A39D4();
  v12 = sub_20E4A3E00();
  v13 = sub_20E4A3E00();
  v14 = sub_20E39D010(&qword_254A19B18, &qword_254A19B10, (uint64_t)&protocol conformance descriptor for IndexedRandomAccessCollection<A>);
  v39[2] = v10;
  v39[3] = MEMORY[0x24BEE23D0];
  v39[4] = v13;
  v39[5] = v14;
  v39[6] = MEMORY[0x24BEE23D8];
  v15 = sub_20E4A47C0();
  v39[0] = a5;
  v39[1] = sub_20E3ECAE0();
  v38[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v11, v39);
  v38[1] = v38[0];
  v16 = MEMORY[0x24BDEF3E0];
  v37[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v12, v38);
  v37[1] = a5;
  v36 = MEMORY[0x212BBDF90](v16, v13, v37);
  MEMORY[0x212BBDF90](MEMORY[0x24BDF4A08], v15, &v36);
  v17 = sub_20E4A47D8();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (uint64_t *)((char *)&v28 - v22);
  v30 = a4;
  v31 = a5;
  v24 = a1[1];
  v32 = *a1;
  v33 = v24;
  v34 = a2;
  v35 = v28;
  sub_20E4A47CC();
  v25 = MEMORY[0x212BBDF90](MEMORY[0x24BDF4A68], v17);
  sub_20E39D614(v23, v20, v17, v25);
  v26 = *(void (**)(char *, uint64_t))(v18 + 8);
  v26(v20, v17);
  sub_20E39D618((uint64_t)v23, v17, v29);
  return ((uint64_t (*)(_QWORD *, uint64_t))v26)(v23, v17);
}

uint64_t sub_20E3EBC2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _OWORD *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  _QWORD *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  void (*v31)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t KeyPath;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD v48[2];
  _QWORD v49[2];
  _QWORD v50[2];
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v37 = a8;
  v40 = a6;
  v35 = a4;
  v46 = a9;
  v44 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19B10);
  v39 = sub_20E4A39D4();
  v42 = sub_20E4A3E00();
  v41 = sub_20E4A3E00();
  v43 = sub_20E39D010(&qword_254A19B18, &qword_254A19B10, (uint64_t)&protocol conformance descriptor for IndexedRandomAccessCollection<A>);
  v51 = v44;
  v52 = MEMORY[0x24BEE23D0];
  v53 = v41;
  v54 = v43;
  v55 = MEMORY[0x24BEE23D8];
  v14 = sub_20E4A47C0();
  v45 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v38 = (uint64_t *)((char *)&v34 - v18);
  v19 = a1;
  v51 = a1;
  v52 = a2;
  v20 = a2;
  v21 = v35;
  v53 = a3;
  v54 = v35;
  KeyPath = swift_getKeyPath();
  v22 = swift_allocObject();
  v23 = v37;
  *(_QWORD *)(v22 + 16) = a7;
  *(_QWORD *)(v22 + 24) = v23;
  v24 = a5[3];
  *(_OWORD *)(v22 + 64) = a5[2];
  *(_OWORD *)(v22 + 80) = v24;
  *(_OWORD *)(v22 + 89) = *(_OWORD *)((char *)a5 + 57);
  v25 = a5[1];
  *(_OWORD *)(v22 + 32) = *a5;
  *(_OWORD *)(v22 + 48) = v25;
  *(_QWORD *)(v22 + 112) = v19;
  *(_QWORD *)(v22 + 120) = v20;
  *(_QWORD *)(v22 + 128) = a3;
  *(_QWORD *)(v22 + 136) = v21;
  *(_QWORD *)(v22 + 144) = v40;
  v26 = (_QWORD *)swift_allocObject();
  v26[2] = a7;
  v26[3] = v23;
  v26[4] = sub_20E3ECC84;
  v26[5] = v22;
  swift_unknownObjectRetain_n();
  sub_20E3ECBA0((uint64_t)a5);
  v27 = sub_20E3ECAE0();
  v50[0] = v23;
  v50[1] = v27;
  v49[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v39, v50);
  v49[1] = v49[0];
  v28 = MEMORY[0x24BDEF3E0];
  v48[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v42, v49);
  v48[1] = v23;
  v33 = MEMORY[0x212BBDF90](v28, v41, v48);
  sub_20E4A47A8();
  v47 = v33;
  v29 = MEMORY[0x212BBDF90](MEMORY[0x24BDF4A08], v14, &v47);
  v30 = v38;
  sub_20E39D614(v38, v16, v14, v29);
  v31 = *(void (**)(char *, uint64_t))(v45 + 8);
  v31(v16, v14);
  sub_20E39D618((uint64_t)v30, v14, v46);
  return ((uint64_t (*)(_QWORD *, uint64_t))v31)(v30, v14);
}

uint64_t sub_20E3EBF34(_QWORD *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  return _s9JetEngine14ComponentModelP01_aB8_SwiftUIE6viewIDAD0cd4ViewH0Vvg_0();
}

uint64_t sub_20E3EBF78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X5>, unint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>, uint64_t a8, uint64_t a9)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  void (*v32)(uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  _QWORD *v50;
  char *v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD v61[2];
  _QWORD v62[2];
  _QWORD v63[2];
  _QWORD v64[2];
  _QWORD v65[2];
  _QWORD v66[2];
  _QWORD v67[2];
  _QWORD v68[2];
  _QWORD v69[2];
  char v70;
  char v71;

  v55 = a6;
  v53 = a5;
  v54 = a4;
  v56 = a2;
  v12 = sub_20E4A39D4();
  v13 = sub_20E4A3E00();
  v52 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v51 = (char *)&v47 - v14;
  v15 = *(_QWORD *)(a8 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (uint64_t *)((char *)&v47 - v20);
  v48 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v49 = (char *)&v47 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v50 = (uint64_t *)((char *)&v47 - v25);
  v59 = sub_20E4A3E00();
  v58 = *(_QWORD *)(v59 - 8);
  MEMORY[0x24BDAC7A8](v59);
  v57 = (char *)&v47 - v26;
  sub_20E3ECCE0(a3 + 41, (uint64_t)&v70);
  result = sub_20E3ECCE0((uint64_t)&v70, (uint64_t)&v71);
  v60 = a7;
  if (v71 == 2)
    goto LABEL_13;
  if ((v71 & 1) != 0)
  {
    if (__OFSUB__(v55, 1))
    {
      __break(1u);
    }
    else
    {
      if (v55 - 1 != a1)
        goto LABEL_13;
      if (!__OFSUB__(v53 >> 1, v54))
      {
        if ((v53 >> 1) - v54 == 1)
        {
          (*(void (**)(uint64_t, uint64_t))(a3 + 48))(a1, v56);
          v36 = (uint64_t)v49;
          sub_20E4A42B0();
          (*(void (**)(_QWORD *, uint64_t))(v15 + 8))(v21, a8);
          v37 = sub_20E3ECAE0();
          v64[0] = a9;
          v64[1] = v37;
          v38 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v12, v64);
          v31 = v50;
          sub_20E39D614(v50, v36, v12, v38);
          v32 = *(void (**)(uint64_t, uint64_t))(v48 + 8);
          v32(v36, v12);
          sub_20E39D618((uint64_t)v31, v12, v36);
          v33 = (uint64_t)v51;
          sub_20E39CBE0(v36, v12, v12);
          v32(v36, v12);
          v63[0] = v38;
          v63[1] = v38;
          v34 = MEMORY[0x24BDEF3E0];
          v35 = v63;
          goto LABEL_12;
        }
LABEL_13:
        (*(void (**)(uint64_t, uint64_t))(a3 + 48))(a1, v56);
        sub_20E39D614(v21, v18, a8, a9);
        v32 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
        v32((uint64_t)v18, a8);
        sub_20E39D618((uint64_t)v21, a8, (uint64_t)v18);
        v42 = sub_20E3ECAE0();
        v69[0] = a9;
        v69[1] = v42;
        v68[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v12, v69);
        v68[1] = v68[0];
        MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v13, v68);
        v39 = (uint64_t)v57;
        sub_20E39CBE0((uint64_t)v18, v13, a8);
        v32((uint64_t)v18, a8);
        v40 = v21;
        v41 = a8;
        goto LABEL_14;
      }
    }
    __break(1u);
  }
  else
  {
    if (a1)
      goto LABEL_13;
    if (!__OFSUB__(v53 >> 1, v54))
    {
      if ((v53 >> 1) - v54 == 1)
      {
        (*(void (**)(_QWORD, uint64_t))(a3 + 48))(0, v56);
        v28 = (uint64_t)v49;
        sub_20E4A42B0();
        (*(void (**)(_QWORD *, uint64_t))(v15 + 8))(v21, a8);
        v29 = sub_20E3ECAE0();
        v62[0] = a9;
        v62[1] = v29;
        v30 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v12, v62);
        v31 = v50;
        sub_20E39D614(v50, v28, v12, v30);
        v32 = *(void (**)(uint64_t, uint64_t))(v48 + 8);
        v32(v28, v12);
        sub_20E39D618((uint64_t)v31, v12, v28);
        v33 = (uint64_t)v51;
        sub_20E3DC6B0(v28, v12);
        v32(v28, v12);
        v61[0] = v30;
        v61[1] = v30;
        v34 = MEMORY[0x24BDEF3E0];
        v35 = v61;
LABEL_12:
        MEMORY[0x212BBDF90](v34, v13, v35);
        v39 = (uint64_t)v57;
        sub_20E3DC6B0(v33, v13);
        (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v33, v13);
        v40 = v31;
        v41 = v12;
LABEL_14:
        v32((uint64_t)v40, v41);
        v43 = sub_20E3ECAE0();
        v67[0] = a9;
        v67[1] = v43;
        v66[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v12, v67);
        v66[1] = v66[0];
        v44 = MEMORY[0x24BDEF3E0];
        v65[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v13, v66);
        v65[1] = a9;
        v45 = v44;
        v46 = v59;
        MEMORY[0x212BBDF90](v45, v59, v65);
        sub_20E39D618(v39, v46, v60);
        return (*(uint64_t (**)(uint64_t, uint64_t))(v58 + 8))(v39, v46);
      }
      goto LABEL_13;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_20E3EC54C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  void (*v8)(unint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;

  if (a2 < 0)
  {
    result = sub_20E4A6284();
    __break(1u);
  }
  else
  {
    if (a2)
    {
      v4 = sub_20E4A4844();
      v5 = sub_20E4A5D74();
      *(_QWORD *)(v5 + 16) = a2;
      v6 = *(_QWORD *)(v4 - 8);
      v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      v8 = *(void (**)(unint64_t, uint64_t, uint64_t))(v6 + 16);
      v8(v5 + v7, a1, v4);
      v9 = a2 - 1;
      if (a2 != 1)
      {
        v10 = *(_QWORD *)(v6 + 72);
        v11 = v5 + v10 + v7;
        do
        {
          v8(v11, a1, v4);
          v11 += v10;
          --v9;
        }
        while (v9);
      }
    }
    else
    {
      v5 = MEMORY[0x24BEE4AF8];
    }
    v12 = sub_20E4A4844();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(a1, v12);
    return v5;
  }
  return result;
}

uint64_t sub_20E3EC67C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t result;

  if (a3 < 0)
  {
    result = sub_20E4A6284();
    __break(1u);
  }
  else
  {
    if (a3)
    {
      v6 = (_QWORD *)sub_20E4A5D74();
      v7 = v6;
      v6[2] = a3;
      v6[4] = a1;
      v6[5] = a2;
      if (a3 != 1)
      {
        v6[6] = a1;
        v6[7] = a2;
        v8 = a3 - 2;
        if (v8)
        {
          v9 = v6 + 9;
          do
          {
            *(v9 - 1) = a1;
            *v9 = a2;
            swift_bridgeObjectRetain();
            v9 += 2;
            --v8;
          }
          while (v8);
        }
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      return MEMORY[0x24BEE4AF8];
    }
    return (uint64_t)v7;
  }
  return result;
}

uint64_t sub_20E3EC774@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  _QWORD *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v23 = a4;
  v21 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19AF0);
  v20 = sub_20E39D010((unint64_t *)&qword_254A19AF8, &qword_254A19AF0, (uint64_t)&protocol conformance descriptor for IndexedRandomAccessCollection<A>);
  v25 = v21;
  v26 = MEMORY[0x24BEE23D0];
  v27 = a2;
  v28 = v20;
  v29 = MEMORY[0x24BEE23D8];
  v7 = sub_20E4A47C0();
  v22 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (uint64_t *)((char *)&v20 - v11);
  v25 = *(_QWORD *)a1;
  swift_getKeyPath();
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a2;
  *(_QWORD *)(v13 + 24) = a3;
  v14 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v13 + 64) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v13 + 80) = v14;
  *(_OWORD *)(v13 + 89) = *(_OWORD *)(a1 + 57);
  v15 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v13 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v13 + 48) = v15;
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a2;
  v16[3] = a3;
  v16[4] = sub_20E3ED74C;
  v16[5] = v13;
  swift_bridgeObjectRetain();
  sub_20E3ECBA0(a1);
  sub_20E4A47A8();
  v24 = a3;
  v17 = MEMORY[0x212BBDF90](MEMORY[0x24BDF4A08], v7, &v24);
  sub_20E39D614(v12, v9, v7, v17);
  v18 = *(void (**)(char *, uint64_t))(v22 + 8);
  v18(v9, v7);
  sub_20E39D618((uint64_t)v12, v7, v23);
  return ((uint64_t (*)(_QWORD *, uint64_t))v18)(v12, v7);
}

uint64_t sub_20E3EC98C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v7 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (uint64_t *)((char *)&v17 - v12);
  (*(void (**)(double))(v14 + 48))(v11);
  sub_20E39D614(v13, v9, a2, a3);
  v15 = *(void (**)(char *, uint64_t))(v7 + 8);
  v15(v9, a2);
  sub_20E39D618((uint64_t)v13, a2, a4);
  return ((uint64_t (*)(_QWORD *, uint64_t))v15)(v13, a2);
}

uint64_t sub_20E3ECA64(_QWORD *a1, uint64_t (*a2)(_QWORD, _QWORD *))
{
  return a2(*a1, a1 + 1);
}

uint64_t sub_20E3ECA90()
{
  sub_20E4A3E78();
  sub_20E3ED6B8();
  return sub_20E4A644C();
}

unint64_t sub_20E3ECAE0()
{
  unint64_t result;

  result = qword_254A19B20;
  if (!qword_254A19B20)
  {
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDEFAE0], MEMORY[0x24BDEFAF0]);
    atomic_store(result, (unint64_t *)&qword_254A19B20);
  }
  return result;
}

uint64_t sub_20E3ECB24@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_20E3EC774(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_20E3ECB30@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_20E3EB344(v1[4], v1[5], v1[2], v1[3], a1);
}

uint64_t sub_20E3ECB3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t KeyPath;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  KeyPath = swift_getKeyPath();
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_QWORD *)(a2 + 16) = v4;
  *(_QWORD *)(a2 + 24) = v5;
  *(_QWORD *)(a2 + 32) = KeyPath;
  return swift_unknownObjectRetain();
}

uint64_t sub_20E3ECB88()
{
  return objectdestroyTm();
}

uint64_t sub_20E3ECB90@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_20E3EB9D8(a1, (uint64_t)(v2 + 4), v2[14], v2[2], v2[3], a2);
}

uint64_t sub_20E3ECBA0(uint64_t a1)
{
  uint64_t v2;
  char v3;

  v2 = *(_QWORD *)(a1 + 64);
  v3 = *(_BYTE *)(a1 + 72);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_20E39CFAC(v2, v3);
  return a1;
}

uint64_t sub_20E3ECBEC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_20E3EBC2C(*(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_OWORD **)(v1 + 64), *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_20E3ECC00(_QWORD *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  return _s9JetEngine14ComponentModelP01_aB8_SwiftUIE6viewIDAD0cd4ViewH0Vvg_0();
}

uint64_t sub_20E3ECC44()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  sub_20E39CED8(*(_QWORD *)(v0 + 96), *(_BYTE *)(v0 + 104));
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_20E3ECC84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_20E3EBF78(a1, a2, v3 + 32, *(_QWORD *)(v3 + 128), *(_QWORD *)(v3 + 136), *(_QWORD *)(v3 + 144), a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24));
}

uint64_t sub_20E3ECCB8(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD *))(v1 + 32))(*a1, a1 + 1);
}

uint64_t sub_20E3ECCE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18A78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20E3ECD28(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_20E3AD4C4(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[4 * v9 + 4];
  if (a1 + 32 < v10 + 32 * v8 && v10 < a1 + 32 + 32 * v8)
    goto LABEL_24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A18A08);
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_20E4A62D8();
  __break(1u);
  return result;
}

uint64_t sub_20E3ECE94(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_20E3ECF04(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_20E3ECEB0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_20E3ED08C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_20E3ECECC(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_20E3ED1F8(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_20E3ECEE8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_20E3ED360(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_20E3ECF04(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254A18A00);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 32 * v8)
      memmove(v10 + 4, a4 + 4, 32 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 32 * v8 || v13 >= v14 + 32 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254A18A08);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_20E4A62D8();
  __break(1u);
  return result;
}

uint64_t sub_20E3ED08C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0D70);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_20E4A62D8();
  __break(1u);
  return result;
}

uint64_t sub_20E3ED1F8(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254A18A20);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_20E4A62D8();
  __break(1u);
  return result;
}

uint64_t sub_20E3ED360(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A18A10);
  v10 = *(_QWORD *)(_s13PopupHUDModelC8RowModelVMa(0) - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1)
    goto LABEL_34;
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(_s13PopupHUDModelC8RowModelVMa(0) - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (char *)v13 + v17;
  v19 = (char *)a4 + v17;
  if ((a1 & 1) != 0)
  {
    if (v13 < a4 || v18 >= &v19[*(_QWORD *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v20 = *(_QWORD *)(v16 + 72) * v8;
  v21 = &v18[v20];
  v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  result = sub_20E4A62D8();
  __break(1u);
  return result;
}

unint64_t *sub_20E3ED540@<X0>(unint64_t *result@<X0>, unint64_t **a2@<X1>, unint64_t **a3@<X8>)
{
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v3 = *result;
  if ((*result & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v4 = result[1];
  result = *a2;
  v5 = (*a2)[2];
  if (v5 < v3 || (uint64_t)v5 < v4)
    goto LABEL_9;
  if ((v4 & 0x8000000000000000) == 0)
  {
    *a3 = result;
    a3[1] = result + 4;
    a3[2] = (unint64_t *)v3;
    a3[3] = (unint64_t *)((2 * v4) | 1);
    return (unint64_t *)swift_bridgeObjectRetain();
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_20E3ED598()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

_QWORD *sub_20E3ED5BC@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  v3 = *(_QWORD *)(v2 + 24);
  v4 = *result;
  v5 = __OFADD__(*result, v3);
  v6 = *result + v3;
  if (v5)
  {
    __break(1u);
  }
  else
  {
    if (*(_QWORD *)(*(_QWORD *)(v2 + 16) + 16) < v6)
      v6 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 16);
    if (v6 >= v4)
    {
      *a2 = v4;
      a2[1] = v6;
      return result;
    }
  }
  __break(1u);
  return result;
}

_QWORD *sub_20E3ED5F4@<X0>(_QWORD *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *result;
  v5 = *(_QWORD *)(a2 + 16);
  v6 = v5 + *result;
  if (__OFADD__(v5, *result))
  {
    __break(1u);
    goto LABEL_9;
  }
  v7 = __OFADD__(v4, a3);
  v8 = v4 + a3;
  if (v7)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v7 = __OFADD__(v5, v8);
  v9 = v5 + v8;
  if (v7)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (*(_QWORD *)(a2 + 24) >> 1 < v9)
    v9 = *(_QWORD *)(a2 + 24) >> 1;
  if (v9 >= v6)
  {
    *a4 = v6;
    a4[1] = v9;
    return result;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_20E3ED644()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

_QWORD *sub_20E3ED668@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_20E3ED5F4(a1, v2 + 16, *(_QWORD *)(v2 + 48), a2);
}

unint64_t *sub_20E3ED674@<X0>(unint64_t *a1@<X0>, unint64_t **a2@<X8>)
{
  uint64_t v2;

  return sub_20E3ED540(a1, *(unint64_t ***)(v2 + 16), a2);
}

uint64_t sub_20E3ED690(uint64_t a1)
{
  swift_release();
  return a1;
}

unint64_t sub_20E3ED6B8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254A18A58;
  if (!qword_254A18A58)
  {
    v1 = sub_20E4A3E78();
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDEF9B8], v1);
    atomic_store(result, (unint64_t *)&qword_254A18A58);
  }
  return result;
}

uint64_t sub_20E3ED700()
{
  return objectdestroyTm();
}

uint64_t objectdestroyTm()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  sub_20E39CED8(*(_QWORD *)(v0 + 96), *(_BYTE *)(v0 + 104));
  return swift_deallocObject();
}

uint64_t sub_20E3ED74C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_20E3EC98C(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_20E3ED758()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E3ED784(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v26[2];
  _QWORD v27[2];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[2];
  _QWORD v32[2];
  _QWORD v33[2];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v1 = *a1;
  v2 = a1[1];
  v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19B00);
  v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19B08);
  v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19B10);
  v6 = sub_20E4A39D4();
  v7 = sub_20E4A3E00();
  v8 = sub_20E4A3E00();
  v9 = sub_20E39D010(&qword_254A19B18, &qword_254A19B10, (uint64_t)&protocol conformance descriptor for IndexedRandomAccessCollection<A>);
  v34 = v5;
  v35 = MEMORY[0x24BEE23D0];
  v36 = v8;
  v37 = v9;
  v38 = MEMORY[0x24BEE23D8];
  v10 = sub_20E4A47C0();
  v11 = sub_20E3ECAE0();
  v33[0] = v2;
  v33[1] = v11;
  v32[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v6, v33);
  v32[1] = v32[0];
  v12 = MEMORY[0x24BDEF3E0];
  v31[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v7, v32);
  v31[1] = v2;
  v30 = MEMORY[0x212BBDF90](v12, v8, v31);
  v13 = MEMORY[0x24BDF4A08];
  MEMORY[0x212BBDF90](MEMORY[0x24BDF4A08], v10, &v30);
  v14 = sub_20E4A47D8();
  v15 = sub_20E39D010(&qword_254A19B28, &qword_254A19B00, MEMORY[0x24BEE12D8]);
  v16 = sub_20E39D010(&qword_254A19B30, &qword_254A19B08, (uint64_t)&unk_20E4ABBC0);
  v34 = v3;
  v35 = v4;
  v36 = v14;
  v37 = v15;
  v38 = v16;
  v17 = sub_20E4A47C0();
  v29 = MEMORY[0x212BBDF90](MEMORY[0x24BDF4A68], v14);
  MEMORY[0x212BBDF90](v13, v17, &v29);
  v18 = sub_20E4A413C();
  v19 = sub_20E4A39D4();
  v20 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19AF0);
  v21 = sub_20E39D010((unint64_t *)&qword_254A19AF8, &qword_254A19AF0, (uint64_t)&protocol conformance descriptor for IndexedRandomAccessCollection<A>);
  v34 = v20;
  v35 = MEMORY[0x24BEE23D0];
  v36 = v1;
  v37 = v21;
  v38 = MEMORY[0x24BEE23D8];
  v22 = sub_20E4A47C0();
  v28 = v2;
  MEMORY[0x212BBDF90](v13, v22, &v28);
  v23 = sub_20E4A4910();
  v24 = sub_20E4A3E00();
  v27[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDF19A8], v18);
  v27[1] = v11;
  v26[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v19, v27);
  v26[1] = MEMORY[0x212BBDF90](MEMORY[0x24BDF5210], v23);
  return MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v24, v26);
}

unint64_t *sub_20E3EDA94@<X0>(unint64_t *a1@<X0>, unint64_t **a2@<X8>)
{
  return sub_20E3ED674(a1, a2);
}

uint64_t sub_20E3EDAB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  char v33;
  double v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unsigned __int8 *v49;
  int v50;
  char v51;
  uint64_t v52;
  _QWORD v53[2];
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  void (*v58)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v59;
  uint64_t v60;
  _QWORD v61[3];
  char v62;
  double v63;

  v60 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19B68);
  MEMORY[0x24BDAC7A8](v3);
  v56 = (char *)v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_20E4A4FAC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v59 = (char *)v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v53 - v9;
  v11 = type metadata accessor for MediaArtwork.SystemImageProtocol.MatchedSymbol();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_QWORD *)v14 + 2) = 0;
  v14[24] = 1;
  v16 = (uint64_t)&v14[*(int *)(v15 + 24)];
  v17 = sub_20E4A3D28();
  v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56);
  v57 = v17;
  v58 = v18;
  ((void (*)(uint64_t, uint64_t, uint64_t))v18)(v16, 1, 1);
  v19 = sub_20E4A4D24();
  v21 = v20;
  swift_bridgeObjectRelease();
  v22 = HIBYTE(v21) & 0xF;
  if ((v21 & 0x2000000000000000) == 0)
    v22 = v19 & 0xFFFFFFFFFFFFLL;
  if (!v22)
  {
    v37 = sub_20E4A4D3C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 8))(a1, v37);
    sub_20E39D1F8(v16, &qword_254A19B68);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v60, 1, 1, v11);
  }
  v54 = v11;
  v55 = v12;
  *(_QWORD *)v14 = sub_20E4A4D24();
  *((_QWORD *)v14 + 1) = v23;
  v24 = (double *)v14;
  v25 = a1;
  sub_20E4A4D30();
  v26 = sub_20E4A4FB8();
  v28 = v27;
  v29 = *(uint64_t (**)(char *, uint64_t))(v6 + 8);
  v30 = v29(v10, v5);
  v31 = v5;
  if (!v28)
    goto LABEL_18;
  v63 = 0.0;
  MEMORY[0x24BDAC7A8](v30);
  v53[-2] = &v63;
  if ((v28 & 0x1000000000000000) != 0 || !(v28 & 0x2000000000000000 | v26 & 0x1000000000000000))
  {
    sub_20E4A6194();
    swift_bridgeObjectRelease();
    if ((v62 & 1) == 0)
      goto LABEL_18;
  }
  else if ((v28 & 0x2000000000000000) != 0)
  {
    v61[0] = v26;
    v61[1] = v28 & 0xFFFFFFFFFFFFFFLL;
    if (v26 <= 0x20u && ((1 << v26) & 0x100003E01) != 0
      || (v49 = (unsigned __int8 *)_swift_stdlib_strtod_clocale()) == 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
    v50 = *v49;
    swift_bridgeObjectRelease();
    if (v50)
      goto LABEL_18;
  }
  else
  {
    v53[1] = v53;
    if ((v26 & 0x1000000000000000) != 0)
      v32 = (_BYTE *)((v28 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v32 = (_BYTE *)sub_20E4A61F4();
    sub_20E3EF140(v32, (BOOL *)v61);
    v33 = v61[0];
    swift_bridgeObjectRelease();
    if ((v33 & 1) == 0)
      goto LABEL_18;
  }
  v34 = v63;
  if (v63 >= 0.0 && v63 <= 1.0)
  {
    v35 = v16;
    v36 = 0;
    goto LABEL_19;
  }
LABEL_18:
  v35 = v16;
  v36 = 1;
  v34 = 0.0;
LABEL_19:
  v39 = (uint64_t)v24;
  v24[2] = v34;
  *((_BYTE *)v24 + 24) = v36;
  v40 = v59;
  sub_20E4A4D30();
  v41 = sub_20E4A4FB8();
  v43 = v42;
  v29(v40, v31);
  v44 = v60;
  v46 = v54;
  v45 = v55;
  if (!v43)
    goto LABEL_41;
  if ((v41 != 0x6863726172656968 || v43 != 0xEC0000006C616369) && (sub_20E4A635C() & 1) == 0)
  {
    if (v41 == 0x6F7268636F6E6F6DLL && v43 == 0xEA0000000000656DLL || (sub_20E4A635C() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v47 = (uint64_t)v56;
      sub_20E4A3CF8();
      goto LABEL_24;
    }
    if (v41 == 0x6C6F6369746C756DLL && v43 == 0xEA0000000000726FLL || (sub_20E4A635C() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v47 = (uint64_t)v56;
      sub_20E4A3D04();
      goto LABEL_24;
    }
    if (v41 == 0x657474656C6170 && v43 == 0xE700000000000000)
    {
      swift_bridgeObjectRelease();
LABEL_40:
      v47 = (uint64_t)v56;
      sub_20E4A3D1C();
      goto LABEL_24;
    }
    v51 = sub_20E4A635C();
    swift_bridgeObjectRelease();
    if ((v51 & 1) != 0)
      goto LABEL_40;
LABEL_41:
    v52 = sub_20E4A4D3C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 8))(v25, v52);
    sub_20E39D1F8(v35, &qword_254A19B68);
    v58(v35, 1, 1, v57);
    goto LABEL_42;
  }
  swift_bridgeObjectRelease();
  v47 = (uint64_t)v56;
  sub_20E4A3D10();
LABEL_24:
  v48 = sub_20E4A4D3C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 8))(v25, v48);
  v58(v47, 0, 1, v57);
  sub_20E3EF0F8(v47, v35);
LABEL_42:
  sub_20E3EF078(v39, v44);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v45 + 56))(v44, 0, 1, v46);
  return sub_20E3EF0BC(v39);
}

uint64_t sub_20E3EE0F0()
{
  uint64_t v0;

  v0 = sub_20E4A4D60();
  __swift_allocate_value_buffer(v0, qword_254A19B38);
  __swift_project_value_buffer(v0, (uint64_t)qword_254A19B38);
  return sub_20E4A4D48();
}

uint64_t sub_20E3EE1BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t *v20;
  uint64_t v21;
  NSObject *v22;
  os_signpost_type_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char *v31;
  os_signpost_id_t v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  char *v36;
  uint64_t *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v39 = sub_20E4A3494();
  v41 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v38 = (char *)&v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v40 = (char *)&v36 - v4;
  v5 = type metadata accessor for MediaArtwork.SystemImageProtocol.MatchedSymbol();
  MEMORY[0x24BDAC7A8](v5);
  v37 = (uint64_t *)((char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19B68);
  MEMORY[0x24BDAC7A8](v7);
  v36 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v36 - v10;
  v12 = sub_20E4A3D28();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  v16 = sub_20E4A45E0();
  sub_20E3EF030(a1 + *(int *)(v5 + 24), (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_20E39D1F8((uint64_t)v11, &qword_254A19B68);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
    v17 = (uint64_t)v36;
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v36, v15, v12);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 56))(v17, 0, 1, v12);
    v18 = sub_20E4A45EC();
    swift_release();
    sub_20E39D1F8(v17, &qword_254A19B68);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    v16 = v18;
  }
  v19 = v40;
  v20 = v37;
  if (qword_254A18110 != -1)
    swift_once();
  v21 = sub_20E4A34B8();
  __swift_project_value_buffer(v21, (uint64_t)qword_254A24688);
  sub_20E3EF078(a1, (uint64_t)v20);
  sub_20E4A3488();
  v22 = sub_20E4A34AC();
  v23 = sub_20E4A6050();
  if ((sub_20E4A60D4() & 1) != 0)
  {
    v24 = *(void (**)(char *, char *, uint64_t))(v41 + 16);
    v36 = (char *)v16;
    v25 = v39;
    v24(v38, v19, v39);
    v26 = (uint8_t *)swift_slowAlloc();
    v27 = swift_slowAlloc();
    v43 = v27;
    *(_DWORD *)v26 = 136315138;
    v28 = (uint64_t)v20;
    v29 = *v20;
    v30 = v20[1];
    swift_bridgeObjectRetain();
    v42 = sub_20E45F228(v29, v30, &v43);
    sub_20E4A60F8();
    swift_bridgeObjectRelease();
    sub_20E3EF0BC(v28);
    v31 = v38;
    v32 = sub_20E4A347C();
    _os_signpost_emit_with_name_impl(&dword_20E399000, v22, v23, v32, "Image.SystemImageLoad", "name=%s", v26, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x212BBE068](v27, -1, -1);
    MEMORY[0x212BBE068](v26, -1, -1);

    v33 = *(void (**)(char *, uint64_t))(v41 + 8);
    v33(v40, v25);
    v34 = v25;
    v16 = (uint64_t)v36;
    v33(v31, v34);
  }
  else
  {

    sub_20E3EF0BC((uint64_t)v20);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v19, v39);
  }
  return v16;
}

uint64_t MediaArtwork.SystemImageProtocol.match(_:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18AA0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_20E4A4D3C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v15 - v10;
  if (qword_254A180D8 != -1)
    swift_once();
  v12 = sub_20E4A4D60();
  __swift_project_value_buffer(v12, (uint64_t)qword_254A19B38);
  sub_20E4A4D54();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_20E39D1F8((uint64_t)v4, &qword_254A18AA0);
    v13 = type metadata accessor for MediaArtwork.SystemImageProtocol.MatchedSymbol();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a1, 1, 1, v13);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v4, v5);
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v11, v5);
    sub_20E3EDAB8((uint64_t)v8, a1);
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  }
}

uint64_t type metadata accessor for MediaArtwork.SystemImageProtocol.MatchedSymbol()
{
  uint64_t result;

  result = qword_254A19B70;
  if (!qword_254A19B70)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t MediaArtwork.SystemImageProtocol.fetch(contentsOf:)(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19B50);
  return sub_20E3EE1BC(a1 + *(int *)(v2 + 28));
}

unint64_t sub_20E3EE818()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254A19B58;
  if (!qword_254A19B58)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19B60);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BE5C808], v1);
    atomic_store(result, (unint64_t *)&qword_254A19B58);
  }
  return result;
}

uint64_t sub_20E3EE864@<X0>(uint64_t a1@<X8>)
{
  return MediaArtwork.SystemImageProtocol.match(_:)(a1);
}

uint64_t sub_20E3EE878@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19B50);
  result = sub_20E3EE1BC(a1 + *(int *)(v4 + 28));
  *a2 = result;
  return result;
}

ValueMetadata *type metadata accessor for MediaArtwork.SystemImageProtocol()
{
  return &type metadata for MediaArtwork.SystemImageProtocol;
}

_QWORD *_s19SystemImageProtocolV13MatchedSymbolVwCP(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(const void *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v13 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    v6 = *(int *)(a3 + 24);
    v7 = (void *)(a1 + v6);
    v8 = (char *)a2 + v6;
    v9 = sub_20E4A3D28();
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19B68);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v3;
}

uint64_t _s19SystemImageProtocolV13MatchedSymbolVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_20E4A3D28();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

uint64_t _s19SystemImageProtocolV13MatchedSymbolVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  const void *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(const void *, uint64_t, uint64_t);
  uint64_t v11;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v5 = *(int *)(a3 + 24);
  v6 = (void *)(a1 + v5);
  v7 = (const void *)(a2 + v5);
  v8 = sub_20E4A3D28();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48);
  swift_bridgeObjectRetain();
  if (v10(v7, 1, v8))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19B68);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v6, v7, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

uint64_t _s19SystemImageProtocolV13MatchedSymbolVwca(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v6;
  v7 = *(int *)(a3 + 24);
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_20E4A3D28();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19B68);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t _s19SystemImageProtocolV13MatchedSymbolVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(int *)(a3 + 24);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = sub_20E4A3D28();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19B68);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t _s19SystemImageProtocolV13MatchedSymbolVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v7 = *(int *)(a3 + 24);
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_20E4A3D28();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19B68);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t _s19SystemImageProtocolV13MatchedSymbolVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_20E3EEE5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19B68);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t _s19SystemImageProtocolV13MatchedSymbolVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_20E3EEEE8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19B68);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

void sub_20E3EEF60()
{
  unint64_t v0;

  sub_20E3EEFDC();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_20E3EEFDC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254A19B80)
  {
    sub_20E4A3D28();
    v0 = sub_20E4A60E0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254A19B80);
  }
}

uint64_t sub_20E3EF030(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19B68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20E3EF078(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MediaArtwork.SystemImageProtocol.MatchedSymbol();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20E3EF0BC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MediaArtwork.SystemImageProtocol.MatchedSymbol();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20E3EF0F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19B68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

_BYTE *sub_20E3EF140@<X0>(_BYTE *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3;
  BOOL v4;
  uint64_t v5;
  BOOL v6;
  BOOL v7;

  v3 = *result;
  v4 = v3 > 0x20;
  v5 = (1 << v3) & 0x100003E01;
  v6 = v4 || v5 == 0;
  v7 = v6 && (result = (_BYTE *)_swift_stdlib_strtod_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

void IntentView.init(what:transaction:configuration:working:failed:content:)(uint64_t a1, uint64_t a2, unsigned __int8 *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD v28[3];
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  unsigned __int8 *v43;
  uint64_t v44;
  uint64_t v45;

  v39 = a7;
  v40 = a8;
  v37 = a5;
  v38 = a6;
  v36 = a4;
  v43 = a3;
  v35 = a2;
  v45 = a1;
  v34 = a9;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v42 = AssociatedTypeWitness;
  v29 = sub_20E4A60E0();
  v28[1] = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v28[2] = (char *)v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v32 = (char *)v28 - v20;
  v44 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v21 = *(_QWORD *)(v44 + 64);
  MEMORY[0x24BDAC7A8](v22);
  v30 = (char *)v28 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v41 = (char *)v28 - v24;
  MEMORY[0x24BDAC7A8](v25);
  v31 = (char *)v28 - v26;
  v33 = *v43;
  v27 = (_QWORD *)swift_allocObject();
  v27[2] = a10;
  v27[3] = a11;
  v27[4] = a12;
  v27[5] = a13;
  v27[6] = a14;
  v27[7] = a15;
  v27[8] = a16;
  v27[9] = a17;
  sub_20E3F1AF0();
}

void sub_20E3EF384(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)(v5 + 32) = a1;
  *(_QWORD *)(v5 + 40) = a2;
  *(_BYTE *)(v5 + 48) = a3 & 1;
  *(_QWORD *)(v12 - 160) = v4;
  *(_QWORD *)(v12 - 152) = v3;
  *(_QWORD *)(v12 - 320) = v3;
  *(_QWORD *)(v12 - 216) = v7;
  *(_QWORD *)(v12 - 144) = v7;
  *(_QWORD *)(v12 - 136) = v6;
  *(_QWORD *)(v12 - 192) = v6;
  *(_QWORD *)(v12 - 128) = v10;
  *(_QWORD *)(v12 - 120) = v9;
  *(_QWORD *)(v12 - 312) = v9;
  *(_QWORD *)(v12 - 304) = v11;
  *(_QWORD *)(v12 - 112) = v11;
  *(_QWORD *)(v12 - 104) = v8;
  *(_QWORD *)(v12 - 296) = v8;
  type metadata accessor for IntentView();
}

void sub_20E3EF3D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v6 = v2 + *(int *)(a1 + 112);
  *(_QWORD *)v6 = swift_getKeyPath();
  *(_BYTE *)(v6 + 8) = 0;
  *(_QWORD *)(v4 - 328) = a1;
  v7 = v2 + *(int *)(a1 + 116);
  v9 = type metadata accessor for _IntentObserverKey(0, v1, v3, v8);
  type metadata accessor for _IntentProgress(255, v1, v3, v10);
  swift_getFunctionTypeMetadata1();
  v11 = sub_20E4A60E0();
  v12 = MEMORY[0x212BBDF90](&unk_20E4AAA58, v9);
  v13 = v11;
  v14 = *(_QWORD *)(v4 - 184);
  sub_20E461270(v9, v13, v9, v12);
  v15 = *(_BYTE *)(v4 - 144);
  *(_OWORD *)v7 = *(_OWORD *)(v4 - 160);
  *(_BYTE *)(v7 + 16) = v15;
  v16 = *(_QWORD *)(v4 - 336);
  *(_QWORD *)(v4 - 168) = 0;
  sub_20E4A4640();
  *(_OWORD *)v2 = *(_OWORD *)(v4 - 160);
  *(_QWORD *)(v2 + 16) = 0;
  *(_BYTE *)(v2 + 24) = 0;
  v17 = *(_QWORD *)(v4 - 208);
  v18 = v1;
  *(_QWORD *)(v4 - 200) = v3;
  sub_20E4A4C88();
  v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  v20 = v17;
  if (v19(v16, 1, v17) == 1)
  {
    v21 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 376) + 8);
    v22 = *(_QWORD *)(v4 - 360);
    v21(v16, v22);
    v23 = v18;
    v24 = *(_QWORD *)(v4 - 368);
    sub_20E4A50D8();
    v25 = v19(v24, 1, v20);
    v26 = *(_QWORD *)(v4 - 192);
    v27 = *(_QWORD *)(v4 - 216);
    if (v25 == 1)
    {
      v21(v24, v22);
      v28 = (_QWORD *)swift_allocObject();
      v29 = *(_QWORD *)(v4 - 320);
      v28[2] = v23;
      v28[3] = v29;
      v28[4] = v27;
      v28[5] = v26;
      v30 = *(_QWORD *)(v4 - 200);
      v31 = *(_QWORD *)(v4 - 312);
      v28[6] = v30;
      v28[7] = v31;
      v32 = *(_QWORD *)(v4 - 304);
      v33 = *(_QWORD *)(v4 - 296);
      v28[8] = v32;
      v28[9] = v33;
      *(_QWORD *)(v4 - 160) = v23;
      *(_QWORD *)(v4 - 152) = v29;
      *(_QWORD *)(v4 - 144) = v27;
      *(_QWORD *)(v4 - 136) = v26;
      *(_QWORD *)(v4 - 128) = v30;
      *(_QWORD *)(v4 - 120) = v31;
      *(_QWORD *)(v4 - 112) = v32;
      *(_QWORD *)(v4 - 104) = v33;
      type metadata accessor for IntentView.Dispatcher();
    }
    v48 = *(_QWORD *)(v4 - 184);
    v49 = *(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 32);
    *(_QWORD *)(v4 - 336) = v49;
    v50 = *(_QWORD *)(v4 - 352);
    v51 = v20;
    v49(v50, v24, v20);
    v52 = *(_QWORD *)(v4 - 224);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 16))(v52, v50, v20);
    v53 = (*(unsigned __int8 *)(v48 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
    v54 = (_QWORD *)swift_allocObject();
    v55 = *(_QWORD *)(v4 - 320);
    v54[2] = v23;
    v54[3] = v55;
    v57 = *(_QWORD *)(v4 - 200);
    v56 = *(_QWORD *)(v4 - 192);
    v54[4] = v27;
    v54[5] = v56;
    v58 = *(_QWORD *)(v4 - 312);
    v54[6] = v57;
    v54[7] = v58;
    v59 = (char *)v54 + v53;
    v60 = *(_QWORD *)(v4 - 304);
    v61 = *(_QWORD *)(v4 - 296);
    v54[8] = v60;
    v54[9] = v61;
    (*(void (**)(char *, uint64_t, uint64_t))(v4 - 336))(v59, v52, v51);
    *(_QWORD *)(v4 - 160) = v23;
    *(_QWORD *)(v4 - 152) = v55;
    v62 = *(_QWORD *)(v4 - 192);
    *(_QWORD *)(v4 - 144) = *(_QWORD *)(v4 - 216);
    *(_QWORD *)(v4 - 136) = v62;
    *(_QWORD *)(v4 - 128) = v57;
    *(_QWORD *)(v4 - 120) = v58;
    *(_QWORD *)(v4 - 112) = v60;
    *(_QWORD *)(v4 - 104) = v61;
    type metadata accessor for IntentView.Dispatcher();
  }
  v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32);
  *(_QWORD *)(v4 - 352) = v34;
  v35 = *(_QWORD *)(v4 - 344);
  v34(v35, v16, v17);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v14 + 16))(*(_QWORD *)(v4 - 224), v35, v17);
  v36 = (*(unsigned __int8 *)(v14 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v37 = (_QWORD *)swift_allocObject();
  v38 = *(_QWORD *)(v4 - 320);
  v37[2] = v18;
  v37[3] = v38;
  v39 = *(_QWORD *)(v4 - 224);
  v40 = *(_QWORD *)(v4 - 216);
  v41 = *(_QWORD *)(v4 - 200);
  v42 = *(_QWORD *)(v4 - 192);
  v37[4] = v40;
  v37[5] = v42;
  v43 = *(_QWORD *)(v4 - 312);
  v37[6] = v41;
  v37[7] = v43;
  v44 = (char *)v37 + v36;
  v45 = v17;
  v46 = *(_QWORD *)(v4 - 304);
  v47 = *(_QWORD *)(v4 - 296);
  v37[8] = v46;
  v37[9] = v47;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 - 352))(v44, v39, v45);
  *(_QWORD *)(v4 - 160) = v18;
  *(_QWORD *)(v4 - 152) = v38;
  *(_QWORD *)(v4 - 144) = v40;
  *(_QWORD *)(v4 - 136) = v42;
  *(_QWORD *)(v4 - 128) = v41;
  *(_QWORD *)(v4 - 120) = v43;
  *(_QWORD *)(v4 - 112) = v46;
  *(_QWORD *)(v4 - 104) = v47;
  type metadata accessor for IntentView.Dispatcher();
}

void sub_20E3EF818(uint64_t a1)
{
  MEMORY[0x212BBDF90](&unk_20E4AA438, a1);
  sub_20E4A36E0();
  JUMPOUT(0x20E3EF864);
}

uint64_t sub_20E3EF928@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_20E3F776C();
  result = sub_20E4A3C08();
  *a1 = v3;
  return result;
}

uint64_t sub_20E3EF974()
{
  sub_20E3F776C();
  swift_retain();
  return sub_20E4A3C14();
}

uint64_t sub_20E3EF9D0(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2)
    type metadata accessor for IntentView.RequestID();
  return 0;
}

uint64_t sub_20E3EFBB4(_QWORD *a1, _QWORD *a2)
{
  return sub_20E3EF9D0(a1, a2) & 1;
}

uint64_t *sub_20E3EFBEC()
{
  swift_allocObject();
  return sub_20E3EFC1C();
}

uint64_t *sub_20E3EFC1C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t, uint64_t, double);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 112);
  v18 = *(_QWORD *)(*v0 + 80);
  v19 = v2;
  swift_getAssociatedTypeWitness();
  v3 = sub_20E4A596C();
  v4 = sub_20E4A60E0();
  v5 = sub_20E4A35E4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v16 - v7;
  v17 = *(_QWORD *)(v4 - 8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v16 - v11;
  v0[2] = 0;
  *((_BYTE *)v0 + 24) = 0;
  v13 = (uint64_t)v0 + *(_QWORD *)(v1 + 160);
  v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(*(_QWORD *)(v3 - 8) + 56);
  v14((char *)&v16 - v11, 1, 1, v3, v10);
  sub_20E3EFDA4((uint64_t)v12);
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v13, v8, v5);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v14)(v12, 1, 1, v3);
  sub_20E3F6F20((uint64_t)v12);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v12, v4);
  return v0;
}

uint64_t sub_20E3EFDA4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  swift_getAssociatedTypeWitness();
  sub_20E4A596C();
  v2 = sub_20E4A60E0();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v8 - v5;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16))((char *)&v8 - v5, a1, v2, v4);
  sub_20E4405E4((uint64_t)v6, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

_QWORD *sub_20E3EFE70()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;

  if (v0[2])
  {
    swift_retain();
    sub_20E4A5E64();
    swift_release();
  }
  swift_release();
  v1 = (char *)v0 + *(_QWORD *)(*v0 + 160);
  swift_getAssociatedTypeWitness();
  sub_20E4A596C();
  sub_20E4A60E0();
  v2 = sub_20E4A35E4();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_20E3EFF44()
{
  sub_20E3EFE70();
  return swift_deallocClassInstance();
}

uint64_t sub_20E3EFF64()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_20E4A35CC();
  swift_release();
  return swift_release();
}

void sub_20E3F0028(uint64_t a1, char a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t *v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  char *v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;

  v48 = a7;
  v55 = a5;
  v56 = a6;
  v50 = a1;
  v11 = *v7;
  v12 = *(_QWORD *)(*v7 + 80);
  v54 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v52 = v13;
  v57 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A190F8);
  MEMORY[0x24BDAC7A8](v14);
  v58 = (uint64_t)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = v11;
  v51 = *(_QWORD *)(v11 + 112);
  swift_getAssociatedTypeWitness();
  v16 = sub_20E4A596C();
  v17 = sub_20E4A60E0();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22.n128_f64[0] = MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v45 - v23;
  v49 = *a4;
  if ((a2 & 1) != 0
    || !v7[2]
    && (sub_20E3EFF64(),
        v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v24, 1, v16),
        (*(void (**)(char *, uint64_t))(v18 + 8))(v24, v17),
        v25 == 1)
    || *((_BYTE *)v7 + 24) == 1)
  {
    v26 = a3;
    v27 = v12;
    if ((v48 & 1) != 0)
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v16 - 8) + 56))(v20, 1, 1, v16, v22);
      sub_20E3F6F20((uint64_t)v20);
      (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    }
    *((_BYTE *)v7 + 24) = 0;
    v47 = v7;
    v28 = sub_20E4A5E58();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v58, 1, 1, v28);
    v29 = swift_allocObject();
    swift_weakInit();
    v30 = v54;
    (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v57, v50, v27);
    sub_20E4A5DF8();
    v46 = v26;
    swift_retain();
    v32 = v55;
    v31 = v56;
    sub_20E3E592C(v55);
    v33 = v49;
    swift_retain();
    swift_retain();
    v34 = sub_20E4A5DEC();
    v35 = (*(unsigned __int8 *)(v30 + 80) + 128) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
    v36 = (v52 + v35 + 7) & 0xFFFFFFFFFFFFFFF8;
    v37 = swift_allocObject();
    v38 = MEMORY[0x24BEE6930];
    *(_QWORD *)(v37 + 16) = v34;
    *(_QWORD *)(v37 + 24) = v38;
    *(_QWORD *)(v37 + 32) = v27;
    v39 = v53;
    *(_OWORD *)(v37 + 40) = *(_OWORD *)(v53 + 88);
    v40 = v51;
    *(_QWORD *)(v37 + 56) = *(_QWORD *)(v39 + 104);
    *(_QWORD *)(v37 + 64) = v40;
    *(_OWORD *)(v37 + 72) = *(_OWORD *)(v39 + 120);
    v41 = v46;
    *(_QWORD *)(v37 + 88) = *(_QWORD *)(v39 + 136);
    *(_QWORD *)(v37 + 96) = v41;
    *(_QWORD *)(v37 + 104) = v32;
    *(_QWORD *)(v37 + 112) = v31;
    *(_QWORD *)(v37 + 120) = v33;
    (*(void (**)(unint64_t, char *, uint64_t))(v30 + 32))(v37 + v35, v57, v27);
    *(_QWORD *)(v37 + v36) = v29;
    swift_release();
    v42 = v58;
    v43 = sub_20E3DF694(v58, (uint64_t)&unk_254A19D18, v37);
    sub_20E3F7244(v42);
    v44 = v47;
    sub_20E3E4AC4();
    v44[2] = v43;
    swift_release();
  }
}

uint64_t sub_20E3F03A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;

  *(_QWORD *)(v8 + 136) = v21;
  *(_OWORD *)(v8 + 120) = v20;
  *(_QWORD *)(v8 + 104) = v18;
  *(_QWORD *)(v8 + 112) = v19;
  *(_OWORD *)(v8 + 88) = v17;
  *(_QWORD *)(v8 + 72) = v15;
  *(_QWORD *)(v8 + 80) = v16;
  *(_QWORD *)(v8 + 56) = a7;
  *(_QWORD *)(v8 + 64) = a8;
  *(_QWORD *)(v8 + 40) = a5;
  *(_QWORD *)(v8 + 48) = a6;
  *(_QWORD *)(v8 + 32) = a4;
  v9 = sub_20E4A5DC8();
  *(_QWORD *)(v8 + 144) = v9;
  *(_QWORD *)(v8 + 152) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 160) = swift_task_alloc();
  *(_QWORD *)(v8 + 168) = swift_task_alloc();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v8 + 176) = AssociatedTypeWitness;
  *(_QWORD *)(v8 + 184) = *(_QWORD *)(AssociatedTypeWitness - 8);
  *(_QWORD *)(v8 + 192) = swift_task_alloc();
  v12 = type metadata accessor for _IntentProgress(0, v16, v19, v11);
  *(_QWORD *)(v8 + 200) = v12;
  *(_QWORD *)(v8 + 208) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v8 + 216) = swift_task_alloc();
  sub_20E4A5DF8();
  *(_QWORD *)(v8 + 224) = sub_20E4A5DEC();
  *(_QWORD *)(v8 + 232) = sub_20E4A5DBC();
  *(_QWORD *)(v8 + 240) = v13;
  return swift_task_switch();
}

uint64_t sub_20E3F04F4()
{
  _QWORD *v0;
  int *v1;
  _QWORD *v2;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v6)(_QWORD);

  v1 = (int *)v0[5];
  if (v1)
  {
    swift_storeEnumTagMultiPayload();
    v6 = (uint64_t (*)(_QWORD))((char *)v1 + *v1);
    swift_retain();
    v2 = (_QWORD *)swift_task_alloc();
    v0[31] = v2;
    *v2 = v0;
    v2[1] = sub_20E3F05E8;
    return v6(v0[27]);
  }
  else
  {
    v4 = v0[7];
    swift_retain();
    v0[2] = v4;
    v5 = (_QWORD *)swift_task_alloc();
    v0[32] = v5;
    *v5 = v0;
    v5[1] = sub_20E3F068C;
    return IntentDispatchAction.callAsFunction<A>(_:)(v0[24], v0[8], v0[10], v0[14]);
  }
}

uint64_t sub_20E3F05E8()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = (_QWORD *)*v0;
  v3 = *(_QWORD *)(*v0 + 208);
  v2 = *(_QWORD *)(*v0 + 216);
  v4 = *(_QWORD *)(*v0 + 200);
  v5 = *v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  v1[2] = v1[7];
  v1 += 2;
  v6 = (_QWORD *)swift_task_alloc();
  v1[30] = v6;
  *v6 = v5;
  v6[1] = sub_20E3F068C;
  return IntentDispatchAction.callAsFunction<A>(_:)(v1[22], v1[6], v1[8], v1[12]);
}

uint64_t sub_20E3F068C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 264) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_20E3F06F0()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t (*v16)();
  int *v17;
  uint64_t v18;
  int *v19;
  id v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t (*v36)(_QWORD);

  v1 = *(void **)(v0 + 264);
  sub_20E4A5E7C();
  *(_QWORD *)(v0 + 272) = v1;
  if (v1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 184) + 8))(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 176));
    *(_QWORD *)(v0 + 288) = v1;
    *(_QWORD *)(v0 + 24) = v1;
    v2 = v1;
    __swift_instantiateConcreteTypeFromMangledName(qword_253ED2880);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v3 = *(_QWORD *)(v0 + 160);
      v4 = *(_QWORD *)(v0 + 168);
      v5 = *(_QWORD *)(v0 + 144);
      v6 = *(_QWORD *)(v0 + 152);
      v7 = *(_QWORD *)(v0 + 40);

      (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v3, v4, v5);
      if (v7)
      {
        v8 = *(uint64_t **)(v0 + 216);
        v10 = *(_QWORD *)(v0 + 152);
        v9 = *(_QWORD *)(v0 + 160);
        v11 = *(_QWORD *)(v0 + 144);
        v12 = *(int **)(v0 + 40);
        sub_20E3E5B90();
        v13 = swift_allocError();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v14, v9, v11);
        *v8 = v13;
        swift_storeEnumTagMultiPayload();
        v36 = (uint64_t (*)(_QWORD))((char *)v12 + *v12);
        v15 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 296) = v15;
        v16 = sub_20E3F0BE8;
LABEL_9:
        *v15 = v0;
        v15[1] = v16;
        return v36(*(_QWORD *)(v0 + 216));
      }
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 152) + 8))(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 144));
      swift_release();
      swift_release();

    }
    else
    {
      v18 = *(_QWORD *)(v0 + 40);

      if (v18)
      {
        v19 = *(int **)(v0 + 40);
        **(_QWORD **)(v0 + 216) = v1;
        swift_storeEnumTagMultiPayload();
        v20 = v1;
        v36 = (uint64_t (*)(_QWORD))((char *)v19 + *v19);
        v15 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 304) = v15;
        v16 = sub_20E3F0CE0;
        goto LABEL_9;
      }
      swift_release();
      v30 = *(void **)(v0 + 288);
      v31 = *(_QWORD *)(v0 + 72);
      v32 = swift_task_alloc();
      v33 = *(_OWORD *)(v0 + 96);
      v34 = *(_OWORD *)(v0 + 112);
      v35 = *(_OWORD *)(v0 + 128);
      *(_OWORD *)(v32 + 16) = *(_OWORD *)(v0 + 80);
      *(_OWORD *)(v32 + 32) = v33;
      *(_OWORD *)(v32 + 48) = v34;
      *(_OWORD *)(v32 + 64) = v35;
      *(_QWORD *)(v32 + 80) = v31;
      *(_QWORD *)(v32 + 88) = v30;
      __swift_instantiateConcreteTypeFromMangledName(&qword_254A193F8);
      sub_20E4A3A28();
      swift_release();

      swift_task_dealloc();
    }
  }
  else
  {
    v17 = *(int **)(v0 + 40);
    if (v17)
    {
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 184) + 16))(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 176));
      swift_storeEnumTagMultiPayload();
      v36 = (uint64_t (*)(_QWORD))((char *)v17 + *v17);
      v15 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 280) = v15;
      v16 = sub_20E3F0A84;
      goto LABEL_9;
    }
    swift_release();
    v23 = *(_QWORD *)(v0 + 184);
    v22 = *(_QWORD *)(v0 + 192);
    v24 = *(_QWORD *)(v0 + 176);
    v25 = *(_QWORD *)(v0 + 72);
    v26 = swift_task_alloc();
    v27 = *(_OWORD *)(v0 + 96);
    v28 = *(_OWORD *)(v0 + 112);
    v29 = *(_OWORD *)(v0 + 128);
    *(_OWORD *)(v26 + 16) = *(_OWORD *)(v0 + 80);
    *(_OWORD *)(v26 + 32) = v27;
    *(_OWORD *)(v26 + 48) = v28;
    *(_OWORD *)(v26 + 64) = v29;
    *(_QWORD *)(v26 + 80) = v25;
    *(_QWORD *)(v26 + 88) = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254A193F8);
    sub_20E4A3A28();
    swift_release();
    swift_task_dealloc();
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20E3F0A84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v0 + 208);
  v1 = *(_QWORD *)(*(_QWORD *)v0 + 216);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 200);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_task_switch();
}

uint64_t sub_20E3F0AF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  swift_release();
  v2 = *(_QWORD *)(v0 + 184);
  v1 = *(_QWORD *)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 176);
  v4 = *(_QWORD *)(v0 + 72);
  v5 = swift_task_alloc();
  v6 = *(_OWORD *)(v0 + 96);
  v7 = *(_OWORD *)(v0 + 112);
  v8 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v5 + 16) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v5 + 32) = v6;
  *(_OWORD *)(v5 + 48) = v7;
  *(_OWORD *)(v5 + 64) = v8;
  *(_QWORD *)(v5 + 80) = v4;
  *(_QWORD *)(v5 + 88) = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A193F8);
  sub_20E4A3A28();
  swift_release();
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20E3F0BE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v0 + 208);
  v1 = *(_QWORD *)(*(_QWORD *)v0 + 216);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 200);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_task_switch();
}

uint64_t sub_20E3F0C54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 152);
  v1 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 144);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20E3F0CE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v0 + 208);
  v1 = *(_QWORD *)(*(_QWORD *)v0 + 216);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 200);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_task_switch();
}

uint64_t sub_20E3F0D4C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;

  swift_release();
  v1 = *(void **)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 72);
  v3 = swift_task_alloc();
  v4 = *(_OWORD *)(v0 + 96);
  v5 = *(_OWORD *)(v0 + 112);
  v6 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v3 + 32) = v4;
  *(_OWORD *)(v3 + 48) = v5;
  *(_OWORD *)(v3 + 64) = v6;
  *(_QWORD *)(v3 + 80) = v2;
  *(_QWORD *)(v3 + 88) = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A193F8);
  sub_20E4A3A28();
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20E3F0E28()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t (*v16)();
  uint64_t v17;
  int *v18;
  id v19;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t (*v27)(_QWORD);

  v1 = *(void **)(v0 + 264);
  *(_QWORD *)(v0 + 24) = v1;
  *(_QWORD *)(v0 + 288) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(qword_253ED2880);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v4 = *(_QWORD *)(v0 + 160);
    v3 = *(_QWORD *)(v0 + 168);
    v6 = *(_QWORD *)(v0 + 144);
    v5 = *(_QWORD *)(v0 + 152);
    v7 = *(_QWORD *)(v0 + 40);

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v4, v3, v6);
    if (v7)
    {
      v8 = *(uint64_t **)(v0 + 216);
      v10 = *(_QWORD *)(v0 + 152);
      v9 = *(_QWORD *)(v0 + 160);
      v11 = *(_QWORD *)(v0 + 144);
      v12 = *(int **)(v0 + 40);
      sub_20E3E5B90();
      v13 = swift_allocError();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v14, v9, v11);
      *v8 = v13;
      swift_storeEnumTagMultiPayload();
      v27 = (uint64_t (*)(_QWORD))((char *)v12 + *v12);
      v15 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 296) = v15;
      v16 = sub_20E3F0BE8;
LABEL_6:
      *v15 = v0;
      v15[1] = v16;
      return v27(*(_QWORD *)(v0 + 216));
    }
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 152) + 8))(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 144));
    swift_release();
    swift_release();

  }
  else
  {
    v17 = *(_QWORD *)(v0 + 40);

    if (v17)
    {
      v18 = *(int **)(v0 + 40);
      **(_QWORD **)(v0 + 216) = v1;
      swift_storeEnumTagMultiPayload();
      v19 = v1;
      v27 = (uint64_t (*)(_QWORD))((char *)v18 + *v18);
      v15 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 304) = v15;
      v16 = sub_20E3F0CE0;
      goto LABEL_6;
    }
    swift_release();
    v21 = *(void **)(v0 + 288);
    v22 = *(_QWORD *)(v0 + 72);
    v23 = swift_task_alloc();
    v24 = *(_OWORD *)(v0 + 96);
    v25 = *(_OWORD *)(v0 + 112);
    v26 = *(_OWORD *)(v0 + 128);
    *(_OWORD *)(v23 + 16) = *(_OWORD *)(v0 + 80);
    *(_OWORD *)(v23 + 32) = v24;
    *(_OWORD *)(v23 + 48) = v25;
    *(_OWORD *)(v23 + 64) = v26;
    *(_QWORD *)(v23 + 80) = v22;
    *(_QWORD *)(v23 + 88) = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254A193F8);
    sub_20E4A3A28();
    swift_release();

    swift_task_dealloc();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20E3F10BC@<X0>(uint64_t a1@<X1>, BOOL *a2@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = sub_20E4A596C();
  v6 = sub_20E4A60E0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v12 - v8;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  v11 = result;
  if (result)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(v9, a1, AssociatedTypeWitness);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v9, 0, 1, v5);
    sub_20E3F6F20((uint64_t)v9);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    result = swift_release();
  }
  *a2 = v11 == 0;
  return result;
}

uint64_t sub_20E3F1214@<X0>(void *a1@<X1>, BOOL *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t result;
  uint64_t v10;
  id v11;
  uint64_t v12;

  swift_getAssociatedTypeWitness();
  v4 = sub_20E4A596C();
  v5 = sub_20E4A60E0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (uint64_t *)((char *)&v12 - v7);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  v10 = result;
  if (result)
  {
    *v8 = a1;
    swift_storeEnumTagMultiPayload();
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v8, 0, 1, v4);
    v11 = a1;
    sub_20E3F6F20((uint64_t)v8);
    (*(void (**)(_QWORD *, uint64_t))(v6 + 8))(v8, v5);
    result = swift_release();
  }
  *a2 = v10 == 0;
  return result;
}

_JetEngine_SwiftUI::IntentViewConfiguration __swiftcall IntentViewConfiguration.init()()
{
  _BYTE *v0;
  _JetEngine_SwiftUI::IntentViewConfiguration result;

  *v0 = 0;
  return result;
}

void IntentView.init(_:what:transaction:configuration:working:failed:content:)(__int128 *a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD v30[3];
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  __int128 v36;
  char *v37;
  __int128 *v38;
  unsigned __int8 *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;

  v45 = a7;
  v46 = a8;
  v43 = a5;
  v44 = a6;
  v39 = a4;
  v42 = a3;
  v49 = a2;
  v38 = a1;
  v40 = a9;
  v41 = a10;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v31 = sub_20E4A60E0();
  v30[1] = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v37 = (char *)v30 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v34 = (char *)v30 - v21;
  v48 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](v22);
  v30[2] = (char *)v30 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v47 = (char *)v30 - v25;
  v32 = v26;
  MEMORY[0x24BDAC7A8](v27);
  v33 = (char *)v30 - v28;
  v36 = *v38;
  v35 = *((_QWORD *)v38 + 2);
  LODWORD(v39) = *v39;
  v29 = (_QWORD *)swift_allocObject();
  v29[2] = a11;
  v29[3] = a12;
  v29[4] = a13;
  v29[5] = a14;
  v29[6] = a15;
  v29[7] = a16;
  v29[8] = a17;
  v29[9] = a18;
  sub_20E3F1AF0();
}

void sub_20E3F155C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)(v5 + 32) = a1;
  *(_QWORD *)(v5 + 40) = a2;
  *(_BYTE *)(v5 + 48) = a3 & 1;
  *(_QWORD *)(v12 - 160) = v9;
  *(_QWORD *)(v12 - 152) = v4;
  *(_QWORD *)(v12 - 296) = v4;
  *(_QWORD *)(v12 - 200) = v8;
  *(_QWORD *)(v12 - 192) = v7;
  *(_QWORD *)(v12 - 144) = v8;
  *(_QWORD *)(v12 - 136) = v7;
  *(_QWORD *)(v12 - 128) = v6;
  *(_QWORD *)(v12 - 120) = v3;
  *(_QWORD *)(v12 - 288) = v3;
  *(_QWORD *)(v12 - 280) = v11;
  *(_QWORD *)(v12 - 112) = v11;
  *(_QWORD *)(v12 - 104) = v10;
  *(_QWORD *)(v12 - 272) = v10;
  type metadata accessor for IntentView();
}

void sub_20E3F15BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  void (*v21)(uint64_t, _QWORD);
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, _QWORD, uint64_t);
  unint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v9 = v3 + *(int *)(a1 + 112);
  *(_QWORD *)v9 = swift_getKeyPath();
  *(_BYTE *)(v9 + 8) = 0;
  v10 = v3 + *(int *)(a1 + 116);
  v12 = type metadata accessor for _IntentObserverKey(0, v5, v2, v11);
  type metadata accessor for _IntentProgress(255, v5, v2, v13);
  swift_getFunctionTypeMetadata1();
  v14 = sub_20E4A60E0();
  v15 = MEMORY[0x212BBDF90](&unk_20E4AAA58, v12);
  v16 = v14;
  v17 = *(_QWORD *)(v7 - 176);
  sub_20E461270(v12, v16, v12, v15);
  v18 = *(_BYTE *)(v7 - 144);
  *(_OWORD *)v10 = *(_OWORD *)(v7 - 160);
  *(_BYTE *)(v10 + 16) = v18;
  *(_OWORD *)v3 = *(_OWORD *)(v7 - 320);
  *(_QWORD *)(v3 + 16) = *(_QWORD *)(v7 - 328);
  *(_BYTE *)(v3 + 24) = 1;
  sub_20E4A4C88();
  v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
  if (v19(v1, 1, v4) == 1)
  {
    v20 = *(_QWORD *)(v7 - 368);
    v21 = *(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v7 - 376) + 8);
    v21(v1, *(_QWORD *)(v7 - 360));
    v22 = *(_QWORD *)(v7 - 304);
    sub_20E4A50D8();
    v23 = v19(v22, 1, v6);
    v25 = *(_QWORD *)(v7 - 200);
    v24 = *(_QWORD *)(v7 - 192);
    if (v23 == 1)
    {
      v21(*(_QWORD *)(v7 - 304), *(_QWORD *)(v7 - 360));
      v26 = (_QWORD *)swift_allocObject();
      v27 = *(_QWORD *)(v7 - 296);
      v26[2] = v5;
      v26[3] = v27;
      v26[4] = v25;
      v26[5] = v24;
      v28 = *(_QWORD *)(v7 - 288);
      v26[6] = v2;
      v26[7] = v28;
      v29 = *(_QWORD *)(v7 - 280);
      v30 = *(_QWORD *)(v7 - 272);
      v26[8] = v29;
      v26[9] = v30;
      *(_QWORD *)(v7 - 160) = v5;
      *(_QWORD *)(v7 - 152) = v27;
      *(_QWORD *)(v7 - 144) = v25;
      *(_QWORD *)(v7 - 136) = v24;
      *(_QWORD *)(v7 - 128) = v2;
      *(_QWORD *)(v7 - 120) = v28;
      *(_QWORD *)(v7 - 112) = v29;
      *(_QWORD *)(v7 - 104) = v30;
      type metadata accessor for IntentView.Dispatcher();
    }
    v45 = *(_QWORD *)(v7 - 176);
    v46 = *(void (**)(uint64_t, _QWORD, uint64_t))(v45 + 32);
    *(_QWORD *)(v7 - 320) = v46;
    v46(v20, *(_QWORD *)(v7 - 304), v6);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v45 + 16))(*(_QWORD *)(v7 - 184), v20, v6);
    v47 = (*(unsigned __int8 *)(v45 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
    v48 = (_QWORD *)swift_allocObject();
    v49 = v24;
    v50 = *(_QWORD *)(v7 - 296);
    v48[2] = v5;
    v48[3] = v50;
    v48[4] = v25;
    v48[5] = v49;
    v51 = *(_QWORD *)(v7 - 288);
    v48[6] = v2;
    v48[7] = v51;
    v52 = (char *)v48 + v47;
    v53 = *(_QWORD *)(v7 - 280);
    v54 = *(_QWORD *)(v7 - 272);
    v48[8] = v53;
    v48[9] = v54;
    (*(void (**)(char *, _QWORD, uint64_t))(v7 - 320))(v52, *(_QWORD *)(v7 - 184), v6);
    *(_QWORD *)(v7 - 160) = v5;
    *(_QWORD *)(v7 - 152) = v50;
    v55 = *(_QWORD *)(v7 - 192);
    *(_QWORD *)(v7 - 144) = *(_QWORD *)(v7 - 200);
    *(_QWORD *)(v7 - 136) = v55;
    *(_QWORD *)(v7 - 128) = v2;
    *(_QWORD *)(v7 - 120) = v51;
    *(_QWORD *)(v7 - 112) = v53;
    *(_QWORD *)(v7 - 104) = v54;
    type metadata accessor for IntentView.Dispatcher();
  }
  v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32);
  *(_QWORD *)(v7 - 320) = v31;
  v32 = *(_QWORD *)(v7 - 344);
  v31(v32, v1, v6);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v17 + 16))(*(_QWORD *)(v7 - 184), v32, v6);
  v33 = (*(unsigned __int8 *)(v17 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v34 = (_QWORD *)swift_allocObject();
  v35 = v2;
  v36 = *(_QWORD *)(v7 - 296);
  v34[2] = v5;
  v34[3] = v36;
  v37 = *(_QWORD *)(v7 - 200);
  v38 = *(_QWORD *)(v7 - 192);
  v34[4] = v37;
  v34[5] = v38;
  *(_QWORD *)(v7 - 304) = a1;
  v39 = v5;
  v40 = *(_QWORD *)(v7 - 288);
  v34[6] = v35;
  v34[7] = v40;
  v41 = (char *)v34 + v33;
  v42 = v6;
  *(_QWORD *)(v7 - 384) = v6;
  v43 = *(_QWORD *)(v7 - 280);
  v44 = *(_QWORD *)(v7 - 272);
  v34[8] = v43;
  v34[9] = v44;
  (*(void (**)(char *, _QWORD, uint64_t))(v7 - 320))(v41, *(_QWORD *)(v7 - 184), v42);
  *(_QWORD *)(v7 - 160) = v39;
  *(_QWORD *)(v7 - 152) = v36;
  *(_QWORD *)(v7 - 144) = v37;
  *(_QWORD *)(v7 - 136) = v38;
  *(_QWORD *)(v7 - 128) = v35;
  *(_QWORD *)(v7 - 120) = v40;
  *(_QWORD *)(v7 - 112) = v43;
  *(_QWORD *)(v7 - 104) = v44;
  type metadata accessor for IntentView.Dispatcher();
}

void sub_20E3F19F4(uint64_t a1)
{
  MEMORY[0x212BBDF90](&unk_20E4AA438, a1);
  sub_20E4A36E0();
  JUMPOUT(0x20E3F1A40);
}

void sub_20E3F1AF0()
{
  type metadata accessor for IntentView.Dispatcher();
}

uint64_t sub_20E3F1B2C(uint64_t a1)
{
  MEMORY[0x212BBDF90](&unk_20E4AA438, a1);
  return sub_20E4A36E0();
}

void sub_20E3F1B6C()
{
  type metadata accessor for IntentView.Dispatcher();
}

uint64_t *sub_20E3F1BA4()
{
  uint64_t v0;
  int v1;

  swift_allocObject();
  return sub_20E3F7284(v0, v1);
}

uint64_t sub_20E3F1BD4()
{
  uint64_t v0;
  uint64_t v1;

  if ((*(_BYTE *)(v0 + 24) & 1) != 0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19D38);
    return MEMORY[0x212BBBCE0](v1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254A19D40);
    return sub_20E4A464C();
  }
}

void sub_20E3F1C48()
{
  type metadata accessor for IntentView.Dispatcher();
}

uint64_t *sub_20E3F1C74()
{
  swift_allocObject();
  return sub_20E3EFC1C();
}

uint64_t sub_20E3F1C98()
{
  return swift_deallocObject();
}

void type metadata accessor for IntentView()
{
  JUMPOUT(0x212BBDEE8);
}

uint64_t sub_20E3F1CB8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_20E3F776C();
  result = sub_20E4A3C08();
  *a1 = v3;
  return result;
}

uint64_t sub_20E3F1D08()
{
  return swift_deallocObject();
}

void sub_20E3F1D18()
{
  sub_20E3F1C48();
}

void type metadata accessor for IntentView.Dispatcher()
{
  JUMPOUT(0x212BBDEE8);
}

void sub_20E3F1D4C()
{
  sub_20E3F1D60();
}

void sub_20E3F1D58()
{
  sub_20E3F1D60();
}

void sub_20E3F1D60()
{
  swift_getAssociatedTypeWitness();
  sub_20E3F1B6C();
}

uint64_t sub_20E3F1E10()
{
  return swift_deallocObject();
}

uint64_t sub_20E3F1E20()
{
  return swift_deallocObject();
}

uint64_t objectdestroy_5Tm_0()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80)), AssociatedTypeWitness);
  return swift_deallocObject();
}

void sub_20E3F1EB0()
{
  type metadata accessor for IntentView.Dispatcher();
}

uint64_t sub_20E3F1EF0(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v6 = MEMORY[0x212BBDF90](&unk_20E4AA438, a1);
  return v1(v3, v4, v2, a1, v6);
}

uint64_t sub_20E3F1F34@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v4 = (uint64_t *)(v2 + *(int *)(a1 + 112));
  v5 = *v4;
  v6 = *((unsigned __int8 *)v4 + 8);
  j__swift_retain(*v4);
  sub_20E45D0E0(v5, v6, a2);
  return j__swift_release(v5, v6);
}

void *sub_20E3F1F8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 48);
  type metadata accessor for _IntentProgress(255, v5, v6, a4);
  swift_getFunctionTypeMetadata1();
  sub_20E4A60E0();
  sub_20E4A36C8();
  sub_20E4A36B0();
  if (!v9)
    return 0;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v5;
  *(_OWORD *)(v7 + 24) = *(_OWORD *)(a1 + 24);
  *(_QWORD *)(v7 + 40) = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(v7 + 48) = v6;
  *(_OWORD *)(v7 + 56) = *(_OWORD *)(a1 + 56);
  *(_QWORD *)(v7 + 72) = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(v7 + 80) = v9;
  result = &unk_254A19D28;
  *(_QWORD *)(v7 + 88) = v10;
  return result;
}

uint64_t sub_20E3F2090()
{
  return sub_20E4A4B2C();
}

void IntentView.body.getter(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[68];

  v12[24] = a2;
  v2 = *(_QWORD *)(a1 + 16);
  v12[22] = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v12[21] = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v4[3];
  v5 = v4[4];
  v8 = v4[5];
  v7 = v4[6];
  v9 = v4[7];
  v10 = v4[8];
  v11 = v4[9];
  v12[59] = v2;
  v12[60] = v6;
  v12[40] = v2;
  v12[61] = v5;
  v12[62] = v8;
  v12[63] = v7;
  v12[64] = v9;
  v12[42] = v7;
  v12[65] = v10;
  v12[66] = v11;
  v12[39] = v11;
  type metadata accessor for IntentView.RequestID();
}

void sub_20E3F217C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t AssociatedTypeWitness;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  *(_QWORD *)(v16 - 440) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v16 - 464) = (char *)&a9 - v17;
  v18 = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v16 - 328) = v18;
  *(_QWORD *)(v16 - 368) = *(_QWORD *)(v18 + 64);
  MEMORY[0x24BDAC7A8](v19);
  *(_QWORD *)(v16 - 560) = (char *)&a9 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  *(_QWORD *)(v16 - 600) = (char *)&a9 - v22;
  MEMORY[0x24BDAC7A8](v23);
  *(_QWORD *)(v16 - 424) = (char *)&a9 - v24;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v16 - 608) = AssociatedTypeWitness;
  sub_20E4A596C();
  sub_20E4A60E0();
  v26 = sub_20E4A4778();
  MEMORY[0x24BDAC7A8](v26);
  *(_QWORD *)(v16 - 416) = (char *)&a9 - v27;
  *(_QWORD *)(v16 - 352) = v9;
  v28 = sub_20E4A4BBC();
  *(_QWORD *)(v16 - 160) = MEMORY[0x24BEE4578];
  v29 = MEMORY[0x212BBDF90](MEMORY[0x24BE5CAA8], v28, v16 - 160);
  *(_QWORD *)(v16 - 152) = v15;
  *(_QWORD *)(v16 - 144) = v28;
  *(_QWORD *)(v16 - 136) = v10;
  *(_QWORD *)(v16 - 128) = v29;
  v30 = sub_20E4A46DC();
  *(_QWORD *)(v16 - 616) = v30;
  v31 = MEMORY[0x212BBDF90](MEMORY[0x24BDF44C8], v30);
  *(_QWORD *)(v16 - 624) = v31;
  *(_QWORD *)(v16 - 152) = AssociatedTypeWitness;
  *(_QWORD *)(v16 - 144) = v30;
  *(_QWORD *)(v16 - 136) = v11;
  *(_QWORD *)(v16 - 128) = v14;
  *(_QWORD *)(v16 - 120) = v31;
  *(_QWORD *)(v16 - 112) = v13;
  *(_QWORD *)(v16 - 104) = v12;
  type metadata accessor for _ResultView();
}

void sub_20E3F235C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  *(_QWORD *)(v10 - 520) = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v10 - 592) = a1;
  v12 = MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v10 - 408) = (char *)&a9 - v13;
  v14 = MEMORY[0x212BBDF90](&unk_20E4AF6E0, a1, v12);
  *(_QWORD *)(v10 - 576) = v14;
  *(_QWORD *)(v10 - 568) = v9;
  v15 = MEMORY[0x212BBDF90](&unk_20E4AA410, v9);
  *(_QWORD *)(v10 - 584) = v15;
  *(_QWORD *)(v10 - 152) = a1;
  *(_QWORD *)(v10 - 144) = v9;
  *(_QWORD *)(v10 - 136) = v14;
  *(_QWORD *)(v10 - 128) = v15;
  v16 = MEMORY[0x212BBDF30](0, v10 - 152, MEMORY[0x24BDF3908], 0);
  *(_QWORD *)(v10 - 480) = *(_QWORD *)(v16 - 8);
  *(_QWORD *)(v10 - 504) = v16;
  MEMORY[0x24BDAC7A8](v16);
  *(_QWORD *)(v10 - 400) = (char *)&a9 - v17;
  v18 = sub_20E4A39D4();
  *(_QWORD *)(v10 - 472) = *(_QWORD *)(v18 - 8);
  *(_QWORD *)(v10 - 544) = v18;
  MEMORY[0x24BDAC7A8](v18);
  *(_QWORD *)(v10 - 536) = (char *)&a9 - v19;
  type metadata accessor for _IntentProgress(255, *(_QWORD *)(v10 - 304), *(_QWORD *)(v10 - 288), v20);
  swift_getFunctionTypeMetadata1();
  sub_20E4A60E0();
  *(_QWORD *)(v10 - 512) = sub_20E4A3FF8();
  v21 = sub_20E4A39D4();
  *(_QWORD *)(v10 - 496) = v21;
  *(_QWORD *)(v10 - 488) = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  *(_QWORD *)(v10 - 552) = (char *)&a9 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  *(_QWORD *)(v10 - 528) = (char *)&a9 - v24;
  sub_20E3F1EB0();
}

void sub_20E3F2580()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)(v7 - 272) = v0;
  *(_QWORD *)(v7 - 344) = v5;
  *(_QWORD *)(v7 - 264) = v5;
  v8 = v2;
  *(_QWORD *)(v7 - 384) = v2;
  *(_QWORD *)(v7 - 256) = v2;
  *(_QWORD *)(v7 - 248) = v4;
  *(_QWORD *)(v7 - 392) = v4;
  *(_QWORD *)(v7 - 240) = v6;
  *(_QWORD *)(v7 - 232) = v1;
  v9 = v1;
  *(_QWORD *)(v7 - 336) = v1;
  v10 = v3;
  *(_QWORD *)(v7 - 296) = v3;
  *(_QWORD *)(v7 - 224) = v3;
  v11 = *(_QWORD *)(v7 - 312);
  *(_QWORD *)(v7 - 216) = v11;
  swift_getKeyPath();
  *(_QWORD *)(v7 - 152) = v0;
  *(_QWORD *)(v7 - 144) = v5;
  *(_QWORD *)(v7 - 136) = v8;
  *(_QWORD *)(v7 - 128) = v4;
  *(_QWORD *)(v7 - 120) = v6;
  *(_QWORD *)(v7 - 112) = v9;
  *(_QWORD *)(v7 - 104) = v10;
  *(_QWORD *)(v7 - 96) = v11;
  type metadata accessor for IntentView.Dispatcher();
}

void sub_20E3F2614(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;

  MEMORY[0x212BBDF90](&unk_20E4AA438, a1);
  sub_20E4A3950();
  swift_release();
  swift_release();
  v3 = *(_QWORD *)(v2 - 328);
  v4 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v2 - 320) = v4;
  v5 = *(_QWORD *)(v2 - 424);
  v6 = *(_QWORD *)(v2 - 280);
  v7 = *(_QWORD *)(v2 - 352);
  v4(v5, v6, v7);
  v8 = *(unsigned __int8 *)(v3 + 80);
  v9 = (v8 + 80) & ~v8;
  v10 = v9 + *(_QWORD *)(v2 - 368);
  v11 = v9;
  *(_QWORD *)(v2 - 360) = v9;
  *(_QWORD *)(v2 - 368) = v8 | 7;
  *(_QWORD *)(v2 - 376) = v10;
  v12 = (char *)swift_allocObject();
  v13 = *(_QWORD *)(v2 - 344);
  *((_QWORD *)v12 + 2) = v1;
  *((_QWORD *)v12 + 3) = v13;
  v14 = *(_QWORD *)(v2 - 384);
  v15 = *(_QWORD *)(v2 - 392);
  *((_QWORD *)v12 + 4) = v14;
  *((_QWORD *)v12 + 5) = v15;
  v16 = *(_QWORD *)(v2 - 336);
  *((_QWORD *)v12 + 6) = *(_QWORD *)(v2 - 288);
  *((_QWORD *)v12 + 7) = v16;
  v17 = *(_QWORD *)(v2 - 312);
  *((_QWORD *)v12 + 8) = *(_QWORD *)(v2 - 296);
  *((_QWORD *)v12 + 9) = v17;
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 32);
  *(_QWORD *)(v2 - 328) = v18;
  v18(&v12[v11], v5, v7);
  v19 = *(_QWORD *)(v2 - 600);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 - 320))(v19, v6, v7);
  v20 = (char *)swift_allocObject();
  *((_QWORD *)v20 + 2) = v1;
  *((_QWORD *)v20 + 3) = v13;
  v21 = v14;
  *((_QWORD *)v20 + 4) = v14;
  v22 = *(_QWORD *)(v2 - 392);
  v23 = *(_QWORD *)(v2 - 288);
  *((_QWORD *)v20 + 5) = v22;
  *((_QWORD *)v20 + 6) = v23;
  v24 = *(_QWORD *)(v2 - 336);
  *((_QWORD *)v20 + 7) = v24;
  v25 = *(_QWORD *)(v2 - 360);
  v26 = *(_QWORD *)(v2 - 312);
  *((_QWORD *)v20 + 8) = *(_QWORD *)(v2 - 296);
  *((_QWORD *)v20 + 9) = v26;
  v27 = v19;
  v28 = *(_QWORD *)(v2 - 352);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 - 328))(&v20[v25], v27, v28);
  v29 = *(_QWORD *)(v2 - 560);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 - 320))(v29, *(_QWORD *)(v2 - 280), v28);
  v30 = (char *)swift_allocObject();
  v31 = *(_QWORD *)(v2 - 344);
  *((_QWORD *)v30 + 2) = *(_QWORD *)(v2 - 304);
  *((_QWORD *)v30 + 3) = v31;
  *((_QWORD *)v30 + 4) = v21;
  *((_QWORD *)v30 + 5) = v22;
  *((_QWORD *)v30 + 6) = v23;
  *((_QWORD *)v30 + 7) = v24;
  v32 = *(_QWORD *)(v2 - 312);
  *((_QWORD *)v30 + 8) = *(_QWORD *)(v2 - 296);
  *((_QWORD *)v30 + 9) = v32;
  (*(void (**)(char *, uint64_t, _QWORD))(v2 - 328))(&v30[v25], v29, *(_QWORD *)(v2 - 352));
  sub_20E467A3C(*(_QWORD *)(v2 - 416), *(_QWORD *)(v2 - 408));
}

void sub_20E3F28D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD *)(v3 - 280);
  sub_20E3F1BD4();
  v5 = *(_QWORD *)(v3 - 168);
  v6 = v4 + *(int *)(v1 + 88);
  v7 = *(_QWORD *)(v3 - 304);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v3 - 448) + 16))(*(_QWORD *)(v3 - 456), v6, v7);
  **(_QWORD **)(v3 - 464) = v5;
  v8 = *(_QWORD *)(v3 - 344);
  *(_QWORD *)(v3 - 152) = v7;
  *(_QWORD *)(v3 - 144) = v8;
  *(_QWORD *)(v3 - 136) = v0;
  *(_QWORD *)(v3 - 128) = v2;
  v9 = *(_QWORD *)(v3 - 336);
  *(_QWORD *)(v3 - 120) = *(_QWORD *)(v3 - 288);
  *(_QWORD *)(v3 - 112) = v9;
  v10 = *(_QWORD *)(v3 - 312);
  *(_QWORD *)(v3 - 104) = *(_QWORD *)(v3 - 296);
  *(_QWORD *)(v3 - 96) = v10;
  type metadata accessor for IntentView.RequestID();
}

uint64_t sub_20E3F2974(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t OpaqueTypeConformance2;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  void (*v41)(uint64_t, uint64_t);

  v11 = v8;
  v12 = v2;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v1 + *(int *)(a1 + 84), v11, v2);
  v13 = *(_QWORD *)(v10 - 424);
  v14 = *(_QWORD *)(v10 - 352);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v10 - 320))(v13, *(_QWORD *)(v10 - 280), v14);
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = v12;
  v15[3] = v3;
  v15[4] = *(_QWORD *)(v10 - 384);
  v15[5] = v9;
  v15[6] = v7;
  v15[7] = v6;
  v16 = (char *)v15 + *(_QWORD *)(v10 - 360);
  v15[8] = *(_QWORD *)(v10 - 296);
  v15[9] = v4;
  v17 = v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 - 328))(v16, v13, v14);
  v18 = *(_QWORD *)(v10 - 592);
  v19 = *(_QWORD *)(v10 - 568);
  v20 = *(_QWORD *)(v10 - 576);
  v21 = *(_QWORD *)(v10 - 584);
  v22 = *(_QWORD *)(v10 - 408);
  sub_20E4A44D8();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 440) + 8))(v1, v19);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 520) + 8))(v22, v18);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v10 - 320))(v17, *(_QWORD *)(v10 - 280), v14);
  v23 = (_QWORD *)swift_allocObject();
  v24 = *(_QWORD *)(v10 - 344);
  v23[2] = *(_QWORD *)(v10 - 304);
  v23[3] = v24;
  v25 = *(_QWORD *)(v10 - 392);
  v23[4] = *(_QWORD *)(v10 - 384);
  v23[5] = v25;
  v26 = *(_QWORD *)(v10 - 336);
  v23[6] = *(_QWORD *)(v10 - 288);
  v23[7] = v26;
  v27 = (char *)v23 + *(_QWORD *)(v10 - 360);
  v23[8] = *(_QWORD *)(v10 - 296);
  v23[9] = v4;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 - 328))(v27, v17, v14);
  *(_QWORD *)(v10 - 152) = v18;
  *(_QWORD *)(v10 - 144) = v19;
  *(_QWORD *)(v10 - 136) = v20;
  *(_QWORD *)(v10 - 128) = v21;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v29 = *(_QWORD *)(v10 - 536);
  v30 = *(_QWORD *)(v10 - 504);
  v31 = *(_QWORD *)(v10 - 400);
  sub_20E4A44C0();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 480) + 8))(v31, v30);
  v32 = MEMORY[0x24BDF0910];
  *(_QWORD *)(v10 - 184) = OpaqueTypeConformance2;
  *(_QWORD *)(v10 - 176) = v32;
  v33 = MEMORY[0x24BDED308];
  v34 = *(_QWORD *)(v10 - 544);
  v35 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v34, v10 - 184);
  v36 = *(_QWORD *)(v10 - 552);
  sub_20E3FE6FC(*(_QWORD *)(v10 - 304), 0, 0, v34, *(_QWORD *)(v10 - 304), v35, *(_QWORD *)(v10 - 288));
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 472) + 8))(v29, v34);
  v37 = MEMORY[0x212BBDF90](MEMORY[0x24BDF1028], *(_QWORD *)(v10 - 512));
  *(_QWORD *)(v10 - 200) = v35;
  *(_QWORD *)(v10 - 192) = v37;
  v38 = *(_QWORD *)(v10 - 496);
  v39 = MEMORY[0x212BBDF90](v33, v38, v10 - 200);
  v40 = *(_QWORD **)(v10 - 528);
  sub_20E39D614(v40, v36, v38, v39);
  v41 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 488) + 8);
  v41(v36, v38);
  sub_20E39D618((uint64_t)v40, v38, *(_QWORD *)(v10 - 432));
  return ((uint64_t (*)(_QWORD *, uint64_t))v41)(v40, v38);
}

void type metadata accessor for IntentView.RequestID()
{
  JUMPOUT(0x212BBDEE8);
}

uint64_t sub_20E3F2D00()
{
  return sub_20E3EFF64();
}

uint64_t sub_20E3F2D20(uint64_t a1)
{
  return sub_20E3F6F20(a1);
}

uint64_t sub_20E3F2D40()
{
  return 64;
}

__n128 sub_20E3F2D4C(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  v4 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 48) = v4;
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

void sub_20E3F2D60(uint64_t a1)
{
  uint64_t v1;

  MEMORY[0x24BDAC7A8](a1);
  MEMORY[0x24BDAC7A8](v1);
  type metadata accessor for IntentView();
}

uint64_t sub_20E3F2DF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *, uint64_t);

  (*(void (**)(void))(v2 + *(int *)(a1 + 96)))();
  sub_20E39D614(v6, v5, v1, v3);
  v8 = *(uint64_t (**)(_QWORD *, uint64_t))(v7 + 8);
  v8(v5, v1);
  sub_20E39D618((uint64_t)v6, v1, v4);
  return v8(v6, v1);
}

uint64_t sub_20E3F2E6C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  result = swift_release();
  if ((a4 & 1) != 0)
    return swift_release();
  return result;
}

void sub_20E3F2EA8()
{
  type metadata accessor for IntentView();
}

void sub_20E3F2EF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  sub_20E3F2D60(v1 + ((v2 + 80) & ~v2));
}

void sub_20E3F2F54()
{
  type metadata accessor for IntentView();
}

uint64_t sub_20E3F2FAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  unint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(_BYTE *, uint64_t);
  _BYTE v25[96];

  v6 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v8 = &v25[-v7];
  *(_QWORD *)(v4 - 176) = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = &v25[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = &v25[-v14];
  v17 = (uint64_t *)(v3 + *(int *)(v16 + 100));
  v18 = *v17;
  *(_QWORD *)(v4 - 240) = v17[1];
  *(_QWORD *)(v4 - 232) = v18;
  (*(void (**)(_BYTE *, uint64_t, uint64_t, double))(v6 + 16))(v8, v3, a1, v13);
  v19 = (*(unsigned __int8 *)(v6 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v20 = (char *)swift_allocObject();
  v21 = *(_QWORD *)(v4 - 208);
  *((_QWORD *)v20 + 2) = *(_QWORD *)(v4 - 224);
  *((_QWORD *)v20 + 3) = v21;
  *((_QWORD *)v20 + 4) = *(_QWORD *)(v4 - 200);
  *((_QWORD *)v20 + 5) = v1;
  v22 = *(_QWORD *)(v4 - 184);
  *((_QWORD *)v20 + 6) = *(_QWORD *)(v4 - 192);
  *((_QWORD *)v20 + 7) = v22;
  *((_QWORD *)v20 + 8) = *(_QWORD *)(v4 - 216);
  *((_QWORD *)v20 + 9) = v2;
  (*(void (**)(char *, _BYTE *, uint64_t))(v6 + 32))(&v20[v19], v8, a1);
  (*(void (**)(_QWORD, void (*)(), char *))(v4 - 232))(*(_QWORD *)(v4 - 168), sub_20E3F76C8, v20);
  swift_release();
  sub_20E39D614(v15, v11, v1, v2);
  v23 = *(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v4 - 176) + 8);
  v23(v11, v1);
  sub_20E39D618((uint64_t)v15, v1, *(_QWORD *)(v4 - 160));
  return ((uint64_t (*)(_QWORD *, uint64_t))v23)(v15, v1);
}

void sub_20E3F313C()
{
  type metadata accessor for IntentView();
}

void sub_20E3F3190()
{
  sub_20E3F2F54();
}

uint64_t sub_20E3F31EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v9;

  v2 = *(_QWORD *)a1;
  v1 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  if ((*(_BYTE *)(a1 + 24) & 1) != 0)
  {
    swift_retain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254A19D38);
    MEMORY[0x212BBBCE0](&v9);
    sub_20E4A4730();
    v4 = v2;
    v5 = v1;
    v6 = v3;
    v7 = 1;
  }
  else
  {
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254A19D40);
    sub_20E4A464C();
    sub_20E4A4658();
    v4 = v2;
    v5 = v1;
    v6 = v3;
    v7 = 0;
  }
  return sub_20E3F2E6C(v4, v5, v6, v7);
}

void sub_20E3F32F4(uint64_t a1)
{
  MEMORY[0x24BDAC7A8](a1);
  type metadata accessor for IntentView();
}

uint64_t sub_20E3F3378(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  void (*v17)(_BYTE *, uint64_t);
  _BYTE v19[96];

  v7 = sub_20E4A4BBC();
  *(_QWORD *)(v5 - 152) = MEMORY[0x24BEE4578];
  v8 = MEMORY[0x212BBDF90](MEMORY[0x24BE5CAA8], v7, v5 - 152);
  *(_QWORD *)(v5 - 144) = v2;
  *(_QWORD *)(v5 - 136) = v7;
  *(_QWORD *)(v5 - 128) = v1;
  *(_QWORD *)(v5 - 120) = v8;
  v9 = sub_20E4A46DC();
  *(_QWORD *)(v5 - 192) = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = &v19[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = &v19[-v14];
  (*(void (**)(_QWORD, double))(v3 + *(int *)(a1 + 104)))(*(_QWORD *)(v5 - 184), v13);
  sub_20E3F1BD4();
  sub_20E4A4BC8();
  *(_QWORD *)(v5 - 160) = *(_QWORD *)(v5 - 144);
  sub_20E4A43DC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 176) + 8))(v4, v2);
  v16 = MEMORY[0x212BBDF90](MEMORY[0x24BDF44C8], v9);
  sub_20E39D614(v15, v11, v9, v16);
  v17 = *(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v5 - 192) + 8);
  v17(v11, v9);
  sub_20E39D618((uint64_t)v15, v9, *(_QWORD *)(v5 - 168));
  return ((uint64_t (*)(_QWORD *, uint64_t))v17)(v15, v9);
}

void sub_20E3F351C()
{
  type metadata accessor for IntentView();
}

void sub_20E3F3570(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  sub_20E3F32F4(a12);
}

void sub_20E3F35D0()
{
  sub_20E3F3874();
}

void sub_20E3F35E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned __int8 a12)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[4];
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v23 = a8;
  v22 = a12;
  v18 = sub_20E4A4A24();
  v21[2] = *(_QWORD *)(v18 - 8);
  v21[3] = v18;
  MEMORY[0x24BDAC7A8](v18);
  v21[1] = (char *)v21 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = a2;
  v25 = a3;
  v26 = a4;
  v27 = a5;
  v28 = a6;
  v29 = a7;
  v30 = v23;
  v31 = a9;
  type metadata accessor for IntentView();
}

void sub_20E3F36BC()
{
  sub_20E3F1EB0();
}

uint64_t sub_20E3F36D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;

  v6 = v2 + v4[22];
  *(_QWORD *)(v5 - 152) = v0;
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 16);
  v8 = v3;
  v7(v1, v6, v3);
  v9 = *(_QWORD *)(v2 + v4[23]);
  sub_20E3F1F34((uint64_t)v4, (_QWORD *)(v5 - 144));
  v13 = *(_QWORD *)(v5 - 144);
  if (!v13)
  {
    *(_QWORD *)(v5 - 192) = *(_QWORD *)(v5 + 32);
    sub_20E4A4F40();
    sub_20E4A4F04();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254A198A0);
    v14 = (_QWORD *)swift_allocObject();
    v14[3] = 0;
    v14[4] = 0;
    v14[2] = &unk_254A1BFB0;
    v15 = *(_QWORD *)(v5 - 184);
    sub_20E4A49F4();
    v13 = sub_20E4A4F10();
    swift_release();
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v5 - 176) + 8))(v15, *(_QWORD *)(v5 - 168));
  }
  *(_QWORD *)(v5 - 144) = v13;
  v16 = sub_20E3F1F8C((uint64_t)v4, v10, v11, v12);
  sub_20E3F0028(v1, *(_DWORD *)(v5 - 156) & 1, v9, (uint64_t *)(v5 - 144), (uint64_t)v16, v17, (*(_BYTE *)(v2 + v4[27]) & 1) == 0);
  sub_20E3CF5C0((uint64_t)v16);
  swift_release();
  swift_release();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 152) + 8))(v1, v8);
}

void sub_20E3F385C()
{
  sub_20E3F3874();
}

void sub_20E3F3874()
{
  type metadata accessor for IntentView();
}

#error "20E3F3910: call analysis failed (funcsize=18)"

BOOL static IntentViewConfiguration.RefreshStyle.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t IntentViewConfiguration.RefreshStyle.hash(into:)()
{
  return sub_20E4A641C();
}

uint64_t IntentViewConfiguration.RefreshStyle.hashValue.getter()
{
  sub_20E4A6410();
  sub_20E4A641C();
  return sub_20E4A6428();
}

_JetEngine_SwiftUI::IntentViewConfiguration __swiftcall IntentViewConfiguration.withRefreshStyle(_:)(_JetEngine_SwiftUI::IntentViewConfiguration result)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)result.refreshStyle;
  return result;
}

BOOL static IntentViewConfiguration.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void IntentView.init(_:what:transaction:working:failed:content:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, __int128 a11, __int128 a12, __int128 a13, uint64_t a14)
{
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 v28;
  __int128 v29;
  uint64_t v30;

  v25 = a8;
  v26 = a6;
  v27 = a7;
  v23 = a12;
  v24 = a11;
  v22 = a13;
  v17 = *(_QWORD *)(a10 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v19 = (char *)&v22 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(_QWORD *)(v20 + 16);
  v29 = *(_OWORD *)v20;
  v30 = v21;
  (*(void (**)(char *))(v17 + 16))(v19);
  v28 = 0;
  IntentView.init(_:what:transaction:configuration:working:failed:content:)(&v29, (uint64_t)v19, a3, &v28, a4, a5, v26, v27, v25, a9, a10, v24, *((uint64_t *)&v24 + 1), v23, *((uint64_t *)&v23 + 1), v22, *((uint64_t *)&v22 + 1), a14);
}

uint64_t sub_20E3F3AD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

void IntentView.init(_:what:working:failed:content:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, __int128 a10, __int128 a11, __int128 a12, uint64_t a13)
{
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 v28;
  __int128 v29;
  uint64_t v30;

  v26 = a5;
  v27 = a6;
  v24 = a11;
  v25 = a10;
  v23 = a12;
  v17 = *(_QWORD *)(a9 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v19 = (char *)&v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(_QWORD *)(v20 + 16);
  v29 = *(_OWORD *)v20;
  v30 = v21;
  (*(void (**)(char *))(v17 + 16))(v19);
  sub_20E4A48BC();
  v22 = sub_20E4A371C();
  v28 = 0;
  IntentView.init(_:what:transaction:configuration:working:failed:content:)(&v29, (uint64_t)v19, v22, &v28, a3, a4, v26, v27, a7, a8, a9, v25, *((uint64_t *)&v25 + 1), v24, *((uint64_t *)&v24 + 1), v23, *((uint64_t *)&v23 + 1), a13);
}

uint64_t sub_20E3F3C28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

void IntentView.init<>(_:what:content:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 v29;
  __int128 v30;
  uint64_t v31;

  v23 = a8;
  v24 = a7;
  v27 = a4;
  v28 = a6;
  v25 = a9;
  v26 = a3;
  v22[1] = a2;
  v10 = *(_QWORD *)(a5 - 8);
  v11 = MEMORY[0x24BDAC7A8](a1);
  v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = v14[1];
  v16 = v14[2];
  *(_QWORD *)&v30 = *v14;
  *((_QWORD *)&v30 + 1) = v15;
  v31 = v16;
  (*(void (**)(char *, double))(v10 + 16))(v13, v11);
  swift_retain();
  swift_retain();
  sub_20E4A48BC();
  v17 = sub_20E4A371C();
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19208);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19210);
  v20 = sub_20E39D010(&qword_254A19218, &qword_254A19208, (uint64_t)&protocol conformance descriptor for LoadingView<A>);
  v21 = sub_20E39D010(&qword_254A19220, &qword_254A19210, (uint64_t)&protocol conformance descriptor for ContentUnavailableView<A, B, C>);
  v29 = 0;
  IntentView.init(_:what:transaction:configuration:working:failed:content:)(&v30, (uint64_t)v13, v17, &v29, (uint64_t)j___s18_JetEngine_SwiftUI11LoadingViewVACy0cD04TextVGycAFRszrlufC, 0, (uint64_t)sub_20E3D457C, 0, v26, v27, a5, v28, v18, v19, v24, v23, v20, v21);
}

uint64_t sub_20E3F3DDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(_QWORD, uint64_t))(v1 + 8))(*(_QWORD *)(v2 - 168), v0);
  swift_release();
  return swift_release();
}

void IntentView.init<>(_:what:placeholder:content:)(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, double);
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  unint64_t v31;
  unint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD v59[2];
  unsigned __int8 v60;
  __int128 v61;
  uint64_t v62;

  v57 = a5;
  v58 = a4;
  v51 = a3;
  v53 = a2;
  v56 = a9;
  v46 = a10;
  v47 = a7;
  v48 = a8;
  swift_getAssociatedTypeWitness();
  v15 = sub_20E4A60E0();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v44 - v18;
  v54 = *(_QWORD *)(a6 - 8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v44 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = v23;
  v55 = a1;
  v24 = a1[1];
  v25 = a1[2];
  *(_QWORD *)&v61 = *a1;
  *((_QWORD *)&v61 + 1) = v24;
  v62 = v25;
  v27 = *(void (**)(char *, uint64_t, double))(v26 + 16);
  v29 = v28;
  v49 = v28;
  v27(v23, a2, v21);
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v50 = v15;
  v30(v19, a3, v15);
  v31 = (*(unsigned __int8 *)(v16 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v32 = (v17 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
  v33 = (char *)swift_allocObject();
  *((_QWORD *)v33 + 2) = v29;
  v34 = v47;
  *((_QWORD *)v33 + 3) = v47;
  *((_QWORD *)v33 + 4) = a8;
  v35 = v46;
  *((_QWORD *)v33 + 5) = v46;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(&v33[v31], v19, v15);
  v36 = &v33[v32];
  v37 = v57;
  *(_QWORD *)v36 = v58;
  *((_QWORD *)v36 + 1) = v37;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_20E4A48BC();
  v45 = sub_20E4A371C();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19208);
  v38 = v34;
  v39 = sub_20E4A3E00();
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19210);
  v41 = sub_20E39D010(&qword_254A19218, &qword_254A19208, (uint64_t)&protocol conformance descriptor for LoadingView<A>);
  v59[0] = v35;
  v59[1] = v41;
  v42 = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v39, v59);
  v43 = sub_20E39D010(&qword_254A19220, &qword_254A19210, (uint64_t)&protocol conformance descriptor for ContentUnavailableView<A, B, C>);
  v60 = 0;
  IntentView.init(_:what:transaction:configuration:working:failed:content:)(&v61, (uint64_t)v52, v45, &v60, (uint64_t)sub_20E3F4138, (uint64_t)v33, (uint64_t)sub_20E3D457C, 0, v58, v57, v49, v38, v39, v40, v48, v35, v42, v43);
}

uint64_t sub_20E3F40E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v2 - 200), *(_QWORD *)(v2 - 208));
  (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v2 - 176) + 8))(*(_QWORD *)(v2 - 184), v1);
  swift_release();
  return swift_release();
}

void IntentView.init<>(_:what:transaction:content:)(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9)
{
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 v29;
  __int128 v30;
  uint64_t v31;

  v23 = a7;
  v24 = a8;
  v27 = a2;
  v28 = a6;
  v25 = a3;
  v26 = a4;
  v22 = a9;
  v10 = *(_QWORD *)(a5 - 8);
  v11 = MEMORY[0x24BDAC7A8](a1);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = v14[1];
  v16 = v14[2];
  *(_QWORD *)&v30 = *v14;
  *((_QWORD *)&v30 + 1) = v15;
  v31 = v16;
  (*(void (**)(char *, double))(v10 + 16))(v13, v11);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19208);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19210);
  v19 = sub_20E39D010(&qword_254A19218, &qword_254A19208, (uint64_t)&protocol conformance descriptor for LoadingView<A>);
  v20 = sub_20E39D010(&qword_254A19220, &qword_254A19210, (uint64_t)&protocol conformance descriptor for ContentUnavailableView<A, B, C>);
  v29 = 0;
  swift_retain();
  swift_retain();
  IntentView.init(_:what:transaction:configuration:working:failed:content:)(&v30, (uint64_t)v13, v27, &v29, (uint64_t)j___s18_JetEngine_SwiftUI11LoadingViewVACy0cD04TextVGycAFRszrlufC, 0, (uint64_t)sub_20E3D457C, 0, v25, v26, a5, v28, v17, v18, v23, v22, v19, v20);
}

uint64_t sub_20E3F429C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
  swift_release();
  return swift_release();
}

void IntentView.init<>(_:what:placeholder:transaction:content:)(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t, double);
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD v59[2];
  unsigned __int8 v60;
  __int128 v61;
  uint64_t v62;

  v56 = a4;
  v57 = a6;
  v49 = a5;
  v50 = a3;
  v52 = a2;
  v55 = a9;
  v45 = a11;
  v46 = a8;
  v58 = a10;
  swift_getAssociatedTypeWitness();
  v15 = sub_20E4A60E0();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v44 - v18;
  v53 = *(_QWORD *)(a7 - 8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v44 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = v23;
  v54 = a1;
  v24 = a1[1];
  v25 = a1[2];
  *(_QWORD *)&v61 = *a1;
  *((_QWORD *)&v61 + 1) = v24;
  v62 = v25;
  v27 = *(void (**)(char *, uint64_t, uint64_t, double))(v26 + 16);
  v28 = a7;
  v47 = a7;
  v27(v23, a2, a7, v21);
  v60 = 0;
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v30 = v15;
  v48 = v15;
  v29(v19, a3, v15);
  v31 = (*(unsigned __int8 *)(v16 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v32 = (v17 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
  v33 = (char *)swift_allocObject();
  v34 = v46;
  *((_QWORD *)v33 + 2) = v28;
  *((_QWORD *)v33 + 3) = v34;
  v35 = v45;
  *((_QWORD *)v33 + 4) = v58;
  *((_QWORD *)v33 + 5) = v35;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(&v33[v31], v19, v30);
  v36 = (uint64_t *)&v33[v32];
  v37 = v49;
  v38 = v57;
  *v36 = v49;
  v36[1] = v38;
  swift_retain();
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19208);
  v39 = sub_20E4A3E00();
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19210);
  v41 = sub_20E39D010(&qword_254A19218, &qword_254A19208, (uint64_t)&protocol conformance descriptor for LoadingView<A>);
  v59[0] = v35;
  v59[1] = v41;
  v42 = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v39, v59);
  v43 = sub_20E39D010(&qword_254A19220, &qword_254A19210, (uint64_t)&protocol conformance descriptor for ContentUnavailableView<A, B, C>);
  IntentView.init(_:what:transaction:configuration:working:failed:content:)(&v61, (uint64_t)v51, v56, &v60, (uint64_t)sub_20E3F4138, (uint64_t)v33, (uint64_t)sub_20E3D457C, 0, v37, v57, v47, v34, v39, v40, v58, v35, v42, v43);
}

uint64_t sub_20E3F4564()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(_QWORD, _QWORD))(v1 + 8))(*(_QWORD *)(v2 - 208), *(_QWORD *)(v2 - 224));
  (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v2 - 184) + 8))(*(_QWORD *)(v2 - 192), v0);
  swift_release();
  return swift_release();
}

uint64_t sub_20E3F45BC@<X0>(uint64_t a1@<X0>, void (*a2)(char *)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  char *v24;
  char v25;
  uint64_t v26;
  uint64_t KeyPath;
  uint64_t v28;
  void *v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  void (*v35)(char *);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD v43[2];
  char v44;
  uint64_t (*v45)();
  uint64_t v46;
  char v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  char v53;
  void *v54;
  char v55;

  v42 = a5;
  v34 = a3;
  v35 = a2;
  v41 = a6;
  v36 = *(_QWORD *)(a4 - 8);
  v37 = a1;
  MEMORY[0x24BDAC7A8](a1);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v34 - v10;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v13 = sub_20E4A60E0();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v34 - v15;
  v17 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v34 - v19;
  v38 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19208);
  v21 = sub_20E4A3E00();
  v39 = *(_QWORD *)(v21 - 8);
  v40 = v21;
  v22 = MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v34 - v23;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v14 + 16))(v16, v37, v13, v22);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v16, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    v44 = 0;
    sub_20E4A4640();
    v25 = (char)v45;
    v26 = v46;
    KeyPath = swift_getKeyPath();
    v28 = swift_getKeyPath();
    v29 = (void *)swift_getKeyPath();
    v45 = sub_20E39C368;
    v46 = 0;
    v47 = 1;
    v48 = v25;
    v49 = v26;
    v50 = KeyPath;
    v51 = 0;
    v52 = v28;
    v53 = 0;
    v54 = v29;
    v55 = 0;
    sub_20E39D010(&qword_254A19218, &qword_254A19208, (uint64_t)&protocol conformance descriptor for LoadingView<A>);
    sub_20E39CBE0((uint64_t)&v45, a4, v38);
    sub_20E39CED0();
    swift_release();
    sub_20E39CED8(KeyPath, 0);
    j__swift_release(v28, 0);
    sub_20E39CE70(v29, 0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v20, v16, AssociatedTypeWitness);
    v35(v20);
    sub_20E39D614(v11, v8, a4, v42);
    v30 = *(void (**)(char *, uint64_t))(v36 + 8);
    v30(v8, a4);
    sub_20E39D618((uint64_t)v11, a4, (uint64_t)v8);
    sub_20E39D010(&qword_254A19218, &qword_254A19208, (uint64_t)&protocol conformance descriptor for LoadingView<A>);
    sub_20E3DC6B0((uint64_t)v8, a4);
    v30(v8, a4);
    v30(v11, a4);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v20, AssociatedTypeWitness);
  }
  v31 = sub_20E39D010(&qword_254A19218, &qword_254A19208, (uint64_t)&protocol conformance descriptor for LoadingView<A>);
  v43[0] = v42;
  v43[1] = v31;
  v32 = v40;
  MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v40, v43);
  sub_20E39D618((uint64_t)v24, v32, v41);
  return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v24, v32);
}

void IntentView.init(what:transaction:working:failed:content:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, __int128 a10, __int128 a11, __int128 a12, uint64_t a13)
{
  uint64_t v18;
  double v19;
  uint64_t v20;
  char *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 v28;

  v25 = a8;
  v26 = a6;
  v27 = a7;
  v23 = a11;
  v24 = a10;
  v22 = a12;
  v18 = *(_QWORD *)(a9 - 8);
  v19 = MEMORY[0x24BDAC7A8](a1);
  v21 = (char *)&v22 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v18 + 16))(v21, a1, a9, v19);
  v28 = 0;
  IntentView.init(what:transaction:configuration:working:failed:content:)((uint64_t)v21, a2, &v28, a3, a4, a5, v26, v27, v25, a9, v24, *((uint64_t *)&v24 + 1), v23, *((uint64_t *)&v23 + 1), v22, *((uint64_t *)&v22 + 1), a13);
}

uint64_t sub_20E3F4A98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

void IntentView.init(what:working:failed:content:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  uint64_t v21[3];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 v28;
  unsigned __int8 v29;

  v24 = a7;
  v25 = a4;
  v26 = a5;
  v27 = a6;
  v22 = a2;
  v23 = a3;
  v21[1] = a1;
  v21[2] = a9;
  v17 = *(_QWORD *)(a8 - 8);
  v18 = MEMORY[0x24BDAC7A8](a1);
  v20 = (char *)v21 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v17 + 16))(v20, v18);
  sub_20E4A48BC();
  v21[0] = sub_20E4A371C();
  sub_20E3D40DC(&v29);
  v28 = v29;
  IntentView.init(what:transaction:configuration:working:failed:content:)((uint64_t)v20, v21[0], &v28, v22, v23, v25, v26, v27, v24, a8, a10, a11, a12, a13, a14, a15, a16);
}

uint64_t sub_20E3F4BE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, uint64_t))(v1 + 8))(*(_QWORD *)(v2 - 152), v0);
}

void IntentView.init<>(what:content:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20[3];
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 v23;

  v21 = a3;
  v22 = a2;
  v20[1] = a1;
  v20[2] = a8;
  v12 = *(_QWORD *)(a4 - 8);
  v13 = MEMORY[0x24BDAC7A8](a1);
  v15 = (char *)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v12 + 16))(v15, v13);
  sub_20E4A48BC();
  v20[0] = sub_20E4A371C();
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19208);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19210);
  v18 = sub_20E39D010(&qword_254A19218, &qword_254A19208, (uint64_t)&protocol conformance descriptor for LoadingView<A>);
  v19 = sub_20E39D010(&qword_254A19220, &qword_254A19210, (uint64_t)&protocol conformance descriptor for ContentUnavailableView<A, B, C>);
  sub_20E3D40DC(&v23);
  IntentView.init(what:transaction:configuration:working:failed:content:)((uint64_t)v15, v20[0], &v23, (uint64_t)j___s18_JetEngine_SwiftUI11LoadingViewVACy0cD04TextVGycAFRszrlufC, 0, (uint64_t)sub_20E3D457C, 0, v22, v21, a4, a5, v16, v17, a6, a7, v18, v19);
}

uint64_t sub_20E3F4D94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, uint64_t))(v1 + 8))(*(_QWORD *)(v2 - 120), v0);
}

void IntentView.init<>(what:placeholder:content:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  unint64_t v24;
  unint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD v48[2];
  unsigned __int8 v49;

  v38 = a8;
  v46 = a9;
  v47 = a4;
  v40 = a3;
  v42 = a2;
  v44 = a1;
  v39 = a7;
  swift_getAssociatedTypeWitness();
  v14 = sub_20E4A60E0();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v37 - v17;
  v45 = *(_QWORD *)(a5 - 8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v43 = (uint64_t)&v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(double))(v22 + 16))(v20);
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v41 = v14;
  v23(v18, a2, v14);
  v24 = (*(unsigned __int8 *)(v15 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v25 = (v16 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  v26 = (char *)swift_allocObject();
  *((_QWORD *)v26 + 2) = a5;
  *((_QWORD *)v26 + 3) = a6;
  *((_QWORD *)v26 + 4) = a7;
  v27 = v38;
  *((_QWORD *)v26 + 5) = v38;
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(&v26[v24], v18, v14);
  v28 = (uint64_t *)&v26[v25];
  v29 = v47;
  *v28 = a3;
  v28[1] = v29;
  swift_retain();
  sub_20E4A48BC();
  v37 = sub_20E4A371C();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19208);
  v30 = a6;
  v31 = sub_20E4A3E00();
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19210);
  v33 = sub_20E39D010(&qword_254A19218, &qword_254A19208, (uint64_t)&protocol conformance descriptor for LoadingView<A>);
  v48[0] = v27;
  v48[1] = v33;
  v34 = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v31, v48);
  v35 = sub_20E39D010(&qword_254A19220, &qword_254A19210, (uint64_t)&protocol conformance descriptor for ContentUnavailableView<A, B, C>);
  v36 = v39;
  sub_20E3D40DC(&v49);
  IntentView.init(what:transaction:configuration:working:failed:content:)(v43, v37, &v49, (uint64_t)sub_20E3F4138, (uint64_t)v26, (uint64_t)sub_20E3D457C, 0, v40, v47, a5, v30, v31, v32, v36, v27, v34, v35);
}

uint64_t sub_20E3F5068()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(_QWORD, _QWORD))(v1 + 8))(*(_QWORD *)(v2 - 152), *(_QWORD *)(v2 - 160));
  return (*(uint64_t (**)(_QWORD, uint64_t))(*(_QWORD *)(v2 - 128) + 8))(*(_QWORD *)(v2 - 136), v0);
}

void IntentView.init<>(what:transaction:content:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 v25;

  v23 = a4;
  v24 = a3;
  v21[1] = a9;
  v22 = a2;
  v21[0] = a1;
  v13 = *(_QWORD *)(a5 - 8);
  v14 = MEMORY[0x24BDAC7A8](a1);
  v16 = (char *)v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v13 + 16))(v16, v14);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19208);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19210);
  v19 = sub_20E39D010(&qword_254A19218, &qword_254A19208, (uint64_t)&protocol conformance descriptor for LoadingView<A>);
  v20 = sub_20E39D010(&qword_254A19220, &qword_254A19210, (uint64_t)&protocol conformance descriptor for ContentUnavailableView<A, B, C>);
  sub_20E3D40DC(&v25);
  IntentView.init(what:transaction:configuration:working:failed:content:)((uint64_t)v16, v22, &v25, (uint64_t)j___s18_JetEngine_SwiftUI11LoadingViewVACy0cD04TextVGycAFRszrlufC, 0, (uint64_t)sub_20E3D457C, 0, v24, v23, a5, a6, v17, v18, a7, a8, v19, v20);
}

uint64_t sub_20E3F51F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, uint64_t))(v1 + 8))(*(_QWORD *)(v2 - 128), v0);
}

void IntentView.init<>(what:placeholder:transaction:content:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  unint64_t v23;
  unint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[2];
  unsigned __int8 v47;

  v36 = a7;
  v44 = a4;
  v45 = a5;
  v42 = a9;
  v43 = a3;
  v38 = a2;
  v40 = a1;
  swift_getAssociatedTypeWitness();
  v13 = sub_20E4A60E0();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v35 - v16;
  v41 = *(_QWORD *)(a6 - 8);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v39 = (uint64_t)&v35 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(double))(v21 + 16))(v19);
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v37 = v13;
  v22(v17, a2, v13);
  v23 = (*(unsigned __int8 *)(v14 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v24 = (v15 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  v25 = (char *)swift_allocObject();
  v26 = v36;
  *((_QWORD *)v25 + 2) = a6;
  *((_QWORD *)v25 + 3) = v26;
  *((_QWORD *)v25 + 4) = a8;
  *((_QWORD *)v25 + 5) = a10;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v25[v23], v17, v13);
  v27 = &v25[v24];
  v28 = v45;
  *(_QWORD *)v27 = v44;
  *((_QWORD *)v27 + 1) = v28;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19208);
  v29 = sub_20E4A3E00();
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19210);
  v31 = sub_20E39D010(&qword_254A19218, &qword_254A19208, (uint64_t)&protocol conformance descriptor for LoadingView<A>);
  v46[0] = a10;
  v46[1] = v31;
  v32 = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v29, v46);
  v33 = sub_20E39D010(&qword_254A19220, &qword_254A19210, (uint64_t)&protocol conformance descriptor for ContentUnavailableView<A, B, C>);
  sub_20E3D40DC(&v47);
  v34 = swift_retain();
  IntentView.init(what:transaction:configuration:working:failed:content:)(v39, v43, &v47, (uint64_t)sub_20E3F4138, (uint64_t)v25, (uint64_t)sub_20E3D457C, 0, v44, v34, a6, v26, v29, v30, a8, a10, v32, v33);
}

uint64_t sub_20E3F5490()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(_QWORD, _QWORD))(v1 + 8))(*(_QWORD *)(v2 - 168), *(_QWORD *)(v2 - 176));
  return (*(uint64_t (**)(_QWORD, uint64_t))(*(_QWORD *)(v2 - 144) + 8))(*(_QWORD *)(v2 - 152), v0);
}

uint64_t objectdestroy_42Tm()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2 = *(_QWORD *)(sub_20E4A60E0() - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v3, 1, AssociatedTypeWitness))(*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v3, AssociatedTypeWitness);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E3F55A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD *)(v1 + 40);
  swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(sub_20E4A60E0() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = v1 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_20E3F45BC(v1 + v6, *(void (**)(char *))v7, *(_QWORD *)(v7 + 8), v3, v4, a1);
}

uint64_t sub_20E3F5648()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_20E3F5688()
{
  unint64_t result;

  result = qword_254A19B88[0];
  if (!qword_254A19B88[0])
  {
    result = MEMORY[0x212BBDF90](&protocol conformance descriptor for IntentViewConfiguration.RefreshStyle, &type metadata for IntentViewConfiguration.RefreshStyle);
    atomic_store(result, qword_254A19B88);
  }
  return result;
}

uint64_t sub_20E3F56CC()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_20E3F56D4()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_20E3F5784(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;

  v4 = (uint64_t)a1;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64) + 7;
  if (v7 > 7
    || (*(_DWORD *)(v6 + 80) & 0x100000) != 0
    || ((((((((v8 + ((v7 + 49) & ~v7)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
       + 63) & 0xFFFFFFFFFFFFFFF8)
     + 17 > 0x18)
  {
    v11 = *(_QWORD *)a2;
    *(_QWORD *)v4 = *(_QWORD *)a2;
    v4 = v11 + ((v7 & 0xF8 ^ 0x1F8) & (v7 + 16));
    swift_retain();
  }
  else
  {
    v12 = *(unsigned __int8 *)(a2 + 24);
    if (v12 >= 2)
      v12 = *(_DWORD *)a2 + 2;
    v41 = ~v7;
    if (v12 == 1)
    {
      v13 = *(_QWORD *)(a2 + 8);
      *a1 = *(_QWORD *)a2;
      a1[1] = v13;
      a1[2] = *(_QWORD *)(a2 + 16);
      swift_retain();
      v14 = 1;
    }
    else
    {
      v14 = 0;
      v15 = *(_QWORD *)(a2 + 8);
      *a1 = *(_QWORD *)a2;
      a1[1] = v15;
    }
    swift_retain();
    *(_BYTE *)(v4 + 24) = v14;
    v16 = v4 & 0xFFFFFFFFFFFFFFF8;
    v17 = a2 & 0xFFFFFFFFFFFFFFF8;
    v18 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 32);
    v19 = *(_QWORD *)(v17 + 40);
    v20 = *(_BYTE *)(v17 + 48);
    sub_20E39CFB8();
    *(_QWORD *)(v16 + 32) = v18;
    *(_QWORD *)(v16 + 40) = v19;
    *(_BYTE *)(v16 + 48) = v20;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16))(((v4 & 0xFFFFFFFFFFFFFFF8) + v7 + 49) & v41, (v17 + v7 + 49) & v41, v5);
    v21 = (_QWORD *)((v8 + (((v4 & 0xFFFFFFFFFFFFFFF8) + v7 + 49) & v41)) & 0xFFFFFFFFFFFFF8);
    v22 = (_QWORD *)((v8 + ((v17 + v7 + 49) & v41)) & 0xFFFFFFFFFFFFF8);
    *v21 = *v22;
    v23 = (_QWORD *)(((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8);
    v24 = (_QWORD *)(((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8);
    v25 = v24[1];
    *v23 = *v24;
    v23[1] = v25;
    v26 = (_QWORD *)(((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8);
    v27 = (_QWORD *)(((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFFFF8);
    v28 = v27[1];
    *v26 = *v27;
    v26[1] = v28;
    v29 = ((unint64_t)v26 + 23) & 0xFFFFFFFFFFFFFFF8;
    v30 = ((unint64_t)v27 + 23) & 0xFFFFFFFFFFFFFFF8;
    v31 = *(_QWORD *)(v30 + 8);
    *(_QWORD *)v29 = *(_QWORD *)v30;
    *(_QWORD *)(v29 + 8) = v31;
    *(_BYTE *)(v29 + 16) = *(_BYTE *)(v30 + 16);
    v32 = ((unint64_t)v26 + 47) & 0xFFFFFFFFFFFFFFF8;
    v33 = ((unint64_t)v27 + 47) & 0xFFFFFFFFFFFFFFF8;
    v34 = *(_QWORD *)v33;
    v35 = *(_BYTE *)(v33 + 8);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    j__swift_retain(v34);
    *(_QWORD *)v32 = v34;
    *(_BYTE *)(v32 + 8) = v35;
    v36 = ((unint64_t)v26 + 63) & 0xFFFFFFFFFFFFFFF8;
    v37 = ((unint64_t)v27 + 63) & 0xFFFFFFFFFFFFFFF8;
    v38 = *(_QWORD *)v37;
    v39 = *(_QWORD *)(v37 + 8);
    LOBYTE(v31) = *(_BYTE *)(v37 + 16);
    sub_20E3E2960(*(_QWORD *)v37, v39, v31);
    *(_QWORD *)v36 = v38;
    *(_QWORD *)(v36 + 8) = v39;
    *(_BYTE *)(v36 + 16) = v31;
  }
  return v4;
}

uint64_t sub_20E3F59D4(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v4 = *(unsigned __int8 *)(a1 + 24);
  if (v4 >= 2)
    v4 = *(_DWORD *)a1 + 2;
  if (v4 == 1)
    swift_release();
  swift_release();
  sub_20E39CED0();
  v5 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v6 = ((a1 & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v5 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  (*(void (**)(unint64_t))(v5 + 8))(v6);
  v7 = ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15;
  swift_release();
  swift_release();
  v8 = ((v7 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  swift_release();
  j__swift_release(*(_QWORD *)((v8 + 47) & 0xFFFFFFFFFFFFFFF8), *(unsigned __int8 *)(((v8 + 47) & 0xFFFFFFFFFFFFFFF8) + 8));
  return sub_20E3E2B4C(*(_QWORD *)((v8 + 63) & 0xFFFFFFFFFFFFFFF8), *(_QWORD *)(((v8 + 63) & 0xFFFFFFFFFFFFFFF8) + 8), *(_BYTE *)(((v8 + 63) & 0xFFFFFFFFFFFFFFF8) + 16));
}

uint64_t sub_20E3F5AC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v6 = *(unsigned __int8 *)(a2 + 24);
  if (v6 >= 2)
    v6 = *(_DWORD *)a2 + 2;
  if (v6 == 1)
  {
    v7 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    swift_retain();
    v8 = 1;
  }
  else
  {
    v8 = 0;
    v9 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v9;
  }
  swift_retain();
  *(_BYTE *)(a1 + 24) = v8;
  v10 = a1 & 0xFFFFFFFFFFFFFFF8;
  v11 = a2 & 0xFFFFFFFFFFFFFFF8;
  v12 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 32);
  v13 = *(_QWORD *)(v11 + 40);
  v14 = *(_BYTE *)(v11 + 48);
  sub_20E39CFB8();
  *(_QWORD *)(v10 + 32) = v12;
  *(_QWORD *)(v10 + 40) = v13;
  *(_BYTE *)(v10 + 48) = v14;
  v15 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = (v16 + 49 + (a1 & 0xFFFFFFFFFFFFFFF8)) & ~v16;
  v18 = (v16 + 49 + v11) & ~v16;
  (*(void (**)(unint64_t, uint64_t))(v15 + 16))(v17, v18);
  v19 = *(_QWORD *)(v15 + 64) + 7;
  v20 = (_QWORD *)((v19 + v17) & 0xFFFFFFFFFFFFFFF8);
  v21 = (_QWORD *)((v19 + v18) & 0xFFFFFFFFFFFFFFF8);
  *v20 = *v21;
  v22 = (_QWORD *)(((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF8);
  v23 = (_QWORD *)(((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  v25 = (_QWORD *)(((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFFFF8);
  v26 = (_QWORD *)(((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8);
  v27 = v26[1];
  *v25 = *v26;
  v25[1] = v27;
  v28 = ((unint64_t)v25 + 23) & 0xFFFFFFFFFFFFFFF8;
  v29 = ((unint64_t)v26 + 23) & 0xFFFFFFFFFFFFFFF8;
  v30 = *(_QWORD *)(v29 + 8);
  *(_QWORD *)v28 = *(_QWORD *)v29;
  *(_QWORD *)(v28 + 8) = v30;
  *(_BYTE *)(v28 + 16) = *(_BYTE *)(v29 + 16);
  v31 = ((unint64_t)v25 + 47) & 0xFFFFFFFFFFFFFFF8;
  v32 = ((unint64_t)v26 + 47) & 0xFFFFFFFFFFFFFFF8;
  v33 = *(_QWORD *)v32;
  LOBYTE(v10) = *(_BYTE *)(v32 + 8);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  j__swift_retain(v33);
  *(_QWORD *)v31 = v33;
  *(_BYTE *)(v31 + 8) = v10;
  v34 = ((unint64_t)v25 + 63) & 0xFFFFFFFFFFFFFFF8;
  v35 = ((unint64_t)v26 + 63) & 0xFFFFFFFFFFFFFFF8;
  v36 = *(_QWORD *)v35;
  v37 = *(_QWORD *)(v35 + 8);
  LOBYTE(v30) = *(_BYTE *)(v35 + 16);
  sub_20E3E2960(*(_QWORD *)v35, v37, v30);
  *(_QWORD *)v34 = v36;
  *(_QWORD *)(v34 + 8) = v37;
  *(_BYTE *)(v34 + 16) = v30;
  return a1;
}

uint64_t sub_20E3F5C94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v6;
  unsigned int v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;

  if (a1 != a2)
  {
    v6 = *(unsigned __int8 *)(a1 + 24);
    if (v6 >= 2)
      v6 = *(_DWORD *)a1 + 2;
    if (v6 == 1)
      swift_release();
    swift_release();
    v7 = *(unsigned __int8 *)(a2 + 24);
    if (v7 >= 2)
      v7 = *(_DWORD *)a2 + 2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    if (v7 == 1)
    {
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_BYTE *)(a1 + 24) = 1;
      swift_retain();
    }
    else
    {
      *(_BYTE *)(a1 + 24) = 0;
    }
    swift_retain();
  }
  v8 = a1 & 0xFFFFFFFFFFFFFFF8;
  v9 = a2 & 0xFFFFFFFFFFFFFFF8;
  v10 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 32);
  v11 = *(_QWORD *)(v9 + 40);
  v12 = *(_BYTE *)(v9 + 48);
  sub_20E39CFB8();
  *(_QWORD *)(v8 + 32) = v10;
  *(_QWORD *)(v8 + 40) = v11;
  *(_BYTE *)(v8 + 48) = v12;
  sub_20E39CED0();
  v13 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = (v14 + 49 + (a1 & 0xFFFFFFFFFFFFFFF8)) & ~v14;
  v16 = (v14 + 49 + v9) & ~v14;
  (*(void (**)(unint64_t, uint64_t))(v13 + 24))(v15, v16);
  v17 = *(_QWORD *)(v13 + 64) + 7;
  v18 = (_QWORD *)((v17 + v15) & 0xFFFFFFFFFFFFFFF8);
  v19 = v17 + v16;
  v20 = (v19 & 0xFFFFFFFFFFFFFFF8) + 15;
  *v18 = *(_QWORD *)(v19 & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  v21 = (_QWORD *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8);
  v20 &= 0xFFFFFFFFFFFFFFF8;
  v22 = *(_QWORD *)(v20 + 8);
  *v21 = *(_QWORD *)v20;
  v21[1] = v22;
  swift_retain();
  swift_release();
  v23 = (_QWORD *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
  v24 = (_QWORD *)((v20 + 23) & 0xFFFFFFFFFFFFFFF8);
  v25 = v24[1];
  *v23 = *v24;
  v23[1] = v25;
  swift_retain();
  swift_release();
  v26 = ((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8;
  v27 = ((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFFFF8;
  v28 = *(_QWORD *)(v27 + 8);
  *(_QWORD *)v26 = *(_QWORD *)v27;
  *(_QWORD *)(v26 + 8) = v28;
  swift_retain();
  swift_release();
  *(_BYTE *)(v26 + 16) = *(_BYTE *)(v27 + 16);
  v29 = ((unint64_t)v23 + 47) & 0xFFFFFFFFFFFFFFF8;
  v30 = ((unint64_t)v24 + 47) & 0xFFFFFFFFFFFFFFF8;
  v31 = *(_QWORD *)v30;
  LOBYTE(v26) = *(_BYTE *)(v30 + 8);
  j__swift_retain(*(_QWORD *)v30);
  v32 = *(_QWORD *)v29;
  v33 = *(unsigned __int8 *)(v29 + 8);
  *(_QWORD *)v29 = v31;
  *(_BYTE *)(v29 + 8) = v26;
  j__swift_release(v32, v33);
  v34 = ((unint64_t)v23 + 63) & 0xFFFFFFFFFFFFFFF8;
  v35 = ((unint64_t)v24 + 63) & 0xFFFFFFFFFFFFFFF8;
  v36 = *(_QWORD *)v35;
  v37 = *(_QWORD *)(v35 + 8);
  LOBYTE(v23) = *(_BYTE *)(v35 + 16);
  sub_20E3E2960(*(_QWORD *)v35, v37, (char)v23);
  v38 = *(_QWORD *)v34;
  v39 = *(_QWORD *)(v34 + 8);
  v40 = *(_BYTE *)(v34 + 16);
  *(_QWORD *)v34 = v36;
  *(_QWORD *)(v34 + 8) = v37;
  *(_BYTE *)(v34 + 16) = (_BYTE)v23;
  sub_20E3E2B4C(v38, v39, v40);
  return a1;
}

uint64_t sub_20E3F5EE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  char v5;
  unint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  _OWORD *v15;
  _OWORD *v16;
  _OWORD *v17;
  _OWORD *v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;

  v4 = *(unsigned __int8 *)(a2 + 24);
  if (v4 >= 2)
    v4 = *(_DWORD *)a2 + 2;
  if (v4 == 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    v5 = 1;
  }
  else
  {
    v5 = 0;
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  *(_BYTE *)(a1 + 24) = v5;
  v6 = a1 & 0xFFFFFFFFFFFFFFF8;
  v7 = *(_OWORD *)((a2 & 0xFFFFFFFFFFFFFFF8) + 32);
  *(_BYTE *)(v6 + 48) = *(_BYTE *)((a2 & 0xFFFFFFFFFFFFFFF8) + 48);
  *(_OWORD *)(v6 + 32) = v7;
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v9 + 49 + (a1 & 0xFFFFFFFFFFFFFFF8)) & ~v9;
  v11 = (v9 + 49 + (a2 & 0xFFFFFFFFFFFFFFF8)) & ~v9;
  (*(void (**)(unint64_t, unint64_t))(v8 + 32))(v10, v11);
  v12 = *(_QWORD *)(v8 + 64) + 7;
  v13 = (_QWORD *)((v12 + v10) & 0xFFFFFFFFFFFFFFF8);
  v14 = (_QWORD *)((v12 + v11) & 0xFFFFFFFFFFFFFFF8);
  *v13 = *v14;
  v15 = (_OWORD *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFF8);
  v16 = (_OWORD *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v15 = *v16;
  v17 = (_OWORD *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8);
  v18 = (_OWORD *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v17 = *v18;
  v19 = ((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8;
  v20 = ((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)v19 = *(_OWORD *)v20;
  *(_BYTE *)(v19 + 16) = *(_BYTE *)(v20 + 16);
  v21 = ((unint64_t)v17 + 47) & 0xFFFFFFFFFFFFFFF8;
  v22 = ((unint64_t)v18 + 47) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v19) = *(_BYTE *)(v22 + 8);
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *(_BYTE *)(v21 + 8) = v19;
  v23 = ((unint64_t)v17 + 63) & 0xFFFFFFFFFFFFFFF8;
  v24 = ((unint64_t)v18 + 63) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v21) = *(_BYTE *)(v24 + 16);
  *(_OWORD *)v23 = *(_OWORD *)v24;
  *(_BYTE *)(v23 + 16) = v21;
  return a1;
}

uint64_t sub_20E3F6034(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v6;
  unsigned int v7;
  char v8;
  unint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  _OWORD *v19;
  _OWORD *v20;
  _OWORD *v21;
  _OWORD *v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char v34;

  if (a1 != a2)
  {
    v6 = *(unsigned __int8 *)(a1 + 24);
    if (v6 >= 2)
      v6 = *(_DWORD *)a1 + 2;
    if (v6 == 1)
      swift_release();
    swift_release();
    v7 = *(unsigned __int8 *)(a2 + 24);
    if (v7 >= 2)
      v7 = *(_DWORD *)a2 + 2;
    if (v7 == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      v8 = 1;
    }
    else
    {
      v8 = 0;
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    *(_BYTE *)(a1 + 24) = v8;
  }
  v9 = a1 & 0xFFFFFFFFFFFFFFF8;
  v10 = a2 & 0xFFFFFFFFFFFFFFF8;
  v11 = *(_BYTE *)(v10 + 48);
  *(_OWORD *)(v9 + 32) = *(_OWORD *)(v10 + 32);
  *(_BYTE *)(v9 + 48) = v11;
  sub_20E39CED0();
  v12 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = (v13 + 49 + (a1 & 0xFFFFFFFFFFFFFFF8)) & ~v13;
  v15 = (v13 + 49 + v10) & ~v13;
  (*(void (**)(unint64_t, uint64_t))(v12 + 40))(v14, v15);
  v16 = *(_QWORD *)(v12 + 64) + 7;
  v17 = (_QWORD *)((v16 + v14) & 0xFFFFFFFFFFFFFFF8);
  v18 = (_QWORD *)((v16 + v15) & 0xFFFFFFFFFFFFFFF8);
  *v17 = *v18;
  swift_release();
  v19 = (_OWORD *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8);
  v20 = (_OWORD *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFF8);
  *v19 = *v20;
  swift_release();
  v21 = (_OWORD *)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8);
  v22 = (_OWORD *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v21 = *v22;
  swift_release();
  v23 = ((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8;
  v24 = ((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)v23 = *(_OWORD *)v24;
  swift_release();
  *(_BYTE *)(v23 + 16) = *(_BYTE *)(v24 + 16);
  v25 = ((unint64_t)v21 + 47) & 0xFFFFFFFFFFFFFFF8;
  v26 = ((unint64_t)v22 + 47) & 0xFFFFFFFFFFFFFFF8;
  v27 = *(_QWORD *)v26;
  LOBYTE(v26) = *(_BYTE *)(v26 + 8);
  v28 = *(_QWORD *)v25;
  v29 = *(unsigned __int8 *)(v25 + 8);
  *(_QWORD *)v25 = v27;
  *(_BYTE *)(v25 + 8) = v26;
  j__swift_release(v28, v29);
  v30 = ((unint64_t)v21 + 63) & 0xFFFFFFFFFFFFFFF8;
  v31 = *(_BYTE *)((((unint64_t)v22 + 63) & 0xFFFFFFFFFFFFFFF8) + 16);
  v32 = *(_QWORD *)v30;
  v33 = *(_QWORD *)(v30 + 8);
  v34 = *(_BYTE *)(v30 + 16);
  *(_OWORD *)v30 = *(_OWORD *)(((unint64_t)v22 + 63) & 0xFFFFFFFFFFFFFFF8);
  *(_BYTE *)(v30 + 16) = v31;
  sub_20E3E2B4C(v32, v33, v34);
  return a1;
}

uint64_t sub_20E3F6214(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  unint64_t v15;
  unint64_t v16;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = *(_QWORD *)(v4 + 64) + 7;
  if (v6 >= a2)
  {
    v15 = ((a1 & 0xFFFFFFFFFFFFFFF8) + v7 + 49) & ~v7;
    if (v5 < 0x7FFFFFFF)
    {
      v16 = *(_QWORD *)((((v8 + v15) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8);
      if (v16 >= 0xFFFFFFFF)
        LODWORD(v16) = -1;
      return (v16 + 1);
    }
    else
    {
      return (*(uint64_t (**)(unint64_t))(v4 + 48))(v15);
    }
  }
  else
  {
    v9 = ((((((((v8 + ((v7 + 49) & ~(_DWORD)v7)) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 63) & 0xFFFFFFF8)
       + 17;
    v10 = (a2 - v6 + 255) >> (8 * v9);
    if (v9 < 4)
      v11 = v10 + 1;
    else
      v11 = 2;
    if (v11 >= 0x10000)
      v12 = 4;
    else
      v12 = 2;
    if (v11 < 0x100)
      v12 = 1;
    if (v11 >= 2)
      v13 = v12;
    else
      v13 = 0;
    return ((uint64_t (*)(void))((char *)&loc_20E3F62C4 + 4 * byte_20E4AA170[v13]))();
  }
}

void sub_20E3F6370(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((((((((*(_QWORD *)(v5 + 64)
             + 7
             + ((*(unsigned __int8 *)(v5 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))) & 0xFFFFFFFFFFFFFFF8)
           + 15) & 0xFFFFFFFFFFFFFFF8)
         + 23) & 0xFFFFFFFFFFFFFFF8)
       + 63) & 0xFFFFFFFFFFFFFFF8)
     + 17;
  if (v6 >= a3)
  {
    v10 = 0;
    if (v6 >= a2)
      goto LABEL_17;
  }
  else
  {
    if (v7 <= 3)
      v8 = ((a3 - v6 + 255) >> (8 * v7)) + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    if (v6 >= a2)
LABEL_17:
      __asm { BR              X14 }
  }
  if (v7 >= 4)
    v11 = ~v6 + a2;
  else
    v11 = (~(_BYTE)v6 + a2);
  bzero(a1, v7);
  if ((_DWORD)v7 == 1)
    *a1 = v11;
  else
    *(_DWORD *)a1 = v11;
  __asm { BR              X10 }
}

void sub_20E3F64B8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x20E3F6540);
}

void sub_20E3F64C0(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x20E3F64C8);
  JUMPOUT(0x20E3F6540);
}

void sub_20E3F6518()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x20E3F6540);
}

void sub_20E3F6520()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x20E3F6540);
}

uint64_t sub_20E3F6528@<X0>(int a1@<W1>, unsigned int a2@<W2>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_WORD *)(v6 + v7) = 0;
  if (!a1)
    JUMPOUT(0x20E3F6540);
  if (a2 < 0x7FFFFFFF)
  {
    if ((a1 & 0x80000000) == 0)
      JUMPOUT(0x20E3F653CLL);
    JUMPOUT(0x20E3F6534);
  }
  return (*(uint64_t (**)(unint64_t))(v4 + 56))(((v6 & 0xFFFFFFFFFFFFFFF8) + v5 + 49) & a3);
}

uint64_t sub_20E3F6558()
{
  uint64_t result;
  unint64_t v1;

  swift_getAssociatedTypeWitness();
  sub_20E4A596C();
  sub_20E4A60E0();
  result = sub_20E4A35E4();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for IntentViewConfiguration()
{
  return &type metadata for IntentViewConfiguration;
}

uint64_t _s18_JetEngine_SwiftUI23IntentViewConfigurationV12RefreshStyleOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_20E3F6678 + 4 * byte_20E4AA184[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_20E3F66AC + 4 * byte_20E4AA17F[v4]))();
}

uint64_t sub_20E3F66AC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20E3F66B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20E3F66BCLL);
  return result;
}

uint64_t sub_20E3F66C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20E3F66D0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_20E3F66D4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20E3F66DC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IntentViewConfiguration.RefreshStyle()
{
  return &type metadata for IntentViewConfiguration.RefreshStyle;
}

void sub_20E3F66F8()
{
  swift_getAssociatedTypeWitness();
  type metadata accessor for IntentView();
}

void sub_20E3F6768(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v19 = sub_20E4A4BBC();
  a14 = MEMORY[0x24BEE4578];
  v20 = MEMORY[0x212BBDF90](MEMORY[0x24BE5CAA8], v19, &a14);
  a16 = v19;
  a18 = v20;
  v21 = sub_20E4A46DC();
  v22 = MEMORY[0x212BBDF90](MEMORY[0x24BDF44C8], v21);
  a16 = v21;
  a19 = v22;
  type metadata accessor for _ResultView();
}

void sub_20E3F67E4()
{
  type metadata accessor for IntentView.RequestID();
}

uint64_t sub_20E3F6804(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[2];
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v5 = MEMORY[0x212BBDF90](&unk_20E4AF6E0, v3);
  v6 = MEMORY[0x212BBDF90](&unk_20E4AA410, a1);
  v15 = v3;
  v16 = a1;
  v17 = v5;
  v18 = v6;
  MEMORY[0x212BBDF30](255, &v15, MEMORY[0x24BDF3908], 0);
  v7 = sub_20E4A39D4();
  type metadata accessor for _IntentProgress(255, v1, v2, v8);
  swift_getFunctionTypeMetadata1();
  sub_20E4A60E0();
  v9 = sub_20E4A3FF8();
  v10 = sub_20E4A39D4();
  v15 = v3;
  v16 = a1;
  v17 = v5;
  v18 = v6;
  v14[0] = swift_getOpaqueTypeConformance2();
  v14[1] = MEMORY[0x24BDF0910];
  v11 = MEMORY[0x24BDED308];
  v13[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v7, v14);
  v13[1] = MEMORY[0x212BBDF90](MEMORY[0x24BDF1028], v9);
  return MEMORY[0x212BBDF90](v11, v10, v13);
}

uint64_t sub_20E3F694C()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_20E3F6954()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_20E3F69D0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if (v5 > 7
    || (*(_DWORD *)(v4 + 80) & 0x100000) != 0
    || ((v5 + 8) & (unint64_t)~v5) + *(_QWORD *)(v4 + 64) > 0x18)
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v8 + ((v5 & 0xF8 ^ 0x1F8) & (v5 + 16)));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    (*(void (**)(unint64_t, unint64_t))(v4 + 16))(((unint64_t)a1 + v5 + 8) & ~v5, ((unint64_t)a2 + v5 + 8) & ~v5);
  }
  return v3;
}

uint64_t sub_20E3F6A74(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

_QWORD *sub_20E3F6A94(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 16))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

_QWORD *sub_20E3F6AE4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

_QWORD *sub_20E3F6B34(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

_QWORD *sub_20E3F6B84(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

uint64_t sub_20E3F6BD4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(unsigned __int8 *)(v4 + 80);
  v7 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v8 = ((v6 + 8) & ~v6) + *(_QWORD *)(v4 + 64);
  v9 = 8 * v8;
  if (v8 <= 3)
  {
    v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      v10 = *(_DWORD *)(a1 + v8);
      if (!v10)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      v10 = *(unsigned __int16 *)(a1 + v8);
      if (!*(_WORD *)(a1 + v8))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(uint64_t))(v4 + 48))((a1 + v6 + 8) & ~v6);
      return 0;
    }
  }
  v10 = *(unsigned __int8 *)(a1 + v8);
  if (!*(_BYTE *)(a1 + v8))
    goto LABEL_18;
LABEL_11:
  v12 = (v10 - 1) << v9;
  if (v8 > 3)
    v12 = 0;
  if (!(_DWORD)v8)
    return v5 + v12 + 1;
  if (v8 > 3)
    LODWORD(v8) = 4;
  return ((uint64_t (*)(void))((char *)&loc_20E3F6C94 + 4 * byte_20E4AA189[(v8 - 1)]))();
}

void sub_20E3F6CF4(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  size_t v9;
  BOOL v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(unsigned __int8 *)(v6 + 80);
  v9 = ((v8 + 8) & ~v8) + *(_QWORD *)(v6 + 64);
  v10 = a3 >= v7;
  v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v9 <= 3)
    {
      v14 = ((v11 + ~(-1 << (8 * v9))) >> (8 * v9)) + 1;
      if (HIWORD(v14))
      {
        v12 = 4u;
      }
      else if (v14 >= 0x100)
      {
        v12 = 2;
      }
      else
      {
        v12 = v14 > 1;
      }
    }
    else
    {
      v12 = 1u;
    }
  }
  else
  {
    v12 = 0;
  }
  if (v7 < a2)
  {
    v13 = ~v7 + a2;
    if (v9 < 4)
    {
      if ((_DWORD)v9)
      {
        v15 = v13 & ~(-1 << (8 * v9));
        bzero(a1, v9);
        if ((_DWORD)v9 == 3)
        {
          *a1 = v15;
          *((_BYTE *)a1 + 2) = BYTE2(v15);
        }
        else if ((_DWORD)v9 == 2)
        {
          *a1 = v15;
        }
        else
        {
          *(_BYTE *)a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, ((v8 + 8) & ~v8) + *(_QWORD *)(v6 + 64));
      *(_DWORD *)a1 = v13;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

uint64_t sub_20E3F6EC0(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v5 = (uint64_t (*)(void))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v3;
  *v3 = v2;
  v3[1] = sub_20E3B50B0;
  return v5();
}

uint64_t sub_20E3F6F20(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v17 = a1;
  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 112);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  swift_getAssociatedTypeWitness();
  sub_20E4A596C();
  v16 = sub_20E4A60E0();
  v5 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v7 = (char *)&KeyPath - v6;
  v8 = v2[11];
  v9 = v2[12];
  v26 = v4;
  v27 = v8;
  v10 = v2[13];
  v28 = v9;
  v29 = v10;
  v11 = v2[15];
  v12 = v2[16];
  v30 = v3;
  v31 = v11;
  v13 = v2[17];
  v32 = v12;
  v33 = v13;
  KeyPath = swift_getKeyPath();
  v18 = v4;
  v19 = v8;
  v20 = v9;
  v21 = v10;
  v22 = v3;
  v23 = v11;
  v24 = v12;
  v25 = v13;
  swift_getKeyPath();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v17, v16);
  swift_retain();
  return sub_20E4A35D8();
}

uint64_t sub_20E3F7078()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_20E3F709C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  if (*(_QWORD *)(v0 + 104))
    swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + ((v3 + 128) & ~v3), v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E3F7144(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;

  v3 = v1[3];
  v11 = v1[2];
  v4 = v1[12];
  v5 = v1[13];
  v6 = v1[14];
  v7 = v1[15];
  v8 = (uint64_t)v1
     + ((*(unsigned __int8 *)(*(_QWORD *)(v1[4] - 8) + 80) + 128) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1[4] - 8) + 80));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_20E3B4E08;
  return sub_20E3F03A8(a1, v11, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_20E3F7244(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A190F8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *sub_20E3F7284(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t, uint64_t, double);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;

  v22 = a2;
  v21 = a1;
  v3 = *v2;
  v19 = *(_QWORD *)(*v2 + 112);
  v17 = *(_QWORD *)(v3 + 80);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = sub_20E4A596C();
  v20 = sub_20E4A60E0();
  v6 = sub_20E4A35E4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v17 - v8;
  v18 = *(_QWORD *)(v20 - 8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v17 - v12;
  v2[2] = 0;
  *((_BYTE *)v2 + 24) = 0;
  v14 = (uint64_t)v2 + *(_QWORD *)(v3 + 160);
  v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(*(_QWORD *)(v5 - 8) + 56);
  v15((char *)&v17 - v12, 1, 1, v5, v11);
  sub_20E3EFDA4((uint64_t)v13);
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v14, v9, v6);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(v13, v21, AssociatedTypeWitness);
  swift_storeEnumTagMultiPayload();
  ((void (*)(char *, _QWORD, uint64_t, uint64_t))v15)(v13, 0, 1, v5);
  sub_20E3F6F20((uint64_t)v13);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v13, v20);
  *((_BYTE *)v2 + 24) = v22;
  return v2;
}

uint64_t sub_20E3F7454@<X0>(BOOL *a1@<X8>)
{
  uint64_t v1;

  return sub_20E3F1214(*(void **)(v1 + 88), a1);
}

uint64_t sub_20E3F7488@<X0>(BOOL *a1@<X8>)
{
  uint64_t v1;

  return sub_20E3F10BC(*(_QWORD *)(v1 + 88), a1);
}

uint64_t sub_20E3F74BC()
{
  swift_release();
  return swift_deallocObject();
}

void sub_20E3F74E0()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_20E3B50B0;
  __asm { BR              X8; sub_20E3F6EC0 }
}

void objectdestroy_27Tm()
{
  type metadata accessor for IntentView();
}

uint64_t sub_20E3F75E0(int *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v3 = *(unsigned __int8 *)(*((_QWORD *)a1 - 1) + 80);
  v4 = v1 + ((v3 + 80) & ~v3);
  sub_20E3F2E6C(*(_QWORD *)v4, *(_QWORD *)(v4 + 8), *(_QWORD *)(v4 + 16), *(_BYTE *)(v4 + 24));
  sub_20E39CED0();
  (*(void (**)(uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4 + a1[22]);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  j__swift_release(*(_QWORD *)(v4 + a1[28]), *(unsigned __int8 *)(v4 + a1[28] + 8));
  sub_20E3E2B4C(*(_QWORD *)(v4 + a1[29]), *(_QWORD *)(v4 + a1[29] + 8), *(_BYTE *)(v4 + a1[29] + 16));
  return swift_deallocObject();
}

void sub_20E3F76C8()
{
  type metadata accessor for IntentView();
}

uint64_t sub_20E3F7714(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  return sub_20E3F31EC(v1 + ((v2 + 80) & ~v2));
}

unint64_t sub_20E3F776C()
{
  unint64_t result;

  result = qword_254A19D48[0];
  if (!qword_254A19D48[0])
  {
    result = MEMORY[0x212BBDF90](&unk_20E4B0148, &type metadata for IntentDispatchActionKey);
    atomic_store(result, qword_254A19D48);
  }
  return result;
}

uint64_t sub_20E3F77B0()
{
  unsigned __int8 v1;

  sub_20E3B21F8();
  sub_20E4A3C08();
  return v1;
}

uint64_t View._shelfGridPrefersEagerLayout(_:)()
{
  swift_getKeyPath();
  sub_20E4A4250();
  return swift_release();
}

uint64_t sub_20E3F7860(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A18588);
  v2 = sub_20E4A39D4();
  v4[0] = v1;
  v4[1] = sub_20E3F78C0();
  return MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v2, v4);
}

unint64_t sub_20E3F78C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254A18590;
  if (!qword_254A18590)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A18588);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDF1028], v1);
    atomic_store(result, (unint64_t *)&qword_254A18590);
  }
  return result;
}

ValueMetadata *type metadata accessor for _ShelfGridPrefersEagerLayoutKey()
{
  return &type metadata for _ShelfGridPrefersEagerLayoutKey;
}

uint64_t sub_20E3F791C()
{
  return sub_20E4A389C();
}

uint64_t FlowActionImplementation.init(following:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X3>, uint64_t a3@<X4>, _QWORD *a4@<X8>)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  type metadata accessor for FlowAuthority(255, a1, a2, a3);
  v5 = sub_20E4A4778();
  MEMORY[0x212BBBCE0](&v7, v5);
  swift_release();
  swift_release();
  result = swift_release();
  *a4 = v7;
  return result;
}

uint64_t FlowActionImplementation.perform(_:asPartOf:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20E3F88BC(a1, a3);
}

uint64_t sub_20E3F79BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v7[25] = a6;
  v7[26] = a7;
  v7[23] = a3;
  v7[24] = a4;
  v7[21] = a1;
  v7[22] = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7[27] = AssociatedTypeWitness;
  v7[28] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v7[29] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED2428);
  v7[30] = swift_task_alloc();
  v9 = sub_20E4A33B0();
  v7[31] = v9;
  v7[32] = *(_QWORD *)(v9 - 8);
  v7[33] = swift_task_alloc();
  v7[34] = type metadata accessor for FlowAlertAuthority.Presented(0);
  v7[35] = swift_task_alloc();
  v7[36] = swift_task_alloc();
  v7[37] = swift_task_alloc();
  v10 = sub_20E4A5A8C();
  v7[38] = v10;
  v7[39] = *(_QWORD *)(v10 - 8);
  v7[40] = swift_task_alloc();
  v11 = sub_20E4A392C();
  v7[41] = v11;
  v7[42] = *(_QWORD *)(v11 - 8);
  v7[43] = swift_task_alloc();
  sub_20E4A5DF8();
  v7[44] = sub_20E4A5DEC();
  sub_20E4A5DBC();
  return swift_task_switch();
}

uint64_t sub_20E3F7B50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int EnumCaseMultiPayload;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t, uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  char v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;

  swift_release();
  v1 = sub_20E4A4F58();
  v3 = v2;
  if (sub_20E4A54BC() == v1 && v4 == v3)
  {
    swift_bridgeObjectRelease();
LABEL_10:
    v9 = *(_QWORD *)(v0 + 336);
    v8 = *(_QWORD *)(v0 + 344);
    v75 = *(_QWORD *)(v0 + 328);
    v11 = *(_QWORD *)(v0 + 200);
    v10 = *(_QWORD *)(v0 + 208);
    v12 = *(_QWORD *)(v0 + 192);
    swift_bridgeObjectRelease();
    v74 = type metadata accessor for FlowAuthority(0, v12, v11, v10);
    v13 = sub_20E441280(v74) + qword_254A246A0;
    swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v8, v13, v75);
    swift_release();
    *(_QWORD *)(v0 + 136) = 0;
    *(_OWORD *)(v0 + 104) = 0u;
    *(_OWORD *)(v0 + 120) = 0u;
    *(_QWORD *)(v0 + 32) = v12;
    *(_QWORD *)(v0 + 40) = v11;
    *(_QWORD *)(v0 + 48) = v10;
    *(_QWORD *)(v0 + 56) = v0 + 104;
    sub_20E4A38F0();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v75);
    if (*(_QWORD *)(v0 + 128))
    {
      sub_20E3B1AB4((__int128 *)(v0 + 104), v0 + 64);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 88));
      v14 = sub_20E4A56F0();
      __swift_destroy_boxed_opaque_existential_1(v0 + 64);
      if ((v14 & 1) == 0)
        goto LABEL_15;
    }
    else
    {
      sub_20E39D1F8(v0 + 104, &qword_254A19DF8);
    }
    v15 = *(_QWORD *)(v0 + 176);
    sub_20E441280(v74);
    sub_20E49850C(v15);
    swift_release();
LABEL_15:
    v16 = *(_QWORD *)(v0 + 168);
    v17 = (unsigned int *)MEMORY[0x24BE5CBF0];
    goto LABEL_16;
  }
  v6 = sub_20E4A635C();
  swift_bridgeObjectRelease();
  if ((v6 & 1) != 0)
    goto LABEL_10;
  if (sub_20E4A548C() == v1 && v7 == v3)
  {
    swift_bridgeObjectRelease();
LABEL_18:
    v22 = *(_QWORD *)(v0 + 312);
    v21 = *(_QWORD *)(v0 + 320);
    v23 = *(_QWORD *)(v0 + 304);
    swift_bridgeObjectRelease();
    sub_20E4A5A08();
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0D58);
    sub_20E4A4ACC();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_20E4A8070;
    sub_20E4A4A30();
    sub_20E4A4A30();
    sub_20E4A5768();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
LABEL_19:
    v24 = *(_QWORD *)(v0 + 288);
    v25 = *(_QWORD *)(v0 + 296);
    v26 = type metadata accessor for FlowAuthority(0, *(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 208));
    sub_20E441280(v26);
    sub_20E498888();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    sub_20E4A35CC();
    swift_release();
    swift_release();
    sub_20E3F8C2C(v25, v24);
    if (swift_getEnumCaseMultiPayload())
    {
      v27 = *(_QWORD *)(v0 + 296);
      sub_20E3F8C70(*(_QWORD *)(v0 + 288));
      sub_20E3F8C70(v27);
      swift_release();
      sub_20E441280(v26);
      sub_20E498888();
      swift_release();
      swift_getKeyPath();
      swift_getKeyPath();
      sub_20E4A35CC();
      swift_release();
      swift_release();
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v29 = *(_QWORD *)(v0 + 280);
      if (EnumCaseMultiPayload == 1)
      {
        v30 = *(_QWORD *)(v0 + 248);
        v31 = *(_QWORD *)(v0 + 256);
        v32 = *(_QWORD *)(v0 + 240);
        v33 = v29 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254A19DE8) + 48);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 32))(v32, v29, v30);
        v34 = sub_20E4A5840();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v33, v34);
        v35 = 0;
      }
      else
      {
        sub_20E3F8C70(*(_QWORD *)(v0 + 280));
        v35 = 1;
      }
      v43 = *(_QWORD *)(v0 + 248);
      v44 = *(_QWORD *)(v0 + 256);
      v45 = *(_QWORD *)(v0 + 240);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v44 + 56))(v45, v35, 1, v43);
      swift_release();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v45, 1, v43) == 1)
      {
        sub_20E39D1F8(*(_QWORD *)(v0 + 240), &qword_253ED2428);
      }
      else
      {
        v46 = *(_QWORD *)(v0 + 320);
        v47 = *(_QWORD *)(v0 + 304);
        v49 = *(_QWORD *)(v0 + 256);
        v48 = *(_QWORD *)(v0 + 264);
        v50 = *(_QWORD *)(v0 + 248);
        v76 = *(_QWORD *)(v0 + 312);
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v49 + 32))(v48, *(_QWORD *)(v0 + 240), v50);
        sub_20E4A5A08();
        __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0D58);
        sub_20E4A4ACC();
        *(_OWORD *)(swift_allocObject() + 16) = xmmword_20E4A8070;
        sub_20E4A4A30();
        sub_20E4A4A30();
        sub_20E4A5768();
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v46, v47);
        sub_20E441280(v26);
        sub_20E498888();
        swift_release();
        sub_20E405A7C(v48);
        swift_release();
        (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v48, v50);
      }
    }
    else
    {
      v37 = *(_QWORD *)(v0 + 312);
      v36 = *(_QWORD *)(v0 + 320);
      v39 = *(_QWORD *)(v0 + 296);
      v38 = *(_QWORD *)(v0 + 304);
      v40 = *(_QWORD *)(v0 + 288);
      v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19DF0);
      sub_20E39D1F8(v40 + *(int *)(v41 + 48), &qword_253ED0658);
      v42 = sub_20E4A581C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 8))(v40, v42);
      sub_20E3F8C70(v39);
      swift_release();
      sub_20E4A5A08();
      __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0D58);
      sub_20E4A4ACC();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_20E4A8070;
      sub_20E4A4A30();
      sub_20E4A4A30();
      sub_20E4A5768();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v36, v38);
      sub_20E441280(v26);
      sub_20E498888();
      swift_release();
      sub_20E4058E4();
      swift_release();
    }
    v51 = *(_QWORD *)(v0 + 176);
    v52 = *(_QWORD *)(v0 + 168);
    sub_20E441298(v26);
    sub_20E440848(v51);
    swift_release();
    v53 = *MEMORY[0x24BE5CBF0];
    v54 = sub_20E4A4CB8();
    v55 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 104);
    v56 = v52;
    v57 = v53;
    goto LABEL_28;
  }
  v20 = sub_20E4A635C();
  swift_bridgeObjectRelease();
  if ((v20 & 1) != 0)
    goto LABEL_18;
  if (sub_20E4A5498() == v1 && v59 == v3)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_19;
  }
  v60 = sub_20E4A635C();
  swift_bridgeObjectRelease();
  if ((v60 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  if (sub_20E4A54C8() == v1 && v61 == v3)
  {
    swift_bridgeObjectRelease();
LABEL_39:
    v64 = *(_QWORD *)(v0 + 224);
    v63 = *(_QWORD *)(v0 + 232);
    v65 = *(_QWORD *)(v0 + 216);
    swift_bridgeObjectRelease();
    sub_20E4A61B8();
    v66 = sub_20E49D390(v63);
    (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v63, v65);
    goto LABEL_46;
  }
  v62 = sub_20E4A635C();
  swift_bridgeObjectRelease();
  if ((v62 & 1) != 0)
    goto LABEL_39;
  if (sub_20E4A54A4() == v1 && v67 == v3)
  {
    swift_bridgeObjectRelease();
LABEL_44:
    v69 = *(_QWORD *)(v0 + 176);
    swift_bridgeObjectRelease();
    v70 = v69;
    v71 = 0;
LABEL_45:
    v66 = sub_20E49D4E0(v70, v71);
LABEL_46:
    v54 = sub_20E4A4CB8();
    v55 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 104);
    v56 = *(_QWORD *)(v0 + 168);
    if ((v66 & 1) != 0)
      v57 = *MEMORY[0x24BE5CBF0];
    else
      v57 = *MEMORY[0x24BE5CBE0];
LABEL_28:
    v55(v56, v57, v54);
    goto LABEL_29;
  }
  v68 = sub_20E4A635C();
  swift_bridgeObjectRelease();
  if ((v68 & 1) != 0)
    goto LABEL_44;
  if (sub_20E4A54B0() == v1 && v72 == v3)
  {
    swift_bridgeObjectRelease_n();
LABEL_53:
    v70 = *(_QWORD *)(v0 + 176);
    v71 = 1;
    goto LABEL_45;
  }
  v73 = sub_20E4A635C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v73 & 1) != 0)
    goto LABEL_53;
  v16 = *(_QWORD *)(v0 + 168);
  v17 = (unsigned int *)MEMORY[0x24BE5CBE0];
LABEL_16:
  v18 = *v17;
  v19 = sub_20E4A4CB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v16, v18, v19);
LABEL_29:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20E3F85F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20E3F88BC(a1, a3);
}

uint64_t sub_20E3F85FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t result;
  uint64_t v18;
  BOOL v19;
  char v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _OWORD v30[2];
  uint64_t v31;
  uint64_t v32;

  v29 = a2;
  v5 = type metadata accessor for FlowStackAuthority.PathComponent(255, a3, a4, a5);
  v6 = sub_20E4A60E0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v26 - v8;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = sub_20E4A60E0();
  v27 = *(_QWORD *)(v11 - 8);
  v28 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v26 - v15;
  sub_20E4A38D8();
  sub_20E3F8CB8();
  sub_20E4A5F3C();
  result = sub_20E4A5F60();
  if (*(_QWORD *)&v30[0] != v32)
  {
    v18 = MEMORY[0x212BBAE88](result);
    v19 = __OFSUB__(v18, 1);
    result = v18 - 1;
    if (v19)
    {
      __break(1u);
      return result;
    }
    sub_20E4A38E4();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254A19E08);
    v20 = swift_dynamicCast();
    v21 = *(_QWORD *)(v5 - 8);
    v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
    if ((v20 & 1) != 0)
    {
      v22(v9, 0, 1, v5);
      v23 = *(_QWORD *)(AssociatedTypeWitness - 8);
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v16, &v9[*(int *)(v5 + 44)], AssociatedTypeWitness);
      (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v5);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v16, 0, 1, AssociatedTypeWitness);
    }
    else
    {
      v22(v9, 1, 1, v5);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      v23 = *(_QWORD *)(AssociatedTypeWitness - 8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v16, 1, 1, AssociatedTypeWitness);
    }
    v25 = v27;
    v24 = v28;
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v13, v16, v28);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v13, 1, AssociatedTypeWitness) == 1)
    {
      (*(void (**)(char *, uint64_t))(v25 + 8))(v13, v24);
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_254A19E10);
      if ((swift_dynamicCast() & 1) != 0)
        return sub_20E3F8D00((uint64_t)v30, v29);
    }
    v31 = 0;
    memset(v30, 0, sizeof(v30));
    return sub_20E3F8D00((uint64_t)v30, v29);
  }
  return result;
}

uint64_t sub_20E3F88BC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v21;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A190F8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v13 = *v2;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v9 + 16))((char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8, v12);
  v14 = (*(unsigned __int8 *)(v9 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v8;
  *(_OWORD *)(v15 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(v15 + 40) = *(_QWORD *)(a2 + 40);
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v15 + v14, (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  *(_QWORD *)(v15 + ((v10 + v14 + 7) & 0xFFFFFFFFFFFFFFF8)) = v13;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = aD;
  *(_QWORD *)(v16 + 24) = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A19610);
  swift_retain();
  v17 = sub_20E4A59A8();
  v18 = sub_20E4A5E58();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v7, 1, 1, v18);
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = 0;
  v19[3] = 0;
  v19[4] = &unk_254A19608;
  v19[5] = v16;
  v19[6] = v17;
  swift_retain();
  sub_20E474E94((uint64_t)v7, (uint64_t)&unk_254A19618, (uint64_t)v19);
  swift_release();
  return v17;
}

uint64_t sub_20E3F8A98(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(*(_QWORD *)(a2 + 32) + 8);
}

void type metadata accessor for FlowActionImplementation()
{
  JUMPOUT(0x212BBDEE8);
}

uint64_t sub_20E3F8AB0()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E3F8B1C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = *(_QWORD *)(v4 - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = (uint64_t)v1 + v9;
  v11 = *(_QWORD *)((char *)v1 + ((*(_QWORD *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFF8));
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_20E3B4E08;
  return sub_20E3F79BC(a1, v10, v11, v4, v5, v6, v7);
}

uint64_t sub_20E3F8BCC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E3F8BF0()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E3F8C2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FlowAlertAuthority.Presented(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20E3F8C70(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FlowAlertAuthority.Presented(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20E3F8CAC(uint64_t a1)
{
  uint64_t *v1;

  return sub_20E3F85FC(a1, v1[5], v1[2], v1[3], v1[4]);
}

unint64_t sub_20E3F8CB8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254A19E00;
  if (!qword_254A19E00)
  {
    v1 = sub_20E4A38D8();
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDEC918], v1);
    atomic_store(result, (unint64_t *)&qword_254A19E00);
  }
  return result;
}

uint64_t sub_20E3F8D00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19DF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

BOOL static TaskUpdate.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

void TaskUpdate.init()(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

Swift::Void __swiftcall TaskUpdate.callAsFunction()()
{
  _QWORD *v0;

  ++*v0;
}

uint64_t (*_taskRetry(for:)(void *a1))()
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v8;
  __int128 v9[2];
  uint64_t v10;
  void *v11;
  _QWORD v12[4];

  v11 = a1;
  v2 = a1;
  __swift_instantiateConcreteTypeFromMangledName(qword_253ED2880);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A19E18);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_20E3B1AB4(v9, (uint64_t)v12);
    __swift_project_boxed_opaque_existential_1(v12, v12[3]);
    v3 = *(_QWORD *)(sub_20E4A3290() + 16);
    v4 = swift_bridgeObjectRelease();
    if (v3)
    {
      MEMORY[0x24BDAC7A8](v4);
      MEMORY[0x24BDAC7A8](v5);
      sub_20E4A59B4();
      sub_20E3C39FC((uint64_t)v12, (uint64_t)v9);
      v6 = swift_allocObject();
      sub_20E3B1AB4(v9, v6 + 16);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
      return sub_20E3F91E4;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  }
  else
  {
    v10 = 0;
    memset(v9, 0, sizeof(v9));
    sub_20E3F8F28((uint64_t)v9);
  }
  *(_QWORD *)(swift_allocObject() + 16) = a1;
  v8 = a1;
  return sub_20E3F8F8C;
}

uint64_t sub_20E3F8F28(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19E20);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20E3F8F68()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_20E3F8F8C()
{
  return sub_20E4A5228();
}

uint64_t sub_20E3F8FD0()
{
  sub_20E4A61A0();
  sub_20E4A5C6C();
  swift_getErrorValue();
  swift_getDynamicType();
  sub_20E4A6458();
  sub_20E4A5C6C();
  swift_bridgeObjectRelease();
  sub_20E4A5C6C();
  return 0;
}

BOOL sub_20E3F907C(_QWORD *a1)
{
  uint64_t v1;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v1 = *(_QWORD *)(sub_20E4A3290() + 16);
  swift_bridgeObjectRelease();
  return v1 == 1;
}

BOOL sub_20E3F90C8()
{
  uint64_t v0;

  return sub_20E3F907C(*(_QWORD **)(v0 + 16));
}

uint64_t sub_20E3F90D0()
{
  uint64_t v0;

  return sub_20E3F91EC(*(_QWORD **)(v0 + 16));
}

uint64_t sub_20E3F9108(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  __int128 v4[2];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  result = sub_20E4A3284();
  if ((result & 1) == 0)
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_20E3C39FC((uint64_t)a1, (uint64_t)v4);
    v3 = swift_allocObject();
    sub_20E3B1AB4(v4, v3 + 16);
    sub_20E4A3278();
    return swift_release();
  }
  return result;
}

uint64_t sub_20E3F91C0()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_20E3F91E4()
{
  uint64_t v0;

  return sub_20E3F9108((_QWORD *)(v0 + 16));
}

uint64_t sub_20E3F91EC(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  _QWORD v14[2];

  v14[0] = 0;
  v14[1] = 0xE000000000000000;
  sub_20E4A61A0();
  sub_20E4A5C6C();
  v2 = a1[3];
  v3 = __swift_project_boxed_opaque_existential_1(a1, v2);
  v4 = *(_QWORD *)(v2 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v4 + 16))(v7, v5);
  v8 = sub_20E4A6338();
  if (v8)
  {
    v9 = (void *)v8;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v2);
  }
  else
  {
    v9 = (void *)swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v10, v7, v2);
  }
  v11 = (void *)sub_20E4A32D8();

  v12 = (id)AMSLogableError();
  sub_20E4A5C3C();

  sub_20E4A5C6C();
  swift_bridgeObjectRelease();
  sub_20E4A5C6C();
  return v14[0];
}

ValueMetadata *type metadata accessor for TaskUpdate()
{
  return &type metadata for TaskUpdate;
}

uint64_t sub_20E3F9378()
{
  return sub_20E4A59B4();
}

uint64_t sub_20E3F93CC()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_20E3F93D4()
{
  uint64_t v0;

  return sub_20E3F91EC(*(_QWORD **)(v0 + 16));
}

uint64_t sub_20E3F940C()
{
  return sub_20E3F8FD0();
}

uint64_t sub_20E3F9418()
{
  uint64_t v1;

  sub_20E3E84C0();
  sub_20E4A3C08();
  return v1;
}

uint64_t View.mediaArtworkProtocol<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  void (*v23)(char *, uint64_t);
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[2];

  v27 = a5;
  v26 = a4;
  v29 = a6;
  v9 = *(_QWORD *)(a3 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](a1);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19A50);
  v11 = sub_20E4A39D4();
  v28 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v25 = (_QWORD **)((char *)&v25 - v15);
  swift_getKeyPath();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a3);
  v16 = (*(unsigned __int8 *)(v9 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v17 = (char *)swift_allocObject();
  *((_QWORD *)v17 + 2) = a2;
  *((_QWORD *)v17 + 3) = a3;
  v19 = v26;
  v18 = v27;
  *((_QWORD *)v17 + 4) = v26;
  *((_QWORD *)v17 + 5) = v18;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v17[v16], (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a3);
  sub_20E4A4388();
  swift_release();
  swift_release();
  v20 = sub_20E39D010((unint64_t *)&qword_254A19A58, &qword_254A19A50, MEMORY[0x24BDF1248]);
  v30[0] = v19;
  v30[1] = v20;
  v21 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v11, v30);
  v22 = v25;
  sub_20E39D614(v25, v13, v11, v21);
  v23 = *(void (**)(char *, uint64_t))(v28 + 8);
  v23(v13, v11);
  sub_20E39D618((uint64_t)v22, v11, v29);
  return ((uint64_t (*)(_QWORD *, uint64_t))v23)(v22, v11);
}

uint64_t sub_20E3F966C()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_20E3F96C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  return sub_20E49AF10(v0 + ((v2 + 48) & ~v2), v1, *(_QWORD *)(v0 + 40));
}

uint64_t View.mediaArtworkProtocol(scheme:host:path:query:action:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, unsigned __int8 a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void **v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  int EnumCaseMultiPayload;
  void *v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, void **, uint64_t);
  char *v55;
  uint64_t v56;
  char *v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  void (*v63)(char *, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  int v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD v96[2];
  _QWORD v97[2];
  _QWORD v98[2];
  _QWORD v99[2];
  uint64_t v100;
  unint64_t v101;
  char v102;
  uint64_t v103;
  uint64_t (*v104)();
  uint64_t v105;
  void *v106;

  v94 = a7;
  v95 = a8;
  v93 = a6;
  v91 = a4;
  v92 = a5;
  v90 = a3;
  v89 = a2;
  v88 = a1;
  v85 = a9;
  v87 = a10;
  v86 = a11;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19A50);
  v74 = a16;
  v17 = sub_20E4A39D4();
  v75 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v72 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v78 = (char *)&v72 - v21;
  v77 = sub_20E4A4D60();
  v76 = *(_QWORD *)(v77 - 8);
  v22 = *(_QWORD *)(v76 + 64);
  MEMORY[0x24BDAC7A8](v77);
  v73 = (char *)&v72 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v80 = (char *)&v72 - v24;
  v81 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A18D00);
  v84 = sub_20E4A3E00();
  v83 = *(_QWORD *)(v84 - 8);
  MEMORY[0x24BDAC7A8](v84);
  v82 = (char *)&v72 - v25;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19E28);
  MEMORY[0x24BDAC7A8](v26);
  v28 = (void **)((char *)&v72 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&v72 - v30;
  MEMORY[0x24BDAC7A8](v32);
  v34 = (char *)&v72 - v33;
  MEMORY[0x24BDAC7A8](v35);
  v37 = (char *)&v72 - v36;
  sub_20E4A4D48();
  swift_storeEnumTagMultiPayload();
  sub_20E3F9EA4((uint64_t)v31, (uint64_t)v34);
  v38 = a17;
  sub_20E3F9EA4((uint64_t)v34, (uint64_t)v37);
  sub_20E3F9EEC((uint64_t)v37, (uint64_t)v28);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v79 = v37;
  if (EnumCaseMultiPayload == 1)
  {
    v40 = *v28;
    v100 = 0;
    v101 = 0xE000000000000000;
    sub_20E4A61A0();
    sub_20E4A5C6C();
    v106 = v40;
    __swift_instantiateConcreteTypeFromMangledName(qword_253ED2880);
    sub_20E4A626C();
    v42 = v100;
    v41 = v101;
    sub_20E3C3948();
    swift_bridgeObjectRetain();
    v43 = sub_20E4A41C0();
    v45 = v44;
    v47 = v46;
    v49 = v48 & 1;
    v50 = swift_allocObject();
    *(_QWORD *)(v50 + 16) = v42;
    *(_QWORD *)(v50 + 24) = v41;
    v100 = v43;
    v101 = v45;
    v102 = v49;
    v103 = v47;
    v104 = sub_20E3A5260;
    v105 = v50;
    sub_20E3FAA14(v43, v45, v49);
    v51 = sub_20E39D010((unint64_t *)&qword_254A19A58, &qword_254A19A50, MEMORY[0x24BDF1248]);
    v99[0] = a17;
    v99[1] = v51;
    swift_bridgeObjectRetain();
    swift_retain();
    MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v17, v99);
    sub_20E39D010((unint64_t *)&qword_254A18D08, &qword_254A18D00, (uint64_t)&protocol conformance descriptor for _RequirementFailureView<A, B>);
    v52 = (uint64_t)v82;
    sub_20E39CBE0((uint64_t)&v100, v17, v81);

    sub_20E39D0D8(v43, v45, v49);
    swift_release();
    swift_bridgeObjectRelease();
    sub_20E39D0D8(v43, v45, v49);
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    v94 = a14;
    v53 = v76;
    v54 = *(void (**)(char *, void **, uint64_t))(v76 + 32);
    v55 = v80;
    v95 = a17;
    v56 = v77;
    v54(v80, v28, v77);
    swift_getKeyPath();
    v57 = v73;
    (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v73, v55, v56);
    v58 = (*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
    v59 = swift_allocObject();
    *(_QWORD *)(v59 + 16) = v94;
    *(_QWORD *)(v59 + 24) = a15;
    v54((char *)(v59 + v58), (void **)v57, v56);
    swift_retain();
    sub_20E4A4388();
    swift_release();
    swift_release();
    v60 = sub_20E39D010((unint64_t *)&qword_254A19A58, &qword_254A19A50, MEMORY[0x24BDF1248]);
    v96[0] = v95;
    v96[1] = v60;
    v61 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v17, v96);
    v62 = v78;
    sub_20E39D614(v78, v19, v17, v61);
    v63 = *(void (**)(char *, uint64_t))(v75 + 8);
    v63(v19, v17);
    sub_20E39D618((uint64_t)v62, v17, (uint64_t)v19);
    sub_20E39D010((unint64_t *)&qword_254A18D08, &qword_254A18D00, (uint64_t)&protocol conformance descriptor for _RequirementFailureView<A, B>);
    v52 = (uint64_t)v82;
    sub_20E3DC6B0((uint64_t)v19, v17);
    v63(v19, v17);
    v63(v62, v17);
    v64 = v56;
    v38 = v95;
    (*(void (**)(char *, uint64_t))(v53 + 8))(v80, v64);
  }
  sub_20E3FAA24((uint64_t)v79);
  v65 = v85;
  v66 = v84;
  v67 = v83;
  v68 = sub_20E39D010((unint64_t *)&qword_254A19A58, &qword_254A19A50, MEMORY[0x24BDF1248]);
  v98[0] = v38;
  v98[1] = v68;
  v69 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v17, v98);
  v70 = sub_20E39D010((unint64_t *)&qword_254A18D08, &qword_254A18D00, (uint64_t)&protocol conformance descriptor for _RequirementFailureView<A, B>);
  v97[0] = v69;
  v97[1] = v70;
  MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v66, v97);
  sub_20E39D618(v52, v66, v65);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v67 + 8))(v52, v66);
}

uint64_t sub_20E3F9EA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19E28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20E3F9EEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19E28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20E3F9F34(_QWORD **a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v19;
  unint64_t v20;
  uint64_t *boxed_opaque_existential_1Tm;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  unint64_t v26;

  v8 = _s22_OneShotActionProtocolVMa();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (uint64_t *)((char *)&v23 - v12);
  v15 = (char *)&v23 + *(int *)(v14 + 20) - v12;
  v16 = sub_20E4A4D60();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v15, a4, v16);
  *v13 = a2;
  v13[1] = a3;
  sub_20E3FAE3C((uint64_t)v13, (uint64_t)v10);
  v17 = *a1;
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v17;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v17 = sub_20E3AD3A4(0, v17[2] + 1, 1, v17);
    *a1 = v17;
  }
  v20 = v17[2];
  v19 = v17[3];
  if (v20 >= v19 >> 1)
  {
    v17 = sub_20E3AD3A4((_QWORD *)(v19 > 1), v20 + 1, 1, v17);
    *a1 = v17;
  }
  v25 = v8;
  v26 = sub_20E3FAE80();
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)&v24);
  sub_20E3FAE3C((uint64_t)v10, (uint64_t)boxed_opaque_existential_1Tm);
  v17[2] = v20 + 1;
  sub_20E3B1AB4(&v24, (uint64_t)&v17[5 * v20 + 4]);
  sub_20E3FAEC8((uint64_t)v10);
  return sub_20E3FAEC8((uint64_t)v13);
}

uint64_t View.mediaArtworkProtocol<A>(scheme:host:path:query:action:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, void *a8@<X7>, uint64_t a9@<X8>, unsigned __int8 a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19)
{
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  int EnumCaseMultiPayload;
  id v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  void (*v59)(char *, id *, uint64_t);
  uint64_t v60;
  char *v61;
  uint64_t v62;
  unint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  void (*v70)(char *, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  int v93;
  uint64_t v94;
  uint64_t v95;
  int v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  id v101;
  _QWORD v102[2];
  _QWORD v103[2];
  _QWORD v104[2];
  _QWORD v105[2];
  uint64_t v106;
  unint64_t v107;
  char v108;
  uint64_t v109;
  uint64_t (*v110)();
  uint64_t v111;
  id v112;

  v100 = a7;
  v101 = a8;
  LODWORD(v99) = a6;
  v97 = a4;
  v98 = a5;
  v96 = a3;
  v95 = a2;
  v94 = a1;
  v91 = a9;
  v93 = a10;
  v92 = a11;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19A50);
  v79 = a16;
  v19 = sub_20E4A39D4();
  v80 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v78 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v82 = (char *)&v78 - v23;
  v81 = sub_20E4A4D60();
  v86 = *(_QWORD *)(v81 - 8);
  v24 = *(_QWORD *)(v86 + 64);
  MEMORY[0x24BDAC7A8](v81);
  v25 = (char *)&v78 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  v85 = (char *)&v78 - v27;
  v28 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A18D00);
  v84 = v19;
  v87 = v28;
  v90 = sub_20E4A3E00();
  v89 = *(_QWORD *)(v90 - 8);
  MEMORY[0x24BDAC7A8](v90);
  v88 = (char *)&v78 - v29;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19E28);
  MEMORY[0x24BDAC7A8](v30);
  v32 = (id *)((char *)&v78 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v33);
  v35 = (char *)&v78 - v34;
  MEMORY[0x24BDAC7A8](v36);
  v38 = (char *)&v78 - v37;
  MEMORY[0x24BDAC7A8](v39);
  v41 = (char *)&v78 - v40;
  sub_20E4A4D48();
  swift_storeEnumTagMultiPayload();
  sub_20E3F9EA4((uint64_t)v35, (uint64_t)v38);
  sub_20E3F9EA4((uint64_t)v38, (uint64_t)v41);
  sub_20E3F9EEC((uint64_t)v41, (uint64_t)v32);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v83 = v41;
  if (EnumCaseMultiPayload == 1)
  {
    v101 = *v32;
    v43 = v101;
    v106 = 0;
    v107 = 0xE000000000000000;
    sub_20E4A61A0();
    sub_20E4A5C6C();
    v112 = v43;
    __swift_instantiateConcreteTypeFromMangledName(qword_253ED2880);
    sub_20E4A626C();
    v44 = v106;
    v45 = v107;
    sub_20E3C3948();
    swift_bridgeObjectRetain();
    v46 = sub_20E4A41C0();
    v48 = v47;
    v50 = v49;
    v52 = v51 & 1;
    v53 = swift_allocObject();
    *(_QWORD *)(v53 + 16) = v44;
    *(_QWORD *)(v53 + 24) = v45;
    v106 = v46;
    v107 = v48;
    v108 = v52;
    v109 = v50;
    v110 = sub_20E3C3C6C;
    v111 = v53;
    sub_20E3FAA14(v46, v48, v52);
    v54 = sub_20E39D010((unint64_t *)&qword_254A19A58, &qword_254A19A50, MEMORY[0x24BDF1248]);
    v105[0] = a18;
    v105[1] = v54;
    swift_bridgeObjectRetain();
    swift_retain();
    v55 = v84;
    MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v84, v105);
    sub_20E39D010((unint64_t *)&qword_254A18D08, &qword_254A18D00, (uint64_t)&protocol conformance descriptor for _RequirementFailureView<A, B>);
    v56 = (uint64_t)v88;
    sub_20E39CBE0((uint64_t)&v106, v55, v87);

    sub_20E39D0D8(v46, v48, v52);
    swift_release();
    swift_bridgeObjectRelease();
    v57 = v48;
    v58 = a18;
    sub_20E39D0D8(v46, v57, v52);
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    v100 = a19;
    v101 = a18;
    v98 = a17;
    v99 = a14;
    v59 = *(void (**)(char *, id *, uint64_t))(v86 + 32);
    v60 = v86;
    v61 = v85;
    v62 = v81;
    v59(v85, v32, v81);
    swift_getKeyPath();
    (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v25, v61, v62);
    v63 = (*(unsigned __int8 *)(v60 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80);
    v64 = (char *)swift_allocObject();
    v65 = v98;
    *((_QWORD *)v64 + 2) = v79;
    *((_QWORD *)v64 + 3) = v65;
    v66 = v100;
    v58 = v101;
    *((_QWORD *)v64 + 4) = v101;
    *((_QWORD *)v64 + 5) = v66;
    *((_QWORD *)v64 + 6) = v99;
    *((_QWORD *)v64 + 7) = a15;
    v59(&v64[v63], (id *)v25, v62);
    swift_retain();
    sub_20E4A4388();
    swift_release();
    swift_release();
    v67 = sub_20E39D010((unint64_t *)&qword_254A19A58, &qword_254A19A50, MEMORY[0x24BDF1248]);
    v102[0] = v58;
    v102[1] = v67;
    v55 = v84;
    v68 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v84, v102);
    v69 = v82;
    sub_20E39D614(v82, v21, v55, v68);
    v70 = *(void (**)(char *, uint64_t))(v80 + 8);
    v70(v21, v55);
    sub_20E39D618((uint64_t)v69, v55, (uint64_t)v21);
    sub_20E39D010((unint64_t *)&qword_254A18D08, &qword_254A18D00, (uint64_t)&protocol conformance descriptor for _RequirementFailureView<A, B>);
    v56 = (uint64_t)v88;
    sub_20E3DC6B0((uint64_t)v21, v55);
    v70(v21, v55);
    v70(v69, v55);
    (*(void (**)(char *, uint64_t))(v86 + 8))(v85, v62);
  }
  sub_20E3FAA24((uint64_t)v83);
  v71 = v91;
  v72 = v90;
  v73 = v89;
  v74 = sub_20E39D010((unint64_t *)&qword_254A19A58, &qword_254A19A50, MEMORY[0x24BDF1248]);
  v104[0] = v58;
  v104[1] = v74;
  v75 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v55, v104);
  v76 = sub_20E39D010((unint64_t *)&qword_254A18D08, &qword_254A18D00, (uint64_t)&protocol conformance descriptor for _RequirementFailureView<A, B>);
  v103[0] = v75;
  v103[1] = v76;
  MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v72, v103);
  sub_20E39D618(v56, v72, v71);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v73 + 8))(v56, v72);
}

uint64_t sub_20E3FA898(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v24[2];

  v24[0] = a2;
  v24[1] = a1;
  v12 = sub_20E4A4D60();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = _s23_SequenceActionProtocolVMa(0, a6, a8, v16);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v21 = (uint64_t *)((char *)v24 - v20);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v13 + 16))(v15, a4, v12, v19);
  sub_20E41DB44(v24[0], a3, (uint64_t)v15, a6, a8, v21);
  swift_retain();
  v22 = MEMORY[0x212BBDF90](&unk_20E4AC238, v17);
  sub_20E49AF10((uint64_t)v21, v17, v22);
  return (*(uint64_t (**)(_QWORD *, uint64_t))(v18 + 8))(v21, v17);
}

uint64_t sub_20E3FA9CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_20E3FAF14();
  *a1 = result;
  return result;
}

uint64_t sub_20E3FA9F0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_20E3FAA14(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_retain();
  else
    return swift_bridgeObjectRetain();
}

uint64_t sub_20E3FAA24(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19E28);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20E3FAA64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_20E4A4D60();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_20E3FAAD8(_QWORD **a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_20E4A4D60() - 8) + 80);
  return sub_20E3F9F34(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), v1 + ((v3 + 32) & ~v3));
}

uint64_t sub_20E3FAB18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_20E4A4D60();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_20E3FAB8C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = v1[2];
  v4 = v1[3];
  v5 = v1[4];
  v6 = v1[5];
  v7 = *(unsigned __int8 *)(*(_QWORD *)(sub_20E4A4D60() - 8) + 80);
  return sub_20E3FA898(a1, v1[6], v1[7], (uint64_t)v1 + ((v7 + 64) & ~v7), v3, v4, v5, v6);
}

uint64_t sub_20E3FABF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 16);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19A50);
  v2 = sub_20E4A39D4();
  v4[0] = v1;
  v4[1] = sub_20E39D010((unint64_t *)&qword_254A19A58, &qword_254A19A50, MEMORY[0x24BDF1248]);
  return MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v2, v4);
}

uint64_t sub_20E3FAC78(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[2];
  _QWORD v6[2];

  v1 = *(_QWORD *)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19A50);
  v2 = sub_20E4A39D4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A18D00);
  v3 = sub_20E4A3E00();
  v6[0] = v1;
  v6[1] = sub_20E39D010((unint64_t *)&qword_254A19A58, &qword_254A19A50, MEMORY[0x24BDF1248]);
  v5[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v2, v6);
  v5[1] = sub_20E39D010((unint64_t *)&qword_254A18D08, &qword_254A18D00, (uint64_t)&protocol conformance descriptor for _RequirementFailureView<A, B>);
  return MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v3, v5);
}

uint64_t sub_20E3FAD58(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[2];
  _QWORD v6[2];

  v1 = *(_QWORD *)(a1 + 16);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19A50);
  v2 = sub_20E4A39D4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A18D00);
  v3 = sub_20E4A3E00();
  v6[0] = v1;
  v6[1] = sub_20E39D010((unint64_t *)&qword_254A19A58, &qword_254A19A50, MEMORY[0x24BDF1248]);
  v5[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v2, v6);
  v5[1] = sub_20E39D010((unint64_t *)&qword_254A18D08, &qword_254A18D00, (uint64_t)&protocol conformance descriptor for _RequirementFailureView<A, B>);
  return MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v3, v5);
}

uint64_t sub_20E3FAE3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s22_OneShotActionProtocolVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_20E3FAE80()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254A19E30;
  if (!qword_254A19E30)
  {
    v1 = _s22_OneShotActionProtocolVMa();
    result = MEMORY[0x212BBDF90](&unk_20E4B1558, v1);
    atomic_store(result, (unint64_t *)&qword_254A19E30);
  }
  return result;
}

uint64_t sub_20E3FAEC8(uint64_t a1)
{
  uint64_t v2;

  v2 = _s22_OneShotActionProtocolVMa();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for MediaArtworkProtocolsKey()
{
  return &type metadata for MediaArtworkProtocolsKey;
}

uint64_t sub_20E3FAF14()
{
  uint64_t v0;
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254A18A28);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_20E4A8070;
  *(_QWORD *)(v0 + 56) = &type metadata for MediaArtwork.BundleImageProtocol;
  *(_QWORD *)(v0 + 64) = sub_20E3E847C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A18A98);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_20E4A7F90;
  *(_QWORD *)(v1 + 32) = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  sub_20E4A5D38();
  *(_QWORD *)(v0 + 32) = v1;
  *(_QWORD *)(v0 + 96) = &type metadata for MediaArtwork.SystemImageProtocol;
  *(_QWORD *)(v0 + 104) = sub_20E3FAFE8();
  return v0;
}

unint64_t sub_20E3FAFE8()
{
  unint64_t result;

  result = qword_254A19E38[0];
  if (!qword_254A19E38[0])
  {
    result = MEMORY[0x212BBDF90](&protocol conformance descriptor for MediaArtwork.SystemImageProtocol, &type metadata for MediaArtwork.SystemImageProtocol);
    atomic_store(result, qword_254A19E38);
  }
  return result;
}

uint64_t sub_20E3FB030()
{
  uint64_t v1;

  sub_20E39D050();
  sub_20E4A3C08();
  return v1;
}

uint64_t IntentView<>.pageRenderMetrics(onTopic:pipeline:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v24 = a5;
  v25 = a3;
  v27 = a2;
  v28 = a1;
  v29 = a6;
  v8 = sub_20E4A4F70();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = *(_QWORD *)(a4 + 16);
  v12 = *(_QWORD *)(a4 + 48);
  v13 = type metadata accessor for PageRenderMetricsViewModifier(0, v23, v12, a5);
  v26 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v22 - v14;
  sub_20E3F2090();
  v16 = sub_20E4A4B38();
  v18 = v17;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v25, v8);
  v19 = v27;
  swift_bridgeObjectRetain();
  sub_20E3FB1E0(v16, v18, v28, v19, (uint64_t)v11, v23, v12, v24, (uint64_t)v15);
  v20 = MEMORY[0x212BBDF90](&protocol conformance descriptor for IntentView<A, B, C, D>, a4);
  MEMORY[0x212BBBA70](v15, a4, v13, v20);
  return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v15, v13);
}

uint64_t type metadata accessor for PageRenderMetricsViewModifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PageRenderMetricsViewModifier);
}

uint64_t sub_20E3FB1E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t *v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  char v38;
  uint64_t v39;

  v30 = a5;
  v31 = a1;
  v33 = a3;
  v34 = a4;
  v32 = a2;
  v13 = sub_20E4A4F70();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  MEMORY[0x24BDAC7A8](v13);
  *(_QWORD *)(a9 + 24) = swift_getKeyPath();
  *(_BYTE *)(a9 + 32) = 0;
  v16 = (int *)type metadata accessor for PageRenderMetricsViewModifier(0, a6, a7, a8);
  v17 = (uint64_t *)(a9 + v16[12]);
  *v17 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A30);
  swift_storeEnumTagMultiPayload();
  v18 = a9 + v16[13];
  *(_QWORD *)v18 = swift_getKeyPath();
  *(_QWORD *)(v18 + 8) = 0;
  *(_WORD *)(v18 + 16) = 0;
  v19 = (uint64_t *)(a9 + v16[14]);
  *v19 = sub_20E3FC4AC();
  *((_BYTE *)v19 + 8) = v20 & 1;
  v19[2] = v21;
  v22 = v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v30, v13);
  v23 = (*(unsigned __int8 *)(v14 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v24 = (char *)swift_allocObject();
  v25 = v32;
  *((_QWORD *)v24 + 2) = v31;
  *((_QWORD *)v24 + 3) = v25;
  v26 = v34;
  *((_QWORD *)v24 + 4) = v33;
  *((_QWORD *)v24 + 5) = v26;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v24[v23], (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v13);
  *(_QWORD *)a9 = sub_20E3FD774;
  *(_QWORD *)(a9 + 8) = v24;
  *(_BYTE *)(a9 + 16) = 0;
  v27 = *((_BYTE *)v19 + 8);
  v28 = v19[2];
  v37 = *v19;
  v38 = v27;
  v39 = v28;
  v35 = 0;
  v36 = 1;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C78);
  sub_20E4A4658();
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v22, v13);
  return swift_release();
}

uint64_t ModifiedContent<>.pageRenderMetrics(onTopic:pipeline:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[2];

  v30 = a7;
  v36 = a1;
  v37 = a5;
  v34 = a3;
  v35 = a2;
  v38 = a8;
  v33 = sub_20E4A4F70();
  v31 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a4 + 24);
  v29 = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v16 = type metadata accessor for PageRenderMetricsViewModifier(0, AssociatedTypeWitness, AssociatedConformanceWitness, a7);
  v32 = *(_QWORD *)(v16 - 8);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v28 - v18;
  (*(void (**)(uint64_t, uint64_t, double))(a6 + 32))(v13, a6, v17);
  v20 = sub_20E4A4B38();
  v22 = v21;
  (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v12, v34, v33);
  v23 = v35;
  swift_bridgeObjectRetain();
  sub_20E3FB1E0(v20, v22, v36, v23, (uint64_t)v12, AssociatedTypeWitness, AssociatedConformanceWitness, v30, (uint64_t)v19);
  v24 = *(_QWORD *)(a6 + 8);
  v39[0] = v37;
  v39[1] = v24;
  v25 = v29;
  v26 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v29, v39);
  MEMORY[0x212BBBA70](v19, v25, v16, v26);
  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v19, v16);
}

void sub_20E3FB5E8()
{
  type metadata accessor for IntentView();
}

uint64_t sub_20E3FB624(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[16];

  v3 = type metadata accessor for PageRenderMetricsViewModifier(255, v7, v6, v1);
  v4 = sub_20E4A39D4();
  v8[0] = MEMORY[0x212BBDF90](&protocol conformance descriptor for IntentView<A, B, C, D>, a1);
  v8[1] = MEMORY[0x212BBDF90](&unk_20E4AA7C0, v3);
  return MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v4, v8);
}

uint64_t sub_20E3FB6AC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[2];
  _QWORD v13[2];

  v2 = a1[2];
  v1 = a1[3];
  v3 = a1[4];
  v4 = sub_20E4A39D4();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v7 = type metadata accessor for PageRenderMetricsViewModifier(255, AssociatedTypeWitness, AssociatedConformanceWitness, v3);
  v8 = sub_20E4A39D4();
  v9 = *(_QWORD *)(v1 + 8);
  v13[0] = v2;
  v13[1] = v9;
  v10 = MEMORY[0x24BDED308];
  v12[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v4, v13);
  v12[1] = MEMORY[0x212BBDF90](&unk_20E4AA7C0, v7);
  return MEMORY[0x212BBDF90](v10, v8, v12);
}

void sub_20E3FB7B8()
{
  unint64_t v0;

  sub_20E3BEE1C();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_20E3FB848(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  unsigned __int8 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v32)(char *, char *, uint64_t);
  char *v33;
  char *v34;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v17 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    v7 = *a2;
    v8 = a2[1];
    v9 = *((_BYTE *)a2 + 16);
    sub_20E39CFB8();
    *(_QWORD *)a1 = v7;
    *(_QWORD *)(a1 + 8) = v8;
    *(_BYTE *)(a1 + 16) = v9;
    v10 = a2[3];
    LOBYTE(v8) = *((_BYTE *)a2 + 32);
    j__swift_retain(v10);
    *(_QWORD *)(a1 + 24) = v10;
    *(_BYTE *)(a1 + 32) = v8;
    v11 = a3[12];
    v12 = (_QWORD *)(a1 + v11);
    v13 = (uint64_t *)((char *)a2 + v11);
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C80);
      v15 = *(_QWORD *)(v14 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      {
        v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C88);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        v18 = v13[1];
        *v12 = *v13;
        v12[1] = v18;
        v19 = *(int *)(v14 + 32);
        v33 = (char *)v13 + v19;
        v34 = (char *)v12 + v19;
        v20 = sub_20E4A392C();
        v32 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
        swift_retain();
        swift_retain();
        v32(v34, v33, v20);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      }
    }
    else
    {
      *v12 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v21 = a3[13];
    v22 = a1 + v21;
    v23 = (uint64_t)a2 + v21;
    v24 = *(_QWORD *)v23;
    v25 = *(_QWORD *)(v23 + 8);
    v26 = *(_BYTE *)(v23 + 17);
    v27 = *(_BYTE *)(v23 + 16);
    sub_20E3A3AFC(*(_QWORD *)v23, v25, v27, v26);
    *(_QWORD *)v22 = v24;
    *(_QWORD *)(v22 + 8) = v25;
    *(_BYTE *)(v22 + 16) = v27;
    *(_BYTE *)(v22 + 17) = v26;
    v28 = a3[14];
    v29 = a1 + v28;
    v30 = (uint64_t)a2 + v28;
    *(_QWORD *)v29 = *(_QWORD *)v30;
    *(_BYTE *)(v29 + 8) = *(_BYTE *)(v30 + 8);
    *(_QWORD *)(v29 + 16) = *(_QWORD *)(v30 + 16);
  }
  swift_retain();
  return a1;
}

uint64_t sub_20E3FBA70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_20E39CED0();
  j__swift_release(*(_QWORD *)(a1 + 24), *(unsigned __int8 *)(a1 + 32));
  v4 = a1 + *(int *)(a2 + 48);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C80);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
    {
      swift_release();
      swift_release();
      v6 = v4 + *(int *)(v5 + 32);
      v7 = sub_20E4A392C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
    }
  }
  else
  {
    swift_release();
  }
  sub_20E3A3D14(*(_QWORD *)(a1 + *(int *)(a2 + 52)), *(_QWORD *)(a1 + *(int *)(a2 + 52) + 8), *(unsigned __int8 *)(a1 + *(int *)(a2 + 52) + 16), *(_BYTE *)(a1 + *(int *)(a2 + 52) + 17));
  return swift_release();
}

uint64_t sub_20E3FBB6C(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  unsigned __int8 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v30)(char *, char *, uint64_t);
  char *v31;
  char *v32;

  v6 = *a2;
  v7 = a2[1];
  v8 = *((_BYTE *)a2 + 16);
  sub_20E39CFB8();
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8;
  v9 = a2[3];
  LOBYTE(v7) = *((_BYTE *)a2 + 32);
  j__swift_retain(v9);
  *(_QWORD *)(a1 + 24) = v9;
  *(_BYTE *)(a1 + 32) = v7;
  v10 = a3[12];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (uint64_t *)((char *)a2 + v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C80);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C88);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      v16 = v12[1];
      *v11 = *v12;
      v11[1] = v16;
      v17 = *(int *)(v13 + 32);
      v31 = (char *)v12 + v17;
      v32 = (char *)v11 + v17;
      v18 = sub_20E4A392C();
      v30 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
      swift_retain();
      swift_retain();
      v30(v32, v31, v18);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
  }
  else
  {
    *v11 = *v12;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v19 = a3[13];
  v20 = a1 + v19;
  v21 = (uint64_t)a2 + v19;
  v22 = *(_QWORD *)v21;
  v23 = *(_QWORD *)(v21 + 8);
  v24 = *(_BYTE *)(v21 + 17);
  v25 = *(_BYTE *)(v21 + 16);
  sub_20E3A3AFC(*(_QWORD *)v21, v23, v25, v24);
  *(_QWORD *)v20 = v22;
  *(_QWORD *)(v20 + 8) = v23;
  *(_BYTE *)(v20 + 16) = v25;
  *(_BYTE *)(v20 + 17) = v24;
  v26 = a3[14];
  v27 = a1 + v26;
  v28 = (uint64_t)a2 + v26;
  *(_QWORD *)v27 = *(_QWORD *)v28;
  *(_BYTE *)(v27 + 8) = *(_BYTE *)(v28 + 8);
  *(_QWORD *)(v27 + 16) = *(_QWORD *)(v28 + 16);
  swift_retain();
  return a1;
}

uint64_t sub_20E3FBD6C(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  unsigned __int8 v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  void (*v36)(char *, char *, uint64_t);
  char *v37;
  char *v38;

  v6 = *a2;
  v7 = a2[1];
  v8 = *((_BYTE *)a2 + 16);
  sub_20E39CFB8();
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8;
  sub_20E39CED0();
  v9 = a2[3];
  LOBYTE(v7) = *((_BYTE *)a2 + 32);
  j__swift_retain(v9);
  v10 = *(_QWORD *)(a1 + 24);
  v11 = *(unsigned __int8 *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = v9;
  *(_BYTE *)(a1 + 32) = v7;
  j__swift_release(v10, v11);
  if ((uint64_t *)a1 != a2)
  {
    v12 = a3[12];
    v13 = (_QWORD *)(a1 + v12);
    v14 = (uint64_t *)((char *)a2 + v12);
    sub_20E39D1F8(a1 + v12, &qword_253ED0A30);
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C80);
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C88);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        *v13 = *v14;
        v13[1] = v14[1];
        v18 = *(int *)(v15 + 32);
        v37 = (char *)v14 + v18;
        v38 = (char *)v13 + v18;
        v19 = sub_20E4A392C();
        v36 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
        swift_retain();
        swift_retain();
        v36(v38, v37, v19);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
    }
    else
    {
      *v13 = *v14;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v20 = a3[13];
  v21 = a1 + v20;
  v22 = (uint64_t)a2 + v20;
  v23 = *(_QWORD *)v22;
  v24 = *(_QWORD *)(v22 + 8);
  v25 = *(_BYTE *)(v22 + 17);
  v26 = *(_BYTE *)(v22 + 16);
  sub_20E3A3AFC(*(_QWORD *)v22, v24, v26, v25);
  v27 = *(_QWORD *)v21;
  v28 = *(_QWORD *)(v21 + 8);
  v29 = *(_BYTE *)(v21 + 17);
  *(_QWORD *)v21 = v23;
  *(_QWORD *)(v21 + 8) = v24;
  v30 = *(unsigned __int8 *)(v21 + 16);
  *(_BYTE *)(v21 + 16) = v26;
  *(_BYTE *)(v21 + 17) = v25;
  sub_20E3A3D14(v27, v28, v30, v29);
  v31 = a3[14];
  v32 = a1 + v31;
  v33 = (uint64_t *)((char *)a2 + v31);
  v34 = *v33;
  *(_BYTE *)(v32 + 8) = *((_BYTE *)v33 + 8);
  *(_QWORD *)v32 = v34;
  *(_QWORD *)(v32 + 16) = v33[2];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_20E3FBFC0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v6 = a3[12];
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C80);
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C88);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v13 = v8[1];
      *v7 = *v8;
      v7[1] = v13;
      v14 = *(int *)(v10 + 32);
      v15 = (char *)v7 + v14;
      v16 = (char *)v8 + v14;
      v17 = sub_20E4A392C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v18 = a3[13];
  v19 = a3[14];
  v20 = a1 + v18;
  v21 = a2 + v18;
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *(_WORD *)(v20 + 16) = *(_WORD *)(v21 + 16);
  v22 = a1 + v19;
  v23 = a2 + v19;
  *(_OWORD *)v22 = *(_OWORD *)v23;
  *(_QWORD *)(v22 + 16) = *(_QWORD *)(v23 + 16);
  return a1;
}

uint64_t sub_20E3FC150(uint64_t a1, uint64_t a2, int *a3)
{
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v6 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v6;
  sub_20E39CED0();
  v7 = *(_BYTE *)(a2 + 32);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(unsigned __int8 *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = v7;
  j__swift_release(v8, v9);
  if (a1 != a2)
  {
    v10 = a3[12];
    v11 = (_QWORD *)(a1 + v10);
    v12 = (_QWORD *)(a2 + v10);
    sub_20E39D1F8(a1 + v10, &qword_253ED0A30);
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A30);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C80);
      v15 = *(_QWORD *)(v14 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14))
      {
        v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C88);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        v17 = v12[1];
        *v11 = *v12;
        v11[1] = v17;
        v18 = *(int *)(v14 + 32);
        v19 = (char *)v11 + v18;
        v20 = (char *)v12 + v18;
        v21 = sub_20E4A392C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
  }
  v22 = a3[13];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = *(_BYTE *)(v24 + 16);
  v26 = *(_BYTE *)(v24 + 17);
  v27 = *(_QWORD *)v23;
  v28 = *(_QWORD *)(v23 + 8);
  v29 = *(_BYTE *)(v23 + 17);
  *(_OWORD *)v23 = *(_OWORD *)v24;
  v30 = *(unsigned __int8 *)(v23 + 16);
  *(_BYTE *)(v23 + 16) = v25;
  *(_BYTE *)(v23 + 17) = v26;
  sub_20E3A3D14(v27, v28, v30, v29);
  v31 = a3[14];
  v32 = a1 + v31;
  v33 = a2 + v31;
  *(_QWORD *)v32 = *(_QWORD *)v33;
  *(_BYTE *)(v32 + 8) = *(_BYTE *)(v33 + 8);
  *(_QWORD *)(v32 + 16) = *(_QWORD *)(v33 + 16);
  swift_release();
  return a1;
}

uint64_t sub_20E3FC340()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_20E3FC34C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18BE0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 48), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 56) + 16);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_20E3FC3E0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_20E3FC3EC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18BE0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 48), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 56) + 16) = a2;
  return result;
}

uint64_t sub_20E3FC470()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E3FC4AC()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0D38);
  sub_20E4A4640();
  return v1;
}

uint64_t sub_20E3FC4F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v6 = sub_20E4A4F70();
  v7 = MEMORY[0x24BDAC7A8](v6);
  (*(void (**)(char *, uint64_t, double))(v9 + 16))((char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a5, v7);
  sub_20E4A569C();
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_20E4A5690();
}

uint64_t sub_20E3FC5C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  unint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  void (*v63)(char *, uint64_t);
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  _QWORD v93[2];
  _QWORD v94[2];
  _QWORD v95[2];
  _QWORD v96[2];
  uint64_t v97;

  v91 = a3;
  v90 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v88 = v5;
  v89 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_20E4A4A24();
  v70 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v69 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_20E4A55F4();
  v68 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v66 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v67 = (char *)&v65 - v12;
  MEMORY[0x212BBDF90](&unk_20E4AA7C0, a2, v11);
  v13 = sub_20E4A3EA8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19EC0);
  v71 = v13;
  v14 = sub_20E4A39D4();
  v73 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v72 = (char *)&v65 - v15;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19EC8);
  v74 = v14;
  v16 = sub_20E4A39D4();
  v77 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v92 = (char *)&v65 - v17;
  v18 = *(_QWORD *)(a2 + 16);
  v19 = *(_QWORD *)(a2 + 24);
  v82 = a2;
  v83 = v18;
  v75 = v19;
  type metadata accessor for _IntentProgress(255, v18, v19, v20);
  swift_getFunctionTypeMetadata1();
  sub_20E4A60E0();
  v21 = sub_20E4A3FF8();
  v78 = v16;
  v76 = v21;
  v22 = sub_20E4A39D4();
  v81 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v79 = (char *)&v65 - v23;
  v86 = v24;
  v87 = sub_20E4A39D4();
  v85 = *(_QWORD *)(v87 - 8);
  MEMORY[0x24BDAC7A8](v87);
  v80 = (char *)&v65 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  v84 = (uint64_t *)((char *)&v65 - v27);
  swift_getKeyPath();
  v28 = *(_QWORD *)(v3 + 24);
  v29 = *(unsigned __int8 *)(v3 + 32);
  j__swift_retain(v28);
  sub_20E45D0E0(v28, v29, &v97);
  j__swift_release(v28, v29);
  if (v97)
  {
    v65 = v6;
    sub_20E4A569C();
    v30 = v3;
    sub_20E3FD418();
    sub_20E4A36EC();
    v31 = v67;
    sub_20E4A5678();
    swift_release();
    v32 = v68;
    (*(void (**)(char *, _QWORD, uint64_t))(v68 + 104))(v31, *MEMORY[0x24BE5DAD0], v8);
    (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v66, v31, v8);
    swift_retain();
    v33 = v69;
    sub_20E4A4A00();
    v34 = sub_20E4A4F10();
    (*(void (**)(char *, uint64_t))(v70 + 8))(v33, v65);
    swift_release();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v31, v8);
    swift_release();
  }
  else
  {
    v34 = 0;
    v30 = v3;
  }
  v97 = v34;
  v35 = MEMORY[0x212BBDF90](MEMORY[0x24BDEFB78], v71);
  v36 = v72;
  sub_20E4A4250();
  swift_release();
  swift_release();
  swift_getKeyPath();
  sub_20E4A569C();
  sub_20E3FD418();
  v97 = sub_20E4A36EC();
  v37 = sub_20E3FD4F8(&qword_254A19ED8, &qword_254A19EC0);
  v96[0] = v35;
  v96[1] = v37;
  v38 = v74;
  v39 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v74, v96);
  sub_20E4A4250();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v73 + 8))(v36, v38);
  v40 = sub_20E4A36EC();
  v41 = (_QWORD *)swift_allocObject();
  v43 = v82;
  v42 = v83;
  v44 = v75;
  v41[2] = v83;
  v41[3] = v44;
  v74 = *(_QWORD *)(v43 + 32);
  v41[4] = v74;
  v41[5] = v40;
  v45 = sub_20E3FD4F8(qword_254A19EF0, &qword_254A19EC8);
  v95[0] = v39;
  v95[1] = v45;
  swift_retain();
  v46 = v78;
  v47 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v78, v95);
  v48 = v79;
  v49 = v92;
  sub_20E3FE6FC(v42, (uint64_t)&unk_254A19EE8, (uint64_t)v41, v46, v42, v47, v44);
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v77 + 8))(v49, v46);
  v51 = v89;
  v50 = v90;
  (*(void (**)(char *, uint64_t, uint64_t))(v90 + 16))(v89, v30, v43);
  v52 = (*(unsigned __int8 *)(v50 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
  v53 = (char *)swift_allocObject();
  *((_QWORD *)v53 + 2) = v42;
  *((_QWORD *)v53 + 3) = v44;
  *((_QWORD *)v53 + 4) = v74;
  (*(void (**)(char *, char *, uint64_t))(v50 + 32))(&v53[v52], v51, v43);
  v54 = MEMORY[0x212BBDF90](MEMORY[0x24BDF1028], v76);
  v94[0] = v47;
  v94[1] = v54;
  v55 = MEMORY[0x24BDED308];
  v56 = v86;
  v57 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v86, v94);
  v58 = v80;
  View.onViewAppearanceChange(perform:)((uint64_t)sub_20E3FD67C, (uint64_t)v53, v56, v57);
  swift_release();
  (*(void (**)(char *, uint64_t))(v81 + 8))(v48, v56);
  v59 = sub_20E3A5070();
  v93[0] = v57;
  v93[1] = v59;
  v60 = v87;
  v61 = MEMORY[0x212BBDF90](v55, v87, v93);
  v62 = v84;
  sub_20E39D614(v84, v58, v60, v61);
  v63 = *(void (**)(char *, uint64_t))(v85 + 8);
  v63(v58, v60);
  sub_20E39D618((uint64_t)v62, v60, v91);
  return ((uint64_t (*)(_QWORD *, uint64_t))v63)(v62, v60);
}

uint64_t sub_20E3FCDA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5[3] = a2;
  v5[4] = a5;
  v5[2] = a1;
  v8 = sub_20E4A563C();
  v5[5] = v8;
  v5[6] = *(_QWORD *)(v8 - 8);
  v5[7] = swift_task_alloc();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5[8] = AssociatedTypeWitness;
  v5[9] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v5[10] = swift_task_alloc();
  v10 = sub_20E4A5648();
  v5[11] = v10;
  v5[12] = *(_QWORD *)(v10 - 8);
  v5[13] = swift_task_alloc();
  v12 = type metadata accessor for _IntentProgress(0, a3, a4, v11);
  v5[14] = v12;
  v5[15] = *(_QWORD *)(v12 - 8);
  v5[16] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_20E3FCEA8()
{
  uint64_t v0;
  int EnumCaseMultiPayload;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 16))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 112));
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v3 = *(_QWORD *)(v0 + 48);
      v2 = *(_QWORD **)(v0 + 56);
      v4 = *(_QWORD *)(v0 + 40);
      v5 = **(void ***)(v0 + 128);
      *v2 = v5;
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v2, *MEMORY[0x24BE5DB38], v4);
      v6 = v5;
      sub_20E4A566C();

      (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v2, v4);
    }
    else
    {
      v14 = *(_QWORD *)(v0 + 96);
      v13 = *(_BYTE **)(v0 + 104);
      v15 = *(_QWORD *)(v0 + 88);
      *v13 = 1;
      (*(void (**)(_BYTE *, _QWORD, uint64_t))(v14 + 104))(v13, *MEMORY[0x24BE5DB60], v15);
      sub_20E4A5684();
      (*(void (**)(_BYTE *, uint64_t))(v14 + 8))(v13, v15);
    }
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 72);
    v7 = *(_QWORD *)(v0 + 80);
    v10 = *(_QWORD *)(v0 + 56);
    v9 = *(_QWORD *)(v0 + 64);
    v11 = *(_QWORD *)(v0 + 40);
    v12 = *(_QWORD *)(v0 + 48);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v8 + 32))(v7, *(_QWORD *)(v0 + 128), v9);
    sub_20E4A5B10();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v12 + 104))(v10, *MEMORY[0x24BE5DB48], v11);
    sub_20E4A566C();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20E3FD064(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t *v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  _BYTE *v40;
  char v42;
  uint64_t v43;
  _BYTE v44[4];
  _BOOL4 v45;
  _BYTE *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  BOOL v53;

  v10 = sub_20E4A5570();
  v47 = *(_QWORD *)(v10 - 8);
  v48 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v46 = &v44[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = sub_20E4A392C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = &v44[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C88);
  MEMORY[0x24BDAC7A8](v16);
  v18 = &v44[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v19);
  v21 = &v44[-v20];
  v22 = type metadata accessor for PageRenderMetricsViewModifier(0, a3, a4, a5);
  v23 = (uint64_t *)(a2 + *(int *)(v22 + 56));
  v24 = *((_BYTE *)v23 + 8);
  v25 = v23[2];
  if ((a1 & 1) != 0)
  {
    v49 = *v23;
    v50 = v24;
    v51 = v25;
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C78);
    sub_20E4A464C();
    if (v53)
    {
      sub_20E45C744((uint64_t)v21);
      v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C80);
      v27 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(v21, 1, v26);
      if (v27 == 1)
      {
        sub_20E39D1F8((uint64_t)v21, &qword_253ED0C88);
        v28 = 0;
      }
      else
      {
        MEMORY[0x212BBBCE0](v26);
        sub_20E39D1F8((uint64_t)v21, &qword_253ED0C80);
        v28 = sub_20E4A38FC();
        (*(void (**)(_BYTE *, uint64_t))(v13 + 8))(v15, v12);
      }
      v42 = *((_BYTE *)v23 + 8);
      v43 = v23[2];
      v49 = *v23;
      v50 = v42;
      v51 = v43;
      v52 = v28;
      v53 = v27 == 1;
      sub_20E4A4658();
    }
    sub_20E4A569C();
    sub_20E3FD418();
    sub_20E4A36EC();
    sub_20E4A5654();
    return swift_release();
  }
  else
  {
    v49 = *v23;
    v50 = v24;
    v51 = v25;
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C78);
    sub_20E4A464C();
    v29 = v52;
    v45 = v53;
    sub_20E45C744((uint64_t)v18);
    v30 = a2 + *(int *)(v22 + 52);
    v31 = *(_QWORD *)v30;
    v32 = *(_QWORD *)(v30 + 8);
    v33 = *(unsigned __int8 *)(v30 + 16);
    v34 = *(unsigned __int8 *)(v30 + 17);
    sub_20E3A3AFC(*(_QWORD *)v30, v32, v33, *(_BYTE *)(v30 + 17));
    v35 = sub_20E45C300(v31, v32, v33 | (v34 << 8));
    v37 = v36;
    v39 = v38;
    sub_20E3A3D14(v31, v32, v33, v34);
    v40 = v46;
    ViewWillDisappearReason.init(initialPathCount:pageMetricsNavigationPath:isFlowStackSheetPresented:)(v29, v45, (uint64_t)v18, v35, v37, v39);
    sub_20E4A569C();
    sub_20E3FD418();
    sub_20E4A36EC();
    sub_20E4A5660();
    swift_release();
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v47 + 8))(v40, v48);
  }
}

unint64_t sub_20E3FD418()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254A19ED0;
  if (!qword_254A19ED0)
  {
    v1 = sub_20E4A569C();
    result = MEMORY[0x212BBDF90](&protocol conformance descriptor for PageRenderMetricsPresenter, v1);
    atomic_store(result, (unint64_t *)&qword_254A19ED0);
  }
  return result;
}

uint64_t sub_20E3FD460()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E3FD484(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_20E3B4E08;
  return sub_20E3FCDA4(a1, v6, v4, v5, v7);
}

uint64_t sub_20E3FD4F8(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDF1028], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20E3FD538()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v1 = type metadata accessor for PageRenderMetricsViewModifier(0, v0[2], v0[3], v0[4]);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (char *)v0 + ((v2 + 40) & ~v2);
  sub_20E39CED0();
  j__swift_release(*((_QWORD *)v3 + 3), v3[32]);
  v4 = &v3[*(int *)(v1 + 48)];
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C80);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
    {
      swift_release();
      swift_release();
      v6 = &v4[*(int *)(v5 + 32)];
      v7 = sub_20E4A392C();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
    }
  }
  else
  {
    swift_release();
  }
  sub_20E3A3D14(*(_QWORD *)&v3[*(int *)(v1 + 52)], *(_QWORD *)&v3[*(int *)(v1 + 52) + 8], v3[*(int *)(v1 + 52) + 16], v3[*(int *)(v1 + 52) + 17]);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E3FD67C(char a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = v1[2];
  v4 = v1[3];
  v5 = v1[4];
  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for PageRenderMetricsViewModifier(0, v3, v4, v5) - 8)
                          + 80);
  return sub_20E3FD064(a1, (uint64_t)v1 + ((v6 + 40) & ~v6), v3, v4, v5);
}

uint64_t sub_20E3FD6F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_20E4A4F70();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_20E3FD774()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_20E4A4F70() - 8) + 80);
  return sub_20E3FC4F8(v0[2], v0[3], v0[4], v0[5], (uint64_t)v0 + ((v1 + 48) & ~v1));
}

ValueMetadata *type metadata accessor for PageRenderMetricsPresenterKey()
{
  return &type metadata for PageRenderMetricsPresenterKey;
}

uint64_t sub_20E3FD7B8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[2];
  _QWORD v14[2];
  _QWORD v15[2];
  _QWORD v16[2];

  v1 = *a1;
  v2 = a1[1];
  v3 = type metadata accessor for PageRenderMetricsViewModifier(255, *a1, v2, a1[2]);
  MEMORY[0x212BBDF90](&unk_20E4AA7C0, v3);
  v4 = sub_20E4A3EA8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19EC0);
  v5 = sub_20E4A39D4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19EC8);
  v6 = sub_20E4A39D4();
  type metadata accessor for _IntentProgress(255, v1, v2, v7);
  swift_getFunctionTypeMetadata1();
  sub_20E4A60E0();
  v8 = sub_20E4A3FF8();
  v9 = sub_20E4A39D4();
  v10 = sub_20E4A39D4();
  v16[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDEFB78], v4);
  v16[1] = sub_20E3FD4F8(&qword_254A19ED8, &qword_254A19EC0);
  v11 = MEMORY[0x24BDED308];
  v15[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v5, v16);
  v15[1] = sub_20E3FD4F8(qword_254A19EF0, &qword_254A19EC8);
  v14[0] = MEMORY[0x212BBDF90](v11, v6, v15);
  v14[1] = MEMORY[0x212BBDF90](MEMORY[0x24BDF1028], v8);
  v13[0] = MEMORY[0x212BBDF90](v11, v9, v14);
  v13[1] = sub_20E3A5070();
  return MEMORY[0x212BBDF90](v11, v10, v13);
}

uint64_t sub_20E3FD998()
{
  uint64_t result;
  unint64_t v1;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

char *sub_20E3FDA18(char *a1, char **a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  int v7;
  char *v9;
  unsigned int v10;
  uint64_t v11;
  char *v12;
  char *v13;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if (*(_QWORD *)(v5 + 64) <= 8uLL)
    v6 = 8;
  else
    v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || (unint64_t)(v6 + 1) > 0x18)
  {
    v9 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v9[(unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8];
    swift_retain();
  }
  else
  {
    v10 = *((unsigned __int8 *)a2 + v6);
    if (v10 >= 2)
    {
      if (v6 <= 3)
        v11 = v6;
      else
        v11 = 4;
      __asm { BR              X14 }
    }
    if (v10 == 1)
    {
      v12 = *a2;
      v13 = v12;
      *(_QWORD *)a1 = v12;
      a1[v6] = 1;
    }
    else
    {
      (*(void (**)(char *, char **, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      a1[v6] = 0;
    }
  }
  return a1;
}

void sub_20E3FDB78(id *a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  unint64_t v4;
  unsigned int v5;
  uint64_t v6;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4 = *(_QWORD *)(v3 + 64);
  if (v4 <= 8)
    v4 = 8;
  v5 = *((unsigned __int8 *)a1 + v4);
  if (v5 >= 2)
  {
    if (v4 <= 3)
      v6 = v4;
    else
      v6 = 4;
    __asm { BR              X14 }
  }
  if (v5 == 1)

  else
    (*(void (**)(id *, uint64_t))(v3 + 8))(a1, AssociatedTypeWitness);
}

_QWORD *sub_20E3FDC6C(_QWORD *a1, void **a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  void *v9;
  id v10;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if (*(_QWORD *)(v5 + 64) <= 8uLL)
    v6 = 8;
  else
    v6 = *(_QWORD *)(v5 + 64);
  v7 = *((unsigned __int8 *)a2 + v6);
  if (v7 >= 2)
  {
    if (v6 <= 3)
      v8 = v6;
    else
      v8 = 4;
    __asm { BR              X13 }
  }
  if (v7 == 1)
  {
    v9 = *a2;
    v10 = v9;
    *a1 = v9;
    *((_BYTE *)a1 + v6) = 1;
  }
  else
  {
    (*(void (**)(_QWORD *, void **, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    *((_BYTE *)a1 + v6) = 0;
  }
  return a1;
}

id *sub_20E3FDD8C(id *a1, void **a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  void *v11;
  id v12;

  if (a1 != a2)
  {
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
    if (*(_QWORD *)(v5 + 64) <= 8uLL)
      v6 = 8;
    else
      v6 = *(_QWORD *)(v5 + 64);
    v7 = *((unsigned __int8 *)a1 + v6);
    if (v7 >= 2)
    {
      if (v6 <= 3)
        v8 = v6;
      else
        v8 = 4;
      __asm { BR              X12 }
    }
    if (v7 == 1)

    else
      (*(void (**)(id *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
    v9 = *((unsigned __int8 *)a2 + v6);
    if (v9 >= 2)
    {
      if (v6 <= 3)
        v10 = v6;
      else
        v10 = 4;
      __asm { BR              X12 }
    }
    if (v9 == 1)
    {
      v11 = *a2;
      v12 = v11;
      *a1 = v11;
      *((_BYTE *)a1 + v6) = 1;
    }
    else
    {
      (*(void (**)(id *, void **, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      *((_BYTE *)a1 + v6) = 0;
    }
  }
  return a1;
}

_QWORD *sub_20E3FDF58(_QWORD *a1, _QWORD *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if (*(_QWORD *)(v5 + 64) <= 8uLL)
    v6 = 8;
  else
    v6 = *(_QWORD *)(v5 + 64);
  v7 = *((unsigned __int8 *)a2 + v6);
  if (v7 >= 2)
  {
    if (v6 <= 3)
      v8 = v6;
    else
      v8 = 4;
    __asm { BR              X13 }
  }
  if (v7 == 1)
  {
    *a1 = *a2;
    *((_BYTE *)a1 + v6) = 1;
  }
  else
  {
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
    *((_BYTE *)a1 + v6) = 0;
  }
  return a1;
}

id *sub_20E3FE070(id *a1, id *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;

  if (a1 != a2)
  {
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
    if (*(_QWORD *)(v5 + 64) <= 8uLL)
      v6 = 8;
    else
      v6 = *(_QWORD *)(v5 + 64);
    v7 = *((unsigned __int8 *)a1 + v6);
    if (v7 >= 2)
    {
      if (v6 <= 3)
        v8 = v6;
      else
        v8 = 4;
      __asm { BR              X12 }
    }
    if (v7 == 1)

    else
      (*(void (**)(id *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
    v9 = *((unsigned __int8 *)a2 + v6);
    if (v9 >= 2)
    {
      if (v6 <= 3)
        v10 = v6;
      else
        v10 = 4;
      __asm { BR              X12 }
    }
    if (v9 == 1)
    {
      *a1 = *a2;
      *((_BYTE *)a1 + v6) = 1;
    }
    else
    {
      (*(void (**)(id *, id *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
      *((_BYTE *)a1 + v6) = 0;
    }
  }
  return a1;
}

uint64_t sub_20E3FE234(uint64_t a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  char v7;
  int v8;
  unsigned int v10;
  int v11;
  unsigned int v12;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = 8;
  if (*(_QWORD *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 64) > 8uLL)
    v5 = *(_QWORD *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 64);
  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_21;
  v6 = v5 + 1;
  v7 = 8 * (v5 + 1);
  if ((v5 + 1) <= 3)
  {
    v10 = ((a2 + ~(-1 << v7) - 253) >> v7) + 1;
    if (HIWORD(v10))
    {
      v8 = *(_DWORD *)(a1 + v6);
      if (!v8)
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v10 > 0xFF)
    {
      v8 = *(unsigned __int16 *)(a1 + v6);
      if (!*(_WORD *)(a1 + v6))
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v10 < 2)
    {
LABEL_21:
      v12 = *(unsigned __int8 *)(a1 + v5);
      if (v12 >= 3)
        return (v12 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v8 = *(unsigned __int8 *)(a1 + v6);
  if (!*(_BYTE *)(a1 + v6))
    goto LABEL_21;
LABEL_14:
  v11 = (v8 - 1) << v7;
  if (v6 > 3)
    v11 = 0;
  if ((_DWORD)v6)
  {
    if (v6 > 3)
      LODWORD(v6) = 4;
    __asm { BR              X11 }
  }
  return (v11 + 254);
}

void sub_20E3FE378(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unint64_t v6;
  size_t v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  int v11;

  v6 = *(_QWORD *)(*(_QWORD *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v6 <= 8)
    v6 = 8;
  v7 = v6 + 1;
  if (a3 < 0xFE)
  {
    v8 = 0;
  }
  else if (v7 <= 3)
  {
    v10 = ((a3 + ~(-1 << (8 * v7)) - 253) >> (8 * v7)) + 1;
    if (HIWORD(v10))
    {
      v8 = 4u;
    }
    else if (v10 >= 0x100)
    {
      v8 = 2;
    }
    else
    {
      v8 = v10 > 1;
    }
  }
  else
  {
    v8 = 1u;
  }
  if (a2 <= 0xFD)
    __asm { BR              X11 }
  v9 = a2 - 254;
  if (v7 < 4)
  {
    if ((_DWORD)v6 != -1)
    {
      v11 = v9 & ~(-1 << (8 * v7));
      bzero(a1, v7);
      if ((_DWORD)v7 == 3)
      {
        *(_WORD *)a1 = v11;
        a1[2] = BYTE2(v11);
      }
      else if ((_DWORD)v7 == 2)
      {
        *(_WORD *)a1 = v11;
      }
      else
      {
        *a1 = v11;
      }
    }
  }
  else
  {
    bzero(a1, v6 + 1);
    *(_DWORD *)a1 = v9;
  }
  __asm { BR              X10 }
}

uint64_t sub_20E3FE540(uint64_t a1)
{
  unint64_t v2;
  uint64_t result;
  uint64_t v4;

  v2 = *(_QWORD *)(*(_QWORD *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v2 <= 8)
    v2 = 8;
  result = *(unsigned __int8 *)(a1 + v2);
  if (result >= 2)
  {
    if (v2 <= 3)
      v4 = v2;
    else
      v4 = 4;
    __asm { BR              X12 }
  }
  return result;
}

void sub_20E3FE600(_BYTE *a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness;
  size_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  if (*(_QWORD *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 64);
  if (a2 > 1)
  {
    v6 = a2 - 2;
    if (v5 < 4)
    {
      v7 = v6 >> (8 * v5);
      v8 = v6 & ~(-1 << (8 * v5));
      a1[v5] = v7 + 2;
      bzero(a1, v5);
      if ((_DWORD)v5 == 3)
      {
        *(_WORD *)a1 = v8;
        a1[2] = BYTE2(v8);
      }
      else if ((_DWORD)v5 == 2)
      {
        *(_WORD *)a1 = v8;
      }
      else
      {
        *a1 = v8;
      }
    }
    else
    {
      a1[v5] = 2;
      bzero(a1, v5);
      *(_DWORD *)a1 = v6;
    }
  }
  else
  {
    a1[v5] = a2;
  }
}

uint64_t type metadata accessor for _IntentProgress(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _IntentProgress);
}

uint64_t type metadata accessor for _IntentObserverKey(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _IntentObserverKey);
}

uint64_t sub_20E3FE6FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[2];

  if (a2)
  {
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = a4;
    v13[3] = a5;
    v13[4] = a6;
    v13[5] = a7;
    v14 = &unk_254A1A000;
    v13[6] = a2;
    v13[7] = a3;
  }
  else
  {
    v14 = 0;
    v13 = 0;
  }
  v15 = type metadata accessor for _IntentObserverKey(0, a5, a7, a4);
  v18[0] = v14;
  v18[1] = v13;
  sub_20E3E592C(a2);
  v16 = MEMORY[0x212BBDF90](&unk_20E4AAA58, v15);
  sub_20E46134C(v15, (uint64_t)v18, a4, v15, a6, v16);
  return sub_20E3CF5C0((uint64_t)v14);
}

uint64_t sub_20E3FE7F4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  v7 = (uint64_t (*)(uint64_t))((char *)a3 + *a3);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v5;
  *v5 = v3;
  v5[1] = sub_20E3B50B0;
  return v7(a2);
}

void sub_20E3FE854(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

uint64_t sub_20E3FE85C(uint64_t a1)
{
  return sub_20E3FE950(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
}

uint64_t sub_20E3FE868()
{
  MEMORY[0x212BBDF90](&unk_20E4AAA58);
  return sub_20E461464();
}

uint64_t sub_20E3FE8A0(uint64_t a1, uint64_t a2)
{
  sub_20E4A6410();
  MEMORY[0x212BBDF90](&unk_20E4AAA58, a2);
  sub_20E461464();
  return sub_20E4A6428();
}

uint64_t sub_20E3FE8F4()
{
  return 1;
}

void sub_20E3FE8FC()
{
  JUMPOUT(0x212BBDF90);
}

uint64_t sub_20E3FE90C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = MEMORY[0x212BBDF90](&unk_20E4AA9E0);
  result = MEMORY[0x212BBDF90](&unk_20E4AAA20, a2);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_20E3FE950(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  sub_20E4A6410();
  v5 = type metadata accessor for _IntentObserverKey(0, a1, a2, v4);
  MEMORY[0x212BBDF90](&unk_20E4AAA58, v5);
  sub_20E461464();
  return sub_20E4A6428();
}

uint64_t sub_20E3FE9C0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E3FE9E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;

  v6 = *(int **)(v2 + 48);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_20E3B4E08;
  return ((uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_254A19FF8 + dword_254A19FF8))(a1, a2, v6);
}

uint64_t MediaArtwork.URLImageProtocol.Configuration.init()@<X0>(uint64_t a1@<X8>)
{
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = objc_msgSend((id)objc_opt_self(), sel_defaultSessionConfiguration);
  if (qword_254A180E8 != -1)
    swift_once();
  objc_msgSend(v2, sel_setURLCache_, qword_254A1A020);
  objc_msgSend(v2, sel_setNetworkServiceType_, 6);
  objc_msgSend(v2, sel_setHTTPShouldUsePipelining_, 1);
  v3 = objc_msgSend((id)objc_opt_self(), sel_sessionWithConfiguration_, v2);

  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = 1;
  if (qword_254A180E0 != -1)
    swift_once();
  v4 = sub_20E4A4D60();
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_254A1A008);
  v6 = a1 + *(int *)(type metadata accessor for MediaArtwork.URLImageProtocol.Configuration(0) + 24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(v6, v5, v4);
}

void MediaArtwork.URLImageProtocol.Configuration.withURLSession(_:takeOwnership:)(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  sub_20E400EE8(v3, a3);
  objc_storeStrong((id *)a3, a1);
  *(_BYTE *)(a3 + 8) = a2;
}

uint64_t MediaArtwork.URLImageProtocol.Configuration.withAllowedURLs(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  sub_20E400EE8(v2, a2);
  v5 = a2 + *(int *)(type metadata accessor for MediaArtwork.URLImageProtocol.Configuration(0) + 24);
  v6 = sub_20E4A4D60();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(v5, a1, v6);
}

uint64_t sub_20E3FEC80()
{
  uint64_t v0;

  v0 = sub_20E4A4D60();
  __swift_allocate_value_buffer(v0, qword_254A1A008);
  __swift_project_value_buffer(v0, (uint64_t)qword_254A1A008);
  return sub_20E4A4D48();
}

uint64_t MediaArtwork.URLImageProtocol.__allocating_init(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  uint64_t v11;

  v2 = sub_20E4A4D60();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = swift_allocObject();
  v7 = *(void **)a1;
  *(_QWORD *)(v6 + 16) = *(_QWORD *)a1;
  *(_BYTE *)(v6 + 24) = *(_BYTE *)(a1 + 8);
  v8 = type metadata accessor for MediaArtwork.URLImageProtocol.Configuration(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1 + *(int *)(v8 + 24), v2);
  v9 = v7;
  sub_20E400F2C(a1);
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v6 + OBJC_IVAR____TtCE18_JetEngine_SwiftUIV9JetEngine12MediaArtwork16URLImageProtocol_allowedURLs, v5, v2);
  return v6;
}

uint64_t MediaArtwork.URLImageProtocol.init(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  uint64_t v8;
  id v9;
  uint64_t v11;

  v3 = sub_20E4A4D60();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(void **)a1;
  *(_QWORD *)(v1 + 16) = *(_QWORD *)a1;
  *(_BYTE *)(v1 + 24) = *(_BYTE *)(a1 + 8);
  v8 = type metadata accessor for MediaArtwork.URLImageProtocol.Configuration(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1 + *(int *)(v8 + 24), v3);
  v9 = v7;
  sub_20E400F2C(a1);
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v1 + OBJC_IVAR____TtCE18_JetEngine_SwiftUIV9JetEngine12MediaArtwork16URLImageProtocol_allowedURLs, v6, v3);
  return v1;
}

uint64_t MediaArtwork.URLImageProtocol.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  id v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v16;

  v0 = sub_20E4A4D60();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for MediaArtwork.URLImageProtocol.Configuration(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend((id)objc_opt_self(), sel_defaultSessionConfiguration);
  if (qword_254A180E8 != -1)
    swift_once();
  objc_msgSend(v7, sel_setURLCache_, qword_254A1A020);
  objc_msgSend(v7, sel_setNetworkServiceType_, 6);
  objc_msgSend(v7, sel_setHTTPShouldUsePipelining_, 1);
  v8 = objc_msgSend((id)objc_opt_self(), sel_sessionWithConfiguration_, v7);

  *(_QWORD *)v6 = v8;
  v6[8] = 1;
  if (qword_254A180E0 != -1)
    swift_once();
  v9 = __swift_project_value_buffer(v0, (uint64_t)qword_254A1A008);
  v10 = &v6[*(int *)(v4 + 24)];
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 16);
  v11(v10, v9, v0);
  v12 = swift_allocObject();
  v13 = *(void **)v6;
  *(_QWORD *)(v12 + 16) = *(_QWORD *)v6;
  *(_BYTE *)(v12 + 24) = v6[8];
  v11(v3, (uint64_t)v10, v0);
  v14 = v13;
  sub_20E400F2C((uint64_t)v6);
  (*(void (**)(uint64_t, char *, uint64_t))(v1 + 32))(v12 + OBJC_IVAR____TtCE18_JetEngine_SwiftUIV9JetEngine12MediaArtwork16URLImageProtocol_allowedURLs, v3, v0);
  return v12;
}

uint64_t MediaArtwork.URLImageProtocol.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (*(_BYTE *)(v0 + 24) == 1)
    objc_msgSend(*(id *)(v0 + 16), sel_invalidateAndCancel);

  v1 = v0 + OBJC_IVAR____TtCE18_JetEngine_SwiftUIV9JetEngine12MediaArtwork16URLImageProtocol_allowedURLs;
  v2 = sub_20E4A4D60();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t MediaArtwork.URLImageProtocol.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (*(_BYTE *)(v0 + 24) == 1)
    objc_msgSend(*(id *)(v0 + 16), sel_invalidateAndCancel);

  v1 = v0 + OBJC_IVAR____TtCE18_JetEngine_SwiftUIV9JetEngine12MediaArtwork16URLImageProtocol_allowedURLs;
  v2 = sub_20E4A4D60();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

void static MediaArtwork.URLImageProtocol._clearCache()()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;

  if (qword_254A180E8 != -1)
    swift_once();
  v0 = qword_254A1A020;
  v1 = (void *)objc_opt_self();
  v3 = (id)v0;
  v2 = objc_msgSend(v1, sel_sharedURLCache);
  sub_20E400F68();
  LOBYTE(v0) = sub_20E4A60B0();

  if ((v0 & 1) == 0)
    objc_msgSend(v3, sel_removeAllCachedResponses);

}

uint64_t MediaArtwork.URLImageProtocol.match(_:)()
{
  return sub_20E4A4D54();
}

uint64_t MediaArtwork.URLImageProtocol.fetch(contentsOf:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  double v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _BYTE v9[16];
  uint64_t v10;
  uint64_t v11;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A038);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *v6 = 1;
  (*(void (**)(_QWORD *, _QWORD, double))(v7 + 104))(v6, *MEMORY[0x24BEE6C98], v4);
  v10 = v1;
  v11 = a1;
  return sub_20E4A5EB8();
}

uint64_t sub_20E3FF374(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  NSObject *v21;
  os_signpost_type_t v22;
  char v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint8_t *v26;
  os_signpost_id_t v27;
  uint8_t *v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  void *v40;
  void *v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  os_unfair_lock_s *v46;
  id v47;
  uint64_t v48;
  float v49;
  double v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  _QWORD aBlock[7];

  v70 = a3;
  v66 = a2;
  v84 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A070);
  v78 = *(_QWORD *)(v3 - 8);
  v79 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v74 = v4;
  v75 = (char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v77 = (char *)&v61 - v6;
  v73 = sub_20E4A5E58();
  v72 = *(_QWORD *)(v73 - 8);
  MEMORY[0x24BDAC7A8](v73);
  v71 = (uint64_t)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A078);
  v69 = *(_QWORD *)(v82 - 8);
  MEMORY[0x24BDAC7A8](v82);
  v67 = v8;
  v68 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A080);
  v64 = *(_QWORD *)(v81 - 8);
  MEMORY[0x24BDAC7A8](v81);
  v65 = v9;
  v63 = (uint64_t)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_20E4A3344();
  v10 = *(_QWORD *)(v62 - 8);
  MEMORY[0x24BDAC7A8](v62);
  v12 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_20E4A3494();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v61 - v18;
  if (qword_254A18110 != -1)
    swift_once();
  v20 = sub_20E4A34B8();
  __swift_project_value_buffer(v20, (uint64_t)qword_254A24688);
  sub_20E4A34AC();
  sub_20E4A3470();
  v21 = sub_20E4A34AC();
  v22 = sub_20E4A6044();
  v23 = sub_20E4A60D4();
  v80 = v13;
  v83 = v19;
  v76 = v14;
  if ((v23 & 1) != 0)
  {
    v24 = v14;
    v25 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
    v25(v16, v83, v13);
    v26 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v26 = 0;
    v27 = sub_20E4A347C();
    _os_signpost_emit_with_name_impl(&dword_20E399000, v21, v22, v27, "Image.Download", "", v26, 2u);
    v28 = v26;
    v13 = v80;
    MEMORY[0x212BBE068](v28, -1, -1);

    v29 = *(void (**)(char *, uint64_t))(v24 + 8);
    v19 = v83;
    v29(v16, v13);
  }
  else
  {

    v25 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
  }
  v25(v16, v19, v13);
  sub_20E4A34E8();
  swift_allocObject();
  v30 = sub_20E4A34DC();
  v66 = (_QWORD *)v66[2];
  v31 = v70;
  sub_20E4A4D18();
  v61 = sub_20E4A3314();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v62);
  v32 = v63;
  sub_20E401F34(v31, v63);
  v33 = v69;
  v34 = v68;
  v35 = v82;
  (*(void (**)(char *, uint64_t, uint64_t))(v69 + 16))(v68, v84, v82);
  v36 = (*(unsigned __int8 *)(v64 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80);
  v37 = (v65 + *(unsigned __int8 *)(v33 + 80) + v36) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  v38 = (v67 + v37 + 7) & 0xFFFFFFFFFFFFFFF8;
  v39 = swift_allocObject();
  sub_20E402078(v32, v39 + v36);
  (*(void (**)(unint64_t, char *, uint64_t))(v33 + 32))(v39 + v37, v34, v35);
  *(_QWORD *)(v39 + v38) = v30;
  aBlock[4] = sub_20E4020C0;
  aBlock[5] = v39;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_20E40082C;
  aBlock[3] = &block_descriptor;
  v40 = _Block_copy(aBlock);
  v69 = v30;
  swift_retain();
  swift_release();
  v41 = (void *)v61;
  v42 = objc_msgSend(v66, sel_dataTaskWithURL_completionHandler_, v61, v40);
  _Block_release(v40);

  v43 = *(_QWORD *)(v31 + *(int *)(v81 + 40));
  v44 = *(_QWORD *)(v43 + 16);
  v45 = v44 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v44 + 16);
  v46 = (os_unfair_lock_s *)(v44 + ((*(unsigned int *)(*(_QWORD *)v44 + 48) + 3) & 0x1FFFFFFFCLL));
  v47 = v42;
  swift_retain();
  os_unfair_lock_lock(v46);
  v48 = v71;
  sub_20E41E34C(v45, v71);
  os_unfair_lock_unlock(v46);
  swift_release();
  v49 = sub_20E4008DC();
  (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v48, v73);
  *(float *)&v50 = v49;
  objc_msgSend(v47, sel_setPriority_, v50);

  swift_allocObject();
  swift_unknownObjectWeakInit();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A088);
  sub_20E39D010(&qword_254A1A090, &qword_254A1A088, MEMORY[0x24BE5E498]);
  sub_20E4A4BE0();
  v51 = v77;
  sub_20E4A4BF8();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
  type metadata accessor for _URLSessionTaskCancelCoordinator();
  v52 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A098);
  v53 = swift_allocObject();
  *(_DWORD *)(v53 + 24) = 0;
  *(_QWORD *)(v53 + 16) = 0;
  *(_QWORD *)(v52 + 16) = v53;
  v55 = v78;
  v54 = v79;
  v56 = v75;
  (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v75, v51, v79);
  v57 = (*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
  v58 = swift_allocObject();
  *(_QWORD *)(v58 + 16) = v52;
  *(_QWORD *)(v58 + 24) = v43;
  (*(void (**)(unint64_t, char *, uint64_t))(v55 + 32))(v58 + v57, v56, v54);
  swift_retain();
  swift_retain();
  sub_20E4A5E94();
  objc_msgSend(v47, sel_resume);
  v59 = *(_QWORD *)(v52 + 16);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v59 + 24));
  sub_20E401C50((void **)(v59 + 16), v47, aBlock);
  os_unfair_lock_unlock((os_unfair_lock_t)(v59 + 24));
  LODWORD(v42) = LOBYTE(aBlock[0]);
  swift_release();
  if ((_DWORD)v42 == 1)
    objc_msgSend(v47, sel_cancel);
  swift_release();

  swift_release();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v51, v54);
  return (*(uint64_t (**)(char *, uint64_t))(v76 + 8))(v83, v80);
}

uint64_t sub_20E3FFB78(uint64_t a1, unint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  id v33;
  id v34;
  id v35;
  char v36;
  const char *v37;
  uint64_t v38;
  NSObject *v39;
  char *v40;
  os_signpost_type_t v41;
  char *v42;
  char *v43;
  char *v44;
  uint64_t v45;
  const char *v46;
  uint64_t v47;
  NSObject *v48;
  os_signpost_type_t v49;
  char v50;
  const char *v51;
  char *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  const char *v56;
  id v57;
  id v58;
  const char *v59;
  uint64_t v60;
  id v61;
  id v62;
  NSObject *v63;
  char *v64;
  int v65;
  char *v66;
  char *v67;
  char *v68;
  uint64_t v69;
  int v70;
  int v71;
  char v72;
  char v73;
  void *v74;
  char v75;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint8_t *v80;
  os_signpost_id_t v81;
  void *v82;
  char v83;
  uint8_t *v84;
  os_signpost_id_t v85;
  void (*v86)(char *, uint64_t);
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  id v92;
  uint64_t v93;
  unint64_t v94;
  unint64_t v95;
  os_signpost_id_t v96;
  void (*v97)(char *, uint64_t);
  uint64_t v98;
  char *v99;
  char *v100;
  char *v101;
  char *v102;
  char *v103;
  char *v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  const char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  __int128 v115;
  char v116;
  __int128 v117;
  char v118;
  id v119;
  char v120;

  v107 = a6;
  v108 = a7;
  v11 = sub_20E4A33E0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v98 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = sub_20E4A34C4();
  v109 = *(const char **)(v105 - 8);
  MEMORY[0x24BDAC7A8](v105);
  v100 = (char *)&v98 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v99 = (char *)&v98 - v17;
  MEMORY[0x24BDAC7A8](v18);
  v101 = (char *)&v98 - v19;
  v20 = sub_20E4A3494();
  v21 = *(_QWORD *)(v20 - 8);
  v110 = v20;
  v111 = v21;
  MEMORY[0x24BDAC7A8](v20);
  v103 = (char *)&v98 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v102 = (char *)&v98 - v24;
  MEMORY[0x24BDAC7A8](v25);
  v106 = (char *)&v98 - v26;
  MEMORY[0x24BDAC7A8](v27);
  v104 = (char *)&v98 - v28;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A0B0);
  v30 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v32 = (char *)&v98 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v115 = a1;
  *((_QWORD *)&v115 + 1) = a2;
  sub_20E4022CC(a1, a2);
  v33 = a4;
  sub_20E4A5960();
  v115 = v117;
  v116 = v118;
  v112 = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A0B8);
  sub_20E4A5954();
  sub_20E40233C((id)v115, *((unint64_t *)&v115 + 1), v116);
  v34 = v119;
  if ((v120 & 1) == 0)
  {
    v114 = (uint64_t)v119;
    sub_20E3D5FEC(v119, 0);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A078);
    sub_20E4A5EA0();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v32, v29);
    v114 = 0;
    sub_20E4A5EAC();
    if (qword_254A18110 != -1)
      swift_once();
    v47 = sub_20E4A34B8();
    __swift_project_value_buffer(v47, (uint64_t)qword_254A24688);
    v48 = sub_20E4A34AC();
    v40 = v104;
    sub_20E4A34D0();
    v49 = sub_20E4A6038();
    v50 = sub_20E4A60D4();
    v51 = v109;
    if ((v50 & 1) != 0)
    {
      swift_retain();
      v52 = v101;
      sub_20E4A34F4();
      v53 = v52;
      swift_release();
      v54 = v52;
      v55 = v105;
      if ((*((unsigned int (**)(char *, uint64_t))v51 + 11))(v54, v105) == *MEMORY[0x24BEE7810])
      {
        v56 = "[Error] Interval already ended";
      }
      else
      {
        (*((void (**)(char *, uint64_t))v51 + 1))(v53, v55);
        v56 = "finished";
      }
      v77 = v110;
      v78 = v111;
      v79 = v106;
      (*(void (**)(char *, char *, uint64_t))(v111 + 16))(v106, v40, v110);
      v80 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v80 = 0;
      v81 = sub_20E4A347C();
      _os_signpost_emit_with_name_impl(&dword_20E399000, v48, v49, v81, "Image.Download", v56, v80, 2u);
      MEMORY[0x212BBE068](v80, -1, -1);

      sub_20E3D271C(v34, 0);
      v82 = v34;
      v83 = 0;
      goto LABEL_26;
    }

    sub_20E3D271C(v34, 0);
    v74 = v34;
    v75 = 0;
LABEL_20:
    sub_20E3D271C(v74, v75);
    return (*(uint64_t (**)(char *, uint64_t))(v111 + 8))(v40, v110);
  }
  v35 = v119;
  sub_20E4A33F8();
  sub_20E39F334(&qword_254A1A0C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF5D8], MEMORY[0x24BDCF5D0]);
  v36 = sub_20E4A32B4();
  sub_20E3D271C(v34, 1);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if ((v36 & 1) != 0)
  {
    v114 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A078);
    sub_20E4A5EAC();
    v37 = v109;
    if (qword_254A18110 != -1)
      swift_once();
    v38 = sub_20E4A34B8();
    __swift_project_value_buffer(v38, (uint64_t)qword_254A24688);
    v39 = sub_20E4A34AC();
    v40 = v102;
    sub_20E4A34D0();
    v41 = sub_20E4A6038();
    if ((sub_20E4A60D4() & 1) != 0)
    {
      swift_retain();
      v42 = v99;
      sub_20E4A34F4();
      v43 = v42;
      swift_release();
      v44 = v42;
      v45 = v105;
      if ((*((unsigned int (**)(char *, uint64_t))v37 + 11))(v44, v105) == *MEMORY[0x24BEE7810])
      {
        v46 = "[Error] Interval already ended";
      }
      else
      {
        (*((void (**)(char *, uint64_t))v37 + 1))(v43, v45);
        v46 = "cancelled";
      }
      v77 = v110;
      v78 = v111;
      v79 = v106;
      (*(void (**)(char *, char *, uint64_t))(v111 + 16))(v106, v40, v110);
      v84 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v84 = 0;
      v85 = sub_20E4A347C();
      _os_signpost_emit_with_name_impl(&dword_20E399000, v39, v41, v85, "Image.Download", v46, v84, 2u);
      MEMORY[0x212BBE068](v84, -1, -1);

      v82 = v34;
      v83 = 1;
LABEL_26:
      sub_20E3D271C(v82, v83);
      v86 = *(void (**)(char *, uint64_t))(v78 + 8);
      v86(v40, v77);
      return ((uint64_t (*)(char *, uint64_t))v86)(v79, v77);
    }

    v74 = v34;
    v75 = 1;
    goto LABEL_20;
  }
  v114 = (uint64_t)v34;
  v57 = v34;
  v58 = v34;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A078);
  sub_20E4A5EAC();
  v59 = v109;
  if (qword_254A18110 != -1)
    swift_once();
  v60 = sub_20E4A34B8();
  __swift_project_value_buffer(v60, (uint64_t)qword_254A24688);
  v61 = v34;
  v62 = v34;
  v63 = sub_20E4A34AC();
  v64 = v103;
  sub_20E4A34D0();
  v65 = sub_20E4A6038();
  if ((sub_20E4A60D4() & 1) != 0)
  {
    swift_retain();
    v66 = v100;
    sub_20E4A34F4();
    v67 = v66;
    swift_release();
    v68 = v66;
    v69 = v105;
    v70 = (*((uint64_t (**)(char *, uint64_t))v59 + 11))(v68, v105);
    v71 = *MEMORY[0x24BEE7810];
    LODWORD(v107) = v65;
    if (v70 == v71)
    {
      v72 = 0;
      v73 = 0;
      v109 = "[Error] Interval already ended";
    }
    else
    {
      (*((void (**)(char *, uint64_t))v59 + 1))(v67, v69);
      v109 = "error=%{public}s";
      v73 = 2;
      v72 = 1;
    }
    v87 = v110;
    v88 = v106;
    (*(void (**)(char *, char *, uint64_t))(v111 + 16))(v106, v64, v110);
    v89 = swift_slowAlloc();
    v90 = swift_slowAlloc();
    v114 = v90;
    *(_BYTE *)v89 = v73;
    *(_BYTE *)(v89 + 1) = v72;
    *(_WORD *)(v89 + 2) = 2082;
    v91 = (void *)sub_20E4A32D8();
    v92 = (id)AMSLogableError();

    v93 = sub_20E4A5C3C();
    v95 = v94;

    v113 = sub_20E45F228(v93, v95, &v114);
    sub_20E4A60F8();
    swift_bridgeObjectRelease();
    sub_20E3D271C(v34, 1);
    sub_20E3D271C(v34, 1);
    v96 = sub_20E4A347C();
    _os_signpost_emit_with_name_impl(&dword_20E399000, v63, (os_signpost_type_t)v107, v96, "Image.Download", v109, (uint8_t *)v89, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x212BBE068](v90, -1, -1);
    MEMORY[0x212BBE068](v89, -1, -1);

    sub_20E3D271C(v34, 1);
    sub_20E3D271C(v34, 1);
    v97 = *(void (**)(char *, uint64_t))(v111 + 8);
    v97(v103, v87);
    return ((uint64_t (*)(char *, uint64_t))v97)(v88, v87);
  }
  else
  {

    sub_20E3D271C(v34, 1);
    sub_20E3D271C(v34, 1);

    return (*(uint64_t (**)(char *, uint64_t))(v111 + 8))(v64, v110);
  }
}

void *sub_20E400530@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  void *result;
  uint64_t inited;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = sub_20E4A33E0();
  MEMORY[0x24BDAC7A8](v4);
  v5 = sub_20E4A3404();
  v15 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *a1;
  v9 = a1[1];
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A080);
  sub_20E4022E0(v8, v9);
  result = sub_20E400750(v8, v9);
  if (result)
  {
    *a2 = result;
  }
  else
  {
    sub_20E4A33C8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254A18B08);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_20E4A8070;
    *(_QWORD *)(inited + 32) = sub_20E4A5C3C();
    *(_QWORD *)(inited + 40) = v12;
    *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(inited + 48) = 0xD000000000000021;
    *(_QWORD *)(inited + 56) = 0x800000020E4CB740;
    *(_QWORD *)(inited + 80) = sub_20E4A5C3C();
    *(_QWORD *)(inited + 88) = v13;
    *(_QWORD *)(inited + 120) = sub_20E4A3344();
    __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)(inited + 96));
    sub_20E4A4D18();
    sub_20E3B50B8(inited);
    sub_20E39F334((unint64_t *)&qword_254A18B10, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF610], MEMORY[0x24BDCF608]);
    sub_20E4A32CC();
    sub_20E4A33EC();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v7, v5);
    return (void *)swift_willThrow();
  }
  return result;
}

void *sub_20E400750(uint64_t a1, unint64_t a2)
{
  const __CFData *v4;
  void *v5;
  CGImageSource *v6;

  v4 = (const __CFData *)sub_20E4A3350();
  v5 = CGImageSourceCreateWithData(v4, 0);

  if (v5)
  {
    if ((uint64_t)CGImageSourceGetCount((CGImageSourceRef)v5) > 0
      && CGImageSourceCreateImageAtIndex((CGImageSourceRef)v5, 0, 0))
    {
      v6 = v5;
      sub_20E400D44(v6);
      v5 = (void *)sub_20E4A4580();
      sub_20E402288(a1, a2);

    }
    else
    {
      sub_20E402288(a1, a2);

      return 0;
    }
  }
  else
  {
    sub_20E402288(a1, a2);
  }
  return v5;
}

uint64_t sub_20E40082C(uint64_t a1, void *a2, void *a3, void *a4)
{
  void *v6;
  void (*v7)(void *, unint64_t, void *, void *);
  id v8;
  unint64_t v9;
  unint64_t v10;
  id v11;
  id v12;

  v6 = a2;
  v7 = *(void (**)(void *, unint64_t, void *, void *))(a1 + 32);
  if (a2)
  {
    swift_retain();
    v8 = v6;
    v6 = (void *)sub_20E4A335C();
    v10 = v9;

  }
  else
  {
    swift_retain();
    v10 = 0xF000000000000000;
  }
  v11 = a3;
  v12 = a4;
  v7(v6, v10, a3, a4);

  sub_20E402274((uint64_t)v6, v10);
  return swift_release();
}

float sub_20E4008DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t);
  float result;
  char v13;
  char v14;
  char v15;
  uint64_t v16;

  v1 = v0;
  v2 = sub_20E4A5E58();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE6990];
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v16 - v9;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v4 + 16))((char *)&v16 - v9, v1, v2, v8);
  sub_20E4A5E10();
  sub_20E39F334(&qword_254A1A0A8, v3, MEMORY[0x24BEE6998]);
  LOBYTE(v3) = sub_20E4A5C0C();
  v11 = *(void (**)(char *, uint64_t))(v4 + 8);
  v11(v6, v2);
  if ((v3 & 1) != 0)
  {
    v11(v10, v2);
    return 1.0;
  }
  else
  {
    sub_20E4A5E40();
    v13 = sub_20E4A5C0C();
    v11(v6, v2);
    if ((v13 & 1) != 0)
    {
      v11(v10, v2);
      return 0.6;
    }
    else
    {
      sub_20E4A5E28();
      v14 = sub_20E4A5C0C();
      v11(v6, v2);
      if ((v14 & 1) != 0)
      {
        v11(v10, v2);
        return 0.4;
      }
      else
      {
        sub_20E4A5E04();
        v15 = sub_20E4A5C0C();
        v11(v6, v2);
        v11(v10, v2);
        result = 0.2;
        if ((v15 & 1) == 0)
          return 0.5;
      }
    }
  }
  return result;
}

void sub_20E400ACC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  double v5;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x212BBE110](v2);
  if (v3)
  {
    v4 = (void *)v3;
    *(float *)&v5 = sub_20E4008DC();
    objc_msgSend(v4, sel_setPriority_, v5);

  }
}

uint64_t sub_20E400B30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  int v9;
  uint64_t v10;
  void *v11;
  uint64_t v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A0A0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))(v8, a1, v4, v6);
  LODWORD(a1) = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v8, v4);
  v9 = *MEMORY[0x24BEE6C58];
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  if ((_DWORD)a1 == v9)
  {
    v10 = *(_QWORD *)(a2 + 16);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v10 + 24));
    v11 = *(void **)(v10 + 16);
    if (v11 == (void *)1)
      v11 = 0;
    else
      *(_QWORD *)(v10 + 16) = 1;
    os_unfair_lock_unlock((os_unfair_lock_t)(v10 + 24));
    swift_release();
    objc_msgSend(v11, sel_cancel);

  }
  return sub_20E4A5B1C();
}

uint64_t sub_20E400C60()
{
  return sub_20E4A4D54();
}

uint64_t sub_20E400C8C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  double v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v10[16];
  uint64_t v11;
  uint64_t v12;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A038);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = &v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = *v1;
  *v6 = 1;
  (*(void (**)(_QWORD *, _QWORD, double))(v8 + 104))(v6, *MEMORY[0x24BEE6C98], v4);
  v11 = v7;
  v12 = a1;
  return sub_20E4A5EB8();
}

uint64_t sub_20E400D44(CGImageSource *a1)
{
  CFDictionaryRef v2;
  CFDictionaryRef v3;
  uint64_t v5;

  v2 = CGImageSourceCopyPropertiesAtIndex(a1, 0, 0);
  if (v2)
  {
    v3 = v2;
    v5 = 0;
    sub_20E4A5B58();

  }
  return 0;
}

uint64_t sub_20E400EB8()
{
  uint64_t result;

  result = sub_20E4014BC();
  qword_254A1A020 = result;
  return result;
}

uint64_t type metadata accessor for MediaArtwork.URLImageProtocol.Configuration(uint64_t a1)
{
  return sub_20E3A4CD0(a1, (uint64_t *)&unk_254A1A060);
}

uint64_t sub_20E400EE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MediaArtwork.URLImageProtocol.Configuration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20E400F2C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MediaArtwork.URLImageProtocol.Configuration(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_20E400F68()
{
  unint64_t result;

  result = qword_254A1A030;
  if (!qword_254A1A030)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_254A1A030);
  }
  return result;
}

uint64_t sub_20E400FA4(uint64_t a1)
{
  uint64_t v1;

  return sub_20E3FF374(a1, *(_QWORD **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_20E400FAC()
{
  return sub_20E39D010(&qword_254A1A040, &qword_254A1A048, MEMORY[0x24BEE6D38]);
}

uint64_t sub_20E400FD8()
{
  return type metadata accessor for MediaArtwork.URLImageProtocol(0);
}

uint64_t type metadata accessor for MediaArtwork.URLImageProtocol(uint64_t a1)
{
  return sub_20E3A4CD0(a1, (uint64_t *)&unk_254A1A050);
}

uint64_t sub_20E400FF4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_20E4A4D60();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for MediaArtwork.URLImageProtocol()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MediaArtwork.URLImageProtocol.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

char *_s16URLImageProtocolC13ConfigurationVwCP(char *a1, char **a2, uint64_t a3)
{
  int v3;
  char *v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t, uint64_t);
  char *v11;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    v5 = a1;
    a1[8] = *((_BYTE *)a2 + 8);
    v6 = *(int *)(a3 + 24);
    v7 = &a1[v6];
    v8 = (uint64_t)a2 + v6;
    v9 = sub_20E4A4D60();
    v10 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    v11 = v4;
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t _s16URLImageProtocolC13ConfigurationVwxx(id *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;

  v4 = (char *)a1 + *(int *)(a2 + 24);
  v5 = sub_20E4A4D60();
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t _s16URLImageProtocolC13ConfigurationVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  id v10;

  v4 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v5 = *(int *)(a3 + 24);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_20E4A4D60();
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  v10 = v4;
  v9(v6, v7, v8);
  return a1;
}

uint64_t _s16URLImageProtocolC13ConfigurationVwca(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *(void **)a2;
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v6;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v9 = *(int *)(a3 + 24);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_20E4A4D60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

uint64_t _s16URLImageProtocolC13ConfigurationVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_20E4A4D60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t _s16URLImageProtocolC13ConfigurationVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_20E4A4D60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t _s16URLImageProtocolC13ConfigurationVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_20E401340(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_20E4A4D60();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t _s16URLImageProtocolC13ConfigurationVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_20E4013C8(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_20E4A4D60();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_20E40143C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_20E4A4D60();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_20E4014BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v0 = sub_20E4A4A90();
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_20E4A5A8C();
  MEMORY[0x24BDAC7A8](v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A0C8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20E400F68();
  sub_20E401780(v4);
  v5 = sub_20E4A3344();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 0, 1, v5);
  return sub_20E4A5FD8();
}

void sub_20E401780(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  void *v15;
  unint64_t v16;
  unint64_t v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  char *v26;
  void (*v27)(char *, uint64_t);
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void *v32;
  id v33;
  id v34;
  uint64_t inited;
  uint64_t v36;
  id v37;
  id v38;
  void (*v39)(char *, uint64_t, uint64_t);
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  id v45;
  unint64_t v46;
  uint64_t v47;

  v44 = a1;
  v47 = *MEMORY[0x24BDAC8D0];
  v1 = sub_20E4A320C();
  MEMORY[0x24BDAC7A8](v1);
  v2 = sub_20E4A3218();
  v40 = *(id *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_20E4A32FC();
  v42 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = sub_20E4A3344();
  v41 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v39 - v11;
  v13 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v14 = objc_msgSend(v13, sel_bundleIdentifier);

  if (v14)
  {
    v15 = (void *)sub_20E4A5C3C();
    v17 = v16;

    v18 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
    v45 = 0;
    v40 = v18;
    v19 = objc_msgSend(v18, sel_URLForDirectory_inDomain_appropriateForURL_create_error_, 13, 1, 0, 0, &v45);
    v20 = v45;
    if (v19)
    {
      v21 = v19;
      sub_20E4A3320();
      v22 = v20;

      v45 = v15;
      v46 = v17;
      v23 = *MEMORY[0x24BDCD790];
      v24 = v42;
      v39 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 104);
      v39(v7, v23, v5);
      sub_20E3C3948();
      sub_20E4A3338();
      v25 = *(void (**)(char *, uint64_t))(v24 + 8);
      v25(v7, v5);
      v26 = v12;
      v27 = *(void (**)(char *, uint64_t))(v41 + 8);
      v28 = v9;
      v29 = v43;
      v27(v28, v43);
      swift_bridgeObjectRelease();
      v45 = (id)0xD000000000000010;
      v46 = 0x800000020E4CB7F0;
      v39(v7, v23, v5);
      v30 = v44;
      v31 = v29;
      sub_20E4A3338();
      v25(v7, v5);
      swift_bridgeObjectRelease();
      v27(v26, v29);
      v32 = (void *)sub_20E4A3314();
      v45 = 0;
      v33 = v40;
      LOBYTE(v29) = objc_msgSend(v40, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v32, 1, 0, &v45);

      if ((v29 & 1) != 0)
      {
        v34 = v45;

      }
      else
      {
        v38 = v45;
        sub_20E4A32E4();

        swift_willThrow();
        v27(v30, v31);
      }
    }
    else
    {
      v37 = v45;
      swift_bridgeObjectRelease();
      sub_20E4A32E4();

      swift_willThrow();
    }
  }
  else
  {
    sub_20E4A3200();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254A18B08);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_20E4A72D0;
    *(_QWORD *)(inited + 32) = sub_20E4A5C3C();
    *(_QWORD *)(inited + 40) = v36;
    *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(inited + 48) = 0xD00000000000002ALL;
    *(_QWORD *)(inited + 56) = 0x800000020E4CB7C0;
    sub_20E3B50B8(inited);
    sub_20E39F334(&qword_254A1A0D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEE8], MEMORY[0x24BDCAEE0]);
    sub_20E4A32CC();
    sub_20E4A31F4();
    (*((void (**)(char *, uint64_t))v40 + 1))(v4, v2);
    swift_willThrow();
  }
}

void **sub_20E401C50@<X0>(void **result@<X0>, void *a2@<X1>, _BYTE *a3@<X8>)
{
  void *v3;
  id v4;
  id v5;

  v3 = *result;
  if (*result)
  {
    if (v3 == (void *)1)
    {
      *a3 = 1;
    }
    else
    {
      v4 = v3;
      sub_20E4A61A0();
      sub_20E4A5C6C();
      sub_20E4A626C();
      sub_20E4A5C6C();
      v5 = objc_msgSend(v4, sel_description);
      sub_20E4A5C3C();

      sub_20E4A5C6C();
      swift_bridgeObjectRelease();
      sub_20E4A5C6C();
      result = (void **)sub_20E4A6290();
      __break(1u);
    }
  }
  else
  {
    *result = a2;
    *a3 = 0;
    return (void **)a2;
  }
  return result;
}

uint64_t sub_20E401DB0()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for _URLSessionTaskCancelCoordinator()
{
  return objc_opt_self();
}

_QWORD *initializeBufferWithCopyOfBuffer for _URLSessionTaskCancelCoordinator.State(_QWORD *a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF)
    v4 = v3;
  *a1 = v3;
  return a1;
}

void destroy for _URLSessionTaskCancelCoordinator.State(void **a1)
{
  void *v1;

  v1 = *a1;
  if ((unint64_t)v1 >= 0xFFFFFFFF)

}

void **assignWithCopy for _URLSessionTaskCancelCoordinator.State(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *a1;
  v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
  {
    if ((unint64_t)v4 >= 0xFFFFFFFF)
    {
      *a1 = v4;
      v6 = v4;
      return a1;
    }
LABEL_7:
    *a1 = v4;
    return a1;
  }
  if ((unint64_t)v4 < 0xFFFFFFFF)
  {

    v4 = *a2;
    goto LABEL_7;
  }
  *a1 = v4;
  v5 = v4;

  return a1;
}

void **assignWithTake for _URLSessionTaskCancelCoordinator.State(void **a1, unint64_t *a2)
{
  void *v3;
  unint64_t v4;

  v3 = *a1;
  v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
    goto LABEL_6;
  if (v4 < 0xFFFFFFFF)
  {

LABEL_6:
    *a1 = (void *)v4;
    return a1;
  }
  *a1 = (void *)v4;

  return a1;
}

ValueMetadata *type metadata accessor for _URLSessionTaskCancelCoordinator.State()
{
  return &type metadata for _URLSessionTaskCancelCoordinator.State;
}

uint64_t sub_20E401F34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A080);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20E401F7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A080);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A078);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_bridgeObjectRelease();
  v8 = v0 + v3 + *(int *)(v1 + 28);
  v9 = sub_20E4A4D3C();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E402078(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A080);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20E4020C0(uint64_t a1, unint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v4;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;

  v9 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254A1A080) - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = *(_QWORD *)(v9 + 64);
  v12 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254A1A078) - 8);
  v13 = (v10 + v11 + *(unsigned __int8 *)(v12 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  return sub_20E3FFB78(a1, a2, a3, a4, v4 + v10, v4 + v13, *(_QWORD *)(v4 + ((*(_QWORD *)(v12 + 64) + v13 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t sub_20E402184()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_20E4021A8(uint64_t a1)
{
  uint64_t v1;

  sub_20E400ACC(a1, v1);
}

uint64_t sub_20E4021B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A070);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_20E402230(uint64_t a1)
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A070);
  return sub_20E400B30(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_20E402274(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_20E402288(a1, a2);
  return a1;
}

uint64_t sub_20E402288(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t sub_20E4022CC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_20E4022E0(a1, a2);
  return a1;
}

uint64_t sub_20E4022E0(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

void *sub_20E402324@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_20E400530(a1, a2);
}

void sub_20E40233C(id a1, unint64_t a2, char a3)
{
  if ((a3 & 1) != 0)

  else
    sub_20E402288((uint64_t)a1, a2);
}

uint64_t sub_20E402348(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED2A38);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20E402390()
{
  uint64_t v1;

  sub_20E4048CC();
  sub_20E4A3C08();
  return v1;
}

uint64_t sub_20E4023C8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  void (*v43)(char *, uint64_t);
  unint64_t v44;
  char *v45;
  char *v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD v65[2];
  _QWORD v66[2];
  _QWORD v67[3];
  _QWORD v68[2];
  _QWORD v69[2];
  _QWORD v70[2];
  _QWORD v71[2];
  _QWORD v72[3];

  v63 = a5;
  v59 = a3;
  v58 = a2;
  v64 = a6;
  v8 = type metadata accessor for _OnScenePhaseChange(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (uint64_t *)((char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v11);
  v55 = (uint64_t)&v54 - v12;
  v13 = sub_20E4A39D4();
  v56 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v57 = (char *)&v54 - v17;
  v18 = sub_20E4A39D4();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v54 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v54 - v23;
  v25 = sub_20E4A3E00();
  v61 = *(_QWORD *)(v25 - 8);
  v62 = v25;
  MEMORY[0x24BDAC7A8](v25);
  v60 = (char *)&v54 - v26;
  if (a1)
  {
    v67[0] = v58;
    v67[1] = v59;
    v67[2] = a1;
    v27 = a1;
    v28 = v63;
    MEMORY[0x212BBBA70](v67, a4, &type metadata for _OnUIScenePhaseChange, v63);
    v29 = sub_20E3A50B4();
    v66[0] = v28;
    v66[1] = v29;
    v30 = MEMORY[0x24BDED308];
    v31 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v18, v66);
    sub_20E39D614(v24, v21, v18, v31);
    v32 = *(void (**)(char *, uint64_t))(v19 + 8);
    v33 = v28;
    v32(v21, v18);
    sub_20E39D618((uint64_t)v24, v18, (uint64_t)v21);
    v34 = sub_20E39F334(&qword_253ED21C0, type metadata accessor for _OnScenePhaseChange, (uint64_t)&unk_20E4AAC48);
    v65[0] = v28;
    v65[1] = v34;
    MEMORY[0x212BBDF90](v30, v13, v65);
    v35 = (uint64_t)v60;
    sub_20E3DC6B0((uint64_t)v21, v18);

    v32(v21, v18);
    v32(v24, v18);
  }
  else
  {
    v36 = (_QWORD *)((char *)v10 + *(int *)(v8 + 20));
    *v36 = swift_getKeyPath();
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED23A0);
    swift_storeEnumTagMultiPayload();
    v37 = v59;
    *v10 = v58;
    v10[1] = v37;
    v38 = v55;
    sub_20E4043A4((uint64_t)v10, v55);
    swift_retain();
    v33 = v63;
    MEMORY[0x212BBBA70](v38, a4, v8, v63);
    sub_20E404674(v38);
    v39 = sub_20E39F334(&qword_253ED21C0, type metadata accessor for _OnScenePhaseChange, (uint64_t)&unk_20E4AAC48);
    v72[0] = v33;
    v72[1] = v39;
    v40 = MEMORY[0x24BDED308];
    v41 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v13, v72);
    v42 = v57;
    sub_20E39D614(v57, v15, v13, v41);
    v43 = *(void (**)(char *, uint64_t))(v56 + 8);
    v43(v15, v13);
    sub_20E39D618((uint64_t)v42, v13, (uint64_t)v15);
    v44 = sub_20E3A50B4();
    v71[0] = v33;
    v71[1] = v44;
    MEMORY[0x212BBDF90](v40, v18, v71);
    v45 = v60;
    sub_20E39CBE0((uint64_t)v15, v18, v13);
    v46 = v15;
    v35 = (uint64_t)v45;
    v43(v46, v13);
    v43(v42, v13);
  }
  v47 = sub_20E3A50B4();
  v70[0] = v33;
  v70[1] = v47;
  v48 = MEMORY[0x24BDED308];
  v49 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v18, v70);
  v50 = sub_20E39F334(&qword_253ED21C0, type metadata accessor for _OnScenePhaseChange, (uint64_t)&unk_20E4AAC48);
  v69[0] = v33;
  v69[1] = v50;
  v51 = MEMORY[0x212BBDF90](v48, v13, v69);
  v68[0] = v49;
  v68[1] = v51;
  v52 = v62;
  MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v62, v68);
  sub_20E39D618(v35, v52, v64);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v61 + 8))(v35, v52);
}

uint64_t sub_20E4028C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD v12[2];

  v12[1] = a1;
  v3 = *(_QWORD *)(a2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x24BDAC7A8](a1);
  v5 = sub_20E4A3668();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20E45D10C((uint64_t)v8);
  sub_20E4042B0(v2, (uint64_t)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v10 = swift_allocObject();
  sub_20E4043A4((uint64_t)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v10 + v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED05E8);
  sub_20E39D010(&qword_253ED05E0, &qword_253ED05E8, MEMORY[0x24BDEFB78]);
  sub_20E39F334(&qword_253ED2398, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB1F0], MEMORY[0x24BDEB200]);
  sub_20E4A44CC();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_20E402A54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  id v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t (**v20)(uint64_t);
  void (*v21)(char *, uint64_t);
  id v22;
  id v23;
  uint64_t (*v24)(uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t (**v27)(uint64_t);
  id v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v31 = a2;
  v32 = a1;
  v33 = a5;
  v8 = sub_20E4A605C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED23C0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (void *)objc_opt_self();
  v16 = objc_msgSend(v15, sel_defaultCenter);
  sub_20E4A6068();

  v17 = (uint64_t (*)(uint64_t))swift_allocObject();
  *((_QWORD *)v17 + 2) = a2;
  *((_QWORD *)v17 + 3) = a3;
  *((_QWORD *)v17 + 4) = a4;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED23D8);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v14, v32, v18);
  v19 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v19(&v14[*(int *)(v12 + 52)], v11, v8);
  v20 = (uint64_t (**)(uint64_t))&v14[*(int *)(v12 + 56)];
  *v20 = sub_20E4041F0;
  v20[1] = v17;
  v21 = *(void (**)(char *, uint64_t))(v9 + 8);
  swift_retain();
  v22 = a4;
  v21(v11, v8);
  v23 = objc_msgSend(v15, sel_defaultCenter);
  sub_20E4A6068();

  v24 = (uint64_t (*)(uint64_t))swift_allocObject();
  *((_QWORD *)v24 + 2) = v31;
  *((_QWORD *)v24 + 3) = a3;
  *((_QWORD *)v24 + 4) = v22;
  v25 = v33;
  sub_20E404268((uint64_t)v14, v33);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED23D0);
  v19((char *)(v25 + *(int *)(v26 + 52)), v11, v8);
  v27 = (uint64_t (**)(uint64_t))(v25 + *(int *)(v26 + 56));
  *v27 = sub_20E404244;
  v27[1] = v24;
  swift_retain();
  v28 = v22;
  v21(v11, v8);
  return sub_20E39D1F8((uint64_t)v14, &qword_253ED23C0);
}

uint64_t sub_20E402CBC(uint64_t a1, void (*a2)(char *), uint64_t a3, uint64_t a4, unsigned int *a5)
{
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;

  v7 = sub_20E4A3668();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, double))(v8 + 104))(v11, *a5, v7, v9);
  a2(v11);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t sub_20E402D58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_20E402A54(a1, *(_QWORD *)v2, *(_QWORD *)(v2 + 8), *(void **)(v2 + 16), a2);
}

uint64_t View.jetSceneSession(_:)(void *a1)
{
  id v2;

  swift_getKeyPath();
  v2 = objc_msgSend(a1, sel_scene);
  type metadata accessor for JetSceneSession(0);
  swift_allocObject();
  sub_20E402FB4((uint64_t)v2);
  sub_20E4A4250();
  swift_release();
  return swift_release();
}

{
  id v2;

  swift_getKeyPath();
  type metadata accessor for JetSceneSession(0);
  swift_allocObject();
  v2 = a1;
  sub_20E402FB4((uint64_t)a1);
  sub_20E4A4250();
  swift_release();
  return swift_release();
}

uint64_t type metadata accessor for JetSceneSession(uint64_t a1)
{
  return sub_20E3A4CD0(a1, qword_253ED1EF0);
}

uint64_t sub_20E402F00()
{
  sub_20E4049EC();
  return sub_20E4A389C();
}

uint64_t sub_20E402F50()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_20E4A35CC();
  swift_release();
  return swift_release();
}

uint64_t sub_20E402FB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *);
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  _QWORD *v29;
  char *v30;
  void *v31;
  _QWORD *v32;
  char *v33;
  void *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  id v44;
  unsigned int v45;
  uint64_t v46;
  char *v47;
  uint64_t v49;
  id v50;
  uint64_t *v51;
  void (*v52)(char *, uint64_t, uint64_t);
  unsigned int v53;
  unsigned int v54;
  void (*v55)(char *, uint64_t);
  void (*v56)(char *, char *, uint64_t);
  char *v57;
  char *v58;
  uint64_t v59;
  unsigned int v60;
  uint64_t v61;

  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A10);
  v3 = *(_QWORD *)(v59 - 8);
  MEMORY[0x24BDAC7A8](v59);
  v5 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_20E4A3668();
  v7 = *(_QWORD **)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v57 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v49 - v10;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v49 - v13;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v1 + 24) = MEMORY[0x24BEE4AF8];
  v61 = v1;
  v15 = v1 + OBJC_IVAR____TtC18_JetEngine_SwiftUI15JetSceneSession__scenePhase;
  v16 = (void (*)(char *))v7[13];
  v60 = *MEMORY[0x24BDEB1D0];
  v16(v14);
  v56 = (void (*)(char *, char *, uint64_t))v7[2];
  v56(v11, v14, v6);
  sub_20E4A359C();
  v17 = (void (*)(char *, uint64_t))v7[1];
  v58 = v14;
  v17(v14, v6);
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v15, v5, v59);
  swift_unknownObjectWeakAssign();
  v59 = a1;
  if (a1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0D68);
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0D40);
    v19 = *(_QWORD *)(v18 - 8);
    v20 = *(_QWORD *)(v19 + 72);
    v21 = *(unsigned __int8 *)(v19 + 80);
    v55 = v17;
    v22 = (v21 + 32) & ~v21;
    v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_20E4A8050;
    v24 = (_QWORD *)(v23 + v22);
    v25 = v23 + v22 + *(int *)(v18 + 48);
    v50 = (id)*MEMORY[0x24BEBE6E8];
    *v24 = v50;
    v54 = *MEMORY[0x24BDEB1E0];
    v16((char *)v25);
    v26 = v23 + v22 + v20 + *(int *)(v18 + 48);
    v27 = (void *)*MEMORY[0x24BEBE708];
    *(_QWORD *)((char *)v24 + v20) = *MEMORY[0x24BEBE708];
    v53 = *MEMORY[0x24BDEB1E8];
    v28 = v53;
    ((void (*)(uint64_t, _QWORD, uint64_t))v16)(v26, v53, v6);
    v29 = (_QWORD *)((char *)v24 + 2 * v20);
    v30 = (char *)v29 + *(int *)(v18 + 48);
    v31 = (void *)*MEMORY[0x24BEBE710];
    *v29 = *MEMORY[0x24BEBE710];
    ((void (*)(char *, uint64_t, uint64_t))v16)(v30, v28, v6);
    v32 = (_QWORD *)((char *)v24 + 3 * v20);
    v33 = (char *)v32 + *(int *)(v18 + 48);
    v34 = (void *)*MEMORY[0x24BEBE6F0];
    *v32 = *MEMORY[0x24BEBE6F0];
    v35 = ((uint64_t (*)(char *, _QWORD, uint64_t))v16)(v33, v60, v6);
    v51 = &v49;
    MEMORY[0x24BDAC7A8](v35);
    v52 = (void (*)(char *, uint64_t, uint64_t))v16;
    v36 = (void *)v59;
    v37 = v61;
    *(&v49 - 2) = v59;
    *(&v49 - 1) = v37;
    v38 = v50;
    v39 = v27;
    v40 = v31;
    v41 = v34;
    v42 = v36;
    v43 = sub_20E4046B8(v23, (void (*)(_OWORD *__return_ptr, _QWORD, char *))sub_20E4046B0);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    *(_QWORD *)(v37 + 24) = v43;
    swift_bridgeObjectRelease();
    v44 = objc_msgSend(v42, sel_activationState);
    v45 = v54;
    if (v44)
      v45 = v60;
    if (v44 == (id)1)
      v46 = v53;
    else
      v46 = v45;
    v47 = v57;
    v52(v57, v46, v6);
    swift_getKeyPath();
    swift_getKeyPath();
    v56(v58, v47, v6);
    swift_retain();
    sub_20E4A35D8();
    v55(v47, v6);

  }
  return v61;
}

uint64_t sub_20E4033D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  _QWORD aBlock[6];

  v17 = a1;
  v18 = a3;
  v6 = sub_20E4A3668();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v6);
  v9 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  v10 = objc_msgSend((id)objc_opt_self(), sel_mainQueue);
  v11 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v6);
  v12 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v11;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v13 + v12, (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  aBlock[4] = sub_20E404874;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_20E403768;
  aBlock[3] = &block_descriptor_0;
  v14 = _Block_copy(aBlock);
  swift_release();
  v15 = objc_msgSend(v9, sel_addObserverForName_object_queue_usingBlock_, v17, v18, v10, v14);
  _Block_release(v14);

  result = swift_getObjectType();
  a4[3] = result;
  *a4 = v15;
  return result;
}

uint64_t sub_20E4035AC(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  char v12;
  void (*v13)(char *, uint64_t);
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;

  v4 = sub_20E4A3668();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v15 - v9;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_20E4A35CC();
    swift_release();
    swift_release();
    sub_20E39F334(&qword_253ED2398, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB1F0], MEMORY[0x24BDEB200]);
    v12 = sub_20E4A5C0C();
    v13 = *(void (**)(char *, uint64_t))(v5 + 8);
    v13(v10, v4);
    if ((v12 & 1) == 0)
    {
      v14 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
      v14(v10, a3, v4);
      swift_getKeyPath();
      swift_getKeyPath();
      v14(v7, v10, v4);
      swift_retain();
      sub_20E4A35D8();
      v13(v10, v4);
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_20E403768(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void (*v6)(char *);
  uint64_t v8;

  v2 = sub_20E4A3230();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void (**)(char *))(a1 + 32);
  sub_20E4A3224();
  swift_retain();
  v6(v5);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_20E40380C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[4];

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = (void *)objc_opt_self();
    v4 = v1 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_20E3BB3A0(v4, (uint64_t)v9);
      v5 = objc_msgSend(v3, sel_defaultCenter);
      __swift_project_boxed_opaque_existential_1(v9, v9[3]);
      objc_msgSend(v5, sel_removeObserver_, sub_20E4A6350());

      swift_unknownObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
      v4 += 32;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  swift_unknownObjectWeakDestroy();
  swift_bridgeObjectRelease();
  v6 = v0 + OBJC_IVAR____TtC18_JetEngine_SwiftUI15JetSceneSession__scenePhase;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A10);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  return swift_deallocClassInstance();
}

uint64_t sub_20E403944()
{
  return type metadata accessor for JetSceneSession(0);
}

void sub_20E40394C()
{
  unint64_t v0;

  sub_20E404058(319, &qword_253ED2388, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9EF0]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_20E4039E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253ED0C10);
  v2 = sub_20E4A39D4();
  v4[0] = v1;
  v4[1] = sub_20E39D010(&qword_253ED0C08, &qword_253ED0C10, MEMORY[0x24BDF1028]);
  return MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v2, v4);
}

_QWORD *sub_20E403A60(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *a1 = v5;
    a1 = (_QWORD *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v6 = a2[1];
    *a1 = v5;
    a1[1] = v6;
    v7 = *(int *)(a3 + 20);
    v8 = (_QWORD *)((char *)a1 + v7);
    v9 = (uint64_t *)((char *)a2 + v7);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED23A0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_20E4A3668();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_20E403B40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release();
  v4 = a1 + *(int *)(a2 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED23A0);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v5 = sub_20E4A3668();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_20E403BB8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (_QWORD *)((char *)a1 + v5);
  v7 = (_QWORD *)((char *)a2 + v5);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED23A0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_20E4A3668();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  else
  {
    *v6 = *v7;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_20E403C60(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 20);
    v8 = (_QWORD *)((char *)a1 + v7);
    v9 = (_QWORD *)((char *)a2 + v7);
    sub_20E39D1F8((uint64_t)a1 + v7, &qword_253ED23A0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED23A0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_20E4A3668();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_20E403D34(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED23A0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_20E4A3668();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  return a1;
}

_OWORD *sub_20E403DDC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  swift_release();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    sub_20E39D1F8((uint64_t)a1 + v6, &qword_253ED23A0);
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED23A0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_20E4A3668();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_20E403EAC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_20E403EB8(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A0D8);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_20E403F38()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_20E403F44(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A0D8);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for _OnScenePhaseChange(uint64_t a1)
{
  return sub_20E3A4CD0(a1, (uint64_t *)&unk_253ED21C8);
}

void sub_20E403FD0()
{
  unint64_t v0;

  sub_20E404058(319, &qword_253ED23A8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_20E404058(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_20E4A3668();
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

void destroy for _OnUIScenePhaseChange(uint64_t a1)
{
  swift_release();

}

_QWORD *_s18_JetEngine_SwiftUI21_OnUIScenePhaseChangeVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  void *v4;
  id v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = (void *)a2[2];
  a1[2] = v4;
  swift_retain();
  v5 = v4;
  return a1;
}

_QWORD *assignWithCopy for _OnUIScenePhaseChange(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  v5 = (void *)a2[2];
  v6 = (void *)a1[2];
  a1[2] = v5;
  v7 = v5;

  return a1;
}

uint64_t assignWithTake for _OnUIScenePhaseChange(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  v4 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  return a1;
}

ValueMetadata *type metadata accessor for _OnUIScenePhaseChange()
{
  return &type metadata for _OnUIScenePhaseChange;
}

uint64_t sub_20E4041C0(uint64_t *a1, uint64_t *a2)
{
  return sub_20E404598(*a1, *a2);
}

uint64_t sub_20E4041CC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E4041DC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E4041F0(uint64_t a1)
{
  uint64_t v1;

  return sub_20E402CBC(a1, *(void (**)(char *))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), MEMORY[0x24BDEB1E0]);
}

uint64_t objectdestroyTm_0()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_20E404244(uint64_t a1)
{
  uint64_t v1;

  return sub_20E402CBC(a1, *(void (**)(char *))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), MEMORY[0x24BDEB1D0]);
}

uint64_t sub_20E404268(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED23C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20E4042B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for _OnScenePhaseChange(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20E4042F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for _OnScenePhaseChange(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_release();
  v3 = v0 + ((v2 + 16) & ~v2) + *(int *)(v1 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED23A0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_20E4A3668();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_20E4043A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for _OnScenePhaseChange(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20E4043E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for _OnScenePhaseChange(0) - 8) + 80);
  return (*(uint64_t (**)(uint64_t))(v2 + ((v4 + 16) & ~v4)))(a2);
}

uint64_t sub_20E40442C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_20E4A35CC();
  swift_release();
  return swift_release();
}

uint64_t sub_20E404494(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  void (*v10)(char *, uint64_t, uint64_t, double);
  uint64_t v12;

  v2 = sub_20E4A3668();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v12 - v8;
  v10 = *(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16);
  v10((char *)&v12 - v8, a1, v2, v7);
  swift_getKeyPath();
  swift_getKeyPath();
  ((void (*)(char *, char *, uint64_t))v10)(v5, v9, v2);
  swift_retain();
  sub_20E4A35D8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v9, v2);
}

uint64_t sub_20E404598(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;
  char v7;

  v3 = (void *)MEMORY[0x212BBE110](a1 + 16);
  v4 = MEMORY[0x212BBE110](a2 + 16);
  v5 = (void *)v4;
  if (v3)
  {
    if (!v4)
    {
      v7 = 0;
      goto LABEL_8;
    }
    sub_20E404630();
    v6 = v3;
    v7 = sub_20E4A60B0();

  }
  else
  {
    if (!v4)
    {
      v7 = 1;
      return v7 & 1;
    }
    v7 = 0;
  }
  v3 = v5;
LABEL_8:

  return v7 & 1;
}

unint64_t sub_20E404630()
{
  unint64_t result;

  result = qword_253ED0D48;
  if (!qword_253ED0D48)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_253ED0D48);
  }
  return result;
}

uint64_t sub_20E404674(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for _OnScenePhaseChange(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20E4046B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;

  return sub_20E4033D4(a1, a2, *(_QWORD *)(v3 + 16), a3);
}

uint64_t sub_20E4046B8(uint64_t a1, void (*a2)(_OWORD *__return_ptr, _QWORD, char *))
{
  int64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _OWORD v13[2];
  uint64_t v14;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v14 = MEMORY[0x24BEE4AF8];
    sub_20E3ECEB0(0, v2, 0);
    v3 = v14;
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0D40);
    v7 = *(_QWORD *)(v6 - 8);
    v8 = (char *)(a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)));
    v9 = *(_QWORD *)(v7 + 72);
    do
    {
      a2(v13, *(_QWORD *)v8, &v8[*(int *)(v6 + 48)]);
      v14 = v3;
      v11 = *(_QWORD *)(v3 + 16);
      v10 = *(_QWORD *)(v3 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_20E3ECEB0(v10 > 1, v11 + 1, 1);
        v3 = v14;
      }
      v8 += v9;
      *(_QWORD *)(v3 + 16) = v11 + 1;
      sub_20E3B8B34(v13, (_OWORD *)(v3 + 32 * v11 + 32));
      --v2;
    }
    while (v2);
  }
  return v3;
}

uint64_t sub_20E4047DC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_20E404800()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_20E4A3668();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_20E404874(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_20E4A3668() - 8) + 80);
  return sub_20E4035AC(a1, *(_QWORD *)(v1 + 16), (char *)(v1 + ((v3 + 24) & ~v3)));
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

unint64_t sub_20E4048CC()
{
  unint64_t result;

  result = qword_253ED21A8;
  if (!qword_253ED21A8)
  {
    result = MEMORY[0x212BBDF90](&unk_20E4AAD74, &type metadata for JetSceneSessionKey);
    atomic_store(result, (unint64_t *)&qword_253ED21A8);
  }
  return result;
}

ValueMetadata *type metadata accessor for JetSceneSessionKey()
{
  return &type metadata for JetSceneSessionKey;
}

uint64_t sub_20E404920()
{
  return sub_20E39D010(&qword_253ED23C8, &qword_253ED23D0, MEMORY[0x24BDEDA68]);
}

uint64_t sub_20E40494C()
{
  uint64_t (*v0)(uint64_t);

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253ED05E8);
  sub_20E4A3668();
  v0 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEB1F0];
  sub_20E39D010(&qword_253ED05E0, &qword_253ED05E8, MEMORY[0x24BDEFB78]);
  sub_20E39F334(&qword_253ED2398, v0, MEMORY[0x24BDEB200]);
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_20E4049EC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_253ED0648;
  if (!qword_253ED0648)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253ED0640);
    v2 = sub_20E39F334(&qword_253ED0638, type metadata accessor for JetSceneSession, (uint64_t)&unk_20E4AABE8);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BEE4AB8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_253ED0648);
  }
  return result;
}

uint64_t sub_20E404A68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t);
  int v18;
  uint64_t *v19;
  char v20;
  void (*v21)(char *, uint64_t);
  uint64_t v23;

  v0 = sub_20E4A3EF0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18568);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18570);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v23 - v11;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v23 - v14;
  sub_20E4A3B90();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v12, *MEMORY[0x24BDEFEF0], v0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1 + 56))(v12, 0, 1, v0);
  v16 = (uint64_t)&v6[*(int *)(v4 + 48)];
  sub_20E3AE2F4((uint64_t)v15, (uint64_t)v6);
  sub_20E3AE2F4((uint64_t)v12, v16);
  v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 48);
  if (v17((uint64_t)v6, 1, v0) == 1)
  {
    sub_20E39D1F8((uint64_t)v12, &qword_254A18570);
    sub_20E39D1F8((uint64_t)v15, &qword_254A18570);
    v18 = v17(v16, 1, v0);
    if (v18 == 1)
      v19 = &qword_254A18570;
    else
      v19 = &qword_254A18568;
    if (v18 == 1)
      v20 = -1;
    else
      v20 = 0;
  }
  else
  {
    sub_20E3AE2F4((uint64_t)v6, (uint64_t)v9);
    if (v17(v16, 1, v0) == 1)
    {
      sub_20E39D1F8((uint64_t)v12, &qword_254A18570);
      sub_20E39D1F8((uint64_t)v15, &qword_254A18570);
      (*(void (**)(char *, uint64_t))(v1 + 8))(v9, v0);
      v20 = 0;
      v19 = &qword_254A18568;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v1 + 32))(v3, v16, v0);
      sub_20E405888();
      v20 = sub_20E4A5C0C();
      v21 = *(void (**)(char *, uint64_t))(v1 + 8);
      v21(v3, v0);
      v19 = &qword_254A18570;
      sub_20E39D1F8((uint64_t)v12, &qword_254A18570);
      sub_20E39D1F8((uint64_t)v15, &qword_254A18570);
      v21(v9, v0);
    }
  }
  sub_20E39D1F8((uint64_t)v6, v19);
  return v20 & 1;
}

uint64_t View.flowSideBar<A, B>(title:header:footer:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  _QWORD *v16;
  _QWORD *v17;

  swift_getKeyPath();
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a8;
  v16[3] = a9;
  v16[4] = a11;
  v16[5] = a12;
  v16[6] = a3;
  v16[7] = a4;
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = a8;
  v17[3] = a9;
  v17[4] = a11;
  v17[5] = a12;
  v17[6] = a5;
  v17[7] = a6;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_20E4A4250();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

double sub_20E404E64@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;
  __int128 v4;
  __int128 v5;

  sub_20E405844();
  sub_20E4A3C08();
  result = *(double *)&v3;
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  return result;
}

double sub_20E404EB4@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;
  __int128 v4;
  __int128 v5;

  sub_20E405844();
  sub_20E4A3C08();
  result = *(double *)&v3;
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  return result;
}

uint64_t sub_20E404F0C(uint64_t *a1)
{
  sub_20E405808(*a1);
  sub_20E405844();
  return sub_20E4A3C14();
}

uint64_t View.flowSideBar<A, B, C>(title:header:footer:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v17;
  uint64_t v18;
  double v19;
  char *v20;
  unint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v34 = a5;
  v32 = a3;
  v33 = a4;
  v30 = a9;
  v31 = a2;
  v29 = a14;
  v27 = a6;
  v28 = a12;
  v17 = *(_QWORD *)(a7 - 8);
  v18 = *(_QWORD *)(v17 + 64);
  v19 = MEMORY[0x24BDAC7A8](a1);
  v20 = (char *)&v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v17 + 16))(v20, v19);
  v21 = (*(unsigned __int8 *)(v17 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v22 = (char *)swift_allocObject();
  *((_QWORD *)v22 + 2) = a6;
  *((_QWORD *)v22 + 3) = a7;
  *((_QWORD *)v22 + 4) = a8;
  *((_QWORD *)v22 + 5) = a10;
  v23 = v28;
  v24 = v29;
  *((_QWORD *)v22 + 6) = a11;
  *((_QWORD *)v22 + 7) = v23;
  *((_QWORD *)v22 + 8) = a13;
  *((_QWORD *)v22 + 9) = v24;
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(&v22[v21], v20, a7);
  View.flowSideBar<A, B>(title:header:footer:)((uint64_t)sub_20E40517C, (uint64_t)v22, v31, v32, v33, v34, v27, a8, a10, a11, a13, v24);
  return swift_release();
}

uint64_t sub_20E4050A4(uint64_t a1)
{
  double v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v1 = MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *, double))(v3 + 16))((char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v1);
  return sub_20E4A41C0();
}

uint64_t sub_20E405124()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_20E40517C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 80);
  return sub_20E4050A4(v0 + ((v1 + 80) & ~v1));
}

uint64_t View.flowSideBar<A, B>(title:header:footer:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v18;

  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = a1;
  *(_QWORD *)(v18 + 24) = a2;
  *(_BYTE *)(v18 + 32) = a3;
  *(_QWORD *)(v18 + 40) = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  View.flowSideBar<A, B>(title:header:footer:)((uint64_t)sub_20E405344, v18, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
  return swift_release();
}

uint64_t sub_20E40529C()
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_20E4A41B4();
}

uint64_t sub_20E405318()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_20E405344()
{
  return sub_20E40529C();
}

uint64_t sub_20E405354(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 24);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1A0E0);
  v2 = sub_20E4A39D4();
  v4[0] = v1;
  v4[1] = sub_20E4053B8();
  return MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v2, v4);
}

unint64_t sub_20E4053B8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254A1A0E8;
  if (!qword_254A1A0E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1A0E0);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDF1028], v1);
    atomic_store(result, (unint64_t *)&qword_254A1A0E8);
  }
  return result;
}

uint64_t sub_20E405404(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 32);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1A0E0);
  v2 = sub_20E4A39D4();
  v4[0] = v1;
  v4[1] = sub_20E4053B8();
  return MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v2, v4);
}

uint64_t destroy for FlowSidebarConfiguration()
{
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for FlowSidebarConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = v3;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for FlowSidebarConfiguration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_release();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_retain();
  swift_release();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

_OWORD *assignWithTake for FlowSidebarConfiguration(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  a1[2] = a2[2];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for FlowSidebarConfiguration(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FlowSidebarConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FlowSidebarConfiguration()
{
  return &type metadata for FlowSidebarConfiguration;
}

uint64_t sub_20E405680(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  void (*v8)(double);
  uint64_t v9;
  uint64_t v11;

  v4 = *(_QWORD *)(a3 - 8);
  v5 = MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8(v5);
  v9 = sub_20E3C3B10((uint64_t)v7);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, a3);
  return v9;
}

uint64_t sub_20E405714()
{
  return sub_20E4057E4((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_20E405680);
}

uint64_t sub_20E405720(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  void (*v9)(double);
  uint64_t v10;
  uint64_t v12;

  v5 = *(_QWORD *)(a4 - 8);
  v6 = MEMORY[0x24BDAC7A8](a1);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9(v6);
  v10 = sub_20E3C3B10((uint64_t)v8);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, a4);
  return v10;
}

uint64_t sub_20E4057B4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E4057D8()
{
  return sub_20E4057E4((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_20E405720);
}

uint64_t sub_20E4057E4(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[6], v1[7], v1[2], v1[3], v1[4], v1[5]);
}

double sub_20E4057F8@<D0>(_OWORD *a1@<X8>)
{
  double result;

  result = 0.0;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t sub_20E405808(uint64_t result)
{
  if (result)
  {
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

unint64_t sub_20E405844()
{
  unint64_t result;

  result = qword_254A1A0F0;
  if (!qword_254A1A0F0)
  {
    result = MEMORY[0x212BBDF90](&unk_20E4AAE1C, &type metadata for FlowSidebarConfigurationKey);
    atomic_store(result, (unint64_t *)&qword_254A1A0F0);
  }
  return result;
}

unint64_t sub_20E405888()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254A18580;
  if (!qword_254A18580)
  {
    v1 = sub_20E4A3EF0();
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDEFF08], v1);
    atomic_store(result, (unint64_t *)&qword_254A18580);
  }
  return result;
}

ValueMetadata *type metadata accessor for FlowSidebarConfigurationKey()
{
  return &type metadata for FlowSidebarConfigurationKey;
}

uint64_t sub_20E4058E4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v0 = type metadata accessor for FlowAlertAuthority.Presented(0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v12 - v4;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v12 - v7;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_20E4A35CC();
  swift_release();
  swift_release();
  if (!swift_getEnumCaseMultiPayload())
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19DF0);
    sub_20E39D1F8((uint64_t)&v8[*(int *)(v9 + 48)], &qword_253ED0658);
    v10 = sub_20E4A581C();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v8, v10);
    swift_storeEnumTagMultiPayload();
    swift_getKeyPath();
    swift_getKeyPath();
    sub_20E3F8C2C((uint64_t)v5, (uint64_t)v2);
    swift_retain();
    sub_20E4A35D8();
    v8 = v5;
  }
  return sub_20E3F8C70((uint64_t)v8);
}

BOOL sub_20E405A7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int EnumCaseMultiPayload;
  _BOOL8 v17;
  char *v18;
  char v19;
  uint64_t v20;
  _QWORD v22[2];

  v2 = v1;
  v22[1] = a1;
  v3 = sub_20E4A33B0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FlowAlertAuthority.Presented(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v22 - v11;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v22 - v14;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_20E4A35CC();
  swift_release();
  swift_release();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v17 = EnumCaseMultiPayload == 1;
  if (EnumCaseMultiPayload == 1)
  {
    v22[0] = v2;
    v18 = &v15[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254A19DE8) + 48)];
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v15, v3);
    sub_20E406DC0();
    v19 = sub_20E4A5C0C();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v20 = sub_20E4A5840();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v18, v20);
    if ((v19 & 1) == 0)
      return 0;
    swift_storeEnumTagMultiPayload();
    swift_getKeyPath();
    swift_getKeyPath();
    sub_20E3F8C2C((uint64_t)v12, (uint64_t)v9);
    swift_retain();
    sub_20E4A35D8();
    v15 = v12;
  }
  sub_20E3F8C70((uint64_t)v15);
  return v17;
}

BOOL sub_20E405CB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = type metadata accessor for FlowAlertAuthority.Presented(0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20E3F8C2C(v0, (uint64_t)v3);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    sub_20E3F8C70((uint64_t)v3);
  }
  else
  {
    v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19DF0);
    sub_20E39D1F8((uint64_t)&v3[*(int *)(v5 + 48)], &qword_253ED0658);
    v6 = sub_20E4A581C();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v3, v6);
  }
  return EnumCaseMultiPayload == 0;
}

uint64_t sub_20E405D80(char a1)
{
  return sub_20E405EA8(a1, 0x800000020E4CB940, 0x7472656C417369);
}

BOOL sub_20E405DA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  int EnumCaseMultiPayload;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v1 = type metadata accessor for FlowAlertAuthority.Presented(0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20E3F8C2C(v0, (uint64_t)v3);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v5 = &v3[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254A19DE8) + 48)];
    v6 = sub_20E4A5840();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
    v7 = sub_20E4A33B0();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v3, v7);
  }
  else
  {
    sub_20E3F8C70((uint64_t)v3);
  }
  return EnumCaseMultiPayload == 1;
}

uint64_t sub_20E405E84(char a1)
{
  return sub_20E405EA8(a1, 0x800000020E4CB910, 0x7473616F547369);
}

uint64_t sub_20E405EA8(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD v12[4];

  v6 = sub_20E4A4A90();
  MEMORY[0x24BDAC7A8](v6);
  v7 = sub_20E4A5A8C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
  {
    sub_20E4A5A08();
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0D58);
    sub_20E4A4ACC();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_20E4A72D0;
    sub_20E4A4A84();
    sub_20E4A4A78();
    v12[3] = MEMORY[0x24BEE0D00];
    v12[0] = a3;
    v12[1] = 0xE700000000000000;
    sub_20E4A4A54();
    sub_20E39D1F8((uint64_t)v12, &qword_253ED2A38);
    sub_20E4A4A78();
    sub_20E4A4A9C();
    sub_20E4A5768();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  else
  {
    sub_20E3F8C70(v3);
    type metadata accessor for FlowAlertAuthority.Presented(0);
    return swift_storeEnumTagMultiPayload();
  }
}

uint64_t sub_20E406094()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_20E4A35CC();
  swift_release();
  return swift_release();
}

uint64_t sub_20E4060F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v28 = a1;
  v29 = a2;
  v2 = sub_20E4A5A8C();
  v27 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for FlowAlertAuthority.Presented(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v26 - v9;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v26 - v12;
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v26 - v15;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_20E4A35CC();
  swift_release();
  swift_release();
  sub_20E3F8C2C((uint64_t)v16, (uint64_t)v13);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_20E3F8C70((uint64_t)v13);
    sub_20E3F8C70((uint64_t)v16);
    v17 = v29;
    sub_20E4A33A4();
    v18 = &v10[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254A19DE8) + 48)];
    v19 = sub_20E4A33B0();
    v20 = *(_QWORD *)(v19 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v10, v17, v19);
    v21 = sub_20E4A5840();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v18, v28, v21);
    swift_storeEnumTagMultiPayload();
    swift_getKeyPath();
    swift_getKeyPath();
    sub_20E3F8C2C((uint64_t)v10, (uint64_t)v7);
    swift_retain();
    sub_20E4A35D8();
    sub_20E3F8C70((uint64_t)v10);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  else
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A19DF0);
    sub_20E39D1F8((uint64_t)&v13[*(int *)(v23 + 48)], &qword_253ED0658);
    v24 = sub_20E4A581C();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v13, v24);
    sub_20E3F8C70((uint64_t)v16);
    sub_20E4A5A08();
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0D58);
    sub_20E4A4ACC();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_20E4A72D0;
    sub_20E4A4A30();
    sub_20E4A5768();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v4, v2);
    v25 = sub_20E4A33B0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v29, 1, 1, v25);
  }
}

uint64_t sub_20E406460()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC18_JetEngine_SwiftUI18FlowAlertAuthority__presented;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A128);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_20E4064B4()
{
  return type metadata accessor for FlowAlertAuthority(0);
}

uint64_t type metadata accessor for FlowAlertAuthority(uint64_t a1)
{
  return sub_20E3A4CD0(a1, (uint64_t *)&unk_254A1A100);
}

void sub_20E4064D0()
{
  unint64_t v0;

  sub_20E40653C();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_20E40653C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254A1A110)
  {
    type metadata accessor for FlowAlertAuthority.Presented(255);
    v0 = sub_20E4A35E4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254A1A110);
  }
}

uint64_t type metadata accessor for FlowAlertAuthority.Presented(uint64_t a1)
{
  return sub_20E3A4CD0(a1, (uint64_t *)&unk_254A1A118);
}

uint64_t *sub_20E4065A4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  __int128 v20;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v15 = sub_20E4A33B0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a1, a2, v15);
      v16 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254A19DE8) + 48);
      v17 = (char *)a1 + v16;
      v18 = (char *)a2 + v16;
      v19 = sub_20E4A5840();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
LABEL_10:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      v8 = sub_20E4A581C();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254A19DF0) + 48);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = *(uint64_t *)((char *)a2 + v9 + 24);
      if (v12)
      {
        v13 = *((_QWORD *)v11 + 4);
        *((_QWORD *)v10 + 3) = v12;
        *((_QWORD *)v10 + 4) = v13;
        (**(void (***)(void))(v12 - 8))();
      }
      else
      {
        v20 = *((_OWORD *)v11 + 1);
        *(_OWORD *)v10 = *(_OWORD *)v11;
        *((_OWORD *)v10 + 1) = v20;
        *((_QWORD *)v10 + 4) = *((_QWORD *)v11 + 4);
      }
      goto LABEL_10;
    }
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t sub_20E40670C(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
  {
    v4 = sub_20E4A33B0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
    v5 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254A19DE8) + 48);
    v6 = sub_20E4A5840();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  else if (!(_DWORD)result)
  {
    v3 = sub_20E4A581C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
    result = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254A19DF0) + 48);
    if (*(_QWORD *)(result + 24))
      return __swift_destroy_boxed_opaque_existential_1(result);
  }
  return result;
}

char *sub_20E4067D0(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  __int128 v18;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v13 = sub_20E4A33B0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
    v14 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254A19DE8) + 48);
    v15 = &a1[v14];
    v16 = &a2[v14];
    v17 = sub_20E4A5840();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
LABEL_8:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  if (!EnumCaseMultiPayload)
  {
    v7 = sub_20E4A581C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254A19DF0) + 48);
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = *(_QWORD *)&a2[v8 + 24];
    if (v11)
    {
      v12 = *((_QWORD *)v10 + 4);
      *((_QWORD *)v9 + 3) = v11;
      *((_QWORD *)v9 + 4) = v12;
      (**(void (***)(void))(v11 - 8))();
    }
    else
    {
      v18 = *((_OWORD *)v10 + 1);
      *(_OWORD *)v9 = *(_OWORD *)v10;
      *((_OWORD *)v9 + 1) = v18;
      *((_QWORD *)v9 + 4) = *((_QWORD *)v10 + 4);
    }
    goto LABEL_8;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

char *sub_20E406910(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;

  if (a1 != a2)
  {
    sub_20E3F8C70((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v12 = sub_20E4A33B0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
      v13 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254A19DE8) + 48);
      v14 = &a1[v13];
      v15 = &a2[v13];
      v16 = sub_20E4A5840();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
LABEL_9:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      v7 = sub_20E4A581C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254A19DF0) + 48);
      v9 = &a1[v8];
      v10 = &a2[v8];
      v11 = *(_QWORD *)&a2[v8 + 24];
      if (v11)
      {
        *((_QWORD *)v9 + 3) = v11;
        *((_QWORD *)v9 + 4) = *((_QWORD *)v10 + 4);
        (**(void (***)(void))(v11 - 8))();
      }
      else
      {
        v17 = *(_OWORD *)v10;
        v18 = *((_OWORD *)v10 + 1);
        *((_QWORD *)v9 + 4) = *((_QWORD *)v10 + 4);
        *(_OWORD *)v9 = v17;
        *((_OWORD *)v9 + 1) = v18;
      }
      goto LABEL_9;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

char *sub_20E406A64(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v12 = sub_20E4A33B0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
    v13 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254A19DE8) + 48);
    v14 = &a1[v13];
    v15 = &a2[v13];
    v16 = sub_20E4A5840();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = sub_20E4A581C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254A19DF0) + 48);
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = *((_OWORD *)v10 + 1);
    *(_OWORD *)v9 = *(_OWORD *)v10;
    *((_OWORD *)v9 + 1) = v11;
    *((_QWORD *)v9 + 4) = *((_QWORD *)v10 + 4);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_20E406B88(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  if (a1 != a2)
  {
    sub_20E3F8C70((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v12 = sub_20E4A33B0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
      v13 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254A19DE8) + 48);
      v14 = &a1[v13];
      v15 = &a2[v13];
      v16 = sub_20E4A5840();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v7 = sub_20E4A581C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254A19DF0) + 48);
      v9 = &a1[v8];
      v10 = &a2[v8];
      v11 = *((_OWORD *)v10 + 1);
      *(_OWORD *)v9 = *(_OWORD *)v10;
      *((_OWORD *)v9 + 1) = v11;
      *((_QWORD *)v9 + 4) = *((_QWORD *)v10 + 4);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_20E406CBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t sub_20E406CC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_20E406CD8()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_20E406CE8()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  char *v8;
  uint64_t *v9;

  v0 = sub_20E4A581C();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v8 = &v7;
    v0 = sub_20E4A33B0();
    if (v2 <= 0x3F)
    {
      v3 = sub_20E4A5840();
      if (v4 > 0x3F)
      {
        return v3;
      }
      else
      {
        swift_getTupleTypeLayout2();
        v9 = &v6;
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return v0;
}

unint64_t sub_20E406DC0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_253ED0618;
  if (!qword_253ED0618)
  {
    v1 = sub_20E4A33B0();
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDCEA98], v1);
    atomic_store(result, (unint64_t *)&qword_253ED0618);
  }
  return result;
}

uint64_t sub_20E406E08(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE v8[8];
  uint64_t v9;
  uint64_t v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A138);
  MEMORY[0x24BDAC7A8](v6);
  sub_20E4A59FC();
  sub_20E4A4D78();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A140);
  swift_allocObject();
  v8[0] = a1;
  v9 = sub_20E4A4D84();
  v10 = 0;
  MEMORY[0x212BBBA70](v8, a2, &type metadata for DeepLinkableViewModifier, a3);
  return swift_release();
}

uint64_t View.deepLinkable()(uint64_t a1, uint64_t a2)
{
  return sub_20E406E08(1, a1, a2);
}

void sub_20E406F08(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v23 = a1;
  v24 = a2;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A180);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_20E4A3344();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_20E4A59FC();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 1) != 0)
  {
    v25 = a4;
    v26 = a5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A178);
    sub_20E4A464C();
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v23, v11);
    sub_20E4078C0(v24, (uint64_t)v10);
    v19 = sub_20E4A3968();
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v10, 1, v19) == 1)
    {
      sub_20E407908((uint64_t)v10);
      v21 = 0;
    }
    else
    {
      v21 = (void *)sub_20E4A395C();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v10, v19);
    }
    sub_20E441A78((uint64_t)v14, v21);
    sub_20E4A4D90();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    swift_release();
  }
}

uint64_t OpenDeepLinkAction.callAsFunction(_:)()
{
  return sub_20E4A4D90();
}

uint64_t EnvironmentValues.openDeepLink.getter()
{
  sub_20E407124();
  return sub_20E4A3C08();
}

unint64_t sub_20E407124()
{
  unint64_t result;

  result = qword_254A1A130;
  if (!qword_254A1A130)
  {
    result = MEMORY[0x212BBDF90](&unk_20E4AAFAC, &type metadata for OpenDeepLinkActionKey);
    atomic_store(result, (unint64_t *)&qword_254A1A130);
  }
  return result;
}

uint64_t sub_20E407168@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_20E407124();
  result = sub_20E4A3C08();
  *a1 = v3;
  return result;
}

uint64_t sub_20E4071B4()
{
  sub_20E407124();
  swift_retain();
  return sub_20E4A3C14();
}

uint64_t sub_20E407210(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;

  sub_20E4A59B4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A178);
  sub_20E4A464C();
  result = swift_release();
  *a1 = v3;
  return result;
}

unint64_t sub_20E4072AC()
{
  return 0xD00000000000003CLL;
}

uint64_t sub_20E4072C8@<X0>(uint64_t a1@<X8>)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t (*v14)(char *, uint64_t);
  uint64_t v16;
  uint64_t v17;

  v17 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A158);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v1;
  v8 = *((_QWORD *)v1 + 1);
  v7 = *((_QWORD *)v1 + 2);
  v9 = swift_allocObject();
  *(_BYTE *)(v9 + 16) = v6;
  *(_QWORD *)(v9 + 24) = v8;
  *(_QWORD *)(v9 + 32) = v7;
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A160);
  sub_20E39D010(&qword_254A1A168, &qword_254A1A160, MEMORY[0x24BDEFB78]);
  sub_20E4A4514();
  swift_release();
  KeyPath = swift_getKeyPath();
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = v6;
  *(_QWORD *)(v11 + 24) = v8;
  *(_QWORD *)(v11 + 32) = v7;
  v12 = v17;
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 16))(v17, v5, v2);
  v13 = (uint64_t *)(v12 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254A1A170) + 36));
  *v13 = KeyPath;
  v13[1] = (uint64_t)sub_20E40788C;
  v13[2] = v11;
  v14 = *(uint64_t (**)(char *, uint64_t))(v3 + 8);
  swift_retain();
  swift_retain();
  return v14(v5, v2);
}

uint64_t View.openDeepLinkAction(_:)()
{
  swift_getKeyPath();
  swift_retain();
  sub_20E4A4250();
  swift_release();
  return swift_release();
}

uint64_t sub_20E4074E8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_20E407124();
  result = sub_20E4A3C08();
  *a1 = v3;
  return result;
}

uint64_t OpenDeepLinkAction.init(forSceneDelegate:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A138);
  MEMORY[0x24BDAC7A8](v2);
  sub_20E4A59FC();
  sub_20E4A4D78();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A140);
  swift_allocObject();
  result = sub_20E4A4D84();
  *a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for OpenDeepLinkAction()
{
  return &type metadata for OpenDeepLinkAction;
}

uint64_t sub_20E4075DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  v2 = sub_20E4A39D4();
  v4[0] = v1;
  v4[1] = sub_20E3D2728();
  return MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v2, v4);
}

uint64_t sub_20E407630(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1A148);
  v2 = sub_20E4A39D4();
  v4[0] = v1;
  v4[1] = sub_20E39D010(&qword_254A1A150, &qword_254A1A148, MEMORY[0x24BDF1028]);
  return MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v2, v4);
}

ValueMetadata *type metadata accessor for OpenDeepLinkActionKey()
{
  return &type metadata for OpenDeepLinkActionKey;
}

uint64_t destroy for DeepLinkableViewModifier()
{
  swift_release();
  return swift_release();
}

uint64_t _s18_JetEngine_SwiftUI24DeepLinkableViewModifierVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for DeepLinkableViewModifier(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for DeepLinkableViewModifier(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for DeepLinkableViewModifier(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DeepLinkableViewModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DeepLinkableViewModifier()
{
  return &type metadata for DeepLinkableViewModifier;
}

uint64_t sub_20E407868()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_20E40787C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_20E406F08(a1, a2, *(_BYTE *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_20E40788C(_QWORD *a1)
{
  return sub_20E407210(a1);
}

BOOL sub_20E407898()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + 16) != 1 || **(_QWORD **)(v0 + 40) == 0;
}

uint64_t sub_20E4078C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A180);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20E407908(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A180);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_20E40794C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_254A1A188;
  if (!qword_254A1A188)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1A170);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1A160);
    v2[3] = sub_20E39D010(&qword_254A1A168, &qword_254A1A160, MEMORY[0x24BDEFB78]);
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_20E39D010(&qword_254A1A190, qword_254A1A198, MEMORY[0x24BDF1248]);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254A1A188);
  }
  return result;
}

uint64_t (*sub_20E407A18(uint64_t a1, uint64_t a2))(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a2;
  *(_QWORD *)(v4 + 24) = a1;
  return sub_20E407BD4;
}

uint64_t sub_20E407A5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;

  if (!sub_20E440AB8())
    return 0;
  if (sub_20E4A5864() != a1 || v4 != a2)
  {
    v6 = sub_20E4A635C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
    {
      sub_20E44067C();
      return 1;
    }
    if (sub_20E4A587C() == a1 && v7 == a2)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v8 = sub_20E4A635C();
      swift_bridgeObjectRelease();
      if ((v8 & 1) == 0)
      {
        if (sub_20E4A5870() == a1 && v9 == a2)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          v10 = sub_20E4A635C();
          swift_bridgeObjectRelease();
          result = 0;
          if ((v10 & 1) == 0)
            return result;
        }
        sub_20E440B60();
        sub_20E4982E0();
        goto LABEL_18;
      }
    }
    sub_20E440B60();
    sub_20E4980D4();
LABEL_18:
    swift_release();
    return 1;
  }
  swift_bridgeObjectRelease();
  sub_20E44067C();
  return 1;
}

uint64_t sub_20E407BB0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E407BD4(uint64_t a1, uint64_t a2)
{
  return sub_20E407A5C(a1, a2);
}

uint64_t type metadata accessor for PopoverFlowBackActionImplementation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PopoverFlowBackActionImplementation);
}

uint64_t sub_20E407BE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_20E407BF8(a1, *v3, v3[1], *(_QWORD *)(a3 + 16));
}

uint64_t sub_20E407BF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  unint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v22;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A190F8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_20E4A5894();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  v14 = MEMORY[0x24BDAC7A8](v11);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v12 + 16))((char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v11, v14);
  v15 = (*(unsigned __int8 *)(v12 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v16 = (char *)swift_allocObject();
  *((_QWORD *)v16 + 2) = a4;
  *((_QWORD *)v16 + 3) = a2;
  *((_QWORD *)v16 + 4) = a3;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v16[v15], (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = &unk_254A1A228;
  *(_QWORD *)(v17 + 24) = v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A19610);
  swift_retain();
  v18 = sub_20E4A59A8();
  v19 = sub_20E4A5E58();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v10, 1, 1, v19);
  v20 = (_QWORD *)swift_allocObject();
  v20[2] = 0;
  v20[3] = 0;
  v20[4] = &unk_254A19608;
  v20[5] = v17;
  v20[6] = v18;
  swift_retain();
  sub_20E474E94((uint64_t)v10, (uint64_t)&unk_254A19618, (uint64_t)v20);
  swift_release();
  return v18;
}

uint64_t sub_20E407DC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_20E4A5894();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_20E407E38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_20E4A5894() - 8) + 80);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = v1 + ((v4 + 40) & ~v4);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_20E3B4E08;
  return sub_20E3D9D3C(a1, v5, v6, v7);
}

uint64_t sub_20E407ECC()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t ShelfHeader.init(title:subtitle:accessory:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t result;

  result = swift_getKeyPath();
  *(_QWORD *)a7 = a1;
  *(_QWORD *)(a7 + 8) = a2;
  *(_QWORD *)(a7 + 16) = a3;
  *(_QWORD *)(a7 + 24) = a4;
  *(_QWORD *)(a7 + 32) = a5;
  *(_QWORD *)(a7 + 40) = a6;
  *(_QWORD *)(a7 + 48) = result;
  *(_QWORD *)(a7 + 56) = 0;
  *(_QWORD *)(a7 + 64) = 0;
  *(_QWORD *)(a7 + 72) = 0;
  *(_BYTE *)(a7 + 80) = 0;
  return result;
}

uint64_t ShelfHeader.init<>(title:subtitle:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t result;

  result = swift_getKeyPath();
  *(_QWORD *)a5 = a1;
  *(_QWORD *)(a5 + 8) = a2;
  *(_QWORD *)(a5 + 16) = a3;
  *(_QWORD *)(a5 + 24) = a4;
  *(_QWORD *)(a5 + 32) = nullsub_1;
  *(_QWORD *)(a5 + 40) = 0;
  *(_QWORD *)(a5 + 48) = result;
  *(_QWORD *)(a5 + 56) = 0;
  *(_QWORD *)(a5 + 64) = 0;
  *(_QWORD *)(a5 + 72) = 0;
  *(_BYTE *)(a5 + 80) = 0;
  return result;
}

uint64_t ShelfHeader.init<>(title:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result;

  result = swift_getKeyPath();
  *(_QWORD *)a3 = a1;
  *(_QWORD *)(a3 + 8) = a2;
  *(_QWORD *)(a3 + 16) = nullsub_1;
  *(_QWORD *)(a3 + 24) = 0;
  *(_QWORD *)(a3 + 32) = nullsub_1;
  *(_QWORD *)(a3 + 40) = 0;
  *(_QWORD *)(a3 + 48) = result;
  *(_QWORD *)(a3 + 56) = 0;
  *(_QWORD *)(a3 + 64) = 0;
  *(_QWORD *)(a3 + 72) = 0;
  *(_BYTE *)(a3 + 80) = 0;
  return result;
}

double sub_20E40803C()
{
  uint64_t v0;
  __int128 v1;
  double v2;
  _OWORD v4[2];
  char v5;
  _BYTE v6[40];

  v1 = *(_OWORD *)(v0 + 64);
  v4[0] = *(_OWORD *)(v0 + 48);
  v4[1] = v1;
  v5 = *(_BYTE *)(v0 + 80);
  sub_20E409690((uint64_t)v4, (uint64_t)v6);
  sub_20E4096D8((uint64_t)v6, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_20E4091B4);
  v2 = sub_20E45D370();
  sub_20E4096D8((uint64_t)v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_20E409200);
  return v2;
}

void sub_20E4080D0(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(double *)a1 = EnvironmentValues.shelfContentPadding.getter();
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
}

uint64_t ShelfHeader.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  __int128 *v36;
  _QWORD v37[2];
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  char v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  char v49;

  v29 = *(_QWORD *)(a1 + 16);
  v30 = a2;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1A230);
  sub_20E4A39D4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1A238);
  sub_20E4A39D4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A199F8);
  sub_20E4A39D4();
  v28 = *(_QWORD *)(a1 + 24);
  sub_20E4A39D4();
  sub_20E4A39D4();
  sub_20E4A39D4();
  swift_getTupleTypeMetadata2();
  v4 = sub_20E4A491C();
  v5 = MEMORY[0x24BDF5428];
  MEMORY[0x212BBDF90](MEMORY[0x24BDF5428], v4);
  sub_20E4A470C();
  v24 = *(_QWORD *)(a1 + 32);
  v6 = sub_20E4A3E60();
  v25 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)&v44 = v24;
  *((_QWORD *)&v44 + 1) = v6;
  *(_QWORD *)&v45 = v25;
  *((_QWORD *)&v45 + 1) = sub_20E4084D4();
  MEMORY[0x212BBDF30](255, &v44, MEMORY[0x24BDF22B8], 0);
  swift_getTupleTypeMetadata3();
  v7 = sub_20E4A491C();
  MEMORY[0x212BBDF90](v5, v7);
  v8 = sub_20E4A46D0();
  v26 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v23 - v9;
  v11 = sub_20E4A39D4();
  v27 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (uint64_t *)((char *)&v23 - v15);
  v17 = v2[3];
  v46 = v2[2];
  v47 = v17;
  v48 = v2[4];
  v49 = *((_BYTE *)v2 + 80);
  v18 = v2[1];
  v44 = *v2;
  v45 = v18;
  v31 = v29;
  v32 = v28;
  v33 = v24;
  v34 = *(_OWORD *)(a1 + 40);
  v35 = v25;
  v36 = &v44;
  sub_20E4A3C68();
  sub_20E4A46C4();
  v40 = v46;
  v41 = v47;
  v42 = v48;
  v43 = v49;
  v38 = v44;
  v39 = v45;
  sub_20E40803C();
  v19 = MEMORY[0x212BBDF90](MEMORY[0x24BDF4498], v8);
  sub_20E4A446C();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v10, v8);
  v37[0] = v19;
  v37[1] = MEMORY[0x24BDECC60];
  v20 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v11, v37);
  sub_20E39D614(v16, v13, v11, v20);
  v21 = *(void (**)(char *, uint64_t))(v27 + 8);
  v21(v13, v11);
  sub_20E39D618((uint64_t)v16, v11, v30);
  return ((uint64_t (*)(_QWORD *, uint64_t))v21)(v16, v11);
}

unint64_t sub_20E4084D4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254A1A240[0];
  if (!qword_254A1A240[0])
  {
    v1 = sub_20E4A3E60();
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDEF8B0], v1);
    atomic_store(result, qword_254A1A240);
  }
  return result;
}

uint64_t sub_20E40851C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t (*a5)(_QWORD, _QWORD)@<X4>, uint64_t a6@<X5>, char *a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  uint64_t *v33;
  unint64_t v34;
  uint64_t OpaqueTypeConformance2;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  char *v40;
  char *v41;
  uint64_t (*v42)(char *, uint64_t);
  uint64_t v44;
  char *v45;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (*v51)(_QWORD, _QWORD);
  unint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t (*v63)(_QWORD, _QWORD);
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD v70[3];
  uint64_t v71;
  char v72;
  char *v73;
  uint64_t *v74;
  char *v75;
  unint64_t v76;

  v49 = a6;
  v51 = a5;
  v50 = a1;
  v59 = a8;
  v12 = sub_20E4A3E60();
  v57 = *(_QWORD *)(v12 - 8);
  v13 = (uint64_t *)v12;
  v53 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v48 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = *(_QWORD *)(a4 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v46 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = sub_20E4084D4();
  v73 = (char *)a4;
  v74 = v13;
  v75 = a7;
  v76 = v52;
  v55 = MEMORY[0x212BBDF30](0, &v73, MEMORY[0x24BDF22B8], 0);
  v56 = *(_QWORD *)(v55 - 8);
  MEMORY[0x24BDAC7A8](v55);
  v47 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v54 = (char *)&v44 - v19;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1A230);
  sub_20E4A39D4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1A238);
  sub_20E4A39D4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A199F8);
  sub_20E4A39D4();
  sub_20E4A39D4();
  sub_20E4A39D4();
  sub_20E4A39D4();
  swift_getTupleTypeMetadata2();
  v20 = sub_20E4A491C();
  MEMORY[0x212BBDF90](MEMORY[0x24BDF5428], v20);
  v21 = sub_20E4A470C();
  v44 = *(_QWORD *)(v21 - 8);
  v22 = v44;
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v44 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25);
  v27 = (uint64_t *)((char *)&v44 - v26);
  v45 = (char *)&v44 - v26;
  v60 = a2;
  v61 = a3;
  v62 = a4;
  v63 = v51;
  v64 = v49;
  v65 = a7;
  v28 = v50;
  v66 = v50;
  sub_20E4A3CC8();
  sub_20E4A4700();
  v49 = MEMORY[0x212BBDF90](MEMORY[0x24BDF4700], v21);
  sub_20E39D614(v27, v24, v21, v49);
  v51 = *(uint64_t (**)(_QWORD, _QWORD))(v22 + 8);
  v29 = v51(v24, v21);
  v30 = v46;
  (*(void (**)(uint64_t))(v28 + 32))(v29);
  v31 = v48;
  sub_20E4A3E54();
  v32 = v47;
  v33 = (uint64_t *)v53;
  v34 = v52;
  sub_20E4A422C();
  (*(void (**)(char *, uint64_t *))(v57 + 8))(v31, v33);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v30, a4);
  v73 = (char *)a4;
  v74 = v33;
  v75 = a7;
  v76 = v34;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v36 = v54;
  v37 = v55;
  sub_20E39D614(v54, v32, v55, OpaqueTypeConformance2);
  v38 = v56;
  v39 = *(void (**)(char *, uint64_t))(v56 + 8);
  v40 = v32;
  v39(v32, v37);
  v41 = v45;
  (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v24, v45, v21);
  v71 = 0;
  v72 = 1;
  v73 = v24;
  v74 = &v71;
  (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v40, v36, v37);
  v75 = v40;
  v70[0] = v21;
  v70[1] = MEMORY[0x24BDF4638];
  v70[2] = v37;
  v67 = v49;
  v68 = MEMORY[0x24BDF4610];
  v69 = OpaqueTypeConformance2;
  sub_20E39C54C((uint64_t *)&v73, 3uLL, (uint64_t)v70);
  v39(v36, v37);
  v42 = (uint64_t (*)(char *, uint64_t))v51;
  v51(v41, v21);
  v39(v40, v37);
  return v42(v24, v21);
}

uint64_t sub_20E408A4C()
{
  return sub_20E40971C((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_20E40851C);
}

uint64_t sub_20E408A58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t, uint64_t);
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  void (*v56)(uint64_t, uint64_t);
  _QWORD *v57;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD v84[2];
  uint64_t v85[2];
  _QWORD v86[2];
  _QWORD v87[2];
  _QWORD v88[2];
  _QWORD v89[2];
  _QWORD v90[2];
  _QWORD v91[2];

  v73 = a5;
  v79 = a1;
  v78 = a6;
  v75 = *(_QWORD *)(a3 - 8);
  v68 = a3;
  MEMORY[0x24BDAC7A8](a1);
  v69 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1A230);
  v9 = sub_20E4A39D4();
  v10 = *(_QWORD *)(v9 - 8);
  v67 = v9;
  v74 = v10;
  MEMORY[0x24BDAC7A8](v9);
  v64 = (char *)&v59 - v11;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1A238);
  v12 = sub_20E4A39D4();
  v13 = *(_QWORD *)(v12 - 8);
  v70 = v12;
  v77 = v13;
  MEMORY[0x24BDAC7A8](v12);
  v65 = (char *)&v59 - v14;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A199F8);
  v72 = sub_20E4A39D4();
  v76 = *(_QWORD *)(v72 - 8);
  MEMORY[0x24BDAC7A8](v72);
  v66 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v71 = (uint64_t *)((char *)&v59 - v17);
  v62 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_20E4A39D4();
  v61 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v59 - v22;
  v24 = sub_20E4A39D4();
  v63 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v26 = (char *)&v59 - v25;
  v27 = sub_20E4A39D4();
  v81 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v60 = (char *)&v59 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = MEMORY[0x24BDAC7A8](v29);
  v80 = (uint64_t *)((char *)&v59 - v31);
  (*(void (**)(double))v79)(v30);
  sub_20E4A4118();
  sub_20E4A40E8();
  swift_release();
  sub_20E4A43F4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v20, a2);
  v32 = MEMORY[0x24BDF1028];
  v62 = sub_20E39D010(&qword_254A1A2D0, &qword_254A1A230, MEMORY[0x24BDF1028]);
  v91[0] = a4;
  v91[1] = v62;
  v33 = MEMORY[0x24BDED308];
  v34 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v21, v91);
  sub_20E4A44FC();
  (*(void (**)(char *, uint64_t))(v61 + 8))(v23, v21);
  LODWORD(v85[0]) = sub_20E4A3EB4();
  v61 = sub_20E39D010(&qword_254A1A2D8, &qword_254A1A238, v32);
  v90[0] = v34;
  v90[1] = v61;
  v35 = MEMORY[0x212BBDF90](v33, v24, v90);
  v36 = (uint64_t)v60;
  sub_20E4A42A4();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v26, v24);
  v37 = sub_20E39D010(&qword_254A199F0, &qword_254A199F8, MEMORY[0x24BDF0710]);
  v89[0] = v35;
  v89[1] = v37;
  v63 = MEMORY[0x212BBDF90](v33, v27, v89);
  sub_20E39D614(v80, v36, v27, v63);
  v38 = *(uint64_t (**)(uint64_t, uint64_t))(v81 + 8);
  v39 = v38(v36, v27);
  v40 = v69;
  (*(void (**)(uint64_t))(v79 + 16))(v39);
  sub_20E4A40DC();
  v41 = v64;
  v42 = v68;
  v43 = v73;
  sub_20E4A43F4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v75 + 8))(v40, v42);
  v88[0] = v43;
  v88[1] = v62;
  v44 = MEMORY[0x24BDED308];
  v45 = v67;
  v46 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v67, v88);
  v47 = v65;
  sub_20E4A44FC();
  (*(void (**)(char *, uint64_t))(v74 + 8))(v41, v45);
  LODWORD(v85[0]) = sub_20E4A3ECC();
  v87[0] = v46;
  v87[1] = v61;
  v48 = v44;
  v49 = v70;
  v50 = MEMORY[0x212BBDF90](v44, v70, v87);
  v51 = (uint64_t)v66;
  sub_20E4A42A4();
  (*(void (**)(char *, uint64_t))(v77 + 8))(v47, v49);
  v86[0] = v50;
  v86[1] = v37;
  v52 = v72;
  v53 = MEMORY[0x212BBDF90](v48, v72, v86);
  v54 = v71;
  sub_20E39D614(v71, v51, v52, v53);
  v55 = v76;
  v56 = *(void (**)(uint64_t, uint64_t))(v76 + 8);
  v56(v51, v52);
  v57 = v80;
  (*(void (**)(uint64_t, _QWORD *, uint64_t))(v81 + 16))(v36, v80, v27);
  v85[0] = v36;
  (*(void (**)(uint64_t, _QWORD *, uint64_t))(v55 + 16))(v51, v54, v52);
  v85[1] = v51;
  v84[0] = v27;
  v84[1] = v52;
  v82 = v63;
  v83 = v53;
  sub_20E39C54C(v85, 2uLL, (uint64_t)v84);
  v56((uint64_t)v54, v52);
  v38((uint64_t)v57, v27);
  v56(v51, v52);
  return v38(v36, v27);
}

uint64_t sub_20E409174()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E4091B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  if ((a5 & 1) == 0)
    return swift_retain();
  return result;
}

uint64_t sub_20E4091C0(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  return sub_20E409200(*(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_BYTE *)(a1 + 80));
}

uint64_t sub_20E409200(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  if ((a5 & 1) == 0)
    return swift_release();
  return result;
}

uint64_t sub_20E40920C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v3 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v4 = *(_QWORD *)(a2 + 56);
  v5 = *(_QWORD *)(a2 + 64);
  v6 = *(_QWORD *)(a2 + 72);
  v7 = *(_BYTE *)(a2 + 80);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_20E4091B4(v3, v4, v5, v6, v7);
  *(_QWORD *)(a1 + 48) = v3;
  *(_QWORD *)(a1 + 56) = v4;
  *(_QWORD *)(a1 + 64) = v5;
  *(_QWORD *)(a1 + 72) = v6;
  *(_BYTE *)(a1 + 80) = v7;
  return a1;
}

uint64_t sub_20E4092BC(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;

  v2 = a2;
  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  v5 = v2[3];
  *(_QWORD *)(a1 + 16) = v2[2];
  *(_QWORD *)(a1 + 24) = v5;
  swift_retain();
  swift_release();
  v6 = v2[5];
  *(_QWORD *)(a1 + 32) = v2[4];
  *(_QWORD *)(a1 + 40) = v6;
  swift_retain();
  swift_release();
  v7 = v2[6];
  v8 = v2[7];
  v9 = v2[8];
  v10 = v2[9];
  LOBYTE(v2) = *((_BYTE *)v2 + 80);
  sub_20E4091B4(v7, v8, v9, v10, (char)v2);
  v11 = *(_QWORD *)(a1 + 48);
  v12 = *(_QWORD *)(a1 + 56);
  v13 = *(_QWORD *)(a1 + 64);
  v14 = *(_QWORD *)(a1 + 72);
  v15 = *(_BYTE *)(a1 + 80);
  *(_QWORD *)(a1 + 48) = v7;
  *(_QWORD *)(a1 + 56) = v8;
  *(_QWORD *)(a1 + 64) = v9;
  *(_QWORD *)(a1 + 72) = v10;
  *(_BYTE *)(a1 + 80) = (_BYTE)v2;
  sub_20E409200(v11, v12, v13, v14, v15);
  return a1;
}

uint64_t sub_20E409378(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  __int128 v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  v4 = *(_BYTE *)(a2 + 80);
  v5 = *(_QWORD *)(a1 + 48);
  v6 = *(_QWORD *)(a1 + 56);
  v7 = *(_QWORD *)(a1 + 64);
  v8 = *(_QWORD *)(a1 + 72);
  v9 = *(_BYTE *)(a1 + 80);
  v10 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v10;
  *(_BYTE *)(a1 + 80) = v4;
  sub_20E409200(v5, v6, v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for ShelfGridItemWidth.Context(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 81))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ShelfGridItemWidth.Context(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 80) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 81) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 81) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for ShelfHeader()
{
  JUMPOUT(0x212BBDEE8);
}

uint64_t sub_20E409498(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[2];
  _QWORD v10[4];

  v1 = *(_QWORD *)(a1 + 16);
  v2 = *(_QWORD *)(a1 + 40);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1A230);
  sub_20E4A39D4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1A238);
  sub_20E4A39D4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A199F8);
  sub_20E4A39D4();
  sub_20E4A39D4();
  sub_20E4A39D4();
  sub_20E4A39D4();
  swift_getTupleTypeMetadata2();
  v3 = sub_20E4A491C();
  v4 = MEMORY[0x24BDF5428];
  MEMORY[0x212BBDF90](MEMORY[0x24BDF5428], v3);
  sub_20E4A470C();
  v10[0] = v1;
  v10[1] = sub_20E4A3E60();
  v10[2] = v2;
  v10[3] = sub_20E4084D4();
  MEMORY[0x212BBDF30](255, v10, MEMORY[0x24BDF22B8], 0);
  swift_getTupleTypeMetadata3();
  v5 = sub_20E4A491C();
  MEMORY[0x212BBDF90](v4, v5);
  v6 = sub_20E4A46D0();
  v7 = sub_20E4A39D4();
  v9[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDF4498], v6);
  v9[1] = MEMORY[0x24BDECC60];
  return MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v7, v9);
}

uint64_t sub_20E409690(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A2C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20E4096D8(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(unsigned __int8 *)(a1 + 32));
  return a1;
}

uint64_t sub_20E409710()
{
  return sub_20E40971C((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_20E408A58);
}

uint64_t sub_20E40971C(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[8], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7]);
}

uint64_t sub_20E409734()
{
  uint64_t v1;

  sub_20E40A020();
  sub_20E4A3C08();
  return v1;
}

uint64_t sub_20E40976C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_20E40A020();
  result = sub_20E4A3C08();
  *a1 = v3;
  return result;
}

uint64_t sub_20E4097B8()
{
  sub_20E40A020();
  swift_bridgeObjectRetain();
  return sub_20E4A3C14();
}

uint64_t sub_20E409814@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  char v16;
  int v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  _OWORD v26[2];

  v23 = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v22 = sub_20E4A60E0();
  v8 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v10 = (char *)&v22 - v9;
  v11 = sub_20E4A4E68();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20E4A4E74();
  if (*(_QWORD *)(a1 + 16) && (v15 = sub_20E3BCCAC((uint64_t)v14), (v16 & 1) != 0))
  {
    sub_20E3BB3A0(*(_QWORD *)(a1 + 56) + 32 * v15, (uint64_t)&v24);
  }
  else
  {
    v24 = 0u;
    v25 = 0u;
  }
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if (*((_QWORD *)&v25 + 1))
  {
    sub_20E3B8B34(&v24, v26);
    sub_20E3BB3A0((uint64_t)v26, (uint64_t)&v24);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A300);
    v17 = swift_dynamicCast();
    v18 = *(_QWORD *)(AssociatedTypeWitness - 8);
    v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
    if (v17)
    {
      v19(v10, 0, 1, AssociatedTypeWitness);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v18 + 32))(v23, v10, AssociatedTypeWitness);
    }
    else
    {
      v19(v10, 1, 1, AssociatedTypeWitness);
      v21 = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v22);
      MEMORY[0x24BDAC7A8](v21);
      *(&v22 - 4) = a2;
      *(&v22 - 3) = a3;
      *(&v22 - 2) = (uint64_t)v26;
      sub_20E4A5228();
      (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
    }
  }
  else
  {
    sub_20E40A064((uint64_t)&v24);
    return (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3);
  }
}

uint64_t View.mediaArtworkValue<A>(key:value:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v21 = a7;
  v19 = a1;
  v20 = a5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v12 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v14 = (char *)&v19 - v13;
  swift_getKeyPath();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a2, AssociatedTypeWitness);
  v15 = (*(unsigned __int8 *)(v12 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v16 = (char *)swift_allocObject();
  *((_QWORD *)v16 + 2) = a3;
  *((_QWORD *)v16 + 3) = a4;
  v17 = v19;
  *((_QWORD *)v16 + 4) = v20;
  *((_QWORD *)v16 + 5) = a6;
  *((_QWORD *)v16 + 6) = v17;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v16[v15], v14, AssociatedTypeWitness);
  sub_20E4A4388();
  swift_release();
  return swift_release();
}

uint64_t sub_20E409BC0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_20E40A020();
  result = sub_20E4A3C08();
  *a1 = v3;
  return result;
}

uint64_t sub_20E409C10()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80)), AssociatedTypeWitness);
  return swift_deallocObject();
}

uint64_t sub_20E409C84()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(swift_getAssociatedTypeWitness() - 8) + 80);
  return sub_20E409F50(v0 + ((v1 + 56) & ~v1));
}

uint64_t dispatch thunk of static MediaArtworkValueKey.defaultValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_20E409CFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 16);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1A2E0);
  v2 = sub_20E4A39D4();
  v4[0] = v1;
  v4[1] = sub_20E409D60();
  return MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v2, v4);
}

unint64_t sub_20E409D60()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254A1A2E8;
  if (!qword_254A1A2E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1A2E0);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDF1248], v1);
    atomic_store(result, (unint64_t *)&qword_254A1A2E8);
  }
  return result;
}

ValueMetadata *type metadata accessor for _MediaArtworkCachedImagesKey()
{
  return &type metadata for _MediaArtworkCachedImagesKey;
}

ValueMetadata *type metadata accessor for _MediaArtworkSizeKey()
{
  return &type metadata for _MediaArtworkSizeKey;
}

ValueMetadata *type metadata accessor for _MediaArtworkValues()
{
  return &type metadata for _MediaArtworkValues;
}

unint64_t sub_20E409DDC@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result;

  result = sub_20E3B5464(MEMORY[0x24BEE4AF8]);
  *a1 = result;
  return result;
}

uint64_t sub_20E409E08()
{
  sub_20E4A61A0();
  sub_20E4A5C6C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A300);
  sub_20E4A626C();
  sub_20E4A5C6C();
  sub_20E4A6458();
  sub_20E4A5C6C();
  swift_bridgeObjectRelease();
  sub_20E4A5C6C();
  swift_getAssociatedTypeWitness();
  sub_20E4A6458();
  sub_20E4A5C6C();
  swift_bridgeObjectRelease();
  sub_20E4A5C6C();
  return 0;
}

uint64_t sub_20E409F50(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t AssociatedTypeWitness;
  uint64_t *boxed_opaque_existential_1Tm;
  uint64_t v8[4];

  v2 = sub_20E4A4E68();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20E4A4E74();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8[3] = AssociatedTypeWitness;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v8);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(boxed_opaque_existential_1Tm, a1, AssociatedTypeWitness);
  return sub_20E443B18((uint64_t)v8, (uint64_t)v4);
}

unint64_t sub_20E40A020()
{
  unint64_t result;

  result = qword_254A1A2F0;
  if (!qword_254A1A2F0)
  {
    result = MEMORY[0x212BBDF90](&unk_20E4AB268, &type metadata for _MediaArtworkValuesKey);
    atomic_store(result, (unint64_t *)&qword_254A1A2F0);
  }
  return result;
}

uint64_t sub_20E40A064(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A2F8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20E40A0A4()
{
  return sub_20E409E08();
}

ValueMetadata *type metadata accessor for _MediaArtworkValuesKey()
{
  return &type metadata for _MediaArtworkValuesKey;
}

uint64_t View.componentMenuTemplate<A>(for:content:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v16;

  swift_getKeyPath();
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a5;
  v16[3] = a6;
  v16[4] = a7;
  v16[5] = a8;
  v16[6] = a1;
  v16[7] = a2;
  v16[8] = a3;
  v16[9] = a4;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_20E4A4388();
  swift_release();
  return swift_release();
}

uint64_t sub_20E40A198()
{
  uint64_t v1;

  sub_20E40ACE8();
  sub_20E4A3C08();
  return v1;
}

uint64_t sub_20E40A1D0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_20E40ACE8();
  result = sub_20E4A3C08();
  *a1 = v3;
  return result;
}

uint64_t sub_20E40A21C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_20E40ACE8();
  result = sub_20E4A3C08();
  *a1 = v3;
  return result;
}

uint64_t sub_20E40A268()
{
  sub_20E40ACE8();
  swift_bridgeObjectRetain();
  return sub_20E4A3C14();
}

uint64_t sub_20E40A2C8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v17;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v20;

  v17 = (_QWORD *)swift_allocObject();
  v17[2] = a6;
  v17[3] = a7;
  v17[4] = a8;
  v17[5] = a9;
  v17[6] = a4;
  v17[7] = a5;
  swift_bridgeObjectRetain();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v20 = *a1;
  *a1 = 0x8000000000000000;
  sub_20E3CA53C((uint64_t)sub_20E40ACD8, (uint64_t)v17, a2, a3, isUniquelyReferenced_nonNull_native);
  *a1 = v20;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_20E40A3B0()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E40A3DC(uint64_t *a1)
{
  uint64_t *v1;

  return sub_20E40A2C8(a1, v1[6], v1[7], v1[8], v1[9], v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_20E40A40C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X5>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  void (*v9)(double);
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v5 = *(_QWORD *)(a2 - 8);
  v6 = MEMORY[0x24BDAC7A8](a1);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9(v6);
  v10 = sub_20E3C3B10((uint64_t)v8);
  result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, a2);
  *a3 = v10;
  return result;
}

uint64_t View.componentMenuTemplate<A, B>(for:on:content:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  _QWORD *v16;

  swift_getKeyPath();
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a6;
  v16[3] = a7;
  v16[4] = a8;
  v16[5] = a9;
  v16[6] = a10;
  v16[7] = a11;
  v16[8] = a1;
  v16[9] = a2;
  v16[10] = a4;
  v16[11] = a5;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_20E4A4388();
  swift_release();
  return swift_release();
}

uint64_t sub_20E40A58C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  _QWORD *v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;

  v16 = *a1;
  v17 = *(_QWORD *)(*a1 + 16);
  swift_bridgeObjectRetain();
  v28 = (unint64_t)sub_20E40A874;
  v27 = a2;
  if (v17)
  {
    v18 = sub_20E3BCD58(a2, a3);
    if ((v19 & 1) != 0)
    {
      v28 = *(_OWORD *)(*(_QWORD *)(v16 + 56) + 16 * v18);
      swift_retain();
    }
  }
  swift_bridgeObjectRelease();
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = v28;
  v21 = (_QWORD *)swift_allocObject();
  v21[2] = a6;
  v21[3] = a7;
  v21[4] = a8;
  v21[5] = a9;
  v21[6] = a10;
  v21[7] = a11;
  v21[8] = sub_20E40AC38;
  v21[9] = v20;
  v21[10] = a4;
  v21[11] = a5;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v29 = *a1;
  *a1 = 0x8000000000000000;
  sub_20E3CA53C((uint64_t)sub_20E40AC7C, (uint64_t)v21, v27, a3, isUniquelyReferenced_nonNull_native);
  *a1 = v29;
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_20E40A718()
{
  return objectdestroy_2Tm_0((void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

uint64_t sub_20E40A724(uint64_t *a1)
{
  uint64_t *v1;

  return sub_20E40A58C(a1, v1[8], v1[9], v1[10], v1[11], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7]);
}

uint64_t sub_20E40A760(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 16);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1A310);
  v2 = sub_20E4A39D4();
  v4[0] = v1;
  v4[1] = sub_20E40A7C4();
  return MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v2, v4);
}

unint64_t sub_20E40A7C4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254A1A318;
  if (!qword_254A1A318)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1A310);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDF1248], v1);
    atomic_store(result, (unint64_t *)&qword_254A1A318);
  }
  return result;
}

uint64_t sub_20E40A810(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 24);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1A310);
  v2 = sub_20E4A39D4();
  v4[0] = v1;
  v4[1] = sub_20E40A7C4();
  return MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v2, v4);
}

uint64_t sub_20E40A874@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_20E4A4718();
  *a1 = result;
  return result;
}

uint64_t sub_20E40A8A8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t)@<X2>, uint64_t a4@<X3>, void (*a5)(char *, uint64_t)@<X4>, uint64_t a6@<X5>, uint64_t a7@<X7>, uint64_t *a8@<X8>, uint64_t a9)
{
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t result;
  _QWORD v27[2];
  uint64_t (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  uint64_t *v32;
  char v33[40];

  v29 = a6;
  v30 = a5;
  v27[1] = a4;
  v28 = a3;
  v32 = a8;
  v31 = *(_QWORD *)(a7 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v13 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_20E4A60E0();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v27 - v16;
  v18 = *(_QWORD *)(a9 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)v27 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *a2;
  sub_20E3C39FC(a1, (uint64_t)v33);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A18D10);
  v23 = swift_dynamicCast();
  v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
  if ((v23 & 1) != 0)
  {
    v24(v17, 0, 1, a9);
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v21, v17, a9);
    v30(v21, v22);
    v25 = sub_20E3C3B10((uint64_t)v13);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v13, a7);
    result = (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v21, a9);
  }
  else
  {
    v24(v17, 1, 1, a9);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    result = v28(a1, v22);
    v25 = result;
  }
  *v32 = v25;
  return result;
}

unint64_t sub_20E40AA90()
{
  uint64_t inited;
  uint64_t v1;
  unint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A328);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20E4A72D0;
  *(_QWORD *)(inited + 32) = sub_20E4A58C4();
  *(_QWORD *)(inited + 40) = v1;
  *(_QWORD *)(inited + 48) = sub_20E40AAF8;
  *(_QWORD *)(inited + 56) = 0;
  result = sub_20E3B5600(inited);
  qword_254A1A308 = result;
  return result;
}

uint64_t sub_20E40AAF8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  v2 = sub_20E4A479C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v11 - v7;
  sub_20E4A4790();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v8, v2);
  sub_20E40AD3C();
  v9 = sub_20E4A4718();
  result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  *a1 = v9;
  return result;
}

uint64_t sub_20E40ABC4@<X0>(_QWORD *a1@<X8>)
{
  if (qword_254A180F0 != -1)
    swift_once();
  *a1 = qword_254A1A308;
  return swift_bridgeObjectRetain();
}

uint64_t sub_20E40AC14()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E40AC38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_20E437120(a1, a2, *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t *))(v2 + 16));
}

uint64_t sub_20E40AC40()
{
  return objectdestroy_2Tm_0((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t objectdestroy_2Tm_0(void (*a1)(_QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 72));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E40AC7C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_20E40A8A8(a1, a2, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 64), *(_QWORD *)(v3 + 72), *(void (**)(char *, uint64_t))(v3 + 80), *(_QWORD *)(v3 + 88), *(_QWORD *)(v3 + 24), a3, *(_QWORD *)(v3 + 32));
}

uint64_t sub_20E40ACB4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E40ACD8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_20E40A40C(a1, *(_QWORD *)(v2 + 24), a2);
}

unint64_t sub_20E40ACE8()
{
  unint64_t result;

  result = qword_254A1A320;
  if (!qword_254A1A320)
  {
    result = MEMORY[0x212BBDF90](&unk_20E4AB2EC, &type metadata for ComponentMenuTemplatesKey);
    atomic_store(result, (unint64_t *)&qword_254A1A320);
  }
  return result;
}

ValueMetadata *type metadata accessor for ComponentMenuTemplatesKey()
{
  return &type metadata for ComponentMenuTemplatesKey;
}

unint64_t sub_20E40AD3C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254A1A330;
  if (!qword_254A1A330)
  {
    v1 = sub_20E4A479C();
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDF4900], v1);
    atomic_store(result, (unint64_t *)&qword_254A1A330);
  }
  return result;
}

uint64_t sub_20E40AD84(void (*a1)(_QWORD *__return_ptr, _QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t *i;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD v18[3];
  _QWORD v19[2];
  uint64_t v20;

  v4 = v3;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = MEMORY[0x24BEE4AF8];
  if (v5)
  {
    v20 = MEMORY[0x24BEE4AF8];
    sub_20E3ECECC(0, v5, 0);
    v6 = v20;
    for (i = (uint64_t *)(a3 + 48); ; i += 3)
    {
      v9 = *(i - 1);
      v10 = *i;
      v18[0] = *(i - 2);
      v18[1] = v9;
      v18[2] = v10;
      swift_retain();
      swift_bridgeObjectRetain();
      a1(v19, v18);
      if (v4)
        break;
      v4 = 0;
      swift_bridgeObjectRelease();
      swift_release();
      v12 = v19[0];
      v11 = v19[1];
      v20 = v6;
      v14 = *(_QWORD *)(v6 + 16);
      v13 = *(_QWORD *)(v6 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_20E3ECECC(v13 > 1, v14 + 1, 1);
        v6 = v20;
      }
      *(_QWORD *)(v6 + 16) = v14 + 1;
      v15 = v6 + 16 * v14;
      *(_QWORD *)(v15 + 32) = v12;
      *(_QWORD *)(v15 + 40) = v11;
      if (!--v5)
        return v6;
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
  }
  return v6;
}

uint64_t sub_20E40AEC4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_20E40D564();
  result = sub_20E4A3C08();
  *a1 = v3;
  return result;
}

uint64_t sub_20E40AF10()
{
  sub_20E40D564();
  return sub_20E4A3C14();
}

uint64_t sub_20E40AF58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  int v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  __int128 v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  _OWORD *v24;
  __int128 v25;
  uint64_t *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t (**v30)();
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  _OWORD v46[2];
  _OWORD v47[2];
  _OWORD v48[2];
  _QWORD *(*v49)@<X0>(uint64_t@<X8>);
  _OWORD *v50;
  uint64_t (*v51)@<X0>(uint64_t@<X8>);
  uint64_t v52;
  uint64_t (*v53)@<X0>(uint64_t@<X0>, uint64_t@<X8>);
  _OWORD *v54;
  _BYTE v55[12];
  uint64_t v56;

  v40 = a1;
  v41 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A350);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A358);
  MEMORY[0x24BDAC7A8](v42);
  v43 = (uint64_t)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A360);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v2[2];
  v12 = *((unsigned __int8 *)v2 + 24);
  sub_20E39CFAC(v11, *((_BYTE *)v2 + 24));
  v13 = sub_20E45CF28(v11, v12);
  v39 = v11;
  sub_20E39CED8(v11, v12);
  if ((v13 & 1) != 0)
  {
    v37 = *v2;
    type metadata accessor for _LocalizerOwner();
    v38 = v3;
    sub_20E40B978();
    sub_20E4A3ADC();
    swift_getKeyPath();
    sub_20E4A3AF4();
    swift_release();
    swift_release();
    v56 = v2[4];
    sub_20E40D2A0((__int128 *)(v2 + 5), (uint64_t)v55);
    v33 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    v36 = v12;
    v14 = v40;
    v33((char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v40, v7);
    v15 = *(unsigned __int8 *)(v8 + 80);
    v16 = (v15 + 73) & ~v15;
    v34 = v16 + v9;
    v35 = v16;
    v17 = (_OWORD *)swift_allocObject();
    v18 = *((_OWORD *)v2 + 1);
    v17[1] = *(_OWORD *)v2;
    v17[2] = v18;
    v17[3] = *((_OWORD *)v2 + 2);
    *(_OWORD *)((char *)v17 + 57) = *(_OWORD *)((char *)v2 + 41);
    v19 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v19((char *)v17 + v16, (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
    v20 = v14;
    v21 = v14;
    v22 = v33;
    v33((char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v20, v7);
    v23 = swift_allocObject();
    v19((char *)(v23 + ((v15 + 16) & ~v15)), v10, v7);
    v22(v10, v21, v7);
    v24 = (_OWORD *)swift_allocObject();
    v25 = *((_OWORD *)v2 + 1);
    v24[1] = *(_OWORD *)v2;
    v24[2] = v25;
    v24[3] = *((_OWORD *)v2 + 2);
    *(_OWORD *)((char *)v24 + 57) = *(_OWORD *)((char *)v2 + 41);
    v19((char *)v24 + v35, v10, v7);
    v47[0] = v44;
    v47[1] = v45;
    v48[0] = v46[0];
    *(_OWORD *)((char *)v48 + 9) = *(_OWORD *)((char *)v46 + 9);
    v49 = sub_20E40D2BC;
    v50 = v17;
    v51 = sub_20E40D364;
    v52 = v23;
    v53 = sub_20E40D448;
    v54 = v24;
    v26 = &qword_254A1A368;
    sub_20E3A5E20((uint64_t)v47, v43, &qword_254A1A368);
    swift_storeEnumTagMultiPayload();
    v27 = v39;
    LOBYTE(v15) = v36;
    sub_20E39CFAC(v39, v36);
    swift_retain();
    sub_20E40D49C((uint64_t)&v56);
    sub_20E40D4C4((uint64_t)v55);
    sub_20E39CFAC(v27, v15);
    swift_retain();
    sub_20E40D49C((uint64_t)&v56);
    sub_20E40D4C4((uint64_t)v55);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A368);
    sub_20E39D010(&qword_254A1A370, &qword_254A1A368, (uint64_t)&unk_20E4AF6E0);
    sub_20E39D010(&qword_254A1A378, &qword_254A1A350, (uint64_t)&protocol conformance descriptor for _RequirementFailureView<A, B>);
    sub_20E4A3DF4();
    v28 = (char *)v47;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v40, v7);
    v29 = swift_allocObject();
    *(_QWORD *)(v29 + 16) = 0xD000000000000022;
    *(_QWORD *)(v29 + 24) = 0x800000020E4CBA20;
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v10, v7);
    v30 = (uint64_t (**)())&v5[*(int *)(v3 + 52)];
    *v30 = sub_20E3A5260;
    v30[1] = (uint64_t (*)())v29;
    v26 = &qword_254A1A350;
    sub_20E3A5E20((uint64_t)v5, v43, &qword_254A1A350);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A368);
    sub_20E39D010(&qword_254A1A370, &qword_254A1A368, (uint64_t)&unk_20E4AF6E0);
    sub_20E39D010(&qword_254A1A378, &qword_254A1A350, (uint64_t)&protocol conformance descriptor for _RequirementFailureView<A, B>);
    sub_20E4A3DF4();
    v28 = v5;
  }
  return sub_20E39D1F8((uint64_t)v28, v26);
}

_QWORD *sub_20E40B4D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  char v12;
  uint64_t v13;
  _QWORD *result;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A360);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_253ED2A20 != -1)
    swift_once();
  v10 = sub_20E4A32A8();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(a1 + 40);
  v12 = *(_BYTE *)(a1 + 56);
  result = (_QWORD *)sub_20E3EC67C(v10, v13, *(_QWORD *)(*(_QWORD *)(a1 + 32) + 16));
  v15 = result;
  if ((v12 & 1) != 0)
  {
    swift_retain();
    ((void (*)(uint64_t, _QWORD *))v11)(a2, v15);
    sub_20E39CED0();
LABEL_7:
    swift_bridgeObjectRelease();
    return (_QWORD *)(*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 32))(a3, v9, v6);
  }
  if (result[2])
  {
    v16 = result[4];
    v17 = result[5];
    sub_20E39CFB8();
    swift_bridgeObjectRetain();
    v11(a2, v16, v17);
    sub_20E39CED0();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_20E40B68C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  char v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[16];
  uint64_t v21;

  v19 = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A360);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(a2 + 40);
  v12 = *(_BYTE *)(a2 + 56);
  v13 = *(_QWORD *)(a2 + 32);
  v21 = a1;
  swift_bridgeObjectRetain();
  v14 = (_QWORD *)sub_20E40AD84((void (*)(_QWORD *__return_ptr, _QWORD *))sub_20E40D4F4, (uint64_t)v20, v13);
  result = swift_bridgeObjectRelease();
  if ((v12 & 1) != 0)
  {
    swift_retain();
    ((void (*)(uint64_t, _QWORD *))v11)(a3, v14);
    sub_20E39CED0();
LABEL_5:
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(v19, v10, v7);
  }
  if (v14[2])
  {
    v16 = v14[4];
    v17 = v14[5];
    sub_20E39CFB8();
    swift_bridgeObjectRetain();
    v11(a3, v16, v17);
    sub_20E39CED0();
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_20E40B804@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20E40AF58(a1, a2);
}

uint64_t View.accessibilityLabel(_:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  _QWORD v14[3];
  char v15;
  uint64_t v16;
  uint64_t (*v17)@<X0>(uint64_t@<X1>, uint64_t@<X2>, uint64_t@<X8>);
  uint64_t v18;
  char v19;

  v5 = *a1;
  v6 = a1[1];
  v7 = a1[2];
  type metadata accessor for _LocalizerOwner();
  sub_20E40B978();
  swift_retain();
  swift_bridgeObjectRetain();
  v8 = sub_20E4A3B00();
  v10 = v9;
  KeyPath = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A340);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_20E4A72D0;
  *(_QWORD *)(v12 + 32) = v5;
  *(_QWORD *)(v12 + 40) = v6;
  *(_QWORD *)(v12 + 48) = v7;
  v14[0] = v8;
  v14[1] = v10;
  v14[2] = KeyPath;
  v15 = 0;
  v16 = v12;
  v17 = sub_20E40B96C;
  v18 = 0;
  v19 = 0;
  MEMORY[0x212BBBA70](v14, a2, &type metadata for LocalizedAccessibilityAttachmentViewModifier, a3);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

uint64_t sub_20E40B96C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_20E40BDEC(a1, a2, MEMORY[0x24BDF2B50], a3);
}

unint64_t sub_20E40B978()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254A1A338;
  if (!qword_254A1A338)
  {
    v1 = type metadata accessor for _LocalizerOwner();
    result = MEMORY[0x212BBDF90](&unk_20E4AB4F0, v1);
    atomic_store(result, (unint64_t *)&qword_254A1A338);
  }
  return result;
}

uint64_t sub_20E40B9C0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_20E40D564();
  result = sub_20E4A3C08();
  *a1 = v3;
  return result;
}

uint64_t sub_20E40BA0C()
{
  sub_20E40D564();
  return sub_20E4A3C14();
}

_QWORD *View.accessibilityInputLabels(_:)(_QWORD *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  _QWORD v13[3];
  char v14;
  uint64_t v15;
  uint64_t (*v16)@<X0>(uint64_t@<X1>, uint64_t@<X2>, uint64_t@<X8>);
  uint64_t v17;
  char v18;

  if (result[2])
  {
    v3 = result[4];
    v4 = result[5];
    v5 = result[6];
    type metadata accessor for _LocalizerOwner();
    sub_20E40B978();
    swift_retain();
    swift_bridgeObjectRetain();
    v8 = sub_20E4A3B00();
    v10 = v9;
    KeyPath = swift_getKeyPath();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A340);
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_20E4A72D0;
    *(_QWORD *)(v12 + 32) = v3;
    *(_QWORD *)(v12 + 40) = v4;
    *(_QWORD *)(v12 + 48) = v5;
    v13[0] = v8;
    v13[1] = v10;
    v13[2] = KeyPath;
    v14 = 0;
    v15 = v12;
    v16 = sub_20E40BB88;
    v17 = 0;
    v18 = 0;
    MEMORY[0x212BBBA70](v13, a2, &type metadata for LocalizedAccessibilityAttachmentViewModifier, a3);
    swift_bridgeObjectRelease();
    swift_release();
    return (_QWORD *)swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_20E40BB88@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A380);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A398);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_20E4A72D0;
  *(_QWORD *)(v9 + 32) = a1;
  *(_QWORD *)(v9 + 40) = a2;
  *(_BYTE *)(v9 + 48) = 0;
  *(_QWORD *)(v9 + 56) = MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRetain();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A360);
  sub_20E39D010(&qword_254A1A388, &qword_254A1A360, MEMORY[0x24BDEFB78]);
  sub_20E4A43B8();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a3, v8, v10);
  return sub_20E39D1F8((uint64_t)v8, &qword_254A1A380);
}

uint64_t View.accessibilityValue(_:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  _QWORD v14[3];
  char v15;
  uint64_t v16;
  uint64_t (*v17)@<X0>(uint64_t@<X1>, uint64_t@<X2>, uint64_t@<X8>);
  uint64_t v18;
  char v19;

  v5 = *a1;
  v6 = a1[1];
  v7 = a1[2];
  type metadata accessor for _LocalizerOwner();
  sub_20E40B978();
  swift_retain();
  swift_bridgeObjectRetain();
  v8 = sub_20E4A3B00();
  v10 = v9;
  KeyPath = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A340);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_20E4A72D0;
  *(_QWORD *)(v12 + 32) = v5;
  *(_QWORD *)(v12 + 40) = v6;
  *(_QWORD *)(v12 + 48) = v7;
  v14[0] = v8;
  v14[1] = v10;
  v14[2] = KeyPath;
  v15 = 0;
  v16 = v12;
  v17 = sub_20E40BDE0;
  v18 = 0;
  v19 = 0;
  MEMORY[0x212BBBA70](v14, a2, &type metadata for LocalizedAccessibilityAttachmentViewModifier, a3);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

uint64_t sub_20E40BDE0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_20E40BDEC(a1, a2, MEMORY[0x24BDF2B70], a3);
}

uint64_t sub_20E40BDEC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, void (*a3)(_QWORD *, uint64_t, _QWORD, uint64_t, unint64_t)@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD v15[2];

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A380);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[0] = a1;
  v15[1] = a2;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A360);
  v12 = sub_20E39D010(&qword_254A1A388, &qword_254A1A360, MEMORY[0x24BDEFB78]);
  v13 = sub_20E3C3948();
  a3(v15, v11, MEMORY[0x24BEE0D00], v12, v13);
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a4, v10, v11);
  return sub_20E39D1F8((uint64_t)v10, &qword_254A1A380);
}

uint64_t View.accessibilityHint(_:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  _QWORD v14[3];
  char v15;
  uint64_t v16;
  uint64_t (*v17)@<X0>(uint64_t@<X1>, uint64_t@<X2>, uint64_t@<X8>);
  uint64_t v18;
  char v19;

  v5 = *a1;
  v6 = a1[1];
  v7 = a1[2];
  type metadata accessor for _LocalizerOwner();
  sub_20E40B978();
  swift_retain();
  swift_bridgeObjectRetain();
  v8 = sub_20E4A3B00();
  v10 = v9;
  KeyPath = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A340);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_20E4A72D0;
  *(_QWORD *)(v12 + 32) = v5;
  *(_QWORD *)(v12 + 40) = v6;
  *(_QWORD *)(v12 + 48) = v7;
  v14[0] = v8;
  v14[1] = v10;
  v14[2] = KeyPath;
  v15 = 0;
  v16 = v12;
  v17 = sub_20E40C01C;
  v18 = 0;
  v19 = 0;
  MEMORY[0x212BBBA70](v14, a2, &type metadata for LocalizedAccessibilityAttachmentViewModifier, a3);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

uint64_t sub_20E40C01C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_20E40BDEC(a1, a2, MEMORY[0x24BDF2A40], a3);
}

uint64_t View.accessibilityAction(named:_:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t KeyPath;
  uint64_t v16;
  _QWORD v19[3];
  char v20;
  uint64_t v21;
  uint64_t (*v22)@<X0>(uint64_t@<X1>, uint64_t@<X2>, uint64_t@<X8>);
  uint64_t v23;
  char v24;

  v8 = *a1;
  v9 = a1[1];
  v10 = a1[2];
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a2;
  *(_QWORD *)(v11 + 24) = a3;
  type metadata accessor for _LocalizerOwner();
  sub_20E40B978();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  v12 = sub_20E4A3B00();
  v14 = v13;
  KeyPath = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A340);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_20E4A72D0;
  *(_QWORD *)(v16 + 32) = v8;
  *(_QWORD *)(v16 + 40) = v9;
  *(_QWORD *)(v16 + 48) = v10;
  v19[0] = v12;
  v19[1] = v14;
  v19[2] = KeyPath;
  v20 = 0;
  v21 = v16;
  v22 = sub_20E40C2B4;
  v23 = v11;
  v24 = 0;
  MEMORY[0x212BBBA70](v19, a4, &type metadata for LocalizedAccessibilityAttachmentViewModifier, a5);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

uint64_t sub_20E40C17C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD v11[2];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A380);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11[0] = a1;
  v11[1] = a2;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A360);
  sub_20E39D010(&qword_254A1A388, &qword_254A1A360, MEMORY[0x24BDEFB78]);
  sub_20E3C3948();
  sub_20E4A4334();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a3, v8, v9);
  return sub_20E39D1F8((uint64_t)v8, &qword_254A1A380);
}

uint64_t sub_20E40C290()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E40C2B4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_20E40C17C(a1, a2, a3);
}

uint64_t View.accessibilityCustomContent<A>(_:_:importance:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  double v13;
  char *v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t KeyPath;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[3];
  char v34;
  uint64_t v35;
  uint64_t (*v36)@<X0>(uint64_t@<X0>, uint64_t@<X8>);
  char *v37;
  char v38;

  v32 = a7;
  v29 = a2;
  v30 = a3;
  v11 = *(_QWORD *)(a4 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  v13 = MEMORY[0x24BDAC7A8](a1);
  v14 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = v15[1];
  v31 = *v15;
  v28 = v15[2];
  (*(void (**)(char *, double))(v11 + 16))(v14, v13);
  v17 = (*(unsigned __int8 *)(v11 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v18 = (v12 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  v19 = (char *)swift_allocObject();
  *((_QWORD *)v19 + 2) = a3;
  *((_QWORD *)v19 + 3) = a4;
  *((_QWORD *)v19 + 4) = a5;
  *((_QWORD *)v19 + 5) = a6;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v19[v17], v14, a4);
  *(_QWORD *)&v19[v18] = v29;
  type metadata accessor for _LocalizerOwner();
  sub_20E40B978();
  swift_retain();
  v20 = v28;
  swift_bridgeObjectRetain();
  v21 = sub_20E4A3B00();
  v23 = v22;
  KeyPath = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A340);
  v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_20E4A72D0;
  v26 = v30;
  *(_QWORD *)(v25 + 32) = v31;
  *(_QWORD *)(v25 + 40) = v16;
  *(_QWORD *)(v25 + 48) = v20;
  v33[0] = v21;
  v33[1] = v23;
  v33[2] = KeyPath;
  v34 = 0;
  v35 = v25;
  v36 = sub_20E40C6A4;
  v37 = v19;
  v38 = 0;
  MEMORY[0x212BBBA70](v33, v26, &type metadata for LocalizedAccessibilityAttachmentViewModifier, a5);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

uint64_t sub_20E40C490@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X6>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v20 = a1;
  v21 = a4;
  v6 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A380);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16))(v8, a2, a3, v10);
  swift_bridgeObjectRetain();
  v13 = sub_20E4A41C0();
  v15 = v14;
  v17 = v16 & 1;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A360);
  sub_20E39D010(&qword_254A1A388, &qword_254A1A360, MEMORY[0x24BDEFB78]);
  sub_20E4A43C4();
  sub_20E39D0D8(v13, v15, v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v21, v12, v19);
  return sub_20E39D1F8((uint64_t)v12, &qword_254A1A380);
}

uint64_t sub_20E40C640()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_20E40C6A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v2 + 24);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80);
  return sub_20E40C490(a1, v2 + ((v4 + 48) & ~v4), v3, a2);
}

uint64_t View.accessibilityCustomContent(_:_:importance:)(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t KeyPath;
  uint64_t v18;
  _QWORD v21[3];
  char v22;
  uint64_t v23;
  uint64_t (*v24)@<X0>(uint64_t@<X1>, uint64_t@<X2>, uint64_t@<X8>);
  _QWORD *v25;
  char v26;

  v7 = *a1;
  v8 = a1[1];
  v9 = a1[2];
  v10 = *a2;
  v11 = a2[1];
  v12 = a2[2];
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = v10;
  v13[3] = v11;
  v13[4] = v12;
  v13[5] = a3;
  type metadata accessor for _LocalizerOwner();
  sub_20E40B978();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  v14 = sub_20E4A3B00();
  v16 = v15;
  KeyPath = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A340);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_20E4A72D0;
  *(_QWORD *)(v18 + 32) = v7;
  *(_QWORD *)(v18 + 40) = v8;
  *(_QWORD *)(v18 + 48) = v9;
  v21[0] = v14;
  v21[1] = v16;
  v21[2] = KeyPath;
  v22 = 0;
  v23 = v18;
  v24 = sub_20E40CA68;
  v25 = v13;
  v26 = 0;
  MEMORY[0x212BBBA70](v21, a4, &type metadata for LocalizedAccessibilityAttachmentViewModifier, a5);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

uint64_t sub_20E40C858@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t KeyPath;
  uint64_t inited;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  _QWORD v26[3];
  char v27;
  uint64_t v28;
  uint64_t (*v29)@<X0>(uint64_t@<X8>);
  _QWORD *v30;
  char v31;

  v25 = a7;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A390);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v26[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a1;
  v16[3] = a2;
  v16[4] = a6;
  type metadata accessor for _LocalizerOwner();
  sub_20E40B978();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v17 = sub_20E4A3B00();
  v19 = v18;
  KeyPath = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A340);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20E4A72D0;
  *(_QWORD *)(inited + 32) = a3;
  *(_QWORD *)(inited + 40) = a4;
  *(_QWORD *)(inited + 48) = a5;
  v26[0] = v17;
  v26[1] = v19;
  v26[2] = KeyPath;
  v27 = 0;
  v28 = inited;
  v29 = sub_20E40D558;
  v30 = v16;
  v31 = 0;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A360);
  v23 = sub_20E39D010(&qword_254A1A388, &qword_254A1A360, MEMORY[0x24BDEFB78]);
  MEMORY[0x212BBBA70](v26, v22, &type metadata for LocalizedAccessibilityAttachmentViewModifier, v23);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v25, v15, v22);
  return sub_20E39D1F8((uint64_t)v15, &qword_254A1A390);
}

uint64_t sub_20E40CA3C()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_20E40CA68@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t *v3;

  return sub_20E40C858(a1, a2, v3[2], v3[3], v3[4], v3[5], a3);
}

uint64_t sub_20E40CA74@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A380);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A360);
  sub_20E39D010(&qword_254A1A388, &qword_254A1A360, MEMORY[0x24BDEFB78]);
  sub_20E4A43C4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, v4, v6);
  return sub_20E39D1F8((uint64_t)v4, &qword_254A1A380);
}

uint64_t View.accessibilityCustomContent(_:_:importance:)(uint64_t *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t KeyPath;
  uint64_t v21;
  _QWORD v25[3];
  char v26;
  uint64_t v27;
  uint64_t (*v28)@<X0>(uint64_t@<X8>);
  uint64_t v29;
  char v30;

  v13 = *a1;
  v14 = a1[1];
  v15 = a1[2];
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a2;
  *(_QWORD *)(v16 + 24) = a3;
  a4 &= 1u;
  *(_BYTE *)(v16 + 32) = a4;
  *(_QWORD *)(v16 + 40) = a5;
  *(_QWORD *)(v16 + 48) = a6;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_20E3FAA14(a2, a3, a4);
  type metadata accessor for _LocalizerOwner();
  sub_20E40B978();
  swift_bridgeObjectRetain();
  v17 = sub_20E4A3B00();
  v19 = v18;
  KeyPath = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A340);
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_20E4A72D0;
  *(_QWORD *)(v21 + 32) = v13;
  *(_QWORD *)(v21 + 40) = v14;
  *(_QWORD *)(v21 + 48) = v15;
  v25[0] = v17;
  v25[1] = v19;
  v25[2] = KeyPath;
  v26 = 0;
  v27 = v21;
  v28 = sub_20E40CEA4;
  v29 = v16;
  v30 = 0;
  MEMORY[0x212BBBA70](v25, a7, &type metadata for LocalizedAccessibilityAttachmentViewModifier, a8);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

uint64_t sub_20E40CD38@<X0>(uint64_t a1@<X6>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v7 = a1;
  v8 = a2;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A380);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A360);
  sub_20E39D010(&qword_254A1A388, &qword_254A1A360, MEMORY[0x24BDEFB78]);
  sub_20E4A43C4();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v8, v4, v6);
  return sub_20E39D1F8((uint64_t)v4, &qword_254A1A380);
}

uint64_t sub_20E40CE74()
{
  uint64_t v0;

  sub_20E39D0D8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_20E40CEA4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_20E40CD38(*(_QWORD *)(v1 + 40), a1);
}

uint64_t sub_20E40CEBC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  v2 = sub_20E4A39D4();
  v4[0] = v1;
  v4[1] = sub_20E40CF10();
  return MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v2, v4);
}

unint64_t sub_20E40CF10()
{
  unint64_t result;

  result = qword_254A1A348;
  if (!qword_254A1A348)
  {
    result = MEMORY[0x212BBDF90](&unk_20E4AB390, &type metadata for LocalizedAccessibilityAttachmentViewModifier);
    atomic_store(result, (unint64_t *)&qword_254A1A348);
  }
  return result;
}

uint64_t sub_20E40CF54(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 16);
  v2 = sub_20E4A39D4();
  v4[0] = v1;
  v4[1] = sub_20E40CF10();
  return MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v2, v4);
}

uint64_t destroy for LocalizedAccessibilityAttachmentViewModifier(uint64_t a1)
{
  swift_release();
  sub_20E39CED8(*(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  swift_bridgeObjectRelease();
  return sub_20E39CED0();
}

uint64_t initializeWithCopy for LocalizedAccessibilityAttachmentViewModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v2 = a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  swift_retain();
  sub_20E39CFAC(v5, v6);
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  v7 = *(_QWORD *)(v2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(v2 + 32);
  v8 = *(_QWORD *)(v2 + 48);
  LOBYTE(v2) = *(_BYTE *)(v2 + 56);
  swift_bridgeObjectRetain();
  sub_20E39CFB8();
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_BYTE *)(a1 + 56) = v2;
  return a1;
}

uint64_t assignWithCopy for LocalizedAccessibilityAttachmentViewModifier(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  v2 = a2;
  *(_QWORD *)a1 = *a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = v2[1];
  v4 = v2[2];
  v5 = *((_BYTE *)v2 + 24);
  sub_20E39CFAC(v4, v5);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = v5;
  sub_20E39CED8(v6, v7);
  *(_QWORD *)(a1 + 32) = v2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8 = v2[5];
  v9 = v2[6];
  LOBYTE(v2) = *((_BYTE *)v2 + 56);
  sub_20E39CFB8();
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_BYTE *)(a1 + 56) = (_BYTE)v2;
  sub_20E39CED0();
  return a1;
}

__n128 __swift_memcpy57_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for LocalizedAccessibilityAttachmentViewModifier(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  char v6;
  char v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_BYTE *)(a1 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = v4;
  sub_20E39CED8(v5, v6);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  v7 = *(_BYTE *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 56) = v7;
  sub_20E39CED0();
  return a1;
}

uint64_t getEnumTagSinglePayload for LocalizedAccessibilityAttachmentViewModifier(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 57))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LocalizedAccessibilityAttachmentViewModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 57) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for LocalizedAccessibilityAttachmentViewModifier()
{
  return &type metadata for LocalizedAccessibilityAttachmentViewModifier;
}

uint64_t sub_20E40D264()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E40D274()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_20E40D2A0(__int128 *a1, uint64_t a2)
{
  __int128 v2;

  v2 = *a1;
  *(_BYTE *)(a2 + 16) = *((_BYTE *)a1 + 16);
  *(_OWORD *)a2 = v2;
  return a2;
}

_QWORD *sub_20E40D2BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254A1A360) - 8) + 80);
  return sub_20E40B4D0(v1 + 16, v1 + ((v3 + 73) & ~v3), a1);
}

uint64_t sub_20E40D300()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A360);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_20E40D364@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A360);
  return (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1+ ((*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80)), v3);
}

uint64_t objectdestroy_20Tm_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A360);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 73) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  sub_20E39CED8(*(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
  swift_bridgeObjectRelease();
  sub_20E39CED0();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_20E40D448@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254A1A360) - 8) + 80);
  return sub_20E40B68C(a1, v2 + 16, v2 + ((v5 + 73) & ~v5), a2);
}

uint64_t sub_20E40D49C(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_20E40D4C4(uint64_t a1)
{
  sub_20E39CFB8();
  return a1;
}

uint64_t sub_20E40D4F4@<X0>(uint64_t (**a1)(_QWORD)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = (*a1)(*(_QWORD *)(v2 + 16));
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_20E40D534()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_20E40D558@<X0>(uint64_t a1@<X8>)
{
  return sub_20E40CA74(a1);
}

unint64_t sub_20E40D564()
{
  unint64_t result;

  result = qword_254A1A3A0;
  if (!qword_254A1A3A0)
  {
    result = MEMORY[0x212BBDF90](&unk_20E4AB6C4, &type metadata for IsLocalizerSpecifiedKey);
    atomic_store(result, (unint64_t *)&qword_254A1A3A0);
  }
  return result;
}

uint64_t destroy for LocalizedAccessibilityAttachmentViewModifier.Decorator()
{
  return sub_20E39CED0();
}

uint64_t _s18_JetEngine_SwiftUI44LocalizedAccessibilityAttachmentViewModifierV9DecoratorOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  sub_20E39CFB8();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for LocalizedAccessibilityAttachmentViewModifier.Decorator(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  sub_20E39CFB8();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_20E39CED0();
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for LocalizedAccessibilityAttachmentViewModifier.Decorator(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_20E39CED0();
  return a1;
}

uint64_t getEnumTagSinglePayload for LocalizedAccessibilityAttachmentViewModifier.Decorator(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for LocalizedAccessibilityAttachmentViewModifier.Decorator(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for LocalizedAccessibilityAttachmentViewModifier.Decorator()
{
  return &type metadata for LocalizedAccessibilityAttachmentViewModifier.Decorator;
}

unint64_t sub_20E40D750()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254A1A3A8;
  if (!qword_254A1A3A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1A3B0);
    v2[0] = sub_20E39D010(&qword_254A1A370, &qword_254A1A368, (uint64_t)&unk_20E4AF6E0);
    v2[1] = sub_20E39D010(&qword_254A1A378, &qword_254A1A350, (uint64_t)&protocol conformance descriptor for _RequirementFailureView<A, B>);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254A1A3A8);
  }
  return result;
}

uint64_t sub_20E40D7EC@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  return sub_20E40D8A8(a1, 0, (uint64_t)sub_20E40F8CC, a2);
}

uint64_t sub_20E40D7FC()
{
  unsigned __int8 v1;

  sub_20E40D564();
  sub_20E4A3C08();
  return v1;
}

uint64_t sub_20E40D834()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_20E4A35CC();
  swift_release();
  return swift_release();
}

uint64_t View.localizer(from:)@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  return sub_20E40D8A8(a1, 1, (uint64_t)sub_20E40F8CC, a2);
}

uint64_t sub_20E40D8A8@<X0>(uint64_t a1@<X2>, char a2@<W3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[2];
  _QWORD v25[2];
  char v26;

  v22 = a4;
  v23 = a3;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19158);
  v6 = sub_20E4A39D4();
  v20 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v19 - v7;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A18588);
  v9 = sub_20E4A39D4();
  v21 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v19 - v10;
  v12 = swift_retain();
  sub_20E40F604(v12, a2);
  type metadata accessor for _LocalizerOwner();
  sub_20E39F334((unint64_t *)&qword_254A1A338, (uint64_t (*)(uint64_t))type metadata accessor for _LocalizerOwner, (uint64_t)&unk_20E4AB4F0);
  sub_20E4A42F8();
  swift_release();
  swift_getKeyPath();
  v26 = 1;
  v13 = MEMORY[0x24BDF1028];
  v14 = sub_20E39D010(&qword_254A19180, &qword_254A19158, MEMORY[0x24BDF1028]);
  v25[0] = a1;
  v25[1] = v14;
  v15 = MEMORY[0x24BDED308];
  v16 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v6, v25);
  sub_20E4A4250();
  swift_release();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v6);
  swift_getKeyPath();
  v17 = sub_20E39D010((unint64_t *)&qword_254A18590, &qword_254A18588, v13);
  v24[0] = v16;
  v24[1] = v17;
  swift_retain();
  MEMORY[0x212BBDF90](v15, v9, v24);
  sub_20E4A4388();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v11, v9);
}

uint64_t sub_20E40DB08()
{
  return sub_20E4A3BB4();
}

uint64_t sub_20E40DB28(uint64_t a1)
{
  uint64_t v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v2 = sub_20E4A33BC();
  v3 = MEMORY[0x24BDAC7A8](v2);
  (*(void (**)(char *, uint64_t, double))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  return sub_20E4A3BC0();
}

uint64_t sub_20E40DBA4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  void (*v13)(char *, uint64_t);
  uint64_t v14;
  uint64_t v16;
  _QWORD v18[4];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A428);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v18[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_20E4A4A18();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v18[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v18[-1] - v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A430);
  sub_20E4A4EE0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    swift_release();
    sub_20E39D1F8((uint64_t)v4, &qword_254A1A428);
LABEL_5:
    v14 = sub_20E4A33BC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(a1, 1, 1, v14);
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v4, v5);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x24BE5C648], v5);
  sub_20E39F334(&qword_254A1A438, (uint64_t (*)(uint64_t))MEMORY[0x24BE5C650], MEMORY[0x24BE5C660]);
  v12 = sub_20E4A5C0C();
  v13 = *(void (**)(char *, uint64_t))(v6 + 8);
  v13(v8, v5);
  if ((v12 & 1) != 0)
  {
    swift_release();
    v13(v11, v5);
    goto LABEL_5;
  }
  sub_20E4A4EA4();
  __swift_project_boxed_opaque_existential_1(v18, v18[3]);
  sub_20E4A5AC8();
  swift_release();
  v13(v11, v5);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  v16 = sub_20E4A33BC();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a1, 0, 1, v16);
}

uint64_t sub_20E40DDF8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A420);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_20E40DBA4((uint64_t)v4);
  v5 = sub_20E4A33BC();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    return sub_20E39D1F8((uint64_t)v4, &qword_254A1A420);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(a1, v4, v5);
}

uint64_t View.localizer(makeLocalizer:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;
  _QWORD v14[2];
  char v15;

  v13 = a4;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19158);
  v7 = sub_20E4A39D4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v14[-1] - v9;
  type metadata accessor for _LocalizerOwner();
  swift_allocObject();
  swift_retain();
  sub_20E40F348(a1, a2);
  swift_release();
  sub_20E39F334((unint64_t *)&qword_254A1A338, (uint64_t (*)(uint64_t))type metadata accessor for _LocalizerOwner, (uint64_t)&unk_20E4AB4F0);
  sub_20E4A42F8();
  swift_release();
  swift_getKeyPath();
  v15 = 1;
  v11 = sub_20E39D010(&qword_254A19180, &qword_254A19158, MEMORY[0x24BDF1028]);
  v14[0] = a3;
  v14[1] = v11;
  MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v7, v14);
  sub_20E4A4250();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t View.localizer(_:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[2];
  _QWORD v26[2];
  _BYTE v27[40];

  v19 = a2;
  v22 = a3;
  v4 = sub_20E4A33BC();
  v23 = *(_QWORD *)(v4 - 8);
  v24 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19158);
  v7 = sub_20E4A39D4();
  v20 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v19 - v8;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A18588);
  v10 = sub_20E4A39D4();
  v21 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v19 - v11;
  sub_20E3C39FC((uint64_t)a1, (uint64_t)v27);
  type metadata accessor for _LocalizerOwner();
  swift_allocObject();
  sub_20E40E944((uint64_t)v27);
  sub_20E39F334((unint64_t *)&qword_254A1A338, (uint64_t (*)(uint64_t))type metadata accessor for _LocalizerOwner, (uint64_t)&unk_20E4AB4F0);
  v13 = v19;
  sub_20E4A42F8();
  swift_release();
  swift_getKeyPath();
  v27[0] = 1;
  v14 = MEMORY[0x24BDF1028];
  v15 = sub_20E39D010(&qword_254A19180, &qword_254A19158, MEMORY[0x24BDF1028]);
  v26[0] = v13;
  v26[1] = v15;
  v16 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v7, v26);
  sub_20E4A4250();
  swift_release();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v9, v7);
  swift_getKeyPath();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20E4A5AC8();
  v17 = sub_20E39D010((unint64_t *)&qword_254A18590, &qword_254A18588, v14);
  v25[0] = v16;
  v25[1] = v17;
  MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v10, v25);
  sub_20E4A4250();
  swift_release();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v6, v24);
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v12, v10);
}

unint64_t sub_20E40E348()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t *boxed_opaque_existential_1Tm;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254A18B08);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_20E4A72D0;
  *(_QWORD *)(inited + 32) = sub_20E4A5C3C();
  *(_QWORD *)(inited + 40) = v1;
  swift_getErrorValue();
  *(_QWORD *)(inited + 72) = v4;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)(inited + 48));
  (*(void (**)(uint64_t *))(*(_QWORD *)(v4 - 8) + 16))(boxed_opaque_existential_1Tm);
  return sub_20E3B50B8(inited);
}

uint64_t sub_20E40E3EC()
{
  void *v0;
  id v1;
  uint64_t v2;

  v0 = (void *)sub_20E4A32D8();
  v1 = objc_msgSend(v0, sel_domain);

  v2 = sub_20E4A5C3C();
  sub_20E4A5C6C();
  swift_getErrorValue();
  sub_20E4A63C8();
  sub_20E4A5C6C();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_20E40E4A8()
{
  uint64_t v0;
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254A18A20);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_20E4A72D0;
  if (qword_253ED2A20 != -1)
    swift_once();
  *(_QWORD *)(v0 + 32) = sub_20E4A32A8();
  *(_QWORD *)(v0 + 40) = v1;
  return v0;
}

BOOL sub_20E40E568(uint64_t a1)
{
  uint64_t v1;

  if (!a1)
    (*(void (**)(void))(v1 + 8))();
  return a1 == 0;
}

uint64_t sub_20E40E59C()
{
  sub_20E410138();
  return sub_20E4A63BC();
}

uint64_t sub_20E40E5C4()
{
  sub_20E410138();
  return sub_20E4A63B0();
}

unint64_t sub_20E40E5F4()
{
  return 0xD000000000000029;
}

uint64_t sub_20E40E618()
{
  uint64_t v0;
  _QWORD *v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A430);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_20E3B4E08;
  return sub_20E4A4E98();
}

void sub_20E40E690()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v17[48];
  _OWORD v18[2];
  uint64_t v19;
  char v20;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A190F8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v17[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_20E4A5A8C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = *(_QWORD *)(v1 + 16);
  if (v9)
  {
    v10 = *(_QWORD *)(v1 + 24);
    swift_retain();
    sub_20E4A5A20();
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0D58);
    sub_20E4A4ACC();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_20E4A72D0;
    sub_20E4A4A30();
    sub_20E4A5750();
    swift_bridgeObjectRelease();
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
    v19 = 0;
    memset(v18, 0, sizeof(v18));
    v20 = -1;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_20E40FE64((uint64_t)v18, (uint64_t)v17);
    swift_retain();
    sub_20E4A35D8();
    sub_20E39D1F8((uint64_t)v18, &qword_254A1A3D8);
    v11 = sub_20E4A5E58();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v4, 1, 1, v11);
    v12 = swift_allocObject();
    swift_weakInit();
    sub_20E4A5DF8();
    sub_20E3E592C(v9);
    swift_retain();
    v13 = sub_20E4A5DEC();
    v14 = (_QWORD *)swift_allocObject();
    v15 = MEMORY[0x24BEE6930];
    v14[2] = v13;
    v14[3] = v15;
    v14[4] = v9;
    v14[5] = v10;
    v14[6] = v12;
    swift_release();
    sub_20E3D1A10((uint64_t)v4, (uint64_t)&unk_254A1A400, (uint64_t)v14);
    sub_20E3CF5C0(v9);
    swift_release();
    v16 = *(_QWORD *)(v1 + 16);
    *(_QWORD *)(v1 + 16) = 0;
    *(_QWORD *)(v1 + 24) = 0;
    sub_20E3CF5C0(v16);
  }
}

uint64_t sub_20E40E944(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE v9[48];
  _OWORD v10[2];
  uint64_t v11;
  char v12;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A3F0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = v1 + OBJC_IVAR____TtC18_JetEngine_SwiftUI15_LocalizerOwner__result;
  v11 = 0;
  memset(v10, 0, sizeof(v10));
  v12 = -1;
  sub_20E40FE64((uint64_t)v10, (uint64_t)v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A3D8);
  sub_20E4A359C();
  sub_20E39D1F8((uint64_t)v10, &qword_254A1A3D8);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v4 + 32))(v7, v6, v3);
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = 0;
  sub_20E3C39FC(a1, (uint64_t)v10);
  v12 = 0;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_20E40FE64((uint64_t)v10, (uint64_t)v9);
  swift_retain();
  sub_20E4A35D8();
  sub_20E39D1F8((uint64_t)v10, &qword_254A1A3D8);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v1;
}

uint64_t sub_20E40EA9C(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v11)(_QWORD *);

  v6[46] = a5;
  v6[47] = a6;
  v6[45] = a4;
  sub_20E4A4A90();
  v6[48] = swift_task_alloc();
  v8 = sub_20E4A5A8C();
  v6[49] = v8;
  v6[50] = *(_QWORD *)(v8 - 8);
  v6[51] = swift_task_alloc();
  v6[52] = sub_20E4A5DF8();
  v6[53] = sub_20E4A5DEC();
  v11 = (uint64_t (*)(_QWORD *))((char *)a4 + *a4);
  v9 = (_QWORD *)swift_task_alloc();
  v6[54] = v9;
  *v9 = v6;
  v9[1] = sub_20E40EB78;
  return v11(v6 + 26);
}

uint64_t sub_20E40EB78()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 440) = v0;
  swift_task_dealloc();
  sub_20E4A5DBC();
  return swift_task_switch();
}

uint64_t sub_20E40EC00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  swift_release();
  swift_beginAccess();
  if (!swift_weakLoadStrong())
    goto LABEL_5;
  if ((sub_20E4A5E70() & 1) == 0)
  {
    v2 = *(_QWORD *)(v0 + 400);
    v1 = *(_QWORD *)(v0 + 408);
    v3 = *(_QWORD *)(v0 + 392);
    sub_20E3C39FC(v0 + 208, v0 + 64);
    *(_BYTE *)(v0 + 104) = 0;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_20E40FE64(v0 + 64, v0 + 16);
    swift_retain();
    sub_20E4A35D8();
    sub_20E39D1F8(v0 + 64, &qword_254A1A3D8);
    sub_20E4A5A20();
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0D58);
    sub_20E4A4ACC();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_20E4A72D0;
    sub_20E4A4A30();
    sub_20E4A5750();
    swift_bridgeObjectRelease();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
LABEL_5:
    __swift_destroy_boxed_opaque_existential_1(v0 + 208);
    goto LABEL_6;
  }
  __swift_destroy_boxed_opaque_existential_1(v0 + 208);
  swift_release();
LABEL_6:
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20E40EDDC()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  char v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *boxed_opaque_existential_1Tm;
  uint64_t v16;
  uint64_t v17;

  swift_release();
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v2 = Strong;
    v3 = sub_20E4A5E70();
    v4 = *(void **)(v0 + 440);
    if ((v3 & 1) != 0)
    {

      swift_release();
    }
    else
    {
      v5 = *(_QWORD *)(v0 + 408);
      v16 = *(_QWORD *)(v0 + 392);
      v17 = *(_QWORD *)(v0 + 400);
      v6 = *(_QWORD *)(v0 + 368);
      v7 = *(_QWORD *)(v2 + 16);
      *(_QWORD *)(v2 + 16) = *(_QWORD *)(v0 + 360);
      *(_QWORD *)(v2 + 24) = v6;
      sub_20E3CF5C0(v7);
      v8 = swift_allocObject();
      swift_weakInit();
      sub_20E40FF8C();
      v9 = swift_allocError();
      *v10 = v4;
      v10[1] = sub_20E40FF84;
      v10[2] = v8;
      *(_QWORD *)(v0 + 112) = v9;
      *(_BYTE *)(v0 + 152) = 1;
      swift_getKeyPath();
      swift_getKeyPath();
      sub_20E40FE64(v0 + 112, v0 + 160);
      swift_retain();
      v11 = v4;
      swift_retain();
      sub_20E4A35D8();
      sub_20E39D1F8(v0 + 112, &qword_254A1A3D8);
      sub_20E4A5A20();
      __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0D58);
      sub_20E4A4ACC();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_20E4A72D0;
      sub_20E4A4A84();
      sub_20E4A4A78();
      swift_getErrorValue();
      v12 = *(_QWORD *)(v0 + 280);
      v13 = *(_QWORD *)(v0 + 288);
      *(_QWORD *)(v0 + 272) = v13;
      boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)(v0 + 248));
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(boxed_opaque_existential_1Tm, v12, v13);
      sub_20E4A4A54();
      sub_20E39D1F8(v0 + 248, &qword_253ED2A38);
      sub_20E4A4A78();
      sub_20E4A4A9C();
      sub_20E4A575C();
      swift_release();
      swift_bridgeObjectRelease();

      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v5, v16);
    }
  }
  else
  {

  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20E40F0C8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v9;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A190F8);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_20E4A5E58();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  v4 = swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  sub_20E4A5DF8();
  swift_retain();
  v5 = sub_20E4A5DEC();
  v6 = (_QWORD *)swift_allocObject();
  v7 = MEMORY[0x24BEE6930];
  v6[2] = v5;
  v6[3] = v7;
  v6[4] = v4;
  swift_release();
  sub_20E3D1B5C((uint64_t)v2, (uint64_t)&unk_254A1A418, (uint64_t)v6);
  return swift_release();
}

uint64_t sub_20E40F208(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[5] = a1;
  v4[6] = a4;
  sub_20E4A5DF8();
  v4[7] = sub_20E4A5DEC();
  sub_20E4A5DBC();
  return swift_task_switch();
}

uint64_t sub_20E40F274()
{
  uint64_t v0;
  uint64_t Strong;

  swift_release();
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    sub_20E40E690();
    swift_release();
  }
  **(_BYTE **)(v0 + 40) = Strong == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20E40F2EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_20E3CF5C0(*(_QWORD *)(v0 + 16));
  v1 = v0 + OBJC_IVAR____TtC18_JetEngine_SwiftUI15_LocalizerOwner__result;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A3F0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_20E40F348(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE v11[48];
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  char v15;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A3F0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = v2 + OBJC_IVAR____TtC18_JetEngine_SwiftUI15_LocalizerOwner__result;
  v14 = 0;
  v12 = 0u;
  v13 = 0u;
  v15 = -1;
  sub_20E40FE64((uint64_t)&v12, (uint64_t)v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A3D8);
  sub_20E4A359C();
  sub_20E39D1F8((uint64_t)&v12, &qword_254A1A3D8);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v6 + 32))(v9, v8, v5);
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  v14 = 0;
  v12 = 0u;
  v13 = 0u;
  v15 = -1;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_20E40FE64((uint64_t)&v12, (uint64_t)v11);
  swift_retain();
  swift_retain();
  sub_20E4A35D8();
  sub_20E39D1F8((uint64_t)&v12, &qword_254A1A3D8);
  sub_20E40E690();
  return v2;
}

uint64_t sub_20E40F4B0(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  id v8;
  _BYTE v10[48];
  _OWORD v11[2];
  uint64_t v12;
  char v13;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A3F0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = v1 + OBJC_IVAR____TtC18_JetEngine_SwiftUI15_LocalizerOwner__result;
  v12 = 0;
  memset(v11, 0, sizeof(v11));
  v13 = -1;
  sub_20E40FE64((uint64_t)v11, (uint64_t)v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A3D8);
  sub_20E4A359C();
  sub_20E39D1F8((uint64_t)v11, &qword_254A1A3D8);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v4 + 32))(v7, v6, v3);
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = 0;
  *(_QWORD *)&v11[0] = a1;
  v13 = 1;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_20E40FE64((uint64_t)v11, (uint64_t)v10);
  v8 = a1;
  swift_retain();
  sub_20E4A35D8();
  sub_20E39D1F8((uint64_t)v11, &qword_254A1A3D8);
  return v1;
}

uint64_t sub_20E40F604(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  char v16;
  void (*v17)(char *, uint64_t);
  uint64_t result;
  _BYTE v20[40];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A428);
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = sub_20E4A4A18();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = &v20[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  MEMORY[0x24BDAC7A8](v11);
  v13 = &v20[-v12 - 8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A430);
  sub_20E4A4EE0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v6, v7);
    (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x24BE5C648], v7);
    v16 = sub_20E4A4A0C();
    v17 = *(void (**)(char *, uint64_t))(v8 + 8);
    v17(v10, v7);
    if ((v16 & 1) != 0)
    {
      type metadata accessor for _LocalizerOwner();
      swift_allocObject();
      v15 = sub_20E40F348((uint64_t)&unk_254A1A450, a1);
    }
    else
    {
      sub_20E4A4EA4();
      type metadata accessor for _LocalizerOwner();
      v15 = swift_allocObject();
      sub_20E40E944((uint64_t)v20);
    }
    swift_release();
    v17(v13, v7);
    return v15;
  }
  sub_20E39D1F8((uint64_t)v6, &qword_254A1A428);
  if ((a2 & 1) == 0)
  {
    sub_20E410068();
    v14 = (void *)swift_allocError();
    type metadata accessor for _LocalizerOwner();
    swift_allocObject();
    v15 = sub_20E40F4B0(v14);

    swift_release();
    return v15;
  }
  result = sub_20E4A4EB0();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for _LocalizerOwner()
{
  uint64_t result;

  result = qword_254A1A3C0;
  if (!qword_254A1A3C0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_20E40F8A8()
{
  return sub_20E4A3BB4();
}

uint64_t sub_20E40F8CC(uint64_t a1)
{
  return sub_20E40DDF8(a1);
}

uint64_t sub_20E40F8E4()
{
  return type metadata accessor for _LocalizerOwner();
}

void sub_20E40F8EC()
{
  unint64_t v0;

  sub_20E40F964();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_20E40F964()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254A1A3D0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1A3D8);
    v0 = sub_20E4A35E4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254A1A3D0);
  }
}

uint64_t sub_20E40F9BC(uint64_t a1)
{
  return get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyADyADyxAA30_EnvironmentKeyWritingModifierVy011_JetEngine_aB015_LocalizerOwnerCSgGGAFySbGGAA01_fg9TransformI0Vy10Foundation6LocaleVGGAaBHPAnaBHPAlaBHPxAaBHD1__AkA0cI0HPyHCHC_AmaVHPyHCHC_AtaVHPyHCHCTm(a1, &qword_254A19160, &qword_254A19188, MEMORY[0x24BDF1248]);
}

uint64_t sub_20E40F9D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[2];
  _QWORD v8[2];

  v1 = *(_QWORD *)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19158);
  v2 = sub_20E4A39D4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A18588);
  v3 = sub_20E4A39D4();
  v4 = MEMORY[0x24BDF1028];
  v8[0] = v1;
  v8[1] = sub_20E39D010(&qword_254A19180, &qword_254A19158, MEMORY[0x24BDF1028]);
  v5 = MEMORY[0x24BDED308];
  v7[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v2, v8);
  v7[1] = sub_20E39D010((unint64_t *)&qword_254A18590, &qword_254A18588, v4);
  return MEMORY[0x212BBDF90](v5, v3, v7);
}

uint64_t sub_20E40FAB8(uint64_t a1)
{
  return get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyADyADyxAA30_EnvironmentKeyWritingModifierVy011_JetEngine_aB015_LocalizerOwnerCSgGGAFySbGGAA01_fg9TransformI0Vy10Foundation6LocaleVGGAaBHPAnaBHPAlaBHPxAaBHD1__AkA0cI0HPyHCHC_AmaVHPyHCHC_AtaVHPyHCHCTm(a1, &qword_254A1A3E0, &qword_254A1A3E8, MEMORY[0x24BDF1028]);
}

uint64_t get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyADyADyxAA30_EnvironmentKeyWritingModifierVy011_JetEngine_aB015_LocalizerOwnerCSgGGAFySbGGAA01_fg9TransformI0Vy10Foundation6LocaleVGGAaBHPAnaBHPAlaBHPxAaBHD1__AkA0cI0HPyHCHC_AmaVHPyHCHC_AtaVHPyHCHCTm(uint64_t a1, uint64_t *a2, unint64_t *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[2];
  _QWORD v15[2];
  _QWORD v16[2];

  v7 = *(_QWORD *)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A19158);
  v8 = sub_20E4A39D4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A18588);
  v9 = sub_20E4A39D4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
  v10 = sub_20E4A39D4();
  v11 = MEMORY[0x24BDF1028];
  v16[0] = v7;
  v16[1] = sub_20E39D010(&qword_254A19180, &qword_254A19158, MEMORY[0x24BDF1028]);
  v12 = MEMORY[0x24BDED308];
  v15[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v8, v16);
  v15[1] = sub_20E39D010((unint64_t *)&qword_254A18590, &qword_254A18588, v11);
  v14[0] = MEMORY[0x212BBDF90](v12, v9, v15);
  v14[1] = sub_20E39D010(a3, a2, a4);
  return MEMORY[0x212BBDF90](v12, v10, v14);
}

_QWORD *destroy for _LocalizerOwner.ResolutionState(_QWORD *result)
{
  if (*result >= 0xFFFFFFFFuLL)
    return (_QWORD *)swift_release();
  return result;
}

uint64_t _s18_JetEngine_SwiftUI15_LocalizerOwnerC15ResolutionStateOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    v3 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    swift_retain();
  }
  return a1;
}

unint64_t *assignWithCopy for _LocalizerOwner.ResolutionState(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v4 = *a2;
  if (*a1 < 0xFFFFFFFF)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      v6 = a2[1];
      *a1 = v4;
      a1[1] = v6;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_release();
    goto LABEL_7;
  }
  v5 = a2[1];
  *a1 = v4;
  a1[1] = v5;
  swift_retain();
  swift_release();
  return a1;
}

unint64_t *assignWithTake for _LocalizerOwner.ResolutionState(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v4 = *a2;
  if (*a1 < 0xFFFFFFFF)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      v6 = a2[1];
      *a1 = v4;
      a1[1] = v6;
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_release();
    goto LABEL_7;
  }
  v5 = a2[1];
  *a1 = v4;
  a1[1] = v5;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for _LocalizerOwner.ResolutionState(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for _LocalizerOwner.ResolutionState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

_QWORD *sub_20E40FE2C(_QWORD *result, int a2)
{
  uint64_t v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else
  {
    if (!a2)
      return result;
    v2 = (a2 - 1);
  }
  *result = v2;
  return result;
}

ValueMetadata *type metadata accessor for _LocalizerOwner.ResolutionState()
{
  return &type metadata for _LocalizerOwner.ResolutionState;
}

uint64_t sub_20E40FE64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A3D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20E40FEAC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_20E40FED0()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E40FF04(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_20E3B4E08;
  return sub_20E40EA9C(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_20E40FF84()
{
  return sub_20E40F0C8();
}

unint64_t sub_20E40FF8C()
{
  unint64_t result;

  result = qword_254A1A408;
  if (!qword_254A1A408)
  {
    result = MEMORY[0x212BBDF90](&unk_20E4AB73C, &type metadata for _LocalizerOwner.ResolutionError);
    atomic_store(result, &qword_254A1A408);
  }
  return result;
}

uint64_t sub_20E40FFD0()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E40FFFC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_20E3B50B0;
  return sub_20E40F208(a1, v4, v5, v6);
}

unint64_t sub_20E410068()
{
  unint64_t result;

  result = qword_254A1A440;
  if (!qword_254A1A440)
  {
    result = MEMORY[0x212BBDF90](&unk_20E4AB6FC, &type metadata for _LocalizerOwner.NoLocalizerError);
    atomic_store(result, &qword_254A1A440);
  }
  return result;
}

uint64_t sub_20E4100AC()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_20E3B4E08;
  return sub_20E40E618();
}

ValueMetadata *type metadata accessor for IsLocalizerSpecifiedKey()
{
  return &type metadata for IsLocalizerSpecifiedKey;
}

ValueMetadata *type metadata accessor for _LocalizerOwner.NoLocalizerError()
{
  return &type metadata for _LocalizerOwner.NoLocalizerError;
}

ValueMetadata *type metadata accessor for _LocalizerOwner.ResolutionError()
{
  return &type metadata for _LocalizerOwner.ResolutionError;
}

unint64_t sub_20E410138()
{
  unint64_t result;

  result = qword_254A1A458;
  if (!qword_254A1A458)
  {
    result = MEMORY[0x212BBDF90](&unk_20E4AB63C, &type metadata for _LocalizerOwner.ResolutionError);
    atomic_store(result, (unint64_t *)&qword_254A1A458);
  }
  return result;
}

uint64_t sub_20E41017C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, int a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  unint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;

  v39 = a5;
  v37 = a4;
  v43 = a3;
  v44 = a6;
  v38 = a2;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CC0);
  MEMORY[0x24BDAC7A8](v7);
  v42 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_20E4A5450();
  v35 = *(_QWORD *)(v9 - 8);
  v36 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_20E4A5174();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CC8);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v35 - v20;
  v22 = type metadata accessor for ImpressionableViewModifier(0);
  MEMORY[0x24BDAC7A8](v22);
  v24 = (uint64_t *)((char *)&v35 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A568);
  MEMORY[0x24BDAC7A8](v25);
  v27 = (char *)&v35 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = a1;
  sub_20E3A5E20(a1, (uint64_t)v21, &qword_253ED0CC8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v21, 1, v12) == 1)
  {
    v28 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v29 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
    v29(v15, v21, v12);
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0D60);
    v30 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_20E4A72D0;
    v29((char *)(v28 + v30), v15, v12);
  }
  v31 = v37 & 1;
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v11, v38, v36);
  sub_20E39F87C(v28, (uint64_t)v11, v43, v31, v39 & 1, v24);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A578);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v27, v40, v32);
  sub_20E3A57AC((uint64_t)v24, (uint64_t)&v27[*(int *)(v25 + 36)], type metadata accessor for ImpressionableViewModifier);
  sub_20E3A5E20(v41, (uint64_t)v18, &qword_253ED0CC8);
  v33 = (uint64_t)v42;
  sub_20E4A50F0();
  sub_20E4104C4(v33, &qword_254A1A548, &qword_254A1A568, v44);
  sub_20E39D1F8(v33, &qword_253ED0CC0);
  return sub_20E39D1F8((uint64_t)v27, &qword_254A1A568);
}

uint64_t sub_20E4104C4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t *v17;
  char *v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t *v22;

  v22 = a3;
  v7 = sub_20E4A33B0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (int *)type metadata accessor for ClickLocationViewModifier();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (uint64_t *)((char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CC0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20E3A5E20(a1, (uint64_t)v16, &qword_253ED0CC0);
  *v13 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
  swift_storeEnumTagMultiPayload();
  v17 = (uint64_t *)((char *)v13 + v11[5]);
  *v17 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A20);
  swift_storeEnumTagMultiPayload();
  sub_20E3A5E20((uint64_t)v16, (uint64_t)v13 + v11[6], &qword_253ED0CC0);
  sub_20E4A33A4();
  sub_20E39D1F8((uint64_t)v16, &qword_253ED0CC0);
  v18 = (char *)v13 + v11[7];
  *(_QWORD *)&v18[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C68) + 28)] = 0;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v18, v10, v7);
  v19 = __swift_instantiateConcreteTypeFromMangledName(a2);
  sub_20E3A57AC((uint64_t)v13, a4 + *(int *)(v19 + 36), (uint64_t (*)(_QWORD))type metadata accessor for ClickLocationViewModifier);
  return sub_20E3A5E20(v21, a4, v22);
}

uint64_t View.unifiedImpressionableLayoutItem(_:position:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  _OWORD v10[2];
  __int128 v11;
  __int128 v12;
  char v13;
  __int128 v14[2];
  _OWORD v15[4];
  char v16;

  sub_20E3C39FC(a1, (uint64_t)v14);
  *((_QWORD *)&v12 + 1) = swift_getKeyPath();
  v13 = 0;
  sub_20E3B1AB4(v14, (uint64_t)v10);
  *((_QWORD *)&v11 + 1) = a2;
  LOBYTE(v12) = a3 & 1;
  v16 = v13;
  v15[0] = v10[0];
  v15[1] = v10[1];
  v15[2] = v11;
  v15[3] = v12;
  MEMORY[0x212BBBA70](v15, a4, &type metadata for UnifiedImpressionableLayoutItemViewModifier, a5);
  return sub_20E410A6C((uint64_t)v15);
}

uint64_t View.unifiedImpressionableLayout<A>(_:position:definesParentContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, unsigned int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  char v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  _BYTE *v24;
  _BYTE v26[12];
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v30 = a7;
  v28 = a9;
  v29 = a5;
  v27 = a4;
  v13 = a3 & 1;
  v14 = *(_QWORD *)(a6 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v16 = &v26[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v20 = type metadata accessor for UnifiedImpressionableLayoutViewModifier(0, v18, v19, v17);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v24 = &v26[-v23];
  (*(void (**)(_BYTE *, uint64_t, uint64_t, double))(v14 + 16))(v16, a1, a6, v22);
  sub_20E410888((uint64_t)v16, a2, v13, v27, a6, a8, (uint64_t)v24);
  MEMORY[0x212BBBA70](v24, v29, v20, v30);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v21 + 8))(v24, v20);
}

uint64_t sub_20E410888@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  char v8;
  int *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;

  v8 = a4;
  v13 = (int *)type metadata accessor for UnifiedImpressionableLayoutViewModifier(0, a5, a6, a4);
  v14 = a7 + v13[11];
  *(_QWORD *)v14 = swift_getKeyPath();
  *(_BYTE *)(v14 + 8) = 0;
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 32))(a7, a1, a5);
  v16 = a7 + v13[9];
  *(_QWORD *)v16 = a2;
  *(_BYTE *)(v16 + 8) = a3 & 1;
  *(_BYTE *)(a7 + v13[10]) = v8;
  return result;
}

uint64_t View.optInForLayoutBasedImpressions(_:)()
{
  swift_getKeyPath();
  sub_20E4A4250();
  return swift_release();
}

uint64_t sub_20E4109A4()
{
  sub_20E41395C();
  return sub_20E4A3C08();
}

uint64_t sub_20E4109D8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_20E41395C();
  result = sub_20E4A3C08();
  *a1 = v3;
  return result;
}

uint64_t sub_20E410A24()
{
  sub_20E41395C();
  return sub_20E4A3C14();
}

uint64_t sub_20E410A6C(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  sub_20E39CED8(*(_QWORD *)(a1 + 56), *(_BYTE *)(a1 + 64));
  return a1;
}

uint64_t type metadata accessor for UnifiedImpressionableLayoutViewModifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for UnifiedImpressionableLayoutViewModifier);
}

uint64_t sub_20E410AA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  void (*v51)(char *, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  void (*v84)(char *, uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  int v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  void (*v103)(uint64_t, uint64_t);
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  char *v132;
  _QWORD *v133;
  _QWORD *v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  _QWORD v151[2];
  _QWORD v152[2];
  _QWORD v153[2];
  _QWORD v154[2];
  _QWORD v155[2];
  _QWORD v156[2];
  _QWORD v157[2];
  _QWORD v158[2];
  _QWORD v159[2];
  _QWORD v160[2];
  _QWORD v161[2];
  _QWORD v162[2];
  _QWORD v163[3];
  _QWORD v164[2];
  _QWORD v165[2];
  _QWORD v166[2];
  _QWORD v167[2];
  _QWORD v168[2];
  _QWORD v169[2];
  _QWORD v170[2];
  _QWORD v171[2];
  _QWORD v172[2];
  _QWORD v173[2];
  _QWORD v174[2];
  _QWORD v175[2];
  _QWORD v176[2];
  char v177[9];

  v140 = a1;
  v148 = a3;
  MEMORY[0x212BBDF90](&unk_20E4AB96C);
  v5 = sub_20E4A3EA8();
  type metadata accessor for Impressionable_ViewModifier(255);
  v6 = sub_20E4A39D4();
  type metadata accessor for ClickLocationViewModifier();
  v150 = v6;
  v7 = sub_20E4A39D4();
  v127 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v135 = (uint64_t)&v124 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v134 = (uint64_t *)((char *)&v124 - v10);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1A500);
  v131 = sub_20E4A39D4();
  v126 = *(_QWORD *)(v131 - 8);
  MEMORY[0x24BDAC7A8](v131);
  v12 = (char *)&v124 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v130 = (char *)&v124 - v14;
  type metadata accessor for ImpressionableViewModifier(255);
  v15 = v5;
  v149 = sub_20E4A39D4();
  v16 = sub_20E4A39D4();
  v17 = sub_20E4A3E00();
  v129 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v128 = (uint64_t)&v124 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v132 = (char *)&v124 - v20;
  v146 = v21;
  v22 = sub_20E4A3E00();
  v137 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v136 = (char *)&v124 - v23;
  v24 = sub_20E4A5450();
  v138 = *(_QWORD *)(v24 - 8);
  v139 = v24;
  MEMORY[0x24BDAC7A8](v24);
  v26 = (char *)&v124 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v27);
  v29 = (char *)&v124 - v28;
  v145 = v16;
  v124 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v32 = (char *)&v124 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v33);
  v133 = (uint64_t *)((char *)&v124 - v34);
  v144 = v22;
  v147 = v7;
  v35 = sub_20E4A3E00();
  v142 = *(_QWORD *)(v35 - 8);
  v143 = v35;
  MEMORY[0x24BDAC7A8](v35);
  v141 = (char *)&v124 - v36;
  v37 = v3 + *(int *)(a2 + 44);
  v38 = *(_QWORD *)v37;
  LOBYTE(v22) = *(_BYTE *)(v37 + 8);
  sub_20E39CFAC(*(_QWORD *)v37, v22);
  sub_20E45D544(v38, v22, v177);
  sub_20E39CED8(v38, v22);
  if (v177[0])
  {
    if (v177[0] == 1)
    {
      v39 = *(int *)(a2 + 40);
      v40 = v3 + *(int *)(a2 + 36);
      v41 = *(_QWORD *)v40;
      LODWORD(v127) = *(unsigned __int8 *)(v40 + 8);
      LODWORD(v133) = *(unsigned __int8 *)(v3 + v39);
      v134 = *(_QWORD **)(a2 + 16);
      v125 = v15;
      v42 = MEMORY[0x212BBDF90](MEMORY[0x24BDEFB78], v15);
      sub_20E4A5438();
      sub_20E4A5420();
      View.impressionableLayout<A>(_:scrollViewConfiguration:itemConfiguration:position:definesParentContext:)((uint64_t)v29, (uint64_t)v26, v41, v127, (int)v133, v15, (uint64_t)v12, v42);
      v43 = v139;
      v44 = *(void (**)(char *, uint64_t))(v138 + 8);
      v44(v26, v139);
      v44(v29, v43);
      v45 = sub_20E39D010(&qword_254A1A508, &qword_254A1A500, (uint64_t)&unk_20E4B0DD8);
      v163[1] = v42;
      v163[2] = v45;
      v46 = v42;
      v135 = v42;
      v47 = MEMORY[0x24BDED308];
      v48 = v131;
      v49 = MEMORY[0x212BBDF90]();
      v50 = v130;
      sub_20E39D614(v130, v12, v48, v49);
      v51 = *(void (**)(char *, uint64_t))(v126 + 8);
      v51(v12, v48);
      sub_20E39D618((uint64_t)v50, v48, (uint64_t)v12);
      v52 = sub_20E3C3B10((uint64_t)v12);
      v51(v12, v48);
      v163[0] = v52;
      v53 = sub_20E39F334(&qword_254A18220, type metadata accessor for ImpressionableViewModifier, (uint64_t)&unk_20E4A73D8);
      v162[0] = v46;
      v162[1] = v53;
      v54 = MEMORY[0x212BBDF90](v47, v149, v162);
      v55 = sub_20E39F334(&qword_253ED07E8, (uint64_t (*)(uint64_t))type metadata accessor for ClickLocationViewModifier, (uint64_t)&unk_20E4A953C);
      v161[0] = v54;
      v161[1] = v55;
      v56 = v145;
      v57 = MEMORY[0x212BBDF90](v47, v145, v161);
      v58 = (uint64_t)v132;
      v59 = MEMORY[0x24BDF4760];
      sub_20E3DC6B0((uint64_t)v163, MEMORY[0x24BDF4780]);
      swift_release();
      v51(v50, v48);
      v160[0] = v59;
      v160[1] = v57;
      v60 = v146;
      v61 = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v146, v160);
      v62 = v128;
      sub_20E39D618(v58, v60, v128);
      v63 = (uint64_t)v136;
      sub_20E39CBE0(v62, v56, v60);
      v64 = *(void (**)(uint64_t, uint64_t))(v129 + 8);
      v64(v62, v60);
      v159[0] = v57;
      v159[1] = v61;
      v65 = v56;
      v66 = v144;
      MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v144, v159);
      v67 = sub_20E39F334(&qword_253ED0850, type metadata accessor for Impressionable_ViewModifier, (uint64_t)&unk_20E4ABE68);
      v158[0] = v135;
      v158[1] = v67;
      v68 = MEMORY[0x24BDED308];
      v157[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v150, v158);
      v157[1] = v55;
      v69 = v68;
      v70 = v147;
      MEMORY[0x212BBDF90](v69, v147, v157);
      v71 = (uint64_t)v141;
      sub_20E3DC6B0(v63, v66);
      (*(void (**)(uint64_t, uint64_t))(v137 + 8))(v63, v66);
      v64(v58, v60);
      v72 = v125;
    }
    else
    {
      v91 = v3 + *(int *)(a2 + 36);
      v92 = *(_QWORD *)v91;
      v93 = *(_BYTE *)(v91 + 8);
      v94 = *(unsigned __int8 *)(v3 + *(int *)(a2 + 40));
      v95 = MEMORY[0x212BBDF90](MEMORY[0x24BDEFB78], v15);
      sub_20E4A5438();
      v96 = v135;
      View.impressionable_<A>(_:configuration:position:definesParentContext:)((uint64_t)v29, v92, v93, v94, v15, v95, v135);
      (*(void (**)(char *, uint64_t))(v138 + 8))(v29, v139);
      v97 = sub_20E39F334(&qword_253ED0850, type metadata accessor for Impressionable_ViewModifier, (uint64_t)&unk_20E4ABE68);
      v176[0] = v95;
      v176[1] = v97;
      v98 = MEMORY[0x24BDED308];
      v99 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v150, v176);
      v100 = sub_20E39F334(&qword_253ED07E8, (uint64_t (*)(uint64_t))type metadata accessor for ClickLocationViewModifier, (uint64_t)&unk_20E4A953C);
      v175[0] = v99;
      v175[1] = v100;
      v70 = v147;
      v101 = MEMORY[0x212BBDF90](v98, v147, v175);
      v102 = v134;
      sub_20E39D614(v134, v96, v70, v101);
      v103 = *(void (**)(uint64_t, uint64_t))(v127 + 8);
      v103(v96, v70);
      sub_20E39D618((uint64_t)v102, v70, v96);
      v104 = sub_20E39F334(&qword_254A18220, type metadata accessor for ImpressionableViewModifier, (uint64_t)&unk_20E4A73D8);
      v174[0] = v95;
      v174[1] = v104;
      v173[0] = MEMORY[0x212BBDF90](v98, v149, v174);
      v173[1] = v100;
      v105 = v145;
      v106 = MEMORY[0x212BBDF90](v98, v145, v173);
      v172[0] = MEMORY[0x24BDF4760];
      v172[1] = v106;
      v107 = MEMORY[0x24BDEF3E0];
      v60 = v146;
      v108 = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v146, v172);
      v171[0] = v106;
      v171[1] = v108;
      v109 = v107;
      v72 = v15;
      v66 = v144;
      MEMORY[0x212BBDF90](v109, v144, v171);
      v71 = (uint64_t)v141;
      v110 = v135;
      sub_20E39CBE0(v135, v66, v70);
      v103(v110, v70);
      v103((uint64_t)v134, v70);
      v65 = v105;
    }
  }
  else
  {
    v73 = v3 + *(int *)(a2 + 36);
    v74 = *(_QWORD *)v73;
    v75 = *(_BYTE *)(v73 + 8);
    LODWORD(v132) = *(unsigned __int8 *)(v3 + *(int *)(a2 + 40));
    v134 = *(_QWORD **)(a2 + 16);
    v125 = v15;
    v76 = MEMORY[0x212BBDF90](MEMORY[0x24BDEFB78], v15);
    sub_20E4A5438();
    v135 = v76;
    View.impressionable<A>(_:configuration:position:definesParentContext:)((uint64_t)v29, v74, v75, (int)v132, v15, v76, (uint64_t)v32);
    (*(void (**)(char *, uint64_t))(v138 + 8))(v29, v139);
    v77 = sub_20E39F334(&qword_254A18220, type metadata accessor for ImpressionableViewModifier, (uint64_t)&unk_20E4A73D8);
    v156[0] = v76;
    v156[1] = v77;
    v78 = MEMORY[0x24BDED308];
    v79 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v149, v156);
    v80 = sub_20E39F334(&qword_253ED07E8, (uint64_t (*)(uint64_t))type metadata accessor for ClickLocationViewModifier, (uint64_t)&unk_20E4A953C);
    v155[0] = v79;
    v155[1] = v80;
    v81 = v145;
    v82 = MEMORY[0x212BBDF90](v78, v145, v155);
    v83 = v133;
    sub_20E39D614(v133, v32, v81, v82);
    v84 = *(void (**)(char *, uint64_t))(v124 + 8);
    v84(v32, v81);
    sub_20E39D618((uint64_t)v83, v81, (uint64_t)v32);
    v154[0] = MEMORY[0x24BDF4760];
    v154[1] = v82;
    v85 = MEMORY[0x24BDEF3E0];
    v60 = v146;
    v86 = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v146, v154);
    v87 = (uint64_t)v136;
    sub_20E3DC6B0((uint64_t)v32, v81);
    v84(v32, v81);
    v153[0] = v82;
    v153[1] = v86;
    v72 = v125;
    v88 = v85;
    v65 = v81;
    v66 = v144;
    MEMORY[0x212BBDF90](v88, v144, v153);
    v89 = sub_20E39F334(&qword_253ED0850, type metadata accessor for Impressionable_ViewModifier, (uint64_t)&unk_20E4ABE68);
    v152[0] = v135;
    v152[1] = v89;
    v90 = MEMORY[0x24BDED308];
    v151[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v150, v152);
    v151[1] = v80;
    v70 = v147;
    MEMORY[0x212BBDF90](v90, v147, v151);
    v71 = (uint64_t)v141;
    sub_20E3DC6B0(v87, v66);
    (*(void (**)(uint64_t, uint64_t))(v137 + 8))(v87, v66);
    v84((char *)v133, v65);
  }
  v111 = MEMORY[0x212BBDF90](MEMORY[0x24BDEFB78], v72);
  v112 = sub_20E39F334(&qword_254A18220, type metadata accessor for ImpressionableViewModifier, (uint64_t)&unk_20E4A73D8);
  v170[0] = v111;
  v170[1] = v112;
  v113 = MEMORY[0x24BDED308];
  v114 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v149, v170);
  v115 = sub_20E39F334(&qword_253ED07E8, (uint64_t (*)(uint64_t))type metadata accessor for ClickLocationViewModifier, (uint64_t)&unk_20E4A953C);
  v169[0] = v114;
  v169[1] = v115;
  v116 = MEMORY[0x212BBDF90](v113, v65, v169);
  v168[0] = MEMORY[0x24BDF4760];
  v168[1] = v116;
  v117 = MEMORY[0x24BDEF3E0];
  v118 = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v60, v168);
  v167[0] = v116;
  v167[1] = v118;
  v119 = MEMORY[0x212BBDF90](v117, v66, v167);
  v120 = sub_20E39F334(&qword_253ED0850, type metadata accessor for Impressionable_ViewModifier, (uint64_t)&unk_20E4ABE68);
  v166[0] = v111;
  v166[1] = v120;
  v165[0] = MEMORY[0x212BBDF90](v113, v150, v166);
  v165[1] = v115;
  v121 = MEMORY[0x212BBDF90](v113, v70, v165);
  v164[0] = v119;
  v164[1] = v121;
  v122 = v143;
  MEMORY[0x212BBDF90](v117, v143, v164);
  sub_20E39D618(v71, v122, v148);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v142 + 8))(v71, v122);
}

uint64_t sub_20E411718@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _BYTE v60[9];

  v54 = a1;
  v58 = a2;
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A510);
  MEMORY[0x24BDAC7A8](v59);
  v45 = (uint64_t)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v47 = (char *)&v42 - v5;
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A518);
  MEMORY[0x24BDAC7A8](v44);
  v46 = (uint64_t *)((char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A520);
  MEMORY[0x24BDAC7A8](v42);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v43 = (uint64_t)&v42 - v10;
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A528);
  MEMORY[0x24BDAC7A8](v52);
  v48 = (uint64_t)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A530);
  MEMORY[0x24BDAC7A8](v55);
  v57 = (uint64_t)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A538);
  MEMORY[0x24BDAC7A8](v50);
  v51 = (uint64_t)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A540);
  MEMORY[0x24BDAC7A8](v56);
  v53 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CC8);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_20E4A5450();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A548);
  MEMORY[0x24BDAC7A8](v49);
  v23 = (char *)&v42 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v26 = (char *)&v42 - v25;
  v27 = *(_QWORD *)(v2 + 56);
  v28 = *(_BYTE *)(v2 + 64);
  sub_20E39CFAC(v27, v28);
  sub_20E45D544(v27, v28, v60);
  sub_20E39CED8(v27, v28);
  if (!v60[0])
  {
    v48 = *(_QWORD *)(v2 + 40);
    v36 = *(unsigned __int8 *)(v2 + 48);
    sub_20E4A5420();
    __swift_project_boxed_opaque_existential_1((_QWORD *)v2, *(_QWORD *)(v2 + 24));
    sub_20E4A5B40();
    sub_20E41017C((uint64_t)v17, (uint64_t)v21, v48, v36, 0, (uint64_t)v23);
    sub_20E39D1F8((uint64_t)v17, &qword_253ED0CC8);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    v33 = &qword_254A1A548;
    sub_20E3BB440((uint64_t)v23, (uint64_t)v26, &qword_254A1A548);
    sub_20E3A5E20((uint64_t)v26, v51, &qword_254A1A548);
    swift_storeEnumTagMultiPayload();
    sub_20E4135D8(&qword_254A1A558, &qword_254A1A548, (uint64_t (*)(void))sub_20E41365C);
    sub_20E4136F8();
    v37 = (uint64_t)v53;
    sub_20E4A3DF4();
    sub_20E3A5E20(v37, v57, &qword_254A1A540);
    swift_storeEnumTagMultiPayload();
    sub_20E413554();
    sub_20E4135D8(&qword_254A1A588, &qword_254A1A510, (uint64_t (*)(void))sub_20E41377C);
    sub_20E4A3DF4();
    sub_20E39D1F8(v37, &qword_254A1A540);
LABEL_6:
    v35 = (uint64_t)v26;
    return sub_20E39D1F8(v35, v33);
  }
  if (v60[0] != 1)
  {
    v38 = *(_QWORD *)(v2 + 40);
    v39 = *(unsigned __int8 *)(v2 + 48);
    sub_20E4A5420();
    __swift_project_boxed_opaque_existential_1((_QWORD *)v2, *(_QWORD *)(v2 + 24));
    sub_20E4A5B40();
    v40 = v45;
    sub_20E413064((uint64_t)v17, (uint64_t)v21, v38, v39, 0, v45);
    sub_20E39D1F8((uint64_t)v17, &qword_253ED0CC8);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    v33 = &qword_254A1A510;
    v26 = v47;
    sub_20E3BB440(v40, (uint64_t)v47, &qword_254A1A510);
    sub_20E3A5E20((uint64_t)v26, v57, &qword_254A1A510);
    swift_storeEnumTagMultiPayload();
    sub_20E413554();
    sub_20E4135D8(&qword_254A1A588, &qword_254A1A510, (uint64_t (*)(void))sub_20E41377C);
    sub_20E4A3DF4();
    goto LABEL_6;
  }
  v29 = *(_QWORD *)(v2 + 40);
  v30 = *(_BYTE *)(v2 + 48);
  sub_20E4A5420();
  sub_20E411E8C((_QWORD *)v2, v29, v30, (uint64_t)v8);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  v31 = v43;
  sub_20E3BB440((uint64_t)v8, v43, &qword_254A1A520);
  sub_20E3A5E20(v31, (uint64_t)v8, &qword_254A1A520);
  sub_20E4135D8(&qword_254A1A5A0, &qword_254A1A520, (uint64_t (*)(void))sub_20E413818);
  *v46 = sub_20E4A4718();
  swift_storeEnumTagMultiPayload();
  sub_20E4135D8(&qword_254A1A558, &qword_254A1A548, (uint64_t (*)(void))sub_20E41365C);
  v32 = v48;
  sub_20E4A3DF4();
  sub_20E39D1F8(v31, &qword_254A1A520);
  v33 = &qword_254A1A528;
  sub_20E3A5E20(v32, v51, &qword_254A1A528);
  swift_storeEnumTagMultiPayload();
  sub_20E4136F8();
  v34 = (uint64_t)v53;
  sub_20E4A3DF4();
  sub_20E3A5E20(v34, v57, &qword_254A1A540);
  swift_storeEnumTagMultiPayload();
  sub_20E413554();
  sub_20E4135D8(&qword_254A1A588, &qword_254A1A510, (uint64_t (*)(void))sub_20E41377C);
  sub_20E4A3DF4();
  sub_20E39D1F8(v34, &qword_254A1A540);
  v35 = v32;
  return sub_20E39D1F8(v35, v33);
}

uint64_t sub_20E411E8C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X2>, char a3@<W3>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  int *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t *v26;
  __int128 v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  int v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  _OWORD v38[2];
  uint64_t v39;
  _BYTE v40[40];

  v37 = a4;
  v34 = a2;
  v33 = a3 & 1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CC0);
  MEMORY[0x24BDAC7A8](v5);
  v35 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_20E4A33B0();
  v32 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v32 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A5B0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CC8);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v32 - v20;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  ComponentModel.viewID.getter();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20E4A5B40();
  sub_20E4138C4((uint64_t)v40, (uint64_t)v38);
  sub_20E3A5E20((uint64_t)v21, (uint64_t)v18, &qword_253ED0CC8);
  v22 = &v15[*(int *)(v13 + 36)];
  v23 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_254A1A5C0);
  sub_20E4A33A4();
  v24 = v32;
  (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v9, v12, v7);
  sub_20E4A4640();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v12, v7);
  v25 = (uint64_t *)&v22[v23[12]];
  *v25 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A20);
  swift_storeEnumTagMultiPayload();
  v26 = (uint64_t *)&v22[v23[13]];
  *v26 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
  swift_storeEnumTagMultiPayload();
  v27 = v38[1];
  *(_OWORD *)v22 = v38[0];
  *((_OWORD *)v22 + 1) = v27;
  *((_QWORD *)v22 + 4) = v39;
  sub_20E3BB440((uint64_t)v18, (uint64_t)&v22[v23[9]], &qword_253ED0CC8);
  v28 = &v22[v23[10]];
  *(_QWORD *)v28 = v34;
  v28[8] = v33;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A578);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v15, v36, v29);
  sub_20E3A5E20((uint64_t)v21, (uint64_t)v18, &qword_253ED0CC8);
  v30 = (uint64_t)v35;
  sub_20E4A50F0();
  sub_20E4104C4(v30, &qword_254A1A520, &qword_254A1A5B0, v37);
  sub_20E39D1F8(v30, &qword_253ED0CC0);
  sub_20E39D1F8((uint64_t)v15, &qword_254A1A5B0);
  sub_20E39D1F8((uint64_t)v21, &qword_253ED0CC8);
  return sub_20E413908((uint64_t)v40);
}

BOOL static ImpressionableLayoutStyle.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ImpressionableLayoutStyle.hash(into:)()
{
  return sub_20E4A641C();
}

uint64_t ImpressionableLayoutStyle.hashValue.getter()
{
  sub_20E4A6410();
  sub_20E4A641C();
  return sub_20E4A6428();
}

unint64_t sub_20E4122A8()
{
  unint64_t result;

  result = qword_254A1A460;
  if (!qword_254A1A460)
  {
    result = MEMORY[0x212BBDF90](&protocol conformance descriptor for ImpressionableLayoutStyle, &type metadata for ImpressionableLayoutStyle);
    atomic_store(result, (unint64_t *)&qword_254A1A460);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ImpressionableLayoutStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_20E412338 + 4 * byte_20E4AB785[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_20E41236C + 4 * byte_20E4AB780[v4]))();
}

uint64_t sub_20E41236C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_20E412374(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x20E41237CLL);
  return result;
}

uint64_t sub_20E412388(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x20E412390);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_20E412394(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_20E41239C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ImpressionableLayoutStyle()
{
  return &type metadata for ImpressionableLayoutStyle;
}

uint64_t sub_20E4123B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  v2 = sub_20E4A39D4();
  v4[0] = v1;
  v4[1] = sub_20E41240C();
  return MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v2, v4);
}

unint64_t sub_20E41240C()
{
  unint64_t result;

  result = qword_254A1A468;
  if (!qword_254A1A468)
  {
    result = MEMORY[0x212BBDF90](&unk_20E4AB91C, &type metadata for UnifiedImpressionableLayoutItemViewModifier);
    atomic_store(result, (unint64_t *)&qword_254A1A468);
  }
  return result;
}

uint64_t sub_20E412450(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[2];

  v4 = a1[2];
  v5 = type metadata accessor for UnifiedImpressionableLayoutViewModifier(255, a1[1], a1[3], a4);
  v6 = sub_20E4A39D4();
  v8[0] = v4;
  v8[1] = MEMORY[0x212BBDF90](&unk_20E4AB96C, v5);
  return MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v6, v8);
}

uint64_t sub_20E4124C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1A470);
  v2 = sub_20E4A39D4();
  v4[0] = v1;
  v4[1] = sub_20E39D010(qword_254A1A478, &qword_254A1A470, MEMORY[0x24BDF1028]);
  return MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v2, v4);
}

uint64_t sub_20E412548()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_20E4125D0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char v16;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 17) & 0xFFFFFFFFFFFFFFF8) + 9 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v11 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v12 = *(_QWORD *)v11;
    *(_BYTE *)(v10 + 8) = *(_BYTE *)(v11 + 8);
    *(_QWORD *)v10 = v12;
    *(_BYTE *)(v10 + 9) = *(_BYTE *)(v11 + 9);
    v13 = (v10 + 17) & 0xFFFFFFFFFFFFFFF8;
    v14 = (v11 + 17) & 0xFFFFFFFFFFFFFFF8;
    v15 = *(_QWORD *)v14;
    v16 = *(_BYTE *)(v14 + 8);
    sub_20E39CFAC(*(_QWORD *)v14, v16);
    *(_QWORD *)v13 = v15;
    *(_BYTE *)(v13 + 8) = v16;
  }
  return v4;
}

uint64_t sub_20E4126C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = (((a1 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 17) & 0xFFFFFFFFFFFFFFF8;
  return sub_20E39CED8(*(_QWORD *)v4, *(_BYTE *)(v4 + 8));
}

uint64_t sub_20E412710(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_BYTE *)(v8 + 8);
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_BYTE *)(v7 + 8) = v9;
  *(_BYTE *)(v7 + 9) = *(_BYTE *)(v8 + 9);
  v10 = (v7 + 17) & 0xFFFFFFFFFFFFFFF8;
  v11 = (v8 + 17) & 0xFFFFFFFFFFFFFFF8;
  v12 = *(_QWORD *)v11;
  LOBYTE(v5) = *(_BYTE *)(v11 + 8);
  sub_20E39CFAC(*(_QWORD *)v11, v5);
  *(_QWORD *)v10 = v12;
  *(_BYTE *)(v10 + 8) = v5;
  return a1;
}

uint64_t sub_20E4127A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_BYTE *)(v8 + 8);
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_BYTE *)(v7 + 8) = v9;
  *(_BYTE *)(v7 + 9) = *(_BYTE *)(v8 + 9);
  v10 = (v7 + 17) & 0xFFFFFFFFFFFFFFF8;
  v11 = (v8 + 17) & 0xFFFFFFFFFFFFFFF8;
  v12 = *(_QWORD *)v11;
  LOBYTE(v5) = *(_BYTE *)(v11 + 8);
  sub_20E39CFAC(*(_QWORD *)v11, v5);
  v13 = *(_QWORD *)v10;
  v14 = *(_BYTE *)(v10 + 8);
  *(_QWORD *)v10 = v12;
  *(_BYTE *)(v10 + 8) = v5;
  sub_20E39CED8(v13, v14);
  return a1;
}

uint64_t sub_20E41284C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  unint64_t v10;
  unint64_t v11;
  char v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_BYTE *)(v8 + 8);
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_BYTE *)(v7 + 8) = v9;
  *(_BYTE *)(v7 + 9) = *(_BYTE *)(v8 + 9);
  v10 = (v7 + 17) & 0xFFFFFFFFFFFFFFF8;
  v11 = (v8 + 17) & 0xFFFFFFFFFFFFFFF8;
  v12 = *(_BYTE *)(v11 + 8);
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *(_BYTE *)(v10 + 8) = v12;
  return a1;
}

uint64_t sub_20E4128D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_BYTE *)(v8 + 8);
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_BYTE *)(v7 + 8) = v9;
  *(_BYTE *)(v7 + 9) = *(_BYTE *)(v8 + 9);
  v10 = (v7 + 17) & 0xFFFFFFFFFFFFFFF8;
  v11 = (v8 + 17) & 0xFFFFFFFFFFFFFFF8;
  v12 = *(_QWORD *)v11;
  LOBYTE(v11) = *(_BYTE *)(v11 + 8);
  v13 = *(_QWORD *)v10;
  v14 = *(_BYTE *)(v10 + 8);
  *(_QWORD *)v10 = v12;
  *(_BYTE *)(v10 + 8) = v11;
  sub_20E39CED8(v13, v14);
  return a1;
}

uint64_t sub_20E412970(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  unsigned int v14;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0xFE)
    v6 = 254;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 >= 0xFE)
      return (*(uint64_t (**)(void))(v4 + 48))();
    v14 = *(unsigned __int8 *)(((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8) + 9);
    if (v14 >= 2)
      return ((v14 + 2147483646) & 0x7FFFFFFF) + 1;
    return 0;
  }
  v8 = ((((v7 + 7) & 0xFFFFFFF8) + 17) & 0xFFFFFFF8) + 9;
  v9 = (a2 - v6 + 255) >> (8 * v8);
  if (v8 < 4)
    v10 = v9 + 1;
  else
    v10 = 2;
  if (v10 >= 0x10000)
    v11 = 4;
  else
    v11 = 2;
  if (v10 < 0x100)
    v11 = 1;
  if (v10 >= 2)
    v12 = v11;
  else
    v12 = 0;
  return ((uint64_t (*)(void))((char *)&loc_20E412A00 + 4 * byte_20E4AB78A[v12]))();
}

void sub_20E412A98(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0xFEu)
    v6 = 254;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 17) & 0xFFFFFFFFFFFFFFF8) + 9;
  if (v6 >= a3)
  {
    v10 = 0;
    if (v6 >= a2)
      goto LABEL_17;
  }
  else
  {
    if (v7 <= 3)
      v8 = ((a3 - v6 + 255) >> (8 * v7)) + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    if (v6 >= a2)
LABEL_17:
      __asm { BR              X12 }
  }
  if (v7 >= 4)
    v11 = ~v6 + a2;
  else
    v11 = (~(_BYTE)v6 + a2);
  bzero(a1, v7);
  if ((_DWORD)v7 == 1)
    *a1 = v11;
  else
    *(_DWORD *)a1 = v11;
  __asm { BR              X10 }
}

void sub_20E412BBC()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_20E412BC4(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x20E412BCCLL);
}

void sub_20E412C0C()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

void sub_20E412C14()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
}

uint64_t sub_20E412C1C(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_WORD *)(v6 + v7) = 0;
  if (!a2)
LABEL_2:
    JUMPOUT(0x20E412C24);
  if (a3 < 0xFE)
  {
    *(_BYTE *)(((v6 + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 9) = a2 + 1;
    goto LABEL_2;
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v6);
}

uint64_t destroy for UnifiedImpressionableLayoutItemViewModifier(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  return sub_20E39CED8(*(_QWORD *)(a1 + 56), *(_BYTE *)(a1 + 64));
}

uint64_t initializeWithCopy for UnifiedImpressionableLayoutItemViewModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  __int128 v4;
  uint64_t v5;

  v2 = a2;
  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(v2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(v2 + 48);
  v5 = *(_QWORD *)(v2 + 56);
  LOBYTE(v2) = *(_BYTE *)(v2 + 64);
  sub_20E39CFAC(v5, v2);
  *(_QWORD *)(a1 + 56) = v5;
  *(_BYTE *)(a1 + 64) = v2;
  return a1;
}

uint64_t assignWithCopy for UnifiedImpressionableLayoutItemViewModifier(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v2 = a2;
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, a2);
  v4 = v2[5];
  *(_BYTE *)(a1 + 48) = *((_BYTE *)v2 + 48);
  *(_QWORD *)(a1 + 40) = v4;
  v5 = v2[7];
  LOBYTE(v2) = *((_BYTE *)v2 + 64);
  sub_20E39CFAC(v5, (char)v2);
  v6 = *(_QWORD *)(a1 + 56);
  v7 = *(_BYTE *)(a1 + 64);
  *(_QWORD *)(a1 + 56) = v5;
  *(_BYTE *)(a1 + 64) = (_BYTE)v2;
  sub_20E39CED8(v6, v7);
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

__n128 __swift_memcpy65_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for UnifiedImpressionableLayoutItemViewModifier(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  LOBYTE(v5) = *(_BYTE *)(a2 + 64);
  v6 = *(_QWORD *)(a1 + 56);
  v7 = *(_BYTE *)(a1 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = v5;
  sub_20E39CED8(v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for UnifiedImpressionableLayoutItemViewModifier(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 65))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UnifiedImpressionableLayoutItemViewModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 64) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 65) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 65) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for UnifiedImpressionableLayoutItemViewModifier()
{
  return &type metadata for UnifiedImpressionableLayoutItemViewModifier;
}

uint64_t sub_20E412FD0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E412FE0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E413014()
{
  sub_20E4122A8();
  return sub_20E4A389C();
}

uint64_t sub_20E413064@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, int a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  unint64_t v31;
  char v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  char *v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;

  v51 = a5;
  v47 = a4;
  v57 = a3;
  v58 = a6;
  v48 = a2;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CC0);
  MEMORY[0x24BDAC7A8](v7);
  v56 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = type metadata accessor for Impressionable_ViewModifier.EnvironmentImpressionState(0);
  MEMORY[0x24BDAC7A8](v53);
  v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_20E4A5450();
  v49 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v46 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v45 - v14;
  v16 = sub_20E4A5174();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CC8);
  MEMORY[0x24BDAC7A8](v20);
  v52 = (uint64_t)&v45 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v45 - v23;
  v45 = type metadata accessor for Impressionable_ViewModifier(0);
  MEMORY[0x24BDAC7A8](v45);
  v26 = (char *)&v45 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A598);
  MEMORY[0x24BDAC7A8](v50);
  v28 = (char *)&v45 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = a1;
  sub_20E3A5E20(a1, (uint64_t)v24, &qword_253ED0CC8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v24, 1, v16) == 1)
  {
    v29 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v30 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
    v30(v19, v24, v16);
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0D60);
    v31 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
    v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_20E4A72D0;
    v30((char *)(v29 + v31), v19, v16);
  }
  v32 = v47 & 1;
  v33 = v49;
  v34 = *(void (**)(char *, uint64_t, uint64_t))(v49 + 16);
  v34(v15, v48, v11);
  *(_QWORD *)v26 = swift_getKeyPath();
  *((_QWORD *)v26 + 1) = 0;
  *((_WORD *)v26 + 8) = 0;
  *((_QWORD *)v26 + 3) = swift_getKeyPath();
  v26[32] = 0;
  v35 = (uint64_t)v46;
  v34(v46, (uint64_t)v15, v11);
  type metadata accessor for Impressionable_StateObject(0);
  swift_allocObject();
  v36 = sub_20E415784(v29, v35, v57, v32, v51 & 1);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v15, v11);
  v37 = (uint64_t)&v26[*(int *)(v45 + 24)];
  v38 = v53;
  v39 = (uint64_t *)&v10[*(int *)(v53 + 20)];
  *v39 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
  swift_storeEnumTagMultiPayload();
  v40 = (uint64_t *)&v10[*(int *)(v38 + 24)];
  *v40 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A20);
  swift_storeEnumTagMultiPayload();
  v41 = (uint64_t *)&v10[*(int *)(v38 + 28)];
  *v41 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A183F0);
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)v10 = sub_20E413954;
  *((_QWORD *)v10 + 1) = v36;
  v10[16] = 0;
  sub_20E3A57AC((uint64_t)v10, v37, type metadata accessor for Impressionable_ViewModifier.EnvironmentImpressionState);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A578);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v28, v54, v42);
  sub_20E3A57AC((uint64_t)v26, (uint64_t)&v28[*(int *)(v50 + 36)], type metadata accessor for Impressionable_ViewModifier);
  sub_20E3A5E20(v55, v52, &qword_253ED0CC8);
  v43 = (uint64_t)v56;
  sub_20E4A50F0();
  sub_20E4104C4(v43, &qword_254A1A510, &qword_254A1A598, v58);
  sub_20E39D1F8(v43, &qword_253ED0CC0);
  return sub_20E39D1F8((uint64_t)v28, &qword_254A1A598);
}

unint64_t sub_20E413554()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254A1A550;
  if (!qword_254A1A550)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1A540);
    v2[0] = sub_20E4135D8(&qword_254A1A558, &qword_254A1A548, (uint64_t (*)(void))sub_20E41365C);
    v2[1] = sub_20E4136F8();
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254A1A550);
  }
  return result;
}

uint64_t sub_20E4135D8(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7[0] = a3();
    v7[1] = sub_20E39F334(&qword_253ED07E8, (uint64_t (*)(uint64_t))type metadata accessor for ClickLocationViewModifier, (uint64_t)&unk_20E4A953C);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_20E41365C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254A1A560;
  if (!qword_254A1A560)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1A568);
    v2[0] = sub_20E39D010(&qword_254A1A570, &qword_254A1A578, MEMORY[0x24BDEFB78]);
    v2[1] = sub_20E39F334(&qword_254A18220, type metadata accessor for ImpressionableViewModifier, (uint64_t)&unk_20E4A73D8);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254A1A560);
  }
  return result;
}

unint64_t sub_20E4136F8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_254A1A580;
  if (!qword_254A1A580)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1A528);
    v2 = sub_20E4135D8(&qword_254A1A558, &qword_254A1A548, (uint64_t (*)(void))sub_20E41365C);
    v3[0] = MEMORY[0x24BDF4760];
    v3[1] = v2;
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_254A1A580);
  }
  return result;
}

unint64_t sub_20E41377C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254A1A590;
  if (!qword_254A1A590)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1A598);
    v2[0] = sub_20E39D010(&qword_254A1A570, &qword_254A1A578, MEMORY[0x24BDEFB78]);
    v2[1] = sub_20E39F334(&qword_253ED0850, type metadata accessor for Impressionable_ViewModifier, (uint64_t)&unk_20E4ABE68);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254A1A590);
  }
  return result;
}

unint64_t sub_20E413818()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254A1A5A8;
  if (!qword_254A1A5A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1A5B0);
    v2[0] = sub_20E39D010(&qword_254A1A570, &qword_254A1A578, MEMORY[0x24BDEFB78]);
    v2[1] = sub_20E39D010(&qword_254A1A5B8, &qword_254A1A5C0, (uint64_t)&unk_20E4B0E28);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254A1A5A8);
  }
  return result;
}

uint64_t sub_20E4138C4(uint64_t a1, uint64_t a2)
{
  _s8CacheKeyVwcp(a2, a1);
  return a2;
}

uint64_t sub_20E413908(uint64_t a1)
{
  _s8CacheKeyVwxx();
  return a1;
}

uint64_t sub_20E413954()
{
  uint64_t v0;

  return j__swift_retain(v0);
}

unint64_t sub_20E41395C()
{
  unint64_t result;

  result = qword_254A1A5C8;
  if (!qword_254A1A5C8)
  {
    result = MEMORY[0x212BBDF90](&unk_20E4ABAD0, &type metadata for ImpressionableLayoutStyleKey);
    atomic_store(result, (unint64_t *)&qword_254A1A5C8);
  }
  return result;
}

ValueMetadata *type metadata accessor for ImpressionableLayoutStyleKey()
{
  return &type metadata for ImpressionableLayoutStyleKey;
}

uint64_t sub_20E4139B0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[2];
  _QWORD v22[2];
  _QWORD v23[2];
  _QWORD v24[2];
  _QWORD v25[2];
  _QWORD v26[2];
  _QWORD v27[2];

  v4 = type metadata accessor for UnifiedImpressionableLayoutViewModifier(255, *a1, a1[1], a4);
  MEMORY[0x212BBDF90](&unk_20E4AB96C, v4);
  v5 = sub_20E4A3EA8();
  type metadata accessor for ImpressionableViewModifier(255);
  v6 = sub_20E4A39D4();
  type metadata accessor for ClickLocationViewModifier();
  v7 = sub_20E4A39D4();
  v8 = sub_20E4A3E00();
  v9 = sub_20E4A3E00();
  type metadata accessor for Impressionable_ViewModifier(255);
  v10 = sub_20E4A39D4();
  v11 = sub_20E4A39D4();
  v12 = sub_20E4A3E00();
  v13 = MEMORY[0x212BBDF90](MEMORY[0x24BDEFB78], v5);
  v27[0] = v13;
  v27[1] = sub_20E39F334(&qword_254A18220, type metadata accessor for ImpressionableViewModifier, (uint64_t)&unk_20E4A73D8);
  v14 = MEMORY[0x24BDED308];
  v15 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v6, v27);
  v16 = sub_20E39F334(&qword_253ED07E8, (uint64_t (*)(uint64_t))type metadata accessor for ClickLocationViewModifier, (uint64_t)&unk_20E4A953C);
  v26[0] = v15;
  v26[1] = v16;
  v17 = MEMORY[0x212BBDF90](v14, v7, v26);
  v25[0] = MEMORY[0x24BDF4760];
  v25[1] = v17;
  v18 = MEMORY[0x24BDEF3E0];
  v24[0] = v17;
  v24[1] = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v8, v25);
  v19 = MEMORY[0x212BBDF90](v18, v9, v24);
  v23[0] = v13;
  v23[1] = sub_20E39F334(&qword_253ED0850, type metadata accessor for Impressionable_ViewModifier, (uint64_t)&unk_20E4ABE68);
  v22[0] = MEMORY[0x212BBDF90](v14, v10, v23);
  v22[1] = v16;
  v21[0] = v19;
  v21[1] = MEMORY[0x212BBDF90](v14, v11, v22);
  return MEMORY[0x212BBDF90](v18, v12, v21);
}

unint64_t sub_20E413BF8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_254A1A5D0;
  if (!qword_254A1A5D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_254A1A5D8);
    v2[0] = sub_20E413554();
    v2[1] = sub_20E4135D8(&qword_254A1A588, &qword_254A1A510, (uint64_t (*)(void))sub_20E41377C);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_254A1A5D0);
  }
  return result;
}

void sub_20E413C7C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[4];

  v7 = *(_QWORD *)(a1 - 8);
  v8 = MEMORY[0x24BDAC7A8](a1);
  v10 = (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v7 + 16))(v10, v3, a1, v8);
  v11 = *(_QWORD *)swift_getKeyPath();
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a3, v10, a1);
  v12 = *(_QWORD *)(*MEMORY[0x24BEE46A8] + v11 + 8);
  v13[0] = a1;
  v13[1] = v12;
  v13[2] = a2;
  v13[3] = MEMORY[0x24BEE23D8];
  type metadata accessor for JoinedID();
}

uint64_t sub_20E413D3C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + *(int *)(result + 52)) = v1;
  return result;
}

void type metadata accessor for JoinedID()
{
  JUMPOUT(0x212BBDEE8);
}

uint64_t sub_20E413D70()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_20E413DE8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    *(_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
  }
  swift_retain();
  return v4;
}

uint64_t sub_20E413E98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  swift_retain();
  return a1;
}

uint64_t sub_20E413EF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_20E413F64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_20E413FC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_20E414024(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v12 = *(_QWORD *)((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_20E4140A0 + 4 * byte_20E4ABB10[v10]))();
  }
}

void sub_20E414124(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_20E414218()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x20E41428CLL);
}

void sub_20E414220(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x20E414228);
  JUMPOUT(0x20E41428CLL);
}

void sub_20E414268()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x20E41428CLL);
}

void sub_20E414270()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x20E41428CLL);
}

uint64_t sub_20E414278(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v5 + v6) = 0;
  if (!a2)
    JUMPOUT(0x20E41428CLL);
  if (a3 < 0x7FFFFFFF)
  {
    if ((a2 & 0x80000000) == 0)
      JUMPOUT(0x20E414288);
    JUMPOUT(0x20E414284);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v5);
}

uint64_t sub_20E4142A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  _BYTE *v18;
  void (*v19)(_BYTE *, uint64_t, double);
  void (*v20)(_BYTE *, uint64_t);
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v12 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v14 = &v22[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = &v22[-v17];
  v19 = *(void (**)(_BYTE *, uint64_t, double))(v12 + 16);
  v19(&v22[-v17], a1, v16);
  ((void (*)(_BYTE *, uint64_t, uint64_t))v19)(v14, a2, a3);
  v23 = a3;
  v24 = a4;
  v25 = a5;
  v26 = a6;
  v27 = a1;
  v28 = a2;
  LOBYTE(a6) = sub_20E4A5CB4();
  v20 = *(void (**)(_BYTE *, uint64_t))(v12 + 8);
  v20(v14, a3);
  v20(v18, a3);
  return a6 & 1;
}

void sub_20E4143C0(uint64_t a1)
{
  uint64_t v1;

  MEMORY[0x24BDAC7A8](a1);
  MEMORY[0x24BDAC7A8](v1);
  type metadata accessor for JoinedID();
}

uint64_t sub_20E414458()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  void (*v5)(uint64_t, uint64_t);

  swift_getAtKeyPath();
  swift_getAtKeyPath();
  v4 = sub_20E4A5C0C();
  v5 = *(void (**)(uint64_t, uint64_t))(v1 + 8);
  v5(v2, v0);
  v5(v3, v0);
  return v4 & 1;
}

uint64_t sub_20E4144E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v26[3];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;

  v29 = a1;
  v27 = *(_QWORD *)(a2 + 24);
  v28 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v3 = (char *)v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(v4 + 32);
  v26[2] = v4;
  v6 = *(_QWORD *)(v4 + 16);
  v26[1] = v5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v10 = (char *)v26 - v9;
  v11 = sub_20E4A60E0();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v26 - v12;
  v14 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = swift_getAssociatedTypeWitness();
  v26[0] = *(_QWORD *)(v18 - 8);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)v26 - v20;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v14 + 16))(v17, v30, v6, v19);
  v31 = v21;
  sub_20E4A5C84();
  swift_getAssociatedConformanceWitness();
  v22 = 0;
  v23 = v27;
  while (1)
  {
    sub_20E4A60EC();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v13, 1, AssociatedTypeWitness) == 1)
      break;
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v13, AssociatedTypeWitness);
    swift_getAtKeyPath();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, AssociatedTypeWitness);
    sub_20E4A5BAC();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v3, v23);
    if (__OFADD__(v22++, 1))
    {
      __break(1u);
      break;
    }
  }
  (*(void (**)(char *, uint64_t))(v26[0] + 8))(v31, v18);
  return sub_20E4A641C();
}

uint64_t sub_20E41478C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v3 = *(_QWORD *)(a1 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x24BDAC7A8](a1);
  v6 = *(_QWORD *)(v5 + 16);
  v7 = *(_QWORD *)(v5 + 32);
  v8 = sub_20E4A61C4();
  v22 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v20 - v9;
  v21 = sub_20E4A6260();
  v23 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v12 = (char *)&v20 - v11;
  sub_20E4A5CCC();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v1, a1);
  v13 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v14 = (char *)swift_allocObject();
  v15 = *(_QWORD *)(a1 + 24);
  *((_QWORD *)v14 + 2) = v6;
  *((_QWORD *)v14 + 3) = v15;
  v16 = *(_QWORD *)(a1 + 40);
  *((_QWORD *)v14 + 4) = v7;
  *((_QWORD *)v14 + 5) = v16;
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(&v14[v13], (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  MEMORY[0x212BBDF90](MEMORY[0x24BEE25B0], v8);
  sub_20E4A62F0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v10, v8);
  v17 = v21;
  MEMORY[0x212BBDF90](MEMORY[0x24BEE2B40], v21);
  sub_20E3C3948();
  v18 = sub_20E4A5D08();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v12, v17);
  return v18;
}

void sub_20E4149AC(uint64_t a1)
{
  MEMORY[0x24BDAC7A8](a1);
  type metadata accessor for JoinedID();
}

uint64_t sub_20E414A1C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  swift_getAtKeyPath();
  sub_20E4A6344();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v0);
  v6 = *(_QWORD *)(v4 - 56);
  *v1 = *(_QWORD *)(v4 - 64);
  v1[1] = v6;
  return result;
}

uint64_t sub_20E414A70(uint64_t a1)
{
  _BYTE v3[72];

  sub_20E4A6410();
  sub_20E4144E0((uint64_t)v3, a1);
  return sub_20E4A6428();
}

uint64_t sub_20E414ABC(uint64_t a1, uint64_t a2)
{
  _BYTE v4[72];

  sub_20E4A6410();
  sub_20E4144E0((uint64_t)v4, a2);
  return sub_20E4A6428();
}

uint64_t sub_20E414B00(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_20E4142A4(a1, a2, a3[2], a3[3], a3[4], a3[5]);
}

void sub_20E414B10()
{
  JUMPOUT(0x212BBDF90);
}

void sub_20E414B20()
{
  type metadata accessor for JoinedID();
}

uint64_t sub_20E414B50(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  (*(void (**)(uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v1 + ((v2 + 48) & ~v2));
  swift_release();
  return swift_deallocObject();
}

void sub_20E414BC0()
{
  type metadata accessor for JoinedID();
}

void sub_20E414C00()
{
  uint64_t v0;

  sub_20E4149AC(v0);
}

void sub_20E414C48(uint64_t a1)
{
  sub_20E4143C0(a1);
}

uint64_t sub_20E414C60(char a1)
{
  return a1 & 1;
}

uint64_t sub_20E414C6C()
{
  sub_20E3A5DDC();
  return sub_20E4A3C08();
}

uint64_t sub_20E414CA8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED2428);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v9 - v6;
  sub_20E3A5E20(a1, (uint64_t)&v9 - v6, &qword_253ED2428);
  sub_20E3A5E20((uint64_t)v7, (uint64_t)v4, &qword_253ED2428);
  sub_20E3A5DDC();
  sub_20E4A3C14();
  return sub_20E39D1F8((uint64_t)v7, &qword_253ED2428);
}

uint64_t View.impressionable_<A>(_:configuration:position:definesParentContext:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, char a3@<W3>, int a4@<W4>, uint64_t a5@<X5>, uint64_t a6@<X7>, uint64_t a7@<X8>)
{
  int v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v17;

  v17 = a6;
  v12 = a3 & 1;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CC8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20E4A5B40();
  View.impressionable_(_:configuration:position:definesParentContext:)((uint64_t)v15, a1, a2, v12, a4, a5, v17, a7);
  return sub_20E39D1F8((uint64_t)v15, &qword_253ED0CC8);
}

uint64_t View.impressionable_(_:configuration:position:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v18;

  v13 = a4 & 1;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CC8);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v18 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20E4A5B40();
  View.impressionable_(_:configuration:position:definesParentContext:)((uint64_t)v16, a2, a3, v13, 0, a5, a6, a7);
  return sub_20E39D1F8((uint64_t)v16, &qword_253ED0CC8);
}

uint64_t View.impressionable_(_:configuration:position:definesParentContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t *v43;
  uint64_t *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  int v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD v66[2];

  v62 = a7;
  v56 = a5;
  v52 = a4;
  v65 = a3;
  v53 = a2;
  v63 = a8;
  v60 = type metadata accessor for Impressionable_ViewModifier.EnvironmentImpressionState(0);
  MEMORY[0x24BDAC7A8](v60);
  v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_20E4A5450();
  v55 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v54 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v51 - v15;
  v17 = sub_20E4A5174();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CC8);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v51 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for Impressionable_ViewModifier(0);
  MEMORY[0x24BDAC7A8](v24);
  v26 = (char *)&v51 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = a6;
  v57 = v27;
  v51 = sub_20E4A39D4();
  v59 = *(_QWORD *)(v51 - 8);
  MEMORY[0x24BDAC7A8](v51);
  v58 = (char *)&v51 - v28;
  v64 = a1;
  sub_20E3A5E20(a1, (uint64_t)v23, &qword_253ED0CC8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v23, 1, v17) == 1)
  {
    v29 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v30 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
    v30(v20, v23, v17);
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0D60);
    v31 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
    v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_20E4A72D0;
    v30((char *)(v29 + v31), v20, v17);
  }
  v32 = v52 & 1;
  v33 = v55;
  v34 = *(void (**)(char *, uint64_t, uint64_t))(v55 + 16);
  v34(v16, v53, v12);
  *(_QWORD *)v26 = swift_getKeyPath();
  *((_QWORD *)v26 + 1) = 0;
  *((_WORD *)v26 + 8) = 0;
  *((_QWORD *)v26 + 3) = swift_getKeyPath();
  v26[32] = 0;
  v35 = v54;
  v34(v54, (uint64_t)v16, v12);
  type metadata accessor for Impressionable_StateObject(0);
  v36 = swift_allocObject();
  v37 = (uint64_t)v35;
  v38 = v65;
  sub_20E415784(v29, v37, v65, v32, v56 & 1);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v16, v12);
  v39 = v57;
  v40 = (uint64_t)&v26[*(int *)(v57 + 24)];
  v41 = v60;
  v42 = (uint64_t *)&v11[*(int *)(v60 + 20)];
  *v42 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
  swift_storeEnumTagMultiPayload();
  v43 = (uint64_t *)&v11[*(int *)(v41 + 24)];
  *v43 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A20);
  swift_storeEnumTagMultiPayload();
  v44 = (uint64_t *)&v11[*(int *)(v41 + 28)];
  *v44 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A183F0);
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)v11 = sub_20E415BBC;
  *((_QWORD *)v11 + 1) = v36;
  v11[16] = 0;
  sub_20E3A57AC((uint64_t)v11, v40, type metadata accessor for Impressionable_ViewModifier.EnvironmentImpressionState);
  v45 = v58;
  v46 = v62;
  MEMORY[0x212BBBA70](v26, v61, v39, v62);
  sub_20E415BC4((uint64_t)v26);
  v47 = sub_20E39F334(&qword_253ED0850, type metadata accessor for Impressionable_ViewModifier, (uint64_t)&unk_20E4ABE68);
  v66[0] = v46;
  v66[1] = v47;
  v48 = v51;
  v49 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v51, v66);
  View.impressionableClickLocation(impressionMetrics:position:)(v64, v38, v32, v48, v49);
  return (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v45, v48);
}

uint64_t type metadata accessor for Impressionable_ViewModifier.EnvironmentImpressionState(uint64_t a1)
{
  return sub_20E3A4CD0(a1, (uint64_t *)&unk_253ED0840);
}

uint64_t type metadata accessor for Impressionable_ViewModifier(uint64_t a1)
{
  return sub_20E3A4CD0(a1, (uint64_t *)&unk_253ED0858);
}

uint64_t type metadata accessor for Impressionable_StateObject(uint64_t a1)
{
  return sub_20E3A4CD0(a1, (uint64_t *)&unk_253ED0820);
}

void sub_20E415428(__int16 a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  __int16 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t ObjectType;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v3 = sub_20E4A5204();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_20E4A338C();
  v25 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_20E4A5174();
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_WORD *)(v1 + 16);
  *(_BYTE *)(v1 + 18) = HIBYTE(v14) & 1;
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC18_JetEngine_SwiftUI26Impressionable_StateObject_tracker))
  {
    v15 = *(_QWORD *)(v1 + OBJC_IVAR____TtC18_JetEngine_SwiftUI26Impressionable_StateObject_tracker + 8);
    if ((a1 & 0x100) != 0)
    {
      if ((v14 & 0x100) == 0)
      {
        v20 = *(_QWORD *)(*(_QWORD *)(v1 + 24) + 16);
        if (v20)
        {
          v24 = *(_QWORD *)(v1 + 24);
          v31 = v15;
          v32 = v11;
          ObjectType = swift_getObjectType();
          v29 = v1 + OBJC_IVAR____TtC18_JetEngine_SwiftUI26Impressionable_StateObject_context;
          v21 = v24 + ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80));
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
          swift_beginAccess();
          v22 = *(_QWORD *)(v32 + 72);
          v30 = v7;
          v26 = *(void (**)(char *, uint64_t, uint64_t))(v32 + 16);
          v27 = v22;
          v23 = v25;
          do
          {
            v26(v13, v21, v10);
            sub_20E4A3380();
            (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v29, v3);
            sub_20E4A521C();
            (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
            (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v30);
            (*(void (**)(char *, uint64_t))(v32 + 8))(v13, v10);
            v21 += v27;
            --v20;
          }
          while (v20);
          goto LABEL_12;
        }
      }
    }
    else if ((v14 & 0x8100) == 0x100)
    {
      v16 = *(_QWORD *)(*(_QWORD *)(v1 + 24) + 16);
      if (v16)
      {
        v24 = *(_QWORD *)(v1 + 24);
        v31 = v15;
        v32 = v11;
        ObjectType = swift_getObjectType();
        v29 = v1 + OBJC_IVAR____TtC18_JetEngine_SwiftUI26Impressionable_StateObject_context;
        v17 = v24 + ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80));
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        swift_beginAccess();
        v18 = *(_QWORD *)(v32 + 72);
        v30 = v7;
        v26 = *(void (**)(char *, uint64_t, uint64_t))(v32 + 16);
        v27 = v18;
        v19 = v25;
        do
        {
          v26(v13, v17, v10);
          sub_20E4A3380();
          (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v29, v3);
          sub_20E4A5210();
          (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
          (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v30);
          (*(void (**)(char *, uint64_t))(v32 + 8))(v13, v10);
          v17 += v27;
          --v16;
        }
        while (v16);
LABEL_12:
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
  }
}

uint64_t sub_20E415784(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  char *v34;
  char *v35;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  int v41;
  uint64_t v42;

  v6 = v5;
  v42 = a3;
  v41 = a4 & 1;
  v10 = sub_20E4A5204();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v37 - v15;
  MEMORY[0x24BDAC7A8](v17);
  v39 = (char *)&v37 - v18;
  MEMORY[0x24BDAC7A8](v19);
  v40 = (char *)&v37 - v20;
  *(_WORD *)(v6 + 16) = 0;
  *(_BYTE *)(v6 + 18) = 0;
  v21 = (_QWORD *)(v6 + OBJC_IVAR____TtC18_JetEngine_SwiftUI26Impressionable_StateObject_tracker);
  *v21 = 0;
  v21[1] = 0;
  sub_20E4A33A4();
  sub_20E4A33A4();
  v22 = v6 + OBJC_IVAR____TtC18_JetEngine_SwiftUI26Impressionable_StateObject_metricsContextImpressionsParentContextID;
  v23 = sub_20E4A33B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 1, 1, v23);
  v24 = v6 + OBJC_IVAR____TtC18_JetEngine_SwiftUI26Impressionable_StateObject_enableRequirements;
  v25 = sub_20E4A56E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v24, 1, 1, v25);
  v26 = v6 + OBJC_IVAR____TtC18_JetEngine_SwiftUI26Impressionable_StateObject_listContainerElementSize;
  v27 = sub_20E4A3818();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v26, 1, 1, v27);
  *(_QWORD *)(v6 + 24) = a1;
  v28 = v6 + OBJC_IVAR____TtC18_JetEngine_SwiftUI26Impressionable_StateObject_configuration;
  v29 = sub_20E4A5450();
  v30 = *(_QWORD *)(v29 - 8);
  v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16);
  v38 = a2;
  v31(v28, a2, v29);
  *(_BYTE *)(v6 + OBJC_IVAR____TtC18_JetEngine_SwiftUI26Impressionable_StateObject_definesParentContext) = a5;
  sub_20E4A51F8();
  sub_20E4A5444();
  sub_20E4A51BC();
  swift_bridgeObjectRelease();
  v32 = v11;
  v33 = *(void (**)(char *, uint64_t))(v11 + 8);
  v33(v13, v10);
  sub_20E4A3398();
  v34 = v39;
  sub_20E4A51D4();
  swift_bridgeObjectRelease();
  v33(v16, v10);
  v35 = v40;
  sub_20E4A51C8();
  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v38, v29);
  v33(v34, v10);
  (*(void (**)(uint64_t, char *, uint64_t))(v32 + 32))(v6 + OBJC_IVAR____TtC18_JetEngine_SwiftUI26Impressionable_StateObject_context, v35, v10);
  return v6;
}

uint64_t sub_20E415A54()
{
  sub_20E3A5DDC();
  return sub_20E4A3C08();
}

uint64_t sub_20E415A9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC18_JetEngine_SwiftUI26Impressionable_StateObject_configuration;
  v2 = sub_20E4A5450();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_unknownObjectRelease();
  v3 = v0 + OBJC_IVAR____TtC18_JetEngine_SwiftUI26Impressionable_StateObject_context;
  v4 = sub_20E4A5204();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + OBJC_IVAR____TtC18_JetEngine_SwiftUI26Impressionable_StateObject_uniqueID;
  v6 = sub_20E4A33B0();
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v7(v5, v6);
  v7(v0 + OBJC_IVAR____TtC18_JetEngine_SwiftUI26Impressionable_StateObject__parentContextID, v6);
  sub_20E39D1F8(v0 + OBJC_IVAR____TtC18_JetEngine_SwiftUI26Impressionable_StateObject_metricsContextImpressionsParentContextID, &qword_253ED2428);
  sub_20E39D1F8(v0 + OBJC_IVAR____TtC18_JetEngine_SwiftUI26Impressionable_StateObject_enableRequirements, &qword_253ED0D18);
  sub_20E39D1F8(v0 + OBJC_IVAR____TtC18_JetEngine_SwiftUI26Impressionable_StateObject_listContainerElementSize, &qword_254A18228);
  return swift_deallocClassInstance();
}

uint64_t sub_20E415BBC()
{
  return swift_retain();
}

uint64_t sub_20E415BC4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Impressionable_ViewModifier(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20E415C00()
{
  return type metadata accessor for Impressionable_StateObject(0);
}

void sub_20E415C08()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  sub_20E4A5450();
  if (v0 <= 0x3F)
  {
    sub_20E4A5204();
    if (v1 <= 0x3F)
    {
      sub_20E4A33B0();
      if (v2 <= 0x3F)
      {
        sub_20E3A4C54(319, &qword_253ED0620, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        if (v3 <= 0x3F)
        {
          sub_20E3A4C54(319, &qword_253ED0D20, (uint64_t (*)(uint64_t))MEMORY[0x24BE5DCE8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
          if (v4 <= 0x3F)
          {
            sub_20E3A4C54(319, qword_254A18268, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC148], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
            if (v5 <= 0x3F)
              swift_updateClassMetadata2();
          }
        }
      }
    }
  }
}

uint64_t sub_20E415D74(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[2];
  _QWORD v7[2];

  v1 = *(_QWORD *)(a1 + 8);
  type metadata accessor for Impressionable_ViewModifier(255);
  v2 = sub_20E4A39D4();
  type metadata accessor for ClickLocationViewModifier();
  v3 = sub_20E4A39D4();
  v7[0] = v1;
  v7[1] = sub_20E39F334(&qword_253ED0850, type metadata accessor for Impressionable_ViewModifier, (uint64_t)&unk_20E4ABE68);
  v4 = MEMORY[0x24BDED308];
  v6[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v2, v7);
  v6[1] = sub_20E39F334(&qword_253ED07E8, (uint64_t (*)(uint64_t))type metadata accessor for ClickLocationViewModifier, (uint64_t)&unk_20E4A953C);
  return MEMORY[0x212BBDF90](v4, v3, v6);
}

uint64_t sub_20E415E54(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[2];
  _QWORD v7[2];

  v1 = *(_QWORD *)(a1 + 16);
  type metadata accessor for Impressionable_ViewModifier(255);
  v2 = sub_20E4A39D4();
  type metadata accessor for ClickLocationViewModifier();
  v3 = sub_20E4A39D4();
  v7[0] = v1;
  v7[1] = sub_20E39F334(&qword_253ED0850, type metadata accessor for Impressionable_ViewModifier, (uint64_t)&unk_20E4ABE68);
  v4 = MEMORY[0x24BDED308];
  v6[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v2, v7);
  v6[1] = sub_20E39F334(&qword_253ED07E8, (uint64_t (*)(uint64_t))type metadata accessor for ClickLocationViewModifier, (uint64_t)&unk_20E4A953C);
  return MEMORY[0x212BBDF90](v4, v3, v6);
}

uint64_t storeEnumTagSinglePayload for Impressionable_StateObject.ViewState(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  unsigned int v4;
  uint64_t v5;

  if (a3 + 49153 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 49153 < 0xFF0000)
    v4 = 1;
  else
    v4 = v3;
  if (a3 >= 0x3FFF)
    v5 = v4;
  else
    v5 = 0;
  if (a2 <= 0x3FFE)
    return ((uint64_t (*)(void))((char *)&loc_20E415F8C + 4 * byte_20E4ABC05[v5]))();
  *a1 = a2 - 0x3FFF;
  return ((uint64_t (*)(void))((char *)sub_20E415FC4 + 4 * byte_20E4ABC00[v5]))();
}

uint64_t sub_20E415FC4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_20E415FCC(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x20E415FD4);
  return result;
}

uint64_t sub_20E415FF4(uint64_t result, int a2)
{
  unsigned int v2;

  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x20E415FFCLL);
  v2 = ((-a2 >> 1) & 0x1FFF) - (a2 << 13);
  *(_WORD *)result = (4 * v2) & 0xFE00 | (2 * (v2 & 0x7F));
  return result;
}

uint64_t sub_20E416000(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_20E416008(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Impressionable_StateObject.ViewState()
{
  return &type metadata for Impressionable_StateObject.ViewState;
}

unint64_t sub_20E416024(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v22 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = *(_QWORD *)a2;
    v8 = *(_QWORD *)(a2 + 8);
    v9 = *(_BYTE *)(a2 + 17);
    v10 = *(_BYTE *)(a2 + 16);
    sub_20E3A3AFC(*(_QWORD *)a2, v8, v10, v9);
    *(_QWORD *)a1 = v7;
    *(_QWORD *)(a1 + 8) = v8;
    *(_BYTE *)(a1 + 16) = v10;
    *(_BYTE *)(a1 + 17) = v9;
    v11 = *(_QWORD *)(a2 + 24);
    LOBYTE(v8) = *(_BYTE *)(a2 + 32);
    j__swift_retain(v11);
    *(_QWORD *)(a1 + 24) = v11;
    *(_BYTE *)(a1 + 32) = v8;
    v12 = *(int *)(a3 + 24);
    v13 = a1 + v12;
    v14 = a2 + v12;
    v15 = *(_QWORD *)(a2 + v12);
    v16 = *(_QWORD *)(v14 + 8);
    LOBYTE(v11) = *(_BYTE *)(v14 + 16);
    sub_20E39CFB8();
    *(_QWORD *)v13 = v15;
    *(_QWORD *)(v13 + 8) = v16;
    *(_BYTE *)(v13 + 16) = v11;
    v17 = (int *)type metadata accessor for Impressionable_ViewModifier.EnvironmentImpressionState(0);
    v18 = v17[5];
    v19 = (_QWORD *)(v13 + v18);
    v20 = (_QWORD *)(v14 + v18);
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v21 = sub_20E4A5384();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
    }
    else
    {
      *v19 = *v20;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v23 = v17[6];
    v24 = (_QWORD *)(v13 + v23);
    v25 = (_QWORD *)(v14 + v23);
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v26 = sub_20E4A33B0();
      v27 = *(_QWORD *)(v26 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
      {
        v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED2428);
        memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v27 + 16))(v24, v25, v26);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
      }
    }
    else
    {
      *v24 = *v25;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v29 = v17[7];
    v30 = (_QWORD *)(v13 + v29);
    v31 = (_QWORD *)(v14 + v29);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254A183F0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v32 = sub_20E4A3818();
      v33 = *(_QWORD *)(v32 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
      {
        v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18228);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v33 + 16))(v30, v31, v32);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
      }
    }
    else
    {
      *v30 = *v31;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_20E416334(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;

  sub_20E3A3D14(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned __int8 *)(a1 + 16), *(_BYTE *)(a1 + 17));
  j__swift_release(*(_QWORD *)(a1 + 24), *(unsigned __int8 *)(a1 + 32));
  v4 = a1 + *(int *)(a2 + 24);
  sub_20E39CED0();
  v5 = (int *)type metadata accessor for Impressionable_ViewModifier.EnvironmentImpressionState(0);
  v6 = v4 + v5[5];
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_20E4A5384();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  v8 = v4 + v5[6];
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = sub_20E4A33B0();
    v10 = *(_QWORD *)(v9 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }
  v11 = v4 + v5[7];
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A183F0);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v12 = sub_20E4A3818();
  v13 = *(_QWORD *)(v12 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  return result;
}

uint64_t sub_20E4164E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_BYTE *)(a2 + 17);
  v9 = *(unsigned __int8 *)(a2 + 16);
  sub_20E3A3AFC(*(_QWORD *)a2, v7, v9, v8);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v9;
  *(_BYTE *)(a1 + 17) = v8;
  v10 = *(_QWORD *)(a2 + 24);
  LOBYTE(v7) = *(_BYTE *)(a2 + 32);
  j__swift_retain(v10);
  *(_QWORD *)(a1 + 24) = v10;
  *(_BYTE *)(a1 + 32) = v7;
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_QWORD *)(a2 + v11);
  v15 = *(_QWORD *)(a2 + v11 + 8);
  LOBYTE(v10) = *(_BYTE *)(v13 + 16);
  sub_20E39CFB8();
  *(_QWORD *)v12 = v14;
  *(_QWORD *)(v12 + 8) = v15;
  *(_BYTE *)(v12 + 16) = v10;
  v16 = (int *)type metadata accessor for Impressionable_ViewModifier.EnvironmentImpressionState(0);
  v17 = v16[5];
  v18 = (_QWORD *)(v12 + v17);
  v19 = (_QWORD *)(v13 + v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v20 = sub_20E4A5384();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  }
  else
  {
    *v18 = *v19;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v21 = v16[6];
  v22 = (_QWORD *)(v12 + v21);
  v23 = (_QWORD *)(v13 + v21);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v24 = sub_20E4A33B0();
    v25 = *(_QWORD *)(v24 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
    {
      v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED2428);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v25 + 16))(v22, v23, v24);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
    }
  }
  else
  {
    *v22 = *v23;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v27 = v16[7];
  v28 = (_QWORD *)(v12 + v27);
  v29 = (_QWORD *)(v13 + v27);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A183F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v30 = sub_20E4A3818();
    v31 = *(_QWORD *)(v30 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
    {
      v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18228);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v31 + 16))(v28, v29, v30);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
    }
  }
  else
  {
    *v28 = *v29;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_20E4167CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_BYTE *)(a2 + 17);
  v9 = *(unsigned __int8 *)(a2 + 16);
  sub_20E3A3AFC(*(_QWORD *)a2, v7, v9, v8);
  v10 = *(_QWORD *)a1;
  v11 = *(_QWORD *)(a1 + 8);
  v12 = *(_BYTE *)(a1 + 17);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  v13 = *(unsigned __int8 *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v9;
  *(_BYTE *)(a1 + 17) = v8;
  sub_20E3A3D14(v10, v11, v13, v12);
  v14 = *(_QWORD *)(a2 + 24);
  LOBYTE(v7) = *(_BYTE *)(a2 + 32);
  j__swift_retain(v14);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(unsigned __int8 *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = v14;
  *(_BYTE *)(a1 + 32) = v7;
  j__swift_release(v15, v16);
  v17 = *(int *)(a3 + 24);
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = *(_QWORD *)(a2 + v17);
  v21 = *(_QWORD *)(a2 + v17 + 8);
  LOBYTE(v7) = *(_BYTE *)(a2 + v17 + 16);
  sub_20E39CFB8();
  *(_QWORD *)v18 = v20;
  *(_QWORD *)(v18 + 8) = v21;
  *(_BYTE *)(v18 + 16) = v7;
  sub_20E39CED0();
  v22 = type metadata accessor for Impressionable_ViewModifier.EnvironmentImpressionState(0);
  if (a1 != a2)
  {
    v23 = v22;
    v24 = *(int *)(v22 + 20);
    v25 = (_QWORD *)(v18 + v24);
    v26 = (_QWORD *)(v19 + v24);
    sub_20E39D1F8(v18 + v24, &qword_253ED0A28);
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v27 = sub_20E4A5384();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    }
    else
    {
      *v25 = *v26;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v28 = *(int *)(v23 + 24);
    v29 = (_QWORD *)(v18 + v28);
    v30 = (_QWORD *)(v19 + v28);
    sub_20E39D1F8(v18 + v28, &qword_253ED0A20);
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v31 = sub_20E4A33B0();
      v32 = *(_QWORD *)(v31 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
      {
        v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED2428);
        memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v32 + 16))(v29, v30, v31);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
      }
    }
    else
    {
      *v29 = *v30;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v34 = *(int *)(v23 + 28);
    v35 = (_QWORD *)(v18 + v34);
    v36 = (_QWORD *)(v19 + v34);
    sub_20E39D1F8(v18 + v34, &qword_254A183F0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254A183F0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v37 = sub_20E4A3818();
      v38 = *(_QWORD *)(v37 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
      {
        v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18228);
        memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v38 + 16))(v35, v36, v37);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
      }
    }
    else
    {
      *v35 = *v36;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_20E416B10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  const void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  *(_OWORD *)v5 = *(_OWORD *)(a2 + v4);
  *(_BYTE *)(v5 + 16) = *(_BYTE *)(a2 + v4 + 16);
  v7 = (int *)type metadata accessor for Impressionable_ViewModifier.EnvironmentImpressionState(0);
  v8 = v7[5];
  v9 = (void *)(v5 + v8);
  v10 = (const void *)(v6 + v8);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12 = sub_20E4A5384();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  v13 = v7[6];
  v14 = (void *)(v5 + v13);
  v15 = (const void *)(v6 + v13);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v17 = sub_20E4A33B0();
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v15, 1, v17))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED2428);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v18 + 32))(v14, v15, v17);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v14, 0, 1, v17);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  v20 = v7[7];
  v21 = (void *)(v5 + v20);
  v22 = (const void *)(v6 + v20);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A183F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v24 = sub_20E4A3818();
    v25 = *(_QWORD *)(v24 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v25 + 48))(v22, 1, v24))
    {
      v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18228);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v25 + 32))(v21, v22, v24);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v21, 0, 1, v24);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  return a1;
}

uint64_t sub_20E416DB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v6 = *(_BYTE *)(a2 + 16);
  v7 = *(_BYTE *)(a2 + 17);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_BYTE *)(a1 + 17);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v11 = *(unsigned __int8 *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 17) = v7;
  sub_20E3A3D14(v8, v9, v11, v10);
  v12 = *(_BYTE *)(a2 + 32);
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(unsigned __int8 *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = v12;
  j__swift_release(v13, v14);
  v15 = *(int *)(a3 + 24);
  v16 = a1 + v15;
  v17 = (_OWORD *)(a2 + v15);
  LOBYTE(v15) = *(_BYTE *)(a2 + v15 + 16);
  *(_OWORD *)v16 = *v17;
  *(_BYTE *)(v16 + 16) = v15;
  sub_20E39CED0();
  v18 = type metadata accessor for Impressionable_ViewModifier.EnvironmentImpressionState(0);
  if (a1 != a2)
  {
    v19 = v18;
    v20 = *(int *)(v18 + 20);
    v21 = (void *)(v16 + v20);
    v22 = (char *)v17 + v20;
    sub_20E39D1F8(v16 + v20, &qword_253ED0A28);
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v24 = sub_20E4A5384();
      (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v21, v22, v24);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    v25 = *(int *)(v19 + 24);
    v26 = (void *)(v16 + v25);
    v27 = (char *)v17 + v25;
    sub_20E39D1F8(v16 + v25, &qword_253ED0A20);
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v29 = sub_20E4A33B0();
      v30 = *(_QWORD *)(v29 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v27, 1, v29))
      {
        v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED2428);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v30 + 32))(v26, v27, v29);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v26, 0, 1, v29);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    v32 = *(int *)(v19 + 28);
    v33 = (void *)(v16 + v32);
    v34 = (char *)v17 + v32;
    sub_20E39D1F8(v16 + v32, &qword_254A183F0);
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A183F0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v36 = sub_20E4A3818();
      v37 = *(_QWORD *)(v36 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v34, 1, v36))
      {
        v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18228);
        memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v37 + 32))(v33, v34, v36);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v33, 0, 1, v36);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_20E4170C4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_20E4170D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;

  if ((_DWORD)a2 == 254)
  {
    v4 = *(unsigned __int8 *)(a1 + 17);
    if (v4 > 1)
      return (v4 ^ 0xFF) + 1;
    else
      return 0;
  }
  else
  {
    v8 = type metadata accessor for Impressionable_ViewModifier.EnvironmentImpressionState(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_20E417144()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_20E417150(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *(_BYTE *)(result + 17) = -(char)a2;
  }
  else
  {
    v7 = type metadata accessor for Impressionable_ViewModifier.EnvironmentImpressionState(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_20E4171C0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Impressionable_ViewModifier.EnvironmentImpressionState(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_20E41723C(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v14 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = *a2;
    v8 = a2[1];
    v9 = *((_BYTE *)a2 + 16);
    sub_20E39CFB8();
    *(_QWORD *)a1 = v7;
    *(_QWORD *)(a1 + 8) = v8;
    *(_BYTE *)(a1 + 16) = v9;
    v10 = a3[5];
    v11 = (_QWORD *)(a1 + v10);
    v12 = (uint64_t *)((char *)a2 + v10);
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v13 = sub_20E4A5384();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      *v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v15 = a3[6];
    v16 = (_QWORD *)(a1 + v15);
    v17 = (uint64_t *)((char *)a2 + v15);
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v18 = sub_20E4A33B0();
      v19 = *(_QWORD *)(v18 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      {
        v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED2428);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v19 + 16))(v16, v17, v18);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      }
    }
    else
    {
      *v16 = *v17;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v21 = a3[7];
    v22 = (_QWORD *)(a1 + v21);
    v23 = (uint64_t *)((char *)a2 + v21);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254A183F0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v24 = sub_20E4A3818();
      v25 = *(_QWORD *)(v24 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
      {
        v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18228);
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v25 + 16))(v22, v23, v24);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
      }
    }
    else
    {
      *v22 = *v23;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_20E4174E4(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  sub_20E39CED0();
  v4 = a1 + a2[5];
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_20E4A5384();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  v6 = a1 + a2[6];
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_20E4A33B0();
    v8 = *(_QWORD *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  v9 = a1 + a2[7];
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A183F0);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v10 = sub_20E4A3818();
  v11 = *(_QWORD *)(v10 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  return result;
}

uint64_t sub_20E417668(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = *a2;
  v7 = a2[1];
  v8 = *((_BYTE *)a2 + 16);
  sub_20E39CFB8();
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8;
  v9 = a3[5];
  v10 = (_QWORD *)(a1 + v9);
  v11 = (uint64_t *)((char *)a2 + v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12 = sub_20E4A5384();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  }
  else
  {
    *v10 = *v11;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v13 = a3[6];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (uint64_t *)((char *)a2 + v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v16 = sub_20E4A33B0();
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED2428);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
  }
  else
  {
    *v14 = *v15;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v19 = a3[7];
  v20 = (_QWORD *)(a1 + v19);
  v21 = (uint64_t *)((char *)a2 + v19);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A183F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v22 = sub_20E4A3818();
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    {
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18228);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v23 + 16))(v20, v21, v22);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
    }
  }
  else
  {
    *v20 = *v21;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_20E4178E4(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = *a2;
  v7 = a2[1];
  v8 = *((_BYTE *)a2 + 16);
  sub_20E39CFB8();
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8;
  sub_20E39CED0();
  if ((uint64_t *)a1 != a2)
  {
    v9 = a3[5];
    v10 = (_QWORD *)(a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    sub_20E39D1F8(a1 + v9, &qword_253ED0A28);
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_20E4A5384();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v13 = a3[6];
    v14 = (_QWORD *)(a1 + v13);
    v15 = (uint64_t *)((char *)a2 + v13);
    sub_20E39D1F8(a1 + v13, &qword_253ED0A20);
    __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v16 = sub_20E4A33B0();
      v17 = *(_QWORD *)(v16 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      {
        v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED2428);
        memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v17 + 16))(v14, v15, v16);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      }
    }
    else
    {
      *v14 = *v15;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v19 = a3[7];
    v20 = (_QWORD *)(a1 + v19);
    v21 = (uint64_t *)((char *)a2 + v19);
    sub_20E39D1F8(a1 + v19, &qword_254A183F0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254A183F0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v22 = sub_20E4A3818();
      v23 = *(_QWORD *)(v22 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
      {
        v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18228);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v23 + 16))(v20, v21, v22);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
      }
    }
    else
    {
      *v20 = *v21;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_20E417BA4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = a3[5];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_20E4A5384();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v11 = a3[6];
  v12 = (void *)(a1 + v11);
  v13 = (const void *)(a2 + v11);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v15 = sub_20E4A33B0();
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48))(v13, 1, v15))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED2428);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v16 + 32))(v12, v13, v15);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v12, 0, 1, v15);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  v18 = a3[7];
  v19 = (void *)(a1 + v18);
  v20 = (const void *)(a2 + v18);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A183F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v22 = sub_20E4A3818();
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v23 + 48))(v20, 1, v22))
    {
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18228);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v23 + 32))(v19, v20, v22);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v19, 0, 1, v22);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  return a1;
}

uint64_t sub_20E417E0C(uint64_t a1, uint64_t a2, int *a3)
{
  char v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v6 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v6;
  sub_20E39CED0();
  if (a1 != a2)
  {
    v7 = a3[5];
    v8 = (void *)(a1 + v7);
    v9 = (const void *)(a2 + v7);
    sub_20E39D1F8(a1 + v7, &qword_253ED0A28);
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = sub_20E4A5384();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    v12 = a3[6];
    v13 = (void *)(a1 + v12);
    v14 = (const void *)(a2 + v12);
    sub_20E39D1F8(a1 + v12, &qword_253ED0A20);
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v16 = sub_20E4A33B0();
      v17 = *(_QWORD *)(v16 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16))
      {
        v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED2428);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v17 + 32))(v13, v14, v16);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v13, 0, 1, v16);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    v19 = a3[7];
    v20 = (void *)(a1 + v19);
    v21 = (const void *)(a2 + v19);
    sub_20E39D1F8(a1 + v19, &qword_254A183F0);
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A183F0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v23 = sub_20E4A3818();
      v24 = *(_QWORD *)(v23 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v24 + 48))(v21, 1, v23))
      {
        v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18228);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v24 + 32))(v20, v21, v23);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v20, 0, 1, v23);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_20E4180BC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_20E4180C8(uint64_t a1, uint64_t a2, int *a3)
{
  unsigned int v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 254)
  {
    v4 = *(unsigned __int8 *)(a1 + 16);
    if (v4 > 1)
      return (v4 ^ 0xFF) + 1;
    else
      return 0;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A182F8);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[5];
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18300);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[6];
      }
      else
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18480);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a3[7];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_20E418190()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_20E41819C(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 254)
  {
    *(_BYTE *)(result + 16) = -(char)a2;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A182F8);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[5];
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18300);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[6];
      }
      else
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18480);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a4[7];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_20E418264()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_20E3A4C54(319, (unint64_t *)&qword_253ED2448, (uint64_t (*)(uint64_t))MEMORY[0x24BE5D6D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560]);
  if (v0 <= 0x3F)
  {
    sub_20E3A6754(319, (unint64_t *)&qword_253ED2440, &qword_253ED2428);
    if (v1 <= 0x3F)
    {
      sub_20E3A6754(319, &qword_254A18498, &qword_254A18228);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t sub_20E418348()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (**v30)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int (*v40)(uint64_t, uint64_t, uint64_t);
  char *v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  void (**v64)(char *, uint64_t);
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  __int128 v80;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18228);
  MEMORY[0x24BDAC7A8](v1);
  v75 = (uint64_t)&v58 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0D18);
  MEMORY[0x24BDAC7A8](v3);
  v74 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CE8);
  v72 = *(_QWORD *)(v5 - 8);
  v73 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v71 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_20E4A5204();
  v79 = *(_QWORD *)(v63 - 8);
  MEMORY[0x24BDAC7A8](v63);
  v60 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v69 = (char *)&v58 - v9;
  MEMORY[0x24BDAC7A8](v10);
  v70 = (char *)&v58 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED2428);
  MEMORY[0x24BDAC7A8](v12);
  v66 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v61 = (char *)&v58 - v15;
  MEMORY[0x24BDAC7A8](v16);
  v77 = (char *)&v58 - v17;
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CE0);
  v68 = *(_QWORD *)(v78 - 8);
  MEMORY[0x24BDAC7A8](v78);
  v67 = (char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CF0);
  v64 = *(void (***)(char *, uint64_t))(v65 - 8);
  MEMORY[0x24BDAC7A8](v65);
  v20 = (char *)&v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_20E4A5384();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v58 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for Impressionable_StateObject(0);
  v26 = sub_20E39F334(&qword_253ED0818, type metadata accessor for Impressionable_StateObject, (uint64_t)&unk_20E4ABE30);
  v27 = sub_20E4A36EC();
  v76 = type metadata accessor for Impressionable_ViewModifier.EnvironmentImpressionState(0);
  v28 = v0 + *(int *)(v76 + 20);
  sub_20E45C27C((uint64_t)v24);
  sub_20E4A5330();
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CD0);
  MEMORY[0x212BBC94C](&v80, v20, v29);
  v64[1](v20, v65);
  v30 = *(void (***)(char *, uint64_t))(v22 + 8);
  ((void (*)(char *, uint64_t))v30)(v24, v21);
  *(_OWORD *)(v27 + OBJC_IVAR____TtC18_JetEngine_SwiftUI26Impressionable_StateObject_tracker) = v80;
  swift_release();
  swift_unknownObjectRelease();
  v31 = sub_20E4A36EC();
  v65 = v28;
  sub_20E45C27C((uint64_t)v24);
  v32 = (uint64_t)v67;
  sub_20E4A5348();
  v59 = sub_20E4A33B0();
  v33 = (uint64_t)v77;
  MEMORY[0x212BBC958](v32, v59);
  (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v32, v78);
  v67 = v24;
  v68 = v21;
  v64 = v30;
  ((void (*)(char *, uint64_t))v30)(v24, v21);
  v34 = v31 + OBJC_IVAR____TtC18_JetEngine_SwiftUI26Impressionable_StateObject_metricsContextImpressionsParentContextID;
  swift_beginAccess();
  sub_20E41AB94(v33, v34, &qword_253ED2428);
  swift_endAccess();
  swift_release();
  v62 = sub_20E4A36EC();
  v78 = v25;
  v35 = (uint64_t)v61;
  v77 = (char *)v26;
  sub_20E4A36EC();
  swift_beginAccess();
  v36 = v60;
  v37 = v59;
  v38 = v63;
  (*(void (**)(void))(v79 + 16))();
  swift_release();
  sub_20E45C2A8(v35);
  v39 = *(_QWORD *)(v37 - 8);
  v40 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48);
  if (v40(v35, 1, v37) == 1)
  {
    sub_20E39D1F8(v35, &qword_253ED2428);
  }
  else
  {
    sub_20E4A3398();
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v35, v37);
  }
  v41 = v69;
  sub_20E4A51E0();
  swift_bridgeObjectRelease();
  v42 = *(void (**)(char *, uint64_t))(v79 + 8);
  v42(v36, v38);
  v43 = sub_20E4A36EC();
  v44 = (uint64_t)v66;
  if (*(_BYTE *)(v43 + OBJC_IVAR____TtC18_JetEngine_SwiftUI26Impressionable_StateObject_definesParentContext) == 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v66, v43 + OBJC_IVAR____TtC18_JetEngine_SwiftUI26Impressionable_StateObject__parentContextID, v37);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v39 + 56))(v44, 0, 1, v37);
  }
  else
  {
    v45 = v43
        + OBJC_IVAR____TtC18_JetEngine_SwiftUI26Impressionable_StateObject_metricsContextImpressionsParentContextID;
    swift_beginAccess();
    sub_20E3A5E20(v45, v44, &qword_253ED2428);
  }
  swift_release();
  if (v40(v44, 1, v37) == 1)
  {
    sub_20E39D1F8(v44, &qword_253ED2428);
  }
  else
  {
    sub_20E4A3398();
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v44, v37);
  }
  v46 = v70;
  sub_20E4A51B0();
  swift_bridgeObjectRelease();
  v42(v41, v38);
  v47 = v62 + OBJC_IVAR____TtC18_JetEngine_SwiftUI26Impressionable_StateObject_context;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v79 + 40))(v47, v46, v38);
  swift_endAccess();
  swift_release();
  v48 = sub_20E4A36EC();
  v49 = (uint64_t)v67;
  sub_20E45C27C((uint64_t)v67);
  v50 = v71;
  sub_20E4A5324();
  v51 = sub_20E4A56E4();
  v52 = (uint64_t)v74;
  MEMORY[0x212BBC958](v50, v51);
  (*(void (**)(char *, uint64_t))(v72 + 8))(v50, v73);
  ((void (*)(uint64_t, uint64_t))v64)(v49, v68);
  v53 = v48 + OBJC_IVAR____TtC18_JetEngine_SwiftUI26Impressionable_StateObject_enableRequirements;
  swift_beginAccess();
  sub_20E41AB94(v52, v53, &qword_253ED0D18);
  swift_endAccess();
  swift_release();
  v54 = sub_20E4A36EC();
  v55 = v75;
  sub_20E45C4F0(v75);
  v56 = v54 + OBJC_IVAR____TtC18_JetEngine_SwiftUI26Impressionable_StateObject_listContainerElementSize;
  swift_beginAccess();
  sub_20E41AB94(v55, v56, &qword_254A18228);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_20E418BE4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E418BF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t KeyPath;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (**v52)@<X0>(BOOL *@<X8>);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  void (*v62)(uint64_t, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t (*v73)(uint64_t, uint64_t, uint64_t);
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  int v88;
  char *v89;
  char v90;
  void (*v91)(char *, uint64_t);
  char v92;
  void (*v93)(uint64_t, uint64_t, uint64_t);
  uint64_t v94;
  void (*v95)(char *, uint64_t, uint64_t);
  uint64_t v96;
  uint64_t (**v97)();
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;

  v135 = a1;
  v137 = a2;
  v138 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0B50);
  MEMORY[0x24BDAC7A8](v138);
  v134 = (char *)&v100 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0BE0);
  v136 = *(_QWORD *)(v139 - 8);
  MEMORY[0x24BDAC7A8](v139);
  v132 = (uint64_t)&v100 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED07D8);
  MEMORY[0x24BDAC7A8](v124);
  v100 = (char *)&v100 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = sub_20E4A56E4();
  v105 = *(_QWORD *)(v107 - 8);
  MEMORY[0x24BDAC7A8](v107);
  v101 = (char *)&v100 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0D28);
  MEMORY[0x24BDAC7A8](v103);
  v106 = (uint64_t)&v100 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0D18);
  MEMORY[0x24BDAC7A8](v8);
  v102 = (uint64_t)&v100 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v109 = (uint64_t)&v100 - v11;
  MEMORY[0x24BDAC7A8](v12);
  v104 = (uint64_t)&v100 - v13;
  v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0B48);
  MEMORY[0x24BDAC7A8](v131);
  v130 = (char *)&v100 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0B40);
  MEMORY[0x24BDAC7A8](v126);
  v127 = (uint64_t)&v100 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0B80);
  MEMORY[0x24BDAC7A8](v129);
  v128 = (char *)&v100 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED2428);
  MEMORY[0x24BDAC7A8](v17);
  v113 = (char *)&v100 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A78);
  MEMORY[0x24BDAC7A8](v112);
  v116 = (char *)&v100 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0AC8);
  MEMORY[0x24BDAC7A8](v114);
  v118 = (uint64_t)&v100 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0AF8);
  MEMORY[0x24BDAC7A8](v117);
  v120 = (uint64_t)&v100 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0B08);
  MEMORY[0x24BDAC7A8](v119);
  v121 = (uint64_t)&v100 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0B70);
  MEMORY[0x24BDAC7A8](v125);
  v110 = (uint64_t)&v100 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v122 = (uint64_t)&v100 - v25;
  v26 = type metadata accessor for Impressionable_ViewModifier(0);
  v111 = *(_QWORD *)(v26 - 8);
  v27 = *(_QWORD *)(v111 + 64);
  MEMORY[0x24BDAC7A8](v26);
  v115 = (uint64_t)&v100 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0B90);
  MEMORY[0x24BDAC7A8](v28);
  v133 = (char *)&v100 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = v2;
  type metadata accessor for Impressionable_StateObject(0);
  sub_20E39F334(&qword_253ED0818, type metadata accessor for Impressionable_StateObject, (uint64_t)&unk_20E4ABE30);
  v30 = *(_QWORD *)(sub_20E4A36EC() + 24);
  swift_bridgeObjectRetain();
  swift_release();
  v31 = *(_QWORD *)(v30 + 16);
  swift_bridgeObjectRelease();
  if (!v31)
  {
    v61 = v136;
    v62 = *(void (**)(uint64_t, uint64_t, uint64_t))(v136 + 16);
    v63 = v132;
    v64 = v139;
    v62(v132, v135, v139);
    v62((uint64_t)v134, v63, v64);
    swift_storeEnumTagMultiPayload();
    sub_20E41A744();
    sub_20E39D010(&qword_253ED0BD8, &qword_253ED0BE0, MEMORY[0x24BDEFB78]);
    sub_20E4A3DF4();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v61 + 8))(v63, v64);
  }
  v108 = v28;
  v32 = *(_QWORD *)(sub_20E4A36EC() + OBJC_IVAR____TtC18_JetEngine_SwiftUI26Impressionable_StateObject_tracker);
  swift_release();
  if (v32)
  {
    v33 = v123;
    v34 = v115;
    sub_20E41A7EC(v123, v115);
    v111 = (*(unsigned __int8 *)(v111 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v111 + 80);
    v35 = v111;
    v132 = swift_allocObject();
    sub_20E3A57AC(v34, v132 + v35, type metadata accessor for Impressionable_ViewModifier);
    KeyPath = swift_getKeyPath();
    v37 = sub_20E4A36EC() + OBJC_IVAR____TtC18_JetEngine_SwiftUI26Impressionable_StateObject_uniqueID;
    v38 = sub_20E4A33B0();
    v39 = *(_QWORD *)(v38 - 8);
    v40 = (uint64_t)v113;
    (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v113, v37, v38);
    swift_release();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v39 + 56))(v40, 0, 1, v38);
    v41 = (uint64_t)v116;
    v42 = (uint64_t *)&v116[*(int *)(v112 + 36)];
    v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0C20);
    sub_20E3A5E20(v40, (uint64_t)v42 + *(int *)(v43 + 28), &qword_253ED2428);
    *v42 = KeyPath;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v136 + 16))(v41, v135, v139);
    sub_20E39D1F8(v40, &qword_253ED2428);
    v44 = swift_getKeyPath();
    sub_20E41A7EC(v33, v34);
    v45 = swift_allocObject();
    v46 = v111;
    sub_20E3A57AC(v34, v45 + v111, type metadata accessor for Impressionable_ViewModifier);
    v47 = v118;
    sub_20E3A5E20(v41, v118, &qword_253ED0A78);
    v48 = (uint64_t *)(v47 + *(int *)(v114 + 36));
    *v48 = v44;
    v48[1] = (uint64_t)sub_20E41AA40;
    v48[2] = v45;
    sub_20E39D1F8(v41, &qword_253ED0A78);
    sub_20E41A7EC(v33, v34);
    v49 = swift_allocObject();
    sub_20E3A57AC(v34, v49 + v46, type metadata accessor for Impressionable_ViewModifier);
    sub_20E41A7EC(v33, v34);
    v50 = swift_allocObject();
    sub_20E3A57AC(v34, v50 + v46, type metadata accessor for Impressionable_ViewModifier);
    v51 = v120;
    sub_20E3A5E20(v47, v120, &qword_253ED0AC8);
    v52 = (uint64_t (**)@<X0>(BOOL *@<X8>))(v51 + *(int *)(v117 + 36));
    *v52 = sub_20E41AA80;
    v52[1] = (uint64_t (*)@<X0>(BOOL *@<X8>))v49;
    v52[2] = (uint64_t (*)@<X0>(BOOL *@<X8>))sub_20E41AAD0;
    v52[3] = (uint64_t (*)@<X0>(BOOL *@<X8>))v50;
    sub_20E39D1F8(v47, &qword_253ED0AC8);
    sub_20E41A7EC(v33, v34);
    v53 = swift_allocObject();
    sub_20E3A57AC(v34, v53 + v46, type metadata accessor for Impressionable_ViewModifier);
    v54 = swift_getKeyPath();
    v55 = v121;
    sub_20E3A5E20(v51, v121, &qword_253ED0AF8);
    v56 = v55 + *(int *)(v119 + 36);
    *(_QWORD *)v56 = sub_20E41AB10;
    *(_QWORD *)(v56 + 8) = v53;
    *(_QWORD *)(v56 + 16) = v54;
    *(_QWORD *)(v56 + 24) = 0;
    *(_WORD *)(v56 + 32) = 0;
    sub_20E39D1F8(v51, &qword_253ED0AF8);
    v57 = *(_QWORD *)(v33 + 24);
    v58 = *(unsigned __int8 *)(v33 + 32);
    j__swift_retain(v57);
    v59 = sub_20E45C2DC(v57, v58);
    j__swift_release(v57, v58);
    if (v59)
    {
      v60 = (void *)MEMORY[0x212BBE110](v59 + 16);
      swift_release();
    }
    else
    {
      v60 = 0;
    }
    v78 = (uint64_t)v134;
    v82 = (uint64_t)v130;
    v83 = v110;
    sub_20E3A2844(v60, (uint64_t)sub_20E41A834, v132, v110);

    sub_20E39D1F8(v55, &qword_253ED0B08);
    v84 = v83;
    v85 = v122;
    sub_20E41AB4C(v84, v122);
    sub_20E3A5E20(v85, v127, &qword_253ED0B70);
    swift_storeEnumTagMultiPayload();
    sub_20E41A648();
    sub_20E39D010(&qword_253ED07D0, &qword_253ED07D8, (uint64_t)&protocol conformance descriptor for _RequirementFailureView<A, B>);
    v86 = (uint64_t)v128;
    sub_20E4A3DF4();
    sub_20E3A5E20(v86, v82, &qword_253ED0B80);
    swift_storeEnumTagMultiPayload();
    sub_20E41A5C4();
    sub_20E39D010(&qword_253ED0BD8, &qword_253ED0BE0, MEMORY[0x24BDEFB78]);
    v77 = (uint64_t)v133;
    sub_20E4A3DF4();
    swift_release();
    sub_20E39D1F8(v86, &qword_253ED0B80);
    sub_20E39D1F8(v85, &qword_253ED0B70);
    goto LABEL_18;
  }
  v66 = sub_20E4A36EC() + OBJC_IVAR____TtC18_JetEngine_SwiftUI26Impressionable_StateObject_enableRequirements;
  swift_beginAccess();
  v67 = v104;
  sub_20E3A5E20(v66, v104, &qword_253ED0D18);
  swift_release();
  v68 = v105;
  v69 = v109;
  v70 = v107;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v105 + 104))(v109, *MEMORY[0x24BE5DCD8], v107);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v68 + 56))(v69, 0, 1, v70);
  v71 = v106;
  v72 = v106 + *(int *)(v103 + 48);
  sub_20E3A5E20(v67, v106, &qword_253ED0D18);
  sub_20E3A5E20(v69, v72, &qword_253ED0D18);
  v73 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v68 + 48);
  if (v73(v71, 1, v70) != 1)
  {
    v87 = v102;
    sub_20E3A5E20(v71, v102, &qword_253ED0D18);
    v88 = v73(v72, 1, v70);
    v75 = v139;
    if (v88 != 1)
    {
      v89 = v101;
      (*(void (**)(char *, uint64_t, uint64_t))(v68 + 32))(v101, v72, v70);
      sub_20E39F334(&qword_254A183E8, (uint64_t (*)(uint64_t))MEMORY[0x24BE5DCE8], MEMORY[0x24BE5DCF8]);
      v90 = sub_20E4A5C0C();
      v91 = *(void (**)(char *, uint64_t))(v68 + 8);
      v91(v89, v70);
      sub_20E39D1F8(v109, &qword_253ED0D18);
      sub_20E39D1F8(v67, &qword_253ED0D18);
      v91((char *)v87, v70);
      sub_20E39D1F8(v71, &qword_253ED0D18);
      v77 = (uint64_t)v133;
      v78 = (uint64_t)v134;
      v80 = (uint64_t)v130;
      v79 = v135;
      v81 = v136;
      v76 = v132;
      if ((v90 & 1) == 0)
        goto LABEL_16;
      goto LABEL_15;
    }
    sub_20E39D1F8(v69, &qword_253ED0D18);
    sub_20E39D1F8(v67, &qword_253ED0D18);
    (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v87, v70);
    v76 = v132;
    v77 = (uint64_t)v133;
LABEL_13:
    sub_20E39D1F8(v71, &qword_253ED0D28);
    v78 = (uint64_t)v134;
    v79 = v135;
    v80 = (uint64_t)v130;
    v81 = v136;
    goto LABEL_16;
  }
  sub_20E39D1F8(v69, &qword_253ED0D18);
  sub_20E39D1F8(v67, &qword_253ED0D18);
  v74 = v73(v72, 1, v70);
  v75 = v139;
  v76 = v132;
  v77 = (uint64_t)v133;
  if (v74 != 1)
    goto LABEL_13;
  sub_20E39D1F8(v71, &qword_253ED0D18);
  v78 = (uint64_t)v134;
  v79 = v135;
  v80 = (uint64_t)v130;
  v81 = v136;
LABEL_15:
  sub_20E3A5200();
  v92 = sub_20E4A60A4();
  v76 = v132;
  if ((v92 & 1) == 0)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v81 + 16))(v132, v79, v75);
    v94 = swift_allocObject();
    *(_QWORD *)(v94 + 16) = 0xD00000000000002CLL;
    *(_QWORD *)(v94 + 24) = 0x800000020E4CA860;
    v95 = *(void (**)(char *, uint64_t, uint64_t))(v81 + 32);
    v96 = (uint64_t)v100;
    v95(v100, v76, v75);
    v97 = (uint64_t (**)())(v96 + *(int *)(v124 + 52));
    *v97 = sub_20E3A5260;
    v97[1] = (uint64_t (*)())v94;
    v98 = v96;
    sub_20E3A5E20(v96, v127, &qword_253ED07D8);
    swift_storeEnumTagMultiPayload();
    sub_20E41A648();
    sub_20E39D010(&qword_253ED07D0, &qword_253ED07D8, (uint64_t)&protocol conformance descriptor for _RequirementFailureView<A, B>);
    v99 = (uint64_t)v128;
    sub_20E4A3DF4();
    sub_20E3A5E20(v99, v80, &qword_253ED0B80);
    swift_storeEnumTagMultiPayload();
    sub_20E41A5C4();
    sub_20E39D010(&qword_253ED0BD8, &qword_253ED0BE0, MEMORY[0x24BDEFB78]);
    v77 = (uint64_t)v133;
    sub_20E4A3DF4();
    sub_20E39D1F8(v99, &qword_253ED0B80);
    sub_20E39D1F8(v98, &qword_253ED07D8);
    goto LABEL_18;
  }
LABEL_16:
  v93 = *(void (**)(uint64_t, uint64_t, uint64_t))(v81 + 16);
  v93(v76, v79, v75);
  v93(v80, v76, v75);
  swift_storeEnumTagMultiPayload();
  sub_20E41A5C4();
  sub_20E39D010(&qword_253ED0BD8, &qword_253ED0BE0, MEMORY[0x24BDEFB78]);
  sub_20E4A3DF4();
  (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v76, v75);
LABEL_18:
  sub_20E3A5E20(v77, v78, &qword_253ED0B90);
  swift_storeEnumTagMultiPayload();
  sub_20E41A744();
  sub_20E39D010(&qword_253ED0BD8, &qword_253ED0BE0, MEMORY[0x24BDEFB78]);
  sub_20E4A3DF4();
  return sub_20E39D1F8(v77, &qword_253ED0B90);
}

uint64_t sub_20E419CC8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  __int16 v10;
  __int16 v11;
  uint64_t result;
  int v13;
  uint64_t v14;
  __int16 v15;
  uint64_t v16;

  v2 = sub_20E4A3668();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16))(v6, a1, v2, v4);
  v7 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v6, v2);
  if (v7 == *MEMORY[0x24BDEB1D0])
  {
    type metadata accessor for Impressionable_ViewModifier(0);
    type metadata accessor for Impressionable_StateObject(0);
    sub_20E39F334(&qword_253ED0818, type metadata accessor for Impressionable_StateObject, (uint64_t)&unk_20E4ABE30);
    v8 = sub_20E4A36EC();
    v9 = *(_WORD *)(sub_20E4A36EC() + 16);
    swift_release();
    v10 = *(_WORD *)(sub_20E4A36EC() + 16);
    swift_release();
    v11 = *(_WORD *)(v8 + 16);
    *(_WORD *)(v8 + 16) = v10 & 0x100 | v9 & 1 | 0x8000;
    sub_20E415428(v11);
    return swift_release();
  }
  else if (v7 == *MEMORY[0x24BDEB1E0])
  {
    type metadata accessor for Impressionable_ViewModifier(0);
    type metadata accessor for Impressionable_StateObject(0);
    sub_20E39F334(&qword_253ED0818, type metadata accessor for Impressionable_StateObject, (uint64_t)&unk_20E4ABE30);
    v13 = *(__int16 *)(sub_20E4A36EC() + 16);
    result = swift_release();
    if (v13 < 0)
    {
      v14 = sub_20E4A36EC();
      v15 = *(_WORD *)(v14 + 16);
      *(_WORD *)(v14 + 16) = v13 & 0x101;
      sub_20E415428(v15);
      return swift_release();
    }
  }
  else
  {
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  return result;
}

uint64_t sub_20E419F00(uint64_t a1)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v12 = a1;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0CE0);
  v11 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_20E4A33B0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Impressionable_ViewModifier(0);
  type metadata accessor for Impressionable_StateObject(0);
  sub_20E39F334(&qword_253ED0818, type metadata accessor for Impressionable_StateObject, (uint64_t)&unk_20E4ABE30);
  v7 = *(unsigned __int8 *)(sub_20E4A36EC()
                          + OBJC_IVAR____TtC18_JetEngine_SwiftUI26Impressionable_StateObject_definesParentContext);
  result = swift_release();
  if (v7 == 1)
  {
    v9 = sub_20E4A36EC();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v9 + OBJC_IVAR____TtC18_JetEngine_SwiftUI26Impressionable_StateObject__parentContextID, v3);
    swift_release();
    sub_20E4A5348();
    sub_20E4A536C();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v2, v13);
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return result;
}

uint64_t sub_20E41A0B4@<X0>(BOOL *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  double v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  double v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  BOOL *v17;

  v17 = a1;
  v16 = sub_20E4A5450();
  v1 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18228);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Impressionable_ViewModifier(0);
  type metadata accessor for Impressionable_StateObject(0);
  sub_20E39F334(&qword_253ED0818, type metadata accessor for Impressionable_StateObject, (uint64_t)&unk_20E4ABE30);
  v7 = sub_20E4A36EC() + OBJC_IVAR____TtC18_JetEngine_SwiftUI26Impressionable_StateObject_listContainerElementSize;
  swift_beginAccess();
  sub_20E3A5E20(v7, (uint64_t)v6, &qword_254A18228);
  swift_release();
  sub_20E3C2220((uint64_t)v6);
  v9 = v8;
  sub_20E39D1F8((uint64_t)v6, &qword_254A18228);
  v10 = sub_20E4A36EC();
  v11 = v16;
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v10 + OBJC_IVAR____TtC18_JetEngine_SwiftUI26Impressionable_StateObject_configuration, v16);
  swift_release();
  sub_20E4A5408();
  v13 = v12;
  result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v11);
  *v17 = v13 < v9;
  return result;
}

uint64_t sub_20E41A29C(unsigned __int8 *a1, uint64_t a2)
{
  int v3;
  int v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int16 v14;
  __int16 v15;
  uint64_t v16;
  __int16 v17;
  uint64_t v18;

  v3 = *a1;
  type metadata accessor for Impressionable_ViewModifier(0);
  type metadata accessor for Impressionable_StateObject(0);
  sub_20E39F334(&qword_253ED0818, type metadata accessor for Impressionable_StateObject, (uint64_t)&unk_20E4ABE30);
  v4 = *(__int16 *)(sub_20E4A36EC() + 16);
  result = swift_release();
  if ((v4 & 0x80000000) == 0)
  {
    if (v3)
    {
      v6 = *(_QWORD *)a2;
      v7 = *(_QWORD *)(a2 + 8);
      v8 = *(unsigned __int8 *)(a2 + 16);
      v9 = *(unsigned __int8 *)(a2 + 17);
      sub_20E3A3AFC(v6, v7, v8, v9);
      sub_20E45C300(v6, v7, v8 | (v9 << 8));
      v11 = v10;
      sub_20E3A3D14(v6, v7, v8, v9);
      if (v11
        && (v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A18408),
            MEMORY[0x212BBBCE0](&v18, v12),
            swift_release(),
            swift_release(),
            (v18 & 1) == 0))
      {
        v13 = sub_20E4A36EC();
        v14 = *(_WORD *)(v13 + 16);
        v15 = 1;
      }
      else
      {
        v13 = sub_20E4A36EC();
        v14 = *(_WORD *)(v13 + 16);
        v15 = 257;
      }
      *(_WORD *)(v13 + 16) = v15;
      sub_20E415428(v14);
      return swift_release();
    }
    else
    {
      v16 = sub_20E4A36EC();
      v17 = *(_WORD *)(v16 + 16);
      *(_WORD *)(v16 + 16) = 0;
      sub_20E415428(v17);
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_20E41A490(char a1)
{
  uint64_t v2;
  uint64_t v3;
  __int16 v4;
  uint64_t result;
  __int16 v6;
  __int16 v7;
  __int16 v8;

  type metadata accessor for Impressionable_ViewModifier(0);
  type metadata accessor for Impressionable_StateObject(0);
  sub_20E39F334(&qword_253ED0818, type metadata accessor for Impressionable_StateObject, (uint64_t)&unk_20E4ABE30);
  v2 = sub_20E4A36EC();
  v3 = v2;
  if ((a1 & 1) != 0)
  {
    v4 = *(_WORD *)(v2 + 16);
    result = swift_release();
    if ((v4 & 0x8101) != 1)
      return result;
    v3 = sub_20E4A36EC();
    v6 = *(_WORD *)(v3 + 16);
    v7 = 257;
  }
  else
  {
    v8 = *(_WORD *)(sub_20E4A36EC() + 16);
    swift_release();
    v7 = v8 & 1;
    v6 = *(_WORD *)(v3 + 16);
  }
  *(_WORD *)(v3 + 16) = v7;
  sub_20E415428(v6);
  return swift_release();
}

unint64_t sub_20E41A5C4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_253ED0B78;
  if (!qword_253ED0B78)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253ED0B80);
    v2[0] = sub_20E41A648();
    v2[1] = sub_20E39D010(&qword_253ED07D0, &qword_253ED07D8, (uint64_t)&protocol conformance descriptor for _RequirementFailureView<A, B>);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_253ED0B78);
  }
  return result;
}

unint64_t sub_20E41A648()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_253ED0B68;
  if (!qword_253ED0B68)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253ED0B70);
    v2[0] = sub_20E41A6D4((unint64_t *)&qword_253ED0B20, &qword_253ED0B28, (uint64_t (*)(void))sub_20E3A5B48, (uint64_t (*)(void))sub_20E3A50B4);
    v2[1] = sub_20E3A5D58();
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_253ED0B68);
  }
  return result;
}

uint64_t sub_20E41A6D4(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = a3();
    v9[1] = a4();
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_20E41A744()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_253ED0B88;
  if (!qword_253ED0B88)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253ED0B90);
    v2[0] = sub_20E41A5C4();
    v2[1] = sub_20E39D010(&qword_253ED0BD8, &qword_253ED0BE0, MEMORY[0x24BDEFB78]);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_253ED0B88);
  }
  return result;
}

uint64_t sub_20E41A7C8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_20E41A7EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Impressionable_ViewModifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20E41A834(uint64_t a1)
{
  type metadata accessor for Impressionable_ViewModifier(0);
  return sub_20E419CC8(a1);
}

uint64_t objectdestroy_23Tm_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = type metadata accessor for Impressionable_ViewModifier(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  sub_20E3A3D14(*(_QWORD *)v3, *(_QWORD *)(v3 + 8), *(unsigned __int8 *)(v3 + 16), *(_BYTE *)(v3 + 17));
  j__swift_release(*(_QWORD *)(v3 + 24), *(unsigned __int8 *)(v3 + 32));
  v4 = v3 + *(int *)(v1 + 24);
  sub_20E39CED0();
  v5 = (int *)type metadata accessor for Impressionable_ViewModifier.EnvironmentImpressionState(0);
  v6 = v4 + v5[5];
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_20E4A5384();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  v8 = v4 + v5[6];
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = sub_20E4A33B0();
    v10 = *(_QWORD *)(v9 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }
  v11 = v4 + v5[7];
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A183F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12 = sub_20E4A3818();
    v13 = *(_QWORD *)(v12 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_20E41AA40(uint64_t a1)
{
  type metadata accessor for Impressionable_ViewModifier(0);
  return sub_20E419F00(a1);
}

uint64_t sub_20E41AA80@<X0>(BOOL *a1@<X8>)
{
  type metadata accessor for Impressionable_ViewModifier(0);
  return sub_20E41A0B4(a1);
}

uint64_t sub_20E41AAD0(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Impressionable_ViewModifier(0) - 8) + 80);
  return sub_20E41A29C(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t sub_20E41AB10(char a1)
{
  type metadata accessor for Impressionable_ViewModifier(0);
  return sub_20E41A490(a1);
}

uint64_t sub_20E41AB4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0B70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20E41AB94(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

unint64_t sub_20E41ABDC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_253ED0B98;
  if (!qword_253ED0B98)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253ED0BA0);
    v2[0] = sub_20E41A744();
    v2[1] = sub_20E39D010(&qword_253ED0BD8, &qword_253ED0BE0, MEMORY[0x24BDEFB78]);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_253ED0B98);
  }
  return result;
}

void sub_20E41AC8C()
{
  sub_20E39BA10(1.0);
}

uint64_t View.popoverOrigin<A>(presenting:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  _BYTE v13[136];

  sub_20E41AD3C(a3, a5, a6, (uint64_t)v13);
  v11 = type metadata accessor for FlowPopoverOriginViewModifier(0, a3, a5, a6);
  MEMORY[0x212BBBA70](v13, a2, v11, a4);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v13, v11);
}

uint64_t sub_20E41AD3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t FunctionTypeMetadata1;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  char v17;

  swift_getAssociatedTypeWitness();
  FunctionTypeMetadata1 = swift_getFunctionTypeMetadata1();
  *(_QWORD *)(a4 + 24) = sub_20E47585C(FunctionTypeMetadata1, v9, v10, v11);
  *(_QWORD *)(a4 + 32) = v12;
  *(_QWORD *)(a4 + 40) = swift_getKeyPath();
  *(_BYTE *)(a4 + 80) = 0;
  *(_QWORD *)(a4 + 88) = swift_getKeyPath();
  *(_BYTE *)(a4 + 128) = 0;
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = a1;
  v13[3] = a2;
  v13[4] = a3;
  v14 = type metadata accessor for FlowStackSheetAuthority(0, a1, a2, a3);
  MEMORY[0x212BBDF90](&unk_20E4AD410, v14);
  result = sub_20E4A36E0();
  *(_QWORD *)a4 = result;
  *(_QWORD *)(a4 + 8) = v16;
  *(_BYTE *)(a4 + 16) = v17 & 1;
  return result;
}

uint64_t type metadata accessor for FlowPopoverOriginViewModifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FlowPopoverOriginViewModifier);
}

uint64_t sub_20E41AE50(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[2];

  v1 = a1[2];
  v2 = type metadata accessor for FlowPopoverOriginViewModifier(255, a1[1], a1[3], a1[4]);
  v3 = sub_20E4A39D4();
  v5[0] = v1;
  v5[1] = MEMORY[0x212BBDF90](&unk_20E4ABF88, v2);
  return MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v3, v5);
}

uint64_t sub_20E41AECC(uint64_t a1)
{
  uint64_t result;

  sub_20E39CED0();
  swift_release();
  if ((*(_BYTE *)(a1 + 80) & 1) != 0)
    __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  else
    swift_release();
  result = a1 + 88;
  if ((*(_BYTE *)(a1 + 128) & 1) == 0)
    return swift_release();
  if (*(_QWORD *)(a1 + 112))
    return __swift_destroy_boxed_opaque_existential_1(result);
  return result;
}

uint64_t sub_20E41AF4C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  __int128 v9;
  _OWORD *v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  v4 = *a2;
  v5 = a2[1];
  v6 = *((_BYTE *)a2 + 16);
  sub_20E39CFB8();
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  v7 = a2[4];
  *(_QWORD *)(a1 + 24) = a2[3];
  *(_QWORD *)(a1 + 32) = v7;
  v8 = *((_BYTE *)a2 + 80);
  swift_retain();
  if ((v8 & 1) != 0)
  {
    v9 = *((_OWORD *)a2 + 4);
    *(_OWORD *)(a1 + 64) = v9;
    (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 40, (uint64_t)(a2 + 5));
  }
  else
  {
    *(_QWORD *)(a1 + 40) = a2[5];
    swift_retain();
  }
  *(_BYTE *)(a1 + 80) = v8;
  v10 = a2 + 11;
  if ((a2[16] & 1) != 0)
  {
    v11 = (_OWORD *)(a1 + 88);
    v12 = a2[14];
    if (v12)
    {
      v13 = a2[15];
      *(_QWORD *)(a1 + 112) = v12;
      *(_QWORD *)(a1 + 120) = v13;
      (**(void (***)(_OWORD *, _OWORD *))(v12 - 8))(v11, v10);
    }
    else
    {
      v14 = *(_OWORD *)(a2 + 13);
      *v11 = *v10;
      *(_OWORD *)(a1 + 104) = v14;
      *(_QWORD *)(a1 + 120) = a2[15];
    }
    *(_BYTE *)(a1 + 128) = 1;
  }
  else
  {
    *(_QWORD *)(a1 + 88) = *(_QWORD *)v10;
    *(_BYTE *)(a1 + 128) = 0;
    swift_retain();
  }
  return a1;
}

uint64_t sub_20E41B04C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  __int128 *v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;

  v4 = *a2;
  v5 = a2[1];
  v6 = *((_BYTE *)a2 + 16);
  sub_20E39CFB8();
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  sub_20E39CED0();
  *(_QWORD *)(a1 + 24) = a2[3];
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 32) = a2[4];
  if ((uint64_t *)a1 != a2)
  {
    sub_20E39D1F8(a1 + 40, qword_254A1A660);
    v7 = *((_BYTE *)a2 + 80);
    if ((v7 & 1) != 0)
    {
      v8 = a2[8];
      *(_QWORD *)(a1 + 64) = v8;
      *(_QWORD *)(a1 + 72) = a2[9];
      (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 40, (uint64_t)(a2 + 5));
    }
    else
    {
      *(_QWORD *)(a1 + 40) = a2[5];
      swift_retain();
    }
    *(_BYTE *)(a1 + 80) = v7;
    v9 = (__int128 *)(a2 + 11);
    sub_20E39D1F8(a1 + 88, &qword_253ED0A18);
    if ((a2[16] & 1) != 0)
    {
      v10 = a2[14];
      if (v10)
      {
        *(_QWORD *)(a1 + 112) = v10;
        *(_QWORD *)(a1 + 120) = a2[15];
        (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 88, (uint64_t)(a2 + 11));
      }
      else
      {
        v11 = *v9;
        v12 = *(_OWORD *)(a2 + 13);
        *(_QWORD *)(a1 + 120) = a2[15];
        *(_OWORD *)(a1 + 88) = v11;
        *(_OWORD *)(a1 + 104) = v12;
      }
      *(_BYTE *)(a1 + 128) = 1;
    }
    else
    {
      *(_QWORD *)(a1 + 88) = *(_QWORD *)v9;
      *(_BYTE *)(a1 + 128) = 0;
      swift_retain();
    }
  }
  return a1;
}

__n128 __swift_memcpy129_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  result = *(__n128 *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t sub_20E41B1D8(uint64_t a1, uint64_t a2)
{
  char v4;

  v4 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v4;
  sub_20E39CED0();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  if (a1 != a2)
  {
    sub_20E39D1F8(a1 + 40, qword_254A1A660);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 65) = *(_OWORD *)(a2 + 65);
    sub_20E39D1F8(a1 + 88, &qword_253ED0A18);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 113) = *(_OWORD *)(a2 + 113);
  }
  return a1;
}

uint64_t sub_20E41B28C(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 129))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t sub_20E41B2E8(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 128) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 129) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 129) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2;
  }
  return result;
}

uint64_t sub_20E41B360()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E41B39C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v17;
  uint64_t FunctionTypeMetadata1;
  _QWORD v20[2];

  v17 = (_QWORD *)swift_allocObject();
  v17[2] = a4;
  v17[3] = a5;
  v17[4] = a6;
  v17[5] = a7;
  v17[6] = a8;
  v17[7] = a9;
  v17[8] = a10;
  v17[9] = a2;
  v17[10] = a3;
  v20[0] = sub_20E41CDE0;
  v20[1] = v17;
  swift_getAssociatedTypeWitness();
  FunctionTypeMetadata1 = swift_getFunctionTypeMetadata1();
  swift_retain();
  View.dataObject<A>(_:)((uint64_t)v20, a4, FunctionTypeMetadata1);
  return swift_release();
}

uint64_t sub_20E41B49C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X5>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  void (*v9)(double);
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v5 = *(_QWORD *)(a2 - 8);
  v6 = MEMORY[0x24BDAC7A8](a1);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9(v6);
  v10 = sub_20E3C3B10((uint64_t)v8);
  result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, a2);
  *a3 = v10;
  return result;
}

void sub_20E41B534(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[70];

  v6[17] = a1;
  v6[24] = a2;
  MEMORY[0x212BBDF90](&unk_20E4ABF88);
  v2 = sub_20E4A3EA8();
  v6[1] = *(_QWORD *)(v2 - 8);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v6[3] = (char *)v6 - v4;
  v5 = MEMORY[0x212BBDF90](MEMORY[0x24BDEFB78], v2, v3);
  v6[39] = v2;
  v6[40] = MEMORY[0x24BDF1FA8];
  v6[41] = v5;
  v6[42] = MEMORY[0x24BDF1F80];
  type metadata accessor for _RequirementFailureView();
}

void sub_20E41B5EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;

  v9[2] = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v9[5] = (char *)&a9 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v9[4] = (char *)&a9 - v13;
  v14 = sub_20E4A3F20();
  v9[14] = *(_QWORD *)(v14 - 8);
  v9[15] = v14;
  MEMORY[0x24BDAC7A8](v14);
  v9[13] = (char *)&a9 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = v10[2];
  sub_20E4A60E0();
  v17 = sub_20E4A4778();
  v9[11] = *(_QWORD *)(v17 - 8);
  v9[12] = v17;
  MEMORY[0x24BDAC7A8](v17);
  v9[26] = (char *)&a9 - v18;
  v19 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1A6E8);
  v20 = v10[3];
  v21 = v10[4];
  v22 = sub_20E41C908();
  v9[39] = v16;
  v9[40] = v19;
  v9[41] = v19;
  v9[42] = v20;
  v9[7] = v20;
  v9[43] = v21;
  v9[44] = v22;
  v9[45] = v22;
  type metadata accessor for FlowStack();
}

uint64_t sub_20E41B704(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t OpaqueTypeConformance2;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  void (*v56)(uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v69;
  uint64_t v70;
  _BYTE v71[80];

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1A700);
  v10 = sub_20E4A39D4();
  v11 = MEMORY[0x212BBDF90](&unk_20E4AEF28, a1);
  v12 = sub_20E3FD4F8((unint64_t *)&qword_254A1A6F8, &qword_254A1A700);
  *(_QWORD *)(v8 - 104) = v11;
  *(_QWORD *)(v8 - 96) = v12;
  v13 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v10, v8 - 104);
  *(_QWORD *)(v1 + 168) = v4;
  *(_QWORD *)(v1 + 176) = v5;
  *(_QWORD *)(v1 + 312) = v4;
  *(_QWORD *)(v1 + 320) = v6;
  *(_QWORD *)(v1 + 240) = v7;
  *(_QWORD *)(v1 + 248) = v6;
  *(_QWORD *)(v1 + 224) = v10;
  *(_QWORD *)(v1 + 232) = v13;
  *(_QWORD *)(v1 + 328) = v10;
  *(_QWORD *)(v1 + 336) = v5;
  *(_QWORD *)(v1 + 344) = v7;
  *(_QWORD *)(v1 + 352) = v13;
  v14 = MEMORY[0x212BBDF30](0, v1 + 312, MEMORY[0x24BDF3818], 0);
  *(_QWORD *)(v1 + 64) = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  *(_QWORD *)(v1 + 200) = &v71[-v15];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1A708);
  *(_QWORD *)(v1 + 72) = v14;
  v16 = sub_20E4A39D4();
  *(_QWORD *)(v1 + 80) = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v18 = &v71[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v19);
  *(_QWORD *)(v1 + 48) = &v71[-v20];
  *(_QWORD *)(v1 + 144) = v21;
  *(_QWORD *)(v1 + 184) = v3;
  v22 = sub_20E4A3E00();
  *(_QWORD *)(v1 + 152) = *(_QWORD *)(v22 - 8);
  *(_QWORD *)(v1 + 160) = v22;
  MEMORY[0x24BDAC7A8](v22);
  *(_QWORD *)(v1 + 216) = &v71[-v23];
  v24 = *(_QWORD *)(v1 + 128);
  sub_20E45D570(v1 + 312);
  if (!*(_QWORD *)(v1 + 336))
  {
    sub_20E39D1F8(v1 + 312, &qword_253ED0658);
    v58 = *(_QWORD *)(v1 + 24);
    v59 = *(_QWORD *)(v1 + 168);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v1 + 8) + 16))(v58, *(_QWORD *)(v1 + 136), v59);
    _RequirementFailureView.init<>(_:_:)(v58, 0xD00000000000002ALL, 0x800000020E4CBCF0, v59, *(_QWORD *)(v1 + 40));
  }
  sub_20E3B1AB4((__int128 *)(v1 + 312), v8 - 144);
  *(_QWORD *)(v1 + 40) = v18;
  v25 = *(_QWORD *)(v1 + 240);
  v26 = *(_QWORD *)(v1 + 248);
  v27 = *(_QWORD *)(v1 + 56);
  v28 = type metadata accessor for FlowStackSheetAuthority(0, v26, v27, v25);
  *(_QWORD *)(v1 + 32) = v28;
  *(_QWORD *)(v1 + 24) = MEMORY[0x212BBDF90](&unk_20E4AD410, v28);
  v29 = sub_20E4A36F8();
  MEMORY[0x24BDAC7A8](v29);
  *(_QWORD *)&v71[-32] = v26;
  *(_QWORD *)&v71[-24] = v27;
  v69 = v25;
  swift_getKeyPath();
  sub_20E4A3950();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v1 + 312, v24, v2);
  v30 = swift_allocObject();
  v31 = *(_OWORD *)(v1 + 408);
  *(_OWORD *)(v30 + 120) = *(_OWORD *)(v1 + 392);
  *(_OWORD *)(v30 + 136) = v31;
  *(_OWORD *)(v30 + 152) = *(_OWORD *)(v1 + 424);
  v32 = *(_OWORD *)(v1 + 312);
  *(_OWORD *)(v30 + 56) = *(_OWORD *)(v1 + 328);
  v33 = *(_OWORD *)(v1 + 360);
  *(_OWORD *)(v30 + 72) = *(_OWORD *)(v1 + 344);
  *(_OWORD *)(v30 + 88) = v33;
  *(_OWORD *)(v30 + 104) = *(_OWORD *)(v1 + 376);
  *(_QWORD *)(v30 + 16) = v26;
  *(_QWORD *)(v30 + 24) = v27;
  *(_QWORD *)(v30 + 32) = v25;
  *(_BYTE *)(v30 + 168) = *(_BYTE *)(v1 + 440);
  *(_OWORD *)(v30 + 40) = v32;
  *(_QWORD *)(v1 + 56) = swift_checkMetadataState();
  v34 = sub_20E4A467C();
  v35 = *(uint64_t **)(v1 + 104);
  v36 = *(_QWORD *)(v1 + 112);
  *v35 = v34;
  v37 = *(_QWORD *)(v1 + 120);
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v36 + 104))(v35, *MEMORY[0x24BDF02C0], v37);
  v38 = *(_QWORD *)(v1 + 232);
  v69 = v25;
  v70 = v38;
  v39 = *(_QWORD *)(v1 + 208);
  v41 = *(_QWORD *)(v1 + 168);
  v40 = *(_QWORD *)(v1 + 176);
  sub_20E4A4484();
  swift_release();
  (*(void (**)(uint64_t *, uint64_t))(v36 + 8))(v35, v37);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 + 88) + 8))(v39, *(_QWORD *)(v1 + 96));
  swift_getKeyPath();
  v42 = *(_QWORD *)(v8 - 120);
  v43 = *(_QWORD *)(v8 - 112);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v8 - 144), v42);
  v44 = sub_20E4A36EC();
  sub_20E41C7AC(v44, v42, v43, (uint64_t *)(v1 + 272));
  v45 = v41;
  swift_release();
  v46 = *(_QWORD *)(v1 + 248);
  *(_QWORD *)(v1 + 312) = v41;
  *(_QWORD *)(v1 + 320) = v46;
  *(_QWORD *)(v1 + 328) = *(_QWORD *)(v1 + 56);
  *(_QWORD *)(v1 + 336) = v40;
  v47 = *(_QWORD *)(v1 + 232);
  *(_QWORD *)(v1 + 344) = *(_QWORD *)(v1 + 240);
  *(_QWORD *)(v1 + 352) = v47;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v49 = *(_QWORD *)(v1 + 40);
  v50 = *(_QWORD *)(v1 + 72);
  v51 = *(_QWORD *)(v1 + 200);
  sub_20E4A4250();
  swift_release();
  sub_20E39D1F8(v1 + 272, &qword_253ED0658);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 64) + 8))(v51, v50);
  v52 = sub_20E3FD4F8(qword_254A1A710, &qword_254A1A708);
  *(_QWORD *)(v1 + 256) = OpaqueTypeConformance2;
  *(_QWORD *)(v1 + 264) = v52;
  v53 = *(_QWORD *)(v1 + 144);
  v54 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v53, v1 + 256);
  v55 = *(_QWORD **)(v1 + 48);
  sub_20E39D614(v55, v49, v53, v54);
  v56 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 80) + 8);
  v56(v49, v53);
  sub_20E39D618((uint64_t)v55, v53, v49);
  v57 = *(_QWORD *)(v1 + 184);
  MEMORY[0x212BBDF90](&protocol conformance descriptor for _RequirementFailureView<A, B>, v57);
  sub_20E3DC6B0(v49, v53);
  v56(v49, v53);
  v56((uint64_t)v55, v53);
  __swift_destroy_boxed_opaque_existential_1(v8 - 144);
  v60 = *(_QWORD *)(v1 + 248);
  *(_QWORD *)(v1 + 312) = v45;
  *(_QWORD *)(v1 + 320) = v60;
  *(_QWORD *)(v1 + 328) = *(_QWORD *)(v1 + 224);
  *(_QWORD *)(v1 + 336) = v40;
  v61 = *(_QWORD *)(v1 + 232);
  *(_QWORD *)(v1 + 344) = *(_QWORD *)(v1 + 240);
  *(_QWORD *)(v1 + 352) = v61;
  v62 = swift_getOpaqueTypeConformance2();
  v63 = sub_20E3FD4F8(qword_254A1A710, &qword_254A1A708);
  *(_QWORD *)(v8 - 176) = v62;
  *(_QWORD *)(v8 - 168) = v63;
  v64 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v53, v8 - 176);
  v65 = MEMORY[0x212BBDF90](&protocol conformance descriptor for _RequirementFailureView<A, B>, v57);
  *(_QWORD *)(v8 - 192) = v64;
  *(_QWORD *)(v8 - 184) = v65;
  v66 = *(_QWORD *)(v1 + 160);
  MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v66, v8 - 192);
  v67 = *(_QWORD *)(v1 + 216);
  sub_20E39D618(v67, v66, *(_QWORD *)(v1 + 192));
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 152) + 8))(v67, v66);
}

void sub_20E41BE84(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  unint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(__int128 *, uint64_t, uint64_t);
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  char v43;
  _OWORD v44[8];
  char v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  char v54;
  _OWORD v55[5];

  v34 = a5;
  v37 = a1;
  v39 = a6;
  v9 = *(_QWORD *)(a3 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](a1);
  v36 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for FlowStackSheetAuthority(0, v11, v12, v13);
  MEMORY[0x212BBDF90](&unk_20E4AD410, v14);
  sub_20E4A36EC();
  v38 = sub_20E440B60();
  swift_release();
  v15 = a4;
  v16 = a4;
  v17 = v34;
  v18 = type metadata accessor for FlowPopoverOriginViewModifier(0, a3, v16, v34);
  v35 = *(void (**)(__int128 *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
  v35(&v46, a2, v18);
  v19 = v36;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v36, v37, a3);
  v20 = (*(unsigned __int8 *)(v9 + 80) + 169) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v21 = swift_allocObject();
  v22 = v50;
  *(_OWORD *)(v21 + 120) = v51;
  v23 = v53;
  *(_OWORD *)(v21 + 136) = v52;
  *(_OWORD *)(v21 + 152) = v23;
  v24 = v46;
  *(_OWORD *)(v21 + 56) = v47;
  v25 = v49;
  *(_OWORD *)(v21 + 72) = v48;
  *(_OWORD *)(v21 + 88) = v25;
  *(_OWORD *)(v21 + 104) = v22;
  *(_QWORD *)(v21 + 16) = a3;
  *(_QWORD *)(v21 + 24) = v15;
  *(_QWORD *)(v21 + 32) = v17;
  *(_BYTE *)(v21 + 168) = v54;
  *(_OWORD *)(v21 + 40) = v24;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v21 + v20, v19, a3);
  v35(v44, a2, v18);
  v26 = swift_allocObject();
  v27 = v44[4];
  *(_OWORD *)(v26 + 120) = v44[5];
  v28 = v44[7];
  *(_OWORD *)(v26 + 136) = v44[6];
  *(_OWORD *)(v26 + 152) = v28;
  v29 = v44[0];
  *(_OWORD *)(v26 + 56) = v44[1];
  v30 = v44[3];
  *(_OWORD *)(v26 + 72) = v44[2];
  *(_OWORD *)(v26 + 88) = v30;
  *(_OWORD *)(v26 + 104) = v27;
  *(_QWORD *)(v26 + 16) = a3;
  *(_QWORD *)(v26 + 24) = v15;
  *(_QWORD *)(v26 + 32) = v17;
  *(_BYTE *)(v26 + 168) = v45;
  *(_OWORD *)(v26 + 40) = v29;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A6E8);
  v32 = sub_20E41C908();
  sub_20E45A3E0(v38, (uint64_t)sub_20E41CCBC, v21, (uint64_t)sub_20E41CCE4, v26, (uint64_t *)v55);
  v55[3] = v55[0];
  v40 = v55[0];
  v41 = v55[1];
  v42 = v55[2];
  v43 = 0;
  *(_QWORD *)&v46 = a3;
  *((_QWORD *)&v46 + 1) = v31;
  *(_QWORD *)&v47 = v31;
  *((_QWORD *)&v47 + 1) = v15;
  *(_QWORD *)&v48 = v17;
  *((_QWORD *)&v48 + 1) = v32;
  *(_QWORD *)&v49 = v32;
  type metadata accessor for FlowStack();
}

uint64_t sub_20E41C118(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  __int128 v15;
  __int128 v16;

  v3 = MEMORY[0x212BBDF90](&unk_20E4AEF28, a1);
  View.presentedBy(_:)();
  sub_20E41CCF4(v2 - 112);
  swift_release();
  swift_release();
  v4 = *(_QWORD *)(v1 + 200);
  v5 = *(_QWORD *)(v1 + 208);
  v6 = *(_BYTE *)(v1 + 216);
  *(_QWORD *)(v1 + 96) = *(_QWORD *)(v1 + 160);
  v7 = *(_OWORD *)(v1 + 168);
  *(_OWORD *)(v1 + 48) = v7;
  *(_OWORD *)(v1 + 104) = v7;
  v8 = *(_OWORD *)(v1 + 184);
  *(_OWORD *)(v1 + 32) = v8;
  *(_OWORD *)(v1 + 120) = v8;
  *(_QWORD *)(v1 + 136) = v4;
  *(_QWORD *)(v1 + 144) = v5;
  *(_BYTE *)(v1 + 152) = v6;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1A700);
  v9 = sub_20E4A39D4();
  v10 = sub_20E3FD4F8((unint64_t *)&qword_254A1A6F8, &qword_254A1A700);
  *(_QWORD *)(v1 + 80) = v3;
  *(_QWORD *)(v1 + 88) = v10;
  v11 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v9, v1 + 80);
  sub_20E39D614((_QWORD *)(v1 + 296), v1 + 96, v9, v11);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v12 = *(_QWORD *)(v1 + 336);
  v13 = *(_QWORD *)(v1 + 344);
  v14 = *(_BYTE *)(v1 + 352);
  *(_QWORD *)(v1 + 160) = *(_QWORD *)(v1 + 296);
  v15 = *(_OWORD *)(v1 + 304);
  *(_OWORD *)(v1 + 48) = v15;
  *(_OWORD *)(v1 + 168) = v15;
  v16 = *(_OWORD *)(v1 + 320);
  *(_OWORD *)(v1 + 32) = v16;
  *(_OWORD *)(v1 + 184) = v16;
  *(_QWORD *)(v1 + 200) = v12;
  *(_QWORD *)(v1 + 208) = v13;
  *(_BYTE *)(v1 + 216) = v14;
  sub_20E39D618(v1 + 160, v9, *(_QWORD *)(v1 + 72));
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_20E41C2AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t FunctionTypeMetadata1;
  uint64_t v14;
  void (*v15)(__int128 *__return_ptr, char *);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t KeyPath;
  uint64_t result;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  char v43;
  _QWORD v44[3];
  uint64_t v45;
  uint64_t v46;

  v29 = a4;
  v33 = a5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v11 = (char *)&v28 - v10;
  sub_20E45D75C((uint64_t)v44);
  v31 = v45;
  v32 = v46;
  v30 = __swift_project_boxed_opaque_existential_1(v44, v45);
  v12 = *(_QWORD *)(a1 + 24);
  FunctionTypeMetadata1 = swift_getFunctionTypeMetadata1();
  sub_20E475B90(v12, FunctionTypeMetadata1, v14, (uint64_t)&v35);
  v15 = (void (*)(__int128 *__return_ptr, char *))v35;
  sub_20E4A4F4C();
  v15(&v35, v11);
  swift_release();
  v16 = v35;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, AssociatedTypeWitness);
  v17 = v29;
  v18 = type metadata accessor for FlowPopoverOriginViewModifier(0, a2, a3, v29);
  (*(void (**)(__int128 *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(&v35, a1, v18);
  v19 = swift_allocObject();
  v20 = v39;
  *(_OWORD *)(v19 + 120) = v40;
  v21 = v42;
  *(_OWORD *)(v19 + 136) = v41;
  *(_OWORD *)(v19 + 152) = v21;
  v22 = v35;
  *(_OWORD *)(v19 + 56) = v36;
  v23 = v38;
  *(_OWORD *)(v19 + 72) = v37;
  *(_OWORD *)(v19 + 88) = v23;
  *(_OWORD *)(v19 + 104) = v20;
  *(_QWORD *)(v19 + 16) = a2;
  *(_QWORD *)(v19 + 24) = a3;
  *(_QWORD *)(v19 + 32) = v17;
  *(_BYTE *)(v19 + 168) = v43;
  *(_OWORD *)(v19 + 40) = v22;
  v34 = v16;
  *(_QWORD *)&v35 = sub_20E4A4718();
  DWORD2(v35) = 257;
  *(_QWORD *)&v36 = sub_20E41D094;
  *((_QWORD *)&v36 + 1) = v19;
  v24 = sub_20E446C40((uint64_t *)&v35, v31, v32);
  swift_release();
  swift_release();
  KeyPath = swift_getKeyPath();
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
  v27 = v33;
  *v33 = v24;
  v27[1] = KeyPath;
  *((_BYTE *)v27 + 16) = 0;
  return result;
}

uint64_t sub_20E41C548@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t FunctionTypeMetadata1;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t KeyPath;
  uint64_t result;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  char v34;
  _QWORD v35[3];
  uint64_t v36;
  uint64_t v37;

  sub_20E45D75C((uint64_t)v35);
  v12 = v36;
  v25 = v37;
  __swift_project_boxed_opaque_existential_1(v35, v36);
  v13 = *(_QWORD *)(a2 + 24);
  swift_getAssociatedTypeWitness();
  FunctionTypeMetadata1 = swift_getFunctionTypeMetadata1();
  sub_20E475B90(v13, FunctionTypeMetadata1, v15, (uint64_t)&v26);
  ((void (*)(__int128 *__return_ptr, uint64_t))v26)(&v26, a1);
  swift_release();
  v16 = type metadata accessor for FlowPopoverOriginViewModifier(0, a3, a4, a5);
  (*(void (**)(__int128 *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(&v26, a2, v16);
  v17 = swift_allocObject();
  v18 = v30;
  *(_OWORD *)(v17 + 120) = v31;
  v19 = v33;
  *(_OWORD *)(v17 + 136) = v32;
  *(_OWORD *)(v17 + 152) = v19;
  v20 = v26;
  *(_OWORD *)(v17 + 56) = v27;
  v21 = v29;
  *(_OWORD *)(v17 + 72) = v28;
  *(_OWORD *)(v17 + 88) = v21;
  *(_OWORD *)(v17 + 104) = v18;
  *(_QWORD *)(v17 + 16) = a3;
  *(_QWORD *)(v17 + 24) = a4;
  *(_QWORD *)(v17 + 32) = a5;
  *(_BYTE *)(v17 + 168) = v34;
  *(_OWORD *)(v17 + 40) = v20;
  *(_QWORD *)&v26 = sub_20E4A4718();
  DWORD2(v26) = 256;
  *(_QWORD *)&v27 = sub_20E41CD20;
  *((_QWORD *)&v27 + 1) = v17;
  v22 = sub_20E446C40((uint64_t *)&v26, v12, v25);
  swift_release();
  swift_release();
  KeyPath = swift_getKeyPath();
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  *(_QWORD *)a6 = v22;
  *(_QWORD *)(a6 + 8) = KeyPath;
  *(_BYTE *)(a6 + 16) = 0;
  return result;
}

uint64_t sub_20E41C744(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  v4 = type metadata accessor for FlowStackSheetAuthority(0, a2, a3, a4);
  MEMORY[0x212BBDF90](&unk_20E4AD410, v4);
  sub_20E4A36EC();
  sub_20E44067C();
  return swift_release();
}

uint64_t sub_20E41C7AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t *boxed_opaque_existential_1Tm;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25[5];

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = sub_20E4A5060();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = &v21[-v12];
  v22 = a2;
  v23 = a3;
  v24 = a1;
  sub_20E4A500C();
  v14 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3);
  v25[3] = a2;
  v25[4] = a3;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v25);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(boxed_opaque_existential_1Tm, v4, a2);
  v16 = sub_20E46AF64((uint64_t)v13, v14, (uint64_t)v25, AssociatedTypeWitness);
  swift_release();
  v19 = type metadata accessor for DispatcherPerformAction(0, AssociatedTypeWitness, v17, v18);
  a4[3] = v19;
  a4[4] = MEMORY[0x212BBDF90](&unk_20E4AF8E0, v19);
  *a4 = v16;
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v11 + 8))(v13, v10);
}

unint64_t sub_20E41C908()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_254A1A6F0;
  if (!qword_254A1A6F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1A6E8);
    v2 = sub_20E3FD4F8((unint64_t *)&qword_254A1A6F8, &qword_254A1A700);
    v3[0] = MEMORY[0x24BDF4760];
    v3[1] = v2;
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_254A1A6F0);
  }
  return result;
}

uint64_t sub_20E41C98C()
{
  return 24;
}

__n128 sub_20E41C998(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

void sub_20E41C9B0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  sub_20E41BE84(a1, (uint64_t)(v2 + 5), v2[2], v2[3], v2[4], a2);
}

void sub_20E41C9C8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_getAssociatedTypeWitness();
  v2 = sub_20E4A5060();
  MEMORY[0x24BDAC7A8](v2);
  MEMORY[0x24BDAC7A8](v3);
  nullsub_1(a1);
  swift_retain();
  type metadata accessor for PopoverFlowActionImplementation();
}

uint64_t sub_20E41CAAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  void (*v17)(uint64_t, uint64_t);

  MEMORY[0x212BBDF90](&unk_20E4AC0C8, a1);
  sub_20E4A5048();
  swift_release();
  *(_QWORD *)(v7 - 120) = sub_20E407A18(v5, v2);
  *(_QWORD *)(v7 - 112) = v8;
  v11 = type metadata accessor for PopoverFlowBackActionImplementation(0, v2, v9, v10);
  swift_retain();
  MEMORY[0x212BBDF90](&unk_20E4AB080, v11);
  sub_20E4A5048();
  swift_release();
  sub_20E4A6320();
  v12 = v6[9];
  swift_allocObject();
  v13 = sub_20E4A5D44();
  v15 = v14;
  v16 = (void (*)(uint64_t, uint64_t, uint64_t))v6[2];
  v16(v14, v4, v1);
  v16(v15 + v12, v3, v1);
  sub_20E441258(v13);
  sub_20E4A503C();
  swift_bridgeObjectRelease();
  v17 = (void (*)(uint64_t, uint64_t))v6[1];
  v17(v3, v1);
  return ((uint64_t (*)(uint64_t, uint64_t))v17)(v4, v1);
}

void sub_20E41CBF8()
{
  uint64_t v0;

  sub_20E41C9C8(*(_QWORD *)(v0 + 32));
}

uint64_t sub_20E41CC04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  sub_20E39CED0();
  swift_release();
  if ((*(_BYTE *)(v0 + 120) & 1) != 0)
    __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  else
    swift_release();
  if ((*(_BYTE *)(v0 + 168) & 1) != 0)
  {
    if (*(_QWORD *)(v0 + 152))
      __swift_destroy_boxed_opaque_existential_1(v0 + 128);
  }
  else
  {
    swift_release();
  }
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + ((v3 + 169) & ~v3), v1);
  return swift_deallocObject();
}

uint64_t sub_20E41CCBC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;

  return sub_20E41C2AC((uint64_t)(v1 + 5), v1[2], v1[3], v1[4], a1);
}

uint64_t sub_20E41CCE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_20E41C548(a1, (uint64_t)(v2 + 5), v2[2], v2[3], v2[4], a2);
}

uint64_t sub_20E41CCF4(uint64_t a1)
{
  swift_release();
  return a1;
}

uint64_t sub_20E41CD20()
{
  uint64_t *v0;

  return sub_20E41C744((uint64_t)(v0 + 5), v0[2], v0[3], v0[4]);
}

uint64_t objectdestroyTm_1()
{
  uint64_t v0;

  sub_20E39CED0();
  swift_release();
  if ((*(_BYTE *)(v0 + 120) & 1) != 0)
    __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  else
    swift_release();
  if ((*(_BYTE *)(v0 + 168) & 1) != 0)
  {
    if (*(_QWORD *)(v0 + 152))
      __swift_destroy_boxed_opaque_existential_1(v0 + 128);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_20E41CDBC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E41CDE0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_20E41B49C(a1, *(_QWORD *)(v2 + 32), a2);
}

uint64_t sub_20E41CE1C()
{
  return swift_deallocObject();
}

uint64_t sub_20E41CE2C()
{
  uint64_t *v0;

  type metadata accessor for FlowStackSheetAuthority(0, v0[2], v0[3], v0[4]);
  return sub_20E440BFC();
}

void sub_20E41CE64(uint64_t *a1)
{
  uint64_t v1;

  v1 = type metadata accessor for FlowPopoverOriginViewModifier(255, *a1, a1[1], a1[2]);
  MEMORY[0x212BBDF90](&unk_20E4ABF88, v1);
  sub_20E4A3EA8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1A6E8);
  sub_20E41C908();
  type metadata accessor for FlowStack();
}

void sub_20E41CEF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1A700);
  v23 = sub_20E4A39D4();
  v24 = MEMORY[0x212BBDF90](MEMORY[0x24BDEFB78], v21);
  v25 = MEMORY[0x212BBDF90](&unk_20E4AEF28, a1);
  v26 = sub_20E3FD4F8((unint64_t *)&qword_254A1A6F8, &qword_254A1A700);
  a14 = v25;
  a15 = v26;
  v27 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v23, &a14);
  a16 = v21;
  a18 = v23;
  a19 = v24;
  a21 = v27;
  MEMORY[0x212BBDF30](255, &a16, MEMORY[0x24BDF3818], 0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1A708);
  sub_20E4A39D4();
  a16 = v21;
  a17 = MEMORY[0x24BDF1FA8];
  a18 = v24;
  a19 = MEMORY[0x24BDF1F80];
  type metadata accessor for _RequirementFailureView();
}

uint64_t sub_20E41CFE4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v10;
  _QWORD v12[2];
  _QWORD v13[4];
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v10 = sub_20E4A3E00();
  v14 = v3;
  v15 = v2;
  v16 = v4;
  v17 = v5;
  v18 = v1;
  v19 = v6;
  v13[0] = swift_getOpaqueTypeConformance2();
  v13[1] = sub_20E3FD4F8(qword_254A1A710, v8);
  v12[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v7, v13);
  v12[1] = MEMORY[0x212BBDF90](&protocol conformance descriptor for _RequirementFailureView<A, B>, a1);
  return MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v10, v12);
}

void type metadata accessor for PopoverFlowActionImplementation()
{
  JUMPOUT(0x212BBDEE8);
}

uint64_t sub_20E41D0A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[5] = a4;
  v6[6] = a6;
  v6[3] = a2;
  v6[4] = a3;
  v6[2] = a1;
  sub_20E4A5DF8();
  v6[7] = sub_20E4A5DEC();
  sub_20E4A5DBC();
  return swift_task_switch();
}

uint64_t sub_20E41D118()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  uint64_t v15;

  swift_release();
  v1 = sub_20E4A4F58();
  v3 = v2;
  if (sub_20E4A548C() == v1 && v4 == v3)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = sub_20E4A635C();
    swift_bridgeObjectRelease();
    if ((v6 & 1) == 0)
    {
      if (sub_20E4A54BC() == v1 && v7 == v3)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v14 = sub_20E4A635C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v14 & 1) == 0)
          goto LABEL_16;
      }
      if (sub_20E440AB8())
      {
        v15 = *(_QWORD *)(v0 + 24);
        sub_20E440B60();
        sub_20E49850C(v15);
        swift_release();
        goto LABEL_11;
      }
LABEL_16:
      v9 = (unsigned int *)MEMORY[0x24BE5CBE0];
      goto LABEL_12;
    }
  }
  v8 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRelease();
  sub_20E440848(v8);
LABEL_11:
  v9 = (unsigned int *)MEMORY[0x24BE5CBF0];
LABEL_12:
  v10 = *(_QWORD *)(v0 + 16);
  v11 = *v9;
  v12 = sub_20E4A4CB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v10, v11, v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_20E41D280(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t *v3;

  return sub_20E41D294(a1, *v3, a3[2], a3[3], a3[4], a3[5]);
}

uint64_t sub_20E41D294(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v26;
  uint64_t v27;

  v27 = a6;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A190F8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a3 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  v17 = MEMORY[0x24BDAC7A8](v16);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v14 + 16))((char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a3, v17);
  v18 = (*(unsigned __int8 *)(v14 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v19 = (char *)swift_allocObject();
  *((_QWORD *)v19 + 2) = a3;
  *((_QWORD *)v19 + 3) = a4;
  v20 = v27;
  *((_QWORD *)v19 + 4) = a5;
  *((_QWORD *)v19 + 5) = v20;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v19[v18], (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), a3);
  *(_QWORD *)&v19[(v15 + v18 + 7) & 0xFFFFFFFFFFFFFFF8] = a2;
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = &unk_254A1A7A0;
  *(_QWORD *)(v21 + 24) = v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A19610);
  swift_retain();
  v22 = sub_20E4A59A8();
  v23 = sub_20E4A5E58();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v13, 1, 1, v23);
  v24 = (_QWORD *)swift_allocObject();
  v24[2] = 0;
  v24[3] = 0;
  v24[4] = &unk_254A19608;
  v24[5] = v21;
  v24[6] = v22;
  swift_retain();
  sub_20E474E94((uint64_t)v13, (uint64_t)&unk_254A19618, (uint64_t)v24);
  swift_release();
  return v22;
}

uint64_t sub_20E41D474()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E41D4E0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = *(_QWORD *)(v4 - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (uint64_t)v1 + v8;
  v10 = *(_QWORD *)((char *)v1 + ((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFF8));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_20E3B4E08;
  return sub_20E41D0A4(a1, v9, v10, v4, v5, v6);
}

uint64_t sub_20E41D590()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E41D5B4()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t ShelfGridSpacing.init(vertical:horizontal:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  *(_QWORD *)a5 = result;
  *(_BYTE *)(a5 + 8) = a2 & 1;
  *(_QWORD *)(a5 + 16) = a3;
  *(_BYTE *)(a5 + 24) = a4 & 1;
  return result;
}

void ShelfGridSpacing.init(floatLiteral:)(uint64_t a1@<X8>, double a2@<D0>)
{
  *(double *)a1 = a2;
  *(_BYTE *)(a1 + 8) = 0;
  *(double *)(a1 + 16) = a2;
  *(_BYTE *)(a1 + 24) = 0;
}

uint64_t ShelfGridSpacing.vertical.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t ShelfGridSpacing.vertical.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)v2 = result;
  *(_BYTE *)(v2 + 8) = a2 & 1;
  return result;
}

uint64_t (*ShelfGridSpacing.vertical.modify())()
{
  return nullsub_1;
}

uint64_t ShelfGridSpacing.horizontal.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t ShelfGridSpacing.horizontal.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = result;
  *(_BYTE *)(v2 + 24) = a2 & 1;
  return result;
}

uint64_t (*ShelfGridSpacing.horizontal.modify())()
{
  return nullsub_1;
}

uint64_t *sub_20E41D678@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  v2 = *result;
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = v2;
  *(_BYTE *)(a2 + 24) = 0;
  return result;
}

BOOL _s18_JetEngine_SwiftUI16ShelfGridSpacingV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  v2 = *(_BYTE *)(a2 + 8);
  v3 = *(_BYTE *)(a2 + 24);
  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 8))
      return 0;
  }
  else
  {
    if (*(double *)a1 != *(double *)a2)
      v2 = 1;
    if ((v2 & 1) != 0)
      return 0;
  }
  if ((*(_BYTE *)(a1 + 24) & 1) == 0)
  {
    if (*(double *)(a1 + 16) != *(double *)(a2 + 16))
      v3 = 1;
    return (v3 & 1) == 0;
  }
  return (*(_BYTE *)(a2 + 24) & 1) != 0;
}

uint64_t sub_20E41D6EC()
{
  return MEMORY[0x24BEE1440];
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ShelfGridSpacing(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ShelfGridSpacing(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 25) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ShelfGridSpacing()
{
  return &type metadata for ShelfGridSpacing;
}

void sub_20E41D7A8()
{
  void *v0;
  id v1;
  id v2;
  id v3;

  v0 = (void *)objc_opt_self();
  v1 = objc_msgSend(v0, sel_sharedApplication);
  v2 = objc_msgSend(v0, sel_sharedApplication);
  v3 = objc_msgSend(v2, sel__launchTestName);

  objc_msgSend(v1, sel_finishedTest_, v3);
}

uint64_t sub_20E41D848(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

id sub_20E41D874()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for _PageRenderMetricsExtendedLaunchSupport();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for _PageRenderMetricsExtendedLaunchSupport()
{
  return objc_opt_self();
}

id sub_20E41D8C4@<X0>(_QWORD *a1@<X8>)
{
  objc_class *v1;
  id result;

  result = objc_msgSend(objc_allocWithZone(v1), sel_init);
  *a1 = result;
  return result;
}

uint64_t sub_20E41D8FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  void *v9;
  _QWORD aBlock[6];

  v0 = sub_20E4A494C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)aBlock - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_20E4A4970();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20E3C4AD0();
  v8 = (void *)sub_20E4A6014();
  aBlock[4] = sub_20E41D7A8;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_20E41D848;
  aBlock[3] = &block_descriptor_1;
  v9 = _Block_copy(aBlock);
  sub_20E4A4958();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_20E41DAB0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0608);
  sub_20E41DAF8();
  sub_20E4A6128();
  MEMORY[0x212BBD5DC](0, v7, v3, v9);
  _Block_release(v9);

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

unint64_t sub_20E41DAB0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_253ED0600;
  if (!qword_253ED0600)
  {
    v1 = sub_20E4A494C();
    result = MEMORY[0x212BBDF90](MEMORY[0x24BEE5468], v1);
    atomic_store(result, (unint64_t *)&qword_253ED0600);
  }
  return result;
}

unint64_t sub_20E41DAF8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_253ED0610;
  if (!qword_253ED0610)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_253ED0608);
    result = MEMORY[0x212BBDF90](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_253ED0610);
  }
  return result;
}

uint64_t sub_20E41DB44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  char *v7;
  uint64_t v8;

  *a6 = a1;
  a6[1] = a2;
  v7 = (char *)a6 + *(int *)(_s23_SequenceActionProtocolVMa(0, a4, a5, a4) + 36);
  v8 = sub_20E4A4D60();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7, a3, v8);
}

uint64_t _s23_SequenceActionProtocolVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s23_SequenceActionProtocolVMn);
}

uint64_t sub_20E41DBA8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_20E4A4D60();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *sub_20E41DC20(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *a1 = v5;
    a1 = (_QWORD *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v6 = a2[1];
    *a1 = v5;
    a1[1] = v6;
    v7 = *(int *)(a3 + 36);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_20E4A4D60();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_retain();
    v11(v8, v9, v10);
  }
  return a1;
}

uint64_t sub_20E41DCBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release();
  v4 = a1 + *(int *)(a2 + 36);
  v5 = sub_20E4A4D60();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_20E41DD04(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 36);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_20E4A4D60();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_retain();
  v9(v6, v7, v8);
  return a1;
}

_QWORD *sub_20E41DD74(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_release();
  v7 = *(int *)(a3 + 36);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_20E4A4D60();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

_OWORD *sub_20E41DDE8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 36);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_20E4A4D60();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_OWORD *sub_20E41DE44(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_release();
  v6 = *(int *)(a3 + 36);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_20E4A4D60();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_20E41DEB0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_20E41DEBC(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_20E4A4D60();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 36)], a2, v8);
  }
}

uint64_t sub_20E41DF38()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_20E41DF44(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_20E4A4D60();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 36)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_20E41DFB8(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 24);
}

uint64_t sub_20E41DFC0()
{
  return sub_20E4A4D54();
}

uint64_t sub_20E41DFE4()
{
  uint64_t (**v0)(void);

  return (*v0)();
}

uint64_t MediaArtwork.ProtocolRequest<>.url.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A080);
  return sub_20E4A4D18();
}

uint64_t MediaArtwork.ProtocolRequestPriorityCoordinator.currentPriority.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t v6;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = v3 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v3 + 16);
  v5 = (os_unfair_lock_s *)(v3 + ((*(unsigned int *)(*(_QWORD *)v3 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v5);
  v6 = sub_20E4A5E58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, v4, v6);
  os_unfair_lock_unlock(v5);
  return swift_release();
}

uint64_t sub_20E41E0D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, char *a4@<X3>, uint64_t a5@<X4>, char *a6@<X8>, double a7@<D0>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t result;
  char *v28;
  uint64_t v29;

  v28 = a4;
  v29 = a2;
  v14 = sub_20E4A5E58();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)a6 = a1;
  v20 = (int *)type metadata accessor for MediaArtwork.ProtocolRequest(0, a5, v18, v19);
  v21 = *(_QWORD *)(a5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(&a6[v20[7]], a2, a5);
  *(double *)&a6[v20[8]] = a7;
  a6[v20[9]] = a3;
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v22(v17, (uint64_t)a4, v14);
  type metadata accessor for MediaArtwork.ProtocolRequestPriorityCoordinator();
  v23 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A8A8);
  v24 = swift_allocObject();
  *(_DWORD *)(v24 + ((*(unsigned int *)(*(_QWORD *)v24 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  v22((char *)(v24 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v24 + 16)), (uint64_t)v17, v14);
  *(_QWORD *)(v23 + 16) = v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A088);
  swift_allocObject();
  v25 = sub_20E4A5B34();
  v26 = *(void (**)(char *, uint64_t))(v15 + 8);
  v26(v17, v14);
  *(_QWORD *)(v23 + 24) = v25;
  v26(v28, v14);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 8))(v29, a5);
  *(_QWORD *)&a6[v20[10]] = v23;
  return result;
}

uint64_t MediaArtwork.ProtocolRequest.subscript.getter@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t *v3;

  return sub_20E409814(*v3, a1, a2, a3);
}

uint64_t MediaArtwork.ProtocolRequest.matchResult.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 28));
}

double MediaArtwork.ProtocolRequest.size.getter()
{
  uint64_t *v0;
  double v2;

  sub_20E409814(*v0, (uint64_t)&type metadata for _MediaArtworkSizeKey, (uint64_t)&off_253ED1230, (uint64_t)&v2);
  return v2;
}

double MediaArtwork.ProtocolRequest.scale.getter(uint64_t a1)
{
  uint64_t v1;

  return *(double *)(v1 + *(int *)(a1 + 32));
}

uint64_t MediaArtwork.ProtocolRequest.isOnScreen.getter(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 36));
}

uint64_t MediaArtwork.ProtocolRequest.cachedImagesKey.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_20E409814(*v1, (uint64_t)&type metadata for _MediaArtworkCachedImagesKey, (uint64_t)&off_253ED1510, a1);
}

uint64_t MediaArtwork.ProtocolRequest.priorityCoordinator.getter()
{
  return swift_retain();
}

uint64_t MediaArtwork.ProtocolRequestPriorityCoordinator.onPriorityChange.getter()
{
  return swift_retain();
}

uint64_t sub_20E41E34C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_20E4A5E58();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
}

uint64_t MediaArtwork.ProtocolRequestPriorityCoordinator.increasePriority(to:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  os_unfair_lock_s *v10;
  void (*v11)(char *, uint64_t, uint64_t);
  char v12;
  void (*v13)(char *, uint64_t);
  uint64_t v14;
  char *v15;
  os_unfair_lock_s *v16;
  _QWORD v18[2];

  v3 = sub_20E4A5E58();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + 16);
  v8 = (_QWORD *)MEMORY[0x24BEE27A8];
  v9 = v7 + *(_QWORD *)(*MEMORY[0x24BEE27A8] + *(_QWORD *)v7 + 16);
  v10 = (os_unfair_lock_s *)(v7 + ((*(unsigned int *)(*(_QWORD *)v7 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v10);
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v11(v6, v9, v3);
  os_unfair_lock_unlock(v10);
  swift_release();
  v12 = sub_20E4A5E1C();
  v13 = *(void (**)(char *, uint64_t))(v4 + 8);
  v13(v6, v3);
  if ((v12 & 1) != 0)
  {
    v18[1] = v18;
    v14 = *(_QWORD *)(v1 + 16);
    v15 = (char *)(v14 + *(_QWORD *)(*v8 + *(_QWORD *)v14 + 16));
    v16 = (os_unfair_lock_s *)(v14 + ((*(unsigned int *)(*(_QWORD *)v14 + 48) + 3) & 0x1FFFFFFFCLL));
    swift_retain();
    os_unfair_lock_lock(v16);
    v13(v15, v3);
    v11(v15, a1, v3);
    os_unfair_lock_unlock(v16);
    swift_release();
    sub_20E4A5B28();
  }
  return v12 & 1;
}

unint64_t MediaArtwork.ProtocolRequestPriorityCoordinator.debugDescription.getter()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[2];

  v1 = (os_unfair_lock_s *)(*(_QWORD *)(v0 + 16)
                          + ((*(unsigned int *)(**(_QWORD **)(v0 + 16) + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  v2 = 0;
  v3 = 0;
  if (os_unfair_lock_trylock(v1))
  {
    sub_20E41E5E4(v5);
    os_unfair_lock_unlock(v1);
    v3 = v5[0];
    v2 = v5[1];
  }
  swift_release();
  if (v2)
    return v3;
  else
    return 0xD000000000000024;
}

uint64_t sub_20E41E5E4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;

  sub_20E4A61A0();
  sub_20E4A5C6C();
  sub_20E4A5E58();
  sub_20E41EF28();
  sub_20E4A6314();
  sub_20E4A5C6C();
  swift_bridgeObjectRelease();
  result = sub_20E4A5C6C();
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  return result;
}

uint64_t MediaArtwork.ProtocolRequestPriorityCoordinator.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return v0;
}

uint64_t MediaArtwork.ProtocolRequestPriorityCoordinator.__deallocating_deinit()
{
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

unint64_t sub_20E41E6FC()
{
  return MediaArtwork.ProtocolRequestPriorityCoordinator.debugDescription.getter();
}

uint64_t MediaArtwork.ProtocolRequest<>.urlMatchResult.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254A1A080) + 28);
  v4 = sub_20E4A4D3C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_20E41E768()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_20E41E808(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  unint64_t v15;
  unint64_t v16;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(_DWORD *)(v5 + 80) & 0x100000;
  v9 = *a2;
  *a1 = *a2;
  if (v6 > 7 || v8 != 0 || ((v7 + ((v6 + 8) & ~v6) + 23) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
  }
  else
  {
    v12 = ((unint64_t)a1 + v6 + 8) & ~v6;
    v13 = ((unint64_t)a2 + v6 + 8) & ~v6;
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    v14(v12, v13, v4);
    v15 = (v12 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
    v16 = (v13 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)v15 = *(_QWORD *)v16;
    *(_BYTE *)(v15 + 8) = *(_BYTE *)(v16 + 8);
    *(_QWORD *)((v12 + v7 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v13 + v7 + 23) & 0xFFFFFFFFFFFFF8);
  }
  swift_retain();
  return a1;
}

uint64_t sub_20E41E910(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((a1
                                                                                            + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80)
                                                                                            + 8) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
  return swift_release();
}

_QWORD *sub_20E41E978(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;

  *a1 = *a2;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = ((unint64_t)a1 + v6 + 8) & ~v6;
  v8 = ((unint64_t)a2 + v6 + 8) & ~v6;
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  swift_bridgeObjectRetain();
  v9(v7, v8, v4);
  v10 = *(_QWORD *)(v5 + 64);
  v11 = v7 + v10;
  v12 = v8 + v10;
  v13 = (v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  v14 = (v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  *(_QWORD *)((v11 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v12 + 23) & 0xFFFFFFFFFFFFF8);
  swift_retain();
  return a1;
}

_QWORD *sub_20E41EA30(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = ((unint64_t)a1 + v7 + 8) & ~v7;
  v9 = ((unint64_t)a2 + v7 + 8) & ~v7;
  (*(void (**)(uint64_t, uint64_t))(v6 + 24))(v8, v9);
  v10 = *(_QWORD *)(v6 + 64);
  v11 = v8 + v10;
  v12 = v9 + v10;
  v13 = (v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  v14 = (v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  *(_QWORD *)((v11 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((v12 + 23) & 0xFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *sub_20E41EAFC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = ((unint64_t)a1 + v5 + 8) & ~v5;
  v7 = ((unint64_t)a2 + v5 + 8) & ~v5;
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v6, v7);
  v8 = *(_QWORD *)(v4 + 64);
  v9 = v6 + v8;
  v10 = v7 + v8;
  v11 = (v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  v12 = (v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  *(_QWORD *)((v9 + 23) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v10 + 23) & 0xFFFFFFFFFFFFF8);
  return a1;
}

_QWORD *sub_20E41EBA0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = ((unint64_t)a1 + v7 + 8) & ~v7;
  v9 = ((unint64_t)a2 + v7 + 8) & ~v7;
  (*(void (**)(uint64_t, uint64_t))(v6 + 40))(v8, v9);
  v10 = *(_QWORD *)(v6 + 64);
  v11 = v8 + v10;
  v12 = v9 + v10;
  v13 = (v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  v14 = (v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  *(_QWORD *)((v11 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((v12 + 23) & 0xFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_20E41EC5C(uint64_t *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  if (v6 >= a2)
  {
    if ((v5 & 0x80000000) != 0)
    {
      return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v7 + 8) & ~v7);
    }
    else
    {
      v12 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
  }
  else
  {
    if (((((*(_QWORD *)(v4 + 64) + ((v7 + 8) & ~v7) + 23) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_20E41ECE8 + 4 * byte_20E4AC290[v10]))();
  }
}

void sub_20E41ED68(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = *(unsigned __int8 *)(v5 + 80);
  if (v6 >= a3)
  {
    v10 = 0;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((*(_DWORD *)(v5 + 64) + (((_DWORD)v7 + 8) & ~(_DWORD)v7) + 23) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v8 = a3 - v6 + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X13 }
  }
  if (((*(_DWORD *)(v5 + 64) + (((_DWORD)v7 + 8) & ~(_DWORD)v7) + 23) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    v11 = ~v6 + a2;
    bzero(a1, ((*(_QWORD *)(v5 + 64) + ((v7 + 8) & ~v7) + 23) & 0xFFFFFFFFFFFFFFF8) + 8);
    *a1 = v11;
  }
  __asm { BR              X10 }
}

void sub_20E41EE70()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x20E41EED8);
}

void sub_20E41EE78(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x20E41EE80);
  JUMPOUT(0x20E41EED8);
}

void sub_20E41EE90()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x20E41EED8);
}

void sub_20E41EE98()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x20E41EED8);
}

void sub_20E41EEA0(uint64_t a1, int a2, int a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_WORD *)(v3 + v4) = 0;
  if (a2)
  {
    if ((a3 & 0x80000000) == 0)
    {
      if ((a2 & 0x80000000) == 0)
        JUMPOUT(0x20E41EED4);
      JUMPOUT(0x20E41EED0);
    }
    JUMPOUT(0x20E41EEACLL);
  }
  JUMPOUT(0x20E41EED8);
}

uint64_t type metadata accessor for MediaArtwork.ProtocolRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MediaArtwork.ProtocolRequest);
}

uint64_t type metadata accessor for MediaArtwork.ProtocolRequestPriorityCoordinator()
{
  return objc_opt_self();
}

uint64_t method lookup function for MediaArtwork.ProtocolRequestPriorityCoordinator()
{
  return swift_lookUpClassMethod();
}

unint64_t sub_20E41EF28()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254A1A8B0;
  if (!qword_254A1A8B0)
  {
    v1 = sub_20E4A5E58();
    result = MEMORY[0x212BBDF90](MEMORY[0x24BEE69A0], v1);
    atomic_store(result, (unint64_t *)&qword_254A1A8B0);
  }
  return result;
}

uint64_t sub_20E41EF70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  sub_20E4A4004();
  v2 = sub_20E4A39D4();
  v4[0] = v1;
  v4[1] = sub_20E41EFCC();
  return MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v2, v4);
}

unint64_t sub_20E41EFCC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_253ED27F8[0];
  if (!qword_253ED27F8[0])
  {
    v1 = sub_20E4A4004();
    result = MEMORY[0x212BBDF90](MEMORY[0x24BDF1078], v1);
    atomic_store(result, qword_253ED27F8);
  }
  return result;
}

uint64_t sub_20E41F014()
{
  uint64_t result;

  result = sub_20E4A5C18();
  qword_254A1A8B8 = result;
  return result;
}

id static NWPathNetworkInquiry.didChangeNotification.getter()
{
  if (qword_254A180F8 != -1)
    swift_once();
  return (id)qword_254A1A8B8;
}

uint64_t sub_20E41F088(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  void *v13;
  _QWORD aBlock[6];

  v4 = sub_20E4A494C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_20E4A4970();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20E3C4AD0();
  v12 = (void *)sub_20E4A6014();
  aBlock[4] = sub_20E42021C;
  aBlock[5] = a3;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_20E41D848;
  aBlock[3] = &block_descriptor_2;
  v13 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_20E4A4958();
  aBlock[0] = MEMORY[0x24BEE4AF8];
  sub_20E41DAB0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0608);
  sub_20E41DAF8();
  sub_20E4A6128();
  MEMORY[0x212BBD5DC](0, v11, v7, v13);
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_20E41F23C()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_20E41F290();
    return swift_release();
  }
  return result;
}

void sub_20E41F290()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  unint64_t v4;
  uint64_t *boxed_opaque_existential_1Tm;
  id v6;
  unint64_t v7;
  id v8;
  uint64_t v9[3];
  uint64_t v10;
  _QWORD v11[4];

  v1 = v0;
  sub_20E4A5A38();
  __swift_project_boxed_opaque_existential_1(v11, v11[3]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0D58);
  sub_20E4A4ACC();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_20E4AC380;
  sub_20E4A4AC0();
  sub_20E4A4A30();
  sub_20E4A4A30();
  v2 = *(void **)(v0 + 16);
  v3 = objc_msgSend(v2, sel_path);
  v4 = (unint64_t)objc_msgSend(v3, sel_status);

  v10 = MEMORY[0x24BEE1328];
  LOBYTE(v9[0]) = (v4 & 0xFFFFFFFFFFFFFFFDLL) == 1;
  sub_20E4A4AA8();
  sub_20E402348((uint64_t)v9);
  sub_20E4A4A30();
  v10 = sub_20E4A50C0();
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v9);
  NWPathNetworkInquiry.interface.getter((uint64_t)boxed_opaque_existential_1Tm);
  sub_20E4A4AA8();
  sub_20E402348((uint64_t)v9);
  sub_20E4A5750();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  v6 = objc_msgSend(v2, sel_path);
  v7 = (unint64_t)objc_msgSend(v6, sel_status);

  swift_getKeyPath();
  swift_getKeyPath();
  sub_20E4A35CC();
  swift_release();
  swift_release();
  if (((v7 & 0xFFFFFFFFFFFFFFFDLL) != 1) != LOBYTE(v11[0]))
  {
    swift_getKeyPath();
    swift_getKeyPath();
    LOBYTE(v11[0]) = (v7 & 0xFFFFFFFFFFFFFFFDLL) != 1;
    swift_retain();
    sub_20E4A35D8();
  }
  v8 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  if (qword_254A180F8 != -1)
    swift_once();
  objc_msgSend(v8, sel_postNotificationName_object_, qword_254A1A8B8, v1);

}

BOOL NWPathNetworkInquiry.isLikelyReachable.getter()
{
  uint64_t v0;
  id v1;
  unint64_t v2;

  v1 = objc_msgSend(*(id *)(v0 + 16), sel_path);
  v2 = (unint64_t)objc_msgSend(v1, sel_status);

  return (v2 & 0xFFFFFFFFFFFFFFFDLL) == 1;
}

id NWPathNetworkInquiry.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  id result;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  void *v10;
  id v11;
  unint64_t v12;
  _BYTE v13[16];
  void *v14;
  char v15;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A8C0);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  result = objc_msgSend((id)objc_opt_self(), sel_sharedDefaultEvaluator);
  if (result)
  {
    v5 = result;
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 24) = 0;
    v7 = v6 + OBJC_IVAR____TtC18_JetEngine_SwiftUI20NWPathNetworkInquiry__isInternetOffline;
    v15 = 0;
    sub_20E4A359C();
    (*(void (**)(uint64_t, _BYTE *, uint64_t))(v1 + 32))(v7, v3, v0);
    *(_QWORD *)(v6 + 16) = v5;
    v14 = v5;
    swift_getKeyPath();
    swift_allocObject();
    swift_weakInit();
    v8 = v5;
    v9 = sub_20E4A32F0();
    swift_release();
    swift_release();
    v10 = *(void **)(v6 + 24);
    *(_QWORD *)(v6 + 24) = v9;

    v11 = objc_msgSend(*(id *)(v6 + 16), sel_path);
    v12 = (unint64_t)objc_msgSend(v11, sel_status);

    swift_getKeyPath();
    swift_getKeyPath();
    v13[15] = (v12 & 0xFFFFFFFFFFFFFFFDLL) != 1;
    swift_retain();
    sub_20E4A35D8();

    return (id)v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t NWPathNetworkInquiry.deinit()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;

  v1 = v0;
  v2 = *(void **)(v0 + 24);
  if (v2)
  {
    v3 = v2;
    sub_20E4A32C0();

  }
  v4 = v1 + OBJC_IVAR____TtC18_JetEngine_SwiftUI20NWPathNetworkInquiry__isInternetOffline;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A8C0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return v1;
}

uint64_t NWPathNetworkInquiry.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;

  v1 = v0;
  v2 = *(void **)(v0 + 24);
  if (v2)
  {
    v3 = v2;
    sub_20E4A32C0();

  }
  v4 = v1 + OBJC_IVAR____TtC18_JetEngine_SwiftUI20NWPathNetworkInquiry__isInternetOffline;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A8C0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_deallocClassInstance();
}

uint64_t NWPathNetworkInquiry.isInternetOffline.getter()
{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_20E4A35CC();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_20E41F970@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_20E4A35CC();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_20E41F9EC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_20E4A35D8();
}

uint64_t NWPathNetworkInquiry.$isInternetOffline.getter()
{
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A8C0);
  sub_20E4A35A8();
  return swift_endAccess();
}

uint64_t sub_20E41FABC()
{
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A8C0);
  sub_20E4A35A8();
  return swift_endAccess();
}

uint64_t sub_20E41FB20(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  void (*v10)(char *, uint64_t, uint64_t, double);
  uint64_t v12;

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_254A1A8E8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v12 - v8;
  v10 = *(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16);
  v10((char *)&v12 - v8, a1, v2, v7);
  ((void (*)(char *, char *, uint64_t))v10)(v5, v9, v2);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254A1A8C0);
  sub_20E4A35B4();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v9, v2);
}

uint64_t NWPathNetworkInquiry.interface.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  char *v10;
  unsigned int *v11;
  uint64_t v13;

  v3 = sub_20E4A50C0();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(*(id *)(v1 + 16), sel_path, v5);
  v9 = objc_msgSend(v8, sel_interface);

  if (!v9)
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(a1, *MEMORY[0x24BE5D1F0], v3);
  v10 = (char *)objc_msgSend(v9, sel_type);

  if ((unint64_t)(v10 - 1) > 3)
    v11 = (unsigned int *)MEMORY[0x24BE5D1F8];
  else
    v11 = (unsigned int *)qword_24C948FB0[(_QWORD)(v10 - 1)];
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v7, *v11, v3);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(a1, v7, v3);
}

id NWPathNetworkInquiry.isExpensive.getter()
{
  return sub_20E41FD80((SEL *)&selRef_isExpensive);
}

id NWPathNetworkInquiry.isConstrained.getter()
{
  return sub_20E41FD80((SEL *)&selRef_isConstrained);
}

id sub_20E41FD80(SEL *a1)
{
  uint64_t v1;
  id v3;
  id v4;

  v3 = objc_msgSend(*(id *)(v1 + 16), sel_path);
  v4 = objc_msgSend(v3, *a1);

  return v4;
}

uint64_t NWPathNetworkInquiry.observe(on:_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t result;
  uint64_t v10;
  char v11[40];
  _QWORD *v12;
  uint64_t v13;

  v5 = *v2;
  v6 = sub_20E4A5588();
  if (qword_254A180F8 != -1)
    swift_once();
  v7 = (void *)qword_254A1A8B8;
  v13 = v5;
  v12 = v2;
  sub_20E3C39FC(a1, (uint64_t)v11);
  v8 = v7;
  swift_retain();
  swift_retain();
  result = sub_20E4A557C();
  v10 = MEMORY[0x24BE5DA10];
  a2[3] = v6;
  a2[4] = v10;
  *a2 = result;
  return result;
}

BOOL sub_20E41FEB0()
{
  uint64_t v0;
  id v1;
  unint64_t v2;

  v1 = objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_path);
  v2 = (unint64_t)objc_msgSend(v1, sel_status);

  return (v2 & 0xFFFFFFFFFFFFFFFDLL) == 1;
}

uint64_t sub_20E41FF08@<X0>(uint64_t a1@<X8>)
{
  return NWPathNetworkInquiry.interface.getter(a1);
}

id sub_20E41FF28(uint64_t a1, uint64_t a2)
{
  return sub_20E41FF40(a1, a2, (SEL *)&selRef_isExpensive);
}

id sub_20E41FF34(uint64_t a1, uint64_t a2)
{
  return sub_20E41FF40(a1, a2, (SEL *)&selRef_isConstrained);
}

id sub_20E41FF40(uint64_t a1, uint64_t a2, SEL *a3)
{
  uint64_t v3;
  id v5;
  id v6;

  v5 = objc_msgSend(*(id *)(*(_QWORD *)v3 + 16), sel_path);
  v6 = objc_msgSend(v5, *a3);

  return v6;
}

uint64_t sub_20E41FF90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t result;
  uint64_t v12;
  char v13[40];
  uint64_t v14;
  uint64_t v15;

  v7 = *v3;
  v8 = sub_20E4A5588();
  if (qword_254A180F8 != -1)
    swift_once();
  v9 = (void *)qword_254A1A8B8;
  v15 = a2;
  v14 = v7;
  sub_20E3C39FC(a1, (uint64_t)v13);
  v10 = v9;
  swift_retain();
  swift_retain();
  result = sub_20E4A557C();
  v12 = MEMORY[0x24BE5DA10];
  a3[3] = v8;
  a3[4] = v12;
  *a3 = result;
  return result;
}

char *keypath_get_selector_path()
{
  return sel_path;
}

id sub_20E420080@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_path);
  *a2 = result;
  return result;
}

uint64_t sub_20E4200B8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_20E4200DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_20E41F088(a1, a2, v2);
}

uint64_t sub_20E4200F4()
{
  return type metadata accessor for NWPathNetworkInquiry();
}

uint64_t type metadata accessor for NWPathNetworkInquiry()
{
  uint64_t result;

  result = qword_254A1A8D0;
  if (!qword_254A1A8D0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_20E420138()
{
  unint64_t v0;

  sub_20E4201C8();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for NWPathNetworkInquiry()
{
  return swift_lookUpClassMethod();
}

void sub_20E4201C8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254A1A8E0)
  {
    v0 = sub_20E4A35E4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254A1A8E0);
  }
}

uint64_t sub_20E42021C()
{
  return sub_20E41F23C();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

void sub_20E42023C()
{
  unint64_t v0;
  unint64_t v1;

  swift_getAssociatedTypeWitness();
  sub_20E4A4778();
  if (v0 <= 0x3F)
  {
    sub_20E4217F0();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *sub_20E420308(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  unint64_t v25;
  unint64_t v26;
  void (*v27)(unint64_t, unint64_t, uint64_t);
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  _QWORD *v41;
  _QWORD *v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = v6 | 7;
  v8 = ((v6 + 16) & ~(unint64_t)v6) + *(_QWORD *)(v5 + 64) + 7;
  v9 = sub_20E4A5384();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_DWORD *)(v10 + 80);
  v12 = v11 & 0xF8 | 7;
  v13 = (v11 & 0xF8) + 48;
  v14 = 8;
  if (*(_QWORD *)(v10 + 64) > 8uLL)
    v14 = *(_QWORD *)(v10 + 64);
  v15 = (v11 | v6) & 0x100000;
  if ((v12 | v6) != 7
    || v15 != 0
    || v14
     + ((v13
       + ((((((v8 + ((v6 + 16) & ~(v6 | 7))) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
         + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v12)
     + 1 > 0x18)
  {
    v18 = *a2;
    *a1 = *a2;
    v19 = (uint64_t *)(v18 + (((v12 | v6) + 16) & ~(v12 | v6)));
LABEL_26:
    swift_retain();
    return v19;
  }
  v46 = *(_QWORD *)(v9 - 8);
  v47 = ~v12;
  v48 = v14;
  v20 = a2[1];
  *a1 = *a2;
  a1[1] = v20;
  v49 = a1;
  v21 = (_QWORD *)(((unint64_t)a1 + v7 + 16) & ~v7);
  v22 = (_QWORD *)(((unint64_t)a2 + v7 + 16) & ~v7);
  *v21 = *v22;
  v23 = (_QWORD *)(((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8);
  v24 = (_QWORD *)(((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v23 = *v24;
  v25 = ((unint64_t)v23 + v6 + 8) & ~(unint64_t)v6;
  v26 = ((unint64_t)v24 + v6 + 8) & ~(unint64_t)v6;
  v27 = *(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  v27(v25, v26, AssociatedTypeWitness);
  v28 = (_QWORD *)(((unint64_t)v21 + v8) & 0xFFFFFFFFFFFFFFF8);
  v29 = (_QWORD *)((v8 + (((unint64_t)a2 + v7 + 16) & ~v7)) & 0xFFFFFFFFFFFFFFF8);
  v30 = v29[1];
  *v28 = *v29;
  v28[1] = v30;
  v31 = (_QWORD *)(((unint64_t)v28 + 23) & 0xFFFFFFFFFFFFFFF8);
  v32 = (_QWORD *)(((unint64_t)v29 + 23) & 0xFFFFFFFFFFFFFFF8);
  v33 = v32[1];
  *v31 = *v32;
  v31[1] = v33;
  v34 = ((unint64_t)v31 + 23) & 0xFFFFFFFFFFFFFFF8;
  v35 = ((unint64_t)v32 + 23) & 0xFFFFFFFFFFFFFFF8;
  v36 = *(_BYTE *)(v35 + 40);
  swift_retain();
  swift_retain();
  if ((v36 & 1) != 0)
  {
    v37 = *(_QWORD *)(v35 + 24);
    if (v37)
    {
      *(_QWORD *)(v34 + 24) = v37;
      *(_QWORD *)(v34 + 32) = *(_QWORD *)(v35 + 32);
      (**(void (***)(unint64_t, unint64_t))(v37 - 8))(v34, v35);
    }
    else
    {
      v39 = *(_OWORD *)v35;
      v40 = *(_OWORD *)(v35 + 16);
      *(_QWORD *)(v34 + 32) = *(_QWORD *)(v35 + 32);
      *(_OWORD *)v34 = v39;
      *(_OWORD *)(v34 + 16) = v40;
    }
    v38 = v48;
    v19 = v49;
    *(_BYTE *)(v34 + 40) = 1;
  }
  else
  {
    *(_QWORD *)v34 = *(_QWORD *)v35;
    *(_BYTE *)(v34 + 40) = 0;
    swift_retain();
    v38 = v48;
    v19 = v49;
  }
  v41 = (_QWORD *)((v13 + v34) & v47);
  v42 = (_QWORD *)((v13 + v35) & v47);
  v43 = *((unsigned __int8 *)v42 + v38);
  if (v43 >= 2)
  {
    if (v38 <= 3)
      v44 = v38;
    else
      v44 = 4;
    __asm { BR              X12 }
  }
  if (v43 != 1)
  {
    *v41 = *v42;
    *((_BYTE *)v41 + v38) = 0;
    goto LABEL_26;
  }
  (*(void (**)(_QWORD *))(v46 + 16))(v41);
  *((_BYTE *)v41 + v38) = 1;
  return v19;
}

uint64_t sub_20E420628(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unsigned int v12;
  uint64_t v13;

  swift_release();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (a1 + (v4 | 7) + 16) & ~(v4 | 7);
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))((v4 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v4, AssociatedTypeWitness);
  v6 = (((v4 + 16) & ~v4) + *(_QWORD *)(v3 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  swift_release();
  v7 = (((v6 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  if ((*(_BYTE *)(v7 + 40) & 1) != 0)
  {
    if (*(_QWORD *)(v7 + 24))
      __swift_destroy_boxed_opaque_existential_1(v7);
  }
  else
  {
    swift_release();
  }
  v8 = *(_QWORD *)(sub_20E4A5384() - 8);
  v9 = *(_DWORD *)(v8 + 80) & 0xF8 | 7;
  v10 = (v7 + v9 + 41) & ~v9;
  v11 = *(_QWORD *)(v8 + 64);
  if (v11 <= 8)
    v11 = 8;
  v12 = *(unsigned __int8 *)(v10 + v11);
  if (v12 >= 2)
  {
    if (v11 <= 3)
      v13 = v11;
    else
      v13 = 4;
    __asm { BR              X14 }
  }
  if (v12 == 1)
    return (*(uint64_t (**)(void))(v8 + 8))();
  else
    return swift_release();
}

_QWORD *sub_20E4207F8(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  unsigned int v32;
  uint64_t v33;
  char v34;
  _QWORD *v36;
  _QWORD *v37;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v7 | 7) + 16;
  v36 = (_QWORD *)(((unint64_t)a2 + v8) & ~(v7 | 7));
  v37 = a1;
  v9 = (_QWORD *)(((unint64_t)a1 + v8) & ~(v7 | 7));
  *v9 = *v36;
  v10 = (_QWORD *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8);
  v11 = (_QWORD *)(((unint64_t)v36 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v10 = *v11;
  v12 = ((unint64_t)v10 + v7 + 8) & ~v7;
  v13 = ((unint64_t)v11 + v7 + 8) & ~v7;
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  v14(v12, v13, AssociatedTypeWitness);
  v15 = *(_QWORD *)(v6 + 64) + ((v7 + 16) & ~v7) + 7;
  v16 = (_QWORD *)(((unint64_t)v9 + v15) & 0xFFFFFFFFFFFFFFF8);
  v17 = (_QWORD *)(((unint64_t)v36 + v15) & 0xFFFFFFFFFFFFFFF8);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  v19 = (_QWORD *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8);
  v20 = (_QWORD *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  v22 = ((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8;
  v23 = ((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v14) = *(_BYTE *)(v23 + 40);
  swift_retain();
  swift_retain();
  if ((v14 & 1) != 0)
  {
    v24 = *(_QWORD *)(v23 + 24);
    if (v24)
    {
      *(_QWORD *)(v22 + 24) = v24;
      *(_QWORD *)(v22 + 32) = *(_QWORD *)(v23 + 32);
      (**(void (***)(unint64_t, unint64_t))(v24 - 8))(v22, v23);
    }
    else
    {
      v25 = *(_OWORD *)v23;
      v26 = *(_OWORD *)(v23 + 16);
      *(_QWORD *)(v22 + 32) = *(_QWORD *)(v23 + 32);
      *(_OWORD *)v22 = v25;
      *(_OWORD *)(v22 + 16) = v26;
    }
    *(_BYTE *)(v22 + 40) = 1;
  }
  else
  {
    *(_QWORD *)v22 = *(_QWORD *)v23;
    *(_BYTE *)(v22 + 40) = 0;
    swift_retain();
  }
  v27 = *(_QWORD *)(sub_20E4A5384() - 8);
  v28 = *(_DWORD *)(v27 + 80) & 0xF8 | 7;
  v29 = (_QWORD *)((v22 + v28 + 41) & ~v28);
  v30 = (_QWORD *)((v23 + v28 + 41) & ~v28);
  if (*(_QWORD *)(v27 + 64) <= 8uLL)
    v31 = 8;
  else
    v31 = *(_QWORD *)(v27 + 64);
  v32 = *((unsigned __int8 *)v30 + v31);
  if (v32 >= 2)
  {
    if (v31 <= 3)
      v33 = v31;
    else
      v33 = 4;
    __asm { BR              X13 }
  }
  if (v32 == 1)
  {
    (*(void (**)(_QWORD *))(v27 + 16))(v29);
    v34 = 1;
  }
  else
  {
    *v29 = *v30;
    swift_retain();
    v34 = 0;
  }
  *((_BYTE *)v29 + v31) = v34;
  return v37;
}

_QWORD *sub_20E420A98(_QWORD *a1, _QWORD *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int v31;
  uint64_t v32;
  unsigned int v33;
  uint64_t v34;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (v6 | 7) + 16;
  v8 = (_QWORD *)(((unint64_t)a1 + v7) & ~(v6 | 7));
  v9 = (_QWORD *)(((unint64_t)a2 + v7) & ~(v6 | 7));
  *v8 = *v9;
  swift_retain();
  swift_release();
  v10 = (_QWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  v11 = (_QWORD *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v10 = *v11;
  swift_retain();
  swift_release();
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 24))(((unint64_t)v10 + v6 + 8) & ~v6, ((unint64_t)v11 + v6 + 8) & ~v6, AssociatedTypeWitness);
  v12 = *(_QWORD *)(v5 + 64) + ((v6 + 16) & ~v6) + 7;
  v13 = (_QWORD *)(((unint64_t)v8 + v12) & 0xFFFFFFFFFFFFFFF8);
  v14 = (_QWORD *)(((unint64_t)v9 + v12) & 0xFFFFFFFFFFFFFFF8);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  swift_retain();
  swift_release();
  v16 = (_QWORD *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8);
  v17 = (_QWORD *)(((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFFFF8);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  swift_retain();
  swift_release();
  v19 = ((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8;
  v20 = ((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8;
  if (v19 != v20)
  {
    sub_20E39D1F8(v19, &qword_253ED0A18);
    if ((*(_BYTE *)(v20 + 40) & 1) != 0)
    {
      v21 = *(_QWORD *)(v20 + 24);
      if (v21)
      {
        *(_QWORD *)(v19 + 24) = v21;
        *(_QWORD *)(v19 + 32) = *(_QWORD *)(v20 + 32);
        (**(void (***)(unint64_t, unint64_t))(v21 - 8))(v19, v20);
      }
      else
      {
        v22 = *(_OWORD *)v20;
        v23 = *(_OWORD *)(v20 + 16);
        *(_QWORD *)(v19 + 32) = *(_QWORD *)(v20 + 32);
        *(_OWORD *)v19 = v22;
        *(_OWORD *)(v19 + 16) = v23;
      }
      *(_BYTE *)(v19 + 40) = 1;
    }
    else
    {
      *(_QWORD *)v19 = *(_QWORD *)v20;
      *(_BYTE *)(v19 + 40) = 0;
      swift_retain();
    }
  }
  v24 = sub_20E4A5384();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(_DWORD *)(v25 + 80) & 0xF8 | 7;
  v27 = (_QWORD *)((v19 + v26 + 41) & ~v26);
  v28 = (_QWORD *)((v20 + v26 + 41) & ~v26);
  if (v27 != v28)
  {
    v29 = v24;
    if (*(_QWORD *)(v25 + 64) <= 8uLL)
      v30 = 8;
    else
      v30 = *(_QWORD *)(v25 + 64);
    v31 = *((unsigned __int8 *)v27 + v30);
    if (v31 >= 2)
    {
      if (v30 <= 3)
        v32 = v30;
      else
        v32 = 4;
      __asm { BR              X12 }
    }
    if (v31 == 1)
      (*(void (**)(_QWORD *, uint64_t))(v25 + 8))(v27, v24);
    else
      swift_release();
    v33 = *((unsigned __int8 *)v28 + v30);
    if (v33 >= 2)
    {
      if (v30 <= 3)
        v34 = v30;
      else
        v34 = 4;
      __asm { BR              X12 }
    }
    if (v33 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v25 + 16))(v27, v28, v29);
      *((_BYTE *)v27 + v30) = 1;
    }
    else
    {
      *v27 = *v28;
      *((_BYTE *)v27 + v30) = 0;
      swift_retain();
    }
  }
  return a1;
}

_OWORD *sub_20E420E18(_OWORD *a1, _OWORD *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  _OWORD *v15;
  _OWORD *v16;
  __int128 *v17;
  __int128 v18;
  __int128 v19;
  _OWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  unsigned int v29;
  uint64_t v30;
  char v31;

  *a1 = *a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (v6 | 7) + 16;
  v8 = (_QWORD *)(((unint64_t)a1 + v7) & ~(v6 | 7));
  v9 = (_QWORD *)(((unint64_t)a2 + v7) & ~(v6 | 7));
  *v8 = *v9;
  v10 = (_QWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  v11 = (_QWORD *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v10 = *v11;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 32))(((unint64_t)v10 + v6 + 8) & ~v6, ((unint64_t)v11 + v6 + 8) & ~v6, AssociatedTypeWitness);
  v12 = *(_QWORD *)(v5 + 64) + ((v6 + 16) & ~v6) + 7;
  v13 = (_OWORD *)(((unint64_t)v8 + v12) & 0xFFFFFFFFFFFFFFF8);
  v14 = (_OWORD *)(((unint64_t)v9 + v12) & 0xFFFFFFFFFFFFFFF8);
  *v13 = *v14;
  v15 = (_OWORD *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFF8);
  v16 = (_OWORD *)(((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v15 = *v16;
  v17 = (__int128 *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8);
  v19 = *v17;
  v18 = v17[1];
  v20 = (_OWORD *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8);
  *(_OWORD *)((char *)v20 + 25) = *(__int128 *)((char *)v17 + 25);
  *v20 = v19;
  v20[1] = v18;
  v21 = *(_QWORD *)(sub_20E4A5384() - 8);
  v22 = *(_DWORD *)(v21 + 80) & 0xF8;
  v23 = v22 + 48;
  v24 = (unint64_t)v20 + v22 + 48;
  v25 = ~v22 & 0xFFFFFFFFFFFFFFF8;
  v26 = (_QWORD *)(v24 & v25);
  v27 = (_QWORD *)(((unint64_t)v17 + v23) & v25);
  if (*(_QWORD *)(v21 + 64) <= 8uLL)
    v28 = 8;
  else
    v28 = *(_QWORD *)(v21 + 64);
  v29 = *((unsigned __int8 *)v27 + v28);
  if (v29 >= 2)
  {
    if (v28 <= 3)
      v30 = v28;
    else
      v30 = 4;
    __asm { BR              X13 }
  }
  if (v29 == 1)
  {
    (*(void (**)(_QWORD *))(v21 + 32))(v26);
    v31 = 1;
  }
  else
  {
    v31 = 0;
    *v26 = *v27;
  }
  *((_BYTE *)v26 + v28) = v31;
  return a1;
}

_QWORD *sub_20E421008(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _OWORD *v14;
  unint64_t v15;
  unint64_t v16;
  _OWORD *v17;
  _OWORD *v18;
  _OWORD *v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  uint64_t v30;
  unsigned int v31;
  uint64_t v32;
  char v33;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_release();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v7 | 7) + 16;
  v9 = (_QWORD *)(((unint64_t)a1 + v8) & ~(v7 | 7));
  v10 = (_QWORD *)(((unint64_t)a2 + v8) & ~(v7 | 7));
  *v9 = *v10;
  swift_release();
  v11 = (_QWORD *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8);
  v12 = (_QWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v11 = *v12;
  swift_release();
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 40))(((unint64_t)v11 + v7 + 8) & ~v7, ((unint64_t)v12 + v7 + 8) & ~v7, AssociatedTypeWitness);
  v13 = *(_QWORD *)(v6 + 64) + ((v7 + 16) & ~v7) + 7;
  v14 = (_OWORD *)(((unint64_t)v9 + v13) & 0xFFFFFFFFFFFFFFF8);
  v15 = (unint64_t)v10 + v13;
  v16 = (v15 & 0xFFFFFFFFFFFFFFF8) + 23;
  *v14 = *(_OWORD *)(v15 & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  v17 = (_OWORD *)(((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFFFF8);
  v16 &= 0xFFFFFFFFFFFFF8uLL;
  *v17 = *(_OWORD *)v16;
  swift_release();
  v18 = (_OWORD *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8);
  v19 = (_OWORD *)((v16 + 23) & 0xFFFFFFFFFFFFFFF8);
  if (v18 != v19)
  {
    sub_20E39D1F8((uint64_t)v18, &qword_253ED0A18);
    v20 = *(_OWORD *)((char *)v19 + 25);
    v21 = v19[1];
    *v18 = *v19;
    v18[1] = v21;
    *(_OWORD *)((char *)v18 + 25) = v20;
  }
  v22 = sub_20E4A5384();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(_DWORD *)(v23 + 80) & 0xF8 | 7;
  v25 = (_QWORD *)(((unint64_t)v18 + v24 + 41) & ~v24);
  v26 = (_QWORD *)(((unint64_t)v19 + v24 + 41) & ~v24);
  if (v25 != v26)
  {
    v27 = v22;
    if (*(_QWORD *)(v23 + 64) <= 8uLL)
      v28 = 8;
    else
      v28 = *(_QWORD *)(v23 + 64);
    v29 = *((unsigned __int8 *)v25 + v28);
    if (v29 >= 2)
    {
      if (v28 <= 3)
        v30 = v28;
      else
        v30 = 4;
      __asm { BR              X12 }
    }
    if (v29 == 1)
      (*(void (**)(_QWORD *, uint64_t))(v23 + 8))(v25, v22);
    else
      swift_release();
    v31 = *((unsigned __int8 *)v26 + v28);
    if (v31 >= 2)
    {
      if (v28 <= 3)
        v32 = v28;
      else
        v32 = 4;
      __asm { BR              X12 }
    }
    if (v31 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v23 + 32))(v25, v26, v27);
      v33 = 1;
    }
    else
    {
      v33 = 0;
      *v25 = *v26;
    }
    *((_BYTE *)v25 + v28) = v33;
  }
  return a1;
}

uint64_t sub_20E4212F4(uint64_t a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  int v16;
  unsigned int v18;
  int v19;
  int v20;
  unint64_t v21;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if ((int)v6 >= 0)
    v8 = 0x7FFFFFFF;
  else
    v8 = v7;
  v9 = *(_QWORD *)(sub_20E4A5384() - 8);
  if (*(_QWORD *)(v9 + 64) <= 8uLL)
    v10 = 8;
  else
    v10 = *(_QWORD *)(v9 + 64);
  if (!a2)
    return 0;
  v11 = *(unsigned __int8 *)(v5 + 80);
  v12 = v11 | 7;
  if (a2 <= v8)
    goto LABEL_30;
  v13 = *(_DWORD *)(v9 + 80) & 0xF8 | 7;
  v14 = v10
      + ((v13
        + ((((((*(_QWORD *)(v5 + 64) + ((v11 + 16) & ~v11) + ((v11 + 16) & ~v12) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
          + 23) & 0xFFFFFFFFFFFFFFF8)
        + 41) & ~v13)
      + 1;
  v15 = 8 * v14;
  if (v14 <= 3)
  {
    v18 = ((a2 - v8 + ~(-1 << v15)) >> v15) + 1;
    if (HIWORD(v18))
    {
      v16 = *(_DWORD *)(a1 + v14);
      if (!v16)
        goto LABEL_30;
      goto LABEL_21;
    }
    if (v18 > 0xFF)
    {
      v16 = *(unsigned __int16 *)(a1 + v14);
      if (!*(_WORD *)(a1 + v14))
        goto LABEL_30;
      goto LABEL_21;
    }
    if (v18 < 2)
    {
LABEL_30:
      if (v8 != 0x7FFFFFFF)
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))((v11 + ((((a1 + v12 + 16) & ~v12) + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v11, v6, AssociatedTypeWitness);
      v21 = *(_QWORD *)(a1 + 8);
      if (v21 >= 0xFFFFFFFF)
        LODWORD(v21) = -1;
      return (v21 + 1);
    }
  }
  v16 = *(unsigned __int8 *)(a1 + v14);
  if (!*(_BYTE *)(a1 + v14))
    goto LABEL_30;
LABEL_21:
  v19 = (v16 - 1) << v15;
  if (v14 > 3)
    v19 = 0;
  if ((_DWORD)v14)
  {
    if (v14 <= 3)
      v20 = v14;
    else
      v20 = 4;
    __asm { BR              X11 }
  }
  return v8 + v19 + 1;
}

void sub_20E421528(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6;
  int v7;
  int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  size_t v14;
  unsigned int v15;
  int v16;
  unsigned int v17;
  int v18;

  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF)
    v8 = 0x7FFFFFFF;
  else
    v8 = *(_DWORD *)(v6 + 84);
  if (v7 >= 0)
    v9 = 0x7FFFFFFF;
  else
    v9 = v8;
  v10 = *(_QWORD *)(sub_20E4A5384() - 8);
  if (*(_QWORD *)(v10 + 64) <= 8uLL)
    v11 = 8;
  else
    v11 = *(_QWORD *)(v10 + 64);
  v12 = *(unsigned __int8 *)(v6 + 80);
  v13 = *(_DWORD *)(v10 + 80) & 0xF8 | 7;
  v14 = v11
      + ((v13
        + ((((((*(_QWORD *)(v6 + 64) + ((v12 + 16) & ~(v12 | 7)) + ((v12 + 16) & ~v12) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
          + 23) & 0xFFFFFFFFFFFFFFF8)
        + 41) & ~v13)
      + 1;
  if (a3 <= v9)
  {
    v15 = 0;
  }
  else if (v14 <= 3)
  {
    v17 = ((a3 - v9 + ~(-1 << (8 * v14))) >> (8 * v14)) + 1;
    if (HIWORD(v17))
    {
      v15 = 4u;
    }
    else if (v17 >= 0x100)
    {
      v15 = 2;
    }
    else
    {
      v15 = v17 > 1;
    }
  }
  else
  {
    v15 = 1u;
  }
  if (v9 < a2)
  {
    v16 = ~v9 + a2;
    if (v14 < 4)
    {
      if ((_DWORD)v14)
      {
        v18 = v16 & ~(-1 << (8 * v14));
        bzero(a1, v14);
        if ((_DWORD)v14 == 3)
        {
          *(_WORD *)a1 = v18;
          a1[2] = BYTE2(v18);
        }
        else if ((_DWORD)v14 == 2)
        {
          *(_WORD *)a1 = v18;
        }
        else
        {
          *a1 = v18;
        }
      }
    }
    else
    {
      bzero(a1, v14);
      *(_DWORD *)a1 = v16;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X14 }
}

void type metadata accessor for FlowStackTabView()
{
  JUMPOUT(0x212BBDEE8);
}

void sub_20E4217F0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_253ED2448)
  {
    sub_20E4A5384();
    v0 = sub_20E4A36BC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_253ED2448);
  }
}

uint64_t sub_20E421844()
{
  return sub_20E428C94();
}

void sub_20E421850()
{
  type metadata accessor for FlowStackTabView();
}

uint64_t sub_20E4218B4(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t result;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;

  v10 = (char *)v3 + a1[22];
  *(_QWORD *)v10 = swift_getKeyPath();
  v10[40] = 0;
  v11 = (uint64_t *)((char *)v3 + a1[23]);
  *v11 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
  swift_storeEnumTagMultiPayload();
  v12 = type metadata accessor for FlowStackTabsAuthority(0, v6, v8, v7);
  swift_retain();
  MEMORY[0x212BBDF90](&unk_20E4B1990, v12);
  *v3 = sub_20E4A3938();
  v3[1] = v13;
  v14 = v5 + *(_QWORD *)(*(_QWORD *)v5 + 112);
  v15 = (char *)v3 + a1[19];
  swift_getAssociatedTypeWitness();
  v16 = sub_20E4A4778();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v15, v14, v16);
  result = swift_release();
  v18 = (uint64_t *)((char *)v3 + a1[20]);
  *v18 = v4;
  v18[1] = v2;
  v19 = (uint64_t *)((char *)v3 + a1[21]);
  *v19 = v1;
  v19[1] = v20;
  return result;
}

void sub_20E4219E8(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t OpaqueTypeConformance2;
  uint64_t v36;
  _BYTE v37[16];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE *v45;
  _BYTE *v46;
  _BYTE *v47;
  _BYTE *v48;
  _BYTE *v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE *v52;
  _BYTE *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _BYTE *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD v79[2];
  _QWORD v80[2];

  v55 = a2;
  v4 = a1[2];
  v66 = a1[6];
  v3 = v66;
  v67 = v4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v61 = AssociatedTypeWitness;
  v54 = v6;
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v53 = &v37[-v7];
  v51 = sub_20E4A52B8();
  v50 = *(_QWORD *)(v51 - 8);
  MEMORY[0x24BDAC7A8](v51);
  v48 = &v37[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v9);
  v49 = &v37[-v10];
  MEMORY[0x24BDAC7A8](v11);
  v52 = &v37[-v12];
  v56 = *(a1 - 1);
  v57 = *(_QWORD *)(v56 + 64);
  MEMORY[0x24BDAC7A8](v13);
  v47 = &v37[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v46 = &v37[-v16];
  MEMORY[0x24BDAC7A8](v17);
  v45 = &v37[-v18];
  v65 = sub_20E4A4778();
  MEMORY[0x24BDAC7A8](v65);
  v64 = &v37[-v19];
  v63 = a1[5];
  v20 = type metadata accessor for FlowStackTabsAuthority.Tab(255, v4, v63, v3);
  v44 = v20;
  v60 = sub_20E4A5D98();
  v70 = a1[3];
  v58 = sub_20E4A4004();
  v21 = sub_20E4A39D4();
  v62 = a1[7];
  v22 = v62;
  v59 = sub_20E41EFCC();
  v80[0] = v22;
  v80[1] = v59;
  v23 = MEMORY[0x24BDED308];
  v24 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v21, v80);
  v71 = v21;
  v72 = v24;
  v25 = MEMORY[0x212BBDF30](255, &v71, MEMORY[0x24BDF2F10], 0);
  v43 = v25;
  v69 = a1[4];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1A700);
  v26 = sub_20E4A39D4();
  v27 = sub_20E4A4BBC();
  v68 = a1[8];
  v28 = v68;
  v29 = sub_20E39D010((unint64_t *)&qword_254A1A6F8, &qword_254A1A700, MEMORY[0x24BDF1028]);
  v79[0] = v28;
  v79[1] = v29;
  v30 = MEMORY[0x212BBDF90](v23, v26, v79);
  v78 = MEMORY[0x24BEE0D10];
  v31 = MEMORY[0x212BBDF90](MEMORY[0x24BE5CAA8], v27, &v78);
  v71 = v26;
  v72 = v27;
  v73 = v30;
  v74 = v31;
  v32 = sub_20E4A46DC();
  v42 = v32;
  v33 = v60;
  v34 = MEMORY[0x212BBDF90](MEMORY[0x24BEE12D8], v60);
  v41 = v34;
  v71 = v21;
  v72 = v24;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v40 = OpaqueTypeConformance2;
  v36 = MEMORY[0x212BBDF90](MEMORY[0x24BDF44C8], v32);
  v39 = v36;
  v38 = MEMORY[0x212BBDF90](&unk_20E4B1958, v20);
  v71 = v33;
  v72 = v25;
  v73 = v32;
  v74 = v34;
  v75 = OpaqueTypeConformance2;
  v76 = v36;
  v77 = v38;
  type metadata accessor for _FlowStackTabViewBody();
}

void sub_20E421E04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  char *v53;

  *(_QWORD *)(v11 - 448) = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v11 - 584) = (char *)&a9 - v13;
  *(_QWORD *)(v11 - 504) = a1;
  v14 = sub_20E4A39D4();
  *(_QWORD *)(v11 - 416) = *(_QWORD *)(v14 - 8);
  *(_QWORD *)(v11 - 464) = v14;
  v15 = MEMORY[0x24BDAC7A8](v14);
  *(_QWORD *)(v11 - 496) = (char *)&a9 - v16;
  v17 = MEMORY[0x212BBDF90](&unk_20E4AC6D8, a1, v15);
  *(_QWORD *)(v11 - 512) = v17;
  v18 = *(_QWORD *)(v11 - 304);
  *(_QWORD *)(v11 - 200) = v17;
  *(_QWORD *)(v11 - 192) = v18;
  v19 = MEMORY[0x212BBDF90](v9, v14, v11 - 200);
  *(_QWORD *)(v11 - 472) = v19;
  v21 = *(_QWORD *)(v11 - 248);
  v20 = *(_QWORD *)(v11 - 240);
  v22 = *(_QWORD *)(v11 - 288);
  v23 = *(_QWORD *)(swift_getAssociatedConformanceWitness() + 8);
  *(_QWORD *)(v11 - 480) = v23;
  *(_QWORD *)(v11 - 184) = v14;
  *(_QWORD *)(v11 - 176) = v22;
  *(_QWORD *)(v11 - 168) = v19;
  *(_QWORD *)(v11 - 160) = v23;
  v24 = MEMORY[0x212BBDF30](0, v11 - 184, MEMORY[0x24BDF38E8], 0);
  *(_QWORD *)(v11 - 440) = v24;
  *(_QWORD *)(v11 - 432) = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  *(_QWORD *)(v11 - 520) = (char *)&a9 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  *(_QWORD *)(v11 - 456) = (char *)&a9 - v27;
  v28 = *(_QWORD *)(v11 - 208);
  *(_QWORD *)(v11 - 184) = sub_20E49DB50();
  v29 = v10;
  *(_QWORD *)(v11 - 592) = v28 + *(int *)(v10 + 76);
  sub_20E4A4748();
  v30 = *(_QWORD *)(v11 - 336);
  v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16);
  *(_QWORD *)(v11 - 304) = v31;
  v32 = *(_QWORD *)(v11 - 488);
  v31(v32, v28, v10);
  v33 = *(unsigned __int8 *)(v30 + 80);
  v34 = (v33 + 72) & ~v33;
  *(_QWORD *)(v11 - 320) += v34;
  v35 = v34;
  *(_QWORD *)(v11 - 312) = v34;
  *(_QWORD *)(v11 - 328) = v33 | 7;
  v36 = (char *)swift_allocObject();
  v37 = *(_QWORD *)(v11 - 224);
  v38 = *(_QWORD *)(v11 - 216);
  *((_QWORD *)v36 + 2) = v20;
  *((_QWORD *)v36 + 3) = v38;
  v39 = *(_QWORD *)(v11 - 272);
  *((_QWORD *)v36 + 4) = v37;
  *((_QWORD *)v36 + 5) = v39;
  *((_QWORD *)v36 + 6) = v21;
  v40 = *(_QWORD *)(v11 - 280);
  v41 = *(_QWORD *)(v11 - 232);
  *((_QWORD *)v36 + 7) = v40;
  *((_QWORD *)v36 + 8) = v41;
  v42 = *(void (**)(char *, uint64_t, uint64_t))(v30 + 32);
  *(_QWORD *)(v11 - 336) = v42;
  v42(&v36[v35], v32, v29);
  v43 = *(_QWORD *)(v11 - 424);
  v44 = *(_QWORD *)(v11 - 208);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 - 304))(v43, v44, v29);
  v45 = (_QWORD *)swift_allocObject();
  v45[2] = v20;
  v45[3] = v38;
  v45[4] = v37;
  v45[5] = v39;
  v46 = v39;
  v47 = *(_QWORD *)(v11 - 248);
  v45[6] = v47;
  v45[7] = v40;
  v48 = (char *)v45 + *(_QWORD *)(v11 - 312);
  v49 = *(_QWORD *)(v11 - 232);
  v45[8] = v49;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 - 336))(v48, v43, v29);
  v50 = *(_QWORD *)(v11 - 408);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 - 304))(v50, v44, v29);
  v51 = (_QWORD *)swift_allocObject();
  v52 = *(_QWORD *)(v11 - 216);
  v51[2] = *(_QWORD *)(v11 - 240);
  v51[3] = v52;
  v51[4] = *(_QWORD *)(v11 - 224);
  v51[5] = v46;
  v51[6] = v47;
  v51[7] = v40;
  v53 = (char *)v51 + *(_QWORD *)(v11 - 312);
  v51[8] = v49;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 - 336))(v53, v50, v29);
  sub_20E423504(v11 - 184, *(_QWORD *)(v11 - 264), (uint64_t)sub_20E423B88, (uint64_t)v36, (uint64_t)sub_20E423DC8, (uint64_t)v45, (uint64_t)sub_20E423DE0, (uint64_t)v51, *(_QWORD *)(v11 - 296), *(_QWORD *)(v11 - 536), *(_QWORD *)(v11 - 544), *(_QWORD *)(v11 - 552), *(_QWORD *)(v11 - 560), *(_QWORD *)(v11 - 568), *(_QWORD *)(v11 - 576));
}

uint64_t sub_20E422220()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t OpaqueTypeConformance2;
  _QWORD *v23;
  uint64_t v24;
  uint64_t (*v25)(_QWORD *, uint64_t);

  v2 = *(_QWORD *)(v1 - 400);
  sub_20E4A527C();
  sub_20E49DB50();
  v3 = MEMORY[0x212BBD348]();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 - 160) = MEMORY[0x24BEE1768];
  *(_QWORD *)(v1 - 184) = v3;
  v4 = *(_QWORD *)(v1 - 392);
  v5 = v2;
  sub_20E4A52AC();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 384) + 8);
  v7 = *(_QWORD *)(v1 - 376);
  v6(v5, v7);
  sub_20E39D1F8(v1 - 184, &qword_253ED2A38);
  v8 = *(_QWORD *)(v1 - 288);
  *(_QWORD *)(v1 - 160) = v8;
  __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)(v1 - 184));
  v9 = *(_QWORD *)(v1 - 256);
  MEMORY[0x212BBBCE0](v9);
  v10 = *(_QWORD *)(v1 - 368);
  sub_20E4A52AC();
  v6(v4, v7);
  sub_20E39D1F8(v1 - 184, &qword_253ED2A38);
  v11 = *(_QWORD *)(v1 - 496);
  v12 = *(_QWORD *)(v1 - 504);
  View.automationSemantics(_:)();
  v6(v10, v7);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 448) + 8))(v0, v12);
  v13 = *(_QWORD *)(v1 - 360);
  MEMORY[0x212BBBCE0](v9);
  v14 = (_QWORD *)swift_allocObject();
  v15 = *(_QWORD *)(v1 - 216);
  v14[2] = *(_QWORD *)(v1 - 240);
  v14[3] = v15;
  v16 = *(_QWORD *)(v1 - 272);
  v14[4] = *(_QWORD *)(v1 - 224);
  v14[5] = v16;
  v17 = *(_QWORD *)(v1 - 280);
  v14[6] = *(_QWORD *)(v1 - 248);
  v14[7] = v17;
  v14[8] = *(_QWORD *)(v1 - 232);
  v18 = *(_QWORD **)(v1 - 520);
  v19 = *(_QWORD *)(v1 - 464);
  v20 = *(_QWORD *)(v1 - 472);
  v21 = *(_QWORD *)(v1 - 480);
  sub_20E4A44CC();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 352) + 8))(v13, v8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 416) + 8))(v11, v19);
  *(_QWORD *)(v1 - 184) = v19;
  *(_QWORD *)(v1 - 176) = v8;
  *(_QWORD *)(v1 - 168) = v20;
  *(_QWORD *)(v1 - 160) = v21;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v23 = *(_QWORD **)(v1 - 456);
  v24 = *(_QWORD *)(v1 - 440);
  sub_20E39D614(v23, v18, v24, OpaqueTypeConformance2);
  v25 = *(uint64_t (**)(_QWORD *, uint64_t))(*(_QWORD *)(v1 - 432) + 8);
  v25(v18, v24);
  sub_20E39D618((uint64_t)v23, v24, *(_QWORD *)(v1 - 344));
  return v25(v23, v24);
}

uint64_t sub_20E42251C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t AssociatedTypeWitness;
  uint64_t *boxed_opaque_existential_1Tm;
  uint64_t v34;
  _QWORD v36[2];
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67[3];
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v50 = a8;
  v57 = a5;
  v58 = a1;
  v49 = a9;
  v43 = sub_20E4A5384();
  v42 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v41 = (char *)v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_20E4A4CA0();
  v36[0] = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v36[1] = (char *)v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_20E4A4B08();
  v39 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v38 = (char *)v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_20E4A4A90();
  MEMORY[0x24BDAC7A8](v17);
  v45 = (char *)v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = sub_20E4A5A8C();
  v52 = *(_QWORD *)(v53 - 8);
  MEMORY[0x24BDAC7A8](v53);
  v51 = (char *)v36 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for FlowStackTabsAuthority.Tab(255, a3, a6, a7);
  v21 = sub_20E4A60E0();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)v36 - v23;
  v25 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v48 = (char *)v36 - v27;
  v47 = a2;
  v72 = sub_20E49DB50();
  v54 = a3;
  v59 = a3;
  v28 = v50;
  v44 = a4;
  v60 = a4;
  v61 = v57;
  v46 = a6;
  v62 = a6;
  v29 = v49;
  v56 = a7;
  v63 = a7;
  v64 = v50;
  v65 = v49;
  v66 = v58;
  v30 = sub_20E4A5D98();
  MEMORY[0x212BBDF90](MEMORY[0x24BEE12C8], v30);
  sub_20E4A5CD8();
  swift_bridgeObjectRelease();
  v55 = v25;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v24, 1, v20) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v48, v24, v20);
    v67[0] = v54;
    v67[1] = v44;
    v67[2] = v57;
    v68 = v46;
    v69 = v56;
    v70 = v28;
    v71 = v29;
    type metadata accessor for FlowStackTabView();
  }
  (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  v31 = v51;
  sub_20E4A5A44();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0D58);
  sub_20E4A4ACC();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_20E4A8070;
  sub_20E4A4A84();
  sub_20E4A4A78();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v68 = AssociatedTypeWitness;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm(v67);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(boxed_opaque_existential_1Tm, v58, AssociatedTypeWitness);
  sub_20E4A4A48();
  sub_20E39D1F8((uint64_t)v67, &qword_253ED2A38);
  sub_20E4A4A78();
  sub_20E4A4A9C();
  sub_20E4A4A30();
  v34 = v53;
  sub_20E4A5768();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v31, v34);
}

uint64_t sub_20E422CC0()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  return sub_20E4A5C0C() & 1;
}

void sub_20E422D64(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[3];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v47[3];

  v27 = a6;
  v26 = a5;
  v28 = a2;
  v30 = a1;
  v39 = a9;
  v14 = sub_20E4A3FB0();
  v37 = *(_QWORD *)(v14 - 8);
  v38 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v36 = (char *)v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_20E4A52B8();
  v34 = *(_QWORD *)(v16 - 8);
  v35 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v29 = (char *)v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = *(_QWORD *)(a4 - 8);
  MEMORY[0x24BDAC7A8](v18);
  sub_20E4A4004();
  v24[1] = a4;
  v19 = sub_20E4A39D4();
  v32 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v24[2] = (char *)v24 - v20;
  v21 = sub_20E41EFCC();
  v47[0] = a8;
  v47[1] = v21;
  v25 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v19, v47);
  v40 = v19;
  v41 = v25;
  v22 = MEMORY[0x212BBDF30](0, &v40, MEMORY[0x24BDF2F10], 0);
  v31 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  MEMORY[0x24BDAC7A8](v23);
  v40 = a3;
  v41 = a4;
  v42 = v26;
  v43 = v27;
  v44 = a7;
  v45 = a8;
  v46 = a10;
  type metadata accessor for FlowStackTabView();
}

uint64_t sub_20E422F70(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t *boxed_opaque_existential_1Tm;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t OpaqueTypeConformance2;
  uint64_t (*v17)(_QWORD *, uint64_t);

  v7 = v1;
  v8 = *(_QWORD *)(v6 - 240);
  (*(void (**)(uint64_t))(*(_QWORD *)(v6 - 256) + *(int *)(a1 + 80)))(v8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v6 - 136) = AssociatedTypeWitness;
  boxed_opaque_existential_1Tm = __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)(v6 - 160));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(boxed_opaque_existential_1Tm, v8, AssociatedTypeWitness);
  v11 = *(_QWORD *)(v6 - 248);
  sub_20E4A52A0();
  __swift_destroy_boxed_opaque_existential_1(v6 - 160);
  v12 = *(_QWORD *)(v6 - 288);
  v13 = *(_QWORD *)(v6 - 296);
  View.automationSemantics(_:)();
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v6 - 208) + 8))(v11, *(_QWORD *)(v6 - 200));
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 216) + 8))(v7, v13);
  v14 = *(_QWORD *)(v6 - 192);
  sub_20E4A3FA4();
  v15 = *(_QWORD *)(v6 - 280);
  sub_20E4A4358();
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v6 - 184) + 8))(v14, *(_QWORD *)(v6 - 176));
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 224) + 8))(v12, v4);
  *(_QWORD *)(v6 - 160) = v4;
  *(_QWORD *)(v6 - 152) = v15;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  sub_20E39D614(v2, v3, v5, OpaqueTypeConformance2);
  v17 = *(uint64_t (**)(_QWORD *, uint64_t))(*(_QWORD *)(v6 - 232) + 8);
  v17(v3, v5);
  sub_20E39D618((uint64_t)v2, v5, *(_QWORD *)(v6 - 168));
  return v17(v2, v5);
}

void sub_20E423110(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[30];

  v20[1] = a7;
  v20[2] = a6;
  v20[3] = a3;
  v20[6] = a2;
  v20[16] = a9;
  v16 = *(_QWORD *)(a5 - 8);
  v20[12] = a1;
  v20[13] = v16;
  MEMORY[0x24BDAC7A8](a1);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1A700);
  v17 = sub_20E4A39D4();
  v18 = *(_QWORD *)(v17 - 8);
  v20[8] = v17;
  v20[15] = v18;
  MEMORY[0x24BDAC7A8](v17);
  v20[5] = (char *)v20 - v19;
  v20[22] = a3;
  v20[23] = a4;
  v20[24] = a5;
  v20[25] = a6;
  v20[26] = a7;
  v20[27] = a8;
  v20[0] = a10;
  v20[28] = a10;
  type metadata accessor for FlowStackTabView();
}

uint64_t sub_20E423220(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, _QWORD);
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  void (*v26)(_BYTE *, uint64_t);
  _BYTE v28[96];

  *(_QWORD *)(v6 - 288) = a1;
  v8 = sub_20E4A4BBC();
  *(_QWORD *)(v6 - 232) = v8;
  v9 = sub_20E39D010((unint64_t *)&qword_254A1A6F8, v5, MEMORY[0x24BDF1028]);
  *(_QWORD *)(v6 - 160) = v4;
  *(_QWORD *)(v6 - 152) = v9;
  v10 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v2, v6 - 160);
  *(_QWORD *)(v6 - 240) = v10;
  *(_QWORD *)(v6 - 168) = MEMORY[0x24BEE0D10];
  v11 = MEMORY[0x212BBDF90](MEMORY[0x24BE5CAA8], v8, v6 - 168);
  *(_QWORD *)(v6 - 248) = v11;
  *(_QWORD *)(v6 - 144) = v2;
  *(_QWORD *)(v6 - 136) = v8;
  *(_QWORD *)(v6 - 128) = v10;
  *(_QWORD *)(v6 - 120) = v11;
  v12 = sub_20E4A46DC();
  *(_QWORD *)(v6 - 208) = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = &v28[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  *(_QWORD *)(v6 - 264) = &v28[-v16];
  v17 = *(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v6 - 272) + *(int *)(a1 + 84));
  v18 = (int *)type metadata accessor for FlowStackTabsAuthority.Tab(0, *(_QWORD *)(v6 - 296), *(_QWORD *)(v6 - 304), *(_QWORD *)(v6 - 312));
  v19 = *(_QWORD *)(v6 - 224);
  v17(v19 + v18[12], *(_QWORD *)(v19 + v18[13]));
  *(_BYTE *)(v6 - 144) = 3;
  v20 = *(_QWORD *)(v6 - 280);
  View.presentedBy(_:)();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 216) + 8))(v3, v1);
  *(_QWORD *)(v6 - 144) = 0;
  *(_QWORD *)(v6 - 136) = 0xE000000000000000;
  swift_getAssociatedTypeWitness();
  sub_20E4A6344();
  *(_QWORD *)(v6 - 184) = *(_QWORD *)(v19 + v18[14]);
  sub_20E4A6314();
  sub_20E4A5C6C();
  swift_bridgeObjectRelease();
  v21 = *(_QWORD *)(v6 - 136);
  *(_QWORD *)(v6 - 184) = *(_QWORD *)(v6 - 144);
  *(_QWORD *)(v6 - 176) = v21;
  sub_20E4A4BC8();
  v22 = *(_QWORD *)(v6 - 136);
  *(_QWORD *)(v6 - 184) = *(_QWORD *)(v6 - 144);
  *(_QWORD *)(v6 - 176) = v22;
  v23 = *(_QWORD *)(v6 - 256);
  sub_20E4A43DC();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 200) + 8))(v20, v23);
  v24 = MEMORY[0x212BBDF90](MEMORY[0x24BDF44C8], v12);
  v25 = *(_QWORD **)(v6 - 264);
  sub_20E39D614(v25, v14, v12, v24);
  v26 = *(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v6 - 208) + 8);
  v26(v14, v12);
  sub_20E39D618((uint64_t)v25, v12, *(_QWORD *)(v6 - 192));
  return ((uint64_t (*)(_QWORD *, uint64_t))v26)(v25, v12);
}

void sub_20E423504(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[4];
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t AssociatedTypeWitness;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v30 = a7;
  v31 = a8;
  v28 = a5;
  v29 = a6;
  v25 = a4;
  v27 = a3;
  v34 = a2;
  v23 = a1;
  v38 = a13;
  v39 = a14;
  v36 = a10;
  v37 = a11;
  v35 = a12;
  swift_getAssociatedTypeWitness();
  v33 = a15;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v21 = sub_20E4A4778();
  v32 = *(_QWORD *)(v21 - 8);
  v15 = *(_QWORD *)(v32 + 64);
  MEMORY[0x24BDAC7A8](v21);
  v22 = (char *)v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20[3] = (char *)v20 - v17;
  MEMORY[0x24BDAC7A8](v18);
  v24 = (char *)v20 - v19;
  v40 = a9;
  v41 = a10;
  v42 = a11;
  v43 = a12;
  v44 = a13;
  v45 = a14;
  v46 = a15;
  type metadata accessor for _FlowStackTabViewBody();
}

uint64_t sub_20E423668(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t, uint64_t);
  char *v38;
  uint64_t v39;
  int *v40;
  uint64_t v41;
  uint64_t result;
  _QWORD *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;

  v6 = *(int *)(a1 + 88);
  *(_QWORD *)(v5 - 280) = a1;
  v8 = v1;
  v9 = v1 + v6;
  *(_QWORD *)v9 = swift_getKeyPath();
  *(_OWORD *)(v9 + 8) = 0u;
  *(_OWORD *)(v9 + 24) = 0u;
  *(_OWORD *)(v9 + 33) = 0u;
  v10 = v8 + *(int *)(a1 + 92);
  *(_QWORD *)(v5 - 288) = v8;
  *(_QWORD *)v10 = swift_getKeyPath();
  *(_BYTE *)(v10 + 8) = 0;
  v11 = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v5 - 296) = v11;
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
  v13 = v3;
  *(_QWORD *)(v5 - 352) = v3;
  v12(v8, v2, v3);
  v14 = *(_QWORD *)(v5 - 208);
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16);
  *(_QWORD *)(v5 - 336) = v15;
  v16 = *(_QWORD *)(v5 - 328);
  v17 = *(_QWORD *)(v5 - 192);
  v18 = *(_QWORD *)(v5 - 320);
  v15(v16, v17, v18);
  sub_20E4A5DF8();
  v19 = sub_20E4A5DEC();
  v20 = *(unsigned __int8 *)(v14 + 80);
  v21 = (v20 + 88) & ~v20;
  *(_QWORD *)(v5 - 344) = v20 | 7;
  v22 = (char *)swift_allocObject();
  v23 = MEMORY[0x24BEE6930];
  *((_QWORD *)v22 + 2) = v19;
  *((_QWORD *)v22 + 3) = v23;
  v24 = *(_QWORD *)(v5 - 176);
  *((_QWORD *)v22 + 4) = v13;
  *((_QWORD *)v22 + 5) = v24;
  v25 = *(_QWORD *)(v5 - 184);
  *((_QWORD *)v22 + 6) = *(_QWORD *)(v5 - 168);
  *((_QWORD *)v22 + 7) = v25;
  v26 = *(_QWORD *)(v5 - 152);
  *((_QWORD *)v22 + 8) = *(_QWORD *)(v5 - 160);
  *((_QWORD *)v22 + 9) = v26;
  *((_QWORD *)v22 + 10) = *(_QWORD *)(v5 - 200);
  v27 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 32);
  v27(&v22[v21], v16, v18);
  v28 = v27;
  v29 = *(_QWORD *)(v5 - 312);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 - 336))(v29, v17, v18);
  v30 = *(_QWORD *)(v5 - 264);
  swift_retain();
  v31 = sub_20E4A5DEC();
  v32 = (char *)swift_allocObject();
  *((_QWORD *)v32 + 2) = v31;
  v33 = *(_QWORD *)(v5 - 352);
  *((_QWORD *)v32 + 3) = MEMORY[0x24BEE6930];
  *((_QWORD *)v32 + 4) = v33;
  v34 = *(_QWORD *)(v5 - 168);
  *((_QWORD *)v32 + 5) = *(_QWORD *)(v5 - 176);
  *((_QWORD *)v32 + 6) = v34;
  v35 = *(_QWORD *)(v5 - 160);
  *((_QWORD *)v32 + 7) = *(_QWORD *)(v5 - 184);
  *((_QWORD *)v32 + 8) = v35;
  *((_QWORD *)v32 + 9) = *(_QWORD *)(v5 - 152);
  *((_QWORD *)v32 + 10) = *(_QWORD *)(v5 - 200);
  v36 = v29;
  v37 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v28;
  v28(&v32[v21], v36, v18);
  v38 = &v32[(v21 + v4 + 7) & 0xFFFFFFFFFFFFFFF8];
  *(_QWORD *)v38 = *(_QWORD *)(v5 - 248);
  *((_QWORD *)v38 + 1) = v30;
  v39 = *(_QWORD *)(v5 - 272);
  sub_20E4A4754();
  swift_release();
  (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v5 - 208) + 8))(*(_QWORD *)(v5 - 192), v18);
  (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v5 - 296) + 8))(*(_QWORD *)(v5 - 304), v33);
  v40 = *(int **)(v5 - 280);
  v41 = *(_QWORD *)(v5 - 288);
  result = v37(v41 + v40[19], v39, v18);
  v43 = (_QWORD *)(v41 + v40[20]);
  v44 = *(_QWORD *)(v5 - 232);
  *v43 = *(_QWORD *)(v5 - 240);
  v43[1] = v44;
  v45 = (_QWORD *)(v41 + v40[21]);
  v46 = *(_QWORD *)(v5 - 216);
  *v45 = *(_QWORD *)(v5 - 224);
  v45[1] = v46;
  return result;
}

uint64_t sub_20E42393C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v0 = sub_20E4A4F64();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_20E4A4A90();
  MEMORY[0x24BDAC7A8](v4);
  v10 = 0;
  v11 = 0xE000000000000000;
  swift_getAssociatedTypeWitness();
  sub_20E4A6344();
  v5 = sub_20E499C60(v10, v11);
  v7 = v6;
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0D58);
  sub_20E4A4ACC();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_20E4A72D0;
  sub_20E4A4A84();
  sub_20E4A4A78();
  v12 = MEMORY[0x24BEE0D00];
  v10 = v5;
  v11 = v7;
  sub_20E4A4A54();
  sub_20E39D1F8((uint64_t)&v10, &qword_253ED2A38);
  sub_20E4A4A78();
  sub_20E4A4A9C();
  sub_20E4A5A14();
  __swift_project_boxed_opaque_existential_1(&v10, v12);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BE5CFE0], v0);
  sub_20E4A5738();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v10);
  return swift_bridgeObjectRelease();
}

void type metadata accessor for _FlowStackTabViewBody()
{
  JUMPOUT(0x212BBDEE8);
}

void sub_20E423B88()
{
  type metadata accessor for FlowStackTabView();
}

uint64_t sub_20E423BD8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v10 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  return sub_20E42251C(v1, v2 + ((v10 + 72) & ~v10), v3, v4, v5, v6, v7, v8, v9);
}

void objectdestroyTm_2()
{
  type metadata accessor for FlowStackTabView();
}

uint64_t sub_20E423C78(int *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *(unsigned __int8 *)(*((_QWORD *)a1 - 1) + 80);
  v4 = v1 + ((v3 + 72) & ~v3);
  swift_release();
  v5 = v4 + a1[19];
  swift_release();
  swift_release();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = sub_20E4A4778();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v5 + *(int *)(v7 + 32), AssociatedTypeWitness);
  swift_release();
  swift_release();
  v8 = v4 + a1[22];
  if ((*(_BYTE *)(v8 + 40) & 1) != 0)
  {
    if (*(_QWORD *)(v8 + 24))
      __swift_destroy_boxed_opaque_existential_1(v8);
  }
  else
  {
    swift_release();
  }
  v9 = v4 + a1[23];
  __swift_instantiateConcreteTypeFromMangledName(&qword_253ED0A28);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_20E4A5384();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

void sub_20E423DC8(uint64_t a1)
{
  sub_20E429020(a1, (void (*)(_QWORD, _QWORD *))type metadata accessor for FlowStackTabView);
}

void sub_20E423DE0(uint64_t a1)
{
  sub_20E429020(a1, (void (*)(_QWORD, _QWORD *))type metadata accessor for FlowStackTabView);
}

uint64_t sub_20E423DF4()
{
  return swift_deallocObject();
}

uint64_t sub_20E423E04()
{
  return sub_20E42393C();
}

uint64_t sub_20E423E34()
{
  uint64_t v0;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  v0 = sub_20E4A4778();
  return MEMORY[0x212BBBCE0](v0);
}

uint64_t sub_20E423EC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t AssociatedTypeWitness;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  swift_getAssociatedTypeWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v9 + 16))((char *)&v12 - v10, a1, AssociatedTypeWitness, v8);
  sub_20E4A4778();
  sub_20E4A4730();
  return a5(a1);
}

uint64_t sub_20E423FB0@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedConformanceWitness;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t OpaqueTypeConformance2;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(uint64_t *, _QWORD);
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  void (*v86)(char *, uint64_t);
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  char v99;
  uint64_t v100;
  __int128 v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  void (*v114)(uint64_t, uint64_t);
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  void (*v122)(uint64_t, uint64_t);
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  _QWORD v133[2];
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  _QWORD *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  _QWORD *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  int *v169;
  uint64_t AssociatedTypeWitness;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  _QWORD v178[2];
  _QWORD v179[2];
  _QWORD v180[2];
  _QWORD v181[2];
  _QWORD v182[2];
  _QWORD v183[2];
  _QWORD v184[2];
  _QWORD v185[2];
  uint64_t v186;
  _QWORD v187[2];
  _QWORD v188[2];
  uint64_t v189;
  uint64_t v190[6];
  _OWORD v191[3];
  _OWORD v192[3];
  _OWORD v193[3];
  char v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;

  v163 = a2;
  v3 = *((_QWORD *)a1 + 8);
  v174 = *((_QWORD *)a1 + 5);
  v167 = *(_QWORD *)(*(_QWORD *)(v174 + 8) + 8);
  v173 = *((_QWORD *)a1 + 2);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4 = swift_getAssociatedTypeWitness();
  v151 = sub_20E4A4778();
  v5 = sub_20E4A60E0();
  v6 = MEMORY[0x24BDAC7A8](v5);
  v150 = (char *)v133 - v7;
  v8 = *((_QWORD *)a1 + 3);
  v177 = *((_QWORD *)a1 + 4);
  v175 = v8;
  v10 = *((_QWORD *)a1 + 6);
  v9 = *((_QWORD *)a1 + 7);
  v169 = a1;
  v195 = v177;
  v196 = v8;
  v197 = v9;
  v198 = v10;
  v171 = v9;
  MEMORY[0x212BBDF30](255, &v195, MEMORY[0x24BDF3838], 0, v6);
  v162 = v3;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v12 = v4;
  v13 = sub_20E4A3AC4();
  v14 = MEMORY[0x24BDEDAB0];
  MEMORY[0x212BBDF90](MEMORY[0x24BDEDAB0], v13);
  v15 = sub_20E4A3E9C();
  v164 = v15;
  v16 = sub_20E4A39D4();
  v17 = v12;
  v176 = v12;
  v18 = sub_20E4A60E0();
  v189 = AssociatedConformanceWitness;
  MEMORY[0x212BBDF90](MEMORY[0x24BEE4AB0], v18, &v189);
  v19 = sub_20E4A3AC4();
  MEMORY[0x212BBDF90](v14, v19);
  v20 = sub_20E4A3E9C();
  v21 = sub_20E4A39D4();
  v22 = v173;
  v195 = v173;
  v196 = v17;
  v197 = v21;
  v198 = v174;
  v199 = AssociatedConformanceWitness;
  v23 = sub_20E4A47C0();
  v195 = v177;
  v196 = v175;
  v197 = v9;
  v198 = v10;
  v152 = v10;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v25 = MEMORY[0x24BDEFB48];
  v166 = MEMORY[0x212BBDF90](MEMORY[0x24BDEFB48], v15);
  v188[0] = OpaqueTypeConformance2;
  v188[1] = v166;
  v26 = MEMORY[0x24BDED308];
  v27 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v16, v188);
  v165 = MEMORY[0x212BBDF90](v25, v20);
  v187[0] = v27;
  v187[1] = v165;
  v186 = MEMORY[0x212BBDF90](v26, v21, v187);
  v28 = MEMORY[0x212BBDF90](MEMORY[0x24BDF4A08], v23, &v186);
  v29 = v176;
  v195 = v176;
  v196 = v23;
  v143 = v23;
  v197 = AssociatedConformanceWitness;
  v198 = v28;
  v139 = v28;
  v172 = sub_20E4A482C();
  v140 = *(_QWORD *)(v172 - 8);
  MEMORY[0x24BDAC7A8](v172);
  v142 = (char *)v133 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v31);
  v141 = (_QWORD *)((char *)v133 - v32);
  v195 = v22;
  v196 = v29;
  v197 = v175;
  v198 = v174;
  v199 = AssociatedConformanceWitness;
  sub_20E4A47C0();
  swift_getTupleTypeMetadata3();
  v33 = sub_20E4A491C();
  v34 = MEMORY[0x212BBDF90](MEMORY[0x24BDF5428], v33);
  v195 = v29;
  v196 = v33;
  v155 = AssociatedConformanceWitness;
  v197 = AssociatedConformanceWitness;
  v198 = v34;
  v35 = sub_20E4A4184();
  v36 = sub_20E4A3AAC();
  v37 = MEMORY[0x212BBDF90](MEMORY[0x24BDF1A30], v35);
  v195 = v35;
  v196 = v36;
  v38 = MEMORY[0x24BDEDA28];
  v197 = v37;
  v198 = MEMORY[0x24BDEDA28];
  v39 = MEMORY[0x212BBDF30](255, &v195, MEMORY[0x24BDF3A80], 0);
  v195 = v35;
  v196 = v36;
  v197 = v37;
  v198 = v38;
  v40 = swift_getOpaqueTypeConformance2();
  v195 = v39;
  v196 = v40;
  v41 = MEMORY[0x212BBDF30](255, &v195, MEMORY[0x24BDF2898], 0);
  v42 = v177;
  v43 = sub_20E4A39D4();
  v44 = sub_20E4A39D4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A18D00);
  v45 = sub_20E4A3E00();
  v195 = v39;
  v196 = v40;
  v46 = swift_getOpaqueTypeConformance2();
  v185[0] = v171;
  v185[1] = v166;
  v47 = MEMORY[0x24BDED308];
  v184[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v43, v185);
  v184[1] = v165;
  v48 = MEMORY[0x212BBDF90](v47, v44, v184);
  v49 = sub_20E39D010((unint64_t *)&qword_254A18D08, &qword_254A18D00, (uint64_t)&protocol conformance descriptor for _RequirementFailureView<A, B>);
  v166 = v48;
  v183[0] = v48;
  v183[1] = v49;
  v50 = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v45, v183);
  v137 = v45;
  v138 = v41;
  v195 = v41;
  v196 = MEMORY[0x24BDF5158];
  v197 = v45;
  v198 = v46;
  v136 = v46;
  v199 = MEMORY[0x24BDF5138];
  v200 = v50;
  v133[1] = v50;
  v51 = sub_20E4A3CEC();
  v134 = *(_QWORD *)(v51 - 8);
  MEMORY[0x24BDAC7A8](v51);
  v135 = (char *)v133 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v53);
  v55 = (_QWORD *)((char *)v133 - v54);
  v165 = v56;
  v57 = sub_20E4A3E00();
  v154 = *(_QWORD *)(v57 - 8);
  MEMORY[0x24BDAC7A8](v57);
  v153 = (char *)v133 - v58;
  v149 = *(_QWORD *)(v176 - 8);
  MEMORY[0x24BDAC7A8](v59);
  v146 = (char *)v133 - v60;
  v147 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v145 = (char *)v133 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  v148 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v63);
  v65 = (char *)v133 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v66);
  v159 = (_QWORD *)((char *)v133 - v67);
  v68 = v173;
  v144 = swift_getAssociatedTypeWitness();
  v69 = *(_QWORD *)(v144 - 8);
  MEMORY[0x24BDAC7A8](v144);
  v71 = (char *)v133 - v70;
  v72 = swift_checkMetadataState();
  v157 = *(_QWORD *)(v72 - 8);
  v158 = v72;
  MEMORY[0x24BDAC7A8](v72);
  v156 = (char *)v133 - v73;
  v164 = v57;
  v74 = sub_20E4A3E00();
  v160 = *(_QWORD *)(v74 - 8);
  v161 = v74;
  MEMORY[0x24BDAC7A8](v74);
  AssociatedTypeWitness = (uint64_t)v133 - v75;
  v76 = v168;
  if (sub_20E4A5F48() == 1)
  {
    v77 = v76;
    sub_20E4A5F3C();
    v78 = (void (*)(uint64_t *, _QWORD))sub_20E4A5FC0();
    v79 = v156;
    (*(void (**)(char *))(v157 + 16))(v156);
    v78(&v195, 0);
    (*(void (**)(char *, uint64_t))(v69 + 8))(v71, v144);
    v80 = v145;
    (*(void (**)(char *))(v77 + v169[21]))(v79);
    v81 = (uint64_t)v146;
    sub_20E4A61B8();
    v82 = v176;
    v83 = v177;
    sub_20E424DD8(v81, 1, v176, v171, v155, (uint64_t)v65);
    (*(void (**)(uint64_t, uint64_t))(v149 + 8))(v81, v82);
    (*(void (**)(char *, uint64_t))(v147 + 8))(v80, v83);
    v84 = v159;
    v85 = v166;
    sub_20E39D614(v159, v65, v44, v166);
    v86 = *(void (**)(char *, uint64_t))(v148 + 8);
    v86(v65, v44);
    sub_20E39D618((uint64_t)v84, v44, (uint64_t)v65);
    v87 = v165;
    v88 = MEMORY[0x212BBDF90](MEMORY[0x24BDEF010], v165);
    v89 = (uint64_t)v153;
    sub_20E3DC6B0((uint64_t)v65, v44);
    v86(v65, v44);
    v178[0] = v85;
    v178[1] = v88;
    v90 = v164;
    MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v164, v178);
    v91 = v172;
    MEMORY[0x212BBDF90](MEMORY[0x24BDF4B90], v172);
    sub_20E3DC6B0(v89, v90);
    (*(void (**)(uint64_t, uint64_t))(v154 + 8))(v89, v90);
    v86((char *)v159, v44);
    (*(void (**)(char *, uint64_t))(v157 + 8))(v156, v158);
  }
  else
  {
    v159 = v55;
    v167 = v44;
    v92 = v150;
    v93 = v151;
    v94 = v175;
    v95 = v68;
    v96 = v76 + v169[23];
    v97 = *(_QWORD *)v96;
    v98 = *(_BYTE *)(v96 + 8);
    sub_20E39CFAC(*(_QWORD *)v96, v98);
    v99 = sub_20E45CF28(v97, v98);
    sub_20E39CED8(v97, v98);
    if ((v99 & 1) == 0)
      goto LABEL_6;
    v100 = v76 + v169[22];
    v101 = *(_OWORD *)(v100 + 16);
    v193[0] = *(_OWORD *)v100;
    v193[1] = v101;
    v193[2] = *(_OWORD *)(v100 + 32);
    v194 = *(_BYTE *)(v100 + 48);
    sub_20E3BB440((uint64_t)v193, (uint64_t)&v195, &qword_254A1A9F0);
    sub_20E428CE0((uint64_t)&v195, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_20E427B6C);
    sub_20E45D788(v190);
    sub_20E428CE0((uint64_t)v193, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_20E427CBC);
    v102 = sub_20E3BB440((uint64_t)v190, (uint64_t)v191, &qword_254A1A9F8);
    if (*(_QWORD *)&v191[0])
    {
      v192[0] = v191[0];
      v192[1] = v191[1];
      v192[2] = v191[2];
      MEMORY[0x24BDAC7A8](v102);
      v133[-10] = v95;
      v133[-9] = v94;
      v103 = v177;
      v104 = v174;
      v133[-8] = v177;
      v133[-7] = v104;
      v105 = v171;
      v133[-6] = v152;
      v133[-5] = v105;
      v106 = v162;
      v133[-4] = v162;
      v133[-3] = v76;
      v133[-2] = v192;
      MEMORY[0x24BDAC7A8](v107);
      v133[-8] = v95;
      v133[-7] = v108;
      v133[-6] = v103;
      v133[-5] = v109;
      v133[-4] = v110;
      v133[-3] = v105;
      v133[-2] = v106;
      v133[-1] = v76;
      v111 = (uint64_t)v135;
      sub_20E4A3CE0();
      v87 = v165;
      v112 = MEMORY[0x212BBDF90](MEMORY[0x24BDEF010], v165);
      v113 = v159;
      sub_20E39D614(v159, v111, v87, v112);
      v114 = *(void (**)(uint64_t, uint64_t))(v134 + 8);
      v114(v111, v87);
      sub_20E39D618((uint64_t)v113, v87, v111);
      v115 = (uint64_t)v153;
      v85 = v166;
      sub_20E39CBE0(v111, v167, v87);
      v114(v111, v87);
      v179[0] = v85;
      v179[1] = v112;
      v90 = v164;
      MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v164, v179);
      v91 = v172;
      MEMORY[0x212BBDF90](MEMORY[0x24BDF4B90], v172);
      sub_20E3DC6B0(v115, v90);
      sub_20E428D74(v190);
      (*(void (**)(uint64_t, uint64_t))(v154 + 8))(v115, v90);
      v114((uint64_t)v113, v87);
    }
    else
    {
LABEL_6:
      sub_20E4A4748();
      v116 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v93 - 8) + 56))(v92, 0, 1, v93);
      MEMORY[0x24BDAC7A8](v116);
      v133[-8] = v95;
      v133[-7] = v94;
      v117 = v174;
      v133[-6] = v177;
      v133[-5] = v117;
      v118 = v171;
      v133[-4] = v152;
      v133[-3] = v118;
      v133[-2] = v162;
      v133[-1] = v76;
      v119 = (uint64_t)v142;
      sub_20E4A4814();
      v91 = v172;
      v120 = MEMORY[0x212BBDF90](MEMORY[0x24BDF4B90], v172);
      v121 = v141;
      sub_20E39D614(v141, v119, v91, v120);
      v122 = *(void (**)(uint64_t, uint64_t))(v140 + 8);
      v122(v119, v91);
      sub_20E39D618((uint64_t)v121, v91, v119);
      v87 = v165;
      v123 = MEMORY[0x212BBDF90](MEMORY[0x24BDEF010], v165);
      v85 = v166;
      v182[0] = v166;
      v182[1] = v123;
      v90 = v164;
      MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v164, v182);
      sub_20E39CBE0(v119, v90, v91);
      v122(v119, v91);
      v122((uint64_t)v121, v91);
    }
  }
  v124 = v163;
  v126 = v160;
  v125 = v161;
  v127 = MEMORY[0x212BBDF90](MEMORY[0x24BDEF010], v87);
  v181[0] = v85;
  v181[1] = v127;
  v128 = MEMORY[0x24BDEF3E0];
  v129 = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v90, v181);
  v130 = MEMORY[0x212BBDF90](MEMORY[0x24BDF4B90], v91);
  v180[0] = v129;
  v180[1] = v130;
  MEMORY[0x212BBDF90](v128, v125, v180);
  v131 = AssociatedTypeWitness;
  sub_20E39D618(AssociatedTypeWitness, v125, v124);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v126 + 8))(v131, v125);
}

uint64_t sub_20E424DD8@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t, double);
  void (*v21)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[2];
  uint64_t v42;

  v31 = a4;
  v32 = a2;
  v39 = a6;
  v40 = a1;
  v8 = sub_20E4A60E0();
  v42 = a5;
  v34 = MEMORY[0x212BBDF90](MEMORY[0x24BEE4AB0], v8, &v42);
  v35 = v8;
  v9 = sub_20E4A3AB8();
  v37 = *(_QWORD *)(v9 - 8);
  v38 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v36 = (char *)&v29 - v10;
  v29 = sub_20E4A3AB8();
  v11 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v13 = (char *)&v29 - v12;
  v14 = sub_20E4A3AC4();
  MEMORY[0x212BBDF90](MEMORY[0x24BDEDAB0], v14);
  v30 = sub_20E4A3E9C();
  v15 = sub_20E4A39D4();
  v33 = *(_QWORD *)(v15 - 8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v29 - v17;
  v19 = *(_QWORD *)(a3 - 8);
  v20 = *(void (**)(char *, uint64_t, uint64_t, double))(v19 + 16);
  v20(v13, v40, a3, v16);
  v21 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56);
  v21(v13, 0, 1, a3);
  v22 = v31;
  sub_20E4A4454();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v29);
  if ((v32 & 1) != 0)
  {
    v23 = v36;
    ((void (*)(char *, uint64_t, uint64_t))v20)(v36, v40, a3);
    v21(v23, 0, 1, a3);
    v24 = swift_checkMetadataState();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v23, 0, 1, v24);
  }
  else
  {
    v25 = swift_checkMetadataState();
    v23 = v36;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v36, 1, 1, v25);
  }
  v26 = sub_20E4A3AC4();
  v27 = MEMORY[0x212BBDF90](MEMORY[0x24BDEFB48], v30);
  v41[0] = v22;
  v41[1] = v27;
  MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v15, v41);
  MEMORY[0x212BBDF90](MEMORY[0x24BDEDAB0], v26);
  sub_20E4A4454();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v23, v38);
  return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v18, v15);
}

void sub_20E4250E0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t AssociatedTypeWitness;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t AssociatedConformanceWitness;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[8];
  uint64_t OpaqueTypeConformance2;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v55 = a8;
  v54 = a7;
  v41 = a5;
  v58 = a2;
  v56 = a1;
  v60 = a9;
  v13 = sub_20E4A3AAC();
  v59 = *(_QWORD *)(v13 - 8);
  v14 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v57 = (char *)v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a6;
  swift_getAssociatedTypeWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v53 = sub_20E4A4778();
  MEMORY[0x24BDAC7A8](v53);
  v52 = (char *)v38 - v18;
  sub_20E4A60E0();
  v51 = sub_20E4A4778();
  v19 = sub_20E4A60E0();
  MEMORY[0x24BDAC7A8](v19);
  v49 = (char *)v38 - v20;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v61 = a3;
  v62 = AssociatedTypeWitness;
  v22 = a3;
  v38[6] = AssociatedTypeWitness;
  v23 = a4;
  v63 = a4;
  v64 = v16;
  v24 = v16;
  v38[1] = v16;
  v65 = AssociatedConformanceWitness;
  v25 = AssociatedConformanceWitness;
  v44 = AssociatedConformanceWitness;
  sub_20E4A47C0();
  swift_getTupleTypeMetadata3();
  v26 = sub_20E4A491C();
  v45 = v26;
  v43 = MEMORY[0x212BBDF90](MEMORY[0x24BDF5428], v26);
  v61 = AssociatedTypeWitness;
  v62 = v26;
  v63 = v25;
  v64 = v43;
  v27 = sub_20E4A4184();
  v48 = *(_QWORD *)(v27 - 8);
  v28 = MEMORY[0x24BDAC7A8](v27);
  v38[7] = (char *)v38 - v29;
  v30 = MEMORY[0x212BBDF90](MEMORY[0x24BDF1A30], v27, v28);
  v61 = v27;
  v62 = v14;
  v38[4] = v14;
  v63 = v30;
  v64 = MEMORY[0x24BDEDA28];
  v38[5] = v30;
  v31 = MEMORY[0x24BDEDA28];
  v32 = MEMORY[0x212BBDF30](0, &v61, MEMORY[0x24BDF3A80], 0);
  v50 = *(_QWORD *)(v32 - 8);
  v33 = v32;
  v40 = v32;
  MEMORY[0x24BDAC7A8](v32);
  v38[3] = (char *)v38 - v34;
  v61 = v27;
  v62 = v14;
  v63 = v30;
  v64 = v31;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v61 = v33;
  v62 = OpaqueTypeConformance2;
  v46 = MEMORY[0x212BBDF30](0, &v61, MEMORY[0x24BDF2898], 0);
  v47 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46);
  v38[2] = (char *)v38 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v36);
  v42 = (char *)v38 - v37;
  v61 = v22;
  v62 = v23;
  v63 = v41;
  v64 = v24;
  v65 = v54;
  v66 = v55;
  v67 = a10;
  type metadata accessor for _FlowStackTabViewBody();
}

uint64_t sub_20E4254F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (**v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t OpaqueTypeConformance2;
  _QWORD *v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t);

  v8 = *(_QWORD *)(v7 - 280);
  sub_20E4A4748();
  v9 = *(_QWORD *)(v7 - 336);
  sub_20E4A4784();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(*(_QWORD *)(v7 - 320) - 8) + 56))(v9, 0, 1);
  *(_QWORD *)(v7 - 224) = v3;
  *(_QWORD *)(v7 - 216) = v6;
  v10 = *(_QWORD *)(v7 - 472);
  *(_QWORD *)(v7 - 208) = v2;
  *(_QWORD *)(v7 - 200) = v10;
  *(_QWORD *)(v7 - 192) = v1;
  *(_QWORD *)(v7 - 184) = v0;
  v11 = *(uint64_t (***)(uint64_t))(v7 - 264);
  *(_QWORD *)(v7 - 176) = v5;
  *(_QWORD *)(v7 - 168) = v11;
  *(_QWORD *)(v7 - 160) = v8;
  v12 = *(_QWORD *)(v7 - 424);
  sub_20E4A416C();
  v13 = *(_QWORD *)(v7 - 272);
  sub_20E4A3AA0();
  v14 = *(_QWORD *)(v7 - 456);
  v15 = *(_QWORD *)(v7 - 448);
  sub_20E4A4508();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 256) + 8))(v13, v15);
  v16 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 344) + 8))(v12, v4);
  v17 = (*v11)(v16);
  v19 = v18;
  LOBYTE(v15) = v20 & 1;
  v21 = *(_QWORD *)(v7 - 464);
  v22 = *(_QWORD *)(v7 - 408);
  v23 = *(_QWORD *)(v7 - 416);
  sub_20E4A42C8();
  sub_20E39D0D8(v17, v19, v15);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 328) + 8))(v14, v22);
  *(_QWORD *)(v7 - 144) = v22;
  *(_QWORD *)(v7 - 136) = v23;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v25 = *(_QWORD **)(v7 - 392);
  v26 = *(_QWORD *)(v7 - 360);
  sub_20E39D614(v25, v21, v26, OpaqueTypeConformance2);
  v27 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 352) + 8);
  v27(v21, v26);
  sub_20E39D618((uint64_t)v25, v26, *(_QWORD *)(v7 - 248));
  return ((uint64_t (*)(_QWORD *, uint64_t))v27)(v25, v26);
}

void sub_20E425740()
{
  type metadata accessor for _FlowStackTabViewBody();
}

uint64_t sub_20E42579C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  void (*v21)(_BYTE *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE v41[80];

  *(_QWORD *)(v6 - 272) = a1;
  v7 = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v6 - 264) = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v6 - 288) = &v41[-v8];
  *(_QWORD *)(v6 - 320) = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = &v41[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_QWORD *)(v6 - 352) = v11;
  swift_getAssociatedTypeWitness();
  *(_QWORD *)(v6 - 328) = v5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v6 - 304) = AssociatedTypeWitness;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v6 - 144) = v4;
  *(_QWORD *)(v6 - 136) = AssociatedTypeWitness;
  *(_QWORD *)(v6 - 128) = v2;
  *(_QWORD *)(v6 - 120) = v1;
  v14 = v2;
  v15 = v1;
  *(_QWORD *)(v6 - 112) = AssociatedConformanceWitness;
  v16 = sub_20E4A47C0();
  *(_QWORD *)(v6 - 280) = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  *(_QWORD *)(v6 - 344) = &v41[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = MEMORY[0x24BDAC7A8](v18);
  *(_QWORD *)(v6 - 336) = &v41[-v20];
  *(_QWORD *)(v6 - 312) = v3;
  *(_QWORD *)(v6 - 296) = (*(uint64_t (**)(double))(v3 + 16))(v19);
  v21 = *(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 320) + 16);
  v22 = *(_QWORD *)(v6 - 256);
  *(_QWORD *)(v6 - 360) = v4;
  v21(v11, v22, v4);
  v23 = v7;
  v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v25 = *(_QWORD *)(v6 - 288);
  v26 = *(_QWORD *)(v6 - 272);
  v24(v25, v22, v26);
  v27 = (*(unsigned __int8 *)(v23 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  v28 = (char *)swift_allocObject();
  *((_QWORD *)v28 + 2) = v4;
  *((_QWORD *)v28 + 3) = v14;
  v29 = *(_QWORD *)(v6 - 248);
  *((_QWORD *)v28 + 4) = *(_QWORD *)(v6 - 240);
  *((_QWORD *)v28 + 5) = v15;
  v30 = *(_QWORD *)(v6 - 232);
  *((_QWORD *)v28 + 6) = v29;
  *((_QWORD *)v28 + 7) = v30;
  *((_QWORD *)v28 + 8) = *(_QWORD *)(v6 - 328);
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 32))(&v28[v27], v25, v26);
  v31 = *(_QWORD *)(v6 - 344);
  sub_20E4A47B4();
  *(_QWORD *)(v6 - 152) = v29;
  v32 = MEMORY[0x212BBDF90](MEMORY[0x24BDF4A08], v16, v6 - 152);
  v33 = *(_QWORD **)(v6 - 336);
  sub_20E39D614(v33, v31, v16, v32);
  v34 = *(_QWORD *)(v6 - 280);
  v35 = *(uint64_t (**)(uint64_t, uint64_t))(v34 + 8);
  v36 = v35(v31, v16);
  v37 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v6 - 312) + 32))(v36);
  *(_QWORD *)(v6 - 160) = *(_QWORD *)(v6 - 296);
  *(_QWORD *)(v6 - 144) = v6 - 160;
  (*(void (**)(uint64_t, _QWORD *, uint64_t))(v34 + 16))(v31, v33, v16);
  *(_QWORD *)(v6 - 168) = v37;
  *(_QWORD *)(v6 - 136) = v31;
  *(_QWORD *)(v6 - 128) = v6 - 168;
  swift_retain();
  swift_retain();
  v38 = MEMORY[0x24BDF4780];
  *(_QWORD *)(v6 - 192) = MEMORY[0x24BDF4780];
  *(_QWORD *)(v6 - 184) = v16;
  *(_QWORD *)(v6 - 176) = v38;
  v39 = MEMORY[0x24BDF4760];
  *(_QWORD *)(v6 - 216) = MEMORY[0x24BDF4760];
  *(_QWORD *)(v6 - 208) = v32;
  *(_QWORD *)(v6 - 200) = v39;
  sub_20E39C54C((uint64_t *)(v6 - 144), 3uLL, v6 - 192);
  swift_release();
  v35((uint64_t)v33, v16);
  swift_release();
  swift_release();
  v35(v31, v16);
  return swift_release();
}

void sub_20E425B68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t AssociatedTypeWitness;

  swift_getAssociatedTypeWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  MEMORY[0x24BDAC7A8](v0);
  MEMORY[0x24BDAC7A8](v1);
  type metadata accessor for _FlowStackTabViewBody();
}

uint64_t sub_20E425C8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t (*v8)(_QWORD *, uint64_t);

  v7 = *(void (**)(uint64_t))(*(_QWORD *)(v6 - 160) + *(int *)(a1 + 80));
  swift_checkMetadataState();
  sub_20E4A61B8();
  v7(v2);
  (*(void (**)(uint64_t, _QWORD))(v4 + 8))(v2, *(_QWORD *)(v6 - 176));
  sub_20E39D614(v5, v3, v1, *(_QWORD *)(v6 - 200));
  v8 = *(uint64_t (**)(_QWORD *, uint64_t))(*(_QWORD *)(v6 - 184) + 8);
  v8(v3, v1);
  sub_20E39D618((uint64_t)v5, v1, *(_QWORD *)(v6 - 144));
  return v8(v5, v1);
}

void sub_20E425D44(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t AssociatedTypeWitness;
  uint64_t v14;
  uint64_t AssociatedConformanceWitness;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  double v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[8];
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;

  v58 = a1;
  v59 = a8;
  v64 = a7;
  v56 = a5;
  v57 = a6;
  v54 = a9;
  v55 = a3;
  v10 = *(_QWORD *)(a4 - 8);
  v60 = a4;
  v44[6] = v10;
  MEMORY[0x24BDAC7A8](a1);
  v44[5] = (char *)v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44[7] = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v12 + 8) + 8) + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v14 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v16 = sub_20E4A3AC4();
  v17 = MEMORY[0x24BDEDAB0];
  MEMORY[0x212BBDF90](MEMORY[0x24BDEDAB0], v16);
  v62 = sub_20E4A3E9C();
  v18 = sub_20E4A39D4();
  v19 = sub_20E4A60E0();
  v44[2] = AssociatedConformanceWitness;
  v82 = AssociatedConformanceWitness;
  MEMORY[0x212BBDF90](MEMORY[0x24BEE4AB0], v19, &v82);
  v20 = sub_20E4A3AC4();
  MEMORY[0x212BBDF90](v17, v20);
  v21 = sub_20E4A3E9C();
  v63 = v18;
  v61 = v21;
  v22 = sub_20E4A39D4();
  v44[1] = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v44[4] = (char *)v44 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v44[3] = (char *)v44 - v25;
  v47 = *(_QWORD *)(v14 - 8);
  v48 = v14;
  MEMORY[0x24BDAC7A8](v26);
  v46 = (char *)v44 - v27;
  v28 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)v44 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_20E4A60E0();
  v33 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v35 = (char *)v44 - v34;
  v36 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](v37);
  v45 = (char *)v44 - v38;
  v39 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A18D00);
  v53 = v22;
  v49 = v39;
  v40 = sub_20E4A3E00();
  v51 = *(_QWORD *)(v40 - 8);
  v52 = v40;
  v41 = MEMORY[0x24BDAC7A8](v40);
  v50 = (char *)v44 - v42;
  v43 = v58;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v28 + 16))(v31, v58, a2, v41);
  v65 = a2;
  v66 = v55;
  v67 = v60;
  v68 = v56;
  v69 = v57;
  v70 = v64;
  v71 = v59;
  v72 = v43;
  sub_20E4A5CD8();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v31, a2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v35, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v33 + 8))(v35, v32);
    v73 = 0;
    v74 = 0xE000000000000000;
    sub_20E4A61A0();
    v80 = v73;
    v81 = v74;
    sub_20E4A5C6C();
    v73 = a2;
    v74 = v55;
    v75 = v60;
    v76 = v56;
    v77 = v57;
    v78 = v64;
    v79 = v59;
    type metadata accessor for _FlowStackTabViewBody();
  }
  v44[0] = v36;
  (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v45, v35, AssociatedTypeWitness);
  v73 = a2;
  v74 = v55;
  v75 = v60;
  v76 = v56;
  v77 = v57;
  v78 = v64;
  v79 = v59;
  type metadata accessor for _FlowStackTabViewBody();
}

void sub_20E426358(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  void (*v18)(uint64_t, uint64_t);

  v6 = v1[5];
  (*(void (**)(uint64_t))(v1[21] + *(int *)(a1 + 84)))(v3);
  v7 = v1[9];
  sub_20E4A61B8();
  v8 = v1[4];
  v9 = v1[11];
  sub_20E424DD8(v7, 1, v9, v5, v1[2], v8);
  (*(void (**)(uint64_t, uint64_t))(v1[10] + 8))(v7, v9);
  (*(void (**)(uint64_t, uint64_t))(v1[6] + 8))(v6, v2);
  v10 = MEMORY[0x24BDEFB48];
  v11 = MEMORY[0x212BBDF90](MEMORY[0x24BDEFB48], v1[25]);
  v1[40] = v5;
  v1[41] = v11;
  v12 = MEMORY[0x24BDED308];
  v13 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v1[26], v1 + 40);
  v14 = MEMORY[0x212BBDF90](v10, v1[24]);
  v1[38] = v13;
  v1[39] = v14;
  v15 = v1[16];
  v16 = MEMORY[0x212BBDF90](v12, v15, v1 + 38);
  v17 = (_QWORD *)v1[3];
  sub_20E39D614(v17, v8, v15, v16);
  v18 = *(void (**)(uint64_t, uint64_t))(v1[1] + 8);
  v18(v8, v15);
  sub_20E39D618((uint64_t)v17, v15, v8);
  sub_20E39D010((unint64_t *)&qword_254A18D08, &qword_254A18D00, (uint64_t)&protocol conformance descriptor for _RequirementFailureView<A, B>);
  sub_20E3DC6B0(v8, v15);
  v18(v8, v15);
  v18((uint64_t)v17, v15);
  (*(void (**)(_QWORD, uint64_t))(*v1 + 8))(v1[8], v4);
  JUMPOUT(0x20E4264F4);
}

void sub_20E4265CC()
{
  uint64_t AssociatedTypeWitness;
  uint64_t v1;

  swift_getAssociatedTypeWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  MEMORY[0x24BDAC7A8](v1);
  swift_checkMetadataState();
  sub_20E4A61B8();
  type metadata accessor for _FlowStackTabViewBody();
}

uint64_t sub_20E4266E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  void (*v6)(uint64_t, uint64_t);

  v4 = sub_20E4A4778();
  MEMORY[0x212BBBCE0](v4);
  swift_getAssociatedConformanceWitness();
  v5 = sub_20E4A5C0C();
  v6 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v6(v3, v1);
  v6(v0, v1);
  return v5 & 1;
}

void sub_20E426788()
{
  type metadata accessor for _FlowStackTabViewBody();
}

uint64_t sub_20E426804(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  void (*v25)(_BYTE *, uint64_t, uint64_t, double);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t OpaqueTypeConformance2;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  void (*v48)(uint64_t, uint64_t);
  _BYTE v50[80];

  v7 = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v6 - 248) = v7;
  *(_QWORD *)(v6 - 240) = a1;
  *(_QWORD *)(v6 - 232) = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](a1);
  *(_QWORD *)(v6 - 256) = &v50[-v8];
  *(_QWORD *)(v6 - 264) = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = &v50[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_QWORD *)(v6 - 360) = v11;
  swift_getAssociatedTypeWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v6 - 144) = v4;
  *(_QWORD *)(v6 - 136) = v5;
  *(_QWORD *)(v6 - 128) = v3;
  *(_QWORD *)(v6 - 120) = v2;
  MEMORY[0x212BBDF30](255, v6 - 144, MEMORY[0x24BDF3838], 0);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v14 = sub_20E4A3AC4();
  v15 = MEMORY[0x24BDEDAB0];
  MEMORY[0x212BBDF90](MEMORY[0x24BDEDAB0], v14);
  *(_QWORD *)(v6 - 304) = sub_20E4A3E9C();
  *(_QWORD *)(v6 - 344) = sub_20E4A39D4();
  *(_QWORD *)(v6 - 312) = AssociatedTypeWitness;
  v16 = sub_20E4A60E0();
  *(_QWORD *)(v6 - 152) = AssociatedConformanceWitness;
  MEMORY[0x212BBDF90](MEMORY[0x24BEE4AB0], v16, v6 - 152);
  v17 = sub_20E4A3AC4();
  MEMORY[0x212BBDF90](v15, v17);
  *(_QWORD *)(v6 - 336) = sub_20E4A3E9C();
  v18 = sub_20E4A39D4();
  *(_QWORD *)(v6 - 328) = v18;
  *(_QWORD *)(v6 - 144) = v1;
  *(_QWORD *)(v6 - 136) = AssociatedTypeWitness;
  v19 = *(_QWORD *)(v6 - 208);
  *(_QWORD *)(v6 - 128) = v18;
  *(_QWORD *)(v6 - 120) = v19;
  *(_QWORD *)(v6 - 112) = AssociatedConformanceWitness;
  v20 = sub_20E4A47C0();
  *(_QWORD *)(v6 - 296) = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  *(_QWORD *)(v6 - 352) = &v50[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v23 = MEMORY[0x24BDAC7A8](v22);
  *(_QWORD *)(v6 - 320) = &v50[-v24];
  v25 = *(void (**)(_BYTE *, uint64_t, uint64_t, double))(*(_QWORD *)(v6 - 264) + 16);
  v26 = *(_QWORD *)(v6 - 224);
  v27 = v1;
  *(_QWORD *)(v6 - 368) = v1;
  v25(v11, v26, v1, v23);
  v28 = *(_QWORD *)(v6 - 256);
  v29 = *(_QWORD *)(v6 - 248);
  v30 = *(_QWORD *)(v6 - 240);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16))(v28, v26, v30);
  v31 = v29;
  v32 = (*(unsigned __int8 *)(v29 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  v33 = (char *)swift_allocObject();
  *((_QWORD *)v33 + 2) = v27;
  *((_QWORD *)v33 + 3) = v5;
  v34 = v5;
  v35 = *(_QWORD *)(v6 - 280);
  *((_QWORD *)v33 + 4) = v35;
  *((_QWORD *)v33 + 5) = v19;
  v36 = *(_QWORD *)(v6 - 288);
  v37 = *(_QWORD *)(v6 - 272);
  *((_QWORD *)v33 + 6) = v36;
  *((_QWORD *)v33 + 7) = v37;
  *((_QWORD *)v33 + 8) = *(_QWORD *)(v6 - 200);
  (*(void (**)(char *, uint64_t, uint64_t))(v31 + 32))(&v33[v32], v28, v30);
  *(_QWORD *)(v6 - 144) = v35;
  *(_QWORD *)(v6 - 136) = v34;
  *(_QWORD *)(v6 - 128) = v37;
  *(_QWORD *)(v6 - 120) = v36;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v39 = MEMORY[0x24BDEFB48];
  v40 = MEMORY[0x212BBDF90](MEMORY[0x24BDEFB48], *(_QWORD *)(v6 - 304));
  *(_QWORD *)(v6 - 168) = OpaqueTypeConformance2;
  *(_QWORD *)(v6 - 160) = v40;
  v41 = MEMORY[0x24BDED308];
  v42 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], *(_QWORD *)(v6 - 344), v6 - 168);
  v43 = MEMORY[0x212BBDF90](v39, *(_QWORD *)(v6 - 336));
  *(_QWORD *)(v6 - 184) = v42;
  *(_QWORD *)(v6 - 176) = v43;
  v44 = MEMORY[0x212BBDF90](v41, *(_QWORD *)(v6 - 328), v6 - 184);
  v45 = *(_QWORD *)(v6 - 352);
  sub_20E4A47B4();
  *(_QWORD *)(v6 - 192) = v44;
  v46 = MEMORY[0x212BBDF90](MEMORY[0x24BDF4A08], v20, v6 - 192);
  v47 = *(_QWORD **)(v6 - 320);
  sub_20E39D614(v47, v45, v20, v46);
  v48 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 296) + 8);
  v48(v45, v20);
  sub_20E39D618((uint64_t)v47, v20, *(_QWORD *)(v6 - 216));
  return ((uint64_t (*)(_QWORD *, uint64_t))v48)(v47, v20);
}

void sub_20E426C88(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t AssociatedConformanceWitness;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[12];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v35 = a6;
  v33 = a3;
  v37 = a2;
  v39 = a1;
  v42 = a9;
  v30[11] = swift_getAssociatedTypeWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v41 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v38 = (char *)v30 - v15;
  v36 = *(_QWORD *)(a5 - 8);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v30[9] = (char *)v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = a5;
  v44 = a4;
  v30[1] = a4;
  v45 = a8;
  v46 = a7;
  v19 = MEMORY[0x212BBDF30](0, &v43, MEMORY[0x24BDF3838], 0, v17);
  v40 = *(_QWORD *)(v19 - 8);
  v30[10] = v19;
  MEMORY[0x24BDAC7A8](v19);
  v30[5] = (char *)v30 - v20;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v30[7] = AssociatedTypeWitness;
  v22 = AssociatedConformanceWitness;
  v30[6] = AssociatedConformanceWitness;
  v23 = sub_20E4A3AC4();
  v24 = MEMORY[0x24BDEDAB0];
  MEMORY[0x212BBDF90](MEMORY[0x24BDEDAB0], v23);
  v34 = sub_20E4A3E9C();
  v30[4] = sub_20E4A39D4();
  v25 = sub_20E4A60E0();
  v50 = v22;
  MEMORY[0x212BBDF90](MEMORY[0x24BEE4AB0], v25, &v50);
  v26 = sub_20E4A3AC4();
  MEMORY[0x212BBDF90](v24, v26);
  v30[8] = sub_20E4A3E9C();
  v31 = sub_20E4A39D4();
  v32 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v30[2] = (char *)v30 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28);
  v30[3] = (char *)v30 - v29;
  v43 = v33;
  v44 = a4;
  v45 = a5;
  v46 = v35;
  v47 = a7;
  v48 = a8;
  v49 = a10;
  type metadata accessor for _FlowStackTabViewBody();
}

uint64_t sub_20E426FB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t OpaqueTypeConformance2;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  void (*v31)(uint64_t, uint64_t);

  v8 = *(_QWORD *)(v7 - 320);
  v9 = *(_QWORD *)(v7 - 392);
  v10 = *(_QWORD *)(v7 - 304);
  (*(void (**)(uint64_t))(v8 + *(int *)(a1 + 84)))(v10);
  v11 = *(_QWORD *)(v7 - 456);
  *(_QWORD *)(v7 - 256) = v1;
  *(_QWORD *)(v7 - 248) = v11;
  v12 = v3;
  *(_QWORD *)(v7 - 240) = v3;
  *(_QWORD *)(v7 - 232) = v5;
  v13 = v6;
  *(_QWORD *)(v7 - 224) = v6;
  *(_QWORD *)(v7 - 216) = v2;
  *(_QWORD *)(v7 - 208) = v4;
  *(_QWORD *)(v7 - 200) = v8;
  *(_QWORD *)(v7 - 192) = v10;
  v14 = *(_QWORD *)(v7 - 424);
  v15 = v12;
  v16 = v11;
  v17 = v13;
  sub_20E4A4490();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 328) + 8))(v9, v15);
  swift_checkMetadataState();
  v18 = *(_QWORD *)(v7 - 312);
  sub_20E4A61B8();
  *(_QWORD *)(v7 - 152) = v15;
  *(_QWORD *)(v7 - 144) = v16;
  *(_QWORD *)(v7 - 136) = v2;
  *(_QWORD *)(v7 - 128) = v17;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v20 = *(_QWORD *)(v7 - 448);
  v21 = *(_QWORD *)(v7 - 384);
  v22 = *(_QWORD *)(v7 - 408);
  sub_20E424DD8(v18, 1, v22, OpaqueTypeConformance2, *(_QWORD *)(v7 - 416), v20);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 288) + 8))(v18, v22);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 296) + 8))(v14, v21);
  v23 = MEMORY[0x24BDEFB48];
  v24 = MEMORY[0x212BBDF90](MEMORY[0x24BDEFB48], *(_QWORD *)(v7 - 344));
  *(_QWORD *)(v7 - 168) = OpaqueTypeConformance2;
  *(_QWORD *)(v7 - 160) = v24;
  v25 = MEMORY[0x24BDED308];
  v26 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], *(_QWORD *)(v7 - 432), v7 - 168);
  v27 = MEMORY[0x212BBDF90](v23, *(_QWORD *)(v7 - 400));
  *(_QWORD *)(v7 - 184) = v26;
  *(_QWORD *)(v7 - 176) = v27;
  v28 = *(_QWORD *)(v7 - 368);
  v29 = MEMORY[0x212BBDF90](v25, v28, v7 - 184);
  v30 = *(_QWORD **)(v7 - 440);
  sub_20E39D614(v30, v20, v28, v29);
  v31 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 360) + 8);
  v31(v20, v28);
  sub_20E39D618((uint64_t)v30, v28, *(_QWORD *)(v7 - 280));
  return ((uint64_t (*)(_QWORD *, uint64_t))v31)(v30, v28);
}

void sub_20E4271FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t AssociatedTypeWitness;

  swift_getAssociatedTypeWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  MEMORY[0x24BDAC7A8](v0);
  MEMORY[0x24BDAC7A8](v1);
  type metadata accessor for _FlowStackTabViewBody();
}

uint64_t sub_20E427320(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t (*v8)(_QWORD *, uint64_t);

  v7 = *(void (**)(uint64_t))(*(_QWORD *)(v6 - 160) + *(int *)(a1 + 80));
  swift_checkMetadataState();
  sub_20E4A61B8();
  v7(v2);
  (*(void (**)(uint64_t, _QWORD))(v4 + 8))(v2, *(_QWORD *)(v6 - 176));
  sub_20E39D614(v5, v3, v1, *(_QWORD *)(v6 - 200));
  v8 = *(uint64_t (**)(_QWORD *, uint64_t))(*(_QWORD *)(v6 - 184) + 8);
  v8(v3, v1);
  sub_20E39D618((uint64_t)v5, v1, *(_QWORD *)(v6 - 144));
  return v8(v5, v1);
}

uint64_t sub_20E4273E8()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_getAssociatedTypeWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2 = sub_20E4A4778();
  v3 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v4 = (v3 + 88) & ~v3;
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v0 + v4 + *(int *)(v2 + 32), AssociatedTypeWitness);
  return swift_deallocObject();
}

uint64_t sub_20E4274D0()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  sub_20E4A4778();
  return sub_20E423E34();
}

uint64_t sub_20E4275B0()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_getAssociatedTypeWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2 = sub_20E4A4778();
  v3 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v4 = (v3 + 88) & ~v3;
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v0 + v4 + *(int *)(v2 + 32), AssociatedTypeWitness);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_20E4276B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(sub_20E4A4778() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_20E423EC0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), v1 + v4, *(uint64_t (**)(uint64_t))(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_20E4277AC(uint64_t a1)
{
  return sub_20E428DC8(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_20E422CC0) & 1;
}

uint64_t sub_20E4277DC()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;

  v0 = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    swift_getAssociatedTypeWitness();
    v0 = sub_20E4A4778();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return v0;
}

uint64_t *sub_20E4278E4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  swift_getAssociatedTypeWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = (v10 | 7) + v7;
  v12 = ((v10 + 16) & ~v10) + *(_QWORD *)(v9 + 64);
  v13 = v10 | *(_DWORD *)(v6 + 80) & 0xF8;
  if (v13 > 7
    || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v9 + 80)) & 0x100000) != 0
    || ((((((v12 + (v11 & ~(v10 | 7)) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 79) & 0xFFFFFFFFFFFFFFF8)
     + 9 > 0x18)
  {
    v16 = *a2;
    *a1 = *a2;
    v41 = v16 + (((v13 | 7) + 16) & ~(unint64_t)(v13 | 7));
    swift_retain();
  }
  else
  {
    v17 = ~(v10 | 7);
    v43 = AssociatedTypeWitness;
    v45 = a1;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    v18 = ((unint64_t)a1 + v11) & v17;
    v19 = ((unint64_t)a2 + v11) & v17;
    *(_QWORD *)v18 = *(_QWORD *)v19;
    v20 = (_QWORD *)((v18 + 15) & 0xFFFFFFFFFFFFFFF8);
    v21 = (_QWORD *)((v19 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v20 = *v21;
    v22 = ((unint64_t)v20 + v10 + 8) & ~v10;
    v23 = ((unint64_t)v21 + v10 + 8) & ~v10;
    v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
    swift_retain();
    swift_retain();
    v24(v22, v23, v43);
    v25 = (_QWORD *)(((v18 | 7) + v12) & 0xFFFFFFFFFFFFFFF8);
    v26 = (_QWORD *)(((v19 | 7) + v12) & 0xFFFFFFFFFFFFFFF8);
    v27 = v26[1];
    *v25 = *v26;
    v25[1] = v27;
    v28 = (_QWORD *)(((unint64_t)v25 + 23) & 0xFFFFFFFFFFFFFFF8);
    v29 = (_QWORD *)(((unint64_t)v26 + 23) & 0xFFFFFFFFFFFFFFF8);
    v30 = v29[1];
    *v28 = *v29;
    v28[1] = v30;
    v31 = ((unint64_t)v28 + 23) & 0xFFFFFFFFFFFFFFF8;
    v32 = ((unint64_t)v29 + 23) & 0xFFFFFFFFFFFFFFF8;
    v33 = *(_QWORD *)(v32 + 8);
    v44 = *(_QWORD *)v32;
    v34 = *(_QWORD *)(v32 + 16);
    v35 = *(_QWORD *)(v32 + 24);
    v36 = *(_QWORD *)(v32 + 32);
    v37 = *(_QWORD *)(v32 + 40);
    LOBYTE(v19) = *(_BYTE *)(v32 + 48);
    swift_retain();
    swift_retain();
    sub_20E427B6C(v44, v33, v34, v35, v36, v37, v19);
    *(_QWORD *)v31 = v44;
    *(_QWORD *)(v31 + 8) = v33;
    *(_QWORD *)(v31 + 16) = v34;
    *(_QWORD *)(v31 + 24) = v35;
    *(_QWORD *)(v31 + 32) = v36;
    *(_QWORD *)(v31 + 40) = v37;
    *(_BYTE *)(v31 + 48) = v19;
    v38 = ((unint64_t)v28 + 79) & 0xFFFFFFFFFFFFFFF8;
    v39 = ((unint64_t)v29 + 79) & 0xFFFFFFFFFFFFFFF8;
    v40 = *(_QWORD *)v39;
    LOBYTE(v31) = *(_BYTE *)(v39 + 8);
    sub_20E39CFAC(*(_QWORD *)v39, v31);
    *(_QWORD *)v38 = v40;
    *(_BYTE *)(v38 + 8) = v31;
    return v45;
  }
  return (uint64_t *)v41;
}

uint64_t sub_20E427B6C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if ((a7 & 1) != 0)
    return sub_20E405808(result);
  else
    return swift_retain();
}

uint64_t sub_20E427B78(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(uint64_t, _QWORD))(v3 + 8))(a1, *(_QWORD *)(a2 + 16));
  v4 = *(_QWORD *)(v3 + 64) + a1;
  swift_getAssociatedTypeWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v4 + (v7 | 7)) & ~(v7 | 7);
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))((v7 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v7, AssociatedTypeWitness);
  v9 = (((v7 + 16) & ~v7) + *(_QWORD *)(v6 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  v10 = (v9 + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  v11 = (v10 + 23) & 0xFFFFFFFFFFFFFFF8;
  sub_20E427CBC(*(_QWORD *)v11, *(_QWORD *)(v11 + 8), *(_QWORD *)(v11 + 16), *(_QWORD *)(v11 + 24), *(_QWORD *)(v11 + 32), *(_QWORD *)(v11 + 40), *(_BYTE *)(v11 + 48));
  return sub_20E39CED8(*(_QWORD *)((v10 + 79) & 0xFFFFFFFFFFFFFFF8), *(_BYTE *)(((v10 + 79) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_20E427CBC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if ((a7 & 1) != 0)
    return sub_20E427CC8(result);
  else
    return swift_release();
}

uint64_t sub_20E427CC8(uint64_t result)
{
  if (result)
  {
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_20E427D04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v36;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v4 + 16))();
  v6 = *(_QWORD *)(v4 + 64);
  swift_getAssociatedTypeWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v9 | 7) + v6;
  v12 = (_QWORD *)((v10 + a2) & ~(v9 | 7));
  v11 = (_QWORD *)((v10 + a1) & ~(v9 | 7));
  *v11 = *v12;
  v13 = (_QWORD *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  v14 = (_QWORD *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v13 = *v14;
  v15 = ((unint64_t)v13 + v9 + 8) & ~v9;
  v16 = ((unint64_t)v14 + v9 + 8) & ~v9;
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  swift_retain();
  swift_retain();
  v17(v15, v16, AssociatedTypeWitness);
  v18 = *(_QWORD *)(v8 + 64) + ((v9 + 16) & ~v9) + 7;
  v19 = (_QWORD *)(((unint64_t)v11 + v18) & 0xFFFFFFFFFFFFFFF8);
  v20 = (_QWORD *)(((unint64_t)v12 + v18) & 0xFFFFFFFFFFFFFFF8);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  v22 = (_QWORD *)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8);
  v23 = (_QWORD *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  v25 = ((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFFFF8;
  v26 = ((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8;
  v27 = *(_QWORD *)(v26 + 8);
  v36 = *(_QWORD *)v26;
  v28 = *(_QWORD *)(v26 + 16);
  v29 = *(_QWORD *)(v26 + 24);
  v30 = *(_QWORD *)(v26 + 32);
  v31 = *(_QWORD *)(v26 + 40);
  LOBYTE(v12) = *(_BYTE *)(v26 + 48);
  swift_retain();
  swift_retain();
  sub_20E427B6C(v36, v27, v28, v29, v30, v31, (char)v12);
  *(_QWORD *)v25 = v36;
  *(_QWORD *)(v25 + 8) = v27;
  *(_QWORD *)(v25 + 16) = v28;
  *(_QWORD *)(v25 + 24) = v29;
  *(_QWORD *)(v25 + 32) = v30;
  *(_QWORD *)(v25 + 40) = v31;
  *(_BYTE *)(v25 + 48) = (_BYTE)v12;
  v32 = ((unint64_t)v22 + 79) & 0xFFFFFFFFFFFFFFF8;
  v33 = ((unint64_t)v23 + 79) & 0xFFFFFFFFFFFFFFF8;
  v34 = *(_QWORD *)v33;
  LOBYTE(v25) = *(_BYTE *)(v33 + 8);
  sub_20E39CFAC(*(_QWORD *)v33, v25);
  *(_QWORD *)v32 = v34;
  *(_BYTE *)(v32 + 8) = v25;
  return a1;
}

uint64_t sub_20E427F0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v4 + 24))();
  v6 = *(_QWORD *)(v4 + 64);
  swift_getAssociatedTypeWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v9 | 7) + v6;
  v11 = (_QWORD *)((v10 + a1) & ~(v9 | 7));
  v12 = (_QWORD *)((v10 + a2) & ~(v9 | 7));
  *v11 = *v12;
  swift_retain();
  swift_release();
  v13 = (_QWORD *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  v14 = (_QWORD *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v13 = *v14;
  swift_retain();
  swift_release();
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 24))(((unint64_t)v13 + v9 + 8) & ~v9, ((unint64_t)v14 + v9 + 8) & ~v9, AssociatedTypeWitness);
  v15 = *(_QWORD *)(v8 + 64) + ((v9 + 16) & ~v9) + 7;
  v16 = (_QWORD *)(((unint64_t)v11 + v15) & 0xFFFFFFFFFFFFFFF8);
  v17 = (_QWORD *)(((unint64_t)v12 + v15) & 0xFFFFFFFFFFFFFFF8);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  swift_retain();
  swift_release();
  v19 = (_QWORD *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8);
  v20 = (_QWORD *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  swift_retain();
  swift_release();
  v22 = ((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8;
  v23 = ((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8;
  v24 = *(_QWORD *)v23;
  v25 = *(_QWORD *)(v23 + 8);
  v26 = *(_QWORD *)(v23 + 16);
  v27 = *(_QWORD *)(v23 + 24);
  v28 = *(_QWORD *)(v23 + 32);
  v29 = *(_QWORD *)(v23 + 40);
  LOBYTE(v14) = *(_BYTE *)(v23 + 48);
  sub_20E427B6C(*(_QWORD *)v23, v25, v26, v27, v28, v29, (char)v14);
  v30 = *(_QWORD *)v22;
  v31 = *(_QWORD *)(v22 + 8);
  v32 = *(_QWORD *)(v22 + 16);
  v33 = *(_QWORD *)(v22 + 24);
  v34 = *(_QWORD *)(v22 + 32);
  v35 = *(_QWORD *)(v22 + 40);
  v36 = *(_BYTE *)(v22 + 48);
  *(_QWORD *)v22 = v24;
  *(_QWORD *)(v22 + 8) = v25;
  *(_QWORD *)(v22 + 16) = v26;
  *(_QWORD *)(v22 + 24) = v27;
  *(_QWORD *)(v22 + 32) = v28;
  *(_QWORD *)(v22 + 40) = v29;
  *(_BYTE *)(v22 + 48) = (_BYTE)v14;
  sub_20E427CBC(v30, v31, v32, v33, v34, v35, v36);
  v37 = ((unint64_t)v19 + 79) & 0xFFFFFFFFFFFFFFF8;
  v38 = ((unint64_t)v20 + 79) & 0xFFFFFFFFFFFFFFF8;
  v39 = *(_QWORD *)v38;
  LOBYTE(v25) = *(_BYTE *)(v38 + 8);
  sub_20E39CFAC(*(_QWORD *)v38, v25);
  v40 = *(_QWORD *)v37;
  v41 = *(_BYTE *)(v37 + 8);
  *(_QWORD *)v37 = v39;
  *(_BYTE *)(v37 + 8) = v25;
  sub_20E39CED8(v40, v41);
  return a1;
}

uint64_t sub_20E42814C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  _OWORD *v18;
  _OWORD *v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  __int128 v23;
  __int128 v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(uint64_t, uint64_t, _QWORD))(v5 + 32))(a1, a2, *(_QWORD *)(a3 + 16));
  v6 = *(_QWORD *)(v5 + 64);
  swift_getAssociatedTypeWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v9 | 7) + v6;
  v11 = (_QWORD *)((v10 + a1) & ~(v9 | 7));
  v12 = (_QWORD *)((v10 + a2) & ~(v9 | 7));
  *v11 = *v12;
  v13 = (_QWORD *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  v14 = (_QWORD *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v13 = *v14;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 32))(((unint64_t)v13 + v9 + 8) & ~v9, ((unint64_t)v14 + v9 + 8) & ~v9, AssociatedTypeWitness);
  v15 = *(_QWORD *)(v8 + 64) + ((v9 + 16) & ~v9) + 7;
  v16 = (_OWORD *)(((unint64_t)v11 + v15) & 0xFFFFFFFFFFFFFFF8);
  v17 = (_OWORD *)(((unint64_t)v12 + v15) & 0xFFFFFFFFFFFFFFF8);
  *v16 = *v17;
  v18 = (_OWORD *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8);
  v19 = (_OWORD *)(((unint64_t)v17 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v18 = *v19;
  v20 = ((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8;
  v21 = ((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8;
  v22 = *(_BYTE *)(v21 + 48);
  v24 = *(_OWORD *)(v21 + 16);
  v23 = *(_OWORD *)(v21 + 32);
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *(_OWORD *)(v20 + 16) = v24;
  *(_OWORD *)(v20 + 32) = v23;
  *(_BYTE *)(v20 + 48) = v22;
  v25 = ((unint64_t)v18 + 79) & 0xFFFFFFFFFFFFFFF8;
  v26 = ((unint64_t)v19 + 79) & 0xFFFFFFFFFFFFFFF8;
  v27 = *(_QWORD *)v26;
  *(_BYTE *)(v25 + 8) = *(_BYTE *)(v26 + 8);
  *(_QWORD *)v25 = v27;
  return a1;
}

uint64_t sub_20E4282C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  _OWORD *v16;
  unint64_t v17;
  unint64_t v18;
  _OWORD *v19;
  unint64_t v20;
  char v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  __int128 v30;
  __int128 v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  char v35;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(uint64_t, uint64_t, _QWORD))(v5 + 40))(a1, a2, *(_QWORD *)(a3 + 16));
  v6 = *(_QWORD *)(v5 + 64);
  swift_getAssociatedTypeWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v9 | 7) + v6;
  v11 = (_QWORD *)((v10 + a1) & ~(v9 | 7));
  v12 = (_QWORD *)((v10 + a2) & ~(v9 | 7));
  *v11 = *v12;
  swift_release();
  v13 = (_QWORD *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFFFF8);
  v14 = (_QWORD *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v13 = *v14;
  swift_release();
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 40))(((unint64_t)v13 + v9 + 8) & ~v9, ((unint64_t)v14 + v9 + 8) & ~v9, AssociatedTypeWitness);
  v15 = *(_QWORD *)(v8 + 64) + ((v9 + 16) & ~v9) + 7;
  v16 = (_OWORD *)(((unint64_t)v11 + v15) & 0xFFFFFFFFFFFFFFF8);
  v17 = (unint64_t)v12 + v15;
  v18 = (v17 & 0xFFFFFFFFFFFFFFF8) + 23;
  *v16 = *(_OWORD *)(v17 & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  v19 = (_OWORD *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8);
  v18 &= 0xFFFFFFFFFFFFFFF8;
  *v19 = *(_OWORD *)v18;
  swift_release();
  v20 = (v18 + 23) & 0xFFFFFFFFFFFFFFF8;
  v21 = *(_BYTE *)(v20 + 48);
  v22 = ((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8;
  v23 = *(_QWORD *)v22;
  v24 = *(_QWORD *)(v22 + 8);
  v25 = *(_QWORD *)(v22 + 16);
  v26 = *(_QWORD *)(v22 + 24);
  v27 = *(_QWORD *)(v22 + 32);
  v28 = *(_QWORD *)(v22 + 40);
  v29 = *(_BYTE *)(v22 + 48);
  v30 = *(_OWORD *)(v20 + 16);
  v31 = *(_OWORD *)(v20 + 32);
  *(_OWORD *)v22 = *(_OWORD *)v20;
  *(_OWORD *)(v22 + 16) = v30;
  *(_OWORD *)(v22 + 32) = v31;
  *(_BYTE *)(v22 + 48) = v21;
  sub_20E427CBC(v23, v24, v25, v26, v27, v28, v29);
  v32 = ((unint64_t)v19 + 79) & 0xFFFFFFFFFFFFFFF8;
  v33 = *(_BYTE *)(((v18 + 79) & 0xFFFFFFFFFFFFFFF8) + 8);
  v34 = *(_QWORD *)v32;
  v35 = *(_BYTE *)(v32 + 8);
  *(_QWORD *)v32 = *(_QWORD *)((v18 + 79) & 0xFFFFFFFFFFFFFFF8);
  *(_BYTE *)(v32 + 8) = v33;
  sub_20E39CED8(v34, v35);
  return a1;
}

uint64_t sub_20E42849C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t *v21;
  uint64_t v22;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  swift_getAssociatedTypeWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= 0x7FFFFFFF)
    v11 = 0x7FFFFFFF;
  else
    v11 = *(_DWORD *)(v9 + 84);
  if (v11 <= v7)
    v12 = v7;
  else
    v12 = v11;
  if (!a2)
    return 0;
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = v13 | 7;
  v15 = (v13 | 7) + *(_QWORD *)(v6 + 64);
  if (v12 < a2)
  {
    v16 = ((((((*(_QWORD *)(v9 + 64) + ((v13 + 16) & ~v13) + (v15 & ~v14) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
          + 79) & 0xFFFFFFFFFFFFFFF8)
        + 9;
    if (v16 < 4)
      v17 = ((a2 - v12 + 255) >> (8 * v16)) + 1;
    else
      v17 = 2;
    if (v17 >= 0x10000)
      v18 = 4;
    else
      v18 = 2;
    if (v17 < 0x100)
      v18 = 1;
    if (v17 >= 2)
      v19 = v18;
    else
      v19 = 0;
    __asm { BR              X0 }
  }
  if (v7 >= v11)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, v7, v5);
  v21 = (uint64_t *)((((v15 + a1) & ~v14) + 15) & 0xFFFFFFFFFFFFFFF8);
  if ((v10 & 0x80000000) != 0)
    return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v9 + 48))(((unint64_t)v21 + v13 + 8) & ~v13, v10, AssociatedTypeWitness);
  v22 = *v21;
  if ((unint64_t)*v21 >= 0xFFFFFFFF)
    LODWORD(v22) = -1;
  return (v22 + 1);
}

void sub_20E4286B4(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  size_t v13;
  unsigned int v14;
  int v15;
  int v16;
  unsigned int v17;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  if (*(_DWORD *)(v9 + 84) <= 0x7FFFFFFFu)
    v10 = 0x7FFFFFFF;
  else
    v10 = *(_DWORD *)(v9 + 84);
  if (v10 <= v8)
    v11 = v8;
  else
    v11 = v10;
  v12 = *(unsigned __int8 *)(v9 + 80);
  v13 = ((((((((v12 + 16) & ~v12) + *(_QWORD *)(v9 + 64) + (((v12 | 7) + *(_QWORD *)(v7 + 64)) & ~(v12 | 7)) + 7) & 0xFFFFFFFFFFFFFFF8)
          + 23) & 0xFFFFFFFFFFFFFFF8)
        + 79) & 0xFFFFFFFFFFFFFFF8)
      + 9;
  if (v11 >= a3)
  {
    v16 = 0;
    if (v11 >= a2)
      goto LABEL_20;
  }
  else
  {
    if (v13 <= 3)
      v14 = ((a3 - v11 + 255) >> (8 * v13)) + 1;
    else
      v14 = 2;
    if (v14 >= 0x10000)
      v15 = 4;
    else
      v15 = 2;
    if (v14 < 0x100)
      v15 = 1;
    if (v14 >= 2)
      v16 = v15;
    else
      v16 = 0;
    if (v11 >= a2)
LABEL_20:
      __asm { BR              X16 }
  }
  if (v13 >= 4)
    v17 = ~v11 + a2;
  else
    v17 = (~(_BYTE)v11 + a2);
  bzero(a1, v13);
  if ((_DWORD)v13 == 1)
    *a1 = v17;
  else
    *(_DWORD *)a1 = v17;
  __asm { BR              X10 }
}

void sub_20E428878()
{
  char v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v1 + v2) = v0;
}

void sub_20E428880()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v1 + v2) = 0;
  if (v0)
    JUMPOUT(0x20E428888);
}

void sub_20E4288F4()
{
  char v0;
  _BYTE *v1;

  *v1 = v0;
}

void sub_20E428928()
{
  __int16 v0;
  uint64_t v1;
  uint64_t v2;

  *(_WORD *)(v1 + v2) = v0;
}

void sub_20E428930()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v1 + v2) = v0;
}

void sub_20E428938(uint64_t a1, size_t a2)
{
  void *v2;
  int v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;

  *(_WORD *)(v8 + v10) = 0;
  if (v7)
  {
    if (v9 >= v4)
      JUMPOUT(0x20E4288FCLL);
    v2 = (void *)((v5 + v8) & v6);
    if (v4 >= v7)
      JUMPOUT(0x20E428944);
    if ((_DWORD)a2)
    {
      if (a2 <= 3)
        v3 = a2;
      else
        v3 = 4;
      bzero(v2, a2);
      __asm { BR              X10 }
    }
  }
}

void sub_20E428980()
{
  int v0;
  uint64_t v1;

  *(_WORD *)v1 = v0;
  *(_BYTE *)(v1 + 2) = BYTE2(v0);
}

void sub_20E428990()
{
  __int16 v0;
  _WORD *v1;

  *v1 = v0;
}

void sub_20E4289B8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[3];

  v1 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  v3 = a1[3];
  v5 = a1[5];
  v8 = a1[4];
  v6 = a1[6];
  type metadata accessor for FlowStackTabsAuthority.Tab(255, *a1, v3, v8);
  sub_20E4A5D98();
  sub_20E4A4004();
  v7 = sub_20E4A39D4();
  v16[0] = v5;
  v16[1] = sub_20E41EFCC();
  v9 = v7;
  v10 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v7, v16);
  MEMORY[0x212BBDF30](255, &v9, MEMORY[0x24BDF2F10], 0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A1A700);
  sub_20E4A39D4();
  v9 = v1;
  v10 = v2;
  v11 = v4;
  v12 = v3;
  v13 = v8;
  v14 = v5;
  v15 = v6;
  type metadata accessor for FlowStackTabView();
}

void sub_20E428ABC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t OpaqueTypeConformance2;
  uint64_t v35;
  uint64_t v36;

  v29 = sub_20E4A4BBC();
  a20 = sub_20E39D010((unint64_t *)&qword_254A1A6F8, v27, MEMORY[0x24BDF1028]);
  v30 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v28, &a19);
  a18 = MEMORY[0x24BEE0D10];
  v31 = MEMORY[0x212BBDF90](MEMORY[0x24BE5CAA8], v29, &a18);
  a21 = v28;
  a22 = v29;
  a23 = v30;
  a24 = v31;
  v32 = sub_20E4A46DC();
  v33 = MEMORY[0x212BBDF90](MEMORY[0x24BEE12D8], a11);
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v35 = MEMORY[0x212BBDF90](MEMORY[0x24BDF44C8], v32);
  v36 = MEMORY[0x212BBDF90](&unk_20E4B1958, a13);
  a21 = a11;
  a22 = a10;
  a23 = v32;
  a24 = v33;
  a25 = OpaqueTypeConformance2;
  a26 = v35;
  a27 = v36;
  type metadata accessor for _FlowStackTabViewBody();
}

uint64_t sub_20E428BB8(uint64_t a1)
{
  uint64_t v2;
  uint64_t AssociatedTypeWitness;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  _QWORD v8[27];

  v2 = sub_20E4A39D4();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8[0] = MEMORY[0x212BBDF90](&unk_20E4AC6D8, a1);
  v8[1] = v7;
  v4 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v2, v8);
  v5 = *(_QWORD *)(swift_getAssociatedConformanceWitness() + 8);
  v8[5] = v2;
  v8[6] = AssociatedTypeWitness;
  v8[7] = v4;
  v8[8] = v5;
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E428C88()
{
  return sub_20E428C94();
}

uint64_t sub_20E428C94()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20E428CD4()
{
  return sub_20E428D5C((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_20E426788);
}

uint64_t sub_20E428CE0(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(unsigned __int8 *)(a1 + 48));
  return a1;
}

void sub_20E428D1C(uint64_t a1@<X8>)
{
  uint64_t *v1;

  sub_20E4250E0(v1[9], v1[10], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], a1, v1[8]);
}

uint64_t sub_20E428D50()
{
  return sub_20E428D5C((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_20E425D44);
}

uint64_t sub_20E428D5C(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[9], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8]);
}

uint64_t *sub_20E428D74(uint64_t *a1)
{
  sub_20E427CC8(*a1);
  return a1;
}

uint64_t sub_20E428DA8(uint64_t a1)
{
  return sub_20E428DC8(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_20E4265CC) & 1;
}

uint64_t sub_20E428DC8(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[9], v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], v2[8]) & 1;
}

uint64_t sub_20E428E00()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_20E428E24()
{
  sub_20E425740();
}

void sub_20E428E5C(uint64_t a1)
{
  sub_20E429020(a1, (void (*)(_QWORD, _QWORD *))type metadata accessor for _FlowStackTabViewBody);
}

void objectdestroy_32Tm()
{
  type metadata accessor for _FlowStackTabViewBody();
}

uint64_t sub_20E428EC0(int *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v3 = *(unsigned __int8 *)(*((_QWORD *)a1 - 1) + 80);
  v4 = v1 + ((v3 + 72) & ~v3);
  (*(void (**)(uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v4);
  v5 = v4 + a1[19];
  swift_release();
  swift_release();
  swift_getAssociatedTypeWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = sub_20E4A4778();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v5 + *(int *)(v7 + 32), AssociatedTypeWitness);
  swift_release();
  swift_release();
  v8 = v4 + a1[22];
  sub_20E427CBC(*(_QWORD *)v8, *(_QWORD *)(v8 + 8), *(_QWORD *)(v8 + 16), *(_QWORD *)(v8 + 24), *(_QWORD *)(v8 + 32), *(_QWORD *)(v8 + 40), *(_BYTE *)(v8 + 48));
  sub_20E39CED8(*(_QWORD *)(v4 + a1[23]), *(_BYTE *)(v4 + a1[23] + 8));
  return swift_deallocObject();
}

void sub_20E42900C(uint64_t a1)
{
  sub_20E429020(a1, (void (*)(_QWORD, _QWORD *))type metadata accessor for _FlowStackTabViewBody);
}

void sub_20E429020(uint64_t a1, void (*a2)(_QWORD, _QWORD *))
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[7];

  v3 = v2[3];
  v4 = v2[4];
  v5 = v2[5];
  v6 = v2[6];
  v7 = v2[7];
  v8 = v2[8];
  v9[0] = v2[2];
  v9[1] = v3;
  v9[2] = v4;
  v9[3] = v5;
  v9[4] = v6;
  v9[5] = v7;
  v9[6] = v8;
  a2(0, v9);
  JUMPOUT(0x20E429078);
}

void sub_20E4290D8()
{
  sub_20E4271FC();
}

uint64_t sub_20E42910C(uint64_t *a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t OpaqueTypeConformance2;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v47[2];
  _QWORD v48[2];
  uint64_t v49;
  _QWORD v50[2];
  _QWORD v51[2];
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD v58[2];
  _QWORD v59[2];
  _QWORD v60[2];
  uint64_t v61;

  v45 = a1[2];
  v46 = a1[4];
  v44 = a1[5];
  v41 = a1[1];
  v42 = a1[3];
  v43 = *a1;
  swift_getAssociatedTypeWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v3 = sub_20E4A3AC4();
  v4 = MEMORY[0x24BDEDAB0];
  MEMORY[0x212BBDF90](MEMORY[0x24BDEDAB0], v3);
  v39 = sub_20E4A3E9C();
  v36 = sub_20E4A39D4();
  v5 = sub_20E4A60E0();
  v61 = AssociatedConformanceWitness;
  MEMORY[0x212BBDF90](MEMORY[0x24BEE4AB0], v5, &v61);
  v6 = sub_20E4A3AC4();
  MEMORY[0x212BBDF90](v4, v6);
  v38 = sub_20E4A3E9C();
  v7 = sub_20E4A39D4();
  v40 = AssociatedConformanceWitness;
  v56 = AssociatedConformanceWitness;
  sub_20E4A47C0();
  swift_getTupleTypeMetadata3();
  v8 = sub_20E4A491C();
  MEMORY[0x212BBDF90](MEMORY[0x24BDF5428], v8);
  v9 = sub_20E4A4184();
  v10 = sub_20E4A3AAC();
  v11 = MEMORY[0x212BBDF90](MEMORY[0x24BDF1A30], v9);
  v52 = v9;
  v53 = v10;
  v12 = MEMORY[0x24BDEDA28];
  v54 = v11;
  v55 = MEMORY[0x24BDEDA28];
  v13 = MEMORY[0x212BBDF30](255, &v52, MEMORY[0x24BDF3A80], 0);
  v52 = v9;
  v53 = v10;
  v54 = v11;
  v55 = v12;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v52 = v13;
  v53 = OpaqueTypeConformance2;
  v15 = MEMORY[0x212BBDF30](255, &v52, MEMORY[0x24BDF2898], 0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254A18D00);
  v16 = sub_20E4A3E00();
  v52 = v13;
  v53 = OpaqueTypeConformance2;
  v17 = swift_getOpaqueTypeConformance2();
  v18 = MEMORY[0x24BDEFB48];
  v35 = MEMORY[0x212BBDF90](MEMORY[0x24BDEFB48], v39);
  v60[0] = v44;
  v60[1] = v35;
  v19 = MEMORY[0x24BDED308];
  v20 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v36, v60);
  v34 = MEMORY[0x212BBDF90](v18, v38);
  v59[0] = v20;
  v59[1] = v34;
  v37 = MEMORY[0x212BBDF90](v19, v7, v59);
  v21 = sub_20E39D010((unint64_t *)&qword_254A18D08, &qword_254A18D00, (uint64_t)&protocol conformance descriptor for _RequirementFailureView<A, B>);
  v58[0] = v37;
  v58[1] = v21;
  v22 = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v16, v58);
  v52 = v15;
  v53 = MEMORY[0x24BDF5158];
  v54 = v16;
  v55 = v17;
  v56 = MEMORY[0x24BDF5138];
  v57 = v22;
  v33 = sub_20E4A3CEC();
  v32 = sub_20E4A3E00();
  v52 = v45;
  v53 = v41;
  v54 = v44;
  v55 = v46;
  MEMORY[0x212BBDF30](255, &v52, MEMORY[0x24BDF3838], 0);
  v23 = sub_20E4A39D4();
  v24 = sub_20E4A39D4();
  v52 = v43;
  v53 = AssociatedTypeWitness;
  v54 = v24;
  v55 = v42;
  v56 = v40;
  v25 = sub_20E4A47C0();
  v52 = v45;
  v53 = v41;
  v54 = v44;
  v55 = v46;
  v51[0] = swift_getOpaqueTypeConformance2();
  v51[1] = v35;
  v26 = MEMORY[0x24BDED308];
  v50[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v23, v51);
  v50[1] = v34;
  v49 = MEMORY[0x212BBDF90](v26, v24, v50);
  v27 = MEMORY[0x212BBDF90](MEMORY[0x24BDF4A08], v25, &v49);
  v52 = AssociatedTypeWitness;
  v53 = v25;
  v54 = v40;
  v55 = v27;
  v28 = sub_20E4A482C();
  v29 = sub_20E4A3E00();
  v48[0] = v37;
  v48[1] = MEMORY[0x212BBDF90](MEMORY[0x24BDEF010], v33);
  v30 = MEMORY[0x24BDEF3E0];
  v47[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v32, v48);
  v47[1] = MEMORY[0x212BBDF90](MEMORY[0x24BDF4B90], v28);
  return MEMORY[0x212BBDF90](v30, v29, v47);
}

uint64_t sub_20E429644()
{
  uint64_t v1;

  sub_20E3BD17C();
  sub_20E4A3C08();
  return v1;
}

uint64_t sub_20E42967C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v47[2];
  _QWORD v48[2];
  _QWORD v49[2];
  _QWORD v50[2];

  v45 = a4;
  v46 = a3;
  v41 = *(char **)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v40 = (uint64_t)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v39 = (uint64_t *)((char *)&v37 - v7);
  type metadata accessor for AppMetricsViewModifier();
  v8 = sub_20E4A39D4();
  v38 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v37 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254A1AA18);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_20E4A4F70();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v37 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_20E4A3E00();
  v43 = *(_QWORD *)(v21 - 8);
  v44 = v21;
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v37 - v22;
  sub_20E4A4E8C();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_20E39D1F8((uint64_t)v16, &qword_254A1AA18);
    v24 = v39;
    v25 = v46;
    sub_20E39D614(v39, v42, a2, v46);
    v26 = v40;
    sub_20E39D618((uint64_t)v24, a2, v40);
    v27 = sub_20E39F334(&qword_254A19190, (uint64_t (*)(uint64_t))type metadata accessor for AppMetricsViewModifier, (uint64_t)&unk_20E4AC838);
    v50[0] = v25;
    v50[1] = v27;
    MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v8, v50);
    sub_20E39CBE0(v26, v8, a2);
    v28 = (void (*)(uint64_t, uint64_t))*((_QWORD *)v41 + 1);
    v28(v26, a2);
    v28((uint64_t)v24, a2);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v16, v17);
    v41 = v23;
    v29 = v46;
    View.appMetrics(pipeline:)((uint64_t)v20, a2, v46, (uint64_t)v10);
    v30 = sub_20E39F334(&qword_254A19190, (uint64_t (*)(uint64_t))type metadata accessor for AppMetricsViewModifier, (uint64_t)&unk_20E4AC838);
    v47[0] = v29;
    v47[1] = v30;
    v31 = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v8, v47);
    sub_20E39D614(v13, v10, v8, v31);
    v32 = *(void (**)(char *, uint64_t))(v38 + 8);
    v32(v10, v8);
    sub_20E39D618((uint64_t)v13, v8, (uint64_t)v10);
    v23 = v41;
    sub_20E3DC6B0((uint64_t)v10, v8);
    v32(v10, v8);
    v32(v13, v8);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  }
  v33 = sub_20E39F334(&qword_254A19190, (uint64_t (*)(uint64_t))type metadata accessor for AppMetricsViewModifier, (uint64_t)&unk_20E4AC838);
  v34 = v46;
  v49[0] = v46;
  v49[1] = v33;
  v48[0] = MEMORY[0x212BBDF90](MEMORY[0x24BDED308], v8, v49);
  v48[1] = v34;
  v35 = v44;
  MEMORY[0x212BBDF90](MEMORY[0x24BDEF3E0], v44, v48);
  sub_20E39D618((uint64_t)v23, v35, v45);
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v23, v35);
}

