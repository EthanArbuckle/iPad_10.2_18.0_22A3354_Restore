void sub_23FD0E778()
{
  uint64_t v0;
  uint64_t v1;
  BOOL v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23FD20224();
  v2 = v2 && v1 == 0xE700000000000000;
  if (v2
    || (v3 = v1, v4 = v0, (sub_23FC5B06C() & 1) != 0)
    || v4 == 0xD000000000000010 && v3 == 0x800000023FD85FF0
    || (sub_23FD203A8(), (sub_23FC5B06C() & 1) != 0))
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23FD20438();
    if (v4 == 0x6C61636974697263 && v3 == v5)
    {
      sub_23FD20410();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_23FC5B06C();
      sub_23FD1FB4C();
    }
  }
  sub_23FBFF0A0();
}

void sub_23FD0E880(uint64_t a1, uint64_t a2)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23FD1F9C4();
    sub_23FD1FB4C();
  }
  sub_23FBFF0A0();
}

void sub_23FD0E8D8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_23FCC2A5C();
  sub_23FD1FE00();
  sub_23FBFD684(&qword_256F640B0);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v4, v5);
  sub_23FD1FB30(v6, v25);
  v29 = *(_QWORD *)(sub_23FBFD684(&qword_256F640B8) - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v7, v8);
  sub_23FD1FAB0(v9, v26);
  v10 = sub_23FD1FF08();
  v30 = *(_QWORD *)(v10 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v11, v12);
  sub_23FD1F95C(v13, v27);
  v28 = sub_23FBFD684(&qword_256F640C0);
  sub_23FC103D8();
  MEMORY[0x24BDAC7A8](v14, v15);
  v16 = sub_23FD1FB14();
  _s18TaskDefinitionThinO21TaskFailureReasonThinOMa(v16);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v17, v18);
  sub_23FC061D8();
  v34 = *(_QWORD *)(sub_23FBFD684(&qword_256F640C8) - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v19, v20);
  sub_23FC0603C();
  sub_23FBFDE40(v1, v1[3]);
  sub_23FD1E5F4();
  sub_23FD754C4();
  sub_23FC0EDD8(v33, v0, _s18TaskDefinitionThinO21TaskFailureReasonThinOMa);
  v21 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v0, 2, v10);
  if (v21)
  {
    if (v21 == 1)
    {
      sub_23FD1E6A8();
      sub_23FCF2448();
      (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v28);
    }
    else
    {
      sub_23FD205A4();
      sub_23FCF2448();
      v22 = sub_23FD1FE90();
      v24(v22, v23);
    }
    sub_23FCF2820(v34);
  }
  else
  {
    sub_23FC5AE8C(v32, v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v30 + 32));
    sub_23FD206B0();
    sub_23FCF2448();
    sub_23FBFEE2C(&qword_256F62EE8, (uint64_t (*)(uint64_t))MEMORY[0x24BE522D8], MEMORY[0x24BE522E8]);
    sub_23FD1FCB0();
    sub_23FC5B3B0(v31, *(uint64_t (**)(uint64_t, uint64_t))(v29 + 8));
    sub_23FBFEFFC(v32, *(uint64_t (**)(uint64_t, uint64_t))(v30 + 8));
    sub_23FCF2820(v34);
  }
  sub_23FD1FF10();
  sub_23FC06000();
}

void sub_23FD0EB50()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;

  sub_23FCC2A5C();
  v71 = v0;
  v3 = v2;
  v68 = v4;
  v5 = sub_23FBFD684(&qword_256F64070);
  v66 = *(_QWORD *)(v5 - 8);
  v67 = v5;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v6, v7);
  sub_23FD1F95C(v8, v59);
  v9 = sub_23FBFD684(&qword_256F64078);
  sub_23FD20378(v9);
  v63 = v10;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v11, v12);
  sub_23FCA6D78(v13, v59);
  v14 = sub_23FBFD684(&qword_256F64080);
  v64 = *(_QWORD *)(v14 - 8);
  v65 = v14;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v15, v16);
  sub_23FCF2650(v17, v59);
  v69 = *(_QWORD *)(sub_23FBFD684(&qword_256F64088) - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v18, v19);
  v20 = sub_23FC0610C();
  v21 = _s18TaskDefinitionThinO21TaskFailureReasonThinOMa(v20);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v22, v23);
  sub_23FC100D4();
  v26 = v24 - v25;
  MEMORY[0x24BDAC7A8](v27, v28);
  v30 = (char *)&v59 - v29;
  sub_23FBFDE40(v3, v3[3]);
  sub_23FD1E5F4();
  sub_23FD200A4();
  if (v0)
    goto LABEL_12;
  v61 = v26;
  v62 = v30;
  v31 = v70;
  v71 = v3;
  v32 = v1;
  v33 = sub_23FD752E4();
  v34 = *(_QWORD *)(v33 + 16);
  if (!v34)
    goto LABEL_10;
  v60 = 0;
  v35 = *(unsigned __int8 *)(v33 + 32);
  v36 = sub_23FC05ED0(1, v34, v33, v33 + 32, 0, (2 * v34) | 1);
  v38 = v37;
  v40 = v39;
  swift_bridgeObjectRelease();
  if (v38 != v40 >> 1)
  {
    v32 = v1;
LABEL_10:
    v43 = v69;
    v44 = sub_23FD1FBC0();
    sub_23FC5A704();
    v46 = v45;
    sub_23FBFD684(&qword_256F5D6C0);
    *v46 = v21;
    sub_23FD7529C();
    sub_23FCF2778();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v44 - 8) + 104))(v46, *MEMORY[0x24BEE26D0], v44);
    swift_willThrow();
    sub_23FC06158();
    v42 = *(uint64_t (**)(uint64_t, uint64_t))(v43 + 8);
    v57 = v32;
    goto LABEL_11;
  }
  if (!v35)
  {
    sub_23FD1E6A8();
    sub_23FD1FFF8();
    v48 = sub_23FD1FE90();
    v49(v48);
    sub_23FD1FF80();
    sub_23FBFEFFC(v36, *(uint64_t (**)(uint64_t, uint64_t))(v69 + 8));
    v50 = sub_23FD1FF08();
    v51 = (uint64_t)v62;
    v52 = (uint64_t)v62;
    v53 = 1;
LABEL_17:
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v52, v53, 2, v50);
    goto LABEL_18;
  }
  if (v35 != 1)
  {
    sub_23FD205A4();
    sub_23FD1FFF8();
    sub_23FC102AC(v66);
    sub_23FD1FF80();
    sub_23FBFEFFC(v36, *(uint64_t (**)(uint64_t, uint64_t))(v69 + 8));
    v50 = sub_23FD1FF08();
    v51 = (uint64_t)v62;
    v52 = (uint64_t)v62;
    v53 = 2;
    goto LABEL_17;
  }
  sub_23FD206B0();
  v41 = v60;
  sub_23FD75290();
  if (!v41)
  {
    v54 = sub_23FD1FF08();
    sub_23FBFEE2C(&qword_256F62F20, (uint64_t (*)(uint64_t))MEMORY[0x24BE522D8], MEMORY[0x24BE522F0]);
    v55 = v61;
    sub_23FD752D8();
    v56 = v69;
    sub_23FC5B3B0(v31, *(uint64_t (**)(uint64_t, uint64_t))(v63 + 8));
    sub_23FD1FF80();
    sub_23FBFEFFC(v1, *(uint64_t (**)(uint64_t, uint64_t))(v56 + 8));
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v55, 0, 2, v54);
    v51 = (uint64_t)v62;
    sub_23FD200B8(v55, v58, _s18TaskDefinitionThinO21TaskFailureReasonThinOMa);
LABEL_18:
    sub_23FC0F380(v51, v68, _s18TaskDefinitionThinO21TaskFailureReasonThinOMa);
    v47 = (uint64_t)v71;
    goto LABEL_13;
  }
  sub_23FD1FF80();
  v42 = *(uint64_t (**)(uint64_t, uint64_t))(v69 + 8);
  v57 = v1;
LABEL_11:
  sub_23FBFEFFC(v57, v42);
  v3 = v71;
LABEL_12:
  v47 = (uint64_t)v3;
LABEL_13:
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v47);
  sub_23FC06000();
}

void sub_23FD0EFC8()
{
  uint64_t v0;
  uint64_t v1;
  BOOL v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  BOOL v8;

  sub_23FD20224();
  v2 = v2 && v1 == 0xE700000000000000;
  if (v2)
    goto LABEL_6;
  v3 = v1;
  v4 = v0;
  if ((sub_23FC5B06C() & 1) != 0)
    goto LABEL_6;
  if (v4 == 0x6465727265666E69 && v3 == 0xEF73736563637553)
    goto LABEL_6;
  sub_23FD204FC();
  if ((sub_23FC5B06C() & 1) != 0)
    goto LABEL_6;
  sub_23FD20438();
  if (v4 == 0x6465727265666E69 && v3 == v6)
  {
    sub_23FD20410();
LABEL_6:
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  sub_23FD204FC();
  if ((sub_23FC5B06C() & 1) != 0)
    goto LABEL_6;
  v8 = v4 == 0x6E6F646E616261 && v3 == 0xE700000000000000;
  if (v8 || (sub_23FC5B06C() & 1) != 0)
    goto LABEL_6;
  if (v4 == 0x6C65636E6163 && v3 == 0xE600000000000000)
  {
    sub_23FD204B8();
  }
  else
  {
    sub_23FC5B06C();
    sub_23FD1FB4C();
  }
LABEL_7:
  sub_23FC09258();
}

void sub_23FD0F17C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6E6F73616572 && a2 == 0xE600000000000000)
  {
    sub_23FD204B8();
  }
  else
  {
    sub_23FD1F9C4();
    sub_23FD1FB4C();
  }
  sub_23FBFF0A0();
}

void sub_23FD0F1E0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_23FCC2A5C();
  sub_23FD1FE00();
  sub_23FBFD684(&qword_256F64038);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v2, v3);
  sub_23FD1FAB0(v4, v26);
  sub_23FBFD684(&qword_256F64040);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v5, v6);
  sub_23FD1FA18(v7, v27);
  sub_23FBFD684(&qword_256F64048);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = sub_23FD1FBE8(v10, v28);
  _s18TaskDefinitionThinO21TaskFailureReasonThinOMa(v11);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v12, v13);
  sub_23FD1FC94(v14, v29);
  sub_23FBFD684(&qword_256F64050);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v15, v16);
  sub_23FC9308C();
  sub_23FBFD684(&qword_256F64058);
  sub_23FC060C4();
  MEMORY[0x24BDAC7A8](v17, v18);
  v19 = sub_23FC8D7B4();
  _s18TaskDefinitionThinO14TaskStatusThinOMa(v19);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v20, v21);
  sub_23FC061C0();
  sub_23FBFD684(&qword_256F64060);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v22, v23);
  sub_23FBFDE40(v0, v0[3]);
  sub_23FD1E48C();
  sub_23FD20034();
  sub_23FC0EDD8(v30, v1, _s18TaskDefinitionThinO14TaskStatusThinOMa);
  v24 = sub_23FBFD684(&qword_256F5D500);
  v25 = (char *)sub_23FD0F3B0
      + 4
      * byte_23FD7B91B[_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v1, 4, v24)];
  __asm { BR              X10 }
}

void sub_23FD0F3B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23FD200D8();
  sub_23FD20580();
  v2 = *(_QWORD *)(v1 - 160);
  sub_23FD1F934();
  sub_23FBFEE2C(&qword_256F64068, _s18TaskDefinitionThinO21TaskFailureReasonThinOMa, (uint64_t)&unk_23FD7ED48);
  sub_23FD1FCB0();
  sub_23FC10454(v2, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 144) + 8));
  sub_23FD20478();
  sub_23FC100E4(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 96) + 8));
  sub_23FD201AC();
  sub_23FC06000();
}

void sub_23FD0F50C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  sub_23FCC2A5C();
  v2 = v1;
  sub_23FBFD684(&qword_256F63FD0);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v3, v4);
  sub_23FD1FA94(v5, v36);
  sub_23FBFD684(&qword_256F63FD8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v6, v7);
  sub_23FD1FB30(v8, v37);
  sub_23FBFD684(&qword_256F63FE0);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v9, v10);
  sub_23FD1FA5C(v11, v38);
  sub_23FBFD684(&qword_256F63FE8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v12, v13);
  sub_23FCF2634(v14, v39);
  sub_23FBFD684(&qword_256F63FF0);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v15, v16);
  sub_23FD1FA18(v17, v40);
  v18 = sub_23FBFD684(&qword_256F63FF8);
  sub_23FC93130();
  MEMORY[0x24BDAC7A8](v19, v20);
  v21 = sub_23FC7E1F4();
  _s18TaskDefinitionThinO14TaskStatusThinOMa(v21);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v22, v23);
  sub_23FC159C8();
  MEMORY[0x24BDAC7A8](v24, v25);
  v26 = *(_QWORD *)(v2 + 32);
  sub_23FD1FA40();
  sub_23FD1E48C();
  sub_23FD1FCDC();
  if (!v0)
  {
    if (*(_QWORD *)(sub_23FD1FD50() + 16))
    {
      v27 = sub_23FD1FD20();
      sub_23FC05ED0(v27, v28, v29, v30, v31, v32);
      sub_23FD20014();
      if (v2 == v26 >> 1)
        __asm { BR              X9 }
    }
    sub_23FD1FBC0();
    sub_23FC5A704();
    sub_23FBFD684(&qword_256F5D6C0);
    sub_23FD1FE34();
    v33 = sub_23FCF2778();
    sub_23FD1FF88(v33, *MEMORY[0x24BEE26D0]);
    sub_23FD206C8();
    sub_23FCF24C4();
    v34 = sub_23FD20700();
    v35(v34);
  }
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v2);
  sub_23FD1FF10();
  sub_23FC06000();
}

void sub_23FD0F9B4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v5;

  v2 = a1 == 0x737574617473 && a2 == 0xE600000000000000;
  if (v2
    || (sub_23FC5B06C() & 1) != 0
    || (a1 == 0x745374706D6F7270 ? (v5 = a2 == 0xEB00000000657461) : (v5 = 0), v5))
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23FC5B06C();
    sub_23FD1FB4C();
  }
  sub_23FBFF0A0();
}

void sub_23FD0FA8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23FD1FF1C();
  sub_23FD1FDF0();
  sub_23FBFD684(&qword_256F63ED8);
  sub_23FC060C4();
  MEMORY[0x24BDAC7A8](v1, v2);
  sub_23FD1F984();
  sub_23FD1E228();
  sub_23FCC2A80();
  _s18TaskDefinitionThinO14TaskStatusThinOMa(0);
  sub_23FBFEE2C(&qword_256F63EE0, _s18TaskDefinitionThinO14TaskStatusThinOMa, (uint64_t)&unk_23FD7ED98);
  sub_23FD1F9A4();
  if (!v0)
  {
    v3 = sub_23FD201B8();
    sub_23FD1FF38(v3);
    sub_23FC06244();
  }
  sub_23FCC2B78();
  sub_23FD202D4();
  sub_23FC0A094();
}

void sub_23FD0FB64()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_23FCC2A5C();
  v5 = sub_23FD20384(v4);
  _s18TaskDefinitionThinO14TaskStatusThinOMa(v5);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v6, v7);
  sub_23FCA6D78(v8, v17);
  sub_23FBFD684(&qword_256F63EC0);
  sub_23FC93130();
  MEMORY[0x24BDAC7A8](v9, v10);
  v11 = sub_23FC7E1F4();
  _s18TaskDefinitionThinO15TaskOutcomeThinVMa(v11);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v12, v13);
  sub_23FBFDE40(v0, v0[3]);
  sub_23FD1E228();
  sub_23FD1FEF0();
  if (v1)
  {
    sub_23FCC2A9C();
  }
  else
  {
    sub_23FBFEE2C(&qword_256F63ED0, _s18TaskDefinitionThinO14TaskStatusThinOMa, (uint64_t)&unk_23FD7EDC0);
    v14 = sub_23FD1FBAC();
    sub_23FD20340(v14, v15, _s18TaskDefinitionThinO14TaskStatusThinOMa);
    sub_23FD20650();
    sub_23FD1FBAC();
    sub_23FC5B3B0(v2, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    sub_23FD204A4();
    sub_23FC98224(v18, v16);
    _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v0);
    sub_23FC5D46C();
    sub_23FCBA0CC();
  }
  sub_23FC06000();
}

uint64_t sub_23FD0FD04(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23FD75380();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

void sub_23FD0FD94()
{
  sub_23FC06220();
  sub_23FD203DC();
  sub_23FC06168();
  sub_23FC06054();
}

uint64_t sub_23FD0FDBC()
{
  return 0x6D617473656D6974;
}

void sub_23FD0FDD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;

  sub_23FD1FF1C();
  a17 = v19;
  a18 = v20;
  sub_23FBFD684(&qword_256F63F50);
  sub_23FC060C4();
  MEMORY[0x24BDAC7A8](v21, v22);
  v24 = (char *)&a9 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FD1F984();
  sub_23FD1E360();
  sub_23FD1FA08();
  sub_23FD71414();
  sub_23FBFEE2C(&qword_256F63F58, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
  sub_23FC09FF8();
  sub_23FC100E4((uint64_t)v24, *(uint64_t (**)(uint64_t, uint64_t))(v18 + 8));
  sub_23FC0A094();
}

void sub_23FD0FE94()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_23FCC2A5C();
  sub_23FC0A174(v4);
  sub_23FD71414();
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v5, v6);
  sub_23FC0A0C4(v7, v15);
  sub_23FBFD684(&qword_256F63F38);
  sub_23FC15A2C();
  MEMORY[0x24BDAC7A8](v8, v9);
  v10 = sub_23FC0A0A8();
  _s18TaskDefinitionThinO15TaskContextThinVMa(v10);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v11, v12);
  sub_23FBFDE40(v0, v0[3]);
  sub_23FD1E360();
  sub_23FC0A020();
  if (!v1)
  {
    sub_23FBFEE2C(&qword_256F63F48, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
    sub_23FD1FD70();
    sub_23FBFEFFC(v3, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    v13 = sub_23FC0A038();
    sub_23FD20484(v13, v14, _s18TaskDefinitionThinO15TaskContextThinVMa);
  }
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v0);
  sub_23FD20460();
  sub_23FC06000();
}

uint64_t sub_23FD0FFC4(uint64_t a1, uint64_t a2)
{
  BOOL v5;
  BOOL v6;
  BOOL v7;
  char v8;

  if (a1 == 0xD000000000000011 && a2 == 0x800000023FD86010 || (sub_23FD75380() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v5 = a1 == 0x6E656D6574617473 && a2 == 0xEB00000000644974;
    if (v5 || (sub_23FD75380() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v6 = a1 == 0x6F43656369766564 && a2 == 0xED0000747865746ELL;
      if (v6 || (sub_23FD75380() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000014 && a2 == 0x800000023FD86030 || (sub_23FD75380() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0xD000000000000014 && a2 == 0x800000023FD86050 || (sub_23FD75380() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        v7 = a1 == 0x656D6F6374756FLL && a2 == 0xE700000000000000;
        if (v7 || (sub_23FD75380() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else if (a1 == 0xD000000000000011 && a2 == 0x800000023FD86070)
        {
          swift_bridgeObjectRelease();
          return 6;
        }
        else
        {
          v8 = sub_23FD75380();
          swift_bridgeObjectRelease();
          if ((v8 & 1) != 0)
            return 6;
          else
            return 7;
        }
      }
    }
  }
}

uint64_t sub_23FD102AC()
{
  return 7;
}

uint64_t sub_23FD102B4(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23FD102EC + 4 * byte_23FD7B925[a1]))(0xD000000000000011, 0x800000023FD86010);
}

uint64_t sub_23FD102EC()
{
  return 0x6E656D6574617473;
}

uint64_t sub_23FD1030C()
{
  return 0x6F43656369766564;
}

uint64_t sub_23FD10330(uint64_t a1)
{
  return a1 + 3;
}

void sub_23FD1037C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23FD1FF1C();
  sub_23FBFD684(&qword_256F63E78);
  sub_23FC060C4();
  MEMORY[0x24BDAC7A8](v1, v2);
  sub_23FD1F984();
  sub_23FD1E1B0();
  sub_23FCC2A80();
  sub_23FBFF104();
  sub_23FBFEE2C(&qword_256F5D6E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23FD1FA34();
  if (!v0)
  {
    _s18TaskDefinitionThinO18TaskEvaluationThinVMa(0);
    sub_23FD2075C();
    sub_23FC06250();
    sub_23FBFEE2C(&qword_256F62DF0, (uint64_t (*)(uint64_t))MEMORY[0x24BE52140], MEMORY[0x24BE52150]);
    sub_23FD1F9E4();
    _s18TaskDefinitionThinO15TaskContextThinVMa(0);
    sub_23FBFEE2C(&qword_256F63E88, _s18TaskDefinitionThinO15TaskContextThinVMa, (uint64_t)&unk_23FD7EE88);
    sub_23FD1F9E4();
    sub_23FBFD684(&qword_256F63E90);
    sub_23FD1E2A0(&qword_256F63E98, &qword_256F63EA0, (uint64_t)&unk_23FD7EDE8, MEMORY[0x24BEE12A0]);
    sub_23FD1FA34();
    _s18TaskDefinitionThinO28TaskFinalResolutionStateThinOMa(0);
    sub_23FBFEE2C(&qword_256F63EA8, _s18TaskDefinitionThinO28TaskFinalResolutionStateThinOMa, (uint64_t)&unk_23FD7EE38);
    sub_23FD1F9E4();
    sub_23FD201B8();
    sub_23FBFEE2C(&qword_256F63EB0, _s18TaskDefinitionThinO15TaskOutcomeThinVMa, (uint64_t)&unk_23FD7EF50);
    sub_23FD1F9E4();
    sub_23FD1E1EC();
    sub_23FD1FA34();
  }
  sub_23FCC2B78();
  sub_23FC0A094();
}

void sub_23FD10624()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int *v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  __int128 v39;

  sub_23FCC2A5C();
  v5 = v4;
  v31 = v6;
  sub_23FD201B8();
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v7, v8);
  sub_23FD20108(v9, v30);
  _s18TaskDefinitionThinO28TaskFinalResolutionStateThinOMa(0);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v10, v11);
  sub_23FBFEFE0();
  _s18TaskDefinitionThinO15TaskContextThinVMa(0);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v12, v13);
  sub_23FD1FB14();
  v14 = sub_23FD7157C();
  v32 = *(_QWORD *)(v14 - 8);
  v33 = v14;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v15, v16);
  sub_23FC0610C();
  v17 = sub_23FD71474();
  v34 = *(_QWORD *)(v17 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v18, v19);
  sub_23FC061D8();
  sub_23FBFD684(&qword_256F63F00);
  sub_23FC93120();
  MEMORY[0x24BDAC7A8](v20, v21);
  v22 = sub_23FC12F10();
  v35 = (int *)_s18TaskDefinitionThinO18TaskEvaluationThinVMa(v22);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v23, v24);
  sub_23FBFEFE0();
  v36 = v25;
  sub_23FBFDE40(v5, v5[3]);
  sub_23FD1E1B0();
  sub_23FD754B8();
  if (v1)
  {
    sub_23FD20648();
  }
  else
  {
    sub_23FBFEE2C(&qword_256F5D700, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    sub_23FD202B0();
    sub_23FD1FB90();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 32))(v36, v0, v17);
    sub_23FBFEE2C(&qword_256F62E20, (uint64_t (*)(uint64_t))MEMORY[0x24BE52140], MEMORY[0x24BE52168]);
    sub_23FD202B0();
    sub_23FD1FB90();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 32))(v36 + v35[5], v3, v33);
    LOBYTE(v37) = 2;
    sub_23FBFEE2C(&qword_256F63F08, _s18TaskDefinitionThinO15TaskContextThinVMa, (uint64_t)&unk_23FD7EEB0);
    sub_23FD202B0();
    v26 = sub_23FD1FB90();
    sub_23FD203A0(v26, v36 + v35[6], _s18TaskDefinitionThinO15TaskContextThinVMa);
    sub_23FBFD684(&qword_256F63E90);
    sub_23FD1E2A0(&qword_256F63F10, &qword_256F63F18, (uint64_t)&unk_23FD7EE10, MEMORY[0x24BEE12D0]);
    sub_23FD1FB90();
    *(_QWORD *)(v36 + v35[7]) = v37;
    sub_23FBFEE2C(&qword_256F63F20, _s18TaskDefinitionThinO28TaskFinalResolutionStateThinOMa, (uint64_t)&unk_23FD7EE60);
    sub_23FD202B0();
    v27 = sub_23FD1FB90();
    sub_23FD203A0(v27, v36 + v35[8], _s18TaskDefinitionThinO28TaskFinalResolutionStateThinOMa);
    sub_23FBFEE2C(&qword_256F63F28, _s18TaskDefinitionThinO15TaskOutcomeThinVMa, (uint64_t)&unk_23FD7EF78);
    sub_23FD202B0();
    v28 = sub_23FD1FB90();
    sub_23FD203A0(v28, v36 + v35[9], _s18TaskDefinitionThinO15TaskOutcomeThinVMa);
    sub_23FD1E324();
    sub_23FD1FB90();
    sub_23FD1FACC(v2);
    v29 = v36 + v35[10];
    *(_BYTE *)v29 = 5;
    *(_BYTE *)(v29 + 8) = v38;
    *(_OWORD *)(v29 + 16) = v39;
    sub_23FC0EDD8(v36, v31, _s18TaskDefinitionThinO18TaskEvaluationThinVMa);
    sub_23FD20648();
    sub_23FCBA0CC();
  }
  sub_23FC06000();
}

uint64_t sub_23FD10BC0()
{
  unsigned __int8 *v0;

  return sub_23FD0D700(*v0);
}

uint64_t sub_23FD10BC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23FD0D4C8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23FD10BEC()
{
  sub_23FD1E450();
  return sub_23FD754DC();
}

uint64_t sub_23FD10C14()
{
  sub_23FD1E450();
  return sub_23FD754E8();
}

void sub_23FD10C3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  _BYTE vars8[5];

  sub_23FD0D96C(a1, a2, a3, a4, a5, a6, a7, a8, vars0, *(__int16 *)vars8, vars8[2], vars8[3], vars8[4]);
}

void sub_23FD10C50()
{
  sub_23FD0D7A8();
}

uint64_t sub_23FD10C64()
{
  char *v0;

  return sub_23FD0DE20(*v0);
}

uint64_t sub_23FD10C6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23FD0DD10(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23FD10C90()
{
  sub_23FD1E264();
  return sub_23FD754DC();
}

uint64_t sub_23FD10CB8()
{
  sub_23FD1E264();
  return sub_23FD754E8();
}

void sub_23FD10CE0()
{
  sub_23FD0DF30();
}

void sub_23FD10CF4()
{
  sub_23FD0DE64();
}

uint64_t sub_23FD10D08()
{
  char *v0;

  return sub_23FD0E1DC(*v0);
}

void sub_23FD10D10(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v4;

  sub_23FD0E108(a1, a2);
  *a3 = v4;
}

uint64_t sub_23FD10D34()
{
  sub_23FD1E39C();
  return sub_23FD754DC();
}

uint64_t sub_23FD10D5C()
{
  sub_23FD1E39C();
  return sub_23FD754E8();
}

void sub_23FD10D84(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v4;

  sub_23FD0E218(a1, a2);
  *a3 = v4 & 1;
}

uint64_t sub_23FD10DAC()
{
  sub_23FD1E414();
  return sub_23FD754DC();
}

uint64_t sub_23FD10DD4()
{
  sub_23FD1E414();
  return sub_23FD754E8();
}

uint64_t sub_23FD10DFC()
{
  sub_23FD1E3D8();
  return sub_23FD754DC();
}

uint64_t sub_23FD10E24()
{
  sub_23FD1E3D8();
  return sub_23FD754E8();
}

void sub_23FD10E4C()
{
  sub_23FD0E47C();
}

void sub_23FD10E60()
{
  sub_23FD0E290();
}

uint64_t sub_23FD10E74()
{
  sub_23FD1E5F4();
  return sub_23FD754DC();
}

uint64_t sub_23FD10E9C()
{
  sub_23FD1E5F4();
  return sub_23FD754E8();
}

uint64_t sub_23FD10EC4()
{
  sub_23FD1E630();
  return sub_23FD754DC();
}

uint64_t sub_23FD10EEC()
{
  sub_23FD1E630();
  return sub_23FD754E8();
}

uint64_t sub_23FD10F14()
{
  sub_23FD1E66C();
  return sub_23FD754DC();
}

uint64_t sub_23FD10F3C()
{
  sub_23FD1E66C();
  return sub_23FD754E8();
}

uint64_t sub_23FD10F64()
{
  sub_23FD1E6A8();
  return sub_23FD754DC();
}

uint64_t sub_23FD10F8C()
{
  sub_23FD1E6A8();
  return sub_23FD754E8();
}

void sub_23FD10FB4()
{
  sub_23FD0EB50();
}

void sub_23FD10FC8()
{
  sub_23FD0E8D8();
}

uint64_t sub_23FD10FDC()
{
  sub_23FD1E504();
  return sub_23FD754DC();
}

uint64_t sub_23FD11004()
{
  sub_23FD1E504();
  return sub_23FD754E8();
}

uint64_t sub_23FD1102C()
{
  sub_23FD1E4C8();
  return sub_23FD754DC();
}

uint64_t sub_23FD11054()
{
  sub_23FD1E4C8();
  return sub_23FD754E8();
}

uint64_t sub_23FD1107C()
{
  sub_23FD1E48C();
  return sub_23FD754DC();
}

uint64_t sub_23FD110A4()
{
  sub_23FD1E48C();
  return sub_23FD754E8();
}

uint64_t sub_23FD110D0()
{
  sub_23FD1E540();
  return sub_23FD754DC();
}

uint64_t sub_23FD110F8()
{
  sub_23FD1E540();
  return sub_23FD754E8();
}

uint64_t sub_23FD11120()
{
  sub_23FD1E57C();
  return sub_23FD754DC();
}

uint64_t sub_23FD11148()
{
  sub_23FD1E57C();
  return sub_23FD754E8();
}

uint64_t sub_23FD11170()
{
  sub_23FD1E5B8();
  return sub_23FD754DC();
}

uint64_t sub_23FD11198()
{
  sub_23FD1E5B8();
  return sub_23FD754E8();
}

void sub_23FD111C0()
{
  sub_23FD0F50C();
}

void sub_23FD111D4()
{
  sub_23FD0F1E0();
}

void sub_23FD111E8()
{
  sub_23FCC2B70();
  sub_23FD2005C();
  sub_23FC06168();
  sub_23FC06054();
}

uint64_t sub_23FD11210()
{
  sub_23FD1E228();
  return sub_23FD754DC();
}

uint64_t sub_23FD11238()
{
  sub_23FD1E228();
  return sub_23FD754E8();
}

void sub_23FD11260()
{
  sub_23FD0FB64();
}

void sub_23FD11274()
{
  sub_23FD0FA8C();
}

void sub_23FD11288()
{
  sub_23FCC2B70();
  sub_23FD203DC();
  sub_23FC06168();
  sub_23FC06054();
}

uint64_t sub_23FD112B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23FD0FD04(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23FD112DC()
{
  sub_23FD1E360();
  return sub_23FD754DC();
}

uint64_t sub_23FD11304()
{
  sub_23FD1E360();
  return sub_23FD754E8();
}

void sub_23FD1132C()
{
  sub_23FD0FE94();
}

#error "23FD11348: call analysis failed (funcsize=5)"

uint64_t sub_23FD11354()
{
  unsigned __int8 *v0;

  return sub_23FD102B4(*v0);
}

uint64_t sub_23FD1135C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23FD0FFC4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23FD11380@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23FD102AC();
  *a1 = result;
  return result;
}

uint64_t sub_23FD113A4()
{
  sub_23FD1E1B0();
  return sub_23FD754DC();
}

uint64_t sub_23FD113CC()
{
  sub_23FD1E1B0();
  return sub_23FD754E8();
}

void sub_23FD113F4()
{
  sub_23FD10624();
}

void sub_23FD11408()
{
  sub_23FD1037C();
}

unint64_t sub_23FD1141C()
{
  unint64_t result;

  result = qword_256F62C10;
  if (!qword_256F62C10)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7EAD4, &_s26DisambiguationPromptResultO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F62C10);
  }
  return result;
}

unint64_t sub_23FD11458()
{
  unint64_t result;

  result = qword_256F62C18;
  if (!qword_256F62C18)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7EA84, &_s26DisambiguationPromptResultO18RejectedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F62C18);
  }
  return result;
}

unint64_t sub_23FD11494()
{
  unint64_t result;

  result = qword_256F62C20;
  if (!qword_256F62C20)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7EA34, &_s26DisambiguationPromptResultO19AbandonedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F62C20);
  }
  return result;
}

unint64_t sub_23FD114D0()
{
  unint64_t result;

  result = qword_256F62C28;
  if (!qword_256F62C28)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7E9E4, &_s26DisambiguationPromptResultO30OtherCandidateChosenCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F62C28);
  }
  return result;
}

unint64_t sub_23FD1150C()
{
  unint64_t result;

  result = qword_256F62C30;
  if (!qword_256F62C30)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7E994, &_s26DisambiguationPromptResultO27CandidateSelectedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F62C30);
  }
  return result;
}

unint64_t sub_23FD11548()
{
  unint64_t result;

  result = qword_256F62C98;
  if (!qword_256F62C98)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7E944, &_s16CandidateOutcomeO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F62C98);
  }
  return result;
}

unint64_t sub_23FD11584()
{
  unint64_t result;

  result = qword_256F62CA0;
  if (!qword_256F62CA0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7E8F4, &_s16CandidateOutcomeO17UnknownCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F62CA0);
  }
  return result;
}

unint64_t sub_23FD115C0()
{
  unint64_t result;

  result = qword_256F62CA8;
  if (!qword_256F62CA8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7E8A4, &_s16CandidateOutcomeO26InferredFromTaskCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F62CA8);
  }
  return result;
}

unint64_t sub_23FD115FC()
{
  unint64_t result;

  result = qword_256F62CB0;
  if (!qword_256F62CB0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7E854, &_s16CandidateOutcomeO25InferredFailureCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F62CB0);
  }
  return result;
}

unint64_t sub_23FD11638()
{
  unint64_t result;

  result = qword_256F62CB8;
  if (!qword_256F62CB8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7E804, &_s16CandidateOutcomeO25InferredSuccessCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F62CB8);
  }
  return result;
}

unint64_t sub_23FD11674()
{
  unint64_t result;

  result = qword_256F62CC0;
  if (!qword_256F62CC0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7E7B4, &_s16CandidateOutcomeO24DisambiguationCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F62CC0);
  }
  return result;
}

unint64_t sub_23FD116B0()
{
  unint64_t result;

  result = qword_256F62CC8;
  if (!qword_256F62CC8)
  {
    result = MEMORY[0x2426797E8](&protocol conformance descriptor for FeedbackLearning.DisambiguationPromptResult, &type metadata for FeedbackLearning.DisambiguationPromptResult);
    atomic_store(result, (unint64_t *)&qword_256F62CC8);
  }
  return result;
}

unint64_t sub_23FD116EC()
{
  unint64_t result;

  result = qword_256F62CD0;
  if (!qword_256F62CD0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7E764, &_s16CandidateOutcomeO22ConfirmationCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F62CD0);
  }
  return result;
}

unint64_t sub_23FD11728()
{
  unint64_t result;

  result = qword_256F62CD8;
  if (!qword_256F62CD8)
  {
    result = MEMORY[0x2426797E8](&protocol conformance descriptor for FeedbackLearning.ConfirmationPromptResult, &type metadata for FeedbackLearning.ConfirmationPromptResult);
    atomic_store(result, (unint64_t *)&qword_256F62CD8);
  }
  return result;
}

unint64_t sub_23FD11764()
{
  unint64_t result;

  result = qword_256F62D18;
  if (!qword_256F62D18)
  {
    result = MEMORY[0x2426797E8](&protocol conformance descriptor for FeedbackLearning.DisambiguationPromptResult, &type metadata for FeedbackLearning.DisambiguationPromptResult);
    atomic_store(result, (unint64_t *)&qword_256F62D18);
  }
  return result;
}

unint64_t sub_23FD117A0()
{
  unint64_t result;

  result = qword_256F62D20;
  if (!qword_256F62D20)
  {
    result = MEMORY[0x2426797E8](&protocol conformance descriptor for FeedbackLearning.ConfirmationPromptResult, &type metadata for FeedbackLearning.ConfirmationPromptResult);
    atomic_store(result, (unint64_t *)&qword_256F62D20);
  }
  return result;
}

unint64_t sub_23FD117DC()
{
  unint64_t result;

  result = qword_256F62D50;
  if (!qword_256F62D50)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7E714, &_s28CandidateParameterResolutionO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F62D50);
  }
  return result;
}

unint64_t sub_23FD11818()
{
  unint64_t result;

  result = qword_256F62D58;
  if (!qword_256F62D58)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7E6C4, &_s28CandidateParameterResolutionO18ExecutedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F62D58);
  }
  return result;
}

unint64_t sub_23FD11854()
{
  unint64_t result;

  result = qword_256F62D60;
  if (!qword_256F62D60)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7E674, &_s28CandidateParameterResolutionO26ResolvedSelectedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F62D60);
  }
  return result;
}

unint64_t sub_23FD11890()
{
  unint64_t result;

  result = qword_256F62D68;
  if (!qword_256F62D68)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7E624, &_s28CandidateParameterResolutionO29ResolvedNotSelectedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F62D68);
  }
  return result;
}

unint64_t sub_23FD118CC()
{
  unint64_t result;

  result = qword_256F62D70;
  if (!qword_256F62D70)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7E5D4, &_s28CandidateParameterResolutionO20UnresolvedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F62D70);
  }
  return result;
}

unint64_t sub_23FD11908()
{
  unint64_t result;

  result = qword_256F62DA8;
  if (!qword_256F62DA8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7E584, &_s20CandidateSearchQueryV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F62DA8);
  }
  return result;
}

uint64_t type metadata accessor for FeedbackLearning.CandidateSearchQuery(uint64_t a1)
{
  return sub_23FC04944(a1, qword_256F63168);
}

uint64_t type metadata accessor for FeedbackLearning.CandidateParameter(uint64_t a1)
{
  return sub_23FC04944(a1, qword_256F63210);
}

unint64_t sub_23FD1196C()
{
  unint64_t result;

  result = qword_256F62DD8;
  if (!qword_256F62DD8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7E534, &_s18CandidateParameterO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F62DD8);
  }
  return result;
}

unint64_t sub_23FD119A8()
{
  unint64_t result;

  result = qword_256F62DE0;
  if (!qword_256F62DE0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7E4E4, &_s18CandidateParameterO19ParameterCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F62DE0);
  }
  return result;
}

unint64_t sub_23FD119E4()
{
  unint64_t result;

  result = qword_256F62DE8;
  if (!qword_256F62DE8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7E494, &_s18CandidateParameterO15ValueCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F62DE8);
  }
  return result;
}

unint64_t sub_23FD11A20()
{
  unint64_t result;

  result = qword_256F62DF8;
  if (!qword_256F62DF8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7E444, &_s18CandidateParameterO14ToolCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F62DF8);
  }
  return result;
}

uint64_t type metadata accessor for FeedbackLearning.CandidateEvaluation(uint64_t a1)
{
  return sub_23FC04944(a1, (uint64_t *)&unk_256F632A0);
}

unint64_t sub_23FD11A70()
{
  unint64_t result;

  result = qword_256F62E40;
  if (!qword_256F62E40)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7E3F4, &_s19CandidateEvaluationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F62E40);
  }
  return result;
}

unint64_t sub_23FD11AAC()
{
  unint64_t result;

  result = qword_256F62E60;
  if (!qword_256F62E60)
  {
    result = MEMORY[0x2426797E8](&protocol conformance descriptor for FeedbackLearning.CandidateParameterResolution, &type metadata for FeedbackLearning.CandidateParameterResolution);
    atomic_store(result, (unint64_t *)&qword_256F62E60);
  }
  return result;
}

unint64_t sub_23FD11AE8()
{
  unint64_t result;

  result = qword_256F62E68;
  if (!qword_256F62E68)
  {
    result = MEMORY[0x2426797E8](&protocol conformance descriptor for FeedbackLearning.CandidateOutcome, &type metadata for FeedbackLearning.CandidateOutcome);
    atomic_store(result, (unint64_t *)&qword_256F62E68);
  }
  return result;
}

unint64_t sub_23FD11B24()
{
  unint64_t result;

  result = qword_256F62E90;
  if (!qword_256F62E90)
  {
    result = MEMORY[0x2426797E8](&protocol conformance descriptor for FeedbackLearning.CandidateParameterResolution, &type metadata for FeedbackLearning.CandidateParameterResolution);
    atomic_store(result, (unint64_t *)&qword_256F62E90);
  }
  return result;
}

unint64_t sub_23FD11B60()
{
  unint64_t result;

  result = qword_256F62E98;
  if (!qword_256F62E98)
  {
    result = MEMORY[0x2426797E8](&protocol conformance descriptor for FeedbackLearning.CandidateOutcome, &type metadata for FeedbackLearning.CandidateOutcome);
    atomic_store(result, (unint64_t *)&qword_256F62E98);
  }
  return result;
}

uint64_t type metadata accessor for FeedbackLearning.TaskFailureReason(uint64_t a1)
{
  return sub_23FC04944(a1, qword_256F63360);
}

unint64_t sub_23FD11BB0()
{
  unint64_t result;

  result = qword_256F62EC8;
  if (!qword_256F62EC8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7E3A4, &_s17TaskFailureReasonO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F62EC8);
  }
  return result;
}

unint64_t sub_23FD11BEC()
{
  unint64_t result;

  result = qword_256F62ED0;
  if (!qword_256F62ED0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7E354, &_s17TaskFailureReasonO25CriticalFailureCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F62ED0);
  }
  return result;
}

unint64_t sub_23FD11C28()
{
  unint64_t result;

  result = qword_256F62EE0;
  if (!qword_256F62EE0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7E304, &_s17TaskFailureReasonO26ExecutionFailureCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F62EE0);
  }
  return result;
}

unint64_t sub_23FD11C64()
{
  unint64_t result;

  result = qword_256F62EF0;
  if (!qword_256F62EF0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7E2B4, &_s17TaskFailureReasonO17UnknownCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F62EF0);
  }
  return result;
}

uint64_t type metadata accessor for FeedbackLearning.TaskStatus(uint64_t a1)
{
  return sub_23FC04944(a1, (uint64_t *)&unk_256F63408);
}

unint64_t sub_23FD11CB4()
{
  unint64_t result;

  result = qword_256F62F60;
  if (!qword_256F62F60)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7E264, &_s10TaskStatusO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F62F60);
  }
  return result;
}

unint64_t sub_23FD11CF0()
{
  unint64_t result;

  result = qword_256F62F68;
  if (!qword_256F62F68)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7E214, &_s10TaskStatusO16CancelCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F62F68);
  }
  return result;
}

unint64_t sub_23FD11D2C()
{
  unint64_t result;

  result = qword_256F62F70;
  if (!qword_256F62F70)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7E1C4, &_s10TaskStatusO17AbandonCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F62F70);
  }
  return result;
}

unint64_t sub_23FD11D68()
{
  unint64_t result;

  result = qword_256F62F78;
  if (!qword_256F62F78)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7E174, &_s10TaskStatusO25InferredFailureCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F62F78);
  }
  return result;
}

unint64_t sub_23FD11DA4()
{
  unint64_t result;

  result = qword_256F62F88;
  if (!qword_256F62F88)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7E124, &_s10TaskStatusO25InferredSuccessCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F62F88);
  }
  return result;
}

unint64_t sub_23FD11DE0()
{
  unint64_t result;

  result = qword_256F62F90;
  if (!qword_256F62F90)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7E0D4, &_s10TaskStatusO17UnknownCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F62F90);
  }
  return result;
}

unint64_t sub_23FD11E1C()
{
  unint64_t result;

  result = qword_256F62FE8;
  if (!qword_256F62FE8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7E084, &_s16TaskPromptStatusO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F62FE8);
  }
  return result;
}

unint64_t sub_23FD11E58()
{
  unint64_t result;

  result = qword_256F62FF0;
  if (!qword_256F62FF0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7E034, &_s16TaskPromptStatusO17ConfirmCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F62FF0);
  }
  return result;
}

unint64_t sub_23FD11E94()
{
  unint64_t result;

  result = qword_256F62FF8;
  if (!qword_256F62FF8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7DFE4, &_s16TaskPromptStatusO14NoneCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F62FF8);
  }
  return result;
}

uint64_t type metadata accessor for FeedbackLearning.TaskOutcome(uint64_t a1)
{
  return sub_23FC04944(a1, qword_256F63470);
}

unint64_t sub_23FD11EE4()
{
  unint64_t result;

  result = qword_256F63020;
  if (!qword_256F63020)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7DF94, &_s11TaskOutcomeV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63020);
  }
  return result;
}

unint64_t sub_23FD11F20()
{
  unint64_t result;

  result = qword_256F63030;
  if (!qword_256F63030)
  {
    result = MEMORY[0x2426797E8](&protocol conformance descriptor for FeedbackLearning.TaskPromptStatus, &type metadata for FeedbackLearning.TaskPromptStatus);
    atomic_store(result, (unint64_t *)&qword_256F63030);
  }
  return result;
}

unint64_t sub_23FD11F5C()
{
  unint64_t result;

  result = qword_256F63048;
  if (!qword_256F63048)
  {
    result = MEMORY[0x2426797E8](&protocol conformance descriptor for FeedbackLearning.TaskPromptStatus, &type metadata for FeedbackLearning.TaskPromptStatus);
    atomic_store(result, (unint64_t *)&qword_256F63048);
  }
  return result;
}

uint64_t type metadata accessor for FeedbackLearning.TaskAction(uint64_t a1)
{
  return sub_23FC04944(a1, qword_256F63500);
}

unint64_t sub_23FD11FAC()
{
  unint64_t result;

  result = qword_256F63058;
  if (!qword_256F63058)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7DF44, &_s10TaskActionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63058);
  }
  return result;
}

uint64_t type metadata accessor for FeedbackLearning.TaskFinalResolutionState(uint64_t a1)
{
  return sub_23FC04944(a1, (uint64_t *)&unk_256F635B0);
}

unint64_t sub_23FD11FFC()
{
  unint64_t result;

  result = qword_256F630B0;
  if (!qword_256F630B0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7DEF4, &_s24TaskFinalResolutionStateO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F630B0);
  }
  return result;
}

unint64_t sub_23FD12038()
{
  unint64_t result;

  result = qword_256F630B8;
  if (!qword_256F630B8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7DEA4, &_s24TaskFinalResolutionStateO20IncompleteCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F630B8);
  }
  return result;
}

unint64_t sub_23FD12074()
{
  unint64_t result;

  result = qword_256F630C0;
  if (!qword_256F630C0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7DE54, &_s24TaskFinalResolutionStateO18CompleteCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F630C0);
  }
  return result;
}

uint64_t type metadata accessor for FeedbackLearning.TaskEvaluation(uint64_t a1)
{
  return sub_23FC04944(a1, qword_256F63620);
}

unint64_t sub_23FD120C8()
{
  unint64_t result;

  result = qword_256F630F0;
  if (!qword_256F630F0)
  {
    result = MEMORY[0x2426797E8](&protocol conformance descriptor for FeedbackLearning.ConfirmationPromptResult, &type metadata for FeedbackLearning.ConfirmationPromptResult);
    atomic_store(result, (unint64_t *)&qword_256F630F0);
  }
  return result;
}

unint64_t sub_23FD12108()
{
  unint64_t result;

  result = qword_256F630F8;
  if (!qword_256F630F8)
  {
    result = MEMORY[0x2426797E8](&protocol conformance descriptor for FeedbackLearning.DisambiguationPromptResult, &type metadata for FeedbackLearning.DisambiguationPromptResult);
    atomic_store(result, (unint64_t *)&qword_256F630F8);
  }
  return result;
}

unint64_t sub_23FD12148()
{
  unint64_t result;

  result = qword_256F63100;
  if (!qword_256F63100)
  {
    result = MEMORY[0x2426797E8](&protocol conformance descriptor for FeedbackLearning.CandidateParameterResolution, &type metadata for FeedbackLearning.CandidateParameterResolution);
    atomic_store(result, (unint64_t *)&qword_256F63100);
  }
  return result;
}

void sub_23FD12184()
{
  sub_23FBFEE2C(&qword_256F63108, type metadata accessor for FeedbackLearning.CandidateParameter, (uint64_t)&protocol conformance descriptor for FeedbackLearning.CandidateParameter);
}

void type metadata accessor for FeedbackLearning.ConfirmationPromptResult()
{
  sub_23FC7A748();
}

void type metadata accessor for FeedbackLearning.DisambiguationPromptResult()
{
  sub_23FC7A748();
}

uint64_t _s16CandidateOutcomeOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v5;

  if (!a2)
  {
    v5 = -1;
    return v5 + 1;
  }
  if (a2 >= 0x3E)
  {
    if (a2 + 194 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 194) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 195;
    return v5 + 1;
  }
LABEL_17:
  v5 = (*a1 & 0x3C | (*a1 >> 6)) ^ 0x3F;
  if (v5 >= 0x3D)
    v5 = -1;
  return v5 + 1;
}

uint64_t _s16CandidateOutcomeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 194 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 194) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0x3E)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0x3D)
    return ((uint64_t (*)(void))((char *)&loc_23FD122B8 + 4 * byte_23FD7B931[v4]))();
  *a1 = a2 - 62;
  return ((uint64_t (*)(void))((char *)sub_23FD122EC + 4 * byte_23FD7B92C[v4]))();
}

uint64_t sub_23FD122EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23FD122F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23FD122FCLL);
  return result;
}

uint64_t sub_23FD12314(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23FD1231CLL);
  *(_BYTE *)result = 4 * (((-a2 >> 2) & 0xF) - 16 * a2);
  return result;
}

uint64_t sub_23FD12320(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23FD12328(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23FD12334(_BYTE *a1)
{
  int v1;

  v1 = (char)*a1;
  if (v1 >= 0)
    return *a1 >> 6;
  else
    return (v1 & 3u) + 2;
}

_BYTE *sub_23FD12350(_BYTE *result)
{
  *result &= 0x3Fu;
  return result;
}

_BYTE *sub_23FD12360(_BYTE *result, unsigned int a2)
{
  char v2;

  if (a2 < 2)
    v2 = *result & 3 | ((_BYTE)a2 << 6);
  else
    v2 = (a2 + 2) & 3 | 0x80;
  *result = v2;
  return result;
}

void type metadata accessor for FeedbackLearning.CandidateOutcome()
{
  sub_23FC7A748();
}

void type metadata accessor for FeedbackLearning.CandidateParameterResolution()
{
  sub_23FC7A748();
}

uint64_t _s20CandidateSearchQueryVwCP(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FD1C198(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE55288]);
}

uint64_t _s20CandidateSearchQueryVwxx()
{
  return sub_23FD1C1D0();
}

void _s20CandidateSearchQueryVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FD1C1FC(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE55288]);
}

void _s20CandidateSearchQueryVwca(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FD1C234(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE55288]);
}

void _s20CandidateSearchQueryVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FC09C6C(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE55288]);
}

void _s20CandidateSearchQueryVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FD1C278(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE55288]);
}

uint64_t _s20CandidateSearchQueryVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FD123F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_23FD2023C();
  return sub_23FC0A08C(v1, v0, v2);
}

uint64_t _s20CandidateSearchQueryVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FD12428()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23FD2023C();
  v0 = sub_23FC0A12C();
  return sub_23FC0A084(v0, v1, v2, v3);
}

void sub_23FD12444(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FD1C308(a1, a2, a3, (uint64_t (*)(uint64_t))MEMORY[0x24BE55288]);
}

uint64_t *_s18CandidateParameterOwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      swift_bridgeObjectRetain();
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        return a1;
      }
      v8 = sub_23FD7157C();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t _s18CandidateParameterOwxx(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
    return swift_bridgeObjectRelease();
  if (!(_DWORD)result)
  {
    v3 = sub_23FD7157C();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  return result;
}

_QWORD *_s18CandidateParameterOwcp(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    swift_bridgeObjectRetain();
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      return a1;
    }
    v7 = sub_23FD7157C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *_s18CandidateParameterOwca(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_23FCBA0CC();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        return a1;
      }
      v7 = sub_23FD7157C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *_s18CandidateParameterOwtk(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = sub_23FD7157C();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *_s18CandidateParameterOwta(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_23FCBA0CC();
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = sub_23FD7157C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_23FD12824()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23FD7157C();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

_QWORD *_s19CandidateEvaluationVwCP(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(_QWORD *, _QWORD *, uint64_t);
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  v7 = sub_23FD7157C();
  v8 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
  v8(a1, a2, v7);
  v9 = a3[5];
  v10 = (_QWORD *)((char *)a1 + v9);
  v11 = (_QWORD *)((char *)a2 + v9);
  v12 = type metadata accessor for FeedbackLearning.CandidateParameter(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v15 = v11[1];
    *v10 = *v11;
    v10[1] = v15;
    swift_bridgeObjectRetain();
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      goto LABEL_9;
    }
    v8(v10, v11, v7);
  }
  swift_storeEnumTagMultiPayload();
LABEL_9:
  v16 = a3[6];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = sub_23FD72DB8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  v20 = a3[7];
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = type metadata accessor for FeedbackLearning.CandidateSearchQuery(0);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v22, 1, v23))
  {
    v24 = sub_23FBFD684(&qword_256F62E30);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    v25 = sub_23FD73340();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v21, v22, v25);
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v21, 0, 1, v23);
  }
  v26 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *((_BYTE *)a1 + v26) = *((_BYTE *)a2 + v26);
  return a1;
}

uint64_t _s19CandidateEvaluationVwxx(uint64_t a1, int *a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;

  v4 = sub_23FD7157C();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v6 = a1 + a2[5];
  type metadata accessor for FeedbackLearning.CandidateParameter(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    swift_bridgeObjectRelease();
  }
  else if (!EnumCaseMultiPayload)
  {
    v5(v6, v4);
  }
  v8 = a1 + a2[6];
  v9 = sub_23FD72DB8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = a1 + a2[7];
  v11 = type metadata accessor for FeedbackLearning.CandidateSearchQuery(0);
  result = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v10, 1, v11);
  if (!(_DWORD)result)
  {
    v13 = sub_23FD73340();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v10, v13);
  }
  return result;
}

_QWORD *_s19CandidateEvaluationVwcp(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  void (*v7)(_QWORD *, _QWORD *, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = sub_23FD7157C();
  v7 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = (_QWORD *)((char *)a1 + v8);
  v10 = (_QWORD *)((char *)a2 + v8);
  v11 = type metadata accessor for FeedbackLearning.CandidateParameter(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v13 = v10[1];
    *v9 = *v10;
    v9[1] = v13;
    swift_bridgeObjectRetain();
    goto LABEL_5;
  }
  if (!EnumCaseMultiPayload)
  {
    v7(v9, v10, v6);
LABEL_5:
    swift_storeEnumTagMultiPayload();
    goto LABEL_7;
  }
  memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
LABEL_7:
  v14 = a3[6];
  v15 = (uint64_t)a1 + v14;
  v16 = (uint64_t)a2 + v14;
  v17 = sub_23FD72DB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
  v18 = a3[7];
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = type metadata accessor for FeedbackLearning.CandidateSearchQuery(0);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v20, 1, v21))
  {
    v22 = sub_23FBFD684(&qword_256F62E30);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v23 = sub_23FD73340();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v19, v20, v23);
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v19, 0, 1, v21);
  }
  v24 = a3[9];
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  *((_BYTE *)a1 + v24) = *((_BYTE *)a2 + v24);
  return a1;
}

uint64_t _s19CandidateEvaluationVwca(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  uint64_t v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;

  v6 = sub_23FD7157C();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(a1, a2, v6);
  if (a1 != a2)
  {
    v8 = a3[5];
    v9 = (_QWORD *)(a1 + v8);
    v10 = (_QWORD *)(a2 + v8);
    sub_23FCBA0CC();
    v11 = type metadata accessor for FeedbackLearning.CandidateParameter(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *v9 = *v10;
      v9[1] = v10[1];
      swift_bridgeObjectRetain();
      goto LABEL_6;
    }
    if (!EnumCaseMultiPayload)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(v9, v10, v6);
LABEL_6:
      swift_storeEnumTagMultiPayload();
      goto LABEL_8;
    }
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
LABEL_8:
  v13 = a3[6];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = sub_23FD72DB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 24))(v14, v15, v16);
  v17 = a3[7];
  v18 = (void *)(a1 + v17);
  v19 = (const void *)(a2 + v17);
  v20 = type metadata accessor for FeedbackLearning.CandidateSearchQuery(0);
  v21 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v18, 1, v20);
  v22 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v19, 1, v20);
  if (!v21)
  {
    if (!v22)
    {
      v26 = sub_23FD73340();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v18, v19, v26);
      goto LABEL_14;
    }
    sub_23FCBA0CC();
    goto LABEL_13;
  }
  if (v22)
  {
LABEL_13:
    v24 = sub_23FBFD684(&qword_256F62E30);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_14;
  }
  v23 = sub_23FD73340();
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v18, v19, v23);
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v18, 0, 1, v20);
LABEL_14:
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  return a1;
}

char *_s19CandidateEvaluationVwtk(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  void (*v7)(void *, const void *, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v6 = sub_23FD7157C();
  v7 = *(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = type metadata accessor for FeedbackLearning.CandidateParameter(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v7(v9, v10, v6);
    swift_storeEnumTagMultiPayload();
  }
  v12 = a3[6];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_23FD72DB8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  v16 = a3[7];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = type metadata accessor for FeedbackLearning.CandidateSearchQuery(0);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v18, 1, v19))
  {
    v20 = sub_23FBFD684(&qword_256F62E30);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    v21 = sub_23FD73340();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v17, v18, v21);
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v17, 0, 1, v19);
  }
  v22 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  a1[v22] = a2[v22];
  return a1;
}

uint64_t _s19CandidateEvaluationVwta(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;

  v6 = sub_23FD7157C();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(a1, a2, v6);
  if (a1 != a2)
  {
    v8 = a3[5];
    v9 = (void *)(a1 + v8);
    v10 = (const void *)(a2 + v8);
    sub_23FCBA0CC();
    v11 = type metadata accessor for FeedbackLearning.CandidateParameter(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(v9, v10, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_23FD72DB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  v16 = a3[7];
  v17 = (void *)(a1 + v16);
  v18 = (const void *)(a2 + v16);
  v19 = type metadata accessor for FeedbackLearning.CandidateSearchQuery(0);
  v20 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v17, 1, v19);
  v21 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v18, 1, v19);
  if (!v20)
  {
    if (!v21)
    {
      v26 = sub_23FD73340();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v17, v18, v26);
      goto LABEL_11;
    }
    sub_23FCBA0CC();
    goto LABEL_10;
  }
  if (v21)
  {
LABEL_10:
    v23 = sub_23FBFD684(&qword_256F62E30);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_11;
  }
  v22 = sub_23FD73340();
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v17, v18, v22);
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v17, 0, 1, v19);
LABEL_11:
  v24 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_BYTE *)(a1 + v24) = *(_BYTE *)(a2 + v24);
  return a1;
}

uint64_t _s19CandidateEvaluationVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FD132C4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;

  sub_23FC06250();
  sub_23FC06178();
  if (v8)
  {
    v6 = sub_23FC8A790();
  }
  else
  {
    type metadata accessor for FeedbackLearning.CandidateParameter(0);
    sub_23FC06178();
    if (v8)
    {
      sub_23FD206F4();
    }
    else
    {
      sub_23FC10130();
      sub_23FC06178();
      if (v10)
      {
        v7 = v11;
        v9 = a3[6];
      }
      else
      {
        sub_23FBFD684(&qword_256F62E30);
        sub_23FC06178();
        if (!v12)
        {
          sub_23FD20490(a3[8]);
          sub_23FC09258();
          return;
        }
        v7 = v13;
        v9 = a3[7];
      }
    }
    v6 = a1 + v9;
  }
  sub_23FC06098(v6, a2, v7);
}

uint64_t _s19CandidateEvaluationVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FD1336C(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  char v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_23FC06250();
  sub_23FC06188();
  if (v7)
  {
    sub_23FC5F4A8();
  }
  else
  {
    type metadata accessor for FeedbackLearning.CandidateParameter(0);
    sub_23FC06188();
    if (v7)
    {
      sub_23FD2063C();
    }
    else
    {
      sub_23FC10130();
      sub_23FC06188();
      if (!v8)
      {
        sub_23FBFD684(&qword_256F62E30);
        sub_23FC06188();
        if (!v9)
        {
          *(_BYTE *)(a1 + *(int *)(a4 + 32)) = a2 + 3;
          sub_23FC09258();
          return;
        }
      }
    }
  }
  sub_23FCF25B4();
  sub_23FC0608C(v10, v11, v12, v13);
}

void sub_23FD13410()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_23FD7157C();
  if (v0 <= 0x3F)
  {
    type metadata accessor for FeedbackLearning.CandidateParameter(319);
    if (v1 <= 0x3F)
    {
      sub_23FD72DB8();
      if (v2 <= 0x3F)
      {
        sub_23FD163CC(319, qword_256F632B0, (void (*)(uint64_t))type metadata accessor for FeedbackLearning.CandidateSearchQuery);
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

uint64_t *_s17TaskFailureReasonOwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v10 = sub_23FD7313C();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        return a1;
      }
      v8 = sub_23FD71648();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t _s17TaskFailureReasonOwxx(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
  {
    v3 = sub_23FD7313C();
  }
  else
  {
    if ((_DWORD)result)
      return result;
    v3 = sub_23FD71648();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
}

void *_s17TaskFailureReasonOwcp(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v8 = sub_23FD7313C();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      return a1;
    }
    v7 = sub_23FD71648();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *_s17TaskFailureReasonOwca(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_23FCBA0CC();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v8 = sub_23FD7313C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        return a1;
      }
      v7 = sub_23FD71648();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *_s17TaskFailureReasonOwtk(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v8 = sub_23FD7313C();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      return a1;
    }
    v7 = sub_23FD71648();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *_s17TaskFailureReasonOwta(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_23FCBA0CC();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v8 = sub_23FD7313C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        return a1;
      }
      v7 = sub_23FD71648();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23FD13964()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23FD71648();
  if (v1 <= 0x3F)
  {
    result = sub_23FD7313C();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t *_s10TaskStatusOwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
    return a1;
  }
  v7 = sub_23FBFD684(&qword_256F5D4F8);
  if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 4, v7))
  {
    v9 = type metadata accessor for FeedbackLearning.TaskFailureReason(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v12 = sub_23FD7313C();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
        goto LABEL_11;
      }
      v11 = sub_23FD71648();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
    }
    swift_storeEnumTagMultiPayload();
LABEL_11:
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 4, v7);
    return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  return a1;
}

void *_s10TaskStatusOwcp(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23FBFD684(&qword_256F5D4F8);
  if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 4, v6))
  {
    v7 = type metadata accessor for FeedbackLearning.TaskFailureReason(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v10 = sub_23FD7313C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
        goto LABEL_9;
      }
      v9 = sub_23FD71648();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
    }
    swift_storeEnumTagMultiPayload();
LABEL_9:
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 4, v6);
    return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

void *_s10TaskStatusOwca(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_23FBFD684(&qword_256F5D4F8);
  v7 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a1, 4, v6);
  v8 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 4, v6);
  if (v7)
  {
    if (!v8)
    {
      v9 = type metadata accessor for FeedbackLearning.TaskFailureReason(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        v16 = sub_23FD7313C();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(a1, a2, v16);
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
          goto LABEL_17;
        }
        v11 = sub_23FD71648();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      }
      swift_storeEnumTagMultiPayload();
LABEL_17:
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 4, v6);
      return a1;
    }
  }
  else
  {
    if (!v8)
    {
      if (a1 == a2)
        return a1;
      sub_23FCBA0CC();
      v13 = type metadata accessor for FeedbackLearning.TaskFailureReason(0);
      v14 = swift_getEnumCaseMultiPayload();
      if (v14 == 1)
      {
        v17 = sub_23FD7313C();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(a1, a2, v17);
      }
      else
      {
        if (v14)
        {
          v12 = *(_QWORD *)(v13 - 8);
          goto LABEL_9;
        }
        v15 = sub_23FD71648();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a1, a2, v15);
      }
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    sub_23FBFEF74((uint64_t)a1, &qword_256F5D4F8);
  }
  v12 = *(_QWORD *)(a3 - 8);
LABEL_9:
  memcpy(a1, a2, *(_QWORD *)(v12 + 64));
  return a1;
}

void *_s10TaskStatusOwtk(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23FBFD684(&qword_256F5D4F8);
  if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 4, v6))
  {
    v7 = type metadata accessor for FeedbackLearning.TaskFailureReason(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v10 = sub_23FD7313C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
        goto LABEL_9;
      }
      v9 = sub_23FD71648();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
    }
    swift_storeEnumTagMultiPayload();
LABEL_9:
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 4, v6);
    return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

void *_s10TaskStatusOwta(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_23FBFD684(&qword_256F5D4F8);
  v7 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a1, 4, v6);
  v8 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 4, v6);
  if (v7)
  {
    if (!v8)
    {
      v9 = type metadata accessor for FeedbackLearning.TaskFailureReason(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        v16 = sub_23FD7313C();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(a1, a2, v16);
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
          goto LABEL_17;
        }
        v11 = sub_23FD71648();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
      }
      swift_storeEnumTagMultiPayload();
LABEL_17:
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 4, v6);
      return a1;
    }
  }
  else
  {
    if (!v8)
    {
      if (a1 == a2)
        return a1;
      sub_23FCBA0CC();
      v13 = type metadata accessor for FeedbackLearning.TaskFailureReason(0);
      v14 = swift_getEnumCaseMultiPayload();
      if (v14 == 1)
      {
        v17 = sub_23FD7313C();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(a1, a2, v17);
      }
      else
      {
        if (v14)
        {
          v12 = *(_QWORD *)(v13 - 8);
          goto LABEL_9;
        }
        v15 = sub_23FD71648();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(a1, a2, v15);
      }
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    sub_23FBFEF74((uint64_t)a1, &qword_256F5D4F8);
  }
  v12 = *(_QWORD *)(a3 - 8);
LABEL_9:
  memcpy(a1, a2, *(_QWORD *)(v12 + 64));
  return a1;
}

uint64_t _s10TaskStatusOwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FD1415C()
{
  uint64_t v0;

  sub_23FD204C8();
  v0 = sub_23FBFD684(&qword_256F5D4F8);
  sub_23FD202E0(v0);
  sub_23FBFF0A0();
}

uint64_t _s10TaskStatusOwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FD14190()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23FD201F4();
  sub_23FBFD684(&qword_256F5D4F8);
  v0 = sub_23FC9C520();
  return sub_23FC0608C(v0, v1, v2, v3);
}

uint64_t sub_23FD141BC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23FBFD684(&qword_256F5D4F8);
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, 4, v2);
}

uint64_t sub_23FD141F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23FBFD684(&qword_256F5D4F8);
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a1, a2, 4, v4);
}

void sub_23FD1422C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FD1E164(a1, a2, a3, type metadata accessor for FeedbackLearning.TaskFailureReason);
}

uint64_t _s16TaskPromptStatusOwet(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  BOOL v7;
  unsigned int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
  {
    v6 = *a1;
    v7 = v6 >= 3;
    v8 = v6 - 3;
    if (!v7)
      v8 = -1;
    if (v8 + 1 >= 2)
      return v8;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 3;
    if (a2 + 3 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_23FD1428C + 4 * byte_23FD7B936[v4]))();
  }
}

uint64_t _s16TaskPromptStatusOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 3;
  if (a3 + 3 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFD)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23FD14334 + 4 * byte_23FD7B940[v5]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23FD14368 + 4 * byte_23FD7B93B[v5]))();
}

uint64_t sub_23FD14368(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23FD14370(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23FD14378);
  return result;
}

uint64_t sub_23FD14384(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23FD1438CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23FD14390(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23FD14398(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23FD143A4(unsigned __int8 *a1)
{
  unsigned int v1;

  v1 = *a1;
  if (v1 >= 3)
    return v1 - 2;
  else
    return 0;
}

_BYTE *sub_23FD143B8(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 2;
  return result;
}

void type metadata accessor for FeedbackLearning.TaskPromptStatus()
{
  sub_23FC7A748();
}

uint64_t *_s11TaskOutcomeVwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    v7 = sub_23FBFD684(&qword_256F5D4F8);
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 4, v7))
    {
      v8 = type metadata accessor for FeedbackLearning.TaskStatus(0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
LABEL_12:
      *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
      return a1;
    }
    v10 = type metadata accessor for FeedbackLearning.TaskFailureReason(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v13 = sub_23FD7313C();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
        goto LABEL_11;
      }
      v12 = sub_23FD71648();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
    }
    swift_storeEnumTagMultiPayload();
LABEL_11:
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 4, v7);
    goto LABEL_12;
  }
  v9 = *a2;
  *a1 = *a2;
  a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

void _s10TaskStatusOwxx_0()
{
  uint64_t v0;
  int EnumCaseMultiPayload;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v0 = sub_23FBFD684(&qword_256F5D4F8);
  if (sub_23FD20330(v0))
    goto LABEL_2;
  type metadata accessor for FeedbackLearning.TaskFailureReason(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    sub_23FD7313C();
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
LABEL_2:
      sub_23FBFF0A0();
      return;
    }
    sub_23FD1FF08();
  }
  v2 = sub_23FCF298C();
  sub_23FD1FD10(v2, v3, v4);
}

void *_s11TaskOutcomeVwcp(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_23FBFD684(&qword_256F5D4F8);
  if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 4, v6))
  {
    v8 = type metadata accessor for FeedbackLearning.TaskFailureReason(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v11 = sub_23FD7313C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
        goto LABEL_9;
      }
      v10 = sub_23FD71648();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
    }
    swift_storeEnumTagMultiPayload();
LABEL_9:
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 4, v6);
    goto LABEL_10;
  }
  v7 = type metadata accessor for FeedbackLearning.TaskStatus(0);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
LABEL_10:
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *_s11TaskOutcomeVwca(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_23FBFD684(&qword_256F5D4F8);
  v7 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a1, 4, v6);
  v8 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 4, v6);
  if (v7)
  {
    if (!v8)
    {
      v9 = type metadata accessor for FeedbackLearning.TaskFailureReason(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        v16 = sub_23FD7313C();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(a1, a2, v16);
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
          goto LABEL_17;
        }
        v11 = sub_23FD71648();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      }
      swift_storeEnumTagMultiPayload();
LABEL_17:
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 4, v6);
      goto LABEL_20;
    }
  }
  else
  {
    if (!v8)
    {
      if (a1 == a2)
        goto LABEL_20;
      sub_23FCBA0CC();
      v13 = type metadata accessor for FeedbackLearning.TaskFailureReason(0);
      v14 = swift_getEnumCaseMultiPayload();
      if (v14 == 1)
      {
        v17 = sub_23FD7313C();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(a1, a2, v17);
      }
      else
      {
        if (v14)
        {
          v12 = *(_QWORD *)(v13 - 8);
          goto LABEL_9;
        }
        v15 = sub_23FD71648();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a1, a2, v15);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_20;
    }
    sub_23FBFEF74((uint64_t)a1, &qword_256F5D4F8);
  }
  v12 = *(_QWORD *)(type metadata accessor for FeedbackLearning.TaskStatus(0) - 8);
LABEL_9:
  memcpy(a1, a2, *(_QWORD *)(v12 + 64));
LABEL_20:
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *_s11TaskOutcomeVwtk(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_23FBFD684(&qword_256F5D4F8);
  if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 4, v6))
  {
    v8 = type metadata accessor for FeedbackLearning.TaskFailureReason(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v11 = sub_23FD7313C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
        goto LABEL_9;
      }
      v10 = sub_23FD71648();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
    }
    swift_storeEnumTagMultiPayload();
LABEL_9:
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 4, v6);
    goto LABEL_10;
  }
  v7 = type metadata accessor for FeedbackLearning.TaskStatus(0);
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
LABEL_10:
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *_s11TaskOutcomeVwta(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_23FBFD684(&qword_256F5D4F8);
  v7 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a1, 4, v6);
  v8 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 4, v6);
  if (v7)
  {
    if (!v8)
    {
      v9 = type metadata accessor for FeedbackLearning.TaskFailureReason(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        v16 = sub_23FD7313C();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(a1, a2, v16);
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
          goto LABEL_17;
        }
        v11 = sub_23FD71648();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
      }
      swift_storeEnumTagMultiPayload();
LABEL_17:
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 4, v6);
      goto LABEL_20;
    }
  }
  else
  {
    if (!v8)
    {
      if (a1 == a2)
        goto LABEL_20;
      sub_23FCBA0CC();
      v13 = type metadata accessor for FeedbackLearning.TaskFailureReason(0);
      v14 = swift_getEnumCaseMultiPayload();
      if (v14 == 1)
      {
        v17 = sub_23FD7313C();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(a1, a2, v17);
      }
      else
      {
        if (v14)
        {
          v12 = *(_QWORD *)(v13 - 8);
          goto LABEL_9;
        }
        v15 = sub_23FD71648();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(a1, a2, v15);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_20;
    }
    sub_23FBFEF74((uint64_t)a1, &qword_256F5D4F8);
  }
  v12 = *(_QWORD *)(type metadata accessor for FeedbackLearning.TaskStatus(0) - 8);
LABEL_9:
  memcpy(a1, a2, *(_QWORD *)(v12 + 64));
LABEL_20:
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t _s11TaskOutcomeVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FD14C34(uint64_t a1, uint64_t a2)
{
  sub_23FD1A770(a1, a2);
}

uint64_t _s11TaskOutcomeVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FD14C4C()
{
  sub_23FD1A7F4();
}

void sub_23FD14C58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FD1A85C(a1, a2, a3, type metadata accessor for FeedbackLearning.TaskStatus);
}

_QWORD *_s10TaskActionVwCP(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23FD71474();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(type metadata accessor for FeedbackLearning.FlowActionEvent(0) + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    type metadata accessor for FeedbackLearning.ActionValue(0);
    if (swift_getEnumCaseMultiPayload() == 1)
      v11 = sub_23FD730F4();
    else
      v11 = sub_23FD73C7C();
    (*(void (**)(char *, char *))(*(_QWORD *)(v11 - 8) + 16))(v9, v10);
    swift_storeEnumTagMultiPayload();
    v13 = *(int *)(a3 + 20);
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = sub_23FD74474();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  }
  return a1;
}

uint64_t _s10TaskActionVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(type metadata accessor for FeedbackLearning.FlowActionEvent(0) + 20);
  type metadata accessor for FeedbackLearning.ActionValue(0);
  if (swift_getEnumCaseMultiPayload() == 1)
    v6 = sub_23FD730F4();
  else
    v6 = sub_23FD73C7C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + *(int *)(a2 + 20);
  v8 = sub_23FD74474();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

uint64_t _s10TaskActionVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(type metadata accessor for FeedbackLearning.FlowActionEvent(0) + 20);
  type metadata accessor for FeedbackLearning.ActionValue(0);
  if (swift_getEnumCaseMultiPayload() == 1)
    v8 = sub_23FD730F4();
  else
    v8 = sub_23FD73C7C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1 + v7, a2 + v7);
  swift_storeEnumTagMultiPayload();
  v9 = *(int *)(a3 + 20);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_23FD74474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t _s10TaskActionVwca(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = type metadata accessor for FeedbackLearning.FlowActionEvent(0);
  if (a1 != a2)
  {
    v8 = *(int *)(v7 + 20);
    v9 = a1 + v8;
    v10 = a2 + v8;
    sub_23FCBA0CC();
    type metadata accessor for FeedbackLearning.ActionValue(0);
    if (swift_getEnumCaseMultiPayload() == 1)
      v11 = sub_23FD730F4();
    else
      v11 = sub_23FD73C7C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10);
    swift_storeEnumTagMultiPayload();
  }
  v12 = *(int *)(a3 + 20);
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_23FD74474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t _s10TaskActionVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(type metadata accessor for FeedbackLearning.FlowActionEvent(0) + 20);
  type metadata accessor for FeedbackLearning.ActionValue(0);
  if (swift_getEnumCaseMultiPayload() == 1)
    v8 = sub_23FD730F4();
  else
    v8 = sub_23FD73C7C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1 + v7, a2 + v7);
  swift_storeEnumTagMultiPayload();
  v9 = *(int *)(a3 + 20);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_23FD74474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t _s10TaskActionVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = type metadata accessor for FeedbackLearning.FlowActionEvent(0);
  if (a1 != a2)
  {
    v8 = *(int *)(v7 + 20);
    v9 = a1 + v8;
    v10 = a2 + v8;
    sub_23FCBA0CC();
    type metadata accessor for FeedbackLearning.ActionValue(0);
    if (swift_getEnumCaseMultiPayload() == 1)
      v11 = sub_23FD730F4();
    else
      v11 = sub_23FD73C7C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10);
    swift_storeEnumTagMultiPayload();
  }
  v12 = *(int *)(a3 + 20);
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_23FD74474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t _s10TaskActionVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FD152F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  unsigned int v10;

  sub_23FD1FFF0();
  sub_23FC06178();
  if (v8)
  {
    v6 = sub_23FC8A790();
LABEL_7:
    sub_23FC06098(v6, a2, v7);
    return;
  }
  sub_23FD74474();
  sub_23FC06178();
  if (v8)
  {
    sub_23FD206F4();
    v6 = a1 + v9;
    goto LABEL_7;
  }
  v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
  if (v10 >= 2)
    sub_23FD20424(v10);
  sub_23FC09258();
}

uint64_t _s10TaskActionVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FD15374()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = sub_23FD1FD78();
  type metadata accessor for FeedbackLearning.FlowActionEvent(v3);
  sub_23FC06188();
  if (v4)
  {
    sub_23FC5F4A8();
  }
  else
  {
    sub_23FD74474();
    sub_23FC06188();
    if (!v4)
    {
      *(_BYTE *)(v1 + *(int *)(v2 + 24)) = v0 + 1;
      sub_23FC09258();
      return;
    }
    sub_23FD2063C();
  }
  sub_23FCF25B4();
  sub_23FC0608C(v5, v6, v7, v8);
}

uint64_t sub_23FD153D4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for FeedbackLearning.FlowActionEvent(319);
  if (v1 <= 0x3F)
  {
    result = sub_23FD74474();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *_s24TaskFinalResolutionStateOwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = sub_23FBFD684(&qword_256F5D4E8);
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v9 = type metadata accessor for FeedbackLearning.TaskAction(0);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v9))
      {
        v10 = sub_23FBFD684(&qword_256F5D4E0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      }
      else
      {
        v11 = sub_23FD71474();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
        v12 = *(int *)(type metadata accessor for FeedbackLearning.FlowActionEvent(0) + 20);
        v13 = (char *)a1 + v12;
        v14 = (char *)a2 + v12;
        type metadata accessor for FeedbackLearning.ActionValue(0);
        if (swift_getEnumCaseMultiPayload() == 1)
          v15 = sub_23FD730F4();
        else
          v15 = sub_23FD73C7C();
        (*(void (**)(char *, char *))(*(_QWORD *)(v15 - 8) + 16))(v13, v14);
        swift_storeEnumTagMultiPayload();
        v16 = *(int *)(v9 + 20);
        v17 = (char *)a1 + v16;
        v18 = (char *)a2 + v16;
        v19 = sub_23FD74474();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
        *((_BYTE *)a1 + *(int *)(v9 + 24)) = *((_BYTE *)a2 + *(int *)(v9 + 24));
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v9);
      }
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t _s24TaskFinalResolutionStateOwxx(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = sub_23FBFD684(&qword_256F5D4E8);
  result = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, 1, v2);
  if (!(_DWORD)result)
  {
    v4 = type metadata accessor for FeedbackLearning.TaskAction(0);
    result = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, 1, v4);
    if (!(_DWORD)result)
    {
      v5 = sub_23FD71474();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
      v6 = a1 + *(int *)(type metadata accessor for FeedbackLearning.FlowActionEvent(0) + 20);
      type metadata accessor for FeedbackLearning.ActionValue(0);
      if (swift_getEnumCaseMultiPayload() == 1)
        v7 = sub_23FD730F4();
      else
        v7 = sub_23FD73C7C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
      v8 = a1 + *(int *)(v4 + 20);
      v9 = sub_23FD74474();
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
    }
  }
  return result;
}

char *_s24TaskFinalResolutionStateOwcp(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  v6 = sub_23FBFD684(&qword_256F5D4E8);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = type metadata accessor for FeedbackLearning.TaskAction(0);
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v7))
    {
      v8 = sub_23FBFD684(&qword_256F5D4E0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      v9 = sub_23FD71474();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      v10 = *(int *)(type metadata accessor for FeedbackLearning.FlowActionEvent(0) + 20);
      v11 = &a1[v10];
      v12 = &a2[v10];
      type metadata accessor for FeedbackLearning.ActionValue(0);
      if (swift_getEnumCaseMultiPayload() == 1)
        v13 = sub_23FD730F4();
      else
        v13 = sub_23FD73C7C();
      (*(void (**)(char *, char *))(*(_QWORD *)(v13 - 8) + 16))(v11, v12);
      swift_storeEnumTagMultiPayload();
      v14 = *(int *)(v7 + 20);
      v15 = &a1[v14];
      v16 = &a2[v14];
      v17 = sub_23FD74474();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
      a1[*(int *)(v7 + 24)] = a2[*(int *)(v7 + 24)];
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v7);
    }
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

char *_s24TaskFinalResolutionStateOwca(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;

  v6 = sub_23FBFD684(&qword_256F5D4E8);
  v7 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a1, 1, v6);
  v8 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      v9 = type metadata accessor for FeedbackLearning.TaskAction(0);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v9))
      {
        v10 = sub_23FBFD684(&qword_256F5D4E0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      }
      else
      {
        v19 = sub_23FD71474();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(a1, a2, v19);
        v20 = *(int *)(type metadata accessor for FeedbackLearning.FlowActionEvent(0) + 20);
        v21 = &a1[v20];
        v22 = &a2[v20];
        type metadata accessor for FeedbackLearning.ActionValue(0);
        if (swift_getEnumCaseMultiPayload() == 1)
          v23 = sub_23FD730F4();
        else
          v23 = sub_23FD73C7C();
        (*(void (**)(char *, char *))(*(_QWORD *)(v23 - 8) + 16))(v21, v22);
        swift_storeEnumTagMultiPayload();
        v24 = *(int *)(v9 + 20);
        v25 = &a1[v24];
        v26 = &a2[v24];
        v27 = sub_23FD74474();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
        a1[*(int *)(v9 + 24)] = a2[*(int *)(v9 + 24)];
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v9);
      }
LABEL_25:
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v6);
      return a1;
    }
    goto LABEL_7;
  }
  if (v8)
  {
    sub_23FBFEF74((uint64_t)a1, &qword_256F5D4E8);
LABEL_7:
    v11 = *(_QWORD *)(a3 - 8);
LABEL_8:
    memcpy(a1, a2, *(_QWORD *)(v11 + 64));
    return a1;
  }
  v6 = type metadata accessor for FeedbackLearning.TaskAction(0);
  v12 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a1, 1, v6);
  v13 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v6);
  if (v12)
  {
    if (!v13)
    {
      v14 = sub_23FD71474();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
      v15 = *(int *)(type metadata accessor for FeedbackLearning.FlowActionEvent(0) + 20);
      v16 = &a1[v15];
      v17 = &a2[v15];
      type metadata accessor for FeedbackLearning.ActionValue(0);
      if (swift_getEnumCaseMultiPayload() == 1)
        v18 = sub_23FD730F4();
      else
        v18 = sub_23FD73C7C();
      (*(void (**)(char *, char *))(*(_QWORD *)(v18 - 8) + 16))(v16, v17);
      swift_storeEnumTagMultiPayload();
      v34 = *(int *)(v6 + 20);
      v35 = &a1[v34];
      v36 = &a2[v34];
      v37 = sub_23FD74474();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v35, v36, v37);
      a1[*(int *)(v6 + 24)] = a2[*(int *)(v6 + 24)];
      goto LABEL_25;
    }
    goto LABEL_17;
  }
  if (v13)
  {
    sub_23FCBA0CC();
LABEL_17:
    v11 = *(_QWORD *)(sub_23FBFD684(&qword_256F5D4E0) - 8);
    goto LABEL_8;
  }
  v28 = sub_23FD71474();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 24))(a1, a2, v28);
  v29 = type metadata accessor for FeedbackLearning.FlowActionEvent(0);
  if (a1 != a2)
  {
    v30 = *(int *)(v29 + 20);
    v31 = &a1[v30];
    v32 = &a2[v30];
    sub_23FCBA0CC();
    type metadata accessor for FeedbackLearning.ActionValue(0);
    if (swift_getEnumCaseMultiPayload() == 1)
      v33 = sub_23FD730F4();
    else
      v33 = sub_23FD73C7C();
    (*(void (**)(char *, char *))(*(_QWORD *)(v33 - 8) + 16))(v31, v32);
    swift_storeEnumTagMultiPayload();
  }
  v39 = *(int *)(v6 + 20);
  v40 = &a1[v39];
  v41 = &a2[v39];
  v42 = sub_23FD74474();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 24))(v40, v41, v42);
  a1[*(int *)(v6 + 24)] = a2[*(int *)(v6 + 24)];
  return a1;
}

char *_s24TaskFinalResolutionStateOwtk(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  v6 = sub_23FBFD684(&qword_256F5D4E8);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = type metadata accessor for FeedbackLearning.TaskAction(0);
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v7))
    {
      v8 = sub_23FBFD684(&qword_256F5D4E0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      v9 = sub_23FD71474();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
      v10 = *(int *)(type metadata accessor for FeedbackLearning.FlowActionEvent(0) + 20);
      v11 = &a1[v10];
      v12 = &a2[v10];
      type metadata accessor for FeedbackLearning.ActionValue(0);
      if (swift_getEnumCaseMultiPayload() == 1)
        v13 = sub_23FD730F4();
      else
        v13 = sub_23FD73C7C();
      (*(void (**)(char *, char *))(*(_QWORD *)(v13 - 8) + 32))(v11, v12);
      swift_storeEnumTagMultiPayload();
      v14 = *(int *)(v7 + 20);
      v15 = &a1[v14];
      v16 = &a2[v14];
      v17 = sub_23FD74474();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
      a1[*(int *)(v7 + 24)] = a2[*(int *)(v7 + 24)];
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v7);
    }
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

char *_s24TaskFinalResolutionStateOwta(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;

  v6 = sub_23FBFD684(&qword_256F5D4E8);
  v7 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a1, 1, v6);
  v8 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      v9 = type metadata accessor for FeedbackLearning.TaskAction(0);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v9))
      {
        v10 = sub_23FBFD684(&qword_256F5D4E0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      }
      else
      {
        v19 = sub_23FD71474();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a1, a2, v19);
        v20 = *(int *)(type metadata accessor for FeedbackLearning.FlowActionEvent(0) + 20);
        v21 = &a1[v20];
        v22 = &a2[v20];
        type metadata accessor for FeedbackLearning.ActionValue(0);
        if (swift_getEnumCaseMultiPayload() == 1)
          v23 = sub_23FD730F4();
        else
          v23 = sub_23FD73C7C();
        (*(void (**)(char *, char *))(*(_QWORD *)(v23 - 8) + 32))(v21, v22);
        swift_storeEnumTagMultiPayload();
        v24 = *(int *)(v9 + 20);
        v25 = &a1[v24];
        v26 = &a2[v24];
        v27 = sub_23FD74474();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
        a1[*(int *)(v9 + 24)] = a2[*(int *)(v9 + 24)];
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v9);
      }
LABEL_25:
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v6);
      return a1;
    }
    goto LABEL_7;
  }
  if (v8)
  {
    sub_23FBFEF74((uint64_t)a1, &qword_256F5D4E8);
LABEL_7:
    v11 = *(_QWORD *)(a3 - 8);
LABEL_8:
    memcpy(a1, a2, *(_QWORD *)(v11 + 64));
    return a1;
  }
  v6 = type metadata accessor for FeedbackLearning.TaskAction(0);
  v12 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a1, 1, v6);
  v13 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v6);
  if (v12)
  {
    if (!v13)
    {
      v14 = sub_23FD71474();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a1, a2, v14);
      v15 = *(int *)(type metadata accessor for FeedbackLearning.FlowActionEvent(0) + 20);
      v16 = &a1[v15];
      v17 = &a2[v15];
      type metadata accessor for FeedbackLearning.ActionValue(0);
      if (swift_getEnumCaseMultiPayload() == 1)
        v18 = sub_23FD730F4();
      else
        v18 = sub_23FD73C7C();
      (*(void (**)(char *, char *))(*(_QWORD *)(v18 - 8) + 32))(v16, v17);
      swift_storeEnumTagMultiPayload();
      v34 = *(int *)(v6 + 20);
      v35 = &a1[v34];
      v36 = &a2[v34];
      v37 = sub_23FD74474();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v35, v36, v37);
      a1[*(int *)(v6 + 24)] = a2[*(int *)(v6 + 24)];
      goto LABEL_25;
    }
    goto LABEL_17;
  }
  if (v13)
  {
    sub_23FCBA0CC();
LABEL_17:
    v11 = *(_QWORD *)(sub_23FBFD684(&qword_256F5D4E0) - 8);
    goto LABEL_8;
  }
  v28 = sub_23FD71474();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 40))(a1, a2, v28);
  v29 = type metadata accessor for FeedbackLearning.FlowActionEvent(0);
  if (a1 != a2)
  {
    v30 = *(int *)(v29 + 20);
    v31 = &a1[v30];
    v32 = &a2[v30];
    sub_23FCBA0CC();
    type metadata accessor for FeedbackLearning.ActionValue(0);
    if (swift_getEnumCaseMultiPayload() == 1)
      v33 = sub_23FD730F4();
    else
      v33 = sub_23FD73C7C();
    (*(void (**)(char *, char *))(*(_QWORD *)(v33 - 8) + 32))(v31, v32);
    swift_storeEnumTagMultiPayload();
  }
  v39 = *(int *)(v6 + 20);
  v40 = &a1[v39];
  v41 = &a2[v39];
  v42 = sub_23FD74474();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 40))(v40, v41, v42);
  a1[*(int *)(v6 + 24)] = a2[*(int *)(v6 + 24)];
  return a1;
}

uint64_t _s24TaskFinalResolutionStateOwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FD162E8()
{
  uint64_t v0;

  sub_23FD204C8();
  v0 = sub_23FBFD684(&qword_256F5D4E8);
  sub_23FD20308(v0);
  sub_23FBFF0A0();
}

uint64_t _s24TaskFinalResolutionStateOwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FD1631C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23FD2044C();
  sub_23FBFD684(&qword_256F5D4E8);
  v0 = sub_23FC9C520();
  return sub_23FC0608C(v0, v1, v2, v3);
}

uint64_t sub_23FD16348(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23FBFD684(&qword_256F5D4E8);
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, 1, v2);
}

uint64_t sub_23FD1637C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23FBFD684(&qword_256F5D4E8);
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a1, a2, 1, v4);
}

void sub_23FD163B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FD1CBE0(a1, a2, a3, &qword_256F635C0, (void (*)(uint64_t))type metadata accessor for FeedbackLearning.TaskAction);
}

void sub_23FD163CC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_23FD75038();
    if (!v5)
      atomic_store(v4, a2);
  }
  sub_23FBFF0A0();
}

uint64_t *_s14TaskEvaluationVwCP(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int EnumCaseMultiPayload;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) == 0)
  {
    v7 = sub_23FD71474();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = a3[5];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_23FD7157C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    v13 = a3[6];
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = sub_23FD72D28();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    v17 = a3[8];
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    swift_bridgeObjectRetain();
    v20 = sub_23FBFD684(&qword_256F5D4E8);
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v19, 1, v20))
    {
      v21 = type metadata accessor for FeedbackLearning.TaskFinalResolutionState(0);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      v23 = type metadata accessor for FeedbackLearning.TaskAction(0);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v19, 1, v23))
      {
        v24 = sub_23FBFD684(&qword_256F5D4E0);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        v8((uint64_t *)v18, (uint64_t *)v19, v7);
        v25 = *(int *)(type metadata accessor for FeedbackLearning.FlowActionEvent(0) + 20);
        v26 = &v18[v25];
        v27 = &v19[v25];
        type metadata accessor for FeedbackLearning.ActionValue(0);
        if (swift_getEnumCaseMultiPayload() == 1)
          v28 = sub_23FD730F4();
        else
          v28 = sub_23FD73C7C();
        (*(void (**)(char *, char *))(*(_QWORD *)(v28 - 8) + 16))(v26, v27);
        swift_storeEnumTagMultiPayload();
        v29 = *(int *)(v23 + 20);
        v30 = &v18[v29];
        v31 = &v19[v29];
        v32 = sub_23FD74474();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v30, v31, v32);
        v18[*(int *)(v23 + 24)] = v19[*(int *)(v23 + 24)];
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v18, 0, 1, v23);
      }
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v18, 0, 1, v20);
    }
    v33 = a3[9];
    v34 = (char *)a1 + v33;
    v35 = (char *)a2 + v33;
    v36 = sub_23FBFD684(&qword_256F5D4F8);
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v35, 4, v36))
    {
      v37 = type metadata accessor for FeedbackLearning.TaskStatus(0);
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
LABEL_21:
      v42 = type metadata accessor for FeedbackLearning.TaskOutcome(0);
      v34[*(int *)(v42 + 20)] = v35[*(int *)(v42 + 20)];
      v43 = a3[10];
      v44 = (char *)a1 + v43;
      v45 = (char *)a2 + v43;
      *v44 = *v45;
      v44[8] = v45[8];
      v46 = *((_QWORD *)v45 + 3);
      *((_QWORD *)v44 + 2) = *((_QWORD *)v45 + 2);
      *((_QWORD *)v44 + 3) = v46;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
    v38 = type metadata accessor for FeedbackLearning.TaskFailureReason(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v41 = sub_23FD7313C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v34, v35, v41);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
        goto LABEL_20;
      }
      v40 = sub_23FD71648();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v34, v35, v40);
    }
    swift_storeEnumTagMultiPayload();
LABEL_20:
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v34, 0, 4, v36);
    goto LABEL_21;
  }
  v22 = *a2;
  *a1 = *a2;
  a1 = (uint64_t *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t _s14TaskEvaluationVwxx(uint64_t a1, int *a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int EnumCaseMultiPayload;
  uint64_t v20;

  v4 = sub_23FD71474();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v6 = a1 + a2[5];
  v7 = sub_23FD7157C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = a1 + a2[6];
  v9 = sub_23FD72D28();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();
  v10 = a1 + a2[8];
  v11 = sub_23FBFD684(&qword_256F5D4E8);
  if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v10, 1, v11))
  {
    v12 = type metadata accessor for FeedbackLearning.TaskAction(0);
    if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v10, 1, v12))
    {
      v5(v10, v4);
      v13 = v10 + *(int *)(type metadata accessor for FeedbackLearning.FlowActionEvent(0) + 20);
      type metadata accessor for FeedbackLearning.ActionValue(0);
      if (swift_getEnumCaseMultiPayload() == 1)
        v14 = sub_23FD730F4();
      else
        v14 = sub_23FD73C7C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
      v15 = v10 + *(int *)(v12 + 20);
      v16 = sub_23FD74474();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
    }
  }
  v17 = a1 + a2[9];
  v18 = sub_23FBFD684(&qword_256F5D4F8);
  if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v17, 4, v18))
  {
    type metadata accessor for FeedbackLearning.TaskFailureReason(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v20 = sub_23FD7313C();
      goto LABEL_12;
    }
    if (!EnumCaseMultiPayload)
    {
      v20 = sub_23FD71648();
LABEL_12:
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v17, v20);
    }
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s14TaskEvaluationVwcp(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  const void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int EnumCaseMultiPayload;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v6 = sub_23FD71474();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_23FD7157C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_23FD72D28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  v16 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v17 = (char *)(a1 + v16);
  v18 = (char *)(a2 + v16);
  swift_bridgeObjectRetain();
  v19 = sub_23FBFD684(&qword_256F5D4E8);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v18, 1, v19))
  {
    v20 = type metadata accessor for FeedbackLearning.TaskFinalResolutionState(0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    v21 = type metadata accessor for FeedbackLearning.TaskAction(0);
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v18, 1, v21))
    {
      v22 = sub_23FBFD684(&qword_256F5D4E0);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      v7((uint64_t)v17, (uint64_t)v18, v6);
      v23 = *(int *)(type metadata accessor for FeedbackLearning.FlowActionEvent(0) + 20);
      v24 = &v17[v23];
      v25 = &v18[v23];
      type metadata accessor for FeedbackLearning.ActionValue(0);
      if (swift_getEnumCaseMultiPayload() == 1)
        v26 = sub_23FD730F4();
      else
        v26 = sub_23FD73C7C();
      (*(void (**)(char *, char *))(*(_QWORD *)(v26 - 8) + 16))(v24, v25);
      swift_storeEnumTagMultiPayload();
      v27 = *(int *)(v21 + 20);
      v28 = &v17[v27];
      v29 = &v18[v27];
      v30 = sub_23FD74474();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
      v17[*(int *)(v21 + 24)] = v18[*(int *)(v21 + 24)];
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v17, 0, 1, v21);
    }
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v17, 0, 1, v19);
  }
  v31 = a3[9];
  v32 = (void *)(a1 + v31);
  v33 = (const void *)(a2 + v31);
  v34 = sub_23FBFD684(&qword_256F5D4F8);
  if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v33, 4, v34))
  {
    v36 = type metadata accessor for FeedbackLearning.TaskFailureReason(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v39 = sub_23FD7313C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v32, v33, v39);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
        goto LABEL_18;
      }
      v38 = sub_23FD71648();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v32, v33, v38);
    }
    swift_storeEnumTagMultiPayload();
LABEL_18:
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v32, 0, 4, v34);
    goto LABEL_19;
  }
  v35 = type metadata accessor for FeedbackLearning.TaskStatus(0);
  memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
LABEL_19:
  v40 = type metadata accessor for FeedbackLearning.TaskOutcome(0);
  *((_BYTE *)v32 + *(int *)(v40 + 20)) = *((_BYTE *)v33 + *(int *)(v40 + 20));
  v41 = a3[10];
  v42 = a1 + v41;
  v43 = a2 + v41;
  *(_BYTE *)v42 = *(_BYTE *)v43;
  *(_BYTE *)(v42 + 8) = *(_BYTE *)(v43 + 8);
  v44 = *(_QWORD *)(v43 + 24);
  *(_QWORD *)(v42 + 16) = *(_QWORD *)(v43 + 16);
  *(_QWORD *)(v42 + 24) = v44;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s14TaskEvaluationVwca(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  const void *v51;
  uint64_t v52;
  int v53;
  int v54;
  uint64_t v55;
  int EnumCaseMultiPayload;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;

  v6 = sub_23FD71474();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_23FD7157C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  v13 = a3[6];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = sub_23FD72D28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 24))(v14, v15, v16);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17 = a3[8];
  v18 = (char *)(a1 + v17);
  v19 = (char *)(a2 + v17);
  v20 = sub_23FBFD684(&qword_256F5D4E8);
  v21 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v18, 1, v20);
  v22 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v19, 1, v20);
  if (v21)
  {
    if (!v22)
    {
      v23 = type metadata accessor for FeedbackLearning.TaskAction(0);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v19, 1, v23))
      {
        v24 = sub_23FBFD684(&qword_256F5D4E0);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v18, v19, v6);
        v32 = *(int *)(type metadata accessor for FeedbackLearning.FlowActionEvent(0) + 20);
        v33 = &v18[v32];
        v34 = &v19[v32];
        type metadata accessor for FeedbackLearning.ActionValue(0);
        if (swift_getEnumCaseMultiPayload() == 1)
          v35 = sub_23FD730F4();
        else
          v35 = sub_23FD73C7C();
        (*(void (**)(char *, char *))(*(_QWORD *)(v35 - 8) + 16))(v33, v34);
        swift_storeEnumTagMultiPayload();
        v36 = *(int *)(v23 + 20);
        v37 = &v18[v36];
        v38 = &v19[v36];
        v39 = sub_23FD74474();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
        v18[*(int *)(v23 + 24)] = v19[*(int *)(v23 + 24)];
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v18, 0, 1, v23);
      }
LABEL_25:
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v18, 0, 1, v20);
      goto LABEL_26;
    }
    goto LABEL_7;
  }
  if (v22)
  {
    sub_23FBFEF74((uint64_t)v18, &qword_256F5D4E8);
LABEL_7:
    v25 = type metadata accessor for FeedbackLearning.TaskFinalResolutionState(0);
LABEL_8:
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_26;
  }
  v20 = type metadata accessor for FeedbackLearning.TaskAction(0);
  v26 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v18, 1, v20);
  v27 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v19, 1, v20);
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v18, v19, v6);
      v28 = *(int *)(type metadata accessor for FeedbackLearning.FlowActionEvent(0) + 20);
      v29 = &v18[v28];
      v30 = &v19[v28];
      type metadata accessor for FeedbackLearning.ActionValue(0);
      if (swift_getEnumCaseMultiPayload() == 1)
        v31 = sub_23FD730F4();
      else
        v31 = sub_23FD73C7C();
      (*(void (**)(char *, char *))(*(_QWORD *)(v31 - 8) + 16))(v29, v30);
      swift_storeEnumTagMultiPayload();
      v45 = *(int *)(v20 + 20);
      v46 = &v18[v45];
      v47 = &v19[v45];
      v48 = sub_23FD74474();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v46, v47, v48);
      v18[*(int *)(v20 + 24)] = v19[*(int *)(v20 + 24)];
      goto LABEL_25;
    }
    goto LABEL_17;
  }
  if (v27)
  {
    sub_23FCBA0CC();
LABEL_17:
    v25 = sub_23FBFD684(&qword_256F5D4E0);
    goto LABEL_8;
  }
  v8((uint64_t)v18, (uint64_t)v19, v6);
  v40 = type metadata accessor for FeedbackLearning.FlowActionEvent(0);
  if (a1 != a2)
  {
    v41 = *(int *)(v40 + 20);
    v42 = &v18[v41];
    v43 = &v19[v41];
    sub_23FCBA0CC();
    type metadata accessor for FeedbackLearning.ActionValue(0);
    if (swift_getEnumCaseMultiPayload() == 1)
      v44 = sub_23FD730F4();
    else
      v44 = sub_23FD73C7C();
    (*(void (**)(char *, char *))(*(_QWORD *)(v44 - 8) + 16))(v42, v43);
    swift_storeEnumTagMultiPayload();
  }
  v69 = *(int *)(v20 + 20);
  v70 = &v18[v69];
  v71 = &v19[v69];
  v72 = sub_23FD74474();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v72 - 8) + 24))(v70, v71, v72);
  v18[*(int *)(v20 + 24)] = v19[*(int *)(v20 + 24)];
LABEL_26:
  v49 = a3[9];
  v50 = (void *)(a1 + v49);
  v51 = (const void *)(a2 + v49);
  v52 = sub_23FBFD684(&qword_256F5D4F8);
  v53 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v50, 4, v52);
  v54 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v51, 4, v52);
  if (v53)
  {
    if (!v54)
    {
      v55 = type metadata accessor for FeedbackLearning.TaskFailureReason(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        v62 = sub_23FD7313C();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(v50, v51, v62);
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
          goto LABEL_42;
        }
        v57 = sub_23FD71648();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v50, v51, v57);
      }
      swift_storeEnumTagMultiPayload();
LABEL_42:
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v50, 0, 4, v52);
      goto LABEL_43;
    }
  }
  else
  {
    if (!v54)
    {
      if (a1 == a2)
        goto LABEL_43;
      sub_23FCBA0CC();
      v59 = type metadata accessor for FeedbackLearning.TaskFailureReason(0);
      v60 = swift_getEnumCaseMultiPayload();
      if (v60 == 1)
      {
        v68 = sub_23FD7313C();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v68 - 8) + 16))(v50, v51, v68);
      }
      else
      {
        if (v60)
        {
          v58 = *(_QWORD *)(v59 - 8);
          goto LABEL_34;
        }
        v61 = sub_23FD71648();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v61 - 8) + 16))(v50, v51, v61);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_43;
    }
    sub_23FBFEF74((uint64_t)v50, &qword_256F5D4F8);
  }
  v58 = *(_QWORD *)(type metadata accessor for FeedbackLearning.TaskStatus(0) - 8);
LABEL_34:
  memcpy(v50, v51, *(_QWORD *)(v58 + 64));
LABEL_43:
  v63 = type metadata accessor for FeedbackLearning.TaskOutcome(0);
  *((_BYTE *)v50 + *(int *)(v63 + 20)) = *((_BYTE *)v51 + *(int *)(v63 + 20));
  v64 = a3[10];
  v65 = a1 + v64;
  v66 = a2 + v64;
  *(_BYTE *)v65 = *(_BYTE *)(a2 + v64);
  *(_BYTE *)(v65 + 8) = *(_BYTE *)(a2 + v64 + 8);
  *(_QWORD *)(v65 + 16) = *(_QWORD *)(a2 + v64 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v65 + 24) = *(_QWORD *)(v66 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s14TaskEvaluationVwtk(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  const void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int EnumCaseMultiPayload;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _OWORD *v42;
  _OWORD *v43;
  __int128 v44;

  v6 = sub_23FD71474();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_23FD7157C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_23FD72D28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  v16 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v17 = (char *)(a1 + v16);
  v18 = (char *)(a2 + v16);
  v19 = sub_23FBFD684(&qword_256F5D4E8);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v18, 1, v19))
  {
    v20 = type metadata accessor for FeedbackLearning.TaskFinalResolutionState(0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    v21 = type metadata accessor for FeedbackLearning.TaskAction(0);
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v18, 1, v21))
    {
      v22 = sub_23FBFD684(&qword_256F5D4E0);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      v7((uint64_t)v17, (uint64_t)v18, v6);
      v23 = *(int *)(type metadata accessor for FeedbackLearning.FlowActionEvent(0) + 20);
      v24 = &v17[v23];
      v25 = &v18[v23];
      type metadata accessor for FeedbackLearning.ActionValue(0);
      if (swift_getEnumCaseMultiPayload() == 1)
        v26 = sub_23FD730F4();
      else
        v26 = sub_23FD73C7C();
      (*(void (**)(char *, char *))(*(_QWORD *)(v26 - 8) + 32))(v24, v25);
      swift_storeEnumTagMultiPayload();
      v27 = *(int *)(v21 + 20);
      v28 = &v17[v27];
      v29 = &v18[v27];
      v30 = sub_23FD74474();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
      v17[*(int *)(v21 + 24)] = v18[*(int *)(v21 + 24)];
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v17, 0, 1, v21);
    }
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v17, 0, 1, v19);
  }
  v31 = a3[9];
  v32 = (void *)(a1 + v31);
  v33 = (const void *)(a2 + v31);
  v34 = sub_23FBFD684(&qword_256F5D4F8);
  if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v33, 4, v34))
  {
    v36 = type metadata accessor for FeedbackLearning.TaskFailureReason(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v39 = sub_23FD7313C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v32, v33, v39);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
        goto LABEL_18;
      }
      v38 = sub_23FD71648();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v32, v33, v38);
    }
    swift_storeEnumTagMultiPayload();
LABEL_18:
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v32, 0, 4, v34);
    goto LABEL_19;
  }
  v35 = type metadata accessor for FeedbackLearning.TaskStatus(0);
  memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
LABEL_19:
  v40 = type metadata accessor for FeedbackLearning.TaskOutcome(0);
  *((_BYTE *)v32 + *(int *)(v40 + 20)) = *((_BYTE *)v33 + *(int *)(v40 + 20));
  v41 = a3[10];
  v42 = (_OWORD *)(a1 + v41);
  v43 = (_OWORD *)(a2 + v41);
  v44 = v43[1];
  *v42 = *v43;
  v42[1] = v44;
  return a1;
}

uint64_t _s14TaskEvaluationVwta(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  const void *v51;
  uint64_t v52;
  int v53;
  int v54;
  uint64_t v55;
  int EnumCaseMultiPayload;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;

  v6 = sub_23FD71474();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_23FD7157C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  v13 = a3[6];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = sub_23FD72D28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(v14, v15, v16);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  v17 = a3[8];
  v18 = (char *)(a1 + v17);
  v19 = (char *)(a2 + v17);
  v20 = sub_23FBFD684(&qword_256F5D4E8);
  v21 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v18, 1, v20);
  v22 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v19, 1, v20);
  if (v21)
  {
    if (!v22)
    {
      v23 = type metadata accessor for FeedbackLearning.TaskAction(0);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v19, 1, v23))
      {
        v24 = sub_23FBFD684(&qword_256F5D4E0);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v18, v19, v6);
        v32 = *(int *)(type metadata accessor for FeedbackLearning.FlowActionEvent(0) + 20);
        v33 = &v18[v32];
        v34 = &v19[v32];
        type metadata accessor for FeedbackLearning.ActionValue(0);
        if (swift_getEnumCaseMultiPayload() == 1)
          v35 = sub_23FD730F4();
        else
          v35 = sub_23FD73C7C();
        (*(void (**)(char *, char *))(*(_QWORD *)(v35 - 8) + 32))(v33, v34);
        swift_storeEnumTagMultiPayload();
        v36 = *(int *)(v23 + 20);
        v37 = &v18[v36];
        v38 = &v19[v36];
        v39 = sub_23FD74474();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
        v18[*(int *)(v23 + 24)] = v19[*(int *)(v23 + 24)];
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v18, 0, 1, v23);
      }
LABEL_25:
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v18, 0, 1, v20);
      goto LABEL_26;
    }
    goto LABEL_7;
  }
  if (v22)
  {
    sub_23FBFEF74((uint64_t)v18, &qword_256F5D4E8);
LABEL_7:
    v25 = type metadata accessor for FeedbackLearning.TaskFinalResolutionState(0);
LABEL_8:
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_26;
  }
  v20 = type metadata accessor for FeedbackLearning.TaskAction(0);
  v26 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v18, 1, v20);
  v27 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v19, 1, v20);
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v18, v19, v6);
      v28 = *(int *)(type metadata accessor for FeedbackLearning.FlowActionEvent(0) + 20);
      v29 = &v18[v28];
      v30 = &v19[v28];
      type metadata accessor for FeedbackLearning.ActionValue(0);
      if (swift_getEnumCaseMultiPayload() == 1)
        v31 = sub_23FD730F4();
      else
        v31 = sub_23FD73C7C();
      (*(void (**)(char *, char *))(*(_QWORD *)(v31 - 8) + 32))(v29, v30);
      swift_storeEnumTagMultiPayload();
      v45 = *(int *)(v20 + 20);
      v46 = &v18[v45];
      v47 = &v19[v45];
      v48 = sub_23FD74474();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v46, v47, v48);
      v18[*(int *)(v20 + 24)] = v19[*(int *)(v20 + 24)];
      goto LABEL_25;
    }
    goto LABEL_17;
  }
  if (v27)
  {
    sub_23FCBA0CC();
LABEL_17:
    v25 = sub_23FBFD684(&qword_256F5D4E0);
    goto LABEL_8;
  }
  v8((uint64_t)v18, (uint64_t)v19, v6);
  v40 = type metadata accessor for FeedbackLearning.FlowActionEvent(0);
  if (a1 != a2)
  {
    v41 = *(int *)(v40 + 20);
    v42 = &v18[v41];
    v43 = &v19[v41];
    sub_23FCBA0CC();
    type metadata accessor for FeedbackLearning.ActionValue(0);
    if (swift_getEnumCaseMultiPayload() == 1)
      v44 = sub_23FD730F4();
    else
      v44 = sub_23FD73C7C();
    (*(void (**)(char *, char *))(*(_QWORD *)(v44 - 8) + 32))(v42, v43);
    swift_storeEnumTagMultiPayload();
  }
  v69 = *(int *)(v20 + 20);
  v70 = &v18[v69];
  v71 = &v19[v69];
  v72 = sub_23FD74474();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v72 - 8) + 40))(v70, v71, v72);
  v18[*(int *)(v20 + 24)] = v19[*(int *)(v20 + 24)];
LABEL_26:
  v49 = a3[9];
  v50 = (void *)(a1 + v49);
  v51 = (const void *)(a2 + v49);
  v52 = sub_23FBFD684(&qword_256F5D4F8);
  v53 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v50, 4, v52);
  v54 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v51, 4, v52);
  if (v53)
  {
    if (!v54)
    {
      v55 = type metadata accessor for FeedbackLearning.TaskFailureReason(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        v62 = sub_23FD7313C();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v62 - 8) + 32))(v50, v51, v62);
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
          goto LABEL_42;
        }
        v57 = sub_23FD71648();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v57 - 8) + 32))(v50, v51, v57);
      }
      swift_storeEnumTagMultiPayload();
LABEL_42:
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v50, 0, 4, v52);
      goto LABEL_43;
    }
  }
  else
  {
    if (!v54)
    {
      if (a1 == a2)
        goto LABEL_43;
      sub_23FCBA0CC();
      v59 = type metadata accessor for FeedbackLearning.TaskFailureReason(0);
      v60 = swift_getEnumCaseMultiPayload();
      if (v60 == 1)
      {
        v68 = sub_23FD7313C();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v68 - 8) + 32))(v50, v51, v68);
      }
      else
      {
        if (v60)
        {
          v58 = *(_QWORD *)(v59 - 8);
          goto LABEL_34;
        }
        v61 = sub_23FD71648();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v50, v51, v61);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_43;
    }
    sub_23FBFEF74((uint64_t)v50, &qword_256F5D4F8);
  }
  v58 = *(_QWORD *)(type metadata accessor for FeedbackLearning.TaskStatus(0) - 8);
LABEL_34:
  memcpy(v50, v51, *(_QWORD *)(v58 + 64));
LABEL_43:
  v63 = type metadata accessor for FeedbackLearning.TaskOutcome(0);
  *((_BYTE *)v50 + *(int *)(v63 + 20)) = *((_BYTE *)v51 + *(int *)(v63 + 20));
  v64 = a3[10];
  v65 = a1 + v64;
  v66 = a2 + v64;
  *(_BYTE *)v65 = *(_BYTE *)v66;
  *(_BYTE *)(v65 + 8) = *(_BYTE *)(v66 + 8);
  *(_QWORD *)(v65 + 16) = *(_QWORD *)(v66 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v65 + 24) = *(_QWORD *)(v66 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s14TaskEvaluationVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FD17E98(uint64_t a1, uint64_t a2, int *a3)
{
  return sub_23FD1BE6C(a1, a2, a3, (void (*)(_QWORD))MEMORY[0x24BE545A0], (void (*)(_QWORD))type metadata accessor for FeedbackLearning.TaskFinalResolutionState, type metadata accessor for FeedbackLearning.TaskOutcome);
}

uint64_t _s14TaskEvaluationVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FD17EC0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_23FD1BF90(a1, a2, a3, a4, (void (*)(_QWORD))MEMORY[0x24BE545A0], (void (*)(_QWORD))type metadata accessor for FeedbackLearning.TaskFinalResolutionState, (void (*)(_QWORD))type metadata accessor for FeedbackLearning.TaskOutcome);
}

uint64_t sub_23FD17EDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FD1C09C(a1, a2, a3, (uint64_t (*)(uint64_t))MEMORY[0x24BE545A0], type metadata accessor for FeedbackLearning.TaskFinalResolutionState, type metadata accessor for FeedbackLearning.TaskOutcome);
}

ValueMetadata *_s24TaskFinalResolutionStateO10CodingKeysOMa()
{
  return &_s24TaskFinalResolutionStateO10CodingKeysON;
}

ValueMetadata *_s24TaskFinalResolutionStateO18CompleteCodingKeysOMa()
{
  return &_s24TaskFinalResolutionStateO18CompleteCodingKeysON;
}

ValueMetadata *_s24TaskFinalResolutionStateO20IncompleteCodingKeysOMa()
{
  return &_s24TaskFinalResolutionStateO20IncompleteCodingKeysON;
}

ValueMetadata *_s10TaskActionV10CodingKeysOMa()
{
  return &_s10TaskActionV10CodingKeysON;
}

ValueMetadata *_s11TaskOutcomeV10CodingKeysOMa()
{
  return &_s11TaskOutcomeV10CodingKeysON;
}

ValueMetadata *_s16TaskPromptStatusO10CodingKeysOMa()
{
  return &_s16TaskPromptStatusO10CodingKeysON;
}

ValueMetadata *_s16TaskPromptStatusO14NoneCodingKeysOMa()
{
  return &_s16TaskPromptStatusO14NoneCodingKeysON;
}

ValueMetadata *_s16TaskPromptStatusO17ConfirmCodingKeysOMa()
{
  return &_s16TaskPromptStatusO17ConfirmCodingKeysON;
}

ValueMetadata *_s10TaskStatusO10CodingKeysOMa()
{
  return &_s10TaskStatusO10CodingKeysON;
}

ValueMetadata *_s10TaskStatusO17UnknownCodingKeysOMa()
{
  return &_s10TaskStatusO17UnknownCodingKeysON;
}

ValueMetadata *_s10TaskStatusO25InferredSuccessCodingKeysOMa()
{
  return &_s10TaskStatusO25InferredSuccessCodingKeysON;
}

ValueMetadata *_s10TaskStatusO25InferredFailureCodingKeysOMa()
{
  return &_s10TaskStatusO25InferredFailureCodingKeysON;
}

ValueMetadata *_s10TaskStatusO17AbandonCodingKeysOMa()
{
  return &_s10TaskStatusO17AbandonCodingKeysON;
}

ValueMetadata *_s10TaskStatusO16CancelCodingKeysOMa()
{
  return &_s10TaskStatusO16CancelCodingKeysON;
}

ValueMetadata *_s17TaskFailureReasonO10CodingKeysOMa()
{
  return &_s17TaskFailureReasonO10CodingKeysON;
}

ValueMetadata *_s17TaskFailureReasonO17UnknownCodingKeysOMa()
{
  return &_s17TaskFailureReasonO17UnknownCodingKeysON;
}

ValueMetadata *_s17TaskFailureReasonO26ExecutionFailureCodingKeysOMa()
{
  return &_s17TaskFailureReasonO26ExecutionFailureCodingKeysON;
}

ValueMetadata *_s17TaskFailureReasonO25CriticalFailureCodingKeysOMa()
{
  return &_s17TaskFailureReasonO25CriticalFailureCodingKeysON;
}

ValueMetadata *_s19CandidateEvaluationV10CodingKeysOMa()
{
  return &_s19CandidateEvaluationV10CodingKeysON;
}

ValueMetadata *_s18CandidateParameterO10CodingKeysOMa()
{
  return &_s18CandidateParameterO10CodingKeysON;
}

ValueMetadata *_s18CandidateParameterO14ToolCodingKeysOMa()
{
  return &_s18CandidateParameterO14ToolCodingKeysON;
}

ValueMetadata *_s18CandidateParameterO15ValueCodingKeysOMa()
{
  return &_s18CandidateParameterO15ValueCodingKeysON;
}

ValueMetadata *_s18CandidateParameterO19ParameterCodingKeysOMa()
{
  return &_s18CandidateParameterO19ParameterCodingKeysON;
}

ValueMetadata *_s20CandidateSearchQueryV10CodingKeysOMa()
{
  return &_s20CandidateSearchQueryV10CodingKeysON;
}

ValueMetadata *_s28CandidateParameterResolutionO10CodingKeysOMa()
{
  return &_s28CandidateParameterResolutionO10CodingKeysON;
}

ValueMetadata *_s28CandidateParameterResolutionO20UnresolvedCodingKeysOMa()
{
  return &_s28CandidateParameterResolutionO20UnresolvedCodingKeysON;
}

ValueMetadata *_s28CandidateParameterResolutionO29ResolvedNotSelectedCodingKeysOMa()
{
  return &_s28CandidateParameterResolutionO29ResolvedNotSelectedCodingKeysON;
}

ValueMetadata *_s28CandidateParameterResolutionO26ResolvedSelectedCodingKeysOMa()
{
  return &_s28CandidateParameterResolutionO26ResolvedSelectedCodingKeysON;
}

ValueMetadata *_s28CandidateParameterResolutionO18ExecutedCodingKeysOMa()
{
  return &_s28CandidateParameterResolutionO18ExecutedCodingKeysON;
}

uint64_t _s19CandidateEvaluationV10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return sub_23FD2000C(-1);
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return sub_23FD2000C((*a1 | (v4 << 8)) - 6);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return sub_23FD2000C((*a1 | (v4 << 8)) - 6);
    }
    v4 = a1[1];
    if (a1[1])
      return sub_23FD2000C((*a1 | (v4 << 8)) - 6);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return sub_23FD2000C(v8);
}

uint64_t _s19CandidateEvaluationV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_23FD181B8 + 4 * byte_23FD7B94A[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_23FD181EC + 4 * byte_23FD7B945[v4]))();
}

uint64_t sub_23FD181F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23FD181F8);
  return result;
}

uint64_t sub_23FD18200(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x23FD18208);
  return sub_23FD1FFE0();
}

ValueMetadata *_s16CandidateOutcomeO10CodingKeysOMa()
{
  return &_s16CandidateOutcomeO10CodingKeysON;
}

ValueMetadata *_s16CandidateOutcomeO22ConfirmationCodingKeysOMa()
{
  return &_s16CandidateOutcomeO22ConfirmationCodingKeysON;
}

ValueMetadata *_s16CandidateOutcomeO24DisambiguationCodingKeysOMa()
{
  return &_s16CandidateOutcomeO24DisambiguationCodingKeysON;
}

ValueMetadata *_s16CandidateOutcomeO25InferredSuccessCodingKeysOMa()
{
  return &_s16CandidateOutcomeO25InferredSuccessCodingKeysON;
}

ValueMetadata *_s16CandidateOutcomeO25InferredFailureCodingKeysOMa()
{
  return &_s16CandidateOutcomeO25InferredFailureCodingKeysON;
}

ValueMetadata *_s16CandidateOutcomeO26InferredFromTaskCodingKeysOMa()
{
  return &_s16CandidateOutcomeO26InferredFromTaskCodingKeysON;
}

ValueMetadata *_s16CandidateOutcomeO17UnknownCodingKeysOMa()
{
  return &_s16CandidateOutcomeO17UnknownCodingKeysON;
}

uint64_t _s26DisambiguationPromptResultOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return sub_23FD2000C(-1);
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return sub_23FD2000C((*a1 | (v4 << 8)) - 4);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return sub_23FD2000C((*a1 | (v4 << 8)) - 4);
    }
    v4 = a1[1];
    if (a1[1])
      return sub_23FD2000C((*a1 | (v4 << 8)) - 4);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return sub_23FD2000C(v8);
}

uint64_t _s26DisambiguationPromptResultOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23FD18358 + 4 * byte_23FD7B954[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23FD1838C + 4 * byte_23FD7B94F[v4]))();
}

uint64_t sub_23FD18390(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23FD18398);
  return result;
}

uint64_t sub_23FD183A0(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x23FD183A8);
  return sub_23FD1FFE0();
}

ValueMetadata *_s26DisambiguationPromptResultO10CodingKeysOMa()
{
  return &_s26DisambiguationPromptResultO10CodingKeysON;
}

ValueMetadata *_s26DisambiguationPromptResultO27CandidateSelectedCodingKeysOMa()
{
  return &_s26DisambiguationPromptResultO27CandidateSelectedCodingKeysON;
}

ValueMetadata *_s26DisambiguationPromptResultO30OtherCandidateChosenCodingKeysOMa()
{
  return &_s26DisambiguationPromptResultO30OtherCandidateChosenCodingKeysON;
}

ValueMetadata *_s26DisambiguationPromptResultO19AbandonedCodingKeysOMa()
{
  return &_s26DisambiguationPromptResultO19AbandonedCodingKeysON;
}

ValueMetadata *_s26DisambiguationPromptResultO18RejectedCodingKeysOMa()
{
  return &_s26DisambiguationPromptResultO18RejectedCodingKeysON;
}

ValueMetadata *_s24ConfirmationPromptResultO10CodingKeysOMa()
{
  return &_s24ConfirmationPromptResultO10CodingKeysON;
}

ValueMetadata *_s24ConfirmationPromptResultO19ConfirmedCodingKeysOMa()
{
  return &_s24ConfirmationPromptResultO19ConfirmedCodingKeysON;
}

ValueMetadata *_s24ConfirmationPromptResultO18RejectedCodingKeysOMa()
{
  return &_s24ConfirmationPromptResultO18RejectedCodingKeysON;
}

ValueMetadata *_s24ConfirmationPromptResultO19AbandonedCodingKeysOMa()
{
  return &_s24ConfirmationPromptResultO19AbandonedCodingKeysON;
}

unint64_t sub_23FD1844C()
{
  unint64_t result;

  result = qword_256F63670;
  if (!qword_256F63670)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7C8D4, &_s24ConfirmationPromptResultO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63670);
  }
  return result;
}

unint64_t sub_23FD1848C()
{
  unint64_t result;

  result = qword_256F63678;
  if (!qword_256F63678)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7CACC, &_s26DisambiguationPromptResultO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63678);
  }
  return result;
}

unint64_t sub_23FD184CC()
{
  unint64_t result;

  result = qword_256F63680;
  if (!qword_256F63680)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7CCC4, &_s16CandidateOutcomeO24DisambiguationCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63680);
  }
  return result;
}

unint64_t sub_23FD1850C()
{
  unint64_t result;

  result = qword_256F63688;
  if (!qword_256F63688)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7CD7C, &_s16CandidateOutcomeO22ConfirmationCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63688);
  }
  return result;
}

unint64_t sub_23FD1854C()
{
  unint64_t result;

  result = qword_256F63690;
  if (!qword_256F63690)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7CE34, &_s16CandidateOutcomeO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63690);
  }
  return result;
}

unint64_t sub_23FD1858C()
{
  unint64_t result;

  result = qword_256F63698;
  if (!qword_256F63698)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7D02C, &_s28CandidateParameterResolutionO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63698);
  }
  return result;
}

unint64_t sub_23FD185CC()
{
  unint64_t result;

  result = qword_256F636A0;
  if (!qword_256F636A0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7D0E4, &_s20CandidateSearchQueryV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F636A0);
  }
  return result;
}

unint64_t sub_23FD1860C()
{
  unint64_t result;

  result = qword_256F636A8;
  if (!qword_256F636A8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7D19C, &_s18CandidateParameterO19ParameterCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F636A8);
  }
  return result;
}

unint64_t sub_23FD1864C()
{
  unint64_t result;

  result = qword_256F636B0;
  if (!qword_256F636B0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7D254, &_s18CandidateParameterO15ValueCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F636B0);
  }
  return result;
}

unint64_t sub_23FD1868C()
{
  unint64_t result;

  result = qword_256F636B8;
  if (!qword_256F636B8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7D35C, &_s18CandidateParameterO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F636B8);
  }
  return result;
}

unint64_t sub_23FD186CC()
{
  unint64_t result;

  result = qword_256F636C0;
  if (!qword_256F636C0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7D414, &_s19CandidateEvaluationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F636C0);
  }
  return result;
}

unint64_t sub_23FD1870C()
{
  unint64_t result;

  result = qword_256F636C8;
  if (!qword_256F636C8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7D4CC, &_s17TaskFailureReasonO25CriticalFailureCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F636C8);
  }
  return result;
}

unint64_t sub_23FD1874C()
{
  unint64_t result;

  result = qword_256F636D0;
  if (!qword_256F636D0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7D584, &_s17TaskFailureReasonO26ExecutionFailureCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F636D0);
  }
  return result;
}

unint64_t sub_23FD1878C()
{
  unint64_t result;

  result = qword_256F636D8;
  if (!qword_256F636D8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7D68C, &_s17TaskFailureReasonO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F636D8);
  }
  return result;
}

unint64_t sub_23FD187CC()
{
  unint64_t result;

  result = qword_256F636E0;
  if (!qword_256F636E0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7D7E4, &_s10TaskStatusO25InferredFailureCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F636E0);
  }
  return result;
}

unint64_t sub_23FD1880C()
{
  unint64_t result;

  result = qword_256F636E8;
  if (!qword_256F636E8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7D93C, &_s10TaskStatusO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F636E8);
  }
  return result;
}

unint64_t sub_23FD1884C()
{
  unint64_t result;

  result = qword_256F636F0;
  if (!qword_256F636F0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7D9F4, &_s16TaskPromptStatusO17ConfirmCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F636F0);
  }
  return result;
}

unint64_t sub_23FD1888C()
{
  unint64_t result;

  result = qword_256F636F8;
  if (!qword_256F636F8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7DAFC, &_s16TaskPromptStatusO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F636F8);
  }
  return result;
}

unint64_t sub_23FD188CC()
{
  unint64_t result;

  result = qword_256F63700;
  if (!qword_256F63700)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7DBB4, &_s11TaskOutcomeV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63700);
  }
  return result;
}

unint64_t sub_23FD1890C()
{
  unint64_t result;

  result = qword_256F63708;
  if (!qword_256F63708)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7DC6C, &_s10TaskActionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63708);
  }
  return result;
}

unint64_t sub_23FD1894C()
{
  unint64_t result;

  result = qword_256F63710;
  if (!qword_256F63710)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7DD74, &_s24TaskFinalResolutionStateO18CompleteCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63710);
  }
  return result;
}

unint64_t sub_23FD1898C()
{
  unint64_t result;

  result = qword_256F63718;
  if (!qword_256F63718)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7DE2C, &_s24TaskFinalResolutionStateO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63718);
  }
  return result;
}

unint64_t sub_23FD189CC()
{
  unint64_t result;

  result = qword_256F63720;
  if (!qword_256F63720)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7DCE4, &_s24TaskFinalResolutionStateO18CompleteCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63720);
  }
  return result;
}

unint64_t sub_23FD18A0C()
{
  unint64_t result;

  result = qword_256F63728;
  if (!qword_256F63728)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7DD0C, &_s24TaskFinalResolutionStateO18CompleteCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63728);
  }
  return result;
}

unint64_t sub_23FD18A4C()
{
  unint64_t result;

  result = qword_256F63730;
  if (!qword_256F63730)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7DC94, &_s24TaskFinalResolutionStateO20IncompleteCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63730);
  }
  return result;
}

unint64_t sub_23FD18A8C()
{
  unint64_t result;

  result = qword_256F63738;
  if (!qword_256F63738)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7DCBC, &_s24TaskFinalResolutionStateO20IncompleteCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63738);
  }
  return result;
}

unint64_t sub_23FD18ACC()
{
  unint64_t result;

  result = qword_256F63740;
  if (!qword_256F63740)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7DD9C, &_s24TaskFinalResolutionStateO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63740);
  }
  return result;
}

unint64_t sub_23FD18B0C()
{
  unint64_t result;

  result = qword_256F63748;
  if (!qword_256F63748)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7DDC4, &_s24TaskFinalResolutionStateO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63748);
  }
  return result;
}

unint64_t sub_23FD18B4C()
{
  unint64_t result;

  result = qword_256F63750;
  if (!qword_256F63750)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7DBDC, &_s10TaskActionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63750);
  }
  return result;
}

unint64_t sub_23FD18B8C()
{
  unint64_t result;

  result = qword_256F63758;
  if (!qword_256F63758)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7DC04, &_s10TaskActionV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63758);
  }
  return result;
}

unint64_t sub_23FD18BCC()
{
  unint64_t result;

  result = qword_256F63760;
  if (!qword_256F63760)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7DB24, &_s11TaskOutcomeV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63760);
  }
  return result;
}

unint64_t sub_23FD18C0C()
{
  unint64_t result;

  result = qword_256F63768;
  if (!qword_256F63768)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7DB4C, &_s11TaskOutcomeV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63768);
  }
  return result;
}

unint64_t sub_23FD18C4C()
{
  unint64_t result;

  result = qword_256F63770;
  if (!qword_256F63770)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7DA1C, &_s16TaskPromptStatusO14NoneCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63770);
  }
  return result;
}

unint64_t sub_23FD18C8C()
{
  unint64_t result;

  result = qword_256F63778;
  if (!qword_256F63778)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7DA44, &_s16TaskPromptStatusO14NoneCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63778);
  }
  return result;
}

unint64_t sub_23FD18CCC()
{
  unint64_t result;

  result = qword_256F63780;
  if (!qword_256F63780)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7D964, &_s16TaskPromptStatusO17ConfirmCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63780);
  }
  return result;
}

unint64_t sub_23FD18D0C()
{
  unint64_t result;

  result = qword_256F63788;
  if (!qword_256F63788)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7D98C, &_s16TaskPromptStatusO17ConfirmCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63788);
  }
  return result;
}

unint64_t sub_23FD18D4C()
{
  unint64_t result;

  result = qword_256F63790;
  if (!qword_256F63790)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7DA6C, &_s16TaskPromptStatusO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63790);
  }
  return result;
}

unint64_t sub_23FD18D8C()
{
  unint64_t result;

  result = qword_256F63798;
  if (!qword_256F63798)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7DA94, &_s16TaskPromptStatusO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63798);
  }
  return result;
}

unint64_t sub_23FD18DCC()
{
  unint64_t result;

  result = qword_256F637A0;
  if (!qword_256F637A0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7D85C, &_s10TaskStatusO17UnknownCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F637A0);
  }
  return result;
}

unint64_t sub_23FD18E0C()
{
  unint64_t result;

  result = qword_256F637A8;
  if (!qword_256F637A8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7D884, &_s10TaskStatusO17UnknownCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F637A8);
  }
  return result;
}

unint64_t sub_23FD18E4C()
{
  unint64_t result;

  result = qword_256F637B0;
  if (!qword_256F637B0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7D80C, &_s10TaskStatusO25InferredSuccessCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F637B0);
  }
  return result;
}

unint64_t sub_23FD18E8C()
{
  unint64_t result;

  result = qword_256F637B8;
  if (!qword_256F637B8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7D834, &_s10TaskStatusO25InferredSuccessCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F637B8);
  }
  return result;
}

unint64_t sub_23FD18ECC()
{
  unint64_t result;

  result = qword_256F637C0;
  if (!qword_256F637C0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7D754, &_s10TaskStatusO25InferredFailureCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F637C0);
  }
  return result;
}

unint64_t sub_23FD18F0C()
{
  unint64_t result;

  result = qword_256F637C8;
  if (!qword_256F637C8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7D77C, &_s10TaskStatusO25InferredFailureCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F637C8);
  }
  return result;
}

unint64_t sub_23FD18F4C()
{
  unint64_t result;

  result = qword_256F637D0;
  if (!qword_256F637D0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7D704, &_s10TaskStatusO17AbandonCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F637D0);
  }
  return result;
}

unint64_t sub_23FD18F8C()
{
  unint64_t result;

  result = qword_256F637D8;
  if (!qword_256F637D8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7D72C, &_s10TaskStatusO17AbandonCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F637D8);
  }
  return result;
}

unint64_t sub_23FD18FCC()
{
  unint64_t result;

  result = qword_256F637E0;
  if (!qword_256F637E0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7D6B4, &_s10TaskStatusO16CancelCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F637E0);
  }
  return result;
}

unint64_t sub_23FD1900C()
{
  unint64_t result;

  result = qword_256F637E8;
  if (!qword_256F637E8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7D6DC, &_s10TaskStatusO16CancelCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F637E8);
  }
  return result;
}

unint64_t sub_23FD1904C()
{
  unint64_t result;

  result = qword_256F637F0;
  if (!qword_256F637F0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7D8AC, &_s10TaskStatusO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F637F0);
  }
  return result;
}

unint64_t sub_23FD1908C()
{
  unint64_t result;

  result = qword_256F637F8;
  if (!qword_256F637F8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7D8D4, &_s10TaskStatusO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F637F8);
  }
  return result;
}

unint64_t sub_23FD190CC()
{
  unint64_t result;

  result = qword_256F63800;
  if (!qword_256F63800)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7D5AC, &_s17TaskFailureReasonO17UnknownCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63800);
  }
  return result;
}

unint64_t sub_23FD1910C()
{
  unint64_t result;

  result = qword_256F63808;
  if (!qword_256F63808)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7D5D4, &_s17TaskFailureReasonO17UnknownCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63808);
  }
  return result;
}

unint64_t sub_23FD1914C()
{
  unint64_t result;

  result = qword_256F63810;
  if (!qword_256F63810)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7D4F4, &_s17TaskFailureReasonO26ExecutionFailureCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63810);
  }
  return result;
}

unint64_t sub_23FD1918C()
{
  unint64_t result;

  result = qword_256F63818;
  if (!qword_256F63818)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7D51C, &_s17TaskFailureReasonO26ExecutionFailureCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63818);
  }
  return result;
}

unint64_t sub_23FD191CC()
{
  unint64_t result;

  result = qword_256F63820;
  if (!qword_256F63820)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7D43C, &_s17TaskFailureReasonO25CriticalFailureCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63820);
  }
  return result;
}

unint64_t sub_23FD1920C()
{
  unint64_t result;

  result = qword_256F63828;
  if (!qword_256F63828)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7D464, &_s17TaskFailureReasonO25CriticalFailureCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63828);
  }
  return result;
}

unint64_t sub_23FD1924C()
{
  unint64_t result;

  result = qword_256F63830;
  if (!qword_256F63830)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7D5FC, &_s17TaskFailureReasonO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63830);
  }
  return result;
}

unint64_t sub_23FD1928C()
{
  unint64_t result;

  result = qword_256F63838;
  if (!qword_256F63838)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7D624, &_s17TaskFailureReasonO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63838);
  }
  return result;
}

unint64_t sub_23FD192CC()
{
  unint64_t result;

  result = qword_256F63840;
  if (!qword_256F63840)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7D384, &_s19CandidateEvaluationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63840);
  }
  return result;
}

unint64_t sub_23FD1930C()
{
  unint64_t result;

  result = qword_256F63848;
  if (!qword_256F63848)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7D3AC, &_s19CandidateEvaluationV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63848);
  }
  return result;
}

unint64_t sub_23FD1934C()
{
  unint64_t result;

  result = qword_256F63850;
  if (!qword_256F63850)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7D27C, &_s18CandidateParameterO14ToolCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63850);
  }
  return result;
}

unint64_t sub_23FD1938C()
{
  unint64_t result;

  result = qword_256F63858;
  if (!qword_256F63858)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7D2A4, &_s18CandidateParameterO14ToolCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63858);
  }
  return result;
}

unint64_t sub_23FD193CC()
{
  unint64_t result;

  result = qword_256F63860;
  if (!qword_256F63860)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7D1C4, &_s18CandidateParameterO15ValueCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63860);
  }
  return result;
}

unint64_t sub_23FD1940C()
{
  unint64_t result;

  result = qword_256F63868;
  if (!qword_256F63868)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7D1EC, &_s18CandidateParameterO15ValueCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63868);
  }
  return result;
}

unint64_t sub_23FD1944C()
{
  unint64_t result;

  result = qword_256F63870;
  if (!qword_256F63870)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7D10C, &_s18CandidateParameterO19ParameterCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63870);
  }
  return result;
}

unint64_t sub_23FD1948C()
{
  unint64_t result;

  result = qword_256F63878;
  if (!qword_256F63878)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7D134, &_s18CandidateParameterO19ParameterCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63878);
  }
  return result;
}

unint64_t sub_23FD194CC()
{
  unint64_t result;

  result = qword_256F63880;
  if (!qword_256F63880)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7D2CC, &_s18CandidateParameterO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63880);
  }
  return result;
}

unint64_t sub_23FD1950C()
{
  unint64_t result;

  result = qword_256F63888;
  if (!qword_256F63888)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7D2F4, &_s18CandidateParameterO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63888);
  }
  return result;
}

unint64_t sub_23FD1954C()
{
  unint64_t result;

  result = qword_256F63890;
  if (!qword_256F63890)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7D054, &_s20CandidateSearchQueryV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63890);
  }
  return result;
}

unint64_t sub_23FD1958C()
{
  unint64_t result;

  result = qword_256F63898;
  if (!qword_256F63898)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7D07C, &_s20CandidateSearchQueryV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63898);
  }
  return result;
}

unint64_t sub_23FD195CC()
{
  unint64_t result;

  result = qword_256F638A0;
  if (!qword_256F638A0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7CF4C, &_s28CandidateParameterResolutionO20UnresolvedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F638A0);
  }
  return result;
}

unint64_t sub_23FD1960C()
{
  unint64_t result;

  result = qword_256F638A8;
  if (!qword_256F638A8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7CF74, &_s28CandidateParameterResolutionO20UnresolvedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F638A8);
  }
  return result;
}

unint64_t sub_23FD1964C()
{
  unint64_t result;

  result = qword_256F638B0;
  if (!qword_256F638B0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7CEFC, &_s28CandidateParameterResolutionO29ResolvedNotSelectedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F638B0);
  }
  return result;
}

unint64_t sub_23FD1968C()
{
  unint64_t result;

  result = qword_256F638B8;
  if (!qword_256F638B8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7CF24, &_s28CandidateParameterResolutionO29ResolvedNotSelectedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F638B8);
  }
  return result;
}

unint64_t sub_23FD196CC()
{
  unint64_t result;

  result = qword_256F638C0;
  if (!qword_256F638C0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7CEAC, &_s28CandidateParameterResolutionO26ResolvedSelectedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F638C0);
  }
  return result;
}

unint64_t sub_23FD1970C()
{
  unint64_t result;

  result = qword_256F638C8;
  if (!qword_256F638C8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7CED4, &_s28CandidateParameterResolutionO26ResolvedSelectedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F638C8);
  }
  return result;
}

unint64_t sub_23FD1974C()
{
  unint64_t result;

  result = qword_256F638D0;
  if (!qword_256F638D0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7CE5C, &_s28CandidateParameterResolutionO18ExecutedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F638D0);
  }
  return result;
}

unint64_t sub_23FD1978C()
{
  unint64_t result;

  result = qword_256F638D8;
  if (!qword_256F638D8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7CE84, &_s28CandidateParameterResolutionO18ExecutedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F638D8);
  }
  return result;
}

unint64_t sub_23FD197CC()
{
  unint64_t result;

  result = qword_256F638E0;
  if (!qword_256F638E0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7CF9C, &_s28CandidateParameterResolutionO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F638E0);
  }
  return result;
}

unint64_t sub_23FD1980C()
{
  unint64_t result;

  result = qword_256F638E8;
  if (!qword_256F638E8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7CFC4, &_s28CandidateParameterResolutionO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F638E8);
  }
  return result;
}

unint64_t sub_23FD1984C()
{
  unint64_t result;

  result = qword_256F638F0;
  if (!qword_256F638F0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7CCEC, &_s16CandidateOutcomeO22ConfirmationCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F638F0);
  }
  return result;
}

unint64_t sub_23FD1988C()
{
  unint64_t result;

  result = qword_256F638F8;
  if (!qword_256F638F8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7CD14, &_s16CandidateOutcomeO22ConfirmationCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F638F8);
  }
  return result;
}

unint64_t sub_23FD198CC()
{
  unint64_t result;

  result = qword_256F63900;
  if (!qword_256F63900)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7CC34, &_s16CandidateOutcomeO24DisambiguationCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63900);
  }
  return result;
}

unint64_t sub_23FD1990C()
{
  unint64_t result;

  result = qword_256F63908;
  if (!qword_256F63908)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7CC5C, &_s16CandidateOutcomeO24DisambiguationCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63908);
  }
  return result;
}

unint64_t sub_23FD1994C()
{
  unint64_t result;

  result = qword_256F63910;
  if (!qword_256F63910)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7CBE4, &_s16CandidateOutcomeO25InferredSuccessCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63910);
  }
  return result;
}

unint64_t sub_23FD1998C()
{
  unint64_t result;

  result = qword_256F63918;
  if (!qword_256F63918)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7CC0C, &_s16CandidateOutcomeO25InferredSuccessCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63918);
  }
  return result;
}

unint64_t sub_23FD199CC()
{
  unint64_t result;

  result = qword_256F63920;
  if (!qword_256F63920)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7CB94, &_s16CandidateOutcomeO25InferredFailureCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63920);
  }
  return result;
}

unint64_t sub_23FD19A0C()
{
  unint64_t result;

  result = qword_256F63928;
  if (!qword_256F63928)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7CBBC, &_s16CandidateOutcomeO25InferredFailureCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63928);
  }
  return result;
}

unint64_t sub_23FD19A4C()
{
  unint64_t result;

  result = qword_256F63930;
  if (!qword_256F63930)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7CB44, &_s16CandidateOutcomeO26InferredFromTaskCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63930);
  }
  return result;
}

unint64_t sub_23FD19A8C()
{
  unint64_t result;

  result = qword_256F63938;
  if (!qword_256F63938)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7CB6C, &_s16CandidateOutcomeO26InferredFromTaskCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63938);
  }
  return result;
}

unint64_t sub_23FD19ACC()
{
  unint64_t result;

  result = qword_256F63940;
  if (!qword_256F63940)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7CAF4, &_s16CandidateOutcomeO17UnknownCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63940);
  }
  return result;
}

unint64_t sub_23FD19B0C()
{
  unint64_t result;

  result = qword_256F63948;
  if (!qword_256F63948)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7CB1C, &_s16CandidateOutcomeO17UnknownCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63948);
  }
  return result;
}

unint64_t sub_23FD19B4C()
{
  unint64_t result;

  result = qword_256F63950;
  if (!qword_256F63950)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7CDA4, &_s16CandidateOutcomeO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63950);
  }
  return result;
}

unint64_t sub_23FD19B8C()
{
  unint64_t result;

  result = qword_256F63958;
  if (!qword_256F63958)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7CDCC, &_s16CandidateOutcomeO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63958);
  }
  return result;
}

unint64_t sub_23FD19BCC()
{
  unint64_t result;

  result = qword_256F63960;
  if (!qword_256F63960)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7C9EC, &_s26DisambiguationPromptResultO27CandidateSelectedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63960);
  }
  return result;
}

unint64_t sub_23FD19C0C()
{
  unint64_t result;

  result = qword_256F63968;
  if (!qword_256F63968)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7CA14, &_s26DisambiguationPromptResultO27CandidateSelectedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63968);
  }
  return result;
}

unint64_t sub_23FD19C4C()
{
  unint64_t result;

  result = qword_256F63970;
  if (!qword_256F63970)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7C99C, &_s26DisambiguationPromptResultO30OtherCandidateChosenCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63970);
  }
  return result;
}

unint64_t sub_23FD19C8C()
{
  unint64_t result;

  result = qword_256F63978;
  if (!qword_256F63978)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7C9C4, &_s26DisambiguationPromptResultO30OtherCandidateChosenCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63978);
  }
  return result;
}

unint64_t sub_23FD19CCC()
{
  unint64_t result;

  result = qword_256F63980;
  if (!qword_256F63980)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7C94C, &_s26DisambiguationPromptResultO19AbandonedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63980);
  }
  return result;
}

unint64_t sub_23FD19D0C()
{
  unint64_t result;

  result = qword_256F63988;
  if (!qword_256F63988)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7C974, &_s26DisambiguationPromptResultO19AbandonedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63988);
  }
  return result;
}

unint64_t sub_23FD19D4C()
{
  unint64_t result;

  result = qword_256F63990;
  if (!qword_256F63990)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7C8FC, &_s26DisambiguationPromptResultO18RejectedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63990);
  }
  return result;
}

unint64_t sub_23FD19D8C()
{
  unint64_t result;

  result = qword_256F63998;
  if (!qword_256F63998)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7C924, &_s26DisambiguationPromptResultO18RejectedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63998);
  }
  return result;
}

unint64_t sub_23FD19DCC()
{
  unint64_t result;

  result = qword_256F639A0;
  if (!qword_256F639A0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7CA3C, &_s26DisambiguationPromptResultO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F639A0);
  }
  return result;
}

unint64_t sub_23FD19E0C()
{
  unint64_t result;

  result = qword_256F639A8;
  if (!qword_256F639A8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7CA64, &_s26DisambiguationPromptResultO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F639A8);
  }
  return result;
}

unint64_t sub_23FD19E4C()
{
  unint64_t result;

  result = qword_256F639B0;
  if (!qword_256F639B0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7C7F4, &_s24ConfirmationPromptResultO19ConfirmedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F639B0);
  }
  return result;
}

unint64_t sub_23FD19E8C()
{
  unint64_t result;

  result = qword_256F639B8;
  if (!qword_256F639B8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7C81C, &_s24ConfirmationPromptResultO19ConfirmedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F639B8);
  }
  return result;
}

unint64_t sub_23FD19ECC()
{
  unint64_t result;

  result = qword_256F639C0;
  if (!qword_256F639C0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7C7A4, &_s24ConfirmationPromptResultO18RejectedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F639C0);
  }
  return result;
}

unint64_t sub_23FD19F0C()
{
  unint64_t result;

  result = qword_256F639C8;
  if (!qword_256F639C8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7C7CC, &_s24ConfirmationPromptResultO18RejectedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F639C8);
  }
  return result;
}

unint64_t sub_23FD19F4C()
{
  unint64_t result;

  result = qword_256F639D0;
  if (!qword_256F639D0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7C754, &_s24ConfirmationPromptResultO19AbandonedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F639D0);
  }
  return result;
}

unint64_t sub_23FD19F8C()
{
  unint64_t result;

  result = qword_256F639D8;
  if (!qword_256F639D8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7C77C, &_s24ConfirmationPromptResultO19AbandonedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F639D8);
  }
  return result;
}

unint64_t sub_23FD19FCC()
{
  unint64_t result;

  result = qword_256F639E0;
  if (!qword_256F639E0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7C844, &_s24ConfirmationPromptResultO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F639E0);
  }
  return result;
}

unint64_t sub_23FD1A00C()
{
  unint64_t result;

  result = qword_256F639E8;
  if (!qword_256F639E8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7C86C, &_s24ConfirmationPromptResultO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F639E8);
  }
  return result;
}

uint64_t *sub_23FD1A048(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23FBFD684(&qword_256F5D500);
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 4, v7))
    {
      v8 = _s18TaskDefinitionThinO14TaskStatusThinOMa(0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      v10 = sub_23FD71648();
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 2, v10))
      {
        v11 = _s18TaskDefinitionThinO21TaskFailureReasonThinOMa(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 2, v10);
      }
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 4, v7);
    }
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t _s18TaskDefinitionThinO21TaskFailureReasonThinOMa(uint64_t a1)
{
  return sub_23FC04944(a1, (uint64_t *)&unk_256F63E68);
}

uint64_t _s18TaskDefinitionThinO14TaskStatusThinOMa(uint64_t a1)
{
  return sub_23FC04944(a1, qword_256F63DE8);
}

void *sub_23FD1A1A8(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_23FBFD684(&qword_256F5D500);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 4, v6))
  {
    v7 = _s18TaskDefinitionThinO14TaskStatusThinOMa(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    v8 = sub_23FD71648();
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 2, v8))
    {
      v9 = _s18TaskDefinitionThinO21TaskFailureReasonThinOMa(0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 2, v8);
    }
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 4, v6);
  }
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *sub_23FD1A2B0(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v6 = sub_23FBFD684(&qword_256F5D500);
  v7 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a1, 4, v6);
  v8 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 4, v6);
  if (v7)
  {
    if (!v8)
    {
      v9 = sub_23FD71648();
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 2, v9))
      {
        v10 = _s18TaskDefinitionThinO21TaskFailureReasonThinOMa(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 2, v9);
      }
      v14 = (uint64_t)a1;
      v15 = 4;
      goto LABEL_14;
    }
    goto LABEL_7;
  }
  if (v8)
  {
    sub_23FBFEF74((uint64_t)a1, &qword_256F5D500);
LABEL_7:
    v11 = _s18TaskDefinitionThinO14TaskStatusThinOMa(0);
    goto LABEL_8;
  }
  v6 = sub_23FD71648();
  v12 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a1, 2, v6);
  v13 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 2, v6);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      v14 = (uint64_t)a1;
      v15 = 2;
LABEL_14:
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v14, 0, v15, v6);
      goto LABEL_15;
    }
  }
  else
  {
    v17 = *(_QWORD *)(v6 - 8);
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(v17 + 24))(a1, a2, v6);
      goto LABEL_15;
    }
    (*(void (**)(void *, uint64_t))(v17 + 8))(a1, v6);
  }
  v11 = _s18TaskDefinitionThinO21TaskFailureReasonThinOMa(0);
LABEL_8:
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
LABEL_15:
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *sub_23FD1A480(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_23FBFD684(&qword_256F5D500);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 4, v6))
  {
    v7 = _s18TaskDefinitionThinO14TaskStatusThinOMa(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    v8 = sub_23FD71648();
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 2, v8))
    {
      v9 = _s18TaskDefinitionThinO21TaskFailureReasonThinOMa(0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 2, v8);
    }
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 4, v6);
  }
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *sub_23FD1A588(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v6 = sub_23FBFD684(&qword_256F5D500);
  v7 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a1, 4, v6);
  v8 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 4, v6);
  if (v7)
  {
    if (!v8)
    {
      v9 = sub_23FD71648();
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 2, v9))
      {
        v10 = _s18TaskDefinitionThinO21TaskFailureReasonThinOMa(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 2, v9);
      }
      v14 = (uint64_t)a1;
      v15 = 4;
      goto LABEL_14;
    }
    goto LABEL_7;
  }
  if (v8)
  {
    sub_23FBFEF74((uint64_t)a1, &qword_256F5D500);
LABEL_7:
    v11 = _s18TaskDefinitionThinO14TaskStatusThinOMa(0);
    goto LABEL_8;
  }
  v6 = sub_23FD71648();
  v12 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a1, 2, v6);
  v13 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 2, v6);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      v14 = (uint64_t)a1;
      v15 = 2;
LABEL_14:
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v14, 0, v15, v6);
      goto LABEL_15;
    }
  }
  else
  {
    v17 = *(_QWORD *)(v6 - 8);
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(v17 + 40))(a1, a2, v6);
      goto LABEL_15;
    }
    (*(void (**)(void *, uint64_t))(v17 + 8))(a1, v6);
  }
  v11 = _s18TaskDefinitionThinO21TaskFailureReasonThinOMa(0);
LABEL_8:
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
LABEL_15:
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_23FD1A758()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FD1A764(uint64_t a1, uint64_t a2)
{
  sub_23FD1A770(a1, a2);
}

void sub_23FD1A770(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;

  v4 = sub_23FCBCDB0();
  v6 = v5(v4);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    sub_23FC06098(v2, a2, v6);
  else
    sub_23FC09258();
}

uint64_t sub_23FD1A7DC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FD1A7E8()
{
  sub_23FD1A7F4();
}

void sub_23FD1A7F4()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = sub_23FD1FD78();
  v4(v3);
  sub_23FC06188();
  if (v5)
  {
    v6 = sub_23FC0A12C();
    sub_23FC0608C(v6, v7, v8, v9);
  }
  else
  {
    *(_BYTE *)(v1 + *(int *)(v2 + 20)) = v0 + 3;
    sub_23FC09258();
  }
}

uint64_t _s18TaskDefinitionThinO15TaskOutcomeThinVMa(uint64_t a1)
{
  return sub_23FC04944(a1, qword_256F63A48);
}

void sub_23FD1A848(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FD1A85C(a1, a2, a3, _s18TaskDefinitionThinO14TaskStatusThinOMa);
}

void sub_23FD1A85C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  unint64_t v4;

  sub_23FD20398(a1, a2, a3, a4);
  if (v4 <= 0x3F)
  {
    sub_23FD20174();
    sub_23FD20548();
    swift_initStructMetadata();
    sub_23FD201C0();
  }
  sub_23FCF28C8();
}

void _s18TaskDefinitionThinOMa()
{
  sub_23FC7A748();
}

_QWORD *sub_23FD1A8B8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23FD71474();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t sub_23FD1A940()
{
  return sub_23FD1C1D0();
}

uint64_t sub_23FD1A94C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_23FD1A9A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_23FD1AA04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_23FD1AA60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_23FD1AABC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FD1AAC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  unsigned int v7;

  sub_23FCBCDB0();
  v6 = sub_23FD71474();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    sub_23FC06098(v3, a2, v6);
  }
  else
  {
    v7 = *(unsigned __int8 *)(v3 + *(int *)(a3 + 20));
    if (v7 >= 2)
      sub_23FD20424(v7);
    sub_23FC09258();
  }
}

uint64_t sub_23FD1AB30()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FD1AB3C()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_23FD1FD78();
  sub_23FD71474();
  sub_23FC06188();
  if (v3)
  {
    v4 = sub_23FC0A12C();
    sub_23FC0608C(v4, v5, v6, v7);
  }
  else
  {
    *(_BYTE *)(v1 + *(int *)(v2 + 20)) = v0 + 1;
    sub_23FC09258();
  }
}

uint64_t _s18TaskDefinitionThinO14TaskActionThinVMa(uint64_t a1)
{
  return sub_23FC04944(a1, qword_256F63AD8);
}

void sub_23FD1AB90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FD1A85C(a1, a2, a3, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58]);
}

uint64_t *sub_23FD1ABA4(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23FD71474();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = a3[5];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_23FD7157C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    v13 = a3[6];
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = sub_23FD71414();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    v17 = a3[8];
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    swift_bridgeObjectRetain();
    v20 = sub_23FBFD684(&qword_256F5D4F0);
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v19, 1, v20))
    {
      v21 = _s18TaskDefinitionThinO28TaskFinalResolutionStateThinOMa(0);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      v23 = _s18TaskDefinitionThinO14TaskActionThinVMa(0);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v19, 1, v23))
      {
        v24 = sub_23FBFD684(qword_256F63B10);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        v8((uint64_t *)v18, (uint64_t *)v19, v7);
        v18[*(int *)(v23 + 20)] = v19[*(int *)(v23 + 20)];
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v18, 0, 1, v23);
      }
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v18, 0, 1, v20);
    }
    v25 = a3[9];
    v26 = (char *)a1 + v25;
    v27 = (char *)a2 + v25;
    v28 = sub_23FBFD684(&qword_256F5D500);
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v27, 4, v28))
    {
      v29 = _s18TaskDefinitionThinO14TaskStatusThinOMa(0);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      v30 = sub_23FD71648();
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v27, 2, v30))
      {
        v31 = _s18TaskDefinitionThinO21TaskFailureReasonThinOMa(0);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v26, v27, v30);
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v26, 0, 2, v30);
      }
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v26, 0, 4, v28);
    }
    v32 = _s18TaskDefinitionThinO15TaskOutcomeThinVMa(0);
    v26[*(int *)(v32 + 20)] = v27[*(int *)(v32 + 20)];
    v33 = a3[10];
    v34 = (char *)a1 + v33;
    v35 = (char *)a2 + v33;
    *v34 = *v35;
    v34[8] = v35[8];
    v36 = *((_QWORD *)v35 + 3);
    *((_QWORD *)v34 + 2) = *((_QWORD *)v35 + 2);
    *((_QWORD *)v34 + 3) = v36;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t _s18TaskDefinitionThinO28TaskFinalResolutionStateThinOMa(uint64_t a1)
{
  return sub_23FC04944(a1, (uint64_t *)&unk_256F63CC0);
}

uint64_t sub_23FD1AEA0(uint64_t a1, int *a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = sub_23FD71474();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v6 = a1 + a2[5];
  v7 = sub_23FD7157C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = a1 + a2[6];
  v9 = sub_23FD71414();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();
  v10 = a1 + a2[8];
  v11 = sub_23FBFD684(&qword_256F5D4F0);
  if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v10, 1, v11))
  {
    v12 = _s18TaskDefinitionThinO14TaskActionThinVMa(0);
    if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v10, 1, v12))
      v5(v10, v4);
  }
  v13 = a1 + a2[9];
  v14 = sub_23FBFD684(&qword_256F5D500);
  if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v13, 4, v14))
  {
    v15 = sub_23FD71648();
    if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v13, 2, v15))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v13, v15);
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

char *sub_23FD1B004(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  void (*v7)(void *, const void *, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;

  v6 = sub_23FD71474();
  v7 = *(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = sub_23FD7157C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  v12 = a3[6];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_23FD71414();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  v16 = a3[8];
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  v17 = &a1[v16];
  v18 = &a2[v16];
  swift_bridgeObjectRetain();
  v19 = sub_23FBFD684(&qword_256F5D4F0);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v18, 1, v19))
  {
    v20 = _s18TaskDefinitionThinO28TaskFinalResolutionStateThinOMa(0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    v21 = _s18TaskDefinitionThinO14TaskActionThinVMa(0);
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v18, 1, v21))
    {
      v22 = sub_23FBFD684(qword_256F63B10);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      v7(v17, v18, v6);
      v17[*(int *)(v21 + 20)] = v18[*(int *)(v21 + 20)];
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v17, 0, 1, v21);
    }
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v17, 0, 1, v19);
  }
  v23 = a3[9];
  v24 = &a1[v23];
  v25 = &a2[v23];
  v26 = sub_23FBFD684(&qword_256F5D500);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v25, 4, v26))
  {
    v27 = _s18TaskDefinitionThinO14TaskStatusThinOMa(0);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    v28 = sub_23FD71648();
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v25, 2, v28))
    {
      v29 = _s18TaskDefinitionThinO21TaskFailureReasonThinOMa(0);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v24, v25, v28);
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v24, 0, 2, v28);
    }
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v24, 0, 4, v26);
  }
  v30 = _s18TaskDefinitionThinO15TaskOutcomeThinVMa(0);
  v24[*(int *)(v30 + 20)] = v25[*(int *)(v30 + 20)];
  v31 = a3[10];
  v32 = &a1[v31];
  v33 = &a2[v31];
  *v32 = *v33;
  v32[8] = v33[8];
  v34 = *((_QWORD *)v33 + 3);
  *((_QWORD *)v32 + 2) = *((_QWORD *)v33 + 2);
  *((_QWORD *)v32 + 3) = v34;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *sub_23FD1B2C0(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v46;

  v6 = sub_23FD71474();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_23FD7157C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  v13 = a3[6];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = sub_23FD71414();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 24))(v14, v15, v16);
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17 = a3[8];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = sub_23FBFD684(&qword_256F5D4F0);
  v21 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v18, 1, v20);
  v22 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v19, 1, v20);
  if (v21)
  {
    if (!v22)
    {
      v23 = _s18TaskDefinitionThinO14TaskActionThinVMa(0);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v19, 1, v23))
      {
        v24 = sub_23FBFD684(qword_256F63B10);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v18, v19, v6);
        v18[*(int *)(v23 + 20)] = v19[*(int *)(v23 + 20)];
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v18, 0, 1, v23);
      }
      goto LABEL_13;
    }
    goto LABEL_7;
  }
  if (v22)
  {
    sub_23FBFEF74((uint64_t)v18, &qword_256F5D4F0);
LABEL_7:
    v25 = _s18TaskDefinitionThinO28TaskFinalResolutionStateThinOMa(0);
LABEL_8:
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_14;
  }
  v20 = _s18TaskDefinitionThinO14TaskActionThinVMa(0);
  v26 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v18, 1, v20);
  v27 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v19, 1, v20);
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v18, v19, v6);
      v18[*(int *)(v20 + 20)] = v19[*(int *)(v20 + 20)];
LABEL_13:
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v18, 0, 1, v20);
      goto LABEL_14;
    }
    goto LABEL_31;
  }
  if (v27)
  {
    sub_23FCBA0CC();
LABEL_31:
    v25 = sub_23FBFD684(qword_256F63B10);
    goto LABEL_8;
  }
  v8(v18, v19, v6);
  v18[*(int *)(v20 + 20)] = v19[*(int *)(v20 + 20)];
LABEL_14:
  v28 = a3[9];
  v29 = &a1[v28];
  v30 = &a2[v28];
  v31 = sub_23FBFD684(&qword_256F5D500);
  v32 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v29, 4, v31);
  v33 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v30, 4, v31);
  if (v32)
  {
    if (!v33)
    {
      v34 = sub_23FD71648();
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v30, 2, v34))
      {
        v35 = _s18TaskDefinitionThinO21TaskFailureReasonThinOMa(0);
        memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v29, v30, v34);
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v29, 0, 2, v34);
      }
      v39 = (uint64_t)v29;
      v40 = 4;
      goto LABEL_27;
    }
    goto LABEL_20;
  }
  if (v33)
  {
    sub_23FBFEF74((uint64_t)v29, &qword_256F5D500);
LABEL_20:
    v36 = _s18TaskDefinitionThinO14TaskStatusThinOMa(0);
    goto LABEL_21;
  }
  v31 = sub_23FD71648();
  v37 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v29, 2, v31);
  v38 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v30, 2, v31);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
      v39 = (uint64_t)v29;
      v40 = 2;
LABEL_27:
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v39, 0, v40, v31);
      goto LABEL_28;
    }
  }
  else
  {
    v46 = *(_QWORD *)(v31 - 8);
    if (!v38)
    {
      (*(void (**)(char *, char *, uint64_t))(v46 + 24))(v29, v30, v31);
      goto LABEL_28;
    }
    (*(void (**)(char *, uint64_t))(v46 + 8))(v29, v31);
  }
  v36 = _s18TaskDefinitionThinO21TaskFailureReasonThinOMa(0);
LABEL_21:
  memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
LABEL_28:
  v41 = _s18TaskDefinitionThinO15TaskOutcomeThinVMa(0);
  v29[*(int *)(v41 + 20)] = v30[*(int *)(v41 + 20)];
  v42 = a3[10];
  v43 = &a1[v42];
  v44 = &a2[v42];
  *v43 = a2[v42];
  v43[8] = a2[v42 + 8];
  *((_QWORD *)v43 + 2) = *(_QWORD *)&a2[v42 + 16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v43 + 3) = *((_QWORD *)v44 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_23FD1B740(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  void (*v7)(void *, const void *, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  __int128 v34;

  v6 = sub_23FD71474();
  v7 = *(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = sub_23FD7157C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  v12 = a3[6];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_23FD71414();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  v16 = a3[8];
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = sub_23FBFD684(&qword_256F5D4F0);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v18, 1, v19))
  {
    v20 = _s18TaskDefinitionThinO28TaskFinalResolutionStateThinOMa(0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    v21 = _s18TaskDefinitionThinO14TaskActionThinVMa(0);
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v18, 1, v21))
    {
      v22 = sub_23FBFD684(qword_256F63B10);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      v7(v17, v18, v6);
      v17[*(int *)(v21 + 20)] = v18[*(int *)(v21 + 20)];
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v17, 0, 1, v21);
    }
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v17, 0, 1, v19);
  }
  v23 = a3[9];
  v24 = &a1[v23];
  v25 = &a2[v23];
  v26 = sub_23FBFD684(&qword_256F5D500);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v25, 4, v26))
  {
    v27 = _s18TaskDefinitionThinO14TaskStatusThinOMa(0);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    v28 = sub_23FD71648();
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v25, 2, v28))
    {
      v29 = _s18TaskDefinitionThinO21TaskFailureReasonThinOMa(0);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v24, v25, v28);
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v24, 0, 2, v28);
    }
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v24, 0, 4, v26);
  }
  v30 = _s18TaskDefinitionThinO15TaskOutcomeThinVMa(0);
  v24[*(int *)(v30 + 20)] = v25[*(int *)(v30 + 20)];
  v31 = a3[10];
  v32 = &a1[v31];
  v33 = &a2[v31];
  v34 = *((_OWORD *)v33 + 1);
  *(_OWORD *)v32 = *(_OWORD *)v33;
  *((_OWORD *)v32 + 1) = v34;
  return a1;
}

char *sub_23FD1B9DC(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v46;

  v6 = sub_23FD71474();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_23FD7157C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  v13 = a3[6];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = sub_23FD71414();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(v14, v15, v16);
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  swift_bridgeObjectRelease();
  v17 = a3[8];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = sub_23FBFD684(&qword_256F5D4F0);
  v21 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v18, 1, v20);
  v22 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v19, 1, v20);
  if (v21)
  {
    if (!v22)
    {
      v23 = _s18TaskDefinitionThinO14TaskActionThinVMa(0);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v19, 1, v23))
      {
        v24 = sub_23FBFD684(qword_256F63B10);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v18, v19, v6);
        v18[*(int *)(v23 + 20)] = v19[*(int *)(v23 + 20)];
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v18, 0, 1, v23);
      }
      goto LABEL_13;
    }
    goto LABEL_7;
  }
  if (v22)
  {
    sub_23FBFEF74((uint64_t)v18, &qword_256F5D4F0);
LABEL_7:
    v25 = _s18TaskDefinitionThinO28TaskFinalResolutionStateThinOMa(0);
LABEL_8:
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_14;
  }
  v20 = _s18TaskDefinitionThinO14TaskActionThinVMa(0);
  v26 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v18, 1, v20);
  v27 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v19, 1, v20);
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v18, v19, v6);
      v18[*(int *)(v20 + 20)] = v19[*(int *)(v20 + 20)];
LABEL_13:
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v18, 0, 1, v20);
      goto LABEL_14;
    }
    goto LABEL_31;
  }
  if (v27)
  {
    sub_23FCBA0CC();
LABEL_31:
    v25 = sub_23FBFD684(qword_256F63B10);
    goto LABEL_8;
  }
  v8(v18, v19, v6);
  v18[*(int *)(v20 + 20)] = v19[*(int *)(v20 + 20)];
LABEL_14:
  v28 = a3[9];
  v29 = &a1[v28];
  v30 = &a2[v28];
  v31 = sub_23FBFD684(&qword_256F5D500);
  v32 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v29, 4, v31);
  v33 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v30, 4, v31);
  if (v32)
  {
    if (!v33)
    {
      v34 = sub_23FD71648();
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v30, 2, v34))
      {
        v35 = _s18TaskDefinitionThinO21TaskFailureReasonThinOMa(0);
        memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v29, v30, v34);
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v29, 0, 2, v34);
      }
      v39 = (uint64_t)v29;
      v40 = 4;
      goto LABEL_27;
    }
    goto LABEL_20;
  }
  if (v33)
  {
    sub_23FBFEF74((uint64_t)v29, &qword_256F5D500);
LABEL_20:
    v36 = _s18TaskDefinitionThinO14TaskStatusThinOMa(0);
    goto LABEL_21;
  }
  v31 = sub_23FD71648();
  v37 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v29, 2, v31);
  v38 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v30, 2, v31);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
      v39 = (uint64_t)v29;
      v40 = 2;
LABEL_27:
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v39, 0, v40, v31);
      goto LABEL_28;
    }
  }
  else
  {
    v46 = *(_QWORD *)(v31 - 8);
    if (!v38)
    {
      (*(void (**)(char *, char *, uint64_t))(v46 + 40))(v29, v30, v31);
      goto LABEL_28;
    }
    (*(void (**)(char *, uint64_t))(v46 + 8))(v29, v31);
  }
  v36 = _s18TaskDefinitionThinO21TaskFailureReasonThinOMa(0);
LABEL_21:
  memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
LABEL_28:
  v41 = _s18TaskDefinitionThinO15TaskOutcomeThinVMa(0);
  v29[*(int *)(v41 + 20)] = v30[*(int *)(v41 + 20)];
  v42 = a3[10];
  v43 = &a1[v42];
  v44 = &a2[v42];
  *v43 = *v44;
  v43[8] = v44[8];
  *((_QWORD *)v43 + 2) = *((_QWORD *)v44 + 2);
  swift_bridgeObjectRelease();
  *((_QWORD *)v43 + 3) = *((_QWORD *)v44 + 3);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23FD1BE44()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FD1BE50(uint64_t a1, uint64_t a2, int *a3)
{
  return sub_23FD1BE6C(a1, a2, a3, (void (*)(_QWORD))_s18TaskDefinitionThinO15TaskContextThinVMa, (void (*)(_QWORD))_s18TaskDefinitionThinO28TaskFinalResolutionStateThinOMa, _s18TaskDefinitionThinO15TaskOutcomeThinVMa);
}

uint64_t sub_23FD1BE6C(uint64_t a1, uint64_t a2, int *a3, void (*a4)(_QWORD), void (*a5)(_QWORD), uint64_t (*a6)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v20;

  sub_23FC06018();
  sub_23FC06178();
  if (v14)
  {
    v12 = sub_23FC8A790();
    return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v12, v6, v13);
  }
  sub_23FC06250();
  sub_23FC06178();
  if (v14)
  {
    sub_23FD206F4();
LABEL_17:
    v12 = v7 + v15;
    return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v12, v6, v13);
  }
  a4(0);
  sub_23FC06178();
  if (v16)
  {
    v13 = v17;
    v15 = a3[6];
    goto LABEL_17;
  }
  if ((_DWORD)v6 != 0x7FFFFFFF)
  {
    a5(0);
    sub_23FC06178();
    if (v14)
    {
      v13 = v20;
      v15 = a3[8];
    }
    else
    {
      v13 = a6(0);
      v15 = a3[9];
    }
    goto LABEL_17;
  }
  v18 = *(_QWORD *)(v7 + a3[7]);
  if (v18 >= 0xFFFFFFFF)
    LODWORD(v18) = -1;
  return (v18 + 1);
}

uint64_t _s18TaskDefinitionThinO15TaskContextThinVMa(uint64_t a1)
{
  return sub_23FC04944(a1, qword_256F63C18);
}

uint64_t sub_23FD1BF68()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FD1BF74(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_23FD1BF90(a1, a2, a3, a4, (void (*)(_QWORD))_s18TaskDefinitionThinO15TaskContextThinVMa, (void (*)(_QWORD))_s18TaskDefinitionThinO28TaskFinalResolutionStateThinOMa, (void (*)(_QWORD))_s18TaskDefinitionThinO15TaskOutcomeThinVMa);
}

void sub_23FD1BF90(uint64_t a1, uint64_t a2, int a3, uint64_t a4, void (*a5)(_QWORD), void (*a6)(_QWORD), void (*a7)(_QWORD))
{
  int v7;
  uint64_t v8;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_23FC06018();
  sub_23FD1FFA0();
  if (v14)
  {
    sub_23FC5F4A8();
  }
  else
  {
    sub_23FC06250();
    sub_23FD1FFA0();
    if (v14)
    {
      sub_23FD2063C();
    }
    else
    {
      a5(0);
      sub_23FD1FFA0();
      if (!v15)
      {
        if (a3 == 0x7FFFFFFF)
        {
          *(_QWORD *)(v8 + *(int *)(a4 + 28)) = (v7 - 1);
          sub_23FC6264C();
          return;
        }
        a6(0);
        sub_23FD1FFA0();
        if (!v14)
          a7(0);
      }
    }
  }
  sub_23FCF25B4();
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v16, v17, v18, v19);
}

uint64_t _s18TaskDefinitionThinO18TaskEvaluationThinVMa(uint64_t a1)
{
  return sub_23FC04944(a1, qword_256F63B70);
}

uint64_t sub_23FD1C080(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FD1C09C(a1, a2, a3, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], _s18TaskDefinitionThinO28TaskFinalResolutionStateThinOMa, _s18TaskDefinitionThinO15TaskOutcomeThinVMa);
}

uint64_t sub_23FD1C09C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t), uint64_t (*a6)(uint64_t))
{
  uint64_t result;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;

  result = sub_23FD71474();
  if (v10 <= 0x3F)
  {
    result = sub_23FD7157C();
    if (v11 <= 0x3F)
    {
      result = a4(319);
      if (v12 <= 0x3F)
      {
        result = a5(319);
        if (v13 <= 0x3F)
        {
          result = a6(319);
          if (v14 <= 0x3F)
          {
            sub_23FD20174();
            sub_23FD20548();
            swift_initStructMetadata();
            return sub_23FD201C0();
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_23FD1C18C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FD1C198(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900]);
}

uint64_t sub_23FD1C198(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);

  sub_23FC09FC8(a1, a2, a3, a4);
  v4 = sub_23FC5E880();
  return v5(v4);
}

uint64_t sub_23FD1C1C4()
{
  return sub_23FD1C1D0();
}

uint64_t sub_23FD1C1D0()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  v0 = sub_23FCBCDB0();
  v1(v0);
  v2 = sub_23FCF298C();
  return sub_23FD1FD10(v2, v3, v4);
}

void sub_23FD1C1F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FD1C1FC(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900]);
}

void sub_23FD1C1FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;

  v4 = sub_23FC09FC8(a1, a2, a3, a4);
  sub_23FC0A014(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16));
  sub_23FBFF0A0();
}

void sub_23FD1C228(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FD1C234(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900]);
}

void sub_23FD1C234(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;

  v4 = sub_23FC09FC8(a1, a2, a3, a4);
  sub_23FC0A014(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24));
  sub_23FBFF0A0();
}

void sub_23FD1C260(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FC09C6C(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900]);
}

void sub_23FD1C26C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FD1C278(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900]);
}

void sub_23FD1C278(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;

  v4 = sub_23FC09FC8(a1, a2, a3, a4);
  sub_23FC0A014(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40));
  sub_23FBFF0A0();
}

uint64_t sub_23FD1C2A4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FD1C2B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_23FD2024C();
  return sub_23FC0A08C(v1, v0, v2);
}

uint64_t sub_23FD1C2D4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FD1C2E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23FD2024C();
  v0 = sub_23FC0A12C();
  return sub_23FC0A084(v0, v1, v2, v3);
}

void sub_23FD1C2FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FD1C308(a1, a2, a3, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
}

void sub_23FD1C308(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  unint64_t v4;

  sub_23FD20398(a1, a2, a3, a4);
  if (v4 <= 0x3F)
  {
    sub_23FD20174();
    sub_23FD20548();
    swift_initStructMetadata();
    sub_23FD201C0();
  }
  sub_23FCF28C8();
}

uint64_t *sub_23FD1C354(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = sub_23FBFD684(&qword_256F5D4F0);
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v9 = _s18TaskDefinitionThinO14TaskActionThinVMa(0);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v9))
      {
        v10 = sub_23FBFD684(qword_256F63B10);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      }
      else
      {
        v11 = sub_23FD71474();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
        *((_BYTE *)a1 + *(int *)(v9 + 20)) = *((_BYTE *)a2 + *(int *)(v9 + 20));
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v9);
      }
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_23FD1C47C(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v2 = sub_23FBFD684(&qword_256F5D4F0);
  result = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, 1, v2);
  if (!(_DWORD)result)
  {
    v4 = _s18TaskDefinitionThinO14TaskActionThinVMa(0);
    result = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, 1, v4);
    if (!(_DWORD)result)
    {
      v5 = sub_23FD71474();
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
    }
  }
  return result;
}

void *sub_23FD1C4F8(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_23FBFD684(&qword_256F5D4F0);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = _s18TaskDefinitionThinO14TaskActionThinVMa(0);
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v7))
    {
      v8 = sub_23FBFD684(qword_256F63B10);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      v9 = sub_23FD71474();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      *((_BYTE *)a1 + *(int *)(v7 + 20)) = *((_BYTE *)a2 + *(int *)(v7 + 20));
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v7);
    }
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

void *sub_23FD1C5FC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v6 = sub_23FBFD684(&qword_256F5D4F0);
  v7 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a1, 1, v6);
  v8 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      v9 = _s18TaskDefinitionThinO14TaskActionThinVMa(0);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v9))
      {
        v10 = sub_23FBFD684(qword_256F63B10);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      }
      else
      {
        v15 = sub_23FD71474();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a1, a2, v15);
        *((_BYTE *)a1 + *(int *)(v9 + 20)) = *((_BYTE *)a2 + *(int *)(v9 + 20));
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v9);
      }
      goto LABEL_13;
    }
    goto LABEL_7;
  }
  if (v8)
  {
    sub_23FBFEF74((uint64_t)a1, &qword_256F5D4F0);
LABEL_7:
    v11 = *(_QWORD *)(a3 - 8);
    goto LABEL_8;
  }
  v6 = _s18TaskDefinitionThinO14TaskActionThinVMa(0);
  v12 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a1, 1, v6);
  v13 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v6);
  if (v12)
  {
    if (!v13)
    {
      v14 = sub_23FD71474();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
      *((_BYTE *)a1 + *(int *)(v6 + 20)) = *((_BYTE *)a2 + *(int *)(v6 + 20));
LABEL_13:
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v6);
      return a1;
    }
  }
  else
  {
    if (!v13)
    {
      v17 = sub_23FD71474();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v17 - 8) + 24))(a1, a2, v17);
      *((_BYTE *)a1 + *(int *)(v6 + 20)) = *((_BYTE *)a2 + *(int *)(v6 + 20));
      return a1;
    }
    sub_23FCBA0CC();
  }
  v11 = *(_QWORD *)(sub_23FBFD684(qword_256F63B10) - 8);
LABEL_8:
  memcpy(a1, a2, *(_QWORD *)(v11 + 64));
  return a1;
}

void *sub_23FD1C7F4(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_23FBFD684(&qword_256F5D4F0);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = _s18TaskDefinitionThinO14TaskActionThinVMa(0);
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v7))
    {
      v8 = sub_23FBFD684(qword_256F63B10);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      v9 = sub_23FD71474();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
      *((_BYTE *)a1 + *(int *)(v7 + 20)) = *((_BYTE *)a2 + *(int *)(v7 + 20));
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v7);
    }
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

void *sub_23FD1C8F8(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v6 = sub_23FBFD684(&qword_256F5D4F0);
  v7 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a1, 1, v6);
  v8 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      v9 = _s18TaskDefinitionThinO14TaskActionThinVMa(0);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v9))
      {
        v10 = sub_23FBFD684(qword_256F63B10);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      }
      else
      {
        v15 = sub_23FD71474();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(a1, a2, v15);
        *((_BYTE *)a1 + *(int *)(v9 + 20)) = *((_BYTE *)a2 + *(int *)(v9 + 20));
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v9);
      }
      goto LABEL_13;
    }
    goto LABEL_7;
  }
  if (v8)
  {
    sub_23FBFEF74((uint64_t)a1, &qword_256F5D4F0);
LABEL_7:
    v11 = *(_QWORD *)(a3 - 8);
    goto LABEL_8;
  }
  v6 = _s18TaskDefinitionThinO14TaskActionThinVMa(0);
  v12 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a1, 1, v6);
  v13 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v6);
  if (v12)
  {
    if (!v13)
    {
      v14 = sub_23FD71474();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a1, a2, v14);
      *((_BYTE *)a1 + *(int *)(v6 + 20)) = *((_BYTE *)a2 + *(int *)(v6 + 20));
LABEL_13:
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v6);
      return a1;
    }
  }
  else
  {
    if (!v13)
    {
      v17 = sub_23FD71474();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v17 - 8) + 40))(a1, a2, v17);
      *((_BYTE *)a1 + *(int *)(v6 + 20)) = *((_BYTE *)a2 + *(int *)(v6 + 20));
      return a1;
    }
    sub_23FCBA0CC();
  }
  v11 = *(_QWORD *)(sub_23FBFD684(qword_256F63B10) - 8);
LABEL_8:
  memcpy(a1, a2, *(_QWORD *)(v11 + 64));
  return a1;
}

uint64_t sub_23FD1CAF0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FD1CAFC()
{
  uint64_t v0;

  sub_23FD204C8();
  v0 = sub_23FBFD684(&qword_256F5D4F0);
  sub_23FD20308(v0);
  sub_23FBFF0A0();
}

uint64_t sub_23FD1CB24()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FD1CB30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23FD2044C();
  sub_23FBFD684(&qword_256F5D4F0);
  v0 = sub_23FC9C520();
  return sub_23FC0608C(v0, v1, v2, v3);
}

uint64_t sub_23FD1CB5C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23FBFD684(&qword_256F5D4F0);
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, 1, v2);
}

uint64_t sub_23FD1CB90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23FBFD684(&qword_256F5D4F0);
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a1, a2, 1, v4);
}

void sub_23FD1CBCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FD1CBE0(a1, a2, a3, qword_256F63CD0, (void (*)(uint64_t))_s18TaskDefinitionThinO14TaskActionThinVMa);
}

void sub_23FD1CBE0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, void (*a5)(uint64_t))
{
  unint64_t v5;

  sub_23FD163CC(319, a4, a5);
  if (v5 <= 0x3F)
  {
    sub_23FD20548();
    swift_initEnumMetadataSinglePayload();
    sub_23FD201C0();
  }
  sub_23FBFF0A0();
}

_QWORD *sub_23FD1CC30(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(_QWORD *, _QWORD *, uint64_t);
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) == 0)
  {
    v7 = sub_23FD7157C();
    v8 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = a3[5];
    v10 = (_QWORD *)((char *)a1 + v9);
    v11 = (_QWORD *)((char *)a2 + v9);
    v12 = type metadata accessor for FeedbackLearning.CandidateParameter(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v15 = v11[1];
      *v10 = *v11;
      v10[1] = v15;
      swift_bridgeObjectRetain();
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        goto LABEL_9;
      }
      v8(v10, v11, v7);
    }
    swift_storeEnumTagMultiPayload();
LABEL_9:
    v16 = a3[6];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    v19 = sub_23FD72DB8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[8];
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    *((_BYTE *)a1 + v20) = *((_BYTE *)a2 + v20);
    return a1;
  }
  v14 = *a2;
  *a1 = *a2;
  a1 = (_QWORD *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t sub_23FD1CD84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;

  v4 = sub_23FD7157C();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v6 = a1 + *(int *)(a2 + 20);
  type metadata accessor for FeedbackLearning.CandidateParameter(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    swift_bridgeObjectRelease();
  }
  else if (!EnumCaseMultiPayload)
  {
    v5(v6, v4);
  }
  v8 = a1 + *(int *)(a2 + 24);
  v9 = sub_23FD72DB8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
}

_QWORD *sub_23FD1CE34(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  void (*v7)(_QWORD *, _QWORD *, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = sub_23FD7157C();
  v7 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = (_QWORD *)((char *)a1 + v8);
  v10 = (_QWORD *)((char *)a2 + v8);
  v11 = type metadata accessor for FeedbackLearning.CandidateParameter(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v13 = v10[1];
    *v9 = *v10;
    v9[1] = v13;
    swift_bridgeObjectRetain();
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      goto LABEL_7;
    }
    v7(v9, v10, v6);
  }
  swift_storeEnumTagMultiPayload();
LABEL_7:
  v14 = a3[6];
  v15 = (uint64_t)a1 + v14;
  v16 = (uint64_t)a2 + v14;
  v17 = sub_23FD72DB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
  v18 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  *((_BYTE *)a1 + v18) = *((_BYTE *)a2 + v18);
  return a1;
}

uint64_t sub_23FD1CF5C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_23FD7157C();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(a1, a2, v6);
  if (a1 != a2)
  {
    v8 = a3[5];
    v9 = (_QWORD *)(a1 + v8);
    v10 = (_QWORD *)(a2 + v8);
    sub_23FCBA0CC();
    v11 = type metadata accessor for FeedbackLearning.CandidateParameter(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *v9 = *v10;
      v9[1] = v10[1];
      swift_bridgeObjectRetain();
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
        goto LABEL_8;
      }
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(v9, v10, v6);
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_8:
  v13 = a3[6];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = sub_23FD72DB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 24))(v14, v15, v16);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  return a1;
}

char *sub_23FD1D0AC(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  void (*v7)(void *, const void *, uint64_t);
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_23FD7157C();
  v7 = *(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = type metadata accessor for FeedbackLearning.CandidateParameter(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v7(v9, v10, v6);
    swift_storeEnumTagMultiPayload();
  }
  v12 = a3[6];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_23FD72DB8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  v16 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  a1[v16] = a2[v16];
  return a1;
}

uint64_t sub_23FD1D1B0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_23FD7157C();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(a1, a2, v6);
  if (a1 != a2)
  {
    v8 = a3[5];
    v9 = (void *)(a1 + v8);
    v10 = (const void *)(a2 + v8);
    sub_23FCBA0CC();
    v11 = type metadata accessor for FeedbackLearning.CandidateParameter(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(v9, v10, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_23FD72DB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  v16 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v16) = *(_BYTE *)(a2 + v16);
  return a1;
}

uint64_t sub_23FD1D2D0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FD1D2DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;

  sub_23FC06250();
  sub_23FC06178();
  if (v8)
  {
    v6 = sub_23FC8A790();
  }
  else
  {
    type metadata accessor for FeedbackLearning.CandidateParameter(0);
    sub_23FC06178();
    if (v8)
    {
      sub_23FD206F4();
    }
    else
    {
      sub_23FC10130();
      sub_23FC06178();
      if (!v10)
      {
        sub_23FD20490(*(int *)(a3 + 28));
        sub_23FC09258();
        return;
      }
      v7 = v11;
      v9 = *(int *)(a3 + 24);
    }
    v6 = a1 + v9;
  }
  sub_23FC06098(v6, a2, v7);
}

uint64_t sub_23FD1D358()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FD1D364(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_23FC06250();
  sub_23FC06188();
  if (v7)
  {
    sub_23FC5F4A8();
  }
  else
  {
    type metadata accessor for FeedbackLearning.CandidateParameter(0);
    sub_23FC06188();
    if (v7)
    {
      sub_23FD2063C();
    }
    else
    {
      sub_23FC10130();
      sub_23FC06188();
      if (!v8)
      {
        *(_BYTE *)(a1 + *(int *)(a4 + 28)) = a2 + 3;
        sub_23FC09258();
        return;
      }
    }
  }
  sub_23FCF25B4();
  sub_23FC0608C(v9, v10, v11, v12);
}

uint64_t _s18TaskDefinitionThinO23CandidateEvaluationThinVMa(uint64_t a1)
{
  return sub_23FC04944(a1, qword_256F63D30);
}

uint64_t sub_23FD1D3FC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = sub_23FD7157C();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for FeedbackLearning.CandidateParameter(319);
    if (v2 <= 0x3F)
    {
      result = sub_23FD72DB8();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_23FD1D4B0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = sub_23FBFD684(&qword_256F5D500);
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 4, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v9 = sub_23FD71648();
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 2, v9))
      {
        v10 = _s18TaskDefinitionThinO21TaskFailureReasonThinOMa(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 2, v9);
      }
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 4, v7);
    }
  }
  return a1;
}

void sub_23FD1D5C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_23FBFD684(&qword_256F5D500);
  if (sub_23FD20330(v2)
    || (v3 = sub_23FD1FF08(),
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, 2, v3)))
  {
    sub_23FBFF0A0();
  }
  else
  {
    sub_23FD1FD10(a1, v3, *(uint64_t (**)(void))(*(_QWORD *)(v3 - 8) + 8));
  }
}

void *sub_23FD1D620(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_23FBFD684(&qword_256F5D500);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 4, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = sub_23FD71648();
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 2, v7))
    {
      v8 = _s18TaskDefinitionThinO21TaskFailureReasonThinOMa(0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 2, v7);
    }
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 4, v6);
  }
  return a1;
}

void *sub_23FD1D70C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v6 = sub_23FBFD684(&qword_256F5D500);
  v7 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a1, 4, v6);
  v8 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 4, v6);
  if (v7)
  {
    if (!v8)
    {
      v9 = sub_23FD71648();
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 2, v9))
      {
        v10 = _s18TaskDefinitionThinO21TaskFailureReasonThinOMa(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 2, v9);
      }
      v14 = (uint64_t)a1;
      v15 = 4;
      goto LABEL_14;
    }
    goto LABEL_7;
  }
  if (v8)
  {
    sub_23FBFEF74((uint64_t)a1, &qword_256F5D500);
LABEL_7:
    v11 = *(_QWORD *)(a3 - 8);
    goto LABEL_8;
  }
  v6 = sub_23FD71648();
  v12 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a1, 2, v6);
  v13 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 2, v6);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      v14 = (uint64_t)a1;
      v15 = 2;
LABEL_14:
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v14, 0, v15, v6);
      return a1;
    }
  }
  else
  {
    v17 = *(_QWORD *)(v6 - 8);
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(v17 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v17 + 8))(a1, v6);
  }
  v11 = *(_QWORD *)(_s18TaskDefinitionThinO21TaskFailureReasonThinOMa(0) - 8);
LABEL_8:
  memcpy(a1, a2, *(_QWORD *)(v11 + 64));
  return a1;
}

void *sub_23FD1D8CC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_23FBFD684(&qword_256F5D500);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 4, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = sub_23FD71648();
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 2, v7))
    {
      v8 = _s18TaskDefinitionThinO21TaskFailureReasonThinOMa(0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 2, v7);
    }
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 4, v6);
  }
  return a1;
}

void *sub_23FD1D9B8(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v6 = sub_23FBFD684(&qword_256F5D500);
  v7 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a1, 4, v6);
  v8 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 4, v6);
  if (v7)
  {
    if (!v8)
    {
      v9 = sub_23FD71648();
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 2, v9))
      {
        v10 = _s18TaskDefinitionThinO21TaskFailureReasonThinOMa(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 2, v9);
      }
      v14 = (uint64_t)a1;
      v15 = 4;
      goto LABEL_14;
    }
    goto LABEL_7;
  }
  if (v8)
  {
    sub_23FBFEF74((uint64_t)a1, &qword_256F5D500);
LABEL_7:
    v11 = *(_QWORD *)(a3 - 8);
    goto LABEL_8;
  }
  v6 = sub_23FD71648();
  v12 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a1, 2, v6);
  v13 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 2, v6);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      v14 = (uint64_t)a1;
      v15 = 2;
LABEL_14:
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v14, 0, v15, v6);
      return a1;
    }
  }
  else
  {
    v17 = *(_QWORD *)(v6 - 8);
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(v17 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v17 + 8))(a1, v6);
  }
  v11 = *(_QWORD *)(_s18TaskDefinitionThinO21TaskFailureReasonThinOMa(0) - 8);
LABEL_8:
  memcpy(a1, a2, *(_QWORD *)(v11 + 64));
  return a1;
}

uint64_t sub_23FD1DB78()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FD1DB84()
{
  uint64_t v0;

  sub_23FD204C8();
  v0 = sub_23FBFD684(&qword_256F5D500);
  sub_23FD202E0(v0);
  sub_23FBFF0A0();
}

uint64_t sub_23FD1DBAC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FD1DBB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23FD201F4();
  sub_23FBFD684(&qword_256F5D500);
  v0 = sub_23FC9C520();
  return sub_23FC0608C(v0, v1, v2, v3);
}

uint64_t sub_23FD1DBE4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23FBFD684(&qword_256F5D500);
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, 4, v2);
}

uint64_t sub_23FD1DC18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23FBFD684(&qword_256F5D500);
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a1, a2, 4, v4);
}

void sub_23FD1DC54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FD1E164(a1, a2, a3, _s18TaskDefinitionThinO21TaskFailureReasonThinOMa);
}

uint64_t *sub_23FD1DC64(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = sub_23FD71648();
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 2, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 2, v7);
    }
  }
  return a1;
}

uint64_t sub_23FD1DD1C(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_23FD71648();
  result = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, 2, v2);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return result;
}

void *sub_23FD1DD74(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23FD71648();
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 2, v6);
  }
  return a1;
}

void *sub_23FD1DE08(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;

  v6 = sub_23FD71648();
  v7 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a1, 2, v6);
  v8 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 2, v6);
  if (!v7)
  {
    v9 = *(_QWORD *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 2, v6);
  return a1;
}

void *sub_23FD1DEEC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23FD71648();
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 2, v6);
  }
  return a1;
}

void *sub_23FD1DF80(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;

  v6 = sub_23FD71648();
  v7 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a1, 2, v6);
  v8 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 2, v6);
  if (!v7)
  {
    v9 = *(_QWORD *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 2, v6);
  return a1;
}

uint64_t sub_23FD1E064()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FD1E070(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23FD1FF08();
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, a2, v4);
  sub_23FBFF0A0();
}

uint64_t sub_23FD1E0AC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FD1E0B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23FD1FF08();
  v0 = sub_23FC9C520();
  return sub_23FC0608C(v0, v1, v2, v3);
}

uint64_t sub_23FD1E0EC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23FD71648();
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, 2, v2);
}

uint64_t sub_23FD1E11C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23FD71648();
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a1, a2, 2, v4);
}

void sub_23FD1E154(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_23FD1E164(a1, a2, a3, (uint64_t (*)(uint64_t))MEMORY[0x24BE522D8]);
}

void sub_23FD1E164(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  unint64_t v4;

  sub_23FD20398(a1, a2, a3, a4);
  if (v4 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    sub_23FD201C0();
  }
  sub_23FBFF0A0();
}

unint64_t sub_23FD1E1B0()
{
  unint64_t result;

  result = qword_256F63E80;
  if (!qword_256F63E80)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7FF30, &_s18TaskDefinitionThinO18TaskEvaluationThinV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63E80);
  }
  return result;
}

unint64_t sub_23FD1E1EC()
{
  unint64_t result;

  result = qword_256F63EB8;
  if (!qword_256F63EB8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD81768, &unk_251014760);
    atomic_store(result, (unint64_t *)&qword_256F63EB8);
  }
  return result;
}

unint64_t sub_23FD1E228()
{
  unint64_t result;

  result = qword_256F63EC8;
  if (!qword_256F63EC8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7FEE0, &_s18TaskDefinitionThinO15TaskOutcomeThinV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63EC8);
  }
  return result;
}

unint64_t sub_23FD1E264()
{
  unint64_t result;

  result = qword_256F63EF0;
  if (!qword_256F63EF0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7FE90, &_s18TaskDefinitionThinO14TaskActionThinV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63EF0);
  }
  return result;
}

uint64_t sub_23FD1E2A0(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = *a1;
  if (!result)
  {
    v9 = sub_23FBFEDE8(&qword_256F63E90);
    sub_23FBFEE2C(a2, _s18TaskDefinitionThinO23CandidateEvaluationThinVMa, a3);
    v11 = v10;
    result = MEMORY[0x2426797E8](a4, v9, &v11);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23FD1E324()
{
  unint64_t result;

  result = qword_256F63F30;
  if (!qword_256F63F30)
  {
    result = MEMORY[0x2426797E8](&unk_23FD81790, &unk_251014760);
    atomic_store(result, (unint64_t *)&qword_256F63F30);
  }
  return result;
}

unint64_t sub_23FD1E360()
{
  unint64_t result;

  result = qword_256F63F40;
  if (!qword_256F63F40)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7FE40, &_s18TaskDefinitionThinO15TaskContextThinV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63F40);
  }
  return result;
}

unint64_t sub_23FD1E39C()
{
  unint64_t result;

  result = qword_256F63F78;
  if (!qword_256F63F78)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7FDF0, &_s18TaskDefinitionThinO28TaskFinalResolutionStateThinO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63F78);
  }
  return result;
}

unint64_t sub_23FD1E3D8()
{
  unint64_t result;

  result = qword_256F63F80;
  if (!qword_256F63F80)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7FDA0, &_s18TaskDefinitionThinO28TaskFinalResolutionStateThinO20IncompleteCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63F80);
  }
  return result;
}

unint64_t sub_23FD1E414()
{
  unint64_t result;

  result = qword_256F63F88;
  if (!qword_256F63F88)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7FD50, &_s18TaskDefinitionThinO28TaskFinalResolutionStateThinO18CompleteCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63F88);
  }
  return result;
}

unint64_t sub_23FD1E450()
{
  unint64_t result;

  result = qword_256F63FC0;
  if (!qword_256F63FC0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7FD00, &_s18TaskDefinitionThinO23CandidateEvaluationThinV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F63FC0);
  }
  return result;
}

unint64_t sub_23FD1E48C()
{
  unint64_t result;

  result = qword_256F64000;
  if (!qword_256F64000)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7FCB0, &_s18TaskDefinitionThinO14TaskStatusThinO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64000);
  }
  return result;
}

unint64_t sub_23FD1E4C8()
{
  unint64_t result;

  result = qword_256F64008;
  if (!qword_256F64008)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7FC60, &_s18TaskDefinitionThinO14TaskStatusThinO16CancelCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64008);
  }
  return result;
}

unint64_t sub_23FD1E504()
{
  unint64_t result;

  result = qword_256F64010;
  if (!qword_256F64010)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7FC10, &_s18TaskDefinitionThinO14TaskStatusThinO17AbandonCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64010);
  }
  return result;
}

unint64_t sub_23FD1E540()
{
  unint64_t result;

  result = qword_256F64018;
  if (!qword_256F64018)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7FBC0, &_s18TaskDefinitionThinO14TaskStatusThinO25InferredFailureCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64018);
  }
  return result;
}

unint64_t sub_23FD1E57C()
{
  unint64_t result;

  result = qword_256F64028;
  if (!qword_256F64028)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7FB70, &_s18TaskDefinitionThinO14TaskStatusThinO25InferredSuccessCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64028);
  }
  return result;
}

unint64_t sub_23FD1E5B8()
{
  unint64_t result;

  result = qword_256F64030;
  if (!qword_256F64030)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7FB20, &_s18TaskDefinitionThinO14TaskStatusThinO17UnknownCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64030);
  }
  return result;
}

unint64_t sub_23FD1E5F4()
{
  unint64_t result;

  result = qword_256F64090;
  if (!qword_256F64090)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7FAD0, &_s18TaskDefinitionThinO21TaskFailureReasonThinO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64090);
  }
  return result;
}

unint64_t sub_23FD1E630()
{
  unint64_t result;

  result = qword_256F64098;
  if (!qword_256F64098)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7FA80, &_s18TaskDefinitionThinO21TaskFailureReasonThinO25CriticalFailureCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64098);
  }
  return result;
}

unint64_t sub_23FD1E66C()
{
  unint64_t result;

  result = qword_256F640A0;
  if (!qword_256F640A0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7FA30, &_s18TaskDefinitionThinO21TaskFailureReasonThinO26ExecutionFailureCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F640A0);
  }
  return result;
}

unint64_t sub_23FD1E6A8()
{
  unint64_t result;

  result = qword_256F640A8;
  if (!qword_256F640A8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7F9E0, &_s18TaskDefinitionThinO21TaskFailureReasonThinO17UnknownCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F640A8);
  }
  return result;
}

uint64_t _s24ConfirmationPromptResultOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return sub_23FD2000C(-1);
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return sub_23FD2000C((*a1 | (v4 << 8)) - 3);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return sub_23FD2000C((*a1 | (v4 << 8)) - 3);
    }
    v4 = a1[1];
    if (a1[1])
      return sub_23FD2000C((*a1 | (v4 << 8)) - 3);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return sub_23FD2000C(v8);
}

uint64_t _s24ConfirmationPromptResultOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23FD1E7B4 + 4 * byte_23FD7B95E[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23FD1E7E8 + 4 * byte_23FD7B959[v4]))();
}

uint64_t sub_23FD1E7EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23FD1E7F4);
  return result;
}

uint64_t sub_23FD1E7FC(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x23FD1E804);
  return sub_23FD1FFE0();
}

ValueMetadata *_s18TaskDefinitionThinO21TaskFailureReasonThinO10CodingKeysOMa()
{
  return &_s18TaskDefinitionThinO21TaskFailureReasonThinO10CodingKeysON;
}

ValueMetadata *_s18TaskDefinitionThinO21TaskFailureReasonThinO17UnknownCodingKeysOMa()
{
  return &_s18TaskDefinitionThinO21TaskFailureReasonThinO17UnknownCodingKeysON;
}

ValueMetadata *_s18TaskDefinitionThinO21TaskFailureReasonThinO26ExecutionFailureCodingKeysOMa()
{
  return &_s18TaskDefinitionThinO21TaskFailureReasonThinO26ExecutionFailureCodingKeysON;
}

ValueMetadata *_s18TaskDefinitionThinO21TaskFailureReasonThinO25CriticalFailureCodingKeysOMa()
{
  return &_s18TaskDefinitionThinO21TaskFailureReasonThinO25CriticalFailureCodingKeysON;
}

ValueMetadata *_s18TaskDefinitionThinO14TaskStatusThinO10CodingKeysOMa()
{
  return &_s18TaskDefinitionThinO14TaskStatusThinO10CodingKeysON;
}

ValueMetadata *_s18TaskDefinitionThinO14TaskStatusThinO17UnknownCodingKeysOMa()
{
  return &_s18TaskDefinitionThinO14TaskStatusThinO17UnknownCodingKeysON;
}

ValueMetadata *_s18TaskDefinitionThinO14TaskStatusThinO25InferredSuccessCodingKeysOMa()
{
  return &_s18TaskDefinitionThinO14TaskStatusThinO25InferredSuccessCodingKeysON;
}

ValueMetadata *_s18TaskDefinitionThinO14TaskStatusThinO25InferredFailureCodingKeysOMa()
{
  return &_s18TaskDefinitionThinO14TaskStatusThinO25InferredFailureCodingKeysON;
}

ValueMetadata *_s18TaskDefinitionThinO14TaskStatusThinO17AbandonCodingKeysOMa()
{
  return &_s18TaskDefinitionThinO14TaskStatusThinO17AbandonCodingKeysON;
}

ValueMetadata *_s18TaskDefinitionThinO14TaskStatusThinO16CancelCodingKeysOMa()
{
  return &_s18TaskDefinitionThinO14TaskStatusThinO16CancelCodingKeysON;
}

uint64_t _s10TaskStatusO10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return sub_23FD2000C(-1);
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return sub_23FD2000C((*a1 | (v4 << 8)) - 5);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return sub_23FD2000C((*a1 | (v4 << 8)) - 5);
    }
    v4 = a1[1];
    if (a1[1])
      return sub_23FD2000C((*a1 | (v4 << 8)) - 5);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return sub_23FD2000C(v8);
}

uint64_t _s10TaskStatusO10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23FD1E984 + 4 * byte_23FD7B968[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23FD1E9B8 + 4 * byte_23FD7B963[v4]))();
}

uint64_t sub_23FD1E9BC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23FD1E9C4);
  return result;
}

uint64_t sub_23FD1E9CC(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x23FD1E9D4);
  return sub_23FD1FFE0();
}

ValueMetadata *_s18TaskDefinitionThinO23CandidateEvaluationThinV10CodingKeysOMa()
{
  return &_s18TaskDefinitionThinO23CandidateEvaluationThinV10CodingKeysON;
}

ValueMetadata *_s18TaskDefinitionThinO28TaskFinalResolutionStateThinO10CodingKeysOMa()
{
  return &_s18TaskDefinitionThinO28TaskFinalResolutionStateThinO10CodingKeysON;
}

ValueMetadata *_s18TaskDefinitionThinO28TaskFinalResolutionStateThinO18CompleteCodingKeysOMa()
{
  return &_s18TaskDefinitionThinO28TaskFinalResolutionStateThinO18CompleteCodingKeysON;
}

ValueMetadata *_s18TaskDefinitionThinO28TaskFinalResolutionStateThinO20IncompleteCodingKeysOMa()
{
  return &_s18TaskDefinitionThinO28TaskFinalResolutionStateThinO20IncompleteCodingKeysON;
}

uint64_t _s24TaskFinalResolutionStateO18CompleteCodingKeysOwet_0(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return sub_23FC05ACC();
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t _s24TaskFinalResolutionStateO18CompleteCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23FD1EAB0 + 4 * byte_23FD7B96D[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23FD1EAD0 + 4 * byte_23FD7B972[v4]))();
}

_BYTE *sub_23FD1EAB0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23FD1EAD0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23FD1EAD8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23FD1EAE0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23FD1EAE8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23FD1EAF0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s18TaskDefinitionThinO15TaskContextThinV10CodingKeysOMa()
{
  return &_s18TaskDefinitionThinO15TaskContextThinV10CodingKeysON;
}

ValueMetadata *_s18TaskDefinitionThinO14TaskActionThinV10CodingKeysOMa()
{
  return &_s18TaskDefinitionThinO14TaskActionThinV10CodingKeysON;
}

uint64_t _s24TaskFinalResolutionStateO10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return sub_23FD2000C(-1);
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return sub_23FD2000C((*a1 | (v4 << 8)) - 2);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return sub_23FD2000C((*a1 | (v4 << 8)) - 2);
    }
    v4 = a1[1];
    if (a1[1])
      return sub_23FD2000C((*a1 | (v4 << 8)) - 2);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return sub_23FD2000C(v8);
}

uint64_t _s24TaskFinalResolutionStateO10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23FD1EBEC + 4 * byte_23FD7B97C[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23FD1EC20 + 4 * byte_23FD7B977[v4]))();
}

uint64_t sub_23FD1EC24(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23FD1EC2CLL);
  return result;
}

uint64_t sub_23FD1EC34(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x23FD1EC3CLL);
  return sub_23FD1FFE0();
}

ValueMetadata *_s18TaskDefinitionThinO15TaskOutcomeThinV10CodingKeysOMa()
{
  return &_s18TaskDefinitionThinO15TaskOutcomeThinV10CodingKeysON;
}

uint64_t _s18TaskDefinitionThinO18TaskEvaluationThinV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_23FD1ECA8 + 4 * byte_23FD7B986[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_23FD1ECDC + 4 * byte_23FD7B981[v4]))();
}

uint64_t sub_23FD1ECDC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23FD1ECE4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23FD1ECECLL);
  return result;
}

uint64_t sub_23FD1ECF8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23FD1ED00);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_23FD1ED04(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23FD1ED0C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s18TaskDefinitionThinO18TaskEvaluationThinV10CodingKeysOMa()
{
  return &_s18TaskDefinitionThinO18TaskEvaluationThinV10CodingKeysON;
}

unint64_t sub_23FD1ED2C()
{
  unint64_t result;

  result = qword_256F640D0;
  if (!qword_256F640D0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7F058, &_s18TaskDefinitionThinO18TaskEvaluationThinV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F640D0);
  }
  return result;
}

unint64_t sub_23FD1ED6C()
{
  unint64_t result;

  result = qword_256F640D8;
  if (!qword_256F640D8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7F110, &_s18TaskDefinitionThinO15TaskOutcomeThinV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F640D8);
  }
  return result;
}

unint64_t sub_23FD1EDAC()
{
  unint64_t result;

  result = qword_256F640E0;
  if (!qword_256F640E0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7F1C8, &_s18TaskDefinitionThinO14TaskActionThinV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F640E0);
  }
  return result;
}

unint64_t sub_23FD1EDEC()
{
  unint64_t result;

  result = qword_256F640E8;
  if (!qword_256F640E8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7F280, &_s18TaskDefinitionThinO15TaskContextThinV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F640E8);
  }
  return result;
}

unint64_t sub_23FD1EE2C()
{
  unint64_t result;

  result = qword_256F640F0;
  if (!qword_256F640F0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7F388, &_s18TaskDefinitionThinO28TaskFinalResolutionStateThinO18CompleteCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F640F0);
  }
  return result;
}

unint64_t sub_23FD1EE6C()
{
  unint64_t result;

  result = qword_256F640F8;
  if (!qword_256F640F8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7F440, &_s18TaskDefinitionThinO28TaskFinalResolutionStateThinO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F640F8);
  }
  return result;
}

unint64_t sub_23FD1EEAC()
{
  unint64_t result;

  result = qword_256F64100;
  if (!qword_256F64100)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7F4F8, &_s18TaskDefinitionThinO23CandidateEvaluationThinV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64100);
  }
  return result;
}

unint64_t sub_23FD1EEEC()
{
  unint64_t result;

  result = qword_256F64108;
  if (!qword_256F64108)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7F650, &_s18TaskDefinitionThinO14TaskStatusThinO25InferredFailureCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64108);
  }
  return result;
}

unint64_t sub_23FD1EF2C()
{
  unint64_t result;

  result = qword_256F64110;
  if (!qword_256F64110)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7F7A8, &_s18TaskDefinitionThinO14TaskStatusThinO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64110);
  }
  return result;
}

unint64_t sub_23FD1EF6C()
{
  unint64_t result;

  result = qword_256F64118;
  if (!qword_256F64118)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7F8B0, &_s18TaskDefinitionThinO21TaskFailureReasonThinO26ExecutionFailureCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64118);
  }
  return result;
}

unint64_t sub_23FD1EFAC()
{
  unint64_t result;

  result = qword_256F64120;
  if (!qword_256F64120)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7F9B8, &_s18TaskDefinitionThinO21TaskFailureReasonThinO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64120);
  }
  return result;
}

unint64_t sub_23FD1EFEC()
{
  unint64_t result;

  result = qword_256F64128;
  if (!qword_256F64128)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7F8D8, &_s18TaskDefinitionThinO21TaskFailureReasonThinO17UnknownCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64128);
  }
  return result;
}

unint64_t sub_23FD1F02C()
{
  unint64_t result;

  result = qword_256F64130;
  if (!qword_256F64130)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7F900, &_s18TaskDefinitionThinO21TaskFailureReasonThinO17UnknownCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64130);
  }
  return result;
}

unint64_t sub_23FD1F06C()
{
  unint64_t result;

  result = qword_256F64138;
  if (!qword_256F64138)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7F820, &_s18TaskDefinitionThinO21TaskFailureReasonThinO26ExecutionFailureCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64138);
  }
  return result;
}

unint64_t sub_23FD1F0AC()
{
  unint64_t result;

  result = qword_256F64140;
  if (!qword_256F64140)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7F848, &_s18TaskDefinitionThinO21TaskFailureReasonThinO26ExecutionFailureCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64140);
  }
  return result;
}

unint64_t sub_23FD1F0EC()
{
  unint64_t result;

  result = qword_256F64148;
  if (!qword_256F64148)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7F7D0, &_s18TaskDefinitionThinO21TaskFailureReasonThinO25CriticalFailureCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64148);
  }
  return result;
}

unint64_t sub_23FD1F12C()
{
  unint64_t result;

  result = qword_256F64150;
  if (!qword_256F64150)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7F7F8, &_s18TaskDefinitionThinO21TaskFailureReasonThinO25CriticalFailureCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64150);
  }
  return result;
}

unint64_t sub_23FD1F16C()
{
  unint64_t result;

  result = qword_256F64158;
  if (!qword_256F64158)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7F928, &_s18TaskDefinitionThinO21TaskFailureReasonThinO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64158);
  }
  return result;
}

unint64_t sub_23FD1F1AC()
{
  unint64_t result;

  result = qword_256F64160;
  if (!qword_256F64160)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7F950, &_s18TaskDefinitionThinO21TaskFailureReasonThinO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64160);
  }
  return result;
}

unint64_t sub_23FD1F1EC()
{
  unint64_t result;

  result = qword_256F64168;
  if (!qword_256F64168)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7F6C8, &_s18TaskDefinitionThinO14TaskStatusThinO17UnknownCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64168);
  }
  return result;
}

unint64_t sub_23FD1F22C()
{
  unint64_t result;

  result = qword_256F64170;
  if (!qword_256F64170)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7F6F0, &_s18TaskDefinitionThinO14TaskStatusThinO17UnknownCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64170);
  }
  return result;
}

unint64_t sub_23FD1F26C()
{
  unint64_t result;

  result = qword_256F64178;
  if (!qword_256F64178)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7F678, &_s18TaskDefinitionThinO14TaskStatusThinO25InferredSuccessCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64178);
  }
  return result;
}

unint64_t sub_23FD1F2AC()
{
  unint64_t result;

  result = qword_256F64180;
  if (!qword_256F64180)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7F6A0, &_s18TaskDefinitionThinO14TaskStatusThinO25InferredSuccessCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64180);
  }
  return result;
}

unint64_t sub_23FD1F2EC()
{
  unint64_t result;

  result = qword_256F64188;
  if (!qword_256F64188)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7F5C0, &_s18TaskDefinitionThinO14TaskStatusThinO25InferredFailureCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64188);
  }
  return result;
}

unint64_t sub_23FD1F32C()
{
  unint64_t result;

  result = qword_256F64190;
  if (!qword_256F64190)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7F5E8, &_s18TaskDefinitionThinO14TaskStatusThinO25InferredFailureCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64190);
  }
  return result;
}

unint64_t sub_23FD1F36C()
{
  unint64_t result;

  result = qword_256F64198;
  if (!qword_256F64198)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7F570, &_s18TaskDefinitionThinO14TaskStatusThinO17AbandonCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64198);
  }
  return result;
}

unint64_t sub_23FD1F3AC()
{
  unint64_t result;

  result = qword_256F641A0;
  if (!qword_256F641A0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7F598, &_s18TaskDefinitionThinO14TaskStatusThinO17AbandonCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F641A0);
  }
  return result;
}

unint64_t sub_23FD1F3EC()
{
  unint64_t result;

  result = qword_256F641A8;
  if (!qword_256F641A8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7F520, &_s18TaskDefinitionThinO14TaskStatusThinO16CancelCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F641A8);
  }
  return result;
}

unint64_t sub_23FD1F42C()
{
  unint64_t result;

  result = qword_256F641B0;
  if (!qword_256F641B0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7F548, &_s18TaskDefinitionThinO14TaskStatusThinO16CancelCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F641B0);
  }
  return result;
}

unint64_t sub_23FD1F46C()
{
  unint64_t result;

  result = qword_256F641B8;
  if (!qword_256F641B8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7F718, &_s18TaskDefinitionThinO14TaskStatusThinO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F641B8);
  }
  return result;
}

unint64_t sub_23FD1F4AC()
{
  unint64_t result;

  result = qword_256F641C0;
  if (!qword_256F641C0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7F740, &_s18TaskDefinitionThinO14TaskStatusThinO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F641C0);
  }
  return result;
}

unint64_t sub_23FD1F4EC()
{
  unint64_t result;

  result = qword_256F641C8;
  if (!qword_256F641C8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7F468, &_s18TaskDefinitionThinO23CandidateEvaluationThinV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F641C8);
  }
  return result;
}

unint64_t sub_23FD1F52C()
{
  unint64_t result;

  result = qword_256F641D0;
  if (!qword_256F641D0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7F490, &_s18TaskDefinitionThinO23CandidateEvaluationThinV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F641D0);
  }
  return result;
}

unint64_t sub_23FD1F56C()
{
  unint64_t result;

  result = qword_256F641D8;
  if (!qword_256F641D8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7F2F8, &_s18TaskDefinitionThinO28TaskFinalResolutionStateThinO18CompleteCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F641D8);
  }
  return result;
}

unint64_t sub_23FD1F5AC()
{
  unint64_t result;

  result = qword_256F641E0;
  if (!qword_256F641E0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7F320, &_s18TaskDefinitionThinO28TaskFinalResolutionStateThinO18CompleteCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F641E0);
  }
  return result;
}

unint64_t sub_23FD1F5EC()
{
  unint64_t result;

  result = qword_256F641E8;
  if (!qword_256F641E8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7F2A8, &_s18TaskDefinitionThinO28TaskFinalResolutionStateThinO20IncompleteCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F641E8);
  }
  return result;
}

unint64_t sub_23FD1F62C()
{
  unint64_t result;

  result = qword_256F641F0;
  if (!qword_256F641F0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7F2D0, &_s18TaskDefinitionThinO28TaskFinalResolutionStateThinO20IncompleteCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F641F0);
  }
  return result;
}

unint64_t sub_23FD1F66C()
{
  unint64_t result;

  result = qword_256F641F8;
  if (!qword_256F641F8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7F3B0, &_s18TaskDefinitionThinO28TaskFinalResolutionStateThinO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F641F8);
  }
  return result;
}

unint64_t sub_23FD1F6AC()
{
  unint64_t result;

  result = qword_256F64200;
  if (!qword_256F64200)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7F3D8, &_s18TaskDefinitionThinO28TaskFinalResolutionStateThinO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64200);
  }
  return result;
}

unint64_t sub_23FD1F6EC()
{
  unint64_t result;

  result = qword_256F64208;
  if (!qword_256F64208)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7F1F0, &_s18TaskDefinitionThinO15TaskContextThinV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64208);
  }
  return result;
}

unint64_t sub_23FD1F72C()
{
  unint64_t result;

  result = qword_256F64210;
  if (!qword_256F64210)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7F218, &_s18TaskDefinitionThinO15TaskContextThinV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64210);
  }
  return result;
}

unint64_t sub_23FD1F76C()
{
  unint64_t result;

  result = qword_256F64218;
  if (!qword_256F64218)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7F138, &_s18TaskDefinitionThinO14TaskActionThinV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64218);
  }
  return result;
}

unint64_t sub_23FD1F7AC()
{
  unint64_t result;

  result = qword_256F64220;
  if (!qword_256F64220)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7F160, &_s18TaskDefinitionThinO14TaskActionThinV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64220);
  }
  return result;
}

unint64_t sub_23FD1F7EC()
{
  unint64_t result;

  result = qword_256F64228;
  if (!qword_256F64228)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7F080, &_s18TaskDefinitionThinO15TaskOutcomeThinV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64228);
  }
  return result;
}

unint64_t sub_23FD1F82C()
{
  unint64_t result;

  result = qword_256F64230;
  if (!qword_256F64230)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7F0A8, &_s18TaskDefinitionThinO15TaskOutcomeThinV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64230);
  }
  return result;
}

unint64_t sub_23FD1F86C()
{
  unint64_t result;

  result = qword_256F64238;
  if (!qword_256F64238)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7EFC8, &_s18TaskDefinitionThinO18TaskEvaluationThinV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64238);
  }
  return result;
}

unint64_t sub_23FD1F8AC()
{
  unint64_t result;

  result = qword_256F64240;
  if (!qword_256F64240)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7EFF0, &_s18TaskDefinitionThinO18TaskEvaluationThinV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64240);
  }
  return result;
}

uint64_t sub_23FD1F934()
{
  return sub_23FD752F0();
}

uint64_t sub_23FD1F944()
{
  return sub_23FD75290();
}

void sub_23FD1F95C(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 112) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_23FD1F978()
{
  return sub_23FD75290();
}

_QWORD *sub_23FD1F984()
{
  _QWORD *v0;

  return sub_23FBFDE40(v0, v0[3]);
}

uint64_t sub_23FD1F9A4()
{
  return sub_23FD7532C();
}

uint64_t sub_23FD1F9C4()
{
  return sub_23FD75380();
}

uint64_t sub_23FD1F9D0()
{
  return sub_23FD75290();
}

uint64_t sub_23FD1F9E4()
{
  return sub_23FD7532C();
}

uint64_t sub_23FD1F9FC()
{
  return sub_23FD752F0();
}

uint64_t sub_23FD1FA08()
{
  return sub_23FD754C4();
}

void sub_23FD1FA18(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 176) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_23FD1FA34()
{
  return sub_23FD7532C();
}

_QWORD *sub_23FD1FA40()
{
  uint64_t v0;
  _QWORD *v1;

  return sub_23FBFDE40(v1, v0);
}

void sub_23FD1FA5C(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 144) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_23FD1FA78(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 104) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_23FD1FA94(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 152) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_23FD1FAB0(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 128) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_23FD1FACC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, uint64_t))(a1 + 8))(*(_QWORD *)(v2 - 144), v1);
}

uint64_t sub_23FD1FADC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 240) + 8))(v0, v1);
}

uint64_t sub_23FD1FAF0()
{
  return sub_23FD75290();
}

uint64_t sub_23FD1FB08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

uint64_t sub_23FD1FB14()
{
  return 0;
}

void sub_23FD1FB30(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 160) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_23FD1FB4C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FD1FB58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 128) + 8))(v1, v0);
}

uint64_t sub_23FD1FB6C()
{
  return sub_23FD752F0();
}

uint64_t sub_23FD1FB80@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(a1 + 8))(v1, *(_QWORD *)(v2 - 104));
}

uint64_t sub_23FD1FB90()
{
  return sub_23FD752D8();
}

uint64_t sub_23FD1FB9C()
{
  uint64_t v0;
  uint64_t v1;

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v0, 4, v1);
}

uint64_t sub_23FD1FBAC()
{
  return sub_23FD752D8();
}

uint64_t sub_23FD1FBC0()
{
  return sub_23FD75134();
}

uint64_t sub_23FD1FBC8()
{
  return 1;
}

uint64_t sub_23FD1FBE8@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 160) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t sub_23FD1FC08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(v3, a2, v2);
}

uint64_t sub_23FD1FC20()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 176) + 8))(*(_QWORD *)(v0 - 104), *(_QWORD *)(v0 - 96));
}

uint64_t sub_23FD1FC30()
{
  return 1;
}

uint64_t sub_23FD1FC40()
{
  return sub_23FD752A8();
}

uint64_t sub_23FD1FC68()
{
  return sub_23FD752F0();
}

void sub_23FD1FC94(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 184) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_23FD1FCB0()
{
  return sub_23FD7532C();
}

uint64_t sub_23FD1FCB8()
{
  return sub_23FD752D8();
}

uint64_t sub_23FD1FCDC()
{
  return sub_23FD754B8();
}

uint64_t sub_23FD1FCF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(v3, a2, v2);
}

uint64_t sub_23FD1FD04()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FD1FD10(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t sub_23FD1FD18()
{
  return sub_23FD752D8();
}

uint64_t sub_23FD1FD20()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 272) = v0;
  return 1;
}

uint64_t sub_23FD1FD48()
{
  return sub_23FD752D8();
}

uint64_t sub_23FD1FD50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 264) = v0;
  *(_QWORD *)(v4 - 256) = v2;
  *(_QWORD *)(v4 - 248) = v3;
  *(_QWORD *)(v4 - 96) = v1;
  return sub_23FD752E4();
}

uint64_t sub_23FD1FD70()
{
  return sub_23FD752D8();
}

uint64_t sub_23FD1FD78()
{
  return 0;
}

uint64_t sub_23FD1FD90()
{
  return sub_23FD752FC();
}

uint64_t sub_23FD1FDB0@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 160) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return type metadata accessor for FeedbackLearning.CandidateParameter(0);
}

uint64_t sub_23FD1FDD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 192) = v2;
  *(_QWORD *)(v4 - 184) = v3;
  *(_QWORD *)(v4 - 208) = v0;
  *(_QWORD *)(v4 - 88) = v1;
  return sub_23FD752E4();
}

void sub_23FD1FE00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 88) = v1;
  *(_QWORD *)(v2 - 104) = v0;
}

uint64_t sub_23FD1FE10()
{
  return swift_willThrow();
}

uint64_t sub_23FD1FE18()
{
  return sub_23FD75290();
}

uint64_t sub_23FD1FE34()
{
  _QWORD *v0;
  uint64_t v1;

  *v0 = v1;
  return sub_23FD7529C();
}

uint64_t sub_23FD1FE50()
{
  uint64_t v0;
  _QWORD *v1;

  *v1 = v0;
  return sub_23FD7529C();
}

uint64_t sub_23FD1FE6C()
{
  return sub_23FD75290();
}

void sub_23FD1FE7C()
{
  sub_23FCBA0CC();
}

uint64_t sub_23FD1FE84()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FD1FE90()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FD1FE9C(uint64_t a1)
{
  uint64_t v1;

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(*(_QWORD *)(v1 - 264), 0, 4, a1);
}

uint64_t sub_23FD1FEB8()
{
  return sub_23FD75290();
}

uint64_t sub_23FD1FED4()
{
  return type metadata accessor for FeedbackLearning.CandidateParameter(0);
}

uint64_t sub_23FD1FEF0()
{
  return sub_23FD754B8();
}

uint64_t sub_23FD1FF08()
{
  return sub_23FD71648();
}

uint64_t sub_23FD1FF30()
{
  return swift_unknownObjectRelease();
}

unint64_t sub_23FD1FF38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v2 - 66) = *(_BYTE *)(v1 + *(int *)(a1 + 20));
  *(_BYTE *)(v2 - 67) = 1;
  return sub_23FD11F20();
}

uint64_t sub_23FD1FF50(uint64_t a1)
{
  uint64_t v1;

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(*(_QWORD *)(v1 - 168), 1, 1, a1);
}

uint64_t sub_23FD1FF68()
{
  return sub_23FD754B8();
}

uint64_t sub_23FD1FF80()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_23FD1FF88(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(v3, a2, v2);
}

uint64_t sub_23FD1FFB0()
{
  return sub_23FD754B8();
}

uint64_t sub_23FD1FFC8()
{
  return sub_23FD75290();
}

uint64_t sub_23FD1FFD0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23FD1FFD8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_23FD1FFE0@<X0>(_BYTE *result@<X0>, char a2@<W8>)
{
  *result = a2;
  return result;
}

uint64_t sub_23FD1FFE8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23FD1FFF0()
{
  return type metadata accessor for FeedbackLearning.FlowActionEvent(0);
}

uint64_t sub_23FD1FFF8()
{
  return sub_23FD75290();
}

uint64_t sub_23FD2000C@<X0>(int a1@<W8>)
{
  return (a1 + 1);
}

uint64_t sub_23FD20014()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FD20028()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_23FD20034()
{
  return sub_23FD754C4();
}

uint64_t sub_23FD20048()
{
  return sub_23FD754C4();
}

uint64_t sub_23FD2005C()
{
  return sub_23FD75458();
}

uint64_t sub_23FD20068(uint64_t a1)
{
  uint64_t v1;

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v1, 0, 1, a1);
}

uint64_t sub_23FD2007C()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 152) + 8))(v0, *(_QWORD *)(v1 - 128));
}

uint64_t sub_23FD20090()
{
  return sub_23FD754C4();
}

uint64_t sub_23FD200A4()
{
  return sub_23FD754B8();
}

void sub_23FD200B8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_23FC0F380(a1, v3, a3);
}

uint64_t sub_23FD200C0()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_23FD200CC()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v1 - 96), *(_QWORD *)(v1 - 104));
}

void sub_23FD200D8()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;
  uint64_t v2;

  sub_23FC0F380(v1, *(_QWORD *)(v2 - 184), v0);
}

void sub_23FD20108(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 224) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_23FD20124()
{
  return sub_23FD750E0();
}

uint64_t sub_23FD20138()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 1;
  return 0;
}

uint64_t sub_23FD20154()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 176) = v2;
  *(_QWORD *)(v3 - 168) = v1;
  *(_QWORD *)(v3 - 88) = v0;
  return sub_23FD752E4();
}

_QWORD *sub_23FD20184(_QWORD *a1)
{
  uint64_t v1;

  return sub_23FBFDE40(a1, v1);
}

void sub_23FD2019C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  sub_23FC0EE04(v1, v2, v0);
}

uint64_t sub_23FD201B8()
{
  return _s18TaskDefinitionThinO15TaskOutcomeThinVMa(0);
}

uint64_t sub_23FD201C0()
{
  return 0;
}

void sub_23FD201CC(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23FC0EDD8(a1, a2, v2);
}

uint64_t sub_23FD201E4()
{
  return sub_23FD75314();
}

_QWORD *sub_23FD2020C(_QWORD *a1)
{
  uint64_t v1;

  return sub_23FBFDE40(a1, v1);
}

uint64_t sub_23FD2023C()
{
  return sub_23FD73340();
}

uint64_t sub_23FD2024C()
{
  return sub_23FD71414();
}

uint64_t sub_23FD2025C()
{
  uint64_t v0;

  return v0;
}

void sub_23FD20268(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  sub_23FC0F380(v3, *(_QWORD *)(v4 - 256), a3);
}

uint64_t sub_23FD20290()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 136) + 8))(v0, *(_QWORD *)(v1 - 128));
}

void sub_23FD202C8()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 1;
}

uint64_t sub_23FD202E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unsigned int v3;

  v3 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v2, v1, a1);
  if (v3 >= 5)
    return v3 - 4;
  else
    return 0;
}

uint64_t sub_23FD20308(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unsigned int v3;

  v3 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v2, v1, a1);
  if (v3 >= 2)
    return v3 - 1;
  else
    return 0;
}

uint64_t sub_23FD20330(uint64_t a1)
{
  uint64_t v1;

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v1, 4, a1);
}

void sub_23FD20340(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  sub_23FC0F380(v3, v4, a3);
}

uint64_t sub_23FD20350@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  *v1 = a1;
  return sub_23FD7529C();
}

void sub_23FD20360()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 88) = v0;
}

uint64_t sub_23FD20370()
{
  return sub_23FD754B8();
}

uint64_t sub_23FD20378(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 136) = result;
  return result;
}

uint64_t sub_23FD20384@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 112) = a1;
  return 0;
}

uint64_t sub_23FD20398(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  return a4(319);
}

void sub_23FD203A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_23FC0F380(v3, a2, a3);
}

unint64_t sub_23FD203A8()
{
  return 0xD000000000000010;
}

void sub_23FD203C8()
{
  sub_23FCBA0CC();
}

unint64_t sub_23FD203D0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 5;
  return sub_23FD11584();
}

uint64_t sub_23FD203DC()
{
  return sub_23FD75458();
}

uint64_t sub_23FD203E4()
{
  return type metadata accessor for FeedbackLearning.TaskAction(0);
}

unint64_t sub_23FD203EC()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 4;
  return sub_23FD1E4C8();
}

unint64_t sub_23FD203F8()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 4;
  return sub_23FD11CF0();
}

unint64_t sub_23FD20404()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 4;
  return sub_23FD115C0();
}

unint64_t sub_23FD20410()
{
  return 0xEF6572756C696146;
}

uint64_t sub_23FD20424@<X0>(int a1@<W8>)
{
  return ((a1 + 2147483646) & 0x7FFFFFFFu) + 1;
}

void sub_23FD2046C()
{
  uint64_t *v0;
  uint64_t v1;

  sub_23FBFEF74(v1, v0);
}

void sub_23FD20478()
{
  sub_23FCBA0CC();
}

void sub_23FD20484(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  sub_23FC0F380(v3, *(_QWORD *)(v4 - 96), a3);
}

uint64_t sub_23FD20490@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  unsigned int v2;

  v2 = *(unsigned __int8 *)(v1 + a1);
  if (v2 >= 4)
    return v2 - 3;
  else
    return 0;
}

void sub_23FD204A4()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v0 + *(int *)(*(_QWORD *)(v1 - 120) + 20)) = *(_BYTE *)(v1 - 66);
}

uint64_t sub_23FD204B8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FD204C0()
{
  uint64_t v0;

  return _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(*(_QWORD *)(v0 - 96));
}

void sub_23FD204D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;

  sub_23FC0F3AC(a1, v1, v2);
}

uint64_t sub_23FD204E0(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t sub_23FD204E8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FD204F4()
{
  uint64_t v0;

  return _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v0);
}

uint64_t sub_23FD204FC()
{
  return 0x6465727265666E69;
}

void sub_23FD20510(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  sub_23FC0F380(v3, *(_QWORD *)(v4 - 120), a3);
}

uint64_t sub_23FD2051C()
{
  return swift_storeEnumTagMultiPayload();
}

void sub_23FD20528(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  sub_23FC0F380(v3, *(_QWORD *)(v4 - 136), a3);
}

uint64_t sub_23FD20534()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FD20548()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FD20554()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_23FD2055C()
{
  return sub_23FD71450();
}

void sub_23FD20568()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 67) = 2;
}

unint64_t sub_23FD20574()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 67) = 2;
  return sub_23FD11D68();
}

unint64_t sub_23FD20580()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 67) = 2;
  return sub_23FD1E540();
}

unint64_t sub_23FD2058C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 2;
  return sub_23FD119A8();
}

unint64_t sub_23FD20598()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 2;
  return sub_23FD11BEC();
}

unint64_t sub_23FD205A4()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 2;
  return sub_23FD1E630();
}

unint64_t sub_23FD205B0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 2;
  return sub_23FD05298();
}

unint64_t sub_23FD205BC()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 68) = 2;
  return sub_23FD11638();
}

unint64_t sub_23FD205C8()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 2;
  return sub_23FD11494();
}

unint64_t sub_23FD205D4()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 2;
  return sub_23FD11854();
}

uint64_t sub_23FD205E0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FD205EC()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 256);
}

uint64_t sub_23FD20600()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 256);
}

uint64_t sub_23FD20614()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 256);
}

uint64_t sub_23FD20628()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 256);
}

uint64_t sub_23FD20648()
{
  uint64_t v0;

  return _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(*(_QWORD *)(v0 - 136));
}

unint64_t sub_23FD20650()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 67) = 1;
  return sub_23FD11F5C();
}

unint64_t sub_23FD2065C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 67) = 1;
  return sub_23FD11890();
}

unint64_t sub_23FD20668()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 67) = 1;
  return sub_23FD114D0();
}

unint64_t sub_23FD20674()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 1;
  return sub_23FD11E58();
}

unint64_t sub_23FD20680()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 68) = 1;
  return sub_23FD1E57C();
}

unint64_t sub_23FD2068C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 68) = 1;
  return sub_23FD11DA4();
}

unint64_t sub_23FD20698()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 1;
  return sub_23FD052D4();
}

unint64_t sub_23FD206A4()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 1;
  return sub_23FD11C28();
}

unint64_t sub_23FD206B0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 1;
  return sub_23FD1E66C();
}

unint64_t sub_23FD206BC()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 1;
  return sub_23FD119E4();
}

uint64_t sub_23FD206C8()
{
  return swift_willThrow();
}

uint64_t sub_23FD206D0(uint64_t a1)
{
  uint64_t v1;

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v1, 1, a1);
}

uint64_t sub_23FD20700()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FD20714()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FD20728()
{
  uint64_t v0;

  return v0;
}

void sub_23FD20748()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 160) = v0;
}

uint64_t sub_23FD20770()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v1 - 104), *(_QWORD *)(v1 - 96));
}

unint64_t sub_23FD2077C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 67) = 3;
  return sub_23FD115FC();
}

unint64_t sub_23FD20788()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 3;
  return sub_23FD11818();
}

unint64_t sub_23FD20794()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 3;
  return sub_23FD11458();
}

unint64_t sub_23FD207A0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 3;
  return sub_23FD1E504();
}

unint64_t sub_23FD207AC()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 3;
  return sub_23FD11D2C();
}

void sub_23FD207B8(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  sub_23FD29A90();
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v5, v6);
  v7 = sub_23FC10274();
  _s29ActionStatementSuccessOutcomeVMa(v7);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s29ActionStatementCreatedOutcomeVMa(0);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v12, v13);
  v14 = sub_23FC12F10();
  _s22ActionStatementOutcomeOMa(v14);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v15, v16);
  sub_23FC10388();
  sub_23FCFCBC4(v1, v3, v17);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_23FD29B54(v3, (uint64_t)v11);
      v19 = sub_23FBFF104();
      sub_23FC595C4(a1, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16));
      v20 = (uint64_t)v11;
      v21 = _s29ActionStatementSuccessOutcomeVMa;
    }
    else
    {
      sub_23FC0F380(v3, v1, _s29ActionStatementFailureOutcomeVMa);
      v23 = sub_23FBFF104();
      sub_23FC12EF8(v23);
      v20 = v1;
      v21 = _s29ActionStatementFailureOutcomeVMa;
    }
    sub_23FC5806C(v20, v21);
  }
  else
  {
    sub_23FC0F380(v3, v2, _s29ActionStatementCreatedOutcomeVMa);
    v22 = sub_23FBFF104();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(a1, v2, v22);
  }
}

uint64_t sub_23FD20930(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x76456E6F69746361 && a2 == 0xED00006449746E65)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_23FD75380();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_23FD209D8()
{
  return 0x76456E6F69746361;
}

void sub_23FD209FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23FBFD684(&qword_256F646B8);
  sub_23FC060C4();
  MEMORY[0x24BDAC7A8](v2, v3);
  sub_23FC10388();
  sub_23FD298FC();
  sub_23FD283F0();
  sub_23FD1FA08();
  sub_23FBFF104();
  sub_23FBFEE2C(&qword_256F5D6E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23FD7532C();
  sub_23FC100E4(v0, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23FC0A094();
}

void sub_23FD20AC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_23FCC2A5C();
  v4 = v3;
  v16 = v5;
  v18 = sub_23FBFF104();
  v15 = *(_QWORD *)(v18 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v6, v7);
  sub_23FBFEFE0();
  v17 = v8;
  v9 = sub_23FBFD684(&qword_256F646A8);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11);
  v12 = sub_23FC0A0A8();
  _s29ActionStatementCreatedOutcomeVMa(v12);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v13, v14);
  sub_23FC9308C();
  sub_23FBFDE40(v4, v4[3]);
  sub_23FD283F0();
  sub_23FD754B8();
  if (!v0)
  {
    sub_23FBFEE2C(&qword_256F5D700, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    sub_23FD752D8();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v2, v9);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v1, v17, v18);
    sub_23FC0F380(v1, v16, _s29ActionStatementCreatedOutcomeVMa);
  }
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v4);
  sub_23FC06000();
}

void sub_23FD20C34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  _BYTE v6[16];

  sub_23FBFD684(&qword_256F64698);
  sub_23FC060C4();
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = &v6[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23FD298FC();
  sub_23FD283B4();
  sub_23FD1FA08();
  v6[15] = 0;
  sub_23FBFF104();
  sub_23FBFEE2C(&qword_256F5D6E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23FD1F9A4();
  if (!v0)
  {
    sub_23FD29974();
    sub_23FD29A44();
    sub_23FD716D8();
    sub_23FBFEE2C(&qword_256F646A0, (uint64_t (*)(uint64_t))MEMORY[0x24BE52458], MEMORY[0x24BE52468]);
    sub_23FD2984C();
  }
  sub_23FBFF204((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23FC0A094();
}

void sub_23FD20D34()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_23FCC2A5C();
  sub_23FD29AF8(v2);
  sub_23FD716D8();
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = sub_23FD2986C(v5, v15);
  v7 = sub_23FD29AE4(v6);
  MEMORY[0x24BDAC7A8](v7, v8);
  sub_23FCF2650(v9, v16);
  v10 = sub_23FBFD684(&qword_256F64680);
  v11 = sub_23FD29AD0(v10);
  MEMORY[0x24BDAC7A8](v11, v12);
  sub_23FD29974();
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v13, v14);
  sub_23FBFDE40(v1, v1[3]);
  sub_23FD283B4();
  sub_23FD298E0();
  if (v0)
  {
    _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v1);
  }
  else
  {
    sub_23FD29A00();
    sub_23FBFEE2C(&qword_256F5D700, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    sub_23FD298A8();
    sub_23FD2993C();
    sub_23FBFEE2C(&qword_256F64690, (uint64_t (*)(uint64_t))MEMORY[0x24BE52458], MEMORY[0x24BE52470]);
    sub_23FD29820();
    sub_23FC7E224();
    sub_23FD2988C();
    sub_23FD29A5C();
    sub_23FD29A98();
  }
  sub_23FC06000();
}

uint64_t sub_23FD20EBC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;

  if ((sub_23FD71450() & 1) == 0)
    return 0;
  v7 = *(int *)(a3(0) + 20);
  return a4(a1 + v7, a2 + v7);
}

uint64_t sub_23FD20F2C(uint64_t a1, uint64_t a2)
{
  BOOL v2;

  v2 = a1 == 0x76456E6F69746361 && a2 == 0xED00006449746E65;
  if (v2 || (sub_23FD1F9C4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746C75736572 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    sub_23FD1F9C4();
    sub_23FD1FB4C();
    if ((a1 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23FD2101C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x746C75736572;
  else
    return 0x76456E6F69746361;
}

void sub_23FD2105C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  _BYTE v6[16];

  sub_23FBFD684(&qword_256F646D8);
  sub_23FC060C4();
  MEMORY[0x24BDAC7A8](v2, v3);
  v5 = &v6[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23FD298FC();
  sub_23FD2842C();
  sub_23FD1FA08();
  v6[15] = 0;
  sub_23FBFF104();
  sub_23FBFEE2C(&qword_256F5D6E8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23FD1F9A4();
  if (!v0)
  {
    sub_23FD29A90();
    sub_23FD29A44();
    sub_23FD71684();
    sub_23FBFEE2C(&qword_256F646E0, (uint64_t (*)(uint64_t))MEMORY[0x24BE52340], MEMORY[0x24BE52350]);
    sub_23FD2984C();
  }
  sub_23FBFF204((uint64_t)v5, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23FC0A094();
}

void sub_23FD2115C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_23FCC2A5C();
  sub_23FD29AF8(v2);
  sub_23FD71684();
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v3, v4);
  v6 = sub_23FD2986C(v5, v15);
  v7 = sub_23FD29AE4(v6);
  MEMORY[0x24BDAC7A8](v7, v8);
  sub_23FCF2650(v9, v16);
  v10 = sub_23FBFD684(&qword_256F646C0);
  v11 = sub_23FD29AD0(v10);
  MEMORY[0x24BDAC7A8](v11, v12);
  sub_23FD29A90();
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v13, v14);
  sub_23FBFDE40(v1, v1[3]);
  sub_23FD2842C();
  sub_23FD298E0();
  if (v0)
  {
    _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v1);
  }
  else
  {
    sub_23FD29A00();
    sub_23FBFEE2C(&qword_256F5D700, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    sub_23FD298A8();
    sub_23FD2993C();
    sub_23FBFEE2C(&qword_256F646D0, (uint64_t (*)(uint64_t))MEMORY[0x24BE52340], MEMORY[0x24BE52358]);
    sub_23FD29820();
    sub_23FC7E224();
    sub_23FD2988C();
    sub_23FD29A5C();
    sub_23FD29A98();
  }
  sub_23FC06000();
}

void sub_23FD212E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[2];
  uint64_t v38;
  uint64_t v39;

  v39 = a2;
  v37[0] = sub_23FD29A90();
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v7, v8);
  sub_23FBFEFE0();
  v38 = v9;
  v37[1] = sub_23FD29BCC();
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s29ActionStatementCreatedOutcomeVMa(0);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v14, v15);
  v16 = sub_23FC0A0A8();
  _s22ActionStatementOutcomeOMa(v16);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v17, v18);
  sub_23FC159C8();
  MEMORY[0x24BDAC7A8](v19, v20);
  sub_23FD29B94();
  MEMORY[0x24BDAC7A8](v21, v22);
  v24 = (char *)v37 - v23;
  sub_23FBFD684(qword_256F64260);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v25, v26);
  sub_23FCF2498();
  v28 = v2 + v27;
  sub_23FCFCBC4(a1, v2, _s22ActionStatementOutcomeOMa);
  sub_23FCFCBC4(v39, v28, _s22ActionStatementOutcomeOMa);
  v29 = sub_23FD297F0();
  if ((_DWORD)v29)
  {
    if ((_DWORD)v29 == 1)
    {
      sub_23FCFCBC4(v2, v4, _s22ActionStatementOutcomeOMa);
      if (sub_23FD297F0() == 1)
      {
        sub_23FC0F380(v28, (uint64_t)v13, _s29ActionStatementSuccessOutcomeVMa);
        if ((sub_23FD71450() & 1) != 0)
          sub_23FD716CC();
        sub_23FD297F8((uint64_t)v13);
        v31 = v4;
LABEL_18:
        sub_23FD297F8(v31);
        sub_23FC767BC(v36, _s22ActionStatementOutcomeOMa);
        goto LABEL_19;
      }
      v32 = _s29ActionStatementSuccessOutcomeVMa;
      v33 = v4;
    }
    else
    {
      sub_23FD29B48(v29, v30, _s22ActionStatementOutcomeOMa);
      if (sub_23FD297F0() == 2)
      {
        v34 = v38;
        sub_23FC0F380(v28, v38, _s29ActionStatementFailureOutcomeVMa);
        if ((sub_23FD71450() & 1) != 0)
          sub_23FD71660();
        sub_23FD297F8(v34);
        v31 = v3;
        goto LABEL_18;
      }
      v32 = _s29ActionStatementFailureOutcomeVMa;
      v33 = v3;
    }
  }
  else
  {
    sub_23FCFCBC4(v2, (uint64_t)v24, _s22ActionStatementOutcomeOMa);
    if (!sub_23FD297F0())
    {
      sub_23FC0F380(v28, v5, _s29ActionStatementCreatedOutcomeVMa);
      sub_23FD71450();
      sub_23FC5806C(v5, _s29ActionStatementCreatedOutcomeVMa);
      sub_23FC5806C((uint64_t)v24, _s29ActionStatementCreatedOutcomeVMa);
      sub_23FC767BC(v35, _s22ActionStatementOutcomeOMa);
      goto LABEL_19;
    }
    v32 = _s29ActionStatementCreatedOutcomeVMa;
    v33 = (uint64_t)v24;
  }
  sub_23FC5806C(v33, v32);
  sub_23FC584B0(v2, qword_256F64260);
LABEL_19:
  sub_23FC060D4();
}

uint64_t sub_23FD2160C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x64657461657263 && a2 == 0xE700000000000000;
  if (v2 || (sub_23FD75380() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x73736563637573 && a2 == 0xE700000000000000;
    if (v6 || (sub_23FD75380() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6572756C696166 && a2 == 0xE700000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_23FD75380();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_23FD2175C(char a1)
{
  return *(_QWORD *)&aCreated_0[8 * a1];
}

void sub_23FD21774()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int EnumCaseMultiPayload;
  uint64_t (*v34)(uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43[2];
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  sub_23FCC2A5C();
  v56 = v1;
  v53 = v0;
  v5 = v4;
  v6 = sub_23FBFD684(&qword_256F64728);
  v51 = *(_QWORD *)(v6 - 8);
  v52 = v6;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v7, v8);
  v50 = (char *)v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = sub_23FD29A90();
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v10, v11);
  sub_23FD1FA5C(v12, v43[0]);
  v13 = sub_23FBFD684(&qword_256F64730);
  v46 = *(_QWORD *)(v13 - 8);
  v47 = v13;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v14, v15);
  sub_23FD1FA18(v16, v43[0]);
  v45 = sub_23FD29974();
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v17, v18);
  v20 = (char *)v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_23FBFD684(&qword_256F64738);
  v43[1] = *(_QWORD *)(v21 - 8);
  v44 = v21;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v22, v23);
  sub_23FC10388();
  v43[0] = _s29ActionStatementCreatedOutcomeVMa(0);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v24, v25);
  sub_23FC8FD1C();
  _s22ActionStatementOutcomeOMa(0);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v26, v27);
  v29 = (char *)v43 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_23FBFD684(&qword_256F64740);
  v54 = *(_QWORD *)(v30 - 8);
  v55 = v30;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v31, v32);
  sub_23FC0603C();
  sub_23FBFDE40(v5, v5[3]);
  sub_23FD28468();
  sub_23FD754C4();
  sub_23FCFCBC4(v53, (uint64_t)v29, _s22ActionStatementOutcomeOMa);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v34 = _s29ActionStatementSuccessOutcomeVMa;
      sub_23FD29918((uint64_t)v29, (uint64_t)v20);
      sub_23FD29B24();
      sub_23FCF2448();
      sub_23FD299B8(&qword_256F64670, v35, (uint64_t)&unk_23FD803BC);
      sub_23FD1FCB0();
      sub_23FD297C0(v46);
      v36 = (uint64_t)v20;
    }
    else
    {
      v34 = _s29ActionStatementFailureOutcomeVMa;
      v41 = v49;
      sub_23FD29918((uint64_t)v29, v49);
      sub_23FD29B7C();
      sub_23FCF2448();
      sub_23FD299B8(&qword_256F64640, v42, (uint64_t)&unk_23FD80294);
      sub_23FD29AC4();
      sub_23FD1FCB0();
      sub_23FD297C0(v51);
      v36 = v41;
    }
  }
  else
  {
    v34 = _s29ActionStatementCreatedOutcomeVMa;
    sub_23FD29918((uint64_t)v29, v3);
    sub_23FD2851C();
    sub_23FCF2448();
    sub_23FD299B8(&qword_256F64658, v37, (uint64_t)&unk_23FD80328);
    v38 = v44;
    sub_23FD1FCB0();
    v39 = sub_23FC5D9C4();
    v40(v39, v38);
    v36 = v3;
  }
  sub_23FC5806C(v36, v34);
  sub_23FC100E4(v2, *(uint64_t (**)(uint64_t, uint64_t))(v54 + 8));
  sub_23FC06000();
}

void sub_23FD21AE8()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)(uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;

  sub_23FCC2A5C();
  v80 = v0;
  v2 = v1;
  v74 = v3;
  v73 = sub_23FBFD684(&qword_256F646E8);
  v70 = *(_QWORD *)(v73 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v4, v5);
  sub_23FBFEFE0();
  v76 = v6;
  v72 = sub_23FBFD684(&qword_256F646F0);
  v69 = *(_QWORD *)(v72 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v7, v8);
  sub_23FC93168(v9, v61);
  v71 = sub_23FBFD684(&qword_256F646F8);
  v68 = *(_QWORD *)(v71 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v10, v11);
  sub_23FD1FA5C(v12, v61);
  v13 = sub_23FBFD684(&qword_256F64700);
  v77 = *(_QWORD *)(v13 - 8);
  v78 = v13;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v14, v15);
  v17 = (char *)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = _s22ActionStatementOutcomeOMa(0);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v19, v20);
  sub_23FC100D4();
  v23 = v21 - v22;
  v26 = MEMORY[0x24BDAC7A8](v24, v25);
  v28 = (char *)&v61 - v27;
  v30 = MEMORY[0x24BDAC7A8](v26, v29);
  v32 = (char *)&v61 - v31;
  MEMORY[0x24BDAC7A8](v30, v33);
  v35 = (char *)&v61 - v34;
  v79 = v2;
  sub_23FD29A28();
  sub_23FD28468();
  v36 = v80;
  sub_23FD754B8();
  if (v36)
    goto LABEL_2;
  v65 = v28;
  v66 = v23;
  v63 = v32;
  v64 = v35;
  v67 = v18;
  v38 = v78;
  v80 = v17;
  v39 = sub_23FD752E4();
  v40 = *(_QWORD *)(v39 + 16);
  if (!v40)
  {
    v37 = v79;
LABEL_10:
    v47 = v77;
    v48 = v67;
    sub_23FD1FBC0();
    sub_23FC5A704();
    v50 = v49;
    sub_23FBFD684(&qword_256F5D6C0);
    *v50 = v48;
    v51 = v80;
    sub_23FD7529C();
    v52 = sub_23FCF2778();
    sub_23FD1FCF0(v52, *MEMORY[0x24BEE26D0]);
    swift_willThrow();
    sub_23FD29844();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v51, v38);
    goto LABEL_11;
  }
  v62 = 0;
  v41 = v38;
  v42 = *(unsigned __int8 *)(v39 + 32);
  sub_23FC05ED0(1, v40, v39, v39 + 32, 0, (2 * v40) | 1);
  v44 = v43;
  v46 = v45;
  swift_bridgeObjectRelease();
  if (v44 != v46 >> 1)
  {
    v37 = v79;
    v38 = v41;
    goto LABEL_10;
  }
  if (v42)
  {
    if (v42 == 1)
    {
      sub_23FD29B24();
      sub_23FD298C4();
      sub_23FD29974();
      sub_23FBFEE2C(&qword_256F64668, _s29ActionStatementSuccessOutcomeVMa, (uint64_t)&unk_23FD803E4);
      sub_23FD299E0();
      v37 = v79;
      sub_23FD297E0(v69);
      sub_23FD29844();
      sub_23FC100E4(v18, *(uint64_t (**)(uint64_t, uint64_t))(v77 + 8));
      v59 = (uint64_t)v65;
    }
    else
    {
      sub_23FD29B7C();
      sub_23FD298C4();
      _s29ActionStatementFailureOutcomeVMa(0);
      sub_23FBFEE2C(&qword_256F64638, _s29ActionStatementFailureOutcomeVMa, (uint64_t)&unk_23FD802BC);
      sub_23FD299E0();
      v37 = v79;
      v58 = v77;
      sub_23FD297E0(v70);
      sub_23FD29844();
      sub_23FC100E4(v18, *(uint64_t (**)(uint64_t, uint64_t))(v58 + 8));
      v59 = v66;
    }
    goto LABEL_16;
  }
  sub_23FD2851C();
  v53 = v75;
  v54 = (uint64_t)v80;
  v55 = v62;
  sub_23FD75290();
  if (!v55)
  {
    _s29ActionStatementCreatedOutcomeVMa(0);
    sub_23FBFEE2C(&qword_256F64650, _s29ActionStatementCreatedOutcomeVMa, (uint64_t)&unk_23FD80350);
    v59 = (uint64_t)v63;
    sub_23FD752D8();
    v37 = v79;
    sub_23FBFF204(v53, *(uint64_t (**)(uint64_t, uint64_t))(v68 + 8));
    sub_23FD29844();
    sub_23FC100E4(v54, *(uint64_t (**)(uint64_t, uint64_t))(v77 + 8));
LABEL_16:
    swift_storeEnumTagMultiPayload();
    v60 = (uint64_t)v64;
    sub_23FD29918(v59, (uint64_t)v64);
    sub_23FD29918(v60, v74);
    goto LABEL_11;
  }
  sub_23FD29844();
  v56 = sub_23FD299F4();
  sub_23FC100E4(v56, v57);
LABEL_2:
  v37 = v79;
LABEL_11:
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v37);
  sub_23FC06000();
}

void sub_23FD22068(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  _s21ActionExecutionResultOMa(0);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v5, v6);
  v7 = sub_23FC10274();
  _s19EvaluatorVoteSourceOMa(v7);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v8, v9);
  sub_23FC159C8();
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v23 - v12;
  sub_23FBFD684(&qword_256F5F818);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v14, v15);
  sub_23FCF2498();
  v17 = v2 + v16;
  v18 = sub_23FD29A84();
  sub_23FCFCBC4(v18, v19, _s19EvaluatorVoteSourceOMa);
  sub_23FCFCBC4(a2, v17, _s19EvaluatorVoteSourceOMa);
  v20 = sub_23FD29AB4();
  if ((_DWORD)v20 == 1)
  {
    sub_23FD29B48(v20, v21, _s19EvaluatorVoteSourceOMa);
    v22 = sub_23FD29AB4();
    if ((_DWORD)v22 == 1)
      goto LABEL_8;
  }
  else
  {
    sub_23FCFCBC4(v2, (uint64_t)v13, _s19EvaluatorVoteSourceOMa);
    if (sub_23FD29AB4() != 1)
    {
      sub_23FC0F380(v17, v3, _s21ActionExecutionResultOMa);
      sub_23FD229B8((uint64_t)v13, v3);
      sub_23FC5806C(v3, _s21ActionExecutionResultOMa);
      sub_23FC5806C((uint64_t)v13, _s21ActionExecutionResultOMa);
LABEL_8:
      sub_23FC767BC(v22, _s19EvaluatorVoteSourceOMa);
      goto LABEL_9;
    }
    sub_23FC5806C((uint64_t)v13, _s21ActionExecutionResultOMa);
  }
  sub_23FC584B0(v2, &qword_256F5F818);
LABEL_9:
  sub_23FC060D4();
}

uint64_t sub_23FD22204(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x78456E6F69746361 && a2 == 0xEF6E6F6974756365;
  if (v2 || (sub_23FD75380() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000023FD86090)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23FD75380();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23FD22314(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000012;
  else
    return 0x78456E6F69746361;
}

void sub_23FD2235C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_23FCC2A5C();
  sub_23FBFD684(&qword_256F64788);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v5, v6);
  sub_23FC93168(v7, v19);
  v20 = *(_QWORD *)(sub_23FBFD684(&qword_256F64790) - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v8, v9);
  v10 = sub_23FC0A0A8();
  _s21ActionExecutionResultOMa(v10);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v11, v12);
  sub_23FC061C0();
  _s19EvaluatorVoteSourceOMa(0);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v13, v14);
  sub_23FC0603C();
  v21 = *(_QWORD *)(sub_23FBFD684(&qword_256F64798) - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v15, v16);
  sub_23FC8FD1C();
  sub_23FD29A28();
  sub_23FD28558();
  sub_23FD754C4();
  sub_23FCFCBC4(v0, v1, _s19EvaluatorVoteSourceOMa);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_23FD29B0C();
    sub_23FD299D4();
    sub_23FD28648();
    sub_23FD7532C();
    v17 = sub_23FC5D9C4();
    sub_23FC10454(v17, v18);
  }
  else
  {
    sub_23FC0F380(v1, v4, _s21ActionExecutionResultOMa);
    sub_23FD2860C();
    sub_23FD299D4();
    sub_23FBFEE2C(&qword_256F647A8, _s21ActionExecutionResultOMa, (uint64_t)&unk_23FD80110);
    sub_23FD7532C();
    sub_23FC10454(v3, *(uint64_t (**)(uint64_t, uint64_t))(v20 + 8));
    sub_23FC5806C(v4, _s21ActionExecutionResultOMa);
  }
  sub_23FC100E4(v2, *(uint64_t (**)(uint64_t, uint64_t))(v21 + 8));
  sub_23FC06000();
}

void sub_23FD225A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12)
{
  _BYTE *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _BYTE *v60;
  uint64_t v61;
  uint64_t v62;
  _BYTE *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;

  sub_23FCC2A5C();
  v76 = v13;
  v17 = v16;
  v67 = v18;
  v19 = sub_23FBFD684(&qword_256F64748);
  v70 = *(_QWORD *)(v19 - 8);
  v71 = v19;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v20, v21);
  sub_23FBFEFE0();
  v73 = v22;
  v23 = sub_23FBFD684(&qword_256F64750);
  v68 = *(_QWORD *)(v23 - 8);
  v69 = v23;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v24, v25);
  sub_23FCF2650(v26, (uint64_t)v63);
  v27 = sub_23FBFD684(&qword_256F64758);
  v74 = *(_QWORD *)(v27 - 8);
  v75 = v27;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v28, v29);
  v30 = sub_23FC12F10();
  v31 = _s19EvaluatorVoteSourceOMa(v30);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v32, v33);
  sub_23FC100D4();
  sub_23FD29A18();
  MEMORY[0x24BDAC7A8](v34, v35);
  sub_23FD29B94();
  MEMORY[0x24BDAC7A8](v36, v37);
  v39 = (char *)&v63 - v38;
  sub_23FBFDE40(v17, v17[3]);
  sub_23FD28558();
  v40 = v76;
  sub_23FD754B8();
  if (v40)
    goto LABEL_8;
  v63 = v12;
  v64 = v39;
  v65 = v15;
  v66 = v31;
  v76 = v17;
  v41 = sub_23FD752E4();
  v42 = *(_QWORD *)(v41 + 16);
  v43 = v14;
  if (!v42
    || (v44 = *(_BYTE *)(v41 + 32),
        sub_23FC05ED0(1, v42, v41, v41 + 32, 0, (2 * v42) | 1),
        v46 = v45,
        v48 = v47,
        swift_bridgeObjectRelease(),
        v46 != v48 >> 1))
  {
    v51 = v74;
    v52 = v66;
    v53 = sub_23FD1FBC0();
    sub_23FC5A704();
    v55 = v54;
    sub_23FBFD684(&qword_256F5D6C0);
    *v55 = v52;
    sub_23FD7529C();
    sub_23FCF2778();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v53 - 8) + 104))(v55, *MEMORY[0x24BEE26D0], v53);
    swift_willThrow();
    sub_23FC06158();
    sub_23FBFF204(v43, *(uint64_t (**)(uint64_t, uint64_t))(v51 + 8));
    v17 = v76;
LABEL_8:
    v59 = (uint64_t)v17;
    goto LABEL_9;
  }
  if ((v44 & 1) != 0)
  {
    sub_23FD29B0C();
    v49 = v73;
    sub_23FD2997C();
    sub_23FD285D0();
    sub_23FD29BC0();
    v50 = v74;
    sub_23FC100E4(v49, *(uint64_t (**)(uint64_t, uint64_t))(v70 + 8));
    sub_23FC06158();
    sub_23FBFF204(v43, *(uint64_t (**)(uint64_t, uint64_t))(v50 + 8));
    v60 = v63;
    *v63 = a12;
    swift_storeEnumTagMultiPayload();
    v61 = (uint64_t)v60;
  }
  else
  {
    sub_23FD2860C();
    v56 = v72;
    sub_23FD2997C();
    _s21ActionExecutionResultOMa(0);
    sub_23FBFEE2C(&qword_256F64780, _s21ActionExecutionResultOMa, (uint64_t)&unk_23FD80138);
    v57 = v65;
    sub_23FD29BC0();
    v58 = v74;
    sub_23FC100E4(v56, *(uint64_t (**)(uint64_t, uint64_t))(v68 + 8));
    sub_23FC06158();
    sub_23FBFF204(v43, *(uint64_t (**)(uint64_t, uint64_t))(v58 + 8));
    swift_storeEnumTagMultiPayload();
    v61 = v57;
  }
  v62 = (uint64_t)v64;
  sub_23FC0F380(v61, (uint64_t)v64, _s19EvaluatorVoteSourceOMa);
  sub_23FC0F380(v62, v67, _s19EvaluatorVoteSourceOMa);
  v59 = (uint64_t)v76;
LABEL_9:
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v59);
  sub_23FC06000();
}

void sub_23FD229B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68[23];
  uint64_t v69;
  uint64_t v70;

  v69 = a1;
  v70 = a2;
  v68[14] = _s22ActionStatementOutcomeOMa(0);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v3, v4);
  sub_23FD29954(v5, v68[0]);
  v68[12] = sub_23FBFD684(&qword_256F64248);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v6, v7);
  sub_23FBFEFE0();
  v68[17] = v8;
  sub_23FBFD684(&qword_256F629D0);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v9, v10);
  sub_23FBFEFCC();
  v68[7] = v11;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v12, v13);
  sub_23FBFF218();
  v68[13] = v14;
  v15 = sub_23FD7313C();
  v16 = *(_QWORD *)(v15 - 8);
  v68[21] = v15;
  v68[22] = v16;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v17, v18);
  sub_23FBFEFCC();
  v68[15] = v19;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v20, v21);
  sub_23FBFF218();
  v68[16] = v22;
  v68[5] = sub_23FD29A90();
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v23, v24);
  sub_23FBFEFE0();
  v68[9] = v25;
  v68[20] = _s29ActionStatementCreatedOutcomeVMa(0);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v26, v27);
  sub_23FBFEFCC();
  v68[1] = v28;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v29, v30);
  sub_23FBFF218();
  v68[0] = v31;
  v68[18] = sub_23FBFD684(&qword_256F64250);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v32, v33);
  sub_23FBFEFCC();
  v68[11] = v34;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v35, v36);
  sub_23FBFF218();
  v68[10] = v37;
  sub_23FBFD684(&qword_256F5F658);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v38, v39);
  sub_23FBFEFCC();
  v68[6] = v40;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v41, v42);
  v68[19] = (uint64_t)v68 - v43;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v44, v45);
  v68[4] = (uint64_t)v68 - v46;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v47, v48);
  sub_23FBFF218();
  v68[8] = v49;
  v68[3] = sub_23FD29BCC();
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v50, v51);
  v52 = sub_23FC12F10();
  _s21ActionExecutionResultOMa(v52);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v53, v54);
  sub_23FC100D4();
  v57 = MEMORY[0x24BDAC7A8](v55, v56);
  v59 = MEMORY[0x24BDAC7A8](v57, v58);
  MEMORY[0x24BDAC7A8](v59, v60);
  sub_23FD29A18();
  MEMORY[0x24BDAC7A8](v61, v62);
  sub_23FBFD684(&qword_256F64258);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v63, v64);
  sub_23FC10388();
  v66 = v2 + *(int *)(v65 + 48);
  sub_23FCFCBC4(v69, v2, _s21ActionExecutionResultOMa);
  sub_23FCFCBC4(v70, v66, _s21ActionExecutionResultOMa);
  v67 = (char *)sub_23FD22CF0 + 4 * byte_23FD7FF80[sub_23FD297F0()];
  __asm { BR              X10 }
}

void sub_23FD22CF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23FCFCBC4(v1, v2, _s21ActionExecutionResultOMa);
  if (sub_23FD297F0())
  {
    sub_23FC5806C(v2, _s29ActionStatementSuccessOutcomeVMa);
    sub_23FC584B0(v1, &qword_256F64258);
  }
  else
  {
    sub_23FC0F380(v3, v0, _s29ActionStatementSuccessOutcomeVMa);
    if ((sub_23FD71450() & 1) != 0)
      sub_23FD716CC();
    sub_23FCD504C(v0);
    sub_23FCD504C(v2);
    sub_23FD29B68(v4, _s21ActionExecutionResultOMa);
  }
  sub_23FC060D4();
}

uint64_t _s22ActionStatementOutcomeOMa(uint64_t a1)
{
  return sub_23FC04944(a1, qword_256F64488);
}

uint64_t _s29ActionStatementFailureOutcomeVMa(uint64_t a1)
{
  return sub_23FC04944(a1, qword_256F643E0);
}

uint64_t _s29ActionStatementCreatedOutcomeVMa(uint64_t a1)
{
  return sub_23FC04944(a1, qword_256F64350);
}

uint64_t _s29ActionStatementSuccessOutcomeVMa(uint64_t a1)
{
  return sub_23FC04944(a1, qword_256F642C0);
}

uint64_t _s21ActionExecutionResultOMa(uint64_t a1)
{
  return sub_23FC04944(a1, (uint64_t *)&unk_256F645D8);
}

uint64_t sub_23FD233CC(uint64_t a1, uint64_t a2)
{
  BOOL v5;
  BOOL v6;
  BOOL v7;
  char v9;

  if (a1 == 0xD000000000000015 && a2 == 0x800000023FD860B0 || (sub_23FD75380() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v5 = a1 == 0x7845746F4E646964 && a2 == 0xED00006574756365;
    if (v5 || (sub_23FD75380() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v6 = a1 == 0x6F69747563657865 && a2 == 0xEF64656C6961466ELL;
      if (v6 || (sub_23FD75380() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v7 = a1 == 0x6C61636974697263 && a2 == 0xEF6572756C696146;
        if (v7 || (sub_23FD75380() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0x64656C65636E6163 && a2 == 0xE800000000000000)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          v9 = sub_23FD75380();
          swift_bridgeObjectRelease();
          if ((v9 & 1) != 0)
            return 4;
          else
            return 5;
        }
      }
    }
  }
}

uint64_t sub_23FD23640(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23FD23678 + 4 * byte_23FD7FF85[a1]))(0xD000000000000015, 0x800000023FD860B0);
}

uint64_t sub_23FD23678()
{
  return 0x7845746F4E646964;
}

uint64_t sub_23FD2369C()
{
  return 0x6F69747563657865;
}

uint64_t sub_23FD236C0()
{
  return 0x6C61636974697263;
}

uint64_t sub_23FD236E4()
{
  return 0x64656C65636E6163;
}

uint64_t sub_23FD236FC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 12383 && a2 == 0xE200000000000000;
  if (v2 || (sub_23FD75380() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 12639 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23FD75380();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23FD237C0(char a1)
{
  if ((a1 & 1) != 0)
    return 12639;
  else
    return 12383;
}

uint64_t sub_23FD237D8(uint64_t a1, uint64_t a2)
{
  char v2;
  char v4;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    sub_23FD1F9C4();
    sub_23FD1FB4C();
    v4 = v2 ^ 1;
  }
  return v4 & 1;
}

void sub_23FD23834()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  sub_23FCC2A5C();
  v33 = *(_QWORD *)(sub_23FBFD684(&qword_256F64810) - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v2, v3);
  sub_23FBFEFE0();
  sub_23FBFD684(&qword_256F629D0);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v4, v5);
  sub_23FBFEFE0();
  sub_23FBFD684(&qword_256F64818);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v6, v7);
  sub_23FD1FC94(v8, v33);
  sub_23FD7313C();
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v9, v10);
  sub_23FD1FA5C(v11, v34);
  sub_23FBFD684(&qword_256F64820);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v12, v13);
  sub_23FBFEFE0();
  sub_23FD29A90();
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v14, v15);
  sub_23FBFEFE0();
  sub_23FBFD684(&qword_256F64828);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v16, v17);
  sub_23FD29954(v18, v35);
  sub_23FBFD684(&qword_256F5F658);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v19, v20);
  sub_23FBFEFCC();
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v21, v22);
  sub_23FBFF218();
  sub_23FBFD684(&qword_256F64830);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v23, v24);
  v25 = sub_23FC12F10();
  _s29ActionStatementSuccessOutcomeVMa(v25);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v26, v27);
  sub_23FD29920();
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v28, v29);
  sub_23FC9308C();
  sub_23FBFD684(&qword_256F64838);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v30, v31);
  sub_23FC061C0();
  sub_23FD29A28();
  sub_23FD28684();
  sub_23FD754C4();
  sub_23FCFCBC4(v0, v1, _s21ActionExecutionResultOMa);
  sub_23FD29A84();
  v32 = (char *)sub_23FD23AC8 + 4 * byte_23FD7FF8A[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_23FD23AC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_23FD29918(v2, v0);
  *(_BYTE *)(v3 - 71) = 0;
  sub_23FD287B0();
  v5 = *(_QWORD *)(v3 - 120);
  v4 = *(_QWORD *)(v3 - 112);
  sub_23FD299D4();
  sub_23FD299B8(&qword_256F64670, v6, (uint64_t)&unk_23FD803BC);
  v7 = *(_QWORD *)(v3 - 288);
  sub_23FD7532C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 296) + 8))(v1, v7);
  sub_23FC5806C(v0, _s29ActionStatementSuccessOutcomeVMa);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 128) + 8))(v5, v4);
  sub_23FC06000();
}

void sub_23FD23EC4()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t *v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60[8];
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;

  sub_23FCC2A5C();
  v77 = v1;
  v4 = v3;
  v66 = v5;
  v63 = sub_23FBFD684(&qword_256F647B0);
  v72 = *(_QWORD *)(v63 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v6, v7);
  sub_23FBFEFE0();
  v68 = v8;
  v9 = sub_23FBFD684(&qword_256F647B8);
  v64 = *(_QWORD *)(v9 - 8);
  v65 = v9;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v10, v11);
  sub_23FBFEFE0();
  v69 = v12;
  v62 = sub_23FBFD684(&qword_256F647C0);
  v71 = *(_QWORD *)(v62 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v13, v14);
  sub_23FD1FA18(v15, v60[0]);
  v61 = sub_23FBFD684(&qword_256F647C8);
  v70 = *(_QWORD *)(v61 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v16, v17);
  sub_23FD1FC94(v18, v60[0]);
  v19 = sub_23FBFD684(&qword_256F647D0);
  v60[6] = *(_QWORD *)(v19 - 8);
  v60[7] = v19;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v20, v21);
  sub_23FBFEFE0();
  v67 = v22;
  v23 = sub_23FBFD684(&qword_256F647D8);
  v73 = *(_QWORD *)(v23 - 8);
  v74 = v23;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v24, v25);
  v75 = sub_23FD29920();
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v26, v27);
  sub_23FBFEFCC();
  v60[5] = v28;
  sub_23FBFF064();
  v31 = MEMORY[0x24BDAC7A8](v29, v30);
  v33 = (char *)v60 - v32;
  v35 = MEMORY[0x24BDAC7A8](v31, v34);
  v37 = (char *)v60 - v36;
  MEMORY[0x24BDAC7A8](v35, v38);
  sub_23FD29A18();
  v41 = MEMORY[0x24BDAC7A8](v39, v40);
  v43 = (char *)v60 - v42;
  MEMORY[0x24BDAC7A8](v41, v44);
  v46 = (char *)v60 - v45;
  v76 = v4;
  sub_23FD298FC();
  sub_23FD28684();
  v47 = v77;
  sub_23FD754B8();
  if (!v47)
  {
    v60[3] = v0;
    v60[4] = (uint64_t)v37;
    v60[1] = (uint64_t)v43;
    v60[2] = (uint64_t)v33;
    v77 = v46;
    v48 = v74;
    v49 = v2;
    v50 = sub_23FD752E4();
    v51 = *(_QWORD *)(v50 + 16);
    if (v51)
    {
      v60[0] = 0;
      v52 = *(unsigned __int8 *)(v50 + 32);
      sub_23FC05ED0(1, v51, v50, v50 + 32, 0, (2 * v51) | 1);
      v54 = v53;
      v56 = v55;
      swift_bridgeObjectRelease();
      if (v54 == v56 >> 1)
        __asm { BR              X9 }
      v49 = v2;
    }
    sub_23FD1FBC0();
    sub_23FC5A704();
    v58 = v57;
    sub_23FBFD684(&qword_256F5D6C0);
    *v58 = v75;
    sub_23FD7529C();
    v59 = sub_23FCF2778();
    sub_23FD1FCF0(v59, *MEMORY[0x24BEE26D0]);
    swift_willThrow();
    sub_23FCF24C4();
    (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v49, v48);
  }
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v76);
  sub_23FC06000();
}

void sub_23FD242CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);

  sub_23FD29B18();
  v4 = *(_QWORD *)(v3 - 184);
  sub_23FD297D0();
  if (!v0)
  {
    _s29ActionStatementCreatedOutcomeVMa(0);
    sub_23FBFEE2C(&qword_256F64650, _s29ActionStatementCreatedOutcomeVMa, (uint64_t)&unk_23FD80350);
    sub_23FD29B38();
    sub_23FC100E4(v4, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    sub_23FCF24C4();
    v5 = sub_23FD299F4();
    v6(v5, v2);
    swift_storeEnumTagMultiPayload();
    JUMPOUT(0x23FD246D8);
  }
  sub_23FCF24C4();
  sub_23FD299F4();
  JUMPOUT(0x23FD242A8);
}

void sub_23FD24370()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23FD29B88();
  v3 = *(_QWORD *)(v2 - 176);
  sub_23FD297D0();
  if (!v0)
  {
    _s29ActionStatementFailureOutcomeVMa(0);
    sub_23FBFEE2C(&qword_256F64638, _s29ActionStatementFailureOutcomeVMa, (uint64_t)&unk_23FD802BC);
    sub_23FD29B40();
    sub_23FC100E4(v3, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    sub_23FCF24C4();
    sub_23FD299C0();
    JUMPOUT(0x23FD245ECLL);
  }
  JUMPOUT(0x23FD24404);
}

void sub_23FD24410()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;

  sub_23FD29B70();
  sub_23FD297D0();
  if (!v0)
  {
    _s29ActionStatementCreatedOutcomeVMa(0);
    *(_BYTE *)(v2 - 67) = 0;
    sub_23FBFEE2C(&qword_256F64650, _s29ActionStatementCreatedOutcomeVMa, (uint64_t)&unk_23FD80350);
    sub_23FD29BB4();
    v3 = *(_QWORD *)(v2 - 160);
    sub_23FD29B38();
    sub_23FBFD684(&qword_256F5F650);
    sub_23FD7313C();
    v4 = (uint64_t (*)(uint64_t))MEMORY[0x24BE54F50];
    *(_BYTE *)(v2 - 68) = 1;
    sub_23FBFEE2C(&qword_256F62F18, v4, MEMORY[0x24BE54F68]);
    sub_23FD29B40();
    v5 = *(_QWORD *)(v2 - 128);
    sub_23FC5B3B0(v3, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 216) + 8));
    sub_23FCF24C4();
    sub_23FC10454(v1, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
    swift_storeEnumTagMultiPayload();
    JUMPOUT(0x23FD246DCLL);
  }
  sub_23FCF24C4();
  sub_23FD299F4();
  JUMPOUT(0x23FD242ACLL);
}

uint64_t sub_23FD24748@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23FD20930(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23FD24770()
{
  sub_23FD283F0();
  return sub_23FD754DC();
}

uint64_t sub_23FD24798()
{
  sub_23FD283F0();
  return sub_23FD754E8();
}

void sub_23FD247C0()
{
  sub_23FD20AC4();
}

void sub_23FD247D4()
{
  sub_23FD209FC();
}

uint64_t sub_23FD247E8()
{
  sub_23FD283B4();
  return sub_23FD754DC();
}

uint64_t sub_23FD24810()
{
  sub_23FD283B4();
  return sub_23FD754E8();
}

void sub_23FD24838()
{
  sub_23FD20D34();
}

void sub_23FD2484C()
{
  sub_23FD20C34();
}

uint64_t sub_23FD24860(uint64_t a1, uint64_t a2)
{
  return sub_23FD20EBC(a1, a2, _s29ActionStatementSuccessOutcomeVMa, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BE52450]) & 1;
}

uint64_t sub_23FD24888()
{
  char *v0;

  return sub_23FD2101C(*v0);
}

uint64_t sub_23FD24890@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23FD20F2C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23FD248B4()
{
  sub_23FD2842C();
  return sub_23FD754DC();
}

uint64_t sub_23FD248DC()
{
  sub_23FD2842C();
  return sub_23FD754E8();
}

void sub_23FD24904()
{
  sub_23FD2115C();
}

void sub_23FD24918()
{
  sub_23FD2105C();
}

uint64_t sub_23FD2492C(uint64_t a1, uint64_t a2)
{
  return sub_23FD20EBC(a1, a2, _s29ActionStatementFailureOutcomeVMa, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BE52328]) & 1;
}

uint64_t sub_23FD24954()
{
  char *v0;

  return sub_23FD2175C(*v0);
}

uint64_t sub_23FD2495C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23FD2160C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23FD24980()
{
  sub_23FD28468();
  return sub_23FD754DC();
}

uint64_t sub_23FD249A8()
{
  sub_23FD28468();
  return sub_23FD754E8();
}

uint64_t sub_23FD249D0()
{
  sub_23FD2851C();
  return sub_23FD754DC();
}

uint64_t sub_23FD249F8()
{
  sub_23FD2851C();
  return sub_23FD754E8();
}

uint64_t sub_23FD24A20()
{
  sub_23FD284A4();
  return sub_23FD754DC();
}

uint64_t sub_23FD24A48()
{
  sub_23FD284A4();
  return sub_23FD754E8();
}

uint64_t sub_23FD24A70()
{
  sub_23FD284E0();
  return sub_23FD754DC();
}

uint64_t sub_23FD24A98()
{
  sub_23FD284E0();
  return sub_23FD754E8();
}

void sub_23FD24AC0()
{
  sub_23FD21AE8();
}

void sub_23FD24AD4()
{
  sub_23FD21774();
}

uint64_t sub_23FD24AEC()
{
  sub_23FD28594();
  return sub_23FD754DC();
}

uint64_t sub_23FD24B14()
{
  sub_23FD28594();
  return sub_23FD754E8();
}

uint64_t sub_23FD24B3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23FD237D8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23FD24B64()
{
  sub_23FD2860C();
  return sub_23FD754DC();
}

uint64_t sub_23FD24B8C()
{
  sub_23FD2860C();
  return sub_23FD754E8();
}

uint64_t sub_23FD24BB4()
{
  char *v0;

  return sub_23FD22314(*v0);
}

uint64_t sub_23FD24BBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23FD22204(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23FD24BE0()
{
  sub_23FD28558();
  return sub_23FD754DC();
}

uint64_t sub_23FD24C08()
{
  sub_23FD28558();
  return sub_23FD754E8();
}

void sub_23FD24C30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  _BYTE vars8[7];

  sub_23FD225A8(a1, a2, a3, a4, a5, a6, a7, a8, vars0, *(int *)vars8, *(__int16 *)&vars8[4], vars8[6]);
}

void sub_23FD24C44()
{
  sub_23FD2235C();
}

uint64_t _s19EvaluatorVoteSourceOMa(uint64_t a1)
{
  return sub_23FC04944(a1, qword_256F64530);
}

void sub_23FD24C70(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  sub_23FD24EFC(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE52458]);
}

uint64_t sub_23FD24C7C(uint64_t a1, uint64_t a2)
{
  return sub_23FCA697C(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x24BE52458]);
}

void sub_23FD24C88()
{
  sub_23FCA69EC();
}

void sub_23FD24C94()
{
  sub_23FCA6A44();
}

void sub_23FD24CA0()
{
  sub_23FD24FC4();
}

void sub_23FD24CAC()
{
  sub_23FCA6AE4();
}

uint64_t sub_23FD24CB8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FD24CC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FCA6B48(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE52458]);
}

uint64_t sub_23FD24CD0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FD24CDC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_23FCA6BC8(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BE52458]);
}

uint64_t sub_23FD24CE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FCA6C4C(a1, a2, a3, (uint64_t (*)(uint64_t))MEMORY[0x24BE52458]);
}

uint64_t sub_23FD24CF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23FD71474();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_23FD24D30(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23FD71474();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_23FD24D64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_23FD24DA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_23FD24DEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_23FD24E30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_23FD24E74()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FD24E80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23FBFF104();
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, a2, v4);
}

uint64_t sub_23FD24EB0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FD24EBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23FBFF104();
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a1, a2, a2, v4);
}

void sub_23FD24EF0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  sub_23FD24EFC(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE52340]);
}

void sub_23FD24EFC(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if ((*(_DWORD *)(*(_QWORD *)(a3 - 8) + 80) & 0x20000) != 0)
  {
    *a1 = *a2;
    swift_retain();
  }
  else
  {
    v7 = sub_23FBFF104();
    sub_23FC595C4((uint64_t)a1, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16));
    v8 = (uint64_t)a1 + *(int *)(a3 + 20);
    v9 = a4(0);
    sub_23FC595C4(v8, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16));
  }
  sub_23FC09258();
}

uint64_t sub_23FD24F94(uint64_t a1, uint64_t a2)
{
  return sub_23FCA697C(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x24BE52340]);
}

void sub_23FD24FA0()
{
  sub_23FCA69EC();
}

void sub_23FD24FAC()
{
  sub_23FCA6A44();
}

void sub_23FD24FB8()
{
  sub_23FD24FC4();
}

void sub_23FD24FC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = sub_23FCA6CD4();
  sub_23FC595C4(v1, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32));
  v3 = sub_23FCA6CFC();
  sub_23FC595C4(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  sub_23FC09258();
}

void sub_23FD25010()
{
  sub_23FCA6AE4();
}

uint64_t sub_23FD2501C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FD25028(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FCA6B48(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x24BE52340]);
}

uint64_t sub_23FD25034()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FD25040(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_23FCA6BC8(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BE52340]);
}

uint64_t sub_23FD2504C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FCA6C4C(a1, a2, a3, (uint64_t (*)(uint64_t))MEMORY[0x24BE52340]);
}

uint64_t *sub_23FD25058(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v13 = sub_23FD71474();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
      v14 = *(int *)(_s29ActionStatementFailureOutcomeVMa(0) + 20);
      v15 = (char *)a1 + v14;
      v16 = (char *)a2 + v14;
      v17 = sub_23FD71684();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v7 = sub_23FD71474();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = *(int *)(_s29ActionStatementSuccessOutcomeVMa(0) + 20);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_23FD716D8();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      v18 = sub_23FD71474();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(a1, a2, v18);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23FD251C8(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 2)
  {
    v4 = sub_23FD71474();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
    a1 += *(int *)(_s29ActionStatementFailureOutcomeVMa(0) + 20);
    v3 = sub_23FD71684();
  }
  else if ((_DWORD)result == 1)
  {
    v5 = sub_23FD71474();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
    a1 += *(int *)(_s29ActionStatementSuccessOutcomeVMa(0) + 20);
    v3 = sub_23FD716D8();
  }
  else
  {
    if ((_DWORD)result)
      return result;
    v3 = sub_23FD71474();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
}

uint64_t sub_23FD25290(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v10 = sub_23FD71474();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
    v11 = *(int *)(_s29ActionStatementFailureOutcomeVMa(0) + 20);
    v7 = a1 + v11;
    v8 = a2 + v11;
    v9 = sub_23FD71684();
  }
  else
  {
    if (EnumCaseMultiPayload != 1)
    {
      v12 = sub_23FD71474();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
      goto LABEL_7;
    }
    v5 = sub_23FD71474();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
    v6 = *(int *)(_s29ActionStatementSuccessOutcomeVMa(0) + 20);
    v7 = a1 + v6;
    v8 = a2 + v6;
    v9 = sub_23FD716D8();
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
LABEL_7:
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_23FD253A8(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (a1 != a2)
  {
    sub_23FC5806C(a1, _s22ActionStatementOutcomeOMa);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v10 = sub_23FD71474();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      v11 = *(int *)(_s29ActionStatementFailureOutcomeVMa(0) + 20);
      v7 = a1 + v11;
      v8 = a2 + v11;
      v9 = sub_23FD71684();
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        v12 = sub_23FD71474();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
        goto LABEL_8;
      }
      v5 = sub_23FD71474();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, a2, v5);
      v6 = *(int *)(_s29ActionStatementSuccessOutcomeVMa(0) + 20);
      v7 = a1 + v6;
      v8 = a2 + v6;
      v9 = sub_23FD716D8();
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
LABEL_8:
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23FD254D8(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v10 = sub_23FD71474();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
    v11 = *(int *)(_s29ActionStatementFailureOutcomeVMa(0) + 20);
    v7 = a1 + v11;
    v8 = a2 + v11;
    v9 = sub_23FD71684();
  }
  else
  {
    if (EnumCaseMultiPayload != 1)
    {
      v12 = sub_23FD71474();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
      goto LABEL_7;
    }
    v5 = sub_23FD71474();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
    v6 = *(int *)(_s29ActionStatementSuccessOutcomeVMa(0) + 20);
    v7 = a1 + v6;
    v8 = a2 + v6;
    v9 = sub_23FD716D8();
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
LABEL_7:
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_23FD255F0(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (a1 != a2)
  {
    sub_23FC5806C(a1, _s22ActionStatementOutcomeOMa);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v10 = sub_23FD71474();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
      v11 = *(int *)(_s29ActionStatementFailureOutcomeVMa(0) + 20);
      v7 = a1 + v11;
      v8 = a2 + v11;
      v9 = sub_23FD71684();
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        v12 = sub_23FD71474();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
        goto LABEL_8;
      }
      v5 = sub_23FD71474();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a1, a2, v5);
      v6 = *(int *)(_s29ActionStatementSuccessOutcomeVMa(0) + 20);
      v7 = a1 + v6;
      v8 = a2 + v6;
      v9 = sub_23FD716D8();
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
LABEL_8:
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23FD25720()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = sub_23FD71474();
  if (v1 <= 0x3F)
  {
    result = _s29ActionStatementSuccessOutcomeVMa(319);
    if (v2 <= 0x3F)
    {
      result = _s29ActionStatementFailureOutcomeVMa(319);
      if (v3 <= 0x3F)
      {
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_23FD257BC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  char *v8;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    if (!swift_getEnumCaseMultiPayload())
    {
      _s21ActionExecutionResultOMa(0);
      v8 = (char *)&loc_23FD25868 + 4 * byte_23FD7FF94[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t sub_23FD25B60(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = swift_getEnumCaseMultiPayload();
  if (!(_DWORD)result)
  {
    _s21ActionExecutionResultOMa(0);
    result = swift_getEnumCaseMultiPayload();
    switch((int)result)
    {
      case 0:
        goto LABEL_4;
      case 1:
        v5 = _s29ActionStatementCreatedOutcomeVMa(0);
        result = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, 1, v5);
        if (!(_DWORD)result)
          goto LABEL_14;
        return result;
      case 2:
        goto LABEL_15;
      case 3:
        v6 = _s29ActionStatementCreatedOutcomeVMa(0);
        if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, 1, v6))
        {
          v7 = sub_23FD71474();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a1, v7);
        }
        a1 += *(int *)(sub_23FBFD684(&qword_256F5F650) + 48);
        v4 = sub_23FD7313C();
        goto LABEL_16;
      case 4:
        v8 = _s22ActionStatementOutcomeOMa(0);
        result = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, 1, v8);
        if ((_DWORD)result)
          return result;
        result = swift_getEnumCaseMultiPayload();
        if ((_DWORD)result == 2)
        {
LABEL_15:
          v9 = sub_23FD71474();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(a1, v9);
          a1 += *(int *)(_s29ActionStatementFailureOutcomeVMa(0) + 20);
          v4 = sub_23FD71684();
        }
        else if ((_DWORD)result == 1)
        {
LABEL_4:
          v3 = sub_23FD71474();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
          a1 += *(int *)(_s29ActionStatementSuccessOutcomeVMa(0) + 20);
          v4 = sub_23FD716D8();
        }
        else
        {
          if ((_DWORD)result)
            return result;
LABEL_14:
          v4 = sub_23FD71474();
        }
LABEL_16:
        result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
        break;
      default:
        return result;
    }
  }
  return result;
}

void *sub_23FD25D08(void *a1, const void *a2, uint64_t a3)
{
  char *v6;

  if (!swift_getEnumCaseMultiPayload())
  {
    _s21ActionExecutionResultOMa(0);
    v6 = (char *)&loc_23FD25D8C + 4 * byte_23FD7FF9E[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

void *sub_23FD26084(void *a1, const void *a2, uint64_t a3)
{
  char *v6;

  if (a1 != a2)
  {
    sub_23FC5806C((uint64_t)a1, _s19EvaluatorVoteSourceOMa);
    if (!swift_getEnumCaseMultiPayload())
    {
      _s21ActionExecutionResultOMa(0);
      v6 = (char *)&loc_23FD26120 + 4 * byte_23FD7FFA3[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_23FD26418(void *a1, const void *a2, uint64_t a3)
{
  char *v6;

  if (!swift_getEnumCaseMultiPayload())
  {
    _s21ActionExecutionResultOMa(0);
    v6 = (char *)&loc_23FD2649C + 4 * byte_23FD7FFA8[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

void *sub_23FD26794(void *a1, const void *a2, uint64_t a3)
{
  char *v6;

  if (a1 != a2)
  {
    sub_23FC5806C((uint64_t)a1, _s19EvaluatorVoteSourceOMa);
    if (!swift_getEnumCaseMultiPayload())
    {
      _s21ActionExecutionResultOMa(0);
      v6 = (char *)&loc_23FD26830 + 4 * byte_23FD7FFAD[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_23FD26B28()
{
  uint64_t result;
  unint64_t v1;

  result = _s21ActionExecutionResultOMa(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_23FD26B94(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_23FD26BE8 + 4 * byte_23FD7FFB2[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t sub_23FD26F78(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      goto LABEL_2;
    case 1:
      v5 = _s29ActionStatementCreatedOutcomeVMa(0);
      result = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, 1, v5);
      if (!(_DWORD)result)
        goto LABEL_13;
      return result;
    case 2:
      goto LABEL_14;
    case 3:
      v6 = _s29ActionStatementCreatedOutcomeVMa(0);
      if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, 1, v6))
      {
        v7 = sub_23FD71474();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a1, v7);
      }
      a1 += *(int *)(sub_23FBFD684(&qword_256F5F650) + 48);
      v4 = sub_23FD7313C();
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
    case 4:
      v8 = _s22ActionStatementOutcomeOMa(0);
      result = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, 1, v8);
      if ((_DWORD)result)
        return result;
      result = swift_getEnumCaseMultiPayload();
      if ((_DWORD)result == 2)
      {
LABEL_14:
        v9 = sub_23FD71474();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(a1, v9);
        a1 += *(int *)(_s29ActionStatementFailureOutcomeVMa(0) + 20);
        v4 = sub_23FD71684();
      }
      else if ((_DWORD)result == 1)
      {
LABEL_2:
        v3 = sub_23FD71474();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
        a1 += *(int *)(_s29ActionStatementSuccessOutcomeVMa(0) + 20);
        v4 = sub_23FD716D8();
      }
      else
      {
        if ((_DWORD)result)
          return result;
LABEL_13:
        v4 = sub_23FD71474();
      }
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
    default:
      return result;
  }
}

void sub_23FD27108()
{
  char *v0;

  v0 = (char *)sub_23FD27158 + 4 * byte_23FD7FFBC[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23FD27158()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v0, v1, v2);
  v3 = *(int *)(_s29ActionStatementSuccessOutcomeVMa(0) + 20);
  v4 = v0 + v3;
  v5 = v1 + v3;
  v6 = sub_23FD716D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v4, v5, v6);
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t sub_23FD27440(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_23FC5806C(result, _s21ActionExecutionResultOMa);
    v2 = (char *)&loc_23FD274A8 + 4 * byte_23FD7FFC1[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

void sub_23FD27790()
{
  char *v0;

  v0 = (char *)sub_23FD277E0 + 4 * byte_23FD7FFC6[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23FD277E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32))(v0, v1, v2);
  v3 = *(int *)(_s29ActionStatementSuccessOutcomeVMa(0) + 20);
  v4 = v0 + v3;
  v5 = v1 + v3;
  v6 = sub_23FD716D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v4, v5, v6);
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t sub_23FD27AC8(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_23FC5806C(result, _s21ActionExecutionResultOMa);
    v2 = (char *)&loc_23FD27B30 + 4 * byte_23FD7FFCB[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

void sub_23FD27E18()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;

  v0 = _s29ActionStatementSuccessOutcomeVMa(319);
  if (v1 <= 0x3F)
  {
    v10 = *(_QWORD *)(v0 - 8) + 64;
    sub_23FD27F24(319, &qword_256F645E8, (void (*)(uint64_t))_s29ActionStatementCreatedOutcomeVMa);
    if (v3 <= 0x3F)
    {
      v11 = *(_QWORD *)(v2 - 8) + 64;
      v4 = _s29ActionStatementFailureOutcomeVMa(319);
      if (v5 <= 0x3F)
      {
        v12 = *(_QWORD *)(v4 - 8) + 64;
        sub_23FD7313C();
        if (v6 <= 0x3F)
        {
          swift_getTupleTypeLayout2();
          v13 = &v9;
          sub_23FD27F24(319, qword_256F645F0, (void (*)(uint64_t))_s22ActionStatementOutcomeOMa);
          if (v8 <= 0x3F)
          {
            v14 = *(_QWORD *)(v7 - 8) + 64;
            swift_initEnumMetadataMultiPayload();
          }
        }
      }
    }
  }
}

void sub_23FD27F24(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_23FD75038();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_23FD27F70()
{
  sub_23FD286C0();
  return sub_23FD754DC();
}

uint64_t sub_23FD27F98()
{
  sub_23FD286C0();
  return sub_23FD754E8();
}

uint64_t sub_23FD27FC0()
{
  unsigned __int8 *v0;

  return sub_23FD23640(*v0);
}

uint64_t sub_23FD27FC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23FD233CC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23FD27FEC()
{
  sub_23FD28684();
  return sub_23FD754DC();
}

uint64_t sub_23FD28014()
{
  sub_23FD28684();
  return sub_23FD754E8();
}

uint64_t sub_23FD2803C()
{
  sub_23FD287B0();
  return sub_23FD754DC();
}

uint64_t sub_23FD28064()
{
  sub_23FD287B0();
  return sub_23FD754E8();
}

uint64_t sub_23FD2808C()
{
  char *v0;

  return sub_23FD237C0(*v0);
}

uint64_t sub_23FD28094@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23FD236FC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23FD280B8()
{
  sub_23FD286FC();
  return sub_23FD754DC();
}

uint64_t sub_23FD280E0()
{
  sub_23FD286FC();
  return sub_23FD754E8();
}

uint64_t sub_23FD28108()
{
  sub_23FD28774();
  return sub_23FD754DC();
}

uint64_t sub_23FD28130()
{
  sub_23FD28774();
  return sub_23FD754E8();
}

uint64_t sub_23FD28158()
{
  sub_23FD28738();
  return sub_23FD754DC();
}

uint64_t sub_23FD28180()
{
  sub_23FD28738();
  return sub_23FD754E8();
}

void sub_23FD281A8()
{
  sub_23FD23EC4();
}

void sub_23FD281BC()
{
  sub_23FD23834();
}

void sub_23FD281D4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23FBFEE2C(&qword_256F64620, _s22ActionStatementOutcomeOMa, (uint64_t)&unk_23FD80228);
  a1[1] = v2;
  sub_23FBFEE2C(&qword_256F64628, _s22ActionStatementOutcomeOMa, (uint64_t)&unk_23FD80200);
  a1[2] = v3;
  sub_23FBFEE2C(&qword_256F64630, _s22ActionStatementOutcomeOMa, (uint64_t)&unk_23FD801D8);
  a1[3] = v4;
}

void sub_23FD2824C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23FBFEE2C(&qword_256F64638, _s29ActionStatementFailureOutcomeVMa, (uint64_t)&unk_23FD802BC);
  a1[1] = v2;
  sub_23FBFEE2C(&qword_256F64640, _s29ActionStatementFailureOutcomeVMa, (uint64_t)&unk_23FD80294);
  a1[2] = v3;
  sub_23FBFEE2C(&qword_256F64648, _s29ActionStatementFailureOutcomeVMa, (uint64_t)&unk_23FD8026C);
  a1[3] = v4;
}

void sub_23FD282C4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23FBFEE2C(&qword_256F64650, _s29ActionStatementCreatedOutcomeVMa, (uint64_t)&unk_23FD80350);
  a1[1] = v2;
  sub_23FBFEE2C(&qword_256F64658, _s29ActionStatementCreatedOutcomeVMa, (uint64_t)&unk_23FD80328);
  a1[2] = v3;
  sub_23FBFEE2C(&qword_256F64660, _s29ActionStatementCreatedOutcomeVMa, (uint64_t)&unk_23FD80300);
  a1[3] = v4;
}

void sub_23FD2833C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23FBFEE2C(&qword_256F64668, _s29ActionStatementSuccessOutcomeVMa, (uint64_t)&unk_23FD803E4);
  a1[1] = v2;
  sub_23FBFEE2C(&qword_256F64670, _s29ActionStatementSuccessOutcomeVMa, (uint64_t)&unk_23FD803BC);
  a1[2] = v3;
  sub_23FBFEE2C(&qword_256F64678, _s29ActionStatementSuccessOutcomeVMa, (uint64_t)&unk_23FD80394);
  a1[3] = v4;
}

unint64_t sub_23FD283B4()
{
  unint64_t result;

  result = qword_256F64688;
  if (!qword_256F64688)
  {
    result = MEMORY[0x2426797E8](&unk_23FD815A4, &_s29ActionStatementSuccessOutcomeV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64688);
  }
  return result;
}

unint64_t sub_23FD283F0()
{
  unint64_t result;

  result = qword_256F646B0;
  if (!qword_256F646B0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD81554, &_s29ActionStatementCreatedOutcomeV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F646B0);
  }
  return result;
}

unint64_t sub_23FD2842C()
{
  unint64_t result;

  result = qword_256F646C8;
  if (!qword_256F646C8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD81504, &_s29ActionStatementFailureOutcomeV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F646C8);
  }
  return result;
}

unint64_t sub_23FD28468()
{
  unint64_t result;

  result = qword_256F64708;
  if (!qword_256F64708)
  {
    result = MEMORY[0x2426797E8](&unk_23FD814B4, &_s22ActionStatementOutcomeO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64708);
  }
  return result;
}

unint64_t sub_23FD284A4()
{
  unint64_t result;

  result = qword_256F64710;
  if (!qword_256F64710)
  {
    result = MEMORY[0x2426797E8](&unk_23FD81464, &_s22ActionStatementOutcomeO17FailureCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64710);
  }
  return result;
}

unint64_t sub_23FD284E0()
{
  unint64_t result;

  result = qword_256F64718;
  if (!qword_256F64718)
  {
    result = MEMORY[0x2426797E8](&unk_23FD81414, &_s22ActionStatementOutcomeO17SuccessCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64718);
  }
  return result;
}

unint64_t sub_23FD2851C()
{
  unint64_t result;

  result = qword_256F64720;
  if (!qword_256F64720)
  {
    result = MEMORY[0x2426797E8](&unk_23FD813C4, &_s22ActionStatementOutcomeO17CreatedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64720);
  }
  return result;
}

unint64_t sub_23FD28558()
{
  unint64_t result;

  result = qword_256F64760;
  if (!qword_256F64760)
  {
    result = MEMORY[0x2426797E8](&unk_23FD81374, &_s19EvaluatorVoteSourceO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64760);
  }
  return result;
}

unint64_t sub_23FD28594()
{
  unint64_t result;

  result = qword_256F64768;
  if (!qword_256F64768)
  {
    result = MEMORY[0x2426797E8](&unk_23FD81324, &_s19EvaluatorVoteSourceO28ActionConfirmationCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64768);
  }
  return result;
}

unint64_t sub_23FD285D0()
{
  unint64_t result;

  result = qword_256F64770;
  if (!qword_256F64770)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7AE9C, &_s18ConfirmationResultON);
    atomic_store(result, (unint64_t *)&qword_256F64770);
  }
  return result;
}

unint64_t sub_23FD2860C()
{
  unint64_t result;

  result = qword_256F64778;
  if (!qword_256F64778)
  {
    result = MEMORY[0x2426797E8](&unk_23FD812D4, &_s19EvaluatorVoteSourceO25ActionExecutionCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64778);
  }
  return result;
}

unint64_t sub_23FD28648()
{
  unint64_t result;

  result = qword_256F647A0;
  if (!qword_256F647A0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD7AE74, &_s18ConfirmationResultON);
    atomic_store(result, (unint64_t *)&qword_256F647A0);
  }
  return result;
}

unint64_t sub_23FD28684()
{
  unint64_t result;

  result = qword_256F647E0;
  if (!qword_256F647E0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD81284, &_s21ActionExecutionResultO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F647E0);
  }
  return result;
}

unint64_t sub_23FD286C0()
{
  unint64_t result;

  result = qword_256F647E8;
  if (!qword_256F647E8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD81234, &_s21ActionExecutionResultO18CanceledCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F647E8);
  }
  return result;
}

unint64_t sub_23FD286FC()
{
  unint64_t result;

  result = qword_256F647F0;
  if (!qword_256F647F0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD811E4, &_s21ActionExecutionResultO25CriticalFailureCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F647F0);
  }
  return result;
}

unint64_t sub_23FD28738()
{
  unint64_t result;

  result = qword_256F647F8;
  if (!qword_256F647F8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD81194, &_s21ActionExecutionResultO25ExecutionFailedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F647F8);
  }
  return result;
}

unint64_t sub_23FD28774()
{
  unint64_t result;

  result = qword_256F64800;
  if (!qword_256F64800)
  {
    result = MEMORY[0x2426797E8](&unk_23FD81144, &_s21ActionExecutionResultO23DidNotExecuteCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64800);
  }
  return result;
}

unint64_t sub_23FD287B0()
{
  unint64_t result;

  result = qword_256F64808;
  if (!qword_256F64808)
  {
    result = MEMORY[0x2426797E8](&unk_23FD810F4, &_s21ActionExecutionResultO31CompletedSuccessfullyCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64808);
  }
  return result;
}

uint64_t _s21ActionExecutionResultO10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23FD28838 + 4 * byte_23FD7FFD5[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23FD2886C + 4 * byte_23FD7FFD0[v4]))();
}

uint64_t sub_23FD2886C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23FD28874(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23FD2887CLL);
  return result;
}

uint64_t sub_23FD28888(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23FD28890);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23FD28894(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23FD2889C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s21ActionExecutionResultO10CodingKeysOMa()
{
  return &_s21ActionExecutionResultO10CodingKeysON;
}

ValueMetadata *_s21ActionExecutionResultO31CompletedSuccessfullyCodingKeysOMa()
{
  return &_s21ActionExecutionResultO31CompletedSuccessfullyCodingKeysON;
}

ValueMetadata *_s21ActionExecutionResultO23DidNotExecuteCodingKeysOMa()
{
  return &_s21ActionExecutionResultO23DidNotExecuteCodingKeysON;
}

ValueMetadata *_s21ActionExecutionResultO25ExecutionFailedCodingKeysOMa()
{
  return &_s21ActionExecutionResultO25ExecutionFailedCodingKeysON;
}

ValueMetadata *_s21ActionExecutionResultO25CriticalFailureCodingKeysOMa()
{
  return &_s21ActionExecutionResultO25CriticalFailureCodingKeysON;
}

ValueMetadata *_s21ActionExecutionResultO18CanceledCodingKeysOMa()
{
  return &_s21ActionExecutionResultO18CanceledCodingKeysON;
}

ValueMetadata *_s19EvaluatorVoteSourceO10CodingKeysOMa()
{
  return &_s19EvaluatorVoteSourceO10CodingKeysON;
}

ValueMetadata *_s19EvaluatorVoteSourceO25ActionExecutionCodingKeysOMa()
{
  return &_s19EvaluatorVoteSourceO25ActionExecutionCodingKeysON;
}

ValueMetadata *_s19EvaluatorVoteSourceO28ActionConfirmationCodingKeysOMa()
{
  return &_s19EvaluatorVoteSourceO28ActionConfirmationCodingKeysON;
}

uint64_t _s22ActionStatementOutcomeO10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23FD2898C + 4 * byte_23FD7FFDF[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23FD289C0 + 4 * byte_23FD7FFDA[v4]))();
}

uint64_t sub_23FD289C0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23FD289C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23FD289D0);
  return result;
}

uint64_t sub_23FD289DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23FD289E4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23FD289E8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23FD289F0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s22ActionStatementOutcomeO10CodingKeysOMa()
{
  return &_s22ActionStatementOutcomeO10CodingKeysON;
}

ValueMetadata *_s22ActionStatementOutcomeO17CreatedCodingKeysOMa()
{
  return &_s22ActionStatementOutcomeO17CreatedCodingKeysON;
}

ValueMetadata *_s22ActionStatementOutcomeO17SuccessCodingKeysOMa()
{
  return &_s22ActionStatementOutcomeO17SuccessCodingKeysON;
}

ValueMetadata *_s22ActionStatementOutcomeO17FailureCodingKeysOMa()
{
  return &_s22ActionStatementOutcomeO17FailureCodingKeysON;
}

ValueMetadata *_s29ActionStatementFailureOutcomeV10CodingKeysOMa()
{
  return &_s29ActionStatementFailureOutcomeV10CodingKeysON;
}

uint64_t _s21ActionExecutionResultO31CompletedSuccessfullyCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23FD28A8C + 4 * byte_23FD7FFE4[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23FD28AAC + 4 * byte_23FD7FFE9[v4]))();
}

_BYTE *sub_23FD28A8C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23FD28AAC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23FD28AB4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23FD28ABC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23FD28AC4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23FD28ACC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s29ActionStatementCreatedOutcomeV10CodingKeysOMa()
{
  return &_s29ActionStatementCreatedOutcomeV10CodingKeysON;
}

uint64_t _s21ActionExecutionResultO25CriticalFailureCodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23FD28B34 + 4 * byte_23FD7FFF3[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23FD28B68 + 4 * byte_23FD7FFEE[v4]))();
}

uint64_t sub_23FD28B68(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23FD28B70(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23FD28B78);
  return result;
}

uint64_t sub_23FD28B84(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23FD28B8CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23FD28B90(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23FD28B98(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s29ActionStatementSuccessOutcomeV10CodingKeysOMa()
{
  return &_s29ActionStatementSuccessOutcomeV10CodingKeysON;
}

unint64_t sub_23FD28BB8()
{
  unint64_t result;

  result = qword_256F64840;
  if (!qword_256F64840)
  {
    result = MEMORY[0x2426797E8](&unk_23FD80604, &_s29ActionStatementSuccessOutcomeV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64840);
  }
  return result;
}

unint64_t sub_23FD28BF8()
{
  unint64_t result;

  result = qword_256F64848;
  if (!qword_256F64848)
  {
    result = MEMORY[0x2426797E8](&unk_23FD806BC, &_s29ActionStatementCreatedOutcomeV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64848);
  }
  return result;
}

unint64_t sub_23FD28C38()
{
  unint64_t result;

  result = qword_256F64850;
  if (!qword_256F64850)
  {
    result = MEMORY[0x2426797E8](&unk_23FD80774, &_s29ActionStatementFailureOutcomeV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64850);
  }
  return result;
}

unint64_t sub_23FD28C78()
{
  unint64_t result;

  result = qword_256F64858;
  if (!qword_256F64858)
  {
    result = MEMORY[0x2426797E8](&unk_23FD8082C, &_s22ActionStatementOutcomeO17FailureCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64858);
  }
  return result;
}

unint64_t sub_23FD28CB8()
{
  unint64_t result;

  result = qword_256F64860;
  if (!qword_256F64860)
  {
    result = MEMORY[0x2426797E8](&unk_23FD808E4, &_s22ActionStatementOutcomeO17SuccessCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64860);
  }
  return result;
}

unint64_t sub_23FD28CF8()
{
  unint64_t result;

  result = qword_256F64868;
  if (!qword_256F64868)
  {
    result = MEMORY[0x2426797E8](&unk_23FD8099C, &_s22ActionStatementOutcomeO17CreatedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64868);
  }
  return result;
}

unint64_t sub_23FD28D38()
{
  unint64_t result;

  result = qword_256F64870;
  if (!qword_256F64870)
  {
    result = MEMORY[0x2426797E8](&unk_23FD80A54, &_s22ActionStatementOutcomeO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64870);
  }
  return result;
}

unint64_t sub_23FD28D78()
{
  unint64_t result;

  result = qword_256F64878;
  if (!qword_256F64878)
  {
    result = MEMORY[0x2426797E8](&unk_23FD80B0C, &_s19EvaluatorVoteSourceO28ActionConfirmationCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64878);
  }
  return result;
}

unint64_t sub_23FD28DB8()
{
  unint64_t result;

  result = qword_256F64880;
  if (!qword_256F64880)
  {
    result = MEMORY[0x2426797E8](&unk_23FD80BC4, &_s19EvaluatorVoteSourceO25ActionExecutionCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64880);
  }
  return result;
}

unint64_t sub_23FD28DF8()
{
  unint64_t result;

  result = qword_256F64888;
  if (!qword_256F64888)
  {
    result = MEMORY[0x2426797E8](&unk_23FD80C7C, &_s19EvaluatorVoteSourceO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64888);
  }
  return result;
}

unint64_t sub_23FD28E38()
{
  unint64_t result;

  result = qword_256F64890;
  if (!qword_256F64890)
  {
    result = MEMORY[0x2426797E8](&unk_23FD80D34, &_s21ActionExecutionResultO18CanceledCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64890);
  }
  return result;
}

unint64_t sub_23FD28E78()
{
  unint64_t result;

  result = qword_256F64898;
  if (!qword_256F64898)
  {
    result = MEMORY[0x2426797E8](&unk_23FD80DEC, &_s21ActionExecutionResultO25CriticalFailureCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64898);
  }
  return result;
}

unint64_t sub_23FD28EB8()
{
  unint64_t result;

  result = qword_256F648A0;
  if (!qword_256F648A0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD80EA4, &_s21ActionExecutionResultO25ExecutionFailedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F648A0);
  }
  return result;
}

unint64_t sub_23FD28EF8()
{
  unint64_t result;

  result = qword_256F648A8;
  if (!qword_256F648A8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD80F5C, &_s21ActionExecutionResultO23DidNotExecuteCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F648A8);
  }
  return result;
}

unint64_t sub_23FD28F38()
{
  unint64_t result;

  result = qword_256F648B0;
  if (!qword_256F648B0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD81014, &_s21ActionExecutionResultO31CompletedSuccessfullyCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F648B0);
  }
  return result;
}

unint64_t sub_23FD28F78()
{
  unint64_t result;

  result = qword_256F648B8;
  if (!qword_256F648B8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD810CC, &_s21ActionExecutionResultO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F648B8);
  }
  return result;
}

unint64_t sub_23FD28FB8()
{
  unint64_t result;

  result = qword_256F648C0;
  if (!qword_256F648C0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD80F84, &_s21ActionExecutionResultO31CompletedSuccessfullyCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F648C0);
  }
  return result;
}

unint64_t sub_23FD28FF8()
{
  unint64_t result;

  result = qword_256F648C8;
  if (!qword_256F648C8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD80FAC, &_s21ActionExecutionResultO31CompletedSuccessfullyCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F648C8);
  }
  return result;
}

unint64_t sub_23FD29038()
{
  unint64_t result;

  result = qword_256F648D0;
  if (!qword_256F648D0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD80ECC, &_s21ActionExecutionResultO23DidNotExecuteCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F648D0);
  }
  return result;
}

unint64_t sub_23FD29078()
{
  unint64_t result;

  result = qword_256F648D8;
  if (!qword_256F648D8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD80EF4, &_s21ActionExecutionResultO23DidNotExecuteCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F648D8);
  }
  return result;
}

unint64_t sub_23FD290B8()
{
  unint64_t result;

  result = qword_256F648E0;
  if (!qword_256F648E0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD80E14, &_s21ActionExecutionResultO25ExecutionFailedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F648E0);
  }
  return result;
}

unint64_t sub_23FD290F8()
{
  unint64_t result;

  result = qword_256F648E8;
  if (!qword_256F648E8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD80E3C, &_s21ActionExecutionResultO25ExecutionFailedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F648E8);
  }
  return result;
}

unint64_t sub_23FD29138()
{
  unint64_t result;

  result = qword_256F648F0;
  if (!qword_256F648F0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD80D5C, &_s21ActionExecutionResultO25CriticalFailureCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F648F0);
  }
  return result;
}

unint64_t sub_23FD29178()
{
  unint64_t result;

  result = qword_256F648F8;
  if (!qword_256F648F8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD80D84, &_s21ActionExecutionResultO25CriticalFailureCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F648F8);
  }
  return result;
}

unint64_t sub_23FD291B8()
{
  unint64_t result;

  result = qword_256F64900;
  if (!qword_256F64900)
  {
    result = MEMORY[0x2426797E8](&unk_23FD80CA4, &_s21ActionExecutionResultO18CanceledCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64900);
  }
  return result;
}

unint64_t sub_23FD291F8()
{
  unint64_t result;

  result = qword_256F64908;
  if (!qword_256F64908)
  {
    result = MEMORY[0x2426797E8](&unk_23FD80CCC, &_s21ActionExecutionResultO18CanceledCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64908);
  }
  return result;
}

unint64_t sub_23FD29238()
{
  unint64_t result;

  result = qword_256F64910;
  if (!qword_256F64910)
  {
    result = MEMORY[0x2426797E8](&unk_23FD8103C, &_s21ActionExecutionResultO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64910);
  }
  return result;
}

unint64_t sub_23FD29278()
{
  unint64_t result;

  result = qword_256F64918;
  if (!qword_256F64918)
  {
    result = MEMORY[0x2426797E8](&unk_23FD81064, &_s21ActionExecutionResultO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64918);
  }
  return result;
}

unint64_t sub_23FD292B8()
{
  unint64_t result;

  result = qword_256F64920;
  if (!qword_256F64920)
  {
    result = MEMORY[0x2426797E8](&unk_23FD80B34, &_s19EvaluatorVoteSourceO25ActionExecutionCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64920);
  }
  return result;
}

unint64_t sub_23FD292F8()
{
  unint64_t result;

  result = qword_256F64928;
  if (!qword_256F64928)
  {
    result = MEMORY[0x2426797E8](&unk_23FD80B5C, &_s19EvaluatorVoteSourceO25ActionExecutionCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64928);
  }
  return result;
}

unint64_t sub_23FD29338()
{
  unint64_t result;

  result = qword_256F64930;
  if (!qword_256F64930)
  {
    result = MEMORY[0x2426797E8](&unk_23FD80A7C, &_s19EvaluatorVoteSourceO28ActionConfirmationCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64930);
  }
  return result;
}

unint64_t sub_23FD29378()
{
  unint64_t result;

  result = qword_256F64938;
  if (!qword_256F64938)
  {
    result = MEMORY[0x2426797E8](&unk_23FD80AA4, &_s19EvaluatorVoteSourceO28ActionConfirmationCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64938);
  }
  return result;
}

unint64_t sub_23FD293B8()
{
  unint64_t result;

  result = qword_256F64940;
  if (!qword_256F64940)
  {
    result = MEMORY[0x2426797E8](&unk_23FD80BEC, &_s19EvaluatorVoteSourceO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64940);
  }
  return result;
}

unint64_t sub_23FD293F8()
{
  unint64_t result;

  result = qword_256F64948;
  if (!qword_256F64948)
  {
    result = MEMORY[0x2426797E8](&unk_23FD80C14, &_s19EvaluatorVoteSourceO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64948);
  }
  return result;
}

unint64_t sub_23FD29438()
{
  unint64_t result;

  result = qword_256F64950;
  if (!qword_256F64950)
  {
    result = MEMORY[0x2426797E8](&unk_23FD8090C, &_s22ActionStatementOutcomeO17CreatedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64950);
  }
  return result;
}

unint64_t sub_23FD29478()
{
  unint64_t result;

  result = qword_256F64958;
  if (!qword_256F64958)
  {
    result = MEMORY[0x2426797E8](&unk_23FD80934, &_s22ActionStatementOutcomeO17CreatedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64958);
  }
  return result;
}

unint64_t sub_23FD294B8()
{
  unint64_t result;

  result = qword_256F64960;
  if (!qword_256F64960)
  {
    result = MEMORY[0x2426797E8](&unk_23FD80854, &_s22ActionStatementOutcomeO17SuccessCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64960);
  }
  return result;
}

unint64_t sub_23FD294F8()
{
  unint64_t result;

  result = qword_256F64968;
  if (!qword_256F64968)
  {
    result = MEMORY[0x2426797E8](&unk_23FD8087C, &_s22ActionStatementOutcomeO17SuccessCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64968);
  }
  return result;
}

unint64_t sub_23FD29538()
{
  unint64_t result;

  result = qword_256F64970;
  if (!qword_256F64970)
  {
    result = MEMORY[0x2426797E8](&unk_23FD8079C, &_s22ActionStatementOutcomeO17FailureCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64970);
  }
  return result;
}

unint64_t sub_23FD29578()
{
  unint64_t result;

  result = qword_256F64978;
  if (!qword_256F64978)
  {
    result = MEMORY[0x2426797E8](&unk_23FD807C4, &_s22ActionStatementOutcomeO17FailureCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64978);
  }
  return result;
}

unint64_t sub_23FD295B8()
{
  unint64_t result;

  result = qword_256F64980;
  if (!qword_256F64980)
  {
    result = MEMORY[0x2426797E8](&unk_23FD809C4, &_s22ActionStatementOutcomeO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64980);
  }
  return result;
}

unint64_t sub_23FD295F8()
{
  unint64_t result;

  result = qword_256F64988;
  if (!qword_256F64988)
  {
    result = MEMORY[0x2426797E8](&unk_23FD809EC, &_s22ActionStatementOutcomeO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64988);
  }
  return result;
}

unint64_t sub_23FD29638()
{
  unint64_t result;

  result = qword_256F64990;
  if (!qword_256F64990)
  {
    result = MEMORY[0x2426797E8](&unk_23FD806E4, &_s29ActionStatementFailureOutcomeV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64990);
  }
  return result;
}

unint64_t sub_23FD29678()
{
  unint64_t result;

  result = qword_256F64998;
  if (!qword_256F64998)
  {
    result = MEMORY[0x2426797E8](&unk_23FD8070C, &_s29ActionStatementFailureOutcomeV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64998);
  }
  return result;
}

unint64_t sub_23FD296B8()
{
  unint64_t result;

  result = qword_256F649A0;
  if (!qword_256F649A0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD8062C, &_s29ActionStatementCreatedOutcomeV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F649A0);
  }
  return result;
}

unint64_t sub_23FD296F8()
{
  unint64_t result;

  result = qword_256F649A8;
  if (!qword_256F649A8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD80654, &_s29ActionStatementCreatedOutcomeV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F649A8);
  }
  return result;
}

unint64_t sub_23FD29738()
{
  unint64_t result;

  result = qword_256F649B0;
  if (!qword_256F649B0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD80574, &_s29ActionStatementSuccessOutcomeV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F649B0);
  }
  return result;
}

unint64_t sub_23FD29778()
{
  unint64_t result;

  result = qword_256F649B8;
  if (!qword_256F649B8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD8059C, &_s29ActionStatementSuccessOutcomeV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F649B8);
  }
  return result;
}

uint64_t sub_23FD297C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v2, v1);
}

uint64_t sub_23FD297D0()
{
  return sub_23FD75290();
}

uint64_t sub_23FD297E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v2, v1);
}

uint64_t sub_23FD297F0()
{
  return swift_getEnumCaseMultiPayload();
}

void sub_23FD297F8(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_23FC5806C(a1, v1);
}

uint64_t sub_23FD29800()
{
  uint64_t v0;
  uint64_t v1;

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v0, 1, v1);
}

uint64_t sub_23FD29820()
{
  return sub_23FD752D8();
}

uint64_t sub_23FD29844()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_23FD2984C()
{
  return sub_23FD7532C();
}

uint64_t sub_23FD2986C@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 136) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return sub_23FD71474();
}

uint64_t sub_23FD2988C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 152) + 32))(v0 + *(int *)(v1 + 20), v3, v2);
}

uint64_t sub_23FD298A8()
{
  return sub_23FD752D8();
}

uint64_t sub_23FD298C4()
{
  return sub_23FD75290();
}

uint64_t sub_23FD298E0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 104) = v0;
  return sub_23FD754B8();
}

_QWORD *sub_23FD298FC()
{
  _QWORD *v0;
  uint64_t v1;

  return sub_23FBFDE40(v0, v1);
}

void sub_23FD29918(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23FC0F380(a1, a2, v2);
}

uint64_t sub_23FD29920()
{
  return _s21ActionExecutionResultOMa(0);
}

uint64_t sub_23FD2993C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 88) = v0;
  return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(v0 + 32))(v1, *(_QWORD *)(v2 - 120), *(_QWORD *)(v2 - 112));
}

void sub_23FD29954(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 272) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_23FD29974()
{
  return _s29ActionStatementSuccessOutcomeVMa(0);
}

uint64_t sub_23FD2997C()
{
  return sub_23FD75290();
}

uint64_t sub_23FD29994()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v1);
  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 88) + 8))(v0, *(_QWORD *)(v2 - 112));
}

void sub_23FD299B8(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v3)(uint64_t);

  sub_23FBFEE2C(a1, v3, a3);
}

uint64_t sub_23FD299C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 128) + 8))(v0, v1);
}

uint64_t sub_23FD299D4()
{
  return sub_23FD752F0();
}

uint64_t sub_23FD299E0()
{
  return sub_23FD752D8();
}

uint64_t sub_23FD299F4()
{
  uint64_t v0;

  return v0;
}

void sub_23FD29A00()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 0;
}

_QWORD *sub_23FD29A28()
{
  _QWORD *v0;
  uint64_t v1;

  return sub_23FBFDE40(v0, v1);
}

uint64_t sub_23FD29A44()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 1;
  return 0;
}

void sub_23FD29A5C()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);
  uint64_t v2;

  sub_23FCFCBC4(v0, *(_QWORD *)(v2 - 144), v1);
}

void sub_23FD29A6C(uint64_t a1)
{
  uint64_t *v1;

  sub_23FC584B0(a1, v1);
}

uint64_t sub_23FD29A74()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FD29A84()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FD29A90()
{
  return _s29ActionStatementFailureOutcomeVMa(0);
}

void sub_23FD29A98()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);
  uint64_t v2;

  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v2);
  sub_23FC5806C(v0, v1);
}

uint64_t sub_23FD29AB4()
{
  return swift_getEnumCaseMultiPayload();
}

void sub_23FD29ABC(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_23FC5806C(v2, a2);
}

uint64_t sub_23FD29AC4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FD29AD0(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = result;
  return result;
}

uint64_t sub_23FD29AE4(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 112) = result;
  return result;
}

uint64_t sub_23FD29AF8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 88) = v1;
  *(_QWORD *)(v2 - 144) = a1;
  return 0;
}

unint64_t sub_23FD29B0C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 1;
  return sub_23FD28594();
}

unint64_t sub_23FD29B18()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 70) = 1;
  return sub_23FD28774();
}

unint64_t sub_23FD29B24()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 1;
  return sub_23FD284E0();
}

void sub_23FD29B30(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_23FC12E68(a1, v3, a3);
}

uint64_t sub_23FD29B38()
{
  return sub_23FD752A8();
}

uint64_t sub_23FD29B40()
{
  return sub_23FD752D8();
}

void sub_23FD29B48(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  sub_23FCFCBC4(v3, v4, a3);
}

void sub_23FD29B54(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_23FC0F380(a1, a2, v2);
}

unint64_t sub_23FD29B5C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 4;
  return sub_23FD286C0();
}

void sub_23FD29B68(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_23FC5806C(v2, a2);
}

unint64_t sub_23FD29B70()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 3;
  return sub_23FD286FC();
}

unint64_t sub_23FD29B7C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 2;
  return sub_23FD284A4();
}

unint64_t sub_23FD29B88()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 69) = 2;
  return sub_23FD28738();
}

uint64_t sub_23FD29BA8()
{
  return sub_23FD752FC();
}

uint64_t sub_23FD29BC0()
{
  return sub_23FD752D8();
}

uint64_t sub_23FD29BCC()
{
  return _s29ActionStatementSuccessOutcomeVMa(0);
}

uint64_t sub_23FD29BD8()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FD29C00(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_23FD29C44(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23FD29CB0(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23FD29CFC(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_23FD29D3C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void _s16EvaluationResultVMa()
{
  sub_23FC7A748();
}

uint64_t *sub_23FD29D88(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23FD73E08();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = *(_OWORD *)((char *)a2 + v8 + 24);
    *(_OWORD *)((char *)a1 + v8 + 24) = v9;
    (**(void (***)(void))(v9 - 8))();
    v10 = a3[6];
    v11 = *(_OWORD *)((char *)a2 + v10 + 24);
    *(_OWORD *)((char *)a1 + v10 + 24) = v11;
    (**(void (***)(void))(v11 - 8))();
    v12 = a3[7];
    v13 = *(_OWORD *)((char *)a2 + v12 + 24);
    *(_OWORD *)((char *)a1 + v12 + 24) = v13;
    (**(void (***)(void))(v13 - 8))();
  }
  return a1;
}

uint64_t sub_23FD29E70(uint64_t a1, int *a2)
{
  uint64_t v4;

  v4 = sub_23FD73E08();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(a1 + a2[5]);
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(a1 + a2[6]);
  return _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(a1 + a2[7]);
}

uint64_t sub_23FD29ECC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  __int128 v12;

  v6 = sub_23FD73E08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(_OWORD *)(a2 + v7 + 24);
  *(_OWORD *)(a1 + v7 + 24) = v8;
  (**(void (***)(void))(v8 - 8))();
  v9 = a3[6];
  v10 = *(_OWORD *)(a2 + v9 + 24);
  *(_OWORD *)(a1 + v9 + 24) = v10;
  (**(void (***)(void))(v10 - 8))();
  v11 = a3[7];
  v12 = *(_OWORD *)(a2 + v11 + 24);
  *(_OWORD *)(a1 + v11 + 24) = v12;
  (**(void (***)(void))(v12 - 8))();
  return a1;
}

uint64_t sub_23FD29F88(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;

  v6 = sub_23FD73E08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  sub_23FBFDB34((uint64_t *)(a1 + a3[5]), (uint64_t *)(a2 + a3[5]));
  sub_23FBFDB34((uint64_t *)(a1 + a3[6]), (uint64_t *)(a2 + a3[6]));
  sub_23FBFDB34((uint64_t *)(a1 + a3[7]), (uint64_t *)(a2 + a3[7]));
  return a1;
}

uint64_t sub_23FD2A008(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;

  v6 = sub_23FD73E08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)(v9 + 32) = *(_QWORD *)(v10 + 32);
  v11 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v11;
  v12 = a1 + v8;
  v13 = a2 + v8;
  *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
  v14 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v14;
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = *(_OWORD *)(v17 + 16);
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *(_OWORD *)(v16 + 16) = v18;
  *(_QWORD *)(v16 + 32) = *(_QWORD *)(v17 + 32);
  return a1;
}

uint64_t sub_23FD2A0A8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;

  v6 = sub_23FD73E08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(a1 + v7);
  v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(a1 + v11);
  v14 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v14;
  *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(a1 + v15);
  v18 = *(_OWORD *)(v17 + 16);
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *(_OWORD *)(v16 + 16) = v18;
  *(_QWORD *)(v16 + 32) = *(_QWORD *)(v17 + 32);
  return a1;
}

uint64_t sub_23FD2A16C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FD2A178(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = sub_23FC7E230();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 24);
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t sub_23FD2A1F0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FD2A1FC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = sub_23FC7E230();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  return result;
}

uint64_t _s19TranscriptRetrieverVMa()
{
  uint64_t result;

  result = qword_256F64A18;
  if (!qword_256F64A18)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23FD2A2A8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23FD73E08();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23FD2A31C(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_23FD2A4C8(a1, a2, a3, a4, (void (*)(uint64_t, _QWORD *, uint64_t))sub_23FD2D3D8);
}

uint64_t sub_23FD2A328@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t);
  uint64_t v21;
  __int128 v22;
  ValueMetadata *v23;
  _UNKNOWN **v24;

  v8 = sub_23FD74120();
  sub_23FC93130();
  MEMORY[0x24BDAC7A8](v9, v10);
  sub_23FC8FD1C();
  v11 = sub_23FC7E230();
  v21 = *(_QWORD *)(v11 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(a3, a1, v11);
  sub_23FD2F960();
  v12 = _s19TranscriptRetrieverVMa();
  sub_23FCF6D64();
  swift_bridgeObjectRelease();
  v13 = sub_23FD2F960();
  v14 = _s23PromptResponseRetrieverCMa();
  swift_allocObject();
  v15 = sub_23FCA3BEC(v13);
  v16 = (_QWORD *)(a3 + *(int *)(v12 + 24));
  v16[3] = v14;
  v16[4] = &off_25100FCE0;
  *v16 = v15;
  v17 = sub_23FD2F960();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, a2, v8);
  v18 = sub_23FCDF728(v17, v3);
  swift_bridgeObjectRelease();
  v19 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v19(v3, v8);
  v23 = &_s28StatementParameterResolutionVN;
  v24 = &off_2510119A8;
  *(_QWORD *)&v22 = v18;
  v19(a2, v8);
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(a1, v11);
  return sub_23FBFDE28(&v22, a3 + *(int *)(v12 + 28));
}

uint64_t sub_23FD2A4BC(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_23FD2A4C8(a1, a2, a3, a4, (void (*)(uint64_t, _QWORD *, uint64_t))sub_23FD2DDE0);
}

uint64_t sub_23FD2A4C8(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, _QWORD *, uint64_t))
{
  unsigned __int8 *v5;
  uint64_t v8;
  _QWORD *v9;

  v8 = *v5;
  v9 = sub_23FBFDE40(a2, a2[3]);
  return sub_23FD2EDE4(a1, (uint64_t)v9, v8, a5);
}

void sub_23FD2A518(char a1, char a2, uint64_t a3, uint64_t a4, char a5, char a6)
{
  char v6;

  if (a1 == a5 && a2 == a6)
  {
    sub_23FC975F4();
    if ((v6 & 1) != 0)
      sub_23FC971EC();
  }
}

void sub_23FD2A578(char a1, uint64_t a2, char a3)
{
  if (a1 == a3)
    sub_23FC975F4();
}

uint64_t sub_23FD2A598(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 1702129526 && a2 == 0xE400000000000000;
  if (v2 || (sub_23FD75380() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73656372756F73 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23FD75380();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23FD2A674(char a1)
{
  if ((a1 & 1) != 0)
    return 0x73656372756F73;
  else
    return 1702129526;
}

void sub_23FD2A6A4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  sub_23FCC2A5C();
  v3 = v2;
  sub_23FBFD684(&qword_256F64B88);
  sub_23FC93130();
  MEMORY[0x24BDAC7A8](v4, v5);
  sub_23FC12F34();
  sub_23FBFDE40(v3, v3[3]);
  sub_23FD2CBBC();
  sub_23FD754C4();
  sub_23FD2CCB8();
  sub_23FC06244();
  if (!v0)
  {
    sub_23FBFD684(&qword_256F64B40);
    sub_23FD2CC34(&qword_256F64B98, &qword_256F64BA0, (uint64_t)&unk_23FD80188, MEMORY[0x24BEE12A0]);
    sub_23FC06244();
  }
  sub_23FD2F9A8(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23FC06000();
}

uint64_t sub_23FD2A7CC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v6;

  v2 = sub_23FBFD684(&qword_256F64B28);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  sub_23FBFDE40(a1, a1[3]);
  sub_23FD2CBBC();
  sub_23FD2F92C();
  sub_23FD2CBF8();
  sub_23FD2F914();
  sub_23FBFD684(&qword_256F64B40);
  sub_23FD2CC34(&qword_256F64B48, &qword_256F64B50, (uint64_t)&unk_23FD801B0, MEMORY[0x24BEE12D0]);
  sub_23FD2F914();
  sub_23FD2F920(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  sub_23FCC2A9C();
  return v6;
}

uint64_t sub_23FD2A93C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x6E696174736261 && a2 == 0xE700000000000000;
  if (v2 || (sub_23FD75380() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6572756C696166 && a2 == 0xE700000000000000;
    if (v6 || (sub_23FD75380() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x73736563637573 && a2 == 0xE700000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_23FD75380();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_23FD2AA8C(char a1)
{
  return *(_QWORD *)&aAbstain_0[8 * a1];
}

void sub_23FD2AAA4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;

  sub_23FCC2A5C();
  v30 = v2;
  v4 = v3;
  v5 = sub_23FBFD684(&qword_256F64C80);
  v27 = *(_QWORD *)(v5 - 8);
  v28 = v5;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v6, v7);
  sub_23FCF2650(v8, v24);
  v9 = sub_23FBFD684(&qword_256F64C88);
  v25 = *(_QWORD *)(v9 - 8);
  v26 = v9;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v10, v11);
  sub_23FBFF180();
  v14 = v13 - v12;
  sub_23FBFD684(&qword_256F64C90);
  sub_23FD2F980();
  MEMORY[0x24BDAC7A8](v15, v16);
  v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = *(_QWORD *)(sub_23FBFD684(&qword_256F64C98) - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v19, v20);
  sub_23FC0603C();
  sub_23FBFDE40(v4, v4[3]);
  sub_23FD2F4CC();
  sub_23FD754C4();
  if (v30)
  {
    if (v30 == 1)
    {
      sub_23FD2F544();
      sub_23FCF2448();
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v14, v26);
    }
    else
    {
      sub_23FD2F9B4();
      sub_23FCF2448();
      v21 = sub_23FD1FE90();
      v23(v21, v22);
    }
  }
  else
  {
    sub_23FD2F580();
    sub_23FCF2448();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v18, v0);
  }
  sub_23FCF2820(v29);
  sub_23FC06000();
}

void sub_23FD2AC6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t);
  uint64_t v30;
  void (*v31)(uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  sub_23FCC2A5C();
  v4 = v3;
  v35 = sub_23FBFD684(&qword_256F64C40);
  v37 = *(_QWORD *)(v35 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v5, v6);
  sub_23FBFEFE0();
  v36 = v7;
  sub_23FBFD684(&qword_256F64C48);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v8, v9);
  sub_23FD1F95C(v10, v32);
  v34 = sub_23FBFD684(&qword_256F64C50);
  v11 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34, v12);
  sub_23FC0603C();
  v13 = sub_23FBFD684(&qword_256F64C58);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13, v15);
  sub_23FC12F34();
  sub_23FBFDE40(v4, v4[3]);
  sub_23FD2F4CC();
  sub_23FD754B8();
  if (v0)
    goto LABEL_11;
  v33 = v1;
  v38 = (uint64_t)v4;
  v16 = sub_23FD752E4();
  v17 = *(_QWORD *)(v16 + 16);
  if (!v17)
  {
LABEL_8:
    v25 = sub_23FD75134();
    sub_23FC5A704();
    v27 = v26;
    sub_23FBFD684(&qword_256F5D6C0);
    *v27 = &unk_251014C50;
    sub_23FD7529C();
    sub_23FCF2778();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v27, *MEMORY[0x24BEE26D0], v25);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v33, v13);
    v4 = (_QWORD *)v38;
LABEL_11:
    _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v4);
    goto LABEL_12;
  }
  v18 = v13;
  v19 = *(unsigned __int8 *)(v16 + 32);
  sub_23FC05ED0(1, v17, v16, v16 + 32, 0, (2 * v17) | 1);
  v21 = v20;
  v23 = v22;
  swift_bridgeObjectRelease();
  if (v21 != v23 >> 1)
  {
    v13 = v18;
    goto LABEL_8;
  }
  if (v19)
  {
    if (v19 == 1)
    {
      sub_23FD2F544();
      sub_23FCF270C();
      v24 = sub_23FD1FE90();
      v29(v24, v28);
    }
    else
    {
      sub_23FD2F9B4();
      sub_23FCF270C();
      (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v36, v35);
    }
  }
  else
  {
    sub_23FD2F580();
    sub_23FD75290();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v2, v34);
  }
  swift_unknownObjectRelease();
  v30 = sub_23FD2F994();
  v31(v30);
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v38);
LABEL_12:
  sub_23FC06000();
}

uint64_t sub_23FD2AFCC()
{
  char *v0;

  return sub_23FD2A674(*v0);
}

uint64_t sub_23FD2AFD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23FD2A598(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23FD2AFF8()
{
  sub_23FD2CBBC();
  return sub_23FD754DC();
}

uint64_t sub_23FD2B020()
{
  sub_23FD2CBBC();
  return sub_23FD754E8();
}

uint64_t sub_23FD2B048@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = sub_23FD2A7CC(a1);
  if (!v2)
  {
    *(_BYTE *)a2 = result;
    *(_QWORD *)(a2 + 8) = v5;
  }
  return result;
}

void sub_23FD2B074()
{
  sub_23FD2A6A4();
}

void sub_23FD2B090(uint64_t a1, char *a2)
{
  sub_23FD2A578(*(_BYTE *)a1, *(_QWORD *)(a1 + 8), *a2);
}

uint64_t sub_23FD2B0A8()
{
  sub_23FD2F580();
  return sub_23FD754DC();
}

uint64_t sub_23FD2B0D0()
{
  sub_23FD2F580();
  return sub_23FD754E8();
}

uint64_t sub_23FD2B0FC()
{
  char *v0;

  return sub_23FD2AA8C(*v0);
}

uint64_t sub_23FD2B104@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23FD2A93C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23FD2B128()
{
  sub_23FD2F4CC();
  return sub_23FD754DC();
}

uint64_t sub_23FD2B150()
{
  sub_23FD2F4CC();
  return sub_23FD754E8();
}

uint64_t sub_23FD2B178()
{
  sub_23FD2F544();
  return sub_23FD754DC();
}

uint64_t sub_23FD2B1A0()
{
  sub_23FD2F544();
  return sub_23FD754E8();
}

uint64_t sub_23FD2B1C8()
{
  sub_23FD2F508();
  return sub_23FD754DC();
}

uint64_t sub_23FD2B1F0()
{
  sub_23FD2F508();
  return sub_23FD754E8();
}

void sub_23FD2B218(_BYTE *a1@<X8>)
{
  uint64_t v1;
  char v3;

  sub_23FD2AC6C();
  if (!v1)
    *a1 = v3;
}

void sub_23FD2B240()
{
  sub_23FD2AAA4();
}

uint64_t sub_23FD2B258(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23FD2B294 + 4 * byte_23FD81610[a1]))(0x72506E6F69746361, 0xEC00000074706D6FLL);
}

uint64_t sub_23FD2B294()
{
  return 0x6465786966;
}

unint64_t sub_23FD2B2A8()
{
  return 0xD000000000000010;
}

uint64_t sub_23FD2B2C4()
{
  return 0x706D6F436B736174;
}

unint64_t sub_23FD2B2E8()
{
  return 0xD000000000000011;
}

uint64_t sub_23FD2B308(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v8;

  v2 = a1 == 0x72506E6F69746361 && a2 == 0xEC00000074706D6FLL;
  if (v2 || (sub_23FD75380() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6465786966 && a2 == 0xE500000000000000;
    if (v6 || (sub_23FD75380() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000010 && a2 == 0x800000023FD860F0 || (sub_23FD75380() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v7 = a1 == 0x706D6F436B736174 && a2 == 0xEE006E6F6974656CLL;
      if (v7 || (sub_23FD75380() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0xD000000000000011 && a2 == 0x800000023FD860D0)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        v8 = sub_23FD75380();
        swift_bridgeObjectRelease();
        if ((v8 & 1) != 0)
          return 4;
        else
          return 5;
      }
    }
  }
}

uint64_t sub_23FD2B544(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23FD2B580 + 4 * byte_23FD81615[a1]))(0x72506E6F69746361, 0xEC00000074706D6FLL);
}

uint64_t sub_23FD2B580()
{
  return 0x6465786966;
}

unint64_t sub_23FD2B594()
{
  return 0xD000000000000010;
}

uint64_t sub_23FD2B5B0()
{
  return 0x706D6F436B736174;
}

unint64_t sub_23FD2B5D4()
{
  return 0xD000000000000011;
}

void sub_23FD2B5F4()
{
  char v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  sub_23FCC2A5C();
  v17 = v0;
  v2 = v1;
  sub_23FBFD684(&qword_256F64B58);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v3, v4);
  sub_23FD1FAB0(v5, v16);
  sub_23FBFD684(&qword_256F64B60);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v6, v7);
  sub_23FBFEFE0();
  sub_23FBFD684(&qword_256F64B68);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v8, v9);
  sub_23FBFEFE0();
  sub_23FBFD684(&qword_256F64B70);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v10, v11);
  sub_23FBFF180();
  v12 = sub_23FBFD684(&qword_256F64B78);
  MEMORY[0x24BDAC7A8](v12, v13);
  sub_23FBFF180();
  sub_23FBFD684(&qword_256F64B80);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v14, v15);
  sub_23FC0603C();
  sub_23FBFDE40(v2, v2[3]);
  sub_23FD2CA54();
  sub_23FD754C4();
  __asm { BR              X10 }
}

void sub_23FD2B784()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v3 - 69) = 0;
  sub_23FD2CB80();
  sub_23FCF2448();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
  sub_23FCF2820(*(_QWORD *)(v3 - 88));
  sub_23FC06000();
}

void sub_23FD2B874()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_23FCC2A5C();
  v4 = v3;
  sub_23FBFD684(&qword_256F64AC8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v5, v6);
  sub_23FD1F95C(v7, v31);
  sub_23FBFD684(&qword_256F64AD0);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v8, v9);
  sub_23FCF2650(v10, v32);
  sub_23FBFD684(&qword_256F64AD8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v11, v12);
  sub_23FD1FAB0(v13, v33);
  sub_23FBFD684(&qword_256F64AE0);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v14, v15);
  sub_23FBFEFE0();
  v16 = sub_23FBFD684(&qword_256F64AE8);
  MEMORY[0x24BDAC7A8](v16, v17);
  sub_23FC8FD1C();
  v18 = sub_23FBFD684(&qword_256F64AF0);
  sub_23FC93130();
  MEMORY[0x24BDAC7A8](v19, v20);
  sub_23FC12F34();
  sub_23FBFDE40(v4, v4[3]);
  sub_23FD2CA54();
  sub_23FD754B8();
  if (!v0)
  {
    v34 = v1;
    v21 = sub_23FD752E4();
    v22 = *(_QWORD *)(v21 + 16);
    if (v22)
    {
      v23 = *(unsigned __int8 *)(v21 + 32);
      sub_23FC05ED0(1, v22, v21, v21 + 32, 0, (2 * v22) | 1);
      v25 = v24;
      v27 = v26;
      swift_bridgeObjectRelease();
      if (v25 == v27 >> 1)
        __asm { BR              X9 }
    }
    v28 = sub_23FD75134();
    sub_23FC5A704();
    v30 = v29;
    sub_23FBFD684(&qword_256F5D6C0);
    *v30 = &unk_2510149D0;
    sub_23FD7529C();
    sub_23FCF2778();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v28 - 8) + 104))(v30, *MEMORY[0x24BEE26D0], v28);
    swift_willThrow();
    sub_23FC06158();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v34, v18);
  }
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v4);
  sub_23FC06000();
}

void sub_23FD2BB74()
{
  uint64_t v0;

  sub_23FD2F974();
  sub_23FD2F900();
  if (!v0)
  {
    sub_23FD1FE90();
    JUMPOUT(0x23FD2BC54);
  }
  sub_23FC06158();
  sub_23FD2F944();
  JUMPOUT(0x23FD2BB5CLL);
}

void sub_23FD2BBA4()
{
  uint64_t v0;

  sub_23FD2F9C0();
  sub_23FD2F900();
  if (!v0)
    JUMPOUT(0x23FD2BBD0);
  sub_23FC06158();
  sub_23FD2F944();
  JUMPOUT(0x23FD2BB5CLL);
}

void sub_23FD2BBD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_23FD2F968();
  sub_23FD2F900();
  if (!v0)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 160) + 8))(v1, *(_QWORD *)(v2 - 152));
    sub_23FC06158();
    sub_23FD2F944();
    _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(*(_QWORD *)(v2 - 96));
    JUMPOUT(0x23FD2BB60);
  }
  sub_23FC06158();
  sub_23FD2F944();
  JUMPOUT(0x23FD2BB5CLL);
}

void sub_23FD2BC0C()
{
  uint64_t v0;

  sub_23FD2F954();
  sub_23FD2F900();
  if (v0)
    JUMPOUT(0x23FD2BC34);
  JUMPOUT(0x23FD2BC54);
}

uint64_t sub_23FD2BC70()
{
  sub_23FD2CB80();
  return sub_23FD754DC();
}

uint64_t sub_23FD2BC98()
{
  sub_23FD2CB80();
  return sub_23FD754E8();
}

void sub_23FD2BCC0()
{
  sub_23FC1E114();
}

uint64_t sub_23FD2BCD8()
{
  unsigned __int8 *v0;

  return sub_23FD2B544(*v0);
}

uint64_t sub_23FD2BCE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23FD2B308(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23FD2BD04()
{
  sub_23FD2CA54();
  return sub_23FD754DC();
}

uint64_t sub_23FD2BD2C()
{
  sub_23FD2CA54();
  return sub_23FD754E8();
}

uint64_t sub_23FD2BD54()
{
  sub_23FD2CB44();
  return sub_23FD754DC();
}

uint64_t sub_23FD2BD7C()
{
  sub_23FD2CB44();
  return sub_23FD754E8();
}

uint64_t sub_23FD2BDA4()
{
  sub_23FD2CB08();
  return sub_23FD754DC();
}

uint64_t sub_23FD2BDCC()
{
  sub_23FD2CB08();
  return sub_23FD754E8();
}

uint64_t sub_23FD2BDF4()
{
  sub_23FD2CACC();
  return sub_23FD754DC();
}

uint64_t sub_23FD2BE1C()
{
  sub_23FD2CACC();
  return sub_23FD754E8();
}

uint64_t sub_23FD2BE44()
{
  sub_23FD2CA90();
  return sub_23FD754DC();
}

uint64_t sub_23FD2BE6C()
{
  sub_23FD2CA90();
  return sub_23FD754E8();
}

void sub_23FD2BE94(_BYTE *a1@<X8>)
{
  uint64_t v1;
  char v3;

  sub_23FD2B874();
  if (!v1)
    *a1 = v3;
}

void sub_23FD2BEBC()
{
  sub_23FD2B5F4();
}

uint64_t sub_23FD2BED4()
{
  unsigned __int8 *v0;

  return sub_23FD2B258(*v0);
}

uint64_t sub_23FD2BEDC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x6F7461756C617665 && a2 == 0xED00006570795472;
  if (v2 || (sub_23FD75380() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x656D6F6374756FLL && a2 == 0xE700000000000000;
    if (v6 || (sub_23FD75380() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x75626972746E6F63 && a2 == 0xEC00000073726F74)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_23FD75380();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_23FD2C064(char a1)
{
  if (!a1)
    return 0x6F7461756C617665;
  if (a1 == 1)
    return 0x656D6F6374756FLL;
  return 0x75626972746E6F63;
}

void sub_23FD2C0D0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  sub_23FCC2A5C();
  v3 = v2;
  sub_23FBFD684(&qword_256F64A88);
  sub_23FD2F980();
  MEMORY[0x24BDAC7A8](v4, v5);
  sub_23FC12F34();
  sub_23FBFDE40(v3, v3[3]);
  sub_23FD2C52C();
  sub_23FD754C4();
  sub_23FD2C5E0();
  sub_23FC06244();
  if (!v0)
  {
    sub_23FD2C61C();
    sub_23FC06244();
    sub_23FBFD684(&qword_256F64A78);
    sub_23FD2C658(&qword_256F64AA0, (uint64_t (*)(void))sub_23FD1E1EC, MEMORY[0x24BEE12A0]);
    sub_23FC06244();
  }
  sub_23FD2F9A8(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23FC06000();
}

uint64_t sub_23FD2C234()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  unsigned __int8 v10;

  sub_23FCC2A5C();
  v3 = v2;
  sub_23FBFD684(&qword_256F64A58);
  sub_23FC93130();
  MEMORY[0x24BDAC7A8](v4, v5);
  v6 = v3[4];
  sub_23FBFDE40(v3, v3[3]);
  sub_23FD2C52C();
  sub_23FD2F92C();
  if (v0)
  {
    v7 = 0;
  }
  else
  {
    sub_23FD2C568();
    sub_23FD2F914();
    v6 = v10;
    sub_23FD2C5A4();
    sub_23FD2F914();
    sub_23FBFD684(&qword_256F64A78);
    v9 = sub_23FD2C658(&qword_256F64A80, (uint64_t (*)(void))sub_23FD1E324, MEMORY[0x24BEE12D0]);
    swift_bridgeObjectRetain();
    sub_23FD2F914();
    sub_23FD2F920(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    if (!v9)
    {
      swift_bridgeObjectRetain();
      sub_23FCC2A9C();
      swift_bridgeObjectRelease();
      sub_23FC5A648();
      return v6;
    }
    sub_23FC5A648();
    v7 = 1;
  }
  sub_23FCC2A9C();
  if (v7)
    sub_23FC5A648();
  return v6;
}

void sub_23FD2C40C()
{
  sub_23FD7544C();
  sub_23FD75458();
  sub_23FD75470();
  sub_23FC06054();
}

uint64_t sub_23FD2C444()
{
  char *v0;

  return sub_23FD2C064(*v0);
}

uint64_t sub_23FD2C44C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23FD2BEDC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23FD2C470()
{
  sub_23FD2C52C();
  return sub_23FD754DC();
}

uint64_t sub_23FD2C498()
{
  sub_23FD2C52C();
  return sub_23FD754E8();
}

uint64_t sub_23FD2C4C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  char v4;
  uint64_t v5;
  uint64_t v6;

  result = sub_23FD2C234();
  if (!v1)
  {
    *(_BYTE *)a1 = result;
    *(_BYTE *)(a1 + 8) = v4;
    *(_QWORD *)(a1 + 16) = v5;
    *(_QWORD *)(a1 + 24) = v6;
  }
  return result;
}

void sub_23FD2C4F0()
{
  sub_23FD2C0D0();
}

void sub_23FD2C510(uint64_t a1, char *a2)
{
  sub_23FD2A518(*(_BYTE *)a1, *(_BYTE *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *a2, a2[8]);
}

unint64_t sub_23FD2C52C()
{
  unint64_t result;

  result = qword_256F64A60;
  if (!qword_256F64A60)
  {
    result = MEMORY[0x2426797E8](&unk_23FD81A1C, &_s16EvaluationResultV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64A60);
  }
  return result;
}

unint64_t sub_23FD2C568()
{
  unint64_t result;

  result = qword_256F64A68;
  if (!qword_256F64A68)
  {
    result = MEMORY[0x2426797E8](&unk_23FD819F4, &unk_2510149D0);
    atomic_store(result, (unint64_t *)&qword_256F64A68);
  }
  return result;
}

unint64_t sub_23FD2C5A4()
{
  unint64_t result;

  result = qword_256F64A70;
  if (!qword_256F64A70)
  {
    result = MEMORY[0x2426797E8](&unk_23FD819CC, &unk_251014938);
    atomic_store(result, (unint64_t *)&qword_256F64A70);
  }
  return result;
}

unint64_t sub_23FD2C5E0()
{
  unint64_t result;

  result = qword_256F64A90;
  if (!qword_256F64A90)
  {
    result = MEMORY[0x2426797E8](&unk_23FD819A4, &unk_2510149D0);
    atomic_store(result, (unint64_t *)&qword_256F64A90);
  }
  return result;
}

unint64_t sub_23FD2C61C()
{
  unint64_t result;

  result = qword_256F64A98;
  if (!qword_256F64A98)
  {
    result = MEMORY[0x2426797E8](&unk_23FD8197C, &unk_251014938);
    atomic_store(result, (unint64_t *)&qword_256F64A98);
  }
  return result;
}

uint64_t sub_23FD2C658(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = sub_23FBFEDE8(&qword_256F64A78);
    v8 = a2();
    result = MEMORY[0x2426797E8](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

void sub_23FD2C6C4(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_bridgeObjectRetain();
  sub_23FBFF0A0();
}

uint64_t sub_23FD2C6FC(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t sub_23FD2C750(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t sub_23FD2C794(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 17))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_23FD2C7D4(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 17) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void _s10FixedVoterVMa()
{
  sub_23FC7A748();
}

ValueMetadata *_s16EvaluationResultV10CodingKeysOMa()
{
  return &_s16EvaluationResultV10CodingKeysON;
}

uint64_t _s17WaterfallMediatorVwCP(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s17WaterfallMediatorVwca(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s17WaterfallMediatorVwta(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

void _s13VotingOutcomeVMa()
{
  sub_23FC7A748();
}

void _s13EvaluatorTypeOMa()
{
  sub_23FC7A748();
}

unint64_t sub_23FD2C904()
{
  unint64_t result;

  result = qword_256F64AA8;
  if (!qword_256F64AA8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD817EC, &unk_2510149D0);
    atomic_store(result, (unint64_t *)&qword_256F64AA8);
  }
  return result;
}

unint64_t sub_23FD2C944()
{
  unint64_t result;

  result = qword_256F64AB0;
  if (!qword_256F64AB0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD81934, &_s16EvaluationResultV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64AB0);
  }
  return result;
}

uint64_t sub_23FD2C980(uint64_t a1, _QWORD *a2)
{
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = *((_QWORD *)v2 + 1);
  v5 = v2[16];
  v6 = *v2;
  v7 = sub_23FBFDE40(a2, a2[3]);
  return sub_23FD2ED08(a1, (uint64_t)v7, v6, v4, v5);
}

unint64_t sub_23FD2C9D8()
{
  unint64_t result;

  result = qword_256F64AB8;
  if (!qword_256F64AB8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD818A4, &_s16EvaluationResultV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64AB8);
  }
  return result;
}

unint64_t sub_23FD2CA18()
{
  unint64_t result;

  result = qword_256F64AC0;
  if (!qword_256F64AC0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD818CC, &_s16EvaluationResultV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64AC0);
  }
  return result;
}

unint64_t sub_23FD2CA54()
{
  unint64_t result;

  result = qword_256F64AF8;
  if (!qword_256F64AF8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD820AC, &_s13EvaluatorTypeO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64AF8);
  }
  return result;
}

unint64_t sub_23FD2CA90()
{
  unint64_t result;

  result = qword_256F64B00;
  if (!qword_256F64B00)
  {
    result = MEMORY[0x2426797E8](&unk_23FD8205C, &_s13EvaluatorTypeO27WaterfallMediatorCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64B00);
  }
  return result;
}

unint64_t sub_23FD2CACC()
{
  unint64_t result;

  result = qword_256F64B08;
  if (!qword_256F64B08)
  {
    result = MEMORY[0x2426797E8](&unk_23FD8200C, &_s13EvaluatorTypeO24TaskCompletionCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64B08);
  }
  return result;
}

unint64_t sub_23FD2CB08()
{
  unint64_t result;

  result = qword_256F64B10;
  if (!qword_256F64B10)
  {
    result = MEMORY[0x2426797E8](&unk_23FD81FBC, &_s13EvaluatorTypeO26MajorityMediatorCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64B10);
  }
  return result;
}

unint64_t sub_23FD2CB44()
{
  unint64_t result;

  result = qword_256F64B18;
  if (!qword_256F64B18)
  {
    result = MEMORY[0x2426797E8](&unk_23FD81F6C, &_s13EvaluatorTypeO15FixedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64B18);
  }
  return result;
}

unint64_t sub_23FD2CB80()
{
  unint64_t result;

  result = qword_256F64B20;
  if (!qword_256F64B20)
  {
    result = MEMORY[0x2426797E8](&unk_23FD81F1C, &_s13EvaluatorTypeO22ActionPromptCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64B20);
  }
  return result;
}

unint64_t sub_23FD2CBBC()
{
  unint64_t result;

  result = qword_256F64B30;
  if (!qword_256F64B30)
  {
    result = MEMORY[0x2426797E8](&unk_23FD81ECC, &_s13VotingOutcomeV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64B30);
  }
  return result;
}

unint64_t sub_23FD2CBF8()
{
  unint64_t result;

  result = qword_256F64B38;
  if (!qword_256F64B38)
  {
    result = MEMORY[0x2426797E8](&unk_23FD81EA4, &unk_251014C50);
    atomic_store(result, (unint64_t *)&qword_256F64B38);
  }
  return result;
}

uint64_t sub_23FD2CC34(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = *a1;
  if (!result)
  {
    v9 = sub_23FBFEDE8(&qword_256F64B40);
    sub_23FBFEE2C(a2, _s19EvaluatorVoteSourceOMa, a3);
    v11 = v10;
    result = MEMORY[0x2426797E8](a4, v9, &v11);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23FD2CCB8()
{
  unint64_t result;

  result = qword_256F64B90;
  if (!qword_256F64B90)
  {
    result = MEMORY[0x2426797E8](&unk_23FD81E7C, &unk_251014C50);
    atomic_store(result, (unint64_t *)&qword_256F64B90);
  }
  return result;
}

uint64_t sub_23FD2CCF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t *v32;
  _QWORD *v33;
  char *v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE *v47;
  uint64_t v48;
  char *v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71[3];
  uint64_t v72;
  _UNKNOWN **v73;

  v63 = sub_23FD71474();
  v68 = *(_QWORD *)(v63 - 8);
  MEMORY[0x24BDAC7A8](v63, v4);
  v67 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23FD72BF0();
  v65 = *(_QWORD *)(v6 - 8);
  v66 = v6;
  v8 = MEMORY[0x24BDAC7A8](v6, v7);
  v62 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8, v10);
  v64 = (char *)&v60 - v11;
  v12 = _s20ActionStepEvaluationVMa(0);
  MEMORY[0x24BDAC7A8](v12, v13);
  v61 = (uint64_t)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23FBFD684(&qword_256F5FD10);
  MEMORY[0x24BDAC7A8](v15, v16);
  v18 = (char *)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = _s23StatementStepEvaluationOMa(0);
  v21 = MEMORY[0x24BDAC7A8](v19, v20);
  v23 = (char *)&v60 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v21, v24);
  v27 = (char *)&v60 - v26;
  MEMORY[0x24BDAC7A8](v25, v28);
  v30 = (char *)&v60 - v29;
  v31 = _s19TranscriptRetrieverVMa();
  v72 = v31;
  v73 = &off_251014790;
  v32 = sub_23FBFDDEC(v71);
  sub_23FC0EDD8(a2, (uint64_t)v32, (uint64_t (*)(_QWORD))_s19TranscriptRetrieverVMa);
  v33 = sub_23FBFDE40(v71, v72);
  sub_23FBFDE40((_QWORD *)((char *)v33 + *(int *)(v31 + 24)), *(_QWORD *)((char *)v33 + *(int *)(v31 + 24) + 24));
  sub_23FCA4438(a1, (uint64_t)v18);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v18, 1, v19) == 1)
  {
    sub_23FBFEF74((uint64_t)v18, &qword_256F5FD10);
    v34 = v64;
    sub_23FD724DC();
    v35 = v63;
    (*(void (**)(char *, uint64_t, uint64_t))(v68 + 16))(v67, a1, v63);
    v36 = sub_23FD72BE4();
    v37 = sub_23FD74F54();
    if (os_log_type_enabled(v36, v37))
    {
      v38 = (uint8_t *)swift_slowAlloc();
      v39 = swift_slowAlloc();
      v70 = v39;
      *(_DWORD *)v38 = 136315138;
      sub_23FBFEE2C((unint64_t *)&qword_256F65DE0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v40 = v67;
      v41 = sub_23FD75344();
      v69 = sub_23FC9DC40(v41, v42, &v70);
      sub_23FD75044();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v68 + 8))(v40, v35);
      _os_log_impl(&dword_23FBF8000, v36, v37, "Cannot make an action prompt vote outcome, a statement step for systemResponseEventId=%s is not found", v38, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2426798D8](v39, -1, -1);
      MEMORY[0x2426798D8](v38, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v68 + 8))(v67, v35);
    }

    (*(void (**)(char *, uint64_t))(v65 + 8))(v34, v66);
LABEL_14:
    v48 = 0;
    goto LABEL_18;
  }
  sub_23FC0F380((uint64_t)v18, (uint64_t)v30, _s23StatementStepEvaluationOMa);
  sub_23FC0EDD8((uint64_t)v30, (uint64_t)v27, _s23StatementStepEvaluationOMa);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_23FBFEF18((uint64_t)v27, _s23StatementStepEvaluationOMa);
    v49 = v62;
    sub_23FD724DC();
    sub_23FC0EDD8((uint64_t)v30, (uint64_t)v23, _s23StatementStepEvaluationOMa);
    v50 = sub_23FD72BE4();
    v51 = sub_23FD74F54();
    if (os_log_type_enabled(v50, v51))
    {
      v52 = (uint8_t *)swift_slowAlloc();
      v53 = swift_slowAlloc();
      v70 = v53;
      *(_DWORD *)v52 = 136315138;
      sub_23FCED848();
      v69 = sub_23FC9DC40(v54, v55, &v70);
      sub_23FD75044();
      swift_bridgeObjectRelease();
      sub_23FBFEF18((uint64_t)v23, _s23StatementStepEvaluationOMa);
      _os_log_impl(&dword_23FBF8000, v50, v51, "Cannot make an action prompt vote outcome, %s is not for an action", v52, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2426798D8](v53, -1, -1);
      MEMORY[0x2426798D8](v52, -1, -1);

    }
    else
    {

      sub_23FBFEF18((uint64_t)v23, _s23StatementStepEvaluationOMa);
    }
    (*(void (**)(char *, uint64_t))(v65 + 8))(v49, v66);
    sub_23FBFEF18((uint64_t)v30, _s23StatementStepEvaluationOMa);
    goto LABEL_14;
  }
  v43 = v61;
  sub_23FC0F380((uint64_t)v27, v61, _s20ActionStepEvaluationVMa);
  if (*(_BYTE *)(v43 + *(int *)(v12 + 20)))
  {
    if (*(_BYTE *)(v43 + *(int *)(v12 + 20)) == 1)
    {
      sub_23FBFD684(&qword_256F64BB0);
      v44 = *(unsigned __int8 *)(*(_QWORD *)(_s19EvaluatorVoteSourceOMa(0) - 8) + 80);
      v45 = (v44 + 32) & ~v44;
      v46 = swift_allocObject();
      *(_OWORD *)(v46 + 16) = xmmword_23FD769D0;
      v47 = (_BYTE *)(v46 + v45);
      v48 = 1;
      *v47 = 1;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      v48 = 0;
    }
  }
  else
  {
    sub_23FBFD684(&qword_256F64BB0);
    v56 = *(unsigned __int8 *)(*(_QWORD *)(_s19EvaluatorVoteSourceOMa(0) - 8) + 80);
    v57 = (v56 + 32) & ~v56;
    v58 = swift_allocObject();
    *(_OWORD *)(v58 + 16) = xmmword_23FD769D0;
    *(_BYTE *)(v58 + v57) = 0;
    swift_storeEnumTagMultiPayload();
    v48 = 2;
  }
  sub_23FBFEF18(v43, _s20ActionStepEvaluationVMa);
  sub_23FBFEF18((uint64_t)v30, _s23StatementStepEvaluationOMa);
LABEL_18:
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v71);
  return v48;
}

uint64_t sub_23FD2D3D8(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  char *v53;
  int v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  int v66;
  uint64_t v67;
  void (*v68)(char *, uint64_t);
  uint64_t v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  char *v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  int v93;
  int v94;
  int v95;
  char *v96;
  char *v97;
  uint64_t v98;
  char *v99;
  int v100;
  int v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  int v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  int v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  _UNKNOWN **v122;

  v113 = a2;
  v115 = a1;
  v89 = sub_23FD71474();
  v88 = *(_QWORD *)(v89 - 8);
  MEMORY[0x24BDAC7A8](v89, v4);
  v87 = (char *)&v84 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23FD71C84();
  v7 = *(_QWORD *)(v6 - 8);
  v9 = MEMORY[0x24BDAC7A8](v6, v8);
  v99 = (char *)&v84 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9, v11);
  v96 = (char *)&v84 - v12;
  v13 = sub_23FBFD684(&qword_256F5D538);
  MEMORY[0x24BDAC7A8](v13, v14);
  v16 = (char *)&v84 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23FD72044();
  v98 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17, v18);
  v97 = (char *)&v84 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_23FBFD684(&qword_256F64BA8);
  v22 = MEMORY[0x24BDAC7A8](v20, v21);
  v104 = (uint64_t)&v84 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v22, v24);
  v27 = (char *)&v84 - v26;
  v29 = MEMORY[0x24BDAC7A8](v25, v28);
  v106 = (char *)&v84 - v30;
  v32 = MEMORY[0x24BDAC7A8](v29, v31);
  v105 = (char *)&v84 - v33;
  MEMORY[0x24BDAC7A8](v32, v34);
  v109 = (uint64_t)&v84 - v35;
  v36 = sub_23FD71BB8();
  v110 = *(_QWORD *)(v36 - 8);
  v111 = v36;
  MEMORY[0x24BDAC7A8](v36, v37);
  v39 = (char *)&v84 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_23FD7409C();
  v117 = *(_QWORD *)(v40 - 8);
  v118 = v40;
  MEMORY[0x24BDAC7A8](v40, v41);
  v116 = (char *)&v84 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = sub_23FD740CC();
  v44 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43, v45);
  v119 = (char *)&v84 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = _s19TranscriptRetrieverVMa();
  v122 = &off_251014790;
  v47 = sub_23FBFDDEC(&v120);
  sub_23FC0EDD8(v113, (uint64_t)v47, (uint64_t (*)(_QWORD))_s19TranscriptRetrieverVMa);
  v48 = *(_QWORD *)(v115 + *(int *)(type metadata accessor for FeedbackLearning.FlowAction(0) + 24));
  v49 = *(_QWORD *)(v48 + 16);
  if (!v49)
  {
LABEL_39:
    v78 = 0;
    goto LABEL_40;
  }
  v86 = a3;
  v113 = v48 + ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80));
  v112 = *MEMORY[0x24BE56B00];
  v108 = *MEMORY[0x24BE56C40];
  v101 = *MEMORY[0x24BE56C78];
  v100 = *MEMORY[0x24BE56C80];
  v95 = *MEMORY[0x24BE53328];
  v94 = *MEMORY[0x24BE53320];
  v93 = *MEMORY[0x24BE532D8];
  v115 = v48;
  swift_bridgeObjectRetain();
  v50 = v115;
  LODWORD(v91) = 0;
  v51 = 0;
  v107 = v49;
  v90 = v49 - 1;
  v103 = v43;
  v52 = v44;
  v92 = v27;
  v114 = v44;
  v102 = v39;
  while (v51 < *(_QWORD *)(v50 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v52 + 16))(v119, v113 + *(_QWORD *)(v52 + 72) * v51, v43);
    v53 = v116;
    sub_23FD740A8();
    v54 = (*(uint64_t (**)(char *, uint64_t))(v117 + 88))(v53, v118);
    if (v54 == v112)
    {
      (*(void (**)(char *, uint64_t))(v117 + 8))(v116, v118);
      v52 = v114;
LABEL_30:
      if ((v91 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        sub_23FBFD684(&qword_256F64BB0);
        v80 = *(unsigned __int8 *)(*(_QWORD *)(_s19EvaluatorVoteSourceOMa(0) - 8) + 80);
        v81 = (v80 + 32) & ~v80;
        v82 = v52;
        v83 = swift_allocObject();
        *(_OWORD *)(v83 + 16) = xmmword_23FD769D0;
        *(_BYTE *)(v83 + v81) = 2;
        v78 = 1;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, uint64_t))(v82 + 8))(v119, v43);
        goto LABEL_40;
      }
      (*(void (**)(char *, uint64_t))(v52 + 8))(v119, v43);
      if (v90 == v51)
        goto LABEL_38;
      LODWORD(v91) = 0;
      goto LABEL_33;
    }
    if (v54 == v108)
    {
      v55 = v116;
      (*(void (**)(char *, uint64_t))(v117 + 96))(v116, v118);
      (*(void (**)(char *, char *, uint64_t))(v110 + 32))(v39, v55, v111);
      sub_23FC0AC90();
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v16, 1, v17) == 1)
      {
        sub_23FBFEF74((uint64_t)v16, &qword_256F5D538);
        v56 = 1;
        v58 = (uint64_t)v105;
        v57 = (uint64_t)v106;
      }
      else
      {
        v60 = v98;
        v61 = v97;
        (*(void (**)(char *, char *, uint64_t))(v98 + 32))(v97, v16, v17);
        v58 = (uint64_t)v105;
        sub_23FD72038();
        (*(void (**)(char *, uint64_t))(v60 + 8))(v61, v17);
        v56 = 0;
        v57 = (uint64_t)v106;
      }
      v62 = v109;
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v58, v56, 1, v6);
      sub_23FD2ED54(v58, v62);
      sub_23FD2ED9C(v62, v57);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v57, 1, v6) == 1)
      {
        sub_23FBFEF74(v57, &qword_256F64BA8);
        v52 = v114;
      }
      else
      {
        v63 = v17;
        v64 = v96;
        (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v96, v57, v6);
        v65 = v99;
        (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v99, v64, v6);
        v66 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v65, v6);
        v67 = v7;
        v68 = *(void (**)(char *, uint64_t))(v7 + 8);
        v68(v65, v6);
        if (v66 == v95 || v66 == v94)
        {
          swift_bridgeObjectRelease();
          v68(v64, v6);
          sub_23FBFEF74(v109, &qword_256F64BA8);
          (*(void (**)(char *, uint64_t))(v110 + 8))(v102, v111);
          (*(void (**)(char *, uint64_t))(v114 + 8))(v119, v103);
          goto LABEL_39;
        }
        v68(v64, v6);
        v7 = v67;
        v17 = v63;
        v27 = v92;
        v52 = v114;
        v62 = v109;
      }
      sub_23FD2ED9C(v62, (uint64_t)v27);
      v59 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v27, 1, v6) == 1;
      v70 = v62;
      v43 = v103;
      if (v59)
      {
        sub_23FBFEF74(v70, &qword_256F64BA8);
        v39 = v102;
        (*(void (**)(char *, uint64_t))(v110 + 8))(v102, v111);
        (*(void (**)(char *, uint64_t))(v52 + 8))(v119, v43);
LABEL_26:
        sub_23FBFEF74((uint64_t)v27, &qword_256F64BA8);
        goto LABEL_27;
      }
      v71 = v104;
      sub_23FD2ED9C((uint64_t)v27, v104);
      v72 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 88))(v71, v6);
      if (v72 != v93)
      {
        sub_23FBFEF74(v109, &qword_256F64BA8);
        v39 = v102;
        (*(void (**)(char *, uint64_t))(v110 + 8))(v102, v111);
        (*(void (**)(char *, uint64_t))(v52 + 8))(v119, v43);
        (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v104, v6);
        goto LABEL_26;
      }
      v85 = v6;
      v73 = (uint64_t)v87;
      v74 = v119;
      sub_23FD74048();
      v75 = sub_23FBFDE40(&v120, v121);
      v91 = sub_23FD2CCF4(v73, (uint64_t)v75);
      v77 = v76;
      (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v73, v89);
      sub_23FBFEF74(v109, &qword_256F64BA8);
      v39 = v102;
      (*(void (**)(char *, uint64_t))(v110 + 8))(v102, v111);
      (*(void (**)(char *, uint64_t))(v114 + 8))(v74, v103);
      if (v77)
        goto LABEL_43;
      v6 = v85;
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v104, v85);
      sub_23FBFEF74((uint64_t)v27, &qword_256F64BA8);
      if (v90 == v51)
      {
LABEL_38:
        swift_bridgeObjectRelease();
        goto LABEL_39;
      }
      LODWORD(v91) = 1;
      v43 = v103;
      v52 = v114;
LABEL_33:
      v50 = v115;
      ++v51;
    }
    else
    {
      v59 = v54 == v101 || v54 == v100;
      v52 = v114;
      if (v59)
        goto LABEL_30;
      (*(void (**)(char *, uint64_t))(v114 + 8))(v119, v43);
      (*(void (**)(char *, uint64_t))(v117 + 8))(v116, v118);
LABEL_27:
      ++v51;
      v50 = v115;
      if (v107 == v51)
        goto LABEL_38;
    }
  }
  __break(1u);
LABEL_43:
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v104, v85);
  sub_23FBFEF74((uint64_t)v27, &qword_256F64BA8);
  v78 = v91;
LABEL_40:
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)&v120);
  return v78;
}

uint64_t sub_23FD2DDE0(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  int v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  int v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v85;
  char *v86;
  char *v87;
  uint64_t v88;
  int v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  void (*v120)(char *, uint64_t);
  char *v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  _QWORD v135[2];
  int v136;
  uint64_t v137;
  __int128 v138;
  int v139;
  int v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  int v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  void (*v177)(char *, uint64_t, uint64_t);
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  _UNKNOWN **v183;

  v172 = a3;
  v178 = a1;
  v146 = _s29ActionStatementFailureOutcomeVMa(0);
  MEMORY[0x24BDAC7A8](v146, v4);
  v145 = (char *)v135 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v144 = sub_23FD71684();
  v148 = *(_QWORD *)(v144 - 8);
  MEMORY[0x24BDAC7A8](v144, v6);
  v147 = (char *)v135 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v151 = _s29ActionStatementSuccessOutcomeVMa(0);
  MEMORY[0x24BDAC7A8](v151, v8);
  v150 = (char *)v135 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v149 = sub_23FD716D8();
  v153 = *(_QWORD *)(v149 - 8);
  MEMORY[0x24BDAC7A8](v149, v10);
  v152 = (char *)v135 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v164 = sub_23FD71C84();
  v158 = *(_QWORD *)(v164 - 8);
  MEMORY[0x24BDAC7A8](v164, v12);
  v157 = (char *)v135 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v156 = sub_23FD73A0C();
  v155 = *(_QWORD *)(v156 - 8);
  MEMORY[0x24BDAC7A8](v156, v14);
  v154 = (char *)v135 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v143 = sub_23FD7313C();
  v142 = *(_QWORD *)(v143 - 8);
  MEMORY[0x24BDAC7A8](v143, v16);
  v141 = (char *)v135 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_23FBFD684(qword_254346A10);
  MEMORY[0x24BDAC7A8](v18, v19);
  v165 = (char *)v135 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v169 = sub_23FD71474();
  v166 = *(_QWORD *)(v169 - 8);
  MEMORY[0x24BDAC7A8](v169, v21);
  v163 = (char *)v135 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v168 = sub_23FD73514();
  v162 = *(_QWORD *)(v168 - 8);
  MEMORY[0x24BDAC7A8](v168, v23);
  v167 = (char *)v135 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_23FD740CC();
  v26 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25, v27);
  v160 = (char *)v135 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v174 = _s21ActionExecutionResultOMa(0);
  MEMORY[0x24BDAC7A8](v174, v29);
  v171 = (uint64_t)v135 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_23FD7157C();
  v176 = *(_QWORD *)(v31 - 8);
  v177 = (void (*)(char *, uint64_t, uint64_t))v31;
  MEMORY[0x24BDAC7A8](v31, v32);
  v34 = (char *)v135 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_23FD736D0();
  v175 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35, v36);
  v38 = (char *)v135 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_23FD7409C();
  v179 = *(_QWORD *)(v39 - 8);
  v180 = v39;
  v41 = MEMORY[0x24BDAC7A8](v39, v40);
  v170 = (char *)v135 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v41, v43);
  v45 = (char *)v135 - v44;
  v46 = sub_23FD73E08();
  v47 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46, v48);
  v50 = (char *)v135 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  v182 = _s19TranscriptRetrieverVMa();
  v183 = &off_251014790;
  v51 = sub_23FBFDDEC(&v181);
  sub_23FC0EDD8(a2, (uint64_t)v51, (uint64_t (*)(_QWORD))_s19TranscriptRetrieverVMa);
  v52 = sub_23FBFDE40(&v181, v182);
  (*(void (**)(char *, _QWORD *, uint64_t))(v47 + 16))(v50, v52, v46);
  v53 = sub_23FD73DE4();
  v54 = v46;
  v55 = v53;
  (*(void (**)(char *, uint64_t))(v47 + 8))(v50, v54);
  v56 = *(_QWORD *)(v55 + 16);
  v161 = v25;
  v159 = v26;
  if (!v56)
  {
    swift_bridgeObjectRelease();
    v66 = v25;
LABEL_9:
    v67 = *(_QWORD *)(v178 + *(int *)(type metadata accessor for FeedbackLearning.FlowAction(0) + 24));
    v68 = *(_QWORD *)(v67 + 16);
    v69 = v160;
    v70 = v162;
    if (!v68)
    {
LABEL_29:
      v103 = 0;
      goto LABEL_31;
    }
    v71 = v67 + ((*(unsigned __int8 *)(v159 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v159 + 80));
    v72 = *MEMORY[0x24BE56B00];
    LODWORD(v176) = *MEMORY[0x24BE56B98];
    LODWORD(v173) = *MEMORY[0x24BE56C78];
    LODWORD(v171) = *MEMORY[0x24BE56C80];
    v139 = *MEMORY[0x24BE53328];
    v136 = *MEMORY[0x24BE53320];
    v175 = *(_QWORD *)(v159 + 72);
    v73 = v159;
    v177 = *(void (**)(char *, uint64_t, uint64_t))(v159 + 16);
    v135[1] = v67;
    swift_bridgeObjectRetain();
    v138 = xmmword_23FD769D0;
    v140 = v72;
    while (1)
    {
      v177(v69, v71, v66);
      v74 = v170;
      sub_23FD740A8();
      v75 = v179;
      v76 = v74;
      v77 = v180;
      v78 = (*(uint64_t (**)(char *, uint64_t))(v179 + 88))(v76, v180);
      if (v78 == v72)
      {
        swift_bridgeObjectRelease();
        v120 = *(void (**)(char *, uint64_t))(v75 + 96);
        v121 = v170;
        v120(v170, v77);
        v122 = v142;
        v123 = v141;
        v124 = v143;
        (*(void (**)(char *, char *, uint64_t))(v142 + 32))(v141, v121, v143);
        sub_23FBFD684(&qword_256F64BB0);
        v125 = v73;
        v126 = *(unsigned __int8 *)(*(_QWORD *)(_s19EvaluatorVoteSourceOMa(0) - 8) + 80);
        v127 = v66;
        v128 = (v126 + 32) & ~v126;
        v129 = swift_allocObject();
        *(_OWORD *)(v129 + 16) = v138;
        v130 = v129 + v128 + *(int *)(sub_23FBFD684(&qword_256F5F650) + 48);
        sub_23FCFC3E4(v178, v129 + v128);
        (*(void (**)(uint64_t, char *, uint64_t))(v122 + 16))(v130, v123, v124);
        swift_storeEnumTagMultiPayload();
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, uint64_t))(v122 + 8))(v123, v124);
        (*(void (**)(char *, uint64_t))(v125 + 8))(v160, v127);
        goto LABEL_30;
      }
      if (v78 != (_DWORD)v176)
      {
        if (v78 == (_DWORD)v173 || v78 == (_DWORD)v171)
        {
          swift_bridgeObjectRelease();
          sub_23FBFD684(&qword_256F64BB0);
          v131 = *(unsigned __int8 *)(*(_QWORD *)(_s19EvaluatorVoteSourceOMa(0) - 8) + 80);
          v132 = v66;
          v133 = (v131 + 32) & ~v131;
          v134 = swift_allocObject();
          *(_OWORD *)(v134 + 16) = v138;
          sub_23FCFC3E4(v178, v134 + v133);
          v103 = 1;
          swift_storeEnumTagMultiPayload();
          swift_storeEnumTagMultiPayload();
          (*(void (**)(char *, uint64_t))(v73 + 8))(v69, v132);
          goto LABEL_31;
        }
        (*(void (**)(char *, uint64_t))(v73 + 8))(v69, v66);
        (*(void (**)(char *, uint64_t))(v75 + 8))(v170, v77);
        goto LABEL_27;
      }
      v79 = v170;
      (*(void (**)(char *, uint64_t))(v75 + 96))(v170, v77);
      v80 = v167;
      v81 = v168;
      (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v167, v79, v168);
      v82 = (uint64_t)v165;
      sub_23FD734F0();
      v83 = v169;
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v82, 1, v169) == 1)
      {
        sub_23FBFEF74(v82, qword_254346A10);
        (*(void (**)(char *, uint64_t))(v70 + 8))(v80, v81);
        (*(void (**)(char *, uint64_t))(v73 + 8))(v69, v66);
        v72 = v140;
        goto LABEL_27;
      }
      v85 = v163;
      (*(void (**)(char *, uint64_t, uint64_t))(v166 + 32))(v163, v82, v83);
      v86 = v154;
      sub_23FD73508();
      v87 = v157;
      sub_23FD739F4();
      (*(void (**)(char *, uint64_t))(v155 + 8))(v86, v156);
      v88 = v158;
      v89 = (*(uint64_t (**)(char *, uint64_t))(v158 + 88))(v87, v164);
      if (v89 == v139)
        break;
      if (v89 == v136)
      {
        (*(void (**)(char *, uint64_t))(v88 + 96))(v87, v164);
        v104 = v148;
        v105 = v147;
        v106 = v144;
        (*(void (**)(char *, char *, uint64_t))(v148 + 32))(v147, v87, v144);
        sub_23FBFD684(&qword_256F64BB0);
        v137 = _s19EvaluatorVoteSourceOMa(0);
        v107 = *(unsigned __int8 *)(*(_QWORD *)(v137 - 8) + 80);
        v108 = (v107 + 32) & ~v107;
        v96 = swift_allocObject();
        *(_OWORD *)(v96 + 16) = v138;
        v109 = v96 + v108;
        v110 = (uint64_t)v145;
        v111 = v163;
        v112 = v169;
        (*(void (**)(char *, char *, uint64_t))(v166 + 16))(v145, v163, v169);
        (*(void (**)(uint64_t, char *, uint64_t))(v104 + 16))(v110 + *(int *)(v146 + 20), v105, v106);
        sub_23FC0EDD8(v110, v109, _s29ActionStatementFailureOutcomeVMa);
        swift_storeEnumTagMultiPayload();
        v101 = v159;
        v69 = v160;
        swift_storeEnumTagMultiPayload();
        sub_23FBFEF18(v110, _s29ActionStatementFailureOutcomeVMa);
        (*(void (**)(char *, uint64_t))(v148 + 8))(v147, v106);
        v113 = v111;
        v102 = v168;
        (*(void (**)(char *, uint64_t))(v166 + 8))(v113, v112);
        v103 = 1;
        goto LABEL_24;
      }
      (*(void (**)(char *, uint64_t))(v166 + 8))(v163, v169);
      (*(void (**)(char *, uint64_t))(v88 + 8))(v87, v164);
      v96 = 0;
      v103 = 0;
      v66 = v161;
      v70 = v162;
      v72 = v140;
      v101 = v73;
      v114 = v167;
      v102 = v168;
LABEL_26:
      (*(void (**)(char *, uint64_t))(v70 + 8))(v114, v102);
      v73 = v101;
      (*(void (**)(char *, uint64_t))(v101 + 8))(v69, v66);
      if (v96)
      {
        swift_bridgeObjectRelease();
        goto LABEL_31;
      }
LABEL_27:
      v71 += v175;
      if (!--v68)
      {
        swift_bridgeObjectRelease();
        goto LABEL_29;
      }
    }
    (*(void (**)(char *, uint64_t))(v88 + 96))(v87, v164);
    v90 = v153;
    v91 = v152;
    v92 = v85;
    v93 = v149;
    (*(void (**)(char *, char *))(v153 + 32))(v152, v87);
    sub_23FBFD684(&qword_256F64BB0);
    v137 = _s19EvaluatorVoteSourceOMa(0);
    v94 = *(unsigned __int8 *)(*(_QWORD *)(v137 - 8) + 80);
    v95 = (v94 + 32) & ~v94;
    v96 = swift_allocObject();
    *(_OWORD *)(v96 + 16) = v138;
    v97 = v96 + v95;
    v98 = (uint64_t)v150;
    v99 = v92;
    v100 = v169;
    (*(void (**)(char *, char *, uint64_t))(v166 + 16))(v150, v99, v169);
    (*(void (**)(uint64_t, char *, uint64_t))(v90 + 16))(v98 + *(int *)(v151 + 20), v91, v93);
    sub_23FC0EDD8(v98, v97, _s29ActionStatementSuccessOutcomeVMa);
    swift_storeEnumTagMultiPayload();
    v101 = v159;
    v69 = v160;
    swift_storeEnumTagMultiPayload();
    sub_23FBFEF18(v98, _s29ActionStatementSuccessOutcomeVMa);
    v102 = v168;
    (*(void (**)(char *, uint64_t))(v153 + 8))(v152, v93);
    (*(void (**)(char *, uint64_t))(v166 + 8))(v163, v100);
    v103 = 2;
LABEL_24:
    v66 = v161;
    v70 = v162;
    v114 = v167;
    v72 = v140;
    goto LABEL_26;
  }
  v57 = (*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  v58 = *MEMORY[0x24BE56B18];
  v59 = *(_QWORD *)(v26 + 72);
  swift_bridgeObjectRetain();
  v173 = v55;
  v60 = v55 + v57 + v59 * (v56 - 1);
  v61 = -v59;
  while (1)
  {
    sub_23FD740A8();
    v62 = v179;
    v63 = v180;
    if ((*(unsigned int (**)(char *, uint64_t))(v179 + 88))(v45, v180) != v58)
    {
      (*(void (**)(char *, uint64_t))(v62 + 8))(v45, v63);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v62 + 96))(v45, v63);
    v64 = v175;
    (*(void (**)(char *, char *, uint64_t))(v175 + 32))(v38, v45, v35);
    sub_23FD736B8();
    type metadata accessor for FeedbackLearning.FlowAction(0);
    v65 = sub_23FD71558();
    (*(void (**)(char *, void (*)(char *, uint64_t, uint64_t)))(v176 + 8))(v34, v177);
    (*(void (**)(char *, uint64_t))(v64 + 8))(v38, v35);
    if ((v65 & 1) != 0)
      break;
LABEL_7:
    v60 += v61;
    if (!--v56)
    {
      swift_bridgeObjectRelease_n();
      v66 = v161;
      goto LABEL_9;
    }
  }
  swift_bridgeObjectRelease_n();
  v115 = v171;
  sub_23FCFC188(v178, v172, v171);
  swift_storeEnumTagMultiPayload();
  sub_23FBFD684(&qword_256F64BB0);
  v116 = *(unsigned __int8 *)(*(_QWORD *)(_s19EvaluatorVoteSourceOMa(0) - 8) + 80);
  v117 = (v116 + 32) & ~v116;
  v118 = swift_allocObject();
  *(_OWORD *)(v118 + 16) = xmmword_23FD769D0;
  sub_23FC0EDD8(v115, v118 + v117, _s21ActionExecutionResultOMa);
  swift_storeEnumTagMultiPayload();
  sub_23FBFEF18(v115, _s21ActionExecutionResultOMa);
LABEL_30:
  v103 = 1;
LABEL_31:
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)&v181);
  return v103;
}

uint64_t sub_23FD2ED08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_bridgeObjectRetain();
  return a5;
}

uint64_t sub_23FD2ED54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23FBFD684(&qword_256F64BA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23FD2ED9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23FBFD684(&qword_256F64BA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23FD2EDE4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, _QWORD *, uint64_t))
{
  uint64_t *v8;
  _QWORD *v9;
  uint64_t v11[3];
  uint64_t v12;
  _UNKNOWN **v13;

  v12 = _s19TranscriptRetrieverVMa();
  v13 = &off_251014790;
  v8 = sub_23FBFDDEC(v11);
  sub_23FC0EDD8(a2, (uint64_t)v8, (uint64_t (*)(_QWORD))_s19TranscriptRetrieverVMa);
  v9 = sub_23FBFDE40(v11, v12);
  a4(a1, v9, a3);
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v11);
  return a3;
}

uint64_t _s13VotingOutcomeV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23FD2EEE4 + 4 * byte_23FD81629[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23FD2EF18 + 4 * byte_23FD81624[v4]))();
}

uint64_t sub_23FD2EF18(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23FD2EF20(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23FD2EF28);
  return result;
}

uint64_t sub_23FD2EF34(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23FD2EF3CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23FD2EF40(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23FD2EF48(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s13VotingOutcomeV10CodingKeysOMa()
{
  return &_s13VotingOutcomeV10CodingKeysON;
}

uint64_t _s13EvaluatorTypeO10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23FD2EFB0 + 4 * byte_23FD81633[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23FD2EFE4 + 4 * byte_23FD8162E[v4]))();
}

uint64_t sub_23FD2EFE4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23FD2EFEC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23FD2EFF4);
  return result;
}

uint64_t sub_23FD2F000(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23FD2F008);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23FD2F00C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23FD2F014(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s13EvaluatorTypeO10CodingKeysOMa()
{
  return &_s13EvaluatorTypeO10CodingKeysON;
}

ValueMetadata *_s13EvaluatorTypeO22ActionPromptCodingKeysOMa()
{
  return &_s13EvaluatorTypeO22ActionPromptCodingKeysON;
}

ValueMetadata *_s13EvaluatorTypeO15FixedCodingKeysOMa()
{
  return &_s13EvaluatorTypeO15FixedCodingKeysON;
}

ValueMetadata *_s13EvaluatorTypeO26MajorityMediatorCodingKeysOMa()
{
  return &_s13EvaluatorTypeO26MajorityMediatorCodingKeysON;
}

ValueMetadata *_s13EvaluatorTypeO24TaskCompletionCodingKeysOMa()
{
  return &_s13EvaluatorTypeO24TaskCompletionCodingKeysON;
}

ValueMetadata *_s13EvaluatorTypeO27WaterfallMediatorCodingKeysOMa()
{
  return &_s13EvaluatorTypeO27WaterfallMediatorCodingKeysON;
}

void _s17EvaluatorVoteTypeOMa()
{
  sub_23FC7A748();
}

unint64_t sub_23FD2F090()
{
  unint64_t result;

  result = qword_256F64BB8;
  if (!qword_256F64BB8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD81B54, &unk_251014C50);
    atomic_store(result, (unint64_t *)&qword_256F64BB8);
  }
  return result;
}

unint64_t sub_23FD2F0D0()
{
  unint64_t result;

  result = qword_256F64BC0;
  if (!qword_256F64BC0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD81D9C, &_s13EvaluatorTypeO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64BC0);
  }
  return result;
}

unint64_t sub_23FD2F110()
{
  unint64_t result;

  result = qword_256F64BC8;
  if (!qword_256F64BC8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD81E54, &_s13VotingOutcomeV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64BC8);
  }
  return result;
}

unint64_t sub_23FD2F150()
{
  unint64_t result;

  result = qword_256F64BD0;
  if (!qword_256F64BD0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD81DC4, &_s13VotingOutcomeV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64BD0);
  }
  return result;
}

unint64_t sub_23FD2F190()
{
  unint64_t result;

  result = qword_256F64BD8;
  if (!qword_256F64BD8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD81DEC, &_s13VotingOutcomeV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64BD8);
  }
  return result;
}

unint64_t sub_23FD2F1D0()
{
  unint64_t result;

  result = qword_256F64BE0;
  if (!qword_256F64BE0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD81CBC, &_s13EvaluatorTypeO22ActionPromptCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64BE0);
  }
  return result;
}

unint64_t sub_23FD2F210()
{
  unint64_t result;

  result = qword_256F64BE8;
  if (!qword_256F64BE8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD81CE4, &_s13EvaluatorTypeO22ActionPromptCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64BE8);
  }
  return result;
}

unint64_t sub_23FD2F250()
{
  unint64_t result;

  result = qword_256F64BF0;
  if (!qword_256F64BF0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD81C6C, &_s13EvaluatorTypeO15FixedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64BF0);
  }
  return result;
}

unint64_t sub_23FD2F290()
{
  unint64_t result;

  result = qword_256F64BF8;
  if (!qword_256F64BF8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD81C94, &_s13EvaluatorTypeO15FixedCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64BF8);
  }
  return result;
}

unint64_t sub_23FD2F2D0()
{
  unint64_t result;

  result = qword_256F64C00;
  if (!qword_256F64C00)
  {
    result = MEMORY[0x2426797E8](&unk_23FD81C1C, &_s13EvaluatorTypeO26MajorityMediatorCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64C00);
  }
  return result;
}

unint64_t sub_23FD2F310()
{
  unint64_t result;

  result = qword_256F64C08;
  if (!qword_256F64C08)
  {
    result = MEMORY[0x2426797E8](&unk_23FD81C44, &_s13EvaluatorTypeO26MajorityMediatorCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64C08);
  }
  return result;
}

unint64_t sub_23FD2F350()
{
  unint64_t result;

  result = qword_256F64C10;
  if (!qword_256F64C10)
  {
    result = MEMORY[0x2426797E8](&unk_23FD81BCC, &_s13EvaluatorTypeO24TaskCompletionCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64C10);
  }
  return result;
}

unint64_t sub_23FD2F390()
{
  unint64_t result;

  result = qword_256F64C18;
  if (!qword_256F64C18)
  {
    result = MEMORY[0x2426797E8](&unk_23FD81BF4, &_s13EvaluatorTypeO24TaskCompletionCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64C18);
  }
  return result;
}

unint64_t sub_23FD2F3D0()
{
  unint64_t result;

  result = qword_256F64C20;
  if (!qword_256F64C20)
  {
    result = MEMORY[0x2426797E8](&unk_23FD81B7C, &_s13EvaluatorTypeO27WaterfallMediatorCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64C20);
  }
  return result;
}

unint64_t sub_23FD2F410()
{
  unint64_t result;

  result = qword_256F64C28;
  if (!qword_256F64C28)
  {
    result = MEMORY[0x2426797E8](&unk_23FD81BA4, &_s13EvaluatorTypeO27WaterfallMediatorCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64C28);
  }
  return result;
}

unint64_t sub_23FD2F450()
{
  unint64_t result;

  result = qword_256F64C30;
  if (!qword_256F64C30)
  {
    result = MEMORY[0x2426797E8](&unk_23FD81D0C, &_s13EvaluatorTypeO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64C30);
  }
  return result;
}

unint64_t sub_23FD2F490()
{
  unint64_t result;

  result = qword_256F64C38;
  if (!qword_256F64C38)
  {
    result = MEMORY[0x2426797E8](&unk_23FD81D34, &_s13EvaluatorTypeO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64C38);
  }
  return result;
}

unint64_t sub_23FD2F4CC()
{
  unint64_t result;

  result = qword_256F64C60;
  if (!qword_256F64C60)
  {
    result = MEMORY[0x2426797E8](&unk_23FD823EC, &_s17EvaluatorVoteTypeO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64C60);
  }
  return result;
}

unint64_t sub_23FD2F508()
{
  unint64_t result;

  result = qword_256F64C68;
  if (!qword_256F64C68)
  {
    result = MEMORY[0x2426797E8](&unk_23FD8239C, &_s17EvaluatorVoteTypeO17SuccessCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64C68);
  }
  return result;
}

unint64_t sub_23FD2F544()
{
  unint64_t result;

  result = qword_256F64C70;
  if (!qword_256F64C70)
  {
    result = MEMORY[0x2426797E8](&unk_23FD8234C, &_s17EvaluatorVoteTypeO17FailureCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64C70);
  }
  return result;
}

unint64_t sub_23FD2F580()
{
  unint64_t result;

  result = qword_256F64C78;
  if (!qword_256F64C78)
  {
    result = MEMORY[0x2426797E8](&unk_23FD822FC, &_s17EvaluatorVoteTypeO17AbstainCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64C78);
  }
  return result;
}

uint64_t _s16EvaluationResultV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23FD2F608 + 4 * byte_23FD8163D[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23FD2F63C + 4 * byte_23FD81638[v4]))();
}

uint64_t sub_23FD2F63C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23FD2F644(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23FD2F64CLL);
  return result;
}

uint64_t sub_23FD2F658(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23FD2F660);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23FD2F664(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23FD2F66C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s17EvaluatorVoteTypeO10CodingKeysOMa()
{
  return &_s17EvaluatorVoteTypeO10CodingKeysON;
}

ValueMetadata *_s17EvaluatorVoteTypeO17AbstainCodingKeysOMa()
{
  return &_s17EvaluatorVoteTypeO17AbstainCodingKeysON;
}

ValueMetadata *_s17EvaluatorVoteTypeO17FailureCodingKeysOMa()
{
  return &_s17EvaluatorVoteTypeO17FailureCodingKeysON;
}

ValueMetadata *_s17EvaluatorVoteTypeO17SuccessCodingKeysOMa()
{
  return &_s17EvaluatorVoteTypeO17SuccessCodingKeysON;
}

unint64_t sub_23FD2F6BC()
{
  unint64_t result;

  result = qword_256F64CA0;
  if (!qword_256F64CA0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD822D4, &_s17EvaluatorVoteTypeO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64CA0);
  }
  return result;
}

unint64_t sub_23FD2F6FC()
{
  unint64_t result;

  result = qword_256F64CA8;
  if (!qword_256F64CA8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD821F4, &_s17EvaluatorVoteTypeO17AbstainCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64CA8);
  }
  return result;
}

unint64_t sub_23FD2F73C()
{
  unint64_t result;

  result = qword_256F64CB0;
  if (!qword_256F64CB0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD8221C, &_s17EvaluatorVoteTypeO17AbstainCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64CB0);
  }
  return result;
}

unint64_t sub_23FD2F77C()
{
  unint64_t result;

  result = qword_256F64CB8;
  if (!qword_256F64CB8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD821A4, &_s17EvaluatorVoteTypeO17FailureCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64CB8);
  }
  return result;
}

unint64_t sub_23FD2F7BC()
{
  unint64_t result;

  result = qword_256F64CC0;
  if (!qword_256F64CC0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD821CC, &_s17EvaluatorVoteTypeO17FailureCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64CC0);
  }
  return result;
}

unint64_t sub_23FD2F7FC()
{
  unint64_t result;

  result = qword_256F64CC8;
  if (!qword_256F64CC8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD82154, &_s17EvaluatorVoteTypeO17SuccessCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64CC8);
  }
  return result;
}

unint64_t sub_23FD2F83C()
{
  unint64_t result;

  result = qword_256F64CD0;
  if (!qword_256F64CD0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD8217C, &_s17EvaluatorVoteTypeO17SuccessCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64CD0);
  }
  return result;
}

unint64_t sub_23FD2F87C()
{
  unint64_t result;

  result = qword_256F64CD8;
  if (!qword_256F64CD8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD82244, &_s17EvaluatorVoteTypeO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64CD8);
  }
  return result;
}

unint64_t sub_23FD2F8BC()
{
  unint64_t result;

  result = qword_256F64CE0;
  if (!qword_256F64CE0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD8226C, &_s17EvaluatorVoteTypeO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256F64CE0);
  }
  return result;
}

uint64_t sub_23FD2F900()
{
  return sub_23FD75290();
}

uint64_t sub_23FD2F914()
{
  return sub_23FD752D8();
}

uint64_t sub_23FD2F920@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_23FD2F92C()
{
  return sub_23FD754B8();
}

uint64_t sub_23FD2F944()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
}

unint64_t sub_23FD2F954()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 4;
  return sub_23FD2CA90();
}

uint64_t sub_23FD2F960()
{
  return sub_23FD73DE4();
}

unint64_t sub_23FD2F968()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 3;
  return sub_23FD2CACC();
}

unint64_t sub_23FD2F974()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 68) = 1;
  return sub_23FD2CB44();
}

uint64_t sub_23FD2F994()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FD2F9A8@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

unint64_t sub_23FD2F9B4()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 2;
  return sub_23FD2F508();
}

unint64_t sub_23FD2F9C0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 67) = 2;
  return sub_23FD2CB08();
}

uint64_t sub_23FD2F9CC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_23FD2F9D8(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t))sub_23FCF9BF8);
}

uint64_t sub_23FD2F9D8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, unint64_t))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((a4 & 1) == 0)
    goto LABEL_2;
  sub_23FD7538C();
  swift_unknownObjectRetain_n();
  v11 = swift_dynamicCastClass();
  if (!v11)
  {
    sub_23FD20554();
    v11 = MEMORY[0x24BEE4AF8];
  }
  v12 = *(_QWORD *)(v11 + 16);
  swift_release();
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v12 != (a4 >> 1) - a3)
  {
LABEL_11:
    swift_unknownObjectRelease();
LABEL_2:
    v10 = a5(a1, a2, a3, a4);
    goto LABEL_9;
  }
  v10 = swift_dynamicCastClass();
  if (!v10)
  {
    sub_23FD20554();
    v10 = MEMORY[0x24BEE4AF8];
  }
LABEL_9:
  sub_23FD20554();
  return v10;
}

uint64_t sub_23FD2FABC(uint64_t result, uint64_t a2)
{
  unint64_t v3;
  char v4;
  unint64_t v5;

  if (result < 0)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v3 = *(_QWORD *)(a2 + 16);
  result = sub_23FD309EC(0, result, v3);
  if ((v4 & 1) != 0)
    v5 = v3;
  else
    v5 = result;
  if ((v5 & 0x8000000000000000) != 0)
    goto LABEL_9;
  if (v3 >= v5)
    return a2;
LABEL_10:
  __break(1u);
  return result;
}

void static TextChunker.getTextChunks(text:chunkTokenSize:maxChunkSizeChars:maxNumChunks:minChunkTokensToEmbed:nonOverlappingChunks:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  void (*v18)(_QWORD, _QWORD);
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  id v93;
  int v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void (*v106)(_QWORD, _QWORD);
  unint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;

  v100 = a6;
  v95 = a5;
  v112 = a4;
  v105 = a3;
  v10 = sub_23FD712D0();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12);
  v14 = (char *)&v93 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = a1;
  v115 = a2;
  sub_23FD712C4();
  v107 = sub_23FD307D8();
  v15 = sub_23FD7505C();
  v17 = v16;
  v18 = *(void (**)(_QWORD, _QWORD))(v11 + 8);
  v108 = v14;
  v109 = v10;
  v106 = v18;
  v18(v14, v10);
  sub_23FC1002C();
  v19 = HIBYTE(v17) & 0xF;
  if ((v17 & 0x2000000000000000) == 0)
    v19 = v15 & 0xFFFFFFFFFFFFLL;
  if (v19)
  {
    v94 = a7;
    v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDFD70]), sel_initWithUnit_, 1);
    sub_23FD30998(a1, a2, v20);
    v93 = v20;
    v21 = sub_23FD74F30();
    v101 = *(_QWORD **)(v21 + 16);
    if (v101)
    {
      v99 = v21 + 32;
      v96 = a1;
      v97 = a2;
      v98 = v21;
      if (*(_QWORD *)(v21 + 16))
      {
        v113 = MEMORY[0x24BEE4AF8];
        v102 = 0;
        sub_23FD74C9C();
        sub_23FD30C3C();
      }
LABEL_87:
      __break(1u);
      goto LABEL_88;
    }
    sub_23FC58D60();
    v22 = MEMORY[0x24BEE4AF8];
    v23 = MEMORY[0x24BEE4AF8];
    v24 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
    if (!v24)
    {
LABEL_92:
      __break(1u);
      return;
    }
    v25 = 0;
    v99 = v24 - 1;
    v110 = MEMORY[0x24BEE4AF8] + 32;
    v26 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 40);
    v27 = MEMORY[0x24BEE4AF8];
    v103 = MEMORY[0x24BEE4AF8];
    v104 = MEMORY[0x24BEE4AF8];
    v111 = MEMORY[0x24BEE4AF8];
    v113 = MEMORY[0x24BEE4AF8];
    do
    {
      v28 = *(_QWORD *)(v23 + 16);
      v101 = v26;
      v102 = v25;
      if (v25 >= v28)
      {
        v30 = 0;
        v31 = MEMORY[0x24BEE4AF8];
      }
      else
      {
        v98 = v27;
        v29 = 0;
        v30 = 0;
        v31 = MEMORY[0x24BEE4AF8];
        while (1)
        {
          if (v25 >= v28)
          {
            __break(1u);
LABEL_83:
            __break(1u);
LABEL_84:
            __break(1u);
LABEL_85:
            __break(1u);
LABEL_86:
            __break(1u);
            goto LABEL_87;
          }
          if (v25 >= *(_QWORD *)(v22 + 16))
            goto LABEL_83;
          v33 = *(v26 - 1);
          v32 = *v26;
          v34 = *(_QWORD *)(v110 + 8 * v25);
          sub_23FC5AFCC();
          v35 = sub_23FD74C3C();
          if (*(_QWORD *)(v31 + 16))
          {
            if (__OFADD__(v30, v34))
              goto LABEL_86;
            if (v30 + v34 > v105)
              break;
          }
          v36 = __OFADD__(v29, v35);
          v29 += v35;
          if (v36)
            goto LABEL_84;
          if (v29 > v112)
            break;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_23FC9954C();
            v31 = v40;
          }
          v38 = *(_QWORD *)(v31 + 16);
          v37 = *(_QWORD *)(v31 + 24);
          if (v38 >= v37 >> 1)
          {
            sub_23FD30BE8(v37);
            sub_23FC9954C();
            v31 = v41;
          }
          *(_QWORD *)(v31 + 16) = v38 + 1;
          v39 = v31 + 16 * v38;
          *(_QWORD *)(v39 + 32) = v33;
          *(_QWORD *)(v39 + 40) = v32;
          v36 = __OFADD__(v30, v34);
          v30 += v34;
          if (v36)
            goto LABEL_85;
          ++v25;
          v23 = v113;
          v28 = *(_QWORD *)(v113 + 16);
          v26 += 2;
          v22 = v111;
          if (v25 >= v28)
          {
            v27 = v98;
            goto LABEL_43;
          }
        }
        sub_23FC1002C();
        v114 = v31;
        sub_23FBFD684((uint64_t *)&unk_256F61630);
        sub_23FD30BA4();
        sub_23FD30B44();
        sub_23FC5A648();
        sub_23FD30ACC();
        sub_23FD30BD0();
        v42 = sub_23FD30BB4();
        v44 = v43;
        sub_23FD30ABC();
        sub_23FD30BAC();
        sub_23FC5AFCC();
        v45 = v104;
        if ((sub_23FD30ADC() & 1) == 0)
        {
          sub_23FD30A38();
          v45 = v70;
        }
        v22 = v111;
        v27 = v98;
        v104 = v45;
        sub_23FD30B38();
        if (v46)
        {
          sub_23FD30B20();
          v104 = v71;
        }
        sub_23FD30BFC();
        v47 = v103;
        if ((sub_23FD30ADC() & 1) == 0)
        {
          sub_23FD30AF0();
          v47 = v72;
        }
        v48 = *(_QWORD *)(v47 + 16);
        v103 = v47;
        sub_23FD30B38();
        if (v46)
        {
          sub_23FD30B08();
          v103 = v73;
        }
        v49 = v103;
        *(_QWORD *)(v103 + 16) = v47;
        *(_QWORD *)(v49 + 8 * v48 + 32) = v25;
        if (v30 <= v100)
        {
          sub_23FC1002C();
        }
        else
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_23FD30AE4();
            v27 = v74;
          }
          v50 = *(_QWORD *)(v27 + 16);
          sub_23FD30B38();
          if (v46)
          {
            sub_23FD30AE4();
            v27 = v75;
          }
          *(_QWORD *)(v27 + 16) = v47;
          v51 = v27 + 16 * v50;
          *(_QWORD *)(v51 + 32) = v42;
          *(_QWORD *)(v51 + 40) = v44;
        }
        v31 = MEMORY[0x24BEE4AF8];
        v23 = v113;
      }
LABEL_43:
      if (*(_QWORD *)(v31 + 16))
      {
        v114 = v31;
        sub_23FBFD684((uint64_t *)&unk_256F61630);
        sub_23FD30BA4();
        sub_23FD30B44();
        sub_23FC5A648();
        sub_23FD30ACC();
        sub_23FD30BD0();
        v52 = sub_23FD30BB4();
        v54 = v53;
        sub_23FD30ABC();
        sub_23FD30BAC();
        sub_23FC5AFCC();
        v55 = v104;
        if ((sub_23FD30ADC() & 1) == 0)
        {
          sub_23FD30A38();
          v55 = v64;
        }
        v104 = v55;
        sub_23FD30B38();
        if (v46)
        {
          sub_23FD30B20();
          v104 = v65;
        }
        sub_23FD30BFC();
        v56 = *(_QWORD *)(v113 + 16);
        v57 = v103;
        if ((sub_23FD30ADC() & 1) == 0)
        {
          sub_23FD30AF0();
          v57 = v66;
        }
        v59 = *(_QWORD *)(v57 + 16);
        v58 = *(_QWORD *)(v57 + 24);
        v103 = v57;
        v60 = v59 + 1;
        if (v59 >= v58 >> 1)
        {
          sub_23FD30B08();
          v103 = v67;
        }
        v61 = v103;
        *(_QWORD *)(v103 + 16) = v60;
        *(_QWORD *)(v61 + 8 * v59 + 32) = v56;
        if (v30 <= v100)
        {
          sub_23FC1002C();
        }
        else
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_23FD30AE4();
            v27 = v68;
          }
          v62 = *(_QWORD *)(v27 + 16);
          sub_23FD30B38();
          if (v46)
          {
            sub_23FD30AE4();
            v27 = v69;
          }
          *(_QWORD *)(v27 + 16) = v60;
          v63 = v27 + 16 * v62;
          *(_QWORD *)(v63 + 32) = v52;
          *(_QWORD *)(v63 + 40) = v54;
        }
        v23 = v113;
      }
      else
      {
        sub_23FC5A648();
      }
      v25 = v102 + 1;
      v26 = v101 + 2;
    }
    while (v102 != v99);
    if ((v94 & 1) != 0 || *(_QWORD *)(v27 + 16) > v95)
    {
      v76 = *(_QWORD *)(v23 + 16);
      if (v76)
      {
        v77 = 0;
        v78 = v104 + 32;
        v79 = v103 + 32;
        v80 = MEMORY[0x24BEE4AF8];
        while ((v77 & 0x8000000000000000) == 0)
        {
          if (v77 >= *(_QWORD *)(v104 + 16))
            goto LABEL_89;
          v81 = (uint64_t *)(v78 + 16 * v77);
          swift_bridgeObjectRetain();
          v82 = sub_23FD74C3C();
          sub_23FC5A648();
          if (v82 > v100)
          {
            if (v77 >= *(_QWORD *)(v104 + 16))
              goto LABEL_91;
            v84 = *v81;
            v83 = v81[1];
            sub_23FC5AFCC();
            if ((sub_23FD30ADC() & 1) == 0)
            {
              sub_23FD30A38();
              v80 = v87;
            }
            v85 = *(_QWORD *)(v80 + 16);
            if (v85 >= *(_QWORD *)(v80 + 24) >> 1)
            {
              sub_23FC9954C();
              v80 = v88;
            }
            *(_QWORD *)(v80 + 16) = v85 + 1;
            v86 = v80 + 16 * v85;
            *(_QWORD *)(v86 + 32) = v84;
            *(_QWORD *)(v86 + 40) = v83;
          }
          if (v77 >= *(_QWORD *)(v103 + 16))
            goto LABEL_90;
          v77 = *(_QWORD *)(v79 + 8 * v77);
          if ((uint64_t)v77 >= v76)
            goto LABEL_79;
        }
LABEL_88:
        __break(1u);
LABEL_89:
        __break(1u);
LABEL_90:
        __break(1u);
LABEL_91:
        __break(1u);
        goto LABEL_92;
      }
      v80 = MEMORY[0x24BEE4AF8];
LABEL_79:
      v89 = sub_23FD2FABC(v95, v80);
      sub_23FD2F9D8(v89, v90, v91, v92, (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t))sub_23FCF9CF8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_23FC15A24();
    }
    swift_bridgeObjectRelease();
    sub_23FC1002C();
    sub_23FC102FC();

  }
}

void sub_23FD30754(uint64_t a1)
{
  sub_23FD30894(a1, (void (*)(_QWORD))MEMORY[0x24BE55BE0]);
}

void sub_23FD30760(uint64_t a1)
{
  sub_23FD3091C(a1, &qword_256F5D948);
}

void sub_23FD3076C(uint64_t a1)
{
  if (a1 < 0)
  {
    sub_23FD30A68();
    sub_23FD30A50();
    __break(1u);
  }
  else
  {
    if (a1)
      *(_QWORD *)(sub_23FD74D2C() + 16) = a1;
    sub_23FCF295C();
  }
}

unint64_t sub_23FD307D8()
{
  unint64_t result;

  result = qword_256F64CE8;
  if (!qword_256F64CE8)
  {
    result = MEMORY[0x2426797E8](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_256F64CE8);
  }
  return result;
}

void sub_23FD30814(uint64_t a1)
{
  if (a1 < 0)
  {
    sub_23FD30A68();
    sub_23FD30A50();
    __break(1u);
  }
  else
  {
    if (a1)
    {
      sub_23FBFD684(&qword_256F5F960);
      *(_QWORD *)(sub_23FD74D2C() + 16) = a1;
    }
    sub_23FCF295C();
  }
}

void sub_23FD30888(uint64_t a1)
{
  sub_23FD30894(a1, (void (*)(_QWORD))type metadata accessor for SessionCoordinatorCommand);
}

void sub_23FD30894(uint64_t a1, void (*a2)(_QWORD))
{
  if (a1 < 0)
  {
    sub_23FD30A68();
    sub_23FD30A50();
    __break(1u);
  }
  else
  {
    if (a1)
    {
      a2(0);
      *(_QWORD *)(sub_23FD30C10() + 16) = a1;
    }
    a2(0);
    sub_23FD30B74();
    sub_23FC9C750();
  }
}

void sub_23FD30910(uint64_t a1)
{
  sub_23FD3091C(a1, &qword_256F5FA60);
}

void sub_23FD3091C(uint64_t a1, uint64_t *a2)
{
  if (a1 < 0)
  {
    sub_23FD30A68();
    sub_23FD30A50();
    __break(1u);
  }
  else
  {
    if (a1)
    {
      sub_23FBFD684(a2);
      *(_QWORD *)(sub_23FD30C10() + 16) = a1;
    }
    sub_23FBFD684(a2);
    sub_23FD30B74();
    sub_23FC9C750();
  }
}

void sub_23FD30998(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = (id)sub_23FD74BE8();
  objc_msgSend(a3, sel_setString_, v4);

}

ValueMetadata *type metadata accessor for TextChunker()
{
  return &type metadata for TextChunker;
}

uint64_t sub_23FD309EC(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  BOOL v5;

  v3 = a3 - result;
  if (__OFSUB__(a3, result))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  if (a2 < 1)
  {
    if (v3 <= 0 && v3 > a2)
      return 0;
  }
  else if ((v3 & 0x8000000000000000) == 0 && v3 < (unint64_t)a2)
  {
    return 0;
  }
  v5 = __OFADD__(result, a2);
  result += a2;
  if (v5)
    goto LABEL_14;
  return result;
}

void sub_23FD30A38()
{
  sub_23FC9954C();
}

uint64_t sub_23FD30A50()
{
  return sub_23FD75224();
}

void sub_23FD30A80()
{
  sub_23FC9954C();
}

void sub_23FD30A98()
{
  sub_23FC9994C();
}

void sub_23FD30AB0()
{
  sub_23FC9994C();
}

uint64_t sub_23FD30ABC()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v1 - 168))(v0, *(_QWORD *)(v1 - 144));
}

uint64_t sub_23FD30ACC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 104) = v0;
  *(_QWORD *)(v2 - 96) = v1;
  return sub_23FD712C4();
}

uint64_t sub_23FD30ADC()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

void sub_23FD30AE4()
{
  sub_23FC9954C();
}

void sub_23FD30AF0()
{
  sub_23FC9994C();
}

void sub_23FD30B08()
{
  sub_23FC9994C();
}

void sub_23FD30B20()
{
  sub_23FC9954C();
}

uint64_t sub_23FD30B44()
{
  return sub_23FD74BD0();
}

uint64_t sub_23FD30B5C()
{
  return sub_23FD74BD0();
}

uint64_t sub_23FD30B74()
{
  uint64_t v0;

  return v0;
}

void sub_23FD30B90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v3 + 16) = v0;
  *(_QWORD *)(v3 + 8 * v2 + 32) = v1;

}

unint64_t sub_23FD30BA4()
{
  return sub_23FCBB890();
}

uint64_t sub_23FD30BAC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FD30BB4()
{
  return sub_23FD7505C();
}

void sub_23FD30BBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v5 = *(_QWORD *)(v4 - 112);
  *(_QWORD *)(v5 + 16) = v0;
  v6 = v5 + 16 * v3;
  *(_QWORD *)(v6 + 32) = v1;
  *(_QWORD *)(v6 + 40) = v2;
}

uint64_t sub_23FD30BD0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FD30BDC()
{
  return sub_23FD74C3C();
}

BOOL sub_23FD30BE8@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

void sub_23FD30BFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v5 = *(_QWORD *)(v4 - 184);
  *(_QWORD *)(v5 + 16) = v0;
  v6 = v5 + 16 * v2;
  *(_QWORD *)(v6 + 32) = v3;
  *(_QWORD *)(v6 + 40) = v1;
}

uint64_t sub_23FD30C10()
{
  return sub_23FD74D2C();
}

void sub_23FD30C1C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 112) = v0;
}

uint64_t sub_23FD30C30()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 104) = v0;
  return swift_bridgeObjectRetain();
}

void sub_23FD30C3C()
{
  JUMPOUT(0x2426789D8);
}

ValueMetadata *type metadata accessor for StandardToolboxConfiguration()
{
  return &type metadata for StandardToolboxConfiguration;
}

uint64_t static ToolboxManager.toolboxes()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[5];
  uint64_t v13[5];

  v0 = sub_23FD73484();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0, v2);
  v4 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[3] = sub_23FD72C50();
  v13[4] = sub_23FC606B8(&qword_256F64CF0, (uint64_t (*)(uint64_t))MEMORY[0x24BE544D8], MEMORY[0x24BE544C8]);
  sub_23FBFDDEC(v13);
  sub_23FD72C44();
  v12[3] = sub_23FD72C08();
  v12[4] = sub_23FC606B8(&qword_256F64CF8, (uint64_t (*)(uint64_t))MEMORY[0x24BE54498], MEMORY[0x24BE54488]);
  sub_23FBFDDEC(v12);
  sub_23FD72BFC();
  sub_23FBFD684(&qword_256F64D00);
  v5 = sub_23FBFD684(&qword_256F64D08);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  v7 = (v6 + 32) & ~v6;
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_23FD769D0;
  v9 = v8 + v7 + *(int *)(v5 + 48);
  sub_23FD73550();
  sub_23FD73478();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  sub_23FC60768((uint64_t)v13, v9);
  sub_23FC60768((uint64_t)v12, v9 + 40);
  sub_23FD71E64();
  sub_23FC606B8(&qword_254346B48, (uint64_t (*)(uint64_t))MEMORY[0x24BE537F8], MEMORY[0x24BE53808]);
  v10 = sub_23FD74B40();
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v12);
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v13);
  return v10;
}

ValueMetadata *type metadata accessor for ToolboxManager()
{
  return &type metadata for ToolboxManager;
}

uint64_t destroy for ToolBoxDelegates(uint64_t a1)
{
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(a1);
  return _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(a1 + 40);
}

uint64_t initializeWithCopy for ToolBoxDelegates(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
  return a1;
}

uint64_t *assignWithCopy for ToolBoxDelegates(uint64_t *a1, uint64_t *a2)
{
  sub_23FBFDB34(a1, a2);
  sub_23FBFDB34(a1 + 5, a2 + 5);
  return a1;
}

void *initializeWithTake for ToolBoxDelegates(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x50uLL);
}

uint64_t assignWithTake for ToolBoxDelegates(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolBoxDelegates(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 80))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ToolBoxDelegates(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ToolBoxDelegates()
{
  return &type metadata for ToolBoxDelegates;
}

void sub_23FD31014(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  sub_23FD3105C(a1, a2, a3, type metadata accessor for FeedbackLearning.CandidateEvaluation, (uint64_t)sub_23FC9B4F0);
}

void sub_23FD31038(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  sub_23FD3105C(a1, a2, a3, _s23ParameterStepEvaluationVMa, (uint64_t)sub_23FC9B684);
}

void sub_23FD3105C(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), uint64_t a5)
{
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(_QWORD);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(char *);
  uint64_t v29;
  uint64_t v30;

  v22 = a5;
  v6 = a4;
  v28 = a1;
  v29 = a2;
  v8 = a4(0);
  v27 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v9);
  sub_23FBFEFCC();
  v26 = v10;
  MEMORY[0x24BDAC7A8](v11, v12);
  v14 = (char *)&v22 - v13;
  v30 = MEMORY[0x24BEE4AF8];
  v25 = *(_QWORD *)(a3 + 16);
  if (v25)
  {
    v15 = 0;
    v16 = MEMORY[0x24BEE4AF8];
    v23 = v6;
    v24 = a3;
    while (v15 < *(_QWORD *)(a3 + 16))
    {
      v17 = (*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
      v18 = *(_QWORD *)(v27 + 72);
      sub_23FC0EDD8(a3 + v17 + v18 * v15, (uint64_t)v14, v6);
      v19 = v28(v14);
      if (v5)
      {
        sub_23FD3D674();
        swift_release();
        sub_23FC103E8();
        goto LABEL_16;
      }
      if ((v19 & 1) != 0)
      {
        sub_23FC0F380((uint64_t)v14, v26, v6);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_23FD3D650(0, *(_QWORD *)(v16 + 16) + 1);
        v16 = v30;
        v21 = *(_QWORD *)(v30 + 16);
        v20 = *(_QWORD *)(v30 + 24);
        if (v21 >= v20 >> 1)
        {
          sub_23FD3D650(v20 > 1, v21 + 1);
          v16 = v30;
        }
        *(_QWORD *)(v16 + 16) = v21 + 1;
        v6 = v23;
        sub_23FC0F380(v26, v16 + v17 + v21 * v18, v23);
        a3 = v24;
      }
      else
      {
        sub_23FD3D674();
      }
      if (v25 == ++v15)
        goto LABEL_15;
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    sub_23FC103E8();
LABEL_16:
    sub_23FC06000();
  }
}

void sub_23FD31224(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v7 = sub_23FBFD684(qword_256F5DFD8);
  v24 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v8);
  sub_23FBFEFCC();
  v23 = v9;
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)v20 - v12;
  v25 = MEMORY[0x24BEE4AF8];
  v22 = *(_QWORD *)(a3 + 16);
  if (v22)
  {
    v14 = 0;
    v20[1] = a2;
    v21 = a3;
    v20[0] = a1;
    while (v14 < *(_QWORD *)(a3 + 16))
    {
      v15 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
      v16 = *(_QWORD *)(v24 + 72);
      sub_23FC0F3AC(a3 + v15 + v16 * v14, (uint64_t)v13, qword_256F5DFD8);
      v17 = a1(v13);
      if (v3)
      {
        sub_23FBFEF74((uint64_t)v13, qword_256F5DFD8);
        swift_release();
        sub_23FC103E8();
        goto LABEL_16;
      }
      if ((v17 & 1) != 0)
      {
        sub_23FC0EE04((uint64_t)v13, v23, qword_256F5DFD8);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_23FC9B6DC();
        v18 = v25;
        sub_23FD3D408();
        if (v19)
        {
          sub_23FC9B6DC();
          v18 = v25;
        }
        *(_QWORD *)(v18 + 16) = a3;
        sub_23FC0EE04(v23, v18 + v15 + (_QWORD)a1 * v16, qword_256F5DFD8);
        a3 = v21;
        a1 = (uint64_t (*)(char *))v20[0];
      }
      else
      {
        sub_23FBFEF74((uint64_t)v13, qword_256F5DFD8);
      }
      if (v22 == ++v14)
        goto LABEL_15;
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    sub_23FC103E8();
LABEL_16:
    sub_23FC06000();
  }
}

void sub_23FD31410(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  sub_23FD3105C(a1, a2, a3, _s19ValueStepEvaluationVMa, (uint64_t)sub_23FC9B760);
}

void sub_23FD31434(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  sub_23FD3105C(a1, a2, a3, _s19SystemResponseEventVMa, (uint64_t)sub_23FC9BC68);
}

void sub_23FD31458(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  sub_23FD3105C(a1, a2, a3, _s18ToolStepEvaluationVMa, (uint64_t)sub_23FC9BCEC);
}

uint64_t sub_23FD3147C(uint64_t (*a1)(_QWORD), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(_QWORD);
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;

  v28 = sub_23FD74474();
  v7 = *(_QWORD *)(v28 - 8);
  v9 = MEMORY[0x24BDAC7A8](v28, v8);
  v27 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v9, v11);
  v14 = (char *)&v21 - v13;
  v15 = MEMORY[0x24BEE4AF8];
  v29 = MEMORY[0x24BEE4AF8];
  v26 = *(_QWORD *)(a3 + 16);
  if (v26)
  {
    v16 = 0;
    v23 = a2;
    v24 = a3;
    v22 = a1;
    while (v16 < *(_QWORD *)(a3 + 16))
    {
      v17 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      v15 = *(_QWORD *)(v7 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v14, a3 + v17 + v15 * v16, v28);
      v18 = a1(v14);
      if (v3)
      {
        (*(void (**)(char *, uint64_t))(v7 + 8))(v14, v28);
        swift_bridgeObjectRelease();
        swift_release();
        return v15;
      }
      if ((v18 & 1) != 0)
      {
        v25 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
        v25(v27, v14, v28);
        v19 = v29;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23FC9B83C();
          v19 = v29;
        }
        v20 = *(_QWORD *)(v19 + 16);
        if (v20 >= *(_QWORD *)(v19 + 24) >> 1)
        {
          sub_23FC9B83C();
          v19 = v29;
        }
        *(_QWORD *)(v19 + 16) = v20 + 1;
        result = ((uint64_t (*)(unint64_t, char *, uint64_t))v25)(v19 + v17 + v20 * v15, v27, v28);
        v29 = v19;
        a3 = v24;
        a1 = v22;
      }
      else
      {
        result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v14, v28);
      }
      if (v26 == ++v16)
      {
        v15 = v29;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return v15;
  }
  return result;
}

void sub_23FD3168C(uint64_t a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  sub_23FD316C4(a1, a2);
  sub_23FC09258();
}

id sub_23FD316C4(uint64_t a1, void *a2)
{
  void *v2;
  objc_class *ObjectType;
  char *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  objc_super v13;

  ObjectType = (objc_class *)swift_getObjectType();
  v6 = v2;
  v7 = sub_23FD725CC();
  v8 = (uint64_t *)&v6[OBJC_IVAR____TtCC23IntelligenceFlowRuntime23ToolboxXPCServiceServer6Server_clientApplicationIdentifier];
  *v8 = v7;
  v8[1] = v9;

  v13.receiver = v6;
  v13.super_class = ObjectType;
  v10 = objc_msgSendSuper2(&v13, sel_init);

  v11 = sub_23FD725D8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(a1, v11);
  return v10;
}

void sub_23FD31768()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23FD3D518();
  sub_23FC7A734();
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v4, v5);
  v6 = sub_23FD3CA6C();
  sub_23FD3CAA8(v6);
  v7 = sub_23FC58AA0();
  *(_QWORD *)(v7 + 16) = v2;
  *(_QWORD *)(v7 + 24) = v1;
  v8 = sub_23FC58AA0();
  *(_QWORD *)(v8 + 16) = v3;
  *(_QWORD *)(v8 + 24) = v0;
  sub_23FD722FC();
  sub_23FD3D5E4();
  sub_23FC10108();
  sub_23FD3D25C();
  swift_release();
  sub_23FC58C6C();
  sub_23FC58AC0();
  sub_23FD3CE10();
  sub_23FC6264C();
}

uint64_t sub_23FD31818(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3[40] = a2;
  v3[41] = a3;
  v3[39] = a1;
  v4 = sub_23FD73448();
  v3[42] = v4;
  v3[43] = *(_QWORD *)(v4 - 8);
  v3[44] = swift_task_alloc();
  v5 = sub_23FD749C0();
  v3[45] = v5;
  v3[46] = *(_QWORD *)(v5 - 8);
  v3[47] = swift_task_alloc();
  v3[48] = sub_23FBFD684(&qword_256F64E48);
  v3[49] = swift_task_alloc();
  v3[50] = swift_task_alloc();
  v3[51] = swift_task_alloc();
  v3[52] = swift_task_alloc();
  v3[53] = swift_task_alloc();
  sub_23FBFD684(&qword_256F64E50);
  v3[54] = swift_task_alloc();
  v6 = sub_23FD74A2C();
  v3[55] = v6;
  v3[56] = *(_QWORD *)(v6 - 8);
  v3[57] = swift_task_alloc();
  v3[58] = swift_task_alloc();
  v7 = sub_23FD743D8();
  v3[59] = v7;
  v3[60] = *(_QWORD *)(v7 - 8);
  v3[61] = swift_task_alloc();
  v3[62] = swift_task_alloc();
  v8 = sub_23FD74474();
  v3[63] = v8;
  v3[64] = *(_QWORD *)(v8 - 8);
  v3[65] = swift_task_alloc();
  v9 = sub_23FD723C8();
  v3[66] = v9;
  v3[67] = *(_QWORD *)(v9 - 8);
  v3[68] = swift_task_alloc();
  sub_23FBFD684(&qword_256F64E58);
  v3[69] = swift_task_alloc();
  v3[70] = swift_task_alloc();
  sub_23FBFD684(&qword_254346D90);
  v3[71] = swift_task_alloc();
  sub_23FBFD684(&qword_254346A08);
  v3[72] = swift_task_alloc();
  sub_23FBFD684(&qword_256F5E308);
  v3[73] = swift_task_alloc();
  v10 = sub_23FD71E64();
  v3[74] = v10;
  v3[75] = *(_QWORD *)(v10 - 8);
  v3[76] = swift_task_alloc();
  v3[77] = swift_task_alloc();
  v11 = sub_23FD72BF0();
  v3[78] = v11;
  v3[79] = *(_QWORD *)(v11 - 8);
  v3[80] = swift_task_alloc();
  v3[81] = swift_task_alloc();
  v3[82] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23FD31B00()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t);
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(_QWORD, uint64_t, _QWORD);
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  NSObject *v52;
  uint64_t v53;
  os_log_type_t v54;
  _BOOL4 v55;
  void (*v56)(uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  void (*v84)(unint64_t, _QWORD, uint64_t);
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  os_log_type_t v91;
  uint8_t *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;

  v1 = v0;
  v94 = (uint64_t)(v0 + 34);
  v2 = (void *)v0[82];
  sub_23FCD5044();
  sub_23FD3CA88();
  sub_23FD72BE4();
  v3 = sub_23FD3CEBC();
  v4 = sub_23FC09114(v3);
  v5 = MEMORY[0x24BEE4AD8];
  v96 = v0;
  if (v4)
  {
    sub_23FBFEFF4();
    v6 = sub_23FBFEFF4();
    sub_23FD3D178(v6);
    sub_23FD3CAE8(4.8149e-34);
    v7 = sub_23FD3D2E4();
    v0[38] = sub_23FD3CD80(v7, v8, v9);
    sub_23FD3CC4C();
    sub_23FC75E60();
    sub_23FC091B8(&dword_23FBF8000, v10, v11, "Determining readiness for %s's toolbox.");
    sub_23FBFF10C();
    sub_23FBFEFA0();
  }
  v12 = v0[79];
  sub_23FC10048();

  v13 = *(void (**)(uint64_t))(v12 + 8);
  v14 = sub_23FBFF1AC();
  v13(v14);
  v1[83] = v13;
  sub_23FC10108();
  sub_23FD3CB40();
  if (sub_23FD3CC10() == 1)
  {
    v15 = v1[81];
    sub_23FBFEF74(v1[73], &qword_256F5E308);
    sub_23FCD5044();
    sub_23FD3CA88();
    sub_23FD72BE4();
    v16 = sub_23FC09250();
    if (os_log_type_enabled(v15, v16))
    {
      v91 = v16;
      v17 = sub_23FBFEFF4();
      v97 = sub_23FBFEFF4();
      *(_DWORD *)v17 = 136315394;
      v18 = sub_23FC5AAE8();
      v1[35] = sub_23FD3CC20(v18, v19, &v97);
      sub_23FC5E498();
      sub_23FC75E60();
      v92 = (uint8_t *)v17;
      *(_WORD *)(v17 + 12) = 2080;
      v20 = sub_23FD71E40();
      v21 = *(_QWORD *)(v20 + 16);
      if (v21)
      {
        v22 = v1[75];
        v23 = sub_23FD3D458(MEMORY[0x24BEE4AF8]);
        sub_23FD3CC90(v23, v21);
        sub_23FC102C4();
        v25 = v20 + v24;
        v95 = *(_QWORD *)(v22 + 72);
        v26 = *(void (**)(_QWORD, uint64_t, _QWORD))(v22 + 16);
        do
        {
          v26(v96[76], v25, v96[74]);
          sub_23FD71E58();
          sub_23FD3CBB8();
          v27 = v98;
          if ((sub_23FD3D4D4() & 1) == 0)
          {
            sub_23FD3CABC(*(_QWORD *)(v27 + 16));
            v27 = v98;
          }
          v29 = *(_QWORD *)(v27 + 16);
          v28 = *(_QWORD *)(v27 + 24);
          if (v29 >= v28 >> 1)
          {
            sub_23FD3CAD0(v28);
            v27 = v98;
          }
          *(_QWORD *)(v27 + 16) = v29 + 1;
          v30 = v27 + 16 * v29;
          *(_QWORD *)(v30 + 32) = v5;
          *(_QWORD *)(v30 + 40) = v13;
          v25 += v95;
          --v21;
        }
        while (v21);
        sub_23FD3D388();
        v1 = v96;
      }
      else
      {
        swift_bridgeObjectRelease();
        v27 = MEMORY[0x24BEE4AF8];
      }
      v1[34] = v27;
      sub_23FBFD684((uint64_t *)&unk_256F61630);
      sub_23FD3CC74();
      sub_23FD74BD0();
      sub_23FD3D3A0();
      v1[32] = sub_23FCCCD7C(v94, v47, &v97);
      sub_23FC5E69C();
      sub_23FC5A2A8();
      sub_23FC59250(&dword_23FBF8000, v15, v91, "Invalid planner type (%s while determining readiness. Possible values: [%s]", v92);
      sub_23FC58F90();
      sub_23FBFEFA0();
    }
    sub_23FC10048();

    v38 = sub_23FC5E880();
    v13(v38);
    v49 = v1[40];
    v48 = v1[41];
    sub_23FD3B5A0();
    v50 = sub_23FC5A704();
    *v51 = v49;
    v51[1] = v48;
    sub_23FD3CBD0(v50, (uint64_t)v51);
    sub_23FD1FE10();
    goto LABEL_21;
  }
  sub_23FD3CDE8(v1[75]);
  v31 = static ToolboxManager.toolboxes()();
  sub_23FD3CC7C(v31);
  v32 = sub_23FC595E0();
  if (!v1[15])
  {
    v39 = v1[77];
    v40 = v1[75];
    v41 = v1[74];
    sub_23FC7E2CC(v32, &qword_256F64D78);
    sub_23FD3B5A0();
    v42 = sub_23FC5A704();
    sub_23FD3CA94(v42, v43);
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v39, v41);
    goto LABEL_21;
  }
  v33 = v1[72];
  sub_23FD3CEA4(v1 + 2, v1 + 12);
  sub_23FD3D694();
  sub_23FD3D2AC((uint64_t)(v1 + 2));
  sub_23FD3CFE8((uint64_t)(v1 + 7));
  v34 = sub_23FD3CF2C();
  v37 = sub_23FD3CAFC(v33, v35, v36, v34);
  sub_23FD3CE54(v37);
  v1[84] = sub_23FD732D4();
  if (v1 == (_QWORD *)-216)
  {
    v44 = sub_23FD732B0();
    v46 = v45;
    MEMORY[0x1D0] = v44;
    MEMORY[0x1D8] = v45;
    sub_23FD74678();
    sub_23FD7466C();
    v93 = v44;
    sub_23FD74624();
    sub_23FCDE018(&qword_256F64E60, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BEB9468], MEMORY[0x24BEB9460]);
    sub_23FD74660();
    v65 = MEMORY[0x150];
    sub_23FC58AC8();
    v66 = sub_23FBFF1AC();
    sub_23FC0F3AC(v66, v67, v68);
    v69 = sub_23FD7463C();
    if (sub_23FC75988(v65) == 1)
    {
      sub_23FBFEF74(MEMORY[0x150], &qword_256F64E58);
      v70 = 0;
      v71 = 0xF000000000000000;
      v72 = v46 >> 60;
    }
    else
    {
      v74 = sub_23FD74630();
      v71 = v79;
      v70 = v74;
      sub_23FBFF204(MEMORY[0x150], *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 8));
      if (v46 >> 60 != 15)
      {
        if (v71 >> 60 != 15)
        {
          v85 = sub_23FD3D354();
          v73 = MEMORY[0x242675180](v85, v46, v70, v71);
          sub_23FD3D56C();
          sub_23FD3D4EC(v93);
          goto LABEL_30;
        }
        goto LABEL_29;
      }
      v72 = v71 >> 60;
    }
    if (v72 > 0xE)
    {
      v73 = 1;
LABEL_30:
      MEMORY[0x210] = v73 & 1;
      MEMORY[0x1E8] = v70;
      MEMORY[0x1E0] = v71;
      v76 = MEMORY[0x148];
      v77 = MEMORY[0x140];
      (*(void (**)(_QWORD, _QWORD, _QWORD))(MEMORY[0x140] + 104))(MEMORY[0x148], *MEMORY[0x24BE57498], MEMORY[0x138]);
      v78 = sub_23FD723BC();
      sub_23FBFF204(v76, *(uint64_t (**)(uint64_t, uint64_t))(v77 + 8));
      sub_23FD7466C();
      if ((v78 & 1) != 0)
      {
        sub_23FBFD684(&qword_256F64E68);
        v80 = sub_23FD743C0();
        v81 = *(_QWORD *)(v80 - 8);
        v82 = (*(unsigned __int8 *)(v81 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80);
        v83 = swift_allocObject();
        *(_OWORD *)(v83 + 16) = xmmword_23FD769D0;
        v84 = *(void (**)(unint64_t, _QWORD, uint64_t))(v81 + 104);
        v84(v83 + v82, *MEMORY[0x24BEB8E50], v80);
        v90 = sub_23FD3D20C();
        sub_23FC103E8();
        sub_23FC58AC8();
        sub_23FD7466C();
        v87 = sub_23FD3D668();
        *(_OWORD *)(v87 + 16) = xmmword_23FD769D0;
        v84(v87 + v82, *MEMORY[0x24BEB8E48], v80);
        sub_23FD3D20C();
        sub_23FC103E8();
        sub_23FC58AC8();
        sub_23FD7466C();
        v88 = sub_23FD3D668();
        *(_OWORD *)(v88 + 16) = xmmword_23FD769D0;
        v84(v88 + v82, *MEMORY[0x24BEB8E38], v80);
        sub_23FD3D20C();
        sub_23FC15A24();
        sub_23FC58AC8();
        sub_23FC17554();
        sub_23FC17554();
        v89 = v90;
        v1 = v96;
      }
      else
      {
        v89 = sub_23FD74654();
        sub_23FC58AC8();
      }
      v1[89] = v89;
      v86 = (_QWORD *)swift_task_alloc();
      v1[90] = v86;
      *v86 = v1;
      v86[1] = sub_23FD32840;
      return sub_23FD732E0();
    }
LABEL_29:
    v75 = sub_23FD3D354();
    sub_23FD3D4EC(v75);
    sub_23FD3D56C();
    v73 = 0;
    goto LABEL_30;
  }
  (*(void (**)(_QWORD, _QWORD))(v1[75] + 8))(v1[77], v1[74]);
  sub_23FD3CF44();
LABEL_21:
  v52 = v1[80];
  v53 = v1[41];
  sub_23FCD5044();
  sub_23FC5AAE8();
  sub_23FC5F500();
  sub_23FC5AAE8();
  sub_23FC5F500();
  sub_23FD72BE4();
  v54 = sub_23FC09250();
  v55 = sub_23FC5E334(v54);
  v56 = (void (*)(uint64_t, uint64_t))v1[83];
  v57 = v1[80];
  v58 = v1[78];
  if (v55)
  {
    v59 = v96[40];
    v60 = sub_23FBFEFF4();
    v61 = (_QWORD *)sub_23FBFEFF4();
    v98 = sub_23FBFEFF4();
    *(_DWORD *)v60 = 136315394;
    sub_23FC5AC34();
    v96[33] = sub_23FCCCD7C(v59, v62, &v98);
    sub_23FC5E69C();
    sub_23FC75E60();
    *(_WORD *)(v60 + 12) = 2112;
    sub_23FC5F500();
    v63 = sub_23FD3D27C();
    v96[36] = v63;
    sub_23FD75044();
    *v61 = v63;
    sub_23FC761C4();
    sub_23FC761C4();
    sub_23FC59250(&dword_23FBF8000, v52, (os_log_type_t)v53, "Could not determine readiness of %s's toolbox. Error: %@", (uint8_t *)v60);
    sub_23FBFD684(&qword_254346A30);
    sub_23FBFF10C();
    sub_23FBFEFA0();
  }
  sub_23FC10048();
  sub_23FC761C4();
  sub_23FC761C4();

  v56(v57, v58);
  sub_23FD3CFC0();
  swift_willThrow();
  sub_23FC5BCA0();
  sub_23FC5B2D4();
  sub_23FC090D0();
  sub_23FC090C0();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2F4();
  sub_23FC5B980();
  sub_23FC75A54();
  sub_23FC5EFD4();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC5C430();
  sub_23FC5C428();
  sub_23FC5C420();
  sub_23FC5BFE8();
  sub_23FC5BFE0();
  sub_23FC5C980();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return ((uint64_t (*)(void))v1[1])();
}

uint64_t sub_23FD32840()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  sub_23FC5F47C();
  *v4 = *v3;
  *(_QWORD *)(v2 + 728) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (!v1)
    *(_QWORD *)(v2 + 736) = v0;
  sub_23FC5A9A8();
  return sub_23FC5A19C();
}

void sub_23FD328A0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(_QWORD);
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v48;
  BOOL v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(uint64_t, uint64_t);
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  objc_class *v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  void (*v109)(uint64_t, uint64_t, uint64_t);
  void (*v110)(void);
  uint64_t v111;
  uint64_t v112;
  void (*v113)(_QWORD, uint64_t, _QWORD);
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char v125;
  uint64_t v126;
  uint64_t v127;
  int v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135[4];

  v1 = v0[92];
  v2 = v0[91];
  v3 = swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v0 + 2;
  v4 = sub_23FD3147C(sub_23FD3C804, v3, v1);
  v105 = v2;
  sub_23FC5AC3C();
  v102 = (objc_class *)sub_23FD71F24();
  v5 = objc_allocWithZone(v102);
  sub_23FD71F18();
  v103 = sub_23FD732C8();
  v104 = v6;
  v121 = *(_QWORD *)(v4 + 16);
  if (v121)
  {
    v7 = v0[60];
    v132 = v0[56];
    sub_23FC102C4();
    v117 = v8 + v9;
    v128 = *MEMORY[0x24BEB8E98];
    v115 = *(_QWORD *)(v10 + 72);
    v119 = v10;
    v113 = *(void (**)(_QWORD, uint64_t, _QWORD))(v10 + 16);
    swift_bridgeObjectRetain();
    v11 = 0;
    v12 = MEMORY[0x24BEE4AF8];
    while (1)
    {
      v113(v0[65], v117 + v11 * v115, v0[63]);
      v13 = *(_QWORD *)(sub_23FD74414() + 16);
      if (v13)
      {
        v124 = v11;
        v126 = v12;
        sub_23FC102C4();
        v16 = v14 + v15;
        v130 = *(_QWORD *)(v7 + 72);
        v17 = *(void (**)(uint64_t))(v7 + 16);
        v18 = MEMORY[0x24BEE4AF8];
        do
        {
          v20 = v0[61];
          v19 = v0[62];
          v21 = v0[59];
          v22 = sub_23FC5A8DC();
          v17(v22);
          ((void (*)(uint64_t, uint64_t, uint64_t))v17)(v20, v19, v21);
          v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 88))(v20, v21);
          v24 = v0[61];
          v25 = v0[59];
          v27 = v0[54];
          v26 = v0[55];
          if (v23 == v128)
          {
            (*(void (**)(_QWORD, _QWORD))(v7 + 96))(v0[61], v0[59]);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v132 + 32))(v27, v24, v26);
            _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v27, 0, 1, v26);
            v28 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
          }
          else
          {
            _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v0[54], 1, 1, v0[55]);
            v28 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
            v28(v24, v25);
          }
          v30 = v0[54];
          v29 = v0[55];
          v28(v0[62], v0[59]);
          if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v30, 1, v29) == 1)
          {
            sub_23FBFEF74(v0[54], &qword_256F64E50);
          }
          else
          {
            v32 = v0[57];
            v31 = v0[58];
            v33 = v0[55];
            v34 = *(void (**)(_QWORD))(v132 + 32);
            ((void (*)(uint64_t, _QWORD, uint64_t))v34)(v31, v0[54], v33);
            ((void (*)(uint64_t, uint64_t, uint64_t))v34)(v32, v31, v33);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_23FD3D644();
              v18 = v38;
            }
            v35 = *(_QWORD *)(v18 + 16);
            if (v35 >= *(_QWORD *)(v18 + 24) >> 1)
            {
              sub_23FD3D644();
              v18 = v39;
            }
            *(_QWORD *)(v18 + 16) = v35 + 1;
            sub_23FC102C4();
            v34(v18 + v36 + *(_QWORD *)(v37 + 72) * v35);
          }
          v16 += v130;
          --v13;
        }
        while (v13);
        swift_bridgeObjectRelease();
        v11 = v124;
        v12 = v126;
      }
      else
      {
        swift_bridgeObjectRelease();
        v18 = MEMORY[0x24BEE4AF8];
      }
      (*(void (**)(_QWORD, _QWORD))(v119 + 8))(v0[65], v0[63]);
      v40 = *(_QWORD *)(v18 + 16);
      v41 = *(_QWORD *)(v12 + 16);
      if (__OFADD__(v41, v40))
        break;
      if (!swift_isUniquelyReferenced_nonNull_native() || v41 + v40 > *(_QWORD *)(v12 + 24) >> 1)
      {
        sub_23FC99AE4();
        v12 = v42;
      }
      if (*(_QWORD *)(v18 + 16))
      {
        v43 = *(_QWORD *)(v12 + 16);
        if ((*(_QWORD *)(v12 + 24) >> 1) - v43 < v40)
          goto LABEL_53;
        v44 = (*(unsigned __int8 *)(v132 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v132 + 80);
        v45 = *(_QWORD *)(v132 + 72);
        v46 = v12 + v44 + v45 * v43;
        if (v18 + v44 < v46 + v45 * v40 && v46 < v18 + v44 + v45 * v40)
          goto LABEL_55;
        swift_arrayInitWithCopy();
        if (v40)
        {
          v48 = *(_QWORD *)(v12 + 16);
          v49 = __OFADD__(v48, v40);
          v50 = v48 + v40;
          if (v49)
            goto LABEL_54;
          *(_QWORD *)(v12 + 16) = v50;
        }
      }
      else if (v40)
      {
        goto LABEL_52;
      }
      ++v11;
      sub_23FC1002C();
      if (v11 == v121)
      {
        sub_23FC10048();
        goto LABEL_36;
      }
    }
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    sub_23FD75278();
    sub_23FD3D338();
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_36:
    sub_23FC808F4();
    sub_23FD749E4();
    sub_23FD749D8();
    v51 = sub_23FD749CC();
    sub_23FC58AC8();
    v52 = *(_QWORD *)(v51 + 16);
    if (v52)
    {
      v133 = v0[56];
      v134 = MEMORY[0x24BEE4AF8];
      v106 = v0[46];
      v107 = v0[48];
      sub_23FD3CC90(0, v52);
      v53 = sub_23FD3C374(v51);
      v55 = v54;
      v57 = v56 & 1;
      v108 = v51;
      do
      {
        v127 = v52;
        v58 = v0[55];
        v59 = v0[52];
        v60 = v0[53];
        v61 = v0[50];
        v111 = v0[51];
        v116 = v0[49];
        v120 = v0[47];
        v123 = v0[45];
        v129 = v55;
        v131 = v53;
        v125 = v57 & 1;
        sub_23FD3C470(v60, v60 + *(int *)(v107 + 48), v53, v55, v57 & 1, v51);
        v110 = *(void (**)(void))(v133 + 16);
        v62 = v58;
        ((void (*)(uint64_t, uint64_t, uint64_t))v110)(v59, v60, v58);
        v63 = sub_23FD743F0();
        v122 = *(_QWORD *)(v63 - 8);
        v109 = *(void (**)(uint64_t, uint64_t, uint64_t))(v122 + 16);
        v64 = sub_23FBFF1AC();
        v65(v64);
        sub_23FC0EE04(v59, v111, &qword_256F64E48);
        sub_23FBFEF74(v60, &qword_256F64E48);
        v66 = *(int *)(v107 + 48);
        v67 = v61 + v66;
        v118 = v61 + v66;
        v68 = v111 + v66;
        ((void (*)(uint64_t, uint64_t, uint64_t))v110)(v61, v111, v62);
        v109(v67, v68, v63);
        v69 = sub_23FD74A14();
        v112 = v70;
        v114 = v69;
        sub_23FD3D5F0();
        v71 = v116 + *(int *)(v107 + 48);
        v110();
        v109(v71, v68, v63);
        sub_23FD74A20();
        sub_23FD3D5F0();
        sub_23FD749B4();
        (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v120, v123);
        v135[0] = v114;
        v135[1] = v112;
        sub_23FC5AAE8();
        sub_23FD74C48();
        sub_23FC15A24();
        sub_23FC5A648();
        v72 = *(void (**)(uint64_t, uint64_t))(v122 + 8);
        v72(v71, v63);
        v72(v118, v63);
        sub_23FBFEF74(v111, &qword_256F64E48);
        v73 = v134;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23FD3CB30(0, *(_QWORD *)(v134 + 16) + 1);
          v73 = v134;
        }
        v75 = *(_QWORD *)(v73 + 16);
        v74 = *(_QWORD *)(v73 + 24);
        v51 = v108;
        v77 = v129;
        v76 = v131;
        if (v75 >= v74 >> 1)
        {
          sub_23FD3CB30(v74 > 1, v75 + 1);
          v77 = v129;
          v76 = v131;
          v73 = v134;
        }
        *(_QWORD *)(v73 + 16) = v75 + 1;
        v78 = v73 + 16 * v75;
        *(_QWORD *)(v78 + 32) = v114;
        *(_QWORD *)(v78 + 40) = v112;
        v79 = v76;
        v80 = sub_23FD3C3F4(v76, v77, v57 & 1, v108);
        v82 = v81;
        v57 = v83 & 1;
        sub_23FD3C820(v79, v77, v125);
        v53 = v80;
        v55 = v82;
        v52 = v127 - 1;
      }
      while (v127 != 1);
      sub_23FD3C820(v80, v82, v57);
      sub_23FC0AAF8();
    }
    else
    {
      sub_23FC0AAF8();
      v73 = MEMORY[0x24BEE4AF8];
    }
    v135[0] = v73;
    swift_bridgeObjectRetain();
    sub_23FD3B944(v135);
    if (!v105)
    {
      v85 = v0[43];
      v84 = v0[44];
      sub_23FC1002C();
      v0[37] = v135[0];
      sub_23FBFD684((uint64_t *)&unk_256F61630);
      sub_23FD3CC74();
      sub_23FD74BD0();
      sub_23FC58AC0();
      sub_23FD7343C();
      sub_23FC5D48C();
      v86 = (void *)sub_23FD73430();
      sub_23FC5A2A8();
      sub_23FC595C4(v84, *(uint64_t (**)(uint64_t, uint64_t))(v85 + 8));
      v87 = sub_23FD713D8();
      v89 = v88;

      sub_23FC577F4(v87, v89);
      if (v104 >> 60 == 15)
      {
        sub_23FD3D2A4(v103);
        sub_23FC9E934(v87, v89);
      }
      else
      {
        sub_23FD3C7F0(v103, v104);
        MEMORY[0x242675180](v103, v104, v87, v89);
        sub_23FD3D270();
        sub_23FD3D2A4(v103);
      }
      swift_bridgeObjectRelease();
      v90 = objc_allocWithZone(v102);
      sub_23FD71F18();
      sub_23FD73634();
      v101 = v0[77];
      v99 = v0[75];
      v100 = v0[74];
      v98 = (uint64_t *)v0[39];
      v91 = v0[85];
      v92 = v0[88];
      v93 = v0[87];
      v94 = objc_allocWithZone((Class)sub_23FD722FC());
      v95 = sub_23FD722F0();
      swift_release();
      sub_23FC9E934(v103, v104);
      sub_23FD3D270();
      sub_23FC9E934(v92, v93);
      v96 = sub_23FD3D2A4(v91);
      sub_23FC7E2CC(v96, &qword_256F64E58);
      (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v101, v100);
      sub_23FC5847C((uint64_t)(v0 + 2));
      *v98 = v95;
      sub_23FC5C430();
      sub_23FC5C428();
      sub_23FC5BFE0();
      sub_23FC5A574();
      swift_task_dealloc();
      swift_task_dealloc();
      sub_23FC5E0A8();
      sub_23FC5E0A0();
      sub_23FC090C0();
      sub_23FC5E090();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      sub_23FC5E098();
      sub_23FC5C528();
      sub_23FD3D338();
      __asm { BR              X0 }
    }
    sub_23FD3D338();
    swift_release();
  }
}

uint64_t sub_23FD3372C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  os_log_type_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 704);
  v2 = *(_QWORD *)(v0 + 688);
  v3 = *(_QWORD *)(v0 + 680);
  v4 = *(_QWORD *)(v0 + 600);
  swift_release();
  sub_23FD3D2A4(v1);
  v5 = sub_23FC9E934(v3, v2);
  sub_23FD3D68C(v5, &qword_256F64E58);
  sub_23FC5B2DC(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  sub_23FD3D0E0();
  v6 = *(void **)(v0 + 640);
  sub_23FCD5044();
  sub_23FC10108();
  sub_23FC09248();
  sub_23FC10108();
  sub_23FC09248();
  sub_23FD72BE4();
  v7 = sub_23FC09250();
  if (sub_23FC75E24(v7))
  {
    v9 = *(_QWORD *)(v0 + 320);
    v8 = *(_QWORD *)(v0 + 328);
    v10 = sub_23FBFEFF4();
    v11 = (_QWORD *)sub_23FBFEFF4();
    v18 = sub_23FBFEFF4();
    sub_23FD3CCAC(4.8151e-34);
    *(_QWORD *)(v0 + 264) = sub_23FC9DC40(v9, v8, &v18);
    sub_23FC5E69C();
    sub_23FC75E60();
    *(_WORD *)(v10 + 12) = 2112;
    sub_23FD3CBF0();
    v12 = sub_23FD3CFB0();
    sub_23FD3D540(v12);
    sub_23FC5E69C();
    *v11 = v8;
    sub_23FD3CB38();
    sub_23FD3CB38();
    sub_23FD3CB50(&dword_23FBF8000, v13, v14, "Could not determine readiness of %s's toolbox. Error: %@");
    sub_23FBFD684(&qword_254346A30);
    sub_23FBFF10C();
    sub_23FBFEFA0();
  }
  v15 = *(void (**)(uint64_t))(v0 + 664);
  sub_23FC10048();
  sub_23FD3CBE8();
  sub_23FD3CBE8();

  v16 = sub_23FC5A8DC();
  v15(v16);
  sub_23FD3CFC0();
  sub_23FD3D5CC();
  swift_willThrow();
  sub_23FC090D0();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC090C0();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  sub_23FC5B980();
  sub_23FC5BCA0();
  sub_23FC75A54();
  sub_23FC5EFD4();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC5C438();
  sub_23FC5C430();
  sub_23FC5C428();
  sub_23FC5C420();
  sub_23FC5BFE8();
  sub_23FC5BFE0();
  sub_23FC5C980();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23FD33A1C(uint64_t a1, _QWORD *a2)
{
  sub_23FBFDE40(a2, a2[3]);
  return sub_23FD73538() & 1;
}

void sub_23FD33A90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  id v6;

  if (a2)
    v5 = sub_23FD7133C();
  else
    v5 = 0;
  v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);

}

void sub_23FD33AE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_23FD3D518();
  sub_23FC7A734();
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v4, v5);
  v6 = sub_23FD3CA6C();
  sub_23FD3CAA8(v6);
  v7 = sub_23FC58AA0();
  *(_QWORD *)(v7 + 16) = v2;
  *(_QWORD *)(v7 + 24) = v1;
  v8 = sub_23FC58AA0();
  *(_QWORD *)(v8 + 16) = v3;
  *(_QWORD *)(v8 + 24) = v0;
  sub_23FCD4FA8();
  sub_23FD3D5E4();
  sub_23FC10108();
  sub_23FD3D25C();
  swift_release();
  sub_23FC58C6C();
  sub_23FC58AC0();
  sub_23FD3CE10();
  sub_23FC6264C();
}

uint64_t sub_23FD33B94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[39] = a2;
  v3[40] = a3;
  v3[38] = a1;
  sub_23FBFD684(&qword_254346D90);
  v3[41] = swift_task_alloc();
  sub_23FBFD684(&qword_254346A08);
  v3[42] = swift_task_alloc();
  sub_23FBFD684(&qword_256F5E308);
  v3[43] = swift_task_alloc();
  v4 = sub_23FD71E64();
  v3[44] = v4;
  v3[45] = *(_QWORD *)(v4 - 8);
  v3[46] = swift_task_alloc();
  v3[47] = swift_task_alloc();
  v5 = sub_23FD72BF0();
  v3[48] = v5;
  v3[49] = *(_QWORD *)(v5 - 8);
  v3[50] = swift_task_alloc();
  v3[51] = swift_task_alloc();
  v3[52] = swift_task_alloc();
  return swift_task_switch();
}

#error "23FD33E98: call analysis failed (funcsize=335)"

uint64_t sub_23FD34280()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  sub_23FC5A650();
  *v2 = *v1;
  *(_QWORD *)(v3 + 448) = v0;
  swift_task_dealloc();
  sub_23FC5A9A8();
  return sub_23FC0907C();
}

uint64_t sub_23FD342D0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v1 = v0[47];
  v2 = v0[45];
  v3 = (uint64_t *)v0[38];
  sub_23FCD4FA8();
  v4 = sub_23FD75014();
  swift_release();
  sub_23FD3D628();
  sub_23FBFF204(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  *v3 = v4;
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC75A54();
  sub_23FC5B980();
  sub_23FC5EFD4();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  v5 = (uint64_t (*)(void))sub_23FC5C528();
  return v5();
}

uint64_t sub_23FD3439C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  os_log_type_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  uint64_t (*v17)(void);

  sub_23FC75D0C();
  v1 = v0[47];
  v2 = v0[45];
  swift_release();
  sub_23FD3D478();
  sub_23FC595C4(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  v3 = (void *)v0[50];
  sub_23FCD5044();
  sub_23FC10108();
  sub_23FC09248();
  sub_23FC10108();
  sub_23FC09248();
  sub_23FD72BE4();
  v4 = sub_23FC09250();
  if (sub_23FC75E24(v4))
  {
    sub_23FD3D108();
    v5 = sub_23FBFEFF4();
    v6 = (_QWORD *)sub_23FBFEFF4();
    sub_23FBFEFF4();
    sub_23FD3D5C0();
    v7 = sub_23FD3CCAC(4.8151e-34);
    v0[33] = sub_23FD3CEC4(v7, v8, v9, v10, v11);
    sub_23FC5E69C();
    sub_23FC75E60();
    *(_WORD *)(v5 + 12) = 2112;
    sub_23FD3CBF0();
    v12 = sub_23FD3CFB0();
    v0[36] = v12;
    sub_23FC5E69C();
    *v6 = v12;
    sub_23FD3CB38();
    sub_23FD3CB38();
    sub_23FD3CB50(&dword_23FBF8000, v13, v14, "Could not populate %s's toolbox. Error: %@");
    sub_23FBFD684(&qword_254346A30);
    sub_23FBFF10C();
    sub_23FBFEFA0();
  }
  v15 = (void (*)(uint64_t))v0[53];
  sub_23FC10048();
  sub_23FD3CBE8();
  sub_23FD3CBE8();

  v16 = sub_23FC5A8DC();
  v15(v16);
  sub_23FD3D084();
  sub_23FC090D0();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  sub_23FC5B980();
  sub_23FC5BCA0();
  sub_23FC5D048();
  v17 = (uint64_t (*)(void))sub_23FD3D490();
  return sub_23FCCC3FC(v17);
}

uint64_t sub_23FD345A4(void *a1, int a2, int a3, void *aBlock, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;

  v10 = _Block_copy(aBlock);
  v11 = sub_23FD74BF4();
  v13 = v12;
  v14 = sub_23FC58AA0();
  *(_QWORD *)(v14 + 16) = v10;
  v15 = a1;
  a7(v11, v13, a6, v14);

  sub_23FC5A648();
  return swift_release();
}

void sub_23FD34640(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_23FC7A734();
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23FD74DEC();
  sub_23FBFF0F8((uint64_t)v7, v9, v10, v8);
  v11 = sub_23FC58AA0();
  *(_QWORD *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = a2;
  sub_23FD3CF2C();
  sub_23FC5C20C();
  sub_23FD3D554();
  swift_release();
  sub_23FC58C6C();
  sub_23FBFEF74((uint64_t)v7, &qword_254346A28);
  sub_23FC6264C();
}

uint64_t sub_23FD34708(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[29] = a2;
  v3[30] = a3;
  v3[28] = a1;
  sub_23FBFD684(&qword_256F5E308);
  v3[31] = swift_task_alloc();
  v4 = sub_23FD71E64();
  v3[32] = v4;
  v3[33] = *(_QWORD *)(v4 - 8);
  v3[34] = swift_task_alloc();
  v3[35] = swift_task_alloc();
  v5 = sub_23FD72BF0();
  v3[36] = v5;
  v3[37] = *(_QWORD *)(v5 - 8);
  v3[38] = swift_task_alloc();
  v3[39] = swift_task_alloc();
  v3[40] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23FD347E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,_QWORD *a32,uint64_t a33,uint64_t a34)
{
  _QWORD *v34;
  os_log_type_t v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t);
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _OWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  const void *v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t (*v73)(void);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  NSObject *v85;
  os_log_type_t v86;
  _BOOL4 v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  NSObject *v95;
  os_log_type_t v96;
  uint8_t *v97;
  void (*v98)(_QWORD, unint64_t, _QWORD);
  uint64_t v99;

  sub_23FD3CE38();
  a33 = v37;
  a34 = v38;
  a32 = v34;
  v39 = v34[40];
  sub_23FCD5044();
  sub_23FD3CA88();
  sub_23FD72BE4();
  v40 = sub_23FD3CEBC();
  if (sub_23FC09114(v40))
  {
    v41 = v34[29];
    v42 = (uint8_t *)sub_23FBFEFF4();
    a22 = sub_23FBFEFF4();
    *(_DWORD *)v42 = 136315138;
    sub_23FC5B578();
    v34[27] = sub_23FD3D060(v41, v43, &a22);
    sub_23FD75044();
    sub_23FC75E60();
    sub_23FBFF114(&dword_23FBF8000, v39, v35, "Deleting%s's toolbox.", v42);
    sub_23FBFF10C();
    sub_23FBFEFA0();
  }
  v44 = v34[37];
  sub_23FC10048();

  v45 = *(void (**)(uint64_t))(v44 + 8);
  v46 = sub_23FBFF1AC();
  v45(v46);
  sub_23FC10108();
  sub_23FD3CB40();
  if (sub_23FD3CC10() == 1)
  {
    sub_23FBFEF74(v34[31], &qword_256F5E308);
    sub_23FCD5044();
    sub_23FD3CA88();
    v47 = sub_23FD72BE4();
    v48 = sub_23FD74F54();
    if (os_log_type_enabled(v47, v48))
    {
      v96 = v48;
      v49 = sub_23FBFEFF4();
      a21 = sub_23FBFEFF4();
      *(_DWORD *)v49 = 136315394;
      v50 = sub_23FC5AAE8();
      v34[22] = sub_23FD3CC20(v50, v51, &a21);
      sub_23FD75044();
      sub_23FC75E60();
      v97 = (uint8_t *)v49;
      *(_WORD *)(v49 + 12) = 2080;
      v52 = sub_23FD71E40();
      v53 = *(_QWORD *)(v52 + 16);
      if (v53)
      {
        v95 = v47;
        v54 = v34[33];
        v55 = sub_23FD3D458(MEMORY[0x24BEE4AF8]);
        sub_23FD3CC90(v55, v53);
        v56 = v52 + ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80));
        v98 = *(void (**)(_QWORD, unint64_t, _QWORD))(v54 + 16);
        v99 = *(_QWORD *)(v54 + 72);
        do
        {
          v98(v34[34], v56, v34[32]);
          v57 = sub_23FD71E58();
          v59 = v58;
          sub_23FD3CBDC(*(uint64_t (**)(uint64_t, uint64_t))(v54 + 8));
          v60 = a22;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_23FD3CABC(*(_QWORD *)(v60 + 16));
            v60 = a22;
          }
          v62 = *(_QWORD *)(v60 + 16);
          v61 = *(_QWORD *)(v60 + 24);
          if (v62 >= v61 >> 1)
          {
            sub_23FD3CAD0(v61);
            v60 = a22;
          }
          *(_QWORD *)(v60 + 16) = v62 + 1;
          v63 = v60 + 16 * v62;
          *(_QWORD *)(v63 + 32) = v57;
          *(_QWORD *)(v63 + 40) = v59;
          v56 += v99;
          --v53;
        }
        while (v53);
        sub_23FD3D63C();
        v47 = v95;
      }
      else
      {
        sub_23FC15A24();
        v60 = MEMORY[0x24BEE4AF8];
      }
      v34[23] = v60;
      sub_23FBFD684((uint64_t *)&unk_256F61630);
      sub_23FD3CC74();
      v79 = sub_23FD3CBA0();
      swift_bridgeObjectRelease();
      v34[24] = sub_23FCCCD7C(v79, v80, &a21);
      sub_23FC5E69C();
      sub_23FC5A2A8();
      sub_23FC59250(&dword_23FBF8000, v47, v96, "Invalid planner type (%s while deleting toolbox. Possible values: [%s]", v97);
      sub_23FC58F90();
      sub_23FBFEFA0();
    }
    sub_23FC10048();

    v74 = sub_23FC5E880();
    v45(v74);
    v81 = v34[29];
    v82 = v34[30];
    sub_23FD3B5A0();
    v83 = sub_23FC5A704();
    *v84 = v81;
    v84[1] = v82;
    sub_23FD3CBD0(v83, (uint64_t)v84);
    sub_23FD1FE10();
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v34[33] + 32))(v34[35], v34[31], v34[32]);
    static ToolboxManager.toolboxes()();
    sub_23FBFF1AC();
    sub_23FCC3C88(v64, v65);
    v66 = sub_23FC595E0();
    if (v34[5])
    {
      v67 = v34[35];
      v68 = v34[33];
      v69 = (void *)sub_23FD3D50C();
      sub_23FD3CEA4(v69, v70);
      v71 = (_QWORD *)sub_23FD3D50C();
      sub_23FBFDE40(v71, v72);
      sub_23FD7355C();
      sub_23FC5C178(v67, *(uint64_t (**)(uint64_t, uint64_t))(v68 + 8));
      sub_23FD3D0E0();
      sub_23FC5A574();
      sub_23FC5AB04();
      sub_23FC5C428();
      sub_23FC5B2D4();
      sub_23FC5C420();
      sub_23FC5BFE8();
      v73 = (uint64_t (*)(void))sub_23FC5C528();
      return sub_23FCCC544(v73);
    }
    v75 = v34[35];
    v76 = v34[33];
    sub_23FD3D5FC(v66, &qword_256F64D78);
    sub_23FD3B5A0();
    v77 = sub_23FC5A704();
    sub_23FD3CA94(v77, v78);
    sub_23FC5B3B0(v75, *(uint64_t (**)(uint64_t, uint64_t))(v76 + 8));
  }
  v85 = v34[38];
  sub_23FCD5044();
  sub_23FC5AAE8();
  sub_23FC5F500();
  sub_23FC5AAE8();
  sub_23FC5F500();
  sub_23FD72BE4();
  v86 = sub_23FC09250();
  v87 = sub_23FCA34F0(v86);
  v88 = v34[30];
  if (v87)
  {
    v89 = v34[29];
    v90 = sub_23FBFEFF4();
    v91 = (_QWORD *)sub_23FBFEFF4();
    a22 = sub_23FBFEFF4();
    *(_DWORD *)v90 = 136315394;
    sub_23FC10108();
    v34[26] = sub_23FC9DC40(v89, v88, &a22);
    sub_23FC5DAF4();
    sub_23FC75E60();
    *(_WORD *)(v90 + 12) = 2112;
    sub_23FC5F500();
    v92 = sub_23FD3D27C();
    v34[25] = v92;
    sub_23FC5DAF4();
    *v91 = v92;
    sub_23FC761C4();
    sub_23FC761C4();
    sub_23FC59250(&dword_23FBF8000, v85, v36, "Could not delete %s's toolbox. Error: %@", (uint8_t *)v90);
    sub_23FBFD684(&qword_254346A30);
    sub_23FBFF10C();
    sub_23FBFEFA0();
  }
  sub_23FC10048();
  sub_23FC761C4();
  sub_23FC761C4();

  v93 = sub_23FD3D37C();
  v45(v93);
  sub_23FD1FE10();
  sub_23FC090D0();
  sub_23FC090C0();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  sub_23FC5B980();
  v73 = (uint64_t (*)(void))v34[1];
  return sub_23FCCC544(v73);
}

void sub_23FD34ECC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;

  v6 = sub_23FBFD684(&qword_254346A08);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FC0F3AC(a1, (uint64_t)v9, &qword_254346A08);
  v10 = sub_23FD71354();
  v11 = 0;
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v9, 1, v10) != 1)
  {
    v11 = (void *)sub_23FD71348();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  }
  if (a2)
    v12 = (void *)sub_23FD7133C();
  else
    v12 = 0;
  (*(void (**)(uint64_t, void *, void *))(a3 + 16))(a3, v11, v12);

}

void sub_23FD34FC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;

  sub_23FC061F0();
  v24 = v23;
  v26 = v25;
  v42 = v27;
  v43 = v28;
  v30 = v29;
  v32 = v31;
  v34 = v33;
  v36 = v35;
  sub_23FBFD684(&qword_254346A28);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v37, v38);
  v39 = sub_23FD3CA6C();
  sub_23FD3CAA8(v39);
  v40 = sub_23FC58AA0();
  *(_QWORD *)(v40 + 16) = a21;
  *(_QWORD *)(v40 + 24) = a22;
  v41 = (_QWORD *)sub_23FC58AA0();
  v41[2] = v36;
  v41[3] = v34;
  v41[4] = v24;
  v41[5] = v32;
  v41[6] = v30;
  v41[7] = v42;
  v41[8] = v43;
  v41[9] = v26;
  sub_23FC5AC34();
  swift_retain();
  sub_23FC5C20C();
  sub_23FC10110();
  sub_23FC10108();
  sub_23FBFD684(&qword_256F64DD0);
  sub_23FD74E70();
  swift_release();
  sub_23FC58F00();
  sub_23FC58C64();
  sub_23FBFEF74(v22, &qword_254346A28);
  sub_23FC060D4();
}

uint64_t sub_23FD350D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v8[45] = a8;
  v8[46] = v15;
  v8[43] = a6;
  v8[44] = a7;
  v8[41] = a4;
  v8[42] = a5;
  v8[39] = a2;
  v8[40] = a3;
  v8[38] = a1;
  v9 = sub_23FD747C8();
  v8[47] = v9;
  v8[48] = *(_QWORD *)(v9 - 8);
  v8[49] = swift_task_alloc();
  v10 = sub_23FD71630();
  v8[50] = v10;
  v8[51] = *(_QWORD *)(v10 - 8);
  v8[52] = swift_task_alloc();
  v11 = sub_23FD74474();
  v8[53] = v11;
  v8[54] = *(_QWORD *)(v11 - 8);
  v8[55] = swift_task_alloc();
  sub_23FBFD684(&qword_254346D90);
  v8[56] = swift_task_alloc();
  sub_23FBFD684(&qword_254346A08);
  v8[57] = swift_task_alloc();
  sub_23FBFD684(&qword_256F5E308);
  v8[58] = swift_task_alloc();
  v12 = sub_23FD71E64();
  v8[59] = v12;
  v8[60] = *(_QWORD *)(v12 - 8);
  v8[61] = swift_task_alloc();
  v8[62] = swift_task_alloc();
  v13 = sub_23FD72BF0();
  v8[63] = v13;
  v8[64] = *(_QWORD *)(v13 - 8);
  v8[65] = swift_task_alloc();
  v8[66] = swift_task_alloc();
  v8[67] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23FD35284()
{
  _QWORD *v0;
  os_log_type_t v1;
  _QWORD *v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  int64_t v43;
  char v44;
  char v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  void *v80;
  os_log_type_t v81;
  _BOOL4 v82;
  void (*v83)(uint64_t);
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  int v101;
  uint64_t v102;
  uint64_t v103;
  os_log_type_t v104;
  uint8_t *v105;
  NSObject *v106;
  uint64_t v107;
  uint64_t v108;
  char v109;
  _QWORD *v110;
  uint64_t (*v111)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v112[5];
  uint64_t v113[7];

  v2 = v0;
  v3 = v0[67];
  sub_23FCD5044();
  sub_23FC101D8();
  sub_23FD72BE4();
  v4 = sub_23FD3CEBC();
  v110 = v0;
  if (sub_23FC09114(v4))
  {
    v5 = v0[39];
    v6 = (uint8_t *)sub_23FBFEFF4();
    v113[0] = sub_23FBFEFF4();
    *(_DWORD *)v6 = 136315138;
    sub_23FC5B578();
    v0[37] = sub_23FD3D060(v5, v7, v113);
    sub_23FD75044();
    sub_23FC75E60();
    sub_23FBFF114(&dword_23FBF8000, v3, v1, "Querying%s's toolbox.", v6);
    sub_23FBFF10C();
    sub_23FBFEFA0();
  }
  v8 = v0[67];
  v9 = v2[63];
  v10 = v2[64];
  sub_23FC10048();

  v11 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  v11(v8, v9);
  v2[68] = v11;
  v13 = v2[58];
  v12 = v2[59];
  sub_23FC5AAE8();
  sub_23FD71E4C();
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v13, 1, v12) == 1)
  {
    sub_23FBFEF74(v2[58], &qword_256F5E308);
    sub_23FCD5044();
    sub_23FC101D8();
    v14 = sub_23FD72BE4();
    v15 = sub_23FD74F54();
    if (os_log_type_enabled(v14, v15))
    {
      v104 = v15;
      v106 = v14;
      v16 = v2 + 35;
      v17 = v2[39];
      v18 = v2[40];
      v19 = sub_23FBFEFF4();
      v112[0] = sub_23FBFEFF4();
      *(_DWORD *)v19 = 136315394;
      sub_23FC10110();
      v2[35] = sub_23FC9DC40(v17, v18, v112);
      sub_23FC5E498();
      sub_23FC75E60();
      v105 = (uint8_t *)v19;
      *(_WORD *)(v19 + 12) = 2080;
      v20 = sub_23FD71E40();
      v21 = *(_QWORD *)(v20 + 16);
      if (v21)
      {
        v22 = v2[60];
        v113[0] = MEMORY[0x24BEE4AF8];
        sub_23FD3CC90(0, v21);
        sub_23FC102C4();
        v24 = v20 + v23;
        v108 = *(_QWORD *)(v22 + 72);
        v25 = v22;
        v26 = *(void (**)(uint64_t))(v22 + 16);
        do
        {
          v16 = (uint64_t *)v2[61];
          v27 = sub_23FC5D48C();
          v26(v27);
          v28 = sub_23FD71E58();
          v30 = v29;
          sub_23FC59A44(*(uint64_t (**)(uint64_t, uint64_t))(v25 + 8));
          v31 = v113[0];
          if ((sub_23FD3D4D4() & 1) == 0)
          {
            v16 = v113;
            sub_23FD3CB30(0, *(_QWORD *)(v31 + 16) + 1);
            v31 = v113[0];
          }
          v33 = *(_QWORD *)(v31 + 16);
          v32 = *(_QWORD *)(v31 + 24);
          if (v33 >= v32 >> 1)
          {
            v16 = v113;
            sub_23FD3CB30(v32 > 1, v33 + 1);
            v31 = v113[0];
          }
          *(_QWORD *)(v31 + 16) = v33 + 1;
          v34 = v31 + 16 * v33;
          *(_QWORD *)(v34 + 32) = v28;
          *(_QWORD *)(v34 + 40) = v30;
          v2 = v110;
          v24 += v108;
          --v21;
        }
        while (v21);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        v31 = MEMORY[0x24BEE4AF8];
      }
      v2[34] = v31;
      sub_23FBFD684((uint64_t *)&unk_256F61630);
      sub_23FD3CC74();
      sub_23FD3CBA0();
      sub_23FD3D3A0();
      v2[32] = sub_23FCCCD7C((uint64_t)v16, v75, v112);
      sub_23FD75044();
      sub_23FC5A2A8();
      sub_23FC59250(&dword_23FBF8000, v106, v104, "Invalid planner type (%s while querying toolbox. Possible values: [%s]", v105);
      sub_23FC58F90();
      sub_23FBFEFA0();
    }
    v62 = v2[66];
    v63 = v2[63];
    sub_23FC10048();

    v11(v62, v63);
    v77 = v2[39];
    v76 = v2[40];
    sub_23FD3B5A0();
    v78 = sub_23FC5A704();
    *v79 = v77;
    v79[1] = v76;
    sub_23FD3CBD0(v78, (uint64_t)v79);
    swift_willThrow();
    goto LABEL_31;
  }
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v2[60] + 32))(v2[62], v2[58], v2[59]);
  v35 = static ToolboxManager.toolboxes()();
  sub_23FCC3C88(v35, (_OWORD *)v2 + 6);
  v36 = sub_23FC15A24();
  if (!v2[15])
  {
    v64 = v2[62];
    v65 = v2[60];
    sub_23FD3D5FC(v36, &qword_256F64D78);
    sub_23FD3B5A0();
    v66 = sub_23FC5A704();
    sub_23FD3CA94(v66, v67);
    sub_23FBFF204(v64, *(uint64_t (**)(uint64_t, uint64_t))(v65 + 8));
LABEL_31:
    v80 = (void *)v2[65];
    sub_23FCD5044();
    sub_23FC10110();
    sub_23FD3D090();
    sub_23FC10110();
    sub_23FD3D090();
    sub_23FD72BE4();
    v81 = sub_23FC09250();
    v82 = sub_23FC75E24(v81);
    v83 = (void (*)(uint64_t))v2[68];
    v84 = v2[40];
    if (v82)
    {
      v85 = v2[39];
      v86 = sub_23FBFEFF4();
      v87 = (_QWORD *)sub_23FBFEFF4();
      v113[0] = sub_23FBFEFF4();
      *(_DWORD *)v86 = 136315394;
      swift_bridgeObjectRetain();
      v110[33] = sub_23FC9DC40(v85, v84, v113);
      sub_23FC5DAF4();
      sub_23FC75E60();
      *(_WORD *)(v86 + 12) = 2112;
      sub_23FC5F500();
      v88 = sub_23FD3D27C();
      v110[36] = v88;
      sub_23FD75044();
      *v87 = v88;
      sub_23FC761C4();
      sub_23FC761C4();
      sub_23FD3CB50(&dword_23FBF8000, v89, v90, "Could not query %s's toolbox. Error: %@");
      sub_23FBFD684(&qword_254346A30);
      sub_23FBFF10C();
      sub_23FBFEFA0();
    }
    sub_23FC10048();
    sub_23FD3CBE8();
    sub_23FD3CBE8();

    v91 = sub_23FBFF1AC();
    v83(v91);
    sub_23FD3D5B4();
    sub_23FD3D5D8();
    sub_23FD3CFB8();
    sub_23FC090D0();
    sub_23FC5AB04();
    sub_23FC090C0();
    sub_23FC5AC3C();
    sub_23FC5B2D4();
    sub_23FC5B2F4();
    sub_23FC5B980();
    sub_23FC5E0A8();
    sub_23FC5E0A0();
    sub_23FC5E098();
    sub_23FC5E090();
    return ((uint64_t (*)(void))v2[1])();
  }
  v37 = (uint64_t)(v2 + 2);
  v38 = v2[41];
  sub_23FD3CEA4(v2 + 2, v2 + 12);
  v39 = *(_QWORD *)(v38 + 16);
  v40 = MEMORY[0x24BEE4AF8];
  if (v39)
  {
    v93 = (uint64_t)(v2 + 2);
    v99 = v2[51];
    v98 = v2[48];
    v113[0] = MEMORY[0x24BEE4AF8];
    sub_23FC9B83C();
    result = sub_23FD54D04(v38);
    v43 = result;
    v100 = v38 + 56;
    v45 = v44 & 1;
    v96 = *MEMORY[0x24BEB9D18];
    v97 = *MEMORY[0x24BEB9CA8];
    v95 = *MEMORY[0x24BEB9A88];
    v94 = v38;
    while ((v43 & 0x8000000000000000) == 0 && v43 < 1 << *(_BYTE *)(v38 + 32))
    {
      if (((*(_QWORD *)(v100 + (((unint64_t)v43 >> 3) & 0xFFFFFFFFFFFFF8)) >> v43) & 1) == 0)
        goto LABEL_35;
      if (*(_DWORD *)(v38 + 36) != (_DWORD)v42)
        goto LABEL_36;
      v109 = v45;
      v101 = v42;
      v102 = v39;
      v46 = v2[52];
      v47 = (uint64_t *)v2[49];
      v107 = v2[50];
      v103 = v2[47];
      v48 = sub_23FD747F8();
      v49 = swift_allocBox();
      v51 = v50;
      v52 = sub_23FD747EC();
      v53 = v40;
      v54 = swift_allocBox();
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v52 - 8) + 104))(v55, v97, v52);
      *v51 = v54;
      v40 = v53;
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v48 - 8) + 104))(v51, v96, v48);
      *v47 = v49;
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(v98 + 104))(v47, v95, v103);
      sub_23FC101D8();
      sub_23FD71618();
      ClientAction.Definition.toolDefinition.getter();
      (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v46, v107);
      sub_23FC103E8();
      v56 = v113[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23FC9B83C();
        v56 = v113[0];
      }
      v2 = v110;
      v38 = v94;
      v57 = *(_QWORD *)(v56 + 16);
      if (v57 >= *(_QWORD *)(v56 + 24) >> 1)
      {
        sub_23FC9B83C();
        v56 = v113[0];
      }
      v58 = v110[41];
      *(_QWORD *)(v56 + 16) = v57 + 1;
      sub_23FC102C4();
      (*(void (**)(unint64_t))(v60 + 32))(v56 + v59 + *(_QWORD *)(v60 + 72) * v57);
      v113[0] = v56;
      result = sub_23FD3C58C(v43, v101, v109 & 1, v58);
      v43 = result;
      v45 = v61 & 1;
      --v39;
      if (v102 == 1)
      {
        sub_23FD3C820(result, v42, v45);
        v37 = v93;
        goto LABEL_28;
      }
    }
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
  }
  else
  {
LABEL_28:
    sub_23FC584E0(v37, (uint64_t)(v2 + 27));
    sub_23FC584E0((uint64_t)(v2 + 7), (uint64_t)(v2 + 22));
    v68 = sub_23FD3CF2C();
    sub_23FD3CAA8(v68);
    v69 = sub_23FD74678();
    v70 = sub_23FD7466C();
    v71 = v2[56];
    sub_23FD3D1A4();
    v112[3] = v69;
    v112[4] = MEMORY[0x24BE57000];
    v112[0] = v70;
    v72 = sub_23FD749E4();
    v73 = sub_23FD749D8();
    v113[3] = v72;
    v113[4] = MEMORY[0x24BE57020];
    v113[0] = v73;
    sub_23FD740D8();
    v74 = sub_23FD74120();
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v71, 0, 1, v74);
    sub_23FD3D37C();
    v2[69] = sub_23FD73640();
    v111 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))((int)*MEMORY[0x24BE55830]
                                                                          + MEMORY[0x24BE55830]);
    v92 = (_QWORD *)swift_task_alloc();
    v2[70] = v92;
    *v92 = v2;
    v92[1] = sub_23FD35DF0;
    return v111(v2[42], v2[43], v2[44], v2[45], v2[46]);
  }
  return result;
}

uint64_t sub_23FD35DF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  sub_23FC5F47C();
  *v4 = *v3;
  *(_QWORD *)(v2 + 568) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v2 + 576) = v0;
  sub_23FC5A9A8();
  return sub_23FC5A19C();
}

uint64_t sub_23FD35E48()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  v1 = v0[72];
  v2 = v0[62];
  v3 = v0[60];
  sub_23FD3D5B4();
  sub_23FD3D5D8();
  v4 = (uint64_t *)v0[38];
  v5 = swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v0 + 2;
  v6 = sub_23FC8E530((_QWORD *(*)(uint64_t *__return_ptr, uint64_t))sub_23FD3C670, v5, v1);
  sub_23FC58C6C();
  sub_23FC103E8();
  sub_23FC090D0();
  sub_23FC5C178(v2, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  sub_23FD3D098();
  *v4 = v6;
  sub_23FC75A54();
  sub_23FC5EFD4();
  sub_23FC5D050();
  sub_23FC5BCA0();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC5C438();
  sub_23FC5C430();
  sub_23FC5C428();
  v7 = (uint64_t (*)(void))sub_23FC5C528();
  return v7();
}

uint64_t sub_23FD35F50()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  os_log_type_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  uint64_t (*v17)(void);

  sub_23FC75D0C();
  v1 = v0[62];
  v2 = v0[60];
  swift_release();
  sub_23FC595C4(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23FD3D478();
  v3 = (void *)v0[65];
  sub_23FCD5044();
  sub_23FC10108();
  sub_23FC09248();
  sub_23FC10108();
  sub_23FC09248();
  sub_23FD72BE4();
  v4 = sub_23FC09250();
  if (sub_23FC75E24(v4))
  {
    sub_23FD3D108();
    v5 = sub_23FBFEFF4();
    v6 = (_QWORD *)sub_23FBFEFF4();
    sub_23FBFEFF4();
    sub_23FD3D5C0();
    v7 = sub_23FD3CCAC(4.8151e-34);
    v0[33] = sub_23FD3CEC4(v7, v8, v9, v10, v11);
    sub_23FC5E69C();
    sub_23FC75E60();
    *(_WORD *)(v5 + 12) = 2112;
    sub_23FD3CBF0();
    v12 = sub_23FD3CFB0();
    v0[36] = v12;
    sub_23FC5E69C();
    *v6 = v12;
    sub_23FD3CB38();
    sub_23FD3CB38();
    sub_23FD3CB50(&dword_23FBF8000, v13, v14, "Could not query %s's toolbox. Error: %@");
    sub_23FBFD684(&qword_254346A30);
    sub_23FBFF10C();
    sub_23FBFEFA0();
  }
  v15 = (void (*)(uint64_t))v0[68];
  sub_23FC10048();
  sub_23FD3CBE8();
  sub_23FD3CBE8();

  v16 = sub_23FC5A8DC();
  v15(v16);
  sub_23FD3D5B4();
  sub_23FD3D5D8();
  sub_23FD3D084();
  sub_23FC090D0();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  sub_23FC5B980();
  sub_23FC5BCA0();
  sub_23FC75A54();
  sub_23FC5EFD4();
  sub_23FC5D050();
  sub_23FC5D048();
  v17 = (uint64_t (*)(void))sub_23FD3D490();
  return sub_23FCCC3FC(v17);
}

uint64_t sub_23FD36154@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  id v34;
  uint64_t v35;
  uint64_t (*v36)(char *, uint64_t);
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  id v41;
  uint64_t result;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  id v47;
  char *v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  _BYTE v69[48];

  v68 = a3;
  v64 = a2;
  v4 = sub_23FD72BF0();
  v56 = *(_QWORD *)(v4 - 8);
  v57 = v4;
  MEMORY[0x24BDAC7A8](v4, v5);
  v55 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23FD74A2C();
  v62 = *(_QWORD *)(v7 - 8);
  v63 = v7;
  MEMORY[0x24BDAC7A8](v7, v8);
  v61 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23FBFD684(&qword_256F64DF8);
  MEMORY[0x24BDAC7A8](v10, v11);
  v60 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = sub_23FD73B38();
  v54 = *(_QWORD *)(v65 - 8);
  MEMORY[0x24BDAC7A8](v65, v13);
  v53 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = sub_23FD74474();
  v15 = *(_QWORD *)(v67 - 8);
  MEMORY[0x24BDAC7A8](v67, v16);
  v18 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_23FBFD684(&qword_256F64E00);
  MEMORY[0x24BDAC7A8](v19, v20);
  v22 = (char *)&v52 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = sub_23FD73B74();
  v59 = *(_QWORD *)(v66 - 8);
  MEMORY[0x24BDAC7A8](v66, v23);
  v58 = (char *)&v52 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_23FBFD684(&qword_256F64E08);
  MEMORY[0x24BDAC7A8](v25, v26);
  v28 = (char *)&v52 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_23FD72F8C();
  v30 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29, v31);
  v33 = (char *)&v52 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FC584E0(a1, (uint64_t)v69);
  sub_23FBFD684(&qword_256F64E10);
  if ((swift_dynamicCast() & 1) != 0)
  {
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v28, 0, 1, v29);
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v33, v28, v29);
    sub_23FD72F80();
    sub_23FD72F74();
    sub_23FD74450();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v67);
    v34 = objc_allocWithZone((Class)sub_23FD71DC8());
    v35 = sub_23FD71DBC();
    v36 = *(uint64_t (**)(char *, uint64_t))(v30 + 8);
    v37 = v33;
LABEL_5:
    result = v36(v37, v29);
    goto LABEL_6;
  }
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v28, 1, 1, v29);
  sub_23FBFEF74((uint64_t)v28, &qword_256F64E08);
  sub_23FC584E0(a1, (uint64_t)v69);
  v29 = v66;
  if ((swift_dynamicCast() & 1) != 0)
  {
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v22, 0, 1, v29);
    v39 = v58;
    v38 = v59;
    (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v58, v22, v29);
    sub_23FD73B68();
    sub_23FBFDE40(v64, v64[3]);
    v40 = v61;
    sub_23FD73B5C();
    sub_23FD73544();
    (*(void (**)(char *, uint64_t))(v62 + 8))(v40, v63);
    v41 = objc_allocWithZone((Class)sub_23FD71DC8());
    v35 = sub_23FD71DBC();
    v36 = *(uint64_t (**)(char *, uint64_t))(v38 + 8);
    v37 = v39;
    goto LABEL_5;
  }
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v22, 1, 1, v29);
  sub_23FBFEF74((uint64_t)v22, &qword_256F64E00);
  sub_23FC584E0(a1, (uint64_t)v69);
  v43 = (uint64_t)v60;
  v44 = v65;
  if ((swift_dynamicCast() & 1) != 0)
  {
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v43, 0, 1, v44);
    v45 = v54;
    v46 = v53;
    (*(void (**)(char *, uint64_t, uint64_t))(v54 + 32))(v53, v43, v44);
    sub_23FD73B2C();
    sub_23FD73B20();
    sub_23FD74450();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v67);
    v47 = objc_allocWithZone((Class)sub_23FD71DC8());
    v35 = sub_23FD71DBC();
    result = (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v46, v44);
  }
  else
  {
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v43, 1, 1, v44);
    sub_23FBFEF74(v43, &qword_256F64DF8);
    v48 = v55;
    sub_23FD7247C();
    v49 = sub_23FD72BE4();
    v50 = sub_23FD74F54();
    if (os_log_type_enabled(v49, v50))
    {
      v51 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v51 = 0;
      _os_log_impl(&dword_23FBF8000, v49, v50, "Incorrect ToolBoxResult", v51, 2u);
      MEMORY[0x2426798D8](v51, -1, -1);
    }

    result = (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v48, v57);
    v35 = 0;
  }
LABEL_6:
  *v68 = v35;
  return result;
}

void sub_23FD36884(void *a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  uint64_t v6;
  id v7;

  v5 = a1;
  if (a1)
  {
    sub_23FD71DC8();
    v5 = (void *)sub_23FD74CCC();
  }
  if (a2)
    v6 = sub_23FD7133C();
  else
    v6 = 0;
  v7 = (id)v6;
  (*(void (**)(uint64_t, void *))(a3 + 16))(a3, v5);

}

uint64_t sub_23FD36908(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6[42] = a5;
  v6[43] = a6;
  v6[40] = a3;
  v6[41] = a4;
  v6[38] = a1;
  v6[39] = a2;
  v7 = sub_23FD74474();
  v6[44] = v7;
  v6[45] = *(_QWORD *)(v7 - 8);
  v6[46] = swift_task_alloc();
  v8 = sub_23FD72F8C();
  v6[47] = v8;
  v6[48] = *(_QWORD *)(v8 - 8);
  v6[49] = swift_task_alloc();
  sub_23FBFD684(&qword_254346D90);
  v6[50] = swift_task_alloc();
  sub_23FBFD684(&qword_254346A08);
  v6[51] = swift_task_alloc();
  sub_23FBFD684(&qword_256F5E308);
  v6[52] = swift_task_alloc();
  v9 = sub_23FD71E64();
  v6[53] = v9;
  v6[54] = *(_QWORD *)(v9 - 8);
  v6[55] = swift_task_alloc();
  v6[56] = swift_task_alloc();
  v10 = sub_23FD72BF0();
  v6[57] = v10;
  v6[58] = *(_QWORD *)(v10 - 8);
  v6[59] = swift_task_alloc();
  v6[60] = swift_task_alloc();
  v6[61] = swift_task_alloc();
  return swift_task_switch();
}

#error "23FD36C74: call analysis failed (funcsize=315)"

uint64_t sub_23FD36FF8(uint64_t a1)
{
  sub_23FD3CD88(a1);
  sub_23FC5A9A8();
  return sub_23FC0907C();
}

void sub_23FD3714C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;

  sub_23FC061F0();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v14 = v13;
  sub_23FBFD684(&qword_254346A28);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v15, v16);
  v17 = sub_23FD3CA6C();
  sub_23FD3CAA8(v17);
  v18 = sub_23FC58AA0();
  *(_QWORD *)(v18 + 16) = v4;
  *(_QWORD *)(v18 + 24) = v2;
  v19 = (_QWORD *)sub_23FC58AA0();
  v19[2] = v14;
  v19[3] = v12;
  v19[4] = v10;
  v19[5] = v8;
  v19[6] = v6;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_23FC5AC34();
  sub_23FC5C20C();
  sub_23FBFD684(&qword_256F64DD0);
  sub_23FD74E70();
  swift_release();
  sub_23FC58F00();
  sub_23FC101F4();
  sub_23FBFEF74(v0, &qword_254346A28);
  sub_23FC060D4();
}

uint64_t sub_23FD37248(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6[42] = a5;
  v6[43] = a6;
  v6[40] = a3;
  v6[41] = a4;
  v6[38] = a1;
  v6[39] = a2;
  v7 = sub_23FD74474();
  v6[44] = v7;
  v6[45] = *(_QWORD *)(v7 - 8);
  v6[46] = swift_task_alloc();
  v8 = sub_23FD72F8C();
  v6[47] = v8;
  v6[48] = *(_QWORD *)(v8 - 8);
  v6[49] = swift_task_alloc();
  sub_23FBFD684(&qword_254346D90);
  v6[50] = swift_task_alloc();
  sub_23FBFD684(&qword_254346A08);
  v6[51] = swift_task_alloc();
  sub_23FBFD684(&qword_256F5E308);
  v6[52] = swift_task_alloc();
  v9 = sub_23FD71E64();
  v6[53] = v9;
  v6[54] = *(_QWORD *)(v9 - 8);
  v6[55] = swift_task_alloc();
  v6[56] = swift_task_alloc();
  v10 = sub_23FD72BF0();
  v6[57] = v10;
  v6[58] = *(_QWORD *)(v10 - 8);
  v6[59] = swift_task_alloc();
  v6[60] = swift_task_alloc();
  v6[61] = swift_task_alloc();
  return swift_task_switch();
}

#error "23FD375B4: call analysis failed (funcsize=315)"

uint64_t sub_23FD37938(uint64_t a1)
{
  sub_23FD3CD88(a1);
  sub_23FC5A9A8();
  return sub_23FC0907C();
}

uint64_t sub_23FD37974()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t (*v12)(void);
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, _QWORD);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = v0[65];
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = v0[48];
    v17 = v0[45];
    v18 = MEMORY[0x24BEE4AF8];
    sub_23FD75188();
    sub_23FC102C4();
    v5 = v1 + v4;
    v6 = v3;
    v15 = *(void (**)(uint64_t, uint64_t, _QWORD))(v3 + 16);
    v16 = *(_QWORD *)(v3 + 72);
    do
    {
      v7 = v0[49];
      v15(v7, v5, v0[47]);
      sub_23FD72F80();
      sub_23FD72F74();
      sub_23FD74450();
      sub_23FC5B2DC(*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8));
      v8 = objc_allocWithZone((Class)sub_23FD71DC8());
      sub_23FD71DBC();
      sub_23FC5B3B0(v7, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
      sub_23FD75170();
      sub_23FD75194();
      sub_23FD751A0();
      sub_23FD7517C();
      v5 += v16;
      --v2;
    }
    while (v2);
    v14 = v18;
    swift_release();
    sub_23FC1002C();
  }
  else
  {
    swift_release();
    sub_23FC595E0();
    v14 = MEMORY[0x24BEE4AF8];
  }
  v9 = v0[54];
  sub_23FD3D5CC();
  v10 = (_QWORD *)v0[38];
  sub_23FC5847C(v11);
  sub_23FD3D61C(*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
  *v10 = v14;
  sub_23FC090D0();
  sub_23FC090C0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2F4();
  sub_23FC75A54();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  v12 = (uint64_t (*)(void))sub_23FC5C528();
  return v12();
}

uint64_t sub_23FD37B78()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  os_log_type_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  uint64_t (*v17)(void);

  sub_23FC75D0C();
  v1 = v0[56];
  v2 = v0[54];
  swift_release();
  sub_23FD3D478();
  sub_23FC595C4(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  v3 = (void *)v0[59];
  sub_23FCD5044();
  sub_23FC10108();
  sub_23FC09248();
  sub_23FC10108();
  sub_23FC09248();
  sub_23FD72BE4();
  v4 = sub_23FC09250();
  if (sub_23FC75E24(v4))
  {
    sub_23FD3D108();
    v5 = sub_23FBFEFF4();
    v6 = (_QWORD *)sub_23FBFEFF4();
    sub_23FBFEFF4();
    sub_23FD3D5C0();
    v7 = sub_23FD3CCAC(4.8151e-34);
    v0[33] = sub_23FD3CEC4(v7, v8, v9, v10, v11);
    sub_23FC5E69C();
    sub_23FC75E60();
    *(_WORD *)(v5 + 12) = 2112;
    sub_23FD3CBF0();
    v12 = sub_23FD3CFB0();
    v0[36] = v12;
    sub_23FC5E69C();
    *v6 = v12;
    sub_23FD3CB38();
    sub_23FD3CB38();
    sub_23FD3CB50(&dword_23FBF8000, v13, v14, "Could not query %s's toolbox. Error: %@");
    sub_23FBFD684(&qword_254346A30);
    sub_23FBFF10C();
    sub_23FBFEFA0();
  }
  v15 = (void (*)(uint64_t))v0[62];
  sub_23FC10048();
  sub_23FD3CBE8();
  sub_23FD3CBE8();

  v16 = sub_23FC5A8DC();
  v15(v16);
  sub_23FD3D5CC();
  sub_23FD3D084();
  sub_23FC090D0();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  sub_23FC5B980();
  sub_23FC5BCA0();
  sub_23FC5EFD4();
  sub_23FC5D050();
  sub_23FC5D048();
  v17 = (uint64_t (*)(void))sub_23FD3D490();
  return sub_23FCCC3FC(v17);
}

void sub_23FD37E8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;

  sub_23FC061F0();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  sub_23FC7A734();
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v12, v13);
  v14 = sub_23FD3CA6C();
  sub_23FD3CAA8(v14);
  v15 = sub_23FC58AA0();
  *(_QWORD *)(v15 + 16) = v3;
  *(_QWORD *)(v15 + 24) = v1;
  v16 = (_QWORD *)sub_23FC58AA0();
  v16[2] = v7;
  v16[3] = v5;
  v16[4] = v11;
  v16[5] = v9;
  swift_retain();
  sub_23FC10110();
  sub_23FC10108();
  sub_23FBFD684(&qword_256F64DB8);
  sub_23FD74E70();
  swift_release();
  sub_23FC58C64();
  swift_release();
  sub_23FD3CE10();
  sub_23FC060D4();
}

uint64_t sub_23FD37F70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5[41] = a4;
  v5[42] = a5;
  v5[39] = a2;
  v5[40] = a3;
  v5[38] = a1;
  sub_23FBFD684(&qword_254346D90);
  v5[43] = swift_task_alloc();
  sub_23FBFD684(&qword_254346A08);
  v5[44] = swift_task_alloc();
  sub_23FBFD684(&qword_256F5E308);
  v5[45] = swift_task_alloc();
  v6 = sub_23FD71E64();
  v5[46] = v6;
  v5[47] = *(_QWORD *)(v6 - 8);
  v5[48] = swift_task_alloc();
  v5[49] = swift_task_alloc();
  v7 = sub_23FD72BF0();
  v5[50] = v7;
  v5[51] = *(_QWORD *)(v7 - 8);
  v5[52] = swift_task_alloc();
  v5[53] = swift_task_alloc();
  v5[54] = swift_task_alloc();
  return swift_task_switch();
}

#error "23FD38284: call analysis failed (funcsize=362)"

uint64_t sub_23FD386E4()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  sub_23FC5A650();
  *v2 = *v1;
  *(_QWORD *)(v3 + 464) = v0;
  swift_task_dealloc();
  sub_23FC5A9A8();
  return sub_23FC0907C();
}

uint64_t sub_23FD38734()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  os_log_type_t v7;
  BOOL v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t (*v22)(void);
  uint64_t v24;

  v1 = (void *)v0[58];
  v2 = sub_23FD73634();
  if (v1)
  {
    v3 = v1;
    v4 = v0[49];
    v5 = v0[47];
    sub_23FC58C6C();
    sub_23FD3D628();
    sub_23FBFF204(v4, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
    v6 = (void *)v0[52];
    sub_23FCD5044();
    sub_23FC5AAE8();
    sub_23FD3D090();
    sub_23FC5AAE8();
    sub_23FD3D090();
    sub_23FD72BE4();
    v7 = sub_23FC09250();
    v8 = sub_23FC75E24(v7);
    v9 = v0[40];
    if (v8)
    {
      v10 = v0[39];
      v11 = v3;
      v12 = sub_23FBFEFF4();
      v13 = (_QWORD *)sub_23FBFEFF4();
      v24 = sub_23FBFEFF4();
      *(_DWORD *)v12 = 136315394;
      swift_bridgeObjectRetain();
      v0[33] = sub_23FC9DC40(v10, v9, &v24);
      sub_23FC5E69C();
      sub_23FC75E60();
      *(_WORD *)(v12 + 12) = 2112;
      sub_23FC09248();
      v14 = _swift_stdlib_bridgeErrorToNSError();
      sub_23FD3D540(v14);
      sub_23FC5E69C();
      *v13 = v10;

      sub_23FD3CB50(&dword_23FBF8000, v15, v16, "Toolbox could not populate %s' in sandboxMode. Error: %@");
      sub_23FBFD684(&qword_254346A30);
      sub_23FBFF10C();
      sub_23FBFEFA0();
    }
    sub_23FC10048();
    sub_23FD3CBE8();
    sub_23FD3CBE8();

    sub_23FD3D604();
    sub_23FD3D49C();
    swift_willThrow();
    sub_23FC090D0();
    sub_23FC5AB04();
    sub_23FC5AC3C();
    sub_23FC5B2D4();
    sub_23FC5B2F4();
    sub_23FC5B980();
    sub_23FC5BCA0();
    sub_23FC5C440();
    v22 = (uint64_t (*)(void))sub_23FD3D490();
  }
  else
  {
    v17 = v2;
    v18 = v0[49];
    v19 = v0[47];
    v20 = (uint64_t *)v0[38];
    sub_23FBFD684(&qword_256F5F890);
    v21 = sub_23FC58AA0();
    *(_OWORD *)(v21 + 16) = xmmword_23FD769D0;
    *(_QWORD *)(v21 + 32) = v17;
    sub_23FC58C6C();
    sub_23FD3D628();
    sub_23FC595C4(v18, *(uint64_t (**)(uint64_t, uint64_t))(v19 + 8));
    *v20 = v21;
    sub_23FC5B980();
    sub_23FC5EFD4();
    sub_23FC5D050();
    sub_23FC090C0();
    sub_23FC5D048();
    sub_23FC5D040();
    sub_23FC5C988();
    sub_23FC5C440();
    v22 = (uint64_t (*)(void))sub_23FC5C528();
  }
  return v22();
}

uint64_t sub_23FD38A08()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  os_log_type_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  uint64_t (*v17)(void);

  sub_23FC75D0C();
  v1 = v0[49];
  v2 = v0[47];
  swift_release();
  sub_23FD3D478();
  sub_23FC595C4(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  v3 = (void *)v0[52];
  sub_23FCD5044();
  sub_23FC10108();
  sub_23FC09248();
  sub_23FC10108();
  sub_23FC09248();
  sub_23FD72BE4();
  v4 = sub_23FC09250();
  if (sub_23FC75E24(v4))
  {
    sub_23FD3D108();
    v5 = sub_23FBFEFF4();
    v6 = (_QWORD *)sub_23FBFEFF4();
    sub_23FBFEFF4();
    sub_23FD3D5C0();
    v7 = sub_23FD3CCAC(4.8151e-34);
    v0[33] = sub_23FD3CEC4(v7, v8, v9, v10, v11);
    sub_23FC5E69C();
    sub_23FC75E60();
    *(_WORD *)(v5 + 12) = 2112;
    sub_23FD3CBF0();
    v12 = sub_23FD3CFB0();
    v0[36] = v12;
    sub_23FC5E69C();
    *v6 = v12;
    sub_23FD3CB38();
    sub_23FD3CB38();
    sub_23FD3CB50(&dword_23FBF8000, v13, v14, "Toolbox could not populate %s' in sandboxMode. Error: %@");
    sub_23FBFD684(&qword_254346A30);
    sub_23FBFF10C();
    sub_23FBFEFA0();
  }
  v15 = (void (*)(uint64_t))v0[55];
  sub_23FC10048();
  sub_23FD3CBE8();
  sub_23FD3CBE8();

  v16 = sub_23FC5A8DC();
  v15(v16);
  sub_23FD3D49C();
  sub_23FD3D084();
  sub_23FC090D0();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  sub_23FC5B980();
  sub_23FC5BCA0();
  sub_23FC5D048();
  v17 = (uint64_t (*)(void))sub_23FD3D490();
  return sub_23FCCC3FC(v17);
}

void sub_23FD38C00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  uint64_t v6;
  id v7;

  if (!a1)
  {
    v5 = 0;
    if (a2)
      goto LABEL_3;
LABEL_5:
    v6 = 0;
    goto LABEL_6;
  }
  v5 = (void *)sub_23FD74CCC();
  if (!a2)
    goto LABEL_5;
LABEL_3:
  v6 = sub_23FD7133C();
LABEL_6:
  v7 = (id)v6;
  (*(void (**)(uint64_t, void *))(a3 + 16))(a3, v5);

}

void sub_23FD38C80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  sub_23FC061F0();
  sub_23FD3CE1C();
  sub_23FC7A734();
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v6, v7);
  v8 = sub_23FD3CA6C();
  sub_23FD3CAA8(v8);
  v9 = sub_23FC58AA0();
  *(_QWORD *)(v9 + 16) = v4;
  *(_QWORD *)(v9 + 24) = v2;
  v10 = (_QWORD *)sub_23FC58AA0();
  v10[2] = v5;
  v10[3] = v1;
  v10[4] = v3;
  v10[5] = v0;
  sub_23FCD4FA8();
  swift_retain();
  sub_23FC10110();
  sub_23FC10108();
  sub_23FD3D554();
  swift_release();
  sub_23FC58C64();
  sub_23FC58C6C();
  sub_23FD3CE10();
  sub_23FC060D4();
}

uint64_t sub_23FD38D40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[43] = a4;
  v5[44] = a5;
  v5[41] = a2;
  v5[42] = a3;
  v5[40] = a1;
  sub_23FBFD684(&qword_254346D90);
  v5[45] = swift_task_alloc();
  sub_23FBFD684(&qword_254346A08);
  v5[46] = swift_task_alloc();
  sub_23FBFD684(&qword_256F64D60);
  v5[47] = swift_task_alloc();
  v6 = sub_23FD72FB0();
  v5[48] = v6;
  v5[49] = *(_QWORD *)(v6 - 8);
  v5[50] = swift_task_alloc();
  v5[51] = swift_task_alloc();
  sub_23FBFD684(&qword_256F5E308);
  v5[52] = swift_task_alloc();
  v7 = sub_23FD71E64();
  v5[53] = v7;
  v5[54] = *(_QWORD *)(v7 - 8);
  v5[55] = swift_task_alloc();
  v5[56] = swift_task_alloc();
  v8 = sub_23FD72BF0();
  v5[57] = v8;
  v5[58] = *(_QWORD *)(v8 - 8);
  v5[59] = swift_task_alloc();
  v5[60] = swift_task_alloc();
  v5[61] = swift_task_alloc();
  return swift_task_switch();
}

#error "23FD390D4: call analysis failed (funcsize=519)"

void sub_23FD397A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  sub_23FC061F0();
  sub_23FD3CE1C();
  sub_23FC7A734();
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v2, v3);
  v4 = sub_23FD3CA6C();
  sub_23FD3CAA8(v4);
  v5 = sub_23FC58AA0();
  *(_QWORD *)(v5 + 16) = v1;
  *(_QWORD *)(v5 + 24) = v0;
  v6 = (_QWORD *)sub_23FC58AA0();
  sub_23FD3D1BC(v6);
  sub_23FC10110();
  sub_23FC10108();
  sub_23FD3D480();
  swift_release();
  sub_23FC58C64();
  sub_23FC58C6C();
  sub_23FD3CE10();
  sub_23FC060D4();
}

uint64_t sub_23FD3984C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5[43] = a4;
  v5[44] = a5;
  v5[41] = a2;
  v5[42] = a3;
  v5[40] = a1;
  v6 = sub_23FD74474();
  v5[45] = v6;
  v5[46] = *(_QWORD *)(v6 - 8);
  v5[47] = swift_task_alloc();
  v7 = sub_23FD74A2C();
  v5[48] = v7;
  v5[49] = *(_QWORD *)(v7 - 8);
  v5[50] = swift_task_alloc();
  v8 = sub_23FD73AB4();
  v5[51] = v8;
  v5[52] = *(_QWORD *)(v8 - 8);
  v5[53] = swift_task_alloc();
  v5[54] = swift_task_alloc();
  sub_23FBFD684(&qword_256F64D90);
  v5[55] = swift_task_alloc();
  v5[56] = swift_task_alloc();
  sub_23FBFD684(&qword_254346D90);
  v5[57] = swift_task_alloc();
  sub_23FBFD684(&qword_254346A08);
  v5[58] = swift_task_alloc();
  sub_23FBFD684(&qword_256F5E308);
  v5[59] = swift_task_alloc();
  v9 = sub_23FD71E64();
  v5[60] = v9;
  v5[61] = *(_QWORD *)(v9 - 8);
  v5[62] = swift_task_alloc();
  v5[63] = swift_task_alloc();
  v10 = sub_23FD72BF0();
  v5[64] = v10;
  v5[65] = *(_QWORD *)(v10 - 8);
  v5[66] = swift_task_alloc();
  v5[67] = swift_task_alloc();
  v5[68] = swift_task_alloc();
  v5[69] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23FD39A3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,_QWORD *a34,uint64_t a35,uint64_t a36)
{
  _QWORD *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  void *v41;
  os_log_type_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t);
  uint64_t v51;
  char v52;
  NSObject *v53;
  os_log_type_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(_QWORD, uint64_t, _QWORD);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  NSObject *v94;
  os_log_type_t v95;
  _BOOL4 v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t (*v105)(void);
  uint64_t v107;
  int v108;
  NSObject *v109;
  os_log_type_t v110;
  uint8_t *v111;
  uint64_t v112;
  uint64_t v113;
  void (*v114)(uint64_t);
  uint64_t v115;
  uint64_t (*v116)(uint64_t);
  int v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  void (**v124)(_QWORD, _QWORD);
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  void (*v139)(uint64_t, uint64_t);
  uint64_t v140;
  NSObject *v141;
  uint64_t v142;
  unint64_t v143;
  os_log_type_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  _QWORD *v152;
  uint64_t v153;

  sub_23FC5E39C();
  a35 = v38;
  a36 = v39;
  a34 = v36;
  v40 = v36;
  v41 = (void *)v36[69];
  sub_23FCD5044();
  sub_23FD3CA88();
  sub_23FD72BE4();
  v42 = sub_23FD3CEBC();
  v152 = v36;
  if (sub_23FC09114(v42))
  {
    sub_23FBFEFF4();
    v43 = sub_23FBFEFF4();
    sub_23FD3D178(v43);
    sub_23FD3CAE8(4.8149e-34);
    v44 = sub_23FD3D2E4();
    v36[39] = sub_23FD3CD80(v44, v45, v46);
    sub_23FD3CC4C();
    sub_23FC75E60();
    sub_23FC091B8(&dword_23FBF8000, v47, v48, "Finding ToolDatabase mapping to custom key in %s's toolbox.");
    sub_23FBFF10C();
    sub_23FBFEFA0();
  }
  v49 = v36[65];
  sub_23FC10048();

  v50 = *(void (**)(uint64_t))(v49 + 8);
  v51 = sub_23FBFF1AC();
  v50(v51);
  sub_23FC10108();
  sub_23FD3CB40();
  sub_23FD29800();
  if (v52)
  {
    sub_23FBFEF74(v40[59], &qword_256F5E308);
    sub_23FCD5044();
    sub_23FD3CA88();
    v53 = sub_23FD72BE4();
    v54 = sub_23FD74F54();
    if (os_log_type_enabled(v53, v54))
    {
      v144 = v54;
      v55 = sub_23FBFEFF4();
      a23 = sub_23FBFEFF4();
      *(_DWORD *)v55 = 136315394;
      swift_bridgeObjectRetain();
      v56 = sub_23FD3D50C();
      v40[35] = sub_23FC9DC40(v56, v57, v58);
      sub_23FC5E69C();
      sub_23FC75E60();
      *(_WORD *)(v55 + 12) = 2080;
      v59 = sub_23FD71E40();
      v60 = *(_QWORD *)(v59 + 16);
      if (v60)
      {
        v140 = v55;
        v141 = v53;
        v61 = v40[61];
        v62 = sub_23FD3D458(MEMORY[0x24BEE4AF8]);
        sub_23FD3CC90(v62, v60);
        sub_23FC102C4();
        v64 = v59 + v63;
        v148 = *(_QWORD *)(v61 + 72);
        v65 = v61;
        v66 = *(void (**)(_QWORD, uint64_t, _QWORD))(v61 + 16);
        do
        {
          v66(v40[62], v64, v40[60]);
          v67 = sub_23FD71E58();
          v69 = v68;
          sub_23FD3CBDC(*(uint64_t (**)(uint64_t, uint64_t))(v65 + 8));
          v70 = a24;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_23FD3CABC(*(_QWORD *)(v70 + 16));
            v70 = a24;
          }
          v72 = *(_QWORD *)(v70 + 16);
          v71 = *(_QWORD *)(v70 + 24);
          if (v72 >= v71 >> 1)
          {
            sub_23FD3CAD0(v71);
            v70 = a24;
          }
          *(_QWORD *)(v70 + 16) = v72 + 1;
          v73 = v70 + 16 * v72;
          *(_QWORD *)(v73 + 32) = v67;
          *(_QWORD *)(v73 + 40) = v69;
          v40 = v152;
          v64 += v148;
          --v60;
        }
        while (v60);
        sub_23FC10404();
        v55 = v140;
        v53 = v141;
      }
      else
      {
        sub_23FC15A24();
        v70 = MEMORY[0x24BEE4AF8];
      }
      v40[32] = v70;
      sub_23FBFD684((uint64_t *)&unk_256F61630);
      sub_23FD3CC74();
      v88 = sub_23FD3CBA0();
      sub_23FC103E8();
      v40[33] = sub_23FD3D060(v88, v89, &a23);
      sub_23FC5E69C();
      sub_23FC5A648();
      sub_23FC59250(&dword_23FBF8000, v53, v144, "Invalid planner type (%s while populating toolbox. Possible values: [%s]", (uint8_t *)v55);
      sub_23FC58F90();
      sub_23FBFEFA0();
    }
    sub_23FC10048();

    v83 = sub_23FC5E880();
    v50(v83);
    v91 = v40[41];
    v90 = v40[42];
    sub_23FD3B5A0();
    v92 = sub_23FC5A704();
    *v93 = v91;
    v93[1] = v90;
    sub_23FD3CBD0(v92, (uint64_t)v93);
    swift_willThrow();
    goto LABEL_22;
  }
  sub_23FD3CDE8(v40[61]);
  v74 = static ToolboxManager.toolboxes()();
  sub_23FD3CC7C(v74);
  v75 = sub_23FC595E0();
  if (v40[15])
  {
    v37 = (_BYTE)v40 + 16;
    v76 = v40[58];
    sub_23FD3CEA4(v40 + 2, v40 + 12);
    sub_23FD3D1A4();
    sub_23FD3D2AC((uint64_t)(v40 + 2));
    sub_23FD3CFE8((uint64_t)(v40 + 7));
    v77 = sub_23FD3CF2C();
    v80 = sub_23FD3CAFC(v76, v78, v79, v77);
    sub_23FD3CE54(v80);
    sub_23FD73640();
    if (v40 == (_QWORD *)-216)
    {
      sub_23FD7361C();
      v107 = MEMORY[0xE0];
      sub_23FC0F3AC(MEMORY[0xE8], MEMORY[0xE0], &qword_256F64D90);
      v108 = sub_23FC75988(v107);
      if (v108 == 1)
      {
        sub_23FBFEF74(MEMORY[0xE0], &qword_256F64D90);
        sub_23FCD5044();
        sub_23FD3CA88();
        v109 = sub_23FD72BE4();
        v110 = sub_23FD74F6C();
        if (sub_23FC09114(v110))
        {
          v147 = MEMORY[0x80];
          v111 = (uint8_t *)sub_23FBFEFF4();
          a24 = sub_23FBFEFF4();
          *(_DWORD *)v111 = 136315138;
          sub_23FC5B578();
          v152[38] = sub_23FD3D060(v147, v112, &a24);
          sub_23FD75044();
          sub_23FC75E60();
          sub_23FBFF114(&dword_23FBF8000, v109, (os_log_type_t)v76, "No tool found with %s", v111);
          sub_23FBFF10C();
          sub_23FBFEFA0();
        }
        sub_23FC10048();

        v125 = sub_23FBFF1AC();
        v50(v125);
        v126 = MEMORY[0x110];
        v127 = sub_23FC58F00();
        sub_23FD3D5FC(v127, &qword_256F64D90);
        sub_23FD3CF44();
        v124 = (void (**)(_QWORD, _QWORD))(v126 + 8);
        v143 = 0xE000000000000000;
        v145 = 0;
      }
      else
      {
        (*(void (**)(_QWORD, _QWORD, _QWORD))(MEMORY[0xC8] + 32))(MEMORY[0xD8], MEMORY[0xE0], MEMORY[0xC0]);
        v113 = sub_23FD3D50C();
        v114(v113);
        v115 = sub_23FBFF1AC();
        v117 = v116(v115);
        v118 = MEMORY[0x110];
        if (v117 == *MEMORY[0x24BE56040])
        {
          v149 = MEMORY[0xE8];
          v119 = MEMORY[0xD8];
          v120 = MEMORY[0xC8];
          v121 = MEMORY[0x98];
          v40 = (_QWORD *)v152[45];
          sub_23FC5B3B0(MEMORY[0xD0], *(uint64_t (**)(uint64_t, uint64_t))(MEMORY[0xC8] + 96));
          sub_23FD3D308(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v121 + 32));
          v122 = sub_23FD74450();
          v143 = v123;
          v145 = v122;
          sub_23FC58F00();
          sub_23FD3D318(*(uint64_t (**)(uint64_t, uint64_t))(v121 + 8));
          sub_23FC5B3B0(v119, *(uint64_t (**)(uint64_t, uint64_t))(v120 + 8));
          sub_23FBFEF74(v149, &qword_256F64D90);
          sub_23FD3CF44();
          v124 = (void (**)(_QWORD, _QWORD))(v118 + 8);
        }
        else
        {
          v129 = MEMORY[0xC8];
          v130 = MEMORY[0x110] + 8;
          if (v117 != *MEMORY[0x24BE56048])
          {
            v146 = MEMORY[0x108];
            v135 = MEMORY[0xE8];
            v136 = MEMORY[0xD8];
            v151 = MEMORY[0x120];
            v153 = MEMORY[0xD0];
            v137 = MEMORY[0xC0];
            sub_23FD3B5A0();
            sub_23FC5A704();
            *(_OWORD *)v138 = xmmword_23FD824E0;
            *(_BYTE *)(v138 + 16) = 2;
            swift_willThrow();
            sub_23FC58F00();
            v139 = *(void (**)(uint64_t, uint64_t))(v129 + 8);
            v139(v136, v137);
            sub_23FBFEF74(v135, &qword_256F64D90);
            sub_23FD3CF44();
            (*(void (**)(uint64_t, uint64_t))(v118 + 8))(v151, v146);
            v139(v153, v137);
            goto LABEL_22;
          }
          v150 = MEMORY[0xE8];
          v131 = MEMORY[0xD8];
          v132 = MEMORY[0xB0];
          v40 = (_QWORD *)v152[48];
          sub_23FC5B3B0(MEMORY[0xD0], *(uint64_t (**)(uint64_t, uint64_t))(MEMORY[0xC8] + 96));
          sub_23FD3D308(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v132 + 32));
          v133 = sub_23FD74A14();
          v143 = v134;
          v145 = v133;
          sub_23FC58F00();
          sub_23FD3D318(*(uint64_t (**)(uint64_t, uint64_t))(v132 + 8));
          sub_23FC5B3B0(v131, *(uint64_t (**)(uint64_t, uint64_t))(v129 + 8));
          sub_23FBFEF74(v150, &qword_256F64D90);
          sub_23FD3CF44();
          v124 = (void (**)(_QWORD, _QWORD))v130;
        }
      }
      v128 = (uint64_t *)v40[40];
      (*v124)(v40[63], v40[60]);
      *v128 = v145;
      v128[1] = v143;
      sub_23FC5B2D4();
      sub_23FC5B2F4();
      sub_23FC5B980();
      sub_23FC5BCA0();
      sub_23FC090D0();
      sub_23FC090C0();
      sub_23FC5A574();
      sub_23FC5AB04();
      sub_23FC5C438();
      sub_23FC5C430();
      sub_23FC5C428();
      sub_23FC5C420();
      sub_23FC5BFE8();
      sub_23FC5BFE0();
      sub_23FC5C980();
      v105 = (uint64_t (*)(void))sub_23FC5C528();
      return sub_23FC75870(v105);
    }
    v81 = v40[63];
    v82 = v40[61];
    sub_23FD3CF44();
    sub_23FBFF204(v81, *(uint64_t (**)(uint64_t, uint64_t))(v82 + 8));
  }
  else
  {
    v84 = v40[63];
    v85 = v40[61];
    sub_23FC7E2CC(v75, &qword_256F64D78);
    sub_23FD3B5A0();
    v86 = sub_23FC5A704();
    sub_23FD3CA94(v86, v87);
    sub_23FC10454(v84, *(uint64_t (**)(uint64_t, uint64_t))(v85 + 8));
  }
LABEL_22:
  v94 = v40[66];
  sub_23FCD5044();
  sub_23FC10108();
  sub_23FC5AAE8();
  sub_23FD3D090();
  sub_23FC10108();
  sub_23FC5AAE8();
  sub_23FD3D090();
  sub_23FD72BE4();
  v95 = sub_23FC09250();
  v96 = sub_23FCA34F0(v95);
  v97 = v40[66];
  v98 = v40[64];
  v99 = v40[44];
  if (v96)
  {
    v100 = v40[43];
    v142 = v40[41];
    v101 = sub_23FBFEFF4();
    v102 = (_QWORD *)sub_23FBFEFF4();
    a24 = sub_23FBFEFF4();
    *(_DWORD *)v101 = 136315650;
    sub_23FC10108();
    v40[34] = sub_23FC9DC40(v100, v99, &a24);
    sub_23FD75044();
    sub_23FC75E60();
    *(_WORD *)(v101 + 12) = 2080;
    sub_23FC5AAE8();
    v40[37] = sub_23FD3CDB4(v142, v103, &a24);
    sub_23FC5E69C();
    sub_23FC75E60();
    *(_WORD *)(v101 + 22) = 2112;
    sub_23FD3D090();
    v104 = _swift_stdlib_bridgeErrorToNSError();
    v40[36] = v104;
    sub_23FC5DAF4();
    *v102 = v104;
    sub_23FD3CBE8();
    sub_23FD3CBE8();
    _os_log_impl(&dword_23FBF8000, v94, v37, "Could not find tool mapping for %s for %s's toolbox. Error: %@", (uint8_t *)v101, 0x20u);
    sub_23FBFD684(&qword_254346A30);
    sub_23FBFF10C();
    sub_23FBFEFA0();
  }
  sub_23FC10048();
  sub_23FC10048();
  sub_23FD3CBE8();
  sub_23FD3CBE8();

  ((void (*)(uint64_t, uint64_t))v50)(v97, v98);
  sub_23FD3D5B4();
  swift_willThrow();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  sub_23FC5BCA0();
  sub_23FC5B980();
  sub_23FC090C0();
  sub_23FC5C440();
  sub_23FC5C438();
  sub_23FC5C430();
  sub_23FC5C428();
  sub_23FC5C420();
  sub_23FC5BFE8();
  sub_23FC5BFE0();
  sub_23FC5C980();
  v105 = (uint64_t (*)(void))v40[1];
  return sub_23FC75870(v105);
}

void sub_23FD3A5E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v6;
  uint64_t v7;
  id v8;

  if (!a2)
  {
    v6 = 0;
    if (a3)
      goto LABEL_3;
LABEL_5:
    v7 = 0;
    goto LABEL_6;
  }
  v6 = (void *)sub_23FD74BE8();
  if (!a3)
    goto LABEL_5;
LABEL_3:
  v7 = sub_23FD7133C();
LABEL_6:
  v8 = (id)v7;
  (*(void (**)(uint64_t, void *))(a4 + 16))(a4, v6);

}

void sub_23FD3A658()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  sub_23FC061F0();
  sub_23FD3CE1C();
  sub_23FC7A734();
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v2, v3);
  v4 = sub_23FD3CA6C();
  sub_23FD3CAA8(v4);
  v5 = sub_23FC58AA0();
  *(_QWORD *)(v5 + 16) = v1;
  *(_QWORD *)(v5 + 24) = v0;
  v6 = (_QWORD *)sub_23FC58AA0();
  sub_23FD3D1BC(v6);
  sub_23FC10110();
  sub_23FC10108();
  sub_23FBFD684(&qword_256F64D58);
  sub_23FD3D480();
  swift_release();
  sub_23FC58C64();
  sub_23FC58C6C();
  sub_23FD3CE10();
  sub_23FC060D4();
}

uint64_t sub_23FD3A708(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[43] = a4;
  v5[44] = a5;
  v5[41] = a2;
  v5[42] = a3;
  v5[40] = a1;
  sub_23FBFD684(&qword_254346D90);
  v5[45] = swift_task_alloc();
  sub_23FBFD684(&qword_254346A08);
  v5[46] = swift_task_alloc();
  sub_23FBFD684(&qword_256F64D60);
  v5[47] = swift_task_alloc();
  v6 = sub_23FD72FB0();
  v5[48] = v6;
  v5[49] = *(_QWORD *)(v6 - 8);
  v5[50] = swift_task_alloc();
  v5[51] = swift_task_alloc();
  sub_23FBFD684(&qword_256F5E308);
  v5[52] = swift_task_alloc();
  v7 = sub_23FD71E64();
  v5[53] = v7;
  v5[54] = *(_QWORD *)(v7 - 8);
  v5[55] = swift_task_alloc();
  v5[56] = swift_task_alloc();
  v8 = sub_23FD72BF0();
  v5[57] = v8;
  v5[58] = *(_QWORD *)(v8 - 8);
  v5[59] = swift_task_alloc();
  v5[60] = swift_task_alloc();
  v5[61] = swift_task_alloc();
  return swift_task_switch();
}

#error "23FD3AA9C: call analysis failed (funcsize=512)"

uint64_t sub_23FD3B150()
{
  void (*v0)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v1)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  const void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;

  sub_23FC061F0();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = _Block_copy(v6);
  v8 = sub_23FD74BF4();
  v10 = v9;
  v11 = sub_23FD74BF4();
  v13 = v12;
  v14 = sub_23FC58AA0();
  *(_QWORD *)(v14 + 16) = v7;
  v15 = v5;
  v1(v8, v10, v11, v13, v3, v14);

  sub_23FC0AAF8();
  swift_bridgeObjectRelease();
  return swift_release();
}

void sub_23FD3B210(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  uint64_t v6;
  id v7;

  if (!a1)
  {
    v5 = 0;
    if (a2)
      goto LABEL_3;
LABEL_5:
    v6 = 0;
    goto LABEL_6;
  }
  v5 = (void *)sub_23FD74F00();
  if (!a2)
    goto LABEL_5;
LABEL_3:
  v6 = sub_23FD7133C();
LABEL_6:
  v7 = (id)v6;
  (*(void (**)(uint64_t, void *))(a3 + 16))(a3, v5);

}

void sub_23FD3B2B8(uint64_t a1@<X0>, void *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;

  sub_23FD3168C(a1, a2);
  *a3 = v4;
}

uint64_t type metadata accessor for ToolboxXPCServiceServer()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for ToolboxXPCServiceServer.Server()
{
  return objc_opt_self();
}

void sub_23FD3B31C(uint64_t a1, uint64_t a2)
{
  sub_23FCDE018(&qword_256F64D40, a2, (uint64_t (*)(uint64_t))type metadata accessor for ToolboxXPCServiceServer.Server, (uint64_t)&unk_23FD82510);
}

void sub_23FD3B348()
{
  sub_23FCDE018(&qword_254346CF0, 255, MEMORY[0x24BE535B0], MEMORY[0x24BE535A8]);
}

uint64_t sub_23FD3B378()
{
  uint64_t v0;
  id v1;

  swift_beginAccess();
  v0 = qword_254346E40;
  v1 = (id)qword_254346E40;
  return v0;
}

void sub_23FD3B3C0(uint64_t a1)
{
  void *v2;

  swift_beginAccess();
  v2 = (void *)qword_254346E40;
  qword_254346E40 = a1;

}

uint64_t (*sub_23FD3B40C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_23FD3B44C()
{
  swift_beginAccess();
  return swift_unknownObjectRetain();
}

uint64_t sub_23FD3B490(uint64_t a1)
{
  swift_beginAccess();
  qword_254346E38 = a1;
  return swift_unknownObjectRelease();
}

uint64_t (*sub_23FD3B4DC())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_23FD3B51C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_23FD3B540(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_23FD3B210(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_23FD3B54C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23FD3D184();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_23FC0922C(v0);
  v2 = sub_23FC5D2E8(v1);
  return sub_23FD3A708(v2, v3, v4, v5, v6);
}

unint64_t sub_23FD3B5A0()
{
  unint64_t result;

  result = qword_256F64D68;
  if (!qword_256F64D68)
  {
    result = MEMORY[0x2426797E8](&unk_23FD825E4, &type metadata for ToolboxXPCServiceServer.ToolboxServerError);
    atomic_store(result, (unint64_t *)&qword_256F64D68);
  }
  return result;
}

void sub_23FD3B5DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_23FD3A5E0(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

uint64_t sub_23FD3B5E4(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, _QWORD, uint64_t))(v2 + 16))(*a1, a1[1], a2);
}

uint64_t sub_23FD3B614()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23FD3D184();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_23FC0922C(v0);
  v2 = sub_23FC5D2E8(v1);
  return sub_23FD3984C(v2, v3, v4, v5, v6);
}

uint64_t sub_23FD3B668()
{
  uint64_t *v0;
  uint64_t v2;

  sub_23FC5A650();
  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23FD3B6AC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23FD3D184();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_23FC0922C(v0);
  v2 = sub_23FC5D2E8(v1);
  return sub_23FD38D40(v2, v3, v4, v5, v6);
}

void sub_23FD3B700(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_23FD38C00(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_23FD3B70C()
{
  sub_23FD3D4E4();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23FD3B734()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23FD3D184();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_23FC0922C(v0);
  v2 = sub_23FC5D2E8(v1);
  return sub_23FD37F70(v2, v3, v4, v5, v6);
}

void sub_23FD3B788(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_23FD36884(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_23FD3B794()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_23FC8A82C();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_23FC0922C(v0);
  v2 = sub_23FC5B354(v1);
  return sub_23FD37248(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_23FD3B7EC()
{
  sub_23FD3D4E4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23FD3B81C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_23FC8A82C();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_23FC0922C(v0);
  v2 = sub_23FC5B354(v1);
  return sub_23FD36908(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_23FD3B870()
{
  sub_23FD3D4E4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23FD3B8A8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = swift_task_alloc();
  v12 = (_QWORD *)sub_23FC0922C(v11);
  *v12 = v2;
  v12[1] = sub_23FD3CA10;
  return sub_23FD350D8(a1, v4, v5, v6, v7, v8, v9, v10);
}

void sub_23FD3B944(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_23FD3C578(v2);
    v2 = v3;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v4;
  sub_23FD3B9AC(v5);
  *a1 = v2;
}

void sub_23FD3B9AC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  int v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  BOOL v47;
  unint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  BOOL v57;
  uint64_t v58;
  char v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  BOOL v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  unint64_t v80;
  _QWORD *v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  BOOL v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;

  v3 = a1[1];
  v4 = sub_23FD75338();
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3)
        sub_23FD3C010(0, v3, 1, a1);
      return;
    }
    goto LABEL_144;
  }
  v5 = v4;
  sub_23FD3076C(v3 / 2);
  v101 = v6;
  v102 = v3;
  v103 = v7;
  v99 = a1;
  if (v3 <= 0)
  {
    v104 = MEMORY[0x24BEE4AF8];
    v33 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_110:
    if (v33 < 2)
    {
LABEL_121:
      swift_bridgeObjectRelease();
      if (v3 >= -1)
      {
        *(_QWORD *)(v101 + 16) = 0;
        swift_bridgeObjectRelease();
        return;
      }
      goto LABEL_149;
    }
    v90 = *v99;
    while (1)
    {
      v91 = v33 - 2;
      if (v33 < 2)
        break;
      if (!v90)
        goto LABEL_153;
      v92 = v104;
      v93 = *(_QWORD *)(v104 + 32 + 16 * v91);
      v94 = *(_QWORD *)(v104 + 32 + 16 * (v33 - 1) + 8);
      sub_23FD3C0D4((char *)(v90 + 16 * v93), (char *)(v90 + 16 * *(_QWORD *)(v104 + 32 + 16 * (v33 - 1))), v90 + 16 * v94, v103);
      if (v1)
        goto LABEL_106;
      if (v94 < v93)
        goto LABEL_139;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23FD3C35C(v104);
        v92 = v97;
      }
      if (v91 >= *(_QWORD *)(v92 + 16))
        goto LABEL_140;
      v95 = (_QWORD *)(v92 + 32 + 16 * v91);
      *v95 = v93;
      v95[1] = v94;
      v96 = *(_QWORD *)(v92 + 16);
      if (v33 > v96)
        goto LABEL_141;
      memmove((void *)(v92 + 32 + 16 * (v33 - 1)), (const void *)(v92 + 32 + 16 * v33), 16 * (v96 - v33));
      v104 = v92;
      *(_QWORD *)(v92 + 16) = v96 - 1;
      v33 = v96 - 1;
      v3 = v102;
      if (v96 <= 2)
        goto LABEL_121;
    }
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
LABEL_153:
    __break(1u);
    return;
  }
  v100 = v5;
  v8 = 0;
  v9 = *a1;
  v98 = *a1 + 8;
  v104 = MEMORY[0x24BEE4AF8];
  while (1)
  {
    v10 = v8++;
    if (v8 >= v3)
      goto LABEL_32;
    v11 = (uint64_t *)(v9 + 16 * v8);
    v12 = *v11;
    v13 = v11[1];
    v14 = (_QWORD *)(v9 + 16 * v10);
    if (v12 == *v14 && v13 == v14[1])
    {
      v17 = v10 + 2;
      if (v10 + 2 >= v3)
        goto LABEL_31;
      v16 = 0;
LABEL_13:
      v18 = (_QWORD *)(v98 + 16 * v17);
      do
      {
        v19 = (_QWORD *)(v9 + 16 * v8);
        if (*(v18 - 1) == *v19 && *v18 == v19[1])
        {
          if ((v16 & 1) != 0)
            goto LABEL_24;
        }
        else if (((v16 ^ sub_23FD75380()) & 1) != 0)
        {
          goto LABEL_23;
        }
        v18 += 2;
        v21 = v17 + 1;
        v8 = v17;
        v17 = v21;
      }
      while (v21 < v3);
      v17 = v21;
      goto LABEL_23;
    }
    v16 = sub_23FD75380();
    v17 = v10 + 2;
    if (v10 + 2 < v3)
      goto LABEL_13;
LABEL_23:
    v8 = v17;
    if ((v16 & 1) == 0)
      goto LABEL_32;
LABEL_24:
    if (v17 < v10)
      goto LABEL_148;
    if (v10 < v17)
    {
      v22 = 16 * v17;
      v23 = 16 * v10;
      v24 = v17;
      v25 = v10;
      do
      {
        if (v25 != --v24)
        {
          if (!v9)
            goto LABEL_152;
          v26 = v9 + v22;
          v27 = *(_QWORD *)(v9 + v23);
          v28 = *(_QWORD *)(v9 + v23 + 8);
          *(_OWORD *)(v9 + v23) = *(_OWORD *)(v9 + v22 - 16);
          *(_QWORD *)(v26 - 16) = v27;
          *(_QWORD *)(v26 - 8) = v28;
        }
        ++v25;
        v22 -= 16;
        v23 += 16;
      }
      while (v25 < v24);
    }
LABEL_31:
    v8 = v17;
LABEL_32:
    if (v8 >= v3)
      goto LABEL_41;
    if (__OFSUB__(v8, v10))
      goto LABEL_143;
    if (v8 - v10 >= v100)
      goto LABEL_41;
    if (__OFADD__(v10, v100))
      goto LABEL_146;
    if (v10 + v100 >= v3)
      v29 = v3;
    else
      v29 = v10 + v100;
    if (v29 < v10)
      goto LABEL_147;
    if (v8 == v29)
    {
LABEL_41:
      v30 = v104;
    }
    else
    {
      v81 = (_QWORD *)(v9 + 16 * v8);
      v30 = v104;
      do
      {
        v82 = (uint64_t *)(v9 + 16 * v8);
        v83 = *v82;
        v84 = v82[1];
        v85 = v10;
        v86 = v81;
        do
        {
          v87 = v83 == *(v86 - 2) && v84 == *(v86 - 1);
          if (v87 || (sub_23FD75380() & 1) == 0)
            break;
          if (!v9)
            goto LABEL_150;
          v83 = *v86;
          v84 = v86[1];
          *(_OWORD *)v86 = *((_OWORD *)v86 - 1);
          *(v86 - 1) = v84;
          *(v86 - 2) = v83;
          v86 -= 2;
          ++v85;
        }
        while (v8 != v85);
        ++v8;
        v81 += 2;
      }
      while (v8 != v29);
      v8 = v29;
    }
    if (v8 < v10)
      goto LABEL_142;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_23FD3C278(0, *(_QWORD *)(v30 + 16) + 1, 1, (char *)v30);
      v30 = v88;
    }
    v32 = *(_QWORD *)(v30 + 16);
    v31 = *(_QWORD *)(v30 + 24);
    v33 = v32 + 1;
    if (v32 >= v31 >> 1)
    {
      sub_23FD3C278(v31 > 1, v32 + 1, 1, (char *)v30);
      v30 = v89;
    }
    *(_QWORD *)(v30 + 16) = v33;
    v34 = v30 + 32;
    v35 = (uint64_t *)(v30 + 32 + 16 * v32);
    *v35 = v10;
    v35[1] = v8;
    v104 = v30;
    if (v32)
      break;
    v33 = 1;
LABEL_90:
    v3 = v102;
    if (v8 >= v102)
      goto LABEL_110;
  }
  while (1)
  {
    v36 = v33 - 1;
    if (v33 >= 4)
    {
      v41 = v34 + 16 * v33;
      v42 = *(_QWORD *)(v41 - 64);
      v43 = *(_QWORD *)(v41 - 56);
      v47 = __OFSUB__(v43, v42);
      v44 = v43 - v42;
      if (v47)
        goto LABEL_127;
      v46 = *(_QWORD *)(v41 - 48);
      v45 = *(_QWORD *)(v41 - 40);
      v47 = __OFSUB__(v45, v46);
      v39 = v45 - v46;
      v40 = v47;
      if (v47)
        goto LABEL_128;
      v48 = v33 - 2;
      v49 = (uint64_t *)(v34 + 16 * (v33 - 2));
      v51 = *v49;
      v50 = v49[1];
      v47 = __OFSUB__(v50, v51);
      v52 = v50 - v51;
      if (v47)
        goto LABEL_129;
      v47 = __OFADD__(v39, v52);
      v53 = v39 + v52;
      if (v47)
        goto LABEL_131;
      if (v53 >= v44)
      {
        v71 = (uint64_t *)(v34 + 16 * v36);
        v73 = *v71;
        v72 = v71[1];
        v47 = __OFSUB__(v72, v73);
        v74 = v72 - v73;
        if (v47)
          goto LABEL_137;
        v64 = v39 < v74;
        goto LABEL_79;
      }
    }
    else
    {
      if (v33 != 3)
      {
        v65 = *(_QWORD *)(v30 + 32);
        v66 = *(_QWORD *)(v30 + 40);
        v47 = __OFSUB__(v66, v65);
        v58 = v66 - v65;
        v59 = v47;
        goto LABEL_73;
      }
      v38 = *(_QWORD *)(v30 + 32);
      v37 = *(_QWORD *)(v30 + 40);
      v47 = __OFSUB__(v37, v38);
      v39 = v37 - v38;
      v40 = v47;
    }
    if ((v40 & 1) != 0)
      goto LABEL_130;
    v48 = v33 - 2;
    v54 = (uint64_t *)(v34 + 16 * (v33 - 2));
    v56 = *v54;
    v55 = v54[1];
    v57 = __OFSUB__(v55, v56);
    v58 = v55 - v56;
    v59 = v57;
    if (v57)
      goto LABEL_132;
    v60 = (uint64_t *)(v34 + 16 * v36);
    v62 = *v60;
    v61 = v60[1];
    v47 = __OFSUB__(v61, v62);
    v63 = v61 - v62;
    if (v47)
      goto LABEL_134;
    if (__OFADD__(v58, v63))
      goto LABEL_136;
    if (v58 + v63 >= v39)
    {
      v64 = v39 < v63;
LABEL_79:
      if (v64)
        v36 = v48;
      goto LABEL_81;
    }
LABEL_73:
    if ((v59 & 1) != 0)
      goto LABEL_133;
    v67 = (uint64_t *)(v34 + 16 * v36);
    v69 = *v67;
    v68 = v67[1];
    v47 = __OFSUB__(v68, v69);
    v70 = v68 - v69;
    if (v47)
      goto LABEL_135;
    if (v70 < v58)
      goto LABEL_90;
LABEL_81:
    v75 = v36 - 1;
    if (v36 - 1 >= v33)
    {
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
      goto LABEL_138;
    }
    if (!v9)
      goto LABEL_151;
    v76 = (uint64_t *)(v34 + 16 * v75);
    v77 = *v76;
    v78 = (_QWORD *)(v34 + 16 * v36);
    v79 = v78[1];
    sub_23FD3C0D4((char *)(v9 + 16 * *v76), (char *)(v9 + 16 * *v78), v9 + 16 * v79, v103);
    if (v1)
      break;
    if (v79 < v77)
      goto LABEL_124;
    if (v36 > *(_QWORD *)(v104 + 16))
      goto LABEL_125;
    *v76 = v77;
    *(_QWORD *)(v34 + 16 * v75 + 8) = v79;
    v80 = *(_QWORD *)(v104 + 16);
    if (v36 >= v80)
      goto LABEL_126;
    v30 = v104;
    v33 = v80 - 1;
    memmove((void *)(v34 + 16 * v36), v78 + 2, 16 * (v80 - 1 - v36));
    *(_QWORD *)(v104 + 16) = v80 - 1;
    if (v80 <= 2)
      goto LABEL_90;
  }
LABEL_106:
  swift_bridgeObjectRelease();
  if (v102 < -1)
    goto LABEL_145;
  *(_QWORD *)(v101 + 16) = 0;
  swift_bridgeObjectRelease();
}

uint64_t sub_23FD3C010(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 16 * a3;
    while (2)
    {
      v9 = (uint64_t *)(v7 + 16 * v4);
      result = *v9;
      v10 = v9[1];
      v11 = v6;
      v12 = (uint64_t *)v8;
      do
      {
        if (result == *(v12 - 2) && v10 == *(v12 - 1))
          break;
        result = sub_23FD75380();
        if ((result & 1) == 0)
          break;
        if (!v7)
        {
          __break(1u);
          return result;
        }
        result = *v12;
        v10 = v12[1];
        *(_OWORD *)v12 = *((_OWORD *)v12 - 1);
        *(v12 - 1) = v10;
        *(v12 - 2) = result;
        v12 -= 2;
        ++v11;
      }
      while (v4 != v11);
      ++v4;
      v8 += 16;
      if (v4 != a2)
        continue;
      break;
    }
  }
  return result;
}

uint64_t sub_23FD3C0D4(char *a1, char *a2, unint64_t a3, char *a4)
{
  char *v4;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  BOOL v14;
  char *v15;
  char *v18;
  char *v19;
  char *v20;
  BOOL v21;
  BOOL v22;
  BOOL v23;

  v4 = a4;
  v6 = a2;
  v7 = a1;
  v8 = a2 - a1;
  v9 = (a2 - a1) / 16;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 16;
  if (v9 >= v11)
  {
    sub_23FC9A51C(a2, (uint64_t)(a3 - (_QWORD)a2) / 16, a4);
    v12 = (unint64_t)&v4[16 * v11];
    if (v7 >= v6 || v10 < 16)
      goto LABEL_47;
    v18 = (char *)(a3 - 16);
    while (1)
    {
      v19 = v18 + 16;
      v20 = (char *)(v12 - 16);
      v21 = *(_QWORD *)(v12 - 16) == *((_QWORD *)v6 - 2) && *(_QWORD *)(v12 - 8) == *((_QWORD *)v6 - 1);
      if (v21 || (sub_23FD75380() & 1) == 0)
      {
        v23 = v19 != (char *)v12 || (unint64_t)v18 >= v12;
        v12 -= 16;
        if (!v23)
          goto LABEL_43;
      }
      else
      {
        v22 = v19 != v6 || v18 >= v6;
        v20 = v6 - 16;
        v6 -= 16;
        if (!v22)
          goto LABEL_43;
      }
      *(_OWORD *)v18 = *(_OWORD *)v20;
LABEL_43:
      v18 -= 16;
      if (v6 <= v7 || v12 <= (unint64_t)v4)
        goto LABEL_47;
    }
  }
  sub_23FC9A51C(a1, (a2 - a1) / 16, a4);
  v12 = (unint64_t)&v4[16 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 16)
  {
    while (1)
    {
      v14 = *(_QWORD *)v6 == *(_QWORD *)v4 && *((_QWORD *)v6 + 1) == *((_QWORD *)v4 + 1);
      if (!v14 && (sub_23FD75380() & 1) != 0)
        break;
      v15 = v4;
      v14 = v7 == v4;
      v4 += 16;
      if (!v14)
        goto LABEL_15;
LABEL_16:
      v7 += 16;
      if ((unint64_t)v4 >= v12 || (unint64_t)v6 >= a3)
        goto LABEL_21;
    }
    v15 = v6;
    v14 = v7 == v6;
    v6 += 16;
    if (v14)
      goto LABEL_16;
LABEL_15:
    *(_OWORD *)v7 = *(_OWORD *)v15;
    goto LABEL_16;
  }
LABEL_21:
  v6 = v7;
LABEL_47:
  sub_23FC9A51C(v4, (uint64_t)(v12 - (_QWORD)v4) / 16, v6);
  return 1;
}

void sub_23FD3C278(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_23FBFD684(qword_256F64E70);
    v10 = (char *)sub_23FC58AA0();
    v11 = j__malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 16);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || &v13[16 * v8] <= v12)
      memmove(v12, v13, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, 16 * v8);
  }
  sub_23FC15A24();
  sub_23FC09258();
}

void sub_23FD3C35C(uint64_t a1)
{
  sub_23FD3C278(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_23FD3C374(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  uint64_t i;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v2 = 64;
  for (i = 10; i - 8 < (unint64_t)(v3 + 63) >> 6; ++i)
  {
    v1 = *(_QWORD *)(a1 + 8 * i);
    v2 += 64;
    if (v1)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_23FD3C3F4(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || -(-1 << *(_BYTE *)(a4 + 32)) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a4 + 64 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2)
    return sub_23FD750B0();
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_23FD3C470(uint64_t result, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (a3 < 0 || 1 << *(_BYTE *)(a6 + 32) <= a3)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a6 + (((unint64_t)a3 >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> a3) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a6 + 36) == a4)
  {
    v9 = result;
    v10 = *(_QWORD *)(a6 + 48);
    v11 = sub_23FD74A2C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a3, v11);
    v12 = *(_QWORD *)(a6 + 56);
    v13 = sub_23FD743F0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a2, v12 + *(_QWORD *)(*(_QWORD *)(v13 - 8) + 72) * a3, v13);
  }
LABEL_8:
  __break(1u);
  return result;
}

void sub_23FD3C53C()
{
  sub_23FC9BEA4();
}

void sub_23FD3C550()
{
  sub_23FC9BEB8();
}

void sub_23FD3C564()
{
  sub_23FC9C394();
}

void sub_23FD3C578(uint64_t a1)
{
  sub_23FC9BF7C(0, *(_QWORD *)(a1 + 16), 0, a1);
}

int64_t sub_23FD3C58C(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_20;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  if (v5 + 1 < (unint64_t)(result + 63) >> 6)
  {
    v10 = *(_QWORD *)(v6 + 8 * v9);
    if (v10)
      return __clz(__rbit64(v10)) + (v9 << 6);
    v11 = (unint64_t)(result + 63) >> 6;
    v9 = v5 + 2;
    if (v5 + 2 < v11)
    {
      v10 = *(_QWORD *)(v6 + 8 * v9);
      if (v10)
        return __clz(__rbit64(v10)) + (v9 << 6);
      while (v5 + 3 < v11)
      {
        v10 = *(_QWORD *)(a4 + 80 + 8 * v5++);
        if (v10)
        {
          v9 = v5 + 2;
          return __clz(__rbit64(v10)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_23FD3C670@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_23FD36154(a1, *(_QWORD **)(v2 + 16), a2);
}

void sub_23FD3C688(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_23FD34ECC(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_23FD3C690()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_23FC0922C(v0);
  v2 = sub_23FCD4F38(v1);
  return sub_23FD34708(v2, v3, v4);
}

uint64_t sub_23FD3C6E0()
{
  sub_23FD3D4E4();
  return swift_deallocObject();
}

uint64_t sub_23FD3C700()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_23FC0922C(v0);
  v2 = sub_23FCD4F38(v1);
  return sub_23FD33B94(v2, v3, v4);
}

void sub_23FD3C750(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_23FD33A90(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_23FD3C758()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23FD3C77C(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(*a1);
}

uint64_t sub_23FD3C7A0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = swift_task_alloc();
  v1 = (_QWORD *)sub_23FC0922C(v0);
  v2 = sub_23FCD4F38(v1);
  return sub_23FD31818(v2, v3, v4);
}

uint64_t sub_23FD3C7F0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_23FC577F4(a1, a2);
  return a1;
}

uint64_t sub_23FD3C804(uint64_t a1)
{
  uint64_t v1;

  return sub_23FD33A1C(a1, *(_QWORD **)(v1 + 16)) & 1;
}

uint64_t sub_23FD3C820(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_23FD3C830(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for ToolboxXPCServiceServer.ToolboxServerError(uint64_t a1)
{
  return sub_23FD3C858(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_23FD3C858(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return swift_bridgeObjectRelease();
  return result;
}

void _s23IntelligenceFlowRuntime23ToolboxXPCServiceServerC18ToolboxServerErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_23FD3C830(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_23FC09258();
}

uint64_t assignWithCopy for ToolboxXPCServiceServer.ToolboxServerError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_23FD3C830(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_23FD3C858(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for ToolboxXPCServiceServer.ToolboxServerError(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_23FD3C858(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ToolboxXPCServiceServer.ToolboxServerError(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFE && *(_BYTE *)(a1 + 17))
    {
      v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 2)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ToolboxXPCServiceServer.ToolboxServerError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_23FD3C9CC(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_23FD3C9E4(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ToolboxXPCServiceServer.ToolboxServerError()
{
  return &type metadata for ToolboxXPCServiceServer.ToolboxServerError;
}

uint64_t sub_23FD3CA6C()
{
  return sub_23FD74DEC();
}

uint64_t sub_23FD3CA88()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_23FD3CA94(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a2 = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 2;
  return swift_willThrow();
}

uint64_t sub_23FD3CAA8(uint64_t a1)
{
  uint64_t v1;

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v1, 1, 1, a1);
}

void sub_23FD3CABC(uint64_t a1@<X8>)
{
  sub_23FC9B624(0, a1 + 1, 1);
}

void sub_23FD3CAD0(unint64_t a1@<X8>)
{
  uint64_t v1;

  sub_23FC9B624(a1 > 1, v1, 1);
}

uint64_t sub_23FD3CAE8(float a1)
{
  float *v1;

  *v1 = a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23FD3CAFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a1, 1, 1, a4);
  return sub_23FD74120();
}

void sub_23FD3CB18(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 88) = a1;
  sub_23FC9B624(0, v1, 0);
}

void sub_23FD3CB30(uint64_t a1, uint64_t a2)
{
  sub_23FC9B624(a1, a2, 1);
}

void sub_23FD3CB38()
{
  void *v0;

}

uint64_t sub_23FD3CB40()
{
  return sub_23FD71E4C();
}

void sub_23FD3CB50(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  uint8_t *v5;
  os_log_type_t v6;

  _os_log_impl(a1, v4, v6, a4, v5, 0x16u);
}

uint64_t sub_23FD3CB8C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 280) = a1;
  return sub_23FD75044();
}

uint64_t sub_23FD3CBA0()
{
  return sub_23FD74BD0();
}

uint64_t sub_23FD3CBB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t sub_23FD3CBD0(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)(a2 + 16) = 0;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23FD3CBDC@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

void sub_23FD3CBE8()
{
  void *v0;

}

id sub_23FD3CBF0()
{
  void *v0;

  return v0;
}

uint64_t sub_23FD3CBF8()
{
  return sub_23FD74BD0();
}

uint64_t sub_23FD3CC10()
{
  uint64_t v0;
  uint64_t v1;

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v0, 1, v1);
}

uint64_t sub_23FD3CC20(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  unint64_t v3;
  uint64_t v4;

  return sub_23FC9DC40(v4, v3, a3);
}

uint64_t sub_23FD3CC2C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 288) = a1;
  return sub_23FD75044();
}

uint64_t sub_23FD3CC4C()
{
  return sub_23FD75044();
}

void sub_23FD3CC58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v1 + 16) = v0;
  v5 = v1 + 16 * v4;
  *(_QWORD *)(v5 + 32) = v3;
  *(_QWORD *)(v5 + 40) = v2;
}

unint64_t sub_23FD3CC74()
{
  return sub_23FCBB890();
}

void sub_23FD3CC7C(uint64_t a1)
{
  _OWORD *v1;

  sub_23FCC3C88(a1, v1);
}

void sub_23FD3CC90(uint64_t a1, uint64_t a2)
{
  sub_23FC9B624(a1, a2, 0);
}

uint64_t sub_23FD3CC98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t (*a19)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  return a19(v19, v21, v20);
}

uint64_t sub_23FD3CCAC(float a1)
{
  float *v1;

  *v1 = a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23FD3CCBC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 264) = a1;
  return sub_23FD75044();
}

uint64_t sub_23FD3CCD0(uint64_t a1)
{
  uint64_t v1;

  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v1, 1, 1, a1);
  return sub_23FD73640();
}

uint64_t sub_23FD3CD10(uint64_t a1)
{
  uint64_t v1;

  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v1, 1, 1, a1);
  return sub_23FD73640();
}

uint64_t sub_23FD3CD50()
{
  return swift_willThrow();
}

uint64_t sub_23FD3CD80(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  unint64_t v3;

  return sub_23FC9DC40(a1, v3, a3);
}

uint64_t sub_23FD3CD88(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v3 - 8) = *v2;
  *(_QWORD *)(v3 - 8) = *v2;
  *(_QWORD *)(v4 + 520) = a1;
  *(_QWORD *)(v4 + 528) = v1;
  return swift_task_dealloc();
}

uint64_t sub_23FD3CDB4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  unint64_t v3;

  return sub_23FC9DC40(a1, v3, a3);
}

uint64_t sub_23FD3CDBC()
{
  return swift_willThrow();
}

uint64_t sub_23FD3CDE8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 32))(v1);
}

uint64_t sub_23FD3CDF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, unint64_t a18, uint64_t a19, unint64_t a20,uint64_t a21)
{
  sub_23FC9E934(a19, a20);
  return sub_23FC9E934(a21, a18);
}

void sub_23FD3CE10()
{
  uint64_t *v0;
  uint64_t v1;

  sub_23FBFEF74(v1, v0);
}

uint64_t sub_23FD3CE54(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v2, 1, 1, a1);
  return v1;
}

BOOL sub_23FD3CE94(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

void *sub_23FD3CEA4(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x50uLL);
}

uint64_t sub_23FD3CEAC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FD3CEBC()
{
  return sub_23FD74F3C();
}

uint64_t sub_23FD3CEC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  unint64_t v5;
  uint64_t v6;
  va_list va;

  va_start(va, a5);
  return sub_23FC9DC40(v6, v5, (uint64_t *)va);
}

uint64_t sub_23FD3CED4()
{
  uint64_t v0;

  *(_WORD *)(v0 + 12) = 2080;
  return sub_23FD71E40();
}

uint64_t sub_23FD3CEE4()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  return sub_23FC9DC40(v0, v1, (uint64_t *)(v2 - 88));
}

uint64_t sub_23FD3CEF4()
{
  return sub_23FD732A4();
}

uint64_t sub_23FD3CF10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

uint64_t sub_23FD3CF2C()
{
  return sub_23FD71354();
}

uint64_t sub_23FD3CF34(float a1)
{
  float *v1;

  *v1 = a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23FD3CF44()
{
  uint64_t v0;

  return sub_23FC5847C(v0);
}

void sub_23FD3CF4C(uint64_t a1)
{
  _OWORD *v1;

  sub_23FCC3C88(a1, v1);
}

uint64_t sub_23FD3CFB0()
{
  return _swift_stdlib_bridgeErrorToNSError();
}

uint64_t sub_23FD3CFB8()
{
  return swift_willThrow();
}

void sub_23FD3CFE8(uint64_t a1)
{
  uint64_t v1;

  sub_23FC584E0(a1, v1);
}

uint64_t sub_23FD3CFF0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  a1[7] = a2;
  a1[4] = v2;
  a1[5] = v3;
  return sub_23FD75434();
}

void sub_23FD3D00C()
{
  uint64_t v0;
  uint64_t v1;

  sub_23FC584E0(v0, v1);
}

uint64_t sub_23FD3D01C()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0[49] + 32))(v0[51], v0[47], v0[48]);
}

uint64_t sub_23FD3D038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t (*a20)(_QWORD, uint64_t, _QWORD))
{
  uint64_t v20;
  uint64_t v21;

  return a20(*(_QWORD *)(v21 + 440), v20, *(_QWORD *)(v21 + 424));
}

uint64_t sub_23FD3D054()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

uint64_t sub_23FD3D060(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  unint64_t v3;

  return sub_23FC9DC40(a1, v3, a3);
}

uint64_t sub_23FD3D068()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0[54] + 32))(v0[56], v0[52], v0[53]);
}

uint64_t sub_23FD3D084()
{
  return swift_willThrow();
}

id sub_23FD3D090()
{
  void *v0;

  return v0;
}

uint64_t sub_23FD3D098()
{
  uint64_t v0;

  return sub_23FC5847C(v0);
}

uint64_t sub_23FD3D0A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t (*a20)(_QWORD, uint64_t, _QWORD))
{
  uint64_t v20;
  uint64_t v21;

  return a20(*(_QWORD *)(v20 + 400), v21, *(_QWORD *)(v20 + 384));
}

uint64_t sub_23FD3D0BC()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_23FD3D0C8()
{
  return sub_23FD74BD0();
}

uint64_t sub_23FD3D0E0()
{
  uint64_t v0;

  return sub_23FC5847C(v0);
}

uint64_t sub_23FD3D0E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  return a14;
}

uint64_t sub_23FD3D118()
{
  return sub_23FD74C48();
}

uint64_t sub_23FD3D130@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 512) = a1;
  *a1 = v2;
  a1[1] = a2;
  return *(_QWORD *)(v2 + 328);
}

void sub_23FD3D150()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 272) = v1;
}

uint64_t sub_23FD3D160(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 304) = a1;
  return sub_23FD75044();
}

uint64_t sub_23FD3D178(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 88) = result;
  return result;
}

uint64_t sub_23FD3D194()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FD3D1A4()
{
  return sub_23FD73658();
}

uint64_t sub_23FD3D1BC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  a1[2] = v4;
  a1[3] = v2;
  a1[4] = v3;
  a1[5] = v1;
  return swift_retain();
}

uint64_t sub_23FD3D1D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

uint64_t sub_23FD3D1DC()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[75] + 8))(v0[77], v0[74]);
}

void sub_23FD3D1F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v0 + 16) = v4;
  v5 = v0 + 16 * v1;
  *(_QWORD *)(v5 + 32) = v2;
  *(_QWORD *)(v5 + 40) = v3;
}

uint64_t sub_23FD3D20C()
{
  return sub_23FD74648();
}

void sub_23FD3D218(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_23FBFEF74(v2, a2);
}

uint64_t sub_23FD3D22C()
{
  return sub_23FD750E0();
}

void sub_23FD3D240()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v4 + 16) = v0;
  v5 = v4 + 16 * v1;
  *(_QWORD *)(v5 + 32) = v3;
  *(_QWORD *)(v5 + 40) = v2;
}

uint64_t sub_23FD3D25C()
{
  return sub_23FD74E70();
}

uint64_t sub_23FD3D270()
{
  unint64_t v0;
  uint64_t v1;

  return sub_23FC577B0(v1, v0);
}

uint64_t sub_23FD3D27C()
{
  return _swift_stdlib_bridgeErrorToNSError();
}

uint64_t sub_23FD3D284(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t (*a20)(uint64_t, uint64_t))
{
  return a20(a19, a15);
}

uint64_t sub_23FD3D290()
{
  return swift_task_alloc();
}

uint64_t sub_23FD3D2A4(uint64_t a1)
{
  unint64_t v1;

  return sub_23FC9E934(a1, v1);
}

void sub_23FD3D2AC(uint64_t a1)
{
  uint64_t v1;

  sub_23FC584E0(a1, v1);
}

void sub_23FD3D2D0(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  uint8_t *v5;
  os_log_type_t v6;

  _os_log_impl(a1, v4, v6, a4, v5, 0x20u);
}

uint64_t sub_23FD3D2E4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FD3D308@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return a1(v2, v1, v3);
}

uint64_t sub_23FD3D318@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_23FD3D328(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  return a20;
}

uint64_t sub_23FD3D354()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_23FD3C7F0(v0, v2);
  sub_23FD3C7F0(v1, v3);
  return v0;
}

uint64_t sub_23FD3D37C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FD3D388()
{
  return swift_bridgeObjectRelease();
}

BOOL sub_23FD3D390(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_23FD3D3A0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FD3D3B0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FD3D3C0()
{
  return sub_23FD74F54();
}

uint64_t sub_23FD3D3C8()
{
  return sub_23FD74C48();
}

void sub_23FD3D3D8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 256) = v1;
}

unint64_t sub_23FD3D3F0()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_23FD3D418()
{
  return sub_23FD74C48();
}

uint64_t sub_23FD3D428()
{
  return sub_23FD74C48();
}

uint64_t sub_23FD3D438()
{
  return sub_23FD74C48();
}

uint64_t sub_23FD3D448(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  unint64_t v13;
  va_list va;

  va_start(va, a13);
  return sub_23FC9DC40(a6, v13, (uint64_t *)va);
}

uint64_t sub_23FD3D458@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 88) = a1;
  return 0;
}

uint64_t sub_23FD3D468()
{
  uint64_t v0;

  *(_WORD *)(v0 + 12) = 2080;
  return sub_23FD71E40();
}

uint64_t sub_23FD3D478()
{
  uint64_t v0;

  return sub_23FC5847C(v0);
}

uint64_t sub_23FD3D480()
{
  return sub_23FD74E70();
}

uint64_t sub_23FD3D490()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t sub_23FD3D4B4()
{
  return sub_23FD72FBC();
}

uint64_t sub_23FD3D4C4(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 88) = result;
  return result;
}

uint64_t sub_23FD3D4D4()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

unint64_t sub_23FD3D4DC()
{
  return sub_23FD3B5A0();
}

uint64_t sub_23FD3D4E4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FD3D4EC(uint64_t a1)
{
  unint64_t v1;

  return sub_23FC9E934(a1, v1);
}

uint64_t sub_23FD3D4F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t (*a19)(uint64_t, uint64_t), uint64_t a20,uint64_t a21)
{
  return a19(a21, a20);
}

uint64_t sub_23FD3D50C()
{
  uint64_t v0;

  return v0;
}

void sub_23FD3D52C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 272) = v0;
}

uint64_t sub_23FD3D540(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 288) = result;
  return result;
}

uint64_t sub_23FD3D554()
{
  return sub_23FD74E70();
}

uint64_t sub_23FD3D560()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_23FD3D56C()
{
  uint64_t v0;
  unint64_t v1;

  return sub_23FC9E934(v0, v1);
}

uint64_t sub_23FD3D5E4()
{
  return swift_retain();
}

uint64_t sub_23FD3D5F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

void sub_23FD3D5FC(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_23FBFEF74(v2, a2);
}

uint64_t sub_23FD3D604()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

void sub_23FD3D610(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_23FBFEF74(v2, a2);
}

uint64_t sub_23FD3D61C@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_23FD3D628()
{
  uint64_t v0;

  return sub_23FC5847C(v0);
}

uint64_t sub_23FD3D630()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t sub_23FD3D63C()
{
  return swift_bridgeObjectRelease();
}

void sub_23FD3D644()
{
  sub_23FC99AE4();
}

uint64_t sub_23FD3D650(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 - 144))(a1, a2, 1);
}

uint64_t sub_23FD3D65C()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

uint64_t sub_23FD3D668()
{
  return swift_allocObject();
}

void sub_23FD3D674()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;

  sub_23FBFEF18(v1, v0);
}

void sub_23FD3D68C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_23FBFEF74(v2, a2);
}

uint64_t sub_23FD3D694()
{
  return sub_23FD732EC();
}

uint64_t sub_23FD3D69C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  NSObject *v31;
  NSObject *v32;
  NSObject *v33;
  os_log_type_t v34;
  _BOOL4 v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  Class isa;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  char *v54;
  NSObject *v55;
  os_log_type_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  NSObject *v72;
  void (*v73)(char *, uint64_t);
  void (*v74)(char *, uint64_t, uint64_t);
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  char v84[16];
  uint64_t v85;
  uint64_t v86;
  uint64_t v87[3];

  _s24ToolDisambiguationResultVMa(0);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v3, v4);
  sub_23FBFEFE0();
  v82 = (uint64_t *)v5;
  _s14ToolStepResultOMa(0);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v6, v7);
  sub_23FBFEFE0();
  v81 = v8;
  v9 = _s18ToolStepEvaluationVMa(0);
  v71 = *(_QWORD *)(v9 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23FD7157C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14, v16);
  sub_23FBFEFCC();
  v76 = v17;
  MEMORY[0x24BDAC7A8](v18, v19);
  v21 = (char *)&v68 - v20;
  v22 = sub_23FD72BF0();
  v75 = *(_QWORD *)(v22 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v23, v24);
  sub_23FBFEFCC();
  v79 = v25;
  MEMORY[0x24BDAC7A8](v26, v27);
  v29 = (char *)&v68 - v28;
  v30 = *(_QWORD *)(v1 + *(int *)(_s22ToolCandidateEvaluatorVMa() + 20));
  v85 = a1;
  swift_bridgeObjectRetain();
  sub_23FD31458((uint64_t (*)(char *))sub_23FC16708, (uint64_t)v84, v30);
  v32 = v31;
  sub_23FD724DC();
  v74 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v74(v21, a1, v14);
  swift_bridgeObjectRetain_n();
  v33 = sub_23FD72BE4();
  v34 = sub_23FD74F3C();
  v72 = v33;
  v70 = v34;
  v35 = os_log_type_enabled(v33, v34);
  v83 = v9;
  v80 = v14;
  v77 = a1;
  if (v35)
  {
    v36 = sub_23FBFEFF4();
    v69 = sub_23FBFEFF4();
    v87[0] = v69;
    *(_DWORD *)v36 = 136315394;
    sub_23FC16734();
    v37 = sub_23FD75344();
    v86 = sub_23FD3E0B8(v37, v38);
    sub_23FD75044();
    swift_bridgeObjectRelease();
    v73 = *(void (**)(char *, uint64_t))(v15 + 8);
    v73(v21, v80);
    *(_WORD *)(v36 + 12) = 2080;
    v39 = swift_bridgeObjectRetain();
    v40 = MEMORY[0x242678AA4](v39, v83);
    v42 = v41;
    swift_bridgeObjectRelease();
    v86 = sub_23FC9DC40(v40, v42, v87);
    sub_23FD75044();
    sub_23FC10048();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23FBF8000, v72, (os_log_type_t)v70, "Matching tool step evaluations for statementId=%s: %s", (uint8_t *)v36, 0x16u);
    swift_arrayDestroy();
    sub_23FBFEFA0();
  }
  v73 = *(void (**)(char *, uint64_t))(v15 + 8);
  v73(v21, v14);

  sub_23FC10048();
  v75 = *(_QWORD *)(v75 + 8);
  ((void (*)(char *, uint64_t))v75)(v29, v22);
  isa = v32[2].isa;
  v78 = v22;
  if (isa)
  {
    v87[0] = MEMORY[0x24BEE4AF8];
    sub_23FC9B658();
    v44 = *(unsigned __int8 *)(v71 + 80);
    v72 = v32;
    v45 = (uint64_t)v32 + ((v44 + 32) & ~v44);
    v46 = *(_QWORD *)(v71 + 72);
    v47 = v87[0];
    do
    {
      sub_23FD3DEF8(v45, (uint64_t)v13, (void (*)(_QWORD))_s18ToolStepEvaluationVMa);
      v48 = v81;
      sub_23FD3DEF8((uint64_t)&v13[*(int *)(v9 + 20)], v81, (void (*)(_QWORD))_s14ToolStepResultOMa);
      v49 = v48;
      v50 = v82;
      sub_23FD3DF34(v49, (uint64_t)v82);
      v51 = sub_23FD3E0D0(v50);
      sub_23FD3DF78((uint64_t)v50, _s24ToolDisambiguationResultVMa);
      sub_23FD3DF78((uint64_t)v13, _s18ToolStepEvaluationVMa);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23FC9B658();
        v47 = v87[0];
      }
      v52 = *(_QWORD *)(v47 + 16);
      if (v52 >= *(_QWORD *)(v47 + 24) >> 1)
      {
        sub_23FC9B658();
        v47 = v87[0];
      }
      *(_QWORD *)(v47 + 16) = v52 + 1;
      *(_QWORD *)(v47 + 8 * v52 + 32) = v51;
      v45 += v46;
      isa = (Class)((char *)isa - 1);
      v9 = v83;
    }
    while (isa);
    swift_bridgeObjectRelease();
    a1 = v77;
    v22 = v78;
    v14 = v80;
  }
  else
  {
    swift_bridgeObjectRelease();
    v47 = MEMORY[0x24BEE4AF8];
  }
  v53 = v79;
  sub_23FD724DC();
  v54 = v76;
  v74(v76, a1, v14);
  swift_bridgeObjectRetain_n();
  v55 = sub_23FD72BE4();
  v56 = sub_23FD74F3C();
  if (os_log_type_enabled(v55, v56))
  {
    v57 = v54;
    v58 = sub_23FBFEFF4();
    v87[0] = sub_23FBFEFF4();
    *(_DWORD *)v58 = 136315394;
    sub_23FC16734();
    v59 = sub_23FD75344();
    v86 = sub_23FD3E0B8(v59, v60);
    sub_23FD75044();
    swift_bridgeObjectRelease();
    v73(v57, v14);
    *(_WORD *)(v58 + 12) = 2080;
    swift_bridgeObjectRetain();
    v61 = sub_23FBFD684(&qword_256F5DDE0);
    v62 = MEMORY[0x242678AA4](v47, v61);
    v64 = v63;
    swift_bridgeObjectRelease();
    v86 = sub_23FC9DC40(v62, v64, v87);
    sub_23FD75044();
    sub_23FC10048();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23FBF8000, v55, v56, "Generated tool candidate results for statementId=%s: %s", (uint8_t *)v58, 0x16u);
    swift_arrayDestroy();
    sub_23FBFEFA0();
  }
  v73(v54, v14);

  sub_23FC10048();
  ((void (*)(uint64_t, uint64_t))v75)(v53, v22);
  sub_23FC79954();
  v66 = v65;
  swift_bridgeObjectRelease();
  return v66;
}

uint64_t sub_23FD3DD70@<X0>(char *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char v11;
  void (*v12)(uint64_t, uint64_t);
  int *v13;
  uint64_t v14;
  void (*v15)(uint64_t, char *);
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  char v19;
  uint64_t v20;
  char v21;

  type metadata accessor for FeedbackLearning.CandidateParameter(0);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = &a1[*(int *)(_s15CandidateResultVMa() + 20)];
  sub_23FD3E0C4();
  sub_23FC0C1AC();
  sub_23FD3DF78((uint64_t)v9, type metadata accessor for FeedbackLearning.CandidateParameter);
  v11 = v21;
  sub_23FD7157C();
  sub_23FC8A29C();
  v12(a3, a2);
  v13 = (int *)type metadata accessor for FeedbackLearning.CandidateEvaluation(0);
  sub_23FD3E0C4();
  v14 = a3 + v13[6];
  sub_23FD72DB8();
  sub_23FC8A29C();
  v15(v14, v10);
  v16 = a3 + v13[7];
  v17 = type metadata accessor for FeedbackLearning.CandidateSearchQuery(0);
  result = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v16, 1, 1, v17);
  v19 = *a1;
  *(_BYTE *)(a3 + v13[8]) = v11;
  *(_BYTE *)(a3 + v13[9]) = v19;
  return result;
}

uint64_t _s22ToolCandidateEvaluatorVMa()
{
  uint64_t result;

  result = qword_256F64ED0;
  if (!qword_256F64ED0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23FD3DEF8(uint64_t a1, uint64_t a2, void (*a3)(_QWORD))
{
  void (*v5)(uint64_t, uint64_t);

  a3(0);
  sub_23FC8A29C();
  v5(a2, a1);
  return a2;
}

uint64_t sub_23FD3DF34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s24ToolDisambiguationResultVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23FD3DF78(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_23FD3DFB4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FD3DFC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = sub_23FD74120();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t sub_23FD3E038()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FD3E044(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = sub_23FD74120();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_23FD3E0B8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_23FC9DC40(a1, a2, (uint64_t *)(v2 - 104));
}

uint64_t sub_23FD3E0C4()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23FD3E0D0(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t result;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  _QWORD *v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  NSObject *v69;
  os_log_type_t v70;
  uint8_t *v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(char *, uint64_t, uint64_t);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD v90[2];
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  unint64_t *v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;

  v90[0] = _s24ToolDisambiguationResultVMa(0);
  MEMORY[0x24BDAC7A8](v90[0], v2);
  sub_23FBFF180();
  v5 = v4 - v3;
  v6 = sub_23FD72BF0();
  v95 = *(_QWORD *)(v6 - 8);
  v96 = v6;
  MEMORY[0x24BDAC7A8](v6, v7);
  sub_23FBFF180();
  v92 = v9 - v8;
  v104 = sub_23FBFD684(&qword_256F5FA10);
  v10 = *(_QWORD *)(v104 - 8);
  MEMORY[0x24BDAC7A8](v104, v11);
  v100 = (char *)v90 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v13, v14);
  sub_23FC0FFF4();
  v99 = v15;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v16, v17);
  sub_23FC0FFF4();
  v103 = v18;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v19, v20);
  sub_23FC0FFF4();
  v98 = v21;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v22, v23);
  v97 = (_QWORD *)((char *)v90 - v24);
  v25 = sub_23FD72DB8();
  v26 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25, v27);
  sub_23FBFF180();
  v30 = v29 - v28;
  v31 = sub_23FD74474();
  v32 = *(_QWORD *)(v31 - 8);
  v34 = MEMORY[0x24BDAC7A8](v31, v33);
  v36 = (char *)v90 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v34, v37);
  sub_23FC0FFF4();
  v93 = v38;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v39, v40);
  v42 = (char *)v90 - v41;
  v101 = v36;
  v102 = (uint64_t)a1;
  result = *a1;
  v44 = *(_QWORD *)(*a1 + 16);
  v94 = v10;
  if (v44)
  {
    v90[1] = result;
    v91 = v5;
    v45 = result + ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80));
    v46 = *(_QWORD *)(v32 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_23FD3EC28((uint64_t)v42, v45);
      sub_23FD74468();
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v30, v25);
      (*(void (**)(char *, uint64_t))(v32 + 8))(v42, v31);
      v45 += v46;
      --v44;
    }
    while (v44);
    result = swift_bridgeObjectRelease();
    v36 = v101;
    v5 = v91;
  }
  v47 = v102;
  v48 = *(_QWORD *)(v102 + 8);
  if (*(_BYTE *)(v102 + 16) == 1)
  {
    v49 = *(_QWORD *)v102;
    if (v48)
      v50 = 67;
    else
      v50 = 66;
    LOBYTE(v106) = v50;
    return sub_23FD3E7F4(v49, (unsigned __int8 *)&v106);
  }
  v51 = v5;
  v52 = *(_QWORD *)v102;
  if (v48 >= *(_QWORD *)(*(_QWORD *)v102 + 16))
  {
    v67 = v92;
    sub_23FD724DC();
    v68 = v51;
    sub_23FD3EA94(v47, v51);
    v69 = sub_23FD72BE4();
    v70 = sub_23FD74F54();
    if (os_log_type_enabled(v69, v70))
    {
      v71 = (uint8_t *)swift_slowAlloc();
      v106 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v71 = 136315138;
      sub_23FD71474();
      sub_23FCA5434();
      v72 = sub_23FD75344();
      v105 = sub_23FC9DC40(v72, v73, (uint64_t *)&v106);
      sub_23FD75044();
      swift_bridgeObjectRelease();
      sub_23FD3EAD8(v68);
      _os_log_impl(&dword_23FBF8000, v69, v70, "Skipping generating candidate outcomes for a tool disambiguation (%s, selected candidate is not within bounds", v71, 0xCu);
      swift_arrayDestroy();
      sub_23FBFEFA0();
    }
    sub_23FD3EAD8(v51);

    (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v67, v96);
    return MEMORY[0x24BEE4AF8];
  }
  if ((v48 & 0x8000000000000000) == 0)
  {
    v53 = *(_QWORD *)(*(_QWORD *)v102 + 16);
    v92 = *(unsigned __int8 *)(v32 + 80);
    v96 = (v92 + 32) & ~v92;
    v54 = v52 + v96;
    v102 = *(_QWORD *)(v32 + 72);
    v95 = *(_QWORD *)(v32 + 16);
    ((void (*)(uint64_t, uint64_t, uint64_t))v95)(v93, v52 + v96 + v102 * v48, v31);
    v55 = MEMORY[0x24BEE4AF8];
    v106 = (_QWORD *)MEMORY[0x24BEE4AF8];
    result = swift_bridgeObjectRetain();
    if (!v53)
    {
LABEL_26:
      swift_bridgeObjectRelease();
      v75 = *(_QWORD *)(v55 + 16);
      if (v75)
      {
        v76 = (void (*)(char *, uint64_t, uint64_t))v95;
        v106 = (_QWORD *)MEMORY[0x24BEE4AF8];
        sub_23FC9B83C();
        sub_23FD3EC3C();
        v99 = v55;
        v78 = v55 + v77;
        v80 = *(_QWORD *)(v79 + 72);
        do
        {
          v81 = v103;
          sub_23FD3EBA0(v78, v103);
          v82 = *(int *)(v104 + 48);
          v83 = (uint64_t)&v100[v82];
          v76(&v100[v82], v81 + v82, v31);
          sub_23FD3EC28((uint64_t)v36, v83);
          sub_23FC6233C(v81, &qword_256F5FA10);
          if ((sub_23FD3EC30() & 1) == 0)
          {
            sub_23FD3EC10();
            sub_23FC9B83C();
            v83 = (uint64_t)v106;
          }
          v85 = *(_QWORD *)(v83 + 16);
          v84 = *(_QWORD *)(v83 + 24);
          if (v85 >= v84 >> 1)
          {
            sub_23FD3EBE8(v84);
            sub_23FC9B83C();
            v83 = (uint64_t)v106;
          }
          *(_QWORD *)(v83 + 16) = v85 + 1;
          v36 = v101;
          sub_23FD3EC28(v83 + v96 + v85 * v102, (uint64_t)v101);
          v106 = (_QWORD *)v83;
          v78 += v80;
          --v75;
        }
        while (v75);
        swift_release();
      }
      else
      {
        swift_release();
        v76 = (void (*)(char *, uint64_t, uint64_t))v95;
      }
      v86 = sub_23FD3EC00(65);
      swift_bridgeObjectRelease();
      sub_23FBFD684(&qword_256F5F8F0);
      v87 = v96;
      v88 = swift_allocObject();
      *(_OWORD *)(v88 + 16) = xmmword_23FD769D0;
      v89 = v93;
      v76((char *)(v88 + v87), v93, v31);
      sub_23FD3EC00(64);
      swift_setDeallocating();
      sub_23FD3EB14();
      v106 = (_QWORD *)v86;
      sub_23FC17390();
      v74 = (uint64_t)v106;
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v89, v31);
      return v74;
    }
    v56 = 0;
    while (v56 < *(_QWORD *)(v52 + 16))
    {
      v57 = v104;
      v58 = v103 + *(int *)(v104 + 48);
      ((void (*)(uint64_t, uint64_t, uint64_t))v95)(v58, v54, v31);
      v59 = *(int *)(v57 + 48);
      v60 = (uint64_t)v98;
      v61 = (char *)v98 + v59;
      *v98 = v56;
      (*(void (**)(char *, uint64_t, uint64_t))(v32 + 32))(v61, v58, v31);
      v62 = v97;
      sub_23FD3EB58(v60, (uint64_t)v97);
      if (*v62 == v48)
      {
        result = sub_23FC6233C((uint64_t)v62, &qword_256F5FA10);
      }
      else
      {
        sub_23FD3EB58((uint64_t)v62, v99);
        if ((sub_23FD3EC30() & 1) == 0)
        {
          sub_23FD3EC10();
          sub_23FC9BD18();
          v62 = v106;
        }
        v64 = v62[2];
        v63 = v62[3];
        if (v64 >= v63 >> 1)
        {
          sub_23FD3EBE8(v63);
          sub_23FC9BD18();
          v62 = v106;
        }
        v62[2] = v64 + 1;
        sub_23FD3EC3C();
        result = sub_23FD3EB58(v99, (uint64_t)v62 + v65 + *(_QWORD *)(v66 + 72) * v64);
        v36 = v101;
      }
      ++v56;
      v54 += v102;
      if (v53 == v56)
      {
        v55 = (uint64_t)v106;
        goto LABEL_26;
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_23FD3E7F4(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v30[2];
  char *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  int v36;

  v4 = sub_23FBFD684(&qword_256F5DDD8);
  MEMORY[0x24BDAC7A8](v4, v5);
  v7 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = _s15CandidateResultVMa();
  v33 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8, v9);
  v12 = (char *)v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10, v13);
  v32 = (uint64_t)v30 - v14;
  v15 = sub_23FD74474();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15, v17);
  v19 = (char *)v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(_QWORD *)(a1 + 16);
  if (!v20)
    return MEMORY[0x24BEE4AF8];
  v36 = *a2;
  v21 = a1 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
  v22 = *(_QWORD *)(v16 + 72);
  v34 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v35 = v22;
  v30[1] = a1;
  swift_bridgeObjectRetain();
  v23 = MEMORY[0x24BEE4AF8];
  v31 = v12;
  do
  {
    v34(v19, v21, v15);
    sub_23FD74468();
    *v7 = v36;
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v7, 0, 1, v8);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v7, 1, v8) == 1)
    {
      sub_23FC6233C((uint64_t)v7, &qword_256F5DDD8);
    }
    else
    {
      v24 = v32;
      sub_23FC12E88((uint64_t)v7, v32);
      sub_23FC12E88(v24, (uint64_t)v12);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23FC995F4();
        v23 = v27;
      }
      v25 = *(_QWORD *)(v23 + 16);
      if (v25 >= *(_QWORD *)(v23 + 24) >> 1)
      {
        sub_23FC995F4();
        v23 = v28;
      }
      *(_QWORD *)(v23 + 16) = v25 + 1;
      v26 = v23
          + ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80))
          + *(_QWORD *)(v33 + 72) * v25;
      v12 = v31;
      sub_23FC12E88((uint64_t)v31, v26);
    }
    v21 += v35;
    --v20;
  }
  while (v20);
  swift_bridgeObjectRelease();
  return v23;
}

uint64_t sub_23FD3EA94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s24ToolDisambiguationResultVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23FD3EAD8(uint64_t a1)
{
  uint64_t v2;

  v2 = _s24ToolDisambiguationResultVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23FD3EB14()
{
  sub_23FD74474();
  swift_arrayDestroy();
  return swift_deallocClassInstance();
}

uint64_t sub_23FD3EB58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23FBFD684(&qword_256F5FA10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23FD3EBA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23FBFD684(&qword_256F5FA10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

BOOL sub_23FD3EBE8@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t sub_23FD3EC00@<X0>(char a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v2 - 88) = a1;
  return sub_23FD3E7F4(v1, (unsigned __int8 *)(v2 - 88));
}

uint64_t sub_23FD3EC10()
{
  return 0;
}

uint64_t sub_23FD3EC28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t sub_23FD3EC30()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_23FD3EC50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;

  v4 = v3;
  v32 = a3;
  v6 = sub_23FC5F58C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v29 = v9;
  v31 = (uint64_t)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FBFD684(&qword_254346A28);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v10, v11);
  sub_23FBFEFE0();
  v30 = v12;
  sub_23FBFD684(qword_256F5EC20);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v13, v14);
  sub_23FBFF180();
  v17 = v16 - v15;
  swift_bridgeObjectRelease();
  swift_defaultActor_initialize();
  v18 = (_QWORD *)(v3 + OBJC_IVAR____TtC23IntelligenceFlowRuntime20ShortcutsToolContext_textToolId);
  *v18 = 0xD00000000000001BLL;
  v18[1] = 0x800000023FD86500;
  sub_23FD46748(v3 + OBJC_IVAR____TtC23IntelligenceFlowRuntime20ShortcutsToolContext_toolbox);
  sub_23FD740E4();
  sub_23FBFDE40(&v33, v34);
  sub_23FD7304C();
  v19 = sub_23FC75FD8();
  sub_23FC103A0(v17, 0, v20, v19);
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)&v33);
  sub_23FC0EE04(v17, v3 + OBJC_IVAR____TtC23IntelligenceFlowRuntime20ShortcutsToolContext_textTool, qword_256F5EC20);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC23IntelligenceFlowRuntime20ShortcutsToolContext_clientActions) = sub_23FD740F0();
  v21 = sub_23FD74DEC();
  v22 = v30;
  sub_23FC103A0(v30, 1, v23, v21);
  sub_23FC584E0(v32, (uint64_t)&v33);
  v24 = v31;
  sub_23FD46748(v31);
  v25 = (*(unsigned __int8 *)(v7 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 16) = 0;
  *(_QWORD *)(v26 + 24) = 0;
  sub_23FBFDE28(&v33, v26 + 32);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(v26 + v25, v24, v6);
  v27 = sub_23FD59EA4(v22, (uint64_t)&unk_256F654A8, v26);
  sub_23FD204F4();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC23IntelligenceFlowRuntime20ShortcutsToolContext_toolExecutionSessionSetupTask) = v27;
  return v4;
}

uint64_t sub_23FD3EEEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[3] = a4;
  v5[4] = a5;
  v5[2] = a1;
  return swift_task_switch();
}

uint64_t sub_23FD3EF08()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t (*v3)(void);

  sub_23FC584E0(v0[3], v0[2]);
  v1 = (_QWORD *)sub_23FC09058();
  v0[5] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_23FD3EF5C;
  return sub_23FCCC3F0(v0[4], v3);
}

uint64_t sub_23FD3EF5C()
{
  uint64_t (*v0)(void);

  sub_23FC59C00();
  v0 = (uint64_t (*)(void))sub_23FC5C528();
  return sub_23FC5AADC(v0);
}

uint64_t sub_23FD3EF90(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[3] = a1;
  v2[4] = v1;
  v3 = sub_23FD72BF0();
  v2[5] = v3;
  v2[6] = *(_QWORD *)(v3 - 8);
  v2[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23FD3EFF0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 24);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v2;
  *v2 = v0;
  v2[1] = sub_23FD3F078;
  return sub_23FD72464();
}

uint64_t sub_23FD3F078()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  sub_23FC5A9A8();
  return sub_23FC5A63C();
}

uint64_t sub_23FD3F0D8()
{
  uint64_t v0;

  swift_task_dealloc();
  return sub_23FC5AADC(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FD3F100()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint8_t *v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;

  v1 = *(void **)(v0 + 80);
  swift_task_dealloc();
  sub_23FD724D0();
  v2 = v1;
  v3 = v1;
  v4 = sub_23FD72BE4();
  v5 = sub_23FD74F54();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 80);
    v7 = (uint8_t *)sub_23FBFEFF4();
    v8 = (_QWORD *)sub_23FBFEFF4();
    *(_DWORD *)v7 = 138412290;
    v9 = v6;
    v10 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 16) = v10;
    sub_23FD75044();
    *v8 = v10;
    sub_23FC0917C();
    sub_23FC0917C();
    _os_log_impl(&dword_23FBF8000, v4, v5, "TypedValueExecutionSession: Prewarm of search tool failed with: %@", v7, 0xCu);
    sub_23FBFD684(&qword_254346A30);
    sub_23FBFF10C();
    sub_23FBFEFA0();
  }
  sub_23FC0917C();
  sub_23FC0917C();
  sub_23FC0917C();

  sub_23FC090C8(*(_QWORD *)(v0 + 48));
  swift_task_dealloc();
  return sub_23FC090D8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FD3F270(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_23FD3F288()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  sub_23FBFD684(&qword_254346E20);
  *v1 = v0;
  v1[1] = sub_23FD3F30C;
  return sub_23FD74E7C();
}

uint64_t sub_23FD3F30C()
{
  uint64_t v0;

  sub_23FC59C00();
  return sub_23FC5AADC(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FD3F340(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v4[11] = a3;
  v4[12] = v3;
  v4[9] = a1;
  v4[10] = a2;
  v5 = sub_23FD72BF0();
  v4[13] = v5;
  v4[14] = *(_QWORD *)(v5 - 8);
  v4[15] = sub_23FC0901C();
  return sub_23FC0907C();
}

uint64_t sub_23FD3F390()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23FD740E4();
  sub_23FBFDE40((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
  sub_23FD7304C();
  v1 = *(_QWORD *)(v0 + 72);
  v2 = sub_23FC75FD8();
  sub_23FC103A0(v1, 0, v3, v2);
  sub_23FD204F4();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23FD3F640(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  v6 = sub_23FD747C8();
  v5[7] = v6;
  v5[8] = *(_QWORD *)(v6 - 8);
  v5[9] = sub_23FC0901C();
  v7 = sub_23FD74960();
  v5[10] = v7;
  v5[11] = *(_QWORD *)(v7 - 8);
  v5[12] = sub_23FC0901C();
  sub_23FBFD684(&qword_256F5EBA0);
  v5[13] = swift_task_alloc();
  v5[14] = swift_task_alloc();
  return sub_23FC5A63C();
}

uint64_t sub_23FD3F6E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(void);

  sub_23FC5ACE0();
  v1 = sub_23FD743FC();
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 88);
    v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v5 = *(_QWORD *)(v3 + 72);
    v6 = *(void (**)(uint64_t))(v3 + 16);
    swift_bridgeObjectRetain();
    while (1)
    {
      v8 = *(_QWORD *)(v0 + 32);
      v7 = *(_QWORD *)(v0 + 40);
      v9 = sub_23FBFF1EC();
      v6(v9);
      if (sub_23FD74948() == v8 && v10 == v7)
        break;
      v12 = sub_23FD75380();
      sub_23FC1002C();
      if ((v12 & 1) != 0)
        goto LABEL_12;
      (*(void (**)(_QWORD, _QWORD))(v3 + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
      v4 += v5;
      if (!--v2)
      {
        sub_23FC15A24();
        goto LABEL_10;
      }
    }
    sub_23FC15A24();
LABEL_12:
    swift_bridgeObjectRelease();
    v14 = sub_23FBFF1EC();
    v15(v14);
    v13 = 0;
  }
  else
  {
LABEL_10:
    v13 = 1;
  }
  v16 = *(_QWORD *)(v0 + 104);
  v17 = *(_QWORD *)(v0 + 80);
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(*(_QWORD *)(v0 + 112), v13, 1, v17);
  sub_23FC15A24();
  v18 = sub_23FBFF1EC();
  sub_23FC0F3AC(v18, v19, v20);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v16, 1, v17) == 1)
  {
    v21 = *(_QWORD *)(v0 + 112);
    v23 = *(_QWORD *)(v0 + 32);
    v22 = *(_QWORD *)(v0 + 40);
    sub_23FBFEF74(*(_QWORD *)(v0 + 104), &qword_256F5EBA0);
    v24 = sub_23FD74450();
    v26 = v25;
    sub_23FD44E0C();
    swift_allocError();
    *(_QWORD *)v27 = v24;
    *(_QWORD *)(v27 + 8) = v26;
    *(_QWORD *)(v27 + 16) = v23;
    *(_QWORD *)(v27 + 24) = v22;
    *(_BYTE *)(v27 + 32) = 0;
    swift_bridgeObjectRetain();
    swift_willThrow();
    sub_23FBFEF74(v21, &qword_256F5EBA0);
    swift_task_dealloc();
    sub_23FC090C0();
    sub_23FC5A574();
    sub_23FC5AB04();
    return sub_23FC09088(*(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    v28 = *(_QWORD *)(v0 + 104);
    v29 = *(_QWORD *)(v0 + 88);
    v30 = *(_QWORD *)(v0 + 48);
    MEMORY[0x242678708]();
    sub_23FBFF204(v28, *(uint64_t (**)(uint64_t, uint64_t))(v29 + 8));
    v31 = sub_23FD747BC();
    sub_23FD465D8();
    v32 = swift_task_alloc();
    *(_QWORD *)(v32 + 16) = v30;
    sub_23FC8E188((uint64_t)sub_23FD44E48, v32, v31);
    v35 = v34;
    v36 = *(_QWORD *)(v0 + 16);
    sub_23FC15A24();
    sub_23FC5AB04();
    sub_23FD4BD04(v35, v36);
    v37 = swift_bridgeObjectRelease();
    sub_23FD3D5FC(v37, &qword_256F5EBA0);
    sub_23FC090D0();
    sub_23FC5A574();
    sub_23FC5B2D4();
    sub_23FC5B2F4();
    v38 = (uint64_t (*)(void))sub_23FC5C528();
    return sub_23FC09088(v38);
  }
}

uint64_t sub_23FD3F980@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;

  v33 = a2;
  v35 = (char *)a3;
  v34 = sub_23FD74828();
  v4 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34, v5);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23FD748B8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23FD748C4();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13, v15);
  v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, a1, v13);
  if ((*(unsigned int (**)(char *, uint64_t))(v14 + 88))(v17, v13) == *MEMORY[0x24BEBA118])
  {
    (*(void (**)(char *, uint64_t))(v14 + 96))(v17, v13);
    v18 = &v17[*(int *)(sub_23FBFD684(&qword_256F652F0) + 48)];
    v19 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v19(v12, v17, v8);
    v20 = v34;
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v18, v34);
    v21 = v36;
    v22 = sub_23FD474A0(v33);
    if (v21)
    {
      (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v20);
      return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    }
    else
    {
      v25 = v22;
      v26 = v20;
      v27 = *(_QWORD *)(v22 + 16);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v26);
      if (v27)
      {
        v28 = (uint64_t)v35;
        v19(v35, v12, v8);
        v29 = sub_23FBFD684(&qword_256F5F578);
        *(_QWORD *)(v28 + *(int *)(v29 + 28)) = v25;
        v30 = v28;
        v31 = 0;
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
        swift_bridgeObjectRelease();
        v29 = sub_23FBFD684(&qword_256F5F578);
        v30 = (uint64_t)v35;
        v31 = 1;
      }
      return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v30, v31, 1, v29);
    }
  }
  else
  {
    v24 = sub_23FBFD684(&qword_256F5F578);
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v35, 1, 1, v24);
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  }
}

void sub_23FD3FC00()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_23FC5F58C();
  sub_23FBFF0E4(v1);
  swift_bridgeObjectRelease();
  sub_23FBFEF74(v0 + OBJC_IVAR____TtC23IntelligenceFlowRuntime20ShortcutsToolContext_textTool, qword_256F5EC20);
  swift_bridgeObjectRelease();
  swift_release();
  swift_defaultActor_destroy();
  sub_23FBFF0A0();
}

uint64_t sub_23FD3FC80()
{
  sub_23FD3FC00();
  return swift_defaultActor_deallocate();
}

uint64_t sub_23FD3FC98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23FC586E4;
  return sub_23FD3F340(a1, a2, a3);
}

uint64_t sub_23FD3FD04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;

  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_23FC586E4;
  return sub_23FD3F640(a1, a2, a3, a4, a5);
}

uint64_t sub_23FD3FD88(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23FC586E4;
  return sub_23FD3F270(a1);
}

uint64_t sub_23FD3FDDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(void))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;

  sub_23FC75AD4();
  v12 = v11;
  v14 = v13;
  v16 = v15;
  v17 = sub_23FC09058();
  v18 = (_QWORD *)sub_23FC0922C(v17);
  *v18 = v10;
  v18[1] = sub_23FC57F38;
  return sub_23FC09100(v16, v9, v14, v12, a9);
}

uint64_t sub_23FD3FE40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(void))
{
  uint64_t v9;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v9 + 16) = v14;
  *v14 = v9;
  v14[1] = sub_23FC586E4;
  return sub_23FD3FDDC(a1, a2, v15, a3, a4, v16, v17, v18, a9);
}

uint64_t sub_23FD3FEB8()
{
  return type metadata accessor for ShortcutsToolContext(0);
}

uint64_t type metadata accessor for ShortcutsToolContext(uint64_t a1)
{
  return sub_23FC04944(a1, (uint64_t *)&unk_256F64F40);
}

void sub_23FD3FED4()
{
  unint64_t v0;
  unint64_t v1;

  sub_23FD74120();
  if (v0 <= 0x3F)
  {
    sub_23FD27F24(319, qword_256F64F68, (void (*)(uint64_t))MEMORY[0x24BEB8FE0]);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t sub_23FD3FF98()
{
  return swift_allocateGenericValueMetadata();
}

void sub_23FD3FFA0()
{
  unint64_t v0;
  unint64_t v1;

  sub_23FD75038();
  if (v0 <= 0x3F)
  {
    sub_23FD27F24(319, qword_256F650A8, (void (*)(uint64_t))type metadata accessor for TypedValueUndoContext);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *sub_23FD40038(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  size_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  uint64_t v14;
  int v15;
  uint64_t v18;
  uint64_t v19;
  void *v21;
  const void *v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v30;
  unsigned int v31;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  if (*(_DWORD *)(v6 + 84))
    v7 = *(_QWORD *)(v6 + 64);
  else
    v7 = *(_QWORD *)(v6 + 64) + 1;
  v8 = sub_23FD71474();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = v10 & 0xF8 | 7;
  v12 = *(_QWORD *)(v9 + 64) + 7;
  v13 = v7 + v11;
  v14 = *(_DWORD *)(v6 + 80) & 0xF8 | v11;
  v15 = (*(_DWORD *)(v6 + 80) | v10) & 0x100000;
  if ((_DWORD)v14 == 7
    && v15 == 0
    && (((v12 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 + ((v7 + v11) & ~v11) <= 0x18)
  {
    v30 = v8;
    v19 = ~v11;
    v31 = *(_DWORD *)(v9 + 84);
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v5))
    {
      memcpy(a1, a2, v7);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v5);
    }
    v21 = (void *)(((unint64_t)a1 + v13) & v19);
    v22 = (const void *)(((unint64_t)a2 + v13) & v19);
    if (v31 < 0x7FFFFFFF)
    {
      v24 = *(_QWORD *)((((((unint64_t)v22 + v12) & 0xFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8) + 8);
      if (v24 >= 0xFFFFFFFF)
        LODWORD(v24) = -1;
      v23 = v30;
      if ((_DWORD)v24 != -1)
        goto LABEL_18;
    }
    else
    {
      v23 = v30;
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v22, v31, v30))
      {
LABEL_18:
        memcpy(v21, v22, (((v12 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16);
        return a1;
      }
    }
    (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v21, v22, v23);
    v25 = (_QWORD *)(((unint64_t)v21 + v12) & 0xFFFFFFFFFFFFFFF8);
    v26 = (_QWORD *)(((unint64_t)v22 + v12) & 0xFFFFFFFFFFFFFFF8);
    *v25 = *v26;
    v25[1] = v26[1];
    v27 = (_QWORD *)(((unint64_t)v25 + 23) & 0xFFFFFFFFFFFFFFF8);
    v28 = (_QWORD *)(((unint64_t)v26 + 23) & 0xFFFFFFFFFFFFFFF8);
    *v27 = *v28;
    v27[1] = v28[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return a1;
  }
  v18 = *a2;
  *a1 = *a2;
  a1 = (uint64_t *)(v18 + ((v14 + 16) & ~v14));
  swift_retain();
  return a1;
}

uint64_t sub_23FD4024C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  unint64_t v15;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, 1, v3);
  v5 = *(_QWORD *)(v3 - 8);
  if (!v4)
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v3);
  v6 = *(_DWORD *)(v5 + 84);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = sub_23FD71474();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  v12 = v7 + a1;
  if (!v6)
    ++v12;
  v11 = *(_DWORD *)(v9 + 80) & 0xF8 | 7;
  v13 = (v12 + v11) & ~v11;
  if (v10 >= 0x7FFFFFFF)
  {
    result = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v13, v10, v8);
    if ((_DWORD)result)
      return result;
LABEL_11:
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v13, v8);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  v15 = *(_QWORD *)(((((*(_QWORD *)(v9 + 64) + v13 + 7) & 0xFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8) + 8);
  if (v15 >= 0xFFFFFFFF)
    LODWORD(v15) = -1;
  result = (v15 + 1);
  if ((_DWORD)v15 == -1)
    goto LABEL_11;
  return result;
}

void *sub_23FD40368(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;
  size_t v9;
  size_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  size_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v5);
  v7 = *(_QWORD *)(v5 - 8);
  if (v6)
  {
    v8 = *(_DWORD *)(v7 + 84);
    v9 = *(_QWORD *)(v7 + 64);
    if (v8)
      v10 = v9;
    else
      v10 = v9 + 1;
    memcpy(a1, a2, v10);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v5);
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v5);
    v8 = *(_DWORD *)(v7 + 84);
    v9 = *(_QWORD *)(v7 + 64);
  }
  if (!v8)
    ++v9;
  v11 = sub_23FD71474();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int *)(v12 + 84);
  v14 = *(_DWORD *)(v12 + 80) & 0xF8 | 7;
  v15 = v9 + v14;
  v16 = (void *)(((unint64_t)a1 + v9 + v14) & ~v14);
  v17 = (const void *)(((unint64_t)a2 + v15) & ~v14);
  v18 = *(_QWORD *)(v12 + 64) + 7;
  if (v13 < 0x7FFFFFFF)
  {
    v19 = *(_QWORD *)((((((unint64_t)v17 + v18) & 0xFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8) + 8);
    if (v19 >= 0xFFFFFFFF)
      LODWORD(v19) = -1;
    if ((_DWORD)v19 != -1)
      goto LABEL_11;
LABEL_15:
    (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(v16, v17, v11);
    v20 = (_QWORD *)(((unint64_t)v16 + v18) & 0xFFFFFFFFFFFFFFF8);
    v21 = (_QWORD *)(((unint64_t)v17 + v18) & 0xFFFFFFFFFFFFFFF8);
    *v20 = *v21;
    v20[1] = v21[1];
    v22 = (_QWORD *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
    v23 = (_QWORD *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
    *v22 = *v23;
    v22[1] = v23[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return a1;
  }
  if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v17, v13, v11))
    goto LABEL_15;
LABEL_11:
  memcpy(v16, v17, (((v18 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16);
  return a1;
}

void *sub_23FD4050C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  int v19;
  int v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  unint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  _QWORD *v28;
  _QWORD *v29;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a1, 1, v5);
  v7 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v5);
  v8 = *(_QWORD *)(v5 - 8);
  if (v6)
  {
    if (!v7)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(a1, a2, v5);
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v5);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v7)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 24))(a1, a2, v5);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(a1, v5);
  }
  if (*(_DWORD *)(v8 + 84))
    v9 = *(_QWORD *)(v8 + 64);
  else
    v9 = *(_QWORD *)(v8 + 64) + 1;
  memcpy(a1, a2, v9);
LABEL_10:
  if (*(_DWORD *)(v8 + 84))
    v10 = *(_QWORD *)(v8 + 64);
  else
    v10 = *(_QWORD *)(v8 + 64) + 1;
  v11 = sub_23FD71474();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int *)(v12 + 84);
  v14 = *(_DWORD *)(v12 + 80) & 0xF8 | 7;
  v15 = v10 + v14;
  v16 = (void *)(((unint64_t)a1 + v10 + v14) & ~v14);
  v17 = (const void *)(((unint64_t)a2 + v15) & ~v14);
  v18 = *(_QWORD *)(v12 + 64) + 7;
  if (v13 >= 0x7FFFFFFF)
  {
    v19 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v16, *(unsigned int *)(v12 + 84), v11);
    v20 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v17, v13, v11);
    if (v19)
      goto LABEL_15;
LABEL_20:
    v26 = (_QWORD *)(((unint64_t)v16 + v18) & 0xFFFFFFFFFFFFFFF8);
    if (!v20)
    {
      (*(void (**)(void *, const void *, uint64_t))(v12 + 24))(v16, v17, v11);
      v27 = (_QWORD *)(((unint64_t)v17 + v18) & 0xFFFFFFFFFFFFFFF8);
      *v26 = *v27;
      v26[1] = v27[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v28 = (_QWORD *)(((unint64_t)v26 + 23) & 0xFFFFFFFFFFFFFFF8);
      v29 = (_QWORD *)(((unint64_t)v27 + 23) & 0xFFFFFFFFFFFFFFF8);
      *v28 = *v29;
      v28[1] = v29[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v16, v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  v25 = *(_QWORD *)((((((unint64_t)v17 + v18) & 0xFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8) + 8);
  if (v25 >= 0xFFFFFFFF)
    LODWORD(v25) = -1;
  v20 = v25 + 1;
  if (*(_QWORD *)((((((unint64_t)v16 + v18) & 0xFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8) + 8) >= 0xFFFFFFFFuLL)
    goto LABEL_20;
LABEL_15:
  if (v20)
  {
LABEL_22:
    memcpy(v16, v17, (((v18 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16);
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(v16, v17, v11);
  v21 = (_QWORD *)(((unint64_t)v16 + v18) & 0xFFFFFFFFFFFFFFF8);
  v22 = (_QWORD *)(((unint64_t)v17 + v18) & 0xFFFFFFFFFFFFFFF8);
  *v21 = *v22;
  v21[1] = v22[1];
  v23 = (_QWORD *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
  v24 = (_QWORD *)(((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_23FD407DC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;
  size_t v9;
  size_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  size_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  unint64_t v19;
  _OWORD *v20;
  _OWORD *v21;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v5);
  v7 = *(_QWORD *)(v5 - 8);
  if (v6)
  {
    v8 = *(_DWORD *)(v7 + 84);
    v9 = *(_QWORD *)(v7 + 64);
    if (v8)
      v10 = v9;
    else
      v10 = v9 + 1;
    memcpy(a1, a2, v10);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v5);
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v5);
    v8 = *(_DWORD *)(v7 + 84);
    v9 = *(_QWORD *)(v7 + 64);
  }
  if (!v8)
    ++v9;
  v11 = sub_23FD71474();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int *)(v12 + 84);
  v14 = *(_DWORD *)(v12 + 80) & 0xF8 | 7;
  v15 = v9 + v14;
  v16 = (void *)(((unint64_t)a1 + v9 + v14) & ~v14);
  v17 = (const void *)(((unint64_t)a2 + v15) & ~v14);
  v18 = *(_QWORD *)(v12 + 64) + 7;
  if (v13 < 0x7FFFFFFF)
  {
    v19 = *(_QWORD *)((((((unint64_t)v17 + v18) & 0xFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8) + 8);
    if (v19 >= 0xFFFFFFFF)
      LODWORD(v19) = -1;
    if ((_DWORD)v19 != -1)
      goto LABEL_11;
LABEL_15:
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v16, v17, v11);
    v20 = (_OWORD *)(((unint64_t)v16 + v18) & 0xFFFFFFFFFFFFFFF8);
    v21 = (_OWORD *)(((unint64_t)v17 + v18) & 0xFFFFFFFFFFFFFFF8);
    *v20 = *v21;
    *(_OWORD *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFF8);
    return a1;
  }
  if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v17, v13, v11))
    goto LABEL_15;
LABEL_11:
  memcpy(v16, v17, (((v18 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16);
  return a1;
}

void *sub_23FD4095C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  int v19;
  int v20;
  _OWORD *v21;
  _OWORD *v22;
  unint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a1, 1, v5);
  v7 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v5);
  v8 = *(_QWORD *)(v5 - 8);
  if (v6)
  {
    if (!v7)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(a1, a2, v5);
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v5);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v7)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 40))(a1, a2, v5);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(a1, v5);
  }
  if (*(_DWORD *)(v8 + 84))
    v9 = *(_QWORD *)(v8 + 64);
  else
    v9 = *(_QWORD *)(v8 + 64) + 1;
  memcpy(a1, a2, v9);
LABEL_10:
  if (*(_DWORD *)(v8 + 84))
    v10 = *(_QWORD *)(v8 + 64);
  else
    v10 = *(_QWORD *)(v8 + 64) + 1;
  v11 = sub_23FD71474();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int *)(v12 + 84);
  v14 = *(_DWORD *)(v12 + 80) & 0xF8 | 7;
  v15 = v10 + v14;
  v16 = (void *)(((unint64_t)a1 + v10 + v14) & ~v14);
  v17 = (const void *)(((unint64_t)a2 + v15) & ~v14);
  v18 = *(_QWORD *)(v12 + 64) + 7;
  if (v13 >= 0x7FFFFFFF)
  {
    v19 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v16, *(unsigned int *)(v12 + 84), v11);
    v20 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v17, v13, v11);
    if (v19)
      goto LABEL_15;
LABEL_20:
    v24 = (_QWORD *)(((unint64_t)v16 + v18) & 0xFFFFFFFFFFFFFFF8);
    if (!v20)
    {
      (*(void (**)(void *, const void *, uint64_t))(v12 + 40))(v16, v17, v11);
      v25 = (_QWORD *)(((unint64_t)v17 + v18) & 0xFFFFFFFFFFFFFFF8);
      *v24 = *v25;
      v24[1] = v25[1];
      swift_bridgeObjectRelease();
      v26 = (_QWORD *)(((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFFFF8);
      v27 = (_QWORD *)(((unint64_t)v25 + 23) & 0xFFFFFFFFFFFFFFF8);
      *v26 = *v27;
      v26[1] = v27[1];
      swift_bridgeObjectRelease();
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v16, v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  v23 = *(_QWORD *)((((((unint64_t)v17 + v18) & 0xFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8) + 8);
  if (v23 >= 0xFFFFFFFF)
    LODWORD(v23) = -1;
  v20 = v23 + 1;
  if (*(_QWORD *)((((((unint64_t)v16 + v18) & 0xFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8) + 8) >= 0xFFFFFFFFuLL)
    goto LABEL_20;
LABEL_15:
  if (v20)
  {
LABEL_22:
    memcpy(v16, v17, (((v18 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16);
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v16, v17, v11);
  v21 = (_OWORD *)(((unint64_t)v16 + v18) & 0xFFFFFFFFFFFFFFF8);
  v22 = (_OWORD *)(((unint64_t)v17 + v18) & 0xFFFFFFFFFFFFFFF8);
  *v21 = *v22;
  *(_OWORD *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_23FD40BF8(int *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  int v22;
  unsigned int v24;
  int v25;
  int v26;
  uint64_t v27;
  unint64_t v28;
  unsigned int v29;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  if ((_DWORD)v7)
    v8 = v7 - 1;
  else
    v8 = 0;
  v9 = sub_23FD71474();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int *)(v10 + 84);
  if (v11 <= 0x7FFFFFFF)
    v12 = 0x7FFFFFFF;
  else
    v12 = *(_DWORD *)(v10 + 84);
  v13 = v12 - 1;
  if (v12 - 1 <= v8)
    v14 = v8;
  else
    v14 = v12 - 1;
  if ((_DWORD)v7)
    v15 = *(_QWORD *)(v6 + 64);
  else
    v15 = *(_QWORD *)(v6 + 64) + 1;
  if (!a2)
    return 0;
  v16 = v9;
  v17 = *(_DWORD *)(v10 + 80) & 0xF8 | 7;
  v18 = *(_QWORD *)(v10 + 64) + 7;
  v19 = v15 + v17;
  if (a2 <= v14)
    goto LABEL_29;
  v20 = (((v18 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + (v19 & ~v17) + 16;
  v21 = v20 & 0xFFFFFFF8;
  if ((v20 & 0xFFFFFFF8) == 0)
  {
    v24 = a2 - v14 + 1;
    if (HIWORD(v24))
    {
      v22 = *(int *)((char *)a1 + v20);
      if (!v22)
        goto LABEL_29;
      goto LABEL_24;
    }
    if (v24 > 0xFF)
    {
      v22 = *(unsigned __int16 *)((char *)a1 + v20);
      if (!v22)
        goto LABEL_29;
      goto LABEL_24;
    }
    if (v24 < 2)
    {
LABEL_29:
      if (v8 >= v13)
      {
        v27 = (uint64_t)a1;
        v11 = v7;
        v16 = v5;
      }
      else
      {
        v27 = ((unint64_t)a1 + v19) & ~v17;
        if (v11 < 0x7FFFFFFF)
        {
          v28 = *(_QWORD *)(((((v18 + v27) & 0xFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8) + 8);
          if (v28 >= 0xFFFFFFFF)
            LODWORD(v28) = -1;
          v29 = v28 + 1;
          goto LABEL_36;
        }
      }
      v29 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v27, v11, v16);
LABEL_36:
      if (v29 >= 2)
        return v29 - 1;
      else
        return 0;
    }
  }
  v22 = *((unsigned __int8 *)a1 + v20);
  if (!v22)
    goto LABEL_29;
LABEL_24:
  v25 = v22 - 1;
  if (v21)
  {
    v25 = 0;
    v26 = *a1;
  }
  else
  {
    v26 = 0;
  }
  return v14 + (v26 | v25) + 1;
}

void sub_23FD40D8C(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  int v12;
  unsigned int v13;
  uint64_t v14;
  size_t v15;
  unsigned int v16;
  unsigned int v17;
  int v18;
  unsigned int v19;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8)
    v9 = v8 - 1;
  else
    v9 = 0;
  v10 = 0;
  v11 = *(_QWORD *)(sub_23FD71474() - 8);
  if (*(_DWORD *)(v11 + 84) <= 0x7FFFFFFFu)
    v12 = 0x7FFFFFFF;
  else
    v12 = *(_DWORD *)(v11 + 84);
  if (v12 - 1 <= v9)
    v13 = v9;
  else
    v13 = v12 - 1;
  if (v8)
    v14 = *(_QWORD *)(v7 + 64);
  else
    v14 = *(_QWORD *)(v7 + 64) + 1;
  v15 = ((((*(_QWORD *)(v11 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
      + 16
      + ((v14 + (*(_DWORD *)(v11 + 80) & 0xF8 | 7)) & ~(*(_DWORD *)(v11 + 80) & 0xF8 | 7));
  if (a3 > v13)
  {
    if ((_DWORD)v15)
    {
      v10 = 1u;
    }
    else
    {
      v16 = a3 - v13 + 1;
      v17 = HIWORD(v16);
      if (v16 >= 0x100)
        v18 = 2;
      else
        v18 = v16 > 1;
      if (v17)
        v10 = 4;
      else
        v10 = v18;
    }
  }
  if (a2 > v13)
  {
    if ((_DWORD)v15)
    {
      v19 = ~v13 + a2;
      bzero(a1, v15);
      *a1 = v19;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X16 }
}

void sub_23FD40ED4(size_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, size_t a4@<X8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  unsigned int v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int v24;
  _DWORD *v25;
  uint64_t v26;
  unsigned int v27;
  int v28;
  uint64_t v29;
  _QWORD *v30;

  v19[v23] = 0;
  if (v20)
  {
    if (v24 >= v16)
    {
      if (v24 >= v20)
      {
        v26 = v20 + 1;
        v29 = (uint64_t)v19;
        a2 = v22;
        a3 = v21;
LABEL_14:
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v29, v26, a2, a3);
        return;
      }
      if ((_DWORD)a1)
      {
        if (a1 <= 3)
          v28 = a1;
        else
          v28 = 4;
        bzero(v19, a1);
        __asm { BR              X10 }
      }
    }
    else
    {
      v25 = (_DWORD *)((unint64_t)&v19[v17] & v18);
      if (v16 < v20 || (v26 = v20 + 1, v26 > v14))
      {
        if ((_DWORD)a4)
        {
          v27 = v20 - v14;
          bzero(v25, a4);
          *v25 = v27;
        }
        return;
      }
      if (v20 == -1)
        return;
      if (a2 >= 0x7FFFFFFF)
      {
        v29 = (uint64_t)v25;
        goto LABEL_14;
      }
      v30 = (_QWORD *)(((((unint64_t)v25 + v15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8);
      if ((v26 & 0x80000000) != 0)
      {
        *v30 = v20 - 0x7FFFFFFF;
        v30[1] = 0;
      }
      else
      {
        v30[1] = v20;
      }
    }
  }
}

uint64_t type metadata accessor for TypedValueExecutionResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23FC7493C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TypedValueExecutionResult);
}

uint64_t type metadata accessor for TypedValueUndoContext(uint64_t a1)
{
  return sub_23FC04944(a1, qword_256F65108);
}

uint64_t *sub_23FD41068(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23FD71474();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (uint64_t *)((char *)a1 + v9);
    v14 = (uint64_t *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_23FD41114(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FD4116C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;

  v6 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_23FD411EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  v6 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = *(int *)(a3 + 24);
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23FD41294(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_23FD412F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_23FD71474();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = *(int *)(a3 + 24);
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23FD41380()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FD4138C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23FD71474();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    sub_23FC06098(a1, a2, v6);
  }
  else
  {
    sub_23FC1020C(*(_QWORD *)(a1 + *(int *)(a3 + 24) + 8));
    sub_23FC09258();
  }
}

uint64_t sub_23FD413EC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FD413F8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;

  v8 = sub_23FD71474();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    sub_23FC0608C(a1, a2, a2, v8);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
    sub_23FC09258();
  }
}

uint64_t sub_23FD41460()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23FD71474();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void type metadata accessor for ShortcutsExecutionSession()
{
  sub_23FC7A748();
}

_UNKNOWN **sub_23FD414F0()
{
  return &off_2510154C0;
}

uint64_t sub_23FD414FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  v6 = sub_23FD46454();
  v5[7] = v6;
  v5[8] = *(_QWORD *)(v6 - 8);
  v5[9] = sub_23FC0901C();
  sub_23FC5A9A8();
  return sub_23FC0907C();
}

uint64_t sub_23FD41548(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(void))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  sub_23FC5ACE0();
  v11 = *(_QWORD *)(v9 + 64);
  v10 = *(_QWORD *)(v9 + 72);
  v12 = *(_QWORD *)(v9 + 56);
  v13 = *(_QWORD *)(v9 + 24);
  sub_23FBFDE40(*(_QWORD **)(v9 + 48), *(_QWORD *)(*(_QWORD *)(v9 + 48) + 24));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v10, v13, v12);
  sub_23FD744B0();
  *(_QWORD *)(v9 + 80) = v14;
  *(_QWORD *)(v9 + 88) = sub_23FD744BC();
  sub_23FC10454(v10, *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
  v15 = (_QWORD *)sub_23FC09058();
  *(_QWORD *)(v9 + 96) = v15;
  *v15 = v9;
  v15[1] = sub_23FD41604;
  return sub_23FD462B4(a9);
}

uint64_t sub_23FD41604()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  sub_23FC5A650();
  v2 = *(void **)(v1 + 88);
  sub_23FC59C00();
  sub_23FC1002C();

  sub_23FC090C0();
  return sub_23FC75B5C(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FD41644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5[10] = a4;
  v5[11] = v4;
  v5[8] = a2;
  v5[9] = a3;
  v5[7] = a1;
  v6 = sub_23FC10290();
  v5[12] = v6;
  v5[13] = *(_QWORD *)(v6 - 8);
  v5[14] = sub_23FC0901C();
  v7 = sub_23FD466E8();
  v5[15] = v7;
  v5[16] = *(_QWORD *)(v7 - 8);
  v5[17] = sub_23FC59BAC();
  v5[18] = sub_23FC59C3C();
  v8 = type metadata accessor for DisambiguationListItem(0);
  v5[19] = v8;
  v5[20] = *(_QWORD *)(v8 - 8);
  v5[21] = sub_23FC59BAC();
  v5[22] = sub_23FC59C3C();
  v9 = sub_23FD46454();
  v5[23] = v9;
  v5[24] = *(_QWORD *)(v9 - 8);
  v5[25] = sub_23FC0901C();
  v10 = sub_23FBFD684(&qword_256F65478);
  v5[26] = v10;
  v5[27] = *(_QWORD *)(v10 - 8);
  v5[28] = sub_23FC59BAC();
  v5[29] = sub_23FC59C3C();
  sub_23FC5A9A8();
  return sub_23FC0907C();
}

#error "23FD4179C: call analysis failed (funcsize=74)"

uint64_t sub_23FD41840()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(*(_QWORD *)v0 + 248);
  sub_23FC59C00();
  sub_23FC1002C();
  sub_23FC15A24();

  sub_23FC5A9A8();
  return sub_23FC5A19C();
}

uint64_t sub_23FD41890()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  sub_23FC5ACE0();
  sub_23FD46700();
  sub_23FC06160(v0, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32));
  v4 = sub_23FC5C874();
  if (v4 == *MEMORY[0x24BEB8DF8])
  {
    v5 = *(uint64_t **)(v2 + 224);
    (*(void (**)(uint64_t *, _QWORD))(*(_QWORD *)(v2 + 216) + 96))(v5, *(_QWORD *)(v2 + 208));
    v7 = *v5;
    v6 = v5[1];
  }
  else
  {
    if (v4 != *MEMORY[0x24BEB8E00])
      sub_23FC090C8(*(_QWORD *)(v2 + 216));
    v7 = 0;
    v6 = 0;
  }
  swift_task_dealloc();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  sub_23FC5B980();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v7, v6);
}

uint64_t sub_23FD4197C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6[11] = a5;
  v6[12] = v5;
  v6[9] = a3;
  v6[10] = a4;
  v6[7] = a1;
  v6[8] = a2;
  v7 = sub_23FC10290();
  v6[13] = v7;
  v6[14] = *(_QWORD *)(v7 - 8);
  v6[15] = sub_23FC0901C();
  v8 = sub_23FD466E8();
  v6[16] = v8;
  v6[17] = *(_QWORD *)(v8 - 8);
  v6[18] = sub_23FC59BAC();
  v6[19] = sub_23FC59C3C();
  v9 = type metadata accessor for DisambiguationListItem(0);
  v6[20] = v9;
  v6[21] = *(_QWORD *)(v9 - 8);
  v6[22] = sub_23FC59BAC();
  v6[23] = sub_23FC59C3C();
  v10 = sub_23FD46454();
  v6[24] = v10;
  v6[25] = *(_QWORD *)(v10 - 8);
  v6[26] = sub_23FC0901C();
  sub_23FC5A9A8();
  return sub_23FC0907C();
}

#error "23FD41AB0: call analysis failed (funcsize=77)"

uint64_t sub_23FD41B5C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(*(_QWORD *)v0 + 216);
  sub_23FC59C00();
  sub_23FC15A24();
  sub_23FC1002C();

  sub_23FC5A9A8();
  return sub_23FC5A19C();
}

uint64_t sub_23FD41BAC()
{
  uint64_t v0;

  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v0 + 16);
  sub_23FC090D0();
  sub_23FC090C0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  return sub_23FC090D8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FD41C10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5[10] = a4;
  v5[11] = v4;
  v5[8] = a2;
  v5[9] = a3;
  v5[7] = a1;
  v6 = sub_23FC10290();
  v5[12] = v6;
  v5[13] = *(_QWORD *)(v6 - 8);
  v5[14] = sub_23FC0901C();
  v7 = sub_23FD466E8();
  v5[15] = v7;
  v5[16] = *(_QWORD *)(v7 - 8);
  v5[17] = sub_23FC59BAC();
  v5[18] = sub_23FC59C3C();
  v8 = type metadata accessor for DisambiguationListItem(0);
  v5[19] = v8;
  v5[20] = *(_QWORD *)(v8 - 8);
  v5[21] = sub_23FC59BAC();
  v5[22] = sub_23FC59C3C();
  v9 = sub_23FD46454();
  v5[23] = v9;
  v5[24] = *(_QWORD *)(v9 - 8);
  v5[25] = sub_23FC0901C();
  v10 = sub_23FBFD684(&qword_256F65468);
  v5[26] = v10;
  v5[27] = *(_QWORD *)(v10 - 8);
  v5[28] = sub_23FC59BAC();
  v5[29] = sub_23FC59C3C();
  sub_23FC5A9A8();
  return sub_23FC0907C();
}

#error "23FD41D68: call analysis failed (funcsize=74)"

uint64_t sub_23FD41E0C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(*(_QWORD *)v0 + 248);
  sub_23FC59C00();
  sub_23FC1002C();
  sub_23FC15A24();

  sub_23FC5A9A8();
  return sub_23FC5A19C();
}

uint64_t sub_23FD41E5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  void (*v10)(uint64_t, _QWORD);

  sub_23FD46700();
  sub_23FC06160(v0, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
  v4 = sub_23FC5C874();
  v5 = *(_QWORD *)(v2 + 232);
  if (v4 == *MEMORY[0x24BEB8DF8])
  {
    v7 = *(_QWORD *)(v2 + 216);
    v6 = *(uint64_t **)(v2 + 224);
    sub_23FBFF204(v5, *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
    sub_23FBFF204((uint64_t)v6, *(uint64_t (**)(uint64_t, uint64_t))(v7 + 96));
    v8 = *v6;
  }
  else
  {
    v9 = *MEMORY[0x24BEB8E00];
    v10 = *(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 + 216) + 8);
    v10(v5, *(_QWORD *)(v2 + 208));
    if (v4 != v9)
      v10(*(_QWORD *)(v2 + 224), *(_QWORD *)(v2 + 208));
    v8 = MEMORY[0x24BEE4AF8];
  }
  swift_task_dealloc();
  sub_23FC090C0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  sub_23FC5B980();
  return (*(uint64_t (**)(uint64_t))(v2 + 8))(v8);
}

uint64_t sub_23FD41F60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6[11] = a5;
  v6[12] = v5;
  v6[9] = a3;
  v6[10] = a4;
  v6[7] = a1;
  v6[8] = a2;
  v7 = sub_23FC10290();
  v6[13] = v7;
  v6[14] = *(_QWORD *)(v7 - 8);
  v6[15] = sub_23FC0901C();
  v8 = sub_23FD466E8();
  v6[16] = v8;
  v6[17] = *(_QWORD *)(v8 - 8);
  v6[18] = sub_23FC59BAC();
  v6[19] = sub_23FC59C3C();
  v9 = type metadata accessor for DisambiguationListItem(0);
  v6[20] = v9;
  v6[21] = *(_QWORD *)(v9 - 8);
  v6[22] = sub_23FC59BAC();
  v6[23] = sub_23FC59C3C();
  v10 = sub_23FD46454();
  v6[24] = v10;
  v6[25] = *(_QWORD *)(v10 - 8);
  v6[26] = sub_23FC0901C();
  sub_23FC5A9A8();
  return sub_23FC0907C();
}

#error "23FD42094: call analysis failed (funcsize=77)"

uint64_t sub_23FD42140()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(*(_QWORD *)v0 + 216);
  sub_23FC59C00();
  sub_23FC15A24();
  sub_23FC1002C();

  sub_23FC5A9A8();
  return sub_23FC5A19C();
}

uint64_t sub_23FD42190(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8[8] = a7;
  v8[9] = v7;
  v8[6] = a5;
  v8[7] = a6;
  v8[4] = a3;
  v8[5] = a4;
  v8[2] = a1;
  v8[3] = a2;
  sub_23FBFD684(&qword_256F5EB98);
  v8[10] = sub_23FC0901C();
  v9 = sub_23FD747C8();
  v8[11] = v9;
  v8[12] = *(_QWORD *)(v9 - 8);
  v8[13] = sub_23FC0901C();
  v10 = sub_23FD46454();
  v8[14] = v10;
  v8[15] = *(_QWORD *)(v10 - 8);
  v8[16] = sub_23FC0901C();
  v11 = sub_23FBFD684(&qword_256F65420);
  v8[17] = v11;
  v8[18] = *(_QWORD *)(v11 - 8);
  v8[19] = sub_23FC59BAC();
  v8[20] = sub_23FC59C3C();
  sub_23FC5A9A8();
  return sub_23FC0907C();
}

void sub_23FD4223C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(uint64_t **)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 112);
  v12 = *(_QWORD *)(v0 + 96);
  v13 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 48);
  v6 = *(_QWORD *)(v0 + 24);
  sub_23FBFDE40(*(_QWORD **)(v0 + 72), *(_QWORD *)(*(_QWORD *)(v0 + 72) + 24));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v2, v6, v4);
  sub_23FD744B0();
  *(_QWORD *)(v0 + 168) = v7;
  *(_QWORD *)(v0 + 176) = sub_23FD744BC();
  sub_23FC5C11C(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  v8 = sub_23FD747F8();
  v9 = swift_allocBox();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v10, v5, v8);
  *v3 = v9;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v12 + 104))(v3, *MEMORY[0x24BEB9A88], v13);
  v11 = (_QWORD *)sub_23FC752E8();
  *(_QWORD *)(v0 + 184) = v11;
  *v11 = v0;
  v11[1] = sub_23FD42380;
  __asm { BR              X8 }
}

uint64_t sub_23FD42380()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  sub_23FC75AD4();
  sub_23FC5A650();
  v1 = (void *)v0[22];
  v3 = v0[12];
  v2 = v0[13];
  sub_23FC59C00();
  sub_23FC1002C();

  sub_23FC595C4(v2, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  sub_23FC5A9A8();
  return swift_task_switch();
}

uint64_t sub_23FD423E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t *v16;
  int v17;
  void (*v18)(_QWORD, _QWORD);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 144);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 16))(v1, *(_QWORD *)(v0 + 160), v2);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 88))(v1, v2);
  v5 = *(_QWORD *)(v0 + 160);
  if (v4 == *MEMORY[0x24BEB8DF8])
  {
    v7 = *(_QWORD *)(v0 + 144);
    v6 = *(uint64_t **)(v0 + 152);
    v8 = *(_QWORD *)(v0 + 80);
    sub_23FD3CBDC(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 96));
    sub_23FD4BEBC(*v6, v8);
    sub_23FC1002C();
    sub_23FC595C4(v5, *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
    v9 = sub_23FC10290();
    v10 = sub_23FD46724(v8);
    v11 = *(uint64_t **)(v0 + 16);
    if (v10 == 1)
    {
      sub_23FC75FD0();
      v12 = swift_allocBox();
      sub_23FD465E8(v13, *MEMORY[0x24BEB9940]);
      *v11 = v12;
      v14 = (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v11, *MEMORY[0x24BEB9A00], v9);
      sub_23FC7E2CC(v14, &qword_256F5EB98);
    }
    else
    {
      sub_23FC93224(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 80), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32));
    }
  }
  else
  {
    v15 = v4;
    v16 = *(uint64_t **)(v0 + 16);
    v17 = *MEMORY[0x24BEB8E00];
    v18 = *(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 144) + 8);
    v18(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 136));
    v19 = sub_23FC75FD0();
    v20 = swift_allocBox();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x24BEB9940], v19);
    *v16 = v20;
    v22 = *MEMORY[0x24BEB9A00];
    v23 = sub_23FC10290();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v16, v22, v23);
    if (v15 != v17)
      v18(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 136));
  }
  swift_task_dealloc();
  sub_23FC090D0();
  sub_23FC090C0();
  sub_23FC5A574();
  sub_23FC5AB04();
  return sub_23FC090D8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FD425D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  v8[8] = a7;
  v8[9] = v7;
  v8[6] = a5;
  v8[7] = a6;
  v8[4] = a3;
  v8[5] = a4;
  v8[2] = a1;
  v8[3] = a2;
  v9 = sub_23FD46454();
  v8[10] = v9;
  v8[11] = *(_QWORD *)(v9 - 8);
  v8[12] = sub_23FC0901C();
  sub_23FC5A9A8();
  return sub_23FC0907C();
}

uint64_t sub_23FD42628()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v5)(void);

  sub_23FD4651C();
  sub_23FD462D0(*(_QWORD **)(v0 + 72));
  v2 = sub_23FD744B0();
  *(_QWORD *)(v0 + 112) = sub_23FD465C8(v2, v3);
  sub_23FD4645C();
  v4 = (_QWORD *)sub_23FD463F8(*(int **)(v1 + 32));
  *(_QWORD *)(v0 + 120) = v4;
  *v4 = v0;
  v4[1] = sub_23FD4269C;
  sub_23FD4634C();
  return sub_23FD462B4(v5);
}

uint64_t sub_23FD4269C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  sub_23FC5A650();
  v2 = *(void **)(v1 + 112);
  sub_23FC59C00();
  sub_23FC1002C();

  sub_23FC090C0();
  return sub_23FC75B5C(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FD426DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v7[7] = a6;
  v7[8] = v6;
  v7[5] = a4;
  v7[6] = a5;
  v7[3] = a2;
  v7[4] = a3;
  v7[2] = a1;
  v8 = sub_23FD46454();
  v7[9] = v8;
  v7[10] = *(_QWORD *)(v8 - 8);
  v9 = sub_23FC0901C();
  v10 = sub_23FD46730(v9);
  v7[12] = v10;
  v7[13] = *(_QWORD *)(v10 - 8);
  v7[14] = sub_23FC59BAC();
  v7[15] = sub_23FC59C3C();
  sub_23FC5A9A8();
  return sub_23FC0907C();
}

uint64_t sub_23FD42748()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v5)(void);

  sub_23FD4651C();
  sub_23FD462D0(*(_QWORD **)(v0 + 64));
  v2 = sub_23FD744B0();
  *(_QWORD *)(v0 + 136) = sub_23FD466C0(v2, v3);
  sub_23FD4645C();
  v4 = (_QWORD *)sub_23FD463F8(*(int **)(v1 + 40));
  *(_QWORD *)(v0 + 144) = v4;
  *v4 = v0;
  v4[1] = sub_23FD427BC;
  sub_23FD4634C();
  return sub_23FD462B4(v5);
}

uint64_t sub_23FD427BC()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(*(_QWORD *)v0 + 136);
  sub_23FC59C00();
  sub_23FC1002C();

  sub_23FC5A9A8();
  return sub_23FC5A63C();
}

uint64_t sub_23FD42804()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 104);
  sub_23FD46774(*MEMORY[0x24BEBA3D0], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 104));
  v4 = sub_23FD4673C();
  v5 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v5(v1, v2);
  v6 = sub_23FBFF1EC();
  ((void (*)(uint64_t))v5)(v6);
  sub_23FC090D0();
  sub_23FC090C0();
  sub_23FC5AB04();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(v4 & 1);
}

uint64_t sub_23FD4288C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v7[7] = a6;
  v7[8] = v6;
  v7[5] = a4;
  v7[6] = a5;
  v7[3] = a2;
  v7[4] = a3;
  v7[2] = a1;
  v8 = sub_23FD46454();
  v7[9] = v8;
  v7[10] = *(_QWORD *)(v8 - 8);
  v9 = sub_23FC0901C();
  v10 = sub_23FD46730(v9);
  v7[12] = v10;
  v7[13] = *(_QWORD *)(v10 - 8);
  v7[14] = sub_23FC59BAC();
  v7[15] = sub_23FC59C3C();
  sub_23FC5A9A8();
  return sub_23FC0907C();
}

uint64_t sub_23FD428F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v5)(void);

  sub_23FD4651C();
  sub_23FD462D0(*(_QWORD **)(v0 + 64));
  v2 = sub_23FD744B0();
  *(_QWORD *)(v0 + 136) = sub_23FD466C0(v2, v3);
  sub_23FD4645C();
  v4 = (_QWORD *)sub_23FD463F8(*(int **)(v1 + 40));
  *(_QWORD *)(v0 + 144) = v4;
  *v4 = v0;
  v4[1] = sub_23FD4296C;
  sub_23FD4634C();
  return sub_23FD462B4(v5);
}

uint64_t sub_23FD4296C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(*(_QWORD *)v0 + 136);
  sub_23FC59C00();
  sub_23FC1002C();

  sub_23FC5A9A8();
  return sub_23FC5A63C();
}

uint64_t sub_23FD429B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  v8[8] = a7;
  v8[9] = v7;
  v8[6] = a5;
  v8[7] = a6;
  v8[4] = a3;
  v8[5] = a4;
  v8[2] = a1;
  v8[3] = a2;
  v9 = sub_23FD46454();
  v8[10] = v9;
  v8[11] = *(_QWORD *)(v9 - 8);
  v8[12] = sub_23FC0901C();
  sub_23FC5A9A8();
  return sub_23FC0907C();
}

uint64_t sub_23FD42A04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v5)(void);

  sub_23FD4651C();
  sub_23FD462D0(*(_QWORD **)(v0 + 72));
  v2 = sub_23FD744B0();
  *(_QWORD *)(v0 + 112) = sub_23FD465C8(v2, v3);
  sub_23FD4645C();
  v4 = (_QWORD *)sub_23FD463F8(*(int **)(v1 + 40));
  *(_QWORD *)(v0 + 120) = v4;
  *v4 = v0;
  v4[1] = sub_23FD462A8;
  sub_23FD4634C();
  return sub_23FD462B4(v5);
}

uint64_t sub_23FD42A78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8[8] = a7;
  v8[9] = v7;
  v8[6] = a5;
  v8[7] = a6;
  v8[4] = a3;
  v8[5] = a4;
  v8[2] = a1;
  v8[3] = a2;
  v9 = sub_23FC10290();
  v8[10] = v9;
  v8[11] = *(_QWORD *)(v9 - 8);
  v8[12] = sub_23FC0901C();
  v10 = sub_23FD46454();
  v8[13] = v10;
  v8[14] = *(_QWORD *)(v10 - 8);
  v8[15] = sub_23FC0901C();
  v11 = sub_23FD74978();
  v8[16] = v11;
  v8[17] = *(_QWORD *)(v11 - 8);
  v8[18] = sub_23FC59BAC();
  v8[19] = sub_23FC59C3C();
  sub_23FC5A9A8();
  return sub_23FC0907C();
}

uint64_t sub_23FD42B04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v6)(void);

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 120);
  sub_23FD4659C(*(_QWORD **)(v0 + 72));
  sub_23FD744B0();
  *(_QWORD *)(v0 + 160) = v3;
  *(_QWORD *)(v0 + 168) = sub_23FD744BC();
  sub_23FC10454(v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23FD74690();
  *(_QWORD *)(v0 + 176) = v4;
  sub_23FD7469C();
  v5 = (_QWORD *)sub_23FC752E8();
  *(_QWORD *)(v0 + 184) = v5;
  *v5 = v0;
  v5[1] = sub_23FD42BC0;
  sub_23FD4654C(*(__n128 *)(v0 + 40));
  return sub_23FD464F0(v6);
}

uint64_t sub_23FD42BC0()
{
  uint64_t v0;
  void *v1;

  sub_23FC5A650();
  v1 = *(void **)(v0 + 168);
  sub_23FC59C00();
  sub_23FC1002C();
  sub_23FC15A24();

  sub_23FD465D8();
  sub_23FC5A9A8();
  return swift_task_switch();
}

uint64_t sub_23FD42C28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 136);
  sub_23FD46774(*MEMORY[0x24BEBA3D0], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 104));
  v4 = sub_23FD4673C();
  v5 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v5(v1, v2);
  v6 = sub_23FBFF1EC();
  ((void (*)(uint64_t))v5)(v6);
  sub_23FC090D0();
  sub_23FC090C0();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(v4 & 1);
}

uint64_t sub_23FD42CC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v9[9] = a8;
  v9[10] = v8;
  v9[7] = a6;
  v9[8] = a7;
  v9[5] = a4;
  v9[6] = a5;
  v9[3] = a2;
  v9[4] = a3;
  v9[2] = a1;
  v10 = sub_23FC10290();
  v9[11] = v10;
  v9[12] = *(_QWORD *)(v10 - 8);
  v9[13] = sub_23FC0901C();
  v11 = sub_23FD46454();
  v9[14] = v11;
  v9[15] = *(_QWORD *)(v11 - 8);
  v9[16] = sub_23FC0901C();
  sub_23FC5A9A8();
  return sub_23FC0907C();
}

uint64_t sub_23FD42D2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v6)(void);

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  sub_23FD4659C(*(_QWORD **)(v0 + 80));
  sub_23FD744B0();
  *(_QWORD *)(v0 + 136) = v3;
  *(_QWORD *)(v0 + 144) = sub_23FD744BC();
  sub_23FC10454(v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23FD74690();
  *(_QWORD *)(v0 + 152) = v4;
  sub_23FD7469C();
  v5 = (_QWORD *)sub_23FC752E8();
  *(_QWORD *)(v0 + 160) = v5;
  *v5 = v0;
  v5[1] = sub_23FD42DE8;
  sub_23FD4654C(*(__n128 *)(v0 + 48));
  return sub_23FD464F0(v6);
}

uint64_t sub_23FD42DE8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;

  sub_23FC5A650();
  v2 = *(void **)(v1 + 144);
  v3 = *(_QWORD *)(v1 + 96);
  sub_23FC59C00();
  sub_23FC1002C();
  sub_23FC15A24();

  sub_23FC761CC(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  sub_23FC5A574();
  sub_23FC5AB04();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23FD42E60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  v5 = sub_23FD46454();
  v4[6] = v5;
  v4[7] = *(_QWORD *)(v5 - 8);
  v4[8] = sub_23FC0901C();
  sub_23FC5A9A8();
  return sub_23FC0907C();
}

uint64_t sub_23FD42EA8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t (*v14)(_QWORD, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t);

  sub_23FC5ACE0();
  v2 = v0[7];
  v1 = v0[8];
  v3 = (_QWORD *)v0[5];
  v4 = v3[3];
  v5 = v3[4];
  sub_23FBFDE40(v3, v4);
  v6 = sub_23FBFF1EC();
  v7(v6);
  v8 = sub_23FD744B0();
  v10 = v9;
  v0[9] = v9;
  v11 = sub_23FD744BC();
  v0[10] = v11;
  sub_23FBFF204(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  v12 = (_QWORD *)sub_23FC09058();
  v0[11] = v12;
  *v12 = v0;
  v12[1] = sub_23FD42F78;
  return v14(v0[2], v8, v10, v11, v0[4], v4, v5);
}

uint64_t sub_23FD42F78()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  sub_23FC5A650();
  v2 = *(void **)(v1 + 80);
  sub_23FC59C00();
  sub_23FC1002C();

  sub_23FC090C0();
  return sub_23FC75B5C(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FD42FB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return sub_23FCD4F9C();
}

uint64_t sub_23FD42FCC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v4)(uint64_t);

  sub_23FD463DC(*(_QWORD **)(v0 + 40));
  v1 = (_QWORD *)sub_23FC09058();
  v2 = sub_23FD4667C(v1);
  return v4(v2);
}

uint64_t sub_23FD4301C()
{
  uint64_t v0;

  sub_23FC59C00();
  return sub_23FC5AADC(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FD43050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  v8[8] = a7;
  v8[9] = v7;
  v8[6] = a5;
  v8[7] = a6;
  v8[4] = a3;
  v8[5] = a4;
  v8[2] = a1;
  v8[3] = a2;
  v9 = sub_23FD46454();
  v8[10] = v9;
  v8[11] = *(_QWORD *)(v9 - 8);
  v8[12] = sub_23FC0901C();
  sub_23FC5A9A8();
  return sub_23FC0907C();
}

uint64_t sub_23FD430A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v5)(void);

  sub_23FD4651C();
  sub_23FD462D0(*(_QWORD **)(v0 + 72));
  v2 = sub_23FD744B0();
  *(_QWORD *)(v0 + 112) = sub_23FD465C8(v2, v3);
  sub_23FD4645C();
  v4 = (_QWORD *)sub_23FD463F8(*(int **)(v1 + 72));
  *(_QWORD *)(v0 + 120) = v4;
  *v4 = v0;
  v4[1] = sub_23FD462A8;
  sub_23FD4634C();
  return sub_23FD462B4(v5);
}

uint64_t sub_23FD43114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;

  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_23FC586E4;
  return sub_23FD414FC(a1, a2, a3, a4);
}

uint64_t sub_23FD4318C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;

  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_23FC586E4;
  return sub_23FD4197C(a1, a2, a3, a4, a5);
}

uint64_t sub_23FD4320C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;

  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_23FC586E4;
  return sub_23FD41F60(a1, a2, a3, a4, a5);
}

uint64_t sub_23FD4328C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v15;

  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v15;
  *v15 = v7;
  v15[1] = sub_23FC586E4;
  return sub_23FD425D8(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_23FD43328(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;

  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_23FD4339C;
  return sub_23FD41644(a1, a2, a3, a4);
}

uint64_t sub_23FD4339C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_23FC59C00();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(a1, a2);
}

uint64_t sub_23FD433E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;

  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_23FD4629C;
  return sub_23FD41C10(a1, a2, a3, a4);
}

uint64_t sub_23FD4345C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23FD43504;
  return sub_23FD744E0();
}

uint64_t sub_23FD43504(uint64_t a1)
{
  uint64_t v1;

  sub_23FC59C00();
  return (*(uint64_t (**)(uint64_t))(v1 + 8))(a1);
}

uint64_t sub_23FD43548(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v13;

  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_23FD43504;
  return sub_23FD426DC(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_23FD435D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v15;

  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v15;
  *v15 = v7;
  v15[1] = sub_23FC586E4;
  return sub_23FD429B4(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_23FD43670(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v15;

  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v15;
  *v15 = v7;
  v15[1] = sub_23FC586E4;
  return sub_23FD43050(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_23FD4370C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v17;

  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 16) = v17;
  *v17 = v8;
  v17[1] = sub_23FC586E4;
  return sub_23FD42CC0(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_23FD437B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v13;

  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_23FD4629C;
  return sub_23FD4288C(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_23FD43840(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v15;

  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v15;
  *v15 = v7;
  v15[1] = sub_23FD4629C;
  return sub_23FD42A78(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_23FD438D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23FC586E4;
  return sub_23FD42E60(a1, a2, a3);
}

uint64_t sub_23FD43940(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v15;

  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v15;
  *v15 = v7;
  v15[1] = sub_23FC586E4;
  return sub_23FD42190(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_23FD439DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23FC586E4;
  return sub_23FD42FB8(a1, a2, a3);
}

uint64_t sub_23FD43A44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t **a3@<X8>)
{
  uint64_t v3;
  uint64_t *v7;
  uint64_t *v8;

  a3[3] = (uint64_t *)&unk_251015640;
  a3[4] = (uint64_t *)sub_23FD44DAC();
  v7 = (uint64_t *)swift_allocObject();
  *a3 = v7;
  v7[5] = a1;
  v7[6] = a2;
  v8 = sub_23FBFDDEC(v7 + 2);
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v8, v3, a1);
}

void sub_23FD43ABC(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v3 = sub_23FD74558();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  sub_23FBFF180();
  v8 = v7 - v6;
  sub_23FBFD684(&qword_256F652C8);
  sub_23FBFF168();
  v11 = MEMORY[0x24BDAC7A8](v9, v10);
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11, v14);
  v16 = (char *)&v39 - v15;
  sub_23FBFD684(&qword_256F5EBE8);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v17, v18);
  sub_23FC10370();
  sub_23FBFD684(&qword_256F652D0);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v19, v20);
  sub_23FBFF180();
  v23 = v22 - v21;
  sub_23FD74570();
  sub_23FD74564();
  sub_23FC0F3AC((uint64_t)v16, (uint64_t)v13, &qword_256F652C8);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v13, 1, v3) == 1)
  {
    v24 = type metadata accessor for TypedValueUndoContext(0);
    v25 = v1;
    v26 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v8, v13, v3);
    sub_23FD74540();
    v27 = sub_23FD74528();
    v29 = v28;
    v30 = sub_23FD74534();
    v39 = v3;
    v31 = v4;
    v33 = v32;
    v34 = type metadata accessor for TypedValueUndoContext(0);
    v40 = a1;
    v35 = v34;
    v36 = (uint64_t *)(v1 + *(int *)(v34 + 20));
    *v36 = v27;
    v36[1] = v29;
    v37 = (uint64_t *)(v1 + *(int *)(v34 + 24));
    *v37 = v30;
    v37[1] = v33;
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v8, v39);
    v25 = v1;
    v26 = 0;
    v24 = v35;
    a1 = v40;
  }
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v25, v26, 1, v24);
  sub_23FBFEF74((uint64_t)v16, &qword_256F652C8);
  sub_23FC0EE04(v23, a1, &qword_256F652D0);
  v38 = sub_23FBFD684(&qword_256F652D8);
  sub_23FC0EE04(v1, a1 + *(int *)(v38 + 36), &qword_256F5EBE8);
}

uint64_t sub_23FD43CF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return sub_23FCD4F9C();
}

uint64_t sub_23FD43D04()
{
  uint64_t v0;
  _QWORD *v1;

  sub_23FD463DC(*(_QWORD **)(v0 + 24));
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  *v1 = v0;
  v1[1] = sub_23FD46298;
  return sub_23FD73A48();
}

uint64_t sub_23FD43D6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6[21] = a5;
  v6[22] = v5;
  v6[19] = a3;
  v6[20] = a4;
  v6[17] = a1;
  v6[18] = a2;
  v7 = sub_23FD7457C();
  v6[23] = v7;
  v6[24] = *(_QWORD *)(v7 - 8);
  v6[25] = sub_23FC0901C();
  sub_23FBFD684(&qword_256F652A0);
  v6[26] = sub_23FC0901C();
  v8 = sub_23FC75FD8();
  v6[27] = v8;
  v6[28] = *(_QWORD *)(v8 - 8);
  v6[29] = sub_23FC0901C();
  v9 = sub_23FD744A4();
  v6[30] = v9;
  v6[31] = *(_QWORD *)(v9 - 8);
  v6[32] = sub_23FC0901C();
  sub_23FBFD684(&qword_256F5EBD0);
  v6[33] = sub_23FC0901C();
  sub_23FBFD684(&qword_256F652A8);
  v6[34] = sub_23FC59BAC();
  v6[35] = sub_23FC59C3C();
  v10 = sub_23FD745A0();
  v6[36] = v10;
  v6[37] = *(_QWORD *)(v10 - 8);
  v6[38] = sub_23FC0901C();
  sub_23FC5A9A8();
  return sub_23FC0907C();
}

uint64_t sub_23FD43E5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v23;
  uint64_t v24;

  sub_23FC75564();
  v1 = *(_QWORD *)(v0 + 264);
  sub_23FC0F3AC(*(_QWORD *)(v0 + 168), v1, &qword_256F5EBD0);
  v2 = sub_23FD46780();
  v3 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v1, 1, v2);
  v4 = *(_QWORD *)(v0 + 272);
  if ((_DWORD)v3 == 1)
  {
    sub_23FD3D5FC(v3, &qword_256F5EBD0);
    v5 = sub_23FD4665C();
    sub_23FC62728(v4, 1);
LABEL_4:
    v6 = *(_QWORD *)(v0 + 280);
    v7 = *MEMORY[0x24BEB9348];
    sub_23FD4665C();
    v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(v6, v7, v5);
    sub_23FD3D218(v8, &qword_256F652A8);
    goto LABEL_6;
  }
  sub_23FD4430C(*(_QWORD *)(v0 + 272));
  sub_23FD3CBDC(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8));
  v5 = sub_23FD4665C();
  if (sub_23FD46724(v4) == 1)
    goto LABEL_4;
  sub_23FC93224(*(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 272), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32));
LABEL_6:
  v9 = *(_QWORD *)(v0 + 304);
  v11 = *(_QWORD *)(v0 + 280);
  v10 = *(_QWORD *)(v0 + 288);
  v24 = *(_QWORD *)(v0 + 296);
  v12 = *(_QWORD *)(v0 + 224);
  v13 = *(_QWORD *)(v0 + 232);
  v14 = *(_QWORD *)(v0 + 208);
  v23 = *(_QWORD *)(v0 + 216);
  v15 = *(_QWORD *)(v0 + 144);
  sub_23FD4665C();
  sub_23FC62728(v11, 0);
  sub_23FD74594();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v13, v15, v23);
  sub_23FC06160(v14, v9, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 16));
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v14, 0, 1, v10);
  swift_bridgeObjectRetain();
  sub_23FD7448C();
  v16 = *(_QWORD *)(v0 + 160);
  sub_23FC584E0(*(_QWORD *)(v0 + 176), v0 + 16);
  v17 = (_QWORD *)sub_23FBFF1EC();
  sub_23FBFDE40(v17, v18);
  sub_23FC0F3AC(v16, v0 + 96, &qword_256F652B0);
  v19 = *(_QWORD *)(v0 + 120);
  if (v19)
  {
    v20 = *(_QWORD *)(v0 + 128);
    sub_23FBFDE40((_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 120));
    sub_23FD43A44(v19, v20, (uint64_t **)(v0 + 56));
    _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v0 + 96);
  }
  else
  {
    sub_23FBFEF74(v0 + 96, &qword_256F652B0);
    *(_OWORD *)(v0 + 56) = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
    *(_QWORD *)(v0 + 88) = 0;
  }
  v21 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 312) = v21;
  *v21 = v0;
  v21[1] = sub_23FD4413C;
  return sub_23FD73A78();
}

uint64_t sub_23FD4413C()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  sub_23FC5A650();
  *v2 = *v1;
  *(_QWORD *)(v3 + 320) = v0;
  v4 = swift_task_dealloc();
  sub_23FC7E2CC(v4, &qword_256F652B8);
  sub_23FC5A9A8();
  return sub_23FC5A63C();
}

uint64_t sub_23FD4419C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v1 = v0[31];
  v2 = v0[25];
  v4 = v0[23];
  v3 = v0[24];
  sub_23FD43ABC(v0[17]);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  sub_23FC5C11C(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23FD465D8();
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)(v0 + 2));
  sub_23FC5A574();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_23FC5B980();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_23FC090D0();
  v5 = (uint64_t (*)(void))sub_23FC5C528();
  return v5();
}

uint64_t sub_23FD44274()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 296);
  v1 = *(_QWORD *)(v0 + 304);
  sub_23FC090C8(*(_QWORD *)(v0 + 248));
  sub_23FC595C4(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v0 + 16);
  sub_23FD466F0();
  sub_23FC090C0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  sub_23FC5B980();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23FD4430C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  unsigned int *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v18;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v3 = v1;
  v5 = sub_23FD46780();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  sub_23FC10370();
  sub_23FC93224(v2, v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16));
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 88))(v2, v5);
  if (v8 == *MEMORY[0x24BE54EE8])
  {
    v9 = (unsigned int *)MEMORY[0x24BEB9338];
LABEL_7:
    v11 = *v9;
    v12 = sub_23FD4665C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(a1, v11, v12);
    v13 = a1;
    v14 = 0;
    v15 = 1;
    v16 = v12;
    return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v13, v14, v15, v16);
  }
  v10 = v8;
  if (v8 == *MEMORY[0x24BE54F08])
  {
    v9 = (unsigned int *)MEMORY[0x24BEB9350];
    goto LABEL_7;
  }
  if (v8 == *MEMORY[0x24BE54EF0])
  {
    v9 = (unsigned int *)MEMORY[0x24BEB9340];
    goto LABEL_7;
  }
  v18 = *MEMORY[0x24BE54EE0];
  v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(sub_23FD4665C() - 8) + 104);
  if (v10 == v18)
  {
    sub_23FD46768(*MEMORY[0x24BEB9330], v19);
    v13 = sub_23FD46754();
    return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v13, v14, v15, v16);
  }
  sub_23FD46768(*MEMORY[0x24BEB9348], v19);
  v20 = sub_23FD46754();
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v20, v21, v22, v23);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v5);
}

uint64_t sub_23FD4448C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return sub_23FCD4F9C();
}

uint64_t sub_23FD444A0()
{
  uint64_t v0;
  _QWORD *v1;

  sub_23FD463DC(*(_QWORD **)(v0 + 32));
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  sub_23FD46578(v1);
  return sub_23FD73A9C();
}

uint64_t sub_23FD444F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[22] = a3;
  v4[23] = v3;
  v4[20] = a1;
  v4[21] = a2;
  sub_23FBFD684(&qword_256F65280);
  v4[24] = sub_23FC0901C();
  sub_23FC5A9A8();
  return sub_23FC0907C();
}

uint64_t sub_23FD44540()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = v0[22];
  sub_23FC584E0(v0[23], (uint64_t)(v0 + 10));
  sub_23FBFDE40(v0 + 10, v0[13]);
  sub_23FC0F3AC(v1, (uint64_t)(v0 + 2), &qword_256F5EBC0);
  if (v0[5])
  {
    v2 = v0[24];
    sub_23FC584E0((uint64_t)(v0 + 2), (uint64_t)(v0 + 15));
    sub_23FD74A74();
    sub_23FD44D78((uint64_t)(v0 + 2));
    v4 = sub_23FD74A80();
    v5 = v2;
    v6 = 0;
  }
  else
  {
    v7 = v0[24];
    sub_23FBFEF74((uint64_t)(v0 + 2), &qword_256F5EBC0);
    v4 = sub_23FD74A80();
    v5 = v7;
    v6 = 1;
  }
  sub_23FC103A0(v5, v6, v3, v4);
  v8 = (_QWORD *)swift_task_alloc();
  v0[25] = v8;
  *v8 = v0;
  v8[1] = sub_23FD44668;
  return sub_23FD73AA8();
}

uint64_t sub_23FD44668(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  *(_QWORD *)(*v2 + 208) = v1;
  swift_task_dealloc();
  v5 = *(_QWORD *)(v4 + 192);
  if (!v1)
    *(_QWORD *)(v4 + 216) = a1;
  sub_23FBFEF74(v5, &qword_256F65280);
  sub_23FC5A9A8();
  return sub_23FC5A19C();
}

uint64_t sub_23FD446E8()
{
  uint64_t v0;

  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v0 + 80);
  sub_23FC090D0();
  return sub_23FCCC3F0(*(_QWORD *)(v0 + 216), *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FD44720()
{
  uint64_t v0;

  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v0 + 80);
  sub_23FC090D0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23FD4475C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return sub_23FCD4F9C();
}

uint64_t sub_23FD44770()
{
  uint64_t v0;
  _QWORD *v1;

  sub_23FD463DC(*(_QWORD **)(v0 + 32));
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  sub_23FD46578(v1);
  return sub_23FD73A6C();
}

uint64_t sub_23FD447C8()
{
  uint64_t v0;

  sub_23FC59C00();
  return sub_23FC5AADC(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FD447FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return sub_23FCD4F9C();
}

uint64_t sub_23FD4480C()
{
  uint64_t v0;
  _QWORD *v1;

  sub_23FD463DC(*(_QWORD **)(v0 + 24));
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  sub_23FD4669C(v1, (uint64_t)sub_23FD3F30C);
  return sub_23FD73A54();
}

uint64_t sub_23FD44860(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return sub_23FCD4F9C();
}

uint64_t sub_23FD44874()
{
  uint64_t v0;
  _QWORD *v1;

  sub_23FD463DC(*(_QWORD **)(v0 + 40));
  v1 = (_QWORD *)swift_task_alloc();
  sub_23FD4667C(v1);
  return sub_23FD73A60();
}

uint64_t sub_23FD448C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return sub_23FCD4F9C();
}

uint64_t sub_23FD448DC()
{
  uint64_t v0;
  _QWORD *v1;

  sub_23FD463DC(*(_QWORD **)(v0 + 32));
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  sub_23FD46578(v1);
  return sub_23FD73A84();
}

uint64_t sub_23FD44934(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return sub_23FCD4F9C();
}

uint64_t sub_23FD44944()
{
  uint64_t v0;
  _QWORD *v1;

  sub_23FD463DC(*(_QWORD **)(v0 + 24));
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  sub_23FD4669C(v1, (uint64_t)sub_23FD44998);
  return sub_23FD73A90();
}

uint64_t sub_23FD44998(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v4 = sub_23FC59C00();
  if (!v1)
    v4 = a1;
  return sub_23FD464D4(v4, *(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_23FD449D8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23FC586E4;
  return sub_23FD43CF4(a1);
}

uint64_t sub_23FD44A28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;

  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_23FC586E4;
  return sub_23FD43D6C(a1, a2, a3, a4, a5);
}

uint64_t sub_23FD44AA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23FC586E4;
  return sub_23FD4448C(a1, a2);
}

uint64_t sub_23FD44B08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23FC586E4;
  return sub_23FD4475C(a1, a2);
}

uint64_t sub_23FD44B68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23FD462A0;
  return sub_23FD444F8(a1, a2, a3);
}

uint64_t sub_23FD44BCC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23FC586E4;
  return sub_23FD447FC(a1);
}

uint64_t sub_23FD44C18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23FC586E4;
  return sub_23FD44860(a1, a2, a3);
}

uint64_t sub_23FD44C80(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23FC586E4;
  return sub_23FD448C8(a1, a2);
}

uint64_t sub_23FD44CE0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23FD44D2C;
  return sub_23FD44934(a1);
}

uint64_t sub_23FD44D2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v4 = sub_23FC59C00();
  if (!v1)
    v4 = a1;
  return sub_23FD464D4(v4, *(uint64_t (**)(void))(v2 + 8));
}

_UNKNOWN **sub_23FD44D6C()
{
  return &off_256F65190;
}

uint64_t sub_23FD44D78(uint64_t a1)
{
  destroy for FeedbackLearningBiomeDonator();
  return a1;
}

unint64_t sub_23FD44DAC()
{
  unint64_t result;

  result = qword_256F652C0;
  if (!qword_256F652C0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD82944, &unk_251015640);
    atomic_store(result, (unint64_t *)&qword_256F652C0);
  }
  return result;
}

uint64_t sub_23FD44DE8()
{
  uint64_t v0;

  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v0 + 16);
  return swift_deallocObject();
}

unint64_t sub_23FD44E0C()
{
  unint64_t result;

  result = qword_256F652E8;
  if (!qword_256F652E8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD82C3C, &unk_251015A78);
    atomic_store(result, (unint64_t *)&qword_256F652E8);
  }
  return result;
}

uint64_t sub_23FD44E48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23FD3F980(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_23FD44E60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[18] = a2;
  v3[19] = a3;
  sub_23FBFD684(&qword_256F5EBD0);
  v3[20] = swift_task_alloc();
  sub_23FBFD684(&qword_256F652D8);
  v3[21] = swift_task_alloc();
  v4 = sub_23FD72BF0();
  v3[22] = v4;
  v3[23] = *(_QWORD *)(v4 - 8);
  v3[24] = swift_task_alloc();
  v3[25] = swift_task_alloc();
  v5 = sub_23FD74474();
  v3[26] = v5;
  v3[27] = *(_QWORD *)(v5 - 8);
  v3[28] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23FD44F40()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t inited;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  sub_23FD46664();
  sub_23FD7412C();
  sub_23FC757FC();
  v1 = sub_23FD72BE4();
  v2 = sub_23FD74F6C();
  if (os_log_type_enabled(v1, v2))
  {
    *(_WORD *)sub_23FBFEFF4() = 0;
    sub_23FC5D9D0(&dword_23FBF8000, v1, v2, "TypedValueExecutionSession: Prewarming search tool");
    sub_23FBFEFA0();
  }
  v3 = *(_QWORD *)(v0 + 184);
  v4 = *(_QWORD *)(v0 + 160);

  v5 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8);
  *(_QWORD *)(v0 + 232) = v5;
  sub_23FC761CC(v5);
  sub_23FBFD684(&qword_256F654C8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23FD769D0;
  *(_QWORD *)(inited + 32) = 0x646E616D6D6F63;
  *(_QWORD *)(inited + 40) = 0xE700000000000000;
  sub_23FC75FD0();
  v7 = swift_allocBox();
  *v8 = 0x70756D726177;
  v8[1] = 0xE600000000000000;
  sub_23FD465E8((uint64_t)v8, *MEMORY[0x24BEB9958]);
  v9 = sub_23FC10290();
  v10 = MEMORY[0x24BEB9A10];
  *(_QWORD *)(inited + 72) = v9;
  *(_QWORD *)(inited + 80) = v10;
  v11 = sub_23FBFDDEC((uint64_t *)(inited + 48));
  *v11 = v7;
  sub_23FD465E8((uint64_t)v11, *MEMORY[0x24BEB9A00]);
  sub_23FBFD684(&qword_256F5EBB8);
  v12 = sub_23FD74B40();
  *(_QWORD *)(v0 + 240) = v12;
  v13 = sub_23FD46780();
  *(_OWORD *)(v0 + 120) = 0u;
  *(_QWORD *)(v0 + 136) = 0;
  *(_OWORD *)(v0 + 104) = 0u;
  sub_23FC103A0(v4, 1, v14, v13);
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 248) = v15;
  *v15 = v0;
  v15[1] = sub_23FD45198;
  return sub_23FD43D6C(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 224), v12, v0 + 104, *(_QWORD *)(v0 + 160));
}

uint64_t sub_23FD45198()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(*(_QWORD *)v1 + 256) = v0;
  swift_task_dealloc();
  v2 = swift_bridgeObjectRelease();
  if (v0)
  {
    sub_23FD3D5FC(v2, &qword_256F5EBD0);
    sub_23FC7E2CC(v3, &qword_256F652B0);
  }
  else
  {
    sub_23FD3D218(v2, &qword_256F5EBD0);
    sub_23FC7E2CC(v4, &qword_256F652B0);
    sub_23FD3D5FC(v5, &qword_256F652D8);
  }
  sub_23FC5A9A8();
  return sub_23FC5A19C();
}

uint64_t sub_23FD45248()
{
  _QWORD *v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  sub_23FC5ACE0();
  sub_23FC757FC();
  v1 = sub_23FD72BE4();
  v2 = sub_23FD74F6C();
  if (os_log_type_enabled(v1, v2))
  {
    *(_WORD *)sub_23FBFEFF4() = 0;
    sub_23FC5D9D0(&dword_23FBF8000, v1, v2, "TypedValueExecutionSession: Search tool prewarm complete");
    sub_23FBFEFA0();
  }
  v3 = v0[28];
  v4 = (void (*)(uint64_t, uint64_t))v0[29];
  v5 = v0[27];
  v6 = v0[24];
  v7 = v0[22];

  v4(v6, v7);
  sub_23FC595C4(v3, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  sub_23FC090C0();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2F4();
  swift_task_dealloc();
  v8 = (uint64_t (*)(void))sub_23FC5C528();
  return sub_23FC09088(v8);
}

uint64_t sub_23FD45314()
{
  uint64_t v0;

  sub_23FC75AD4();
  sub_23FC090C8(*(_QWORD *)(v0 + 216));
  swift_task_dealloc();
  sub_23FC090C0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23FD45378(_QWORD *a1, _QWORD *a2)
{
  BOOL v2;

  v2 = *a1 == *a2 && a1[1] == a2[1];
  if (!v2 && (sub_23FD75380() & 1) == 0)
    return 0;
  type metadata accessor for DisambiguationListItem(0);
  return sub_23FD7478C();
}

uint64_t sub_23FD453E0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_23FD75380() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_23FD75380();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23FD454AC(char a1)
{
  if ((a1 & 1) != 0)
    return 0x65756C6176;
  else
    return 25705;
}

uint64_t sub_23FD454D4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_23FBFD684(&qword_256F654E0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  sub_23FC12F34();
  sub_23FBFDE40(a1, a1[3]);
  sub_23FD4600C();
  sub_23FD754C4();
  sub_23FD75308();
  if (!v1)
  {
    type metadata accessor for DisambiguationListItem(0);
    sub_23FD74798();
    sub_23FD460C8(&qword_256F5EE78, MEMORY[0x24BEB9A28]);
    sub_23FD7532C();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
}

uint64_t sub_23FD45610@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v16 = sub_23FD74798();
  v13 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16, v5);
  sub_23FBFEFE0();
  v15 = v6;
  v17 = sub_23FBFD684(&qword_256F654D0);
  MEMORY[0x24BDAC7A8](v17, v7);
  sub_23FBFF180();
  v8 = type metadata accessor for DisambiguationListItem(0);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v9, v10);
  sub_23FC12F34();
  sub_23FBFDE40(a1, a1[3]);
  sub_23FD4600C();
  sub_23FD754B8();
  if (v2)
    return _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)a1);
  *v3 = sub_23FD752B4();
  v3[1] = v11;
  sub_23FD460C8(&qword_256F5EE90, MEMORY[0x24BEB9A40]);
  sub_23FD752D8();
  sub_23FD466D8();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 32))((char *)v3 + *(int *)(v8 + 20), v15, v16);
  sub_23FD46048((uint64_t)v3, a2);
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)a1);
  return sub_23FD4608C((uint64_t)v3);
}

uint64_t sub_23FD4580C()
{
  char *v0;

  return sub_23FD454AC(*v0);
}

uint64_t sub_23FD45814@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23FD453E0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23FD45838()
{
  sub_23FD4600C();
  return sub_23FD754DC();
}

uint64_t sub_23FD45860()
{
  sub_23FD4600C();
  return sub_23FD754E8();
}

uint64_t sub_23FD45888@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23FD45898@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23FD45610(a1, a2);
}

uint64_t sub_23FD458AC(_QWORD *a1)
{
  return sub_23FD454D4(a1);
}

void type metadata accessor for ShortcutsDialogPromptHandler()
{
  sub_23FC7A748();
}

uint64_t *sub_23FD458CC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_23FD74798();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t sub_23FD45968(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_23FD74798();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_23FD459B0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_23FD74798();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

_QWORD *sub_23FD45A20(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23FD74798();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *sub_23FD45A9C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_23FD74798();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *sub_23FD45AF8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23FD74798();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_23FD45B64()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FD45B70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    sub_23FC1020C(*(_QWORD *)(a1 + 8));
    sub_23FC09258();
  }
  else
  {
    v6 = sub_23FC10290();
    sub_23FC06098(a1 + *(int *)(a3 + 20), a2, v6);
  }
}

uint64_t sub_23FD45BC4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_23FD45BD0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;

  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(a1 + 8) = (a2 - 1);
    sub_23FC09258();
  }
  else
  {
    v7 = sub_23FC10290();
    sub_23FC0608C(a1 + *(int *)(a4 + 20), a2, a2, v7);
  }
}

uint64_t type metadata accessor for DisambiguationListItem(uint64_t a1)
{
  return sub_23FC04944(a1, qword_256F65358);
}

uint64_t sub_23FD45C3C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23FD74798();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_23FD45CB4(uint64_t a1)
{
  swift_bridgeObjectRelease();

}

void sub_23FD45CDC(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  void *v4;
  id v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = (void *)a2[2];
  a1[2] = v4;
  swift_bridgeObjectRetain();
  v5 = v4;
  sub_23FBFF0A0();
}

_QWORD *sub_23FD45D10(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a1[2];
  v5 = (void *)a2[2];
  a1[2] = v5;
  v6 = v5;

  return a1;
}

__n128 sub_23FD45D70(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t sub_23FD45D84(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  return a1;
}

uint64_t sub_23FD45DC8(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 24))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_23FD45E1C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

void type metadata accessor for DialogPrompt()
{
  sub_23FC7A748();
}

uint64_t sub_23FD45E7C()
{
  return MEMORY[0x24BEE0D10];
}

uint64_t sub_23FD45E88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DisambiguationListItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23FD45ECC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(sub_23FC5F58C() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  swift_unknownObjectRelease();
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v0 + 32);
  sub_23FBFF204(v0 + v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23FBFF1EC();
  return swift_deallocObject();
}

uint64_t sub_23FD45F3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  sub_23FC75AD4();
  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_23FC5F58C() - 8) + 80);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = v0 + 32;
  v4 = v0 + ((v1 + 72) & ~v1);
  v5 = swift_task_alloc();
  v6 = (_QWORD *)sub_23FC0922C(v5);
  v7 = sub_23FD46710(v6);
  return sub_23FD3EEEC(v7, v8, v2, v3, v4);
}

uint64_t sub_23FD45FB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = swift_task_alloc();
  v3 = (_QWORD *)sub_23FC0922C(v2);
  v4 = sub_23FD46710(v3);
  return sub_23FD44E60(v4, v5, v1);
}

unint64_t sub_23FD4600C()
{
  unint64_t result;

  result = qword_256F654D8;
  if (!qword_256F654D8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD82AA8, &type metadata for DisambiguationListItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256F654D8);
  }
  return result;
}

uint64_t sub_23FD46048(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DisambiguationListItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23FD4608C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DisambiguationListItem(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_23FD460C8(unint64_t *a1, uint64_t a2)
{
  uint64_t v4;

  if (!*a1)
  {
    v4 = sub_23FD74798();
    atomic_store(MEMORY[0x2426797E8](a2, v4), a1);
  }
  sub_23FBFF0A0();
}

uint64_t storeEnumTagSinglePayload for DisambiguationListItem.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23FD46150 + 4 * byte_23FD82663[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23FD46184 + 4 * byte_23FD8265E[v4]))();
}

uint64_t sub_23FD46184(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23FD4618C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23FD46194);
  return result;
}

uint64_t sub_23FD461A0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23FD461A8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23FD461AC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23FD461B4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DisambiguationListItem.CodingKeys()
{
  return &type metadata for DisambiguationListItem.CodingKeys;
}

unint64_t sub_23FD461D4()
{
  unint64_t result;

  result = qword_256F654E8;
  if (!qword_256F654E8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD82A80, &type metadata for DisambiguationListItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256F654E8);
  }
  return result;
}

unint64_t sub_23FD46214()
{
  unint64_t result;

  result = qword_256F654F0;
  if (!qword_256F654F0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD829F0, &type metadata for DisambiguationListItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256F654F0);
  }
  return result;
}

unint64_t sub_23FD46254()
{
  unint64_t result;

  result = qword_256F654F8;
  if (!qword_256F654F8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD82A18, &type metadata for DisambiguationListItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256F654F8);
  }
  return result;
}

uint64_t sub_23FD462B4@<X0>(uint64_t (*a1)(void)@<X8>)
{
  return a1();
}

uint64_t sub_23FD462D0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23FBFDE40(a1, a1[3]);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v3, v2);
}

uint64_t sub_23FD462FC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23FBFDE40(v1, *(_QWORD *)(v3 + 40));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 16))(v2, v4, v5);
}

uint64_t sub_23FD46330@<X0>(uint64_t (*a1)(void)@<X8>)
{
  return a1();
}

void sub_23FD4634C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v3[3] = v1;
  v3[4] = v2;
  v3[2] = v0;
}

uint64_t sub_23FD46370(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  *(_QWORD *)(v22 + 16) = v21;
  return sub_23FD45E88(a1, v22+ ((*(unsigned __int8 *)(a20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(a20 + 80))+ *(_QWORD *)(a20 + 72) * v20);
}

uint64_t sub_23FD463BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a17 + 32))(v20 + *(int *)(a19 + 20), v21, v19);
}

_QWORD *sub_23FD463DC(_QWORD *a1)
{
  return sub_23FBFDE40(a1, a1[3]);
}

uint64_t sub_23FD463F8@<X0>(int *a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = (char *)a1 + *a1;
  return swift_task_alloc();
}

void sub_23FD4640C()
{
  sub_23FC9BDC8();
}

void sub_23FD46424()
{
  sub_23FC9BDC8();
}

void sub_23FD4643C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = v0;
  sub_23FC9BDC8();
}

uint64_t sub_23FD46454()
{
  return sub_23FD744C8();
}

uint64_t sub_23FD4645C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t sub_23FD4646C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v19;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a18 + 8))(v18, v19);
}

uint64_t sub_23FD46480(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  _QWORD *v21;

  *v21 = a1;
  *(_QWORD *)(a21 + 8) = a2;
  return sub_23FD7469C();
}

uint64_t sub_23FD46494(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t (*a15)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  return a15(v15, v17, v16);
}

uint64_t sub_23FD464A8@<X0>(int *a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 80) = (char *)a1 + *a1;
  return swift_task_alloc();
}

uint64_t sub_23FD464D4(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_23FD464E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(v1, v0, v2);
}

uint64_t sub_23FD464F0@<X0>(uint64_t (*a1)(void)@<X8>)
{
  return a1();
}

uint64_t sub_23FD4650C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

void sub_23FD4654C(__n128 a1)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  __n128 *v5;

  v5[3].n128_u64[0] = v3;
  v5[3].n128_u64[1] = v4;
  v5[2].n128_u64[0] = v2;
  v5[2].n128_u64[1] = v1;
  v5[1] = a1;
}

uint64_t sub_23FD46578(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 16);
}

uint64_t sub_23FD46590()
{
  uint64_t v0;
  uint64_t v1;

  return sub_23FD45E88(v0, *(_QWORD *)(v1 - 88));
}

uint64_t sub_23FD4659C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23FBFDE40(a1, a1[3]);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v2, v4, v3);
}

uint64_t sub_23FD465C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 104) = a2;
  return sub_23FD744BC();
}

uint64_t sub_23FD465D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t sub_23FD465E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(a1, a2, v2);
}

void sub_23FD46614()
{
  uint64_t v0;

  sub_23FC584E0(*(_QWORD *)(v0 + 96), v0 + 16);
}

void sub_23FD46630()
{
  uint64_t v0;

  sub_23FC584E0(*(_QWORD *)(v0 + 88), v0 + 16);
}

uint64_t sub_23FD4665C()
{
  return sub_23FD74588();
}

uint64_t sub_23FD4667C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 48) = a1;
  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 16);
}

uint64_t sub_23FD4669C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *a1 = v2;
  a1[1] = a2;
  return *(_QWORD *)(v2 + 16);
}

uint64_t sub_23FD466B8()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_23FD466C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 128) = a2;
  return sub_23FD744BC();
}

uint64_t sub_23FD466D0()
{
  return sub_23FD744B0();
}

uint64_t sub_23FD466D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t sub_23FD466E8()
{
  return sub_23FD746A8();
}

uint64_t sub_23FD466F0()
{
  return swift_task_dealloc();
}

uint64_t sub_23FD46700()
{
  uint64_t v0;

  return _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v0 + 16);
}

uint64_t sub_23FD46710(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t sub_23FD46724(uint64_t a1)
{
  uint64_t v1;

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, 1, v1);
}

uint64_t sub_23FD46730(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 88) = a1;
  return sub_23FD74978();
}

uint64_t sub_23FD4673C()
{
  return sub_23FD7496C();
}

uint64_t sub_23FD46748(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, v1, v2);
}

uint64_t sub_23FD46754()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FD46768@<X0>(uint64_t a1@<X1>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(v2, a1, v3);
}

uint64_t sub_23FD46774@<X0>(uint64_t a1@<X1>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(v2, a1, v3);
}

uint64_t sub_23FD46780()
{
  return sub_23FD73124();
}

uint64_t sub_23FD46788(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 240) = a2;
  return sub_23FD744BC();
}

uint64_t sub_23FD46794(uint64_t a1)
{
  return sub_23FD467CC(a1, &qword_256F5D948, &qword_256F5D958, (void (*)(_QWORD, uint64_t, _QWORD))sub_23FC9B46C);
}

uint64_t sub_23FD467B0(uint64_t a1)
{
  return sub_23FD467CC(a1, &qword_256F5D958, &qword_256F5D948, (void (*)(_QWORD, uint64_t, _QWORD))sub_23FC9B498);
}

uint64_t sub_23FD467CC(uint64_t a1, uint64_t *a2, uint64_t *a3, void (*a4)(_QWORD, uint64_t, _QWORD))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;
  uint64_t *v23;
  uint64_t v24;

  v21 = sub_23FBFD684(a2);
  v9 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21, v10);
  sub_23FC10388();
  v23 = a3;
  v11 = sub_23FBFD684(a3);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v13);
  sub_23FC9308C();
  v14 = *(_QWORD *)(a1 + 16);
  v15 = MEMORY[0x24BEE4AF8];
  if (v14)
  {
    v24 = MEMORY[0x24BEE4AF8];
    a4(0, v14, 0);
    v16 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v17 = *(_QWORD *)(v9 + 72);
    v15 = v24;
    do
    {
      sub_23FC0F3AC(v16, v4, a2);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23FD49890(0, *(_QWORD *)(v15 + 16) + 1);
        v15 = v24;
      }
      v19 = *(_QWORD *)(v15 + 16);
      v18 = *(_QWORD *)(v15 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_23FD49890(v18 > 1, v19 + 1);
        v15 = v24;
      }
      *(_QWORD *)(v15 + 16) = v19 + 1;
      sub_23FC0EE04(v5, v15+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(_QWORD *)(v12 + 72) * v19, v23);
      v16 += v17;
      --v14;
    }
    while (v14);
  }
  return v15;
}

uint64_t sub_23FD46968(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  char **v18;
  uint64_t v19[3];
  uint64_t v20;
  char **v21;
  uint64_t v22;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v22 = MEMORY[0x24BEE4AF8];
    sub_23FC9BD70();
    v2 = v22;
    v4 = sub_23FD74900();
    v5 = 0;
    v6 = *(_QWORD *)(v4 - 8);
    v15 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    do
    {
      v20 = v4;
      v21 = &off_251015900;
      v7 = sub_23FBFDDEC(v19);
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 16))(v7, v15 + *(_QWORD *)(v6 + 72) * v5, v4);
      v22 = v2;
      v8 = *(_QWORD *)(v2 + 16);
      if (v8 >= *(_QWORD *)(v2 + 24) >> 1)
        sub_23FC9BD70();
      ++v5;
      v9 = sub_23FCA67B0((uint64_t)v19, v20);
      MEMORY[0x24BDAC7A8](v9, v9);
      v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v12 + 16))(v11);
      v17 = v4;
      v18 = &off_251015900;
      v13 = sub_23FBFDDEC((uint64_t *)&v16);
      (*(void (**)(uint64_t *, char *, uint64_t))(v6 + 32))(v13, v11, v4);
      v2 = v22;
      *(_QWORD *)(v22 + 16) = v8 + 1;
      sub_23FBFDE28(&v16, v2 + 40 * v8 + 32);
      _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v19);
    }
    while (v1 != v5);
  }
  return v2;
}

uint64_t sub_23FD46B08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v36;
  char *v37;
  char *v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char v51;
  void (*v52)(char *, uint64_t);
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _OWORD *v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD v65[2];
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  uint64_t v96;
  __int128 v97;
  __int128 v98;
  uint64_t v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  uint64_t v103;

  v89 = sub_23FD73280();
  v77 = *(_QWORD *)(v89 - 8);
  MEMORY[0x24BDAC7A8](v89, v4);
  v75 = (char *)v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = sub_23FBFD684(&qword_256F65540);
  MEMORY[0x24BDAC7A8](v81, v6);
  v90 = (uint64_t)v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23FBFD684(&qword_256F65548);
  v10 = MEMORY[0x24BDAC7A8](v8, v9);
  v12 = (char *)v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v10, v13);
  v87 = (uint64_t)v65 - v15;
  MEMORY[0x24BDAC7A8](v14, v16);
  v88 = (uint64_t)v65 - v17;
  v80 = sub_23FD748D0();
  v79 = *(_QWORD *)(v80 - 8);
  MEMORY[0x24BDAC7A8](v80, v18);
  v78 = (char *)v65 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = sub_23FD73394();
  v103 = *(_QWORD *)(v91 - 8);
  MEMORY[0x24BDAC7A8](v91, v20);
  v22 = (char *)v65 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = sub_23FD749FC();
  v84 = *(_QWORD *)(v85 - 8);
  MEMORY[0x24BDAC7A8](v85, v23);
  v83 = (char *)v65 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = *(_QWORD *)(a1 + 16);
  if (v71)
  {
    v70 = a1 + ((*(unsigned __int8 *)(v103 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v103 + 80));
    v69 = *(_QWORD *)(v103 + 72);
    v67 = a2 + 32;
    v66 = (uint64_t)&v92 + 8;
    v65[0] = a1;
    swift_bridgeObjectRetain();
    v25 = 0;
    v73 = MEMORY[0x24BEE4AF8];
    v68 = xmmword_23FD769D0;
    v26 = &qword_256F65548;
    v72 = a2;
    v76 = v12;
    v86 = v22;
    while (1)
    {
      v74 = v25;
      v27 = v70 + v69 * v25;
      v28 = *(_QWORD *)(a2 + 16);
      if (!v28)
      {
LABEL_23:
        v99 = 0;
        v97 = 0u;
        v98 = 0u;
        goto LABEL_25;
      }
      swift_bridgeObjectRetain();
      v29 = v67;
      v82 = v27;
      while (1)
      {
        sub_23FC60768(v29, (uint64_t)&v92);
        sub_23FBFDE40(&v92, *((uint64_t *)&v93 + 1));
        v30 = v83;
        MEMORY[0x2426786A8]();
        v31 = sub_23FD749F0();
        v33 = v32;
        (*(void (**)(char *, uint64_t))(v84 + 8))(v30, v85);
        if (v31 == sub_23FD73370() && v33 == v34)
        {
          swift_bridgeObjectRelease_n();
          sub_23FC60768((uint64_t)&v92, (uint64_t)&v97);
          v37 = v86;
          (*(void (**)(char *, uint64_t, uint64_t))(v103 + 16))(v86, v27, v91);
        }
        else
        {
          v36 = sub_23FD75380();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_23FC60768((uint64_t)&v92, (uint64_t)&v97);
          v37 = v86;
          (*(void (**)(char *, uint64_t, uint64_t))(v103 + 16))(v86, v27, v91);
          if ((v36 & 1) == 0)
          {
            (*(void (**)(char *, uint64_t))(v103 + 8))(v37, v91);
            goto LABEL_18;
          }
        }
        sub_23FBFDE40(&v97, *((uint64_t *)&v98 + 1));
        v38 = v78;
        sub_23FD748DC();
        v39 = v26;
        v40 = v88;
        sub_23FD48564(v88);
        (*(void (**)(char *, uint64_t))(v79 + 8))(v38, v80);
        v41 = v87;
        sub_23FD7337C();
        v42 = v89;
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v41, 0, 1, v89);
        v43 = v90;
        v44 = v90 + *(int *)(v81 + 48);
        v45 = v40;
        v26 = v39;
        sub_23FC0F3AC(v45, v90, v39);
        sub_23FC0F3AC(v41, v44, v39);
        if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v43, 1, v42) == 1)
          break;
        v46 = v87;
        v47 = v89;
        v48 = (uint64_t)v76;
        sub_23FC0F3AC(v90, (uint64_t)v76, v26);
        if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v44, 1, v47) == 1)
        {
          sub_23FC8FCC4(v46, v26);
          sub_23FC8FCC4(v88, v26);
          (*(void (**)(char *, uint64_t))(v103 + 8))(v86, v91);
          (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v48, v47);
LABEL_17:
          sub_23FC8FCC4(v90, &qword_256F65540);
          v27 = v82;
LABEL_18:
          _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)&v97);
          goto LABEL_19;
        }
        v49 = v77;
        v50 = v75;
        (*(void (**)(char *, uint64_t, uint64_t))(v77 + 32))(v75, v44, v47);
        sub_23FBFEE2C(qword_256F65560, (uint64_t (*)(uint64_t))MEMORY[0x24BE55170], MEMORY[0x24BE55180]);
        v51 = sub_23FD74BDC();
        v52 = *(void (**)(char *, uint64_t))(v49 + 8);
        v52(v50, v47);
        sub_23FC8FCC4(v46, v26);
        sub_23FC8FCC4(v88, v26);
        (*(void (**)(char *, uint64_t))(v103 + 8))(v86, v91);
        v52((char *)v48, v47);
        sub_23FC8FCC4(v90, v26);
        _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)&v97);
        v27 = v82;
        if ((v51 & 1) != 0)
          goto LABEL_24;
LABEL_19:
        _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)&v92);
        v29 += 40;
        if (!--v28)
        {
          swift_bridgeObjectRelease();
          goto LABEL_23;
        }
      }
      sub_23FC8FCC4(v87, v39);
      sub_23FC8FCC4(v88, v39);
      (*(void (**)(char *, uint64_t))(v103 + 8))(v37, v91);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v44, 1, v89) != 1)
        goto LABEL_17;
      sub_23FC8FCC4(v90, v39);
      _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)&v97);
LABEL_24:
      swift_bridgeObjectRelease();
      sub_23FBFDE28(&v92, (uint64_t)&v97);
LABEL_25:
      sub_23FBFD684(&qword_256F5F9B0);
      sub_23FD74798();
      v53 = swift_allocObject();
      *(_OWORD *)(v53 + 16) = v68;
      sub_23FD73388();
      sub_23FC0F3AC((uint64_t)&v97, (uint64_t)&v95, &qword_256F65550);
      if (v96)
      {
        *(_QWORD *)&v92 = v53;
        sub_23FBFDE28(&v95, v66);
        v100 = v92;
        v101 = v93;
        v54 = v94;
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_23FC8FCC4((uint64_t)&v95, &qword_256F65550);
        v54 = 0uLL;
        v100 = 0u;
        v101 = 0u;
      }
      v102 = v54;
      sub_23FC8FCC4((uint64_t)&v97, &qword_256F65550);
      a2 = v72;
      if ((_QWORD)v100)
      {
        v92 = v100;
        v93 = v101;
        v94 = v102;
        v55 = v73;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23FC99B0C();
          v55 = v62;
        }
        v73 = v55;
        v56 = *(_QWORD *)(v55 + 16);
        v57 = v74;
        if (v56 >= *(_QWORD *)(v55 + 24) >> 1)
        {
          sub_23FC99B0C();
          v57 = v74;
          v73 = v63;
        }
        v58 = v73;
        *(_QWORD *)(v73 + 16) = v56 + 1;
        v59 = (_OWORD *)(v58 + 48 * v56);
        v60 = v92;
        v61 = v94;
        v59[3] = v93;
        v59[4] = v61;
        v59[2] = v60;
      }
      else
      {
        sub_23FC8FCC4((uint64_t)&v100, &qword_256F65558);
        v57 = v74;
      }
      v25 = v57 + 1;
      if (v25 == v71)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v73;
      }
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_23FD474A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t);
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(uint64_t);
  uint64_t v66;
  uint64_t v67;
  void (*v68)(uint64_t, uint64_t, uint64_t);
  uint64_t OpaqueTypeConformance2;
  uint64_t *v70;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;

  v5 = sub_23FD73274();
  v76 = *(_QWORD *)(v5 - 8);
  v77 = v5;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v6, v7);
  sub_23FBFEFE0();
  v75 = v8;
  v79 = sub_23FBFD684(&qword_256F65510);
  v73 = *(_QWORD *)(v79 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v9, v10);
  sub_23FBFEFE0();
  v74 = v11;
  sub_23FBFD684(&qword_256F65518);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v12, v13);
  sub_23FBFEFE0();
  v81 = v14;
  sub_23FBFD684(&qword_256F65520);
  sub_23FC05FF4();
  v17 = MEMORY[0x24BDAC7A8](v15, v16);
  v78 = (char *)&v72 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17, v19);
  v80 = (char *)&v72 - v20;
  sub_23FBFD684(&qword_256F5EB78);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v21, v22);
  sub_23FC10388();
  v23 = sub_23FD74888();
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23, v25);
  sub_23FC06128();
  v26 = sub_23FD741BC();
  v27 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26, v28);
  sub_23FC9308C();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v27 + 16))(v3, a1, v26);
  v29 = (*(uint64_t (**)(uint64_t *, uint64_t))(v27 + 88))(v3, v26);
  if (v29 == *MEMORY[0x24BE56ED8])
  {
    sub_23FD4982C();
    v30 = *v3;
    sub_23FD7481C();
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v2, 1, v23) == 1)
    {
      sub_23FC15A24();
      sub_23FC8FCC4(v2, &qword_256F5EB78);
      return MEMORY[0x24BEE4AF8];
    }
    else
    {
      v38 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 32))(v1, v2, v23);
      MEMORY[0x24BDAC7A8](v38, v39);
      *(&v72 - 2) = v1;
      v40 = v82;
      v41 = sub_23FC95590((void (*)(__int128 *__return_ptr, _QWORD *, uint64_t *))sub_23FD47FBC, (uint64_t)(&v72 - 4), v30);
      if (!v40)
        v26 = v41;
      sub_23FD49874();
      sub_23FC15A24();
    }
    return v26;
  }
  if (v29 == *MEMORY[0x24BE56EE0])
  {
    sub_23FD4982C();
    v32 = *v3;
    v31 = v3[1];
    v33 = v81;
    sub_23FD74810();
    v34 = sub_23FD749A8();
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v33, 1, v34) == 1)
    {
      swift_bridgeObjectRelease();
      sub_23FC8FCC4(v33, &qword_256F65518);
      v35 = 1;
      v36 = v79;
      v37 = (uint64_t)v80;
LABEL_20:
      v66 = (uint64_t)v78;
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v37, v35, 1, v36);
      sub_23FC0F3AC(v37, v66, &qword_256F65520);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v66, 1, v36) == 1)
      {
        v26 = MEMORY[0x24BEE4AF8];
      }
      else
      {
        v67 = v74;
        v68 = *(void (**)(uint64_t, uint64_t, uint64_t))(v73 + 32);
        v68(v74, v66, v36);
        sub_23FBFD684(&qword_256F5F8C0);
        v26 = sub_23FD4989C();
        *(_OWORD *)(v26 + 16) = xmmword_23FD769D0;
        *(_QWORD *)(v26 + 56) = v36;
        OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
        v70 = sub_23FD49884(OpaqueTypeConformance2);
        v68((uint64_t)v70, v67, v36);
      }
      sub_23FC8FCC4(v37, &qword_256F65520);
      return v26;
    }
    sub_23FBFD684(&qword_256F5F9B0);
    v50 = sub_23FD74798();
    v77 = v32;
    v51 = v50;
    v52 = *(_QWORD *)(v50 - 8);
    v53 = (*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
    v54 = swift_allocObject();
    *(_OWORD *)(v54 + 16) = xmmword_23FD769D0;
    v55 = (uint64_t *)(v54 + v53);
    v26 = sub_23FD74768();
    v56 = swift_allocBox();
    *v57 = v77;
    v57[1] = v31;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v57, *MEMORY[0x24BEB9958], v26);
    *v55 = v56;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v52 + 104))(v55, *MEMORY[0x24BEB9A00], v51);
    v37 = (uint64_t)v80;
    v58 = v82;
    sub_23FD7499C();
    if (!v58)
    {
      swift_bridgeObjectRelease();
      v64 = sub_23FD498A8();
      v65(v64);
      v35 = 0;
      v36 = v79;
      goto LABEL_20;
    }
    swift_bridgeObjectRelease();
    v59 = sub_23FD498A8();
LABEL_17:
    v61(v59, v60);
    return v26;
  }
  if (v29 != *MEMORY[0x24BE56EF0])
  {
    sub_23FD44E0C();
    v62 = sub_23FC5A704();
    sub_23FD4984C(v62, v63);
    v61 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
    v59 = (uint64_t)v3;
    v60 = v26;
    goto LABEL_17;
  }
  sub_23FD4982C();
  v43 = v75;
  v42 = v76;
  v44 = v77;
  (*(void (**)(uint64_t, uint64_t *, uint64_t))(v76 + 32))(v75, v3, v77);
  sub_23FBFD684(&qword_256F5F8C0);
  v26 = sub_23FD4989C();
  *(_OWORD *)(v26 + 16) = xmmword_23FD769D0;
  v45 = sub_23FD74864();
  v46 = (uint64_t (*)(uint64_t))MEMORY[0x24BEB9ED0];
  *(_QWORD *)(v26 + 56) = v45;
  sub_23FBFEE2C(&qword_256F65528, v46, MEMORY[0x24BEB9EC8]);
  v48 = sub_23FD49884(v47);
  v49 = v82;
  sub_23FD47EA8(v43, (uint64_t)v48);
  if (v49)
  {
    sub_23FC58294(v26 + 32);
    *(_QWORD *)(v26 + 16) = 0;
    swift_release();
  }
  (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v43, v44);
  return v26;
}

uint64_t sub_23FD47A6C()
{
  __int128 *v0;
  _BYTE v2[40];

  sub_23FD49814(v0, (uint64_t)v2);
  return v2[32] + 1;
}

uint64_t sub_23FD47A98()
{
  __int128 *v0;
  uint64_t v1;
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[5];
  _QWORD v11[4];
  char v12;

  sub_23FD49814(v0, (uint64_t)v10);
  sub_23FD49814(v0, (uint64_t)v11);
  if (v12)
  {
    if (v12 == 1)
    {
      v1 = v11[0];
      sub_23FBFD684((uint64_t *)&unk_256F5F208);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_23FD769D0;
      *(_QWORD *)(inited + 32) = 0xD000000000000011;
      *(_QWORD *)(inited + 40) = 0x800000023FD86590;
      *(_QWORD *)(inited + 72) = sub_23FBFD684(&qword_256F65680);
      *(_QWORD *)(inited + 48) = v1;
      swift_bridgeObjectRetain();
    }
  }
  else
  {
    v4 = v11[0];
    v3 = v11[1];
    v6 = v11[2];
    v5 = v11[3];
    sub_23FBFD684((uint64_t *)&unk_256F5F208);
    v7 = swift_initStackObject();
    *(_OWORD *)(v7 + 16) = xmmword_23FD82B00;
    *(_QWORD *)(v7 + 32) = 0x64496C6F6F74;
    *(_QWORD *)(v7 + 40) = 0xE600000000000000;
    v8 = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v7 + 48) = v4;
    *(_QWORD *)(v7 + 56) = v3;
    *(_QWORD *)(v7 + 72) = v8;
    *(_QWORD *)(v7 + 80) = 0x6574656D61726170;
    *(_QWORD *)(v7 + 120) = v8;
    *(_QWORD *)(v7 + 88) = 0xEB00000000644972;
    *(_QWORD *)(v7 + 96) = v6;
    *(_QWORD *)(v7 + 104) = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return sub_23FD74B40();
}

uint64_t sub_23FD47C50()
{
  sub_23FD497D8();
  return sub_23FD753F8();
}

uint64_t sub_23FD47C78()
{
  sub_23FD497D8();
  return sub_23FD753EC();
}

uint64_t sub_23FD47CA0()
{
  uint64_t v0;

  v0 = qword_256F65500;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_23FD47CD4()
{
  __int128 *v0;
  _BYTE v2[40];

  sub_23FD49814(v0, (uint64_t)v2);
  return sub_23FD47A6C();
}

uint64_t sub_23FD47D08()
{
  __int128 *v0;
  _BYTE v2[40];

  sub_23FD49814(v0, (uint64_t)v2);
  return sub_23FD47A98();
}

uint64_t sub_23FD47D3C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t result;
  uint64_t v16;

  v4 = *a1;
  v5 = a1[1];
  sub_23FBFD684(&qword_256F5F9B0);
  v6 = sub_23FD74798();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_23FD769D0;
  v10 = (uint64_t *)(v9 + v8);
  v11 = sub_23FD74768();
  v12 = swift_allocBox();
  *v13 = v4;
  v13[1] = v5;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v13, *MEMORY[0x24BEB9958], v11);
  *v10 = v12;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v7 + 104))(v10, *MEMORY[0x24BEB9A00], v6);
  a3[3] = sub_23FBFD684(&qword_256F65530);
  a3[4] = swift_getOpaqueTypeConformance2();
  sub_23FBFDDEC(a3);
  swift_bridgeObjectRetain();
  sub_23FD7487C();
  result = swift_bridgeObjectRelease();
  if (v16)
  {
    result = sub_23FC58294((uint64_t)a3);
    *a2 = v16;
  }
  return result;
}

void sub_23FD47EA8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v5 = sub_23FD73274();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CompoundPredicateBuilder();
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a1, v5);
  v14 = sub_23FD74804();
  v15 = sub_23FD46968(v14);
  swift_bridgeObjectRelease();
  sub_23FD48010((uint64_t)v9, v15, (uint64_t)v13);
  if (!v2)
  {
    sub_23FD482F4(a2);
    sub_23FD48528((uint64_t)v13);
  }
}

uint64_t sub_23FD47FBC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_23FD47D3C(a1, a2, a3);
}

uint64_t type metadata accessor for CompoundPredicateBuilder()
{
  uint64_t result;

  result = qword_256F655C0;
  if (!qword_256F655C0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_23FD48010(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t *, uint64_t, uint64_t);
  int v18;
  int v19;
  void (*v20)(uint64_t, uint64_t *, uint64_t);
  unint64_t v21;
  uint64_t v22;
  unsigned int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v35 = a3;
  v7 = sub_23FD73394();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  sub_23FC06128();
  v10 = sub_23FD73274();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12);
  v14 = (uint64_t *)((char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v39 = sub_23FD74858();
  v38 = *(_QWORD *)(v39 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v15, v16);
  sub_23FC10388();
  v17 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v11 + 16);
  v37 = a1;
  v17(v14, a1, v10);
  v18 = (*(uint64_t (**)(uint64_t *, uint64_t))(v11 + 88))(v14, v10);
  v19 = *MEMORY[0x24BE55110];
  v36 = v4;
  if (v18 == v19)
  {
    sub_23FD4983C();
    v20 = *(void (**)(uint64_t, uint64_t *, uint64_t))(v8 + 32);
    v20((uint64_t)v3, v14, v7);
    sub_23FBFD684(&qword_256F65538);
    v21 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_23FD769D0;
    v20(v22 + v21, v3, v7);
LABEL_5:
    v23 = (unsigned int *)MEMORY[0x24BEB9EB0];
    v24 = v39;
    v25 = v38;
    goto LABEL_6;
  }
  if (v18 == *MEMORY[0x24BE55108])
  {
    sub_23FD4983C();
    v22 = *v14;
    goto LABEL_5;
  }
  v24 = v39;
  v25 = v38;
  if (v18 != *MEMORY[0x24BE55100])
  {
    swift_bridgeObjectRelease();
    sub_23FD44E0C();
    v31 = sub_23FC5A704();
    sub_23FD4984C(v31, v32);
    v33 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v33(v37, v10);
    v33((uint64_t)v14, v10);
    goto LABEL_12;
  }
  sub_23FD4983C();
  v22 = *v14;
  v23 = (unsigned int *)MEMORY[0x24BEB9EA8];
LABEL_6:
  v26 = v36;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v25 + 104))(v36, *v23, v24);
  swift_bridgeObjectRetain();
  v27 = swift_bridgeObjectRetain();
  v28 = sub_23FD46B08(v27, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v28 + 16) == *(_QWORD *)(v22 + 16))
  {
    sub_23FD49864();
    swift_bridgeObjectRelease();
    v29 = v35;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 32))(v35, v26, v24);
    *(_QWORD *)(v29 + *(int *)(type metadata accessor for CompoundPredicateBuilder() + 20)) = v28;
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_23FD44E0C();
    sub_23FC5A704();
    *(_QWORD *)v30 = v22;
    *(_QWORD *)(v30 + 8) = 0;
    *(_QWORD *)(v30 + 16) = 0;
    *(_QWORD *)(v30 + 24) = 0;
    *(_BYTE *)(v30 + 32) = 1;
    swift_willThrow();
    sub_23FD49864();
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v26, v24);
  }
LABEL_12:
  sub_23FC06000();
}

void sub_23FD482F4(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[5];
  uint64_t v26;

  v23 = sub_23FD7490C();
  v5 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23, v6);
  sub_23FC9308C();
  v7 = sub_23FD74858();
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v10, v1, v7);
  v12 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for CompoundPredicateBuilder() + 20));
  v13 = *(_QWORD *)(v12 + 16);
  if (v13)
  {
    v18 = a1;
    v19 = v7;
    v21 = v10;
    v26 = MEMORY[0x24BEE4AF8];
    v14 = v12;
    swift_bridgeObjectRetain();
    sub_23FC9BD44();
    v20 = v14;
    v15 = v14 + 32;
    while (1)
    {
      sub_23FD48834(v15, (uint64_t)&v24);
      sub_23FBFDE40(v25, v25[3]);
      sub_23FD748E8();
      if (v2)
        break;
      sub_23FD48868((uint64_t)&v24);
      v16 = v26;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23FC9BD44();
        v16 = v26;
      }
      v17 = *(_QWORD *)(v16 + 16);
      if (v17 >= *(_QWORD *)(v16 + 24) >> 1)
      {
        sub_23FC9BD44();
        v16 = v26;
      }
      *(_QWORD *)(v16 + 16) = v17 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 32))(v16+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v17, v3, v23);
      v26 = v16;
      v15 += 48;
      if (!--v13)
      {
        swift_bridgeObjectRelease();
        goto LABEL_11;
      }
    }
    sub_23FD48868((uint64_t)&v24);
    swift_bridgeObjectRelease();
    swift_release();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v21, v19);
  }
  else
  {
LABEL_11:
    sub_23FD74870();
  }
  sub_23FC06000();
}

uint64_t sub_23FD48528(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CompoundPredicateBuilder();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23FD48564@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  unsigned int *v10;
  uint64_t v11;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;

  v2 = v1;
  v4 = sub_23FD748D0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v2, v4);
  v9 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v8, v4);
  if (v9 == *MEMORY[0x24BEBA1E0])
  {
    v10 = (unsigned int *)MEMORY[0x24BE55140];
  }
  else if (v9 == *MEMORY[0x24BEBA1B8])
  {
    v10 = (unsigned int *)MEMORY[0x24BE55120];
  }
  else if (v9 == *MEMORY[0x24BEBA1C0])
  {
    v10 = (unsigned int *)MEMORY[0x24BE55128];
  }
  else if (v9 == *MEMORY[0x24BEBA1D8])
  {
    v10 = (unsigned int *)MEMORY[0x24BE55138];
  }
  else if (v9 == *MEMORY[0x24BEBA208])
  {
    v10 = (unsigned int *)MEMORY[0x24BE55150];
  }
  else if (v9 == *MEMORY[0x24BEBA1D0])
  {
    v10 = (unsigned int *)MEMORY[0x24BE55130];
  }
  else
  {
    if (v9 != *MEMORY[0x24BEBA1F0])
    {
      if (v9 == *MEMORY[0x24BEBA1C8])
        goto LABEL_16;
      if (v9 == *MEMORY[0x24BEBA1A8])
      {
        v10 = (unsigned int *)MEMORY[0x24BE55158];
        goto LABEL_28;
      }
      if (v9 == *MEMORY[0x24BEBA1F8])
      {
        v10 = (unsigned int *)MEMORY[0x24BE55160];
        goto LABEL_28;
      }
      if (v9 == *MEMORY[0x24BEBA218] || v9 == *MEMORY[0x24BEBA210])
      {
LABEL_16:
        (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      }
      else
      {
        if (v9 == *MEMORY[0x24BEBA220])
        {
          v10 = (unsigned int *)MEMORY[0x24BE55168];
          goto LABEL_28;
        }
        if (v9 != *MEMORY[0x24BEBA200] && v9 != *MEMORY[0x24BEBA1B0] && v9 != *MEMORY[0x24BEBA1E8])
        {
          v18 = sub_23FD73280();
          v16 = a1;
          v17 = 1;
          goto LABEL_29;
        }
      }
      v11 = sub_23FD73280();
      return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a1, 1, 1, v11);
    }
    v10 = (unsigned int *)MEMORY[0x24BE55148];
  }
LABEL_28:
  v14 = *v10;
  v15 = sub_23FD73280();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(a1, v14, v15);
  v16 = a1;
  v17 = 0;
  v18 = v15;
LABEL_29:
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v16, v17, 1, v18);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_23FD48834(uint64_t a1, uint64_t a2)
{
  sub_23FD488BC(a2, a1);
  return a2;
}

uint64_t sub_23FD48868(uint64_t a1)
{
  sub_23FD48894(a1);
  return a1;
}

uint64_t sub_23FD48894(uint64_t a1)
{
  uint64_t v1;

  v1 = a1 + 8;
  swift_bridgeObjectRelease();
  return _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v1);
}

uint64_t sub_23FD488BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = a2 + 8;
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v4;
  v5 = v4;
  v6 = **(void (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  swift_bridgeObjectRetain();
  v6(a1 + 8, v3, v5);
  return a1;
}

_QWORD *sub_23FD48924(_QWORD *a1, _QWORD *a2)
{
  uint64_t *v3;

  v3 = a2 + 1;
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_23FBFDB34(a1 + 1, v3);
  return a1;
}

uint64_t sub_23FD48978(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

uint64_t sub_23FD489CC(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_23FD48A0C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for ComparisonPredicateBuilder()
{
  sub_23FC7A748();
}

uint64_t *sub_23FD48A64(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23FD74858();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_23FD48AF0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23FD74858();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FD48B34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23FD74858();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_23FD48B94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23FD74858();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23FD48C00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23FD74858();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_23FD48C5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23FD74858();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23FD48CC0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FD48CCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = sub_23FD74858();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t sub_23FD48D44()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FD48D50(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = sub_23FD74858();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_23FD48DC4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23FD74858();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23FD48E38()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_23FD48E40()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_23FD48EB8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    *(_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_23FD48F6C(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FD48FAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_23FD4900C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23FD49078(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_23FD490D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23FD49138(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unint64_t v13;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = *(_QWORD *)(v5 + 64);
  if (v7 >= a2)
  {
    if (v6 < 0x7FFFFFFF)
    {
      v13 = *(_QWORD *)((a1 + v8 + 7) & 0xFFFFFFFFFFFFF8);
      if (v13 >= 0xFFFFFFFF)
        LODWORD(v13) = -1;
      return (v13 + 1);
    }
    else
    {
      return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, v6, v4);
    }
  }
  else
  {
    if (((((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v9 = 2;
    else
      v9 = a2 - v7 + 1;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    return ((uint64_t (*)(void))((char *)&loc_23FD491B4 + 4 * byte_23FD82B10[v11]))();
  }
}

void sub_23FD49234(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0;
  }
  else
  {
    if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
  }
  if (a2 > v6)
  {
    if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      v10 = ~v6 + a2;
      bzero(a1, ((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
      *a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t sub_23FD49320(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  _QWORD *v8;
  uint64_t v9;

  *(_BYTE *)(v5 + v6) = 0;
  if ((_DWORD)a2)
  {
    if (a3 < 0x7FFFFFFF)
    {
      v8 = (_QWORD *)((v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
      if ((a2 & 0x80000000) != 0)
        v9 = a2 ^ 0x80000000;
      else
        v9 = (a2 - 1);
      *v8 = v9;
    }
    else
    {
      return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v5, a2, a3, a4);
    }
  }
  return result;
}

uint64_t type metadata accessor for QualifiedToolKitQuery(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23FC7493C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for QualifiedToolKitQuery);
}

uint64_t sub_23FD493B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  if (a5 != 1)
  {
    if (a5)
      return result;
    swift_bridgeObjectRetain();
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_23FD493F4(uint64_t a1)
{
  return sub_23FD49408(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t sub_23FD49408(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  if (a5 != 1)
  {
    if (a5)
      return result;
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FD49444(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_23FD493B8(*(_QWORD *)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t sub_23FD494A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_23FD493B8(*(_QWORD *)a2, v4, v5, v6, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v12 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v7;
  sub_23FD49408(v8, v9, v10, v11, v12);
  return a1;
}

__n128 sub_23FD49514(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_23FD49528(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  char v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v3;
  sub_23FD49408(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t sub_23FD49570(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFE && *(_BYTE *)(a1 + 33))
    {
      v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 32);
      if (v3 <= 2)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_23FD495B0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -(char)a2;
  }
  return result;
}

uint64_t sub_23FD495F8(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 32) <= 1u)
    return *(unsigned __int8 *)(a1 + 32);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_23FD49610(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 2;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
  }
  *(_BYTE *)(result + 32) = a2;
  return result;
}

void type metadata accessor for ExecutorQueryError()
{
  sub_23FC7A748();
}

uint64_t sub_23FD49638(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

uint64_t sub_23FD4968C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_23FBFDB34((uint64_t *)a1, (uint64_t *)a2);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v4 = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v4;
  return a1;
}

__n128 sub_23FD496CC(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_23FD496E8(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

uint64_t sub_23FD49738(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 57))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_23FD49778(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 57) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for EnumerationConfiguration()
{
  sub_23FC7A748();
}

unint64_t sub_23FD497D8()
{
  unint64_t result;

  result = qword_256F65678;
  if (!qword_256F65678)
  {
    result = MEMORY[0x2426797E8](&unk_23FD82BFC, &unk_251015A78);
    atomic_store(result, (unint64_t *)&qword_256F65678);
  }
  return result;
}

uint64_t sub_23FD49814(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_BYTE *)(a2 + 32) = *((_BYTE *)a1 + 32);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_23FD4982C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 96))(v1, v0);
}

uint64_t sub_23FD4983C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 96))(v2, v1);
}

uint64_t sub_23FD4984C(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  *(_BYTE *)(a2 + 32) = 2;
  return swift_willThrow();
}

uint64_t sub_23FD49864()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, uint64_t))(v0 + 8))(*(_QWORD *)(v2 - 96), v1);
}

uint64_t sub_23FD49874()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t *sub_23FD49884(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 64) = a1;
  return sub_23FBFDDEC(v1);
}

uint64_t sub_23FD49890(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 - 120))(a1, a2, 1);
}

uint64_t sub_23FD4989C()
{
  return swift_allocObject();
}

uint64_t sub_23FD498A8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FD498BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t, uint64_t);
  int v58;
  void (*v59)(char *, char *, uint64_t);
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  int v65;
  void (*v66)(uint64_t, uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(uint64_t, uint64_t, uint64_t);
  char *v94;
  uint64_t v95;
  void (*v96)(char *, uint64_t);
  uint64_t v97;
  uint64_t v98;
  NSObject *v99;
  os_log_type_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  unint64_t v106;
  _QWORD v108[2];
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  int v121;
  char *v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  char *v127;
  char *v128;
  int v129;
  void (*v130)(char *, uint64_t, uint64_t);
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;

  v117 = sub_23FD74474();
  v114 = *(_QWORD *)(v117 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v1, v2);
  sub_23FBFEFE0();
  v113 = v3;
  v116 = sub_23FD72BF0();
  v115 = *(_QWORD *)(v116 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v4, v5);
  sub_23FBFEFE0();
  v118 = v6;
  v126 = sub_23FD7484C();
  v7 = *(_QWORD *)(v126 - 8);
  MEMORY[0x24BDAC7A8](v126, v8);
  sub_23FBFEFCC();
  v125 = v9;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v10, v11);
  v124 = (char *)v108 - v12;
  sub_23FBFD684(&qword_256F65688);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v13, v14);
  v16 = (uint64_t)v108 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23FD748AC();
  v136 = *(_QWORD *)(v17 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v18, v19);
  sub_23FBFEFCC();
  v112 = v20;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v21, v22);
  sub_23FC0FFF4();
  v110 = v23;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v24, v25);
  sub_23FC0FFF4();
  v111 = v26;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v27, v28);
  sub_23FC0FFF4();
  v133 = v29;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v30, v31);
  sub_23FC0FFF4();
  v120 = v32;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v33, v34);
  v123 = (uint64_t)v108 - v35;
  v36 = sub_23FD743D8();
  v37 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36, v38);
  sub_23FBFEFCC();
  v128 = v39;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v40, v41);
  sub_23FC0FFF4();
  v127 = v42;
  sub_23FBFF064();
  v45 = MEMORY[0x24BDAC7A8](v43, v44);
  v47 = (char *)v108 - v46;
  MEMORY[0x24BDAC7A8](v45, v48);
  v137 = (uint64_t)v108 - v49;
  v119 = v0;
  v50 = sub_23FD74414();
  v51 = *(_QWORD *)(v50 + 16);
  v135 = v37;
  v109 = v36;
  if (v51)
  {
    v52 = (*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
    v108[1] = v50;
    v53 = v50 + v52;
    v54 = *(_QWORD *)(v37 + 72);
    v130 = *(void (**)(char *, uint64_t, uint64_t))(v37 + 16);
    v131 = v54;
    v129 = *MEMORY[0x24BEB8E80];
    v121 = *MEMORY[0x24BEB9E98];
    v55 = MEMORY[0x24BEE4AF8];
    v132 = v7;
    v122 = v47;
    do
    {
      v56 = v137;
      v57 = v130;
      v130((char *)v137, v53, v36);
      v57(v47, v56, v36);
      v58 = (*(uint64_t (**)(char *, uint64_t))(v37 + 88))(v47, v36);
      if (v58 == v129)
      {
        v134 = v55;
        sub_23FBFEFFC((uint64_t)v47, *(uint64_t (**)(uint64_t, uint64_t))(v37 + 96));
        v59 = *(void (**)(char *, char *, uint64_t))(v132 + 32);
        v60 = v124;
        v61 = v47;
        v62 = v126;
        v59(v124, v61, v126);
        v63 = v125;
        v59(v125, v60, v62);
        v64 = v132;
        v65 = (*(uint64_t (**)(char *, uint64_t))(v132 + 88))(v63, v62);
        if (v65 == v121)
        {
          sub_23FD4A27C(*(uint64_t (**)(uint64_t, uint64_t))(v64 + 96));
          v66 = *(void (**)(uint64_t, uint64_t, uint64_t))(v136 + 32);
          v67 = v120;
          v66(v120, (uint64_t)v63, v17);
          v66(v16, v67, v17);
          v68 = 0;
        }
        else
        {
          sub_23FD4A27C(*(uint64_t (**)(uint64_t, uint64_t))(v64 + 8));
          v68 = 1;
        }
        v55 = v134;
        v47 = v122;
      }
      else
      {
        sub_23FBFEFFC((uint64_t)v47, *(uint64_t (**)(uint64_t, uint64_t))(v37 + 8));
        v68 = 1;
      }
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v16, v68, 1, v17);
      sub_23FBFEFFC(v137, *(uint64_t (**)(uint64_t, uint64_t))(v37 + 8));
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v16, 1, v17) == 1)
      {
        sub_23FD4A188(v16);
      }
      else
      {
        v69 = v123;
        sub_23FD4A268(v123, v16);
        sub_23FD4A268(v133, v69);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23FD4A250();
          v55 = v73;
        }
        v70 = *(_QWORD *)(v55 + 16);
        if (v70 >= *(_QWORD *)(v55 + 24) >> 1)
        {
          sub_23FD4A250();
          v55 = v74;
        }
        *(_QWORD *)(v55 + 16) = v70 + 1;
        sub_23FBFF148();
        sub_23FD4A268(v55 + v71 + *(_QWORD *)(v72 + 72) * v70, v133);
        v37 = v135;
      }
      v53 += v131;
      --v51;
    }
    while (v51);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v55 = MEMORY[0x24BEE4AF8];
  }
  v75 = *(_QWORD *)(v55 + 16);
  v76 = v112;
  v77 = v111;
  v78 = v110;
  if (v75)
  {
    sub_23FBFF148();
    v81 = v79 + v80;
    v133 = *(_QWORD *)(v82 + 72);
    v134 = v79;
    v137 = *(_QWORD *)(v82 + 16);
    swift_bridgeObjectRetain();
    v47 = (char *)v137;
    while (1)
    {
      ((void (*)(uint64_t, uint64_t, uint64_t))v47)(v77, v81, v17);
      sub_23FD74894();
      v16 = sub_23FD4A1C8();
      v83 = sub_23FD4A244();
      sub_23FD4A22C(v78);
      ((void (*)(uint64_t, uint64_t, uint64_t))v47)(v76, v77, v17);
      if ((v83 & 1) != 0)
        break;
      sub_23FD748A0();
      v84 = sub_23FD4A244();
      sub_23FD4A22C(v78);
      sub_23FD4A22C(v76);
      sub_23FD4A22C(v77);
      if ((v84 & 1) != 0)
        goto LABEL_27;
      v81 += v133;
      if (!--v75)
      {
        sub_23FD4A270();
        goto LABEL_28;
      }
    }
    sub_23FD4A22C(v76);
    sub_23FD4A22C(v77);
LABEL_27:
    sub_23FD4A270();
    LODWORD(v75) = 1;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
LABEL_28:
  v85 = v109;
  v86 = v119;
  v87 = *(_QWORD *)(sub_23FD74414() + 16);
  LODWORD(v137) = v75;
  if (!v87)
  {
    swift_bridgeObjectRelease();
LABEL_34:
    v97 = 0;
    sub_23FD4A208();
    if ((v75 & 1) != 0)
    {
      v98 = 1;
      goto LABEL_38;
    }
    goto LABEL_37;
  }
  sub_23FBFF148();
  v136 = v88;
  v86 = v88 + v89;
  v90 = *MEMORY[0x24BEB8E88];
  v92 = *(_QWORD *)(v91 + 72);
  v93 = *(void (**)(uint64_t, uint64_t, uint64_t))(v91 + 16);
  v94 = v127;
  v47 = v128;
  while (1)
  {
    v93((uint64_t)v94, v86, v85);
    v95 = v135;
    (*(void (**)(char *, uint64_t, uint64_t))(v135 + 104))(v47, v90, v85);
    v16 = sub_23FD743CC();
    v96 = *(void (**)(char *, uint64_t))(v95 + 8);
    v96(v47, v85);
    v96(v94, v85);
    if ((v16 & 1) != 0)
      break;
    v86 += v92;
    if (!--v87)
    {
      swift_bridgeObjectRelease();
      LOBYTE(v75) = v137;
      goto LABEL_34;
    }
  }
  swift_bridgeObjectRelease();
  v97 = 1;
  v98 = 1;
  sub_23FD4A208();
  if ((v137 & 1) == 0)
LABEL_37:
    v98 = v97;
LABEL_38:
  sub_23FD724D0();
  (*(void (**)(char *, uint64_t, uint64_t))(v85 + 16))(v47, v119, v16);
  v99 = sub_23FD72BE4();
  v100 = sub_23FD74F6C();
  if (os_log_type_enabled(v99, v100))
  {
    v101 = swift_slowAlloc();
    v102 = swift_slowAlloc();
    LODWORD(v136) = v97;
    v139 = v102;
    *(_DWORD *)v101 = 136315906;
    v103 = sub_23FD74450();
    v138 = sub_23FC9DC40(v103, v104, &v139);
    sub_23FD4A234();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v85 + 8))(v47, v117);
    *(_WORD *)(v101 + 12) = 2080;
    if ((_DWORD)v98)
      v105 = 0;
    else
      v105 = 7630702;
    if ((_DWORD)v98)
      v106 = 0xE000000000000000;
    else
      v106 = 0xE300000000000000;
    v138 = sub_23FC9DC40(v105, v106, &v139);
    sub_23FD4A234();
    swift_bridgeObjectRelease();
    *(_WORD *)(v101 + 22) = 1024;
    LODWORD(v138) = v137;
    sub_23FD4A25C();
    *(_WORD *)(v101 + 28) = 1024;
    LODWORD(v138) = v136;
    sub_23FD4A25C();
    _os_log_impl(&dword_23FBF8000, v99, v100, "willProduceSensitiveSideEffects: %s is %s considered sensitive - isDestructiveOrIrrevocable: %{BOOL}d, isDeleteIntent: %{BOOL}d", (uint8_t *)v101, 0x22u);
    swift_arrayDestroy();
    sub_23FBFEFA0();
  }
  (*(void (**)(char *, uint64_t))(v85 + 8))(v47, v16);

  (*(void (**)(uint64_t, uint64_t))(v115 + 8))(v86, v116);
  return v98;
}

uint64_t sub_23FD4A188(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23FBFD684(&qword_256F65688);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_23FD4A1C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256F65690;
  if (!qword_256F65690)
  {
    v1 = sub_23FD748AC();
    result = MEMORY[0x2426797E8](MEMORY[0x24BEB9F20], v1);
    atomic_store(result, (unint64_t *)&qword_256F65690);
  }
  return result;
}

uint64_t sub_23FD4A22C(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t sub_23FD4A234()
{
  return sub_23FD75044();
}

uint64_t sub_23FD4A244()
{
  return sub_23FD75080();
}

void sub_23FD4A250()
{
  sub_23FC99910();
}

uint64_t sub_23FD4A25C()
{
  return sub_23FD75044();
}

uint64_t sub_23FD4A268(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t sub_23FD4A270()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_23FD4A27C@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_23FD4A288(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v35[2];
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t, uint64_t);
  uint64_t v46;
  int v47;
  uint64_t v48;

  v3 = sub_23FD74714();
  v38 = *(_QWORD *)(v3 - 8);
  v39 = v3;
  MEMORY[0x24BDAC7A8](v3, v4);
  v37 = (char *)v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23FD74744();
  v42 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v7);
  v41 = (char *)v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23FD74798();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9, v11);
  v13 = (char *)v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a1 + 16);
  if (!v14)
    return MEMORY[0x24BEE4AF8];
  v35[1] = v1;
  v15 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
  v47 = *MEMORY[0x24BEB99E0];
  v40 = *MEMORY[0x24BEB99B0];
  v16 = *(_QWORD *)(v10 + 72);
  v45 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v46 = v16;
  v35[0] = a1;
  swift_bridgeObjectRetain();
  v17 = MEMORY[0x24BEE4AF8];
  v43 = v10;
  v44 = v9;
  v36 = v6;
  do
  {
    v45(v13, v15, v9);
    v18 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v13, v9);
    if (v18 == v47)
    {
      (*(void (**)(char *, uint64_t))(v10 + 96))(v13, v9);
      v19 = swift_projectBox();
      v20 = v41;
      v21 = v42;
      (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v41, v19, v6);
      v48 = sub_23FD746E4();
      v23 = v22;
      (*(void (**)(char *, uint64_t))(v21 + 8))(v20, v6);
    }
    else
    {
      if (v18 != v40)
      {
        (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
        goto LABEL_13;
      }
      (*(void (**)(char *, uint64_t))(v10 + 96))(v13, v9);
      v24 = swift_projectBox();
      v25 = v37;
      v26 = v38;
      v27 = v39;
      (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v37, v24, v39);
      v48 = sub_23FD746E4();
      v23 = v28;
      v29 = *(void (**)(char *, uint64_t))(v26 + 8);
      v6 = v36;
      v29(v25, v27);
    }
    swift_release();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_23FC9954C();
      v17 = v32;
    }
    v30 = *(_QWORD *)(v17 + 16);
    if (v30 >= *(_QWORD *)(v17 + 24) >> 1)
    {
      sub_23FC9954C();
      v17 = v33;
    }
    *(_QWORD *)(v17 + 16) = v30 + 1;
    v31 = v17 + 16 * v30;
    *(_QWORD *)(v31 + 32) = v48;
    *(_QWORD *)(v31 + 40) = v23;
    v10 = v43;
    v9 = v44;
LABEL_13:
    v15 += v46;
    --v14;
  }
  while (v14);
  swift_bridgeObjectRelease();
  return v17;
}

void sub_23FD4A58C(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  int64_t v31;
  unint64_t v32;
  int v33;
  unint64_t v34;
  unint64_t v35;
  int64_t v36;
  unint64_t v37;
  int64_t v38;
  char v39;
  char v40;
  uint64_t v41;
  int64_t v42;
  void (*v43)(char *, unint64_t, uint64_t);
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _DWORD v69[2];
  uint64_t v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  int64_t v88;
  int v89;
  _QWORD v90[6];

  v76 = a5;
  v69[1] = a2;
  v72 = a1;
  v75 = sub_23FD74474();
  v74 = *(_QWORD *)(v75 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v6, v7);
  sub_23FBFEFE0();
  v71 = v8;
  sub_23FC10050();
  v9 = sub_23FD74714();
  v79 = *(_QWORD *)(v9 - 8);
  v80 = v9;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v10, v11);
  sub_23FBFEFE0();
  v77 = v12;
  sub_23FC10050();
  v13 = sub_23FD74744();
  v81 = *(_QWORD *)(v13 - 8);
  v82 = v13;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v14, v15);
  sub_23FBFEFE0();
  v78 = v16;
  sub_23FC10050();
  v17 = sub_23FD74798();
  v18 = *(_QWORD *)(v17 - 8);
  v20 = MEMORY[0x24BDAC7A8](v17, v19);
  v22 = (char *)v69 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v20, v23);
  v26 = (char *)v69 - v25;
  MEMORY[0x24BDAC7A8](v24, v27);
  v29 = (char *)v69 - v28;
  sub_23FCCB7C8(a3, v90);
  v30 = v90[0];
  v31 = v90[3];
  v32 = v90[4];
  v87 = v90[1];
  v88 = (unint64_t)(v90[2] + 64) >> 6;
  v33 = *MEMORY[0x24BEB99E0];
  v89 = *MEMORY[0x24BEB99B0];
  v70 = a3;
  swift_bridgeObjectRetain_n();
  v86 = MEMORY[0x24BEE4AF8];
  while (1)
  {
    if (v32)
    {
      v34 = __clz(__rbit64(v32));
      v32 &= v32 - 1;
      v35 = v34 | (v31 << 6);
      goto LABEL_26;
    }
    v36 = v31 + 1;
    if (__OFADD__(v31, 1))
    {
      __break(1u);
      return;
    }
    if (v36 >= v88)
      goto LABEL_36;
    v37 = *(_QWORD *)(v87 + 8 * v36);
    v38 = v31 + 1;
    if (!v37)
    {
      sub_23FD4BBE0();
      if (v39 == v40)
        goto LABEL_36;
      sub_23FD4BBD4();
      if (!v37)
      {
        sub_23FD4BBE0();
        if (v39 == v40)
          goto LABEL_36;
        sub_23FD4BBD4();
        if (!v37)
        {
          sub_23FD4BBE0();
          if (v39 == v40)
            goto LABEL_36;
          sub_23FD4BBD4();
          if (!v37)
          {
            sub_23FD4BBE0();
            if (v39 == v40)
              goto LABEL_36;
            sub_23FD4BBD4();
            if (!v37)
            {
              v38 = v41 + 5;
              if (v41 + 5 >= v88)
                goto LABEL_36;
              v37 = *(_QWORD *)(v87 + 8 * v38);
              if (!v37)
                break;
            }
          }
        }
      }
    }
LABEL_25:
    v32 = (v37 - 1) & v37;
    v35 = __clz(__rbit64(v37)) + (v38 << 6);
    v31 = v38;
LABEL_26:
    v43 = *(void (**)(char *, unint64_t, uint64_t))(v18 + 16);
    v43(v29, *(_QWORD *)(v30 + 56) + *(_QWORD *)(v18 + 72) * v35, v17);
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v26, v29, v17);
    v43(v22, (unint64_t)v26, v17);
    v44 = sub_23FBFF204((uint64_t)v22, *(uint64_t (**)(uint64_t, uint64_t))(v18 + 88));
    if (v44 == v33)
    {
      sub_23FBFF204((uint64_t)v22, *(uint64_t (**)(uint64_t, uint64_t))(v18 + 96));
      v45 = sub_23FD4BB9C();
      v46 = v78;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v81 + 16))(v78, v45, v82);
      v47 = sub_23FD746E4();
      v84 = v48;
      v85 = v47;
      v50 = v81;
      v49 = v82;
      goto LABEL_31;
    }
    if (v44 == v89)
    {
      sub_23FBFF204((uint64_t)v22, *(uint64_t (**)(uint64_t, uint64_t))(v18 + 96));
      v51 = sub_23FD4BB9C();
      v46 = v77;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v79 + 16))(v77, v51, v80);
      v52 = sub_23FD746E4();
      v84 = v53;
      v85 = v52;
      v50 = v79;
      v49 = v80;
LABEL_31:
      (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v46, v49);
      swift_release();
      sub_23FBFF204((uint64_t)v26, *(uint64_t (**)(uint64_t, uint64_t))(v18 + 8));
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23FD4BB68();
        v86 = v59;
      }
      v54 = *(_QWORD *)(v86 + 16);
      v55 = v54 + 1;
      if (v54 >= *(_QWORD *)(v86 + 24) >> 1)
      {
        v83 = v54 + 1;
        sub_23FC9954C();
        v55 = v83;
        v86 = v60;
      }
      v56 = v86;
      *(_QWORD *)(v86 + 16) = v55;
      v57 = v56 + 16 * v54;
      v58 = v84;
      *(_QWORD *)(v57 + 32) = v85;
      *(_QWORD *)(v57 + 40) = v58;
    }
    else
    {
      sub_23FBFF178((uint64_t)v22);
      sub_23FBFF178((uint64_t)v26);
    }
  }
  v42 = v31 + 7;
  while (v42 < v88)
  {
    v37 = *(_QWORD *)(v87 + 8 * v42++);
    if (v37)
    {
      v38 = v42 - 1;
      goto LABEL_25;
    }
  }
LABEL_36:
  swift_bridgeObjectRelease();
  swift_release();
  v61 = sub_23FC8064C(v86);
  v62 = v76;
  v63 = v73;
  v64 = sub_23FD4AAB4(v76);
  sub_23FD4BBA8(v71, v63, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v74 + 16));
  if ((v72 & 1) != 0)
  {
    sub_23FD4BB8C();
LABEL_39:
    swift_bridgeObjectRelease();
    return;
  }
  v65 = sub_23FD7445C();
  sub_23FD4BB8C();
  if ((v65 & 1) != 0 || !v62 || !*(_QWORD *)(v61 + 16) || (v64 & 1) == 0)
    goto LABEL_39;
  sub_23FD4ACC8(v62);
  v67 = sub_23FD4A288(v66);
  swift_bridgeObjectRelease();
  v68 = sub_23FC8064C(v67);
  sub_23FD4B4A0(v68, v61);
  swift_bridgeObjectRelease();
  swift_release();
}

uint64_t sub_23FD4AAB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v23;

  v3 = sub_23FD74474();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3, v5);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23FBFD684(&qword_256F65698);
  v10 = MEMORY[0x24BDAC7A8](v8, v9);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10, v13);
  v15 = (char *)&v23 - v14;
  sub_23FD7442C();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v1, v3);
  v16 = sub_23FD74924();
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v12, 1, v16) == 1)
  {
    sub_23FD74408();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v15, 0, 1, v16);
    sub_23FC6233C((uint64_t)v12, &qword_256F65698);
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v15, 1, v16) == 1)
    {
      sub_23FC6233C((uint64_t)v15, &qword_256F65698);
      LOBYTE(a1) = 0;
      return a1 & 1;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v15, v12, v16);
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v15, 0, 1, v16);
  }
  v17 = sub_23FD74918();
  v19 = v18;
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  if (a1)
  {
    sub_23FD4B04C(a1);
    sub_23FC7F9F8(v17, v19, v20);
    LOBYTE(a1) = v21;
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return a1 & 1;
}

void sub_23FD4ACC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  void (*v54)(char *, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v3 = sub_23FD723B0();
  v65 = *(_QWORD *)(v3 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v4, v5);
  sub_23FBFEFE0();
  v64 = v6;
  v7 = sub_23FD4BBBC();
  v63 = *(_QWORD *)(v7 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v8, v9);
  sub_23FBFEFCC();
  v52 = v10;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v11, v12);
  sub_23FBFF218();
  v62 = v13;
  sub_23FBFD684(&qword_256F5EB98);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v14, v15);
  sub_23FC8FD1C();
  v16 = sub_23FD74798();
  v61 = *(_QWORD *)(v16 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v17, v18);
  sub_23FBFEFCC();
  v60 = v19;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v20, v21);
  sub_23FBFF218();
  v51 = v22;
  v23 = sub_23FD4BBC8();
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23, v25);
  v27 = (char *)&v49 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = *(_QWORD *)(a1 + 16);
  if (v28)
  {
    v29 = a1 + ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80));
    v30 = *(_QWORD *)(v24 + 72);
    v54 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 16);
    v55 = v30;
    v53 = *MEMORY[0x24BE572E8];
    v49 = a1;
    swift_bridgeObjectRetain();
    v66 = MEMORY[0x24BEE4AF8];
    v58 = v23;
    v59 = v3;
    v50 = v7;
    v56 = v16;
    v57 = v24;
    do
    {
      v31 = v1;
      v54(v27, v29, v23);
      v32 = v62;
      sub_23FD73ACC();
      v33 = v64;
      sub_23FD72404();
      v34 = (uint64_t)v27;
      v35 = *(void (**)(uint64_t, uint64_t))(v63 + 8);
      v35(v32, v7);
      v36 = v7;
      v37 = v65;
      v38 = sub_23FBFF204(v33, *(uint64_t (**)(uint64_t, uint64_t))(v65 + 88));
      sub_23FBFF204(v33, *(uint64_t (**)(uint64_t, uint64_t))(v37 + 8));
      if (v38 == v53)
      {
        v39 = v52;
        sub_23FD73ACC();
        v1 = v31;
        sub_23FD723F8();
        v35(v39, v36);
        v7 = v36;
        v40 = v56;
      }
      else
      {
        v1 = v31;
        v41 = v31;
        v40 = v56;
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v41, 1, 1, v56);
        v7 = v36;
      }
      v23 = v58;
      sub_23FBFF204(v34, *(uint64_t (**)(uint64_t, uint64_t))(v57 + 8));
      v27 = (char *)v34;
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v1, 1, v40) == 1)
      {
        sub_23FC6233C(v1, &qword_256F5EB98);
      }
      else
      {
        v42 = v51;
        sub_23FD4BBB4(v51, v1);
        sub_23FD4BBB4(v60, v42);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        {
          v43 = v66;
        }
        else
        {
          sub_23FC998D4();
          v43 = v47;
        }
        v45 = *(_QWORD *)(v43 + 16);
        v44 = *(_QWORD *)(v43 + 24);
        if (v45 >= v44 >> 1)
        {
          sub_23FCA6D20(v44);
          sub_23FC998D4();
          v43 = v48;
        }
        *(_QWORD *)(v43 + 16) = v45 + 1;
        v46 = (*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
        v66 = v43;
        sub_23FD4BBB4(v43 + v46 + *(_QWORD *)(v61 + 72) * v45, v60);
        v7 = v50;
        v27 = (char *)v34;
      }
      v29 += v55;
      --v28;
    }
    while (v28);
    swift_bridgeObjectRelease();
  }
  sub_23FC060D4();
}

void sub_23FD4B04C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t);
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (**v41)(uint64_t, uint64_t);
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD v62[2];
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  char *v75;
  uint64_t v76;
  int v77;
  void (*v78)(uint64_t, uint64_t, uint64_t);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;

  v65 = sub_23FD7475C();
  v64 = *(_QWORD *)(v65 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v3, v4);
  sub_23FBFEFE0();
  v63 = v5;
  sub_23FBFD684(&qword_256F5EB98);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23FD74768();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10, v12);
  sub_23FBFEFCC();
  v71 = v13;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v14, v15);
  sub_23FBFF218();
  v70 = v16;
  sub_23FC10050();
  v17 = sub_23FD723B0();
  v83 = *(_QWORD *)(v17 - 8);
  v84 = v17;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v18, v19);
  sub_23FBFEFE0();
  v81 = v20;
  v85 = sub_23FD4BBBC();
  v82 = *(_QWORD *)(v85 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v21, v22);
  sub_23FBFEFCC();
  v76 = v23;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v24, v25);
  sub_23FBFF218();
  v80 = v26;
  v27 = sub_23FD4BBC8();
  v28 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27, v29);
  sub_23FC8FD1C();
  v30 = *(_QWORD *)(a1 + 16);
  if (!v30)
  {
    v61 = MEMORY[0x24BEE4AF8];
    goto LABEL_20;
  }
  v69 = v11;
  v72 = v10;
  v75 = v9;
  v31 = a1 + ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80));
  v32 = *(_QWORD *)(v28 + 72);
  v78 = *(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16);
  v79 = v32;
  v77 = *MEMORY[0x24BE57298];
  v74 = *MEMORY[0x24BEB9A00];
  v68 = *MEMORY[0x24BEB9910];
  v62[1] = a1;
  swift_bridgeObjectRetain();
  v73 = MEMORY[0x24BEE4AF8];
  do
  {
    v78(v1, v31, v27);
    v33 = v80;
    sub_23FD73ACC();
    v34 = v81;
    sub_23FD72404();
    v35 = *(void (**)(uint64_t, uint64_t))(v82 + 8);
    v35(v33, v85);
    v36 = v83;
    v37 = sub_23FBFF204(v34, *(uint64_t (**)(uint64_t, uint64_t))(v83 + 88));
    sub_23FBFF204(v34, *(uint64_t (**)(uint64_t, uint64_t))(v36 + 8));
    if (v37 != v77)
      goto LABEL_15;
    v38 = v76;
    sub_23FD73ACC();
    v39 = (uint64_t)v75;
    sub_23FD723F8();
    v35(v38, v85);
    v40 = sub_23FD74798();
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v39, 1, v40) == 1)
    {
      sub_23FC6233C(v39, &qword_256F5EB98);
LABEL_15:
      sub_23FD4BB7C();
      goto LABEL_16;
    }
    v41 = *(uint64_t (***)(uint64_t, uint64_t))(v40 - 8);
    v42 = v41[11](v39, v40);
    if (v42 != v74)
    {
      sub_23FC10198(v41[1]);
      goto LABEL_15;
    }
    sub_23FC10198(v41[12]);
    v43 = swift_projectBox();
    v45 = v69;
    v44 = v70;
    v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(v69 + 16);
    v47 = v72;
    v46(v70, v43, v72);
    swift_release();
    v48 = v71;
    v46(v71, v44, v47);
    v49 = v48;
    v50 = sub_23FBFF204(v48, *(uint64_t (**)(uint64_t, uint64_t))(v45 + 88));
    if (v50 != v68)
    {
      sub_23FBFF178(v44);
      sub_23FBFF178(v48);
      goto LABEL_15;
    }
    sub_23FBFF204(v48, *(uint64_t (**)(uint64_t, uint64_t))(v45 + 96));
    v51 = v64;
    v52 = v63;
    sub_23FD4BBA8(v63, v49, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v64 + 32));
    v66 = sub_23FD74750();
    v67 = v53;
    (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v52, v49);
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v44, v72);
    sub_23FD4BB7C();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
    {
      v54 = v73;
    }
    else
    {
      sub_23FD4BB68();
      v54 = v59;
    }
    v56 = *(_QWORD *)(v54 + 16);
    v55 = *(_QWORD *)(v54 + 24);
    if (v56 >= v55 >> 1)
    {
      sub_23FCA6D20(v55);
      sub_23FC9954C();
      v54 = v60;
    }
    *(_QWORD *)(v54 + 16) = v56 + 1;
    v73 = v54;
    v57 = v54 + 16 * v56;
    v58 = v67;
    *(_QWORD *)(v57 + 32) = v66;
    *(_QWORD *)(v57 + 40) = v58;
LABEL_16:
    v31 += v79;
    --v30;
  }
  while (v30);
  swift_bridgeObjectRelease();
  v61 = v73;
LABEL_20:
  sub_23FC8064C(v61);
  sub_23FC060D4();
}

uint64_t sub_23FD4B4A0(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3;
  char v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD v10[2];

  v3 = isStackAllocationSafe;
  v10[1] = *MEMORY[0x24BDAC8D0];
  v4 = *(_BYTE *)(a2 + 32);
  v5 = (unint64_t)((1 << v4) + 63) >> 6;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe, a2);
    v6 = (_QWORD *)((char *)v10 - ((8 * v5 + 15) & 0x3FFFFFFFFFFFFFF0));
    sub_23FC855F0(0, v5, v6);
    v7 = sub_23FD4B62C((uint64_t)v6, v5, a2, v3);
    swift_release();
  }
  else
  {
    v8 = (_QWORD *)swift_slowAlloc();
    sub_23FC855F0(0, v5, v8);
    v7 = sub_23FD4B62C((uint64_t)v8, v5, a2, v3);
    swift_release();
    MEMORY[0x2426798D8](v8, -1, -1);
  }
  return v7;
}

uint64_t sub_23FD4B62C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  BOOL v27;
  uint64_t v28;
  unint64_t i;
  unint64_t v30;
  _QWORD *v31;
  BOOL v32;
  BOOL v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  int64_t v41;
  unint64_t v42;
  int64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  BOOL v52;
  uint64_t v53;
  _QWORD *v54;
  BOOL v55;
  unint64_t *v57;
  uint64_t v58;
  int64_t v59;
  uint64_t v60;
  uint64_t v61;
  int64_t v62;
  int64_t v63;

  v4 = a4;
  v5 = a3;
  v57 = (unint64_t *)result;
  if (*(_QWORD *)(a4 + 16) >= *(_QWORD *)(a3 + 16))
  {
    v34 = 0;
    v60 = a3 + 56;
    v61 = 0;
    v35 = 1 << *(_BYTE *)(a3 + 32);
    if (v35 < 64)
      v36 = ~(-1 << v35);
    else
      v36 = -1;
    v37 = v36 & *(_QWORD *)(a3 + 56);
    v63 = (unint64_t)(v35 + 63) >> 6;
    v38 = a4 + 56;
    while (1)
    {
      while (1)
      {
        if (v37)
        {
          v39 = __clz(__rbit64(v37));
          v37 &= v37 - 1;
          v40 = v39 | (v34 << 6);
        }
        else
        {
          v41 = v34 + 1;
          if (__OFADD__(v34, 1))
          {
LABEL_81:
            __break(1u);
LABEL_82:
            __break(1u);
LABEL_83:
            __break(1u);
            goto LABEL_84;
          }
          if (v41 >= v63)
            goto LABEL_79;
          v42 = *(_QWORD *)(v60 + 8 * v41);
          ++v34;
          if (!v42)
          {
            v34 = v41 + 1;
            if (v41 + 1 >= v63)
              goto LABEL_79;
            v42 = *(_QWORD *)(v60 + 8 * v34);
            if (!v42)
            {
              v34 = v41 + 2;
              if (v41 + 2 >= v63)
                goto LABEL_79;
              v42 = *(_QWORD *)(v60 + 8 * v34);
              if (!v42)
              {
                v43 = v41 + 3;
                if (v43 >= v63)
                  goto LABEL_79;
                v42 = *(_QWORD *)(v60 + 8 * v43);
                if (!v42)
                {
                  while (1)
                  {
                    v34 = v43 + 1;
                    if (__OFADD__(v43, 1))
                      goto LABEL_85;
                    if (v34 >= v63)
                      break;
                    v42 = *(_QWORD *)(v60 + 8 * v34);
                    ++v43;
                    if (v42)
                      goto LABEL_61;
                  }
LABEL_79:
                  swift_retain();
                  return sub_23FD53D90(v57, a2, v61, v5);
                }
                v34 = v43;
              }
            }
          }
LABEL_61:
          v37 = (v42 - 1) & v42;
          v40 = __clz(__rbit64(v42)) + (v34 << 6);
        }
        v44 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v40);
        v46 = *v44;
        v45 = v44[1];
        sub_23FD7544C();
        swift_bridgeObjectRetain();
        sub_23FD74C30();
        v47 = sub_23FD75470();
        v48 = -1 << *(_BYTE *)(v4 + 32);
        v49 = v47 & ~v48;
        if (((*(_QWORD *)(v38 + ((v49 >> 3) & 0xFFFFFFFFFFFFF8)) >> v49) & 1) != 0)
          break;
LABEL_78:
        result = swift_bridgeObjectRelease();
        v5 = a3;
        v4 = a4;
      }
      v50 = *(_QWORD *)(a4 + 48);
      v51 = (_QWORD *)(v50 + 16 * v49);
      v52 = *v51 == v46 && v51[1] == v45;
      if (!v52 && (sub_23FD75380() & 1) == 0)
      {
        v53 = ~v48;
        do
        {
          v49 = (v49 + 1) & v53;
          if (((*(_QWORD *)(v38 + ((v49 >> 3) & 0xFFFFFFFFFFFFF8)) >> v49) & 1) == 0)
            goto LABEL_78;
          v54 = (_QWORD *)(v50 + 16 * v49);
          v55 = *v54 == v46 && v54[1] == v45;
        }
        while (!v55 && (sub_23FD75380() & 1) == 0);
      }
      result = swift_bridgeObjectRelease();
      *(unint64_t *)((char *)v57 + ((v40 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v40;
      v33 = __OFADD__(v61++, 1);
      v5 = a3;
      v4 = a4;
      if (v33)
        goto LABEL_83;
    }
  }
  v6 = 0;
  v58 = a4 + 56;
  v7 = 1 << *(_BYTE *)(a4 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  v59 = (unint64_t)(v7 + 63) >> 6;
  v61 = 0;
  v10 = a3 + 56;
  while (1)
  {
    if (v9)
    {
      v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v62 = v6;
      v12 = v11 | (v6 << 6);
      goto LABEL_22;
    }
    v13 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_81;
    }
    if (v13 >= v59)
      goto LABEL_79;
    v14 = *(_QWORD *)(v58 + 8 * v13);
    v15 = v6 + 1;
    if (!v14)
    {
      v15 = v6 + 2;
      if (v6 + 2 >= v59)
        goto LABEL_79;
      v14 = *(_QWORD *)(v58 + 8 * v15);
      if (!v14)
      {
        v15 = v6 + 3;
        if (v6 + 3 >= v59)
          goto LABEL_79;
        v14 = *(_QWORD *)(v58 + 8 * v15);
        if (!v14)
          break;
      }
    }
LABEL_21:
    v9 = (v14 - 1) & v14;
    v62 = v15;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
LABEL_22:
    v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    v19 = *v17;
    v18 = v17[1];
    sub_23FD7544C();
    swift_bridgeObjectRetain();
    sub_23FD74C30();
    v20 = sub_23FD75470();
    v21 = -1 << *(_BYTE *)(v5 + 32);
    v22 = v20 & ~v21;
    v23 = v22 >> 6;
    v24 = 1 << v22;
    if (((1 << v22) & *(_QWORD *)(v10 + 8 * (v22 >> 6))) == 0)
      goto LABEL_36;
    v25 = *(_QWORD *)(a3 + 48);
    v26 = (_QWORD *)(v25 + 16 * v22);
    v27 = *v26 == v19 && v26[1] == v18;
    if (v27 || (sub_23FD75380() & 1) != 0)
    {
      result = swift_bridgeObjectRelease();
LABEL_38:
      v6 = v62;
      v5 = a3;
      v57[v23] |= v24;
      v33 = __OFADD__(v61++, 1);
      v4 = a4;
      if (v33)
        goto LABEL_82;
    }
    else
    {
      v28 = ~v21;
      for (i = v22 + 1; ; i = v30 + 1)
      {
        v30 = i & v28;
        if (((*(_QWORD *)(v10 + (((i & v28) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v28)) & 1) == 0)
          break;
        v31 = (_QWORD *)(v25 + 16 * v30);
        v32 = *v31 == v19 && v31[1] == v18;
        if (v32 || (sub_23FD75380() & 1) != 0)
        {
          result = swift_bridgeObjectRelease();
          v23 = v30 >> 6;
          v24 = 1 << v30;
          goto LABEL_38;
        }
      }
LABEL_36:
      result = swift_bridgeObjectRelease();
      v6 = v62;
      v5 = a3;
      v4 = a4;
    }
  }
  v16 = v6 + 4;
  if (v6 + 4 >= v59)
    goto LABEL_79;
  v14 = *(_QWORD *)(v58 + 8 * v16);
  if (v14)
  {
    v15 = v6 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v59)
      goto LABEL_79;
    v14 = *(_QWORD *)(v58 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_21;
  }
LABEL_84:
  __break(1u);
LABEL_85:
  __break(1u);
  return result;
}

void sub_23FD4BB68()
{
  sub_23FC9954C();
}

uint64_t sub_23FD4BB7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
}

uint64_t sub_23FD4BB8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t sub_23FD4BB9C()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 192) = *v0;
  return swift_projectBox();
}

uint64_t sub_23FD4BBA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, _QWORD)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, *(_QWORD *)(v3 - 256));
}

uint64_t sub_23FD4BBB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t sub_23FD4BBBC()
{
  return sub_23FD72410();
}

uint64_t sub_23FD4BBC8()
{
  return sub_23FD73AD8();
}

void sub_23FD4BBEC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  sub_23FD73C7C();
  if (v3 <= 0x3F)
  {
    type metadata accessor for ToolExecutionEvent(255, *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 96), v2);
    sub_23FD75038();
    if (v4 <= 0x3F)
    {
      sub_23FD27F24(319, &qword_256F65760, (void (*)(uint64_t))type metadata accessor for ResultResponse);
      if (v5 <= 0x3F)
      {
        swift_checkMetadataState();
        if (v6 <= 0x3F)
          swift_initClassMetadata2();
      }
    }
  }
}

uint64_t sub_23FD4BCEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23FD4BEC8(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BE53BB8], a2);
}

uint64_t sub_23FD4BCF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23FD4BEC8(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BE56CD0], a2);
}

uint64_t sub_23FD4BD04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a1 + 16);
  sub_23FBFD684(&qword_256F5F578);
  if (v4)
  {
    sub_23FD59D30();
    sub_23FC12E68(a1 + v5, a2, &qword_256F5F578);
  }
  v6 = sub_23FD59C04();
  return sub_23FC0608C(v6, v7, v8, v9);
}

uint64_t sub_23FD4BD64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23FD4BDEC(a1, type metadata accessor for RetrievedValue, a2);
}

uint64_t sub_23FD4BD70(uint64_t a1)
{
  uint64_t result;
  int v3;
  char v4;

  result = sub_23FD54DC4(a1);
  if ((v4 & 1) != 0)
    goto LABEL_7;
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  if (result == 1 << *(_BYTE *)(a1 + 32))
    return 0;
  else
    return sub_23FD54C3C(result, v3, 0, a1);
}

uint64_t sub_23FD4BDD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23FD4BEC8(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BE55EE8], a2);
}

uint64_t sub_23FD4BDE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23FD4BDEC(a1, _s19SystemResponseEventVMa, a2);
}

uint64_t sub_23FD4BDEC@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = *(_QWORD *)(a1 + 16);
  sub_23FD59D00(a1, a2);
  if (v6)
  {
    sub_23FD59D30();
    sub_23FC12ECC(a1 + v7, a3, a2);
  }
  v8 = sub_23FD59C04();
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v8, v9, v10, v11);
}

uint64_t sub_23FD4BE54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23FD4BEC8(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BE557B8], a2);
}

void sub_23FD4BE60(uint64_t a1)
{
  uint64_t v2;
  int v3;
  char v4;

  v2 = sub_23FD54DC4(a1);
  if ((v4 & 1) != 0)
    goto LABEL_7;
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return;
  }
  if (v2 != 1 << *(_BYTE *)(a1 + 32))
    sub_23FD54CB0(v2, v3, 0, a1);
  sub_23FBFF0A0();
}

uint64_t sub_23FD4BEBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23FD4BEC8(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BEB9A18], a2);
}

uint64_t sub_23FD4BEC8@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(a1 + 16);
  sub_23FD59D00(a1, a2);
  if (v5)
  {
    sub_23FC764E0();
    sub_23FC93224(a3, a1 + v6, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 16));
  }
  v8 = sub_23FD59C04();
  return sub_23FC0608C(v8, v9, v10, v11);
}

void sub_23FD4BF20(uint64_t a1, uint64_t a2, __int128 *a3)
{
  swift_allocObject();
  sub_23FD4C818(a1, a2, a3);
  sub_23FC09258();
}

void sub_23FD4BF6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  char *v5;

  sub_23FD59A94();
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v0, v1);
  sub_23FC061D8();
  v2 = sub_23FC5E880();
  sub_23FC12ECC(v2, v3, v4);
  sub_23FBFF1AC();
  v5 = (char *)sub_23FD4BFD0 + 4 * byte_23FD82C90[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_23FD4BFD0()
{
  uint64_t v0;

  v0 = sub_23FC76818();
  sub_23FBFF0E4(v0);
  sub_23FC09258();
}

void sub_23FD4C028()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  char *v7;
  uint64_t v8;

  v1 = sub_23FC76818();
  MEMORY[0x24BDAC7A8](v1, v2);
  sub_23FD599FC();
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v3, v4);
  sub_23FC12ECC(v0, (uint64_t)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  v7 = (char *)sub_23FD4C0EC + 4 * byte_23FD82C94[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23FD4C0EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t inited;
  uint64_t *v5;
  uint64_t v6;

  sub_23FC93224(v1, v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32));
  sub_23FBFD684((uint64_t *)&unk_256F5F208);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23FD769D0;
  *(_QWORD *)(inited + 32) = 0x65756C6176;
  *(_QWORD *)(inited + 40) = 0xE500000000000000;
  *(_QWORD *)(inited + 72) = v0;
  v5 = sub_23FBFDDEC((uint64_t *)(inited + 48));
  sub_23FC93224((uint64_t)v5, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
  v6 = sub_23FD74B40();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v0);
  return v6;
}

void sub_23FD4C2F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  _QWORD v24[4];

  v5 = sub_23FC76818();
  v24[2] = *(_QWORD *)(v5 - 8);
  v24[3] = v5;
  MEMORY[0x24BDAC7A8](v5, v6);
  sub_23FBFEFCC();
  v24[1] = v7;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v8, v9);
  v24[0] = (char *)v24 - v10;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v11, v12);
  sub_23FD599FC();
  sub_23FBFF168();
  v15 = MEMORY[0x24BDAC7A8](v13, v14);
  v17 = MEMORY[0x24BDAC7A8](v15, v16);
  MEMORY[0x24BDAC7A8](v17, v18);
  sub_23FBFD684(qword_256F65990);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v19, v20);
  sub_23FC061D8();
  v22 = v2 + *(int *)(v21 + 48);
  sub_23FC12ECC(a1, v2, type metadata accessor for DialogResponseError);
  sub_23FC12ECC(a2, v22, type metadata accessor for DialogResponseError);
  sub_23FCF2968();
  v23 = (char *)sub_23FD4C450 + 4 * byte_23FD82C98[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23FD4C450()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;

  sub_23FC12ECC(v0, v2, type metadata accessor for DialogResponseError);
  if (sub_23FD59A2C())
  {
    v4 = (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 - 96) + 8))(v2, *(_QWORD *)(v3 - 88));
    sub_23FC7E2CC(v4, qword_256F65990);
    v5 = 0;
  }
  else
  {
    v6 = *(_QWORD *)(v3 - 96);
    v7 = *(_QWORD *)(v3 - 88);
    v8 = sub_23FC75FE0();
    v9(v8);
    sub_23FD59DAC();
    v5 = sub_23FD73C04();
    v10 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    v10(v1, v7);
    v11 = v10(v2, v7);
    sub_23FD59C14(v11, type metadata accessor for DialogResponseError);
  }
  return v5 & 1;
}

uint64_t sub_23FD4C694()
{
  sub_23FBFEE2C(&qword_256F65980, type metadata accessor for DialogResponseError, (uint64_t)&unk_23FD82F08);
  return sub_23FD753F8();
}

uint64_t sub_23FD4C6D4()
{
  sub_23FBFEE2C(&qword_256F65980, type metadata accessor for DialogResponseError, (uint64_t)&unk_23FD82F08);
  return sub_23FD753EC();
}

uint64_t sub_23FD4C718()
{
  uint64_t v0;

  v0 = qword_256F656A0;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_23FD4C754(unsigned __int8 a1)
{
  return a1 + 1;
}

uint64_t sub_23FD4C760()
{
  return sub_23FD74B40();
}

uint64_t sub_23FD4C788()
{
  sub_23FD59600();
  return sub_23FD753F8();
}

uint64_t sub_23FD4C7B0()
{
  sub_23FD59600();
  return sub_23FD753EC();
}

uint64_t sub_23FD4C7D8()
{
  uint64_t v0;

  v0 = qword_256F656B0;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_23FD4C80C()
{
  unsigned __int8 *v0;

  return sub_23FD4C754(*v0);
}

uint64_t **sub_23FD4C818(uint64_t a1, uint64_t a2, __int128 *a3)
{
  uint64_t **v3;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;

  v7 = *v3;
  swift_defaultActor_initialize();
  *((_BYTE *)v3 + qword_256F7F4E8) = 0;
  v8 = (uint64_t)v3 + (*v3)[17];
  v10 = type metadata accessor for ToolExecutionEvent(0, v7[10], v7[12], v9);
  sub_23FBFF0F8(v8, v11, v12, v10);
  v13 = (uint64_t)v3 + (*v3)[18];
  v14 = sub_23FC76578();
  sub_23FBFF0F8(v13, v15, v16, v14);
  v17 = (char *)v3 + qword_256F7F4E0;
  v18 = sub_23FC7E2FC();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17, a1, v18);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7[11] - 8) + 32))((char *)v3 + (*v3)[19], a2);
  sub_23FBFDE28(a3, (uint64_t)v3 + (*v3)[20]);
  return v3;
}

void sub_23FD4C908(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD v11[16];

  v11[15] = a5;
  v6 = type metadata accessor for ToolExecutionEvent(0, a2, a4, a4);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)v11 - v9, a1, v6);
  sub_23FC5E96C();
  v10 = (char *)sub_23FD4C9B4 + 4 * a0En[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_23FD4C9B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;

  sub_23FD5990C();
  *(_OWORD *)(v2 - 128) = *(_OWORD *)v1;
  *(_QWORD *)(v2 - 144) = *(_QWORD *)(v1 + 16);
  v3 = (int *)sub_23FBFD684(&qword_256F5EB20);
  v4 = v1 + v3[12];
  v5 = (uint64_t *)(v1 + v3[16]);
  v6 = *v5;
  *(_QWORD *)(v2 - 160) = v5[1];
  *(_QWORD *)(v2 - 152) = v6;
  v7 = (uint64_t *)(v1 + v3[20]);
  v8 = *v7;
  v9 = v7[1];
  sub_23FD599F4();
  v10 = (int *)sub_23FBFD684(&qword_256F5EC00);
  sub_23FC12DD8(v4, v0 + v10[12], &qword_256F5EB28);
  v11 = (_QWORD *)(v0 + v10[16]);
  v12 = (_QWORD *)(v0 + v10[20]);
  *(_OWORD *)v0 = *(_OWORD *)(v2 - 128);
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v2 - 144);
  v13 = *(_QWORD *)(v2 - 160);
  *v11 = *(_QWORD *)(v2 - 152);
  v11[1] = v13;
  *v12 = v8;
  v12[1] = v9;
  sub_23FD59848();
}

uint64_t sub_23FD4CA60()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23FD4CCE4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v3[46] = a2;
  v3[47] = v2;
  v3[45] = a1;
  v4 = (_QWORD *)*v2;
  v3[48] = sub_23FD599FC();
  v3[49] = sub_23FC5C13C();
  v3[50] = sub_23FC5C588();
  v3[51] = sub_23FC5C588();
  v5 = sub_23FD73EC8();
  v3[52] = v5;
  v3[53] = *(_QWORD *)(v5 - 8);
  v3[54] = sub_23FC0901C();
  v6 = sub_23FD73EF8();
  v3[55] = v6;
  v3[56] = *(_QWORD *)(v6 - 8);
  v3[57] = sub_23FC0901C();
  v7 = sub_23FD73E38();
  v3[58] = v7;
  v3[59] = *(_QWORD *)(v7 - 8);
  v3[60] = sub_23FC0901C();
  v8 = sub_23FD74510();
  v3[61] = v8;
  v3[62] = *(_QWORD *)(v8 - 8);
  v3[63] = sub_23FC0901C();
  v3[64] = sub_23FBFD684(&qword_256F5EB18);
  v3[65] = sub_23FC5C13C();
  v3[66] = sub_23FC5C588();
  v3[67] = sub_23FC5C588();
  sub_23FBFD684(&qword_256F5EB28);
  v3[68] = sub_23FC0901C();
  v9 = v4[10];
  v3[69] = v9;
  v10 = v4[12];
  v3[70] = v10;
  v12 = type metadata accessor for TypedValueExecutionResult(0, v9, v10, v11);
  v3[71] = v12;
  v3[72] = *(_QWORD *)(v12 - 8);
  v3[73] = sub_23FC0901C();
  v13 = sub_23FC10100();
  v3[74] = v13;
  v3[75] = *(_QWORD *)(v13 - 8);
  v3[76] = sub_23FD59AEC();
  v3[77] = sub_23FD59AEC();
  v3[78] = sub_23FD59AEC();
  v3[79] = sub_23FD59AEC();
  v3[80] = sub_23FD59AEC();
  v17 = sub_23FD59D18(0, v14, v15, v16);
  v3[81] = v17;
  v3[82] = *(_QWORD *)(v17 - 8);
  v3[83] = sub_23FD59A48();
  v3[84] = sub_23FD59A48();
  v3[85] = sub_23FD59A48();
  v3[86] = sub_23FD59A48();
  v3[87] = sub_23FD59A48();
  v3[88] = sub_23FD59A48();
  v3[89] = v4[13];
  v18 = v4[11];
  v3[90] = v18;
  v19 = sub_23FD59B24();
  v3[91] = v19;
  v3[92] = *(_QWORD *)(v19 - 8);
  v3[93] = swift_task_alloc();
  v3[94] = swift_task_alloc();
  v20 = sub_23FD59CF4();
  v3[95] = v20;
  v3[96] = *(_QWORD *)(v20 - 8);
  v3[97] = sub_23FC5C13C();
  v3[98] = sub_23FC5C588();
  v3[99] = sub_23FC5C588();
  v3[100] = *(_QWORD *)(v18 - 8);
  v3[101] = sub_23FC0901C();
  v21 = sub_23FD59B24();
  v3[102] = v21;
  v3[103] = *(_QWORD *)(v21 - 8);
  v3[104] = sub_23FC0901C();
  v22 = sub_23FC7E2FC();
  v3[105] = v22;
  v3[106] = *(_QWORD *)(v22 - 8);
  v3[107] = sub_23FC5C13C();
  v3[108] = sub_23FC5C588();
  sub_23FC09208();
  return swift_task_switch();
}

void sub_23FD4CFA0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;

  sub_23FC75564();
  v1 = v0[108];
  v2 = v0[106];
  v3 = v0[105];
  v4 = v0[101];
  v5 = v0[100];
  v6 = v0[90];
  v7 = v0[89];
  v15 = v0[70];
  v8 = v0[47];
  v9 = qword_256F7F4E0;
  v0[109] = qword_256F7F4E0;
  v10 = v8 + v9;
  v14 = v0[69];
  sub_23FC75394();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  v0[110] = v11;
  v11(v1, v10, v3);
  v0[111] = sub_23FD73C58();
  v0[112] = v12;
  v13 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8);
  v0[113] = v13;
  sub_23FC5B3B0(v1, v13);
  sub_23FC5A8C8(v4, v8 + *(_QWORD *)(*(_QWORD *)v8 + 152), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16));
  sub_23FD74EDC();
  v0[12] = v14;
  v0[13] = v6;
  v0[14] = v15;
  v0[15] = v7;
  type metadata accessor for ToolExecution();
}

uint64_t sub_23FD4D08C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v4;

  *(_QWORD *)(v1 + 912) = MEMORY[0x2426797E8](&unk_23FD82E68, a1);
  v3 = *v2;
  *(_QWORD *)(v1 + 920) = *(_QWORD *)(*v2 + 136);
  *(_QWORD *)(v1 + 928) = *(_QWORD *)(v3 + 144);
  sub_23FC75394();
  *(_DWORD *)(v1 + 1000) = *MEMORY[0x24BE56930];
  *(_DWORD *)(v1 + 1004) = *MEMORY[0x24BEB9198];
  sub_23FD599DC();
  *(_QWORD *)(v1 + 936) = swift_getAssociatedConformanceWitness();
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 944) = v4;
  sub_23FD59960(v4);
  return sub_23FD74DBC();
}

uint64_t sub_23FD4D144()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23FC5D3A4();
  sub_23FC75274(v2);
  *(_QWORD *)(v0 + 952) = v1;
  swift_task_dealloc();
  if (v1)
    swift_bridgeObjectRelease();
  return sub_23FC5A63C();
}

uint64_t sub_23FD4D1A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  NSObject *v9;
  os_log_type_t v10;
  _BOOL4 v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t);
  uint64_t v22;
  void (*v23)(uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34[3];

  v1 = *(_QWORD *)(v0 + 792);
  v2 = *(_QWORD *)(v0 + 648);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v1, 1, v2) != 1)
  {
    v4 = *(_QWORD *)(v0 + 704);
    v5 = *(_QWORD *)(v0 + 696);
    v6 = *(_QWORD *)(v0 + 656);
    v7 = *(NSObject **)(v0 + 640);
    sub_23FC06160(v4, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 32));
    sub_23FD724D0();
    v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
    *(_QWORD *)(v0 + 960) = v8;
    v8(v5, v4, v2);
    sub_23FD59CD8();
    v9 = v7;
    sub_23FD72BE4();
    v10 = sub_23FC75640();
    v11 = os_log_type_enabled(v9, v10);
    v12 = *(_QWORD *)(v0 + 896);
    if (v11)
    {
      v13 = *(_QWORD *)(v0 + 888);
      v14 = *(_QWORD *)(v0 + 688);
      v32 = *(_QWORD *)(v0 + 696);
      v33 = *(_QWORD *)(v0 + 656);
      v15 = *(_QWORD *)(v0 + 648);
      v16 = sub_23FBFEFF4();
      v34[0] = sub_23FBFEFF4();
      *(_DWORD *)v16 = 136315394;
      sub_23FC10108();
      *(_QWORD *)(v16 + 4) = sub_23FC9DC40(v13, v12, v34);
      sub_23FC75E60();
      *(_WORD *)(v16 + 12) = 2080;
      v8(v14, v32, v15);
      v17 = sub_23FD74C0C();
      *(_QWORD *)(v16 + 14) = sub_23FC5C074(v17, v18);
      sub_23FC15A24();
      (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v15);
      sub_23FD59CCC(&dword_23FBF8000, v9, v10, "ToolExecution: %s received dialog event %s");
      swift_arrayDestroy();
      sub_23FBFEFA0();
    }
    v19 = *(_QWORD *)(v0 + 656);
    v20 = *(_QWORD *)(v0 + 600);
    sub_23FC10048();
    v21 = *(void (**)(uint64_t))(v19 + 8);
    v22 = sub_23FCF2968();
    v21(v22);

    v23 = *(void (**)(uint64_t))(v20 + 8);
    v24 = sub_23FC75FE0();
    v23(v24);
    *(_QWORD *)(v0 + 976) = v21;
    *(_QWORD *)(v0 + 968) = v23;
    v25 = *(_QWORD *)(v0 + 784);
    v26 = *(_QWORD *)(v0 + 776);
    v27 = *(_QWORD *)(v0 + 768);
    v28 = *(_QWORD *)(v0 + 680);
    v29 = *(_QWORD *)(v0 + 376) + *(_QWORD *)(v0 + 920);
    v30 = *(_QWORD *)(v0 + 648);
    sub_23FD59D94(v25);
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v25, 0, 1, v30);
    sub_23FC06160(v26, v25, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27 + 32));
    sub_23FC59120();
    sub_23FD59D24(v29);
    sub_23FD59CE4();
    sub_23FD59D94(v28);
    v31 = (char *)sub_23FD4D590 + 4 * word_23FD82CA8[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  sub_23FD59AC4();
  sub_23FC1002C();
  sub_23FC75764();
  sub_23FBFEE2C(&qword_256F5EAC0, (uint64_t (*)(uint64_t))type metadata accessor for RuntimeError, (uint64_t)&unk_23FD78138);
  sub_23FC5A704();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  sub_23FD59C58();
  sub_23FD59874();
  sub_23FC5B2F4();
  sub_23FC5B980();
  sub_23FC5BCA0();
  sub_23FC090D0();
  sub_23FC090C0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5EFD4();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC5C438();
  sub_23FC5C430();
  sub_23FC5C428();
  sub_23FC5C420();
  sub_23FC5BFE8();
  sub_23FC5BFE0();
  sub_23FC5C980();
  sub_23FC5D834();
  sub_23FC5E0B8();
  sub_23FC5E0B0();
  sub_23FC5E0A8();
  sub_23FC5E0A0();
  sub_23FC5D914();
  sub_23FC5D7D8();
  sub_23FC5D7D0();
  sub_23FC5EC14();
  return sub_23FC89F70(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FD4D590()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  v1 = *(void **)(*(_QWORD *)(v0 + 680) + 16);
  swift_release();
  sub_23FC15A24();
  sub_23FC1002C();

  swift_bridgeObjectRelease();
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 880))(*(_QWORD *)(v0 + 856), *(_QWORD *)(v0 + 376) + *(_QWORD *)(v0 + 872), *(_QWORD *)(v0 + 840));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 984) = v2;
  *v2 = v0;
  v2[1] = sub_23FD4E0FC;
  sub_23FD59C1C();
  return sub_23FD50F88(v3, v4, v5);
}

void sub_23FD4D744()
{
  _QWORD *v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)(v2 - 104) = v0[119];
  v3 = v0[89];
  *(_QWORD *)(v2 - 128) = v0[90];
  *(_QWORD *)(v2 - 120) = v3;
  v4 = v0[88];
  v5 = v0[84];
  v6 = v0[81];
  v7 = v0[70];
  v8 = v0[69];
  swift_bridgeObjectRelease();
  swift_release();
  sub_23FC15A24();
  v1(v5, v4, v6);
  v9 = v8;
  v10 = *(_QWORD *)(v2 - 104);
  sub_23FD4C908(v5, v9, *(_QWORD *)(v2 - 128), v7, *(_QWORD *)(v2 - 120));
  v11 = v0[103];
  sub_23FD599AC();
  sub_23FC0A014(*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
  *(_QWORD *)(v2 - 104) = v10;
  if (!v10)
  {
    sub_23FD5963C();
    sub_23FC5B2D4();
    sub_23FC5B2F4();
    sub_23FC5B980();
    sub_23FC5BCA0();
    sub_23FC090D0();
    sub_23FC090C0();
    sub_23FC5A574();
    sub_23FC5AB04();
    sub_23FC5AC3C();
    sub_23FC5D050();
    sub_23FC5D048();
    sub_23FC5D040();
    sub_23FC5C988();
    sub_23FC5C440();
    sub_23FC5C438();
    sub_23FC5C430();
    sub_23FC5C428();
    sub_23FC5C420();
    sub_23FC5BFE8();
    sub_23FC5BFE0();
    sub_23FC5C980();
    sub_23FC5D834();
    sub_23FC5E0B8();
    sub_23FC5E0B0();
    sub_23FC5E0A8();
    sub_23FC5E0A0();
    sub_23FC5D914();
    sub_23FC5D7D8();
    sub_23FC5D7D0();
    sub_23FC5EC14();
    sub_23FC5DC9C();
    sub_23FC5C528();
    JUMPOUT(0x23FD4D2D4);
  }
  JUMPOUT(0x23FD4D240);
}

uint64_t sub_23FD4E0FC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23FC5D3A4();
  sub_23FC75274(v2);
  *(_QWORD *)(v0 + 992) = v1;
  swift_task_dealloc();
  (*(void (**)(_QWORD, _QWORD))(v0 + 904))(*(_QWORD *)(v0 + 856), *(_QWORD *)(v0 + 840));
  return sub_23FC5A63C();
}

uint64_t sub_23FD4E160()
{
  uint64_t v0;
  _QWORD *v1;

  (*(void (**)(_QWORD, _QWORD))(v0 + 976))(*(_QWORD *)(v0 + 704), *(_QWORD *)(v0 + 648));
  sub_23FD599DC();
  *(_QWORD *)(v0 + 936) = swift_getAssociatedConformanceWitness();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 944) = v1;
  sub_23FD59960(v1);
  return sub_23FD74DBC();
}

uint64_t sub_23FD4E1E0()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 736) + 32);
  v1(*(_QWORD *)(v0 + 744), *(_QWORD *)(v0 + 752), *(_QWORD *)(v0 + 728));
  sub_23FC5E880();
  swift_getAssociatedConformanceWitness();
  sub_23FC5A8DC();
  v2 = sub_23FD7535C();
  v3 = *(_QWORD *)(v0 + 744);
  if (v2)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 736) + 8))(v3, *(_QWORD *)(v0 + 728));
  }
  else
  {
    v4 = *(_QWORD *)(v0 + 728);
    sub_23FC5A704();
    v1(v5, v3, v4);
  }
  sub_23FD59AC4();
  swift_task_dealloc();
  sub_23FC090D0();
  sub_23FC5B980();
  sub_23FC5BCA0();
  sub_23FC090C0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  sub_23FC5EFD4();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC5C438();
  sub_23FC5C430();
  sub_23FC5C428();
  sub_23FC5C420();
  sub_23FC5BFE8();
  sub_23FC5BFE0();
  sub_23FC5C980();
  sub_23FC5D834();
  sub_23FC5E0B8();
  sub_23FC5E0B0();
  sub_23FC5E0A8();
  sub_23FC5D7D8();
  sub_23FC5D7D0();
  sub_23FC5EC14();
  sub_23FC5DC9C();
  sub_23FC5CDA8();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23FD4E3FC()
{
  uint64_t v0;
  void *v1;
  id v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  os_log_type_t v8;
  _BOOL4 v9;
  void (*v10)(uint64_t);
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v32)(void);
  uint64_t v33;
  uint64_t v34[3];

  v1 = *(void **)(v0 + 992);
  *(_QWORD *)(v0 + 344) = v1;
  v2 = v1;
  sub_23FBFD684(&qword_254346E20);
  if (swift_dynamicCast())
  {
    v3 = *(NSObject **)(v0 + 896);
    v4 = *(_QWORD *)(v0 + 400);
    v5 = *(_QWORD *)(v0 + 392);

    v6 = sub_23FC5A8DC();
    sub_23FD54D5C(v6, v7);
    sub_23FC762A8();
    sub_23FC12ECC(v4, v5, type metadata accessor for DialogResponseError);
    sub_23FC5AFCC();
    sub_23FC5C100();
    v8 = sub_23FC75640();
    v9 = sub_23FC75E24(v8);
    v10 = *(void (**)(uint64_t))(v0 + 968);
    v11 = *(_QWORD *)(v0 + 896);
    if (v9)
    {
      v12 = *(_QWORD *)(v0 + 888);
      v33 = *(_QWORD *)(v0 + 392);
      v13 = sub_23FBFEFF4();
      v14 = (_QWORD *)sub_23FBFEFF4();
      v34[0] = sub_23FBFEFF4();
      *(_DWORD *)v13 = 136315394;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 336) = sub_23FC9DC40(v12, v11, v34);
      sub_23FD75044();
      sub_23FC75E60();
      *(_WORD *)(v13 + 12) = 2112;
      sub_23FBFEE2C(&qword_256F65810, type metadata accessor for DialogResponseError, (uint64_t)&unk_23FD83058);
      sub_23FC5A704();
      sub_23FC12ECC(v33, v15, type metadata accessor for DialogResponseError);
      v16 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v0 + 328) = v16;
      sub_23FD75044();
      *v14 = v16;
      sub_23FD54DA0(v33, type metadata accessor for DialogResponseError);
      sub_23FD59CCC(&dword_23FBF8000, v3, (os_log_type_t)v5, "ToolExecution: %s received dialog event that wasn't already handled: %@");
      sub_23FBFD684(&qword_254346A30);
      sub_23FBFF10C();
      sub_23FBFEFA0();
    }
    v20 = *(_QWORD *)(v0 + 392);
    sub_23FC10048();
    sub_23FD54DA0(v20, type metadata accessor for DialogResponseError);

    v21 = sub_23FBFF1AC();
    v10(v21);
    v22 = *(_QWORD *)(v0 + 720);
    v23 = *(_QWORD *)(v0 + 712);
    v24 = *(_QWORD *)(v0 + 664);
    v25 = *(_QWORD *)(v0 + 560);
    v26 = *(_QWORD *)(v0 + 552);
    (*(void (**)(uint64_t, _QWORD, _QWORD))(v0 + 960))(v24, *(_QWORD *)(v0 + 704), *(_QWORD *)(v0 + 648));
    sub_23FD4C908(v24, v26, v22, v25, v23);
    v27 = *(void (**)(uint64_t, uint64_t))(v0 + 976);
    v28 = *(_QWORD *)(v0 + 824);
    v29 = *(_QWORD *)(v0 + 704);
    v30 = *(_QWORD *)(v0 + 648);
    sub_23FD54DA0(*(_QWORD *)(v0 + 400), type metadata accessor for DialogResponseError);
    v27(v29, v30);
    sub_23FC0A014(*(uint64_t (**)(uint64_t, uint64_t))(v28 + 8));

    sub_23FD5963C();
    sub_23FC5B2D4();
    sub_23FC5B2F4();
    sub_23FC5B980();
    sub_23FC5BCA0();
    sub_23FC090D0();
    sub_23FC090C0();
    sub_23FC5A574();
    sub_23FC5AB04();
    sub_23FC5AC3C();
    sub_23FC5D050();
    sub_23FC5D048();
    sub_23FC5D040();
    sub_23FC5C988();
    sub_23FC5C440();
    sub_23FC5C438();
    sub_23FC5C430();
    sub_23FC5C428();
    sub_23FC5C420();
    sub_23FC5BFE8();
    sub_23FC5BFE0();
    sub_23FC5C980();
    sub_23FC5D834();
    sub_23FC5E0B8();
    sub_23FC5E0B0();
    sub_23FC5E0A8();
    sub_23FC5E0A0();
    sub_23FC5D914();
    sub_23FC5D7D8();
    sub_23FC5D7D0();
    sub_23FC5EC14();
    sub_23FC5DC9C();
    v32 = (uint64_t (*)(void))sub_23FC5C528();
    return sub_23FC89F70(v32);
  }
  else
  {
    v17 = *(void (**)(uint64_t))(v0 + 976);
    v18 = *(_QWORD *)(v0 + 824);
    swift_bridgeObjectRelease();
    v19 = sub_23FC5A8DC();
    v17(v19);
    sub_23FC0A014(*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8));

    sub_23FD59C58();
    sub_23FD59874();
    sub_23FC5B2F4();
    sub_23FC5B980();
    sub_23FC5BCA0();
    sub_23FC090C0();
    sub_23FC090D0();
    sub_23FC5A574();
    sub_23FC5AB04();
    sub_23FC5AC3C();
    sub_23FC5B2D4();
    sub_23FC5EFD4();
    sub_23FC5D050();
    sub_23FC5D048();
    sub_23FC5D040();
    sub_23FC5C988();
    sub_23FC5C440();
    sub_23FC5C438();
    sub_23FC5C430();
    sub_23FC5C428();
    sub_23FC5C420();
    sub_23FC5BFE8();
    sub_23FC5BFE0();
    sub_23FC5C980();
    sub_23FC5D834();
    sub_23FC5E0B8();
    sub_23FC5E0B0();
    sub_23FC5E0A8();
    sub_23FC5E0A0();
    sub_23FC5D914();
    sub_23FC5D7D8();
    sub_23FC5D7D0();
    sub_23FC5EC14();
    return sub_23FC89F70(*(uint64_t (**)(void))(v0 + 8));
  }
}

uint64_t sub_23FD4E878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5[8] = a1;
  v5[9] = v4;
  v6 = type metadata accessor for ToolExecutionEvent(255, *(_QWORD *)(*(_QWORD *)v4 + 80), *(_QWORD *)(*(_QWORD *)v4 + 96), a4);
  v5[10] = v6;
  v7 = sub_23FD59CF4();
  v5[11] = v7;
  v5[12] = *(_QWORD *)(v7 - 8);
  v5[13] = sub_23FC0901C();
  v5[14] = *(_QWORD *)(v6 - 8);
  v5[15] = sub_23FC0901C();
  sub_23FC09208();
  return sub_23FC5A63C();
}

uint64_t sub_23FD4E8E8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t (*v10)(void);
  _BYTE *v11;
  _QWORD *v12;

  if ((sub_23FD4FAAC(v0[8]) & 1) != 0)
  {
    v2 = v0[12];
    v1 = v0[13];
    v3 = v0[10];
    v4 = v0[8];
    v5 = v0[9];
    v6 = v5 + qword_256F7F4E0;
    sub_23FC59120();
    v7 = sub_23FC7E2FC();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v6, v4, v7);
    sub_23FD59CE4();
    v8 = v5 + *(_QWORD *)(*(_QWORD *)v5 + 136);
    sub_23FC5E880();
    sub_23FC75394();
    sub_23FC5A8C8(v1, v8, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
    sub_23FC100EC(v1, 1, v3);
    if (!v9)
    {
      (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[14] + 32))(v0[15], v0[13], v0[10]);
      v12 = (_QWORD *)swift_task_alloc();
      v0[16] = v12;
      *v12 = v0;
      v12[1] = sub_23FD4EA80;
      return sub_23FD50F88(v0[15], v0[8], 1);
    }
    sub_23FD59CA8(v0[12]);
    sub_23FC090C0();
    sub_23FC090D0();
    v10 = (uint64_t (*)(void))sub_23FC5C528();
  }
  else
  {
    sub_23FD53D3C();
    sub_23FC5A704();
    *v11 = 0;
    swift_willThrow();
    sub_23FD59CC0();
    sub_23FC090C0();
    v10 = (uint64_t (*)(void))v0[1];
  }
  return v10();
}

uint64_t sub_23FD4EA80()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23FC5D3A4();
  sub_23FC75274(v2);
  *(_QWORD *)(v0 + 136) = v1;
  swift_task_dealloc();
  return sub_23FC5A63C();
}

uint64_t sub_23FD4EAD0()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  sub_23FD59CA8(*(_QWORD *)(v0 + 112));
  sub_23FC090D0();
  sub_23FC090C0();
  v1 = (uint64_t (*)(void))sub_23FC5C528();
  return sub_23FC5D398(v1);
}

uint64_t sub_23FD4EB08()
{
  uint64_t v0;

  sub_23FC090C8(*(_QWORD *)(v0 + 112));
  sub_23FD59CC0();
  sub_23FC090C0();
  return sub_23FC5D398(*(uint64_t (**)(void))(v0 + 8));
}

void sub_23FD4EB40()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1[23] = v0;
  v2 = *(_QWORD **)v0;
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  v1[24] = v3;
  v4 = v2[11];
  v5 = v2[12];
  v1[25] = v5;
  v6 = v2[13];
  v1[7] = v3;
  v1[8] = v4;
  v1[9] = v5;
  v1[10] = v6;
  type metadata accessor for ToolExecution.Outcome();
}

uint64_t sub_23FD4EB8C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1[26] = a1;
  v1[27] = *(_QWORD *)(a1 - 8);
  v1[28] = sub_23FC0901C();
  v2 = sub_23FD74984();
  v1[29] = v2;
  v1[30] = *(_QWORD *)(v2 - 8);
  v1[31] = sub_23FC0901C();
  v3 = sub_23FD74978();
  v1[32] = v3;
  v1[33] = *(_QWORD *)(v3 - 8);
  v1[34] = sub_23FC0901C();
  v4 = sub_23FBFD684(&qword_256F65420);
  v1[35] = v4;
  v1[36] = *(_QWORD *)(v4 - 8);
  v1[37] = sub_23FC0901C();
  v5 = sub_23FBFD684(&qword_256F65468);
  v1[38] = v5;
  v1[39] = *(_QWORD *)(v5 - 8);
  v1[40] = sub_23FC0901C();
  v6 = sub_23FBFD684(&qword_256F65478);
  v1[41] = v6;
  v1[42] = *(_QWORD *)(v6 - 8);
  v1[43] = sub_23FC0901C();
  v7 = sub_23FD744D4();
  v1[44] = v7;
  v1[45] = *(_QWORD *)(v7 - 8);
  v1[46] = sub_23FC0901C();
  v1[47] = sub_23FD59D18(255, v8, v9, v10);
  v11 = sub_23FD75038();
  v1[48] = v11;
  v1[49] = *(_QWORD *)(v11 - 8);
  v1[50] = sub_23FC5C13C();
  v1[51] = sub_23FC5C588();
  v12 = sub_23FC7E2FC();
  v1[52] = v12;
  v1[53] = *(_QWORD *)(v12 - 8);
  v1[54] = sub_23FC0901C();
  v13 = sub_23FD7157C();
  v1[55] = v13;
  v1[56] = *(_QWORD *)(v13 - 8);
  v1[57] = sub_23FC0901C();
  v14 = sub_23FC10100();
  v1[58] = v14;
  v1[59] = *(_QWORD *)(v14 - 8);
  v1[60] = sub_23FC5C13C();
  v1[61] = sub_23FC5C588();
  v1[62] = sub_23FC5C588();
  sub_23FC09208();
  return sub_23FC5A19C();
}

uint64_t sub_23FD4ECF8()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t);
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  _BOOL4 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint8_t *v38;
  uint64_t v39;
  os_log_type_t v40;
  uint64_t v41;

  sub_23FC762A8();
  swift_retain();
  v1 = sub_23FC5C100();
  v2 = sub_23FD74F6C();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = *(_QWORD *)(v0 + 456);
    v40 = v2;
    v5 = *(_QWORD *)(v0 + 424);
    v4 = *(_QWORD *)(v0 + 432);
    v6 = *(_QWORD *)(v0 + 416);
    v7 = *(_QWORD *)(v0 + 184);
    v36 = *(_QWORD *)(v0 + 448);
    v8 = (uint8_t *)sub_23FBFEFF4();
    v39 = sub_23FBFEFF4();
    v38 = v8;
    *(_DWORD *)v8 = 136315138;
    v41 = v39;
    v9 = v7 + qword_256F7F4E0;
    sub_23FC75394();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v4, v9, v6);
    sub_23FD73BEC();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    sub_23FBFEE2C((unint64_t *)&qword_256F5D950, (uint64_t (*)(uint64_t))MEMORY[0x24BE52140], MEMORY[0x24BE52170]);
    v10 = sub_23FD75344();
    v12 = v11;
    sub_23FBFF204(v3, *(uint64_t (**)(uint64_t, uint64_t))(v36 + 8));
    *(_QWORD *)(v0 + 176) = sub_23FC9DC40(v10, v12, &v41);
    sub_23FD75044();
    swift_release();
    sub_23FC5A648();
    sub_23FBFF114(&dword_23FBF8000, v1, v40, "ToolExecution: Cancelling execution of %s", v38);
    sub_23FBFF10C();
    sub_23FBFEFA0();
  }
  v13 = *(_QWORD *)(v0 + 472);

  sub_23FC58AE4();
  v14 = *(void (**)(uint64_t))(v13 + 8);
  v15 = sub_23FC5E880();
  v14(v15);
  *(_QWORD *)(v0 + 504) = v14;
  v16 = *(NSObject **)(v0 + 488);
  sub_23FC757FC();
  swift_retain_n();
  sub_23FD72BE4();
  v17 = sub_23FC75640();
  v18 = sub_23FC75E24(v17);
  v19 = *(_QWORD *)(v0 + 488);
  v20 = *(_QWORD *)(v0 + 464);
  if (v18)
  {
    v21 = *(_QWORD *)(v0 + 408);
    v37 = *(_QWORD *)(v0 + 392);
    v22 = *(_QWORD *)(v0 + 184);
    v23 = (uint8_t *)sub_23FBFEFF4();
    v24 = sub_23FBFEFF4();
    *(_DWORD *)v23 = 136315138;
    v41 = v24;
    v25 = v22 + *(_QWORD *)(*(_QWORD *)v22 + 136);
    sub_23FC75394();
    sub_23FC5A8C8(v21, v25, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v37 + 16));
    v26 = sub_23FD74C0C();
    *(_QWORD *)(v0 + 168) = sub_23FC9DC40(v26, v27, &v41);
    sub_23FD75044();
    swift_release_n();
    sub_23FC103E8();
    sub_23FBFF114(&dword_23FBF8000, v16, (os_log_type_t)v13, "ToolExecution: Handling %s as part of cancellation", v23);
    sub_23FBFF10C();
    sub_23FBFEFA0();
  }

  swift_release_n();
  ((void (*)(uint64_t, uint64_t))v14)(v19, v20);
  v29 = *(_QWORD *)(v0 + 392);
  v28 = *(_QWORD *)(v0 + 400);
  v31 = *(_QWORD *)(v0 + 376);
  v30 = *(_QWORD *)(v0 + 384);
  v32 = *(_QWORD *)(v0 + 184) + *(_QWORD *)(**(_QWORD **)(v0 + 184) + 136);
  sub_23FC75394();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16))(v28, v32, v30);
  sub_23FC100EC(v28, 1, v31);
  if (!v33)
  {
    v35 = (char *)sub_23FD4F19C + 4 * a47l[sub_23FC768C4()];
    __asm { BR              X10 }
  }
  sub_23FD4F7BC(*(_QWORD *)(v0 + 184));
  sub_23FC090C0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  sub_23FC5B980();
  sub_23FC5BCA0();
  sub_23FC090D0();
  sub_23FC5C438();
  sub_23FC5C430();
  sub_23FC5C428();
  sub_23FC5C420();
  sub_23FC5BFE8();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23FD4F19C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  _QWORD *v8;

  v4 = *(_QWORD *)(v1 + 264);
  v3 = *(_QWORD *)(v1 + 272);
  sub_23FD59D08();

  v5 = sub_23FBFD684(&qword_256F5EB20);
  v6 = v0 + *(int *)(v5 + 48);
  sub_23FD59988();
  sub_23FD59988();
  v7 = *(void (**)(uint64_t))(v0 + *(int *)(v5 + 96));
  sub_23FD46774(*MEMORY[0x24BEBA3C8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 104));
  v7(v3);
  sub_23FC58AC8();
  sub_23FCD51A4(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  sub_23FBFEF74(v6, &qword_256F5EB28);
  *(_QWORD *)(v1 + 48) = 0;
  *(_OWORD *)(v1 + 32) = 0u;
  *(_OWORD *)(v1 + 16) = 0u;
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 512) = v8;
  *v8 = v1;
  v8[1] = sub_23FD4F504;
  return sub_23FD4CCE4(*(_QWORD *)(v1 + 224), v1 + 16);
}

void sub_23FD4F490()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 16);
  swift_bridgeObjectRelease();

  sub_23FBFD684(&qword_256F65800);
  v2 = swift_release();
  sub_23FC7E2CC(v2, &qword_256F5EB28);
  JUMPOUT(0x23FD4F0D4);
}

void sub_23FD4F4D0()
{
  uint64_t v0;
  void (*v1)(uint64_t);

  v0 = sub_23FC5E880();
  v1(v0);
  JUMPOUT(0x23FD4F0D4);
}

void sub_23FD4F4F8()
{
  id *v0;

  JUMPOUT(0x23FD4F0D4);
}

uint64_t sub_23FD4F504()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v5 = *v1;
  v2 = v5;
  sub_23FC75274(&v5);
  *(_QWORD *)(v2 + 520) = v0;
  v3 = swift_task_dealloc();
  sub_23FC7E2CC(v3, &qword_256F5F0A0);
  return sub_23FC5A19C();
}

uint64_t sub_23FD4F570()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t TupleTypeMetadata2;
  uint64_t v5;

  sub_23FC75564();
  v1 = *(_QWORD *)(v0 + 224);
  if (sub_23FC768C4() == 7)
  {
    v3 = type metadata accessor for TypedValueExecutionResult(255, *(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 200), v2);
    sub_23FBFEDE8(&qword_256F5EB18);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    sub_23FBFEF74(v1 + *(int *)(TupleTypeMetadata2 + 48), &qword_256F5EB18);
    v5 = *(_QWORD *)(v3 - 8);
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 216);
  }
  sub_23FC0A014(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  sub_23FD5991C();
  sub_23FC090C0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  sub_23FC5B980();
  sub_23FC5BCA0();
  sub_23FC090D0();
  swift_task_dealloc();
  sub_23FC5EFD4();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  return sub_23FC75318(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FD4F648()
{
  uint64_t v0;
  os_log_type_t v1;
  NSObject *v2;
  NSObject *v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint8_t *v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;

  sub_23FC75564();
  v2 = *(NSObject **)(v0 + 520);
  sub_23FC762A8();
  v3 = v2;
  v4 = v2;
  sub_23FC5C100();
  v5 = sub_23FC75640();
  if (sub_23FC09114(v5))
  {
    v6 = *(void **)(v0 + 520);
    v7 = (uint8_t *)sub_23FBFEFF4();
    v8 = (_QWORD *)sub_23FBFEFF4();
    *(_DWORD *)v7 = 138412290;
    v9 = v6;
    v10 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 160) = v10;
    sub_23FD75044();
    *v8 = v10;
    sub_23FC0917C();
    sub_23FC0917C();
    sub_23FBFF114(&dword_23FBF8000, v2, v1, "ToolExecution: Ignoring error since this execution is being cancelled: %@", v7);
    sub_23FBFD684(&qword_254346A30);
    sub_23FBFF10C();
    sub_23FBFEFA0();
  }
  sub_23FC0917C();
  sub_23FC0917C();
  sub_23FC0917C();

  (*(void (**)(_QWORD, _QWORD))(v0 + 504))(*(_QWORD *)(v0 + 480), *(_QWORD *)(v0 + 464));
  sub_23FD5991C();
  sub_23FC090C0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  sub_23FC5B980();
  sub_23FC5BCA0();
  sub_23FC090D0();
  swift_task_dealloc();
  sub_23FC5EFD4();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  return sub_23FC75318(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FD4F7BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  int v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint8_t *v28;
  uint8_t *v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v2 = sub_23FD73C7C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23FD7157C();
  v33 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23FD72BF0();
  v34 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v12);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FD724D0();
  v15 = a1;
  swift_retain_n();
  v16 = sub_23FD72BE4();
  v17 = sub_23FD74F6C();
  v18 = v17;
  if (os_log_type_enabled(v16, v17))
  {
    v31 = v18;
    v19 = (uint8_t *)swift_slowAlloc();
    v20 = swift_slowAlloc();
    v30 = v20;
    v32 = v11;
    *(_DWORD *)v19 = 136315138;
    v36 = v20;
    v28 = v19 + 4;
    v29 = v19;
    v21 = v15 + qword_256F7F4E0;
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v21, v2);
    sub_23FD73BEC();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    sub_23FBFEE2C((unint64_t *)&qword_256F5D950, (uint64_t (*)(uint64_t))MEMORY[0x24BE52140], MEMORY[0x24BE52170]);
    v22 = sub_23FD75344();
    v24 = v23;
    (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v7);
    v35 = sub_23FC9DC40(v22, v24, &v36);
    sub_23FD75044();
    swift_release_n();
    swift_bridgeObjectRelease();
    v25 = v29;
    _os_log_impl(&dword_23FBF8000, v16, (os_log_type_t)v31, "ToolExecution: Canceled execution of %s", v29, 0xCu);
    v26 = v30;
    swift_arrayDestroy();
    MEMORY[0x2426798D8](v26, -1, -1);
    MEMORY[0x2426798D8](v25, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v14, v32);
  }
  else
  {

    swift_release_n();
    return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v14, v11);
  }
}

uint64_t sub_23FD4FAAC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  void (*v43)(char *, char *, uint64_t);
  void (*v44)(char *, uint64_t);
  void (*v45)(char *, uint64_t);
  char v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v57)(char *, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v62;
  void (*v63)(char *, char *, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(char *, char *, uint64_t);
  char v69;
  uint64_t v70;
  _BYTE *v71;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void (*v96)(uint64_t);
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  _QWORD *v108;
  char *v109;
  char *v110;
  char *v111;
  char *v112;
  void (*v113)(char *, uint64_t);
  char *v114;
  uint64_t v115;
  uint64_t v116;

  v116 = a1;
  v2 = *v1;
  sub_23FBFD684(&qword_256F5EB08);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v3, v4);
  sub_23FBFEFCC();
  v101 = v5;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v6, v7);
  v100 = (char *)&v98 - v8;
  sub_23FBFD684(&qword_256F5EB00);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v9, v10);
  sub_23FBFEFCC();
  v103 = v11;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v12, v13);
  v102 = (char *)&v98 - v14;
  v15 = *(_QWORD *)(v2 + 96);
  v99 = *(_QWORD *)(v2 + 80);
  v98 = v15;
  v106 = type metadata accessor for ToolExecutionEvent(255, v99, v15, v16);
  v17 = sub_23FD75038();
  v104 = *(_QWORD *)(v17 - 8);
  v105 = v17;
  MEMORY[0x24BDAC7A8](v17, v18);
  v107 = (char *)&v98 - v19;
  v20 = sub_23FD73C7C();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20, v22);
  sub_23FBFEFCC();
  v110 = v23;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v24, v25);
  v111 = (char *)&v98 - v26;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v27, v28);
  v112 = (char *)&v98 - v29;
  sub_23FBFF064();
  MEMORY[0x24BDAC7A8](v30, v31);
  v33 = (char *)&v98 - v32;
  v34 = sub_23FD7157C();
  v113 = *(void (**)(char *, uint64_t))(v34 - 8);
  v36 = MEMORY[0x24BDAC7A8](v34, v35);
  v38 = (char *)&v98 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v36, v39);
  v41 = (char *)&v98 - v40;
  sub_23FD73BEC();
  v108 = v1;
  v42 = (char *)v1 + qword_256F7F4E0;
  v114 = (char *)v108 + qword_256F7F4E0;
  sub_23FC75394();
  v43 = *(void (**)(char *, char *, uint64_t))(v21 + 16);
  v43(v33, v42, v20);
  sub_23FD73BEC();
  v44 = *(void (**)(char *, uint64_t))(v21 + 8);
  v109 = v33;
  v115 = v20;
  v44(v33, v20);
  LOBYTE(v33) = sub_23FD71558();
  v45 = (void (*)(char *, uint64_t))*((_QWORD *)v113 + 1);
  v45(v38, v34);
  v46 = v116;
  v45(v41, v34);
  if ((v33 & 1) == 0)
    goto LABEL_30;
  v47 = v46;
  v48 = sub_23FD73C58();
  v50 = v49;
  v51 = v112;
  v52 = v115;
  v43(v112, v114, v115);
  v53 = sub_23FD73C58();
  v55 = v54;
  v113 = v44;
  v44(v51, v52);
  if (v48 == v53 && v50 == v55)
  {
    swift_bridgeObjectRelease_n();
    v57 = v113;
  }
  else
  {
    v48 = sub_23FD75380();
    sub_23FC15A24();
    swift_bridgeObjectRelease();
    v57 = v113;
    v46 = v47;
    if ((v48 & 1) == 0)
      goto LABEL_30;
  }
  v58 = sub_23FD73C64();
  v60 = v59;
  v46 = (char)v111;
  v43(v111, v114, v115);
  sub_23FD73C64();
  sub_23FD59B38();
  if (v60)
  {
    if (!v53)
      goto LABEL_29;
    if (v58 == v48 && v60 == v53)
    {
      sub_23FC5A2A8();
      sub_23FC102FC();
      v57 = v113;
    }
    else
    {
      v48 = sub_23FD59AD8();
      sub_23FC5A2A8();
      sub_23FC102FC();
      v57 = v113;
      v46 = v116;
      if ((v48 & 1) == 0)
        goto LABEL_30;
    }
  }
  else
  {
    v46 = v116;
    if (v53)
      goto LABEL_29;
  }
  v62 = sub_23FD73C70();
  v63 = v43;
  v64 = v62;
  v66 = v65;
  v46 = (char)v110;
  v67 = v63;
  v63(v110, v114, v115);
  sub_23FD73C70();
  sub_23FD59B38();
  if (!v66)
  {
    v70 = v116;
    if (!v53)
      goto LABEL_33;
LABEL_29:
    sub_23FC5A2A8();
    goto LABEL_30;
  }
  if (!v53)
    goto LABEL_29;
  if (v64 != v48 || v66 != v53)
  {
    v69 = sub_23FD59AD8();
    sub_23FC5A2A8();
    sub_23FC102FC();
    v57 = v113;
    v70 = v116;
    if ((v69 & 1) != 0)
      goto LABEL_33;
LABEL_30:
    sub_23FD53D3C();
    sub_23FC5A704();
    *v71 = 1;
    swift_willThrow();
    return v46 & 1;
  }
  sub_23FC5A2A8();
  sub_23FC102FC();
  v57 = v113;
  v70 = v116;
LABEL_33:
  v73 = sub_23FD73C40();
  v74 = v109;
  v75 = v115;
  v67(v109, v114, v115);
  v76 = sub_23FD73C40();
  v57(v74, v75);
  LOBYTE(v75) = sub_23FD53854(v73, v76);
  swift_bridgeObjectRelease();
  sub_23FC1002C();
  if ((v75 & 1) == 0)
  {
    v77 = v115;
    v67(v74, v114, v115);
    v78 = sub_23FD73C40();
    v57(v74, v77);
    v79 = sub_23FC806EC(v78);
    v80 = sub_23FD73C40();
    v81 = sub_23FC806EC(v80);
    MEMORY[0x24BDAC7A8](v81, v82);
    *(&v98 - 2) = (uint64_t)v108;
    *(&v98 - 1) = v70;
    v83 = sub_23FD50AB4(0, (void (*)(uint64_t *__return_ptr, uint64_t *, _QWORD *))sub_23FD53D78, (uint64_t)(&v98 - 4), v79);
    if (v83 > 1)
      goto LABEL_40;
    v84 = v83;
    v85 = sub_23FD3D50C();
    v87 = sub_23FD50C94(v85, v86);
    if (!v84 && (v87 & 1) != 0)
    {
      sub_23FC1002C();
      sub_23FC15A24();
      v46 = 1;
      return v46 & 1;
    }
    sub_23FC5AAE8();
    v88 = sub_23FC5E880();
    v90 = *(_QWORD *)(sub_23FD50F38(v88, v89) + 16);
    swift_bridgeObjectRelease();
    if (v90)
    {
LABEL_40:
      sub_23FC1002C();
    }
    else
    {
      v91 = sub_23FD3D50C();
      v93 = sub_23FD50F38(v91, v92);
      sub_23FC15A24();
      if (*(_QWORD *)(v93 + 16) <= 1uLL)
      {
        sub_23FC75394();
        v94 = (uint64_t)v107;
        v95 = sub_23FCDE87C();
        v96(v95);
        if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v94, 1, v106) != 1)
        {
          sub_23FCDE87C();
          v97 = (char *)sub_23FD50100 + 4 * byte_23FD82CCC[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
      }
    }
    swift_bridgeObjectRelease();
    v46 = 0;
    return v46 & 1;
  }
  v46 = 1;
  return v46 & 1;
}

void sub_23FD50100()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;

  sub_23FC0AAF8();
  sub_23FD59C40();

  v2 = v1 + *(int *)(sub_23FBFD684(&qword_256F5EB20) + 48);
  sub_23FD59A20();
  sub_23FD59A20();
  sub_23FD599F4();
  sub_23FBFEF74(v2, &qword_256F5EB28);
  JUMPOUT(0x23FD50068);
}

void sub_23FD50414()
{
  uint64_t v0;
  void (*v1)(uint64_t);

  sub_23FC0AAF8();
  v0 = sub_23FCDE87C();
  v1(v0);
  JUMPOUT(0x23FD50068);
}

void sub_23FD50428()
{
  uint64_t v0;
  uint64_t v1;

  sub_23FC0AAF8();
  type metadata accessor for TypedValueExecutionResult(0, *(_QWORD *)(v0 - 280), *(_QWORD *)(v0 - 288), v1);
  sub_23FD59A68();
  JUMPOUT(0x23FD50448);
}

void sub_23FD50450()
{
  id *v0;

  sub_23FC0AAF8();

  JUMPOUT(0x23FD50068);
}

void sub_23FD5058C(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  char *v51;
  char v52;
  void (*v53)(char *, uint64_t);
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;

  v59 = a4;
  v58 = a5;
  v60 = sub_23FD73730();
  v57 = *(_QWORD *)(v60 - 8);
  MEMORY[0x24BDAC7A8](v60, v8);
  v55 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_23FBFD684(&qword_256F65830);
  MEMORY[0x24BDAC7A8](v61, v10);
  v64 = (uint64_t)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23FBFD684(&qword_256F5EB08);
  v14 = MEMORY[0x24BDAC7A8](v12, v13);
  v16 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14, v17);
  v19 = (char *)&v54 - v18;
  v20 = sub_23FD73C7C();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20, v22);
  v24 = (char *)&v54 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_23FBFD684(&qword_256F65838);
  v27 = MEMORY[0x24BDAC7A8](v25, v26);
  v56 = (uint64_t)&v54 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = MEMORY[0x24BDAC7A8](v27, v29);
  v62 = (char *)&v54 - v31;
  MEMORY[0x24BDAC7A8](v30, v32);
  v34 = (char *)&v54 - v33;
  v63 = *a1;
  v35 = *a2;
  v36 = a2[1];
  v37 = a3 + qword_256F7F4E0;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v24, v37, v20);
  swift_bridgeObjectRetain();
  v38 = sub_23FD73C40();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v24, v20);
  sub_23FCC3BEC(v35, v36, v38, (uint64_t)v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v39 = sub_23FD73C28();
  v40 = 1;
  if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v19, 1, v39))
  {
    sub_23FD73C1C();
    v40 = 0;
  }
  sub_23FBFEF74((uint64_t)v19, &qword_256F5EB08);
  v41 = v60;
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v34, v40, 1, v60);
  v42 = sub_23FD73C40();
  swift_bridgeObjectRetain();
  sub_23FCC3BEC(v35, v36, v42, (uint64_t)v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v16, 1, v39) == 1)
  {
    sub_23FBFEF74((uint64_t)v16, &qword_256F5EB08);
    v43 = 1;
    v44 = (uint64_t)v62;
  }
  else
  {
    v44 = (uint64_t)v62;
    sub_23FD73C1C();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v39 - 8) + 8))(v16, v39);
    v43 = 0;
  }
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v44, v43, 1, v41);
  v45 = v64;
  v46 = v64 + *(int *)(v61 + 48);
  sub_23FC12E68((uint64_t)v34, v64, &qword_256F65838);
  sub_23FC12E68(v44, v46, &qword_256F65838);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v45, 1, v41) == 1)
  {
    sub_23FBFEF74(v44, &qword_256F65838);
    sub_23FBFEF74((uint64_t)v34, &qword_256F65838);
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v46, 1, v41) == 1)
    {
      sub_23FBFEF74(v45, &qword_256F65838);
      v47 = v63;
LABEL_13:
      *v58 = v47;
      return;
    }
    goto LABEL_11;
  }
  v48 = v56;
  sub_23FC12E68(v45, v56, &qword_256F65838);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v46, 1, v41) == 1)
  {
    sub_23FBFEF74(v44, &qword_256F65838);
    sub_23FBFEF74((uint64_t)v34, &qword_256F65838);
    (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v48, v41);
LABEL_11:
    sub_23FBFEF74(v45, &qword_256F65830);
    v47 = v63;
    goto LABEL_12;
  }
  v50 = v57;
  v51 = v55;
  (*(void (**)(char *, uint64_t, uint64_t))(v57 + 32))(v55, v46, v41);
  sub_23FBFEE2C(&qword_256F65840, (uint64_t (*)(uint64_t))MEMORY[0x24BE559A8], MEMORY[0x24BE559B8]);
  v52 = sub_23FD74BDC();
  v53 = *(void (**)(char *, uint64_t))(v50 + 8);
  v53(v51, v41);
  sub_23FBFEF74(v44, &qword_256F65838);
  sub_23FBFEF74((uint64_t)v34, &qword_256F65838);
  v53((char *)v48, v41);
  sub_23FBFEF74(v45, &qword_256F65838);
  v47 = v63;
  if ((v52 & 1) != 0)
    goto LABEL_13;
LABEL_12:
  if (!__OFADD__(v47++, 1))
    goto LABEL_13;
  __break(1u);
}

uint64_t sub_23FD50AB4(uint64_t a1, void (*a2)(uint64_t *__return_ptr, uint64_t *, _QWORD *), uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t i;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  uint64_t v20;
  int64_t v21;
  uint64_t v22;
  _QWORD v23[2];
  uint64_t v24;

  v24 = a1;
  v7 = a1;
  v8 = a4 + 56;
  v9 = 1 << *(_BYTE *)(a4 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(a4 + 56);
  v21 = (unint64_t)(v9 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v13 = 0;
  if (!v11)
    goto LABEL_5;
LABEL_4:
  v14 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  for (i = v14 | (v13 << 6); ; i = __clz(__rbit64(v17)) + (v13 << 6))
  {
    v19 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * i);
    v20 = v19[1];
    v23[0] = *v19;
    v23[1] = v20;
    swift_bridgeObjectRetain();
    a2(&v22, &v24, v23);
    if (v4)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return v7;
    }
    result = swift_bridgeObjectRelease();
    v7 = v22;
    v24 = v22;
    if (v11)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v13++, 1))
      break;
    if (v13 >= v21)
      goto LABEL_26;
    v17 = *(_QWORD *)(v8 + 8 * v13);
    if (!v17)
    {
      v18 = v13 + 1;
      if (v13 + 1 >= v21)
        goto LABEL_26;
      v17 = *(_QWORD *)(v8 + 8 * v18);
      if (v17)
        goto LABEL_16;
      v18 = v13 + 2;
      if (v13 + 2 >= v21)
        goto LABEL_26;
      v17 = *(_QWORD *)(v8 + 8 * v18);
      if (v17)
        goto LABEL_16;
      v18 = v13 + 3;
      if (v13 + 3 >= v21)
        goto LABEL_26;
      v17 = *(_QWORD *)(v8 + 8 * v18);
      if (v17)
      {
LABEL_16:
        v13 = v18;
        goto LABEL_17;
      }
      v18 = v13 + 4;
      if (v13 + 4 < v21)
      {
        v17 = *(_QWORD *)(v8 + 8 * v18);
        if (!v17)
        {
          while (1)
          {
            v13 = v18 + 1;
            if (__OFADD__(v18, 1))
              goto LABEL_29;
            if (v13 >= v21)
              goto LABEL_26;
            v17 = *(_QWORD *)(v8 + 8 * v13);
            ++v18;
            if (v17)
              goto LABEL_17;
          }
        }
        goto LABEL_16;
      }
LABEL_26:
      swift_release();
      return v7;
    }
LABEL_17:
    v11 = (v17 - 1) & v17;
  }
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_23FD50C94(uint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t i;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  BOOL v24;
  uint64_t v25;
  unint64_t j;
  uint64_t v27;
  _QWORD *v28;
  BOOL v29;
  uint64_t v30;
  int64_t v31;
  int64_t v32;

  if (result == a2)
    return 1;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v3 = 0;
  v4 = *(_QWORD *)(result + 56);
  v30 = result + 56;
  v5 = 1 << *(_BYTE *)(result + 32);
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & v4;
  v31 = (unint64_t)(v5 + 63) >> 6;
  v8 = a2 + 56;
  if ((v6 & v4) == 0)
    goto LABEL_8;
LABEL_7:
  v9 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  v32 = v3;
  for (i = v9 | (v3 << 6); ; i = __clz(__rbit64(v12)) + (v13 << 6))
  {
    v15 = result;
    v16 = (uint64_t *)(*(_QWORD *)(result + 48) + 16 * i);
    v18 = *v16;
    v17 = v16[1];
    sub_23FD7544C();
    swift_bridgeObjectRetain();
    sub_23FD74C30();
    v19 = sub_23FD75470();
    v20 = -1 << *(_BYTE *)(a2 + 32);
    v21 = v19 & ~v20;
    if (((*(_QWORD *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
      goto LABEL_41;
    v22 = *(_QWORD *)(a2 + 48);
    v23 = (_QWORD *)(v22 + 16 * v21);
    v24 = *v23 == v18 && v23[1] == v17;
    if (!v24 && (sub_23FD75380() & 1) == 0)
    {
      v25 = ~v20;
      for (j = v21 + 1; ; j = v27 + 1)
      {
        v27 = j & v25;
        if (((*(_QWORD *)(v8 + (((j & v25) >> 3) & 0xFFFFFFFFFFFFF8)) >> (j & v25)) & 1) == 0)
          break;
        v28 = (_QWORD *)(v22 + 16 * v27);
        v29 = *v28 == v18 && v28[1] == v17;
        if (v29 || (sub_23FD75380() & 1) != 0)
          goto LABEL_30;
      }
LABEL_41:
      swift_bridgeObjectRelease();
      return 0;
    }
LABEL_30:
    swift_bridgeObjectRelease();
    result = v15;
    v3 = v32;
    if (v7)
      goto LABEL_7;
LABEL_8:
    v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_44;
    }
    if (v11 >= v31)
      return 1;
    v12 = *(_QWORD *)(v30 + 8 * v11);
    v13 = v3 + 1;
    if (!v12)
    {
      v13 = v3 + 2;
      if (v3 + 2 >= v31)
        return 1;
      v12 = *(_QWORD *)(v30 + 8 * v13);
      if (!v12)
      {
        v13 = v3 + 3;
        if (v3 + 3 >= v31)
          return 1;
        v12 = *(_QWORD *)(v30 + 8 * v13);
        if (!v12)
        {
          v13 = v3 + 4;
          if (v3 + 4 >= v31)
            return 1;
          v12 = *(_QWORD *)(v30 + 8 * v13);
          if (!v12)
            break;
        }
      }
    }
LABEL_23:
    v7 = (v12 - 1) & v12;
    v32 = v13;
  }
  v14 = v3 + 5;
  if (v3 + 5 >= v31)
    return 1;
  v12 = *(_QWORD *)(v30 + 8 * v14);
  if (v12)
  {
    v13 = v3 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    v13 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v13 >= v31)
      return 1;
    v12 = *(_QWORD *)(v30 + 8 * v13);
    ++v14;
    if (v12)
      goto LABEL_23;
  }
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_23FD50F38(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a1 + 16) > *(_QWORD *)(a2 + 16) >> 3)
    return sub_23FD541B0(a1, a2);
  sub_23FD54018(a1);
  return a2;
}

uint64_t sub_23FD50F88(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  *(_QWORD *)(v4 + 72) = a2;
  *(_QWORD *)(v4 + 80) = v3;
  *(_BYTE *)(v4 + 680) = a3;
  *(_QWORD *)(v4 + 64) = a1;
  v5 = *v3;
  v6 = sub_23FD74984();
  *(_QWORD *)(v4 + 88) = v6;
  *(_QWORD *)(v4 + 96) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v4 + 104) = sub_23FC0901C();
  v7 = sub_23FD71BC4();
  *(_QWORD *)(v4 + 112) = v7;
  *(_QWORD *)(v4 + 120) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 128) = sub_23FC5C13C();
  *(_QWORD *)(v4 + 136) = sub_23FC5C588();
  v8 = sub_23FD74978();
  *(_QWORD *)(v4 + 144) = v8;
  *(_QWORD *)(v4 + 152) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v4 + 160) = sub_23FC0901C();
  v9 = sub_23FBFD684(&qword_256F65420);
  *(_QWORD *)(v4 + 168) = v9;
  *(_QWORD *)(v4 + 176) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v4 + 184) = sub_23FC0901C();
  v10 = sub_23FD73730();
  *(_QWORD *)(v4 + 192) = v10;
  *(_QWORD *)(v4 + 200) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v4 + 208) = sub_23FC0901C();
  v11 = sub_23FC10290();
  *(_QWORD *)(v4 + 216) = v11;
  *(_QWORD *)(v4 + 224) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v4 + 232) = sub_23FC5C13C();
  *(_QWORD *)(v4 + 240) = sub_23FC5C588();
  *(_QWORD *)(v4 + 248) = sub_23FC5C588();
  v12 = sub_23FBFD684(&qword_256F65468);
  *(_QWORD *)(v4 + 256) = v12;
  *(_QWORD *)(v4 + 264) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v4 + 272) = sub_23FC0901C();
  *(_QWORD *)(v4 + 280) = *(_QWORD *)(type metadata accessor for DisambiguationListItem(0) - 8);
  *(_QWORD *)(v4 + 288) = sub_23FC0901C();
  v13 = sub_23FBFD684(&qword_256F65478);
  *(_QWORD *)(v4 + 296) = v13;
  *(_QWORD *)(v4 + 304) = *(_QWORD *)(v13 - 8);
  *(_QWORD *)(v4 + 312) = sub_23FC0901C();
  sub_23FBFD684(&qword_256F5EB00);
  *(_QWORD *)(v4 + 320) = sub_23FC5C13C();
  *(_QWORD *)(v4 + 328) = sub_23FC5C588();
  *(_QWORD *)(v4 + 336) = sub_23FC5C588();
  sub_23FBFD684(&qword_256F5EB08);
  *(_QWORD *)(v4 + 344) = sub_23FC5C13C();
  *(_QWORD *)(v4 + 352) = sub_23FC5C588();
  *(_QWORD *)(v4 + 360) = sub_23FC5C588();
  *(_QWORD *)(v4 + 368) = sub_23FC5C588();
  v14 = sub_23FC76818();
  *(_QWORD *)(v4 + 376) = v14;
  *(_QWORD *)(v4 + 384) = *(_QWORD *)(v14 - 8);
  *(_QWORD *)(v4 + 392) = sub_23FC5C13C();
  *(_QWORD *)(v4 + 400) = sub_23FC5C588();
  *(_QWORD *)(v4 + 408) = sub_23FC5C588();
  *(_QWORD *)(v4 + 416) = sub_23FC5C588();
  v15 = sub_23FD744D4();
  *(_QWORD *)(v4 + 424) = v15;
  *(_QWORD *)(v4 + 432) = *(_QWORD *)(v15 - 8);
  *(_QWORD *)(v4 + 440) = sub_23FC0901C();
  v16 = *(_QWORD *)(v5 + 80);
  *(_QWORD *)(v4 + 448) = v16;
  v17 = *(_QWORD *)(v5 + 96);
  *(_QWORD *)(v4 + 456) = v17;
  v19 = type metadata accessor for ToolExecutionEvent(0, v16, v17, v18);
  *(_QWORD *)(v4 + 464) = v19;
  *(_QWORD *)(v4 + 472) = *(_QWORD *)(v19 - 8);
  *(_QWORD *)(v4 + 480) = sub_23FC5C13C();
  *(_QWORD *)(v4 + 488) = sub_23FC5C588();
  *(_QWORD *)(v4 + 496) = sub_23FC5C588();
  v20 = sub_23FC10100();
  *(_QWORD *)(v4 + 504) = v20;
  *(_QWORD *)(v4 + 512) = *(_QWORD *)(v20 - 8);
  *(_QWORD *)(v4 + 520) = sub_23FC5C13C();
  *(_QWORD *)(v4 + 528) = sub_23FC5C588();
  *(_QWORD *)(v4 + 536) = sub_23FC5C588();
  *(_QWORD *)(v4 + 544) = sub_23FC5C588();
  *(_QWORD *)(v4 + 552) = sub_23FC5C588();
  *(_QWORD *)(v4 + 560) = sub_23FC5C588();
  *(_QWORD *)(v4 + 568) = sub_23FC5C588();
  *(_QWORD *)(v4 + 576) = sub_23FC5C588();
  *(_QWORD *)(v4 + 584) = sub_23FC5C588();
  v21 = sub_23FD7157C();
  *(_QWORD *)(v4 + 592) = v21;
  *(_QWORD *)(v4 + 600) = *(_QWORD *)(v21 - 8);
  *(_QWORD *)(v4 + 608) = sub_23FC5C13C();
  *(_QWORD *)(v4 + 616) = sub_23FC5C588();
  sub_23FC09208();
  return sub_23FC5A19C();
}

void sub_23FD51238()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void (*v15)(_QWORD, _QWORD);
  void (*v16)(uint64_t);
  uint64_t v17;
  NSObject *v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  void (*v21)(uint64_t, uint64_t, uint64_t);
  os_log_type_t v22;
  _BOOL4 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint8_t *v29;
  uint64_t v30;
  unint64_t v31;
  void (*v32)(uint64_t);
  uint64_t v33;
  char *v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t, uint64_t);
  char v37;
  uint64_t v38;
  uint64_t v39[3];

  v1 = *(_QWORD *)(v0 + 616);
  v2 = *(_QWORD *)(v0 + 608);
  v3 = *(_QWORD *)(v0 + 600);
  sub_23FD73C40();
  sub_23FD73BEC();
  v4 = sub_23FD73BD4();
  sub_23FD724D0();
  sub_23FC5A8C8(v2, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
  swift_bridgeObjectRetain_n();
  v5 = sub_23FD72BE4();
  v6 = sub_23FD74F6C();
  v37 = v4;
  if (os_log_type_enabled(v5, v6))
  {
    v7 = *(_QWORD *)(v0 + 608);
    v38 = *(_QWORD *)(v0 + 600);
    v8 = sub_23FBFEFF4();
    v39[0] = sub_23FBFEFF4();
    *(_DWORD *)v8 = 136315650;
    sub_23FBFEE2C((unint64_t *)&qword_256F5D950, (uint64_t (*)(uint64_t))MEMORY[0x24BE52140], MEMORY[0x24BE52170]);
    v9 = sub_23FD75344();
    *(_QWORD *)(v0 + 48) = sub_23FC5C074(v9, v10);
    sub_23FD75044();
    sub_23FC103E8();
    sub_23FBFF204(v7, *(uint64_t (**)(uint64_t, uint64_t))(v38 + 8));
    *(_WORD *)(v8 + 12) = 2080;
    sub_23FC10108();
    v11 = sub_23FD74B28();
    v13 = v12;
    sub_23FC595E0();
    *(_QWORD *)(v0 + 56) = sub_23FC9DC40(v11, v13, v39);
    sub_23FD75044();
    sub_23FC0AAF8();
    sub_23FC10048();
    *(_WORD *)(v8 + 22) = 1024;
    *(_DWORD *)(v0 + 672) = v37 & 1;
    sub_23FD75044();
    _os_log_impl(&dword_23FBF8000, v5, v6, "ToolExecution: Updating execution of %s with parameters - %s confirmation value %{BOOL}d", (uint8_t *)v8, 0x1Cu);
    swift_arrayDestroy();
    sub_23FBFEFA0();
  }
  v14 = *(_QWORD *)(v0 + 512);
  v15 = *(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 600) + 8);
  v15(*(_QWORD *)(v0 + 608), *(_QWORD *)(v0 + 592));
  sub_23FC10048();

  v16 = *(void (**)(uint64_t))(v14 + 8);
  v17 = sub_23FC5E880();
  v16(v17);
  *(_QWORD *)(v0 + 632) = v16;
  *(_QWORD *)(v0 + 624) = v15;
  v18 = *(NSObject **)(v0 + 576);
  sub_23FC757FC();
  v19 = sub_23FCF2968();
  v21 = v20;
  ((void (*)(uint64_t))v20)(v19);
  sub_23FD72BE4();
  v22 = sub_23FC75640();
  v23 = sub_23FC75E24(v22);
  v24 = *(_QWORD *)(v0 + 576);
  v26 = *(_QWORD *)(v0 + 496);
  v25 = *(_QWORD *)(v0 + 504);
  if (v23)
  {
    v27 = *(_QWORD *)(v0 + 488);
    v35 = *(_QWORD *)(v0 + 472);
    v28 = *(_QWORD *)(v0 + 464);
    v36 = v21;
    v29 = (uint8_t *)sub_23FBFEFF4();
    v39[0] = sub_23FBFEFF4();
    *(_DWORD *)v29 = 136315138;
    v36(v27, v26, v28);
    v30 = sub_23FD59DB8();
    *(_QWORD *)(v0 + 40) = sub_23FC5C074(v30, v31);
    sub_23FD75044();
    swift_bridgeObjectRelease();
    v32 = *(void (**)(uint64_t))(v35 + 8);
    v33 = sub_23FC5E96C();
    v32(v33);
    sub_23FBFF114(&dword_23FBF8000, v18, (os_log_type_t)v3, "ToolExecution: Attempting to respond to event: %s", v29);
    sub_23FBFF10C();
    sub_23FBFEFA0();
  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 472) + 8))(*(_QWORD *)(v0 + 496), *(_QWORD *)(v0 + 464));

  ((void (*)(uint64_t, uint64_t))v16)(v24, v25);
  v21(*(_QWORD *)(v0 + 480), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 464));
  v34 = (char *)&loc_23FD51678 + *((int *)qword_23FD52BA8 + sub_23FC768C4());
  __asm { BR              X10 }
}

uint64_t sub_23FD5168C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t);
  uint64_t v15;
  uint64_t (*v16)(void);

  *(_QWORD *)(v3 - 144) = v1;
  *(_QWORD *)(v3 - 104) = v2;
  v4 = v0[60];
  sub_23FC0AAF8();
  v5 = *(void **)(v4 + 16);
  *(_QWORD *)(v3 - 112) = *(_QWORD *)(v4 + 40);
  swift_bridgeObjectRelease();
  sub_23FC595E0();

  sub_23FC757FC();
  v6 = (void *)sub_23FD72BE4();
  v7 = sub_23FD74F54();
  if (sub_23FD59A38(v7))
  {
    *(_WORD *)sub_23FBFEFF4() = 0;
    sub_23FD599B4(&dword_23FBF8000, v8, v9, "ToolExecution: Auto-confirming alert since this is not currently supported in Sage");
    sub_23FBFEFA0();
  }
  v11 = v0[54];
  v10 = v0[55];
  v12 = v0[53];

  sub_23FC75FE0();
  sub_23FC5A810();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v11 + 104))(v10, *MEMORY[0x24BEB9068], v12);
  (*(void (**)(uint64_t))(v3 - 112))(v10);
  sub_23FC101F4();
  v13 = sub_23FC5E96C();
  v14(v13);
  v15 = sub_23FC5A8DC();
  (*(void (**)(uint64_t))(v3 - 104))(v15);
  sub_23FD5979C();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  sub_23FC5B980();
  sub_23FC5BCA0();
  sub_23FC090D0();
  sub_23FC5AB04();
  sub_23FC5A574();
  sub_23FC090C0();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC5C438();
  sub_23FC5C430();
  sub_23FC5C428();
  sub_23FC5C420();
  sub_23FC5BFE8();
  sub_23FC5BFE0();
  sub_23FC5C980();
  sub_23FC5D834();
  sub_23FC5E0B8();
  sub_23FC5E0B0();
  sub_23FC5E0A8();
  sub_23FC5E0A0();
  sub_23FC5E098();
  sub_23FC5E090();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_23FC5BFA0();
  sub_23FC5BFF0();
  sub_23FC5D914();
  sub_23FC5D7D8();
  sub_23FC5D7D0();
  sub_23FC5EC14();
  sub_23FC5DC9C();
  sub_23FC5C528();
  sub_23FD59BB4();
  return v16();
}

uint64_t sub_23FD52BD8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23FC5D3A4();
  sub_23FC75274(v2);
  *(_QWORD *)(v0 + 664) = v1;
  swift_task_dealloc();
  sub_23FC090C8(*(_QWORD *)(v0 + 200));
  return sub_23FC5A63C();
}

uint64_t sub_23FD52C38()
{
  _QWORD *v0;
  NSObject *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  os_log_type_t v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t);
  void (*v13)(uint64_t);
  uint64_t v14;
  void (*v15)(uint64_t *);
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(void);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = v0[68];
  v3 = v0[30];
  v2 = v0[31];
  v4 = v0[27];
  v5 = v0[28];
  sub_23FC757FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v3, v2, v4);
  sub_23FD72BE4();
  v6 = sub_23FC75640();
  if (sub_23FC09114(v6))
  {
    v7 = v0[29];
    v8 = (uint8_t *)sub_23FBFEFF4();
    v27 = sub_23FBFEFF4();
    *(_DWORD *)v8 = 136315138;
    sub_23FD59BD0(v7);
    v9 = sub_23FD59DB8();
    v0[2] = sub_23FC9DC40(v9, v10, &v27);
    sub_23FD75044();
    swift_bridgeObjectRelease();
    v11 = sub_23FC5E96C();
    v12(v11);
    sub_23FBFF114(&dword_23FBF8000, v1, (os_log_type_t)v4, "ToolExecution: Choosing value: %s", v8);
    sub_23FBFF10C();
    sub_23FBFEFA0();
  }
  v13 = (void (*)(uint64_t))v0[79];
  (*(void (**)(_QWORD, _QWORD))(v0[28] + 8))(v0[30], v0[27]);

  v14 = sub_23FBFF1AC();
  v13(v14);
  v15 = (void (*)(uint64_t *))v0[80];
  v26 = v0[50];
  v24 = v0[48];
  v25 = v0[47];
  v16 = v0[28];
  v17 = v0[22];
  v18 = (uint64_t *)v0[23];
  sub_23FBFD684(&qword_256F5F9B0);
  v19 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_23FD769D0;
  sub_23FD59BD0(v20 + v19);
  *v18 = v20;
  sub_23FD59DC4(*MEMORY[0x24BEB8DF8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 104));
  v15(v18);
  sub_23FC58AC8();
  sub_23FBFF204((uint64_t)v18, *(uint64_t (**)(uint64_t, uint64_t))(v17 + 8));
  sub_23FC5E96C();
  sub_23FC75CCC();
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v26, v25);
  sub_23FD599AC();
  v21 = sub_23FC75B44();
  sub_23FD59CB4(*(_QWORD *)(v21 - 8));
  sub_23FD596F0();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  sub_23FC5B980();
  sub_23FC5BCA0();
  sub_23FC090D0();
  sub_23FC5AB04();
  sub_23FC5A574();
  sub_23FC090C0();
  sub_23FC5EFD4();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC5C438();
  sub_23FC5C430();
  sub_23FC5C428();
  sub_23FC5C420();
  sub_23FC5BFE8();
  sub_23FC5BFE0();
  sub_23FC5C980();
  sub_23FC5D834();
  sub_23FC5E0B8();
  sub_23FC5E0B0();
  sub_23FC5E0A8();
  sub_23FC5E0A0();
  sub_23FC5E098();
  sub_23FC5E090();
  sub_23FC5BFA0();
  sub_23FC5BFF0();
  sub_23FC5D914();
  sub_23FC5D7D8();
  sub_23FC5D7D0();
  sub_23FC5EC14();
  sub_23FC5DC9C();
  sub_23FC5CDA8();
  v22 = (uint64_t (*)(void))sub_23FC5C528();
  return sub_23FD59990(v22);
}

uint64_t sub_23FD52F78()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;

  v1 = *(void (**)(uint64_t))(v0 + 624);
  sub_23FD59BE0();
  swift_release();
  v2 = sub_23FC5A8DC();
  v3(v2);
  v4 = sub_23FC5E880();
  v1(v4);
  v5 = sub_23FC75B44();
  sub_23FD1FB08(*(_QWORD *)(v5 - 8));
  sub_23FD596F0();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  sub_23FC5B980();
  sub_23FC5BCA0();
  sub_23FC090C0();
  sub_23FC090D0();
  sub_23FC5AC3C();
  sub_23FC5AB04();
  sub_23FC5A574();
  sub_23FC5EFD4();
  sub_23FC5D050();
  sub_23FC5D048();
  sub_23FC5D040();
  sub_23FC5C988();
  sub_23FC5C440();
  sub_23FC5C438();
  sub_23FC5C430();
  sub_23FC5C428();
  sub_23FC5C420();
  sub_23FC5BFE8();
  sub_23FC5BFE0();
  sub_23FC5C980();
  sub_23FC5D834();
  sub_23FC5E0B8();
  sub_23FC5E0B0();
  sub_23FC5E0A8();
  sub_23FC5E0A0();
  sub_23FC5E098();
  sub_23FC5E090();
  sub_23FC5BFA0();
  sub_23FC5BFF0();
  sub_23FC5D914();
  sub_23FC5D7D8();
  sub_23FC5D7D0();
  sub_23FC5EC14();
  sub_23FC5DC9C();
  sub_23FC5CDA8();
  return sub_23FD59990(*(uint64_t (**)(void))(v0 + 8));
}

void sub_23FD530BC()
{
  uint64_t **v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *v0;
  v2 = sub_23FC7E2FC();
  sub_23FBFF0E4(v2);
  type metadata accessor for ToolExecutionEvent(255, v1[10], v1[12], v3);
  v4 = sub_23FD75038();
  sub_23FBFF0E4(v4);
  sub_23FBFEF74((uint64_t)v0 + (*v0)[18], &qword_256F5EB18);
  sub_23FC090C8(*(_QWORD *)(v1[11] - 8));
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v0 + (*v0)[20]);
  swift_defaultActor_destroy();
  sub_23FC09258();
}

uint64_t sub_23FD53164()
{
  sub_23FD530BC();
  return swift_defaultActor_deallocate();
}

void type metadata accessor for ToolExecution()
{
  JUMPOUT(0x24267974CLL);
}

uint64_t type metadata accessor for ResultResponse(uint64_t a1)
{
  return sub_23FC04944(a1, (uint64_t *)&unk_256F657C0);
}

uint64_t *sub_23FD5319C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v13 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = (void *)a2[2];
    a1[2] = (uint64_t)v6;
    v7 = *(int *)(a3 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_23FD74840();
    swift_bridgeObjectRetain();
    v11 = v6;
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v9, 1, v10))
    {
      v12 = sub_23FBFD684(&qword_256F5EB28);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v8, 0, 1, v10);
    }
  }
  return v3;
}

uint64_t sub_23FD53290(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  swift_bridgeObjectRelease();

  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_23FD74840();
  result = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return result;
}

_QWORD *sub_23FD53304(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = (void *)a2[2];
  a1[2] = v5;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23FD74840();
  swift_bridgeObjectRetain();
  v10 = v5;
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v8, 1, v9))
  {
    v11 = sub_23FBFD684(&qword_256F5EB28);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v7, 0, 1, v9);
  }
  return a1;
}

_QWORD *sub_23FD533CC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (void *)a1[2];
  v7 = (void *)a2[2];
  a1[2] = v7;
  v8 = v7;

  v9 = *(int *)(a3 + 20);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_23FD74840();
  v13 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v10, 1, v12);
  v14 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v11, 1, v12);
  if (!v13)
  {
    v15 = *(_QWORD *)(v12 - 8);
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 24))(v10, v11, v12);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v16 = sub_23FBFD684(&qword_256F5EB28);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v10, 0, 1, v12);
  return a1;
}

uint64_t sub_23FD534FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(int *)(a3 + 20);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = sub_23FD74840();
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v6, 1, v7))
  {
    v8 = sub_23FBFD684(&qword_256F5EB28);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v5, 0, 1, v7);
  }
  return a1;
}

_QWORD *sub_23FD535B0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = (void *)a1[2];
  a1[2] = a2[2];

  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_23FD74840();
  v12 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v9, 1, v11);
  v13 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v10, 1, v11);
  if (!v12)
  {
    v14 = *(_QWORD *)(v11 - 8);
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v9, v10, v11);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v15 = sub_23FBFD684(&qword_256F5EB28);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v9, 0, 1, v11);
  return a1;
}

uint64_t sub_23FD536CC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FD536D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = sub_23FBFD684(&qword_256F5EB28);
    return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1 + *(int *)(a3 + 20), a2, v9);
  }
}

uint64_t sub_23FD5375C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FD53768(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  else
  {
    v7 = sub_23FBFD684(&qword_256F5EB28);
    return sub_23FC0608C(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

void sub_23FD537D0()
{
  unint64_t v0;

  sub_23FD27F24(319, (unint64_t *)&qword_256F657D0, (void (*)(uint64_t))MEMORY[0x24BEB9E48]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_23FD53854(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  unint64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t *v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  unint64_t v52;
  char v53;
  char v54;
  unint64_t v55;
  char *v56;
  char v57;
  void (*v58)(char *, uint64_t);
  uint64_t v59;
  int64_t v60;
  uint64_t v61;
  int64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  int64_t v67;
  _BOOL4 v68;
  uint64_t v69;
  unint64_t v70;

  v4 = sub_23FD73C28();
  v66 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4, v5);
  v65 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)&v59 - v9;
  v11 = sub_23FBFD684(&qword_256F5EBE0);
  v13 = MEMORY[0x24BDAC7A8](v11, v12);
  v15 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v13, v16);
  v19 = (uint64_t *)((char *)&v59 - v18);
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v67 = 0;
  v63 = a1;
  v64 = a2;
  v22 = *(_QWORD *)(a1 + 64);
  v21 = a1 + 64;
  v20 = v22;
  v23 = 1 << *(_BYTE *)(v21 - 32);
  v24 = -1;
  if (v23 < 64)
    v24 = ~(-1 << v23);
  v25 = v24 & v20;
  v61 = v21;
  v62 = (unint64_t)(v23 + 63) >> 6;
  v60 = v62 - 1;
  v26 = &qword_256F5DAD0;
  v69 = v4;
  while (1)
  {
    if (v25)
    {
      v27 = __clz(__rbit64(v25));
      v28 = (v25 - 1) & v25;
      v29 = v66;
      v30 = v27 | (v67 << 6);
LABEL_8:
      v31 = *(_QWORD *)(v63 + 56);
      v32 = (_QWORD *)(*(_QWORD *)(v63 + 48) + 16 * v30);
      v33 = v32[1];
      *(_QWORD *)v15 = *v32;
      *((_QWORD *)v15 + 1) = v33;
      v34 = v31 + *(_QWORD *)(v29 + 72) * v30;
      v35 = sub_23FBFD684(v26);
      (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(&v15[*(int *)(v35 + 48)], v34, v69);
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v15, 0, 1, v35);
      swift_bridgeObjectRetain();
      goto LABEL_30;
    }
    v36 = v67 + 1;
    if (__OFADD__(v67, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    v29 = v66;
    if (v36 < v62)
    {
      v37 = *(_QWORD *)(v61 + 8 * v36);
      if (v37)
        goto LABEL_12;
      v38 = v67 + 2;
      ++v67;
      if (v36 + 1 < v62)
      {
        v37 = *(_QWORD *)(v61 + 8 * v38);
        if (v37)
          goto LABEL_15;
        v67 = v36 + 1;
        if (v36 + 2 < v62)
        {
          v37 = *(_QWORD *)(v61 + 8 * (v36 + 2));
          if (v37)
          {
            v36 += 2;
            goto LABEL_12;
          }
          v67 = v36 + 2;
          if (v36 + 3 < v62)
          {
            v37 = *(_QWORD *)(v61 + 8 * (v36 + 3));
            if (v37)
            {
              v36 += 3;
              goto LABEL_12;
            }
            v38 = v36 + 4;
            v67 = v36 + 3;
            if (v36 + 4 < v62)
              break;
          }
        }
      }
    }
LABEL_29:
    v39 = sub_23FBFD684(v26);
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v15, 1, 1, v39);
    v28 = 0;
LABEL_30:
    sub_23FC12DD8((uint64_t)v15, (uint64_t)v19, &qword_256F5EBE0);
    v40 = sub_23FBFD684(v26);
    v41 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v19, 1, v40);
    v68 = v41 == 1;
    if (v41 == 1)
      return v68;
    v70 = v28;
    v42 = v26;
    v43 = v15;
    v44 = (char *)v19 + *(int *)(v40 + 48);
    v45 = *v19;
    v46 = v19[1];
    v47 = v19;
    v48 = v69;
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v10, v44, v69);
    v49 = v45;
    v50 = v64;
    v51 = v10;
    v52 = sub_23FC84D84(v49, v46);
    v54 = v53;
    swift_bridgeObjectRelease();
    if ((v54 & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v29 + 8))(v51, v48);
      return 0;
    }
    v55 = *(_QWORD *)(v50 + 56) + *(_QWORD *)(v29 + 72) * v52;
    v56 = v65;
    (*(void (**)(char *, unint64_t, uint64_t))(v29 + 16))(v65, v55, v48);
    sub_23FBFEE2C(qword_256F65848, (uint64_t (*)(uint64_t))MEMORY[0x24BE566B8], MEMORY[0x24BE566C8]);
    v57 = sub_23FD74BDC();
    v58 = *(void (**)(char *, uint64_t))(v29 + 8);
    v58(v56, v48);
    result = ((uint64_t (*)(char *, uint64_t))v58)(v51, v48);
    v10 = v51;
    v15 = v43;
    v19 = v47;
    v26 = v42;
    v25 = v70;
    if ((v57 & 1) == 0)
      return v68;
  }
  v37 = *(_QWORD *)(v61 + 8 * v38);
  if (v37)
  {
LABEL_15:
    v36 = v38;
LABEL_12:
    v28 = (v37 - 1) & v37;
    v30 = __clz(__rbit64(v37)) + (v36 << 6);
    v67 = v36;
    goto LABEL_8;
  }
  while (1)
  {
    v36 = v38 + 1;
    if (__OFADD__(v38, 1))
      break;
    if (v36 >= v62)
    {
      v67 = v60;
      goto LABEL_29;
    }
    v37 = *(_QWORD *)(v61 + 8 * v36);
    ++v38;
    if (v37)
      goto LABEL_12;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_23FD53CAC(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr))
{
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  a4(&v7);
  v5 = *a1 + 8;
  result = sub_23FD75044();
  *a1 = v5;
  return result;
}

uint64_t type metadata accessor for DialogResponseError(uint64_t a1)
{
  return sub_23FC04944(a1, qword_256F65940);
}

void sub_23FD53D18(uint64_t (*a1)(void)@<X0>, _QWORD *a2@<X8>)
{
  *a2 = a1();
  sub_23FBFF0A0();
}

unint64_t sub_23FD53D3C()
{
  unint64_t result;

  result = qword_256F65828;
  if (!qword_256F65828)
  {
    result = MEMORY[0x2426797E8](&unk_23FD83018, &type metadata for ToolExecutionError);
    atomic_store(result, (unint64_t *)&qword_256F65828);
  }
  return result;
}

void sub_23FD53D78(uint64_t *a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;

  sub_23FD5058C(a1, a2, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), a3);
}

uint64_t sub_23FD53D90(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v30;

  v4 = a4;
  if (!a3)
  {
    v8 = MEMORY[0x24BEE4B08];
LABEL_35:
    sub_23FC101F4();
    return v8;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  sub_23FBFD684(&qword_256F5F338);
  result = sub_23FD750D4();
  v8 = result;
  v30 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_39;
    if (v14 >= v30)
      goto LABEL_35;
    v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      v10 = v14 + 1;
      if (v14 + 1 >= v30)
        goto LABEL_35;
      v15 = a1[v10];
      if (!v15)
      {
        v10 = v14 + 2;
        if (v14 + 2 >= v30)
          goto LABEL_35;
        v15 = a1[v10];
        if (!v15)
          break;
      }
    }
LABEL_23:
    v9 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v13);
    v18 = *v17;
    v19 = v17[1];
    sub_23FD7544C();
    swift_bridgeObjectRetain();
    sub_23FD74C30();
    result = sub_23FD75470();
    v20 = -1 << *(_BYTE *)(v8 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6))) == 0)
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      while (++v22 != v25 || (v24 & 1) == 0)
      {
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v11 + 8 * v22);
        if (v27 != -1)
        {
          v23 = __clz(__rbit64(~v27)) + (v22 << 6);
          goto LABEL_33;
        }
      }
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_33:
    *(_QWORD *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v28 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v23);
    *v28 = v18;
    v28[1] = v19;
    ++*(_QWORD *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
      goto LABEL_38;
    if (!v5)
      goto LABEL_35;
  }
  v16 = v14 + 3;
  if (v16 >= v30)
    goto LABEL_35;
  v15 = a1[v16];
  if (v15)
  {
    v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= v30)
      goto LABEL_35;
    v15 = a1[v10];
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_23FD54018(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t i;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;

  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return result;
  v2 = result;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  if (!v6)
    goto LABEL_6;
LABEL_5:
  v9 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (i = v9 | (v8 << 6); ; i = __clz(__rbit64(v12)) + (v8 << 6))
  {
    v14 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * i);
    v15 = *v14;
    v16 = v14[1];
    swift_bridgeObjectRetain();
    sub_23FD54620(v15, v16);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if (v6)
      goto LABEL_5;
LABEL_6:
    v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v11 >= v7)
      return swift_release();
    v12 = *(_QWORD *)(v3 + 8 * v11);
    ++v8;
    if (!v12)
    {
      v8 = v11 + 1;
      if (v11 + 1 >= v7)
        return swift_release();
      v12 = *(_QWORD *)(v3 + 8 * v8);
      if (!v12)
      {
        v8 = v11 + 2;
        if (v11 + 2 >= v7)
          return swift_release();
        v12 = *(_QWORD *)(v3 + 8 * v8);
        if (!v12)
        {
          v8 = v11 + 3;
          if (v11 + 3 >= v7)
            return swift_release();
          v12 = *(_QWORD *)(v3 + 8 * v8);
          if (!v12)
            break;
        }
      }
    }
LABEL_21:
    v6 = (v12 - 1) & v12;
  }
  v13 = v11 + 4;
  if (v13 >= v7)
    return swift_release();
  v12 = *(_QWORD *)(v3 + 8 * v13);
  if (v12)
  {
    v8 = v13;
    goto LABEL_21;
  }
  while (1)
  {
    v8 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v8 >= v7)
      return swift_release();
    v12 = *(_QWORD *)(v3 + 8 * v8);
    ++v13;
    if (v12)
      goto LABEL_21;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_23FD541B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  BOOL v24;
  uint64_t v25;
  _QWORD *v26;
  BOOL v27;
  uint64_t isStackAllocationSafe;
  uint64_t v29;
  char v30;
  unint64_t v31;
  size_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int64_t v42;
  unint64_t v43;
  uint64_t v44;

  v2 = a2;
  v44 = *MEMORY[0x24BDAC8D0];
  if (*(_QWORD *)(a2 + 16))
  {
    v4 = *(_QWORD *)(a1 + 56);
    v38 = a1 + 56;
    v5 = -1 << *(_BYTE *)(a1 + 32);
    v36 = ~v5;
    if (-v5 < 64)
      v6 = ~(-1 << -(char)v5);
    else
      v6 = -1;
    v7 = v6 & v4;
    v37 = (unint64_t)(63 - v5) >> 6;
    v8 = a2 + 56;
    swift_bridgeObjectRetain();
    v9 = 0;
    if (!v7)
      goto LABEL_7;
LABEL_6:
    v10 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v11 = v10 | (v9 << 6);
    while (1)
    {
      v16 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v11);
      v18 = *v16;
      v17 = v16[1];
      sub_23FD7544C();
      swift_bridgeObjectRetain();
      sub_23FD74C30();
      v19 = sub_23FD75470();
      v20 = -1 << *(_BYTE *)(v2 + 32);
      v21 = v19 & ~v20;
      if (((*(_QWORD *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) != 0)
        break;
LABEL_37:
      swift_bridgeObjectRelease();
      if (v7)
        goto LABEL_6;
LABEL_7:
      v12 = v9 + 1;
      if (__OFADD__(v9, 1))
      {
        __break(1u);
        goto LABEL_50;
      }
      if (v12 >= v37)
        goto LABEL_48;
      v13 = *(_QWORD *)(v38 + 8 * v12);
      v14 = v9 + 1;
      if (!v13)
      {
        v14 = v9 + 2;
        if (v9 + 2 >= v37)
          goto LABEL_48;
        v13 = *(_QWORD *)(v38 + 8 * v14);
        if (!v13)
        {
          v14 = v9 + 3;
          if (v9 + 3 >= v37)
            goto LABEL_48;
          v13 = *(_QWORD *)(v38 + 8 * v14);
          if (!v13)
          {
            v14 = v9 + 4;
            if (v9 + 4 >= v37)
              goto LABEL_48;
            v13 = *(_QWORD *)(v38 + 8 * v14);
            if (!v13)
            {
              v15 = v9 + 5;
              if (v9 + 5 >= v37)
              {
LABEL_48:
                sub_23FC08F30();
                return v2;
              }
              v13 = *(_QWORD *)(v38 + 8 * v15);
              if (!v13)
              {
                while (1)
                {
                  v14 = v15 + 1;
                  if (__OFADD__(v15, 1))
                    break;
                  if (v14 >= v37)
                    goto LABEL_48;
                  v13 = *(_QWORD *)(v38 + 8 * v14);
                  ++v15;
                  if (v13)
                    goto LABEL_22;
                }
LABEL_50:
                __break(1u);
              }
              v14 = v9 + 5;
            }
          }
        }
      }
LABEL_22:
      v7 = (v13 - 1) & v13;
      v11 = __clz(__rbit64(v13)) + (v14 << 6);
      v9 = v14;
    }
    v22 = *(_QWORD *)(v2 + 48);
    v23 = (_QWORD *)(v22 + 16 * v21);
    v24 = *v23 == v18 && v23[1] == v17;
    if (v24 || (sub_23FD75380() & 1) != 0)
    {
      isStackAllocationSafe = swift_bridgeObjectRelease();
      v39 = a1;
      v40 = v38;
      v41 = v36;
      v42 = v9;
      v43 = v7;
    }
    else
    {
      v25 = ~v20;
      do
      {
        v21 = (v21 + 1) & v25;
        if (((*(_QWORD *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
          goto LABEL_37;
        v26 = (_QWORD *)(v22 + 16 * v21);
        v27 = *v26 == v18 && v26[1] == v17;
      }
      while (!v27 && (sub_23FD75380() & 1) == 0);
      v39 = a1;
      v40 = v38;
      v41 = v36;
      v42 = v9;
      v43 = v7;
      isStackAllocationSafe = swift_bridgeObjectRelease();
    }
    v30 = *(_BYTE *)(v2 + 32);
    v31 = (unint64_t)((1 << v30) + 63) >> 6;
    v32 = 8 * v31;
    if ((v30 & 0x3Fu) < 0xE
      || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
    {
      MEMORY[0x24BDAC7A8](isStackAllocationSafe, v29);
      memcpy((char *)&v36 - ((v32 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v32);
      v33 = sub_23FD547AC((uint64_t)&v36 - ((v32 + 15) & 0x3FFFFFFFFFFFFFF0), v31, v2, v21, &v39);
      swift_release();
      sub_23FC08F30();
    }
    else
    {
      v34 = (void *)swift_slowAlloc();
      memcpy(v34, (const void *)(v2 + 56), v32);
      v33 = sub_23FD547AC((uint64_t)v34, v31, v2, v21, &v39);
      swift_release();
      sub_23FC08F30();
      MEMORY[0x2426798D8](v34, -1, -1);
    }
    return v33;
  }
  else
  {
    swift_release();
    return MEMORY[0x24BEE4B08];
  }
}

uint64_t sub_23FD54620(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v19;

  v5 = *v2;
  sub_23FD7544C();
  swift_bridgeObjectRetain();
  sub_23FD74C30();
  v6 = sub_23FD75470();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  v9 = *(_QWORD *)(v5 + 48);
  v10 = (_QWORD *)(v9 + 16 * v8);
  v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (sub_23FD75380() & 1) == 0)
  {
    v15 = ~v7;
    do
    {
      v8 = (v8 + 1) & v15;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_18;
      v16 = (_QWORD *)(v9 + 16 * v8);
      v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (sub_23FD75380() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v13 = *v2;
  v19 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_23FC86EF0();
    v13 = v19;
  }
  v14 = *(_QWORD *)(*(_QWORD *)(v13 + 48) + 16 * v8);
  sub_23FD54A84(v8);
  *v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_23FD547AC(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  BOOL v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t i;
  unint64_t v33;
  _QWORD *v34;
  BOOL v35;
  uint64_t v37;
  unint64_t *v38;
  uint64_t v39;

  v7 = *(_QWORD *)(a3 + 16);
  v38 = (unint64_t *)result;
  *(_QWORD *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v8 = v7 - 1;
  v39 = a3 + 56;
  while (2)
  {
    v37 = v8;
    do
    {
      while (1)
      {
        v9 = a5[3];
        v10 = a5[4];
        if (v10)
        {
          v11 = (v10 - 1) & v10;
          v12 = __clz(__rbit64(v10)) | (v9 << 6);
        }
        else
        {
          v13 = v9 + 1;
          if (__OFADD__(v9, 1))
          {
            __break(1u);
            goto LABEL_46;
          }
          v14 = (unint64_t)(a5[2] + 64) >> 6;
          v15 = a5[3];
          if (v13 >= v14)
            goto LABEL_44;
          v16 = a5[1];
          v17 = *(_QWORD *)(v16 + 8 * v13);
          if (!v17)
          {
            v15 = v9 + 1;
            if (v9 + 2 >= v14)
              goto LABEL_44;
            v17 = *(_QWORD *)(v16 + 8 * (v9 + 2));
            if (v17)
            {
              v13 = v9 + 2;
            }
            else
            {
              v15 = v9 + 2;
              if (v9 + 3 >= v14)
                goto LABEL_44;
              v17 = *(_QWORD *)(v16 + 8 * (v9 + 3));
              if (v17)
              {
                v13 = v9 + 3;
              }
              else
              {
                v13 = v9 + 4;
                v15 = v9 + 3;
                if (v9 + 4 >= v14)
                  goto LABEL_44;
                v17 = *(_QWORD *)(v16 + 8 * v13);
                if (!v17)
                {
                  v18 = v9 + 5;
                  while (v18 < v14)
                  {
                    v17 = *(_QWORD *)(v16 + 8 * v18++);
                    if (v17)
                    {
                      v13 = v18 - 1;
                      goto LABEL_20;
                    }
                  }
                  v15 = v14 - 1;
LABEL_44:
                  a5[3] = v15;
                  a5[4] = 0;
                  swift_retain();
                  return sub_23FD53D90(v38, a2, v37, a3);
                }
              }
            }
          }
LABEL_20:
          v11 = (v17 - 1) & v17;
          v12 = __clz(__rbit64(v17)) + (v13 << 6);
          v9 = v13;
        }
        v19 = (uint64_t *)(*(_QWORD *)(*a5 + 48) + 16 * v12);
        v21 = *v19;
        v20 = v19[1];
        a5[3] = v9;
        a5[4] = v11;
        sub_23FD7544C();
        swift_bridgeObjectRetain();
        sub_23FD74C30();
        v22 = sub_23FD75470();
        v23 = -1 << *(_BYTE *)(a3 + 32);
        v24 = v22 & ~v23;
        v25 = v24 >> 6;
        v26 = 1 << v24;
        if (((1 << v24) & *(_QWORD *)(v39 + 8 * (v24 >> 6))) != 0)
          break;
LABEL_38:
        result = swift_bridgeObjectRelease();
      }
      v27 = *(_QWORD *)(a3 + 48);
      v28 = (_QWORD *)(v27 + 16 * v24);
      v29 = *v28 == v21 && v28[1] == v20;
      if (!v29 && (sub_23FD75380() & 1) == 0)
      {
        v31 = ~v23;
        for (i = v24 + 1; ; i = v33 + 1)
        {
          v33 = i & v31;
          if (((*(_QWORD *)(v39 + (((i & v31) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v31)) & 1) == 0)
            break;
          v34 = (_QWORD *)(v27 + 16 * v33);
          v35 = *v34 == v21 && v34[1] == v20;
          if (v35 || (sub_23FD75380() & 1) != 0)
          {
            result = swift_bridgeObjectRelease();
            v25 = v33 >> 6;
            v26 = 1 << v33;
            goto LABEL_28;
          }
        }
        goto LABEL_38;
      }
      result = swift_bridgeObjectRelease();
LABEL_28:
      v30 = v38[v25];
      v38[v25] = v30 & ~v26;
    }
    while ((v26 & v30) == 0);
    v8 = v37 - 1;
    if (__OFSUB__(v37, 1))
    {
LABEL_46:
      __break(1u);
      return result;
    }
    if (v37 != 1)
      continue;
    return MEMORY[0x24BEE4B08];
  }
}

unint64_t sub_23FD54A84(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  BOOL v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_23FD750A4();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        sub_23FD7544C();
        swift_bridgeObjectRetain();
        sub_23FD74C30();
        v10 = sub_23FD75470();
        swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 >= v9 && v2 >= (uint64_t)v11)
          {
LABEL_15:
            v14 = *(_QWORD *)(v3 + 48);
            v15 = (_OWORD *)(v14 + 16 * v2);
            v16 = (_OWORD *)(v14 + 16 * v6);
            v17 = v2 != v6 || v15 >= v16 + 1;
            v2 = v6;
            if (v17)
            {
              *v15 = *v16;
              v2 = v6;
            }
          }
        }
        else if (v11 >= v9 || v2 >= (uint64_t)v11)
        {
          goto LABEL_15;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v18 = *(_QWORD *)(v3 + 16);
  v19 = __OFSUB__(v18, 1);
  v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_23FD54C3C(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(_BYTE *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a4 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2)
  {
    sub_23FC5AFCC();
    return sub_23FD3D50C();
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_23FD54CB0(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(_BYTE *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a4 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2)
    return swift_bridgeObjectRetain();
LABEL_8:
  __break(1u);
  return result;
}

void type metadata accessor for ToolExecution.Outcome()
{
  JUMPOUT(0x24267974CLL);
}

uint64_t sub_23FD54D14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23FBFD684(&qword_256F5EB18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_23FD54D5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DialogResponseError(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_23FD54DA0(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  v2 = sub_23FD59D00(a1, a2);
  sub_23FBFF0E4(v2);
  sub_23FBFF0A0();
}

uint64_t sub_23FD54DC4(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  uint64_t i;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v2 = 64;
  for (i = 9; i - 7 < (unint64_t)(v3 + 63) >> 6; ++i)
  {
    v1 = *(_QWORD *)(a1 + 8 * i);
    v2 += 64;
    if (v1)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_23FD54E44()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_23FD54E4C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  char v22;
  char v23;
  char v24;
  const char *v25;
  void *v26;
  void *v27;
  char *v28;
  char *v29;
  char *v30;
  void *v31;
  uint64_t *v32;

  v25 = "(";
  v26 = &unk_23FD82EB0;
  v27 = &unk_23FD82EB0;
  v16 = &unk_23FD82E50;
  v17 = &unk_23FD82EC8;
  v2 = sub_23FD747C8();
  v3 = v2;
  if (v4 <= 0x3F)
  {
    v18 = (void *)(*(_QWORD *)(v2 - 8) + 64);
    v19 = &unk_23FD82EC8;
    swift_getTupleTypeLayout();
    v28 = &v24;
    v16 = &unk_23FD82E50;
    sub_23FD27F24(319, (unint64_t *)&qword_256F657D0, (void (*)(uint64_t))MEMORY[0x24BEB9E48]);
    v3 = v5;
    if (v6 <= 0x3F)
    {
      v7 = *(_QWORD *)(v5 - 8) + 64;
      v18 = &unk_23FD82EE0;
      v19 = &unk_23FD82EE0;
      swift_getTupleTypeLayout();
      v29 = &v23;
      v16 = &unk_23FD82E50;
      v17 = &unk_23FD82EE0;
      v8 = sub_23FD74798();
      v3 = v8;
      if (v9 <= 0x3F)
      {
        v18 = (void *)(*(_QWORD *)(v8 - 8) + 64);
        v19 = (void *)v7;
        v20 = &unk_23FD82EE0;
        v21 = &unk_23FD82EE0;
        swift_getTupleTypeLayout();
        v30 = &v22;
        v31 = &unk_23FD82EE0;
        v3 = type metadata accessor for TypedValueExecutionResult(319, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 32), v10);
        if (v11 <= 0x3F)
        {
          sub_23FD27F24(319, &qword_256F65760, (void (*)(uint64_t))type metadata accessor for ResultResponse);
          if (v13 > 0x3F)
          {
            return v12;
          }
          else
          {
            swift_getTupleTypeLayout2();
            v32 = &v15;
            swift_initEnumMetadataMultiPayload();
            return 0;
          }
        }
      }
    }
  }
  return v3;
}

uint64_t *sub_23FD55018(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  unint64_t v6;
  uint64_t v7;
  unsigned int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  size_t v12;
  size_t v13;
  size_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  unint64_t v19;
  uint64_t v20;
  size_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  size_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  void *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  void *v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(uint64_t, uint64_t, uint64_t);
  unint64_t v61;
  id v62;
  _QWORD *v63;
  _QWORD *v64;
  unint64_t v65;
  uint64_t v66;
  void *v67;
  const void *v68;
  id v69;
  unint64_t v70;
  uint64_t v71;
  void *v72;
  _QWORD *v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(uint64_t, uint64_t, uint64_t);
  id v78;
  void *v79;
  const void *v80;
  uint64_t v81;
  size_t v82;
  uint64_t v83;
  _QWORD *v84;
  _QWORD *v85;
  _QWORD *v86;
  _QWORD *v87;
  _QWORD *v88;
  _QWORD *v89;
  _QWORD *v90;
  _QWORD *v91;
  void (*v93)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  int v97;
  unint64_t v98;
  unint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  _QWORD *v102;
  _QWORD *v103;
  _QWORD *v104;
  _QWORD *v105;
  _QWORD *v106;
  unint64_t v107;
  unint64_t v108;
  unint64_t v109;
  const void *v110;
  void *v111;
  void *v112;
  id v113;
  unint64_t v114;
  size_t v115;
  unint64_t v116;
  unint64_t v117;
  size_t v118;
  size_t v119;
  uint64_t v120;
  unsigned int v121;
  unint64_t v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  uint64_t v134;
  unint64_t v135;
  size_t __n;
  unint64_t __na;
  size_t v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;

  v132 = sub_23FD747C8();
  v4 = *(_QWORD *)(v132 - 8);
  v5 = *(_DWORD *)(v4 + 80);
  v140 = v5;
  v128 = v4;
  v130 = *(_QWORD *)(v4 + 64) + 7;
  if (((v130 + ((v140 + 40) & ~v140)) & 0xFFFFFFFFFFFFFFF8) + 16 <= 0x30)
    v6 = 48;
  else
    v6 = ((v130 + ((v5 + 40) & ~(unint64_t)v5)) & 0xFFFFFFFFFFFFFFF8) + 16;
  v139 = sub_23FD74840();
  v7 = *(_QWORD *)(v139 - 8);
  v9 = *(_DWORD *)(v7 + 80);
  v8 = *(_DWORD *)(v7 + 84);
  v10 = v9;
  v134 = v9 + 24;
  v11 = (v10 + 24) & ~v10;
  v120 = v7;
  v12 = *(_QWORD *)(v7 + 64);
  v121 = v8;
  v118 = v12;
  if (v8)
    v13 = v12;
  else
    v13 = v12 + 1;
  v122 = (v9 + 24) & ~(unint64_t)v9;
  v123 = v6;
  v14 = v11 + v13;
  if (((((v11 + v13 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 <= v6)
    v15 = v6;
  else
    v15 = ((((v11 + v13 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  v16 = sub_23FD74798();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_DWORD *)(v17 + 80);
  v125 = v17;
  v126 = *(_QWORD *)(v17 + 64) + v9;
  v127 = v16;
  v138 = v13;
  v135 = ((((v13
           + 7
           + ((v126 + ((v18 + 40) & ~(unint64_t)v18)) & ~(unint64_t)v9)) & 0xFFFFFFFFFFFFFFF8)
         + 23) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  __n = v13 + 7;
  if (v135 <= v15)
    v19 = v15;
  else
    v19 = ((((v13
            + 7
            + ((v126 + ((v18 + 40) & ~(unint64_t)v18)) & ~(unint64_t)v9)) & 0xFFFFFFFFFFFFFFF8)
          + 23) & 0xFFFFFFFFFFFFFFF8)
        + 16;
  v124 = *(_QWORD *)(a3 + 16);
  v20 = *(_QWORD *)(v124 - 8);
  if (*(_DWORD *)(v20 + 84))
    v21 = *(_QWORD *)(v20 + 64);
  else
    v21 = *(_QWORD *)(v20 + 64) + 1;
  v22 = sub_23FD71474();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(_DWORD *)(v23 + 80);
  v25 = v24 & 0xF8 | 7;
  v26 = *(_QWORD *)(v23 + 64) + 7;
  v27 = v21 + v25;
  v28 = (((v26 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
      + 16
      + (v9 | 7)
      + ((v21 + v25) & ~v25);
  v119 = v14;
  v29 = (v28 & ~(v9 | 7)) + v14;
  if (v19 <= v29)
    v30 = (v28 & ~(v9 | 7)) + v14;
  else
    v30 = v19;
  v31 = *(_DWORD *)(v20 + 80);
  v32 = ((v5 | v9 | v18) | v31) & 0xF8 | v25;
  if ((_DWORD)v32 != 7 || ((v9 | v5 | v18 | v24 | v31) & 0x100000) != 0 || v30 + 1 > 0x18)
  {
    v44 = *a2;
    *a1 = *a2;
    v40 = (uint64_t *)(v44 + ((v32 + 16) & ~v32));
    swift_retain();
    return v40;
  }
  v33 = *(unsigned int *)(v23 + 84);
  v34 = *((unsigned __int8 *)a2 + v30);
  while (2)
  {
    v35 = ~v140;
    v36 = ~(unint64_t)v9;
    v37 = ~(unint64_t)v18;
    v38 = ~v25;
    v25 = v34;
    switch(v34)
    {
      case 0u:
        v39 = a2[1];
        v40 = a1;
        *a1 = *a2;
        a1[1] = v39;
        v42 = (void *)a2[2];
        v41 = a2[3];
        a1[2] = (uint64_t)v42;
        a1[3] = v41;
        a1[4] = a2[4];
        *((_BYTE *)a1 + v30) = 0;
        swift_bridgeObjectRetain();
        v43 = v42;
        goto LABEL_43;
      case 1u:
        v45 = a2[1];
        v40 = a1;
        *a1 = *a2;
        a1[1] = v45;
        v46 = (void *)a2[2];
        v47 = a2[3];
        a1[2] = (uint64_t)v46;
        a1[3] = v47;
        v48 = a2[4];
        v49 = a2[5];
        v50 = 1;
        goto LABEL_29;
      case 2u:
        v51 = a2[1];
        v40 = a1;
        *a1 = *a2;
        a1[1] = v51;
        v46 = (void *)a2[2];
        v52 = a2[3];
        a1[2] = (uint64_t)v46;
        a1[3] = v52;
        v48 = a2[4];
        v49 = a2[5];
        v50 = 2;
LABEL_29:
        v40[4] = v48;
        v40[5] = v49;
        *((_BYTE *)v40 + v30) = v50;
        swift_bridgeObjectRetain();
        v53 = v46;
        swift_bridgeObjectRetain();
        goto LABEL_43;
      case 3u:
        v54 = a2[1];
        v40 = a1;
        *a1 = *a2;
        a1[1] = v54;
        v55 = (void *)a2[2];
        a1[2] = (uint64_t)v55;
        v56 = (_QWORD *)(((unint64_t)a1 + 31) & 0xFFFFFFFFFFFFFFF8);
        v57 = (_QWORD *)(((unint64_t)a2 + 31) & 0xFFFFFFFFFFFFFFF8);
        *v56 = *v57;
        v56[1] = v57[1];
        v58 = ((unint64_t)v56 + v140 + 16) & v35;
        v59 = ((unint64_t)v57 + v140 + 16) & v35;
        v60 = *(void (**)(uint64_t, uint64_t, uint64_t))(v128 + 16);
        v61 = v30;
        swift_bridgeObjectRetain();
        v62 = v55;
        swift_bridgeObjectRetain();
        v60(v58, v59, v132);
        v63 = (_QWORD *)((v130 + v58) & 0xFFFFFFFFFFFFFFF8);
        v64 = (_QWORD *)((v130 + v59) & 0xFFFFFFFFFFFFFFF8);
        *v63 = *v64;
        v63[1] = v64[1];
        *((_BYTE *)a1 + v61) = 3;
        goto LABEL_43;
      case 4u:
        v65 = v30;
        v66 = a2[1];
        v40 = a1;
        *a1 = *a2;
        a1[1] = v66;
        v67 = (void *)a2[2];
        a1[2] = (uint64_t)v67;
        v68 = (const void *)(((unint64_t)a2 + v9 + 24) & v36);
        swift_bridgeObjectRetain();
        v69 = v67;
        if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v68, 1, v139))
        {
          memcpy((void *)(((unint64_t)a1 + v10 + 24) & v36), v68, v138);
        }
        else
        {
          (*(void (**)(unint64_t, const void *, uint64_t))(v120 + 16))(((unint64_t)a1 + v10 + 24) & v36, v68, v139);
          _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(((unint64_t)a1 + v10 + 24) & v36, 0, 1, v139);
        }
        v84 = (_QWORD *)((__n + (((unint64_t)a1 + v10 + 24) & v36)) & 0xFFFFFFFFFFFFFFF8);
        v85 = (_QWORD *)(((unint64_t)v68 + __n) & 0xFFFFFFFFFFFFFFF8);
        *v84 = *v85;
        v84[1] = v85[1];
        v86 = (_QWORD *)(((unint64_t)v84 + 23) & 0xFFFFFFFFFFFFFFF8);
        v87 = (_QWORD *)(((unint64_t)v85 + 23) & 0xFFFFFFFFFFFFFFF8);
        *v86 = *v87;
        v86[1] = v87[1];
        *((_BYTE *)a1 + v65) = 4;
        goto LABEL_42;
      case 5u:
        v70 = v30;
        v71 = a2[1];
        v40 = a1;
        *a1 = *a2;
        a1[1] = v71;
        v72 = (void *)a2[2];
        a1[2] = (uint64_t)v72;
        v73 = (_QWORD *)(((unint64_t)a1 + 31) & 0xFFFFFFFFFFFFFFF8);
        v74 = (_QWORD *)(((unint64_t)a2 + 31) & 0xFFFFFFFFFFFFFFF8);
        *v73 = *v74;
        v73[1] = v74[1];
        v75 = ((unint64_t)v73 + v18 + 16) & v37;
        v76 = ((unint64_t)v74 + v18 + 16) & v37;
        v77 = *(void (**)(uint64_t, uint64_t, uint64_t))(v125 + 16);
        swift_bridgeObjectRetain();
        v78 = v72;
        swift_bridgeObjectRetain();
        v77(v75, v76, v127);
        v79 = (void *)((v126 + v75) & v36);
        v80 = (const void *)((v126 + v76) & v36);
        if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v80, 1, v139))
        {
          memcpy(v79, v80, v138);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v120 + 16))(v79, v80, v139);
          _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v79, 0, 1, v139);
        }
        v88 = (_QWORD *)(((unint64_t)v79 + __n) & 0xFFFFFFFFFFFFFFF8);
        v89 = (_QWORD *)(((unint64_t)v80 + __n) & 0xFFFFFFFFFFFFFFF8);
        *v88 = *v89;
        v88[1] = v89[1];
        v90 = (_QWORD *)(((unint64_t)v88 + 23) & 0xFFFFFFFFFFFFFFF8);
        v91 = (_QWORD *)(((unint64_t)v89 + 23) & 0xFFFFFFFFFFFFFFF8);
        *v90 = *v91;
        v90[1] = v91[1];
        *((_BYTE *)a1 + v70) = 5;
LABEL_42:
        swift_bridgeObjectRetain();
        goto LABEL_43;
      case 6u:
        v81 = a2[1];
        v40 = a1;
        *a1 = *a2;
        a1[1] = v81;
        *((_BYTE *)a1 + v30) = 6;
LABEL_43:
        swift_bridgeObjectRetain();
        return v40;
      case 7u:
        v82 = v27;
        v129 = v22;
        v131 = ~(v9 | 7);
        __na = (((v26 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
        v83 = *(_QWORD *)(v23 + 64) + 7;
        v133 = v28;
        v141 = v29;
        v117 = ~(unint64_t)v9;
        if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v124))
        {
          v40 = a1;
          memcpy(a1, a2, v21);
        }
        else
        {
          v93 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v20 + 16);
          v40 = a1;
          v93(a1, a2, v124);
          _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v124);
        }
        v94 = v83;
        v95 = ((unint64_t)v40 + v82) & v38;
        v96 = ((unint64_t)a2 + v82) & v38;
        if (v33 < 0x7FFFFFFF)
        {
          v98 = *(_QWORD *)(((((v83 + v96) & 0xFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8) + 8);
          if (v98 >= 0xFFFFFFFF)
            LODWORD(v98) = -1;
          v97 = v98 + 1;
        }
        else
        {
          v97 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(((unint64_t)a2 + v82) & v38, v33, v129);
          v94 = v83;
        }
        if (v97)
        {
          memcpy((void *)(((unint64_t)v40 + v82) & v38), (const void *)(((unint64_t)a2 + v82) & v38), __na);
        }
        else
        {
          v99 = ((unint64_t)v40 + v82) & v38;
          v100 = v94;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v23 + 16))(v99, v96, v129);
          v101 = (_QWORD *)((v100 + v95) & 0xFFFFFFFFFFFFFFF8);
          v102 = (_QWORD *)((v100 + v96) & 0xFFFFFFFFFFFFFFF8);
          *v101 = *v102;
          v101[1] = v102[1];
          v103 = (_QWORD *)(((unint64_t)v101 + 23) & 0xFFFFFFFFFFFFFFF8);
          v104 = (_QWORD *)(((unint64_t)v102 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v103 = *v104;
          v103[1] = v104[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        v105 = (_QWORD *)(((unint64_t)v40 + v133) & v131);
        v106 = (_QWORD *)(((unint64_t)a2 + v133) & v131);
        if ((v121 & 0x80000000) != 0)
        {
          v110 = (const void *)(((unint64_t)v106 + v134) & v36);
          v108 = v122;
          v109 = v123;
          if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(((unint64_t)v106 + v134) & v117, v121, v139) < 2)goto LABEL_60;
LABEL_62:
          memcpy(v105, v106, v119);
          v114 = v141;
LABEL_65:
          v115 = v138;
          goto LABEL_66;
        }
        v107 = *(_QWORD *)((((unint64_t)a2 + v133) & v131) + 8);
        if (v107 >= 0xFFFFFFFF)
          LODWORD(v107) = -1;
        v108 = v122;
        v109 = v123;
        if ((int)v107 - 1 >= 0)
          goto LABEL_62;
        v110 = (const void *)(((unint64_t)v106 + v134) & v117);
LABEL_60:
        *v105 = *v106;
        *(_QWORD *)((((unint64_t)v40 + v133) & v131) + 8) = *(_QWORD *)((((unint64_t)a2 + v133) & v131) + 8);
        v111 = *(void **)((((unint64_t)a2 + v133) & v131) + 0x10);
        *(_QWORD *)((((unint64_t)v40 + v133) & v131) + 0x10) = v111;
        v112 = (void *)(((unint64_t)v105 + v134) & v117);
        swift_bridgeObjectRetain();
        v113 = v111;
        if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v110, 1, v139))
        {
          memcpy(v112, v110, v138);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v120 + 16))(v112, v110, v139);
          _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v112, 0, 1, v139);
        }
        v115 = v118;
        v114 = v141;
        if (!v121)
          goto LABEL_65;
LABEL_66:
        v116 = ((((v108 + v115 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
        if (v116 <= v109)
          v116 = v109;
        if (v135 > v116)
          v116 = v135;
        if (v116 <= v114)
          v116 = v114;
        *((_BYTE *)v40 + v116) = 7;
        return v40;
      default:
        v34 = *(_DWORD *)a2 + 8;
        continue;
    }
  }
}

unint64_t sub_23FD558B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t result;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unsigned int v55;
  unint64_t v56;
  uint64_t v57;

  v4 = sub_23FD747C8();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v52 = v5;
  v53 = v4;
  v7 = ((*(_QWORD *)(v5 + 64) + 7 + ((v6 + 40) & ~v6)) & 0xFFFFFFFFFFFFFFF8) + 16;
  v57 = sub_23FD74840();
  v8 = *(_QWORD *)(v57 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v47 = v9 + 24;
  v48 = v8;
  v10 = (v9 + 24) & ~v9;
  v11 = *(_DWORD *)(v8 + 84);
  v12 = *(_QWORD *)(v8 + 64);
  v55 = v11;
  if (v11)
    v13 = v12;
  else
    v13 = v12 + 1;
  v14 = v10 + v13;
  v15 = ((((v10 + v13 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v7 <= v15)
    v16 = v15;
  else
    v16 = v7;
  v17 = sub_23FD74798();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v50 = *(_QWORD *)(v18 + 64) + v9;
  v51 = v17;
  if (v16 <= ((((v13 + 7 + ((v50 + ((v19 + 40) & ~v19)) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
            + 16)
    v16 = ((((v13 + 7 + ((v50 + ((v19 + 40) & ~v19)) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  v49 = *(_QWORD *)(a2 + 16);
  v20 = *(_QWORD *)(v49 - 8);
  if (*(_DWORD *)(v20 + 84))
    v21 = *(_QWORD *)(v20 + 64);
  else
    v21 = *(_QWORD *)(v20 + 64) + 1;
  v22 = sub_23FD71474();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(_DWORD *)(v23 + 80) & 0xF8 | 7;
  v25 = v21 + v24;
  v26 = ((v21 + v24) & ~v24)
      + ((((*(_QWORD *)(v23 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
      + (v9 | 7)
      + 16;
  v27 = (v26 & ~(v9 | 7)) + v14;
  if (v16 > v27)
    v27 = v16;
  if (v27 <= 0x30)
    v27 = 48;
  v29 = ~v19;
  v30 = ~v24;
  switch(*(_BYTE *)(a1 + v27))
  {
    case 0:
      swift_bridgeObjectRelease();

      return swift_bridgeObjectRelease();
    case 1:
    case 2:
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    case 3:
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      (*(void (**)(unint64_t, uint64_t))(v52 + 8))((((a1 + 31) & 0xFFFFFFFFFFFFFFF8) + v6 + 16) & ~v6, v53);
      return swift_bridgeObjectRelease();
    case 4:
      v31 = ~v9;
      swift_bridgeObjectRelease();

      v32 = a1 + v9 + 24;
      goto LABEL_27;
    case 5:
      v31 = ~v9;
      swift_bridgeObjectRelease();

      v33 = (a1 + 31) & 0xFFFFFFFFFFFFFFF8;
      swift_bridgeObjectRelease();
      (*(void (**)(unint64_t, uint64_t))(v18 + 8))((v33 + v19 + 16) & v29, v51);
      v32 = v50 + ((v33 + v19 + 16) & v29);
LABEL_27:
      v34 = v32 & v31;
      if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v32 & v31, 1, v57))
        (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v34, v57);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    case 6:
      return swift_bridgeObjectRelease();
    case 7:
      v36 = v25;
      v37 = *(unsigned int *)(v23 + 84);
      v38 = *(_QWORD *)(v23 + 64) + 7;
      v54 = v22;
      v56 = v26;
      if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, 1, v49))
        (*(void (**)(uint64_t, uint64_t))(v20 + 8))(a1, v49);
      if (v37 < 0x7FFFFFFF)
      {
        v40 = *(_QWORD *)(((((v38 + ((v36 + a1) & v30)) & 0xFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8) + 8);
        if (v40 >= 0xFFFFFFFF)
          LODWORD(v40) = -1;
        v39 = v40 + 1;
      }
      else
      {
        v39 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((v36 + a1) & v30, v37, v54);
      }
      v41 = ~v9;
      v42 = ~(v9 | 7);
      if (!v39)
      {
        (*(void (**)(uint64_t, uint64_t))(v23 + 8))((v36 + a1) & v30, v54);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v42 = ~(v9 | 7);
        v41 = ~v9;
      }
      v43 = (v56 + a1) & v42;
      if ((v55 & 0x80000000) != 0)
      {
        v46 = (v47 + v43) & v41;
        v45 = v57;
        result = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v46, v55, v57);
        if (result > 1)
          return result;
        goto LABEL_46;
      }
      result = *(_QWORD *)(((v56 + a1) & v42) + 8);
      LODWORD(v44) = -1;
      if (result < 0xFFFFFFFF)
        v44 = *(_QWORD *)(((v56 + a1) & v42) + 8);
      v45 = v57;
      if ((int)v44 - 1 < 0)
      {
        v46 = (v47 + v43) & v41;
LABEL_46:
        swift_bridgeObjectRelease();

        result = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v46, 1, v45);
        if (!(_DWORD)result)
          return (*(uint64_t (**)(uint64_t, uint64_t))(v48 + 8))(v46, v45);
      }
      return result;
    default:
      if (v27 <= 3)
        v28 = v27;
      else
        v28 = 4;
      __asm { BR              X15 }
      return result;
  }
}

_QWORD *sub_23FD55DE4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  size_t v13;
  size_t v14;
  size_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  void *v37;
  id v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  void *v49;
  _QWORD *v50;
  _QWORD *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t, uint64_t, uint64_t);
  unint64_t v57;
  id v58;
  _QWORD *v59;
  _QWORD *v60;
  unint64_t v61;
  uint64_t v62;
  void *v63;
  void *v64;
  const void *v65;
  id v66;
  unint64_t v67;
  uint64_t v68;
  void *v69;
  _QWORD *v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(uint64_t, uint64_t, uint64_t);
  id v75;
  void *v76;
  const void *v77;
  uint64_t v78;
  uint64_t v79;
  size_t v80;
  uint64_t v81;
  _QWORD *v82;
  _QWORD *v83;
  _QWORD *v84;
  _QWORD *v85;
  _QWORD *v86;
  _QWORD *v87;
  _QWORD *v88;
  _QWORD *v89;
  _QWORD *result;
  uint64_t v91;
  void *v92;
  const void *v93;
  int v94;
  unint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  _QWORD *v98;
  _QWORD *v99;
  _QWORD *v100;
  uint64_t v101;
  _QWORD *v102;
  _QWORD *v103;
  unint64_t v104;
  uint64_t v105;
  const void *v106;
  unsigned int v107;
  void *v108;
  void *v109;
  id v110;
  unint64_t v111;
  size_t v112;
  unint64_t v113;
  size_t v114;
  size_t v115;
  size_t __n;
  uint64_t v117;
  unsigned int v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  uint64_t v130;
  unint64_t v131;
  size_t v132;
  uint64_t v133;
  size_t v134;
  uint64_t v135;

  v5 = sub_23FD747C8();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v124 = v6;
  v126 = *(_QWORD *)(v6 + 64) + 7;
  v128 = v5;
  if (((v126 + ((v7 + 40) & ~v7)) & 0xFFFFFFFFFFFFFFF8) + 16 <= 0x30)
    v8 = 48;
  else
    v8 = ((v126 + ((v7 + 40) & ~v7)) & 0xFFFFFFFFFFFFFFF8) + 16;
  v135 = sub_23FD74840();
  v9 = *(_QWORD *)(v135 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v130 = v10 + 24;
  v11 = (v10 + 24) & ~v10;
  v12 = *(_DWORD *)(v9 + 84);
  v117 = v9;
  v13 = *(_QWORD *)(v9 + 64);
  v118 = v12;
  v114 = v13;
  if (v12)
    v14 = v13;
  else
    v14 = v13 + 1;
  v119 = v8;
  v15 = v11 + v14;
  if (((((v11 + v14 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 > v8)
    v8 = ((((v11 + v14 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  v16 = sub_23FD74798();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(unsigned __int8 *)(v17 + 80);
  v121 = *(_QWORD *)(v17 + 64) + v10;
  v122 = v16;
  v134 = v14;
  v131 = ((((v14 + 7 + ((v121 + ((v18 + 40) & ~v18)) & ~v10)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  v132 = v14 + 7;
  if (v131 > v8)
    v8 = ((((v14 + 7 + ((v121 + ((v18 + 40) & ~v18)) & ~v10)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  v120 = *(_QWORD *)(a3 + 16);
  v19 = *(_QWORD *)(v120 - 8);
  if (*(_DWORD *)(v19 + 84))
    v20 = *(_QWORD *)(v19 + 64);
  else
    v20 = *(_QWORD *)(v19 + 64) + 1;
  v21 = sub_23FD71474();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(_DWORD *)(v22 + 80) & 0xF8 | 7;
  v24 = *(_QWORD *)(v22 + 64) + 7;
  v115 = v15;
  __n = v20;
  v25 = v20 + v23;
  v26 = (((v24 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 + (v10 | 7) + (v25 & ~v23);
  v27 = (v26 & ~(v10 | 7)) + v15;
  if (v8 <= v27)
    v28 = (v26 & ~(v10 | 7)) + v15;
  else
    v28 = v8;
  v30 = ~v7;
  v31 = ~v10;
  v32 = ~v18;
  v33 = ~v23;
  switch(*((_BYTE *)a2 + v28))
  {
    case 0:
      v34 = a2[1];
      v35 = a1;
      *a1 = *a2;
      a1[1] = v34;
      v37 = (void *)a2[2];
      v36 = a2[3];
      a1[2] = v37;
      a1[3] = v36;
      a1[4] = a2[4];
      *((_BYTE *)a1 + v28) = 0;
      swift_bridgeObjectRetain();
      v38 = v37;
      goto LABEL_39;
    case 1:
      v39 = a2[1];
      v35 = a1;
      *a1 = *a2;
      a1[1] = v39;
      v40 = (void *)a2[2];
      v41 = a2[3];
      a1[2] = v40;
      a1[3] = v41;
      v42 = a2[4];
      v43 = a2[5];
      v44 = 1;
      goto LABEL_25;
    case 2:
      v45 = a2[1];
      v35 = a1;
      *a1 = *a2;
      a1[1] = v45;
      v40 = (void *)a2[2];
      v46 = a2[3];
      a1[2] = v40;
      a1[3] = v46;
      v42 = a2[4];
      v43 = a2[5];
      v44 = 2;
LABEL_25:
      v35[4] = v42;
      v35[5] = v43;
      *((_BYTE *)v35 + v28) = v44;
      swift_bridgeObjectRetain();
      v47 = v40;
      swift_bridgeObjectRetain();
      goto LABEL_39;
    case 3:
      v48 = a2[1];
      *a1 = *a2;
      a1[1] = v48;
      v49 = (void *)a2[2];
      a1[2] = v49;
      v50 = (_QWORD *)(((unint64_t)a1 + 31) & 0xFFFFFFFFFFFFFFF8);
      v51 = (_QWORD *)(((unint64_t)a2 + 31) & 0xFFFFFFFFFFFFFFF8);
      *v50 = *v51;
      v50[1] = v51[1];
      v52 = (char *)v50 + v7;
      v53 = (char *)v51 + v7;
      v35 = a1;
      v54 = (unint64_t)(v52 + 16) & v30;
      v55 = (unint64_t)(v53 + 16) & v30;
      v56 = *(void (**)(uint64_t, uint64_t, uint64_t))(v124 + 16);
      v57 = v28;
      swift_bridgeObjectRetain();
      v58 = v49;
      swift_bridgeObjectRetain();
      v56(v54, v55, v128);
      v59 = (_QWORD *)((v126 + v54) & 0xFFFFFFFFFFFFFFF8);
      v60 = (_QWORD *)((v126 + v55) & 0xFFFFFFFFFFFFFFF8);
      *v59 = *v60;
      v59[1] = v60[1];
      *((_BYTE *)a1 + v57) = 3;
      goto LABEL_39;
    case 4:
      v61 = v28;
      v62 = a2[1];
      v35 = a1;
      *a1 = *a2;
      a1[1] = v62;
      v63 = (void *)a2[2];
      a1[2] = v63;
      v64 = (void *)(((unint64_t)a1 + v10 + 24) & v31);
      v65 = (const void *)(((unint64_t)a2 + v10 + 24) & v31);
      swift_bridgeObjectRetain();
      v66 = v63;
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v65, 1, v135))
      {
        memcpy(v64, v65, v134);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v117 + 16))(v64, v65, v135);
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v64, 0, 1, v135);
      }
      v82 = (_QWORD *)(((unint64_t)v64 + v132) & 0xFFFFFFFFFFFFFFF8);
      v83 = (_QWORD *)(((unint64_t)v65 + v132) & 0xFFFFFFFFFFFFFFF8);
      *v82 = *v83;
      v82[1] = v83[1];
      v84 = (_QWORD *)(((unint64_t)v82 + 23) & 0xFFFFFFFFFFFFFFF8);
      v85 = (_QWORD *)(((unint64_t)v83 + 23) & 0xFFFFFFFFFFFFFFF8);
      *v84 = *v85;
      v84[1] = v85[1];
      *((_BYTE *)a1 + v61) = 4;
      goto LABEL_38;
    case 5:
      v67 = v28;
      v68 = a2[1];
      v35 = a1;
      *a1 = *a2;
      a1[1] = v68;
      v69 = (void *)a2[2];
      a1[2] = v69;
      v70 = (_QWORD *)(((unint64_t)a1 + 31) & 0xFFFFFFFFFFFFFFF8);
      v71 = (_QWORD *)(((unint64_t)a2 + 31) & 0xFFFFFFFFFFFFFFF8);
      *v70 = *v71;
      v70[1] = v71[1];
      v72 = ((unint64_t)v70 + v18 + 16) & v32;
      v73 = ((unint64_t)v71 + v18 + 16) & v32;
      v74 = *(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16);
      swift_bridgeObjectRetain();
      v75 = v69;
      swift_bridgeObjectRetain();
      v74(v72, v73, v122);
      v76 = (void *)((v121 + v72) & ~v10);
      v77 = (const void *)((v121 + v73) & ~v10);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v77, 1, v135))
      {
        memcpy(v76, v77, v134);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v117 + 16))(v76, v77, v135);
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v76, 0, 1, v135);
      }
      v86 = (_QWORD *)(((unint64_t)v76 + v132) & 0xFFFFFFFFFFFFFFF8);
      v87 = (_QWORD *)(((unint64_t)v77 + v132) & 0xFFFFFFFFFFFFFFF8);
      *v86 = *v87;
      v86[1] = v87[1];
      v88 = (_QWORD *)(((unint64_t)v86 + 23) & 0xFFFFFFFFFFFFFFF8);
      v89 = (_QWORD *)(((unint64_t)v87 + 23) & 0xFFFFFFFFFFFFFFF8);
      *v88 = *v89;
      v88[1] = v89[1];
      *((_BYTE *)a1 + v67) = 5;
LABEL_38:
      swift_bridgeObjectRetain();
      goto LABEL_39;
    case 6:
      v78 = a2[1];
      v35 = a1;
      *a1 = *a2;
      a1[1] = v78;
      *((_BYTE *)a1 + v28) = 6;
LABEL_39:
      swift_bridgeObjectRetain();
      return v35;
    case 7:
      v123 = v21;
      v125 = ~(v10 | 7);
      v79 = *(unsigned int *)(v22 + 84);
      v80 = (((v24 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
      v81 = *(_QWORD *)(v22 + 64) + 7;
      v127 = v80 + (v10 | 7) + (v25 & ~v23);
      v129 = v27;
      v133 = ~v10;
      v35 = a1;
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v120))
      {
        memcpy(a1, a2, __n);
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v19 + 16))(a1, a2, v120);
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v120);
      }
      v91 = v81;
      v92 = (void *)(((unint64_t)a1 + v25) & v33);
      v93 = (const void *)(((unint64_t)a2 + v25) & v33);
      if (v79 < 0x7FFFFFFF)
      {
        v95 = *(_QWORD *)((((((unint64_t)v93 + v81) & 0xFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8) + 8);
        if (v95 >= 0xFFFFFFFF)
          LODWORD(v95) = -1;
        if ((_DWORD)v95 != -1)
          goto LABEL_44;
      }
      else
      {
        v94 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v93, v79, v123);
        v91 = v81;
        if (v94)
        {
LABEL_44:
          memcpy(v92, v93, v80);
          goto LABEL_49;
        }
      }
      v96 = v91;
      (*(void (**)(void *, const void *, uint64_t))(v22 + 16))(v92, v93, v123);
      v97 = (_QWORD *)(((unint64_t)v92 + v96) & 0xFFFFFFFFFFFFFFF8);
      v98 = (_QWORD *)(((unint64_t)v93 + v96) & 0xFFFFFFFFFFFFFFF8);
      *v97 = *v98;
      v97[1] = v98[1];
      v99 = (_QWORD *)(((unint64_t)v97 + 23) & 0xFFFFFFFFFFFFFFF8);
      v100 = (_QWORD *)(((unint64_t)v98 + 23) & 0xFFFFFFFFFFFFFFF8);
      *v99 = *v100;
      v99[1] = v100[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_49:
      v101 = ~v10;
      v102 = (_QWORD *)(((unint64_t)a1 + v127) & v125);
      v103 = (_QWORD *)(((unint64_t)a2 + v127) & v125);
      if ((v118 & 0x80000000) == 0)
      {
        v104 = v103[1];
        if (v104 >= 0xFFFFFFFF)
          LODWORD(v104) = -1;
        v105 = v135;
        if ((int)v104 - 1 < 0)
        {
          v106 = (const void *)(((unint64_t)v103 + v130) & v133);
          goto LABEL_55;
        }
LABEL_57:
        memcpy(v102, v103, v115);
        v111 = v129;
LABEL_60:
        v112 = v134;
        goto LABEL_61;
      }
      v106 = (const void *)(((unint64_t)v103 + v130) & v133);
      v105 = v135;
      v107 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v106, v118, v135);
      v101 = ~v10;
      if (v107 >= 2)
        goto LABEL_57;
LABEL_55:
      *v102 = *v103;
      *(_QWORD *)((((unint64_t)a1 + v127) & v125) + 8) = v103[1];
      v108 = (void *)v103[2];
      *(_QWORD *)((((unint64_t)a1 + v127) & v125) + 0x10) = v108;
      v109 = (void *)(((unint64_t)v102 + v130) & v101);
      swift_bridgeObjectRetain();
      v110 = v108;
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v106, 1, v105))
      {
        memcpy(v109, v106, v134);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v117 + 16))(v109, v106, v105);
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v109, 0, 1, v105);
      }
      v112 = v114;
      v111 = v129;
      if (!v118)
        goto LABEL_60;
LABEL_61:
      v113 = ((((((v10 + 24) & ~v10) + v112 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
      if (v113 <= v119)
        v113 = v119;
      if (v131 > v113)
        v113 = v131;
      if (v113 <= v111)
        v113 = v111;
      *((_BYTE *)a1 + v113) = 7;
      return v35;
    default:
      if (v28 <= 3)
        v29 = v28;
      else
        v29 = 4;
      __asm { BR              X14 }
      return result;
  }
}

id *sub_23FD56654(id *a1, id *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  size_t v14;
  size_t v15;
  size_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  int v21;
  size_t v22;
  size_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int v27;
  size_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  id v37;
  id v38;
  id v39;
  char v40;
  id v41;
  id v42;
  _QWORD *v43;
  _QWORD *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t, uint64_t);
  id v49;
  _QWORD *v50;
  _QWORD *v51;
  char v52;
  id v53;
  const void *v54;
  id v55;
  id v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(uint64_t, uint64_t, uint64_t);
  id v62;
  void *v63;
  const void *v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  _QWORD *v71;
  _QWORD *v72;
  char v73;
  _QWORD *v74;
  _QWORD *v75;
  _QWORD *v76;
  _QWORD *v77;
  id *result;
  void *v79;
  const void *v80;
  unint64_t v81;
  _QWORD *v82;
  _QWORD *v83;
  _QWORD *v84;
  _QWORD *v85;
  _QWORD *v86;
  _QWORD *v87;
  unint64_t v88;
  const void *v89;
  void *v90;
  id v91;
  unint64_t v92;
  size_t v93;
  unint64_t v94;
  size_t v95;
  size_t v96;
  size_t __n;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  unint64_t v101;
  unsigned int v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  size_t v111;
  unsigned int v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unsigned int v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  size_t v121;
  uint64_t v122;
  size_t v123;
  uint64_t v124;

  if (a1 == a2)
    return a1;
  v6 = sub_23FD747C8();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v116 = v7;
  v119 = *(_QWORD *)(v7 + 64) + 7;
  v120 = v6;
  if (((v119 + ((v8 + 40) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 16 <= 0x30)
    v9 = 48;
  else
    v9 = ((v119 + ((v8 + 40) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 16;
  v124 = sub_23FD74840();
  v10 = *(_QWORD *)(v124 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v103 = v11 + 24;
  v12 = (v11 + 24) & ~v11;
  v13 = *(_DWORD *)(v10 + 84);
  v106 = v10;
  v14 = *(_QWORD *)(v10 + 64);
  v95 = v14;
  if (v13)
    v15 = v14;
  else
    v15 = v14 + 1;
  v101 = v9;
  v16 = v12 + v15;
  if (((((v12 + v15 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 > v9)
    v9 = ((((v12 + v15 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  v115 = sub_23FD74798();
  v17 = *(_QWORD *)(v115 - 8);
  v18 = *(unsigned __int8 *)(v17 + 80);
  v113 = v17;
  v114 = *(_QWORD *)(v17 + 64) + v11;
  v121 = v15;
  v123 = v15 + 7;
  v100 = ((((v15 + 7 + ((v114 + ((v18 + 40) & ~v18)) & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v100 <= v9)
    v19 = v9;
  else
    v19 = ((((v15 + 7 + ((v114 + ((v18 + 40) & ~v18)) & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
        + 16;
  v122 = *(_QWORD *)(a3 + 16);
  v20 = *(_QWORD *)(v122 - 8);
  v21 = *(_DWORD *)(v20 + 84);
  v98 = v20;
  v22 = *(_QWORD *)(v20 + 64);
  if (v21)
    v23 = v22;
  else
    v23 = v22 + 1;
  v105 = sub_23FD71474();
  v24 = *(_QWORD *)(v105 - 8);
  v25 = *(_DWORD *)(v24 + 80) & 0xF8 | 7;
  v104 = *(_QWORD *)(v24 + 64) + 7;
  __n = v23;
  v111 = v23 + v25;
  v118 = (((v104 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 + (v11 | 7) + ((v23 + v25) & ~v25);
  v26 = v118 & ~(v11 | 7);
  v102 = v13;
  v27 = v13 - 1;
  if (!v13)
    v27 = 0;
  v117 = v27;
  v96 = v16;
  v28 = v26 + v16;
  if (v19 <= v26 + v16)
    v29 = v26 + v16;
  else
    v29 = v19;
  v109 = ~v8;
  v31 = ~v11;
  v110 = ~v25;
  v107 = ~(v11 | 7);
  v108 = ~v18;
  v112 = *(_DWORD *)(v24 + 84);
  v99 = v28;
  switch(*((_BYTE *)a1 + v29))
  {
    case 0:
      swift_bridgeObjectRelease();

      goto LABEL_34;
    case 1:
    case 2:
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      goto LABEL_34;
    case 3:
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      (*(void (**)(unint64_t, uint64_t))(v116 + 8))(((((unint64_t)a1 + 31) & 0xFFFFFFFFFFFFFFF8) + v8 + 16) & v109, v120);
      goto LABEL_34;
    case 4:
      swift_bridgeObjectRelease();

      v32 = (uint64_t)a1 + v11 + 24;
      goto LABEL_31;
    case 5:
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      v33 = ((((unint64_t)a1 + 31) & 0xFFFFFFFFFFFFFFF8) + v18 + 16) & v108;
      (*(void (**)(unint64_t, uint64_t))(v113 + 8))(v33, v115);
      v32 = v114 + v33;
LABEL_31:
      v34 = v32 & v31;
      if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v32 & v31, 1, v124))
        (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v34, v124);
      swift_bridgeObjectRelease();
      goto LABEL_34;
    case 6:
LABEL_34:
      swift_bridgeObjectRelease();
      break;
    case 7:
      if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a1, 1, v122))
        (*(void (**)(id *, uint64_t))(v98 + 8))(a1, v122);
      v36 = ((unint64_t)a1 + v111) & v110;
      if (v112 >= 0x7FFFFFFF)
      {
        if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(((unint64_t)a1 + v111) & v110, v112, v105))goto LABEL_63;
        goto LABEL_62;
      }
      v65 = *(_QWORD *)(((((v104 + v36) & 0xFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8) + 8);
      if (v65 >= 0xFFFFFFFF)
        LODWORD(v65) = -1;
      if ((_DWORD)v65 == -1)
      {
LABEL_62:
        (*(void (**)(unint64_t, uint64_t))(v24 + 8))(v36, v105);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
LABEL_63:
      v66 = ((unint64_t)a1 + v118) & v107;
      if (v117 >= 0x7FFFFFFF)
      {
        v68 = (v103 + v66) & v31;
        if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v68, v102, v124) > 1)
          break;
        goto LABEL_69;
      }
      LODWORD(v67) = -1;
      if (*(_QWORD *)((((unint64_t)a1 + v118) & v107) + 8) < 0xFFFFFFFFuLL)
        v67 = *(_QWORD *)((((unint64_t)a1 + v118) & v107) + 8);
      if ((int)v67 - 1 < 0)
      {
        v68 = (v103 + v66) & v31;
LABEL_69:
        swift_bridgeObjectRelease();

        if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v68, 1, v124))
          (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v68, v124);
        break;
      }
      break;
    default:
      if (v29 <= 3)
        v30 = v29;
      else
        v30 = 4;
      __asm { BR              X14 }
      return result;
  }
  switch(*((_BYTE *)a2 + v29))
  {
    case 0:
      *a1 = *a2;
      a1[1] = a2[1];
      v37 = a2[2];
      a1[2] = v37;
      a1[3] = a2[3];
      a1[4] = a2[4];
      *((_BYTE *)a1 + v29) = 0;
      swift_bridgeObjectRetain();
      v38 = v37;
      goto LABEL_76;
    case 1:
      *a1 = *a2;
      a1[1] = a2[1];
      v39 = a2[2];
      a1[2] = v39;
      a1[3] = a2[3];
      a1[4] = a2[4];
      a1[5] = a2[5];
      v40 = 1;
      goto LABEL_49;
    case 2:
      *a1 = *a2;
      a1[1] = a2[1];
      v39 = a2[2];
      a1[2] = v39;
      a1[3] = a2[3];
      a1[4] = a2[4];
      a1[5] = a2[5];
      v40 = 2;
LABEL_49:
      *((_BYTE *)a1 + v29) = v40;
      swift_bridgeObjectRetain();
      v41 = v39;
      swift_bridgeObjectRetain();
      goto LABEL_76;
    case 3:
      *a1 = *a2;
      a1[1] = a2[1];
      v42 = a2[2];
      a1[2] = v42;
      v43 = (_QWORD *)(((unint64_t)a1 + 31) & 0xFFFFFFFFFFFFFFF8);
      v44 = (_QWORD *)(((unint64_t)a2 + 31) & 0xFFFFFFFFFFFFFFF8);
      *v43 = *v44;
      v43[1] = v44[1];
      v45 = (char *)v44 + v8;
      v46 = ((unint64_t)v43 + v8 + 16) & v109;
      v47 = (unint64_t)(v45 + 16) & v109;
      v48 = *(void (**)(uint64_t, uint64_t, uint64_t))(v116 + 16);
      swift_bridgeObjectRetain();
      v49 = v42;
      swift_bridgeObjectRetain();
      v48(v46, v47, v120);
      v50 = (_QWORD *)((v119 + v46) & 0xFFFFFFFFFFFFFFF8);
      v51 = (_QWORD *)((v119 + v47) & 0xFFFFFFFFFFFFFFF8);
      *v50 = *v51;
      v50[1] = v51[1];
      v52 = 3;
      goto LABEL_56;
    case 4:
      *a1 = *a2;
      a1[1] = a2[1];
      v53 = a2[2];
      a1[2] = v53;
      v54 = (const void *)(((unint64_t)a2 + v11 + 24) & v31);
      swift_bridgeObjectRetain();
      v55 = v53;
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v54, 1, v124))
      {
        memcpy((void *)(((unint64_t)a1 + v11 + 24) & v31), v54, v121);
      }
      else
      {
        (*(void (**)(unint64_t, const void *, uint64_t))(v106 + 16))(((unint64_t)a1 + v11 + 24) & v31, v54, v124);
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(((unint64_t)a1 + v11 + 24) & v31, 0, 1, v124);
      }
      v69 = (_QWORD *)((v123 + (((unint64_t)a1 + v11 + 24) & v31)) & 0xFFFFFFFFFFFFFFF8);
      v70 = (_QWORD *)(((unint64_t)v54 + v123) & 0xFFFFFFFFFFFFFFF8);
      *v69 = *v70;
      v69[1] = v70[1];
      v71 = (_QWORD *)(((unint64_t)v69 + 23) & 0xFFFFFFFFFFFFFFF8);
      v72 = (_QWORD *)(((unint64_t)v70 + 23) & 0xFFFFFFFFFFFFFFF8);
      *v71 = *v72;
      v71[1] = v72[1];
      v73 = 4;
      goto LABEL_75;
    case 5:
      *a1 = *a2;
      a1[1] = a2[1];
      v56 = a2[2];
      a1[2] = v56;
      v57 = (_QWORD *)(((unint64_t)a1 + 31) & 0xFFFFFFFFFFFFFFF8);
      v58 = (_QWORD *)(((unint64_t)a2 + 31) & 0xFFFFFFFFFFFFFFF8);
      *v57 = *v58;
      v57[1] = v58[1];
      v59 = ((unint64_t)v57 + v18 + 16) & v108;
      v60 = ((unint64_t)v58 + v18 + 16) & v108;
      v61 = *(void (**)(uint64_t, uint64_t, uint64_t))(v113 + 16);
      swift_bridgeObjectRetain();
      v62 = v56;
      swift_bridgeObjectRetain();
      v61(v59, v60, v115);
      v63 = (void *)((v114 + v59) & v31);
      v64 = (const void *)((v114 + v60) & v31);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v64, 1, v124))
      {
        memcpy(v63, v64, v121);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v106 + 16))(v63, v64, v124);
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v63, 0, 1, v124);
      }
      v74 = (_QWORD *)(((unint64_t)v63 + v123) & 0xFFFFFFFFFFFFFFF8);
      v75 = (_QWORD *)(((unint64_t)v64 + v123) & 0xFFFFFFFFFFFFFFF8);
      *v74 = *v75;
      v74[1] = v75[1];
      v76 = (_QWORD *)(((unint64_t)v74 + 23) & 0xFFFFFFFFFFFFFFF8);
      v77 = (_QWORD *)(((unint64_t)v75 + 23) & 0xFFFFFFFFFFFFFFF8);
      *v76 = *v77;
      v76[1] = v77[1];
      v73 = 5;
LABEL_75:
      *((_BYTE *)a1 + v29) = v73;
      swift_bridgeObjectRetain();
      goto LABEL_76;
    case 6:
      *a1 = *a2;
      a1[1] = a2[1];
      v52 = 6;
LABEL_56:
      *((_BYTE *)a1 + v29) = v52;
LABEL_76:
      swift_bridgeObjectRetain();
      return a1;
    case 7:
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v122))
      {
        memcpy(a1, a2, __n);
      }
      else
      {
        (*(void (**)(id *, id *, uint64_t))(v98 + 16))(a1, a2, v122);
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v122);
      }
      v79 = (void *)(((unint64_t)a1 + v111) & v110);
      v80 = (const void *)(((unint64_t)a2 + v111) & v110);
      if (v112 < 0x7FFFFFFF)
      {
        v81 = *(_QWORD *)((((((unint64_t)v80 + v104) & 0xFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8) + 8);
        if (v81 >= 0xFFFFFFFF)
          LODWORD(v81) = -1;
        if ((_DWORD)v81 != -1)
          goto LABEL_81;
      }
      else if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(((unint64_t)a2 + v111) & v110, v112, v105))
      {
LABEL_81:
        memcpy(v79, v80, (((v104 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16);
        goto LABEL_86;
      }
      (*(void (**)(void *, const void *, uint64_t))(v24 + 16))(v79, v80, v105);
      v82 = (_QWORD *)(((unint64_t)v79 + v104) & 0xFFFFFFFFFFFFFFF8);
      v83 = (_QWORD *)(((unint64_t)v80 + v104) & 0xFFFFFFFFFFFFFFF8);
      *v82 = *v83;
      v82[1] = v83[1];
      v84 = (_QWORD *)(((unint64_t)v82 + 23) & 0xFFFFFFFFFFFFFFF8);
      v85 = (_QWORD *)(((unint64_t)v83 + 23) & 0xFFFFFFFFFFFFFFF8);
      *v84 = *v85;
      v84[1] = v85[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_86:
      v86 = (_QWORD *)(((unint64_t)a1 + v118) & v107);
      v87 = (_QWORD *)(((unint64_t)a2 + v118) & v107);
      if (v117 >= 0x7FFFFFFF)
      {
        v89 = (const void *)(((unint64_t)v87 + v103) & v31);
        if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v89, v102, v124) < 2)
          goto LABEL_92;
LABEL_94:
        memcpy(v86, v87, v96);
        v92 = v99;
LABEL_97:
        v93 = v121;
        goto LABEL_98;
      }
      v88 = v87[1];
      if (v88 >= 0xFFFFFFFF)
        LODWORD(v88) = -1;
      if ((int)v88 - 1 >= 0)
        goto LABEL_94;
      v89 = (const void *)(((unint64_t)v87 + v103) & v31);
LABEL_92:
      *v86 = *v87;
      *(_QWORD *)((((unint64_t)a1 + v118) & v107) + 8) = v87[1];
      v90 = (void *)v87[2];
      *(_QWORD *)((((unint64_t)a1 + v118) & v107) + 0x10) = v90;
      swift_bridgeObjectRetain();
      v91 = v90;
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v89, 1, v124))
      {
        memcpy((void *)(((unint64_t)v86 + v103) & v31), v89, v121);
      }
      else
      {
        (*(void (**)(unint64_t, const void *, uint64_t))(v106 + 16))(((unint64_t)v86 + v103) & v31, v89, v124);
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(((unint64_t)v86 + v103) & v31, 0, 1, v124);
      }
      v93 = v95;
      v92 = v99;
      if (!v102)
        goto LABEL_97;
LABEL_98:
      v94 = ((((((v11 + 24) & ~v11) + v93 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
      if (v94 <= v101)
        v94 = v101;
      if (v100 > v94)
        v94 = v100;
      if (v94 <= v92)
        v94 = v92;
      *((_BYTE *)a1 + v94) = 7;
      return a1;
    default:
      if (v29 <= 3)
        v35 = v29;
      else
        v35 = 4;
      __asm { BR              X12 }
      return result;
  }
}

_OWORD *sub_23FD57268(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  size_t v13;
  size_t v14;
  size_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  __int128 v36;
  _OWORD *v37;
  __int128 v38;
  __int128 v39;
  _OWORD *v40;
  _OWORD *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  void *v45;
  const void *v46;
  _OWORD *v47;
  _OWORD *v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  const void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _OWORD *v56;
  _OWORD *v57;
  _OWORD *v58;
  _OWORD *v59;
  _OWORD *v60;
  void (*v61)(_OWORD *, _OWORD *, uint64_t);
  uint64_t v62;
  void *v63;
  const void *v64;
  int v65;
  unint64_t v66;
  uint64_t v67;
  _OWORD *v68;
  _OWORD *v69;
  _OWORD *v70;
  _QWORD *v71;
  unint64_t v72;
  const void *v73;
  __int128 v74;
  void *v75;
  unint64_t v76;
  size_t v77;
  unint64_t v78;
  _OWORD *result;
  size_t v80;
  size_t v81;
  size_t __n;
  uint64_t v83;
  unsigned int v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  unint64_t v98;
  size_t v99;
  size_t v100;
  size_t v101;
  uint64_t v102;

  v5 = sub_23FD747C8();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v91 = v6;
  v93 = *(_QWORD *)(v6 + 64) + 7;
  v95 = v5;
  if (((v93 + ((v7 + 40) & ~v7)) & 0xFFFFFFFFFFFFFFF8) + 16 <= 0x30)
    v8 = 48;
  else
    v8 = ((v93 + ((v7 + 40) & ~v7)) & 0xFFFFFFFFFFFFFFF8) + 16;
  v102 = sub_23FD74840();
  v9 = *(_QWORD *)(v102 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v97 = v10 + 24;
  v11 = (v10 + 24) & ~v10;
  v12 = *(_DWORD *)(v9 + 84);
  v83 = v9;
  v13 = *(_QWORD *)(v9 + 64);
  v84 = v12;
  v80 = v13;
  if (v12)
    v14 = v13;
  else
    v14 = v13 + 1;
  v85 = (v10 + 24) & ~v10;
  v86 = v8;
  v15 = v11 + v14;
  if (((((v11 + v14 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 > v8)
    v8 = ((((v11 + v14 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  v16 = sub_23FD74798();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(unsigned __int8 *)(v17 + 80);
  v88 = *(_QWORD *)(v17 + 64) + v10;
  v89 = v16;
  v99 = v14 + 7;
  v101 = v14;
  v98 = ((((v14 + 7 + ((v88 + ((v18 + 40) & ~v18)) & ~v10)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v98 <= v8)
    v19 = v8;
  else
    v19 = ((((v14 + 7 + ((v88 + ((v18 + 40) & ~v18)) & ~v10)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  v87 = *(_QWORD *)(a3 + 16);
  v20 = *(_QWORD *)(v87 - 8);
  if (*(_DWORD *)(v20 + 84))
    v21 = *(_QWORD *)(v20 + 64);
  else
    v21 = *(_QWORD *)(v20 + 64) + 1;
  v22 = sub_23FD71474();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(unsigned int *)(v23 + 84);
  v25 = *(_DWORD *)(v23 + 80) & 0xF8 | 7;
  v26 = *(_QWORD *)(v23 + 64) + 7;
  v81 = v15;
  __n = v21;
  v27 = v21 + v25;
  v28 = (((v26 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 + (v10 | 7) + ((v21 + v25) & ~v25);
  v29 = (v28 & ~(v10 | 7)) + v15;
  if (v19 <= v29)
    v19 = (v28 & ~(v10 | 7)) + v15;
  v31 = ~v7;
  v32 = ~v10;
  v33 = ~v18;
  v34 = ~v25;
  switch(*((_BYTE *)a2 + v19))
  {
    case 0:
      v35 = 0;
      v36 = a2[1];
      v37 = a1;
      *a1 = *a2;
      a1[1] = v36;
      *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
      goto LABEL_68;
    case 1:
      v38 = a2[1];
      v37 = a1;
      *a1 = *a2;
      a1[1] = v38;
      a1[2] = a2[2];
      v35 = 1;
      goto LABEL_68;
    case 2:
      v39 = a2[1];
      v37 = a1;
      *a1 = *a2;
      a1[1] = v39;
      a1[2] = a2[2];
      v35 = 2;
      goto LABEL_68;
    case 3:
      v37 = a1;
      *a1 = *a2;
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      v40 = (_OWORD *)(((unint64_t)a1 + 31) & 0xFFFFFFFFFFFFFFF8);
      v41 = (_OWORD *)(((unint64_t)a2 + 31) & 0xFFFFFFFFFFFFFFF8);
      *v40 = *v41;
      v42 = ((unint64_t)v40 + v7 + 16) & v31;
      v43 = ((unint64_t)v41 + v7 + 16) & v31;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v91 + 32))(v42, v43, v95, v24);
      *(_OWORD *)((v93 + v42) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v93 + v43) & 0xFFFFFFFFFFFFF8);
      v35 = 3;
      goto LABEL_68;
    case 4:
      v44 = v19;
      v37 = a1;
      *a1 = *a2;
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      v45 = (void *)(((unint64_t)a1 + v10 + 24) & v32);
      v46 = (const void *)(((unint64_t)a2 + v10 + 24) & v32);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v46, 1, v102))
      {
        memcpy(v45, v46, v101);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v83 + 32))(v45, v46, v102);
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v45, 0, 1, v102);
      }
      v57 = (_OWORD *)(((unint64_t)v45 + v99) & 0xFFFFFFFFFFFFFFF8);
      v58 = (_OWORD *)(((unint64_t)v46 + v99) & 0xFFFFFFFFFFFFFFF8);
      *v57 = *v58;
      *(_OWORD *)(((unint64_t)v57 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v58 + 23) & 0xFFFFFFFFFFFFF8);
      v35 = 4;
      goto LABEL_38;
    case 5:
      v44 = v19;
      v37 = a1;
      *a1 = *a2;
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      v47 = (_OWORD *)(((unint64_t)a1 + 31) & 0xFFFFFFFFFFFFFFF8);
      v48 = (_OWORD *)(((unint64_t)a2 + 31) & 0xFFFFFFFFFFFFFFF8);
      *v47 = *v48;
      v49 = ((unint64_t)v47 + v18 + 16) & v33;
      v50 = ((unint64_t)v48 + v18 + 16) & v33;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 32))(v49, v50, v89, v24);
      v51 = (void *)((v88 + v49) & v32);
      v52 = (const void *)((v88 + v50) & v32);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v52, 1, v102))
      {
        memcpy(v51, v52, v101);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v83 + 32))(v51, v52, v102);
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v51, 0, 1, v102);
      }
      v59 = (_OWORD *)(((unint64_t)v51 + v99) & 0xFFFFFFFFFFFFFFF8);
      v60 = (_OWORD *)(((unint64_t)v52 + v99) & 0xFFFFFFFFFFFFFFF8);
      *v59 = *v60;
      *(_OWORD *)(((unint64_t)v59 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v60 + 23) & 0xFFFFFFFFFFFFF8);
      v35 = 5;
LABEL_38:
      v19 = v44;
      goto LABEL_68;
    case 6:
      v37 = a1;
      *a1 = *a2;
      v35 = 6;
      goto LABEL_68;
    case 7:
      v92 = ~(v10 | 7);
      v53 = v27;
      v54 = *(unsigned int *)(v23 + 84);
      v100 = (((v26 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
      v55 = *(_QWORD *)(v23 + 64) + 7;
      v90 = v22;
      v94 = v28;
      v96 = v29;
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v87))
      {
        v56 = a1;
        memcpy(a1, a2, __n);
      }
      else
      {
        v61 = *(void (**)(_OWORD *, _OWORD *, uint64_t))(v20 + 32);
        v56 = a1;
        v61(a1, a2, v87);
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v87);
      }
      v62 = v55;
      v63 = (void *)(((unint64_t)v56 + v53) & v34);
      v64 = (const void *)(((unint64_t)a2 + v53) & v34);
      if (v54 < 0x7FFFFFFF)
      {
        v66 = *(_QWORD *)((((((unint64_t)v64 + v55) & 0xFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8) + 8);
        if (v66 >= 0xFFFFFFFF)
          LODWORD(v66) = -1;
        v65 = v66 + 1;
      }
      else
      {
        v65 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v64, v54, v90);
        v62 = v55;
      }
      if (v65)
      {
        memcpy(v63, v64, v100);
      }
      else
      {
        v67 = v62;
        (*(void (**)(void *, const void *, uint64_t))(v23 + 32))(v63, v64, v90);
        v68 = (_OWORD *)(((unint64_t)v63 + v67) & 0xFFFFFFFFFFFFFFF8);
        v69 = (_OWORD *)(((unint64_t)v64 + v67) & 0xFFFFFFFFFFFFFFF8);
        *v68 = *v69;
        *(_OWORD *)(((unint64_t)v68 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v69 + 23) & 0xFFFFFFFFFFFFF8);
      }
      v37 = a1;
      v70 = (_OWORD *)(((unint64_t)a1 + v94) & v92);
      v71 = (_QWORD *)(((unint64_t)a2 + v94) & v92);
      if ((v84 & 0x80000000) == 0)
      {
        v72 = v71[1];
        if (v72 >= 0xFFFFFFFF)
          LODWORD(v72) = -1;
        if ((int)v72 - 1 < 0)
        {
          v73 = (const void *)(((unint64_t)v71 + v97) & v32);
          goto LABEL_54;
        }
LABEL_56:
        memcpy(v70, v71, v81);
        v76 = v96;
LABEL_59:
        v77 = v101;
        goto LABEL_60;
      }
      v73 = (const void *)(((unint64_t)v71 + v97) & v32);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v73, v84, v102) >= 2)
        goto LABEL_56;
LABEL_54:
      v74 = *(_OWORD *)v71;
      *(_QWORD *)((((unint64_t)a1 + v94) & v92) + 0x10) = v71[2];
      *v70 = v74;
      v75 = (void *)(((unint64_t)v70 + v97) & v32);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v73, 1, v102))
      {
        memcpy(v75, v73, v101);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v83 + 32))(v75, v73, v102);
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v75, 0, 1, v102);
      }
      v77 = v80;
      v76 = v96;
      if (!v84)
        goto LABEL_59;
LABEL_60:
      v78 = ((((v85 + v77 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
      if (v78 <= v86)
        v78 = v86;
      if (v98 > v78)
        v78 = v98;
      if (v78 <= v76)
        v19 = v76;
      else
        v19 = v78;
      v35 = 7;
LABEL_68:
      *((_BYTE *)v37 + v19) = v35;
      return v37;
    default:
      if (v19 <= 3)
        v30 = v19;
      else
        v30 = 4;
      __asm { BR              X14 }
      return result;
  }
}

id *sub_23FD579EC(id *a1, id *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  size_t v12;
  size_t v13;
  size_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  __int128 v34;
  __int128 v35;
  char v36;
  __int128 v37;
  _OWORD *v38;
  _OWORD *v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  const void *v43;
  _OWORD *v44;
  _OWORD *v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  const void *v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _OWORD *v54;
  _OWORD *v55;
  _OWORD *v56;
  _OWORD *v57;
  id *result;
  void *v59;
  const void *v60;
  unint64_t v61;
  _OWORD *v62;
  _OWORD *v63;
  _OWORD *v64;
  _QWORD *v65;
  unint64_t v66;
  const void *v67;
  __int128 v68;
  void *v69;
  size_t v70;
  unint64_t v71;
  size_t v72;
  size_t v73;
  size_t __n;
  unint64_t v75;
  unint64_t v76;
  unsigned int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unsigned int v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unsigned int v94;
  unint64_t v95;
  size_t v96;
  uint64_t v97;
  size_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;

  if (a1 == a2)
    return a1;
  v93 = sub_23FD747C8();
  v6 = *(_QWORD *)(v93 - 8);
  v101 = *(unsigned __int8 *)(v6 + 80);
  v91 = v6;
  v92 = *(_QWORD *)(v6 + 64) + 7;
  if (((v92 + ((v101 + 40) & ~v101)) & 0xFFFFFFFFFFFFFFF8) + 16 <= 0x30)
    v7 = 48;
  else
    v7 = ((v92 + ((v101 + 40) & ~v101)) & 0xFFFFFFFFFFFFFFF8) + 16;
  v100 = sub_23FD74840();
  v8 = *(_QWORD *)(v100 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v78 = v9 + 24;
  v10 = (v9 + 24) & ~v9;
  v11 = *(_DWORD *)(v8 + 84);
  v81 = v8;
  v12 = *(_QWORD *)(v8 + 64);
  v72 = v12;
  if (v11)
    v13 = v12;
  else
    v13 = v12 + 1;
  v76 = v7;
  v14 = v10 + v13;
  if (((((v10 + v13 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 > v7)
    v7 = ((((v10 + v13 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  v15 = sub_23FD74798();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(unsigned __int8 *)(v16 + 80);
  v88 = v16;
  v89 = *(_QWORD *)(v16 + 64) + v9;
  v90 = v15;
  v96 = v13;
  v98 = v13 + 7;
  v75 = ((((v13 + 7 + ((v89 + ((v17 + 40) & ~v17)) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v75 <= v7)
    v18 = v7;
  else
    v18 = ((((v13 + 7 + ((v89 + ((v17 + 40) & ~v17)) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  v97 = *(_QWORD *)(a3 + 16);
  v19 = *(_QWORD *)(v97 - 8);
  if (*(_DWORD *)(v19 + 84))
    v20 = *(_QWORD *)(v19 + 64);
  else
    v20 = *(_QWORD *)(v19 + 64) + 1;
  v21 = sub_23FD71474();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(_DWORD *)(v22 + 80) & 0xF8 | 7;
  v79 = *(_QWORD *)(v22 + 64) + 7;
  v80 = v21;
  __n = v20;
  v86 = v20 + v23;
  v95 = (((v79 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 + (v9 | 7) + ((v20 + v23) & ~v23);
  v24 = v95 & ~(v9 | 7);
  v77 = v11;
  v25 = v11 - 1;
  if (!v11)
    v25 = 0;
  v94 = v25;
  v73 = v14;
  v26 = v24 + v14;
  if (v18 <= v24 + v14)
    v27 = v24 + v14;
  else
    v27 = v18;
  v83 = ~v101;
  v99 = ~v9;
  v82 = ~v17;
  v84 = ~v23;
  v85 = ~(v9 | 7);
  v87 = *(_DWORD *)(v22 + 84);
  switch(*((_BYTE *)a1 + v27))
  {
    case 0:
      swift_bridgeObjectRelease();

      goto LABEL_34;
    case 1:
    case 2:
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      goto LABEL_34;
    case 3:
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      (*(void (**)(unint64_t, uint64_t))(v91 + 8))(((((unint64_t)a1 + 31) & 0xFFFFFFFFFFFFFFF8) + v101 + 16) & v83, v93);
      goto LABEL_34;
    case 4:
      swift_bridgeObjectRelease();

      v29 = (uint64_t)a1 + v9 + 24;
      goto LABEL_31;
    case 5:
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      v30 = ((((unint64_t)a1 + 31) & 0xFFFFFFFFFFFFFFF8) + v17 + 16) & v82;
      (*(void (**)(unint64_t, uint64_t))(v88 + 8))(v30, v90);
      v29 = v89 + v30;
LABEL_31:
      v31 = v29 & v99;
      if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v29 & v99, 1, v100))
        (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v31, v100);
      swift_bridgeObjectRelease();
      goto LABEL_34;
    case 6:
LABEL_34:
      swift_bridgeObjectRelease();
      break;
    case 7:
      if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a1, 1, v97))
        (*(void (**)(id *, uint64_t))(v19 + 8))(a1, v97);
      v33 = ((unint64_t)a1 + v86) & v84;
      if (v87 >= 0x7FFFFFFF)
      {
        if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(((unint64_t)a1 + v86) & v84, v87, v80))goto LABEL_61;
        goto LABEL_60;
      }
      v50 = *(_QWORD *)(((((v79 + v33) & 0xFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8) + 8);
      if (v50 >= 0xFFFFFFFF)
        LODWORD(v50) = -1;
      if ((_DWORD)v50 == -1)
      {
LABEL_60:
        (*(void (**)(unint64_t, uint64_t))(v22 + 8))(v33, v80);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
LABEL_61:
      v51 = ((unint64_t)a1 + v95) & v85;
      if (v94 >= 0x7FFFFFFF)
      {
        v53 = (v78 + v51) & v99;
        if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v53, v77, v100) > 1)
          break;
        goto LABEL_67;
      }
      LODWORD(v52) = -1;
      if (*(_QWORD *)((((unint64_t)a1 + v95) & v85) + 8) < 0xFFFFFFFFuLL)
        v52 = *(_QWORD *)((((unint64_t)a1 + v95) & v85) + 8);
      if ((int)v52 - 1 < 0)
      {
        v53 = (v78 + v51) & v99;
LABEL_67:
        swift_bridgeObjectRelease();

        if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v53, 1, v100))
          (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v53, v100);
        break;
      }
      break;
    default:
      if (v27 <= 3)
        v28 = v27;
      else
        v28 = 4;
      __asm { BR              X14 }
      return result;
  }
  switch(*((_BYTE *)a2 + v27))
  {
    case 0:
      v34 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v34;
      a1[4] = a2[4];
      *((_BYTE *)a1 + v27) = 0;
      return a1;
    case 1:
      v35 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v35;
      *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
      v36 = 1;
      goto LABEL_73;
    case 2:
      v37 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v37;
      *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
      v36 = 2;
      goto LABEL_73;
    case 3:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = a2[2];
      v38 = (_OWORD *)(((unint64_t)a1 + 31) & 0xFFFFFFFFFFFFFFF8);
      v39 = (_OWORD *)(((unint64_t)a2 + 31) & 0xFFFFFFFFFFFFFFF8);
      *v38 = *v39;
      v40 = ((unint64_t)v38 + v101 + 16) & v83;
      v41 = ((unint64_t)v39 + v101 + 16) & v83;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v91 + 32))(v40, v41, v93);
      *(_OWORD *)((v92 + v40) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v92 + v41) & 0xFFFFFFFFFFFFF8);
      v36 = 3;
      goto LABEL_73;
    case 4:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = a2[2];
      v42 = (void *)(((unint64_t)a1 + v9 + 24) & v99);
      v43 = (const void *)(((unint64_t)a2 + v9 + 24) & v99);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v43, 1, v100))
      {
        memcpy(v42, v43, v96);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v81 + 32))(v42, v43, v100);
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v42, 0, 1, v100);
      }
      v54 = (_OWORD *)(((unint64_t)v42 + v98) & 0xFFFFFFFFFFFFFFF8);
      v55 = (_OWORD *)(((unint64_t)v43 + v98) & 0xFFFFFFFFFFFFFFF8);
      *v54 = *v55;
      *(_OWORD *)(((unint64_t)v54 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v55 + 23) & 0xFFFFFFFFFFFFF8);
      v36 = 4;
      goto LABEL_73;
    case 5:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = a2[2];
      v44 = (_OWORD *)(((unint64_t)a1 + 31) & 0xFFFFFFFFFFFFFFF8);
      v45 = (_OWORD *)(((unint64_t)a2 + 31) & 0xFFFFFFFFFFFFFFF8);
      *v44 = *v45;
      v46 = ((unint64_t)v44 + v17 + 16) & v82;
      v47 = ((unint64_t)v45 + v17 + 16) & v82;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v88 + 32))(v46, v47, v90);
      v48 = (void *)((v89 + v46) & v99);
      v49 = (const void *)((v89 + v47) & v99);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v49, 1, v100))
      {
        memcpy(v48, v49, v96);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v81 + 32))(v48, v49, v100);
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v48, 0, 1, v100);
      }
      v56 = (_OWORD *)(((unint64_t)v48 + v98) & 0xFFFFFFFFFFFFFFF8);
      v57 = (_OWORD *)(((unint64_t)v49 + v98) & 0xFFFFFFFFFFFFFFF8);
      *v56 = *v57;
      *(_OWORD *)(((unint64_t)v56 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v57 + 23) & 0xFFFFFFFFFFFFF8);
      v36 = 5;
      goto LABEL_73;
    case 6:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v36 = 6;
LABEL_73:
      *((_BYTE *)a1 + v27) = v36;
      return a1;
    case 7:
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v97))
      {
        memcpy(a1, a2, __n);
      }
      else
      {
        (*(void (**)(id *, id *, uint64_t))(v19 + 32))(a1, a2, v97);
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v97);
      }
      v59 = (void *)(((unint64_t)a1 + v86) & v84);
      v60 = (const void *)(((unint64_t)a2 + v86) & v84);
      if (v87 < 0x7FFFFFFF)
      {
        v61 = *(_QWORD *)((((((unint64_t)v60 + v79) & 0xFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8) + 8);
        if (v61 >= 0xFFFFFFFF)
          LODWORD(v61) = -1;
        if ((_DWORD)v61 != -1)
          goto LABEL_78;
      }
      else if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(((unint64_t)a2 + v86) & v84, v87, v80))
      {
LABEL_78:
        memcpy(v59, v60, (((v79 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16);
        goto LABEL_83;
      }
      (*(void (**)(void *, const void *, uint64_t))(v22 + 32))(v59, v60, v80);
      v62 = (_OWORD *)(((unint64_t)v59 + v79) & 0xFFFFFFFFFFFFFFF8);
      v63 = (_OWORD *)(((unint64_t)v60 + v79) & 0xFFFFFFFFFFFFFFF8);
      *v62 = *v63;
      *(_OWORD *)(((unint64_t)v62 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v63 + 23) & 0xFFFFFFFFFFFFF8);
LABEL_83:
      v64 = (_OWORD *)(((unint64_t)a1 + v95) & v85);
      v65 = (_QWORD *)(((unint64_t)a2 + v95) & v85);
      if (v94 >= 0x7FFFFFFF)
      {
        v67 = (const void *)(((unint64_t)v65 + v78) & v99);
        if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v67, v77, v100) < 2)
          goto LABEL_89;
LABEL_91:
        memcpy(v64, v65, v73);
LABEL_94:
        v70 = v96;
        goto LABEL_95;
      }
      v66 = v65[1];
      if (v66 >= 0xFFFFFFFF)
        LODWORD(v66) = -1;
      if ((int)v66 - 1 >= 0)
        goto LABEL_91;
      v67 = (const void *)(((unint64_t)v65 + v78) & v99);
LABEL_89:
      v68 = *(_OWORD *)v65;
      *(_QWORD *)((((unint64_t)a1 + v95) & v85) + 0x10) = v65[2];
      *v64 = v68;
      v69 = (void *)(((unint64_t)v64 + v78) & v99);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v67, 1, v100))
      {
        memcpy(v69, v67, v96);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v81 + 32))(v69, v67, v100);
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v69, 0, 1, v100);
      }
      v70 = v72;
      if (!v77)
        goto LABEL_94;
LABEL_95:
      v71 = ((((((v9 + 24) & ~v9) + v70 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
      if (v71 <= v76)
        v71 = v76;
      if (v75 > v71)
        v71 = v75;
      if (v71 <= v26)
        v71 = v26;
      *((_BYTE *)a1 + v71) = 7;
      return a1;
    default:
      if (v27 <= 3)
        v32 = v27;
      else
        v32 = 4;
      __asm { BR              X12 }
      return result;
  }
}

uint64_t sub_23FD584C8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  int v30;
  unsigned int v32;
  int v33;
  unsigned int v34;

  v4 = sub_23FD747C8();
  v5 = ((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64)
       + ((*(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80))
       + 7) & 0xFFFFFFFFFFFFFFF8)
     + 16;
  v6 = *(_QWORD *)(sub_23FD74840() - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v8 = *(_DWORD *)(v6 + 84);
  v9 = (v7 + 24) & ~(unint64_t)v7;
  v10 = *(_QWORD *)(v6 + 64);
  v11 = *(_QWORD *)(sub_23FD74798() - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = *(_QWORD *)(v11 + 64);
  v14 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v15 = *(_DWORD *)(v14 + 84);
  v16 = *(_QWORD *)(v14 + 64);
  v17 = sub_23FD71474();
  if (v8)
    v18 = v10;
  else
    v18 = v10 + 1;
  v19 = v9 + v18;
  v20 = ((((v9 + v18 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v5 > v20)
    v20 = v5;
  v21 = ((((v18 + ((v13 + v7 + ((v12 + 40) & ~v12)) & ~(unint64_t)v7) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 23) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v20 > v21)
    v21 = v20;
  v22 = *(_QWORD *)(v17 - 8);
  v23 = *(_DWORD *)(v22 + 80) & 0xF8 | 7;
  v24 = (((*(_QWORD *)(v22 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  if (v15)
    v25 = v16;
  else
    v25 = v16 + 1;
  v26 = ((v24 + v7 + ((v25 + v23) & ~v23) + 16) & (v7 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8))
      + v19;
  if (v21 <= v26)
    v21 = v26;
  v27 = 48;
  if (v21 > 0x30)
    v27 = v21;
  if (!a2)
    return 0;
  if (a2 < 0xF9)
    goto LABEL_33;
  v28 = v27 + 1;
  v29 = 8 * (v27 + 1);
  if ((v27 + 1) <= 3)
  {
    v32 = ((a2 + ~(-1 << v29) - 248) >> v29) + 1;
    if (HIWORD(v32))
    {
      v30 = *(_DWORD *)(a1 + v28);
      if (!v30)
        goto LABEL_33;
      goto LABEL_26;
    }
    if (v32 > 0xFF)
    {
      v30 = *(unsigned __int16 *)(a1 + v28);
      if (!*(_WORD *)(a1 + v28))
        goto LABEL_33;
      goto LABEL_26;
    }
    if (v32 < 2)
    {
LABEL_33:
      v34 = *(unsigned __int8 *)(a1 + v27);
      if (v34 >= 8)
        return (v34 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v30 = *(unsigned __int8 *)(a1 + v28);
  if (!*(_BYTE *)(a1 + v28))
    goto LABEL_33;
LABEL_26:
  v33 = (v30 - 1) << v29;
  if (v28 > 3)
    v33 = 0;
  if ((_DWORD)v28)
  {
    if (v28 > 3)
      LODWORD(v28) = 4;
    __asm { BR              X11 }
  }
  return (v33 + 249);
}

void sub_23FD58748(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  size_t v28;
  char v29;
  _BYTE *v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  int v35;

  v5 = sub_23FD747C8();
  v6 = ((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64)
       + ((*(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80))
       + 7) & 0xFFFFFFFFFFFFFFF8)
     + 16;
  v7 = *(_QWORD *)(sub_23FD74840() - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = *(_DWORD *)(v7 + 84);
  v10 = (v8 + 24) & ~(unint64_t)v8;
  v11 = *(_QWORD *)(v7 + 64);
  v12 = *(_QWORD *)(sub_23FD74798() - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = *(_QWORD *)(v12 + 64);
  v15 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v16 = *(_DWORD *)(v15 + 84);
  v17 = *(_QWORD *)(v15 + 64);
  v18 = sub_23FD71474();
  if (v9)
    v19 = v11;
  else
    v19 = v11 + 1;
  v20 = v10 + v19;
  v21 = ((((v10 + v19 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v6 > v21)
    v21 = v6;
  v22 = ((((v19 + ((v14 + v8 + ((v13 + 40) & ~v13)) & ~(unint64_t)v8) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 23) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v21 > v22)
    v22 = v21;
  v23 = *(_QWORD *)(v18 - 8);
  v24 = *(_DWORD *)(v23 + 80) & 0xF8 | 7;
  v25 = (((*(_QWORD *)(v23 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  if (v16)
    v26 = v17;
  else
    v26 = v17 + 1;
  v27 = ((v25 + v8 + ((v26 + v24) & ~v24) + 16) & (v8 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8))
      + v20;
  if (v22 <= v27)
    v22 = v27;
  if (v22 <= 0x30)
    v22 = 48;
  v28 = v22 + 1;
  v29 = 8 * (v22 + 1);
  if (a3 < 0xF9)
  {
    v32 = 0;
    v30 = a1;
    v31 = a2;
  }
  else
  {
    v30 = a1;
    v31 = a2;
    if (v28 <= 3)
    {
      v34 = ((a3 + ~(-1 << v29) - 248) >> v29) + 1;
      if (HIWORD(v34))
      {
        v32 = 4u;
      }
      else if (v34 >= 0x100)
      {
        v32 = 2;
      }
      else
      {
        v32 = v34 > 1;
      }
    }
    else
    {
      v32 = 1u;
    }
  }
  if (v31 <= 0xF8)
    __asm { BR              X11 }
  v33 = v31 - 249;
  if (v28 < 4)
  {
    if ((_DWORD)v22 != -1)
    {
      v35 = v33 & ~(-1 << v29);
      bzero(v30, v28);
      if ((_DWORD)v28 == 3)
      {
        *(_WORD *)v30 = v35;
        v30[2] = BYTE2(v35);
      }
      else if ((_DWORD)v28 == 2)
      {
        *(_WORD *)v30 = v35;
      }
      else
      {
        *v30 = v35;
      }
    }
  }
  else
  {
    bzero(v30, v22 + 1);
    *(_DWORD *)v30 = v33;
  }
  __asm { BR              X10 }
}

uint64_t sub_23FD58A40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t result;
  uint64_t v22;

  v4 = sub_23FD747C8();
  v5 = ((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64)
       + ((*(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80))
       + 7) & 0xFFFFFFFFFFFFFFF8)
     + 16;
  v6 = *(_QWORD *)(sub_23FD74840() - 8);
  v8 = *(_DWORD *)(v6 + 80);
  v7 = *(_DWORD *)(v6 + 84);
  v9 = (v8 + 24) & ~(unint64_t)v8;
  v10 = *(_QWORD *)(v6 + 64);
  if (v7)
    v11 = v10;
  else
    v11 = v10 + 1;
  v12 = v9 + v11;
  if (v5 <= ((((v9 + v11 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16)
    v5 = ((((v9 + v11 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  v13 = sub_23FD74798();
  if (v5 <= ((((v11
               + ((*(_QWORD *)(*(_QWORD *)(v13 - 8) + 64)
                 + v8
                 + ((*(unsigned __int8 *)(*(_QWORD *)(v13 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v13 - 8) + 80))) & ~(unint64_t)v8)
               + 7) & 0xFFFFFFFFFFFFFFF8)
             + 23) & 0xFFFFFFFFFFFFFFF8)
           + 16)
    v5 = ((((v11
           + ((*(_QWORD *)(*(_QWORD *)(v13 - 8) + 64)
             + v8
             + ((*(unsigned __int8 *)(*(_QWORD *)(v13 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v13 - 8) + 80))) & ~(unint64_t)v8)
           + 7) & 0xFFFFFFFFFFFFFFF8)
         + 23) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  v14 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v15 = *(_DWORD *)(v14 + 84);
  v16 = *(_QWORD *)(v14 + 64);
  if (v15)
    v17 = v16;
  else
    v17 = v16 + 1;
  v18 = *(_QWORD *)(sub_23FD71474() - 8);
  v19 = *(_DWORD *)(v18 + 80) & 0xF8 | 7;
  v20 = ((((((*(_QWORD *)(v18 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
        + v8
        + ((v17 + v19) & ~v19)
        + 16) & (v8 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8))
      + v12;
  if (v5 > v20)
    v20 = v5;
  if (v20 <= 0x30)
    v20 = 48;
  result = *(unsigned __int8 *)(a1 + v20);
  if (result >= 8)
  {
    if (v20 <= 3)
      v22 = v20;
    else
      v22 = 4;
    __asm { BR              X12 }
  }
  return result;
}

uint64_t sub_23FD58C24(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  size_t v29;
  char v30;
  int v31;

  v6 = sub_23FD747C8();
  v7 = ((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64)
       + ((*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80))
       + 7) & 0xFFFFFFFFFFFFFFF8)
     + 16;
  v8 = *(_QWORD *)(sub_23FD74840() - 8);
  v10 = *(_DWORD *)(v8 + 80);
  v9 = *(_DWORD *)(v8 + 84);
  v11 = (v10 + 24) & ~(unint64_t)v10;
  v12 = *(_QWORD *)(v8 + 64);
  if (v9)
    v13 = v12;
  else
    v13 = v12 + 1;
  v14 = v11 + v13;
  if (v7 <= ((((v11 + v13 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16)
    v7 = ((((v11 + v13 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  v15 = sub_23FD74798();
  if (v7 <= ((((v13
               + ((*(_QWORD *)(*(_QWORD *)(v15 - 8) + 64)
                 + v10
                 + ((*(unsigned __int8 *)(*(_QWORD *)(v15 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v15 - 8) + 80))) & ~(unint64_t)v10)
               + 7) & 0xFFFFFFFFFFFFFFF8)
             + 23) & 0xFFFFFFFFFFFFFFF8)
           + 16)
    v7 = ((((v13
           + ((*(_QWORD *)(*(_QWORD *)(v15 - 8) + 64)
             + v10
             + ((*(unsigned __int8 *)(*(_QWORD *)(v15 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v15 - 8) + 80))) & ~(unint64_t)v10)
           + 7) & 0xFFFFFFFFFFFFFFF8)
         + 23) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  v16 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v17 = *(_DWORD *)(v16 + 84);
  v18 = *(_QWORD *)(v16 + 64);
  if (v17)
    v19 = v18;
  else
    v19 = v18 + 1;
  result = sub_23FD71474();
  v21 = *(_QWORD *)(result - 8);
  v22 = v10 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  v23 = v10 + 16;
  if (a2 > 7)
  {
    v27 = *(_DWORD *)(v21 + 80) & 0xF8 | 7;
    v28 = ((v23
          + ((((*(_QWORD *)(v21 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
          + ((v19 + v27) & ~v27)) & v22)
        + v14;
    if (v7 > v28)
      v28 = v7;
    if (v28 <= 0x30)
      v29 = 48;
    else
      v29 = v28;
    if (v29 <= 3)
      v30 = ((a2 - 8) >> (8 * v29)) + 8;
    else
      v30 = 8;
    a1[v29] = v30;
    if (v29 >= 4)
      v31 = 4;
    else
      v31 = v29;
    bzero(a1, v29);
    __asm { BR              X10 }
  }
  v24 = (((*(_QWORD *)(v21 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  v25 = *(_DWORD *)(v21 + 80) & 0xF8 | 7;
  v26 = ((v23 + v24 + ((v19 + v25) & ~v25)) & v22) + v14;
  if (v7 > v26)
    v26 = v7;
  if (v26 <= 0x30)
    v26 = 48;
  a1[v26] = a2;
  return result;
}

uint64_t storeEnumTagSinglePayload for ToolExecutionError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23FD58EC4 + 4 * byte_23FD82D57[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23FD58EF8 + 4 * byte_23FD82D52[v4]))();
}

uint64_t sub_23FD58EF8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23FD58F00(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23FD58F08);
  return result;
}

uint64_t sub_23FD58F14(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23FD58F1CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23FD58F20(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23FD58F28(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ToolExecutionError()
{
  return &type metadata for ToolExecutionError;
}

uint64_t *sub_23FD58F44(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      swift_bridgeObjectRetain();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      swift_bridgeObjectRetain();
      v12 = *(int *)(sub_23FBFD684(&qword_256F65820) + 48);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = sub_23FD73C28();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        return a1;
      }
      v8 = sub_23FD73C28();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23FD59074(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  switch((_DWORD)result)
  {
    case 2:
      return swift_bridgeObjectRelease();
    case 1:
      swift_bridgeObjectRelease();
      a1 += *(int *)(sub_23FBFD684(&qword_256F65820) + 48);
      goto LABEL_7;
    case 0:
LABEL_7:
      v3 = sub_23FD73C28();
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  return result;
}

_QWORD *sub_23FD590F8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    swift_bridgeObjectRetain();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    swift_bridgeObjectRetain();
    v10 = *(int *)(sub_23FBFD684(&qword_256F65820) + 48);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = sub_23FD73C28();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      return a1;
    }
    v7 = sub_23FD73C28();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_23FD59200(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  if (a1 != a2)
  {
    sub_23FD54DA0((uint64_t)a1, type metadata accessor for DialogResponseError);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      v8 = *(int *)(sub_23FBFD684(&qword_256F65820) + 48);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_23FD73C28();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        return a1;
      }
      v7 = sub_23FD73C28();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_23FD59330(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *a1 = *a2;
    v8 = *(int *)(sub_23FBFD684(&qword_256F65820) + 48);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23FD73C28();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      return a1;
    }
    v7 = sub_23FD73C28();
    (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_OWORD *sub_23FD59410(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  if (a1 != a2)
  {
    sub_23FD54DA0((uint64_t)a1, type metadata accessor for DialogResponseError);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      v8 = *(int *)(sub_23FBFD684(&qword_256F65820) + 48);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_23FD73C28();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        return a1;
      }
      v7 = sub_23FD73C28();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23FD59508()
{
  uint64_t result;
  unint64_t v1;
  char v2;
  uint64_t v3;
  char *v4;
  void *v5;

  result = sub_23FD73C28();
  if (v1 <= 0x3F)
  {
    v3 = *(_QWORD *)(result - 8) + 64;
    swift_getTupleTypeLayout2();
    v4 = &v2;
    v5 = &unk_23FD82EE0;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void sub_23FD59590()
{
  sub_23FBFEE2C(&qword_256F65810, type metadata accessor for DialogResponseError, (uint64_t)&unk_23FD83058);
}

unint64_t sub_23FD595C4()
{
  unint64_t result;

  result = qword_256F65978;
  if (!qword_256F65978)
  {
    result = MEMORY[0x2426797E8](&unk_23FD82FB0, &type metadata for ToolExecutionError);
    atomic_store(result, (unint64_t *)&qword_256F65978);
  }
  return result;
}

unint64_t sub_23FD59600()
{
  unint64_t result;

  result = qword_256F65988;
  if (!qword_256F65988)
  {
    result = MEMORY[0x2426797E8](&unk_23FD82F70, &type metadata for ToolExecutionError);
    atomic_store(result, (unint64_t *)&qword_256F65988);
  }
  return result;
}

uint64_t sub_23FD5963C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v0[54];
  *(_QWORD *)(v1 - 136) = v0[57];
  *(_QWORD *)(v1 - 128) = v2;
  v3 = v0[50];
  *(_QWORD *)(v1 - 120) = v0[51];
  *(_QWORD *)(v1 - 112) = v3;
  *(_QWORD *)(v1 - 104) = v0[49];
  return swift_task_dealloc();
}

uint64_t sub_23FD596F0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = v0[29];
  *(_QWORD *)(v1 - 152) = v0[30];
  *(_QWORD *)(v1 - 144) = v2;
  v3 = v0[23];
  *(_QWORD *)(v1 - 136) = v0[26];
  *(_QWORD *)(v1 - 128) = v3;
  v4 = v0[17];
  *(_QWORD *)(v1 - 120) = v0[20];
  *(_QWORD *)(v1 - 112) = v4;
  v5 = v0[13];
  *(_QWORD *)(v1 - 104) = v0[16];
  *(_QWORD *)(v1 - 96) = v5;
  return swift_task_dealloc();
}

uint64_t sub_23FD5979C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = v0[29];
  *(_QWORD *)(v1 - 160) = v0[30];
  *(_QWORD *)(v1 - 152) = v2;
  v3 = v0[23];
  *(_QWORD *)(v1 - 144) = v0[26];
  *(_QWORD *)(v1 - 136) = v3;
  v4 = v0[17];
  *(_QWORD *)(v1 - 128) = v0[20];
  *(_QWORD *)(v1 - 120) = v4;
  v5 = v0[13];
  *(_QWORD *)(v1 - 112) = v0[16];
  *(_QWORD *)(v1 - 104) = v5;
  return swift_task_dealloc();
}

void sub_23FD59848()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v3 - 112) = v2;
  *(_QWORD *)(v3 - 104) = v1;
  v4 = *(_QWORD *)(v3 - 72);
  *(_QWORD *)(v3 - 96) = v0;
  *(_QWORD *)(v3 - 88) = v4;
  type metadata accessor for ToolExecution.Outcome();
}

uint64_t sub_23FD59864()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FD59874()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v0[51];
  *(_QWORD *)(v1 - 136) = v0[54];
  *(_QWORD *)(v1 - 128) = v2;
  v3 = v0[49];
  *(_QWORD *)(v1 - 120) = v0[50];
  *(_QWORD *)(v1 - 112) = v3;
  return swift_task_dealloc();
}

uint64_t sub_23FD5990C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t sub_23FD5991C()
{
  uint64_t v0;

  return sub_23FD4F7BC(*(_QWORD *)(v0 + 184));
}

uint64_t sub_23FD59960(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 792);
}

uint64_t sub_23FD59988()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FD59990(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_23FD599AC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 - 112))();
}

void sub_23FD599B4(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  _os_log_impl(a1, v4, v5, a4, v6, 2u);
}

uint64_t sub_23FD599C8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FD599DC()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 712);
}

uint64_t sub_23FD599F4()
{
  return swift_release();
}

uint64_t sub_23FD599FC()
{
  return type metadata accessor for DialogResponseError(0);
}

uint64_t sub_23FD59A04()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FD59A20()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FD59A2C()
{
  return swift_getEnumCaseMultiPayload();
}

BOOL sub_23FD59A38(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_23FD59A48()
{
  return swift_task_alloc();
}

uint64_t sub_23FD59A50()
{
  __int128 *v0;
  uint64_t v1;
  __int128 v2;

  v2 = *v0;
  *(_OWORD *)(v1 - 144) = v0[1];
  *(_OWORD *)(v1 - 128) = v2;
  return swift_release();
}

uint64_t sub_23FD59A68()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FD59A7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v2, v1, a1);
}

uint64_t sub_23FD59A94()
{
  return type metadata accessor for DialogResponseError(0);
}

uint64_t sub_23FD59AAC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return sub_23FCC3BEC(v3, v1, v2, *(_QWORD *)(a1 - 256));
}

uint64_t sub_23FD59AC4()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[103] + 8))(v0[104], v0[102]);
}

uint64_t sub_23FD59AD8()
{
  return sub_23FD75380();
}

uint64_t sub_23FD59AEC()
{
  return swift_task_alloc();
}

uint64_t sub_23FD59AF4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FD59B08()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 - 120))();
}

uint64_t sub_23FD59B10()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0, v1);
}

uint64_t sub_23FD59B24()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t sub_23FD59B38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

uint64_t sub_23FD59B4C()
{
  return swift_release();
}

uint64_t sub_23FD59B54()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23FD59B64@<X0>(uint64_t a1@<X1>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v2, v3);
}

uint64_t sub_23FD59B74()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23FD59B7C()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 + 120) + 88))(v0, *(_QWORD *)(v1 + 112));
}

__n128 sub_23FD59B8C()
{
  uint64_t v0;
  uint64_t v1;
  __n128 result;

  result = *(__n128 *)(v1 - 144);
  *(_OWORD *)v0 = *(_OWORD *)(v1 - 128);
  *(__n128 *)(v0 + 16) = result;
  return result;
}

__n128 sub_23FD59B9C()
{
  __int128 *v0;
  uint64_t v1;
  __int128 v2;
  __n128 result;

  v2 = *v0;
  result = (__n128)v0[1];
  *(__n128 *)(v1 - 144) = result;
  *(_OWORD *)(v1 - 128) = v2;
  *(_QWORD *)(v1 - 152) = *((_QWORD *)v0 + 4);
  return result;
}

uint64_t sub_23FD59BD0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 - 96))(a1, v1, v2);
}

uint64_t sub_23FD59BEC()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 616);
}

uint64_t sub_23FD59BFC()
{
  return sub_23FD71BC4();
}

uint64_t sub_23FD59C04()
{
  uint64_t v0;

  return v0;
}

void sub_23FD59C14(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_23FD54DA0(v2, a2);
}

void sub_23FD59C38(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_23FBFEF74(*(_QWORD *)(v2 - 128), a2);
}

uint64_t sub_23FD59C40()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FD59C48()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(v1 - 120))(v0);
}

uint64_t sub_23FD59C58()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 864);
}

uint64_t sub_23FD59C6C()
{
  return swift_release();
}

uint64_t sub_23FD59C78()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FD59C80()
{
  return 0;
}

uint64_t sub_23FD59CA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

uint64_t sub_23FD59CB4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(a1 + 8))(*(_QWORD *)(v1 - 120));
}

uint64_t sub_23FD59CC0()
{
  return swift_task_dealloc();
}

void sub_23FD59CCC(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  uint8_t *v4;

  _os_log_impl(a1, a2, a3, a4, v4, 0x16u);
}

uint64_t sub_23FD59CD8()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_23FD59CE4()
{
  return swift_endAccess();
}

uint64_t sub_23FD59CEC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FD59CF4()
{
  return sub_23FD75038();
}

uint64_t sub_23FD59D00(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  return a2(0);
}

uint64_t sub_23FD59D08()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FD59D10()
{
  return sub_23FD73BF8();
}

uint64_t sub_23FD59D18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  return type metadata accessor for ToolExecutionEvent(a1, v4, v5, a4);
}

uint64_t sub_23FD59D24(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, v1, v2);
}

uint64_t sub_23FD59D44(uint64_t a1)
{
  uint64_t v1;

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v1, 1, a1);
}

void sub_23FD59D68(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 112) = v1;
  *(_QWORD *)(v4 - 104) = v3;
  *(_QWORD *)(v4 - 144) = v2;
  *(_QWORD *)(v4 - 120) = *a1;
}

uint64_t sub_23FD59D7C()
{
  return swift_willThrow();
}

uint64_t sub_23FD59D88()
{
  return swift_willThrow();
}

uint64_t sub_23FD59D94(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, v1, v2);
}

uint64_t sub_23FD59DA0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 112) = *(_QWORD *)(a1 + 56);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FD59DAC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FD59DB8()
{
  return sub_23FD74C0C();
}

uint64_t sub_23FD59DC4@<X0>(uint64_t a1@<X1>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(v3, a1, v2);
}

uint64_t sub_23FD59DD0(uint64_t a1)
{
  uint64_t v1;

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v1, 1, a1);
}

uint64_t sub_23FD59DF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v5;
  unint64_t v6;

  type metadata accessor for ToolExecutionEvent(255, *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), a4);
  result = sub_23FD74E64();
  if (v5 <= 0x3F)
  {
    result = sub_23FD74E34();
    if (v6 <= 0x3F)
    {
      result = swift_initClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t sub_23FD59E94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FD59EB0(a1, a2, a3);
}

uint64_t sub_23FD59EA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23FD59EB0(a1, a2, a3);
}

uint64_t sub_23FD59EB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = sub_23FD74DEC();
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, 1, v5) == 1)
  {
    sub_23FD625B8(a1, &qword_254346A28);
  }
  else
  {
    sub_23FD74DE0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  }
  if (*(_QWORD *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_23FD74D80();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_23FD59FD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;

  v12 = swift_allocObject();
  sub_23FD5A098(a1, a2, a3, a4, a5, a6);
  return v12;
}

uint64_t sub_23FD5A050@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x24BEE6A10];
  v3 = sub_23FD74E10();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t *sub_23FD5A098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  _QWORD *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  _QWORD *v60;
  char *v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v69[2];
  void (*v70)(char *, uint64_t);
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;

  v94 = a4;
  v95 = a6;
  v88 = a5;
  v90 = a3;
  v83 = a2;
  v96 = a1;
  v8 = *v6;
  v9 = sub_23FBFD684(&qword_256F5EBD0);
  v10 = *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64);
  v81 = *(_QWORD *)(v9 - 8);
  v82 = v10;
  MEMORY[0x24BDAC7A8](v9, v11);
  sub_23FD62728();
  v80 = v12;
  v77 = sub_23FC75FD8();
  v91 = *(_QWORD *)(v77 - 8);
  v79 = *(_QWORD *)(v91 + 64);
  MEMORY[0x24BDAC7A8](v77, v13);
  sub_23FD62728();
  v74 = v14;
  v87 = *(_QWORD *)(a5 - 8);
  v89 = *(_QWORD *)(v87 + 64);
  MEMORY[0x24BDAC7A8](v15, v16);
  sub_23FD62728();
  v86 = v17;
  v18 = sub_23FBFD684(&qword_254346A28);
  MEMORY[0x24BDAC7A8](v18, v19);
  v85 = (uint64_t)v69 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(_QWORD *)(v8 + 88);
  v92 = *(_QWORD *)(v8 + 80);
  type metadata accessor for ToolExecutionEvent(255, v92, v21, v22);
  v23 = sub_23FD74E10();
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23, v25);
  v27 = (char *)v69 - v26;
  v93 = sub_23FD74E34();
  v73 = *(_QWORD *)(v93 - 8);
  v28 = v73;
  MEMORY[0x24BDAC7A8](v93, v29);
  v31 = (char *)v69 - v30;
  v32 = sub_23FD74E64();
  v33 = *(_QWORD *)(v32 - 8);
  v76 = v32;
  v78 = v33;
  MEMORY[0x24BDAC7A8](v32, v34);
  v36 = (char *)v69 - v35;
  sub_23FD5A050((uint64_t)v27);
  v75 = v36;
  v72 = v31;
  sub_23FD74DF8();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v27, v23);
  v84 = v6;
  (*(void (**)(uint64_t, char *, uint64_t))(v33 + 16))((uint64_t)v6 + *(_QWORD *)(*v6 + 96), v36, v32);
  (*(void (**)(uint64_t, char *, uint64_t))(v28 + 16))((uint64_t)v6 + *(_QWORD *)(*v6 + 104), v31, v93);
  v69[0] = sub_23FD74DEC();
  v37 = v85;
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v85, 1, 1, v69[0]);
  v39 = v86;
  v38 = v87;
  v40 = *(void (**)(uint64_t, uint64_t, uint64_t))(v87 + 16);
  v41 = v90;
  v40(v86, v90, v88);
  v42 = *(unsigned __int8 *)(v38 + 80);
  v43 = (v42 + 56) & ~v42;
  v69[1] = v42 | 7;
  v44 = (v89 + v43 + 7) & 0xFFFFFFFFFFFFFFF8;
  v45 = (_QWORD *)swift_allocObject();
  v46 = (char *)sub_23FD62784(v45);
  *((_QWORD *)v46 + 6) = v95;
  v70 = *(void (**)(char *, uint64_t))(v38 + 32);
  v47 = v39;
  v48 = v39;
  v50 = v49;
  v70(&v46[v43], v48);
  *(_QWORD *)((char *)v45 + v44) = v84;
  swift_retain();
  v71 = sub_23FC6126C(v37, (uint64_t)&unk_256F65B68, (uint64_t)v45);
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v37, 1, 1, v69[0]);
  v40(v47, v41, v50);
  v51 = v91;
  v52 = v74;
  v53 = v77;
  sub_23FC93224(v74, v96, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v91 + 16));
  v54 = v80;
  sub_23FD622B4(v94, v80, &qword_256F5EBD0);
  v55 = (v42 + 64) & ~v42;
  v56 = (v55 + v89 + *(unsigned __int8 *)(v51 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
  v57 = (v79 + v56 + 7) & 0xFFFFFFFFFFFFFFF8;
  v58 = (*(unsigned __int8 *)(v81 + 80) + v57 + 8) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80);
  v59 = (v82 + v58 + 7) & 0xFFFFFFFFFFFFFFF8;
  v60 = (_QWORD *)swift_allocObject();
  v61 = (char *)sub_23FD62784(v60);
  v62 = v84;
  v60[6] = v95;
  v60[7] = v62;
  v70(&v61[v55], v86);
  v63 = (uint64_t)v60 + v56;
  v64 = v91;
  v65 = v53;
  sub_23FC93224(v63, v52, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v91 + 32));
  *(_QWORD *)((char *)v60 + v57) = v83;
  sub_23FD62448(v54, (uint64_t)v60 + v58);
  v66 = (_QWORD *)((char *)v60 + v59);
  v67 = v71;
  *v66 = &unk_256F65B78;
  v66[1] = v67;
  swift_retain();
  swift_retain_n();
  sub_23FD59EB0(v85, (uint64_t)&unk_256F65B88, (uint64_t)v60);
  swift_release();
  swift_release_n();
  sub_23FD625B8(v94, &qword_256F5EBD0);
  (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v90, v88);
  (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v96, v65);
  (*(void (**)(char *, uint64_t))(v73 + 8))(v72, v93);
  (*(void (**)(char *, uint64_t))(v78 + 8))(v75, v76);
  return v62;
}

uint64_t sub_23FD5A5DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t);

  v7[4] = a5;
  v10 = *a5;
  v11 = sub_23FD72BF0();
  v7[5] = v11;
  v7[6] = *(_QWORD *)(v11 - 8);
  v7[7] = swift_task_alloc();
  v7[8] = swift_task_alloc();
  v7[9] = type metadata accessor for ToolExecutionEvent(0, *(_QWORD *)(v10 + 80), *(_QWORD *)(v10 + 88), v12);
  v7[10] = swift_task_alloc();
  v13 = sub_23FD74E04();
  v7[11] = v13;
  v7[12] = *(_QWORD *)(v13 - 8);
  v7[13] = swift_task_alloc();
  v14 = sub_23FD74504();
  v7[14] = v14;
  v7[15] = *(_QWORD *)(v14 - 8);
  v7[16] = swift_task_alloc();
  v7[17] = swift_task_alloc();
  v7[18] = swift_task_alloc();
  v7[19] = swift_task_alloc();
  sub_23FBFD684(&qword_256F65B90);
  v7[20] = swift_task_alloc();
  v15 = sub_23FBFD684(&qword_256F65B98);
  v7[21] = v15;
  v7[22] = *(_QWORD *)(v15 - 8);
  v7[23] = swift_task_alloc();
  v16 = sub_23FBFD684(&qword_256F65BA0);
  v7[24] = v16;
  v7[25] = *(_QWORD *)(v16 - 8);
  v17 = swift_task_alloc();
  v7[26] = v17;
  v20 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a7 + 32) + *(_QWORD *)(a7 + 32));
  v18 = (_QWORD *)swift_task_alloc();
  v7[27] = v18;
  *v18 = v7;
  v18[1] = sub_23FD5A7C4;
  return v20(v17, a6, a7);
}

uint64_t sub_23FD5A7C4()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  sub_23FC5A650();
  *v2 = *v1;
  *(_QWORD *)(v3 + 224) = v0;
  swift_task_dealloc();
  sub_23FC5A9A8();
  return sub_23FC0907C();
}

uint64_t sub_23FD5A814()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = v0[4];
  sub_23FD74E40();
  v0[29] = *(_QWORD *)(*(_QWORD *)v1 + 104);
  v2 = (_QWORD *)swift_task_alloc();
  v0[30] = v2;
  sub_23FD62708(v2);
  return sub_23FD74EF4();
}

uint64_t sub_23FD5A884()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (!v0)
    *(_DWORD *)(v2 + 256) = *MEMORY[0x24BEB9180];
  sub_23FC5A9A8();
  return swift_task_switch();
}

uint64_t sub_23FD5A8F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  _BOOL4 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;

  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 112);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v1, 1, v2) == 1)
  {
    sub_23FC090C8(*(_QWORD *)(v0 + 176));
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 200) + 8))(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 192));
    sub_23FC090D0();
    sub_23FC090C0();
    sub_23FC5A574();
    sub_23FC5AB04();
    sub_23FC5AC3C();
    sub_23FC5B2D4();
    sub_23FC5B2F4();
    sub_23FC5B980();
    sub_23FC5BCA0();
    sub_23FC5D050();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v4 = *(_DWORD *)(v0 + 256);
    v6 = *(_QWORD *)(v0 + 144);
    v5 = *(_QWORD *)(v0 + 152);
    v7 = *(_QWORD *)(v0 + 120);
    sub_23FC93224(v5, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 32));
    v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
    v8(v6, v5, v2);
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v7 + 88))(v6, v2) == v4)
    {
      v26 = *(_QWORD *)(v0 + 152);
      v9 = *(_QWORD *)(v0 + 120);
      v10 = *(_QWORD *)(v0 + 96);
      sub_23FC595C4(*(_QWORD *)(v0 + 144), *(uint64_t (**)(uint64_t, uint64_t))(v9 + 96));
      sub_23FD73E2C();
      swift_storeEnumTagMultiPayload();
      sub_23FD74E34();
      sub_23FD74E1C();
      sub_23FC761CC(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
      sub_23FC595C4(v26, *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
    }
    else
    {
      sub_23FD724D0();
      v11 = sub_23FD3D50C();
      ((void (*)(uint64_t))v8)(v11);
      v12 = sub_23FD72BE4();
      v13 = sub_23FD74F54();
      v14 = os_log_type_enabled(v12, v13);
      v15 = *(_QWORD *)(v0 + 152);
      v16 = *(_QWORD *)(v0 + 136);
      if (v14)
      {
        v17 = *(_QWORD *)(v0 + 128);
        v18 = *(_QWORD *)(v0 + 112);
        v19 = sub_23FBFEFF4();
        v27 = sub_23FBFEFF4();
        *(_DWORD *)v19 = 136315138;
        v8(v17, v16, v18);
        v20 = sub_23FD74C0C();
        *(_QWORD *)(v19 + 4) = sub_23FC9DC40(v20, v21, &v27);
        swift_bridgeObjectRelease();
        sub_23FD6273C();
        _os_log_impl(&dword_23FBF8000, v12, v13, "ToolExecutionEventStream: Ignoring unexpected executor event: %s", (uint8_t *)v19, 0xCu);
        sub_23FBFF10C();
        sub_23FBFEFA0();
      }
      v23 = *(_QWORD *)(v0 + 112);
      v22 = *(void (**)(uint64_t, uint64_t))(v0 + 120);
      v24 = *(_QWORD *)(v0 + 48);

      sub_23FD6273C();
      sub_23FC761CC(*(uint64_t (**)(uint64_t, uint64_t))(v24 + 8));
      v22(v15, v23);
      v22(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 112));
    }
    v25 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 248) = v25;
    sub_23FD62708(v25);
    return sub_23FD74EF4();
  }
}

uint64_t sub_23FD5AC40()
{
  sub_23FC5A650();
  sub_23FC59C00();
  sub_23FC5A9A8();
  return sub_23FC0907C();
}

uint64_t sub_23FD5AC84()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  _DWORD *v3;
  _QWORD *v4;
  uint64_t v5;

  sub_23FC5BC54();
  sub_23FD724D0();
  sub_23FC09248();
  sub_23FC09248();
  v1 = sub_23FD72BE4();
  v2 = sub_23FD74F54();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (_DWORD *)sub_23FBFEFF4();
    v4 = (_QWORD *)sub_23FBFEFF4();
    *v3 = 138412290;
    sub_23FC09248();
    v5 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 16) = v5;
    sub_23FD75044();
    *v4 = v5;
    sub_23FC0917C();
    sub_23FC0917C();
    sub_23FD62798(&dword_23FBF8000, v1, v2, "ToolExecutionEventStream: Unexpected error awaiting progress updates - %@");
    sub_23FBFD684(&qword_254346A30);
    sub_23FBFF10C();
    sub_23FBFEFA0();
  }
  sub_23FC0917C();
  sub_23FC0917C();
  sub_23FC0917C();

  sub_23FD62604();
  sub_23FC090D0();
  sub_23FC090C0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  sub_23FC5B980();
  sub_23FC5EFD4();
  sub_23FC5D050();
  sub_23FC5BCA0();
  return sub_23FC5BC14(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FD5ADD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  _DWORD *v5;
  _QWORD *v6;
  uint64_t v7;

  sub_23FC5BC54();
  v2 = *(_QWORD *)(v0 + 200);
  v1 = *(_QWORD *)(v0 + 208);
  sub_23FC090C8(*(_QWORD *)(v0 + 176));
  sub_23FBFF204(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_23FD724D0();
  sub_23FC09248();
  sub_23FC09248();
  v3 = sub_23FD72BE4();
  v4 = sub_23FD74F54();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (_DWORD *)sub_23FBFEFF4();
    v6 = (_QWORD *)sub_23FBFEFF4();
    *v5 = 138412290;
    sub_23FC09248();
    v7 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 16) = v7;
    sub_23FD75044();
    *v6 = v7;
    sub_23FC0917C();
    sub_23FC0917C();
    sub_23FD62798(&dword_23FBF8000, v3, v4, "ToolExecutionEventStream: Unexpected error awaiting progress updates - %@");
    sub_23FBFD684(&qword_254346A30);
    sub_23FBFF10C();
    sub_23FBFEFA0();
  }
  sub_23FC0917C();
  sub_23FC0917C();
  sub_23FC0917C();

  sub_23FD62604();
  sub_23FC090D0();
  sub_23FC090C0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  sub_23FC5B980();
  sub_23FC5EFD4();
  sub_23FC5D050();
  sub_23FC5BCA0();
  return sub_23FC5BC14(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FD5AF44(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_23FD5AF5C()
{
  uint64_t v0;
  _QWORD *v1;

  sub_23FD74E88();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v1;
  *v1 = v0;
  v1[1] = sub_23FD5AFD4;
  return sub_23FD74EA0();
}

uint64_t sub_23FD5AFD4()
{
  sub_23FC5A650();
  sub_23FC59C00();
  sub_23FC5A9A8();
  return sub_23FC0907C();
}

uint64_t sub_23FD5B008(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;

  *(_QWORD *)(v8 + 112) = v17;
  *(_QWORD *)(v8 + 120) = v18;
  *(_OWORD *)(v8 + 96) = v16;
  *(_QWORD *)(v8 + 80) = a7;
  *(_QWORD *)(v8 + 88) = a8;
  *(_QWORD *)(v8 + 64) = a5;
  *(_QWORD *)(v8 + 72) = a6;
  *(_QWORD *)(v8 + 56) = a4;
  v9 = *(_QWORD *)a4;
  v10 = *(_QWORD *)(*(_QWORD *)a4 + 80);
  *(_QWORD *)(v8 + 128) = v10;
  v11 = *(_QWORD *)(v9 + 88);
  *(_QWORD *)(v8 + 136) = v11;
  *(_QWORD *)(v8 + 144) = type metadata accessor for ToolExecutionEvent(0, v10, v11, a4);
  *(_QWORD *)(v8 + 152) = swift_task_alloc();
  v12 = sub_23FD74E04();
  *(_QWORD *)(v8 + 160) = v12;
  *(_QWORD *)(v8 + 168) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v8 + 176) = swift_task_alloc();
  v14 = type metadata accessor for TypedValueExecutionResult(0, v10, v11, v13);
  *(_QWORD *)(v8 + 184) = v14;
  *(_QWORD *)(v8 + 192) = *(_QWORD *)(v14 - 8);
  *(_QWORD *)(v8 + 200) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23FD5B100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(_QWORD, _QWORD, _QWORD, _QWORD *, _QWORD, _QWORD, _QWORD);

  v5 = v4[15];
  v6 = v4[7];
  v4[5] = type metadata accessor for ToolExecutionEventStream(0, v4[16], v4[17], a4);
  v4[6] = &off_251015EE8;
  v4[2] = v6;
  v9 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD *, _QWORD, _QWORD, _QWORD))(**(int **)(v5 + 40)
                                                                                        + *(_QWORD *)(v5 + 40));
  swift_retain();
  v7 = (_QWORD *)swift_task_alloc();
  v4[26] = v7;
  *v7 = v4;
  v7[1] = sub_23FD5B1A8;
  return v9(v4[25], v4[9], v4[10], v4 + 2, v4[11], v4[14], v4[15]);
}

uint64_t sub_23FD5B1A8()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  int *v4;
  _QWORD *v5;
  uint64_t (*v6)(void);

  v2 = (_QWORD *)*v1;
  v2[27] = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_23FC5A9A8();
    return swift_task_switch();
  }
  else
  {
    v4 = (int *)v2[12];
    sub_23FD625B8((uint64_t)(v2 + 2), &qword_256F652B0);
    v6 = (uint64_t (*)(void))((char *)v4 + *v4);
    v5 = (_QWORD *)swift_task_alloc();
    v2[28] = v5;
    *v5 = v2;
    v5[1] = sub_23FD5B258;
    return v6();
  }
}

uint64_t sub_23FD5B258()
{
  sub_23FC5A650();
  sub_23FC59C00();
  sub_23FC5A9A8();
  return sub_23FC0907C();
}

uint64_t sub_23FD5B28C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_23FC5BC54();
  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 168);
  v9 = *(_QWORD *)(v0 + 120);
  v7 = *(_QWORD *)(v0 + 160);
  v8 = *(_QWORD *)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 56);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v1 + 16))(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 184));
  sub_23FD3D50C();
  swift_storeEnumTagMultiPayload();
  sub_23FD627A4();
  sub_23FD74E1C();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v7);
  sub_23FC761CC(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23FD5B494(v4, v8, v9, v5);
  sub_23FC5AB04();
  sub_23FC5A574();
  sub_23FC090C0();
  return sub_23FC5BC14(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FD5B34C()
{
  uint64_t v0;
  int *v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v1 = *(int **)(v0 + 96);
  sub_23FD625B8(v0 + 16, &qword_256F652B0);
  v4 = (uint64_t (*)(void))((char *)v1 + *v1);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 232) = v2;
  *v2 = v0;
  v2[1] = sub_23FD5B3AC;
  return sub_23FC5AADC(v4);
}

uint64_t sub_23FD5B3AC()
{
  sub_23FC5A650();
  sub_23FC59C00();
  sub_23FC5A9A8();
  return sub_23FC0907C();
}

uint64_t sub_23FD5B3E0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v10;

  sub_23FC5BC54();
  v1 = *(void **)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 176);
  v4 = *(_QWORD *)(v0 + 160);
  v5 = *(_QWORD *)(v0 + 112);
  v10 = *(_QWORD *)(v0 + 120);
  v6 = *(_QWORD *)(v0 + 56);
  **(_QWORD **)(v0 + 152) = v1;
  sub_23FD3D50C();
  swift_storeEnumTagMultiPayload();
  v7 = v1;
  sub_23FD627A4();
  sub_23FD74E1C();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_willThrow();
  sub_23FD5B494(v6, v5, v10, v8);
  sub_23FC5EFD4();
  sub_23FC5AB04();
  sub_23FC090C0();
  return sub_23FC5BC14(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FD5B494(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for ToolExecutionEvent(255, *(_QWORD *)(*(_QWORD *)a1 + 80), *(_QWORD *)(*(_QWORD *)a1 + 88), a4);
  sub_23FD74E34();
  return sub_23FD74E28();
}

uint64_t sub_23FD5B4D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;

  sub_23FD62778(*(_QWORD *)(*v4 + 88), a4, *v4);
  sub_23FD74E64();
  return sub_23FD74E40();
}

uint64_t sub_23FD5B514(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;

  v7[7] = a6;
  v7[8] = v6;
  v7[5] = a4;
  v7[6] = a5;
  v7[3] = a2;
  v7[4] = a3;
  v7[2] = a1;
  return sub_23FCD4F9C();
}

uint64_t sub_23FD5B530()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v7;

  v2 = *(_QWORD *)(v0 + 56);
  v1 = *(_QWORD *)(v0 + 64);
  v7 = *(_OWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 32);
  v5 = swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v5;
  *(_QWORD *)(v5 + 16) = v1;
  *(_QWORD *)(v5 + 24) = v4;
  *(_QWORD *)(v5 + 32) = v3;
  *(_OWORD *)(v5 + 40) = v7;
  *(_QWORD *)(v5 + 56) = v2;
  *(_QWORD *)(v0 + 80) = swift_task_alloc();
  sub_23FD744D4();
  sub_23FD62690((uint64_t)sub_23FD5B5E4);
  sub_23FD62684();
  sub_23FC5A9A8();
  sub_23FD62678();
  return sub_23FD62648();
}

uint64_t sub_23FD5B5E4()
{
  uint64_t v0;

  sub_23FC5A650();
  sub_23FC59C00();
  sub_23FC090D0();
  return sub_23FC5AADC(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FD5B614(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v31 = a6;
  v32 = a7;
  v29 = a4;
  v30 = a5;
  v28 = a3;
  v8 = type metadata accessor for ToolExecutionEvent(0, *(_QWORD *)(*(_QWORD *)a2 + 80), *(_QWORD *)(*(_QWORD *)a2 + 88), a4);
  MEMORY[0x24BDAC7A8](v8, v9);
  v11 = (uint64_t *)((char *)&v28 - v10);
  v33 = sub_23FD74E04();
  v12 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33, v13);
  v15 = (char *)&v28 - v14;
  v16 = sub_23FBFD684(&qword_256F65B58);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_QWORD *)(v17 + 64);
  MEMORY[0x24BDAC7A8](v16, v19);
  v20 = (char *)&v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v20, a1, v16);
  v21 = (*(unsigned __int8 *)(v17 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v22 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v17 + 32))(v22 + v21, v20, v16);
  v23 = v29;
  *v11 = v28;
  v11[1] = v23;
  v25 = v30;
  v24 = v31;
  v11[2] = v30;
  v11[3] = v24;
  v11[4] = v32;
  v11[5] = sub_23FD62128;
  v11[6] = v22;
  swift_storeEnumTagMultiPayload();
  sub_23FD74E34();
  swift_bridgeObjectRetain();
  v26 = v25;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_23FD74E1C();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v33);
}

uint64_t sub_23FD5B7F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v8;

  v8[8] = a7;
  v8[9] = v7;
  v8[6] = a5;
  v8[7] = a6;
  v8[4] = a3;
  v8[5] = a4;
  v8[2] = a1;
  v8[3] = a2;
  return sub_23FCD4F9C();
}

uint64_t sub_23FD5B814()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  __int128 v11;

  v1 = sub_23FD626EC();
  sub_23FD626C4(v1, v2, v3, v4, v5, v6, v7, v8, v11, v9);
  *(_QWORD *)(v0 + 88) = swift_task_alloc();
  sub_23FBFD684(&qword_256F65478);
  sub_23FD62690((uint64_t)sub_23FD5B8A0);
  sub_23FD62684();
  sub_23FC5A9A8();
  sub_23FD62678();
  return sub_23FD62648();
}

uint64_t sub_23FD5B8A0()
{
  uint64_t v0;

  sub_23FC5A650();
  sub_23FC59C00();
  sub_23FC090D0();
  return sub_23FC5AADC(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FD5B8D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  id v27;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v33 = a7;
  v34 = a8;
  v31 = a5;
  v32 = a6;
  v29 = a3;
  v30 = a4;
  v9 = type metadata accessor for ToolExecutionEvent(0, *(_QWORD *)(*(_QWORD *)a2 + 80), *(_QWORD *)(*(_QWORD *)a2 + 88), a4);
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (uint64_t *)((char *)&v29 - v11);
  v13 = sub_23FD74E04();
  v35 = *(_QWORD *)(v13 - 8);
  v36 = v13;
  MEMORY[0x24BDAC7A8](v13, v14);
  v16 = (char *)&v29 - v15;
  v17 = sub_23FBFD684(&qword_256F65B48);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_QWORD *)(v18 + 64);
  MEMORY[0x24BDAC7A8](v17, v20);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))((char *)&v29 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v17);
  v21 = (*(unsigned __int8 *)(v18 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v22 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v18 + 32))(v22 + v21, (char *)&v29 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0), v17);
  v23 = v30;
  *v12 = v29;
  v12[1] = v23;
  v25 = v31;
  v24 = v32;
  v12[2] = v31;
  v12[3] = v24;
  v26 = v34;
  v12[4] = v33;
  v12[5] = v26;
  v12[6] = sub_23FD62098;
  v12[7] = v22;
  swift_storeEnumTagMultiPayload();
  sub_23FD74E34();
  swift_bridgeObjectRetain();
  v27 = v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_23FD74E1C();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v16, v36);
}

uint64_t sub_23FD5BABC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v8;

  v8[8] = a7;
  v8[9] = v7;
  v8[6] = a5;
  v8[7] = a6;
  v8[4] = a3;
  v8[5] = a4;
  v8[2] = a1;
  v8[3] = a2;
  return sub_23FCD4F9C();
}

uint64_t sub_23FD5BAD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  __int128 v11;

  v1 = sub_23FD626EC();
  sub_23FD626C4(v1, v2, v3, v4, v5, v6, v7, v8, v11, v9);
  *(_QWORD *)(v0 + 88) = swift_task_alloc();
  sub_23FBFD684(&qword_256F65468);
  sub_23FD62690((uint64_t)sub_23FD625E8);
  sub_23FD62684();
  sub_23FC5A9A8();
  sub_23FD62678();
  return sub_23FD62648();
}

uint64_t sub_23FD5BB64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  id v27;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v33 = a7;
  v34 = a8;
  v31 = a5;
  v32 = a6;
  v29 = a3;
  v30 = a4;
  v9 = type metadata accessor for ToolExecutionEvent(0, *(_QWORD *)(*(_QWORD *)a2 + 80), *(_QWORD *)(*(_QWORD *)a2 + 88), a4);
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (uint64_t *)((char *)&v29 - v11);
  v13 = sub_23FD74E04();
  v35 = *(_QWORD *)(v13 - 8);
  v36 = v13;
  MEMORY[0x24BDAC7A8](v13, v14);
  v16 = (char *)&v29 - v15;
  v17 = sub_23FBFD684(&qword_256F65B38);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_QWORD *)(v18 + 64);
  MEMORY[0x24BDAC7A8](v17, v20);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))((char *)&v29 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v17);
  v21 = (*(unsigned __int8 *)(v18 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v22 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v18 + 32))(v22 + v21, (char *)&v29 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0), v17);
  v23 = v30;
  *v12 = v29;
  v12[1] = v23;
  v25 = v31;
  v24 = v32;
  v12[2] = v31;
  v12[3] = v24;
  v26 = v34;
  v12[4] = v33;
  v12[5] = v26;
  v12[6] = sub_23FD6204C;
  v12[7] = v22;
  swift_storeEnumTagMultiPayload();
  sub_23FD74E34();
  swift_bridgeObjectRetain();
  v27 = v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_23FD74E1C();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v16, v36);
}

#error "23FD5BD54: call analysis failed (funcsize=5)"

uint64_t sub_23FD5BD68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;
  __int128 v9;

  v2 = *(_QWORD *)(v0 + 80);
  v1 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 56);
  v8 = *(_OWORD *)(v0 + 40);
  v9 = *(_OWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(v0 + 32);
  v6 = swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v6;
  *(_QWORD *)(v6 + 16) = v1;
  *(_QWORD *)(v6 + 24) = v5;
  *(_QWORD *)(v6 + 32) = v4;
  *(_OWORD *)(v6 + 40) = v8;
  *(_QWORD *)(v6 + 56) = v3;
  *(_OWORD *)(v6 + 64) = v9;
  *(_QWORD *)(v6 + 80) = v2;
  *(_QWORD *)(v0 + 104) = swift_task_alloc();
  sub_23FBFD684(&qword_256F65420);
  sub_23FD62690((uint64_t)sub_23FD5BE34);
  sub_23FD62684();
  sub_23FD62678();
  return sub_23FD625EC();
}

uint64_t sub_23FD5BE34()
{
  uint64_t v0;

  sub_23FC5A650();
  sub_23FC59C00();
  sub_23FC090D0();
  return sub_23FC5AADC(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FD5BE64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  unint64_t v24;
  uint64_t v25;
  int *v26;
  char *v27;
  _QWORD *v28;
  uint64_t (**v29)(uint64_t);
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  char *v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v40 = a6;
  v41 = a7;
  v44 = a10;
  v45 = a8;
  v43 = a9;
  v39 = type metadata accessor for ToolExecutionEvent(0, *(_QWORD *)(*(_QWORD *)a2 + 80), *(_QWORD *)(*(_QWORD *)a2 + 88), a4);
  MEMORY[0x24BDAC7A8](v39, v39);
  v15 = (uint64_t *)((char *)&v38 - v14);
  v16 = sub_23FD74E04();
  v46 = *(_QWORD *)(v16 - 8);
  v47 = v16;
  MEMORY[0x24BDAC7A8](v16, v17);
  v42 = (char *)&v38 - v18;
  v19 = sub_23FBFD684(&qword_256F65B28);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(_QWORD *)(v20 + 64);
  MEMORY[0x24BDAC7A8](v19, v22);
  v23 = (char *)&v38 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v23, a1, v19);
  v24 = (*(unsigned __int8 *)(v20 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  v25 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v20 + 32))(v25 + v24, v23, v19);
  v26 = (int *)sub_23FBFD684(&qword_256F65818);
  v27 = (char *)v15 + v26[16];
  v28 = (_QWORD *)((char *)v15 + v26[20]);
  v29 = (uint64_t (**)(uint64_t))((char *)v15 + v26[24]);
  *v15 = a3;
  v15[1] = a4;
  v30 = a5;
  v31 = v40;
  v32 = v41;
  v15[2] = a5;
  v15[3] = v31;
  v15[4] = v32;
  v33 = sub_23FD747C8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v27, v45, v33);
  v34 = v44;
  *v28 = v43;
  v28[1] = v34;
  *v29 = sub_23FD62018;
  v29[1] = (uint64_t (*)(uint64_t))v25;
  swift_storeEnumTagMultiPayload();
  sub_23FD74E34();
  swift_bridgeObjectRetain();
  v35 = v30;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  v36 = v42;
  sub_23FD74E1C();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v36, v47);
}

void sub_23FD5C0B8(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = sub_23FBFD684(a3);
  MEMORY[0x24BDAC7A8](v5, v6);
  sub_23FD627BC(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 16));
  sub_23FBFD684(a4);
  sub_23FD627B0();
  sub_23FC09258();
}

uint64_t sub_23FD5C12C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;

  v6[6] = a5;
  v6[7] = v5;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  return sub_23FCD4F9C();
}

uint64_t sub_23FD5C144()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v6;

  v2 = *(_QWORD *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 56);
  v6 = *(_OWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v4;
  *(_QWORD *)(v4 + 16) = v1;
  *(_QWORD *)(v4 + 24) = v3;
  *(_OWORD *)(v4 + 32) = v6;
  *(_QWORD *)(v4 + 48) = v2;
  *(_QWORD *)(v0 + 72) = swift_task_alloc();
  sub_23FD74510();
  sub_23FD62690((uint64_t)sub_23FD5C1FC);
  sub_23FD62684();
  sub_23FC5A9A8();
  sub_23FD62678();
  return sub_23FD75350();
}

uint64_t sub_23FD5C1FC()
{
  uint64_t v0;

  sub_23FC5A650();
  sub_23FC59C00();
  sub_23FC090D0();
  return sub_23FC5AADC(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FD5C22C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (**v23)(uint64_t);
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v31 = a5;
  v32 = a6;
  v29 = a3;
  v30 = a4;
  v7 = type metadata accessor for ToolExecutionEvent(0, *(_QWORD *)(*(_QWORD *)a2 + 80), *(_QWORD *)(*(_QWORD *)a2 + 88), a4);
  MEMORY[0x24BDAC7A8](v7, v8);
  v10 = (uint64_t *)((char *)&v29 - v9);
  v11 = sub_23FD74E04();
  v33 = *(_QWORD *)(v11 - 8);
  v34 = v11;
  MEMORY[0x24BDAC7A8](v11, v12);
  v14 = (char *)&v29 - v13;
  v15 = sub_23FBFD684(&qword_256F65B08);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  MEMORY[0x24BDAC7A8](v15, v18);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))((char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v15);
  v19 = (*(unsigned __int8 *)(v16 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v20 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v16 + 32))(v20 + v19, (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), v15);
  v21 = sub_23FBFD684(&qword_256F65800);
  v22 = (uint64_t)v10 + *(int *)(v21 + 48);
  v23 = (uint64_t (**)(uint64_t))((char *)v10 + *(int *)(v21 + 64));
  v24 = v30;
  *v10 = v29;
  v10[1] = v24;
  v26 = v31;
  v25 = v32;
  v10[2] = v31;
  sub_23FD622B4(v25, v22, &qword_256F5EB28);
  *v23 = sub_23FD61F20;
  v23[1] = (uint64_t (*)(uint64_t))v20;
  swift_storeEnumTagMultiPayload();
  sub_23FD74E34();
  swift_bridgeObjectRetain();
  v27 = v26;
  swift_retain();
  sub_23FD74E1C();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v14, v34);
}

#error "23FD5C428: call analysis failed (funcsize=5)"

uint64_t sub_23FD5C43C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  __int128 v11;

  v0 = sub_23FD62654();
  sub_23FD6269C(v0, v1, v2, v3, v4, v5, v6, v7, v11, v8);
  v9 = swift_task_alloc();
  sub_23FD6274C(v9);
  sub_23FD62690((uint64_t)sub_23FD625E4);
  sub_23FD62684();
  sub_23FC5A9A8();
  sub_23FD62678();
  return sub_23FD625EC();
}

uint64_t sub_23FD5C4B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  unint64_t v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t (**v30)(uint64_t);
  void *v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  char *v35;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v43 = a7;
  v44 = a8;
  v41 = a6;
  v42 = a10;
  v40 = a9;
  v38 = type metadata accessor for ToolExecutionEvent(0, *(_QWORD *)(*(_QWORD *)a2 + 80), *(_QWORD *)(*(_QWORD *)a2 + 88), a4);
  MEMORY[0x24BDAC7A8](v38, v38);
  v15 = (uint64_t *)((char *)&v37 - v14);
  v16 = sub_23FD74E04();
  v45 = *(_QWORD *)(v16 - 8);
  v46 = v16;
  MEMORY[0x24BDAC7A8](v16, v17);
  v39 = (char *)&v37 - v18;
  v19 = sub_23FBFD684(&qword_256F65AE8);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(_QWORD *)(v20 + 64);
  MEMORY[0x24BDAC7A8](v19, v22);
  v23 = (char *)&v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v23, a1, v19);
  v24 = (*(unsigned __int8 *)(v20 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  v25 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v20 + 32))(v25 + v24, v23, v19);
  v26 = (int *)sub_23FBFD684(&qword_256F5EB20);
  v27 = (uint64_t)v15 + v26[12];
  v28 = (_QWORD *)((char *)v15 + v26[16]);
  v29 = (_QWORD *)((char *)v15 + v26[20]);
  v30 = (uint64_t (**)(uint64_t))((char *)v15 + v26[24]);
  *v15 = a3;
  v15[1] = a4;
  v31 = a5;
  v15[2] = a5;
  sub_23FD622B4(v41, v27, &qword_256F5EB28);
  v32 = v44;
  *v28 = v43;
  v28[1] = v32;
  v33 = v42;
  *v29 = v40;
  v29[1] = v33;
  *v30 = sub_23FD61E50;
  v30[1] = (uint64_t (*)(uint64_t))v25;
  swift_storeEnumTagMultiPayload();
  sub_23FD74E34();
  swift_bridgeObjectRetain();
  v34 = v31;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  v35 = v39;
  sub_23FD74E1C();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v35, v46);
}

uint64_t sub_23FD5C704(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)(v9 + 104) = v13;
  *(_QWORD *)(v9 + 112) = v8;
  *(_QWORD *)(v9 + 96) = v12;
  *(_OWORD *)(v9 + 80) = v11;
  *(_QWORD *)(v9 + 64) = a7;
  *(_QWORD *)(v9 + 72) = a8;
  *(_QWORD *)(v9 + 48) = a5;
  *(_QWORD *)(v9 + 56) = a6;
  *(_QWORD *)(v9 + 32) = a3;
  *(_QWORD *)(v9 + 40) = a4;
  *(_QWORD *)(v9 + 16) = a1;
  *(_QWORD *)(v9 + 24) = a2;
  sub_23FC5A9A8();
  return swift_task_switch();
}

uint64_t sub_23FD5C744()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v12;
  uint64_t v13;

  sub_23FC5BC54();
  v2 = *(_QWORD *)(v0 + 104);
  v1 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 80);
  v12 = *(_QWORD *)(v0 + 88);
  v13 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 72);
  v6 = *(_QWORD *)(v0 + 40);
  v5 = *(_QWORD *)(v0 + 48);
  v8 = *(_QWORD *)(v0 + 24);
  v7 = *(_QWORD *)(v0 + 32);
  v9 = swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v9;
  v10 = *(_OWORD *)(v0 + 56);
  *(_QWORD *)(v9 + 16) = v1;
  *(_QWORD *)(v9 + 24) = v8;
  *(_QWORD *)(v9 + 32) = v7;
  *(_QWORD *)(v9 + 40) = v6;
  *(_QWORD *)(v9 + 48) = v5;
  *(_OWORD *)(v9 + 56) = v10;
  *(_QWORD *)(v9 + 72) = v2;
  *(_QWORD *)(v9 + 80) = v4;
  *(_QWORD *)(v9 + 88) = v3;
  *(_QWORD *)(v9 + 96) = v12;
  *(_QWORD *)(v9 + 104) = v13;
  *(_QWORD *)(v0 + 128) = swift_task_alloc();
  sub_23FD74978();
  sub_23FD62690((uint64_t)sub_23FD5C824);
  sub_23FD62684();
  sub_23FC5A9A8();
  sub_23FD62678();
  return sub_23FD75350();
}

uint64_t sub_23FD5C824()
{
  uint64_t v0;

  sub_23FC5A650();
  sub_23FC59C00();
  sub_23FC090D0();
  return sub_23FC5AADC(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FD5C854(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  int *v30;
  char *v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t (**v35)(uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  char *v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v47 = a6;
  v48 = a7;
  v45 = a3;
  v55 = a13;
  v53 = a12;
  v51 = a8;
  v52 = a11;
  v49 = a9;
  v50 = a10;
  v46 = type metadata accessor for ToolExecutionEvent(0, *(_QWORD *)(*(_QWORD *)a2 + 80), *(_QWORD *)(*(_QWORD *)a2 + 88), a4);
  MEMORY[0x24BDAC7A8](v46, v46);
  v18 = (uint64_t *)((char *)&v44 - v17);
  v19 = sub_23FD74E04();
  v56 = *(_QWORD *)(v19 - 8);
  v57 = v19;
  MEMORY[0x24BDAC7A8](v19, v20);
  v54 = (char *)&v44 - v21;
  v22 = sub_23FBFD684(&qword_256F65AE8);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(_QWORD *)(v23 + 64);
  MEMORY[0x24BDAC7A8](v22, v25);
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))((char *)&v44 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v22);
  v26 = (*(unsigned __int8 *)(v23 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  v27 = swift_allocObject();
  v28 = v27 + v26;
  v29 = v27;
  (*(void (**)(unint64_t, char *, uint64_t))(v23 + 32))(v28, (char *)&v44 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0), v22);
  v44 = a2 + *(_QWORD *)(*(_QWORD *)a2 + 104);
  v30 = (int *)sub_23FBFD684(&qword_256F65808);
  v31 = (char *)v18 + v30[16];
  v32 = (uint64_t)v18 + v30[20];
  v33 = (_QWORD *)((char *)v18 + v30[24]);
  v34 = (_QWORD *)((char *)v18 + v30[28]);
  v35 = (uint64_t (**)(uint64_t))((char *)v18 + v30[32]);
  *v18 = v45;
  v18[1] = a4;
  v36 = v47;
  v37 = v48;
  v18[2] = a5;
  v18[3] = v36;
  v18[4] = v37;
  v38 = sub_23FD74798();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v31, v51, v38);
  sub_23FD622B4(v49, v32, &qword_256F5EB28);
  v39 = v52;
  *v33 = v50;
  v33[1] = v39;
  v40 = v55;
  *v34 = v53;
  v34[1] = v40;
  *v35 = sub_23FD61E50;
  v35[1] = (uint64_t (*)(uint64_t))v29;
  swift_storeEnumTagMultiPayload();
  sub_23FD74E34();
  swift_bridgeObjectRetain();
  v41 = a5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  v42 = v54;
  sub_23FD74E1C();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v42, v57);
}

uint64_t sub_23FD5CB08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return sub_23FCD4F9C();
}

uint64_t sub_23FD5CB1C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = v0[4];
  v1 = v0[5];
  v3 = v0[3];
  v4 = (_QWORD *)swift_task_alloc();
  v0[6] = v4;
  v4[2] = v1;
  v4[3] = v3;
  v4[4] = v2;
  v0[7] = swift_task_alloc();
  sub_23FD74984();
  sub_23FD62690((uint64_t)sub_23FD5CBC0);
  sub_23FD62684();
  sub_23FD62678();
  return sub_23FD75350();
}

uint64_t sub_23FD5CBC0()
{
  uint64_t v0;

  sub_23FC5A650();
  sub_23FC59C00();
  sub_23FC090D0();
  return sub_23FC5AADC(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FD5CBF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v21 = a3;
  v22 = a4;
  v5 = type metadata accessor for ToolExecutionEvent(0, *(_QWORD *)(*(_QWORD *)a2 + 80), *(_QWORD *)(*(_QWORD *)a2 + 88), a4);
  MEMORY[0x24BDAC7A8](v5, v6);
  v8 = (uint64_t *)((char *)&v21 - v7);
  v9 = sub_23FD74E04();
  v23 = *(_QWORD *)(v9 - 8);
  v24 = v9;
  MEMORY[0x24BDAC7A8](v9, v10);
  v12 = (char *)&v21 - v11;
  v13 = sub_23FBFD684(&qword_256F65AF8);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  MEMORY[0x24BDAC7A8](v13, v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v13);
  v17 = (*(unsigned __int8 *)(v14 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v18 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v18 + v17, (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v13);
  v19 = v22;
  *v8 = v21;
  v8[1] = v19;
  v8[2] = sub_23FD61E84;
  v8[3] = v18;
  swift_storeEnumTagMultiPayload();
  sub_23FD74E34();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_23FD74E1C();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v12, v24);
}

#error "23FD5CDB4: call analysis failed (funcsize=5)"

uint64_t sub_23FD5CDC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  __int128 v11;

  v0 = sub_23FD62654();
  sub_23FD6269C(v0, v1, v2, v3, v4, v5, v6, v7, v11, v8);
  v9 = swift_task_alloc();
  sub_23FD6274C(v9);
  sub_23FD62690((uint64_t)sub_23FD625E4);
  sub_23FD62684();
  sub_23FC5A9A8();
  sub_23FD62678();
  return sub_23FD625EC();
}

uint64_t sub_23FD5CE40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  unint64_t v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t (**v30)(uint64_t);
  void *v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  char *v35;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v43 = a7;
  v44 = a8;
  v41 = a6;
  v42 = a10;
  v40 = a9;
  v38 = type metadata accessor for ToolExecutionEvent(0, *(_QWORD *)(*(_QWORD *)a2 + 80), *(_QWORD *)(*(_QWORD *)a2 + 88), a4);
  MEMORY[0x24BDAC7A8](v38, v38);
  v15 = (uint64_t *)((char *)&v37 - v14);
  v16 = sub_23FD74E04();
  v45 = *(_QWORD *)(v16 - 8);
  v46 = v16;
  MEMORY[0x24BDAC7A8](v16, v17);
  v39 = (char *)&v37 - v18;
  v19 = sub_23FBFD684(&qword_256F65AE8);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(_QWORD *)(v20 + 64);
  MEMORY[0x24BDAC7A8](v19, v22);
  v23 = (char *)&v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v23, a1, v19);
  v24 = (*(unsigned __int8 *)(v20 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  v25 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v20 + 32))(v25 + v24, v23, v19);
  v26 = (int *)sub_23FBFD684(&qword_256F5EB20);
  v27 = (uint64_t)v15 + v26[12];
  v28 = (_QWORD *)((char *)v15 + v26[16]);
  v29 = (_QWORD *)((char *)v15 + v26[20]);
  v30 = (uint64_t (**)(uint64_t))((char *)v15 + v26[24]);
  *v15 = a3;
  v15[1] = a4;
  v31 = a5;
  v15[2] = a5;
  sub_23FD622B4(v41, v27, &qword_256F5EB28);
  v32 = v44;
  *v28 = v43;
  v28[1] = v32;
  v33 = v42;
  *v29 = v40;
  v29[1] = v33;
  *v30 = sub_23FD61E50;
  v30[1] = (uint64_t (*)(uint64_t))v25;
  swift_storeEnumTagMultiPayload();
  sub_23FD74E34();
  swift_bridgeObjectRetain();
  v34 = v31;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  v35 = v39;
  sub_23FD74E1C();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v35, v46);
}

void sub_23FD5D090(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = a3(0);
  MEMORY[0x24BDAC7A8](v5, v6);
  sub_23FD627BC(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 16));
  sub_23FBFD684(a4);
  sub_23FD627B0();
  sub_23FC09258();
}

uint64_t *sub_23FD5D100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  sub_23FD62778(*(_QWORD *)(*v4 + 88), a4, *v4);
  v5 = sub_23FD74E64();
  sub_23FBFF0E4(v5);
  v6 = sub_23FD74E34();
  sub_23FBFF0E4(v6);
  return v4;
}

uint64_t sub_23FD5D164(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23FD5D100(a1, a2, a3, a4);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ToolExecutionEventStream(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23FC7493C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ToolExecutionEventStream);
}

uint64_t type metadata accessor for ToolExecutionEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23FC7493C(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ToolExecutionEvent);
}

void sub_23FD5D1A0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  char v24;
  char v25;
  char v26;
  const char *v27;
  void *v28;
  void *v29;
  char *v30;
  char *v31;
  char *v32;
  void *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;

  v27 = "8";
  v28 = &unk_23FD831D0;
  v29 = &unk_23FD831D0;
  v17 = &unk_23FD831E8;
  v18 = &unk_23FD83200;
  v2 = sub_23FD747C8();
  if (v3 <= 0x3F)
  {
    v19 = (void *)(*(_QWORD *)(v2 - 8) + 64);
    v20 = &unk_23FD83200;
    v4 = MEMORY[0x24BEE4AF0];
    v5 = MEMORY[0x24BEE4AF0] + 64;
    v21 = MEMORY[0x24BEE4AF0] + 64;
    swift_getTupleTypeLayout();
    v30 = &v26;
    v17 = &unk_23FD831E8;
    sub_23FD61820();
    if (v7 <= 0x3F)
    {
      v8 = *(_QWORD *)(v6 - 8) + 64;
      v19 = &unk_23FD83218;
      v20 = &unk_23FD83218;
      v21 = v5;
      swift_getTupleTypeLayout();
      v31 = &v25;
      v17 = &unk_23FD831E8;
      v18 = &unk_23FD83218;
      sub_23FD74798();
      if (v9 <= 0x3F)
      {
        v22 = &unk_23FD83218;
        v23 = v4 + 64;
        swift_getTupleTypeLayout();
        v32 = &v24;
        v33 = &unk_23FD83230;
        v17 = &unk_23FD831E8;
        v18 = (void *)v8;
        v19 = &unk_23FD83218;
        v20 = &unk_23FD83218;
        v21 = v4 + 64;
        swift_getTupleTypeLayout();
        v34 = &v16;
        swift_getTupleTypeLayout3();
        v35 = &v15;
        v10 = sub_23FD73E38();
        if (v12 <= 0x3F)
        {
          v36 = *(_QWORD *)(v10 - 8) + 64;
          v13 = type metadata accessor for TypedValueExecutionResult(319, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), v11);
          if (v14 <= 0x3F)
          {
            v37 = *(_QWORD *)(v13 - 8) + 64;
            v38 = &unk_23FD83248;
            swift_initEnumMetadataMultiPayload();
          }
        }
      }
    }
  }
}

char *sub_23FD5D394(char *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  size_t v9;
  size_t v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  unsigned int v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  id v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  void *v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(uint64_t, uint64_t, uint64_t);
  id v61;
  _QWORD *v62;
  _QWORD *v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  void *v69;
  const void *v70;
  id v71;
  uint64_t v72;
  void *v73;
  _QWORD *v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(uint64_t, uint64_t, uint64_t);
  id v79;
  void *v80;
  const void *v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  void *v85;
  const void *v86;
  id v87;
  uint64_t v88;
  void *v89;
  void *v90;
  const void *v91;
  id v92;
  char v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  id v98;
  _QWORD *v99;
  _QWORD *v100;
  _QWORD *v101;
  _QWORD *v102;
  _QWORD *v103;
  _QWORD *v104;
  uint64_t v105;
  char v106;
  _QWORD *v107;
  _QWORD *v108;
  _QWORD *v109;
  _QWORD *v110;
  _QWORD *v111;
  _QWORD *v112;
  uint64_t v113;
  _QWORD *v114;
  _QWORD *v115;
  _QWORD *v116;
  _QWORD *v117;
  _QWORD *v118;
  _QWORD *v119;
  uint64_t v120;
  _QWORD *v122;
  _QWORD *v123;
  uint64_t v124;
  void *v125;
  const void *v126;
  int v127;
  unint64_t v128;
  _QWORD *v129;
  _QWORD *v130;
  _QWORD *v131;
  _QWORD *v132;
  size_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  size_t __n;
  uint64_t v143;
  size_t v144;
  uint64_t v145;
  uint64_t v146;
  unint64_t v147;
  int v148;
  uint64_t v149;

  v140 = sub_23FD747C8();
  v4 = *(_QWORD *)(v140 - 8);
  v148 = *(_DWORD *)(v4 + 80);
  v138 = v4;
  v139 = *(_QWORD *)(v4 + 64) + 7;
  v5 = sub_23FD74840();
  v6 = *(_QWORD *)(v5 - 8);
  v8 = *(_DWORD *)(v6 + 80);
  v7 = *(_DWORD *)(v6 + 84);
  v141 = v6;
  v9 = *(_QWORD *)(v6 + 64);
  if (v7)
    v10 = v9;
  else
    v10 = v9 + 1;
  __n = v10;
  v143 = v5;
  v11 = v10 + 7;
  v12 = (v10 + 7 + ((v8 + 24) & ~(unint64_t)v8)) & 0xFFFFFFFFFFFFFFF8;
  v13 = ((((v12 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  v14 = sub_23FD74798();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_DWORD *)(v15 + 80);
  v146 = v16;
  v135 = v15;
  v136 = *(_QWORD *)(v15 + 64) + v8;
  v137 = v14;
  v144 = v11;
  v17 = ((((((v11
            + ((v136 + ((v16 + 40) & ~(unint64_t)v16)) & ~(unint64_t)v8)) & 0xFFFFFFFFFFFFFFF8)
          + 23) & 0xFFFFFFFFFFFFFFF8)
        + 23) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v18 = v12 + 16;
  v134 = sub_23FD73E38();
  v19 = *(_QWORD *)(v134 - 8);
  v20 = *(_QWORD *)(v19 + 64);
  v145 = *(_QWORD *)(a3 + 16);
  v21 = *(_QWORD *)(v145 - 8);
  if (*(_DWORD *)(v21 + 84))
    v22 = *(_QWORD *)(v21 + 64);
  else
    v22 = *(_QWORD *)(v21 + 64) + 1;
  v23 = sub_23FD71474();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_DWORD *)(v24 + 80);
  v26 = v25 & 0xF8 | 7;
  v27 = *(_QWORD *)(v24 + 64) + 7;
  v133 = v22;
  v28 = v22 + v26;
  v29 = (((v27 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 + ((v22 + v26) & ~v26);
  if (v13 <= ((((v139 + ((v148 + 40) & ~(unint64_t)v148)) & 0xFFFFFFFFFFFFFFF8)
              + 23) & 0xFFFFFFFFFFFFFFF8)
            + 16)
    v30 = ((((v139 + ((v148 + 40) & ~(unint64_t)v148)) & 0xFFFFFFFFFFFFFFF8)
          + 23) & 0xFFFFFFFFFFFFFFF8)
        + 16;
  else
    v30 = v13;
  if (v30 <= v17)
    v30 = v17;
  if (v30 <= v18)
    v30 = v18;
  if (v30 > v29)
    v29 = v30;
  if (v29 <= v20)
    v29 = v20;
  if (v29 <= 0x40)
    v31 = 64;
  else
    v31 = v29;
  v32 = *(_DWORD *)(v21 + 80) | *(_DWORD *)(v19 + 80) | v25 | v148 | v8 | v16;
  if ((v32 & 0x1000F8) != 0 || (unint64_t)(v31 + 1) > 0x18)
  {
    v45 = *(char **)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    v39 = &v45[((v32 & 0xF8 | 7u) + 16) & ~(unint64_t)(v32 & 0xF8 | 7u)];
LABEL_54:
    swift_retain();
  }
  else
  {
    v33 = *(unsigned int *)(v24 + 84);
    v34 = a2[v31];
    while (2)
    {
      v35 = ~(unint64_t)v148;
      v36 = ~(unint64_t)v8;
      v37 = ~(unint64_t)v16;
      v38 = ~v26;
      v26 = v34;
      v39 = a1;
      switch(v34)
      {
        case 0u:
          v40 = *((_QWORD *)a2 + 1);
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *((_QWORD *)a1 + 1) = v40;
          v42 = (void *)*((_QWORD *)a2 + 2);
          v41 = *((_QWORD *)a2 + 3);
          *((_QWORD *)a1 + 2) = v42;
          *((_QWORD *)a1 + 3) = v41;
          v43 = *((_QWORD *)a2 + 6);
          *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
          *((_QWORD *)a1 + 6) = v43;
          a1[v31] = 0;
          swift_bridgeObjectRetain();
          v44 = v42;
          goto LABEL_53;
        case 1u:
          v46 = *((_QWORD *)a2 + 1);
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *((_QWORD *)a1 + 1) = v46;
          v48 = (void *)*((_QWORD *)a2 + 2);
          v47 = *((_QWORD *)a2 + 3);
          *((_QWORD *)a1 + 2) = v48;
          *((_QWORD *)a1 + 3) = v47;
          *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
          v49 = *((_QWORD *)a2 + 7);
          *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
          v50 = 1;
          goto LABEL_30;
        case 2u:
          v51 = *((_QWORD *)a2 + 1);
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *((_QWORD *)a1 + 1) = v51;
          v48 = (void *)*((_QWORD *)a2 + 2);
          v52 = *((_QWORD *)a2 + 3);
          *((_QWORD *)a1 + 2) = v48;
          *((_QWORD *)a1 + 3) = v52;
          *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
          v49 = *((_QWORD *)a2 + 7);
          *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
          v50 = 2;
LABEL_30:
          *((_QWORD *)a1 + 7) = v49;
          a1[v31] = v50;
          swift_bridgeObjectRetain();
          v53 = v48;
          swift_bridgeObjectRetain();
          goto LABEL_53;
        case 3u:
          v54 = *((_QWORD *)a2 + 1);
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *((_QWORD *)a1 + 1) = v54;
          v55 = (void *)*((_QWORD *)a2 + 2);
          *((_QWORD *)a1 + 2) = v55;
          v56 = (_QWORD *)((unint64_t)(a1 + 31) & 0xFFFFFFFFFFFFFFF8);
          v57 = (_QWORD *)((unint64_t)(a2 + 31) & 0xFFFFFFFFFFFFFFF8);
          *v56 = *v57;
          v56[1] = v57[1];
          v58 = ((unint64_t)v56 + v148 + 16) & v35;
          v59 = ((unint64_t)v57 + v148 + 16) & v35;
          v60 = *(void (**)(uint64_t, uint64_t, uint64_t))(v138 + 16);
          swift_bridgeObjectRetain();
          v61 = v55;
          swift_bridgeObjectRetain();
          v60(v58, v59, v140);
          v62 = (_QWORD *)((v139 + v58) & 0xFFFFFFFFFFFFFFF8);
          v63 = (_QWORD *)((v139 + v59) & 0xFFFFFFFFFFFFFFF8);
          *v62 = *v63;
          v62[1] = v63[1];
          v64 = (_QWORD *)(((unint64_t)v62 + 23) & 0xFFFFFFFFFFFFFFF8);
          v65 = (_QWORD *)(((unint64_t)v63 + 23) & 0xFFFFFFFFFFFFFFF8);
          v66 = v65[1];
          *v64 = *v65;
          v64[1] = v66;
          a1[v31] = 3;
          goto LABEL_53;
        case 4u:
          v67 = *((_QWORD *)a2 + 1);
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *((_QWORD *)a1 + 1) = v67;
          v68 = (void *)*((_QWORD *)a2 + 2);
          *((_QWORD *)a1 + 2) = v68;
          v69 = (void *)((unint64_t)&a1[v8 + 24] & v36);
          v70 = (const void *)((unint64_t)&a2[v8 + 24] & v36);
          swift_bridgeObjectRetain();
          v71 = v68;
          if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v70, 1, v143))
          {
            memcpy(v69, v70, __n);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v141 + 16))(v69, v70, v143);
            _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v69, 0, 1, v143);
          }
          v99 = (_QWORD *)(((unint64_t)v69 + v144) & 0xFFFFFFFFFFFFFFF8);
          v100 = (_QWORD *)(((unint64_t)v70 + v144) & 0xFFFFFFFFFFFFFFF8);
          *v99 = *v100;
          v99[1] = v100[1];
          v101 = (_QWORD *)(((unint64_t)v99 + 23) & 0xFFFFFFFFFFFFFFF8);
          v102 = (_QWORD *)(((unint64_t)v100 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v101 = *v102;
          v101[1] = v102[1];
          v103 = (_QWORD *)(((unint64_t)v101 + 23) & 0xFFFFFFFFFFFFFFF8);
          v104 = (_QWORD *)(((unint64_t)v102 + 23) & 0xFFFFFFFFFFFFFFF8);
          v105 = v104[1];
          *v103 = *v104;
          v103[1] = v105;
          v106 = 4;
          goto LABEL_52;
        case 5u:
          v72 = *((_QWORD *)a2 + 1);
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *((_QWORD *)a1 + 1) = v72;
          v73 = (void *)*((_QWORD *)a2 + 2);
          *((_QWORD *)a1 + 2) = v73;
          v74 = (_QWORD *)((unint64_t)(a1 + 31) & 0xFFFFFFFFFFFFFFF8);
          v75 = (_QWORD *)((unint64_t)(a2 + 31) & 0xFFFFFFFFFFFFFFF8);
          *v74 = *v75;
          v74[1] = v75[1];
          v76 = ((unint64_t)v74 + v146 + 16) & v37;
          v77 = ((unint64_t)v75 + v146 + 16) & v37;
          v78 = *(void (**)(uint64_t, uint64_t, uint64_t))(v135 + 16);
          swift_bridgeObjectRetain();
          v79 = v73;
          swift_bridgeObjectRetain();
          v78(v76, v77, v137);
          v80 = (void *)((v136 + v76) & v36);
          v81 = (const void *)((v136 + v77) & v36);
          if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v81, 1, v143))
          {
            memcpy(v80, v81, __n);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v141 + 16))(v80, v81, v143);
            _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v80, 0, 1, v143);
          }
          v107 = (_QWORD *)(((unint64_t)v80 + v144) & 0xFFFFFFFFFFFFFFF8);
          v108 = (_QWORD *)(((unint64_t)v81 + v144) & 0xFFFFFFFFFFFFFFF8);
          *v107 = *v108;
          v107[1] = v108[1];
          v109 = (_QWORD *)(((unint64_t)v107 + 23) & 0xFFFFFFFFFFFFFFF8);
          v110 = (_QWORD *)(((unint64_t)v108 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v109 = *v110;
          v109[1] = v110[1];
          v111 = (_QWORD *)(((unint64_t)v109 + 23) & 0xFFFFFFFFFFFFFFF8);
          v112 = (_QWORD *)(((unint64_t)v110 + 23) & 0xFFFFFFFFFFFFFFF8);
          v113 = v112[1];
          *v111 = *v112;
          v111[1] = v113;
          v106 = 5;
          goto LABEL_52;
        case 6u:
          *(_QWORD *)a1 = *(_QWORD *)a2;
          v82 = *((_QWORD *)a2 + 3);
          *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
          *((_QWORD *)a1 + 3) = v82;
          a1[v31] = 6;
          goto LABEL_53;
        case 7u:
          v83 = *((_QWORD *)a2 + 1);
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *((_QWORD *)a1 + 1) = v83;
          v84 = (void *)*((_QWORD *)a2 + 2);
          *((_QWORD *)a1 + 2) = v84;
          v85 = (void *)((unint64_t)&a1[v8 + 24] & v36);
          v86 = (const void *)((unint64_t)&a2[v8 + 24] & v36);
          swift_bridgeObjectRetain();
          v87 = v84;
          if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v86, 1, v143))
          {
            memcpy(v85, v86, __n);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v141 + 16))(v85, v86, v143);
            _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v85, 0, 1, v143);
          }
          v114 = (_QWORD *)(((unint64_t)v85 + v144) & 0xFFFFFFFFFFFFFFF8);
          v115 = (_QWORD *)(((unint64_t)v86 + v144) & 0xFFFFFFFFFFFFFFF8);
          *v114 = *v115;
          v114[1] = v115[1];
          v116 = (_QWORD *)(((unint64_t)v114 + 23) & 0xFFFFFFFFFFFFFFF8);
          v117 = (_QWORD *)(((unint64_t)v115 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v116 = *v117;
          v116[1] = v117[1];
          v118 = (_QWORD *)(((unint64_t)v116 + 23) & 0xFFFFFFFFFFFFFFF8);
          v119 = (_QWORD *)(((unint64_t)v117 + 23) & 0xFFFFFFFFFFFFFFF8);
          v120 = v119[1];
          *v118 = *v119;
          v118[1] = v120;
          v106 = 7;
LABEL_52:
          a1[v31] = v106;
          swift_bridgeObjectRetain();
LABEL_53:
          swift_bridgeObjectRetain();
          goto LABEL_54;
        case 8u:
          v88 = *((_QWORD *)a2 + 1);
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *((_QWORD *)a1 + 1) = v88;
          v89 = (void *)*((_QWORD *)a2 + 2);
          *((_QWORD *)a1 + 2) = v89;
          v90 = (void *)((unint64_t)&a1[v8 + 24] & v36);
          v91 = (const void *)((unint64_t)&a2[v8 + 24] & v36);
          swift_bridgeObjectRetain();
          v92 = v89;
          if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v91, 1, v143))
          {
            memcpy(v90, v91, __n);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v141 + 16))(v90, v91, v143);
            _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v90, 0, 1, v143);
          }
          v122 = (_QWORD *)(((unint64_t)v90 + v144) & 0xFFFFFFFFFFFFFFF8);
          v123 = (_QWORD *)(((unint64_t)v91 + v144) & 0xFFFFFFFFFFFFFFF8);
          v124 = v123[1];
          *v122 = *v123;
          v122[1] = v124;
          a1[v31] = 8;
          goto LABEL_54;
        case 9u:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v19 + 16))(a1, a2, v134);
          v93 = 9;
          goto LABEL_68;
        case 0xAu:
          v94 = v28;
          v147 = (((v27 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
          v95 = *(_QWORD *)(v23 - 8);
          v96 = *(_QWORD *)(v24 + 64) + 7;
          v149 = v23;
          if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v145))
          {
            memcpy(a1, a2, v133);
          }
          else
          {
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(v21 + 16))(a1, a2, v145);
            _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v145);
          }
          v125 = (void *)((unint64_t)&a1[v94] & v38);
          v126 = (const void *)((unint64_t)&a2[v94] & v38);
          if (v33 < 0x7FFFFFFF)
          {
            v128 = *(_QWORD *)((((((unint64_t)v126 + v96) & 0xFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8) + 8);
            if (v128 >= 0xFFFFFFFF)
              LODWORD(v128) = -1;
            v127 = v128 + 1;
          }
          else
          {
            v127 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v126, v33, v149);
          }
          if (v127)
          {
            memcpy(v125, v126, v147);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v95 + 16))(v125, v126, v149);
            v129 = (_QWORD *)(((unint64_t)v125 + v96) & 0xFFFFFFFFFFFFFFF8);
            v130 = (_QWORD *)(((unint64_t)v126 + v96) & 0xFFFFFFFFFFFFFFF8);
            *v129 = *v130;
            v129[1] = v130[1];
            v131 = (_QWORD *)(((unint64_t)v129 + 23) & 0xFFFFFFFFFFFFFFF8);
            v132 = (_QWORD *)(((unint64_t)v130 + 23) & 0xFFFFFFFFFFFFFFF8);
            *v131 = *v132;
            v131[1] = v132[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          v93 = 10;
          goto LABEL_68;
        case 0xBu:
          v97 = *(char **)a2;
          v98 = *(id *)a2;
          *(_QWORD *)a1 = v97;
          v93 = 11;
LABEL_68:
          a1[v31] = v93;
          break;
        default:
          v34 = *(_DWORD *)a2 + 12;
          continue;
      }
      break;
    }
  }
  return v39;
}

void sub_23FD5DD24(id *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;

  v48 = sub_23FD747C8();
  v3 = *(_QWORD *)(v48 - 8);
  v52 = *(unsigned __int8 *)(v3 + 80);
  v47 = v3;
  v46 = *(_QWORD *)(v3 + 64) + 7;
  v4 = sub_23FD74840();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = *(_DWORD *)(v5 + 84);
  v49 = v5;
  v50 = v4;
  v8 = *(_QWORD *)(v5 + 64);
  if (v7)
    v9 = v8;
  else
    v9 = v8 + 1;
  v10 = v9 + 7;
  v11 = (v9 + 7 + ((v6 + 24) & ~v6)) & 0xFFFFFFFFFFFFFFF8;
  v12 = ((((v11 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  v13 = sub_23FD74798();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v44 = v14;
  v45 = v13;
  v43 = *(_QWORD *)(v14 + 64) + v6;
  v16 = ((((((v10 + ((v43 + ((v15 + 40) & ~v15)) & ~v6)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v17 = v11 + 16;
  v18 = sub_23FD73E38();
  v40 = *(_QWORD *)(v18 - 8);
  v41 = v18;
  v19 = *(_QWORD *)(v40 + 64);
  v42 = *(_QWORD *)(a2 + 16);
  v20 = *(_QWORD *)(v42 - 8);
  if (*(_DWORD *)(v20 + 84))
    v21 = *(_QWORD *)(v20 + 64);
  else
    v21 = *(_QWORD *)(v20 + 64) + 1;
  v22 = sub_23FD71474();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(_DWORD *)(v23 + 80) & 0xF8 | 7;
  v25 = ((v21 + v24) & ~v24)
      + ((((*(_QWORD *)(v23 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v12 <= ((((v46 + ((v52 + 40) & ~v52)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16)
    v26 = ((((v46 + ((v52 + 40) & ~v52)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  else
    v26 = v12;
  if (v26 <= v16)
    v26 = v16;
  if (v26 <= v17)
    v26 = v17;
  if (v26 > v25)
    v25 = v26;
  if (v25 <= v19)
    v25 = v19;
  if (v25 <= 0x40)
    v25 = 64;
  v28 = ~v6;
  v29 = ~v24;
  switch(*((_BYTE *)a1 + v25))
  {
    case 0:
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      goto LABEL_35;
    case 1:
    case 2:
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_35;
    case 3:
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      (*(void (**)(unint64_t, uint64_t))(v47 + 8))(((((unint64_t)a1 + 31) & 0xFFFFFFFFFFFFFFF8) + v52 + 16) & ~v52, v48);
      goto LABEL_34;
    case 4:
    case 7:
      swift_bridgeObjectRelease();

      v30 = (uint64_t)a1 + v6 + 24;
      goto LABEL_31;
    case 5:
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      v31 = ((((unint64_t)a1 + 31) & 0xFFFFFFFFFFFFFFF8) + v15 + 16) & ~v15;
      (*(void (**)(unint64_t, uint64_t))(v44 + 8))(v31, v45);
      v30 = v43 + v31;
LABEL_31:
      v32 = v30 & v28;
      if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v30 & v28, 1, v50))
        (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v32, v50);
      swift_bridgeObjectRelease();
      goto LABEL_34;
    case 6:
LABEL_34:
      swift_bridgeObjectRelease();
      goto LABEL_35;
    case 8:
      swift_bridgeObjectRelease();

      v33 = ((unint64_t)a1 + v6 + 24) & v28;
      if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v33, 1, v50))
        (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v33, v50);
LABEL_35:
      swift_release();
      return;
    case 9:
      (*(void (**)(id *, uint64_t))(v40 + 8))(a1, v41);
      return;
    case 0xA:
      v34 = v21 + v24;
      v35 = *(unsigned int *)(v23 + 84);
      v36 = *(_QWORD *)(v23 + 64) + 7;
      v37 = v22;
      if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a1, 1, v42))
        (*(void (**)(id *, uint64_t))(v20 + 8))(a1, v42);
      v38 = ((unint64_t)a1 + v34) & v29;
      if (v35 >= 0x7FFFFFFF)
      {
        if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v38, v35, v37))
          return;
        goto LABEL_49;
      }
      v39 = *(_QWORD *)(((((v36 + v38) & 0xFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8) + 8);
      if (v39 >= 0xFFFFFFFF)
        LODWORD(v39) = -1;
      if ((_DWORD)v39 == -1)
      {
LABEL_49:
        (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v38, v37);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      return;
    case 0xB:

      return;
    default:
      if (v25 <= 3)
        v27 = v25;
      else
        v27 = 4;
      __asm { BR              X14 }
      return;
  }
}

char *sub_23FD5E298(char *a1, char *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  size_t v8;
  size_t v9;
  size_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  size_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  void *v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t, uint64_t, uint64_t);
  id v57;
  _QWORD *v58;
  _QWORD *v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  const void *v65;
  id v66;
  uint64_t v67;
  void *v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(uint64_t, uint64_t, uint64_t);
  id v74;
  void *v75;
  const void *v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  const void *v80;
  id v81;
  uint64_t v82;
  void *v83;
  const void *v84;
  id v85;
  char v86;
  size_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  _QWORD *v93;
  _QWORD *v94;
  _QWORD *v95;
  _QWORD *v96;
  _QWORD *v97;
  _QWORD *v98;
  uint64_t v99;
  char v100;
  _QWORD *v101;
  _QWORD *v102;
  _QWORD *v103;
  _QWORD *v104;
  _QWORD *v105;
  _QWORD *v106;
  uint64_t v107;
  _QWORD *v108;
  _QWORD *v109;
  _QWORD *v110;
  _QWORD *v111;
  _QWORD *v112;
  _QWORD *v113;
  uint64_t v114;
  size_t v115;
  void *v116;
  const void *v117;
  unint64_t v118;
  _QWORD *v119;
  _QWORD *v120;
  _QWORD *v121;
  _QWORD *v122;
  char *result;
  _QWORD *v124;
  _QWORD *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  size_t __n;
  size_t v137;
  size_t v138;
  unint64_t v139;
  uint64_t v142;
  uint64_t v143;

  v134 = sub_23FD747C8();
  v4 = *(_QWORD *)(v134 - 8);
  v142 = *(unsigned __int8 *)(v4 + 80);
  v132 = v4;
  v133 = *(_QWORD *)(v4 + 64) + 7;
  v138 = sub_23FD74840();
  v5 = *(_QWORD *)(v138 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = *(_DWORD *)(v5 + 84);
  v135 = v5;
  v8 = *(_QWORD *)(v5 + 64);
  if (v7)
    v9 = v8;
  else
    v9 = v8 + 1;
  __n = v9;
  v10 = v9 + 7;
  v11 = (v9 + 7 + ((v6 + 24) & ~v6)) & 0xFFFFFFFFFFFFFFF8;
  v12 = ((((v11 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  v13 = sub_23FD74798();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v129 = v14;
  v130 = *(_QWORD *)(v14 + 64) + v6;
  v131 = v13;
  v137 = v10;
  v16 = ((((((v10 + ((v130 + ((v15 + 40) & ~v15)) & ~v6)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v17 = v11 + 16;
  v18 = sub_23FD73E38();
  v127 = *(_QWORD *)(v18 - 8);
  v128 = v18;
  v19 = *(_QWORD *)(v127 + 64);
  v20 = *(_QWORD *)(a3 + 16);
  v21 = *(_QWORD *)(v20 - 8);
  if (*(_DWORD *)(v21 + 84))
    v22 = *(_QWORD *)(v21 + 64);
  else
    v22 = *(_QWORD *)(v21 + 64) + 1;
  v23 = sub_23FD71474();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(_DWORD *)(v24 + 80) & 0xF8 | 7;
  v26 = *(_QWORD *)(v24 + 64) + 7;
  v27 = (((v26 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 + ((v22 + v25) & ~v25);
  if (v12 <= ((((v133 + ((v142 + 40) & ~v142)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16)
    v28 = ((((v133 + ((v142 + 40) & ~v142)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  else
    v28 = v12;
  if (v28 <= v16)
    v28 = v16;
  if (v28 <= v17)
    v28 = v17;
  if (v28 > v27)
    v27 = v28;
  if (v27 <= v19)
    v27 = v19;
  if (v27 <= 0x40)
    v29 = 64;
  else
    v29 = v27;
  v31 = v20;
  v32 = ~v142;
  v33 = ~v6;
  v34 = ~v15;
  v35 = ~v25;
  switch(a2[v29])
  {
    case 0:
      v36 = *((_QWORD *)a2 + 1);
      v37 = a1;
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v36;
      v39 = (void *)*((_QWORD *)a2 + 2);
      v38 = *((_QWORD *)a2 + 3);
      *((_QWORD *)a1 + 2) = v39;
      *((_QWORD *)a1 + 3) = v38;
      v40 = *((_QWORD *)a2 + 6);
      *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
      *((_QWORD *)a1 + 6) = v40;
      a1[v29] = 0;
      swift_bridgeObjectRetain();
      v41 = v39;
      goto LABEL_53;
    case 1:
      v42 = *((_QWORD *)a2 + 1);
      v37 = a1;
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v42;
      v43 = (void *)*((_QWORD *)a2 + 2);
      v44 = *((_QWORD *)a2 + 3);
      *((_QWORD *)a1 + 2) = v43;
      *((_QWORD *)a1 + 3) = v44;
      *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
      v45 = *((_QWORD *)a2 + 7);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      v46 = 1;
      goto LABEL_30;
    case 2:
      v47 = *((_QWORD *)a2 + 1);
      v37 = a1;
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v47;
      v43 = (void *)*((_QWORD *)a2 + 2);
      v48 = *((_QWORD *)a2 + 3);
      *((_QWORD *)a1 + 2) = v43;
      *((_QWORD *)a1 + 3) = v48;
      *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
      v45 = *((_QWORD *)a2 + 7);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      v46 = 2;
LABEL_30:
      *((_QWORD *)v37 + 7) = v45;
      v37[v29] = v46;
      swift_bridgeObjectRetain();
      v49 = v43;
      swift_bridgeObjectRetain();
      goto LABEL_53;
    case 3:
      v50 = *((_QWORD *)a2 + 1);
      v37 = a1;
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v50;
      v51 = (void *)*((_QWORD *)a2 + 2);
      *((_QWORD *)a1 + 2) = v51;
      v52 = (_QWORD *)((unint64_t)(a1 + 31) & 0xFFFFFFFFFFFFFFF8);
      v53 = (_QWORD *)((unint64_t)(a2 + 31) & 0xFFFFFFFFFFFFFFF8);
      *v52 = *v53;
      v52[1] = v53[1];
      v54 = ((unint64_t)v52 + v142 + 16) & v32;
      v55 = ((unint64_t)v53 + v142 + 16) & v32;
      v56 = *(void (**)(uint64_t, uint64_t, uint64_t))(v132 + 16);
      swift_bridgeObjectRetain();
      v57 = v51;
      swift_bridgeObjectRetain();
      v56(v54, v55, v134);
      v58 = (_QWORD *)((v133 + v54) & 0xFFFFFFFFFFFFFFF8);
      v59 = (_QWORD *)((v133 + v55) & 0xFFFFFFFFFFFFFFF8);
      *v58 = *v59;
      v58[1] = v59[1];
      v60 = (_QWORD *)(((unint64_t)v58 + 23) & 0xFFFFFFFFFFFFFFF8);
      v61 = (_QWORD *)(((unint64_t)v59 + 23) & 0xFFFFFFFFFFFFFFF8);
      v62 = v61[1];
      *v60 = *v61;
      v60[1] = v62;
      a1[v29] = 3;
      goto LABEL_53;
    case 4:
      v63 = *((_QWORD *)a2 + 1);
      v37 = a1;
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v63;
      v64 = (void *)*((_QWORD *)a2 + 2);
      *((_QWORD *)a1 + 2) = v64;
      v65 = (const void *)((unint64_t)&a2[v6 + 24] & v33);
      swift_bridgeObjectRetain();
      v66 = v64;
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v65, 1, v138))
      {
        memcpy((void *)((unint64_t)&a1[v6 + 24] & v33), v65, __n);
      }
      else
      {
        (*(void (**)(unint64_t, const void *, size_t))(v135 + 16))((unint64_t)&a1[v6 + 24] & v33, v65, v138);
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((unint64_t)&a1[v6 + 24] & v33, 0, 1, v138);
      }
      v93 = (_QWORD *)((v137 + ((unint64_t)&a1[v6 + 24] & v33)) & 0xFFFFFFFFFFFFFFF8);
      v94 = (_QWORD *)(((unint64_t)v65 + v137) & 0xFFFFFFFFFFFFFFF8);
      *v93 = *v94;
      v93[1] = v94[1];
      v95 = (_QWORD *)(((unint64_t)v93 + 23) & 0xFFFFFFFFFFFFFFF8);
      v96 = (_QWORD *)(((unint64_t)v94 + 23) & 0xFFFFFFFFFFFFFFF8);
      *v95 = *v96;
      v95[1] = v96[1];
      v97 = (_QWORD *)(((unint64_t)v95 + 23) & 0xFFFFFFFFFFFFFFF8);
      v98 = (_QWORD *)(((unint64_t)v96 + 23) & 0xFFFFFFFFFFFFFFF8);
      v99 = v98[1];
      *v97 = *v98;
      v97[1] = v99;
      v100 = 4;
      goto LABEL_52;
    case 5:
      v67 = *((_QWORD *)a2 + 1);
      v37 = a1;
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v67;
      v68 = (void *)*((_QWORD *)a2 + 2);
      *((_QWORD *)a1 + 2) = v68;
      v69 = (_QWORD *)((unint64_t)(a1 + 31) & 0xFFFFFFFFFFFFFFF8);
      v70 = (_QWORD *)((unint64_t)(a2 + 31) & 0xFFFFFFFFFFFFFFF8);
      *v69 = *v70;
      v69[1] = v70[1];
      v71 = ((unint64_t)v69 + v15 + 16) & v34;
      v72 = ((unint64_t)v70 + v15 + 16) & v34;
      v73 = *(void (**)(uint64_t, uint64_t, uint64_t))(v129 + 16);
      swift_bridgeObjectRetain();
      v74 = v68;
      swift_bridgeObjectRetain();
      v73(v71, v72, v131);
      v75 = (void *)((v130 + v71) & v33);
      v76 = (const void *)((v130 + v72) & v33);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v76, 1, v138))
      {
        memcpy(v75, v76, __n);
      }
      else
      {
        (*(void (**)(void *, const void *, size_t))(v135 + 16))(v75, v76, v138);
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v75, 0, 1, v138);
      }
      v101 = (_QWORD *)(((unint64_t)v75 + v137) & 0xFFFFFFFFFFFFFFF8);
      v102 = (_QWORD *)(((unint64_t)v76 + v137) & 0xFFFFFFFFFFFFFFF8);
      *v101 = *v102;
      v101[1] = v102[1];
      v103 = (_QWORD *)(((unint64_t)v101 + 23) & 0xFFFFFFFFFFFFFFF8);
      v104 = (_QWORD *)(((unint64_t)v102 + 23) & 0xFFFFFFFFFFFFFFF8);
      *v103 = *v104;
      v103[1] = v104[1];
      v105 = (_QWORD *)(((unint64_t)v103 + 23) & 0xFFFFFFFFFFFFFFF8);
      v106 = (_QWORD *)(((unint64_t)v104 + 23) & 0xFFFFFFFFFFFFFFF8);
      v107 = v106[1];
      *v105 = *v106;
      v105[1] = v107;
      v100 = 5;
      goto LABEL_52;
    case 6:
      v37 = a1;
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v77 = *((_QWORD *)a2 + 3);
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *((_QWORD *)a1 + 3) = v77;
      a1[v29] = 6;
      goto LABEL_53;
    case 7:
      v78 = *((_QWORD *)a2 + 1);
      v37 = a1;
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v78;
      v79 = (void *)*((_QWORD *)a2 + 2);
      *((_QWORD *)a1 + 2) = v79;
      v80 = (const void *)((unint64_t)&a2[v6 + 24] & v33);
      swift_bridgeObjectRetain();
      v81 = v79;
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v80, 1, v138))
      {
        memcpy((void *)((unint64_t)&a1[v6 + 24] & v33), v80, __n);
      }
      else
      {
        (*(void (**)(unint64_t, const void *, size_t))(v135 + 16))((unint64_t)&a1[v6 + 24] & v33, v80, v138);
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((unint64_t)&a1[v6 + 24] & v33, 0, 1, v138);
      }
      v108 = (_QWORD *)((v137 + ((unint64_t)&a1[v6 + 24] & v33)) & 0xFFFFFFFFFFFFFFF8);
      v109 = (_QWORD *)(((unint64_t)v80 + v137) & 0xFFFFFFFFFFFFFFF8);
      *v108 = *v109;
      v108[1] = v109[1];
      v110 = (_QWORD *)(((unint64_t)v108 + 23) & 0xFFFFFFFFFFFFFFF8);
      v111 = (_QWORD *)(((unint64_t)v109 + 23) & 0xFFFFFFFFFFFFFFF8);
      *v110 = *v111;
      v110[1] = v111[1];
      v112 = (_QWORD *)(((unint64_t)v110 + 23) & 0xFFFFFFFFFFFFFFF8);
      v113 = (_QWORD *)(((unint64_t)v111 + 23) & 0xFFFFFFFFFFFFFFF8);
      v114 = v113[1];
      *v112 = *v113;
      v112[1] = v114;
      v100 = 7;
LABEL_52:
      v37[v29] = v100;
      swift_bridgeObjectRetain();
LABEL_53:
      swift_bridgeObjectRetain();
      goto LABEL_54;
    case 8:
      v82 = *((_QWORD *)a2 + 1);
      v37 = a1;
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v82;
      v83 = (void *)*((_QWORD *)a2 + 2);
      *((_QWORD *)a1 + 2) = v83;
      v84 = (const void *)((unint64_t)&a2[v6 + 24] & v33);
      swift_bridgeObjectRetain();
      v85 = v83;
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v84, 1, v138))
      {
        memcpy((void *)((unint64_t)&a1[v6 + 24] & v33), v84, __n);
      }
      else
      {
        (*(void (**)(unint64_t, const void *, size_t))(v135 + 16))((unint64_t)&a1[v6 + 24] & v33, v84, v138);
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((unint64_t)&a1[v6 + 24] & v33, 0, 1, v138);
      }
      v124 = (_QWORD *)((v137 + ((unint64_t)&a1[v6 + 24] & v33)) & 0xFFFFFFFFFFFFFFF8);
      v125 = (_QWORD *)(((unint64_t)v84 + v137) & 0xFFFFFFFFFFFFFFF8);
      v126 = v125[1];
      *v124 = *v125;
      v124[1] = v126;
      a1[v29] = 8;
LABEL_54:
      swift_retain();
      return v37;
    case 9:
      v37 = a1;
      (*(void (**)(char *, char *, uint64_t))(v127 + 16))(a1, a2, v128);
      v86 = 9;
      goto LABEL_64;
    case 10:
      v87 = v22 + v25;
      v88 = *(_QWORD *)(v23 - 8);
      v89 = *(unsigned int *)(v24 + 84);
      v139 = (((v26 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
      v90 = *(_QWORD *)(v24 + 64) + 7;
      v143 = v23;
      v37 = a1;
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v31))
      {
        memcpy(a1, a2, v22);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 16))(a1, a2, v31);
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v31);
      }
      v115 = v87;
      v116 = (void *)((unint64_t)&a1[v87] & v35);
      v117 = (const void *)((unint64_t)&a2[v115] & v35);
      if (v89 < 0x7FFFFFFF)
      {
        v118 = *(_QWORD *)((((((unint64_t)v117 + v90) & 0xFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8) + 8);
        if (v118 >= 0xFFFFFFFF)
          LODWORD(v118) = -1;
        if ((_DWORD)v118 != -1)
          goto LABEL_58;
      }
      else if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((unint64_t)&a2[v115] & v35, v89, v143))
      {
LABEL_58:
        memcpy(v116, v117, v139);
        goto LABEL_63;
      }
      (*(void (**)(void *, const void *, uint64_t))(v88 + 16))(v116, v117, v143);
      v119 = (_QWORD *)(((unint64_t)v116 + v90) & 0xFFFFFFFFFFFFFFF8);
      v120 = (_QWORD *)(((unint64_t)v117 + v90) & 0xFFFFFFFFFFFFFFF8);
      *v119 = *v120;
      v119[1] = v120[1];
      v121 = (_QWORD *)(((unint64_t)v119 + 23) & 0xFFFFFFFFFFFFFFF8);
      v122 = (_QWORD *)(((unint64_t)v120 + 23) & 0xFFFFFFFFFFFFFFF8);
      *v121 = *v122;
      v121[1] = v122[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_63:
      v86 = 10;
LABEL_64:
      v37[v29] = v86;
      return v37;
    case 11:
      v91 = *(_QWORD *)a2;
      v92 = *(id *)a2;
      v37 = a1;
      *(_QWORD *)a1 = v91;
      v86 = 11;
      goto LABEL_64;
    default:
      if (v29 <= 3)
        v30 = v29;
      else
        v30 = 4;
      __asm { BR              X13 }
      return result;
  }
}

uint64_t sub_23FD5EC50(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  size_t v12;
  size_t v13;
  size_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  int v24;
  size_t v25;
  size_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  int v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  void *v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(uint64_t, uint64_t, uint64_t);
  id v62;
  _QWORD *v63;
  _QWORD *v64;
  _QWORD *v65;
  _QWORD *v66;
  uint64_t v67;
  char v68;
  void *v69;
  void *v70;
  const void *v71;
  id v72;
  void *v73;
  _QWORD *v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(uint64_t, uint64_t, uint64_t);
  id v79;
  void *v80;
  const void *v81;
  uint64_t v82;
  void *v83;
  void *v84;
  const void *v85;
  id v86;
  void *v87;
  void *v88;
  const void *v89;
  id v90;
  char v91;
  uint64_t v92;
  id v93;
  unint64_t v94;
  _QWORD *v95;
  _QWORD *v96;
  _QWORD *v97;
  _QWORD *v98;
  _QWORD *v99;
  _QWORD *v100;
  uint64_t v101;
  char v102;
  _QWORD *v103;
  _QWORD *v104;
  _QWORD *v105;
  _QWORD *v106;
  _QWORD *v107;
  _QWORD *v108;
  uint64_t v109;
  _QWORD *v110;
  _QWORD *v111;
  _QWORD *v112;
  _QWORD *v113;
  _QWORD *v114;
  _QWORD *v115;
  uint64_t v116;
  _QWORD *v117;
  _QWORD *v118;
  uint64_t v119;
  uint64_t v120;
  void *v121;
  const void *v122;
  int v123;
  unint64_t v124;
  _QWORD *v125;
  _QWORD *v126;
  _QWORD *v127;
  _QWORD *v128;
  uint64_t result;
  size_t __n;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unsigned int v135;
  uint64_t v136;
  uint64_t v137;
  size_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  size_t v146;
  uint64_t v147;
  size_t v148;
  uint64_t v150;
  uint64_t v151;

  if ((_QWORD *)a1 != a2)
  {
    v5 = sub_23FD747C8();
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(unsigned __int8 *)(v6 + 80);
    v142 = v6;
    v143 = *(_QWORD *)(v6 + 64) + 7;
    v144 = v5;
    v8 = sub_23FD74840();
    v9 = *(_QWORD *)(v8 - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_DWORD *)(v9 + 84);
    v147 = v9;
    v12 = *(_QWORD *)(v9 + 64);
    if (v11)
      v13 = v12;
    else
      v13 = v12 + 1;
    v146 = v13;
    v14 = v13 + 7;
    v15 = (v13 + 7 + ((v10 + 24) & ~v10)) & 0xFFFFFFFFFFFFFFF8;
    v16 = ((((v15 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
    v141 = sub_23FD74798();
    v17 = *(_QWORD *)(v141 - 8);
    v151 = *(unsigned __int8 *)(v17 + 80);
    v139 = v17;
    v140 = *(_QWORD *)(v17 + 64) + v10;
    v18 = v10;
    v148 = v14;
    v19 = ((((((v14 + ((v140 + ((v151 + 40) & ~v151)) & ~v10)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
        + 16;
    v20 = v15 + 16;
    v21 = sub_23FD73E38();
    v136 = *(_QWORD *)(v21 - 8);
    v137 = v21;
    v22 = *(_QWORD *)(v136 + 64);
    v145 = *(_QWORD *)(a3 + 16);
    v23 = *(_QWORD *)(v145 - 8);
    v24 = *(_DWORD *)(v23 + 84);
    v132 = v23;
    v25 = *(_QWORD *)(v23 + 64);
    if (v24)
      v26 = v25;
    else
      v26 = v25 + 1;
    v27 = sub_23FD71474();
    v28 = *(_QWORD *)(v27 - 8);
    v29 = *(_DWORD *)(v28 + 84);
    v30 = *(_DWORD *)(v28 + 80) & 0xF8 | 7;
    v131 = v28;
    v133 = *(_QWORD *)(v28 + 64) + 7;
    v134 = v27;
    __n = v26;
    v138 = v26 + v30;
    v31 = (((v133 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 + ((v26 + v30) & ~v30);
    if (v16 <= ((((v143 + ((v7 + 40) & ~v7)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16)
      v32 = ((((v143 + ((v7 + 40) & ~v7)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
    else
      v32 = v16;
    if (v32 <= v19)
      v32 = v19;
    if (v32 <= v20)
      v32 = v20;
    if (v32 > v31)
      v31 = v32;
    if (v31 <= v22)
      v31 = v22;
    if (v31 <= 0x40)
      v33 = 64;
    else
      v33 = v31;
    v35 = v8;
    v36 = v7;
    v37 = a2;
    v38 = ~v36;
    v150 = ~v18;
    v39 = ~v151;
    v40 = ~v30;
    v135 = v29;
    switch(*(_BYTE *)(a1 + v33))
    {
      case 0:
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        goto LABEL_40;
      case 1:
      case 2:
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_40;
      case 3:
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v142 + 8))((((a1 + 31) & 0xFFFFFFFFFFFFFFF8) + v36 + 16) & v38, v144);
        swift_bridgeObjectRelease();
        goto LABEL_40;
      case 4:
      case 7:
        swift_bridgeObjectRelease();

        if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((a1 + v18 + 24) & v150, 1, v35))(*(void (**)(uint64_t, uint64_t))(v147 + 8))((a1 + v18 + 24) & v150, v35);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        v38 = ~v36;
        break;
      case 5:
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        v41 = (((a1 + 31) & 0xFFFFFFFFFFFFFFF8) + v151 + 16) & v39;
        (*(void (**)(unint64_t, uint64_t))(v139 + 8))(v41, v141);
        v42 = (v140 + v41) & v150;
        if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v42, 1, v35))
          (*(void (**)(uint64_t, uint64_t))(v147 + 8))(v42, v35);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        break;
      case 6:
        swift_bridgeObjectRelease();
        goto LABEL_40;
      case 8:
        swift_bridgeObjectRelease();

        if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((a1 + v18 + 24) & v150, 1, v35))(*(void (**)(uint64_t, uint64_t))(v147 + 8))((a1 + v18 + 24) & v150, v35);
LABEL_40:
        swift_release();
        break;
      case 9:
        (*(void (**)(uint64_t, uint64_t))(v136 + 8))(a1, v137);
        break;
      case 0xA:
        if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, 1, v145))
          (*(void (**)(uint64_t, uint64_t))(v132 + 8))(a1, v145);
        v47 = (v138 + a1) & v40;
        if (v135 < 0x7FFFFFFF)
        {
          v94 = *(_QWORD *)(((((v133 + v47) & 0xFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8) + 8);
          if (v94 >= 0xFFFFFFFF)
            LODWORD(v94) = -1;
          v48 = v94 + 1;
        }
        else
        {
          v48 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((v138 + a1) & v40, v135, v134);
        }
        if (!v48)
        {
          (*(void (**)(uint64_t, uint64_t))(v131 + 8))(v47, v134);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        break;
      case 0xB:

        break;
      default:
        if (v33 <= 3)
          v34 = v33;
        else
          v34 = 4;
        __asm { BR              X13 }
        return result;
    }
    switch(*((_BYTE *)v37 + v33))
    {
      case 0:
        *(_QWORD *)a1 = *v37;
        *(_QWORD *)(a1 + 8) = v37[1];
        v44 = (void *)v37[2];
        *(_QWORD *)(a1 + 16) = v44;
        *(_QWORD *)(a1 + 24) = v37[3];
        *(_QWORD *)(a1 + 32) = v37[4];
        v45 = v37[6];
        *(_QWORD *)(a1 + 40) = v37[5];
        *(_QWORD *)(a1 + 48) = v45;
        *(_BYTE *)(a1 + v33) = 0;
        swift_bridgeObjectRetain();
        v46 = v44;
        goto LABEL_84;
      case 1:
        *(_QWORD *)a1 = *v37;
        *(_QWORD *)(a1 + 8) = v37[1];
        v49 = (void *)v37[2];
        *(_QWORD *)(a1 + 16) = v49;
        *(_QWORD *)(a1 + 24) = v37[3];
        *(_QWORD *)(a1 + 32) = v37[4];
        *(_QWORD *)(a1 + 40) = v37[5];
        v50 = v37[6];
        v51 = v37[7];
        *(_QWORD *)(a1 + 48) = v50;
        *(_QWORD *)(a1 + 56) = v51;
        v52 = 1;
        goto LABEL_56;
      case 2:
        *(_QWORD *)a1 = *v37;
        *(_QWORD *)(a1 + 8) = v37[1];
        v49 = (void *)v37[2];
        *(_QWORD *)(a1 + 16) = v49;
        *(_QWORD *)(a1 + 24) = v37[3];
        *(_QWORD *)(a1 + 32) = v37[4];
        *(_QWORD *)(a1 + 40) = v37[5];
        v53 = v37[6];
        v54 = v37[7];
        *(_QWORD *)(a1 + 48) = v53;
        *(_QWORD *)(a1 + 56) = v54;
        v52 = 2;
LABEL_56:
        *(_BYTE *)(a1 + v33) = v52;
        swift_bridgeObjectRetain();
        v55 = v49;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_85;
      case 3:
        *(_QWORD *)a1 = *v37;
        *(_QWORD *)(a1 + 8) = v37[1];
        v56 = (void *)v37[2];
        *(_QWORD *)(a1 + 16) = v56;
        v57 = (_QWORD *)((a1 + 31) & 0xFFFFFFFFFFFFFFF8);
        v58 = (_QWORD *)(((unint64_t)v37 + 31) & 0xFFFFFFFFFFFFFFF8);
        *v57 = *v58;
        v57[1] = v58[1];
        v59 = ((unint64_t)v57 + v36 + 16) & v38;
        v60 = ((unint64_t)v58 + v36 + 16) & v38;
        v61 = *(void (**)(uint64_t, uint64_t, uint64_t))(v142 + 16);
        swift_bridgeObjectRetain();
        v62 = v56;
        swift_bridgeObjectRetain();
        v61(v59, v60, v144);
        v63 = (_QWORD *)((v143 + v59) & 0xFFFFFFFFFFFFFFF8);
        v64 = (_QWORD *)((v143 + v60) & 0xFFFFFFFFFFFFFFF8);
        *v63 = *v64;
        v63[1] = v64[1];
        v65 = (_QWORD *)(((unint64_t)v63 + 23) & 0xFFFFFFFFFFFFFFF8);
        v66 = (_QWORD *)(((unint64_t)v64 + 23) & 0xFFFFFFFFFFFFFFF8);
        v67 = v66[1];
        *v65 = *v66;
        v65[1] = v67;
        v68 = 3;
        goto LABEL_63;
      case 4:
        *(_QWORD *)a1 = *v37;
        *(_QWORD *)(a1 + 8) = v37[1];
        v69 = (void *)v37[2];
        *(_QWORD *)(a1 + 16) = v69;
        v70 = (void *)((a1 + v18 + 24) & v150);
        v71 = (const void *)(((unint64_t)v37 + v18 + 24) & v150);
        swift_bridgeObjectRetain();
        v72 = v69;
        if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v71, 1, v35))
        {
          memcpy(v70, v71, v146);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v147 + 16))(v70, v71, v35);
          _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v70, 0, 1, v35);
        }
        v95 = (_QWORD *)(((unint64_t)v70 + v148) & 0xFFFFFFFFFFFFFFF8);
        v96 = (_QWORD *)(((unint64_t)v71 + v148) & 0xFFFFFFFFFFFFFFF8);
        *v95 = *v96;
        v95[1] = v96[1];
        v97 = (_QWORD *)(((unint64_t)v95 + 23) & 0xFFFFFFFFFFFFFFF8);
        v98 = (_QWORD *)(((unint64_t)v96 + 23) & 0xFFFFFFFFFFFFFFF8);
        *v97 = *v98;
        v97[1] = v98[1];
        v99 = (_QWORD *)(((unint64_t)v97 + 23) & 0xFFFFFFFFFFFFFFF8);
        v100 = (_QWORD *)(((unint64_t)v98 + 23) & 0xFFFFFFFFFFFFFFF8);
        v101 = v100[1];
        *v99 = *v100;
        v99[1] = v101;
        v102 = 4;
        goto LABEL_83;
      case 5:
        *(_QWORD *)a1 = *v37;
        *(_QWORD *)(a1 + 8) = v37[1];
        v73 = (void *)v37[2];
        *(_QWORD *)(a1 + 16) = v73;
        v74 = (_QWORD *)((a1 + 31) & 0xFFFFFFFFFFFFFFF8);
        v75 = (_QWORD *)(((unint64_t)v37 + 31) & 0xFFFFFFFFFFFFFFF8);
        *v74 = *v75;
        v74[1] = v75[1];
        v76 = ((unint64_t)v74 + v151 + 16) & v39;
        v77 = ((unint64_t)v75 + v151 + 16) & v39;
        v78 = *(void (**)(uint64_t, uint64_t, uint64_t))(v139 + 16);
        swift_bridgeObjectRetain();
        v79 = v73;
        swift_bridgeObjectRetain();
        v78(v76, v77, v141);
        v80 = (void *)((v140 + v76) & v150);
        v81 = (const void *)((v140 + v77) & v150);
        if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v81, 1, v35))
        {
          memcpy(v80, v81, v146);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v147 + 16))(v80, v81, v35);
          _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v80, 0, 1, v35);
        }
        v103 = (_QWORD *)(((unint64_t)v80 + v148) & 0xFFFFFFFFFFFFFFF8);
        v104 = (_QWORD *)(((unint64_t)v81 + v148) & 0xFFFFFFFFFFFFFFF8);
        *v103 = *v104;
        v103[1] = v104[1];
        v105 = (_QWORD *)(((unint64_t)v103 + 23) & 0xFFFFFFFFFFFFFFF8);
        v106 = (_QWORD *)(((unint64_t)v104 + 23) & 0xFFFFFFFFFFFFFFF8);
        *v105 = *v106;
        v105[1] = v106[1];
        v107 = (_QWORD *)(((unint64_t)v105 + 23) & 0xFFFFFFFFFFFFFFF8);
        v108 = (_QWORD *)(((unint64_t)v106 + 23) & 0xFFFFFFFFFFFFFFF8);
        v109 = v108[1];
        *v107 = *v108;
        v107[1] = v109;
        v102 = 5;
        goto LABEL_83;
      case 6:
        *(_QWORD *)a1 = *v37;
        *(_QWORD *)(a1 + 8) = v37[1];
        v82 = v37[3];
        *(_QWORD *)(a1 + 16) = v37[2];
        *(_QWORD *)(a1 + 24) = v82;
        v68 = 6;
LABEL_63:
        *(_BYTE *)(a1 + v33) = v68;
        swift_bridgeObjectRetain();
        goto LABEL_85;
      case 7:
        *(_QWORD *)a1 = *v37;
        *(_QWORD *)(a1 + 8) = v37[1];
        v83 = (void *)v37[2];
        *(_QWORD *)(a1 + 16) = v83;
        v84 = (void *)((a1 + v18 + 24) & v150);
        v85 = (const void *)(((unint64_t)v37 + v18 + 24) & v150);
        swift_bridgeObjectRetain();
        v86 = v83;
        if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v85, 1, v35))
        {
          memcpy(v84, v85, v146);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v147 + 16))(v84, v85, v35);
          _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v84, 0, 1, v35);
        }
        v110 = (_QWORD *)(((unint64_t)v84 + v148) & 0xFFFFFFFFFFFFFFF8);
        v111 = (_QWORD *)(((unint64_t)v85 + v148) & 0xFFFFFFFFFFFFFFF8);
        *v110 = *v111;
        v110[1] = v111[1];
        v112 = (_QWORD *)(((unint64_t)v110 + 23) & 0xFFFFFFFFFFFFFFF8);
        v113 = (_QWORD *)(((unint64_t)v111 + 23) & 0xFFFFFFFFFFFFFFF8);
        *v112 = *v113;
        v112[1] = v113[1];
        v114 = (_QWORD *)(((unint64_t)v112 + 23) & 0xFFFFFFFFFFFFFFF8);
        v115 = (_QWORD *)(((unint64_t)v113 + 23) & 0xFFFFFFFFFFFFFFF8);
        v116 = v115[1];
        *v114 = *v115;
        v114[1] = v116;
        v102 = 7;
LABEL_83:
        *(_BYTE *)(a1 + v33) = v102;
        swift_bridgeObjectRetain();
LABEL_84:
        swift_bridgeObjectRetain();
        goto LABEL_85;
      case 8:
        *(_QWORD *)a1 = *v37;
        *(_QWORD *)(a1 + 8) = v37[1];
        v87 = (void *)v37[2];
        *(_QWORD *)(a1 + 16) = v87;
        v88 = (void *)((a1 + v18 + 24) & v150);
        v89 = (const void *)(((unint64_t)v37 + v18 + 24) & v150);
        swift_bridgeObjectRetain();
        v90 = v87;
        if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v89, 1, v35))
        {
          memcpy(v88, v89, v146);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v147 + 16))(v88, v89, v35);
          _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v88, 0, 1, v35);
        }
        v117 = (_QWORD *)(((unint64_t)v88 + v148) & 0xFFFFFFFFFFFFFFF8);
        v118 = (_QWORD *)(((unint64_t)v89 + v148) & 0xFFFFFFFFFFFFFFF8);
        v119 = v118[1];
        *v117 = *v118;
        v117[1] = v119;
        *(_BYTE *)(a1 + v33) = 8;
LABEL_85:
        swift_retain();
        return a1;
      case 9:
        (*(void (**)(uint64_t, _QWORD *, uint64_t))(v136 + 16))(a1, v37, v137);
        v91 = 9;
        goto LABEL_98;
      case 0xA:
        if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v37, 1, v145))
        {
          memcpy((void *)a1, v37, __n);
        }
        else
        {
          (*(void (**)(uint64_t, _QWORD *, uint64_t))(v132 + 16))(a1, v37, v145);
          _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a1, 0, 1, v145);
        }
        v120 = v40;
        v121 = (void *)((v138 + a1) & v40);
        v122 = (const void *)(((unint64_t)v37 + v138) & v120);
        if (v135 < 0x7FFFFFFF)
        {
          v124 = *(_QWORD *)((((((unint64_t)v122 + v133) & 0xFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8) + 8);
          if (v124 >= 0xFFFFFFFF)
            LODWORD(v124) = -1;
          v123 = v124 + 1;
        }
        else
        {
          v123 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(((unint64_t)v37 + v138) & v120, v135, v134);
        }
        if (v123)
        {
          memcpy(v121, v122, (((v133 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v131 + 16))(v121, v122, v134);
          v125 = (_QWORD *)(((unint64_t)v121 + v133) & 0xFFFFFFFFFFFFFFF8);
          v126 = (_QWORD *)(((unint64_t)v122 + v133) & 0xFFFFFFFFFFFFFFF8);
          *v125 = *v126;
          v125[1] = v126[1];
          v127 = (_QWORD *)(((unint64_t)v125 + 23) & 0xFFFFFFFFFFFFFFF8);
          v128 = (_QWORD *)(((unint64_t)v126 + 23) & 0xFFFFFFFFFFFFFFF8);
          *v127 = *v128;
          v127[1] = v128[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        v91 = 10;
        goto LABEL_98;
      case 0xB:
        v92 = *v37;
        v93 = (id)*v37;
        *(_QWORD *)a1 = v92;
        v91 = 11;
LABEL_98:
        *(_BYTE *)(a1 + v33) = v91;
        break;
      default:
        if (v33 <= 3)
          v43 = v33;
        else
          v43 = 4;
        __asm { BR              X12 }
        return result;
    }
  }
  return a1;
}

_OWORD *sub_23FD5FA44(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  size_t v8;
  size_t v9;
  size_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  __int128 v36;
  _OWORD *v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  _OWORD *v42;
  _OWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _OWORD *v47;
  unint64_t v48;
  uint64_t v49;
  void *v50;
  const void *v51;
  _OWORD *v52;
  _OWORD *v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  const void *v57;
  __int128 v58;
  void *v59;
  const void *v60;
  void *v61;
  const void *v62;
  uint64_t v63;
  uint64_t v64;
  _OWORD *v65;
  _OWORD *v66;
  _OWORD *v67;
  _OWORD *v68;
  _OWORD *v69;
  _OWORD *v70;
  _OWORD *v71;
  _OWORD *v72;
  _OWORD *v73;
  _OWORD *v74;
  _OWORD *v75;
  _OWORD *v76;
  unint64_t v77;
  unint64_t v78;
  _OWORD *v79;
  _OWORD *v80;
  _OWORD *result;
  uint64_t v82;
  size_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  size_t __n;
  size_t v95;
  size_t v96;
  unint64_t v97;
  uint64_t v100;
  uint64_t v101;

  v92 = sub_23FD747C8();
  v4 = *(_QWORD *)(v92 - 8);
  v100 = *(unsigned __int8 *)(v4 + 80);
  v90 = v4;
  v91 = *(_QWORD *)(v4 + 64) + 7;
  v96 = sub_23FD74840();
  v5 = *(_QWORD *)(v96 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = *(_DWORD *)(v5 + 84);
  v93 = v5;
  v8 = *(_QWORD *)(v5 + 64);
  if (v7)
    v9 = v8;
  else
    v9 = v8 + 1;
  __n = v9;
  v10 = v9 + 7;
  v11 = (v9 + 7 + ((v6 + 24) & ~v6)) & 0xFFFFFFFFFFFFFFF8;
  v12 = ((((v11 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  v13 = sub_23FD74798();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v87 = v14;
  v88 = *(_QWORD *)(v14 + 64) + v6;
  v89 = v13;
  v95 = v10;
  v16 = ((((((v10 + ((v88 + ((v15 + 40) & ~v15)) & ~v6)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v17 = v11 + 16;
  v18 = sub_23FD73E38();
  v84 = *(_QWORD *)(v18 - 8);
  v85 = v18;
  v19 = *(_QWORD *)(v84 + 64);
  v86 = *(_QWORD *)(a3 + 16);
  v20 = *(_QWORD *)(v86 - 8);
  if (*(_DWORD *)(v20 + 84))
    v21 = *(_QWORD *)(v20 + 64);
  else
    v21 = *(_QWORD *)(v20 + 64) + 1;
  v22 = sub_23FD71474();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(_DWORD *)(v23 + 80) & 0xF8 | 7;
  v25 = *(_QWORD *)(v23 + 64) + 7;
  v83 = v21;
  v26 = v21 + v24;
  v27 = (((v25 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 + (v26 & ~v24);
  if (v12 <= ((((v91 + ((v100 + 40) & ~v100)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16)
    v28 = ((((v91 + ((v100 + 40) & ~v100)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  else
    v28 = v12;
  if (v28 <= v16)
    v28 = v16;
  if (v28 <= v17)
    v28 = v17;
  if (v28 > v27)
    v27 = v28;
  if (v27 <= v19)
    v27 = v19;
  if (v27 <= 0x40)
    v29 = 64;
  else
    v29 = v27;
  v31 = ~v100;
  v32 = ~v6;
  v33 = ~v15;
  v34 = ~v24;
  switch(*((_BYTE *)a2 + v29))
  {
    case 0:
      v35 = 0;
      v36 = a2[1];
      v37 = a1;
      *a1 = *a2;
      a1[1] = v36;
      a1[2] = a2[2];
      *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
      goto LABEL_61;
    case 1:
      v38 = a2[1];
      v37 = a1;
      *a1 = *a2;
      a1[1] = v38;
      v39 = a2[3];
      a1[2] = a2[2];
      a1[3] = v39;
      v35 = 1;
      goto LABEL_61;
    case 2:
      v40 = a2[1];
      v37 = a1;
      *a1 = *a2;
      a1[1] = v40;
      v41 = a2[3];
      a1[2] = a2[2];
      a1[3] = v41;
      v35 = 2;
      goto LABEL_61;
    case 3:
      v37 = a1;
      *a1 = *a2;
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      v42 = (_OWORD *)(((unint64_t)a1 + 31) & 0xFFFFFFFFFFFFFFF8);
      v43 = (_OWORD *)(((unint64_t)a2 + 31) & 0xFFFFFFFFFFFFFFF8);
      *v42 = *v43;
      v44 = ((unint64_t)v42 + v100 + 16) & v31;
      v45 = v29;
      v46 = ((unint64_t)v43 + v100 + 16) & v31;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v90 + 32))(v44, v46, v92);
      v47 = (_OWORD *)((v91 + v44) & 0xFFFFFFFFFFFFFFF8);
      v48 = v91 + v46;
      v29 = v45;
      v48 &= 0xFFFFFFFFFFFFFFF8;
      *v47 = *(_OWORD *)v48;
      *(_OWORD *)(((unint64_t)v47 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((v48 + 23) & 0xFFFFFFFFFFFFF8);
      v35 = 3;
      goto LABEL_61;
    case 4:
      v49 = v29;
      v37 = a1;
      *a1 = *a2;
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      v50 = (void *)(((unint64_t)a1 + v6 + 24) & v32);
      v51 = (const void *)(((unint64_t)a2 + v6 + 24) & v32);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v51, 1, v96))
      {
        memcpy(v50, v51, __n);
      }
      else
      {
        (*(void (**)(void *, const void *, size_t))(v93 + 32))(v50, v51, v96);
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v50, 0, 1, v96);
      }
      v65 = (_OWORD *)(((unint64_t)v50 + v95) & 0xFFFFFFFFFFFFFFF8);
      v66 = (_OWORD *)(((unint64_t)v51 + v95) & 0xFFFFFFFFFFFFFFF8);
      *v65 = *v66;
      v67 = (_OWORD *)(((unint64_t)v65 + 23) & 0xFFFFFFFFFFFFFFF8);
      v68 = (_OWORD *)(((unint64_t)v66 + 23) & 0xFFFFFFFFFFFFFFF8);
      *v67 = *v68;
      *(_OWORD *)(((unint64_t)v67 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v68 + 23) & 0xFFFFFFFFFFFFF8);
      v35 = 4;
      goto LABEL_60;
    case 5:
      v49 = v29;
      v37 = a1;
      *a1 = *a2;
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      v52 = (_OWORD *)(((unint64_t)a1 + 31) & 0xFFFFFFFFFFFFFFF8);
      v53 = (_OWORD *)(((unint64_t)a2 + 31) & 0xFFFFFFFFFFFFFFF8);
      *v52 = *v53;
      v54 = ((unint64_t)v52 + v15 + 16) & v33;
      v55 = ((unint64_t)v53 + v15 + 16) & v33;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v87 + 32))(v54, v55, v89);
      v56 = (void *)((v88 + v54) & v32);
      v57 = (const void *)((v88 + v55) & v32);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v57, 1, v96))
      {
        memcpy(v56, v57, __n);
      }
      else
      {
        (*(void (**)(void *, const void *, size_t))(v93 + 32))(v56, v57, v96);
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v56, 0, 1, v96);
      }
      v69 = (_OWORD *)(((unint64_t)v56 + v95) & 0xFFFFFFFFFFFFFFF8);
      v70 = (_OWORD *)(((unint64_t)v57 + v95) & 0xFFFFFFFFFFFFFFF8);
      *v69 = *v70;
      v71 = (_OWORD *)(((unint64_t)v69 + 23) & 0xFFFFFFFFFFFFFFF8);
      v72 = (_OWORD *)(((unint64_t)v70 + 23) & 0xFFFFFFFFFFFFFFF8);
      *v71 = *v72;
      *(_OWORD *)(((unint64_t)v71 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v72 + 23) & 0xFFFFFFFFFFFFF8);
      v35 = 5;
      goto LABEL_60;
    case 6:
      v58 = a2[1];
      v37 = a1;
      *a1 = *a2;
      a1[1] = v58;
      v35 = 6;
      goto LABEL_61;
    case 7:
      v49 = v29;
      v37 = a1;
      *a1 = *a2;
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      v59 = (void *)(((unint64_t)a1 + v6 + 24) & v32);
      v60 = (const void *)(((unint64_t)a2 + v6 + 24) & v32);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v60, 1, v96))
      {
        memcpy(v59, v60, __n);
      }
      else
      {
        (*(void (**)(void *, const void *, size_t))(v93 + 32))(v59, v60, v96);
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v59, 0, 1, v96);
      }
      v73 = (_OWORD *)(((unint64_t)v59 + v95) & 0xFFFFFFFFFFFFFFF8);
      v74 = (_OWORD *)(((unint64_t)v60 + v95) & 0xFFFFFFFFFFFFFFF8);
      *v73 = *v74;
      v75 = (_OWORD *)(((unint64_t)v73 + 23) & 0xFFFFFFFFFFFFFFF8);
      v76 = (_OWORD *)(((unint64_t)v74 + 23) & 0xFFFFFFFFFFFFFFF8);
      *v75 = *v76;
      *(_OWORD *)(((unint64_t)v75 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v76 + 23) & 0xFFFFFFFFFFFFF8);
      v35 = 7;
      goto LABEL_60;
    case 8:
      v49 = v29;
      v37 = a1;
      *a1 = *a2;
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      v61 = (void *)(((unint64_t)a1 + v6 + 24) & v32);
      v62 = (const void *)(((unint64_t)a2 + v6 + 24) & v32);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v62, 1, v96))
      {
        memcpy(v61, v62, __n);
      }
      else
      {
        (*(void (**)(void *, const void *, size_t))(v93 + 32))(v61, v62, v96);
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v61, 0, 1, v96);
      }
      *(_OWORD *)(((unint64_t)v61 + v95) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v62 + v95) & 0xFFFFFFFFFFFFF8);
      v35 = 8;
LABEL_60:
      v29 = v49;
      goto LABEL_61;
    case 9:
      v37 = a1;
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v84 + 32))(a1, a2, v85);
      v35 = 9;
      goto LABEL_61;
    case 0xA:
      v63 = *(unsigned int *)(v23 + 84);
      v97 = (((v25 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
      v64 = *(_QWORD *)(v23 + 64) + 7;
      v101 = v22;
      v82 = v29;
      v37 = a1;
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v86))
      {
        memcpy(a1, a2, v83);
      }
      else
      {
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v20 + 32))(a1, a2, v86);
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v86);
      }
      v77 = ((unint64_t)a2 + v26) & v34;
      if (v63 < 0x7FFFFFFF)
      {
        v78 = *(_QWORD *)(((((v64 + v77) & 0xFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8) + 8);
        if (v78 >= 0xFFFFFFFF)
          LODWORD(v78) = -1;
        if ((_DWORD)v78 != -1)
          goto LABEL_52;
      }
      else if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(((unint64_t)a2 + v26) & v34, v63, v101))
      {
LABEL_52:
        memcpy((void *)(((unint64_t)a1 + v26) & v34), (const void *)(((unint64_t)a2 + v26) & v34), v97);
        goto LABEL_57;
      }
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v23 + 32))(((unint64_t)a1 + v26) & v34, ((unint64_t)a2 + v26) & v34, v101);
      v79 = (_OWORD *)((v64 + (((unint64_t)a1 + v26) & v34)) & 0xFFFFFFFFFFFFFFF8);
      v80 = (_OWORD *)((v64 + v77) & 0xFFFFFFFFFFFFFFF8);
      *v79 = *v80;
      *(_OWORD *)(((unint64_t)v79 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v80 + 23) & 0xFFFFFFFFFFFFF8);
LABEL_57:
      v35 = 10;
      v29 = v82;
LABEL_61:
      *((_BYTE *)v37 + v29) = v35;
      return v37;
    case 0xB:
      v37 = a1;
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v35 = 11;
      goto LABEL_61;
    default:
      if (v29 <= 3)
        v30 = v29;
      else
        v30 = 4;
      __asm { BR              X13 }
      return result;
  }
}

uint64_t sub_23FD60284(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  size_t v10;
  size_t v11;
  size_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  int v25;
  size_t v26;
  size_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  _OWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  __int128 v48;
  uint64_t v49;
  int v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  _OWORD *v55;
  _OWORD *v56;
  uint64_t v57;
  uint64_t v58;
  _OWORD *v59;
  _OWORD *v60;
  const void *v61;
  _OWORD *v62;
  _OWORD *v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  const void *v67;
  __int128 v68;
  const void *v69;
  const void *v70;
  unint64_t v71;
  _OWORD *v72;
  _OWORD *v73;
  _OWORD *v74;
  _OWORD *v75;
  _OWORD *v76;
  _OWORD *v77;
  _OWORD *v78;
  _OWORD *v79;
  _OWORD *v80;
  _OWORD *v81;
  _OWORD *v82;
  _OWORD *v83;
  void *v84;
  const void *v85;
  int v86;
  unint64_t v87;
  _OWORD *v88;
  _OWORD *v89;
  uint64_t result;
  size_t __n;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  size_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  size_t v107;
  uint64_t v108;
  size_t v109;
  uint64_t v110;
  unsigned int v111;
  uint64_t v113;

  v3 = a1;
  if ((_OWORD *)a1 != a2)
  {
    v105 = sub_23FD747C8();
    v5 = *(_QWORD *)(v105 - 8);
    v110 = *(unsigned __int8 *)(v5 + 80);
    v103 = v5;
    v104 = *(_QWORD *)(v5 + 64) + 7;
    v6 = sub_23FD74840();
    v7 = *(_QWORD *)(v6 - 8);
    v8 = *(unsigned __int8 *)(v7 + 80);
    v9 = *(_DWORD *)(v7 + 84);
    v108 = v7;
    v10 = *(_QWORD *)(v7 + 64);
    if (v9)
      v11 = v10;
    else
      v11 = v10 + 1;
    v107 = v11;
    v12 = v11 + 7;
    v13 = (v11 + 7 + ((v8 + 24) & ~v8)) & 0xFFFFFFFFFFFFFFF8;
    v14 = v3;
    v15 = ((((v13 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
    v16 = sub_23FD74798();
    v17 = *(_QWORD *)(v16 - 8);
    v18 = *(unsigned __int8 *)(v17 + 80);
    v100 = v17;
    v101 = *(_QWORD *)(v17 + 64) + v8;
    v102 = v16;
    v19 = v8;
    v109 = v12;
    v20 = ((((((v12 + ((v101 + ((v18 + 40) & ~v18)) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
        + 16;
    v21 = v13 + 16;
    v22 = sub_23FD73E38();
    v97 = *(_QWORD *)(v22 - 8);
    v98 = v22;
    v23 = *(_QWORD *)(v97 + 64);
    v106 = *(_QWORD *)(a3 + 16);
    v24 = *(_QWORD *)(v106 - 8);
    v25 = *(_DWORD *)(v24 + 84);
    v93 = v24;
    v26 = *(_QWORD *)(v24 + 64);
    if (v25)
      v27 = v26;
    else
      v27 = v26 + 1;
    v28 = sub_23FD71474();
    v29 = *(_QWORD *)(v28 - 8);
    v30 = *(_DWORD *)(v29 + 84);
    v31 = *(_DWORD *)(v29 + 80) & 0xF8 | 7;
    v92 = v29;
    v94 = *(_QWORD *)(v29 + 64) + 7;
    v95 = v28;
    __n = v27;
    v99 = v27 + v31;
    v32 = (((v94 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 + ((v27 + v31) & ~v31);
    if (v15 <= ((((v104 + ((v110 + 40) & ~v110)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16)
      v33 = ((((v104 + ((v110 + 40) & ~v110)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
    else
      v33 = v15;
    v3 = v14;
    if (v33 <= v20)
      v33 = v20;
    if (v33 <= v21)
      v33 = v21;
    if (v33 > v32)
      v32 = v33;
    if (v32 <= v23)
      v32 = v23;
    if (v32 <= 0x40)
      v34 = 64;
    else
      v34 = v32;
    v35 = *(unsigned __int8 *)(v14 + v34);
    v37 = v6;
    v39 = v110;
    v38 = a2;
    v40 = v18;
    v96 = ~v110;
    v41 = ~v19;
    v42 = ~v18;
    v113 = ~v31;
    v111 = v30;
    switch(v35)
    {
      case 0:
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        goto LABEL_37;
      case 1:
      case 2:
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_37;
      case 3:
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v103 + 8))((((v3 + 31) & 0xFFFFFFFFFFFFFFF8) + v39 + 16) & v96, v105);
        goto LABEL_36;
      case 4:
      case 7:
        swift_bridgeObjectRelease();

        v43 = v3 + v19 + 24;
        goto LABEL_33;
      case 5:
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        v44 = (((v3 + 31) & 0xFFFFFFFFFFFFFFF8) + v40 + 16) & v42;
        (*(void (**)(unint64_t, uint64_t))(v100 + 8))(v44, v102);
        v43 = v101 + v44;
LABEL_33:
        v45 = v43 & v41;
        if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v43 & v41, 1, v37))
          (*(void (**)(uint64_t, uint64_t))(v108 + 8))(v45, v37);
        swift_bridgeObjectRelease();
        goto LABEL_36;
      case 6:
LABEL_36:
        swift_bridgeObjectRelease();
        goto LABEL_37;
      case 8:
        swift_bridgeObjectRelease();

        if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((v3 + v19 + 24) & v41, 1, v37))(*(void (**)(uint64_t, uint64_t))(v108 + 8))((v3 + v19 + 24) & v41, v37);
LABEL_37:
        swift_release();
        break;
      case 9:
        (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v3, v98);
        break;
      case 10:
        if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v3, 1, v106))
          (*(void (**)(uint64_t, uint64_t))(v93 + 8))(v3, v106);
        v49 = (v99 + v3) & v113;
        if (v111 < 0x7FFFFFFF)
        {
          v71 = *(_QWORD *)(((((v94 + v49) & 0xFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8) + 8);
          if (v71 >= 0xFFFFFFFF)
            LODWORD(v71) = -1;
          v50 = v71 + 1;
        }
        else
        {
          v50 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((v99 + v3) & v113, v111, v95);
        }
        if (!v50)
        {
          (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v49, v95);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        break;
      case 11:

        break;
      default:
        if (v34 <= 3)
          v36 = v34;
        else
          v36 = 4;
        __asm { BR              X13 }
        return result;
    }
    switch(*((_BYTE *)v38 + v34))
    {
      case 0:
        v47 = 0;
        v48 = v38[1];
        *(_OWORD *)v3 = *v38;
        *(_OWORD *)(v3 + 16) = v48;
        *(_OWORD *)(v3 + 32) = v38[2];
        *(_QWORD *)(v3 + 48) = *((_QWORD *)v38 + 6);
        break;
      case 1:
        v51 = v38[1];
        *(_OWORD *)v3 = *v38;
        *(_OWORD *)(v3 + 16) = v51;
        v52 = v38[3];
        *(_OWORD *)(v3 + 32) = v38[2];
        *(_OWORD *)(v3 + 48) = v52;
        v47 = 1;
        break;
      case 2:
        v53 = v38[1];
        *(_OWORD *)v3 = *v38;
        *(_OWORD *)(v3 + 16) = v53;
        v54 = v38[3];
        *(_OWORD *)(v3 + 32) = v38[2];
        *(_OWORD *)(v3 + 48) = v54;
        v47 = 2;
        break;
      case 3:
        *(_OWORD *)v3 = *v38;
        *(_QWORD *)(v3 + 16) = *((_QWORD *)v38 + 2);
        v55 = (_OWORD *)((v3 + 31) & 0xFFFFFFFFFFFFFFF8);
        v56 = (_OWORD *)(((unint64_t)v38 + 31) & 0xFFFFFFFFFFFFFFF8);
        *v55 = *v56;
        v57 = ((unint64_t)v55 + v39 + 16) & v96;
        v58 = ((unint64_t)v56 + v39 + 16) & v96;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v103 + 32))(v57, v58, v105);
        v59 = (_OWORD *)((v104 + v57) & 0xFFFFFFFFFFFFFFF8);
        v60 = (_OWORD *)((v104 + v58) & 0xFFFFFFFFFFFFFFF8);
        *v59 = *v60;
        *(_OWORD *)(((unint64_t)v59 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v60 + 23) & 0xFFFFFFFFFFFFF8);
        v47 = 3;
        break;
      case 4:
        *(_OWORD *)v3 = *v38;
        *(_QWORD *)(v3 + 16) = *((_QWORD *)v38 + 2);
        v61 = (const void *)(((unint64_t)v38 + v19 + 24) & v41);
        if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v61, 1, v37))
        {
          memcpy((void *)((v3 + v19 + 24) & v41), v61, v107);
        }
        else
        {
          (*(void (**)(uint64_t, const void *, uint64_t))(v108 + 32))((v3 + v19 + 24) & v41, v61, v37);
          _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((v3 + v19 + 24) & v41, 0, 1, v37);
        }
        v72 = (_OWORD *)((v109 + ((v3 + v19 + 24) & v41)) & 0xFFFFFFFFFFFFFFF8);
        v73 = (_OWORD *)(((unint64_t)v61 + v109) & 0xFFFFFFFFFFFFFFF8);
        *v72 = *v73;
        v74 = (_OWORD *)(((unint64_t)v72 + 23) & 0xFFFFFFFFFFFFFFF8);
        v75 = (_OWORD *)(((unint64_t)v73 + 23) & 0xFFFFFFFFFFFFFFF8);
        *v74 = *v75;
        *(_OWORD *)(((unint64_t)v74 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v75 + 23) & 0xFFFFFFFFFFFFF8);
        v47 = 4;
        break;
      case 5:
        *(_OWORD *)v3 = *v38;
        *(_QWORD *)(v3 + 16) = *((_QWORD *)v38 + 2);
        v62 = (_OWORD *)((v3 + 31) & 0xFFFFFFFFFFFFFFF8);
        v63 = (_OWORD *)(((unint64_t)v38 + 31) & 0xFFFFFFFFFFFFFFF8);
        *v62 = *v63;
        v64 = ((unint64_t)v62 + v40 + 16) & v42;
        v65 = ((unint64_t)v63 + v40 + 16) & ~v40;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v100 + 32))(v64, v65, v102);
        v66 = (void *)((v101 + v64) & v41);
        v67 = (const void *)((v101 + v65) & v41);
        if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v67, 1, v37))
        {
          memcpy(v66, v67, v107);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v108 + 32))(v66, v67, v37);
          _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v66, 0, 1, v37);
        }
        v76 = (_OWORD *)(((unint64_t)v66 + v109) & 0xFFFFFFFFFFFFFFF8);
        v77 = (_OWORD *)(((unint64_t)v67 + v109) & 0xFFFFFFFFFFFFFFF8);
        *v76 = *v77;
        v78 = (_OWORD *)(((unint64_t)v76 + 23) & 0xFFFFFFFFFFFFFFF8);
        v79 = (_OWORD *)(((unint64_t)v77 + 23) & 0xFFFFFFFFFFFFFFF8);
        *v78 = *v79;
        *(_OWORD *)(((unint64_t)v78 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v79 + 23) & 0xFFFFFFFFFFFFF8);
        v47 = 5;
        break;
      case 6:
        v68 = v38[1];
        *(_OWORD *)v3 = *v38;
        *(_OWORD *)(v3 + 16) = v68;
        v47 = 6;
        break;
      case 7:
        *(_OWORD *)v3 = *v38;
        *(_QWORD *)(v3 + 16) = *((_QWORD *)v38 + 2);
        v69 = (const void *)(((unint64_t)v38 + v19 + 24) & v41);
        if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v69, 1, v37))
        {
          memcpy((void *)((v3 + v19 + 24) & v41), v69, v107);
        }
        else
        {
          (*(void (**)(uint64_t, const void *, uint64_t))(v108 + 32))((v3 + v19 + 24) & v41, v69, v37);
          _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((v3 + v19 + 24) & v41, 0, 1, v37);
        }
        v80 = (_OWORD *)((v109 + ((v3 + v19 + 24) & v41)) & 0xFFFFFFFFFFFFFFF8);
        v81 = (_OWORD *)(((unint64_t)v69 + v109) & 0xFFFFFFFFFFFFFFF8);
        *v80 = *v81;
        v82 = (_OWORD *)(((unint64_t)v80 + 23) & 0xFFFFFFFFFFFFFFF8);
        v83 = (_OWORD *)(((unint64_t)v81 + 23) & 0xFFFFFFFFFFFFFFF8);
        *v82 = *v83;
        *(_OWORD *)(((unint64_t)v82 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v83 + 23) & 0xFFFFFFFFFFFFF8);
        v47 = 7;
        break;
      case 8:
        *(_OWORD *)v3 = *v38;
        *(_QWORD *)(v3 + 16) = *((_QWORD *)v38 + 2);
        v70 = (const void *)(((unint64_t)v38 + v19 + 24) & v41);
        if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v70, 1, v37))
        {
          memcpy((void *)((v3 + v19 + 24) & v41), v70, v107);
        }
        else
        {
          (*(void (**)(uint64_t, const void *, uint64_t))(v108 + 32))((v3 + v19 + 24) & v41, v70, v37);
          _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((v3 + v19 + 24) & v41, 0, 1, v37);
        }
        *(_OWORD *)((v109 + ((v3 + v19 + 24) & v41)) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v70 + v109) & 0xFFFFFFFFFFFFF8);
        v47 = 8;
        break;
      case 9:
        (*(void (**)(uint64_t, _OWORD *, uint64_t))(v97 + 32))(v3, v38, v98);
        v47 = 9;
        break;
      case 0xA:
        if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v38, 1, v106))
        {
          memcpy((void *)v3, v38, __n);
        }
        else
        {
          (*(void (**)(uint64_t, _OWORD *, uint64_t))(v93 + 32))(v3, v38, v106);
          _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v3, 0, 1, v106);
        }
        v84 = (void *)((v99 + v3) & v113);
        v85 = (const void *)(((unint64_t)v38 + v99) & v113);
        if (v111 < 0x7FFFFFFF)
        {
          v87 = *(_QWORD *)((((((unint64_t)v85 + v94) & 0xFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8) + 8);
          if (v87 >= 0xFFFFFFFF)
            LODWORD(v87) = -1;
          v86 = v87 + 1;
        }
        else
        {
          v86 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(((unint64_t)v38 + v99) & v113, v111, v95);
        }
        if (v86)
        {
          memcpy(v84, v85, (((v94 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v92 + 32))(v84, v85, v95);
          v88 = (_OWORD *)(((unint64_t)v84 + v94) & 0xFFFFFFFFFFFFFFF8);
          v89 = (_OWORD *)(((unint64_t)v85 + v94) & 0xFFFFFFFFFFFFFFF8);
          *v88 = *v89;
          *(_OWORD *)(((unint64_t)v88 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v89 + 23) & 0xFFFFFFFFFFFFF8);
        }
        v47 = 10;
        break;
      case 0xB:
        *(_QWORD *)v3 = *(_QWORD *)v38;
        v47 = 11;
        break;
      default:
        if (v34 <= 3)
          v46 = v34;
        else
          v46 = 4;
        __asm { BR              X12 }
        return result;
    }
    *(_BYTE *)(v3 + v34) = v47;
  }
  return v3;
}

uint64_t sub_23FD60DDC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  int v31;
  unsigned int v33;
  int v34;
  unsigned int v35;

  v4 = sub_23FD747C8();
  v5 = ((((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64)
         + ((*(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80))
         + 7) & 0xFFFFFFFFFFFFFFF8)
       + 23) & 0xFFFFFFFFFFFFFFF8)
     + 16;
  v6 = *(_QWORD *)(sub_23FD74840() - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_DWORD *)(v6 + 84);
  v9 = *(_QWORD *)(v6 + 64);
  v10 = *(_QWORD *)(sub_23FD74798() - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = *(_QWORD *)(v10 + 64);
  v13 = *(_QWORD *)(*(_QWORD *)(sub_23FD73E38() - 8) + 64);
  v14 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  LODWORD(a3) = *(_DWORD *)(v14 + 84);
  v15 = *(_QWORD *)(v14 + 64);
  v16 = sub_23FD71474();
  if ((_DWORD)a3)
    v17 = v15;
  else
    v17 = v15 + 1;
  v18 = *(_QWORD *)(v16 - 8);
  v19 = *(_DWORD *)(v18 + 80) & 0xF8 | 7;
  v20 = ((((*(_QWORD *)(v18 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + ((v17 + v19) & ~v19);
  if (v8)
    v21 = v9;
  else
    v21 = v9 + 1;
  v22 = v21 + 7;
  v23 = (v22 + ((v7 + 24) & ~v7)) & 0xFFFFFFFFFFFFFFF8;
  v24 = ((((v23 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v5 <= v24)
    v25 = ((((v23 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  else
    v25 = v5;
  v26 = ((((((v22 + ((v12 + v7 + ((v11 + 40) & ~v11)) & ~v7)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v25 > v26)
    v26 = v25;
  if (v26 <= v24)
    v26 = ((((v23 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v26 <= v23 + 16)
    v26 = v23 + 16;
  if (v26 <= v13)
    v26 = v13;
  v27 = v20 + 16;
  if (v26 > v27)
    v27 = v26;
  v28 = 64;
  if (v27 > 0x40)
    v28 = v27;
  if (!a2)
    return 0;
  if (a2 < 0xF5)
    goto LABEL_40;
  v29 = v28 + 1;
  v30 = 8 * (v28 + 1);
  if ((v28 + 1) <= 3)
  {
    v33 = ((a2 + ~(-1 << v30) - 244) >> v30) + 1;
    if (HIWORD(v33))
    {
      v31 = *(_DWORD *)(a1 + v29);
      if (!v31)
        goto LABEL_40;
      goto LABEL_33;
    }
    if (v33 > 0xFF)
    {
      v31 = *(unsigned __int16 *)(a1 + v29);
      if (!*(_WORD *)(a1 + v29))
        goto LABEL_40;
      goto LABEL_33;
    }
    if (v33 < 2)
    {
LABEL_40:
      v35 = *(unsigned __int8 *)(a1 + v28);
      if (v35 >= 0xC)
        return (v35 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v31 = *(unsigned __int8 *)(a1 + v29);
  if (!*(_BYTE *)(a1 + v29))
    goto LABEL_40;
LABEL_33:
  v34 = (v31 - 1) << v30;
  if (v29 > 3)
    v34 = 0;
  if ((_DWORD)v29)
  {
    if (v29 > 3)
      LODWORD(v29) = 4;
    __asm { BR              X11 }
  }
  return (v34 + 245);
}

void sub_23FD61088(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  size_t v29;
  char v30;
  _BYTE *v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  int v36;

  v5 = sub_23FD747C8();
  v6 = ((((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64)
         + ((*(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80))
         + 7) & 0xFFFFFFFFFFFFFFF8)
       + 23) & 0xFFFFFFFFFFFFFFF8)
     + 16;
  v7 = *(_QWORD *)(sub_23FD74840() - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_DWORD *)(v7 + 84);
  v10 = *(_QWORD *)(v7 + 64);
  v11 = *(_QWORD *)(sub_23FD74798() - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = *(_QWORD *)(v11 + 64);
  v14 = *(_QWORD *)(*(_QWORD *)(sub_23FD73E38() - 8) + 64);
  v15 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  LODWORD(a4) = *(_DWORD *)(v15 + 84);
  v16 = *(_QWORD *)(v15 + 64);
  v17 = sub_23FD71474();
  if ((_DWORD)a4)
    v18 = v16;
  else
    v18 = v16 + 1;
  v19 = *(_QWORD *)(v17 - 8);
  v20 = *(_DWORD *)(v19 + 80) & 0xF8 | 7;
  v21 = ((((*(_QWORD *)(v19 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + ((v18 + v20) & ~v20);
  if (v9)
    v22 = v10;
  else
    v22 = v10 + 1;
  v23 = v22 + 7;
  v24 = (v23 + ((v8 + 24) & ~v8)) & 0xFFFFFFFFFFFFFFF8;
  v25 = ((((v24 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v6 <= v25)
    v26 = ((((v24 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  else
    v26 = v6;
  v27 = ((((((v23 + ((v13 + v8 + ((v12 + 40) & ~v12)) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v26 > v27)
    v27 = v26;
  if (v27 <= v25)
    v27 = ((((v24 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v27 <= v24 + 16)
    v27 = v24 + 16;
  if (v27 <= v14)
    v27 = v14;
  v28 = v21 + 16;
  if (v27 > v28)
    v28 = v27;
  if (v28 <= 0x40)
    v28 = 64;
  v29 = v28 + 1;
  v30 = 8 * (v28 + 1);
  if (a3 < 0xF5)
  {
    v33 = 0;
    v31 = a1;
    v32 = a2;
  }
  else
  {
    v31 = a1;
    v32 = a2;
    if (v29 <= 3)
    {
      v35 = ((a3 + ~(-1 << v30) - 244) >> v30) + 1;
      if (HIWORD(v35))
      {
        v33 = 4u;
      }
      else if (v35 >= 0x100)
      {
        v33 = 2;
      }
      else
      {
        v33 = v35 > 1;
      }
    }
    else
    {
      v33 = 1u;
    }
  }
  if (v32 <= 0xF4)
    __asm { BR              X11 }
  v34 = v32 - 245;
  if (v29 < 4)
  {
    if ((_DWORD)v28 != -1)
    {
      v36 = v34 & ~(-1 << v30);
      bzero(v31, v29);
      if ((_DWORD)v29 == 3)
      {
        *(_WORD *)v31 = v36;
        v31[2] = BYTE2(v36);
      }
      else if ((_DWORD)v29 == 2)
      {
        *(_WORD *)v31 = v36;
      }
      else
      {
        *v31 = v36;
      }
    }
  }
  else
  {
    bzero(v31, v28 + 1);
    *(_DWORD *)v31 = v34;
  }
  __asm { BR              X10 }
}

uint64_t sub_23FD613AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t result;
  uint64_t v26;

  v4 = sub_23FD747C8();
  v5 = ((((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64)
         + ((*(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80))
         + 7) & 0xFFFFFFFFFFFFFFF8)
       + 23) & 0xFFFFFFFFFFFFFFF8)
     + 16;
  v6 = *(_QWORD *)(sub_23FD74840() - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_DWORD *)(v6 + 84);
  v9 = *(_QWORD *)(v6 + 64);
  if (!v8)
    ++v9;
  v10 = v9 + 7;
  v11 = (v9 + 7 + ((v7 + 24) & ~v7)) & 0xFFFFFFFFFFFFFFF8;
  v12 = ((((v11 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  v13 = sub_23FD74798();
  v14 = ((((((v10
            + ((*(_QWORD *)(*(_QWORD *)(v13 - 8) + 64)
              + v7
              + ((*(unsigned __int8 *)(*(_QWORD *)(v13 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v13 - 8) + 80))) & ~v7)) & 0xFFFFFFFFFFFFFFF8)
          + 23) & 0xFFFFFFFFFFFFFFF8)
        + 23) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  v15 = v11 + 16;
  v16 = *(_QWORD *)(*(_QWORD *)(sub_23FD73E38() - 8) + 64);
  v17 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v18 = *(_DWORD *)(v17 + 84);
  v19 = *(_QWORD *)(v17 + 64);
  if (v18)
    v20 = v19;
  else
    v20 = v19 + 1;
  v21 = *(_QWORD *)(sub_23FD71474() - 8);
  v22 = *(_DWORD *)(v21 + 80) & 0xF8 | 7;
  v23 = ((((*(_QWORD *)(v21 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
      + ((v20 + v22) & ~v22)
      + 16;
  if (v12 <= v5)
    v24 = v5;
  else
    v24 = v12;
  if (v24 <= v14)
    v24 = v14;
  if (v24 <= v15)
    v24 = v15;
  if (v24 > v23)
    v23 = v24;
  if (v23 <= v16)
    v23 = v16;
  if (v23 <= 0x40)
    v23 = 64;
  result = *(unsigned __int8 *)(a1 + v23);
  if (result >= 0xC)
  {
    if (v23 <= 3)
      v26 = v23;
    else
      v26 = 4;
    __asm { BR              X12 }
  }
  return result;
}

uint64_t sub_23FD615B4(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  size_t v29;
  char v30;
  int v31;

  v6 = sub_23FD747C8();
  v7 = ((((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64)
         + ((*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80))
         + 7) & 0xFFFFFFFFFFFFFFF8)
       + 23) & 0xFFFFFFFFFFFFFFF8)
     + 16;
  v8 = *(_QWORD *)(sub_23FD74840() - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = *(_DWORD *)(v8 + 84);
  v11 = *(_QWORD *)(v8 + 64);
  if (!v10)
    ++v11;
  v12 = v11 + 7;
  v13 = (v11 + 7 + ((v9 + 24) & ~v9)) & 0xFFFFFFFFFFFFFFF8;
  v14 = (((v13 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  v15 = v14 + 16;
  if (v7 <= v14 + 16)
    v7 = v14 + 16;
  v16 = sub_23FD74798();
  v17 = ((((((v12
            + ((*(_QWORD *)(*(_QWORD *)(v16 - 8) + 64)
              + v9
              + ((*(unsigned __int8 *)(*(_QWORD *)(v16 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v16 - 8) + 80))) & ~v9)) & 0xFFFFFFFFFFFFFFF8)
          + 23) & 0xFFFFFFFFFFFFFFF8)
        + 23) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v7 > v17)
    v17 = v7;
  if (v17 <= v15)
    v17 = v15;
  if (v17 <= v13 + 16)
    v18 = v13 + 16;
  else
    v18 = v17;
  v19 = sub_23FD73E38();
  if (v18 <= *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64))
    v18 = *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64);
  v20 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v21 = *(_DWORD *)(v20 + 84);
  v22 = *(_QWORD *)(v20 + 64);
  if (v21)
    v23 = v22;
  else
    v23 = v22 + 1;
  result = sub_23FD71474();
  v25 = *(_QWORD *)(result - 8);
  v26 = *(_DWORD *)(v25 + 80) & 0xF8 | 7;
  if (a2 > 0xB)
  {
    v28 = ((((*(_QWORD *)(v25 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
        + ((v23 + v26) & ~v26)
        + 16;
    if (v18 > v28)
      v28 = v18;
    if (v28 <= 0x40)
      v29 = 64;
    else
      v29 = v28;
    if (v29 <= 3)
      v30 = ((a2 - 12) >> (8 * v29)) + 12;
    else
      v30 = 12;
    a1[v29] = v30;
    if (v29 >= 4)
      v31 = 4;
    else
      v31 = v29;
    bzero(a1, v29);
    __asm { BR              X10 }
  }
  v27 = ((((*(_QWORD *)(v25 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
      + ((v23 + v26) & ~v26)
      + 16;
  if (v18 > v27)
    v27 = v18;
  if (v27 <= 0x40)
    v27 = 64;
  a1[v27] = a2;
  return result;
}

void sub_23FD61820()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256F657D0)
  {
    sub_23FD74840();
    v0 = sub_23FD75038();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256F657D0);
  }
}

uint64_t sub_23FD61874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23FD5B4D4(a1, a2, a3, a4);
  return swift_release();
}

uint64_t sub_23FD61898(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v13;

  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_23FC586E4;
  return sub_23FD5B514(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_23FD6192C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v15;

  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v15;
  *v15 = v7;
  v15[1] = sub_23FC586E4;
  return sub_23FD5B7F8(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_23FD619CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v15;

  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v15;
  *v15 = v7;
  v15[1] = sub_23FC586E4;
  return sub_23FD5BABC(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_23FD61A6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v16;

  v16 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 16) = v16;
  *v16 = v8;
  v16[1] = sub_23FC586E4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_23FD5BD50)(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_23FD61B20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v16;

  v16 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 16) = v16;
  *v16 = v8;
  v16[1] = sub_23FC586E4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_23FD5C424)(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_23FD61BD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v13;

  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 16) = v13;
  *v13 = v8;
  v13[1] = sub_23FC586E4;
  return sub_23FD5C704(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_23FD61C84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;

  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_23FC586E4;
  return sub_23FD5C12C(a1, a2, a3, a4, a5);
}

uint64_t sub_23FD61D08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23FC586E4;
  return sub_23FD5CB08(a1, a2, a3);
}

uint64_t sub_23FD61D74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v16;

  v16 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 16) = v16;
  *v16 = v8;
  v16[1] = sub_23FC586E4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_23FD5CDB0)(a1, a2, a3, a4, a5, a6, a7, a8);
}

void sub_23FD61E28()
{
  JUMPOUT(0x2426797E8);
}

uint64_t sub_23FD61E38(uint64_t a1)
{
  return sub_23FD61F94(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23FD5CE40);
}

uint64_t sub_23FD61E44()
{
  return sub_23FD620D0(&qword_256F65AE8);
}

uint64_t sub_23FD61E50(uint64_t a1)
{
  return sub_23FD61EA0(a1, &qword_256F65AE8, (uint64_t)MEMORY[0x24BEBA3D8], (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t *))sub_23FD5D090);
}

uint64_t sub_23FD61E6C(uint64_t a1)
{
  uint64_t *v1;

  return sub_23FD5CBF0(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_23FD61E78()
{
  return sub_23FD620D0(&qword_256F65AF8);
}

uint64_t sub_23FD61E84(uint64_t a1)
{
  return sub_23FD61EA0(a1, &qword_256F65AF8, (uint64_t)MEMORY[0x24BEBA3F8], (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t *))sub_23FD5D090);
}

uint64_t sub_23FD61EA0(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t *))
{
  uint64_t v4;
  uint64_t v9;

  v9 = *(unsigned __int8 *)(*(_QWORD *)(sub_23FBFD684(a2) - 8) + 80);
  return a4(a1, v4 + ((v9 + 16) & ~v9), a3, a2);
}

uint64_t sub_23FD61F04(uint64_t a1)
{
  uint64_t v1;

  return sub_23FD5C22C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t sub_23FD61F14()
{
  return sub_23FD620D0(&qword_256F65B08);
}

uint64_t sub_23FD61F20(uint64_t a1)
{
  return sub_23FD61EA0(a1, &qword_256F65B08, (uint64_t)MEMORY[0x24BEB91A0], (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t *))sub_23FD5D090);
}

uint64_t sub_23FD61F3C(uint64_t a1)
{
  uint64_t v1;

  return sub_23FD5C854(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 104));
}

uint64_t sub_23FD61F7C()
{
  return sub_23FD620D0(&qword_256F65AE8);
}

uint64_t sub_23FD61F88(uint64_t a1)
{
  return sub_23FD61F94(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23FD5C4B4);
}

uint64_t sub_23FD61F94(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], v2[8], v2[9], v2[10]);
}

uint64_t sub_23FD61FCC()
{
  return sub_23FD620D0(&qword_256F65AE8);
}

uint64_t sub_23FD61FD8(uint64_t a1)
{
  uint64_t v1;

  return sub_23FD5BE64(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80));
}

uint64_t sub_23FD6200C()
{
  return sub_23FD620D0(&qword_256F65B28);
}

uint64_t sub_23FD62018(uint64_t a1)
{
  return sub_23FD61EA0(a1, &qword_256F65B28, (uint64_t)&qword_256F65420, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t *))sub_23FD5C0B8);
}

uint64_t sub_23FD62034(uint64_t a1)
{
  return sub_23FD62074(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23FD5BB64);
}

uint64_t sub_23FD62040()
{
  return sub_23FD620D0(&qword_256F65B38);
}

uint64_t sub_23FD6204C(uint64_t a1)
{
  return sub_23FD61EA0(a1, &qword_256F65B38, (uint64_t)&qword_256F65468, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t *))sub_23FD5C0B8);
}

uint64_t sub_23FD62068(uint64_t a1)
{
  return sub_23FD62074(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23FD5B8D0);
}

uint64_t sub_23FD62074(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], v2[8]);
}

uint64_t sub_23FD6208C()
{
  return sub_23FD620D0(&qword_256F65B48);
}

uint64_t sub_23FD62098(uint64_t a1)
{
  return sub_23FD61EA0(a1, &qword_256F65B48, (uint64_t)&qword_256F65478, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t *))sub_23FD5C0B8);
}

uint64_t sub_23FD620B4(uint64_t a1)
{
  uint64_t v1;

  return sub_23FD5B614(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

uint64_t sub_23FD620C4()
{
  return sub_23FD620D0(&qword_256F65B58);
}

uint64_t sub_23FD620D0(uint64_t *a1)
{
  uint64_t v1;

  v1 = sub_23FBFD684(a1);
  sub_23FC090C8(*(_QWORD *)(v1 - 8));
  return swift_deallocObject();
}

uint64_t sub_23FD62128(uint64_t a1)
{
  return sub_23FD61EA0(a1, &qword_256F65B58, (uint64_t)MEMORY[0x24BEB9078], (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t *))sub_23FD5D090);
}

uint64_t sub_23FD62144()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 40) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  swift_unknownObjectRelease();
  sub_23FBFF204(v0 + v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23FD621C8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  _QWORD *v12;

  v4 = v1[5];
  v5 = v1[6];
  sub_23FCBCE38();
  v7 = v1[2];
  v8 = v1[3];
  v10 = (uint64_t)v1 + v9;
  v11 = *(uint64_t **)((char *)v1 + (v6 & 0xFFFFFFFFFFFFF8));
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_23FC586E4;
  return sub_23FD5A5DC(a1, v7, v8, v10, v11, v4, v5);
}

uint64_t sub_23FD6226C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_23FC57F38;
  return sub_23FD5AF44(v0);
}

uint64_t sub_23FD622B4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;
  void (*v5)(uint64_t);

  sub_23FBFD684(a3);
  v4 = sub_23FD3D50C();
  v5(v4);
  return a2;
}

uint64_t sub_23FD622F4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 40) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(_QWORD *)(sub_23FC75FD8() - 8);
  v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(_QWORD *)(sub_23FBFD684(&qword_256F5EBD0) - 8);
  v8 = (v6 + *(unsigned __int8 *)(v7 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  swift_unknownObjectRelease();
  swift_release();
  sub_23FBFF204(v0 + v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_23FC595C4(v0 + v5, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  swift_bridgeObjectRelease();
  v9 = sub_23FD73124();
  if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v0 + v8, 1, v9))
    sub_23FC595C4(v0 + v8, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23FD62448(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23FBFD684(&qword_256F5EBD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23FD62490(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v3 = *(_QWORD *)(v1[5] - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(_QWORD *)(sub_23FC75FD8() - 8);
  v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = (*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_23FBFD684(&qword_256F5EBD0);
  sub_23FCBCE38();
  v9 = v1[2];
  v10 = v1[3];
  v11 = v1[7];
  v12 = *(_QWORD *)((char *)v1 + v8);
  v14 = (uint64_t)v1 + v13;
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v15;
  *v15 = v2;
  v15[1] = sub_23FC57F38;
  return sub_23FD5B008(a1, v9, v10, v11, (uint64_t)v1 + v4, (uint64_t)v1 + v7, v12, v14);
}

uint64_t sub_23FD625B8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_23FBFD684(a2);
  sub_23FBFF0E4(v3);
  return a1;
}

uint64_t sub_23FD625EC()
{
  return sub_23FD75350();
}

uint64_t sub_23FD62604()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[6] + 8))(v0[7], v0[5]);
}

uint64_t sub_23FD62638()
{
  return swift_task_switch();
}

uint64_t sub_23FD62648()
{
  return sub_23FD75350();
}

uint64_t sub_23FD62654()
{
  return swift_task_alloc();
}

uint64_t sub_23FD62690@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  *v1 = v2;
  v1[1] = a1;
  return *(_QWORD *)(v2 + 16);
}

__n128 sub_23FD6269C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, __n128 a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 result;

  *(_QWORD *)(v12 + 96) = a1;
  *(_QWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 24) = v15;
  *(_OWORD *)(a1 + 32) = a9;
  *(_QWORD *)(a1 + 48) = v11;
  *(_QWORD *)(a1 + 56) = v14;
  result = a10;
  *(__n128 *)(a1 + 64) = a10;
  *(_QWORD *)(a1 + 80) = v13;
  return result;
}

__n128 sub_23FD626C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, __n128 a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 result;

  *(_QWORD *)(v12 + 80) = a1;
  *(_QWORD *)(a1 + 16) = v10;
  *(_OWORD *)(a1 + 24) = a9;
  *(_QWORD *)(a1 + 40) = v13;
  result = a10;
  *(__n128 *)(a1 + 48) = a10;
  *(_QWORD *)(a1 + 64) = v11;
  return result;
}

uint64_t sub_23FD626EC()
{
  return swift_task_alloc();
}

uint64_t sub_23FD62708(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 160);
}

uint64_t sub_23FD6273C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t sub_23FD6274C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 104) = a1;
  return sub_23FD74978();
}

uint64_t sub_23FD6275C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  _QWORD *v10;

  v10[10] = a9;
  v10[11] = v9;
  v10[8] = a7;
  v10[9] = a8;
  v10[6] = a5;
  v10[7] = a6;
  v10[4] = a3;
  v10[5] = a4;
  v10[2] = result;
  v10[3] = a2;
  return result;
}

uint64_t sub_23FD62778@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  return type metadata accessor for ToolExecutionEvent(255, *(_QWORD *)(a3 + 80), a1, a2);
}

_QWORD *sub_23FD62784(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;

  result[2] = 0;
  result[3] = 0;
  result[4] = *(_QWORD *)(v2 - 128);
  result[5] = v1;
  return result;
}

void sub_23FD62798(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  uint8_t *v4;

  _os_log_impl(a1, a2, a3, a4, v4, 0xCu);
}

uint64_t sub_23FD627A4()
{
  return sub_23FD74E34();
}

uint64_t sub_23FD627B0()
{
  return sub_23FD74D8C();
}

uint64_t sub_23FD627BC@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_23FD627C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v1 = sub_23FBFD684(&qword_254346A28);
  MEMORY[0x24BDAC7A8](v1, v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23FD72BF0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5, v7);
  sub_23FC93074();
  sub_23FCD5044();
  v8 = sub_23FD72BE4();
  v9 = sub_23FD74F3C();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)sub_23FBFEFF4();
    *(_WORD *)v10 = 0;
    _os_log_impl(&dword_23FBF8000, v8, v9, "Registering ToolKitMonitor", v10, 2u);
    sub_23FBFEFA0();
  }

  sub_23FC595C4(v0, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  v11 = sub_23FC5DC5C();
  sub_23FBFF0F8((uint64_t)v4, v12, v13, v11);
  v14 = sub_23FC58A94();
  *(_QWORD *)(v14 + 16) = 0;
  *(_QWORD *)(v14 + 24) = 0;
  sub_23FC6126C((uint64_t)v4, (uint64_t)&unk_256F65BB0, v14);
  return swift_release();
}

uint64_t sub_23FD62904()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23FBFD684(&qword_254346D90);
  v0[23] = sub_23FC0901C();
  sub_23FBFD684(&qword_254346A08);
  v0[24] = sub_23FC0901C();
  v1 = sub_23FD72BF0();
  v0[25] = v1;
  v0[26] = *(_QWORD *)(v1 - 8);
  v0[27] = sub_23FC59C3C();
  v0[28] = sub_23FC59C3C();
  v0[29] = sub_23FC59C3C();
  v0[30] = sub_23FC59C3C();
  v2 = sub_23FD71E64();
  v0[31] = v2;
  v0[32] = *(_QWORD *)(v2 - 8);
  v0[33] = sub_23FC59C3C();
  v0[34] = sub_23FC59C3C();
  v0[35] = sub_23FC59C3C();
  sub_23FBFD684((uint64_t *)&unk_254346D00);
  v0[36] = sub_23FC59C3C();
  v0[37] = sub_23FC59C3C();
  v3 = sub_23FD723C8();
  v0[38] = v3;
  v0[39] = *(_QWORD *)(v3 - 8);
  v0[40] = sub_23FC0901C();
  sub_23FC5A9A8();
  return sub_23FC0907C();
}

#error "23FD62FD8: call analysis failed (funcsize=336)"

uint64_t sub_23FD63004()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;

  sub_23FC5D3A4();
  *v3 = *v2;
  *(_QWORD *)(v0 + 384) = v1;
  swift_task_dealloc();
  if (!v1)
    swift_release();
  sub_23FC5A9A8();
  return sub_23FC5A63C();
}

#error "23FD634FC: call analysis failed (funcsize=286)"

#error "23FD63720: call analysis failed (funcsize=253)"

uint64_t sub_23FD639DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v2 = sub_23FD72BF0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2, v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s23IntelligenceFlowRuntime0aB6DaemonV6logger2os6LoggerVvgZ_0();
  v7 = sub_23FD72BE4();
  v8 = sub_23FD74F6C();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_23FBF8000, v7, v8, "ToolKitMonitor received SIGTERM. Cancelling toolbox update.", v9, 2u);
    MEMORY[0x2426798D8](v9, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  sub_23FD73AF0();
  v10 = *MEMORY[0x24BE79840];
  v11 = sub_23FD72554();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(a1, v10, v11);
}

uint64_t sub_23FD63B08()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_23FBFD684(&qword_254346A28);
  v0[3] = swift_task_alloc();
  v1 = sub_23FD72BF0();
  v0[4] = v1;
  v0[5] = *(_QWORD *)(v1 - 8);
  v0[6] = swift_task_alloc();
  v0[7] = swift_task_alloc();
  v0[8] = swift_task_alloc();
  v0[9] = swift_task_alloc();
  v2 = sub_23FD723C8();
  v0[10] = v2;
  v0[11] = *(_QWORD *)(v2 - 8);
  v0[12] = swift_task_alloc();
  sub_23FBFD684(&qword_254346D38);
  v0[13] = swift_task_alloc();
  v3 = sub_23FBFD684(&qword_254346DE8);
  v0[14] = v3;
  v0[15] = *(_QWORD *)(v3 - 8);
  v0[16] = swift_task_alloc();
  v4 = sub_23FBFD684(&qword_254346DE0);
  v0[17] = v4;
  v0[18] = *(_QWORD *)(v4 - 8);
  v0[19] = swift_task_alloc();
  v5 = sub_23FBFD684(&qword_254346E08);
  v0[20] = v5;
  v0[21] = *(_QWORD *)(v5 - 8);
  v0[22] = swift_task_alloc();
  v6 = sub_23FBFD684(&qword_254346DA8);
  v0[23] = v6;
  v0[24] = *(_QWORD *)(v6 - 8);
  v0[25] = swift_task_alloc();
  v7 = sub_23FBFD684(&qword_254346DB0);
  v0[26] = v7;
  v0[27] = *(_QWORD *)(v7 - 8);
  v0[28] = swift_task_alloc();
  v8 = sub_23FBFD684(&qword_254346DB8);
  v0[29] = v8;
  v0[30] = *(_QWORD *)(v8 - 8);
  v0[31] = swift_task_alloc();
  v9 = sub_23FBFD684(&qword_254346DC0);
  v0[32] = v9;
  v0[33] = *(_QWORD *)(v9 - 8);
  v0[34] = swift_task_alloc();
  v10 = sub_23FBFD684(&qword_254346DD0);
  v0[35] = v10;
  v0[36] = *(_QWORD *)(v10 - 8);
  v0[37] = swift_task_alloc();
  v11 = sub_23FD74FF0();
  v0[38] = v11;
  v0[39] = *(_QWORD *)(v11 - 8);
  v0[40] = swift_task_alloc();
  v12 = sub_23FBFD684(&qword_254346DA0);
  v0[41] = v12;
  v0[42] = *(_QWORD *)(v12 - 8);
  v0[43] = swift_task_alloc();
  v0[44] = swift_task_alloc();
  v0[45] = swift_task_alloc();
  v0[46] = swift_task_alloc();
  v0[47] = type metadata accessor for ToolboxRebuildTrigger();
  v0[48] = swift_task_alloc();
  v0[49] = swift_task_alloc();
  v0[50] = swift_task_alloc();
  v13 = sub_23FBFD684(&qword_254346DF8);
  v0[51] = v13;
  v0[52] = *(_QWORD *)(v13 - 8);
  v0[53] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23FD63E44()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v1 = (uint64_t *)v0[50];
  v2 = v0[40];
  v31 = v0[39];
  v3 = v0[38];
  v4 = (void *)sub_23FCD5138();
  sub_23FD74DC8();
  *v1 = sub_23FD74BF4();
  v1[1] = v5;
  v6 = sub_23FD64D94();
  v8 = v7;

  v1[2] = v6;
  v1[3] = v8;
  sub_23FD7436C();
  v9 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  v10 = (void *)sub_23FD74FCC();
  sub_23FD74FFC();

  sub_23FD65114();
  sub_23FD74390();
  (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v2, v3);
  v11 = (void *)objc_opt_self();
  v12 = objc_msgSend(v11, sel_defaultCenter);
  if (qword_254346E10 != -1)
    swift_once();
  v32 = v0[35];
  v28 = v0[33];
  v27 = v0[30];
  v25 = v0[31];
  v26 = v0[27];
  v24 = v0[26];
  v22 = v0[28];
  v23 = v0[24];
  v20 = v0[22];
  v21 = v0[21];
  v30 = v0[15];
  v29 = v0[16];
  sub_23FD65A0C();

  sub_23FD657C0();
  sub_23FD65A00();
  v13 = objc_msgSend(v11, sel_defaultCenter);
  v14 = (void *)sub_23FD74BE8();
  sub_23FD65A0C();

  sub_23FD657C0();
  sub_23FD65A00();
  v15 = objc_msgSend(v11, sel_defaultCenter);
  v16 = (void *)sub_23FCD5138();
  sub_23FD65A0C();

  sub_23FD657C0();
  sub_23FD65A00();
  sub_23FD74378();
  sub_23FC177BC(&qword_254346E00, &qword_254346E08, MEMORY[0x24BDB9E20]);
  sub_23FC177BC(&qword_254346DF0, &qword_254346DF8, MEMORY[0x24BDB9DF8]);
  sub_23FD7439C();
  sub_23FC595C4(v20, *(uint64_t (**)(uint64_t, uint64_t))(v21 + 8));
  sub_23FC177BC(&qword_254346D98, &qword_254346DA0, MEMORY[0x24BDB96C0]);
  sub_23FD742A0();
  sub_23FD65A6C(v23);
  sub_23FD742AC();
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v22, v24);
  sub_23FD742B8();
  sub_23FC595C4(v25, *(uint64_t (**)(uint64_t, uint64_t))(v27 + 8));
  sub_23FD742C4();
  sub_23FD65A6C(v28);
  v17 = sub_23FC177BC(&qword_254346DC8, &qword_254346DD0, MEMORY[0x24BDB9870]);
  MEMORY[0x242678168](v32, v17);
  sub_23FD742F4();
  sub_23FC595C4(v29, *(uint64_t (**)(uint64_t, uint64_t))(v30 + 8));
  v0[54] = sub_23FC177BC(&qword_254346DD8, &qword_254346DE0, MEMORY[0x24BDB9BC0]);
  v18 = (_QWORD *)swift_task_alloc();
  v0[55] = v18;
  *v18 = v0;
  v18[1] = sub_23FD64384;
  return sub_23FD74DB0();
}

uint64_t sub_23FD64384()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23FC5D3A4();
  sub_23FD65B04(v2);
  if (v1)
    *(_QWORD *)(v0 + 448) = v1;
  else
    *(_DWORD *)(v0 + 496) = *MEMORY[0x24BE573D8];
  sub_23FC5A9A8();
  return sub_23FC5A63C();
}

uint64_t sub_23FD643DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  NSObject *v17;
  os_log_type_t v18;
  _BOOL4 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  NSObject *v27;
  _WORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  void (*v34)(uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v1 = *(_QWORD *)(v0 + 104);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v1, 1, *(_QWORD *)(v0 + 376)) == 1)
  {
    v2 = *(_QWORD *)(v0 + 424);
    v42 = *(_QWORD *)(v0 + 416);
    v43 = *(_QWORD *)(v0 + 408);
    v3 = *(_QWORD *)(v0 + 352);
    v40 = *(_QWORD *)(v0 + 360);
    v41 = *(_QWORD *)(v0 + 368);
    v4 = *(_QWORD *)(v0 + 344);
    v5 = *(_QWORD *)(v0 + 288);
    v6 = *(_QWORD *)(v0 + 296);
    v7 = *(_QWORD *)(v0 + 280);
    (*(void (**)(void))(*(_QWORD *)(v0 + 144) + 8))();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v6, v7);
    sub_23FCDE910(v4);
    sub_23FCDE910(v3);
    sub_23FCDE910(v40);
    sub_23FCDE910(v41);
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v2, v43);
    sub_23FC5B980();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_23FC5B2F4();
    sub_23FC5AB04();
    sub_23FC5AC3C();
    sub_23FC5A574();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_23FC5C980();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_23FC090D0();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_23FC5CDA8();
    sub_23FD65A50();
    __asm { BR              X0 }
  }
  v9 = *(unsigned int *)(v0 + 496);
  v11 = *(_QWORD *)(v0 + 88);
  v10 = *(_QWORD *)(v0 + 96);
  v12 = *(_QWORD *)(v0 + 80);
  sub_23FD65154(v1, *(_QWORD *)(v0 + 392));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 104))(v10, v9, v12);
  v13 = sub_23FD723BC();
  sub_23FD65A40();
  if ((v13 & 1) != 0)
  {
    v14 = *(_QWORD *)(v0 + 384);
    v15 = *(_QWORD *)(v0 + 392);
    v16 = *(NSObject **)(v0 + 72);
    _s23IntelligenceFlowRuntime0aB6DaemonV6logger2os6LoggerVvgZ_0();
    sub_23FD651D4(v15, v14);
    v17 = v16;
    sub_23FD72BE4();
    v18 = sub_23FC75640();
    v19 = os_log_type_enabled(v16, v18);
    v20 = *(_QWORD *)(v0 + 384);
    v21 = *(_QWORD *)(v0 + 72);
    v23 = *(_QWORD *)(v0 + 32);
    v22 = *(_QWORD *)(v0 + 40);
    if (v19)
    {
      v24 = sub_23FBFEFF4();
      v44 = sub_23FBFEFF4();
      *(_DWORD *)v24 = 136315138;
      v25 = *(_QWORD *)(v20 + 16);
      v26 = *(_QWORD *)(v20 + 24);
      swift_bridgeObjectRetain();
      *(_QWORD *)(v24 + 4) = sub_23FC9DC40(v25, v26, &v44);
      sub_23FC102FC();
      sub_23FD65198(v20);
      _os_log_impl(&dword_23FBF8000, v17, v18, "ToolKitMonitor: Got %s notification. Starting toolbox update.", (uint8_t *)v24, 0xCu);
      sub_23FBFF10C();
      sub_23FBFEFA0();
    }
    sub_23FD65198(*(_QWORD *)(v0 + 384));

    v34 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
    v34(v21, v23);
    *(_QWORD *)(v0 + 456) = v34;
    v35 = *(_QWORD *)(v0 + 24);
    v36 = *(_QWORD *)(v0 + 392) + *(int *)(*(_QWORD *)(v0 + 376) + 24);
    v37 = sub_23FC5DC5C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v35, v36, v37);
    sub_23FD65870();
    v38 = sub_23FC58A94();
    *(_QWORD *)(v38 + 16) = 0;
    *(_QWORD *)(v38 + 24) = 0;
    *(_QWORD *)(v0 + 464) = sub_23FC94B70(v35, (uint64_t)&unk_256F65BC0, v38);
    sub_23FC95068(v35);
    v39 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 472) = v39;
    sub_23FBFD684(&qword_254346E20);
    *v39 = v0;
    v39[1] = sub_23FD648DC;
    sub_23FD65A50();
    return sub_23FD74E7C();
  }
  else
  {
    v27 = *(NSObject **)(v0 + 56);
    sub_23FCD5044();
    sub_23FD72BE4();
    sub_23FC75640();
    if (sub_23FCDE794(v27))
    {
      v28 = (_WORD *)sub_23FBFEFF4();
      sub_23FC75DFC(v28);
      sub_23FC75350(&dword_23FBF8000, v29, v30, "ToolKitMonitor: Feature flag disabled. Skipping toolbox update.");
      sub_23FBFEFA0();
    }
    v31 = *(_QWORD *)(v0 + 392);

    sub_23FD65A40();
    sub_23FD65198(v31);
    v32 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 488) = v32;
    sub_23FD65834(v32);
    sub_23FD65A50();
    return sub_23FD74DB0();
  }
}

uint64_t sub_23FD6487C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 448);
  sub_23FBFD684(&qword_254346E20);
  swift_dynamicCast();
  return swift_willThrowTypedImpl();
}

uint64_t sub_23FD648DC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 480) = v0;
  swift_task_dealloc();
  sub_23FC5A9A8();
  return sub_23FC0907C();
}

uint64_t sub_23FD64934()
{
  uint64_t v0;
  NSObject *v1;
  _WORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(NSObject **)(v0 + 64);
  sub_23FCD5044();
  sub_23FD72BE4();
  sub_23FC75640();
  if (sub_23FCDE794(v1))
  {
    v2 = (_WORD *)sub_23FBFEFF4();
    sub_23FC75DFC(v2);
    sub_23FC75350(&dword_23FBF8000, v3, v4, "ToolKitMonitor: Indexing finished.");
    sub_23FBFEFA0();
  }
  swift_release();

  sub_23FD65A9C(*(_QWORD *)(v0 + 64));
  sub_23FD65198((uint64_t)v1);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 488) = v5;
  sub_23FD65834(v5);
  return sub_23FD74DB0();
}

uint64_t sub_23FD649E8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23FC5D3A4();
  sub_23FD65B04(v2);
  if (v1)
    *(_QWORD *)(v0 + 448) = v1;
  sub_23FC5A9A8();
  return sub_23FC5A63C();
}

uint64_t sub_23FD64A30()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  uint64_t v11;
  _QWORD *v12;

  v1 = *(void **)(v0 + 480);
  _s23IntelligenceFlowRuntime0aB6DaemonV6logger2os6LoggerVvgZ_0();
  v2 = v1;
  v3 = v1;
  v4 = sub_23FD72BE4();
  v5 = sub_23FD74F54();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(void **)(v0 + 480);
  if (v6)
  {
    v8 = sub_23FBFEFF4();
    v9 = (_QWORD *)sub_23FBFEFF4();
    *(_DWORD *)v8 = 138412290;
    v10 = v7;
    v11 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v8 + 4) = v11;
    *v9 = v11;
    sub_23FC761C4();
    sub_23FC761C4();
    _os_log_impl(&dword_23FBF8000, v4, v5, "ToolKitMonitor: Indexing failed with %@.", (uint8_t *)v8, 0xCu);
    sub_23FBFD684(&qword_254346A30);
    sub_23FBFF10C();
    sub_23FBFEFA0();
  }
  sub_23FC101F4();

  sub_23FC761C4();
  sub_23FC761C4();

  sub_23FD65A9C(*(_QWORD *)(v0 + 48));
  sub_23FD65198((uint64_t)v4);
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 488) = v12;
  sub_23FD65834(v12);
  return sub_23FD74DB0();
}

uint64_t sub_23FD64B98()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23FD64BBC()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  sub_23FCD4F38(v1);
  return sub_23FD63B08();
}

uint64_t sub_23FD64C10@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_23FD64C28(a1, (void (*)(uint64_t))MEMORY[0x24BEE6938], a2);
}

uint64_t sub_23FD64C1C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_23FD64C28(a1, MEMORY[0x24BEE6940], a2);
}

uint64_t sub_23FD64C28@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v7 = sub_23FC5DC5C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23FD712E8();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12, v14);
  sub_23FC93074();
  v15 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v3, a1, v12);
  a2(v15);
  v16 = (void *)sub_23FD712DC();
  v17 = type metadata accessor for ToolboxRebuildTrigger();
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))((char *)a3 + *(int *)(v17 + 24), v11, v7);
  *a3 = sub_23FD74BF4();
  a3[1] = v18;
  v19 = sub_23FD64D94();
  v21 = v20;

  a3[2] = v19;
  a3[3] = v21;
  sub_23FC595C4((uint64_t)v11, *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
  return (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v3, v12);
}

uint64_t sub_23FD64D50()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23FC61EAC;
  return sub_23FD62904();
}

uint64_t sub_23FD64D94()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v33;

  v0 = 0x20737365636F7270;
  v1 = (void *)sub_23FD74BE8();
  v2 = sub_23FD74BF4();
  v4 = v3;
  if (v2 == sub_23FD74BF4() && v4 == v5)
  {
LABEL_29:

    swift_bridgeObjectRelease_n();
    return v0;
  }
  v7 = sub_23FD75380();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v7 & 1) != 0)
    return v0;
  if (qword_254346E10 != -1)
    swift_once();
  v8 = sub_23FD74BF4();
  v10 = v9;
  if (v8 == sub_23FD74BF4() && v10 == v11)
  {
    swift_bridgeObjectRelease_n();
    return 0xD000000000000012;
  }
  v13 = sub_23FD75380();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v13 & 1) != 0)
    return 0xD000000000000012;
  v0 = 0x206E6F6973736573;
  v1 = (void *)sub_23FD74BE8();
  v14 = sub_23FD74BF4();
  v16 = v15;
  if (v14 == sub_23FD74BF4() && v16 == v17)
    goto LABEL_29;
  v19 = sub_23FD75380();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v19 & 1) == 0)
  {
    v20 = (void *)sub_23FD74FCC();
    v21 = sub_23FD74BF4();
    v23 = v22;
    if (v21 == sub_23FD74BF4() && v23 == v24)
    {

      swift_bridgeObjectRelease_n();
    }
    else
    {
      v26 = sub_23FD75380();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v26 & 1) == 0)
      {
        v27 = (void *)sub_23FD74BE8();
        v28 = sub_23FD74BF4();
        v30 = v29;
        if (v28 == sub_23FD74BF4() && v30 == v31)
        {

          swift_bridgeObjectRelease_n();
        }
        else
        {
          v33 = sub_23FD75380();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v33 & 1) == 0)
            return sub_23FD74BF4();
        }
        return 0xD00000000000001CLL;
      }
    }
    return 0xD000000000000017;
  }
  return v0;
}

uint64_t type metadata accessor for ToolboxRebuildTrigger()
{
  uint64_t result;

  result = qword_254346D28;
  if (!qword_254346D28)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_23FD65114()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254346E18;
  if (!qword_254346E18)
  {
    v1 = sub_23FD74FF0();
    result = MEMORY[0x2426797E8](MEMORY[0x24BDD0070], v1);
    atomic_store(result, (unint64_t *)&qword_254346E18);
  }
  return result;
}

uint64_t sub_23FD65154(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ToolboxRebuildTrigger();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23FD65198(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ToolboxRebuildTrigger();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23FD651D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ToolboxRebuildTrigger();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23FD65218()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  sub_23FCD4F38(v1);
  return sub_23FD64D50();
}

uint64_t sub_23FD6526C@<X0>(uint64_t a1@<X8>)
{
  return sub_23FD639DC(a1);
}

uint64_t sub_23FD65274(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23FBFD684((uint64_t *)&unk_254346D00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *sub_23FD652BC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v12 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    v7 = *(int *)(a3 + 24);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_23FD74DEC();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v3;
}

uint64_t sub_23FD65370(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_23FD74DEC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_23FD653C0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23FD74DEC();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  return a1;
}

_QWORD *sub_23FD65448(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23FD74DEC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *sub_23FD654E4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 24);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_23FD74DEC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

_QWORD *sub_23FD65540(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_23FD74DEC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t sub_23FD655BC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_23FD655C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    sub_23FC09258();
  }
  else
  {
    v6 = sub_23FC5DC5C();
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1 + *(int *)(a3 + 24), a2, v6);
  }
}

uint64_t sub_23FD65630()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23FD6563C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_23FC5DC5C();
    return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_23FD656A4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23FD74DEC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23FD6571C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;

  return (*(uint64_t (**)(_QWORD, uint64_t))(a21 + 8))(*(_QWORD *)(v22 - 96), a22);
}

uint64_t sub_23FD6572C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = *(_QWORD *)(v0 + 184);
  return swift_task_dealloc();
}

uint64_t sub_23FD65758()
{
  return sub_23FD732A4();
}

BOOL sub_23FD65774(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

void sub_23FD65784()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = *(_QWORD *)(v0 + 240);
}

void sub_23FD657AC(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = a1;
}

uint64_t sub_23FD657C0()
{
  return sub_23FD74390();
}

uint64_t sub_23FD657D8(uint64_t a1)
{
  uint64_t v1;

  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v1, 1, 1, a1);
  return sub_23FD74120();
}

uint64_t sub_23FD657FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, _QWORD *a11)
{
  *a11 = a1;
  return sub_23FD75044();
}

uint64_t sub_23FD65814()
{
  return _s23IntelligenceFlowRuntime0aB6DaemonV6logger2os6LoggerVvgZ_0();
}

uint64_t sub_23FD6582C(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t sub_23FD65834(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 104);
}

void sub_23FD65850(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  os_log_type_t v4;
  NSObject *v5;
  uint8_t *v6;

  _os_log_impl(a1, v5, v4, a4, v6, 0xCu);
}

uint64_t sub_23FD65864(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_23FC9DC40(a1, a2, (uint64_t *)(v2 - 88));
}

uint64_t sub_23FD65870()
{
  uint64_t v0;
  uint64_t v1;

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v0, 0, 1, v1);
}

uint64_t sub_23FD65884(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;
  uint64_t v18;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8))(v17, a17);
}

uint64_t sub_23FD65898()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v0, v1, v2);
}

uint64_t sub_23FD658AC(float a1)
{
  float *v1;

  *v1 = a1;
  return sub_23FD71E58();
}

uint64_t sub_23FD658C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v0, v1, v2);
}

uint64_t sub_23FD658D4()
{
  return _s23IntelligenceFlowRuntime0aB6DaemonV6logger2os6LoggerVvgZ_0();
}

uint64_t sub_23FD65900()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  return (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(v2[32] + 16))(v2[36], *(_QWORD *)(v0 + 48) + *(_QWORD *)(v2[32] + 72) * v1, v2[31]);
}

uint64_t sub_23FD65920()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(v0 + 256) + 32))(*(_QWORD *)(v0 + 280));
}

uint64_t sub_23FD65940(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return sub_23FC58440(v1, v2 + *(int *)(a1 + 48));
}

uint64_t sub_23FD65950()
{
  return sub_23FD732D4();
}

void *sub_23FD6596C()
{
  const void *v0;
  void *v1;

  return memcpy(v1, v0, 0x50uLL);
}

uint64_t sub_23FD6597C()
{
  uint64_t *v0;

  return sub_23FBFD684(v0);
}

uint64_t sub_23FD65984(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13)
{
  _DWORD *v13;
  uint64_t v14;

  *(_QWORD *)(v14 - 88) = a1;
  *v13 = a13;
  return sub_23FD71E58();
}

uint64_t sub_23FD6599C(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t sub_23FD659A4()
{
  uint64_t v0;

  return sub_23FD65274(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 296));
}

uint64_t sub_23FD659CC()
{
  return swift_arrayDestroy();
}

void sub_23FD659D8(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  uint8_t *v4;

  _os_log_impl(a1, a2, a3, a4, v4, 0x16u);
}

uint64_t sub_23FD65A00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

uint64_t sub_23FD65A0C()
{
  return sub_23FD74FFC();
}

uint64_t sub_23FD65A34()
{
  return sub_23FD732EC();
}

uint64_t sub_23FD65A40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t sub_23FD65A6C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v1, v2);
}

uint64_t sub_23FD65A8C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = a2;
  return v2;
}

uint64_t sub_23FD65A9C(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v1 + 456))(a1, *(_QWORD *)(v1 + 32));
}

uint64_t sub_23FD65AAC(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 88) = result;
  return result;
}

uint64_t sub_23FD65ABC()
{
  return swift_release();
}

uint64_t sub_23FD65AC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;

  return sub_23FC60768(v20, a20);
}

uint64_t sub_23FD65AE8()
{
  return swift_release();
}

uint64_t sub_23FD65B04@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  return swift_task_dealloc();
}

uint64_t sub_23FD65B10(uint64_t a1)
{
  uint64_t v1;

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v1, 1, 1, a1);
}

uint64_t sub_23FD65B34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v1, 1, 1, a1);
  return v2;
}

uint64_t sub_23FD65B58()
{
  return sub_23FD74F3C();
}

uint64_t sub_23FD65B60()
{
  return sub_23FD74F60();
}

uint64_t sub_23FD65B68(uint64_t a1)
{
  uint64_t v1;

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v1, 1, a1);
}

uint64_t sub_23FD65B8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t v19;

  return sub_23FC60768(a19, v19);
}

uint64_t sub_23FD65B98()
{
  uint64_t result;

  result = sub_23FD65E64((uint64_t)&unk_251009EA0);
  qword_256F65BD8 = result;
  return result;
}

uint64_t sub_23FD65BBC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v1 = sub_23FD71C84();
  v34 = *(_QWORD *)(v1 - 8);
  v35 = v1;
  MEMORY[0x24BDAC7A8](v1, v2);
  sub_23FBFF180();
  v5 = v4 - v3;
  v6 = sub_23FD73A0C();
  v32 = *(_QWORD *)(v6 - 8);
  v33 = v6;
  MEMORY[0x24BDAC7A8](v6, v7);
  sub_23FBFF180();
  v10 = v9 - v8;
  v11 = sub_23FD7409C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v13);
  sub_23FBFF180();
  v16 = v15 - v14;
  v17 = sub_23FD73514();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17, v19);
  sub_23FBFF180();
  v22 = v21 - v20;
  sub_23FD740A8();
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 88))(v16, v11) != *MEMORY[0x24BE56B98])
  {
    v26 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v27 = v16;
LABEL_9:
    v26(v27, v11);
    goto LABEL_10;
  }
  (*(void (**)(uint64_t, uint64_t))(v12 + 96))(v16, v11);
  v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32);
  v23(v22, v16, v17);
  sub_23FD73508();
  sub_23FD739F4();
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v10, v33);
  v11 = v35;
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v34 + 88))(v5, v35) != *MEMORY[0x24BE53328])
  {
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v22, v17);
    v26 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
    v27 = v5;
    goto LABEL_9;
  }
  (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v5, v35);
  v24 = sub_23FD734FC();
  if (v25)
  {
    if (v24 == 0xD000000000000033 && v25 == 0x800000023FD83700)
    {
      swift_bridgeObjectRelease();
LABEL_13:
      v29 = a1;
      v23(a1, v22, v17);
      v28 = 0;
      return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v29, v28, 1, v17);
    }
    v31 = sub_23FD75380();
    swift_bridgeObjectRelease();
    if ((v31 & 1) != 0)
      goto LABEL_13;
  }
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v22, v17);
LABEL_10:
  v28 = 1;
  v29 = a1;
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v29, v28, 1, v17);
}

uint64_t sub_23FD65E64(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = MEMORY[0x24BEE4B08];
    goto LABEL_25;
  }
  sub_23FBFD684(&qword_256F5F338);
  result = sub_23FD750D4();
  v3 = result;
  v24 = *(_QWORD *)(a1 + 16);
  if (!v24)
  {
LABEL_25:
    swift_bridgeObjectRelease();
    return v3;
  }
  v4 = 0;
  v5 = result + 56;
  while (v4 < *(_QWORD *)(a1 + 16))
  {
    v6 = (uint64_t *)(a1 + 32 + 16 * v4);
    v8 = *v6;
    v7 = v6[1];
    sub_23FD7544C();
    swift_bridgeObjectRetain();
    sub_23FD74C30();
    result = sub_23FD75470();
    v9 = -1 << *(_BYTE *)(v3 + 32);
    v10 = result & ~v9;
    v11 = v10 >> 6;
    v12 = *(_QWORD *)(v5 + 8 * (v10 >> 6));
    v13 = 1 << v10;
    if (((1 << v10) & v12) != 0)
    {
      v14 = *(_QWORD *)(v3 + 48);
      v15 = (_QWORD *)(v14 + 16 * v10);
      v16 = *v15 == v8 && v15[1] == v7;
      if (v16 || (result = sub_23FD75380(), (result & 1) != 0))
      {
LABEL_11:
        result = swift_bridgeObjectRelease();
        goto LABEL_22;
      }
      v17 = ~v9;
      while (1)
      {
        v10 = (v10 + 1) & v17;
        v11 = v10 >> 6;
        v12 = *(_QWORD *)(v5 + 8 * (v10 >> 6));
        v13 = 1 << v10;
        if ((v12 & (1 << v10)) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * v10);
        if (*v18 != v8 || v18[1] != v7)
        {
          result = sub_23FD75380();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_11;
      }
    }
    *(_QWORD *)(v5 + 8 * v11) = v13 | v12;
    v20 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v10);
    *v20 = v8;
    v20[1] = v7;
    v21 = *(_QWORD *)(v3 + 16);
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
      goto LABEL_27;
    *(_QWORD *)(v3 + 16) = v23;
LABEL_22:
    if (++v4 == v24)
      goto LABEL_25;
  }
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_23FD66030(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v20;
  uint64_t v21;

  v5 = v4;
  v10 = OBJC_IVAR____TtCC23IntelligenceFlowRuntime31TranscriptEntityQueryingService16ActiveQueryState_bookmark;
  *(_QWORD *)(v5 + OBJC_IVAR____TtCC23IntelligenceFlowRuntime31TranscriptEntityQueryingService16ActiveQueryState_bookmark) = 0;
  v21 = OBJC_IVAR____TtCC23IntelligenceFlowRuntime31TranscriptEntityQueryingService16ActiveQueryState_transaction;
  *(_QWORD *)(v5
            + OBJC_IVAR____TtCC23IntelligenceFlowRuntime31TranscriptEntityQueryingService16ActiveQueryState_transaction) = 0;
  v11 = v5 + OBJC_IVAR____TtCC23IntelligenceFlowRuntime31TranscriptEntityQueryingService16ActiveQueryState_id;
  v12 = sub_23FBFF104();
  v20 = *(_QWORD *)(v12 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(v11, a1, v12);
  v13 = v5 + OBJC_IVAR____TtCC23IntelligenceFlowRuntime31TranscriptEntityQueryingService16ActiveQueryState_query;
  v14 = sub_23FD722D8();
  v15 = *(_QWORD *)(v14 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v13, a2, v14);
  *(_QWORD *)(v5
            + OBJC_IVAR____TtCC23IntelligenceFlowRuntime31TranscriptEntityQueryingService16ActiveQueryState_publisher) = a3;
  *(_QWORD *)(v5 + v10) = a4;
  v16 = a3;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  sub_23FD750E0();
  sub_23FD74C48();
  sub_23FBFEE2C((unint64_t *)&qword_256F65DE0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
  sub_23FD75344();
  sub_23FD74C48();
  swift_bridgeObjectRelease();
  sub_23FD74C18();
  swift_bridgeObjectRelease();
  v17 = os_transaction_create();

  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(a2, v14);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(a1, v12);
  swift_release();
  *(_QWORD *)(v5 + v21) = v17;
  swift_unknownObjectRelease();
  return v5;
}

void sub_23FD6621C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = sub_23FBFF104();
  sub_23FBFF0E4(v1);
  v2 = sub_23FD722D8();
  sub_23FBFF0E4(v2);
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtCC23IntelligenceFlowRuntime31TranscriptEntityQueryingService16ActiveQueryState_publisher));
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  sub_23FBFF0A0();
}

uint64_t sub_23FD66290()
{
  sub_23FD6621C();
  return swift_deallocClassInstance();
}

_QWORD *sub_23FD662B4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t (*v5)(uint64_t);

  swift_defaultActor_initialize();
  v2[14] = a1;
  v2[15] = a2;
  sub_23FBFF104();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  type metadata accessor for TranscriptEntityQueryingService.ActiveQueryState();
  sub_23FBFEE2C(&qword_256F65DB0, v5, MEMORY[0x24BDCEA88]);
  v2[16] = sub_23FD74B40();
  return v2;
}

void sub_23FD6633C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v29 = a2;
  v30 = a1;
  v4 = sub_23FD722D8();
  v31 = *(_QWORD *)(v4 - 8);
  v32 = v4;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v5, v6);
  sub_23FC10388();
  v7 = sub_23FD71474();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  sub_23FC10118();
  sub_23FBFD684(&qword_256F65DD0);
  sub_23FC05FF4();
  v12 = MEMORY[0x24BDAC7A8](v10, v11);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12, v15);
  v17 = (char *)&v29 - v16;
  _s23IntelligenceFlowRuntime9SessionIDVACycfC_0();
  v18 = objc_msgSend((id)BiomeLibrary(), sel_Sage);
  swift_unknownObjectRelease();
  v19 = objc_msgSend(v18, sel_Transcript);
  swift_unknownObjectRelease();
  v20 = v30;
  sub_23FD722CC();
  v21 = sub_23FD71414();
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v14, 1, 1, v21);
  v22 = objc_allocWithZone(MEMORY[0x24BE0CC98]);
  v23 = sub_23FD678AC((uint64_t)v17, (uint64_t)v14, 0, 0, 0);
  v24 = objc_msgSend(v19, sel_publisherWithOptions_, v23);

  v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  v26 = v29;
  v25(v3, v29, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16))(v2, v20, v32);
  type metadata accessor for TranscriptEntityQueryingService.ActiveQueryState();
  v27 = swift_allocObject();
  v28 = v24;
  sub_23FD66030(v3, v2, v28, 0);
  swift_beginAccess();
  sub_23FD67F40(v27, v26);
  swift_endAccess();

}

uint64_t sub_23FD665A0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  _QWORD *v17;
  void *v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;

  v3 = *v1;
  v4 = sub_23FD72BF0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  sub_23FBFEFE0();
  v33 = v7;
  sub_23FC75394();
  v8 = v1[16];
  swift_bridgeObjectRetain();
  sub_23FCC3CE0(a1, v8);
  v10 = v9;
  swift_bridgeObjectRelease();
  if (v10)
  {
    v27 = v5;
    v28 = v4;
    v11 = sub_23FC58AA0();
    *(_QWORD *)(v11 + 16) = MEMORY[0x24BEE4AF8];
    v30 = v3;
    v12 = sub_23FC58AA0();
    *(_QWORD *)(v12 + 16) = 0;
    v13 = v1[15];
    v29 = v1[14];
    v14 = *(void **)(v10
                   + OBJC_IVAR____TtCC23IntelligenceFlowRuntime31TranscriptEntityQueryingService16ActiveQueryState_publisher);
    v15 = *(_QWORD *)(v10
                    + OBJC_IVAR____TtCC23IntelligenceFlowRuntime31TranscriptEntityQueryingService16ActiveQueryState_bookmark);
    v32 = sub_23FD68A68((uint64_t)sub_23FD66A74);
    swift_unknownObjectRetain();
    v16 = v14;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_release();
    v17 = (_QWORD *)sub_23FC58AA0();
    v17[2] = v10;
    v17[3] = v29;
    v17[4] = v13;
    v17[5] = v1;
    v17[6] = v11;
    v17[7] = v12;
    v17[8] = v30;
    v18 = sub_23FD68A68((uint64_t)sub_23FD6736C);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_release();
    v19 = objc_msgSend(v16, sel_drivableSinkWithBookmark_completion_shouldContinue_, v15, v32, v18);
    _Block_release(v18);
    _Block_release(v32);

    swift_unknownObjectRelease();
    sub_23FC75394();
    if (*(_QWORD *)(v12 + 16))
    {
      sub_23FCD50B8();
      _s23IntelligenceFlowRuntime0aB6DaemonV6logger2os6LoggerVvgZ_0();
      sub_23FCD50B8();
      sub_23FCD50B8();
      v20 = sub_23FD72BE4();
      v21 = sub_23FD74F54();
      if (os_log_type_enabled(v20, v21))
      {
        v22 = (uint8_t *)swift_slowAlloc();
        v31 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v22 = 138412290;
        sub_23FCD50B8();
        v34 = _swift_stdlib_bridgeErrorToNSError();
        sub_23FD75044();
        *v31 = v34;
        sub_23FCD503C();
        sub_23FCD503C();
        _os_log_impl(&dword_23FBF8000, v20, v21, "Failed to read transcript: %@", v22, 0xCu);
        sub_23FBFD684(&qword_254346A30);
        swift_arrayDestroy();
        sub_23FBFEFA0();
      }
      sub_23FCD503C();
      sub_23FCD503C();

      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v33, v28);
      v23 = sub_23FD722B4();
      sub_23FBFEE2C(&qword_256F65DB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE53F30], MEMORY[0x24BE53F38]);
      sub_23FD68A24();
      sub_23FD68A38(v25, *MEMORY[0x24BE53F20]);
      swift_willThrow();
      sub_23FCD503C();
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      swift_release();
      sub_23FC75394();
      v23 = *(_QWORD *)(v11 + 16);
      swift_bridgeObjectRetain();
      swift_release();
      swift_release();
    }
  }
  else
  {
    v23 = sub_23FD722B4();
    sub_23FBFEE2C(&qword_256F65DB8, (uint64_t (*)(uint64_t))MEMORY[0x24BE53F30], MEMORY[0x24BE53F38]);
    sub_23FD68A24();
    sub_23FD68A38(v24, *MEMORY[0x24BE53F28]);
    swift_willThrow();
  }
  return v23;
}

uint64_t sub_23FD66A40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_QWORD *)(a3 + OBJC_IVAR____TtCC23IntelligenceFlowRuntime31TranscriptEntityQueryingService16ActiveQueryState_bookmark) = a2;
  swift_unknownObjectRelease();
  return swift_unknownObjectRetain();
}

void sub_23FD66A74(uint64_t a1, void *a2, uint64_t a3)
{
  void (*v5)(id, uint64_t);
  id v6;

  v5 = *(void (**)(id, uint64_t))(a1 + 32);
  swift_retain();
  v6 = a2;
  swift_unknownObjectRetain();
  v5(v6, a3);
  swift_release();
  swift_unknownObjectRelease();

}

BOOL sub_23FD66AE4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  void *v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  char v61;
  void (*v62)(char *, uint64_t);
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char *v72;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;
  void *v76;
  char *v77;
  char *v78;
  char *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  __int128 v96;
  __int128 v97;
  uint64_t v98;

  v91 = a7;
  v92 = a2;
  v86 = a6;
  v88 = a4;
  v84 = a3;
  v8 = sub_23FD72BF0();
  v93 = *(_QWORD *)(v8 - 8);
  v94 = v8;
  MEMORY[0x24BDAC7A8](v8, v9);
  v95 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23FD71474();
  MEMORY[0x24BDAC7A8](v11, v12);
  v78 = (char *)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23FD71F3C();
  v82 = *(_QWORD *)(v14 - 8);
  v83 = v14;
  MEMORY[0x24BDAC7A8](v14, v15);
  v81 = (char *)&v74 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23FBFD684(&qword_256F5EB98);
  MEMORY[0x24BDAC7A8](v17, v18);
  v85 = (uint64_t)&v74 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = sub_23FD74798();
  v80 = *(_QWORD *)(v87 - 8);
  v21 = MEMORY[0x24BDAC7A8](v87, v20);
  v77 = (char *)&v74 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21, v23);
  v79 = (char *)&v74 - v24;
  v25 = sub_23FD72380();
  MEMORY[0x24BDAC7A8](v25, v26);
  v27 = sub_23FD73850();
  v28 = *(_QWORD *)(v27 - 8);
  v30 = MEMORY[0x24BDAC7A8](v27, v29);
  v32 = (char *)&v74 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v30, v33);
  v35 = (char *)&v74 - v34;
  v90 = sub_23FD740CC();
  v36 = *(_QWORD *)(v90 - 8);
  v38 = MEMORY[0x24BDAC7A8](v90, v37);
  v40 = (char *)&v74 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = MEMORY[0x24BDAC7A8](v38, v41);
  v44 = (char *)&v74 - v43;
  MEMORY[0x24BDAC7A8](v42, v45);
  v89 = (char *)&v74 - v46;
  v47 = objc_msgSend(a1, sel_eventBody);
  if (!v47)
    return 1;
  v48 = v47;
  v49 = sub_23FD6885C(v47);
  if (v50 >> 60 == 15)
  {

    return 1;
  }
  v51 = v50;
  v76 = v48;
  v98 = 0;
  v96 = 0u;
  v97 = 0u;
  v52 = v49;
  sub_23FC577F4(v49, v50);
  sub_23FD72374();
  sub_23FBFEE2C((unint64_t *)&unk_256F65DC0, (uint64_t (*)(uint64_t))MEMORY[0x24BE55B10], MEMORY[0x24BE55B08]);
  v74 = v52;
  v75 = v51;
  sub_23FD72398();
  (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v32, v35, v27);
  sub_23FD73FA0();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v35, v27);
  v55 = v89;
  v54 = v90;
  (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v89, v44, v90);
  (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v40, v55, v54);
  v56 = v88;
  if (v88)
  {
    swift_bridgeObjectRetain();
    v57 = sub_23FD73FDC();
    v59 = v76;
    if (!v58)
    {
      v62 = *(void (**)(char *, uint64_t))(v36 + 8);
      v62(v40, v54);
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    if (v57 != v84 || v58 != v56)
    {
      v61 = sub_23FD75380();
      swift_bridgeObjectRelease();
      v62 = *(void (**)(char *, uint64_t))(v36 + 8);
      v62(v40, v54);
      swift_bridgeObjectRelease();
      if ((v61 & 1) != 0)
        goto LABEL_18;
LABEL_16:
      v62(v55, v54);

      sub_23FC9E934(v74, v75);
      return 1;
    }
    swift_bridgeObjectRelease();
    v62 = *(void (**)(char *, uint64_t))(v36 + 8);
    v62(v40, v54);
    swift_bridgeObjectRelease();
  }
  else
  {
    v62 = *(void (**)(char *, uint64_t))(v36 + 8);
    v62(v40, v54);
    v59 = v76;
  }
LABEL_18:
  v63 = v85;
  v64 = (uint64_t *)(v86 + 16);
  sub_23FD673BC(v85);
  v65 = v87;
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v63, 1, v87) == 1)
  {

    sub_23FC9E934(v74, v75);
    sub_23FCAEB30(v63);
  }
  else
  {
    v66 = v80;
    v67 = v79;
    (*(void (**)(char *, uint64_t, uint64_t))(v80 + 32))(v79, v63, v65);
    sub_23FD74048();
    (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v77, v67, v65);
    v68 = v81;
    sub_23FD71F30();
    swift_beginAccess();
    sub_23FD679C4((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_23FC99BB8);
    v69 = *(_QWORD *)(*v64 + 16);
    sub_23FD67A30(v69, (uint64_t (*)(BOOL))sub_23FC99BB8);
    v70 = *v64;
    *(_QWORD *)(v70 + 16) = v69 + 1;
    v71 = v70
        + ((*(unsigned __int8 *)(v82 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80))
        + *(_QWORD *)(v82 + 72) * v69;
    v72 = v68;
    v55 = v89;
    v54 = v90;
    (*(void (**)(unint64_t, char *, uint64_t))(v82 + 32))(v71, v72, v83);
    swift_endAccess();

    sub_23FC9E934(v74, v75);
    (*(void (**)(char *, uint64_t))(v66 + 8))(v67, v65);
  }
  swift_beginAccess();
  v73 = *(_QWORD *)(*v64 + 16);
  v62(v55, v54);
  return v73 < 0xF;
}

uint64_t sub_23FD6736C(uint64_t a1, void *a2)
{
  uint64_t (*v3)(void);
  id v4;

  v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  LOBYTE(v3) = v3();
  swift_release();

  return v3 & 1;
}

void sub_23FD673BC(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (**v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (**v32)(uint64_t, uint64_t);

  v32 = *(uint64_t (***)(uint64_t, uint64_t))(sub_23FD71C84() - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v2, v3);
  sub_23FBFEFE0();
  v31 = v4;
  v30 = sub_23FD73A0C();
  v28 = *(_QWORD *)(v30 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v5, v6);
  sub_23FC10118();
  v7 = sub_23FD716D8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  sub_23FBFF180();
  v12 = v11 - v10;
  v13 = sub_23FD7409C();
  v14 = *(uint64_t (***)(uint64_t, uint64_t))(v13 - 8);
  MEMORY[0x24BDAC7A8](v13, v15);
  sub_23FBFF180();
  v18 = v17 - v16;
  v29 = sub_23FD73514();
  v19 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29, v20);
  sub_23FBFF180();
  v23 = v22 - v21;
  sub_23FD740A8();
  if (sub_23FD689EC(v14[11]) == *MEMORY[0x24BE56B98])
  {
    v27 = v7;
    sub_23FD689EC(v14[12]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 32))(v23, v18, v29);
    sub_23FD73508();
    sub_23FD739F4();
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v1, v30);
    v24 = a1;
    if (sub_23FD689EC(v32[11]) == *MEMORY[0x24BE53328])
    {
      sub_23FD689EC(v32[12]);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v12, v31, v27);
      sub_23FD716C0();
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v12, v27);
      sub_23FD68A58();
      v25 = 0;
    }
    else
    {
      sub_23FD68A58();
      sub_23FD689EC(v32[1]);
      v25 = 1;
    }
  }
  else
  {
    sub_23FD689EC(v14[1]);
    v25 = 1;
    v24 = a1;
  }
  v26 = sub_23FD74798();
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v24, v25, 1, v26);
  sub_23FC060D4();
}

uint64_t sub_23FD675F4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_23FD67620()
{
  sub_23FD675F4();
  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for TranscriptEntityQueryingService()
{
  return objc_opt_self();
}

uint64_t sub_23FD67658()
{
  return type metadata accessor for TranscriptEntityQueryingService.ActiveQueryState();
}

uint64_t type metadata accessor for TranscriptEntityQueryingService.ActiveQueryState()
{
  uint64_t result;

  result = qword_256F65D08;
  if (!qword_256F65D08)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23FD67698()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23FD71474();
  if (v1 <= 0x3F)
  {
    result = sub_23FD722D8();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TranscriptEntityQueryingService.Policy(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TranscriptEntityQueryingService.Policy(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for TranscriptEntityQueryingService.Policy()
{
  return &type metadata for TranscriptEntityQueryingService.Policy;
}

uint64_t sub_23FD677EC()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23FD67810()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_23FD67834(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_23FD66A40(a1, a2, v2);
}

uint64_t sub_23FD6783C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_23FD6784C()
{
  return swift_release();
}

uint64_t sub_23FD67854()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

BOOL sub_23FD67898(void *a1)
{
  uint64_t *v1;

  return sub_23FD66AE4(a1, v1[2], v1[3], v1[4], v1[5], v1[6], v1[7]);
}

id sub_23FD678AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  void *v5;
  void *v6;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;

  v6 = v5;
  v12 = sub_23FD71414();
  v13 = 0;
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, 1, v12) != 1)
  {
    v13 = (void *)sub_23FD713E4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(a1, v12);
  }
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a2, 1, v12) == 1)
  {
    v14 = 0;
  }
  else
  {
    v14 = (void *)sub_23FD713E4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(a2, v12);
  }
  v15 = objc_msgSend(v6, sel_initWithStartDate_endDate_maxEvents_lastN_reversed_, v13, v14, a3, a4, a5 & 1);

  return v15;
}

uint64_t sub_23FD679AC()
{
  return sub_23FD679C4((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_23FC998C0);
}

uint64_t sub_23FD679B8()
{
  return sub_23FD679C4((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_23FC999F4);
}

uint64_t sub_23FD679C4(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;

  v3 = *v1;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v1 = v3;
  if (!(_DWORD)result)
  {
    result = a1(result, *(_QWORD *)(v3 + 16) + 1, 1, v3);
    *v1 = result;
  }
  return result;
}

uint64_t sub_23FD67A18(uint64_t a1)
{
  return sub_23FD67A30(a1, (uint64_t (*)(BOOL))sub_23FC998C0);
}

uint64_t sub_23FD67A24(uint64_t a1)
{
  return sub_23FD67A30(a1, (uint64_t (*)(BOOL))sub_23FC999F4);
}

uint64_t sub_23FD67A30(uint64_t result, uint64_t (*a2)(BOOL))
{
  uint64_t v2;
  unint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)v2 + 24);
  if (result + 1 > (uint64_t)(v3 >> 1))
  {
    result = a2(v3 > 1);
    *(_QWORD *)v2 = result;
  }
  return result;
}

void sub_23FD67A70(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  sub_23FD6898C(a1, a2, a3, a4);
  sub_23FD7157C();
  sub_23FC0A050();
  (*(void (**)(uint64_t, uint64_t))(v9 + 32))(v8 + *(_QWORD *)(v9 + 72) * v7, v6);
  *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v7) = v5;
  v10 = *(_QWORD *)(v4 + 16);
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v4 + 16) = v12;
    sub_23FC17830();
  }
}

void sub_23FD67AC8(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = type metadata accessor for SessionID(0);
  sub_23FD688E4(a2, v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, type metadata accessor for SessionID);
  v10 = a4[7];
  v11 = type metadata accessor for SessionSwitchboard.SessionInfo();
  sub_23FD688E4(a3, v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, (uint64_t (*)(_QWORD))type metadata accessor for SessionSwitchboard.SessionInfo);
  v12 = a4[2];
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    a4[2] = v14;
}

void sub_23FD67B80(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_23FD71474();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  v10 = a4[7];
  v11 = type metadata accessor for SessionCoordinatorInjectionRequest(0);
  sub_23FD688E4(a3, v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, type metadata accessor for SessionCoordinatorInjectionRequest);
  v12 = a4[2];
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    a4[2] = v14;
}

unint64_t sub_23FD67C38(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  *(_QWORD *)(a5[7] + 8 * result) = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

uint64_t sub_23FD67C80(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v8 = (_QWORD *)(a5[6] + 16 * a1);
  *v8 = a2;
  v8[1] = a3;
  v9 = a5[7];
  v10 = sub_23FD73C28();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v9 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * a1, a4, v10);
  v12 = a5[2];
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    a5[2] = v14;
  return result;
}

void sub_23FD67D10(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  __int128 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  v9 = sub_23FD6898C(a1, a2, a3, a4);
  v10 = type metadata accessor for SessionClientID(v9);
  sub_23FD688E4(v6, v8 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * v7, type metadata accessor for SessionClientID);
  v11 = *(_QWORD *)(v4 + 56) + 56 * v7;
  *(_QWORD *)(v11 + 48) = *((_QWORD *)v5 + 6);
  v12 = v5[2];
  v13 = *v5;
  *(_OWORD *)(v11 + 16) = v5[1];
  *(_OWORD *)(v11 + 32) = v12;
  *(_OWORD *)v11 = v13;
  v14 = *(_QWORD *)(v4 + 16);
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (v15)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v4 + 16) = v16;
    sub_23FC17830();
  }
}

uint64_t sub_23FD67D88(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_23FD71474();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

uint64_t sub_23FD67E20(uint64_t a1, uint64_t a2)
{
  return sub_23FD67E38(a1, a2, sub_23FD680CC);
}

uint64_t sub_23FD67E2C(uint64_t a1, uint64_t a2)
{
  return sub_23FD67E38(a1, a2, sub_23FD68228);
}

uint64_t sub_23FD67E38(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t))
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;

  sub_23FD689F8();
  sub_23FD68A08();
  a3(v5, v4);
  *v3 = v8;
  return sub_23FD68978();
}

uint64_t sub_23FD67E80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  sub_23FD689F8();
  v0 = sub_23FD689C4();
  v3 = sub_23FD68384(v0, v1, v2);
  sub_23FD68A48(v3, v4, v5, v6, v7, v8, v9, v10, v12, v13);
  return sub_23FD68978();
}

uint64_t sub_23FD67EB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  sub_23FD689F8();
  v0 = sub_23FD689C4();
  v3 = sub_23FD68490(v0, v1, v2);
  sub_23FD68A48(v3, v4, v5, v6, v7, v8, v9, v10, v12, v13);
  return sub_23FD68978();
}

uint64_t sub_23FD67EF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  swift_isUniquelyReferenced_nonNull_native();
  sub_23FD68A08();
  sub_23FD685B8(a1, a2);
  sub_23FD68A48(v4, v5, v6, v7, v8, v9, v10, v11, v13, v14);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FD67F40(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v6;

  swift_isUniquelyReferenced_nonNull_native();
  v6 = *v2;
  *v2 = 0x8000000000000000;
  sub_23FD68718(a1, a2);
  *v2 = v6;
  return swift_bridgeObjectRelease();
}

void sub_23FD67FAC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;

  v4 = v2;
  v7 = sub_23FD7157C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7, v9);
  sub_23FC10388();
  v10 = *v2;
  sub_23FC84CD4();
  if (__OFADD__(*(_QWORD *)(v10 + 16), (v12 & 1) == 0))
  {
    __break(1u);
    goto LABEL_10;
  }
  v13 = v11;
  v14 = v12;
  sub_23FBFD684((uint64_t *)&unk_256F65E10);
  if ((sub_23FD75200() & 1) != 0)
  {
    sub_23FC84CD4();
    if ((v14 & 1) == (v16 & 1))
    {
      v13 = v15;
      goto LABEL_5;
    }
LABEL_10:
    sub_23FD753C8();
    __break(1u);
    return;
  }
LABEL_5:
  v17 = *v4;
  if ((v14 & 1) != 0)
  {
    v18 = *(_QWORD *)(v17 + 56);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v18 + 8 * v13) = a1;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v3, a2, v7);
    sub_23FD67A70(v13, v3, a1, v17);
  }
  sub_23FC060D4();
}

void sub_23FD680CC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD **v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  char v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v3 = (_QWORD **)v2;
  v6 = type metadata accessor for SessionID(0);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (_QWORD *)*v2;
  sub_23FC84E40(a2);
  if (__OFADD__(v10[2], (v12 & 1) == 0))
  {
    __break(1u);
    goto LABEL_10;
  }
  v13 = v11;
  v14 = v12;
  sub_23FBFD684(&qword_256F65DE8);
  if ((sub_23FD75200() & 1) == 0)
    goto LABEL_5;
  sub_23FC84E40(a2);
  if ((v14 & 1) != (v16 & 1))
  {
LABEL_10:
    sub_23FD753C8();
    __break(1u);
    return;
  }
  v13 = v15;
LABEL_5:
  v17 = *v3;
  if ((v14 & 1) != 0)
  {
    v18 = v17[7];
    v19 = type metadata accessor for SessionSwitchboard.SessionInfo();
    sub_23FD688BC(a1, v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v13, (uint64_t (*)(_QWORD))type metadata accessor for SessionSwitchboard.SessionInfo);
  }
  else
  {
    sub_23FD6890C(a2, (uint64_t)v9, type metadata accessor for SessionID);
    sub_23FD67AC8(v13, (uint64_t)v9, a1, v17);
  }
}

void sub_23FD68228(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD **v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v3 = (_QWORD **)v2;
  v6 = sub_23FD71474();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (_QWORD *)*v2;
  sub_23FC84C70();
  if (__OFADD__(v11[2], (v13 & 1) == 0))
  {
    __break(1u);
    goto LABEL_10;
  }
  v14 = v12;
  v15 = v13;
  sub_23FBFD684(&qword_256F65DF8);
  if ((sub_23FD75200() & 1) == 0)
    goto LABEL_5;
  sub_23FC84C70();
  if ((v15 & 1) != (v17 & 1))
  {
LABEL_10:
    sub_23FD753C8();
    __break(1u);
    return;
  }
  v14 = v16;
LABEL_5:
  v18 = *v3;
  if ((v15 & 1) != 0)
  {
    v19 = v18[7];
    v20 = type metadata accessor for SessionCoordinatorInjectionRequest(0);
    sub_23FD688BC(a1, v19 + *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72) * v14, type metadata accessor for SessionCoordinatorInjectionRequest);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, a2, v6);
    sub_23FD67B80(v14, (uint64_t)v10, a1, v18);
  }
}

uint64_t sub_23FD68384(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  char v12;
  uint64_t result;
  char v14;
  _QWORD *v15;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v9 = sub_23FC84EE0(a2, a3);
  if (__OFADD__(v8[2], (v10 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v11 = v9;
  v12 = v10;
  sub_23FBFD684(&qword_256F65DF0);
  result = sub_23FD75200();
  if ((result & 1) == 0)
    goto LABEL_5;
  result = sub_23FC84EE0(a2, a3);
  if ((v12 & 1) != (v14 & 1))
  {
LABEL_9:
    result = sub_23FD753C8();
    __break(1u);
    return result;
  }
  v11 = result;
LABEL_5:
  v15 = *v4;
  if ((v12 & 1) != 0)
  {
    *(_QWORD *)(v15[7] + 8 * v11) = a1;
  }
  else
  {
    sub_23FD67C38(v11, a2, a3, a1, v15);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_23FD68490(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  char v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v9 = sub_23FC84D84(a2, a3);
  if (__OFADD__(v8[2], (v10 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v11 = v9;
  v12 = v10;
  sub_23FBFD684(&qword_256F65E08);
  if ((sub_23FD75200() & 1) == 0)
    goto LABEL_5;
  v13 = sub_23FC84D84(a2, a3);
  if ((v12 & 1) != (v14 & 1))
  {
LABEL_9:
    result = sub_23FD753C8();
    __break(1u);
    return result;
  }
  v11 = v13;
LABEL_5:
  v15 = *v4;
  if ((v12 & 1) != 0)
  {
    v16 = v15[7];
    v17 = sub_23FD73C28();
    return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 40))(v16 + *(_QWORD *)(*(_QWORD *)(v17 - 8) + 72) * v11, a1, v17);
  }
  else
  {
    sub_23FD67C80(v11, a2, a3, a1, v15);
    return swift_bridgeObjectRetain();
  }
}

void sub_23FD685B8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;

  v3 = v2;
  v6 = type metadata accessor for SessionClientID(0);
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v2;
  sub_23FC84E34(a2);
  if (__OFADD__(*(_QWORD *)(v10 + 16), (v12 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v13 = v11;
  v14 = v12;
  sub_23FBFD684(&qword_256F65E00);
  if ((sub_23FD75200() & 1) == 0)
    goto LABEL_5;
  sub_23FC84E34(a2);
  if ((v14 & 1) != (v16 & 1))
  {
LABEL_9:
    sub_23FD753C8();
    __break(1u);
    return;
  }
  v13 = v15;
LABEL_5:
  v17 = *v3;
  if ((v14 & 1) != 0)
  {
    sub_23FD68934(a1, *(_QWORD *)(v17 + 56) + 56 * v13);
  }
  else
  {
    sub_23FD6890C(a2, (uint64_t)v9, type metadata accessor for SessionClientID);
    sub_23FD67D10(v13, (uint64_t)v9, a1, v17);
  }
}

uint64_t sub_23FD68718(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD **v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;

  v3 = (_QWORD **)v2;
  v6 = sub_23FD71474();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (_QWORD *)*v2;
  sub_23FC84C70();
  if (__OFADD__(v11[2], (v13 & 1) == 0))
  {
    __break(1u);
    goto LABEL_10;
  }
  v14 = v12;
  v15 = v13;
  sub_23FBFD684(&qword_256F65DD8);
  if ((sub_23FD75200() & 1) == 0)
    goto LABEL_5;
  sub_23FC84C70();
  if ((v15 & 1) != (v17 & 1))
  {
LABEL_10:
    result = sub_23FD753C8();
    __break(1u);
    return result;
  }
  v14 = v16;
LABEL_5:
  v18 = *v3;
  if ((v15 & 1) != 0)
  {
    v19 = v18[7];
    result = swift_release();
    *(_QWORD *)(v19 + 8 * v14) = a1;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, a2, v6);
    return sub_23FD67D88(v14, (uint64_t)v10, a1, v18);
  }
  return result;
}

uint64_t sub_23FD6885C(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_eventPayload);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_23FD713D8();

  return v3;
}

void sub_23FD688BC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_23FBFF158(a1, a2, a3);
  sub_23FC0A050();
  sub_23FC10198(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 40));
  sub_23FBFF0A0();
}

void sub_23FD688E4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_23FBFF158(a1, a2, a3);
  sub_23FC0A050();
  sub_23FC10198(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 32));
  sub_23FBFF0A0();
}

void sub_23FD6890C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_23FBFF158(a1, a2, a3);
  sub_23FC0A050();
  sub_23FC10198(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16));
  sub_23FBFF0A0();
}

uint64_t sub_23FD68934(uint64_t a1, uint64_t a2)
{
  assignWithTake for SessionSwitchboard.ClientInfo(a2, a1);
  return a2;
}

uint64_t sub_23FD68978()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FD6898C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(_QWORD *)(a4 + 8 * (a1 >> 6) + 64) |= 1 << a1;
  return 0;
}

uint64_t sub_23FD689C4()
{
  _QWORD *v0;
  uint64_t v1;

  *v0 = 0x8000000000000000;
  return v1;
}

uint64_t sub_23FD689EC@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_23FD689F8()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

void sub_23FD68A08()
{
  _QWORD *v0;

  *v0 = 0x8000000000000000;
}

uint64_t sub_23FD68A24()
{
  return swift_allocError();
}

uint64_t sub_23FD68A38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(a1, a2, v2);
}

uint64_t sub_23FD68A48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t *v10;
  uint64_t result;

  result = *v10;
  *v10 = a10;
  return result;
}

uint64_t sub_23FD68A58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

void *sub_23FD68A68@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 136) = a1;
  *(_QWORD *)(v2 - 128) = v1;
  return _Block_copy((const void *)(v2 - 152));
}

void sub_23FD68A74(_QWORD *a1, uint64_t a2, void (*a3)(_QWORD, _QWORD, uint64_t))
{
  a3(*a1, a1[1], a2);
  sub_23FBFF0A0();
}

void sub_23FD68AA0(uint64_t a1, unint64_t a2, uint64_t a3)
{
  void *v4;
  id v5;

  if (a2 >> 60 != 15)
  {
    v4 = (void *)sub_23FD713C0();
    if (!a3)
      goto LABEL_5;
    goto LABEL_3;
  }
  v4 = 0;
  if (a3)
LABEL_3:
    sub_23FD7133C();
LABEL_5:
  sub_23FD6A884();

}

void sub_23FD68B10(_QWORD *a1, uint64_t a2, void (*a3)(_QWORD))
{
  a3(*a1);
  sub_23FBFF0A0();
}

void sub_23FD68B30(uint64_t a1, uint64_t a2)
{
  id v2;

  if (a2)
    sub_23FD7133C();
  sub_23FD6A884();

}

void sub_23FD68B78(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;

  sub_23FBFD684(qword_254346A10);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v6, v7);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FD6A778(a1, (uint64_t)v9);
  v10 = sub_23FBFF104();
  v11 = 0;
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v9, 1, v10) != 1)
  {
    v11 = (void *)sub_23FD71444();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  }
  if (a2)
    a2 = (void *)sub_23FD7133C();
  (*(void (**)(uint64_t, void *, void *))(a3 + 16))(a3, v11, a2);

}

uint64_t sub_23FD68C5C()
{
  sub_23FC59120();
  return swift_retain();
}

uint64_t sub_23FD68CA0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1
                + OBJC_IVAR____TtCV23IntelligenceFlowRuntime40TranscriptEntityQueryingXPCServiceServer6Server_clientProxy);
  sub_23FC59120();
  *v3 = a1;
  return swift_release();
}

uint64_t sub_23FD68CEC()
{
  objc_class *v0;
  id v1;

  v1 = objc_allocWithZone(v0);
  return sub_23FD68D2C();
}

uint64_t sub_23FD68D2C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  void (*v33)(uint64_t, uint64_t);
  id v34;
  char v35;
  uint64_t v36;
  objc_class *ObjectType;
  char *v38;
  uint64_t v39;
  void *v40;
  objc_super v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46[5];
  uint64_t v47;
  uint64_t v48;

  sub_23FD6A8D4();
  v47 = v1;
  v48 = v2;
  v40 = v3;
  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v6 = sub_23FD72620();
  v39 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6, v7);
  sub_23FBFF180();
  v10 = v9 - v8;
  v11 = sub_23FD72BF0();
  v36 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11, v12);
  sub_23FBFF180();
  v15 = v14 - v13;
  *(_QWORD *)&v0[OBJC_IVAR____TtCV23IntelligenceFlowRuntime40TranscriptEntityQueryingXPCServiceServer6Server_clientProxy] = 0;
  v16 = OBJC_IVAR____TtCV23IntelligenceFlowRuntime40TranscriptEntityQueryingXPCServiceServer6Server_jsonEncoder;
  sub_23FD712B8();
  sub_23FBFF1C4();
  v17 = v0;
  *(_QWORD *)&v0[v16] = sub_23FD712AC();
  v18 = OBJC_IVAR____TtCV23IntelligenceFlowRuntime40TranscriptEntityQueryingXPCServiceServer6Server_jsonDecoder;
  sub_23FD71294();
  sub_23FBFF1C4();
  v38 = v17;
  *(_QWORD *)&v17[v18] = sub_23FD71288();
  result = sub_23FD72614();
  if (v20)
  {
    swift_bridgeObjectRelease();
    v21 = (void *)sub_23FD74BE8();
    v22 = objc_msgSend(v40, sel_valueForEntitlement_, v21);

    if (v22)
    {
      sub_23FD6A910();
      swift_unknownObjectRelease();
    }
    else
    {
      v44 = 0u;
      v45 = 0u;
    }
    sub_23FCD512C();
    if (v46[3])
    {
      if ((sub_23FD6A900() & 1) != 0)
      {
        v24 = v42;
        v23 = v43;
        v25 = (void *)sub_23FD74BE8();
        v26 = objc_msgSend(v40, sel_valueForEntitlement_, v25);

        if (v26)
        {
          sub_23FD6A910();
          swift_unknownObjectRelease();
        }
        else
        {
          v44 = 0u;
          v45 = 0u;
        }
        sub_23FCD512C();
        if (sub_23FD6A900())
        {
          v35 = v42;
          v38[OBJC_IVAR____TtCV23IntelligenceFlowRuntime40TranscriptEntityQueryingXPCServiceServer6Server_allGroupQueryingAllowed] = v42;
          if ((v35 & 1) != 0)
          {
            swift_bridgeObjectRelease();
            v24 = 0;
            v23 = 0;
          }
        }
        else
        {
          v38[OBJC_IVAR____TtCV23IntelligenceFlowRuntime40TranscriptEntityQueryingXPCServiceServer6Server_allGroupQueryingAllowed] = 0;
        }
        type metadata accessor for TranscriptEntityQueryingService();
        swift_allocObject();
        *(_QWORD *)&v38[OBJC_IVAR____TtCV23IntelligenceFlowRuntime40TranscriptEntityQueryingXPCServiceServer6Server_transcriptQueryingService] = sub_23FD662B4(v24, v23);

        v41.receiver = v38;
        v41.super_class = ObjectType;
        v34 = objc_msgSendSuper2(&v41, sel_init);
        sub_23FD6A944();
        (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v5, v6);
        return (uint64_t)v34;
      }
    }
    else
    {
      sub_23FBFEF74((uint64_t)v46, &qword_254346A38);
    }
    _s23IntelligenceFlowRuntime0aB6DaemonV6logger2os6LoggerVvgZ_0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 16))(v10, v5, v6);
    v27 = sub_23FD72BE4();
    v28 = sub_23FD74F54();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc();
      v46[0] = swift_slowAlloc();
      *(_DWORD *)v29 = 136315138;
      v30 = sub_23FD72614();
      if (v31)
      {
        v32 = v31;
      }
      else
      {
        v30 = 0x6E776F6E6B6E75;
        v32 = 0xE700000000000000;
      }
      *(_QWORD *)&v44 = sub_23FC9DC40(v30, v32, v46);
      sub_23FD75044();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v10, v6);
      _os_log_impl(&dword_23FBF8000, v27, v28, "SessionXPCServiceServer: client %s is missing group-identifier entitlement.", v29, 0xCu);
      swift_arrayDestroy();
      sub_23FBFEFA0();
    }

    sub_23FD6A944();
    v33 = *(void (**)(uint64_t, uint64_t))(v39 + 8);
    v33(v10, v6);
    v33(v5, v6);
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v15, v11);
    swift_release();
    swift_release();

    swift_release();
    swift_deallocPartialClassInstance();
    return 0;
  }
  __break(1u);
  return result;
}

void sub_23FD69254(uint64_t a1, unint64_t a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;

  sub_23FBFD684(&qword_254346A28);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v6, v7);
  v8 = sub_23FCD4F08();
  sub_23FCD4F24(v8);
  v9 = (_QWORD *)sub_23FC58AA0();
  v9[2] = v2;
  v9[3] = a1;
  v9[4] = a2;
  v10 = v2;
  sub_23FC577F4(a1, a2);
  sub_23FBFF104();
  sub_23FD74E70();
  swift_release();
  swift_release();
  sub_23FBFEF74(v3, &qword_254346A28);
}

uint64_t sub_23FD69328(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  v5 = sub_23FD722D8();
  v4[6] = v5;
  v4[7] = *(_QWORD *)(v5 - 8);
  v4[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23FD6938C()
{
  _QWORD *v0;

  sub_23FCDE018(&qword_256F65E98, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BE53F58], MEMORY[0x24BE53F68]);
  sub_23FD7127C();
  v0[9] = 0;
  v0[10] = *(_QWORD *)(v0[3]
                     + OBJC_IVAR____TtCV23IntelligenceFlowRuntime40TranscriptEntityQueryingXPCServiceServer6Server_transcriptQueryingService);
  return swift_task_switch();
}

uint64_t sub_23FD69460()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = v0[9];
  sub_23FD6633C(v0[8], v0[2]);
  v0[11] = v1;
  return sub_23FC75178();
}

uint64_t sub_23FD694B8()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 56) + 8))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 48));
  swift_task_dealloc();
  return sub_23FC5AADC(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FD694F8()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 56) + 8))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 48));
  swift_task_dealloc();
  return sub_23FC5AADC(*(uint64_t (**)(void))(v0 + 8));
}

void sub_23FD695EC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  id v16;

  sub_23FD6A8D4();
  v5 = v4;
  v7 = v6;
  sub_23FBFF104();
  sub_23FD6A958();
  MEMORY[0x24BDAC7A8](v8, v9);
  sub_23FD6A8E8();
  sub_23FBFD684(&qword_254346A28);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v10, v11);
  v12 = sub_23FCD4F08();
  sub_23FCD4F24(v12);
  v13 = sub_23FC58AA0();
  *(_QWORD *)(v13 + 16) = v7;
  *(_QWORD *)(v13 + 24) = v5;
  sub_23FD6A898();
  v14 = (*(unsigned __int8 *)(v0 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v1;
  sub_23FC5A8C8(v15 + v14, v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 32));
  swift_retain();
  v16 = v1;
  sub_23FD74E70();
  swift_release();
  swift_release();
  swift_release();
  sub_23FBFEF74(v2, &qword_254346A28);
  sub_23FC060D4();
}

uint64_t sub_23FD69704(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  return swift_task_switch();
}

uint64_t sub_23FD69720()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[4];
  v0[6] = *(_QWORD *)(v1
                    + OBJC_IVAR____TtCV23IntelligenceFlowRuntime40TranscriptEntityQueryingXPCServiceServer6Server_jsonEncoder);
  v0[7] = *(_QWORD *)(v1
                    + OBJC_IVAR____TtCV23IntelligenceFlowRuntime40TranscriptEntityQueryingXPCServiceServer6Server_transcriptQueryingService);
  return sub_23FC7E238();
}

uint64_t sub_23FD69750()
{
  uint64_t *v0;

  v0[8] = sub_23FD665A0(v0[5]);
  v0[9] = 0;
  return sub_23FC75178();
}

uint64_t sub_23FD697B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;

  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 64);
  v1 = *(_QWORD *)(v0 + 72);
  sub_23FBFD684(&qword_256F65E70);
  sub_23FD6A660();
  v3 = sub_23FD712A0();
  if (v1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = v2;
    v5 = *(uint64_t **)(v0 + 24);
    swift_bridgeObjectRelease();
    *v5 = v3;
    v5[1] = v4;
  }
  return sub_23FC5B938(*(uint64_t (**)(void))(v0 + 8));
}

void sub_23FD6986C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  id v16;

  sub_23FD6A8D4();
  v5 = v4;
  v7 = v6;
  sub_23FBFF104();
  sub_23FD6A958();
  MEMORY[0x24BDAC7A8](v8, v9);
  sub_23FD6A8E8();
  sub_23FBFD684(&qword_254346A28);
  sub_23FBFF168();
  MEMORY[0x24BDAC7A8](v10, v11);
  v12 = sub_23FCD4F08();
  sub_23FCD4F24(v12);
  v13 = sub_23FC58AA0();
  *(_QWORD *)(v13 + 16) = v7;
  *(_QWORD *)(v13 + 24) = v5;
  sub_23FD6A898();
  v14 = (*(unsigned __int8 *)(v0 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v1;
  sub_23FC5A8C8(v15 + v14, v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 32));
  sub_23FCD4678();
  swift_retain();
  v16 = v1;
  sub_23FD74E70();
  swift_release();
  swift_release();
  swift_release();
  sub_23FBFEF74(v2, &qword_254346A28);
  sub_23FC060D4();
}

uint64_t sub_23FD6998C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[6] = a2;
  v3[7] = a3;
  v3[5] = a1;
  return swift_task_switch();
}

uint64_t sub_23FD699A8()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 64) = *(_QWORD *)(*(_QWORD *)(v0 + 48)
                                   + OBJC_IVAR____TtCV23IntelligenceFlowRuntime40TranscriptEntityQueryingXPCServiceServer6Server_transcriptQueryingService);
  return sub_23FC7E238();
}

uint64_t sub_23FD699C8()
{
  sub_23FC59120();
  sub_23FD6A408();
  swift_endAccess();
  swift_release();
  return sub_23FC75178();
}

uint64_t sub_23FD69A38()
{
  uint64_t v0;
  uint64_t *v1;

  v1 = *(uint64_t **)(v0 + 40);
  sub_23FCD4678();
  *v1 = sub_23FD75014();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23FD69A9C()
{
  void (*v0)(uint64_t, uint64_t, uint64_t);
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  const void *v4;
  const void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;

  sub_23FD6A8D4();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v8 = sub_23FBFF104();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8, v10);
  sub_23FBFF180();
  v13 = v12 - v11;
  v14 = _Block_copy(v5);
  sub_23FD7145C();
  v15 = sub_23FC58AA0();
  *(_QWORD *)(v15 + 16) = v14;
  v16 = v7;
  v1(v13, v3, v15);

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v13, v8);
  sub_23FC060D4();
}

uint64_t type metadata accessor for TranscriptEntityQueryingXPCServiceServer.Server()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for TranscriptEntityQueryingXPCServiceServer()
{
  return &type metadata for TranscriptEntityQueryingXPCServiceServer;
}

void sub_23FD69BFC()
{
  sub_23FCDE018(&qword_254346D20, 255, MEMORY[0x24BE53F78], MEMORY[0x24BE53F70]);
}

uint64_t sub_23FD69C2C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_23FD68CEC();
  *a1 = result;
  return result;
}

uint64_t sub_23FD69C50@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_23FD68C5C();
  *a1 = result;
  return result;
}

uint64_t sub_23FD69C78(uint64_t *a1)
{
  return sub_23FD68CA0(*a1);
}

uint64_t (*sub_23FD69C9C())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

void sub_23FD69CEC()
{
  sub_23FCDE018(&qword_256F65E48, 255, MEMORY[0x24BE53F98], MEMORY[0x24BE53F90]);
}

void sub_23FD69D1C(uint64_t a1, uint64_t a2)
{
  sub_23FCDE018(&qword_254346D78, a2, (uint64_t (*)(uint64_t))type metadata accessor for TranscriptEntityQueryingXPCServiceServer.Server, (uint64_t)&unk_23FD833DC);
}

uint64_t sub_23FD69D48()
{
  uint64_t v0;
  id v1;

  swift_beginAccess();
  v0 = qword_254346EB0;
  v1 = (id)qword_254346EB0;
  return v0;
}

void sub_23FD69D90(uint64_t a1)
{
  void *v2;

  swift_beginAccess();
  v2 = (void *)qword_254346EB0;
  qword_254346EB0 = a1;

}

uint64_t (*sub_23FD69DDC())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_23FD69E1C()
{
  swift_beginAccess();
  return swift_unknownObjectRetain();
}

uint64_t sub_23FD69E60(uint64_t a1)
{
  swift_beginAccess();
  qword_254346EA8 = a1;
  return swift_unknownObjectRelease();
}

uint64_t (*sub_23FD69EAC())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_23FD69EEC()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_23FD69F10(_QWORD *a1)
{
  uint64_t v1;

  (*(void (**)(_QWORD))(v1 + 16))(*a1);
  sub_23FBFF0A0();
}

uint64_t sub_23FD69F34()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23FBFF104();
  sub_23FCD517C();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_23FCD4F38(v1);
  return sub_23FD6998C(v2, v3, v4);
}

uint64_t sub_23FD69F8C()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_23FD6A8D4();
  v2 = v1;
  sub_23FD6A828();
  sub_23FC84E40(v2);
  sub_23FD6A800();
  if ((v0 & 1) != 0)
  {
    sub_23FD6A91C();
    sub_23FD6A7E4();
    sub_23FBFD684(&qword_256F65DE8);
    sub_23FD6A7D0();
    v3 = type metadata accessor for SessionID(0);
    sub_23FD6A8C0(v3);
    v4 = type metadata accessor for SessionSwitchboard.SessionInfo();
    sub_23FD6A8AC(v4, v5, (uint64_t (*)(_QWORD))type metadata accessor for SessionSwitchboard.SessionInfo);
    sub_23FD6A850(&qword_256F614C0, v6, v7, (uint64_t)&protocol conformance descriptor for SessionID);
    sub_23FD6A838();
    sub_23FD6A878();
    v8 = sub_23FD6A924();
  }
  else
  {
    type metadata accessor for SessionSwitchboard.SessionInfo();
    v8 = sub_23FCCCD10();
  }
  return sub_23FD6A810(v8, v9, v10, v11);
}

uint64_t sub_23FD6A050()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  sub_23FD6A8D4();
  sub_23FD6A828();
  sub_23FC84C70();
  sub_23FD6A800();
  if ((v1 & 1) != 0)
  {
    sub_23FD6A91C();
    sub_23FD6A7E4();
    sub_23FBFD684(&qword_256F65DF8);
    sub_23FD6A7D0();
    v2 = *(_QWORD *)(v13 + 48);
    v3 = sub_23FBFF104();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2 + *(_QWORD *)(*(_QWORD *)(v3 - 8) + 72) * v0, v3);
    v4 = type metadata accessor for SessionCoordinatorInjectionRequest(0);
    sub_23FD6A8AC(v4, v5, type metadata accessor for SessionCoordinatorInjectionRequest);
    sub_23FD6A850(&qword_256F65DB0, v6, v7, MEMORY[0x24BDCEA88]);
    sub_23FD6A838();
    sub_23FD6A878();
    v8 = sub_23FD6A924();
  }
  else
  {
    type metadata accessor for SessionCoordinatorInjectionRequest(0);
    v8 = sub_23FCCCD10();
  }
  return sub_23FD6A810(v8, v9, v10, v11);
}

uint64_t sub_23FD6A124(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v10;

  v3 = v2;
  sub_23FD6A94C();
  v6 = sub_23FC84EE0(a1, a2);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 0;
  swift_isUniquelyReferenced_nonNull_native();
  sub_23FD6A85C();
  sub_23FBFD684(&qword_256F65DF0);
  sub_23FD6A7D0();
  sub_23FD6A938();
  v8 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v6);
  sub_23FC57BCC();
  sub_23FD75218();
  *v3 = v10;
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_23FD6A1FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  sub_23FD6A828();
  sub_23FC84D84(a1, a2);
  sub_23FD6A800();
  if ((v3 & 1) != 0)
  {
    sub_23FD6A91C();
    sub_23FD6A7E4();
    sub_23FBFD684(&qword_256F65E08);
    sub_23FD6A7D0();
    sub_23FD6A938();
    v6 = *(_QWORD *)(v13 + 56);
    v7 = sub_23FD73C28();
    sub_23FC5A8C8(v2, v6 + *(_QWORD *)(*(_QWORD *)(v7 - 8) + 72) * a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32));
    sub_23FD75218();
    sub_23FD6A878();
    v8 = v2;
    v9 = 0;
    v10 = 1;
    v11 = v7;
  }
  else
  {
    sub_23FD73C28();
    v8 = sub_23FCCCD10();
  }
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v8, v9, v10, v11);
}

double sub_23FD6A2E4()
{
  _QWORD *v0;
  uint64_t v1;
  char v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  double result;
  uint64_t v15;

  sub_23FD6A8D4();
  v3 = v0;
  v5 = v4;
  v7 = v6;
  sub_23FD6A94C();
  sub_23FC84E34(v5);
  sub_23FD6A800();
  if ((v2 & 1) != 0)
  {
    swift_isUniquelyReferenced_nonNull_native();
    sub_23FD6A85C();
    sub_23FBFD684(&qword_256F65E00);
    sub_23FD6A7D0();
    v8 = type metadata accessor for SessionClientID(0);
    sub_23FD6A8C0(v8);
    v9 = *(_QWORD *)(v15 + 56) + 56 * v1;
    v10 = *(_QWORD *)(v9 + 8);
    v11 = *(_BYTE *)(v9 + 32);
    *(_QWORD *)v7 = *(_QWORD *)v9;
    *(_QWORD *)(v7 + 8) = v10;
    *(_OWORD *)(v7 + 16) = *(_OWORD *)(v9 + 16);
    *(_BYTE *)(v7 + 32) = v11;
    *(_OWORD *)(v7 + 40) = *(_OWORD *)(v9 + 40);
    sub_23FD6A850(&qword_256F614C8, v12, v13, (uint64_t)&unk_23FD79510);
    sub_23FD75218();
    *v3 = v15;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)(v7 + 48) = 0;
    result = 0.0;
    *(_OWORD *)(v7 + 16) = 0u;
    *(_OWORD *)(v7 + 32) = 0u;
    *(_OWORD *)v7 = 0u;
  }
  return result;
}

uint64_t sub_23FD6A408()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v11;

  v1 = v0;
  swift_bridgeObjectRetain();
  sub_23FC84C70();
  v3 = v2;
  v5 = v4;
  swift_bridgeObjectRelease();
  if ((v5 & 1) == 0)
    return 0;
  swift_isUniquelyReferenced_nonNull_native();
  v11 = *v1;
  *v1 = 0x8000000000000000;
  sub_23FBFD684(&qword_256F65DD8);
  sub_23FD75200();
  v6 = *(_QWORD *)(v11 + 48);
  v7 = sub_23FD71474();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6 + *(_QWORD *)(*(_QWORD *)(v7 - 8) + 72) * v3, v7);
  v9 = *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v3);
  type metadata accessor for TranscriptEntityQueryingService.ActiveQueryState();
  sub_23FCDE018(&qword_256F65DB0, 255, v8, MEMORY[0x24BDCEA88]);
  sub_23FD75218();
  *v1 = v11;
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_23FD6A548()
{
  swift_release();
  return swift_deallocObject();
}

void sub_23FD6A56C(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;

  (*(void (**)(_QWORD, _QWORD, uint64_t))(v2 + 16))(*a1, a1[1], a2);
  sub_23FBFF0A0();
}

uint64_t sub_23FD6A598()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_23FBFF104();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23FD6A608()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_23FBFF104();
  sub_23FCD517C();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_23FCD4F38(v1);
  return sub_23FD69704(v2, v3, v4);
}

unint64_t sub_23FD6A660()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256F65E78;
  if (!qword_256F65E78)
  {
    v1 = sub_23FBFEDE8(&qword_256F65E70);
    sub_23FCDE018(&qword_256F65E80, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BE53928], MEMORY[0x24BE53938]);
    v3 = v2;
    result = MEMORY[0x2426797E8](MEMORY[0x24BEE12A0], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256F65E78);
  }
  return result;
}

uint64_t sub_23FD6A6E0()
{
  uint64_t v0;

  sub_23FC577B0(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  return swift_deallocObject();
}

uint64_t sub_23FD6A70C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23FD6A7C0;
  return sub_23FD69328(a1, v4, v5, v6);
}

uint64_t sub_23FD6A778(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23FBFD684(qword_254346A10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23FD6A7D0()
{
  return sub_23FD75200();
}

void sub_23FD6A7E4()
{
  _QWORD *v0;

  *v0 = 0x8000000000000000;
}

uint64_t sub_23FD6A800()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FD6A810(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a1, a2, a3, a4);
}

uint64_t sub_23FD6A828()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_23FD6A838()
{
  return sub_23FD75218();
}

void sub_23FD6A850(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t (*v4)(uint64_t);

  sub_23FCDE018(a1, 255, v4, a4);
}

void sub_23FD6A85C()
{
  _QWORD *v0;

  *v0 = 0x8000000000000000;
}

uint64_t sub_23FD6A878()
{
  uint64_t v0;
  _QWORD *v1;

  *v1 = v0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FD6A884()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 16))(v0, v1);
}

uint64_t sub_23FD6A898()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 16))(v2, v3, v1);
}

void sub_23FD6A8AC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23FC09A70(v5 + *(_QWORD *)(*(_QWORD *)(a1 - 8) + 72) * v4, v3, a3);
}

void sub_23FD6A8C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;

  sub_23FBFEF18(v3 + *(_QWORD *)(*(_QWORD *)(a1 - 8) + 72) * v1, v2);
}

uint64_t sub_23FD6A900()
{
  return swift_dynamicCast();
}

uint64_t sub_23FD6A910()
{
  return sub_23FD75074();
}

uint64_t sub_23FD6A91C()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_23FD6A924()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FD6A938()
{
  return swift_bridgeObjectRelease();
}

void sub_23FD6A944()
{
  uint64_t v0;

}

uint64_t sub_23FD6A94C()
{
  return swift_bridgeObjectRetain();
}

void static SimilarityFunctions.cosine<A>(_:_:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[4];

  v23[3] = a4;
  v23[1] = *(_QWORD *)(a3 - 8);
  v8 = MEMORY[0x24BDAC7A8](a1, a2);
  v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8, v11);
  sub_23FCCCC6C();
  v14 = MEMORY[0x24BDAC7A8](v12, v13);
  v16 = (char *)v23 - v15;
  v18 = MEMORY[0x24BDAC7A8](v14, v17);
  v20 = (char *)v23 - v19;
  sub_23FD6AAAC(v18, v21, v22, (uint64_t)v23 - v19);
  if (!v4)
  {
    sub_23FD6B10C(a1, v5);
    sub_23FD6B10C(a2, (uint64_t)v10);
    sub_23FD74F24();
    sub_23FD6B104((uint64_t)v10);
    sub_23FD6B104(v5);
    sub_23FD74BAC();
    sub_23FD6B104((uint64_t)v16);
    sub_23FD6B104((uint64_t)v20);
  }
  sub_23FC06000();
}

void sub_23FD6AAAC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v25 = a2;
  v23 = *(_QWORD *)(a3 - 8);
  v24 = a1;
  v7 = MEMORY[0x24BDAC7A8](a1, a2);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v10);
  sub_23FCCCC6C();
  MEMORY[0x24BDAC7A8](v11, v12);
  v14 = (char *)&v21 - v13;
  swift_getAssociatedTypeWitness();
  sub_23FD6B0EC();
  MEMORY[0x24BDAC7A8](v15, v16);
  swift_getAssociatedConformanceWitness();
  sub_23FD753A4();
  v22 = a4;
  sub_23FD75368();
  v17 = MEMORY[0x242678B04](v24, a3);
  if (v17 != MEMORY[0x242678B04](v25, a3))
  {
LABEL_9:
    sub_23FD6AFD4();
    swift_allocError();
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, a3);
LABEL_10:
    sub_23FC06000();
    return;
  }
  v18 = v17 - 1;
  if (__OFSUB__(v17, 1))
  {
    __break(1u);
  }
  else if ((v18 & 0x8000000000000000) == 0)
  {
    v19 = 0;
    while (1)
    {
      sub_23FD74D74();
      sub_23FD74D74();
      sub_23FD74F24();
      sub_23FD6B118((uint64_t)v9);
      sub_23FD6B118(v4);
      sub_23FD7523C();
      sub_23FD6B118((uint64_t)v14);
      if (v18 == v19)
        goto LABEL_10;
      if (__OFADD__(v19++, 1))
      {
        __break(1u);
        goto LABEL_9;
      }
    }
  }
  __break(1u);
}

uint64_t sub_23FD6ACF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char v27;
  void (*v28)(char *, uint64_t);
  uint64_t result;
  _QWORD v30[4];
  uint64_t v31;
  uint64_t i;

  v30[1] = a4;
  v30[2] = a3;
  v30[3] = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) + 8) + 16);
  swift_getAssociatedTypeWitness();
  sub_23FD6B0EC();
  v8 = MEMORY[0x24BDAC7A8](v6, v7);
  v9 = *(_QWORD *)(a2 - 8);
  v11 = MEMORY[0x24BDAC7A8](v8, v10);
  v13 = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v11, v14);
  v17 = (char *)v30 - v16;
  v19 = MEMORY[0x24BDAC7A8](v15, v18);
  v21 = (char *)v30 - v20;
  v30[0] = v22;
  MEMORY[0x24BDAC7A8](v19, v23);
  v25 = (char *)v30 - v24;
  swift_getAssociatedConformanceWitness();
  sub_23FD753A4();
  sub_23FD75368();
  swift_bridgeObjectRetain();
  v26 = sub_23FD74CE4();
  for (i = v26; ; v26 = i)
  {
    if (v26 == MEMORY[0x242678B10](a1, a2))
    {
      swift_bridgeObjectRelease();
      sub_23FD74BA0();
      return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v25, a2);
    }
    v27 = sub_23FD74D38();
    sub_23FD74D08();
    if ((v27 & 1) != 0)
    {
      sub_23FC1046C((uint64_t)v21, a1+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v26, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16));
      goto LABEL_5;
    }
    result = sub_23FD75104();
    if (v30[0] != 8)
      break;
    v31 = result;
    sub_23FC1046C((uint64_t)v21, (uint64_t)&v31, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16));
    swift_unknownObjectRelease();
LABEL_5:
    swift_bridgeObjectRetain();
    MEMORY[0x242678B1C](&i, a1, a2);
    swift_bridgeObjectRelease();
    sub_23FC1046C((uint64_t)v17, (uint64_t)v21, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 32));
    sub_23FD74F24();
    sub_23FD7523C();
    v28 = *(void (**)(char *, uint64_t))(v9 + 8);
    v28(v13, a2);
    v28(v17, a2);
  }
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for SimilarityFunctions()
{
  return &type metadata for SimilarityFunctions;
}

unint64_t sub_23FD6AFD4()
{
  unint64_t result;

  result = qword_256F65EA0;
  if (!qword_256F65EA0)
  {
    result = MEMORY[0x2426797E8](&unk_23FD8356C, &type metadata for SimilarityError);
    atomic_store(result, (unint64_t *)&qword_256F65EA0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SimilarityError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23FD6B050 + 4 * byte_23FD834D0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23FD6B070 + 4 * byte_23FD834D5[v4]))();
}

_BYTE *sub_23FD6B050(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23FD6B070(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23FD6B078(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23FD6B080(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23FD6B088(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23FD6B090(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SimilarityError()
{
  return &type metadata for SimilarityError;
}

unint64_t sub_23FD6B0B0()
{
  unint64_t result;

  result = qword_256F65EA8;
  if (!qword_256F65EA8)
  {
    result = MEMORY[0x2426797E8](&unk_23FD83544, &type metadata for SimilarityError);
    atomic_store(result, (unint64_t *)&qword_256F65EA8);
  }
  return result;
}

uint64_t sub_23FD6B104(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t sub_23FD6B10C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return sub_23FD6ACF0(a1, v3, v2, a2);
}

uint64_t sub_23FD6B118(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

ValueMetadata *_s17WaterfallMediatorVMa()
{
  return &_s17WaterfallMediatorVN;
}

uint64_t sub_23FD6B130(uint64_t a1, _QWORD *a2)
{
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *((_QWORD *)v2 + 1);
  v5 = *v2;
  v6 = sub_23FBFDE40(a2, a2[3]);
  return sub_23FD6B17C(a1, (uint64_t)v6, v5, v4);
}

uint64_t sub_23FD6B17C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int v26;
  uint64_t v28[5];

  v28[3] = _s19TranscriptRetrieverVMa();
  v28[4] = (uint64_t)&off_251014790;
  v7 = sub_23FBFDDEC(v28);
  sub_23FD6B374(a2, (uint64_t)v7);
  v8 = *(_QWORD *)(a4 + 16);
  if (v8)
  {
    v26 = a3;
    v9 = (_QWORD *)(a4 + 32);
    swift_bridgeObjectRetain();
    v10 = 0;
    v11 = MEMORY[0x24BEE4AF8];
    while (1)
    {
      v12 = v9[3];
      v13 = v9[4];
      sub_23FBFDE40(v9, v12);
      v14 = (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v13 + 16))(a1, v28, v12, v13);
      v16 = v15;
      v18 = v17;
      v20 = v19;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23FC99440();
        v11 = v23;
      }
      v21 = *(_QWORD *)(v11 + 16);
      if (v21 >= *(_QWORD *)(v11 + 24) >> 1)
      {
        sub_23FC99440();
        v11 = v24;
      }
      *(_QWORD *)(v11 + 16) = v21 + 1;
      v22 = v11 + 32 * v21;
      *(_BYTE *)(v22 + 32) = v14;
      *(_BYTE *)(v22 + 40) = v16;
      *(_QWORD *)(v22 + 48) = v18;
      *(_QWORD *)(v22 + 56) = v20;
      if (!v16)
        break;
      swift_bridgeObjectRelease();
      if (v10)
        goto LABEL_11;
      v10 = v18;
LABEL_12:
      v9 += 5;
      if (!--v8)
      {
        swift_bridgeObjectRelease();
        a3 = v26;
        goto LABEL_14;
      }
    }
    swift_bridgeObjectRelease();
LABEL_11:
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
LABEL_14:
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v28);
  return a3;
}

uint64_t sub_23FD6B374(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s19TranscriptRetrieverVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23FD6B3B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v20[2];
  __int128 v21[2];

  type metadata accessor for SessionIdentityPack(0);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v8, v9);
  sub_23FC100D4();
  v12 = v10 - v11;
  MEMORY[0x24BDAC7A8](v13, v14);
  v16 = (char *)v20 - v15;
  sub_23FC12ECC(a1, (uint64_t)v20 - v15, type metadata accessor for SessionIdentityPack);
  v17 = *(_QWORD *)(v4 + 16);
  sub_23FC584E0(a4, (uint64_t)v21);
  sub_23FC584E0(a3, (uint64_t)v20);
  sub_23FC12ECC(a1, v12, type metadata accessor for SessionIdentityPack);
  type metadata accessor for ToolInvocationSummaryRetriever();
  v18 = sub_23FBFF1C4();
  swift_retain();
  swift_defaultActor_initialize();
  sub_23FBFDE28(v20, v18 + 112);
  sub_23FC06D0C(v12, v18 + OBJC_IVAR____TtC23IntelligenceFlowRuntime30ToolInvocationSummaryRetriever_sessionId);
  return sub_23FD70074((uint64_t)v16, v17, v21, v18);
}

uint64_t sub_23FD6B4D8()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for XPCClientAvatarConfiguration()
{
  return objc_opt_self();
}

uint64_t sub_23FD6B51C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t result;

  result = sub_23FD6B3B8(a1, a2, a3, a4);
  *a5 = result;
  return result;
}

uint64_t sub_23FD6B544(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[5] = a1;
  v2[6] = v1;
  v3 = sub_23FD70B38();
  v2[7] = v3;
  v2[8] = *(_QWORD *)(v3 - 8);
  v2[9] = sub_23FC0901C();
  sub_23FD70C2C();
  v2[10] = sub_23FC0901C();
  sub_23FBFD684(qword_254346A10);
  v2[11] = sub_23FC0901C();
  v4 = sub_23FBFF104();
  v2[12] = v4;
  v2[13] = *(_QWORD *)(v4 - 8);
  v2[14] = sub_23FC5C13C();
  v2[15] = sub_23FC5C588();
  type metadata accessor for SessionID(0);
  v2[16] = sub_23FC0901C();
  v5 = sub_23FD70C34();
  v2[17] = v5;
  v2[18] = *(_QWORD *)(v5 - 8);
  v2[19] = sub_23FC0901C();
  sub_23FC09208();
  return sub_23FC5A63C();
}

uint64_t sub_23FD6B5FC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = v0[15];
  v1 = v0[16];
  v3 = v0[13];
  v4 = v0[11];
  v5 = v0[9];
  v6 = v0[6];
  v12 = v0[5];
  v13 = v0[8];
  v14 = v0[7];
  sub_23FC12ECC(v6 + OBJC_IVAR____TtC23IntelligenceFlowRuntime15XPCClientAvatar_sessionId, v1, type metadata accessor for SessionID);
  sub_23FBFF1E4(v2, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32));
  _s23IntelligenceFlowRuntime9SessionIDVACycfC_0();
  v7 = v6 + OBJC_IVAR____TtC23IntelligenceFlowRuntime15XPCClientAvatar_latestClientSentQueryEventId;
  sub_23FC75394();
  sub_23FC92F18(v7, v4, qword_254346A10);
  type metadata accessor for SessionIdentityPack(0);
  swift_bridgeObjectRetain();
  sub_23FD71408();
  v8 = sub_23FD7229C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v5, v12, v8);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v13 + 104))(v5, *MEMORY[0x24BE529C8], v14);
  sub_23FD71F00();
  sub_23FBFDE40((_QWORD *)(v6 + OBJC_IVAR____TtC23IntelligenceFlowRuntime15XPCClientAvatar_clientReverseClientDistributor), *(_QWORD *)(v6 + OBJC_IVAR____TtC23IntelligenceFlowRuntime15XPCClientAvatar_clientReverseClientDistributor + 24));
  v9 = (_QWORD *)swift_task_alloc();
  v0[20] = v9;
  *v9 = v0;
  v9[1] = sub_23FD6B7AC;
  v10 = sub_23FC5B9C8(v0[19]);
  return sub_23FC1E34C(v10);
}

uint64_t sub_23FD6B7AC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23FC5D3A4();
  sub_23FC75274(v2);
  *(_QWORD *)(v0 + 168) = v1;
  swift_task_dealloc();
  return sub_23FC5A63C();
}

uint64_t sub_23FD6B7FC()
{
  uint64_t v0;

  sub_23FD708FC();
  sub_23FC090D0();
  sub_23FC090C0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  return sub_23FC7E100(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FD6B84C()
{
  uint64_t v0;

  sub_23FD708FC();
  sub_23FC090D0();
  sub_23FC090C0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  return sub_23FC7E100(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FD6B89C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[2] = a1;
  v2[3] = v1;
  sub_23FD73EC8();
  v2[4] = sub_23FC0901C();
  sub_23FD71DA4();
  v2[5] = sub_23FC0901C();
  v3 = sub_23FD70B38();
  v2[6] = v3;
  v2[7] = *(_QWORD *)(v3 - 8);
  v2[8] = sub_23FC0901C();
  sub_23FD70C2C();
  v2[9] = sub_23FC0901C();
  v4 = sub_23FD70D78();
  v2[10] = v4;
  v2[11] = *(_QWORD *)(v4 - 8);
  v2[12] = sub_23FC0901C();
  sub_23FBFD684(qword_254346A10);
  v2[13] = sub_23FC0901C();
  sub_23FBFF104();
  v2[14] = sub_23FC5C13C();
  v2[15] = sub_23FC5C588();
  v5 = sub_23FD70C34();
  v2[16] = v5;
  v2[17] = *(_QWORD *)(v5 - 8);
  v2[18] = sub_23FC0901C();
  sub_23FC09208();
  return sub_23FC5A63C();
}

uint64_t sub_23FD6B978()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = v0[12];
  v6 = v0[11];
  v7 = v0[10];
  v2 = v0[8];
  v8 = v0[7];
  v9 = v0[6];
  v10 = v0[3];
  sub_23FD73EE0();
  sub_23FD73EBC();
  sub_23FD73E44();
  sub_23FD73E74();
  sub_23FD73E5C();
  sub_23FD73EEC();
  sub_23FD74240();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v7);
  sub_23FD73ED4();
  sub_23FD71D98();
  sub_23FD71DB0();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v8 + 104))(v2, *MEMORY[0x24BE52768], v9);
  sub_23FD71F00();
  sub_23FBFDE40((_QWORD *)(v10 + OBJC_IVAR____TtC23IntelligenceFlowRuntime15XPCClientAvatar_clientReverseClientDistributor), *(_QWORD *)(v10 + OBJC_IVAR____TtC23IntelligenceFlowRuntime15XPCClientAvatar_clientReverseClientDistributor + 24));
  v3 = (_QWORD *)swift_task_alloc();
  v0[19] = v3;
  *v3 = v0;
  v3[1] = sub_23FD6BAEC;
  v4 = sub_23FC5B9C8(v0[18]);
  return sub_23FC1E34C(v4);
}

uint64_t sub_23FD6BAEC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23FC5D3A4();
  sub_23FC75274(v2);
  *(_QWORD *)(v0 + 160) = v1;
  swift_task_dealloc();
  return sub_23FC5A63C();
}

uint64_t sub_23FD6BB3C()
{
  uint64_t v0;

  sub_23FD70828();
  sub_23FC090D0();
  sub_23FC090C0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  sub_23FC5B980();
  sub_23FC5BCA0();
  return sub_23FC09088(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FD6BB98()
{
  uint64_t v0;

  sub_23FD70828();
  sub_23FC090D0();
  sub_23FC090C0();
  sub_23FC5A574();
  sub_23FC5AB04();
  sub_23FC5AC3C();
  sub_23FC5B2D4();
  sub_23FC5B2F4();
  sub_23FC5B980();
  sub_23FC5BCA0();
  return sub_23FC09088(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_23FD6BBF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4[9] = a3;
  v4[10] = v3;
  v4[7] = a1;
  v4[8] = a2;
  v5 = sub_23FD734C0();
  v4[11] = v5;
  v4[12] = *(_QWORD *)(v5 - 8);
  v4[13] = sub_23FC0901C();
  sub_23FD70C2C();
  v4[14] = sub_23FC0901C();
  v6 = sub_23FD70D78();
  v4[15] = v6;
  v4[16] = *(_QWORD *)(v6 - 8);
  v4[17] = sub_23FC0901C();
  v7 = sub_23FD70C34();
  v4[18] = v7;
  v4[19] = *(_QWORD *)(v7 - 8);
  v4[20] = sub_23FC0901C();
  v8 = sub_23FD70B38();
  v4[21] = v8;
  v4[22] = *(_QWORD *)(v8 - 8);
  v4[23] = sub_23FC5C13C();
  v4[24] = sub_23FC5C588();
  sub_23FBFD684(qword_254346A10);
  v4[25] = sub_23FC5C13C();
  v4[26] = sub_23FC5C588();
  v4[27] = sub_23FC5C588();
  v9 = sub_23FBFF104();
  v4[28] = v9;
  v4[29] = *(_QWORD *)(v9 - 8);
  v4[30] = sub_23FC5C13C();
  v4[31] = sub_23FC5C588();
  v4[32] = sub_23FC5C588();
  v4[33] = sub_23FC5C588();
  v10 = sub_23FD72BF0();
  v4[34] = v10;
  v4[35] = *(_QWORD *)(v10 - 8);
  v4[36] = sub_23FC5C13C();
  v4[37] = sub_23FC5C588();
  v4[38] = sub_23FC5C588();
  v4[39] = sub_23FC5C588();
  v4[40] = sub_23FC5C588();
  v11 = sub_23FD740CC();
  v4[41] = v11;
  v4[42] = *(_QWORD *)(v11 - 8);
  v4[43] = sub_23FC5C13C();
  v4[44] = sub_23FC5C588();
  v12 = sub_23FD73E08();
  v4[45] = v12;
  v4[46] = *(_QWORD *)(v12 - 8);
  v4[47] = sub_23FC0901C();
  sub_23FC09208();
  return sub_23FC5A63C();
}

#error "23FD6BF10: call analysis failed (funcsize=225)"

uint64_t sub_23FD6C138()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_23FC5D3A4();
  sub_23FC75274(v2);
  *(_QWORD *)(v0 + 488) = v1;
  swift_task_dealloc();
  sub_23FC090C8(*(_QWORD *)(v0 + 152));
  if (v1)
    sub_23FC1002C();
  return sub_23FC5A63C();
}

#error "23FD6C4F4: call analysis failed (funcsize=281)"

#error "23FD6C940: call analysis failed (funcsize=268)"

uint64_t sub_23FD6CAEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4[6] = a3;
  v4[7] = v3;
  v4[4] = a1;
  v4[5] = a2;
  v5 = sub_23FD734C0();
  v4[8] = v5;
  v4[9] = *(_QWORD *)(v5 - 8);
  v4[10] = sub_23FC0901C();
  v6 = sub_23FD72BF0();
  v4[11] = v6;
  v4[12] = *(_QWORD *)(v6 - 8);
  v4[13] = sub_23FC5C13C();
  v4[14] = sub_23FC5C588();
  v7 = sub_23FD70B38();
  v4[15] = v7;
  v4[16] = *(_QWORD *)(v7 - 8);
  v4[17] = sub_23FC0901C();
  sub_23FD70C2C();
  v4[18] = sub_23FC0901C();
  v8 = sub_23FD70D78();
  v4[19] = v8;
  v4[20] = *(_QWORD *)(v8 - 8);
  v4[21] = sub_23FC0901C();
  sub_23FBFD684(qword_254346A10);
  v4[22] = sub_23FC0901C();
  sub_23FBFF104();
  v4[23] = sub_23FC5C13C();
  v4[24] = sub_23FC5C588();
  v4[25] = sub_23FC5C588();
  v9 = sub_23FD70C34();
  v4[26] = v9;
  v4[27] = *(_QWORD *)(v9 - 8);
  v4[28] = sub_23FC0901C();
  v10 = sub_23FD71900();
  v4[29] = v10;
  v4[30] = *(_QWORD *)(v10 - 8);
  v4[31] = sub_23FC5C13C();
  v4[32] = sub_23FC5C588();
  v11 = sub_23FD738B0();
  v4[33] = v11;
  v4[34] = *(_QWORD *)(v11 - 8);
  v4[35] = sub_23FC0901C();
  v12 = sub_23FD73C7C();
  v4[36] = v12;
  v4[37] = *(_QWORD *)(v12 - 8);
  v4[38] = sub_23FC0901C();
  v13 = sub_23FD7409C();
  v4[39] = v13;
  v4[40] = *(_QWORD *)(v13 - 8);
  v4[41] = sub_23FC0901C();
  sub_23FBFD684(&qword_256F660F8);
  v4[42] = sub_23FC5C13C();
  v4[43] = sub_23FC5C588();
  v14 = sub_23FD740CC();
  v4[44] = v14;
  v4[45] = *(_QWORD *)(v14 - 8);
  v4[46] = sub_23FC0901C();
  v15 = sub_23FD73E08();
  v4[47] = v15;
  v4[48] = *(_QWORD *)(v15 - 8);
  v4[49] = sub_23FC0901C();
  sub_23FC09208();
  return sub_23FC5A63C();
}

uint64_t sub_23FD6CCBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t (*v25)(void);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;

  sub_23FC5E39C();
  v1 = *(_QWORD *)(v0 + 384);
  v2 = *(_QWORD *)(v0 + 40);
  sub_23FD73D6C();
  v3 = sub_23FD73DE4();
  *(_QWORD *)(v0 + 400) = v3;
  result = sub_23FCD51A4(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  if (v2 < 0)
  {
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v5 = *(_QWORD *)(v0 + 40);
  v6 = *(_QWORD *)(v0 + 48);
  v7 = *(_QWORD *)(v3 + 16);
  if (v7 < v5 || (uint64_t)v7 < (uint64_t)v6)
    goto LABEL_20;
  if ((v6 & 0x8000000000000000) != 0)
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    return result;
  }
  if (v5 == v6)
  {
    sub_23FC1002C();
LABEL_9:
    sub_23FD70310();
    sub_23FC5B980();
    sub_23FC5BCA0();
    sub_23FC090D0();
    sub_23FC090C0();
    sub_23FC5A574();
    sub_23FC5AB04();
    sub_23FC5AC3C();
    sub_23FC5B2D4();
    sub_23FC5B2F4();
    sub_23FC5C438();
    sub_23FC5C430();
    sub_23FC5C428();
    sub_23FC5C420();
    sub_23FC5BFE8();
    sub_23FC5BFE0();
    sub_23FC5C980();
    sub_23FC5CDA8();
    sub_23FC5CDF0();
    sub_23FD70A90();
    return sub_23FC75870(*(uint64_t (**)(void))(v0 + 8));
  }
  v9 = *(_QWORD *)(v0 + 360);
  v10 = *(_QWORD *)(v0 + 320);
  v11 = *(_DWORD *)(v9 + 80);
  *(_DWORD *)(v0 + 472) = v11;
  v12 = OBJC_IVAR____TtC23IntelligenceFlowRuntime15XPCClientAvatar_clientReverseClientDistributor;
  *(_QWORD *)(v0 + 408) = OBJC_IVAR____TtC23IntelligenceFlowRuntime15XPCClientAvatar_actionSummaryRetriever;
  *(_QWORD *)(v0 + 416) = v12;
  *(_DWORD *)(v0 + 480) = *MEMORY[0x24BE56C58];
  *(_DWORD *)(v0 + 484) = *MEMORY[0x24BE529B0];
  *(_DWORD *)(v0 + 488) = *MEMORY[0x24BE55570];
  v13 = OBJC_IVAR____TtC23IntelligenceFlowRuntime15XPCClientAvatar_instrumentationSender;
  v14 = *MEMORY[0x24BE56AF8];
  *(_DWORD *)(v0 + 476) = *MEMORY[0x24BE56AF8];
  *(_QWORD *)(v0 + 424) = v13;
  *(_QWORD *)(v0 + 432) = v5;
  if (v5 >= v6)
    goto LABEL_22;
  (*(void (**)(_QWORD, unint64_t, _QWORD))(v9 + 16))(*(_QWORD *)(v0 + 368), *(_QWORD *)(v0 + 400)+ ((v11 + 32) & ~(unint64_t)v11)+ *(_QWORD *)(v9 + 72) * v5, *(_QWORD *)(v0 + 352));
  sub_23FD70D24();
  v15 = sub_23FCD51A4(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 88));
  v17 = *(_QWORD *)(v0 + 320);
  v16 = *(_QWORD *)(v0 + 328);
  v18 = *(_QWORD *)(v0 + 312);
  if (v15 == v14)
  {
    v19 = (_QWORD *)(*(_QWORD *)(v0 + 56) + *(_QWORD *)(v0 + 408));
    sub_23FC0A014(*(uint64_t (**)(uint64_t, uint64_t))(v17 + 96));
    sub_23FD70B74();
    v20 = v19[4];
    sub_23FBFDE40(v19, v19[3]);
    v21 = (_QWORD *)sub_23FD464A8(*(int **)(v20 + 16));
    *(_QWORD *)(v0 + 440) = v21;
    sub_23FD70C4C(v21);
LABEL_15:
    sub_23FD70A24();
    return v25();
  }
  if (v15 == *(_DWORD *)(v0 + 480))
  {
    v22 = (_QWORD *)(*(_QWORD *)(v0 + 56) + *(_QWORD *)(v0 + 408));
    sub_23FC0A014(*(uint64_t (**)(uint64_t, uint64_t))(v17 + 96));
    sub_23FD70B74();
    v23 = v22[4];
    sub_23FBFDE40(v22, v22[3]);
    v24 = (_QWORD *)sub_23FD464A8(*(int **)(v23 + 8));
    *(_QWORD *)(v0 + 448) = v24;
    sub_23FD70C3C(v24);
    goto LABEL_15;
  }
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(*(_QWORD *)(v0 + 344), 1, 1, *(_QWORD *)(v0 + 232));
  sub_23FC0A014(*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8));
  v26 = sub_23FD70BE8();
  sub_23FD70A68(v26, v27, &qword_256F660F8);
  v28 = sub_23FC100EC(v16, 1, v18);
  if (v36)
  {
    v37 = sub_23FD709F0();
    sub_23FD707C0(v37);
    sub_23FCD51A4(*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8));
    sub_23FC1002C();
    sub_23FD707C0(v10);
    goto LABEL_9;
  }
  sub_23FD703D8(v28, v29, v30, v31, v32, v33, v34, v35, v58, v61, v64, v67, v70);
  sub_23FD70768();
  sub_23FD70A1C();
  sub_23FD70D38();
  sub_23FD73FF4();
  v38 = sub_23FD70CC4();
  v62 = v39;
  v65 = v38;
  sub_23FD70A38();
  sub_23FD70888();
  sub_23FC5B944(v73);
  v40 = sub_23FD708BC();
  sub_23FD7084C(v40, v41, v42, v43, v44, v45, v46, v47, v59, v62, v65, v68, v71, v73, v75, v77, v79, v81, v83, v85, v87);
  v48 = sub_23FD706EC();
  sub_23FD70750(v48, v49, v50, v51, v52, v53, v54, v55, v60, v63, v66, v69, v72, v74, v76, v78, v80, v82, v84,
    v86,
    v88,
    v89);
  sub_23FD70630();
  sub_23FD70BB4();
  v56 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 456) = v56;
  v57 = sub_23FD70710(v56, (uint64_t)sub_23FD6D2F4);
  return sub_23FD705EC(v57);
}

uint64_t sub_23FD6D00C()
{
  sub_23FD70A70();
  sub_23FC09208();
  return sub_23FC0907C();
}

#error "23FD6D110: call analysis failed (funcsize=75)"

uint64_t sub_23FD6D180()
{
  sub_23FD70A70();
  sub_23FC09208();
  return sub_23FC0907C();
}

#error "23FD6D284: call analysis failed (funcsize=75)"

uint64_t sub_23FD6D2F4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = *v1;
  v5 = v2;
  v3 = *(_QWORD *)(v2 + 216);
  sub_23FC75274(&v5);
  *(_QWORD *)(v2 + 464) = v0;
  swift_task_dealloc();
  sub_23FCD51A4(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  return swift_task_switch();
}

void sub_23FD6D374()
{
  os_log_type_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _WORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(void);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;

  _s23IntelligenceFlowRuntime0aB6DaemonV6logger2os6LoggerVvgZ_0();
  v4 = sub_23FD72BE4();
  v5 = sub_23FD74F48();
  if (sub_23FC5E334(v5))
  {
    v6 = (_WORD *)sub_23FC8FD5C();
    sub_23FC75DFC(v6);
    sub_23FC5D9D0(&dword_23FBF8000, v4, v0, "XPCClientAvatar sent progress update");
    sub_23FBFEFA0();
  }
  v7 = *(_QWORD *)(v1 + 88);
  v8 = *(_QWORD *)(v1 + 96);

  sub_23FCD51A4(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
  sub_23FD708C8();
  sub_23FC8FCC4(v7, &qword_256F660F8);
  sub_23FC0A014(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
  if (v3 == v2)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    sub_23FD70574();
    sub_23FC5B980();
    sub_23FC5BCA0();
    sub_23FC090D0();
    sub_23FC090C0();
    sub_23FC5A574();
    sub_23FC5AB04();
    sub_23FC5AC3C();
    sub_23FC5B2D4();
    sub_23FC5B2F4();
    sub_23FC5C428();
    sub_23FC5C420();
    sub_23FC5BFE8();
    sub_23FC5BFE0();
    sub_23FC5C980();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_23FC5CDA8();
    sub_23FC5CDF0();
    sub_23FD70A90();
    sub_23FC75474(*(uint64_t (**)(void))(v1 + 8));
    return;
  }
  sub_23FD70C7C();
  if (v10 == v11)
  {
    __break(1u);
    return;
  }
  sub_23FD70694(v9);
  sub_23FD70D24();
  v12 = sub_23FCD51A4(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88));
  if (v12 == (_DWORD)v8)
  {
    v13 = *(_QWORD *)(v1 + 328);
    v14 = *(_QWORD *)(v1 + 304);
    v15 = *(_QWORD *)(v1 + 296);
    sub_23FD706FC();
    sub_23FC06160(v14, v13, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 32));
    v16 = *(_QWORD *)(v8 + 32);
    sub_23FBFDE40((_QWORD *)v8, *(_QWORD *)(v8 + 24));
    v17 = (_QWORD *)sub_23FD464A8(*(int **)(v16 + 16));
    *(_QWORD *)(v1 + 440) = v17;
    sub_23FD70C4C(v17);
LABEL_12:
    sub_23FD70A24();
    sub_23FD707C8(v23, v24, v25, v26, v27);
    return;
  }
  if (v12 == *(_DWORD *)(v1 + 480))
  {
    v18 = *(_QWORD *)(v1 + 328);
    v20 = *(_QWORD *)(v1 + 272);
    v19 = *(_QWORD *)(v1 + 280);
    sub_23FD706FC();
    sub_23FC06160(v19, v18, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 32));
    v21 = *(_QWORD *)(v8 + 32);
    sub_23FBFDE40((_QWORD *)v8, *(_QWORD *)(v8 + 24));
    v22 = (_QWORD *)sub_23FD464A8(*(int **)(v21 + 8));
    *(_QWORD *)(v1 + 448) = v22;
    sub_23FD70C3C(v22);
    goto LABEL_12;
  }
  v29 = *(_QWORD *)(v1 + 320);
  v28 = *(_QWORD *)(v1 + 328);
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(*(_QWORD *)(v1 + 344), 1, 1, *(_QWORD *)(v1 + 232));
  sub_23FC0A014(*(uint64_t (**)(uint64_t, uint64_t))(v29 + 8));
  v30 = sub_23FD70BE8();
  sub_23FD70A68(v30, v31, &qword_256F660F8);
  v32 = sub_23FD70CE8();
  if (v40)
  {
    sub_23FD707C0(*(_QWORD *)(v1 + 344));
    sub_23FD465D8();
    swift_bridgeObjectRelease();
    sub_23FD707C0(v28);
    goto LABEL_5;
  }
  sub_23FD704BC(v32, v33, v34, v35, v36, v37, v38, v39, v62, v65, v68, v71, v74, v77);
  sub_23FD70AD8();
  sub_23FD70CB8();
  sub_23FD73F70();
  v41 = sub_23FD73FF4();
  v75 = v42;
  v78 = v41;
  sub_23FD73F88();
  v69 = v43;
  sub_23FD70A38();
  sub_23FD70888();
  sub_23FC5B944(v80);
  v44 = sub_23FD708BC();
  sub_23FD70AC4(v44, v45, v46, v47, v48, v49, v50, v51, v63, v66, v69, v72, v75, v78, v80, v82, v84, v86, v88,
    v90,
    v92,
    v94,
    v96);
  v52 = sub_23FD706EC();
  sub_23FD709B4(v52, v53, v54, v55, v56, v57, v58, v59, v64, v67, v70, v73, v76, v79, v81, v83, v85, v87, v89,
    v91,
    v93,
    v95);
  sub_23FD70798();
  sub_23FD70BB4();
  v60 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 456) = v60;
  v61 = sub_23FD70710(v60, (uint64_t)sub_23FD6D2F4);
  sub_23FD707E4(v61);
}

void sub_23FD6D65C()
{
  uint64_t v0;
  void *v1;
  os_log_type_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(void);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unsigned int v110;

  v1 = *(void **)(v0 + 104);
  sub_23FD724A0();
  sub_23FD70BE0();
  sub_23FD70BE0();
  sub_23FD72BE4();
  v2 = sub_23FC75640();
  if (sub_23FC09114(v2))
  {
    sub_23FBFEFF4();
    v3 = (_QWORD *)sub_23FBFEFF4();
    sub_23FD70B94(5.7779e-34);
    v4 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 24) = v4;
    sub_23FD70C94();
    *v3 = v4;
    sub_23FD70C14();
    sub_23FD70C14();
    sub_23FD70A48(&dword_23FBF8000, v5, v6, "XPCClientAvatar had error: %@");
    sub_23FBFD684(&qword_254346A30);
    sub_23FC09124();
    sub_23FBFEFA0();
  }
  sub_23FC09074();
  sub_23FC09074();
  v7 = v1;
  v8 = *(void **)(v0 + 464);
  v110 = *(_DWORD *)(v0 + 488);
  v9 = *(_QWORD *)(v0 + 424);
  v10 = *(_QWORD *)(v0 + 96);
  v11 = *(_QWORD *)(v0 + 104);
  v12 = *(_QWORD *)(v0 + 80);
  v13 = *(_QWORD *)(v0 + 88);
  v15 = *(_QWORD *)(v0 + 64);
  v14 = *(_QWORD *)(v0 + 72);
  v16 = *(_QWORD *)(v0 + 56);

  v17 = (_QWORD *)(v16 + v9);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v11, v13);
  v18 = v17[3];
  v19 = v17[4];
  sub_23FBFDE40(v17, v18);
  *(_QWORD *)(v0 + 16) = v8;
  v20 = v8;
  sub_23FBFD684(&qword_254346E20);
  *(_QWORD *)v12 = sub_23FD74C0C();
  *(_QWORD *)(v12 + 8) = v21;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v14 + 104))(v12, v110, v15);
  sub_23FD70D80();
  sub_23FBFF1C4();
  sub_23FD70B10();
  sub_23FD70AA4();
  swift_release();
  sub_23FC09074();
  sub_23FD708C8();
  sub_23FC8FCC4((uint64_t)v8, &qword_256F660F8);
  sub_23FC0A014(*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8));
  if (v19 == v18)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    sub_23FD70574();
    sub_23FC5B980();
    sub_23FC5BCA0();
    sub_23FC090D0();
    sub_23FC090C0();
    sub_23FC5A574();
    sub_23FC5AB04();
    sub_23FC5AC3C();
    sub_23FC5B2D4();
    sub_23FC5B2F4();
    sub_23FC5C428();
    sub_23FC5C420();
    sub_23FC5BFE8();
    sub_23FC5BFE0();
    sub_23FC5C980();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_23FC5CDA8();
    sub_23FC5CDF0();
    sub_23FD70A90();
    sub_23FC75474(*(uint64_t (**)(void))(v0 + 8));
    return;
  }
  sub_23FD70C7C();
  if (v23 == v24)
  {
    __break(1u);
    return;
  }
  sub_23FD70694(v22);
  sub_23FD70D24();
  v25 = sub_23FCD51A4(*(uint64_t (**)(uint64_t, uint64_t))(v18 + 88));
  if (v25 == (_DWORD)v12)
  {
    v26 = *(_QWORD *)(v0 + 328);
    v27 = *(_QWORD *)(v0 + 304);
    v28 = *(_QWORD *)(v0 + 296);
    sub_23FD706FC();
    sub_23FC06160(v27, v26, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 32));
    v29 = *(_QWORD *)(v12 + 32);
    sub_23FBFDE40((_QWORD *)v12, *(_QWORD *)(v12 + 24));
    v30 = (_QWORD *)sub_23FD464A8(*(int **)(v29 + 16));
    *(_QWORD *)(v0 + 440) = v30;
    sub_23FD70C4C(v30);
LABEL_12:
    sub_23FD70A24();
    sub_23FD707C8(v36, v37, v38, v39, v40);
    return;
  }
  if (v25 == *(_DWORD *)(v0 + 480))
  {
    v31 = *(_QWORD *)(v0 + 328);
    v33 = *(_QWORD *)(v0 + 272);
    v32 = *(_QWORD *)(v0 + 280);
    sub_23FD706FC();
    sub_23FC06160(v32, v31, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v33 + 32));
    v34 = *(_QWORD *)(v12 + 32);
    sub_23FBFDE40((_QWORD *)v12, *(_QWORD *)(v12 + 24));
    v35 = (_QWORD *)sub_23FD464A8(*(int **)(v34 + 8));
    *(_QWORD *)(v0 + 448) = v35;
    sub_23FD70C3C(v35);
    goto LABEL_12;
  }
  v42 = *(_QWORD *)(v0 + 320);
  v41 = *(_QWORD *)(v0 + 328);
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(*(_QWORD *)(v0 + 344), 1, 1, *(_QWORD *)(v0 + 232));
  sub_23FC0A014(*(uint64_t (**)(uint64_t, uint64_t))(v42 + 8));
  v43 = sub_23FD70BE8();
  sub_23FD70A68(v43, v44, &qword_256F660F8);
  v45 = sub_23FD70CE8();
  if (v53)
  {
    sub_23FD707C0(*(_QWORD *)(v0 + 344));
    sub_23FD465D8();
    swift_bridgeObjectRelease();
    sub_23FD707C0(v41);
    goto LABEL_5;
  }
  sub_23FD704BC(v45, v46, v47, v48, v49, v50, v51, v52, v75, v78, v81, v84, v87, v90);
  sub_23FD70AD8();
  sub_23FD70CB8();
  sub_23FD73F70();
  v54 = sub_23FD73FF4();
  v88 = v55;
  v91 = v54;
  sub_23FD73F88();
  v82 = v56;
  sub_23FD70A38();
  sub_23FD70888();
  sub_23FC5B944(v93);
  v57 = sub_23FD708BC();
  sub_23FD70AC4(v57, v58, v59, v60, v61, v62, v63, v64, v76, v79, v82, v85, v88, v91, v93, v95, v97, v99, v101,
    v103,
    v105,
    v107,
    v109);
  v65 = sub_23FD706EC();
  sub_23FD709B4(v65, v66, v67, v68, v69, v70, v71, v72, v77, v80, v83, v86, v89, v92, v94, v96, v98, v100, v102,
    v104,
    v106,
    v108);
  sub_23FD70798();
  sub_23FD70BB4();
  v73 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 456) = v73;
  v74 = sub_23FD70710(v73, (uint64_t)sub_23FD6D2F4);
  sub_23FD707E4(v74);
}

uint64_t sub_23FD6DA54(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  NSObject *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  char *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  int v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t (*v207)(uint64_t, uint64_t, uint64_t);
  unsigned int *v208;
  void (*v209)(char *, uint64_t);
  char *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v214;
  uint64_t v215;
  __n128 *v216;
  uint64_t v217;
  uint64_t (*v218)(uint64_t, uint64_t, _QWORD);
  uint64_t v219;
  uint64_t v220;
  os_log_type_t v221;
  _WORD *v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  unint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  id v233;
  unint64_t v234;
  uint64_t v235;
  uint64_t (*v236)(uint64_t, uint64_t, uint64_t);
  os_log_type_t v237;
  _WORD *v238;
  unsigned int *v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t (*v242)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v243)(uint64_t, uint64_t, uint64_t);
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  void (*v250)(uint64_t);
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t (*v254)(uint64_t, uint64_t, _QWORD);
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  __n128 *v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t (*v263)(uint64_t, uint64_t, uint64_t);
  uint64_t v264;
  uint64_t v265;
  unsigned int *v266;
  uint64_t (*v267)(uint64_t, uint64_t, uint64_t);
  os_log_type_t v268;
  _WORD *v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t (*v273)(uint64_t, uint64_t, _QWORD);
  uint64_t v274;
  uint64_t v275;
  int v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  char v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t (*v292)(uint64_t, _QWORD);
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t (*v300)(uint64_t, uint64_t, uint64_t);
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  void (*v306)(uint64_t, uint64_t, uint64_t);
  uint64_t v307;
  uint64_t v308;
  void (*v309)(uint64_t, uint64_t);
  uint64_t v310;
  unint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t (*v317)(uint64_t, uint64_t, _QWORD);
  __n128 *v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  unsigned int *v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t (*v327)(uint64_t, uint64_t, _QWORD);
  uint64_t v328;
  __n128 *v329;
  uint64_t v330;
  uint64_t (*v331)(uint64_t, _QWORD);
  uint64_t v332;
  uint64_t v333;
  uint64_t (*v334)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v335)(uint64_t, uint64_t, uint64_t);
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t (*v339)(uint64_t, uint64_t, _QWORD);
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t (*v343)(uint64_t, _QWORD);
  unint64_t v344;
  uint64_t v345;
  uint64_t v346;
  void (*v347)(uint64_t, uint64_t);
  void (*v348)(uint64_t, uint64_t, uint64_t);
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  unsigned int *v355;
  os_log_type_t v356;
  _WORD *v357;
  uint64_t v358;
  char *v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  char v386[8];
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  _QWORD v406[3];
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  _QWORD v412[2];
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  _QWORD v416[3];
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  _QWORD v422[2];
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;

  v2 = sub_23FD738B0();
  sub_23FBFF0B8(v2, (uint64_t)&v434);
  v407 = v3;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v4, v5);
  sub_23FBFEFCC();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v6, v7);
  sub_23FBFF218();
  sub_23FBFEFAC(v8);
  v9 = sub_23FD73910();
  sub_23FBFF0B8(v9, (uint64_t)v386);
  v361 = v10;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v11, v12);
  sub_23FBFEFCC();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v13, v14);
  sub_23FBFF218();
  sub_23FBFEFAC(v15);
  sub_23FD73298();
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v16, v17);
  sub_23FBFEFE0();
  sub_23FBFEFAC(v18);
  sub_23FD7196C();
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v19, v20);
  sub_23FBFEFE0();
  sub_23FBFEFAC(v21);
  v22 = sub_23FD738E0();
  sub_23FBFF0B8(v22, (uint64_t)&v393);
  v368 = v23;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v24, v25);
  sub_23FBFEFE0();
  sub_23FBFEFAC(v26);
  sub_23FD71C84();
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v27, v28);
  sub_23FBFEFE0();
  sub_23FBFEFAC(v29);
  v30 = sub_23FD737A8();
  sub_23FBFF0B8(v30, (uint64_t)&v401);
  v375 = v31;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v32, v33);
  sub_23FBFEFE0();
  sub_23FBFEFAC(v34);
  v35 = sub_23FD71AEC();
  v433 = *(_QWORD *)(v35 - 8);
  v434 = v35;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v36, v37);
  sub_23FBFEFCC();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v38, v39);
  sub_23FBFF218();
  sub_23FBFEFAC(v40);
  v41 = sub_23FD73418();
  sub_23FBFF0B8(v41, (uint64_t)&v388);
  v365 = v42;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v43, v44);
  sub_23FBFEFCC();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v45, v46);
  sub_23FBFF218();
  sub_23FBFEFAC(v47);
  sub_23FD7157C();
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v48, v49);
  sub_23FBFEFE0();
  sub_23FBFEFAC(v50);
  v51 = sub_23FD739D0();
  sub_23FBFF0B8(v51, (uint64_t)&v425);
  v404 = v52;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v53, v54);
  sub_23FBFEFE0();
  sub_23FBFEFAC(v55);
  v56 = sub_23FD71A14();
  sub_23FBFF0B8(v56, (uint64_t)&v423);
  v401 = v57;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v58, v59);
  sub_23FBFEFE0();
  sub_23FBFEFAC(v60);
  v61 = sub_23FD733C4();
  sub_23FBFF0B8(v61, (uint64_t)v406);
  v381 = v62;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v63, v64);
  sub_23FBFEFE0();
  sub_23FBFEFAC(v65);
  v66 = sub_23FD73BA4();
  sub_23FBFF0B8(v66, (uint64_t)v412);
  v383 = v67;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v68, v69);
  sub_23FBFEFE0();
  sub_23FC15A3C(v70);
  sub_23FBFD684(&qword_256F60570);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v71, v72);
  sub_23FBFEFCC();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v73, v74);
  sub_23FC0FFF4();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v75, v76);
  sub_23FC0FFF4();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v77, v78);
  sub_23FBFF218();
  sub_23FC15A3C(v79);
  sub_23FBFD684(&qword_256F60568);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v80, v81);
  sub_23FBFEFCC();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v82, v83);
  sub_23FBFF218();
  sub_23FC15A3C(v84);
  sub_23FBFD684(qword_254346A10);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v85, v86);
  sub_23FBFEFCC();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v87, v88);
  sub_23FBFF218();
  sub_23FBFEFAC(v89);
  v90 = sub_23FD733AC();
  sub_23FBFF0B8(v90, (uint64_t)&v408);
  v385 = v91;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v92, v93);
  sub_23FBFEFE0();
  sub_23FBFEFAC(v94);
  v95 = sub_23FD73424();
  sub_23FBFF0B8(v95, (uint64_t)&v413);
  v390 = v96;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v97, v98);
  sub_23FBFEFE0();
  sub_23FC15A3C(v99);
  sub_23FBFD684(&qword_256F660D8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v100, v101);
  sub_23FBFEFCC();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v102, v103);
  sub_23FC0FFF4();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v104, v105);
  sub_23FBFF218();
  sub_23FBFEFAC(v106);
  v107 = sub_23FD737FC();
  sub_23FBFF0B8(v107, (uint64_t)v416);
  v398 = v108;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v109, v110);
  sub_23FBFEFCC();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v111, v112);
  sub_23FBFF218();
  sub_23FBFEFAC(v113);
  v114 = sub_23FD73778();
  sub_23FBFF0B8(v114, (uint64_t)v422);
  v399 = v115;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v116, v117);
  sub_23FBFEFE0();
  sub_23FBFEFAC(v118);
  v119 = sub_23FD73F64();
  v431 = *(_QWORD *)(v119 - 8);
  v432 = v119;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v120, v121);
  sub_23FBFEFCC();
  v429 = v122;
  MEMORY[0x24BDAC7A8](v123, v124);
  sub_23FBFF218();
  v430 = v125;
  sub_23FC10050();
  v126 = sub_23FD72F68();
  sub_23FBFF0B8(v126, (uint64_t)&v430);
  v406[0] = v127;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v128, v129);
  sub_23FBFEFE0();
  sub_23FBFEFAC(v130);
  v131 = sub_23FD71504();
  sub_23FBFF0B8(v131, (uint64_t)&v438);
  v421 = v132;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v133, v134);
  sub_23FBFEFCC();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v135, v136);
  sub_23FC0FFF4();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v137, v138);
  sub_23FBFF218();
  sub_23FBFEFAC(v139);
  v140 = sub_23FD734C0();
  sub_23FBFF0B8(v140, (uint64_t)&v437);
  v414 = v141;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v142, v143);
  sub_23FBFEFE0();
  sub_23FBFEFAC(v144);
  v420 = sub_23FD7313C();
  v424 = *(_QWORD *)(v420 - 8);
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v145, v146);
  sub_23FBFEFCC();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v147, v148);
  sub_23FBFF218();
  v423 = v149;
  sub_23FC10050();
  v150 = sub_23FD71BB8();
  sub_23FBFF0B8(v150, (uint64_t)&v418);
  v396 = v151;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v152, v153);
  sub_23FBFEFE0();
  sub_23FBFEFAC(v154);
  v155 = sub_23FD72BF0();
  v418 = *(_QWORD *)(v155 - 8);
  v419 = v155;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v156, v157);
  sub_23FBFEFCC();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v158, v159);
  sub_23FC0FFF4();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v160, v161);
  sub_23FC0FFF4();
  sub_23FC0FFCC();
  MEMORY[0x24BDAC7A8](v162, v163);
  sub_23FBFF218();
  sub_23FBFEFAC(v164);
  v165 = sub_23FD716FC();
  sub_23FBFF0B8(v165, (uint64_t)&v436);
  v410 = v166;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v167, v168);
  sub_23FBFEFE0();
  sub_23FBFEFAC(v169);
  sub_23FD71474();
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v170, v171);
  sub_23FBFEFE0();
  v422[1] = v172;
  sub_23FC10050();
  v173 = sub_23FD730F4();
  v427 = *(_QWORD *)(v173 - 8);
  v428 = v173;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v174, v175);
  sub_23FBFEFE0();
  v422[0] = v176;
  sub_23FC10050();
  v177 = sub_23FD73C7C();
  v425 = *(_QWORD *)(v177 - 8);
  v426 = v177;
  sub_23FC05FF4();
  MEMORY[0x24BDAC7A8](v178, v179);
  sub_23FC100D4();
  v182 = v180 - v181;
  MEMORY[0x24BDAC7A8](v183, v184);
  v186 = (char *)&v358 - v185;
  v187 = sub_23FD73D0C();
  v188 = *(_QWORD *)(v187 - 8);
  MEMORY[0x24BDAC7A8](v187, v189);
  sub_23FC100D4();
  v192 = (v190 - v191);
  MEMORY[0x24BDAC7A8](v193, v194);
  v196 = (char *)&v358 - v195;
  v197 = sub_23FD7409C();
  v198 = *(_QWORD *)(v197 - 8);
  MEMORY[0x24BDAC7A8](v197, v199);
  v201 = (char *)&v358 - ((v200 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FD740A8();
  v202 = (*(uint64_t (**)(char *, uint64_t))(v198 + 88))(v201, v197);
  if (v202 != *MEMORY[0x24BE56C70])
  {
    if (v202 == *MEMORY[0x24BE56AC8])
    {
      sub_23FD70664();
      v188 = v430;
      v205 = v431;
      v206 = v432;
      sub_23FC06160(v430, (uint64_t)v201, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v431 + 32));
      sub_23FBFD684(&qword_256F5F8A8);
      v204 = sub_23FD702DC();
      sub_23FD70BF4((__n128 *)v204, (__n128)xmmword_23FD769D0);
      sub_23FC06160(v429, v188, v207);
      sub_23FD70D2C();
      sub_23FD719CC();
      v208 = (unsigned int *)MEMORY[0x24BE52BD0];
LABEL_5:
      sub_23FD70624(*v208, *((uint64_t (**)(uint64_t, uint64_t, _QWORD))a1 + 13));
      v209 = *(void (**)(char *, uint64_t))(v205 + 8);
      v210 = (char *)v188;
LABEL_8:
      v212 = v206;
LABEL_9:
      v209(v210, v212);
      return v204;
    }
    if (v202 == *MEMORY[0x24BE56AF8])
    {
      sub_23FD70664();
      v211 = v425;
      v206 = v426;
      sub_23FC06160((uint64_t)v186, (uint64_t)v201, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v425 + 32));
      sub_23FBFD684(&qword_256F5F8A8);
      v204 = sub_23FD702DC();
      *(_OWORD *)(v204 + 16) = xmmword_23FD769D0;
      sub_23FC06160(v182, (uint64_t)v186, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v211 + 16));
      sub_23FD71888();
      sub_23FD70624(*MEMORY[0x24BE528F0], *((uint64_t (**)(uint64_t, uint64_t, _QWORD))a1 + 13));
      v209 = *(void (**)(char *, uint64_t))(v211 + 8);
      v210 = v186;
      goto LABEL_8;
    }
    if (v202 == *MEMORY[0x24BE56BA0])
    {
      sub_23FD70664();
      v214 = v422[0];
      (*(void (**)(_QWORD, char *, uint64_t))(v427 + 32))(v422[0], v201, v428);
      sub_23FBFD684(&qword_256F5F8A8);
      v215 = v433;
      v216 = (__n128 *)sub_23FD702FC();
      sub_23FD70D58(v216, (__n128)xmmword_23FD769D0);
      sub_23FD74048();
      sub_23FD730E8();
      sub_23FD7307C();
      v217 = sub_23FD730AC();
      sub_23FD6FB00(v217);
      sub_23FC1002C();
      sub_23FD73094();
      sub_23FD717E0();
      v218 = *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v215 + 104);
      v204 = (uint64_t)v216;
      sub_23FD70624(*MEMORY[0x24BE52758], v218);
      (*(void (**)(uint64_t, uint64_t))(v427 + 8))(v214, v428);
      return v204;
    }
    v219 = v197;
    if (v202 == *MEMORY[0x24BE56B00])
    {
      sub_23FD70564();
      v197 = v420;
      sub_23FBFF1E4(v423, (uint64_t)v201, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v424 + 32));
      v220 = v412[1];
      sub_23FD724A0();
      sub_23FD72BE4();
      v221 = sub_23FCA0FA0();
      if (sub_23FCCC50C(v221))
      {
        v222 = (_WORD *)sub_23FC8FD5C();
        sub_23FC75DFC(v222);
        sub_23FC5D9D0(&dword_23FBF8000, v192, (os_log_type_t)v220, "XPCClientAvatar criticalError");
        sub_23FBFEFA0();
      }

      (*(void (**)(uint64_t, uint64_t))(v418 + 8))(v220, v419);
      v192 = *(NSObject **)(v417 + OBJC_IVAR____TtC23IntelligenceFlowRuntime15XPCClientAvatar_instrumentationSender + 24);
      sub_23FBFDE40((_QWORD *)(v417 + OBJC_IVAR____TtC23IntelligenceFlowRuntime15XPCClientAvatar_instrumentationSender), (uint64_t)v192);
      v432 = *(_QWORD *)(v424 + 16);
      ((void (*)(uint64_t, uint64_t, uint64_t))v432)(v413, v423, v197);
      v223 = sub_23FD74C0C();
      v224 = v416[0];
      *(_QWORD *)v416[0] = v223;
      *(_QWORD *)(v224 + 8) = v225;
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v414 + 104))(v224, *MEMORY[0x24BE55570], v415);
      sub_23FD70D80();
      sub_23FBFF1C4();
      v201 = (char *)sub_23FD70B10();
      sub_23FD73100();
      swift_release();
      sub_23FBFEE2C(&qword_256F660E0, (uint64_t (*)(uint64_t))MEMORY[0x24BE54F50], MEMORY[0x24BE54F48]);
      v226 = sub_23FD736DC();
      v227 = v416[2];
      if (v226 >> 62)
        v228 = sub_23FD75248();
      else
        v228 = *(_QWORD *)((v226 & 0xFFFFFFFFFFFFF8) + 0x10);
      v229 = v416[1];
      if (!v228)
      {
        swift_bridgeObjectRelease();
LABEL_37:
        sub_23FBFEE2C(&qword_256F660E8, (uint64_t (*)(uint64_t))MEMORY[0x24BE54F50], MEMORY[0x24BE54F70]);
        swift_allocError();
        v244 = v423;
        ((void (*)(uint64_t, uint64_t, uint64_t))v432)(v245, v423, v197);
        v246 = v412[0];
        sub_23FD71510();
        sub_23FBFD684(&qword_256F5F8A8);
        v247 = v433;
        v204 = sub_23FC7A4A8();
        *(_OWORD *)(v204 + 16) = xmmword_23FD769D0;
        v248 = v421;
        v249 = sub_23FD709E0();
        v250(v249);
        sub_23FD7181C();
        sub_23FD70CDC(*MEMORY[0x24BE52CC0], *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v247 + 104));
        (*(void (**)(uint64_t, uint64_t))(v248 + 8))(v246, v227);
        (*(void (**)(uint64_t, uint64_t))(v424 + 8))(v244, v197);
        return v204;
      }
      v435 = MEMORY[0x24BEE4AF8];
      a1 = (char *)&v435;
      sub_23FC9B810();
      if ((v228 & 0x8000000000000000) == 0)
      {
        v230 = 0;
        v231 = v435;
        v232 = v421;
        do
        {
          if ((v226 & 0xC000000000000001) != 0)
            MEMORY[0x242678EC4](v230, v226);
          else
            v233 = *(id *)(v226 + 8 * v230 + 32);
          sub_23FD71510();
          v435 = v231;
          v234 = *(_QWORD *)(v231 + 16);
          if (v234 >= *(_QWORD *)(v231 + 24) >> 1)
          {
            sub_23FC9B810();
            v232 = v421;
            v231 = v435;
          }
          ++v230;
          *(_QWORD *)(v231 + 16) = v234 + 1;
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v232 + 32))(v231+ ((*(unsigned __int8 *)(v232 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v232 + 80))+ *(_QWORD *)(v232 + 72) * v234, v229, v227);
        }
        while (v228 != v230);
        swift_bridgeObjectRelease();
        v197 = v420;
        goto LABEL_37;
      }
      __break(1u);
      goto LABEL_86;
    }
    if (v202 == *MEMORY[0x24BE56C30])
    {
      sub_23FD70564();
      sub_23FD70B88();
      v235 = v409;
      v219 = v411;
      sub_23FC100A0(v409, (uint64_t)v201, v236);
      sub_23FD70B24();
      sub_23FC5D90C();
      v237 = sub_23FCA0FA0();
      if (sub_23FCCC50C(v237))
      {
        v238 = (_WORD *)sub_23FC8FD5C();
        sub_23FC75DFC(v238);
        sub_23FC5D9D0(&dword_23FBF8000, v192, (os_log_type_t)a1, "XPCClientAvatar actionResponseGenerated");
        sub_23FBFEFA0();
      }

      sub_23FD70BA4();
      sub_23FBFD684(&qword_256F5F8A8);
      v204 = sub_23FD702DC();
      *(_OWORD *)(v204 + 16) = xmmword_23FD769D0;
      sub_23FC100A0((uint64_t)v192 + v204, v235, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v188 + 16));
      v239 = (unsigned int *)MEMORY[0x24BE52818];
LABEL_32:
      sub_23FD70624(*v239, *((uint64_t (**)(uint64_t, uint64_t, _QWORD))a1 + 13));
      v209 = *(void (**)(char *, uint64_t))(v188 + 8);
      v210 = (char *)v235;
LABEL_33:
      v212 = v219;
      goto LABEL_9;
    }
    if (v202 == *MEMORY[0x24BE56C58])
    {
      sub_23FD70564();
      v205 = v407;
      v240 = sub_23FD709E0();
      v206 = v408;
      sub_23FC06160(v240, v241, v242);
      sub_23FBFD684(&qword_256F5F8A8);
      v204 = sub_23FD702DC();
      sub_23FD70BF4((__n128 *)v204, (__n128)xmmword_23FD769D0);
      sub_23FC06160(v406[2], v188, v243);
      sub_23FD70D2C();
      sub_23FD71F90();
      v208 = (unsigned int *)MEMORY[0x24BE52BB8];
      goto LABEL_5;
    }
    if (v202 == *MEMORY[0x24BE56C50])
    {
      sub_23FD70564();
      v251 = v406[0];
      v252 = sub_23FD708EC();
      sub_23FD70D40(v252, v253, v254);
      sub_23FBFD684(&qword_256F5F8A8);
      v255 = v433;
      v204 = sub_23FD702FC();
      sub_23FD70D4C((__n128 *)v204, (__n128)xmmword_23FD769D0);
      v256 = sub_23FD72F5C();
      v258 = v257;
      v259 = MEMORY[0x242676CF8]();
      MEMORY[0x24267551C](v256, v258, v259);
      sub_23FD70624(*MEMORY[0x24BE52C30], *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v255 + 104));
      (*(void (**)(char *, uint64_t))(v251 + 8))(a1, v188);
      return v204;
    }
    if (v202 == *MEMORY[0x24BE56B90])
    {
      sub_23FBFD684(&qword_256F5F8A8);
      v260 = (__n128 *)sub_23FD702DC();
      sub_23FD70A0C(v260, (__n128)xmmword_23FD769D0);
      sub_23FD71894();
      sub_23FD70624(*MEMORY[0x24BE52900], *((uint64_t (**)(uint64_t, uint64_t, _QWORD))a1 + 13));
      v209 = *(void (**)(char *, uint64_t))(v198 + 8);
      v204 = (uint64_t)v260;
      v210 = v201;
      goto LABEL_33;
    }
    if (v202 == *MEMORY[0x24BE56BA8])
    {
      sub_23FD70564();
      sub_23FD70B88();
      v261 = sub_23FD708EC();
      v219 = v400;
      sub_23FC100A0(v261, v262, v263);
      sub_23FBFD684(&qword_256F5F8A8);
      v264 = v433;
      v204 = sub_23FD702FC();
      sub_23FD70D4C((__n128 *)v204, (__n128)xmmword_23FD769D0);
      v265 = sub_23FD7376C();
      MEMORY[0x2426756CC](v265);
      v266 = (unsigned int *)MEMORY[0x24BE529C0];
LABEL_44:
      sub_23FD70624(*v266, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v264 + 104));
      v209 = *(void (**)(char *, uint64_t))(v188 + 8);
      v210 = a1;
      goto LABEL_33;
    }
    if (v202 == *MEMORY[0x24BE56C40])
    {
      sub_23FD70564();
      sub_23FD70B88();
      v235 = v395;
      v219 = v397;
      sub_23FC100A0(v395, (uint64_t)v201, v267);
      sub_23FD70B24();
      sub_23FC5D90C();
      v268 = sub_23FCA0FA0();
      if (sub_23FCCC50C(v268))
      {
        v269 = (_WORD *)sub_23FC8FD5C();
        sub_23FC75DFC(v269);
        sub_23FC5D9D0(&dword_23FBF8000, v192, (os_log_type_t)a1, "XPCClientAvatar systemResponseGenerated");
        sub_23FBFEFA0();
      }

      sub_23FD70BA4();
      sub_23FBFD684(&qword_256F5F8A8);
      v204 = sub_23FD702DC();
      *(_OWORD *)(v204 + 16) = xmmword_23FD769D0;
      sub_23FC100A0((uint64_t)v192 + v204, v235, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v188 + 16));
      v239 = (unsigned int *)MEMORY[0x24BE52830];
      goto LABEL_32;
    }
    if (v202 != *MEMORY[0x24BE56BB8])
    {
      if (v202 != *MEMORY[0x24BE56BB0])
      {
        if (v202 == *MEMORY[0x24BE56C68])
        {
          sub_23FD70564();
          v315 = sub_23FD708EC();
          sub_23FD70D40(v315, v316, v317);
          sub_23FBFD684(&qword_256F5F8A8);
          v318 = (__n128 *)sub_23FD702FC();
          sub_23FD70D4C(v318, (__n128)xmmword_23FD769D0);
          sub_23FD72F5C();
          sub_23FD70D6C();
        }
        if (v202 == *MEMORY[0x24BE56C00])
        {
          sub_23FD70664();
          sub_23FD70B88();
          v325 = sub_23FD708EC();
          sub_23FD70D18(v325, v326, v327);
          sub_23FBFD684(&qword_256F5F8A8);
          v328 = v433;
          v329 = (__n128 *)sub_23FD702FC();
          sub_23FD70D58(v329, (__n128)xmmword_23FD769D0);
          sub_23FD738C8();
          v330 = v369;
          sub_23FD738D4();
          sub_23FD6F7E8(v330, v367);
          sub_23FD738BC();
          v204 = (uint64_t)v329;
          sub_23FD71978();
          sub_23FD70624(*MEMORY[0x24BE52B70], *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v328 + 104));
          (*(void (**)(char *, char *))(v188 + 8))(a1, v201);
          return v204;
        }
        if (v202 == *MEMORY[0x24BE56C10])
        {
          sub_23FD70664();
          v205 = v361;
          v332 = sub_23FD709E0();
          v206 = v362;
          sub_23FC06160(v332, v333, v334);
          sub_23FBFD684(&qword_256F5F8A8);
          v204 = sub_23FD702DC();
          sub_23FD70BF4((__n128 *)v204, (__n128)xmmword_23FD769D0);
          sub_23FC06160(v360, v188, v335);
          sub_23FD70D2C();
          sub_23FD71CC0();
          v208 = (unsigned int *)MEMORY[0x24BE528F8];
          goto LABEL_5;
        }
        if (v202 == *MEMORY[0x24BE56C78])
        {
          sub_23FBFD684(&qword_256F5F8A8);
          v204 = sub_23FD702DC();
          sub_23FD70A0C((__n128 *)v204, (__n128)xmmword_23FD769D0);
          sub_23FD71AD4();
          v355 = (unsigned int *)MEMORY[0x24BE52D28];
LABEL_92:
          sub_23FD70624(*v355, *((uint64_t (**)(uint64_t, uint64_t, _QWORD))a1 + 13));
          return v204;
        }
LABEL_86:
        if (v202 == *MEMORY[0x24BE56B80])
        {
          sub_23FBFD684(&qword_256F5F8A8);
          v204 = sub_23FD702DC();
          sub_23FD70A0C((__n128 *)v204, (__n128)xmmword_23FD769D0);
          sub_23FD7187C();
          v355 = (unsigned int *)MEMORY[0x24BE52858];
        }
        else
        {
          if (v202 != *MEMORY[0x24BE56C80])
          {
            (*(void (**)(char *, uint64_t))(v198 + 8))(v201, v197);
            return MEMORY[0x24BEE4AF8];
          }
          a1 = v359;
          sub_23FD709AC();
          sub_23FD72BE4();
          v356 = sub_23FCA0FA0();
          if (sub_23FCCC50C(v356))
          {
            v357 = (_WORD *)sub_23FC8FD5C();
            sub_23FC75DFC(v357);
            sub_23FC5D9D0(&dword_23FBF8000, v192, (os_log_type_t)a1, "XPCClientAvatar terminate");
            sub_23FBFEFA0();
          }

          (*(void (**)(char *, uint64_t))(v418 + 8))(v359, v419);
          sub_23FBFD684(&qword_256F5F8A8);
          v204 = sub_23FD702DC();
          sub_23FD70A0C((__n128 *)v204, (__n128)xmmword_23FD769D0);
          sub_23FD71AE0();
          v355 = (unsigned int *)MEMORY[0x24BE52D30];
        }
        goto LABEL_92;
      }
      sub_23FD70564();
      sub_23FD70B88();
      v298 = sub_23FD708EC();
      v219 = v376;
      sub_23FC100A0(v298, v299, v300);
      sub_23FBFD684(&qword_256F5F8A8);
      v264 = v433;
      v204 = sub_23FD702FC();
      sub_23FD70D4C((__n128 *)v204, (__n128)xmmword_23FD769D0);
      sub_23FD73784();
      sub_23FD7379C();
      sub_23FD70D2C();
      sub_23FD71924();
      v266 = (unsigned int *)MEMORY[0x24BE52A40];
      goto LABEL_44;
    }
    sub_23FD70564();
    v270 = v398;
    v271 = sub_23FD709E0();
    sub_23FCB3104(v271, v272, v273);
    v274 = v392;
    sub_23FD737F0();
    v275 = v390;
    v276 = (*(uint64_t (**)(uint64_t, uint64_t))(v390 + 88))(v274, v391);
    if (v276 == *MEMORY[0x24BE553B0])
    {
      sub_23FC10198(*(uint64_t (**)(uint64_t, uint64_t))(v275 + 96));
      sub_23FCB3104(v384, v274, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v385 + 32));
      sub_23FD73370();
      v275 = v277;
      sub_23FD737C0();
      v278 = v374;
      sub_23FD737CC();
      v279 = v372;
      sub_23FC92F18(v278, v372, &qword_256F60570);
      v280 = 1;
      v270 = v389;
      sub_23FC100EC(v279, 1, v389);
      v281 = v373;
      if (!v282)
      {
        v283 = v383;
        v284 = v382;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v383 + 32))(v382, v279, v270);
        v285 = sub_23FD72F5C();
        v287 = v286;
        v288 = MEMORY[0x24267794C]();
        MEMORY[0x2426757E0](v285, v287, v288);
        (*(void (**)(uint64_t, uint64_t))(v283 + 8))(v284, v270);
        v280 = 0;
      }
      v289 = sub_23FD71A50();
      sub_23FCB328C(v281, v290, v291, v289);
      sub_23FC8FCC4(v278, &qword_256F60570);
      sub_23FD70CA4();
      sub_23FD719A8();
      sub_23FCA96B4();
      v293 = sub_23FCA9784(v384, v292);
      v295 = v433;
      v294 = v434;
      sub_23FD7095C(v293, *MEMORY[0x24BE52BC8]);
      sub_23FD70AFC();
      v296 = v388;
      sub_23FD70DA0();
      v297 = v394;
      goto LABEL_79;
    }
    if (v276 == *MEMORY[0x24BE553B8])
    {
      sub_23FC10198(*(uint64_t (**)(uint64_t, uint64_t))(v275 + 96));
      v301 = sub_23FCB3104(v380, v274, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v381 + 32));
      v432 = MEMORY[0x24267716C](v301);
      v302 = *(_QWORD *)(v432 + 16);
      if (v302)
      {
        v435 = MEMORY[0x24BEE4AF8];
        sub_23FC9B7E4();
        sub_23FD04164();
        v304 = v432 + v303;
        v270 = *(_QWORD *)(v305 + 72);
        v306 = *(void (**)(uint64_t, uint64_t, uint64_t))(v305 + 16);
        do
        {
          v307 = v402;
          v308 = v403;
          v306(v402, v304, v403);
          sub_23FD73370();
          sub_23FD739C4();
          sub_23FD71A08();
          sub_23FCA96B4();
          v309(v307, v308);
          v310 = v435;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_23FC9B7E4();
            v310 = v435;
          }
          v311 = *(_QWORD *)(v310 + 16);
          v312 = v405;
          if (v311 >= *(_QWORD *)(v310 + 24) >> 1)
          {
            sub_23FC9B7E4();
            v312 = v405;
            v310 = v435;
          }
          *(_QWORD *)(v310 + 16) = v311 + 1;
          sub_23FD04164();
          sub_23FCB3104(v310 + v313 + *(_QWORD *)(v314 + 72) * v311, v312, *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v314 + 32));
          v435 = v310;
          v304 += v270;
          --v302;
        }
        while (v302);
      }
      swift_bridgeObjectRelease();
      sub_23FD737C0();
      v336 = v379;
      sub_23FD737CC();
      v337 = v336;
      v338 = v370;
      sub_23FC92F18(v337, v370, &qword_256F60570);
      v280 = 1;
      sub_23FC100EC(v338, 1, v389);
      if (!v282)
      {
        sub_23FD70B88();
        sub_23FD70D18(v382, v370, v339);
        sub_23FD72F5C();
        sub_23FD70D6C();
      }
      v340 = sub_23FD71A50();
      v275 = v371;
      sub_23FCB328C(v371, v341, v342, v340);
      sub_23FC8FCC4(v379, &qword_256F60570);
      sub_23FD70CA4();
      sub_23FD719D8();
      sub_23FCA96B4();
      v323 = sub_23FCA9784(v380, v343);
      v324 = (unsigned int *)MEMORY[0x24BE52C28];
    }
    else
    {
      if (v276 != *MEMORY[0x24BE55318])
      {
        v280 = v387;
        v294 = v434;
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v387, 1, 1, v434);
        sub_23FCA96B4();
        sub_23FCA9784(v392, v331);
        v295 = v433;
LABEL_78:
        v297 = v394;
        v296 = v388;
        v188 = v393;
        sub_23FD70DA0();
LABEL_79:
        sub_23FD6FAB8(v280, v296);
        sub_23FBFD684(&qword_256F5F8A8);
        v344 = ((*(unsigned __int8 *)(v295 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v295 + 80))
             + *(_QWORD *)(v295 + 72);
        v345 = swift_allocObject();
        *(_OWORD *)(v345 + 16) = xmmword_23FD769D0;
        sub_23FBFF1E4(v270, v188, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v398 + 16));
        v346 = sub_23FD71954();
        sub_23FD7095C(v346, *MEMORY[0x24BE52A48]);
        sub_23FC92F18(v296, v275, &qword_256F660D8);
        sub_23FC100EC(v275, 1, v294);
        if (v282)
        {
          sub_23FC8FCC4(v296, &qword_256F660D8);
          sub_23FCA96B4();
          v347(v188, v297);
          sub_23FC8FCC4(v275, &qword_256F660D8);
          return v345;
        }
        v348 = *(void (**)(uint64_t, uint64_t, uint64_t))(v295 + 32);
        v349 = v377;
        v348(v377, v275, v294);
        v206 = v297;
        v350 = v188;
        v351 = v378;
        sub_23FC100A0(v378, v349, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v295 + 16));
        sub_23FC996FC();
        v353 = v352;
        *(_QWORD *)(v352 + 16) = 2;
        v348(v352 + v344, v351, v294);
        v354 = v349;
        v204 = v353;
        (*(void (**)(uint64_t, uint64_t))(v295 + 8))(v354, v294);
        sub_23FC8FCC4(v296, &qword_256F660D8);
        sub_23FCA96B4();
        v210 = (char *)v350;
        goto LABEL_8;
      }
      v319 = v392;
      sub_23FCA9784(v392, *(uint64_t (**)(uint64_t, _QWORD))(v390 + 96));
      v275 = v365;
      v320 = v363;
      v321 = v319;
      v322 = v366;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v365 + 32))(v363, v321, v366);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v275 + 16))(v364, v320, v322);
      v280 = v387;
      sub_23FD71F9C();
      v323 = (*(uint64_t (**)(uint64_t, uint64_t))(v275 + 8))(v320, v322);
      v324 = (unsigned int *)MEMORY[0x24BE52A50];
    }
    v295 = v433;
    v294 = v434;
    sub_23FD7095C(v323, *v324);
    sub_23FD70AFC();
    goto LABEL_78;
  }
  sub_23FD70664();
  (*(void (**)(char *, char *, uint64_t))(v188 + 32))(v196, v201, v187);
  sub_23FBFD684(&qword_256F5F8A8);
  v203 = v433;
  v204 = sub_23FC7A4A8();
  *(_OWORD *)(v204 + 16) = xmmword_23FD769D0;
  (*(void (**)(NSObject *, char *, uint64_t))(v188 + 16))(v192, v196, v187);
  sub_23FD71AA4();
  sub_23FD70CDC(*MEMORY[0x24BE52D10], *(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v203 + 104));
  (*(void (**)(char *, uint64_t))(v188 + 8))(v196, v187);
  return v204;
}

uint64_t sub_23FD6F7E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  unsigned int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v4 = sub_23FD73298();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4, v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23FC06160((uint64_t)v8, a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16));
  v9 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v8, v4);
  if (v9 == *MEMORY[0x24BE551B8])
  {
    sub_23FD70C1C();
    v10 = (unsigned int *)MEMORY[0x24BE52A60];
LABEL_5:
    v11 = *v10;
    v12 = sub_23FD7196C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(a2, v11, v12);
  }
  if (v9 == *MEMORY[0x24BE551B0])
  {
    sub_23FD70C1C();
    v10 = (unsigned int *)MEMORY[0x24BE52A58];
    goto LABEL_5;
  }
  result = sub_23FD75374();
  __break(1u);
  return result;
}

uint64_t sub_23FD6F8EC()
{
  uint64_t v0;

  sub_23FC5FB58(v0 + OBJC_IVAR____TtC23IntelligenceFlowRuntime15XPCClientAvatar_sessionId);
  sub_23FD70CCC(OBJC_IVAR____TtC23IntelligenceFlowRuntime15XPCClientAvatar_clientReverseClientDistributor);
  sub_23FD70CCC(OBJC_IVAR____TtC23IntelligenceFlowRuntime15XPCClientAvatar_instrumentationSender);
  sub_23FD70CCC(OBJC_IVAR____TtC23IntelligenceFlowRuntime15XPCClientAvatar_actionSummaryRetriever);
  sub_23FC8FCC4(v0 + OBJC_IVAR____TtC23IntelligenceFlowRuntime15XPCClientAvatar_latestClientSentQueryEventId, qword_254346A10);
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_23FD6F954()
{
  sub_23FD6F8EC();
  return swift_defaultActor_deallocate();
}

uint64_t sub_23FD6F96C()
{
  return type metadata accessor for XPCClientAvatar();
}

uint64_t type metadata accessor for XPCClientAvatar()
{
  uint64_t result;

  result = qword_256F65F80;
  if (!qword_256F65F80)
    return swift_getSingletonMetadata();
  return result;
}

void sub_23FD6F9AC()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for SessionIdentityPack(319);
  if (v0 <= 0x3F)
  {
    sub_23FD6FA4C();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

void sub_23FD6FA4C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256F60798[0])
  {
    sub_23FD71474();
    v0 = sub_23FD75038();
    if (!v1)
      atomic_store(v0, qword_256F60798);
  }
}

_UNKNOWN **sub_23FD6FAA0()
{
  return &off_2510166A8;
}

_UNKNOWN **sub_23FD6FAAC()
{
  return &off_2510166C8;
}

uint64_t sub_23FD6FAB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23FBFD684(&qword_256F660D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23FD6FB00(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t i;
  int64_t v33;
  unint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  void (*v40)(char *, unint64_t, uint64_t);
  char *v41;
  char *v42;
  int v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  void (*v51)(char *, uint64_t);
  char *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  BOOL v57;
  uint64_t v58;
  uint64_t result;
  uint64_t v60;
  char *v61;
  unsigned int v62;
  unsigned int v63;
  int v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int64_t v74;
  uint64_t v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  int64_t v84;
  uint64_t v85;
  char *v86;

  v2 = sub_23FD74798();
  v71 = *(_QWORD *)(v2 - 8);
  v72 = v2;
  MEMORY[0x24BDAC7A8](v2, v3);
  v70 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23FD730D0();
  v68 = *(_QWORD *)(v5 - 8);
  v69 = v5;
  v7 = MEMORY[0x24BDAC7A8](v5, v6);
  v67 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7, v9);
  v66 = (char *)&v60 - v10;
  v79 = sub_23FD717C8();
  v81 = *(_QWORD *)(v79 - 8);
  MEMORY[0x24BDAC7A8](v79, v11);
  v13 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23FD730A0();
  v15 = *(_QWORD *)(v14 - 8);
  v17 = MEMORY[0x24BDAC7A8](v14, v16);
  v19 = (char *)&v60 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v17, v20);
  v82 = (char *)&v60 - v22;
  MEMORY[0x24BDAC7A8](v21, v23);
  v86 = (char *)&v60 - v24;
  sub_23FBFD684(&qword_256F660F0);
  v25 = sub_23FD75254();
  v26 = v25;
  v27 = 0;
  v78 = a1;
  v28 = *(_QWORD *)(a1 + 64);
  v73 = a1 + 64;
  v29 = 1 << *(_BYTE *)(a1 + 32);
  v30 = -1;
  if (v29 < 64)
    v30 = ~(-1 << v29);
  v31 = v30 & v28;
  v74 = (unint64_t)(v29 + 63) >> 6;
  v76 = *MEMORY[0x24BE54E40];
  v64 = *MEMORY[0x24BE54E38];
  v63 = *MEMORY[0x24BE526E0];
  v62 = *MEMORY[0x24BE526E8];
  v75 = v25 + 64;
  v77 = v25;
  v65 = v14;
  v80 = v15;
  v61 = v19;
  if (!v31)
    goto LABEL_5;
LABEL_4:
  v83 = (v31 - 1) & v31;
  v84 = v27;
  for (i = __clz(__rbit64(v31)) | (v27 << 6); ; i = __clz(__rbit64(v34)) + (v35 << 6))
  {
    v37 = *(_QWORD *)(v78 + 56);
    v38 = (uint64_t *)(*(_QWORD *)(v78 + 48) + 16 * i);
    v39 = v38[1];
    v85 = *v38;
    v40 = *(void (**)(char *, unint64_t, uint64_t))(v15 + 16);
    v41 = v86;
    v40(v86, v37 + *(_QWORD *)(v15 + 72) * i, v14);
    v42 = v82;
    v40(v82, (unint64_t)v41, v14);
    v40(v19, (unint64_t)v42, v14);
    v43 = (*(uint64_t (**)(char *, uint64_t))(v15 + 88))(v19, v14);
    if (v43 == v76)
    {
      swift_bridgeObjectRetain();
      v44 = *(void (**)(char *, uint64_t))(v15 + 8);
      v44(v42, v14);
      (*(void (**)(char *, uint64_t))(v15 + 96))(v19, v14);
      (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v13, v19, v72);
      v45 = v62;
    }
    else
    {
      if (v43 != v64)
        goto LABEL_30;
      (*(void (**)(char *, uint64_t))(v15 + 96))(v19, v14);
      v46 = v68;
      v47 = v66;
      v48 = v19;
      v49 = v69;
      (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v66, v48, v69);
      v50 = v67;
      (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v67, v47, v49);
      swift_bridgeObjectRetain();
      sub_23FD730C4();
      sub_23FD730B8();
      sub_23FD717D4();
      v51 = *(void (**)(char *, uint64_t))(v46 + 8);
      v14 = v65;
      v51(v50, v49);
      v44 = *(void (**)(char *, uint64_t))(v80 + 8);
      v44(v82, v14);
      v52 = v47;
      v15 = v80;
      v51(v52, v49);
      v45 = v63;
      v19 = v61;
    }
    v53 = v81;
    v54 = v79;
    (*(void (**)(char *, uint64_t, uint64_t))(v81 + 104))(v13, v45, v79);
    v44(v86, v14);
    *(_QWORD *)(v75 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v26 = v77;
    v55 = (_QWORD *)(*(_QWORD *)(v77 + 48) + 16 * i);
    *v55 = v85;
    v55[1] = v39;
    (*(void (**)(unint64_t, char *, uint64_t))(v53 + 32))(*(_QWORD *)(v26 + 56) + *(_QWORD *)(v53 + 72) * i, v13, v54);
    v56 = *(_QWORD *)(v26 + 16);
    v57 = __OFADD__(v56, 1);
    v58 = v56 + 1;
    if (v57)
    {
      __break(1u);
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
    *(_QWORD *)(v26 + 16) = v58;
    v31 = v83;
    v27 = v84;
    if (v83)
      goto LABEL_4;
LABEL_5:
    v33 = v27 + 1;
    if (__OFADD__(v27, 1))
      goto LABEL_28;
    if (v33 >= v74)
      return v26;
    v34 = *(_QWORD *)(v73 + 8 * v33);
    v35 = v27 + 1;
    if (!v34)
    {
      v35 = v27 + 2;
      if (v27 + 2 >= v74)
        return v26;
      v34 = *(_QWORD *)(v73 + 8 * v35);
      if (!v34)
      {
        v35 = v27 + 3;
        if (v27 + 3 >= v74)
          return v26;
        v34 = *(_QWORD *)(v73 + 8 * v35);
        if (!v34)
          break;
      }
    }
LABEL_18:
    v83 = (v34 - 1) & v34;
    v84 = v35;
  }
  v36 = v27 + 4;
  if (v27 + 4 >= v74)
    return v26;
  v34 = *(_QWORD *)(v73 + 8 * v36);
  if (v34)
  {
    v35 = v27 + 4;
    goto LABEL_18;
  }
  while (1)
  {
    v35 = v36 + 1;
    if (__OFADD__(v36, 1))
      break;
    if (v35 >= v74)
      return v26;
    v34 = *(_QWORD *)(v73 + 8 * v35);
    ++v36;
    if (v34)
      goto LABEL_18;
  }
LABEL_29:
  __break(1u);
LABEL_30:
  swift_bridgeObjectRetain();
  result = sub_23FD75374();
  __break(1u);
  return result;
}

uint64_t sub_23FD70074(uint64_t a1, uint64_t a2, __int128 *a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v16[3];
  uint64_t v17;
  _UNKNOWN **v18;

  v17 = type metadata accessor for SessionReverseClientDistributor(0);
  v18 = &off_25100A770;
  v16[0] = a2;
  type metadata accessor for XPCClientAvatar();
  v8 = swift_allocObject();
  v9 = sub_23FCA67B0((uint64_t)v16, v17);
  MEMORY[0x24BDAC7A8](v9, v9);
  v11 = (_QWORD *)((char *)&v16[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v12 + 16))(v11);
  v13 = sub_23FD7015C(a1, *v11, a3, a4, v8);
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v16);
  return v13;
}

uint64_t sub_23FD7015C(uint64_t a1, uint64_t a2, __int128 *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  _UNKNOWN **v21;
  __int128 v22;
  uint64_t v23;
  _UNKNOWN **v24;

  v10 = sub_23FBFD684(qword_254346A10);
  MEMORY[0x24BDAC7A8](v10, v11);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for ToolInvocationSummaryRetriever();
  v24 = &protocol witness table for ToolInvocationSummaryRetriever;
  *(_QWORD *)&v22 = a4;
  v20 = type metadata accessor for SessionReverseClientDistributor(0);
  v21 = &off_25100A770;
  *(_QWORD *)&v19 = a2;
  swift_defaultActor_initialize();
  v14 = a5 + OBJC_IVAR____TtC23IntelligenceFlowRuntime15XPCClientAvatar_latestClientSentQueryEventId;
  v15 = sub_23FD71474();
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v14, 1, 1, v15);
  sub_23FC06D0C(a1, a5 + OBJC_IVAR____TtC23IntelligenceFlowRuntime15XPCClientAvatar_sessionId);
  sub_23FBFDE28(&v19, a5 + OBJC_IVAR____TtC23IntelligenceFlowRuntime15XPCClientAvatar_clientReverseClientDistributor);
  sub_23FBFDE28(a3, a5 + OBJC_IVAR____TtC23IntelligenceFlowRuntime15XPCClientAvatar_instrumentationSender);
  sub_23FBFDE28(&v22, a5 + OBJC_IVAR____TtC23IntelligenceFlowRuntime15XPCClientAvatar_actionSummaryRetriever);
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v13, 1, 1, v15);
  v16 = a5 + OBJC_IVAR____TtC23IntelligenceFlowRuntime15XPCClientAvatar_latestClientSentQueryEventId;
  swift_beginAccess();
  sub_23FCBADB4((uint64_t)v13, v16);
  swift_endAccess();
  return a5;
}

uint64_t sub_23FD702DC()
{
  return swift_allocObject();
}

uint64_t sub_23FD702FC()
{
  return swift_allocObject();
}

uint64_t sub_23FD70310()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v2 = v0[13];
  *(_QWORD *)(v1 - 96) = v0[14];
  *(_QWORD *)(v1 - 88) = v2;
  *(_QWORD *)(v1 - 80) = v0[10];
  return swift_task_dealloc();
}

uint64_t sub_23FD70374()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 88) = *(_QWORD *)(v0 + 104);
  return swift_task_dealloc();
}

uint64_t sub_23FD703D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *(_DWORD *)(v14 - 80) = *(_DWORD *)(v13 + 484);
  v15 = *(_QWORD *)(v13 + 336);
  v16 = *(_QWORD *)(v13 + 256);
  v17 = *(_QWORD *)(v13 + 232);
  v18 = *(_QWORD *)(v13 + 240);
  *(_QWORD *)(v14 - 88) = *(_QWORD *)(v13 + 224);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(v18 + 32))(v16, v15, v17, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, *(_QWORD *)(v13 + 160));
}

uint64_t sub_23FD7043C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t (*v5)(uint64_t, unint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(v1 + 176);
  v4 = *(_DWORD *)(v3 + 80);
  *(_DWORD *)(v1 + 504) = v4;
  *(_QWORD *)(v1 + 456) = *(_QWORD *)(v3 + 72);
  v5 = *(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v1 + 464) = v5;
  *(_QWORD *)(v1 + 472) = 0;
  v6 = *(_QWORD *)(v1 + 192);
  v7 = *(_QWORD *)(v1 + 168);
  *(_QWORD *)(v2 - 88) = *(_QWORD *)(v1 + 160);
  return v5(v6, a1 + ((v4 + 32) & ~(unint64_t)v4), v7);
}

uint64_t sub_23FD704BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  *(_DWORD *)(v16 - 80) = *(_DWORD *)(v15 + 484);
  v17 = *(_QWORD *)(v15 + 256);
  v18 = *(_QWORD *)(v15 + 232);
  v19 = *(_QWORD *)(v15 + 240);
  *(_QWORD *)(v16 - 88) = *(_QWORD *)(v15 + 224);
  v22 = *(_QWORD *)(v15 + 160);
  v21 = *(_QWORD *)(v15 + 144);
  *(_QWORD *)(v16 - 104) = *(_QWORD *)(v15 + 120);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 32))(v17, v14, v18, a4, a5, a6, a7, a8, a9, a10, a11, v21, a13, a14, v22);
}

uint64_t sub_23FD7052C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, unint64_t, _QWORD))(*(_QWORD *)(v1 + 336) + 16))(*(_QWORD *)(v1 + 352), *(_QWORD *)(v1 + 384)+ ((*(unsigned __int8 *)(v1 + 496) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 496))+ *(_QWORD *)(*(_QWORD *)(v1 + 336) + 72) * a1, *(_QWORD *)(v1 + 328));
}

uint64_t sub_23FD70564()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 96))(v1, v0);
}

uint64_t sub_23FD70574()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v0[14];
  *(_QWORD *)(v1 - 104) = v0[17];
  *(_QWORD *)(v1 - 96) = v2;
  v3 = v0[10];
  *(_QWORD *)(v1 - 88) = v0[13];
  *(_QWORD *)(v1 - 80) = v3;
  return swift_task_dealloc();
}

uint64_t sub_23FD705D4()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 424))(*(_QWORD *)(v0 + 352), *(_QWORD *)(v0 + 328));
}

uint64_t sub_23FD705EC(uint64_t a1)
{
  return sub_23FC1E34C(a1);
}

uint64_t sub_23FD70608(uint64_t a1)
{
  return sub_23FC1E34C(a1);
}

uint64_t sub_23FD70624@<X0>(uint64_t a1@<X1>, uint64_t (*a2)(uint64_t, uint64_t, _QWORD)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(v2, a1, *(_QWORD *)(v3 - 112));
}

uint64_t sub_23FD70630()
{
  return sub_23FD71F00();
}

uint64_t sub_23FD70654()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
}

uint64_t sub_23FD70664()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 96))(v0, v2);
}

void sub_23FD70674()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v0[53] = v3;
  v0[54] = v2;
  sub_23FC92F18(v0[10] + v0[49], v0[27], v1);
}

uint64_t sub_23FD70694@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, unint64_t, _QWORD))(*(_QWORD *)(v1 + 360) + 16))(*(_QWORD *)(v1 + 368), *(_QWORD *)(v1 + 400)+ ((*(unsigned __int8 *)(v1 + 472) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 472))+ *(_QWORD *)(*(_QWORD *)(v1 + 360) + 72) * a1, *(_QWORD *)(v1 + 352));
}

uint64_t sub_23FD706D0()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0[29] + 32))(v0[33], v0[27], v0[28]);
}

uint64_t sub_23FD706EC()
{
  return sub_23FD7190C();
}

uint64_t sub_23FD706FC()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(v0 + 96))(v1);
}

uint64_t sub_23FD70710@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *a1 = v2;
  a1[1] = a2;
  return *(_QWORD *)(v2 + 224);
}

uint64_t sub_23FD70724()
{
  uint64_t v0;
  uint64_t v1;

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v1, 1, v0);
}

uint64_t sub_23FD70750(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;

  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(a20 + 104))(v22, *(unsigned int *)(v23 - 80), a22);
}

uint64_t sub_23FD70768()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = sub_23FBFDE40(v0, v0[3]);
  return sub_23FD740B4();
}

uint64_t sub_23FD7078C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

uint64_t sub_23FD70798()
{
  return sub_23FD71F00();
}

void sub_23FD707C0(uint64_t a1)
{
  uint64_t *v1;

  sub_23FC8FCC4(a1, v1);
}

uint64_t sub_23FD707C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5();
}

uint64_t sub_23FD707E4(uint64_t a1)
{
  return sub_23FC1E34C(a1);
}

uint64_t sub_23FD70800()
{
  return sub_23FD71F00();
}

uint64_t sub_23FD70828()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[17] + 8))(v0[18], v0[16]);
}

uint64_t sub_23FD7084C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(a21, a17, a16);
}

void sub_23FD70860()
{
  void *v0;

}

uint64_t sub_23FD70874()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[29] + 8))(v0[32], v0[28]);
}

uint64_t sub_23FD70888()
{
  return sub_23FD74240();
}

uint64_t sub_23FD70894()
{
  return sub_23FD74BDC();
}

uint64_t sub_23FD708A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD, uint64_t, uint64_t);

  return v3(*(_QWORD *)(v2 + 256), v1, v0);
}

uint64_t sub_23FD708BC()
{
  return sub_23FD74048();
}

uint64_t sub_23FD708C8()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[30] + 8))(v0[32], v0[29]);
}

uint64_t sub_23FD708EC()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 256);
}

uint64_t sub_23FD708FC()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[18] + 8))(v0[19], v0[17]);
}

void sub_23FD7091C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 88) = *(_QWORD *)(v0 + 320);
}

void sub_23FD70934()
{
  uint64_t v0;

  ++*(_QWORD *)(v0 + 416);
}

uint64_t sub_23FD7094C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  uint64_t v22;

  return (*(uint64_t (**)(_QWORD, uint64_t))(v21 + 8))(*(_QWORD *)(v22 - 88), a21);
}

uint64_t sub_23FD7095C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 104))(v2, a2, v3);
}

BOOL sub_23FD7096C(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_23FD7097C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(v0, v1, v2);
}

uint64_t sub_23FD7098C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t sub_23FD7099C()
{
  return swift_arrayDestroy();
}

uint64_t sub_23FD709AC()
{
  return sub_23FD724A0();
}

uint64_t sub_23FD709B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;

  return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(a22 + 104))(v22, *(unsigned int *)(v23 - 80), *(_QWORD *)(v23 - 104));
}

__n128 sub_23FD709CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, __n128 a19)
{
  _DWORD *v19;
  uint64_t v20;
  __n128 result;

  *(_QWORD *)(v20 - 80) = a1;
  result = a19;
  *v19 = a19.n128_u32[0];
  return result;
}

uint64_t sub_23FD709E0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 256);
}

uint64_t sub_23FD709F0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 344);
}

uint64_t sub_23FD70A04(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

__n128 *sub_23FD70A0C(__n128 *result, __n128 a2)
{
  result[1] = a2;
  return result;
}

uint64_t sub_23FD70A1C()
{
  return sub_23FD74048();
}

uint64_t sub_23FD70A38()
{
  return sub_23FD740C0();
}

uint64_t sub_23FD70A40(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

void sub_23FD70A48(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  uint8_t *v5;
  os_log_type_t v6;

  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

void sub_23FD70A68(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_23FC92F18(a1, v3, a3);
}

uint64_t sub_23FD70A70()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
  return swift_task_dealloc();
}

uint64_t sub_23FD70A84(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 4) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FD70A90()
{
  return swift_task_dealloc();
}

uint64_t sub_23FD70A98(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  return sub_23FC9DC40(a1, a2, (uint64_t *)(v2 - 80));
}

uint64_t sub_23FD70AA4()
{
  return sub_23FD73100();
}

uint64_t sub_23FD70AB8()
{
  return sub_23FD75344();
}

uint64_t sub_23FD70AC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(a23, a18, a17);
}

uint64_t sub_23FD70AD8()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = sub_23FBFDE40(v0, v0[3]);
  return sub_23FD740B4();
}

uint64_t sub_23FD70AFC()
{
  uint64_t v0;
  uint64_t v1;

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v0, 0, 1, v1);
}

uint64_t sub_23FD70B10()
{
  return sub_23FD74174();
}

uint64_t sub_23FD70B1C()
{
  return sub_23FD73F70();
}

uint64_t sub_23FD70B24()
{
  return sub_23FD724A0();
}

void sub_23FD70B2C()
{
  void *v0;

}

uint64_t sub_23FD70B38()
{
  return sub_23FD71AEC();
}

uint64_t sub_23FD70B40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;

  return v21(a21, v22, v23);
}

uint64_t sub_23FD70B54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a16 + 8))(v18, a18);
}

uint64_t sub_23FD70B68()
{
  uint64_t v0;

  return sub_23FD6DA54(*(char **)(v0 + 352));
}

uint64_t sub_23FD70B74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v1, v0, v2);
}

id sub_23FD70B94(float a1)
{
  float *v1;
  void *v2;

  *v1 = a1;
  return v2;
}

uint64_t sub_23FD70BA4()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 248) + 8))(v0, *(_QWORD *)(v1 - 240));
}

uint64_t sub_23FD70BC0()
{
  _QWORD *v0;

  sub_23FBFDE40(v0, v0[3]);
  return sub_23FD740B4();
}

id sub_23FD70BE0()
{
  void *v0;

  return v0;
}

uint64_t sub_23FD70BE8()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 344);
}

__n128 *sub_23FD70BF4(__n128 *result, __n128 a2)
{
  result[1] = a2;
  return result;
}

uint64_t sub_23FD70C04()
{
  return sub_23FD740C0();
}

void sub_23FD70C14()
{
  void *v0;

}

uint64_t sub_23FD70C1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t sub_23FD70C2C()
{
  return sub_23FD71414();
}

uint64_t sub_23FD70C34()
{
  return sub_23FD71F0C();
}

uint64_t sub_23FD70C3C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 344);
}

uint64_t sub_23FD70C4C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 344);
}

uint64_t sub_23FD70C5C()
{
  return sub_23FD74240();
}

uint64_t sub_23FD70C6C(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 440) = result;
  *(_QWORD *)(v1 + 448) = *(_QWORD *)(result + 16);
  return result;
}

void sub_23FD70C7C()
{
  uint64_t v0;

  ++*(_QWORD *)(v0 + 432);
}

uint64_t sub_23FD70C94()
{
  return sub_23FD75044();
}

uint64_t sub_23FD70CA4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FD70CB8()
{
  return sub_23FD74048();
}

uint64_t sub_23FD70CC4()
{
  return sub_23FD73F88();
}

uint64_t sub_23FD70CCC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v1 + a1);
}

uint64_t sub_23FD70CD4()
{
  return sub_23FD74F6C();
}

uint64_t sub_23FD70CDC@<X0>(uint64_t a1@<X1>, uint64_t (*a2)(uint64_t, uint64_t, _QWORD)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(v2, a1, *(_QWORD *)(v3 - 112));
}

uint64_t sub_23FD70CE8()
{
  uint64_t v0;
  uint64_t v1;

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v1, 1, v0);
}

void sub_23FD70D0C()
{
  JUMPOUT(0x2426757E0);
}

uint64_t sub_23FD70D18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, _QWORD)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, *(_QWORD *)(v3 - 256));
}

uint64_t sub_23FD70D24()
{
  return sub_23FD740A8();
}

uint64_t sub_23FD70D2C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23FD70D38()
{
  return sub_23FD73F70();
}

uint64_t sub_23FD70D40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, _QWORD)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, *(_QWORD *)(v3 - 256));
}

__n128 *sub_23FD70D4C(__n128 *result, __n128 a2)
{
  result[1] = a2;
  return result;
}

__n128 *sub_23FD70D58(__n128 *result, __n128 a2)
{
  result[1] = a2;
  return result;
}

void sub_23FD70D6C()
{
  JUMPOUT(0x24267794CLL);
}

uint64_t sub_23FD70D78()
{
  return sub_23FD7424C();
}

uint64_t sub_23FD70D80()
{
  return sub_23FD7415C();
}

uint64_t sub_23FD70D88()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FD70D90()
{
  return sub_23FD73F88();
}

void sub_23FD70D98(uint64_t a1)
{
  uint64_t *v1;

  sub_23FC8FCC4(a1, v1);
}

uint64_t sub_23FD70DB4()
{
  return sub_23FD70F4C(1);
}

uint64_t sub_23FD70DBC(uint64_t a1, int a2, int a3, int a4)
{
  BOOL v8;

  if (qword_256F7F3C8 == -1)
  {
    if (qword_256F7F3D0)
      return _availability_version_check();
  }
  else
  {
    dispatch_once_f(&qword_256F7F3C8, 0, (dispatch_function_t)sub_23FD70F44);
    if (qword_256F7F3D0)
      return _availability_version_check();
  }
  if (qword_256F7F3C0 == -1)
  {
    v8 = dword_256F7F3B0 < a2;
    if (dword_256F7F3B0 > a2)
      return 1;
  }
  else
  {
    dispatch_once_f(&qword_256F7F3C0, 0, (dispatch_function_t)sub_23FD70DB4);
    v8 = dword_256F7F3B0 < a2;
    if (dword_256F7F3B0 > a2)
      return 1;
  }
  if (v8)
    return 0;
  if (dword_256F7F3B4 > a3)
    return 1;
  return dword_256F7F3B4 >= a3 && dword_256F7F3B8 >= a4;
}

uint64_t sub_23FD70F44()
{
  return sub_23FD70F4C(0);
}

uint64_t sub_23FD70F4C(uint64_t result)
{
  uint64_t (*v1)(void);
  BOOL v2;
  unsigned __int8 *v4;
  uint64_t (*v5)(_QWORD);
  unint64_t v6;
  uint64_t (*v7)(_QWORD, uint64_t, _QWORD, _QWORD);
  uint64_t (*v8)(_QWORD, const char *, uint64_t, unsigned __int8 *);
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t (*v10)(uint64_t);
  uint64_t (*v11)(void);
  FILE *v12;
  FILE *v13;
  uint64_t v14;
  size_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  FILE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  FILE *v27;
  unsigned int (*v28)(uint64_t, char *, uint64_t, uint64_t);
  char v29[32];
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  v1 = (uint64_t (*)(void))qword_256F7F3D0;
  if (qword_256F7F3D0)
    v2 = (_DWORD)result == 0;
  else
    v2 = 0;
  if (!v2)
  {
    if (MEMORY[0x24BDAC970])
    {
      qword_256F7F3D0 = (uint64_t)MEMORY[0x24BDAC970];
      v1 = MEMORY[0x24BDAC970];
    }
    if (!v1 || (_DWORD)result != 0)
    {
      result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "kCFAllocatorNull");
      if (result)
      {
        v4 = *(unsigned __int8 **)result;
        result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFDataCreateWithBytesNoCopy");
        if (result)
        {
          v5 = (uint64_t (*)(_QWORD))result;
          v6 = (unint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFPropertyListCreateWithData");
          result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFPropertyListCreateFromXMLData");
          if (v6 | result)
          {
            v7 = (uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD))result;
            result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFStringCreateWithCStringNoCopy");
            if (result)
            {
              v8 = (uint64_t (*)(_QWORD, const char *, uint64_t, unsigned __int8 *))result;
              result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFDictionaryGetValue");
              if (result)
              {
                v9 = (uint64_t (*)(uint64_t, uint64_t))result;
                result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFGetTypeID");
                if (result)
                {
                  v10 = (uint64_t (*)(uint64_t))result;
                  result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFStringGetTypeID");
                  if (result)
                  {
                    v11 = (uint64_t (*)(void))result;
                    result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFStringGetCString");
                    v28 = (unsigned int (*)(uint64_t, char *, uint64_t, uint64_t))result;
                    if (result)
                    {
                      result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFRelease");
                      if (result)
                      {
                        v12 = (FILE *)result;
                        result = (uint64_t)fopen("/System/Library/CoreServices/SystemVersion.plist", "r");
                        if (result)
                        {
                          v13 = (FILE *)result;
                          v27 = v12;
                          fseek((FILE *)result, 0, 2);
                          v14 = MEMORY[0x2426793A4](v13);
                          if (v14 < 0)
                          {
                            v16 = 0;
                          }
                          else
                          {
                            v15 = v14;
                            rewind(v13);
                            v16 = malloc(v15);
                            if (v16)
                            {
                              v26 = v16;
                              if (fread(v16, 1uLL, v15, v13) == v15)
                              {
                                v17 = v5(0);
                                if (v17)
                                {
                                  v18 = v17;
                                  v19 = v13;
                                  if (v6)
                                    v20 = ((uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD, _QWORD))v6)(0, v17, 0, 0, 0);
                                  else
                                    v20 = v7(0, v17, 0, 0);
                                  v21 = v20;
                                  if (v20)
                                  {
                                    v22 = v8(0, "ProductVersion", 1536, v4);
                                    if (v22)
                                    {
                                      v23 = v22;
                                      v24 = v9(v21, v22);
                                      ((void (*)(uint64_t))v27)(v23);
                                      if (v24)
                                      {
                                        v25 = v10(v24);
                                        if (v25 == v11())
                                        {
                                          if (v28(v24, v29, 32, 134217984))
                                            sscanf(v29, "%d.%d.%d", &dword_256F7F3B0, &dword_256F7F3B4, &dword_256F7F3B8);
                                        }
                                      }
                                    }
                                    ((void (*)(uint64_t))v27)(v21);
                                    v19 = v13;
                                  }
                                  ((void (*)(uint64_t))v27)(v18);
                                }
                                else
                                {
                                  v19 = v13;
                                }
                                v16 = v26;
                              }
                              else
                              {
                                v16 = v26;
                                v19 = v13;
                              }
                              goto LABEL_41;
                            }
                          }
                          v19 = v13;
LABEL_41:
                          free(v16);
                          return fclose(v19);
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_23FD7127C()
{
  return MEMORY[0x24BDCB220]();
}

uint64_t sub_23FD71288()
{
  return MEMORY[0x24BDCB260]();
}

uint64_t sub_23FD71294()
{
  return MEMORY[0x24BDCB268]();
}

uint64_t sub_23FD712A0()
{
  return MEMORY[0x24BDCB3B8]();
}

uint64_t sub_23FD712AC()
{
  return MEMORY[0x24BDCB400]();
}

uint64_t sub_23FD712B8()
{
  return MEMORY[0x24BDCB410]();
}

uint64_t sub_23FD712C4()
{
  return MEMORY[0x24BDCB6C0]();
}

uint64_t sub_23FD712D0()
{
  return MEMORY[0x24BDCB750]();
}

uint64_t sub_23FD712DC()
{
  return MEMORY[0x24BDCB900]();
}

uint64_t sub_23FD712E8()
{
  return MEMORY[0x24BDCB930]();
}

uint64_t sub_23FD712F4()
{
  return MEMORY[0x24BDCBBA0]();
}

uint64_t sub_23FD71300()
{
  return MEMORY[0x24BDCBBC8]();
}

uint64_t sub_23FD7130C()
{
  return MEMORY[0x24BDCBBD8]();
}

uint64_t sub_23FD71318()
{
  return MEMORY[0x24BDCBBF0]();
}

uint64_t sub_23FD71324()
{
  return MEMORY[0x24BDCBC10]();
}

uint64_t sub_23FD71330()
{
  return MEMORY[0x24BDCC1E0]();
}

uint64_t sub_23FD7133C()
{
  return MEMORY[0x24BDCD2F0]();
}

uint64_t sub_23FD71348()
{
  return MEMORY[0x24BDCD8D0]();
}

uint64_t sub_23FD71354()
{
  return MEMORY[0x24BDCDAC0]();
}

uint64_t sub_23FD71360()
{
  return MEMORY[0x24BDCDB58]();
}

uint64_t sub_23FD7136C()
{
  return MEMORY[0x24BDCDB60]();
}

uint64_t sub_23FD71378()
{
  return MEMORY[0x24BDCDB68]();
}

uint64_t sub_23FD71384()
{
  return MEMORY[0x24BDCDBD0]();
}

uint64_t sub_23FD71390()
{
  return MEMORY[0x24BDCDC28]();
}

uint64_t sub_23FD7139C()
{
  return MEMORY[0x24BDCDC30]();
}

uint64_t sub_23FD713A8()
{
  return MEMORY[0x24BDCDC40]();
}

uint64_t sub_23FD713B4()
{
  return MEMORY[0x24BDCDC60]();
}

uint64_t sub_23FD713C0()
{
  return MEMORY[0x24BDCDCA0]();
}

uint64_t sub_23FD713CC()
{
  return MEMORY[0x24BDCDCC8]();
}

uint64_t sub_23FD713D8()
{
  return MEMORY[0x24BDCDCE0]();
}

uint64_t sub_23FD713E4()
{
  return MEMORY[0x24BDCE5D8]();
}

uint64_t sub_23FD713F0()
{
  return MEMORY[0x24BDCE878]();
}

uint64_t sub_23FD713FC()
{
  return MEMORY[0x24BDCE880]();
}

uint64_t sub_23FD71408()
{
  return MEMORY[0x24BDCE8F8]();
}

uint64_t sub_23FD71414()
{
  return MEMORY[0x24BDCE900]();
}

uint64_t sub_23FD71420()
{
  return MEMORY[0x24BDCE998]();
}

uint64_t sub_23FD7142C()
{
  return MEMORY[0x24BDCE9B0]();
}

uint64_t sub_23FD71438()
{
  return MEMORY[0x24BDCE9B8]();
}

uint64_t sub_23FD71444()
{
  return MEMORY[0x24BDCE9D0]();
}

uint64_t sub_23FD71450()
{
  return MEMORY[0x24BDCE9E0]();
}

uint64_t sub_23FD7145C()
{
  return MEMORY[0x24BDCE9F8]();
}

uint64_t _s23IntelligenceFlowRuntime9SessionIDVACycfC_0()
{
  return MEMORY[0x24BDCEA40]();
}

uint64_t sub_23FD71474()
{
  return MEMORY[0x24BDCEA58]();
}

uint64_t sub_23FD71480()
{
  return MEMORY[0x24BDCEB20]();
}

uint64_t sub_23FD7148C()
{
  return MEMORY[0x24BDCEEA8]();
}

uint64_t sub_23FD71498()
{
  return MEMORY[0x24BE30C08]();
}

uint64_t sub_23FD714A4()
{
  return MEMORY[0x24BE30C20]();
}

uint64_t sub_23FD714B0()
{
  return MEMORY[0x24BE30C30]();
}

uint64_t sub_23FD714BC()
{
  return MEMORY[0x24BE30C38]();
}

uint64_t sub_23FD714C8()
{
  return MEMORY[0x24BE30C40]();
}

uint64_t sub_23FD714D4()
{
  return MEMORY[0x24BE51FD8]();
}

uint64_t sub_23FD714E0()
{
  return MEMORY[0x24BE51FE8]();
}

uint64_t sub_23FD714EC()
{
  return MEMORY[0x24BE52028]();
}

uint64_t sub_23FD714F8()
{
  return MEMORY[0x24BE52038]();
}

uint64_t sub_23FD71504()
{
  return MEMORY[0x24BE52080]();
}

uint64_t sub_23FD71510()
{
  return MEMORY[0x24BE520A0]();
}

uint64_t sub_23FD7151C()
{
  return MEMORY[0x24BE520A8]();
}

uint64_t sub_23FD71528()
{
  return MEMORY[0x24BE520B0]();
}

uint64_t sub_23FD71534()
{
  return MEMORY[0x24BE52100]();
}

uint64_t sub_23FD71540()
{
  return MEMORY[0x24BE54860]();
}

uint64_t sub_23FD7154C()
{
  return MEMORY[0x24BE52118]();
}

uint64_t sub_23FD71558()
{
  return MEMORY[0x24BE52120]();
}

uint64_t sub_23FD71564()
{
  return MEMORY[0x24BE52130]();
}

uint64_t sub_23FD71570()
{
  return MEMORY[0x24BE52138]();
}

uint64_t sub_23FD7157C()
{
  return MEMORY[0x24BE52140]();
}

uint64_t sub_23FD71588()
{
  return MEMORY[0x24BE52178]();
}

uint64_t sub_23FD71594()
{
  return MEMORY[0x24BE52180]();
}

uint64_t sub_23FD715A0()
{
  return MEMORY[0x24BE52188]();
}

uint64_t sub_23FD715AC()
{
  return MEMORY[0x24BE52190]();
}

uint64_t sub_23FD715B8()
{
  return MEMORY[0x24BE52198]();
}

uint64_t sub_23FD715C4()
{
  return MEMORY[0x24BE521A0]();
}

uint64_t sub_23FD715D0()
{
  return MEMORY[0x24BE521A8]();
}

uint64_t sub_23FD715DC()
{
  return MEMORY[0x24BE521B0]();
}

uint64_t sub_23FD715E8()
{
  return MEMORY[0x24BE521B8]();
}

uint64_t sub_23FD715F4()
{
  return MEMORY[0x24BE521C0]();
}

uint64_t sub_23FD71600()
{
  return MEMORY[0x24BE521C8]();
}

uint64_t sub_23FD7160C()
{
  return MEMORY[0x24BE521D0]();
}

uint64_t sub_23FD71618()
{
  return MEMORY[0x24BE521D8]();
}

uint64_t sub_23FD71624()
{
  return MEMORY[0x24BE521E0]();
}

uint64_t sub_23FD71630()
{
  return MEMORY[0x24BE521E8]();
}

uint64_t sub_23FD7163C()
{
  return MEMORY[0x24BE522D0]();
}

uint64_t sub_23FD71648()
{
  return MEMORY[0x24BE522D8]();
}

uint64_t sub_23FD71654()
{
  return MEMORY[0x24BE522F8]();
}

uint64_t sub_23FD71660()
{
  return MEMORY[0x24BE52328]();
}

uint64_t sub_23FD7166C()
{
  return MEMORY[0x24BE52330]();
}

uint64_t sub_23FD71678()
{
  return MEMORY[0x24BE52338]();
}

uint64_t sub_23FD71684()
{
  return MEMORY[0x24BE52340]();
}

uint64_t sub_23FD71690()
{
  return MEMORY[0x24BE523C8]();
}

uint64_t sub_23FD7169C()
{
  return MEMORY[0x24BE52400]();
}

uint64_t sub_23FD716A8()
{
  return MEMORY[0x24BE52408]();
}

uint64_t sub_23FD716B4()
{
  return MEMORY[0x24BE52428]();
}

uint64_t sub_23FD716C0()
{
  return MEMORY[0x24BE52430]();
}

uint64_t sub_23FD716CC()
{
  return MEMORY[0x24BE52450]();
}

uint64_t sub_23FD716D8()
{
  return MEMORY[0x24BE52458]();
}

uint64_t sub_23FD716E4()
{
  return MEMORY[0x24BE52580]();
}

uint64_t sub_23FD716F0()
{
  return MEMORY[0x24BE52588]();
}

uint64_t sub_23FD716FC()
{
  return MEMORY[0x24BE525C0]();
}

uint64_t sub_23FD71708()
{
  return MEMORY[0x24BE525F8]();
}

uint64_t sub_23FD71714()
{
  return MEMORY[0x24BE52608]();
}

uint64_t sub_23FD71720()
{
  return MEMORY[0x24BE52610]();
}

uint64_t sub_23FD7172C()
{
  return MEMORY[0x24BE52618]();
}

uint64_t sub_23FD71738()
{
  return MEMORY[0x24BE52620]();
}

uint64_t sub_23FD71744()
{
  return MEMORY[0x24BE52648]();
}

uint64_t sub_23FD71750()
{
  return MEMORY[0x24BE52660]();
}

uint64_t sub_23FD7175C()
{
  return MEMORY[0x24BE52680]();
}

uint64_t sub_23FD71768()
{
  return MEMORY[0x24BE52688]();
}

uint64_t sub_23FD71774()
{
  return MEMORY[0x24BE52690]();
}

uint64_t sub_23FD71780()
{
  return MEMORY[0x24BE52698]();
}

uint64_t sub_23FD7178C()
{
  return MEMORY[0x24BE526A0]();
}

uint64_t sub_23FD71798()
{
  return MEMORY[0x24BE526A8]();
}

uint64_t sub_23FD717A4()
{
  return MEMORY[0x24BE526B0]();
}

uint64_t sub_23FD717B0()
{
  return MEMORY[0x24BE526C0]();
}

uint64_t sub_23FD717BC()
{
  return MEMORY[0x24BE526D0]();
}

uint64_t sub_23FD717C8()
{
  return MEMORY[0x24BE526F0]();
}

uint64_t sub_23FD717D4()
{
  return MEMORY[0x24BE52700]();
}

uint64_t sub_23FD717E0()
{
  return MEMORY[0x24BE52708]();
}

uint64_t sub_23FD717EC()
{
  return MEMORY[0x24BE52718]();
}

uint64_t sub_23FD717F8()
{
  return MEMORY[0x24BE52720]();
}

uint64_t sub_23FD71804()
{
  return MEMORY[0x24BE52728]();
}

uint64_t sub_23FD71810()
{
  return MEMORY[0x24BE52730]();
}

uint64_t sub_23FD7181C()
{
  return MEMORY[0x24BE52738]();
}

uint64_t sub_23FD71828()
{
  return MEMORY[0x24BE52770]();
}

uint64_t sub_23FD71834()
{
  return MEMORY[0x24BE52778]();
}

uint64_t sub_23FD71840()
{
  return MEMORY[0x24BE52780]();
}

uint64_t sub_23FD7184C()
{
  return MEMORY[0x24BE52788]();
}

uint64_t sub_23FD71858()
{
  return MEMORY[0x24BE52810]();
}

uint64_t sub_23FD71864()
{
  return MEMORY[0x24BE52838]();
}

uint64_t sub_23FD71870()
{
  return MEMORY[0x24BE52840]();
}

uint64_t sub_23FD7187C()
{
  return MEMORY[0x24BE52848]();
}

uint64_t sub_23FD71888()
{
  return MEMORY[0x24BE54868]();
}

uint64_t sub_23FD71894()
{
  return MEMORY[0x24BE528E8]();
}

uint64_t sub_23FD718A0()
{
  return MEMORY[0x24BE52908]();
}

uint64_t sub_23FD718AC()
{
  return MEMORY[0x24BE52910]();
}

uint64_t sub_23FD718B8()
{
  return MEMORY[0x24BE52918]();
}

uint64_t sub_23FD718C4()
{
  return MEMORY[0x24BE52940]();
}

uint64_t sub_23FD718D0()
{
  return MEMORY[0x24BE52950]();
}

uint64_t sub_23FD718DC()
{
  return MEMORY[0x24BE52958]();
}

uint64_t sub_23FD718E8()
{
  return MEMORY[0x24BE52960]();
}

uint64_t sub_23FD718F4()
{
  return MEMORY[0x24BE52968]();
}

uint64_t sub_23FD71900()
{
  return MEMORY[0x24BE52980]();
}

uint64_t sub_23FD7190C()
{
  return MEMORY[0x24BE529A0]();
}

uint64_t sub_23FD71918()
{
  return MEMORY[0x24BE529A8]();
}

uint64_t sub_23FD71924()
{
  return MEMORY[0x24BE529E8]();
}

uint64_t sub_23FD71930()
{
  return MEMORY[0x24BE529F0]();
}

uint64_t sub_23FD7193C()
{
  return MEMORY[0x24BE529F8]();
}

uint64_t sub_23FD71948()
{
  return MEMORY[0x24BE52A00]();
}

uint64_t sub_23FD71954()
{
  return MEMORY[0x24BE54870]();
}

uint64_t sub_23FD71960()
{
  return MEMORY[0x24BE52A28]();
}

uint64_t sub_23FD7196C()
{
  return MEMORY[0x24BE52A68]();
}

uint64_t sub_23FD71978()
{
  return MEMORY[0x24BE52A70]();
}

uint64_t sub_23FD71984()
{
  return MEMORY[0x24BE52B60]();
}

uint64_t sub_23FD71990()
{
  return MEMORY[0x24BE52B88]();
}

uint64_t sub_23FD7199C()
{
  return MEMORY[0x24BE52B90]();
}

uint64_t sub_23FD719A8()
{
  return MEMORY[0x24BE52B98]();
}

uint64_t sub_23FD719B4()
{
  return MEMORY[0x24BE52BA0]();
}

uint64_t sub_23FD719C0()
{
  return MEMORY[0x24BE52BA8]();
}

uint64_t sub_23FD719CC()
{
  return MEMORY[0x24BE54878]();
}

uint64_t sub_23FD719D8()
{
  return MEMORY[0x24BE52BD8]();
}

uint64_t sub_23FD719E4()
{
  return MEMORY[0x24BE52BE0]();
}

uint64_t sub_23FD719F0()
{
  return MEMORY[0x24BE52BE8]();
}

uint64_t sub_23FD719FC()
{
  return MEMORY[0x24BE52BF0]();
}

uint64_t sub_23FD71A08()
{
  return MEMORY[0x24BE52BF8]();
}

uint64_t sub_23FD71A14()
{
  return MEMORY[0x24BE52C10]();
}

uint64_t sub_23FD71A20()
{
  return MEMORY[0x24BE52C20]();
}

uint64_t sub_23FD71A2C()
{
  return MEMORY[0x24BE52C40]();
}

uint64_t sub_23FD71A38()
{
  return MEMORY[0x24BE52C48]();
}

uint64_t sub_23FD71A44()
{
  return MEMORY[0x24BE52C50]();
}

uint64_t sub_23FD71A50()
{
  return MEMORY[0x24BE52C58]();
}

uint64_t sub_23FD71A5C()
{
  return MEMORY[0x24BE52C88]();
}

uint64_t sub_23FD71A68()
{
  return MEMORY[0x24BE52C98]();
}

uint64_t sub_23FD71A74()
{
  return MEMORY[0x24BE52CA0]();
}

uint64_t sub_23FD71A80()
{
  return MEMORY[0x24BE52CA8]();
}

uint64_t sub_23FD71A8C()
{
  return MEMORY[0x24BE52CB0]();
}

uint64_t sub_23FD71A98()
{
  return MEMORY[0x24BE52CB8]();
}

uint64_t sub_23FD71AA4()
{
  return MEMORY[0x24BE54880]();
}

uint64_t sub_23FD71AB0()
{
  return MEMORY[0x24BE52CF0]();
}

uint64_t sub_23FD71ABC()
{
  return MEMORY[0x24BE52D00]();
}

uint64_t sub_23FD71AC8()
{
  return MEMORY[0x24BE52D08]();
}

uint64_t sub_23FD71AD4()
{
  return MEMORY[0x24BE52D18]();
}

uint64_t sub_23FD71AE0()
{
  return MEMORY[0x24BE52D20]();
}

uint64_t sub_23FD71AEC()
{
  return MEMORY[0x24BE52D38]();
}

uint64_t sub_23FD71AF8()
{
  return MEMORY[0x24BE52D68]();
}

uint64_t sub_23FD71B04()
{
  return MEMORY[0x24BE52EC8]();
}

uint64_t sub_23FD71B10()
{
  return MEMORY[0x24BE52F30]();
}

uint64_t sub_23FD71B1C()
{
  return MEMORY[0x24BE52F50]();
}

uint64_t sub_23FD71B28()
{
  return MEMORY[0x24BE52F68]();
}

uint64_t sub_23FD71B34()
{
  return MEMORY[0x24BE52F98]();
}

uint64_t sub_23FD71B40()
{
  return MEMORY[0x24BE52FC8]();
}

uint64_t sub_23FD71B4C()
{
  return MEMORY[0x24BE53008]();
}

uint64_t sub_23FD71B58()
{
  return MEMORY[0x24BE53030]();
}

uint64_t sub_23FD71B64()
{
  return MEMORY[0x24BE53048]();
}

uint64_t sub_23FD71B70()
{
  return MEMORY[0x24BE53058]();
}

uint64_t sub_23FD71B7C()
{
  return MEMORY[0x24BE53080]();
}

uint64_t sub_23FD71B88()
{
  return MEMORY[0x24BE53090]();
}

uint64_t sub_23FD71B94()
{
  return MEMORY[0x24BE53098]();
}

uint64_t sub_23FD71BA0()
{
  return MEMORY[0x24BE530B0]();
}

uint64_t sub_23FD71BAC()
{
  return MEMORY[0x24BE530D8]();
}

uint64_t sub_23FD71BB8()
{
  return MEMORY[0x24BE530F8]();
}

uint64_t sub_23FD71BC4()
{
  return MEMORY[0x24BE53158]();
}

uint64_t sub_23FD71BD0()
{
  return MEMORY[0x24BE531C0]();
}

uint64_t sub_23FD71BDC()
{
  return MEMORY[0x24BE531C8]();
}

uint64_t sub_23FD71BE8()
{
  return MEMORY[0x24BE531D0]();
}

uint64_t sub_23FD71BF4()
{
  return MEMORY[0x24BE531D8]();
}

uint64_t sub_23FD71C00()
{
  return MEMORY[0x24BE531E0]();
}

uint64_t sub_23FD71C0C()
{
  return MEMORY[0x24BE531E8]();
}

uint64_t sub_23FD71C18()
{
  return MEMORY[0x24BE531F0]();
}

uint64_t sub_23FD71C24()
{
  return MEMORY[0x24BE531F8]();
}

uint64_t sub_23FD71C30()
{
  return MEMORY[0x24BE53200]();
}

uint64_t sub_23FD71C3C()
{
  return MEMORY[0x24BE53250]();
}

uint64_t sub_23FD71C48()
{
  return MEMORY[0x24BE53278]();
}

uint64_t sub_23FD71C54()
{
  return MEMORY[0x24BE53290]();
}

uint64_t sub_23FD71C60()
{
  return MEMORY[0x24BE53298]();
}

uint64_t sub_23FD71C6C()
{
  return MEMORY[0x24BE532A0]();
}

uint64_t sub_23FD71C78()
{
  return MEMORY[0x24BE53318]();
}

uint64_t sub_23FD71C84()
{
  return MEMORY[0x24BE53330]();
}

uint64_t sub_23FD71C90()
{
  return MEMORY[0x24BE53378]();
}

uint64_t sub_23FD71C9C()
{
  return MEMORY[0x24BE533A8]();
}

uint64_t sub_23FD71CA8()
{
  return MEMORY[0x24BE533B0]();
}

uint64_t sub_23FD71CB4()
{
  return MEMORY[0x24BE533B8]();
}

uint64_t sub_23FD71CC0()
{
  return MEMORY[0x24BE54888]();
}

uint64_t sub_23FD71CCC()
{
  return MEMORY[0x24BE53508]();
}

uint64_t sub_23FD71CD8()
{
  return MEMORY[0x24BE53598]();
}

uint64_t sub_23FD71CE4()
{
  return MEMORY[0x24BE535C0]();
}

uint64_t sub_23FD71CF0()
{
  return MEMORY[0x24BE53620]();
}

uint64_t sub_23FD71CFC()
{
  return MEMORY[0x24BE53628]();
}

uint64_t sub_23FD71D08()
{
  return MEMORY[0x24BE53638]();
}

uint64_t sub_23FD71D14()
{
  return MEMORY[0x24BE53640]();
}

uint64_t sub_23FD71D20()
{
  return MEMORY[0x24BE53648]();
}

uint64_t sub_23FD71D2C()
{
  return MEMORY[0x24BE53658]();
}

uint64_t sub_23FD71D38()
{
  return MEMORY[0x24BE53660]();
}

uint64_t sub_23FD71D44()
{
  return MEMORY[0x24BE53668]();
}

uint64_t sub_23FD71D50()
{
  return MEMORY[0x24BE53678]();
}

uint64_t sub_23FD71D5C()
{
  return MEMORY[0x24BE536A8]();
}

uint64_t sub_23FD71D68()
{
  return MEMORY[0x24BE536C0]();
}

uint64_t sub_23FD71D74()
{
  return MEMORY[0x24BE536D0]();
}

uint64_t sub_23FD71D80()
{
  return MEMORY[0x24BE536D8]();
}

uint64_t sub_23FD71D8C()
{
  return MEMORY[0x24BE536E0]();
}

uint64_t sub_23FD71D98()
{
  return MEMORY[0x24BE54890]();
}

uint64_t sub_23FD71DA4()
{
  return MEMORY[0x24BE53740]();
}

uint64_t sub_23FD71DB0()
{
  return MEMORY[0x24BE53748]();
}

uint64_t sub_23FD71DBC()
{
  return MEMORY[0x24BE53750]();
}

uint64_t sub_23FD71DC8()
{
  return MEMORY[0x24BE53758]();
}

uint64_t sub_23FD71DD4()
{
  return MEMORY[0x24BE53770]();
}

uint64_t sub_23FD71DE0()
{
  return MEMORY[0x24BE53778]();
}

uint64_t sub_23FD71DEC()
{
  return MEMORY[0x24BE53788]();
}

uint64_t sub_23FD71DF8()
{
  return MEMORY[0x24BE53790]();
}

uint64_t sub_23FD71E04()
{
  return MEMORY[0x24BE537A0]();
}

uint64_t sub_23FD71E10()
{
  return MEMORY[0x24BE537A8]();
}

uint64_t sub_23FD71E1C()
{
  return MEMORY[0x24BE537B0]();
}

uint64_t sub_23FD71E28()
{
  return MEMORY[0x24BE537B8]();
}

uint64_t sub_23FD71E34()
{
  return MEMORY[0x24BE537C0]();
}

uint64_t sub_23FD71E40()
{
  return MEMORY[0x24BE537D8]();
}

uint64_t sub_23FD71E4C()
{
  return MEMORY[0x24BE537E0]();
}

uint64_t sub_23FD71E58()
{
  return MEMORY[0x24BE537E8]();
}

uint64_t sub_23FD71E64()
{
  return MEMORY[0x24BE537F8]();
}

uint64_t sub_23FD71E70()
{
  return MEMORY[0x24BE53820]();
}

uint64_t sub_23FD71E7C()
{
  return MEMORY[0x24BE53828]();
}

uint64_t sub_23FD71E88()
{
  return MEMORY[0x24BE53830]();
}

uint64_t sub_23FD71E94()
{
  return MEMORY[0x24BE53838]();
}

uint64_t sub_23FD71EA0()
{
  return MEMORY[0x24BE53840]();
}

uint64_t sub_23FD71EAC()
{
  return MEMORY[0x24BE53850]();
}

uint64_t sub_23FD71EB8()
{
  return MEMORY[0x24BE53868]();
}

uint64_t sub_23FD71EC4()
{
  return MEMORY[0x24BE53870]();
}

uint64_t sub_23FD71ED0()
{
  return MEMORY[0x24BE53878]();
}

uint64_t sub_23FD71EDC()
{
  return MEMORY[0x24BE53888]();
}

uint64_t sub_23FD71EE8()
{
  return MEMORY[0x24BE53898]();
}

uint64_t sub_23FD71EF4()
{
  return MEMORY[0x24BE538D8]();
}

uint64_t sub_23FD71F00()
{
  return MEMORY[0x24BE538E0]();
}

uint64_t sub_23FD71F0C()
{
  return MEMORY[0x24BE538F0]();
}

uint64_t sub_23FD71F18()
{
  return MEMORY[0x24BE53900]();
}

uint64_t sub_23FD71F24()
{
  return MEMORY[0x24BE53908]();
}

uint64_t sub_23FD71F30()
{
  return MEMORY[0x24BE53920]();
}

uint64_t sub_23FD71F3C()
{
  return MEMORY[0x24BE53928]();
}

uint64_t sub_23FD71F48()
{
  return MEMORY[0x24BE53940]();
}

uint64_t sub_23FD71F54()
{
  return MEMORY[0x24BE53948]();
}

uint64_t sub_23FD71F60()
{
  return MEMORY[0x24BE53950]();
}

uint64_t sub_23FD71F6C()
{
  return MEMORY[0x24BE53958]();
}

uint64_t sub_23FD71F78()
{
  return MEMORY[0x24BE53960]();
}

uint64_t sub_23FD71F84()
{
  return MEMORY[0x24BE539B0]();
}

uint64_t sub_23FD71F90()
{
  return MEMORY[0x24BE548A0]();
}

uint64_t sub_23FD71F9C()
{
  return MEMORY[0x24BE548A8]();
}

uint64_t sub_23FD71FA8()
{
  return MEMORY[0x24BE53AA8]();
}

uint64_t sub_23FD71FB4()
{
  return MEMORY[0x24BE53AB0]();
}

uint64_t sub_23FD71FC0()
{
  return MEMORY[0x24BE53AB8]();
}

uint64_t sub_23FD71FCC()
{
  return MEMORY[0x24BE53AC0]();
}

uint64_t sub_23FD71FD8()
{
  return MEMORY[0x24BE53AC8]();
}

uint64_t sub_23FD71FE4()
{
  return MEMORY[0x24BE53AD0]();
}

uint64_t sub_23FD71FF0()
{
  return MEMORY[0x24BE53AF8]();
}

uint64_t sub_23FD71FFC()
{
  return MEMORY[0x24BE53B10]();
}

uint64_t sub_23FD72008()
{
  return MEMORY[0x24BE53B30]();
}

uint64_t sub_23FD72014()
{
  return MEMORY[0x24BE53B40]();
}

uint64_t sub_23FD72020()
{
  return MEMORY[0x24BE53B88]();
}

uint64_t sub_23FD7202C()
{
  return MEMORY[0x24BE53BA0]();
}

uint64_t sub_23FD72038()
{
  return MEMORY[0x24BE53BB0]();
}

uint64_t sub_23FD72044()
{
  return MEMORY[0x24BE53BB8]();
}

uint64_t sub_23FD72050()
{
  return MEMORY[0x24BE53BD0]();
}

uint64_t sub_23FD7205C()
{
  return MEMORY[0x24BE53BD8]();
}

uint64_t sub_23FD72068()
{
  return MEMORY[0x24BE53BE0]();
}

uint64_t sub_23FD72074()
{
  return MEMORY[0x24BE53BF8]();
}

uint64_t sub_23FD72080()
{
  return MEMORY[0x24BE53C00]();
}

uint64_t sub_23FD7208C()
{
  return MEMORY[0x24BE53C08]();
}

uint64_t sub_23FD72098()
{
  return MEMORY[0x24BE53C10]();
}

uint64_t sub_23FD720A4()
{
  return MEMORY[0x24BE53C18]();
}

uint64_t sub_23FD720B0()
{
  return MEMORY[0x24BE53C20]();
}

uint64_t sub_23FD720BC()
{
  return MEMORY[0x24BE53C28]();
}

uint64_t sub_23FD720C8()
{
  return MEMORY[0x24BE53C30]();
}

uint64_t sub_23FD720D4()
{
  return MEMORY[0x24BE53C38]();
}

uint64_t sub_23FD720E0()
{
  return MEMORY[0x24BE53C40]();
}

uint64_t sub_23FD720EC()
{
  return MEMORY[0x24BE53C48]();
}

uint64_t sub_23FD720F8()
{
  return MEMORY[0x24BE53C50]();
}

uint64_t sub_23FD72104()
{
  return MEMORY[0x24BE53C58]();
}

uint64_t sub_23FD72110()
{
  return MEMORY[0x24BE53C60]();
}

uint64_t sub_23FD7211C()
{
  return MEMORY[0x24BE53C68]();
}

uint64_t sub_23FD72128()
{
  return MEMORY[0x24BE53C70]();
}

uint64_t sub_23FD72134()
{
  return MEMORY[0x24BE53C78]();
}

uint64_t sub_23FD72140()
{
  return MEMORY[0x24BE53C80]();
}

uint64_t sub_23FD7214C()
{
  return MEMORY[0x24BE53C88]();
}

uint64_t sub_23FD72158()
{
  return MEMORY[0x24BE53C90]();
}

uint64_t sub_23FD72164()
{
  return MEMORY[0x24BE53C98]();
}

uint64_t sub_23FD72170()
{
  return MEMORY[0x24BE53CA0]();
}

uint64_t sub_23FD7217C()
{
  return MEMORY[0x24BE53CA8]();
}

uint64_t sub_23FD72188()
{
  return MEMORY[0x24BE53CB0]();
}

uint64_t sub_23FD72194()
{
  return MEMORY[0x24BE53CB8]();
}

uint64_t sub_23FD721A0()
{
  return MEMORY[0x24BE53CC0]();
}

uint64_t sub_23FD721AC()
{
  return MEMORY[0x24BE53D18]();
}

uint64_t sub_23FD721B8()
{
  return MEMORY[0x24BE53D20]();
}

uint64_t sub_23FD721C4()
{
  return MEMORY[0x24BE53D28]();
}

uint64_t sub_23FD721D0()
{
  return MEMORY[0x24BE53D38]();
}

uint64_t sub_23FD721DC()
{
  return MEMORY[0x24BE53D40]();
}

uint64_t sub_23FD721E8()
{
  return MEMORY[0x24BE53D68]();
}

uint64_t sub_23FD721F4()
{
  return MEMORY[0x24BE53D70]();
}

uint64_t sub_23FD72200()
{
  return MEMORY[0x24BE53D78]();
}

uint64_t sub_23FD7220C()
{
  return MEMORY[0x24BE53D80]();
}

uint64_t sub_23FD72218()
{
  return MEMORY[0x24BE53D88]();
}

uint64_t sub_23FD72224()
{
  return MEMORY[0x24BE53D90]();
}

uint64_t sub_23FD72230()
{
  return MEMORY[0x24BE53D98]();
}

uint64_t sub_23FD7223C()
{
  return MEMORY[0x24BE53DA0]();
}

uint64_t sub_23FD72248()
{
  return MEMORY[0x24BE53DA8]();
}

uint64_t sub_23FD72254()
{
  return MEMORY[0x24BE53DB0]();
}

uint64_t sub_23FD72260()
{
  return MEMORY[0x24BE53DB8]();
}

uint64_t sub_23FD7226C()
{
  return MEMORY[0x24BE53DC0]();
}

uint64_t sub_23FD72278()
{
  return MEMORY[0x24BE53E38]();
}

uint64_t sub_23FD72284()
{
  return MEMORY[0x24BE53E40]();
}

uint64_t sub_23FD72290()
{
  return MEMORY[0x24BE53E48]();
}

uint64_t sub_23FD7229C()
{
  return MEMORY[0x24BE53E50]();
}

uint64_t sub_23FD722A8()
{
  return MEMORY[0x24BE53EE8]();
}

uint64_t sub_23FD722B4()
{
  return MEMORY[0x24BE53F30]();
}

uint64_t sub_23FD722C0()
{
  return MEMORY[0x24BE53F40]();
}

uint64_t sub_23FD722CC()
{
  return MEMORY[0x24BE53F48]();
}

uint64_t sub_23FD722D8()
{
  return MEMORY[0x24BE53F58]();
}

uint64_t sub_23FD722E4()
{
  return MEMORY[0x24BE54A18]();
}

uint64_t sub_23FD722F0()
{
  return MEMORY[0x24BE53FB0]();
}

uint64_t sub_23FD722FC()
{
  return MEMORY[0x24BE53FB8]();
}

uint64_t sub_23FD72308()
{
  return MEMORY[0x24BE7A568]();
}

uint64_t sub_23FD72314()
{
  return MEMORY[0x24BE7A570]();
}

uint64_t sub_23FD72320()
{
  return MEMORY[0x24BE7A580]();
}

uint64_t sub_23FD7232C()
{
  return MEMORY[0x24BE74BE8]();
}

uint64_t sub_23FD72338()
{
  return MEMORY[0x24BE74BF8]();
}

uint64_t sub_23FD72344()
{
  return MEMORY[0x24BE18CF8]();
}

uint64_t sub_23FD72350()
{
  return MEMORY[0x24BE18D28]();
}

uint64_t sub_23FD7235C()
{
  return MEMORY[0x24BE5BFA8]();
}

uint64_t sub_23FD72368()
{
  return MEMORY[0x24BE5BFB0]();
}

uint64_t sub_23FD72374()
{
  return MEMORY[0x24BE5BFC0]();
}

uint64_t sub_23FD72380()
{
  return MEMORY[0x24BE5BFC8]();
}

uint64_t sub_23FD7238C()
{
  return MEMORY[0x24BE5C188]();
}

uint64_t sub_23FD72398()
{
  return MEMORY[0x24BE5C1B8]();
}

uint64_t sub_23FD723A4()
{
  return MEMORY[0x24BE5C1C0]();
}

uint64_t sub_23FD723B0()
{
  return MEMORY[0x24BE57320]();
}

uint64_t sub_23FD723BC()
{
  return MEMORY[0x24BE574A0]();
}

uint64_t sub_23FD723C8()
{
  return MEMORY[0x24BE574A8]();
}

uint64_t sub_23FD723D4()
{
  return MEMORY[0x24BE574B8]();
}

uint64_t sub_23FD723E0()
{
  return MEMORY[0x24BE574E0]();
}

uint64_t sub_23FD723EC()
{
  return MEMORY[0x24BE574F0]();
}

uint64_t sub_23FD723F8()
{
  return MEMORY[0x24BE57778]();
}

uint64_t sub_23FD72404()
{
  return MEMORY[0x24BE57790]();
}

uint64_t sub_23FD72410()
{
  return MEMORY[0x24BE577B0]();
}

uint64_t sub_23FD7241C()
{
  return MEMORY[0x24BE54480]();
}

uint64_t sub_23FD72428()
{
  return MEMORY[0x24BE579A0]();
}

uint64_t sub_23FD72434()
{
  return MEMORY[0x24BE57AF0]();
}

uint64_t sub_23FD72440()
{
  return MEMORY[0x24BE57BD8]();
}

uint64_t sub_23FD7244C()
{
  return MEMORY[0x24BE57CD8]();
}

uint64_t sub_23FD72458()
{
  return MEMORY[0x24BE57D08]();
}

uint64_t sub_23FD72464()
{
  return MEMORY[0x24BE57D80]();
}

uint64_t sub_23FD72470()
{
  return MEMORY[0x24BE57E70]();
}

uint64_t sub_23FD7247C()
{
  return MEMORY[0x24BE57E98]();
}

uint64_t sub_23FD72488()
{
  return MEMORY[0x24BE57EB8]();
}

uint64_t sub_23FD72494()
{
  return MEMORY[0x24BE57F18]();
}

uint64_t sub_23FD724A0()
{
  return MEMORY[0x24BE57F20]();
}

uint64_t _s23IntelligenceFlowRuntime0aB6DaemonV6logger2os6LoggerVvgZ_0()
{
  return MEMORY[0x24BE57F38]();
}

uint64_t sub_23FD724B8()
{
  return MEMORY[0x24BE57F40]();
}

uint64_t sub_23FD724C4()
{
  return MEMORY[0x24BE57F48]();
}

uint64_t sub_23FD724D0()
{
  return MEMORY[0x24BE57F50]();
}

uint64_t sub_23FD724DC()
{
  return MEMORY[0x24BE57F58]();
}

uint64_t sub_23FD724E8()
{
  return MEMORY[0x24BE57F68]();
}

uint64_t sub_23FD724F4()
{
  return MEMORY[0x24BE57F70]();
}

uint64_t sub_23FD72500()
{
  return MEMORY[0x24BE79728]();
}

uint64_t sub_23FD7250C()
{
  return MEMORY[0x24BE79730]();
}

uint64_t sub_23FD72518()
{
  return MEMORY[0x24BE79798]();
}

uint64_t sub_23FD72524()
{
  return MEMORY[0x24BE797E8]();
}

uint64_t sub_23FD72530()
{
  return MEMORY[0x24BE797F0]();
}

uint64_t sub_23FD7253C()
{
  return MEMORY[0x24BE79800]();
}

uint64_t sub_23FD72548()
{
  return MEMORY[0x24BE79820]();
}

uint64_t sub_23FD72554()
{
  return MEMORY[0x24BE79848]();
}

uint64_t sub_23FD72560()
{
  return MEMORY[0x24BE79850]();
}

uint64_t sub_23FD7256C()
{
  return MEMORY[0x24BE79860]();
}

uint64_t sub_23FD72578()
{
  return MEMORY[0x24BE79868]();
}

uint64_t sub_23FD72584()
{
  return MEMORY[0x24BE79870]();
}

uint64_t sub_23FD72590()
{
  return MEMORY[0x24BE79878]();
}

uint64_t sub_23FD7259C()
{
  return MEMORY[0x24BE79880]();
}

uint64_t sub_23FD725A8()
{
  return MEMORY[0x24BE798B8]();
}

uint64_t sub_23FD725B4()
{
  return MEMORY[0x24BE798C0]();
}

uint64_t sub_23FD725C0()
{
  return MEMORY[0x24BE798C8]();
}

uint64_t sub_23FD725CC()
{
  return MEMORY[0x24BE798E8]();
}

uint64_t sub_23FD725D8()
{
  return MEMORY[0x24BE798F0]();
}

uint64_t sub_23FD725E4()
{
  return MEMORY[0x24BE79900]();
}

uint64_t sub_23FD725F0()
{
  return MEMORY[0x24BE79908]();
}

uint64_t sub_23FD725FC()
{
  return MEMORY[0x24BE79910]();
}

uint64_t sub_23FD72608()
{
  return MEMORY[0x24BE79918]();
}

uint64_t sub_23FD72614()
{
  return MEMORY[0x24BE79978]();
}

uint64_t sub_23FD72620()
{
  return MEMORY[0x24BE79980]();
}

uint64_t sub_23FD7262C()
{
  return MEMORY[0x24BE79990]();
}

uint64_t sub_23FD72638()
{
  return MEMORY[0x24BE79998]();
}

uint64_t sub_23FD72644()
{
  return MEMORY[0x24BE586C8]();
}

uint64_t sub_23FD72650()
{
  return MEMORY[0x24BE586F8]();
}

uint64_t sub_23FD7265C()
{
  return MEMORY[0x24BE58708]();
}

uint64_t sub_23FD72668()
{
  return MEMORY[0x24BE58718]();
}

uint64_t sub_23FD72674()
{
  return MEMORY[0x24BE58720]();
}

uint64_t sub_23FD72680()
{
  return MEMORY[0x24BE58728]();
}

uint64_t sub_23FD7268C()
{
  return MEMORY[0x24BE58730]();
}

uint64_t sub_23FD72698()
{
  return MEMORY[0x24BE58748]();
}

uint64_t sub_23FD726A4()
{
  return MEMORY[0x24BE58770]();
}

uint64_t sub_23FD726B0()
{
  return MEMORY[0x24BE58788]();
}

uint64_t sub_23FD726BC()
{
  return MEMORY[0x24BE58798]();
}

uint64_t sub_23FD726C8()
{
  return MEMORY[0x24BE587A0]();
}

uint64_t sub_23FD726D4()
{
  return MEMORY[0x24BE58818]();
}

uint64_t sub_23FD726E0()
{
  return MEMORY[0x24BE58860]();
}

uint64_t sub_23FD726EC()
{
  return MEMORY[0x24BE58870]();
}

uint64_t sub_23FD726F8()
{
  return MEMORY[0x24BE58878]();
}

uint64_t sub_23FD72704()
{
  return MEMORY[0x24BE58880]();
}

uint64_t sub_23FD72710()
{
  return MEMORY[0x24BE58888]();
}

uint64_t sub_23FD7271C()
{
  return MEMORY[0x24BE588A0]();
}

uint64_t sub_23FD72728()
{
  return MEMORY[0x24BE588B0]();
}

uint64_t sub_23FD72734()
{
  return MEMORY[0x24BE588C0]();
}

uint64_t sub_23FD72740()
{
  return MEMORY[0x24BE588C8]();
}

uint64_t sub_23FD7274C()
{
  return MEMORY[0x24BE588D0]();
}

uint64_t sub_23FD72758()
{
  return MEMORY[0x24BE588D8]();
}

uint64_t sub_23FD72764()
{
  return MEMORY[0x24BE588E0]();
}

uint64_t sub_23FD72770()
{
  return MEMORY[0x24BE58948]();
}

uint64_t sub_23FD7277C()
{
  return MEMORY[0x24BE58998]();
}

uint64_t sub_23FD72788()
{
  return MEMORY[0x24BE589A8]();
}

uint64_t sub_23FD72794()
{
  return MEMORY[0x24BE589B8]();
}

uint64_t sub_23FD727A0()
{
  return MEMORY[0x24BE589C0]();
}

uint64_t sub_23FD727AC()
{
  return MEMORY[0x24BE589C8]();
}

uint64_t sub_23FD727B8()
{
  return MEMORY[0x24BE589D0]();
}

uint64_t sub_23FD727C4()
{
  return MEMORY[0x24BE589F0]();
}

uint64_t sub_23FD727D0()
{
  return MEMORY[0x24BE58A00]();
}

uint64_t sub_23FD727DC()
{
  return MEMORY[0x24BE58A08]();
}

uint64_t sub_23FD727E8()
{
  return MEMORY[0x24BE58A10]();
}

uint64_t sub_23FD727F4()
{
  return MEMORY[0x24BE58A18]();
}

uint64_t sub_23FD72800()
{
  return MEMORY[0x24BE58A20]();
}

uint64_t sub_23FD7280C()
{
  return MEMORY[0x24BE58A30]();
}

uint64_t sub_23FD72818()
{
  return MEMORY[0x24BE58A38]();
}

uint64_t sub_23FD72824()
{
  return MEMORY[0x24BE58A40]();
}

uint64_t sub_23FD72830()
{
  return MEMORY[0x24BE58A48]();
}

uint64_t sub_23FD7283C()
{
  return MEMORY[0x24BE58A50]();
}

uint64_t sub_23FD72848()
{
  return MEMORY[0x24BE58A68]();
}

uint64_t sub_23FD72854()
{
  return MEMORY[0x24BE58A70]();
}

uint64_t sub_23FD72860()
{
  return MEMORY[0x24BE58A78]();
}

uint64_t sub_23FD7286C()
{
  return MEMORY[0x24BE58A88]();
}

uint64_t sub_23FD72878()
{
  return MEMORY[0x24BE58A98]();
}

uint64_t sub_23FD72884()
{
  return MEMORY[0x24BE58AA0]();
}

uint64_t sub_23FD72890()
{
  return MEMORY[0x24BE58AA8]();
}

uint64_t sub_23FD7289C()
{
  return MEMORY[0x24BE58AB0]();
}

uint64_t sub_23FD728A8()
{
  return MEMORY[0x24BE58AD0]();
}

uint64_t sub_23FD728B4()
{
  return MEMORY[0x24BE58AE0]();
}

uint64_t sub_23FD728C0()
{
  return MEMORY[0x24BE58AE8]();
}

uint64_t sub_23FD728CC()
{
  return MEMORY[0x24BE58B30]();
}

uint64_t sub_23FD728D8()
{
  return MEMORY[0x24BE58B40]();
}

uint64_t sub_23FD728E4()
{
  return MEMORY[0x24BE58B48]();
}

uint64_t sub_23FD728F0()
{
  return MEMORY[0x24BE58B60]();
}

uint64_t sub_23FD728FC()
{
  return MEMORY[0x24BE58B70]();
}

uint64_t sub_23FD72908()
{
  return MEMORY[0x24BE58B78]();
}

uint64_t sub_23FD72914()
{
  return MEMORY[0x24BE58B80]();
}

uint64_t sub_23FD72920()
{
  return MEMORY[0x24BE58B88]();
}

uint64_t sub_23FD7292C()
{
  return MEMORY[0x24BE58B90]();
}

uint64_t sub_23FD72938()
{
  return MEMORY[0x24BE58B98]();
}

uint64_t sub_23FD72944()
{
  return MEMORY[0x24BE58BA0]();
}

uint64_t sub_23FD72950()
{
  return MEMORY[0x24BE58BA8]();
}

uint64_t sub_23FD7295C()
{
  return MEMORY[0x24BE58BB0]();
}

uint64_t sub_23FD72968()
{
  return MEMORY[0x24BE58BB8]();
}

uint64_t sub_23FD72974()
{
  return MEMORY[0x24BE58BC0]();
}

uint64_t sub_23FD72980()
{
  return MEMORY[0x24BE58BC8]();
}

uint64_t sub_23FD7298C()
{
  return MEMORY[0x24BE58BD8]();
}

uint64_t sub_23FD72998()
{
  return MEMORY[0x24BE58BF8]();
}

uint64_t sub_23FD729A4()
{
  return MEMORY[0x24BE58C08]();
}

uint64_t sub_23FD729B0()
{
  return MEMORY[0x24BE58C10]();
}

uint64_t sub_23FD729BC()
{
  return MEMORY[0x24BE58C18]();
}

uint64_t sub_23FD729C8()
{
  return MEMORY[0x24BE58C20]();
}

uint64_t sub_23FD729D4()
{
  return MEMORY[0x24BE58C28]();
}

uint64_t sub_23FD729E0()
{
  return MEMORY[0x24BE58C30]();
}

uint64_t sub_23FD729EC()
{
  return MEMORY[0x24BE58C38]();
}

uint64_t sub_23FD729F8()
{
  return MEMORY[0x24BE58C40]();
}

uint64_t sub_23FD72A04()
{
  return MEMORY[0x24BE58C48]();
}

uint64_t sub_23FD72A10()
{
  return MEMORY[0x24BE58C50]();
}

uint64_t sub_23FD72A1C()
{
  return MEMORY[0x24BE58C58]();
}

uint64_t sub_23FD72A28()
{
  return MEMORY[0x24BE58C60]();
}

uint64_t sub_23FD72A34()
{
  return MEMORY[0x24BE58C68]();
}

uint64_t sub_23FD72A40()
{
  return MEMORY[0x24BE58C70]();
}

uint64_t sub_23FD72A4C()
{
  return MEMORY[0x24BE58C78]();
}

uint64_t sub_23FD72A58()
{
  return MEMORY[0x24BE58C80]();
}

uint64_t sub_23FD72A64()
{
  return MEMORY[0x24BE58C98]();
}

uint64_t sub_23FD72A70()
{
  return MEMORY[0x24BE58CA8]();
}

uint64_t sub_23FD72A7C()
{
  return MEMORY[0x24BE58CB0]();
}

uint64_t sub_23FD72A88()
{
  return MEMORY[0x24BE58CB8]();
}

uint64_t sub_23FD72A94()
{
  return MEMORY[0x24BE58CC0]();
}

uint64_t sub_23FD72AA0()
{
  return MEMORY[0x24BE58CC8]();
}

uint64_t sub_23FD72AAC()
{
  return MEMORY[0x24BE58CD8]();
}

uint64_t sub_23FD72AB8()
{
  return MEMORY[0x24BE58CF8]();
}

uint64_t sub_23FD72AC4()
{
  return MEMORY[0x24BE58D08]();
}

uint64_t sub_23FD72AD0()
{
  return MEMORY[0x24BE58D18]();
}

uint64_t sub_23FD72ADC()
{
  return MEMORY[0x24BE58D28]();
}

uint64_t sub_23FD72AE8()
{
  return MEMORY[0x24BE58D58]();
}

uint64_t sub_23FD72AF4()
{
  return MEMORY[0x24BE58D68]();
}

uint64_t sub_23FD72B00()
{
  return MEMORY[0x24BE58D70]();
}

uint64_t sub_23FD72B0C()
{
  return MEMORY[0x24BE59C10]();
}

uint64_t sub_23FD72B18()
{
  return MEMORY[0x24BE59C38]();
}

uint64_t sub_23FD72B24()
{
  return MEMORY[0x24BE5B140]();
}

uint64_t sub_23FD72B30()
{
  return MEMORY[0x24BE5B158]();
}

uint64_t sub_23FD72B3C()
{
  return MEMORY[0x24BE5B1C8]();
}

uint64_t sub_23FD72B48()
{
  return MEMORY[0x24BEE7718]();
}

uint64_t sub_23FD72B54()
{
  return MEMORY[0x24BEE7738]();
}

uint64_t sub_23FD72B60()
{
  return MEMORY[0x24BEE7748]();
}

uint64_t sub_23FD72B6C()
{
  return MEMORY[0x24BEE7758]();
}

uint64_t sub_23FD72B78()
{
  return MEMORY[0x24BEE7790]();
}

uint64_t sub_23FD72B84()
{
  return MEMORY[0x24BEE77C0]();
}

uint64_t sub_23FD72B90()
{
  return MEMORY[0x24BEE77F0]();
}

uint64_t sub_23FD72B9C()
{
  return MEMORY[0x24BEE7818]();
}

uint64_t sub_23FD72BA8()
{
  return MEMORY[0x24BEE7848]();
}

uint64_t sub_23FD72BB4()
{
  return MEMORY[0x24BEE7858]();
}

uint64_t sub_23FD72BC0()
{
  return MEMORY[0x24BEE7868]();
}

uint64_t sub_23FD72BCC()
{
  return MEMORY[0x24BEE7870]();
}

uint64_t sub_23FD72BD8()
{
  return MEMORY[0x24BEE78A0]();
}

uint64_t sub_23FD72BE4()
{
  return MEMORY[0x24BEE78A8]();
}

uint64_t sub_23FD72BF0()
{
  return MEMORY[0x24BEE78D8]();
}

uint64_t sub_23FD72BFC()
{
  return MEMORY[0x24BE54490]();
}

uint64_t sub_23FD72C08()
{
  return MEMORY[0x24BE54498]();
}

uint64_t sub_23FD72C14()
{
  return MEMORY[0x24BE544A0]();
}

uint64_t sub_23FD72C20()
{
  return MEMORY[0x24BE544B0]();
}

uint64_t sub_23FD72C2C()
{
  return MEMORY[0x24BE544B8]();
}

uint64_t sub_23FD72C38()
{
  return MEMORY[0x24BE544C0]();
}

uint64_t sub_23FD72C44()
{
  return MEMORY[0x24BE544D0]();
}

uint64_t sub_23FD72C50()
{
  return MEMORY[0x24BE544D8]();
}

uint64_t sub_23FD72C5C()
{
  return MEMORY[0x24BE544E8]();
}

uint64_t sub_23FD72C68()
{
  return MEMORY[0x24BE544F0]();
}

uint64_t sub_23FD72C74()
{
  return MEMORY[0x24BE54500]();
}

uint64_t sub_23FD72C80()
{
  return MEMORY[0x24BE54510]();
}

uint64_t sub_23FD72C8C()
{
  return MEMORY[0x24BE54518]();
}

uint64_t sub_23FD72C98()
{
  return MEMORY[0x24BE54528]();
}

uint64_t sub_23FD72CA4()
{
  return MEMORY[0x24BE54530]();
}

uint64_t sub_23FD72CB0()
{
  return MEMORY[0x24BE54538]();
}

uint64_t sub_23FD72CBC()
{
  return MEMORY[0x24BE54550]();
}

uint64_t sub_23FD72CC8()
{
  return MEMORY[0x24BE54558]();
}

uint64_t sub_23FD72CD4()
{
  return MEMORY[0x24BE54560]();
}

uint64_t sub_23FD72CE0()
{
  return MEMORY[0x24BE54568]();
}

uint64_t sub_23FD72CEC()
{
  return MEMORY[0x24BE54578]();
}

uint64_t sub_23FD72CF8()
{
  return MEMORY[0x24BE54580]();
}

uint64_t sub_23FD72D04()
{
  return MEMORY[0x24BE54588]();
}

uint64_t sub_23FD72D10()
{
  return MEMORY[0x24BE54590]();
}

uint64_t sub_23FD72D1C()
{
  return MEMORY[0x24BE54598]();
}

uint64_t sub_23FD72D28()
{
  return MEMORY[0x24BE545A0]();
}

uint64_t sub_23FD72D34()
{
  return MEMORY[0x24BE545F0]();
}

uint64_t sub_23FD72D40()
{
  return MEMORY[0x24BE545F8]();
}

uint64_t sub_23FD72D4C()
{
  return MEMORY[0x24BE54600]();
}

uint64_t sub_23FD72D58()
{
  return MEMORY[0x24BE54608]();
}

uint64_t sub_23FD72D64()
{
  return MEMORY[0x24BE54610]();
}

uint64_t sub_23FD72D70()
{
  return MEMORY[0x24BE54628]();
}

uint64_t sub_23FD72D7C()
{
  return MEMORY[0x24BE54630]();
}

uint64_t sub_23FD72D88()
{
  return MEMORY[0x24BE54638]();
}

uint64_t sub_23FD72D94()
{
  return MEMORY[0x24BE54640]();
}

uint64_t sub_23FD72DA0()
{
  return MEMORY[0x24BE54648]();
}

uint64_t sub_23FD72DAC()
{
  return MEMORY[0x24BE54650]();
}

uint64_t sub_23FD72DB8()
{
  return MEMORY[0x24BE54658]();
}

uint64_t sub_23FD72DC4()
{
  return MEMORY[0x24BE54690]();
}

uint64_t sub_23FD72DD0()
{
  return MEMORY[0x24BE54698]();
}

uint64_t sub_23FD72DDC()
{
  return MEMORY[0x24BE546A0]();
}

uint64_t sub_23FD72DE8()
{
  return MEMORY[0x24BE546A8]();
}

uint64_t sub_23FD72DF4()
{
  return MEMORY[0x24BE546C0]();
}

uint64_t sub_23FD72E00()
{
  return MEMORY[0x24BE546C8]();
}

uint64_t sub_23FD72E0C()
{
  return MEMORY[0x24BE546D0]();
}

uint64_t sub_23FD72E18()
{
  return MEMORY[0x24BE546D8]();
}

uint64_t sub_23FD72E24()
{
  return MEMORY[0x24BE546F0]();
}

uint64_t sub_23FD72E30()
{
  return MEMORY[0x24BE54700]();
}

uint64_t sub_23FD72E3C()
{
  return MEMORY[0x24BE54708]();
}

uint64_t sub_23FD72E48()
{
  return MEMORY[0x24BE54718]();
}

uint64_t sub_23FD72E54()
{
  return MEMORY[0x24BE54720]();
}

uint64_t sub_23FD72E60()
{
  return MEMORY[0x24BE54728]();
}

uint64_t sub_23FD72E6C()
{
  return MEMORY[0x24BE54738]();
}

uint64_t sub_23FD72E78()
{
  return MEMORY[0x24BE54740]();
}

uint64_t sub_23FD72E84()
{
  return MEMORY[0x24BE54750]();
}

uint64_t sub_23FD72E90()
{
  return MEMORY[0x24BE54758]();
}

uint64_t sub_23FD72E9C()
{
  return MEMORY[0x24BE54768]();
}

uint64_t sub_23FD72EA8()
{
  return MEMORY[0x24BE54770]();
}

uint64_t sub_23FD72EB4()
{
  return MEMORY[0x24BE54780]();
}

uint64_t sub_23FD72EC0()
{
  return MEMORY[0x24BE54790]();
}

uint64_t sub_23FD72ECC()
{
  return MEMORY[0x24BE547A8]();
}

uint64_t sub_23FD72ED8()
{
  return MEMORY[0x24BE547B8]();
}

uint64_t sub_23FD72EE4()
{
  return MEMORY[0x24BE547C0]();
}

uint64_t sub_23FD72EF0()
{
  return MEMORY[0x24BE547D0]();
}

uint64_t sub_23FD72EFC()
{
  return MEMORY[0x24BE547E0]();
}

uint64_t sub_23FD72F08()
{
  return MEMORY[0x24BE547E8]();
}

uint64_t sub_23FD72F14()
{
  return MEMORY[0x24BE54800]();
}

uint64_t sub_23FD72F20()
{
  return MEMORY[0x24BE54810]();
}

uint64_t sub_23FD72F2C()
{
  return MEMORY[0x24BE54818]();
}

uint64_t sub_23FD72F38()
{
  return MEMORY[0x24BE54820]();
}

uint64_t sub_23FD72F44()
{
  return MEMORY[0x24BE54A50]();
}

uint64_t sub_23FD72F50()
{
  return MEMORY[0x24BE54A58]();
}

uint64_t sub_23FD72F5C()
{
  return MEMORY[0x24BE54A60]();
}

uint64_t sub_23FD72F68()
{
  return MEMORY[0x24BE54A68]();
}

uint64_t sub_23FD72F74()
{
  return MEMORY[0x24BE54AF0]();
}

uint64_t sub_23FD72F80()
{
  return MEMORY[0x24BE54AF8]();
}

uint64_t sub_23FD72F8C()
{
  return MEMORY[0x24BE54B00]();
}

uint64_t sub_23FD72F98()
{
  return MEMORY[0x24BE54B10]();
}

uint64_t sub_23FD72FA4()
{
  return MEMORY[0x24BE54B18]();
}

uint64_t sub_23FD72FB0()
{
  return MEMORY[0x24BE54B20]();
}

uint64_t sub_23FD72FBC()
{
  return MEMORY[0x24BE54B30]();
}

uint64_t sub_23FD72FC8()
{
  return MEMORY[0x24BE54B40]();
}

uint64_t sub_23FD72FD4()
{
  return MEMORY[0x24BE54C60]();
}

uint64_t sub_23FD72FE0()
{
  return MEMORY[0x24BE54C90]();
}

uint64_t sub_23FD72FEC()
{
  return MEMORY[0x24BE54D48]();
}

uint64_t sub_23FD72FF8()
{
  return MEMORY[0x24BE54D68]();
}

uint64_t sub_23FD73004()
{
  return MEMORY[0x24BE54D78]();
}

uint64_t sub_23FD73010()
{
  return MEMORY[0x24BE54D80]();
}

uint64_t sub_23FD7301C()
{
  return MEMORY[0x24BE54DB0]();
}

uint64_t sub_23FD73028()
{
  return MEMORY[0x24BE54DB8]();
}

uint64_t sub_23FD73034()
{
  return MEMORY[0x24BE54DC0]();
}

uint64_t sub_23FD73040()
{
  return MEMORY[0x24BE54DC8]();
}

uint64_t sub_23FD7304C()
{
  return MEMORY[0x24BE54DF0]();
}

uint64_t sub_23FD73058()
{
  return MEMORY[0x24BE54E00]();
}

uint64_t sub_23FD73064()
{
  return MEMORY[0x24BE54E08]();
}

uint64_t sub_23FD73070()
{
  return MEMORY[0x24BE54E10]();
}

uint64_t sub_23FD7307C()
{
  return MEMORY[0x24BE54E18]();
}

uint64_t sub_23FD73088()
{
  return MEMORY[0x24BE54E28]();
}

uint64_t sub_23FD73094()
{
  return MEMORY[0x24BE54E30]();
}

uint64_t sub_23FD730A0()
{
  return MEMORY[0x24BE54E48]();
}

uint64_t sub_23FD730AC()
{
  return MEMORY[0x24BE54E58]();
}

uint64_t sub_23FD730B8()
{
  return MEMORY[0x24BE54E60]();
}

uint64_t sub_23FD730C4()
{
  return MEMORY[0x24BE54E70]();
}

uint64_t sub_23FD730D0()
{
  return MEMORY[0x24BE54E78]();
}

uint64_t sub_23FD730DC()
{
  return MEMORY[0x24BE54E80]();
}

uint64_t sub_23FD730E8()
{
  return MEMORY[0x24BE54E88]();
}

uint64_t sub_23FD730F4()
{
  return MEMORY[0x24BE54E90]();
}

uint64_t sub_23FD73100()
{
  return MEMORY[0x24BE54EB8]();
}

uint64_t sub_23FD7310C()
{
  return MEMORY[0x24BE54EC0]();
}

uint64_t sub_23FD73118()
{
  return MEMORY[0x24BE54ED0]();
}

uint64_t sub_23FD73124()
{
  return MEMORY[0x24BE54F10]();
}

uint64_t sub_23FD73130()
{
  return MEMORY[0x24BE54F40]();
}

uint64_t sub_23FD7313C()
{
  return MEMORY[0x24BE54F50]();
}

uint64_t sub_23FD73148()
{
  return MEMORY[0x24BE54F78]();
}

uint64_t sub_23FD73154()
{
  return MEMORY[0x24BE54F80]();
}

uint64_t sub_23FD73160()
{
  return MEMORY[0x24BE54F88]();
}

uint64_t sub_23FD7316C()
{
  return MEMORY[0x24BE54FC0]();
}

uint64_t sub_23FD73178()
{
  return MEMORY[0x24BE54FC8]();
}

uint64_t sub_23FD73184()
{
  return MEMORY[0x24BE54FD0]();
}

uint64_t sub_23FD73190()
{
  return MEMORY[0x24BE54FE0]();
}

uint64_t sub_23FD7319C()
{
  return MEMORY[0x24BE54FE8]();
}

uint64_t sub_23FD731A8()
{
  return MEMORY[0x24BE55038]();
}

uint64_t sub_23FD731B4()
{
  return MEMORY[0x24BE55040]();
}

uint64_t sub_23FD731C0()
{
  return MEMORY[0x24BE55048]();
}

uint64_t sub_23FD731CC()
{
  return MEMORY[0x24BE55050]();
}

uint64_t sub_23FD731D8()
{
  return MEMORY[0x24BE55058]();
}

uint64_t sub_23FD731E4()
{
  return MEMORY[0x24BE55060]();
}

uint64_t sub_23FD731F0()
{
  return MEMORY[0x24BE55068]();
}

uint64_t sub_23FD731FC()
{
  return MEMORY[0x24BE55070]();
}

uint64_t sub_23FD73208()
{
  return MEMORY[0x24BE55090]();
}

uint64_t sub_23FD73214()
{
  return MEMORY[0x24BE55098]();
}

uint64_t sub_23FD73220()
{
  return MEMORY[0x24BE550A0]();
}

uint64_t sub_23FD7322C()
{
  return MEMORY[0x24BE550A8]();
}

uint64_t sub_23FD73238()
{
  return MEMORY[0x24BE550B0]();
}

uint64_t sub_23FD73244()
{
  return MEMORY[0x24BE550B8]();
}

uint64_t sub_23FD73250()
{
  return MEMORY[0x24BE550C0]();
}

uint64_t sub_23FD7325C()
{
  return MEMORY[0x24BE550C8]();
}

uint64_t sub_23FD73268()
{
  return MEMORY[0x24BE550D0]();
}

uint64_t sub_23FD73274()
{
  return MEMORY[0x24BE55118]();
}

uint64_t sub_23FD73280()
{
  return MEMORY[0x24BE55170]();
}

uint64_t sub_23FD7328C()
{
  return MEMORY[0x24BE551A8]();
}

uint64_t sub_23FD73298()
{
  return MEMORY[0x24BE551C0]();
}

uint64_t sub_23FD732A4()
{
  return MEMORY[0x24BE551F8]();
}

uint64_t sub_23FD732B0()
{
  return MEMORY[0x24BE55208]();
}

uint64_t sub_23FD732BC()
{
  return MEMORY[0x24BE55210]();
}

uint64_t sub_23FD732C8()
{
  return MEMORY[0x24BE55220]();
}

uint64_t sub_23FD732D4()
{
  return MEMORY[0x24BE55228]();
}

uint64_t sub_23FD732E0()
{
  return MEMORY[0x24BE55230]();
}

uint64_t sub_23FD732EC()
{
  return MEMORY[0x24BE55240]();
}

uint64_t sub_23FD732F8()
{
  return MEMORY[0x24BE55258]();
}

uint64_t _s23IntelligenceFlowRuntime16FeedbackLearningO20CandidateSearchQueryV2eeoiySbAE_AEtFZ_0()
{
  return MEMORY[0x24BE55260]();
}

uint64_t sub_23FD73310()
{
  return MEMORY[0x24BE55268]();
}

uint64_t sub_23FD7331C()
{
  return MEMORY[0x24BE55270]();
}

uint64_t sub_23FD73328()
{
  return MEMORY[0x24BE55278]();
}

uint64_t sub_23FD73334()
{
  return MEMORY[0x24BE55280]();
}

uint64_t sub_23FD73340()
{
  return MEMORY[0x24BE55288]();
}

uint64_t sub_23FD7334C()
{
  return MEMORY[0x24BE552A8]();
}

uint64_t sub_23FD73358()
{
  return MEMORY[0x24BE552B8]();
}

uint64_t sub_23FD73364()
{
  return MEMORY[0x24BE552C0]();
}

uint64_t sub_23FD73370()
{
  return MEMORY[0x24BE552C8]();
}

uint64_t sub_23FD7337C()
{
  return MEMORY[0x24BE552D0]();
}

uint64_t sub_23FD73388()
{
  return MEMORY[0x24BE552D8]();
}

uint64_t sub_23FD73394()
{
  return MEMORY[0x24BE552E0]();
}

uint64_t sub_23FD733A0()
{
  return MEMORY[0x24BE552F8]();
}

uint64_t sub_23FD733AC()
{
  return MEMORY[0x24BE55300]();
}

uint64_t sub_23FD733B8()
{
  return MEMORY[0x24BE55308]();
}

uint64_t sub_23FD733C4()
{
  return MEMORY[0x24BE55310]();
}

uint64_t sub_23FD733D0()
{
  return MEMORY[0x24BE55320]();
}

uint64_t sub_23FD733DC()
{
  return MEMORY[0x24BE55328]();
}

uint64_t sub_23FD733E8()
{
  return MEMORY[0x24BE55378]();
}

uint64_t sub_23FD733F4()
{
  return MEMORY[0x24BE55380]();
}

uint64_t sub_23FD73400()
{
  return MEMORY[0x24BE55388]();
}

uint64_t sub_23FD7340C()
{
  return MEMORY[0x24BE55390]();
}

uint64_t sub_23FD73418()
{
  return MEMORY[0x24BE55398]();
}

uint64_t sub_23FD73424()
{
  return MEMORY[0x24BE553C0]();
}

uint64_t sub_23FD73430()
{
  return MEMORY[0x24BE553C8]();
}

uint64_t sub_23FD7343C()
{
  return MEMORY[0x24BE553D0]();
}

uint64_t sub_23FD73448()
{
  return MEMORY[0x24BE553D8]();
}

uint64_t sub_23FD73454()
{
  return MEMORY[0x24BE553E0]();
}

uint64_t sub_23FD73460()
{
  return MEMORY[0x24BE553F0]();
}

uint64_t sub_23FD7346C()
{
  return MEMORY[0x24BE55400]();
}

uint64_t sub_23FD73478()
{
  return MEMORY[0x24BE55418]();
}

uint64_t sub_23FD73484()
{
  return MEMORY[0x24BE55420]();
}

uint64_t sub_23FD73490()
{
  return MEMORY[0x24BE55440]();
}

uint64_t sub_23FD7349C()
{
  return MEMORY[0x24BE55450]();
}

uint64_t sub_23FD734A8()
{
  return MEMORY[0x24BE55458]();
}

uint64_t sub_23FD734B4()
{
  return MEMORY[0x24BE55550]();
}

uint64_t sub_23FD734C0()
{
  return MEMORY[0x24BE55578]();
}

uint64_t sub_23FD734CC()
{
  return MEMORY[0x24BE55580]();
}

uint64_t sub_23FD734D8()
{
  return MEMORY[0x24BE55588]();
}

uint64_t sub_23FD734E4()
{
  return MEMORY[0x24BE555B0]();
}

uint64_t sub_23FD734F0()
{
  return MEMORY[0x24BE555B8]();
}

uint64_t sub_23FD734FC()
{
  return MEMORY[0x24BE555C8]();
}

uint64_t sub_23FD73508()
{
  return MEMORY[0x24BE555D8]();
}

uint64_t sub_23FD73514()
{
  return MEMORY[0x24BE555E0]();
}

uint64_t sub_23FD73520()
{
  return MEMORY[0x24BE555F0]();
}

uint64_t sub_23FD7352C()
{
  return MEMORY[0x24BE555F8]();
}

uint64_t sub_23FD73538()
{
  return MEMORY[0x24BE55608]();
}

uint64_t sub_23FD73544()
{
  return MEMORY[0x24BE55610]();
}

uint64_t sub_23FD73550()
{
  return MEMORY[0x24BE55618]();
}

uint64_t sub_23FD7355C()
{
  return MEMORY[0x24BE55620]();
}

uint64_t sub_23FD73568()
{
  return MEMORY[0x24BE55640]();
}

uint64_t sub_23FD73574()
{
  return MEMORY[0x24BE55650]();
}

uint64_t sub_23FD73580()
{
  return MEMORY[0x24BE55660]();
}

uint64_t sub_23FD7358C()
{
  return MEMORY[0x24BE55668]();
}

uint64_t sub_23FD73598()
{
  return MEMORY[0x24BE55670]();
}

uint64_t sub_23FD735A4()
{
  return MEMORY[0x24BE556D0]();
}

uint64_t sub_23FD735B0()
{
  return MEMORY[0x24BE556D8]();
}

uint64_t sub_23FD735BC()
{
  return MEMORY[0x24BE556E0]();
}

uint64_t sub_23FD735C8()
{
  return MEMORY[0x24BE556E8]();
}

uint64_t sub_23FD735D4()
{
  return MEMORY[0x24BE556F0]();
}

uint64_t sub_23FD735E0()
{
  return MEMORY[0x24BE556F8]();
}

uint64_t sub_23FD735EC()
{
  return MEMORY[0x24BE55788]();
}

uint64_t sub_23FD735F8()
{
  return MEMORY[0x24BE557A0]();
}

uint64_t sub_23FD73604()
{
  return MEMORY[0x24BE557B8]();
}

uint64_t sub_23FD73610()
{
  return MEMORY[0x24BE557E8]();
}

uint64_t sub_23FD7361C()
{
  return MEMORY[0x24BE55810]();
}

uint64_t sub_23FD73628()
{
  return MEMORY[0x24BE55820]();
}

uint64_t sub_23FD73634()
{
  return MEMORY[0x24BE55828]();
}

uint64_t sub_23FD73640()
{
  return MEMORY[0x24BE55850]();
}

uint64_t sub_23FD7364C()
{
  return MEMORY[0x24BE55858]();
}

uint64_t sub_23FD73658()
{
  return MEMORY[0x24BE55860]();
}

uint64_t sub_23FD73664()
{
  return MEMORY[0x24BE55870]();
}

uint64_t sub_23FD73670()
{
  return MEMORY[0x24BE55878]();
}

uint64_t sub_23FD7367C()
{
  return MEMORY[0x24BE558A8]();
}

uint64_t sub_23FD73688()
{
  return MEMORY[0x24BE558B8]();
}

uint64_t sub_23FD73694()
{
  return MEMORY[0x24BE558C8]();
}

uint64_t sub_23FD736A0()
{
  return MEMORY[0x24BE558E8]();
}

uint64_t sub_23FD736AC()
{
  return MEMORY[0x24BE558F0]();
}

uint64_t sub_23FD736B8()
{
  return MEMORY[0x24BE55908]();
}

uint64_t sub_23FD736C4()
{
  return MEMORY[0x24BE55918]();
}

uint64_t sub_23FD736D0()
{
  return MEMORY[0x24BE55928]();
}

uint64_t sub_23FD736DC()
{
  return MEMORY[0x24BE55938]();
}

uint64_t sub_23FD736E8()
{
  return MEMORY[0x24BE55940]();
}

uint64_t sub_23FD736F4()
{
  return MEMORY[0x24BE55950]();
}

uint64_t sub_23FD73700()
{
  return MEMORY[0x24BE55960]();
}

uint64_t sub_23FD7370C()
{
  return MEMORY[0x24BE55968]();
}

uint64_t sub_23FD73718()
{
  return MEMORY[0x24BE55970]();
}

uint64_t sub_23FD73724()
{
  return MEMORY[0x24BE55990]();
}

uint64_t sub_23FD73730()
{
  return MEMORY[0x24BE559A8]();
}

uint64_t sub_23FD7373C()
{
  return MEMORY[0x24BE55A10]();
}

uint64_t sub_23FD73748()
{
  return MEMORY[0x24BE55A18]();
}

uint64_t sub_23FD73754()
{
  return MEMORY[0x24BE55A20]();
}

uint64_t sub_23FD73760()
{
  return MEMORY[0x24BE55A28]();
}

uint64_t sub_23FD7376C()
{
  return MEMORY[0x24BE55A30]();
}

uint64_t sub_23FD73778()
{
  return MEMORY[0x24BE55A38]();
}

uint64_t sub_23FD73784()
{
  return MEMORY[0x24BE55A40]();
}

uint64_t sub_23FD73790()
{
  return MEMORY[0x24BE55A50]();
}

uint64_t sub_23FD7379C()
{
  return MEMORY[0x24BE55A58]();
}

uint64_t sub_23FD737A8()
{
  return MEMORY[0x24BE55A60]();
}

uint64_t sub_23FD737B4()
{
  return MEMORY[0x24BE55A68]();
}

uint64_t sub_23FD737C0()
{
  return MEMORY[0x24BE55A70]();
}

uint64_t sub_23FD737CC()
{
  return MEMORY[0x24BE55A78]();
}

uint64_t sub_23FD737D8()
{
  return MEMORY[0x24BE55A80]();
}

uint64_t sub_23FD737E4()
{
  return MEMORY[0x24BE55A88]();
}

uint64_t sub_23FD737F0()
{
  return MEMORY[0x24BE55A90]();
}

uint64_t sub_23FD737FC()
{
  return MEMORY[0x24BE55A98]();
}

uint64_t sub_23FD73808()
{
  return MEMORY[0x24BE55AA8]();
}

uint64_t sub_23FD73814()
{
  return MEMORY[0x24BE55AB8]();
}

uint64_t sub_23FD73820()
{
  return MEMORY[0x24BE55AD0]();
}

uint64_t sub_23FD7382C()
{
  return MEMORY[0x24BE55AD8]();
}

uint64_t sub_23FD73838()
{
  return MEMORY[0x24BE55AE8]();
}

uint64_t sub_23FD73844()
{
  return MEMORY[0x24BE55B00]();
}

uint64_t sub_23FD73850()
{
  return MEMORY[0x24BE55B10]();
}

uint64_t sub_23FD7385C()
{
  return MEMORY[0x24BE55B20]();
}

uint64_t sub_23FD73868()
{
  return MEMORY[0x24BE55B30]();
}

uint64_t sub_23FD73874()
{
  return MEMORY[0x24BE55B40]();
}

uint64_t sub_23FD73880()
{
  return MEMORY[0x24BE55B78]();
}

uint64_t sub_23FD7388C()
{
  return MEMORY[0x24BE55B98]();
}

uint64_t sub_23FD73898()
{
  return MEMORY[0x24BE55BB0]();
}

uint64_t sub_23FD738A4()
{
  return MEMORY[0x24BE55BD8]();
}

uint64_t sub_23FD738B0()
{
  return MEMORY[0x24BE55BE0]();
}

uint64_t sub_23FD738BC()
{
  return MEMORY[0x24BE55BF0]();
}

uint64_t sub_23FD738C8()
{
  return MEMORY[0x24BE55C00]();
}

uint64_t sub_23FD738D4()
{
  return MEMORY[0x24BE55C10]();
}

uint64_t sub_23FD738E0()
{
  return MEMORY[0x24BE55C18]();
}

uint64_t sub_23FD738EC()
{
  return MEMORY[0x24BE55C90]();
}

uint64_t sub_23FD738F8()
{
  return MEMORY[0x24BE55CA0]();
}

uint64_t sub_23FD73904()
{
  return MEMORY[0x24BE55CA8]();
}

uint64_t sub_23FD73910()
{
  return MEMORY[0x24BE55D10]();
}

uint64_t sub_23FD7391C()
{
  return MEMORY[0x24BE55D40]();
}

uint64_t sub_23FD73928()
{
  return MEMORY[0x24BE55DF8]();
}

uint64_t sub_23FD73934()
{
  return MEMORY[0x24BE55E10]();
}

uint64_t sub_23FD73940()
{
  return MEMORY[0x24BE55E18]();
}

uint64_t sub_23FD7394C()
{
  return MEMORY[0x24BE55E20]();
}

uint64_t sub_23FD73958()
{
  return MEMORY[0x24BE55E30]();
}

uint64_t sub_23FD73964()
{
  return MEMORY[0x24BE55E40]();
}

uint64_t sub_23FD73970()
{
  return MEMORY[0x24BE55E48]();
}

uint64_t sub_23FD7397C()
{
  return MEMORY[0x24BE55EA0]();
}

uint64_t sub_23FD73988()
{
  return MEMORY[0x24BE55EA8]();
}

uint64_t sub_23FD73994()
{
  return MEMORY[0x24BE55EB0]();
}

uint64_t sub_23FD739A0()
{
  return MEMORY[0x24BE55EB8]();
}

uint64_t sub_23FD739AC()
{
  return MEMORY[0x24BE55EC0]();
}

uint64_t sub_23FD739B8()
{
  return MEMORY[0x24BE55ED8]();
}

uint64_t sub_23FD739C4()
{
  return MEMORY[0x24BE55EE0]();
}

uint64_t sub_23FD739D0()
{
  return MEMORY[0x24BE55EE8]();
}

uint64_t sub_23FD739DC()
{
  return MEMORY[0x24BE55EF8]();
}

uint64_t sub_23FD739E8()
{
  return MEMORY[0x24BE55F00]();
}

uint64_t sub_23FD739F4()
{
  return MEMORY[0x24BE55F08]();
}

uint64_t sub_23FD73A00()
{
  return MEMORY[0x24BE55F18]();
}

uint64_t sub_23FD73A0C()
{
  return MEMORY[0x24BE55F28]();
}

uint64_t sub_23FD73A18()
{
  return MEMORY[0x24BE55F70]();
}

uint64_t sub_23FD73A24()
{
  return MEMORY[0x24BE55F78]();
}

uint64_t sub_23FD73A30()
{
  return MEMORY[0x24BE55F80]();
}

uint64_t sub_23FD73A3C()
{
  return MEMORY[0x24BE55F88]();
}

uint64_t sub_23FD73A48()
{
  return MEMORY[0x24BE55FB0]();
}

uint64_t sub_23FD73A54()
{
  return MEMORY[0x24BE55FC0]();
}

uint64_t sub_23FD73A60()
{
  return MEMORY[0x24BE55FD0]();
}

uint64_t sub_23FD73A6C()
{
  return MEMORY[0x24BE55FE0]();
}

uint64_t sub_23FD73A78()
{
  return MEMORY[0x24BE55FF0]();
}

uint64_t sub_23FD73A84()
{
  return MEMORY[0x24BE56000]();
}

uint64_t sub_23FD73A90()
{
  return MEMORY[0x24BE56010]();
}

uint64_t sub_23FD73A9C()
{
  return MEMORY[0x24BE56020]();
}

uint64_t sub_23FD73AA8()
{
  return MEMORY[0x24BE56030]();
}

uint64_t sub_23FD73AB4()
{
  return MEMORY[0x24BE56050]();
}

uint64_t sub_23FD73AC0()
{
  return MEMORY[0x24BE56108]();
}

uint64_t sub_23FD73ACC()
{
  return MEMORY[0x24BE561D0]();
}

uint64_t sub_23FD73AD8()
{
  return MEMORY[0x24BE561E8]();
}

uint64_t sub_23FD73AE4()
{
  return MEMORY[0x24BE561F8]();
}

uint64_t sub_23FD73AF0()
{
  return MEMORY[0x24BE56200]();
}

uint64_t sub_23FD73AFC()
{
  return MEMORY[0x24BE56208]();
}

uint64_t sub_23FD73B08()
{
  return MEMORY[0x24BE56210]();
}

uint64_t sub_23FD73B14()
{
  return MEMORY[0x24BE56258]();
}

uint64_t sub_23FD73B20()
{
  return MEMORY[0x24BE563F0]();
}

uint64_t sub_23FD73B2C()
{
  return MEMORY[0x24BE563F8]();
}

uint64_t sub_23FD73B38()
{
  return MEMORY[0x24BE56400]();
}

uint64_t sub_23FD73B44()
{
  return MEMORY[0x24BE56498]();
}

uint64_t sub_23FD73B50()
{
  return MEMORY[0x24BE564A0]();
}

uint64_t sub_23FD73B5C()
{
  return MEMORY[0x24BE56540]();
}

uint64_t sub_23FD73B68()
{
  return MEMORY[0x24BE56548]();
}

uint64_t sub_23FD73B74()
{
  return MEMORY[0x24BE56550]();
}

uint64_t sub_23FD73B80()
{
  return MEMORY[0x24BE56560]();
}

uint64_t sub_23FD73B8C()
{
  return MEMORY[0x24BE56568]();
}

uint64_t sub_23FD73B98()
{
  return MEMORY[0x24BE56570]();
}

uint64_t sub_23FD73BA4()
{
  return MEMORY[0x24BE56578]();
}

uint64_t sub_23FD73BB0()
{
  return MEMORY[0x24BE565A8]();
}

uint64_t sub_23FD73BBC()
{
  return MEMORY[0x24BE56620]();
}

uint64_t sub_23FD73BC8()
{
  return MEMORY[0x24BE56628]();
}

uint64_t sub_23FD73BD4()
{
  return MEMORY[0x24BE56680]();
}

uint64_t sub_23FD73BE0()
{
  return MEMORY[0x24BE56688]();
}

uint64_t sub_23FD73BEC()
{
  return MEMORY[0x24BE56690]();
}

uint64_t sub_23FD73BF8()
{
  return MEMORY[0x24BE56698]();
}

uint64_t sub_23FD73C04()
{
  return MEMORY[0x24BE566A0]();
}

uint64_t sub_23FD73C10()
{
  return MEMORY[0x24BE566A8]();
}

uint64_t sub_23FD73C1C()
{
  return MEMORY[0x24BE566B0]();
}

uint64_t sub_23FD73C28()
{
  return MEMORY[0x24BE566B8]();
}

uint64_t sub_23FD73C34()
{
  return MEMORY[0x24BE566D0]();
}

uint64_t sub_23FD73C40()
{
  return MEMORY[0x24BE566D8]();
}

uint64_t sub_23FD73C4C()
{
  return MEMORY[0x24BE566E0]();
}

uint64_t sub_23FD73C58()
{
  return MEMORY[0x24BE566E8]();
}

uint64_t sub_23FD73C64()
{
  return MEMORY[0x24BE566F0]();
}

uint64_t sub_23FD73C70()
{
  return MEMORY[0x24BE566F8]();
}

uint64_t sub_23FD73C7C()
{
  return MEMORY[0x24BE56700]();
}

uint64_t sub_23FD73C88()
{
  return MEMORY[0x24BE56728]();
}

uint64_t sub_23FD73C94()
{
  return MEMORY[0x24BE56730]();
}

uint64_t sub_23FD73CA0()
{
  return MEMORY[0x24BE56738]();
}

uint64_t sub_23FD73CAC()
{
  return MEMORY[0x24BE56740]();
}

uint64_t sub_23FD73CB8()
{
  return MEMORY[0x24BE56748]();
}

uint64_t sub_23FD73CC4()
{
  return MEMORY[0x24BE56770]();
}

uint64_t sub_23FD73CD0()
{
  return MEMORY[0x24BE56778]();
}

uint64_t sub_23FD73CDC()
{
  return MEMORY[0x24BE56780]();
}

uint64_t sub_23FD73CE8()
{
  return MEMORY[0x24BE56788]();
}

uint64_t sub_23FD73CF4()
{
  return MEMORY[0x24BE56790]();
}

uint64_t sub_23FD73D00()
{
  return MEMORY[0x24BE56798]();
}

uint64_t sub_23FD73D0C()
{
  return MEMORY[0x24BE567A0]();
}

uint64_t sub_23FD73D18()
{
  return MEMORY[0x24BE567A8]();
}

uint64_t sub_23FD73D24()
{
  return MEMORY[0x24BE567B0]();
}

uint64_t sub_23FD73D30()
{
  return MEMORY[0x24BE567B8]();
}

uint64_t sub_23FD73D3C()
{
  return MEMORY[0x24BE567C0]();
}

uint64_t sub_23FD73D48()
{
  return MEMORY[0x24BE567D0]();
}

uint64_t sub_23FD73D54()
{
  return MEMORY[0x24BE567D8]();
}

uint64_t sub_23FD73D60()
{
  return MEMORY[0x24BE56800]();
}

uint64_t sub_23FD73D6C()
{
  return MEMORY[0x24BE56808]();
}

uint64_t sub_23FD73D78()
{
  return MEMORY[0x24BE56810]();
}

uint64_t sub_23FD73D84()
{
  return MEMORY[0x24BE56818]();
}

uint64_t sub_23FD73D90()
{
  return MEMORY[0x24BE56820]();
}

uint64_t sub_23FD73D9C()
{
  return MEMORY[0x24BE56828]();
}

uint64_t sub_23FD73DA8()
{
  return MEMORY[0x24BE56838]();
}

uint64_t sub_23FD73DB4()
{
  return MEMORY[0x24BE56840]();
}

uint64_t sub_23FD73DC0()
{
  return MEMORY[0x24BE56848]();
}

uint64_t sub_23FD73DCC()
{
  return MEMORY[0x24BE56850]();
}

uint64_t sub_23FD73DD8()
{
  return MEMORY[0x24BE56858]();
}

uint64_t sub_23FD73DE4()
{
  return MEMORY[0x24BE56860]();
}

uint64_t sub_23FD73DF0()
{
  return MEMORY[0x24BE56868]();
}

uint64_t sub_23FD73DFC()
{
  return MEMORY[0x24BE56870]();
}

uint64_t sub_23FD73E08()
{
  return MEMORY[0x24BE56878]();
}

uint64_t sub_23FD73E14()
{
  return MEMORY[0x24BE568A0]();
}

uint64_t sub_23FD73E20()
{
  return MEMORY[0x24BE568A8]();
}

uint64_t sub_23FD73E2C()
{
  return MEMORY[0x24BE568B0]();
}

uint64_t sub_23FD73E38()
{
  return MEMORY[0x24BE568B8]();
}

uint64_t sub_23FD73E44()
{
  return MEMORY[0x24BE568C8]();
}

uint64_t sub_23FD73E50()
{
  return MEMORY[0x24BE568D0]();
}

uint64_t sub_23FD73E5C()
{
  return MEMORY[0x24BE568D8]();
}

uint64_t sub_23FD73E68()
{
  return MEMORY[0x24BE568E0]();
}

uint64_t sub_23FD73E74()
{
  return MEMORY[0x24BE568E8]();
}

uint64_t sub_23FD73E80()
{
  return MEMORY[0x24BE568F0]();
}

uint64_t sub_23FD73E8C()
{
  return MEMORY[0x24BE568F8]();
}

uint64_t sub_23FD73E98()
{
  return MEMORY[0x24BE56900]();
}

uint64_t sub_23FD73EA4()
{
  return MEMORY[0x24BE56918]();
}

uint64_t sub_23FD73EB0()
{
  return MEMORY[0x24BE56920]();
}

uint64_t sub_23FD73EBC()
{
  return MEMORY[0x24BE56928]();
}

uint64_t sub_23FD73EC8()
{
  return MEMORY[0x24BE56940]();
}

uint64_t sub_23FD73ED4()
{
  return MEMORY[0x24BE56948]();
}

uint64_t sub_23FD73EE0()
{
  return MEMORY[0x24BE56950]();
}

uint64_t sub_23FD73EEC()
{
  return MEMORY[0x24BE56958]();
}

uint64_t sub_23FD73EF8()
{
  return MEMORY[0x24BE56960]();
}

uint64_t sub_23FD73F04()
{
  return MEMORY[0x24BE56970]();
}

uint64_t sub_23FD73F10()
{
  return MEMORY[0x24BE56978]();
}

uint64_t sub_23FD73F1C()
{
  return MEMORY[0x24BE56980]();
}

uint64_t sub_23FD73F28()
{
  return MEMORY[0x24BE56988]();
}

uint64_t sub_23FD73F34()
{
  return MEMORY[0x24BE569C8]();
}

uint64_t sub_23FD73F40()
{
  return MEMORY[0x24BE569F0]();
}

uint64_t sub_23FD73F4C()
{
  return MEMORY[0x24BE569F8]();
}

uint64_t sub_23FD73F58()
{
  return MEMORY[0x24BE56A00]();
}

uint64_t sub_23FD73F64()
{
  return MEMORY[0x24BE56A08]();
}

uint64_t sub_23FD73F70()
{
  return MEMORY[0x24BE56A18]();
}

uint64_t sub_23FD73F7C()
{
  return MEMORY[0x24BE56A20]();
}

uint64_t sub_23FD73F88()
{
  return MEMORY[0x24BE56A28]();
}

uint64_t sub_23FD73F94()
{
  return MEMORY[0x24BE54830]();
}

uint64_t sub_23FD73FA0()
{
  return MEMORY[0x24BE56A30]();
}

uint64_t sub_23FD73FAC()
{
  return MEMORY[0x24BE56A38]();
}

uint64_t sub_23FD73FB8()
{
  return MEMORY[0x24BE56A40]();
}

uint64_t sub_23FD73FC4()
{
  return MEMORY[0x24BE56A48]();
}

uint64_t sub_23FD73FD0()
{
  return MEMORY[0x24BE56A50]();
}

uint64_t sub_23FD73FDC()
{
  return MEMORY[0x24BE56A58]();
}

uint64_t sub_23FD73FE8()
{
  return MEMORY[0x24BE56A60]();
}

uint64_t sub_23FD73FF4()
{
  return MEMORY[0x24BE56A68]();
}

uint64_t sub_23FD74000()
{
  return MEMORY[0x24BE56A70]();
}

uint64_t sub_23FD7400C()
{
  return MEMORY[0x24BE56A78]();
}

uint64_t sub_23FD74018()
{
  return MEMORY[0x24BE56A80]();
}

uint64_t sub_23FD74024()
{
  return MEMORY[0x24BE56A88]();
}

uint64_t sub_23FD74030()
{
  return MEMORY[0x24BE56A90]();
}

uint64_t sub_23FD7403C()
{
  return MEMORY[0x24BE56A98]();
}

uint64_t sub_23FD74048()
{
  return MEMORY[0x24BE56AA0]();
}

uint64_t sub_23FD74054()
{
  return MEMORY[0x24BE56AA8]();
}

uint64_t sub_23FD74060()
{
  return MEMORY[0x24BE56AB0]();
}

uint64_t sub_23FD7406C()
{
  return MEMORY[0x24BE56B08]();
}

uint64_t sub_23FD74078()
{
  return MEMORY[0x24BE56B40]();
}

uint64_t sub_23FD74084()
{
  return MEMORY[0x24BE56BD8]();
}

uint64_t sub_23FD74090()
{
  return MEMORY[0x24BE56BF8]();
}

uint64_t sub_23FD7409C()
{
  return MEMORY[0x24BE56C90]();
}

uint64_t sub_23FD740A8()
{
  return MEMORY[0x24BE56CA8]();
}

uint64_t sub_23FD740B4()
{
  return MEMORY[0x24BE56CB0]();
}

uint64_t sub_23FD740C0()
{
  return MEMORY[0x24BE56CB8]();
}

uint64_t sub_23FD740CC()
{
  return MEMORY[0x24BE56CD0]();
}

uint64_t sub_23FD740D8()
{
  return MEMORY[0x24BE56D08]();
}

uint64_t sub_23FD740E4()
{
  return MEMORY[0x24BE56D10]();
}

uint64_t sub_23FD740F0()
{
  return MEMORY[0x24BE56D18]();
}

uint64_t sub_23FD740FC()
{
  return MEMORY[0x24BE56D20]();
}

uint64_t sub_23FD74108()
{
  return MEMORY[0x24BE56D40]();
}

uint64_t sub_23FD74114()
{
  return MEMORY[0x24BE56D50]();
}

uint64_t sub_23FD74120()
{
  return MEMORY[0x24BE56D60]();
}

uint64_t sub_23FD7412C()
{
  return MEMORY[0x24BE56D70]();
}

uint64_t sub_23FD74138()
{
  return MEMORY[0x24BE56D80]();
}

uint64_t sub_23FD74144()
{
  return MEMORY[0x24BE56D88]();
}

uint64_t sub_23FD74150()
{
  return MEMORY[0x24BE56D90]();
}

uint64_t sub_23FD7415C()
{
  return MEMORY[0x24BE56D98]();
}

uint64_t sub_23FD74168()
{
  return MEMORY[0x24BE56DA8]();
}

uint64_t sub_23FD74174()
{
  return MEMORY[0x24BE56DB0]();
}

uint64_t sub_23FD74180()
{
  return MEMORY[0x24BE56E30]();
}

uint64_t sub_23FD7418C()
{
  return MEMORY[0x24BE56E40]();
}

uint64_t sub_23FD74198()
{
  return MEMORY[0x24BE56E78]();
}

uint64_t sub_23FD741A4()
{
  return MEMORY[0x24BE56EA8]();
}

uint64_t sub_23FD741B0()
{
  return MEMORY[0x24BE56EB0]();
}

uint64_t sub_23FD741BC()
{
  return MEMORY[0x24BE56EF8]();
}

uint64_t sub_23FD741C8()
{
  return MEMORY[0x24BE56F08]();
}

uint64_t sub_23FD741D4()
{
  return MEMORY[0x24BE56F20]();
}

uint64_t sub_23FD741E0()
{
  return MEMORY[0x24BE56F28]();
}

uint64_t sub_23FD741EC()
{
  return MEMORY[0x24BE56F38]();
}

uint64_t sub_23FD741F8()
{
  return MEMORY[0x24BE56F48]();
}

uint64_t sub_23FD74204()
{
  return MEMORY[0x24BE56F50]();
}

uint64_t sub_23FD74210()
{
  return MEMORY[0x24BE56F58]();
}

uint64_t sub_23FD7421C()
{
  return MEMORY[0x24BE56F60]();
}

uint64_t sub_23FD74228()
{
  return MEMORY[0x24BE56F68]();
}

uint64_t sub_23FD74234()
{
  return MEMORY[0x24BE56F70]();
}

uint64_t sub_23FD74240()
{
  return MEMORY[0x24BE56F78]();
}

uint64_t sub_23FD7424C()
{
  return MEMORY[0x24BE56F80]();
}

uint64_t sub_23FD74258()
{
  return MEMORY[0x24BEE6458]();
}

uint64_t sub_23FD74264()
{
  return MEMORY[0x24BEE6468]();
}

uint64_t sub_23FD74270()
{
  return MEMORY[0x24BEE64A8]();
}

uint64_t sub_23FD7427C()
{
  return MEMORY[0x24BDB9408]();
}

uint64_t sub_23FD74288()
{
  return MEMORY[0x24BDB9410]();
}

uint64_t sub_23FD74294()
{
  return MEMORY[0x24BDB9420]();
}

uint64_t sub_23FD742A0()
{
  return MEMORY[0x24BDB9778]();
}

uint64_t sub_23FD742AC()
{
  return MEMORY[0x24BDB9800]();
}

uint64_t sub_23FD742B8()
{
  return MEMORY[0x24BDB9828]();
}

uint64_t sub_23FD742C4()
{
  return MEMORY[0x24BDB9850]();
}

uint64_t sub_23FD742D0()
{
  return MEMORY[0x24BDB9AC0]();
}

uint64_t sub_23FD742DC()
{
  return MEMORY[0x24BDB9B20]();
}

uint64_t sub_23FD742E8()
{
  return MEMORY[0x24BDB9B28]();
}

uint64_t sub_23FD742F4()
{
  return MEMORY[0x24BDB9B98]();
}

uint64_t sub_23FD74300()
{
  return MEMORY[0x24BDB9C18]();
}

uint64_t sub_23FD7430C()
{
  return MEMORY[0x24BDB9C28]();
}

uint64_t sub_23FD74318()
{
  return MEMORY[0x24BDB9C58]();
}

uint64_t sub_23FD74324()
{
  return MEMORY[0x24BDB9C60]();
}

uint64_t sub_23FD74330()
{
  return MEMORY[0x24BDB9C68]();
}

uint64_t sub_23FD7433C()
{
  return MEMORY[0x24BDB9C70]();
}

uint64_t sub_23FD74348()
{
  return MEMORY[0x24BDB9C78]();
}

uint64_t sub_23FD74354()
{
  return MEMORY[0x24BDB9C80]();
}

uint64_t sub_23FD74360()
{
  return MEMORY[0x24BDB9C90]();
}

uint64_t sub_23FD7436C()
{
  return MEMORY[0x24BDB9DF0]();
}

uint64_t sub_23FD74378()
{
  return MEMORY[0x24BDB9E08]();
}

uint64_t sub_23FD74384()
{
  return MEMORY[0x24BDB9F20]();
}

uint64_t sub_23FD74390()
{
  return MEMORY[0x24BDB9F90]();
}

uint64_t sub_23FD7439C()
{
  return MEMORY[0x24BDB9FD8]();
}

uint64_t sub_23FD743A8()
{
  return MEMORY[0x24BDBA0E0]();
}

uint64_t sub_23FD743B4()
{
  return MEMORY[0x24BDBA128]();
}

uint64_t sub_23FD743C0()
{
  return MEMORY[0x24BEB8E58]();
}

uint64_t sub_23FD743CC()
{
  return MEMORY[0x24BEB8EC8]();
}

uint64_t sub_23FD743D8()
{
  return MEMORY[0x24BEB8ED8]();
}

uint64_t sub_23FD743E4()
{
  return MEMORY[0x24BEB8F18]();
}

uint64_t sub_23FD743F0()
{
  return MEMORY[0x24BEB8F30]();
}

uint64_t sub_23FD743FC()
{
  return MEMORY[0x24BEB8F48]();
}

uint64_t sub_23FD74408()
{
  return MEMORY[0x24BEB8F58]();
}

uint64_t sub_23FD74414()
{
  return MEMORY[0x24BEB8F60]();
}

uint64_t sub_23FD74420()
{
  return MEMORY[0x24BEB8F78]();
}

uint64_t sub_23FD7442C()
{
  return MEMORY[0x24BEB8F88]();
}

uint64_t sub_23FD74438()
{
  return MEMORY[0x24BEB8FA0]();
}

uint64_t sub_23FD74444()
{
  return MEMORY[0x24BEB8FA8]();
}

uint64_t sub_23FD74450()
{
  return MEMORY[0x24BEB8FB0]();
}

uint64_t sub_23FD7445C()
{
  return MEMORY[0x24BE54838]();
}

uint64_t sub_23FD74468()
{
  return MEMORY[0x24BE54840]();
}

uint64_t sub_23FD74474()
{
  return MEMORY[0x24BEB8FE0]();
}

uint64_t sub_23FD74480()
{
  return MEMORY[0x24BEB9010]();
}

uint64_t sub_23FD7448C()
{
  return MEMORY[0x24BEB9018]();
}

uint64_t sub_23FD74498()
{
  return MEMORY[0x24BEB9020]();
}

uint64_t sub_23FD744A4()
{
  return MEMORY[0x24BEB9030]();
}

uint64_t sub_23FD744B0()
{
  return MEMORY[0x24BEB9050]();
}

uint64_t sub_23FD744BC()
{
  return MEMORY[0x24BEB9058]();
}

uint64_t sub_23FD744C8()
{
  return MEMORY[0x24BEB9060]();
}

uint64_t sub_23FD744D4()
{
  return MEMORY[0x24BEB9078]();
}

uint64_t sub_23FD744E0()
{
  return MEMORY[0x24BEB9090]();
}

uint64_t sub_23FD744EC()
{
  return MEMORY[0x24BEB9160]();
}

uint64_t sub_23FD744F8()
{
  return MEMORY[0x24BEB9170]();
}

uint64_t sub_23FD74504()
{
  return MEMORY[0x24BEB9188]();
}

uint64_t sub_23FD74510()
{
  return MEMORY[0x24BEB91A0]();
}

uint64_t sub_23FD7451C()
{
  return MEMORY[0x24BEB91C0]();
}

uint64_t sub_23FD74528()
{
  return MEMORY[0x24BEB9210]();
}

uint64_t sub_23FD74534()
{
  return MEMORY[0x24BEB9218]();
}

uint64_t sub_23FD74540()
{
  return MEMORY[0x24BEB9220]();
}

uint64_t sub_23FD7454C()
{
  return MEMORY[0x24BEB9228]();
}

uint64_t sub_23FD74558()
{
  return MEMORY[0x24BEB9230]();
}

uint64_t sub_23FD74564()
{
  return MEMORY[0x24BEB9240]();
}

uint64_t sub_23FD74570()
{
  return MEMORY[0x24BEB9248]();
}

uint64_t sub_23FD7457C()
{
  return MEMORY[0x24BEB9250]();
}

uint64_t sub_23FD74588()
{
  return MEMORY[0x24BEB9358]();
}

uint64_t sub_23FD74594()
{
  return MEMORY[0x24BEB9368]();
}

uint64_t sub_23FD745A0()
{
  return MEMORY[0x24BEB9370]();
}

uint64_t sub_23FD745AC()
{
  return MEMORY[0x24BEB9398]();
}

uint64_t sub_23FD745B8()
{
  return MEMORY[0x24BEB93A0]();
}

uint64_t sub_23FD745C4()
{
  return MEMORY[0x24BEB93B8]();
}

uint64_t sub_23FD745D0()
{
  return MEMORY[0x24BEB93C8]();
}

uint64_t sub_23FD745DC()
{
  return MEMORY[0x24BEB93D0]();
}

uint64_t sub_23FD745E8()
{
  return MEMORY[0x24BEB93D8]();
}

uint64_t sub_23FD745F4()
{
  return MEMORY[0x24BEB9408]();
}

uint64_t sub_23FD74600()
{
  return MEMORY[0x24BEB9418]();
}

uint64_t sub_23FD7460C()
{
  return MEMORY[0x24BEB9438]();
}

uint64_t sub_23FD74618()
{
  return MEMORY[0x24BEB9450]();
}

uint64_t sub_23FD74624()
{
  return MEMORY[0x24BEB9468]();
}

uint64_t sub_23FD74630()
{
  return MEMORY[0x24BE56FF8]();
}

uint64_t sub_23FD7463C()
{
  return MEMORY[0x24BEB9478]();
}

uint64_t sub_23FD74648()
{
  return MEMORY[0x24BEB9490]();
}

uint64_t sub_23FD74654()
{
  return MEMORY[0x24BEB94A0]();
}

uint64_t sub_23FD74660()
{
  return MEMORY[0x24BEB94A8]();
}

uint64_t sub_23FD7466C()
{
  return MEMORY[0x24BEB94E0]();
}

uint64_t sub_23FD74678()
{
  return MEMORY[0x24BEB94E8]();
}

uint64_t sub_23FD74684()
{
  return MEMORY[0x24BEB9508]();
}

uint64_t sub_23FD74690()
{
  return MEMORY[0x24BEB9538]();
}

uint64_t sub_23FD7469C()
{
  return MEMORY[0x24BEB9540]();
}

uint64_t sub_23FD746A8()
{
  return MEMORY[0x24BEB9548]();
}

uint64_t sub_23FD746B4()
{
  return MEMORY[0x24BEB96F8]();
}

uint64_t sub_23FD746C0()
{
  return MEMORY[0x24BEB9700]();
}

uint64_t sub_23FD746CC()
{
  return MEMORY[0x24BEB9708]();
}

uint64_t sub_23FD746D8()
{
  return MEMORY[0x24BEB9710]();
}

uint64_t sub_23FD746E4()
{
  return MEMORY[0x24BEB9720]();
}

uint64_t sub_23FD746F0()
{
  return MEMORY[0x24BEB9728]();
}

uint64_t sub_23FD746FC()
{
  return MEMORY[0x24BEB9738]();
}

uint64_t sub_23FD74708()
{
  return MEMORY[0x24BEB9740]();
}

uint64_t sub_23FD74714()
{
  return MEMORY[0x24BEB9760]();
}

uint64_t sub_23FD74720()
{
  return MEMORY[0x24BEB97A0]();
}

uint64_t sub_23FD7472C()
{
  return MEMORY[0x24BEB97A8]();
}

uint64_t sub_23FD74738()
{
  return MEMORY[0x24BEB97D0]();
}

uint64_t sub_23FD74744()
{
  return MEMORY[0x24BEB97D8]();
}

uint64_t sub_23FD74750()
{
  return MEMORY[0x24BEB9858]();
}

uint64_t sub_23FD7475C()
{
  return MEMORY[0x24BEB9868]();
}

uint64_t sub_23FD74768()
{
  return MEMORY[0x24BEB9970]();
}

uint64_t sub_23FD74774()
{
  return MEMORY[0x24BEB99A0]();
}

uint64_t sub_23FD74780()
{
  return MEMORY[0x24BEB99A8]();
}

uint64_t sub_23FD7478C()
{
  return MEMORY[0x24BEB99D0]();
}

uint64_t sub_23FD74798()
{
  return MEMORY[0x24BEB9A18]();
}

uint64_t sub_23FD747A4()
{
  return MEMORY[0x24BEB9A68]();
}

uint64_t sub_23FD747B0()
{
  return MEMORY[0x24BEB9A70]();
}

uint64_t sub_23FD747BC()
{
  return MEMORY[0x24BEB9A78]();
}

uint64_t sub_23FD747C8()
{
  return MEMORY[0x24BEB9AB8]();
}

uint64_t sub_23FD747D4()
{
  return MEMORY[0x24BEB9AF0]();
}

uint64_t sub_23FD747E0()
{
  return MEMORY[0x24BEB9AF8]();
}

uint64_t sub_23FD747EC()
{
  return MEMORY[0x24BEB9CD8]();
}

uint64_t sub_23FD747F8()
{
  return MEMORY[0x24BEB9D20]();
}

uint64_t sub_23FD74804()
{
  return MEMORY[0x24BEB9DB8]();
}

uint64_t sub_23FD74810()
{
  return MEMORY[0x24BEB9DC0]();
}

uint64_t sub_23FD7481C()
{
  return MEMORY[0x24BEB9DD8]();
}

uint64_t sub_23FD74828()
{
  return MEMORY[0x24BEB9DE0]();
}

uint64_t sub_23FD74834()
{
  return MEMORY[0x24BEB9E18]();
}

uint64_t sub_23FD74840()
{
  return MEMORY[0x24BEB9E48]();
}

uint64_t sub_23FD7484C()
{
  return MEMORY[0x24BEB9EA0]();
}

uint64_t sub_23FD74858()
{
  return MEMORY[0x24BEB9EB8]();
}

uint64_t sub_23FD74864()
{
  return MEMORY[0x24BEB9ED0]();
}

uint64_t sub_23FD74870()
{
  return MEMORY[0x24BEB9ED8]();
}

uint64_t sub_23FD7487C()
{
  return MEMORY[0x24BEB9EE0]();
}

uint64_t sub_23FD74888()
{
  return MEMORY[0x24BEB9EF0]();
}

uint64_t sub_23FD74894()
{
  return MEMORY[0x24BEB9F00]();
}

uint64_t sub_23FD748A0()
{
  return MEMORY[0x24BEB9F08]();
}

uint64_t sub_23FD748AC()
{
  return MEMORY[0x24BEB9F10]();
}

uint64_t sub_23FD748B8()
{
  return MEMORY[0x24BEB9FA8]();
}

uint64_t sub_23FD748C4()
{
  return MEMORY[0x24BEBA120]();
}

uint64_t sub_23FD748D0()
{
  return MEMORY[0x24BEBA228]();
}

uint64_t sub_23FD748DC()
{
  return MEMORY[0x24BEBA230]();
}

uint64_t sub_23FD748E8()
{
  return MEMORY[0x24BEBA238]();
}

uint64_t sub_23FD748F4()
{
  return MEMORY[0x24BEBA248]();
}

uint64_t sub_23FD74900()
{
  return MEMORY[0x24BEBA250]();
}

uint64_t sub_23FD7490C()
{
  return MEMORY[0x24BEBA260]();
}

uint64_t sub_23FD74918()
{
  return MEMORY[0x24BEBA2A0]();
}

uint64_t sub_23FD74924()
{
  return MEMORY[0x24BEBA2F0]();
}

uint64_t sub_23FD74930()
{
  return MEMORY[0x24BE54848]();
}

uint64_t sub_23FD7493C()
{
  return MEMORY[0x24BEBA340]();
}

uint64_t sub_23FD74948()
{
  return MEMORY[0x24BEBA348]();
}

uint64_t sub_23FD74954()
{
  return MEMORY[0x24BEBA360]();
}

uint64_t sub_23FD74960()
{
  return MEMORY[0x24BEBA368]();
}

uint64_t sub_23FD7496C()
{
  return MEMORY[0x24BEBA3B8]();
}

uint64_t sub_23FD74978()
{
  return MEMORY[0x24BEBA3D8]();
}

uint64_t sub_23FD74984()
{
  return MEMORY[0x24BEBA3F8]();
}

uint64_t sub_23FD74990()
{
  return MEMORY[0x24BEBA4B0]();
}

uint64_t sub_23FD7499C()
{
  return MEMORY[0x24BEBA4F8]();
}

uint64_t sub_23FD749A8()
{
  return MEMORY[0x24BEBA508]();
}

uint64_t sub_23FD749B4()
{
  return MEMORY[0x24BEBA518]();
}

uint64_t sub_23FD749C0()
{
  return MEMORY[0x24BEBA528]();
}

uint64_t sub_23FD749CC()
{
  return MEMORY[0x24BEBA550]();
}

uint64_t sub_23FD749D8()
{
  return MEMORY[0x24BEBA560]();
}

uint64_t sub_23FD749E4()
{
  return MEMORY[0x24BEBA568]();
}

uint64_t sub_23FD749F0()
{
  return MEMORY[0x24BEBA598]();
}

uint64_t sub_23FD749FC()
{
  return MEMORY[0x24BEBA5A0]();
}

uint64_t sub_23FD74A08()
{
  return MEMORY[0x24BE54850]();
}

uint64_t sub_23FD74A14()
{
  return MEMORY[0x24BEBA5C0]();
}

uint64_t sub_23FD74A20()
{
  return MEMORY[0x24BEBA5C8]();
}

uint64_t sub_23FD74A2C()
{
  return MEMORY[0x24BEBA5E0]();
}

uint64_t sub_23FD74A38()
{
  return MEMORY[0x24BEBA6A0]();
}

uint64_t sub_23FD74A44()
{
  return MEMORY[0x24BEBA6B0]();
}

uint64_t sub_23FD74A50()
{
  return MEMORY[0x24BEBA6C0]();
}

uint64_t sub_23FD74A5C()
{
  return MEMORY[0x24BEBA6F0]();
}

uint64_t sub_23FD74A68()
{
  return MEMORY[0x24BEBA6F8]();
}

uint64_t sub_23FD74A74()
{
  return MEMORY[0x24BEBA748]();
}

uint64_t sub_23FD74A80()
{
  return MEMORY[0x24BEBA750]();
}

uint64_t sub_23FD74A8C()
{
  return MEMORY[0x24BEE5428]();
}

uint64_t sub_23FD74A98()
{
  return MEMORY[0x24BEE5458]();
}

uint64_t sub_23FD74AA4()
{
  return MEMORY[0x24BEE54C0]();
}

uint64_t sub_23FD74AB0()
{
  return MEMORY[0x24BEE54C8]();
}

uint64_t sub_23FD74ABC()
{
  return MEMORY[0x24BEE5500]();
}

uint64_t sub_23FD74AC8()
{
  return MEMORY[0x24BEE5570]();
}

uint64_t sub_23FD74AD4()
{
  return MEMORY[0x24BEE5590]();
}

uint64_t sub_23FD74AE0()
{
  return MEMORY[0x24BEE5620]();
}

uint64_t sub_23FD74AEC()
{
  return MEMORY[0x24BDC62A8]();
}

uint64_t sub_23FD74AF8()
{
  return MEMORY[0x24BDC62B0]();
}

uint64_t sub_23FD74B04()
{
  return MEMORY[0x24BDC62C8]();
}

uint64_t sub_23FD74B10()
{
  return MEMORY[0x24BDC62F0]();
}

uint64_t sub_23FD74B1C()
{
  return MEMORY[0x24BDC6AF8]();
}

uint64_t sub_23FD74B28()
{
  return MEMORY[0x24BEE0270]();
}

uint64_t sub_23FD74B34()
{
  return MEMORY[0x24BEE0278]();
}

uint64_t sub_23FD74B40()
{
  return MEMORY[0x24BEE02B0]();
}

uint64_t sub_23FD74B4C()
{
  return MEMORY[0x24BE57030]();
}

uint64_t sub_23FD74B58()
{
  return MEMORY[0x24BEE03E0]();
}

uint64_t sub_23FD74B64()
{
  return MEMORY[0x24BEE03E8]();
}

uint64_t sub_23FD74B70()
{
  return MEMORY[0x24BEE0460]();
}

uint64_t sub_23FD74B7C()
{
  return MEMORY[0x24BEE04A8]();
}

uint64_t sub_23FD74B88()
{
  return MEMORY[0x24BEE04B0]();
}

uint64_t sub_23FD74B94()
{
  return MEMORY[0x24BE57040]();
}

uint64_t sub_23FD74BA0()
{
  return MEMORY[0x24BEE0518]();
}

uint64_t sub_23FD74BAC()
{
  return MEMORY[0x24BEE0548]();
}

uint64_t sub_23FD74BB8()
{
  return MEMORY[0x24BEE0610]();
}

uint64_t sub_23FD74BC4()
{
  return MEMORY[0x24BEE0618]();
}

uint64_t sub_23FD74BD0()
{
  return MEMORY[0x24BEE07D0]();
}

uint64_t sub_23FD74BDC()
{
  return MEMORY[0x24BEE0980]();
}

uint64_t sub_23FD74BE8()
{
  return MEMORY[0x24BDCF9E0]();
}

uint64_t sub_23FD74BF4()
{
  return MEMORY[0x24BDCFA28]();
}

uint64_t sub_23FD74C00()
{
  return MEMORY[0x24BDCFA78]();
}

uint64_t sub_23FD74C0C()
{
  return MEMORY[0x24BEE09F0]();
}

uint64_t sub_23FD74C18()
{
  return MEMORY[0x24BEE0A30]();
}

uint64_t sub_23FD74C24()
{
  return MEMORY[0x24BEE0A50]();
}

uint64_t sub_23FD74C30()
{
  return MEMORY[0x24BEE0B20]();
}

uint64_t sub_23FD74C3C()
{
  return MEMORY[0x24BEE0B68]();
}

uint64_t sub_23FD74C48()
{
  return MEMORY[0x24BEE0BC0]();
}

uint64_t sub_23FD74C54()
{
  return MEMORY[0x24BEE0BE8]();
}

uint64_t sub_23FD74C60()
{
  return MEMORY[0x24BEE0C10]();
}

uint64_t sub_23FD74C6C()
{
  return MEMORY[0x24BEE0C18]();
}

uint64_t sub_23FD74C78()
{
  return MEMORY[0x24BEE0C30]();
}

uint64_t sub_23FD74C84()
{
  return MEMORY[0x24BEE0C40]();
}

uint64_t sub_23FD74C90()
{
  return MEMORY[0x24BEE0CA0]();
}

uint64_t sub_23FD74C9C()
{
  return MEMORY[0x24BEE0DE0]();
}

uint64_t sub_23FD74CA8()
{
  return MEMORY[0x24BEE0DE8]();
}

uint64_t sub_23FD74CB4()
{
  return MEMORY[0x24BEE0FD8]();
}

uint64_t sub_23FD74CC0()
{
  return MEMORY[0x24BEE1110]();
}

uint64_t sub_23FD74CCC()
{
  return MEMORY[0x24BDCFBA8]();
}

uint64_t sub_23FD74CD8()
{
  return MEMORY[0x24BDCFBC8]();
}

uint64_t sub_23FD74CE4()
{
  return MEMORY[0x24BEE1118]();
}

uint64_t sub_23FD74CF0()
{
  return MEMORY[0x24BEE1120]();
}

uint64_t sub_23FD74CFC()
{
  return MEMORY[0x24BEE1128]();
}

uint64_t sub_23FD74D08()
{
  return MEMORY[0x24BEE1140]();
}

uint64_t sub_23FD74D14()
{
  return MEMORY[0x24BEE1160]();
}

uint64_t sub_23FD74D20()
{
  return MEMORY[0x24BEE1180]();
}

uint64_t sub_23FD74D2C()
{
  return MEMORY[0x24BEE1190]();
}

uint64_t sub_23FD74D38()
{
  return MEMORY[0x24BEE11A0]();
}

uint64_t sub_23FD74D44()
{
  return MEMORY[0x24BEE11B8]();
}

uint64_t sub_23FD74D50()
{
  return MEMORY[0x24BEE11C8]();
}

uint64_t sub_23FD74D5C()
{
  return MEMORY[0x24BEE1220]();
}

uint64_t sub_23FD74D68()
{
  return MEMORY[0x24BEE1230]();
}

uint64_t sub_23FD74D74()
{
  return MEMORY[0x24BEE1308]();
}

uint64_t sub_23FD74D80()
{
  return MEMORY[0x24BEE6800]();
}

uint64_t sub_23FD74D8C()
{
  return MEMORY[0x24BEE6828]();
}

uint64_t sub_23FD74D98()
{
  return MEMORY[0x24BEE6830]();
}

uint64_t sub_23FD74DA4()
{
  return MEMORY[0x24BEE68B0]();
}

uint64_t sub_23FD74DB0()
{
  return MEMORY[0x24BEE68C8]();
}

uint64_t sub_23FD74DBC()
{
  return MEMORY[0x24BEE68D8]();
}

uint64_t sub_23FD74DC8()
{
  return MEMORY[0x24BEE6938]();
}

uint64_t sub_23FD74DD4()
{
  return MEMORY[0x24BEE6978]();
}

uint64_t sub_23FD74DE0()
{
  return MEMORY[0x24BEE6988]();
}

uint64_t sub_23FD74DEC()
{
  return MEMORY[0x24BEE6990]();
}

uint64_t sub_23FD74DF8()
{
  return MEMORY[0x24BEE69A8]();
}

uint64_t sub_23FD74E04()
{
  return MEMORY[0x24BEE69E8]();
}

uint64_t sub_23FD74E10()
{
  return MEMORY[0x24BEE6A18]();
}

uint64_t sub_23FD74E1C()
{
  return MEMORY[0x24BEE6A30]();
}

uint64_t sub_23FD74E28()
{
  return MEMORY[0x24BEE6A38]();
}

uint64_t sub_23FD74E34()
{
  return MEMORY[0x24BEE6A40]();
}

uint64_t sub_23FD74E40()
{
  return MEMORY[0x24BEE6A50]();
}

uint64_t sub_23FD74E4C()
{
  return MEMORY[0x24BEE6A58]();
}

uint64_t sub_23FD74E58()
{
  return MEMORY[0x24BEE6A68]();
}

uint64_t sub_23FD74E64()
{
  return MEMORY[0x24BEE6A98]();
}

uint64_t sub_23FD74E70()
{
  return MEMORY[0x24BE799A0]();
}

uint64_t sub_23FD74E7C()
{
  return MEMORY[0x24BEE6AC0]();
}

uint64_t sub_23FD74E88()
{
  return MEMORY[0x24BEE6AD0]();
}

uint64_t sub_23FD74E94()
{
  return MEMORY[0x24BEE6AD8]();
}

uint64_t sub_23FD74EA0()
{
  return MEMORY[0x24BEE6B00]();
}

uint64_t sub_23FD74EAC()
{
  return MEMORY[0x24BEE6B98]();
}

uint64_t sub_23FD74EB8()
{
  return MEMORY[0x24BEE6BA0]();
}

uint64_t sub_23FD74EC4()
{
  return MEMORY[0x24BEE6BB0]();
}

uint64_t sub_23FD74ED0()
{
  return MEMORY[0x24BEE6BB8]();
}

uint64_t sub_23FD74EDC()
{
  return MEMORY[0x24BEE6C08]();
}

uint64_t sub_23FD74EE8()
{
  return MEMORY[0x24BEE6CE0]();
}

uint64_t sub_23FD74EF4()
{
  return MEMORY[0x24BEE6CE8]();
}

uint64_t sub_23FD74F00()
{
  return MEMORY[0x24BDCFCC0]();
}

uint64_t sub_23FD74F0C()
{
  return MEMORY[0x24BDCFCE8]();
}

uint64_t sub_23FD74F18()
{
  return MEMORY[0x24BEE15D8]();
}

uint64_t sub_23FD74F24()
{
  return MEMORY[0x24BEE17F8]();
}

uint64_t sub_23FD74F30()
{
  return MEMORY[0x24BEE5B30]();
}

uint64_t sub_23FD74F3C()
{
  return MEMORY[0x24BEE78F0]();
}

uint64_t sub_23FD74F48()
{
  return MEMORY[0x24BEE7908]();
}

uint64_t sub_23FD74F54()
{
  return MEMORY[0x24BEE7910]();
}

uint64_t sub_23FD74F60()
{
  return MEMORY[0x24BEE7920]();
}

uint64_t sub_23FD74F6C()
{
  return MEMORY[0x24BEE7928]();
}

uint64_t sub_23FD74F78()
{
  return MEMORY[0x24BEE5688]();
}

uint64_t sub_23FD74F84()
{
  return MEMORY[0x24BEE56B8]();
}

uint64_t sub_23FD74F90()
{
  return MEMORY[0x24BEE5760]();
}

uint64_t sub_23FD74F9C()
{
  return MEMORY[0x24BEE5770]();
}

uint64_t sub_23FD74FA8()
{
  return MEMORY[0x24BEE5780]();
}

uint64_t sub_23FD74FB4()
{
  return MEMORY[0x24BEE5790]();
}

uint64_t sub_23FD74FC0()
{
  return MEMORY[0x24BEE57A0]();
}

uint64_t sub_23FD74FCC()
{
  return MEMORY[0x24BEBA770]();
}

uint64_t sub_23FD74FD8()
{
  return MEMORY[0x24BEE7940]();
}

uint64_t sub_23FD74FE4()
{
  return MEMORY[0x24BEE7948]();
}

uint64_t sub_23FD74FF0()
{
  return MEMORY[0x24BDD0078]();
}

uint64_t sub_23FD74FFC()
{
  return MEMORY[0x24BDD0098]();
}

uint64_t sub_23FD75008()
{
  return MEMORY[0x24BEE59A0]();
}

uint64_t sub_23FD75014()
{
  return MEMORY[0x24BDD01F0]();
}

uint64_t sub_23FD75020()
{
  return MEMORY[0x24BDD01F8]();
}

uint64_t sub_23FD7502C()
{
  return MEMORY[0x24BEE7968]();
}

uint64_t sub_23FD75038()
{
  return MEMORY[0x24BEE1C68]();
}

uint64_t sub_23FD75044()
{
  return MEMORY[0x24BEE1F00]();
}

uint64_t sub_23FD75050()
{
  return MEMORY[0x24BEE1F48]();
}

uint64_t sub_23FD7505C()
{
  return MEMORY[0x24BDD0548]();
}

uint64_t sub_23FD75068()
{
  return MEMORY[0x24BEE2090]();
}

uint64_t sub_23FD75074()
{
  return MEMORY[0x24BEE20A8]();
}

uint64_t sub_23FD75080()
{
  return MEMORY[0x24BEE2200]();
}

uint64_t sub_23FD7508C()
{
  return MEMORY[0x24BEE22B0]();
}

uint64_t sub_23FD75098()
{
  return MEMORY[0x24BEE22C0]();
}

uint64_t sub_23FD750A4()
{
  return MEMORY[0x24BEE22D0]();
}

uint64_t sub_23FD750B0()
{
  return MEMORY[0x24BEE22D8]();
}

uint64_t sub_23FD750BC()
{
  return MEMORY[0x24BEE24B8]();
}

uint64_t sub_23FD750C8()
{
  return MEMORY[0x24BEE24C0]();
}

uint64_t sub_23FD750D4()
{
  return MEMORY[0x24BEE24D0]();
}

uint64_t sub_23FD750E0()
{
  return MEMORY[0x24BEE2510]();
}

uint64_t sub_23FD750EC()
{
  return MEMORY[0x24BEE2518]();
}

uint64_t sub_23FD750F8()
{
  return MEMORY[0x24BEE25B8]();
}

uint64_t sub_23FD75104()
{
  return MEMORY[0x24BEE2650]();
}

uint64_t sub_23FD75110()
{
  return MEMORY[0x24BEE2658]();
}

uint64_t sub_23FD7511C()
{
  return MEMORY[0x24BEE2660]();
}

uint64_t sub_23FD75128()
{
  return MEMORY[0x24BEE26E8]();
}

uint64_t sub_23FD75134()
{
  return MEMORY[0x24BEE2710]();
}

uint64_t sub_23FD75140()
{
  return MEMORY[0x24BEE2788]();
}

uint64_t sub_23FD7514C()
{
  return MEMORY[0x24BEE2798]();
}

uint64_t sub_23FD75158()
{
  return MEMORY[0x24BEE2838]();
}

uint64_t sub_23FD75164()
{
  return MEMORY[0x24BEE6D68]();
}

uint64_t sub_23FD75170()
{
  return MEMORY[0x24BEE2908]();
}

uint64_t sub_23FD7517C()
{
  return MEMORY[0x24BEE2938]();
}

uint64_t sub_23FD75188()
{
  return MEMORY[0x24BEE2958]();
}

uint64_t sub_23FD75194()
{
  return MEMORY[0x24BEE2980]();
}

uint64_t sub_23FD751A0()
{
  return MEMORY[0x24BEE2988]();
}

uint64_t sub_23FD751AC()
{
  return MEMORY[0x24BEE6DC8]();
}

uint64_t sub_23FD751B8()
{
  return MEMORY[0x24BEE6E08]();
}

uint64_t sub_23FD751C4()
{
  return MEMORY[0x24BEE6E10]();
}

uint64_t sub_23FD751D0()
{
  return MEMORY[0x24BEE2AE0]();
}

uint64_t sub_23FD751DC()
{
  return MEMORY[0x24BEE2BE0]();
}

uint64_t sub_23FD751E8()
{
  return MEMORY[0x24BEE2CA8]();
}

uint64_t sub_23FD751F4()
{
  return MEMORY[0x24BEE2CF0]();
}

uint64_t sub_23FD75200()
{
  return MEMORY[0x24BEE2E58]();
}

uint64_t sub_23FD7520C()
{
  return MEMORY[0x24BEE2E68]();
}

uint64_t sub_23FD75218()
{
  return MEMORY[0x24BEE2E70]();
}

uint64_t sub_23FD75224()
{
  return MEMORY[0x24BEE2F40]();
}

uint64_t sub_23FD75230()
{
  return MEMORY[0x24BEE2F48]();
}

uint64_t sub_23FD7523C()
{
  return MEMORY[0x24BEE2F78]();
}

uint64_t sub_23FD75248()
{
  return MEMORY[0x24BEE3068]();
}

uint64_t sub_23FD75254()
{
  return MEMORY[0x24BEE3080]();
}

uint64_t sub_23FD75260()
{
  return MEMORY[0x24BEE3088]();
}

uint64_t sub_23FD7526C()
{
  return MEMORY[0x24BEE3098]();
}

uint64_t sub_23FD75278()
{
  return MEMORY[0x24BEE30B0]();
}

uint64_t sub_23FD75284()
{
  return MEMORY[0x24BEE6FA8]();
}

uint64_t sub_23FD75290()
{
  return MEMORY[0x24BEE32B8]();
}

uint64_t sub_23FD7529C()
{
  return MEMORY[0x24BEE32C0]();
}

uint64_t sub_23FD752A8()
{
  return MEMORY[0x24BEE3308]();
}

uint64_t sub_23FD752B4()
{
  return MEMORY[0x24BEE3350]();
}

uint64_t sub_23FD752C0()
{
  return MEMORY[0x24BEE3358]();
}

uint64_t sub_23FD752CC()
{
  return MEMORY[0x24BEE3370]();
}

uint64_t sub_23FD752D8()
{
  return MEMORY[0x24BEE3380]();
}

uint64_t sub_23FD752E4()
{
  return MEMORY[0x24BEE33C8]();
}

uint64_t sub_23FD752F0()
{
  return MEMORY[0x24BEE3408]();
}

uint64_t sub_23FD752FC()
{
  return MEMORY[0x24BEE3458]();
}

uint64_t sub_23FD75308()
{
  return MEMORY[0x24BEE34A0]();
}

uint64_t sub_23FD75314()
{
  return MEMORY[0x24BEE34A8]();
}

uint64_t sub_23FD75320()
{
  return MEMORY[0x24BEE34C0]();
}

uint64_t sub_23FD7532C()
{
  return MEMORY[0x24BEE34D0]();
}

uint64_t sub_23FD75338()
{
  return MEMORY[0x24BEE3548]();
}

uint64_t sub_23FD75344()
{
  return MEMORY[0x24BEE3568]();
}

uint64_t sub_23FD75350()
{
  return MEMORY[0x24BEE7040]();
}

uint64_t sub_23FD7535C()
{
  return MEMORY[0x24BEE3880]();
}

uint64_t sub_23FD75368()
{
  return MEMORY[0x24BEE39E0]();
}

uint64_t sub_23FD75374()
{
  return MEMORY[0x24BEE3A28]();
}

uint64_t sub_23FD75380()
{
  return MEMORY[0x24BEE3A30]();
}

uint64_t sub_23FD7538C()
{
  return MEMORY[0x24BEE3B98]();
}

uint64_t sub_23FD75398()
{
  return MEMORY[0x24BEE3DD0]();
}

uint64_t sub_23FD753A4()
{
  return MEMORY[0x24BEE3DD8]();
}

uint64_t sub_23FD753B0()
{
  return MEMORY[0x24BEE3DE0]();
}

uint64_t sub_23FD753BC()
{
  return MEMORY[0x24BEE3ED0]();
}

uint64_t sub_23FD753C8()
{
  return MEMORY[0x24BEE3ED8]();
}

uint64_t sub_23FD753D4()
{
  return MEMORY[0x24BEE7110]();
}

uint64_t sub_23FD753E0()
{
  return MEMORY[0x24BEE7118]();
}

uint64_t sub_23FD753EC()
{
  return MEMORY[0x24BDD06E0]();
}

uint64_t sub_23FD753F8()
{
  return MEMORY[0x24BDD06F0]();
}

uint64_t sub_23FD75404()
{
  return MEMORY[0x24BEE3EF8]();
}

uint64_t sub_23FD75410()
{
  return MEMORY[0x24BEE3F00]();
}

uint64_t sub_23FD7541C()
{
  return MEMORY[0x24BEE3F08]();
}

uint64_t sub_23FD75428()
{
  return MEMORY[0x24BEE3F10]();
}

uint64_t sub_23FD75434()
{
  return MEMORY[0x24BEE42C0]();
}

uint64_t sub_23FD75440()
{
  return MEMORY[0x24BEE42D8]();
}

uint64_t sub_23FD7544C()
{
  return MEMORY[0x24BEE42E0]();
}

uint64_t sub_23FD75458()
{
  return MEMORY[0x24BEE42F8]();
}

uint64_t sub_23FD75464()
{
  return MEMORY[0x24BEE4300]();
}

uint64_t sub_23FD75470()
{
  return MEMORY[0x24BEE4328]();
}

uint64_t sub_23FD7547C()
{
  return MEMORY[0x24BEE4398]();
}

uint64_t sub_23FD75488()
{
  return MEMORY[0x24BEE43C8]();
}

uint64_t sub_23FD75494()
{
  return MEMORY[0x24BEE43F8]();
}

uint64_t sub_23FD754A0()
{
  return MEMORY[0x24BDD07D0]();
}

uint64_t sub_23FD754AC()
{
  return MEMORY[0x24BDD0810]();
}

uint64_t sub_23FD754B8()
{
  return MEMORY[0x24BEE4608]();
}

uint64_t sub_23FD754C4()
{
  return MEMORY[0x24BEE4638]();
}

uint64_t sub_23FD754D0()
{
  return MEMORY[0x24BEE48A0]();
}

uint64_t sub_23FD754DC()
{
  return MEMORY[0x24BEE4A08]();
}

uint64_t sub_23FD754E8()
{
  return MEMORY[0x24BEE4A10]();
}

uint64_t sub_23FD754F4()
{
  return MEMORY[0x24BEE7178]();
}

uint64_t sub_23FD75500()
{
  return MEMORY[0x24BEE4A98]();
}

uint64_t BiomeLibrary()
{
  return MEMORY[0x24BE0C258]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x24BDAC720](aBlock);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x24BDAC738](aBlock);
}

uint64_t _availability_version_check()
{
  return MEMORY[0x24BDAC970]();
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB90](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACC10](dso, log, type, spid, name, format, buf, *(_QWORD *)&size);
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x24BEE4B30]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x24BEE4B38]();
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x24BDAD320](a1, a2);
}

void dispatch_once_f(dispatch_once_t *predicate, void *context, dispatch_function_t function)
{
  MEMORY[0x24BDADEA0](predicate, context, function);
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x24BDADFE8](queue, block);
}

void *__cdecl dlsym(void *__handle, const char *__symbol)
{
  return (void *)MEMORY[0x24BDAE088](__handle, __symbol);
}

float expf(float a1)
{
  float result;

  MEMORY[0x24BDAE288](a1);
  return result;
}

int fclose(FILE *a1)
{
  return MEMORY[0x24BDAE2E0](a1);
}

FILE *__cdecl fopen(const char *__filename, const char *__mode)
{
  return (FILE *)MEMORY[0x24BDAE410](__filename, __mode);
}

size_t fread(void *__ptr, size_t __size, size_t __nitems, FILE *__stream)
{
  return MEMORY[0x24BDAE448](__ptr, __size, __nitems, __stream);
}

void free(void *a1)
{
  MEMORY[0x24BDAE450](a1);
}

int fseek(FILE *a1, uint64_t a2, int a3)
{
  return MEMORY[0x24BDAE4D8](a1, a2, *(_QWORD *)&a3);
}

uint64_t ftell(FILE *a1)
{
  return MEMORY[0x24BDAE530](a1);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x24BDAED08](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x24BDAED60](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x24BDAEE80](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x24BDAEE98](__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x24BEDCF78](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD108](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD120](a1, a2);
}

uint64_t objc_opt_self()
{
  return MEMORY[0x24BEDD168]();
}

void objc_release(id a1)
{
  MEMORY[0x24BEDD188](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x24BEDD2A0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B8](a1);
}

uint64_t os_eligibility_get_domain_answer()
{
  return MEMORY[0x24BDAF2F8]();
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x24BDAF398](oslog, type);
}

uint64_t os_transaction_create()
{
  return MEMORY[0x24BDAF438]();
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
  MEMORY[0x24BDAF460](lock);
}

BOOL os_unfair_lock_trylock(os_unfair_lock_t lock)
{
  return MEMORY[0x24BDAF478](lock);
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
  MEMORY[0x24BDAF488](lock);
}

void rewind(FILE *a1)
{
  MEMORY[0x24BDAFB98](a1);
}

int sscanf(const char *a1, const char *a2, ...)
{
  return MEMORY[0x24BDAFEA0](a1, a2);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x24BEE4B58]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x24BEE4B68]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x24BEE4B70]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x24BEE4B78]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x24BEE4B80]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x24BEE4B98]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x24BEE4BA0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x24BEE4BA8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x24BEE4BB0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x24BEE4BB8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x24BEE4BC0]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x24BEE4BC8]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x24BEE4BD0]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x24BEE4BD8]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x24BEE4BE0]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x24BEE4C00]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x24BEE4C10]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x24BEE4C18]();
}

uint64_t swift_defaultActor_deallocate()
{
  return MEMORY[0x24BEE71E0]();
}

uint64_t swift_defaultActor_destroy()
{
  return MEMORY[0x24BEE71E8]();
}

uint64_t swift_defaultActor_initialize()
{
  return MEMORY[0x24BEE71F0]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x24BEE4C38]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x24BEE4C40]();
}

uint64_t swift_dynamicCastObjCClassUnconditional()
{
  return MEMORY[0x24BEE4C68]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x24BEE4C98]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x24BEE4CA0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x24BEE4CA8]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x24BEE4CD0]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x24BEE4CD8]();
}

uint64_t swift_getDynamicType()
{
  return MEMORY[0x24BEE4D00]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x24BEE4D08]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4D10]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x24BEE4D18]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x24BEE4D40]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x24BEE4D80]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x24BEE4D88]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x24BEE4DA0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x24BEE4DB0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x24BEE4DB8]();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return MEMORY[0x24BEE4DC0]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x24BEE4DD0]();
}

uint64_t swift_getTupleTypeLayout()
{
  return MEMORY[0x24BEE4DD8]();
}

uint64_t swift_getTupleTypeLayout2()
{
  return MEMORY[0x24BEE4DE0]();
}

uint64_t swift_getTupleTypeLayout3()
{
  return MEMORY[0x24BEE4DE8]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x24BEE4DF8]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x24BEE4E10]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x24BEE4E18]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x24BEE4E20]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x24BEE4E28]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x24BEE4E30]();
}

uint64_t swift_initEnumMetadataSingleCase()
{
  return MEMORY[0x24BEE4E38]();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return MEMORY[0x24BEE4E40]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x24BEE4E48]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x24BEE4E58]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x24BEE4E68]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x24BEE4E90]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x24BEE4E98]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x24BEE4EA8]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x24BEE4EB0]();
}

uint64_t swift_once()
{
  return MEMORY[0x24BEE4EC8]();
}

uint64_t swift_projectBox()
{
  return MEMORY[0x24BEE4ED0]();
}

uint64_t swift_release()
{
  return MEMORY[0x24BEE4EF8]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x24BEE4F00]();
}

uint64_t swift_retain()
{
  return MEMORY[0x24BEE4F08]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x24BEE4F10]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x24BEE4F30]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x24BEE4F38]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x24BEE4F40]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x24BEE4F48]();
}

uint64_t swift_stdlib_random()
{
  return MEMORY[0x24BEE4F50]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x24BEE4F58]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4F60]();
}

uint64_t swift_taskGroup_wait_next_throwing()
{
  return MEMORY[0x24BEE7218]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x24BEE7228]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x24BEE7230]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x24BEE7238]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x24BEE7278]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x24BEE4F68]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x24BEE4F70]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x24BEE4F80]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x24BEE4F88]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x24BEE5008]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x24BEE5028]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x24BEE5030]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x24BEE5038]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x24BEE5050]();
}

uint64_t swift_willThrowTypedImpl()
{
  return MEMORY[0x24BEE5058]();
}

void vDSP_svesq(const float *__A, vDSP_Stride __IA, float *__C, vDSP_Length __N)
{
  MEMORY[0x24BDB32F0](__A, __IA, __C, __N);
}

size_t xpc_array_get_count(xpc_object_t xarray)
{
  return MEMORY[0x24BDB0660](xarray);
}

xpc_object_t xpc_array_get_value(xpc_object_t xarray, size_t index)
{
  return (xpc_object_t)MEMORY[0x24BDB06A0](xarray, index);
}

const char *__cdecl xpc_dictionary_get_string(xpc_object_t xdict, const char *key)
{
  return (const char *)MEMORY[0x24BDB0950](xdict, key);
}

xpc_object_t xpc_dictionary_get_value(xpc_object_t xdict, const char *key)
{
  return (xpc_object_t)MEMORY[0x24BDB0968](xdict, key);
}

xpc_type_t xpc_get_type(xpc_object_t object)
{
  return (xpc_type_t)MEMORY[0x24BDB0A70](object);
}

void xpc_set_event_stream_handler(const char *stream, dispatch_queue_t targetq, xpc_handler_t handler)
{
  MEMORY[0x24BDB0B58](stream, targetq, handler);
}

